head	1.21;
access;
symbols
	OPENBSD_5_5:1.20.0.10
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.6
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.4
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.2
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.20
	OPENBSD_5_0:1.19.0.18
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.16
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.14
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.10
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.16
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.14
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.12
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.10
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@# @;


1.21
date	2014.03.24.13.56.01;	author deraadt;	state dead;
branches;
next	1.20;

1.20
date	2012.03.06.01.25.46;	author dlg;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.41;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.08.13.47.28;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.03.21.09.00;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.14.33.47;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.06.20.19.52;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.14.23.20.36;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.06.23.34.33;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.09.06.15.04.34;	author mpech;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.02.18.37.34;	author mpech;	state Exp;
branches;
next	1.10;

1.10
date	2001.07.09.15.34.03;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.14.31.19;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.30.17.46.24;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.15.02.15.30;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.12.00.13.45;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.07.09.13.35.52;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.04.02.16.21.36;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.06.15.17.55.37;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.06.24.02.12.24;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	97.02.26.06.17.05;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.21
log
@libwrap is going away, so can this.
ok tedu
@
text
@.\"	$OpenBSD: tcpd.8,v 1.20 2012/03/06 01:25:46 dlg Exp $
.\"
.\" Copyright (c) 1997, Jason Downs.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS
.\" OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
.\" CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 6 2012 $
.Dt TCPD 8
.Os
.Sh NAME
.Nm tcpd
.Nd tcp wrappers access control facility for internet services
.Sh DESCRIPTION
The
.Nm
program can be set up to monitor incoming requests for
.Xr telnet 1 ,
.Xr finger 1 ,
.Xr ftp 1 ,
.Xr rsh 1 ,
.Xr talk 1 ,
.Xr comsat 8 ,
and other services that have a one-to-one mapping onto executable files.
.Pp
.\" The program supports both
.\" .Bx 4.3 -style
.\" sockets and System V.4-style
.\" TLI.  Functionality may be limited when the protocol underneath TLI is
.\" not an internet protocol.
.\" .Pp
Operation is as follows: whenever a request for service arrives, the
.Xr inetd 8
daemon is tricked into running the
.Nm
program instead of the desired server.
.Nm
logs the request and does some additional checks.
When all is well,
.Nm
runs the appropriate server program and goes away.
.Pp
Optional features are: pattern-based access control, client username
lookups with the RFC 931 etc. protocol, protection against hosts that
pretend to have someone else's host name, and protection against hosts
that pretend to have someone else's network address.
.Sh LOGGING
Connections that are monitored by
.Nm
are reported through the
.Xr syslog 3
facility.
Each record contains a time stamp, the client host name and
the name of the requested service.
The information can be useful to detect unwanted activities,
especially when logfile information from several hosts is merged.
.Pp
In order to find out where your logs are going, examine the syslog
configuration file, usually
.Pa /etc/syslog.conf .
.Sh ACCESS CONTROL
Optionally,
.Nm
supports a simple form of access control that is based on pattern matching.
The access-control software provides hooks for the execution
of shell commands when a pattern fires.
For details, see the
.Xr hosts_access 5
manual page.
.Sh HOST NAME VERIFICATION
The authentication scheme of some protocols
.Pq Xr rsh 1
relies on host names.
Some implementations believe the host name that they get from any random
name server; other implementations are more careful but use a flawed algorithm.
.Pp
.Nm
verifies the client host name that is returned by the address->name DNS
server by looking at the host name and address that are returned by the
name->address DNS server.
If any discrepancy is detected,
.Nm
concludes that it is dealing with a host that pretends to have someone
elses host name.
.\" .Pp
.\" If the sources are compiled with -DPARANOID,
.\" .Nm tcpd
.\" will drop the connection in case of a host name/address mismatch.
.\" Otherwise, the hostname can be matched with the
.\" .Ar PARANOID
.\" wildcard,
.\" after which suitable action can be taken.
.Sh HOST ADDRESS SPOOFING
Optionally,
.Nm
disables source-routing socket options on every connection that it deals with.
This will take care of most attacks from hosts that pretend
to have an address that belongs to someone else's network.
UDP services do not benefit from this protection.
This feature must be turned on at compile-time.
.Sh RFC 931
When RFC 931 etc. lookups are enabled (compile-time option)
.Nm
will attempt to establish the name of the client user.
This will succeed only if the client host runs an RFC 931-compliant daemon.
Client user name lookups will not work for datagram-oriented
connections, and may cause noticeable delays in the case of connections
from PCs.
.Sh FILES
The default locations of the host access control tables are:
.Pp
.Bl -tag -width /etc/hosts.allow -compact
.It Pa /etc/hosts.allow
Access control table (allow list)
.It Pa /etc/hosts.deny
Access control table (deny list)
.El
.\" .Sh EXAMPLES
.\" The details of using
.\" .Nm tcpd
.\" depend on pathname information that was compiled into the program.
.\" .Sh EXAMPLE 1
.\" This example applies when
.\" .Nm tcpd
.\" expects that the original network
.\" daemons will be moved to an "other" place.
.\" .Pp
.\" In order to monitor access to the
.\" .Xr finger 1
.\" service, move the
.\" original finger daemon to the "other" place and install tcpd in the
.\" place of the original finger daemon. No changes are required to
.\" configuration files.
.\" .Bd -unfilled -offset indent
.\" # mkdir /other/place
.\" # mv /usr/etc/in.fingerd /other/place
.\" # cp tcpd /usr/etc/in.fingerd
.\" .Ed
.\" .Pp
.\" The example assumes that the network daemons live in /usr/etc. On some
.\" systems, network daemons live in /usr/sbin or in /usr/libexec, or have
.\" no `in.\' prefix to their name.
.\" .Sh EXAMPLE 2
.Sh EXAMPLES
This example applies when
.Nm
expects that the network daemons
are left in their original place, as it is configured within
.Ox .
.Pp
In order to monitor access to the
.Xr finger 1
service, perform the following edits on the
.Xr inetd 8
configuration file,
.Pa /etc/inetd.conf :
.Bd -unfilled -offset indent
finger  stream  tcp  nowait  nobody  /usr/libexec/fingerd  fingerd
.Ed
.Pp
becomes:
.Bd -unfilled -offset indent
finger  stream  tcp  nowait  nobody  /usr/libexec/tcpd     fingerd
.Ed
.\" .Pp
.\" The example assumes that the network daemons live in /usr/etc. On some
.\" systems, network daemons live in /usr/sbin or in /usr/libexec, the
.\" daemons have no `in.\' prefix to their name, or there is no userid
.\" field in the inetd configuration file.
.Pp
Similar changes will be needed for the other services that are to be
covered by
.Nm tcpd .
Send a `kill -HUP\' to the
.Xr inetd 8
process to make the changes effective.
.\" AIX users may also have to execute the `inetimp\' command.
.\" .Sh EXAMPLE 3
.Pp
In the case of daemons that do not live in a common directory ("secret"
or otherwise), edit the
.Xr inetd 8
configuration file so that it specifies an absolute path name for the process
name field.
For example:
.Bd -unfilled
    ntalk  dgram  udp  wait  root  /usr/libexec/tcpd  /usr/local/lib/ntalkd
.Ed
.Pp
Only the last component
.Pq Nm ntalkd
of the pathname will be used for access control and logging.
.Sh SEE ALSO
.Xr hosts_access 5 ,
.Xr inetd.conf 5 ,
.Xr syslog.conf 5
.Sh AUTHORS
.Bd -unfilled -offset indent
Wietse Venema (wietse@@wzv.win.tue.nl),
Department of Mathematics and Computing Science,
Eindhoven University of Technology
Den Dolech 2, P.O. Box 513,
5600 MB Eindhoven, The Netherlands
.Ed
.\" @@(#) tcpd.8 1.5 96/02/21 16:39:16
.Sh BUGS
Some UDP (and RPC) daemons linger around for a while after they have
finished their work, in case another request comes in.
In the inetd configuration file these services are registered with the
.Ar wait
option.
Only the request that started such a daemon will be logged.
.Pp
.\" The program does not work with RPC services over TCP. These services
.\" are registered as
.\" .Ar rpc/tcp
.\" in the inetd configuration file. The
.\" only non-trivial service that is affected by this limitation is
.\" .Xr rexd 8 ,
.\" which is used by the
.\" .Xr on 1
.\" command. This is no great
.\" loss.  On most systems,
.\" .Xr rexd 8
.\" is less secure than a wildcard in
.\" .Pa /etc/hosts.equiv .
.\" .Pp
RPC broadcast requests (for example:
.Xr rwall 1 ,
.Xr rup 1 ,
.Xr rusers 1 )
always appear to come from the responding host.
What happens is that the client broadcasts the request to all
.Xr portmap 8
daemons on its network; each
.Xr portmap 8
daemon forwards the request to a local daemon.
As far as the
.Xr rwalld 8
etc. daemons know, the request comes from the local host.
@


1.20
log
@clean up some newly created lies now that tftpd doesnt run out of inetd.

poke by deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.19 2007/05/31 19:19:41 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate: May 31 2007 $
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.18 2003/07/08 13:47:28 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate$
a39 1
.Xr tftp 1 ,
@


1.18
log
@- fix an .Nd
- \" -> .\" at start of line
- simpler macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.17 2003/06/03 21:09:00 deraadt Exp $
d26 1
a26 1
.Dd June 23, 1997
@


1.17
log
@terms 3 & 4 cleanup based on "terms" file
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.16 2003/06/02 14:33:47 jmc Exp $
d91 1
a91 1
.Pf ( Xr rsh 1 )
a175 1
.Pp
a180 1
.Pp
a204 1
.Pp
d210 1
a210 1
.Pf ( Nm ntalkd )
d224 1
a224 1
\" @@(#) tcpd.8 1.5 96/02/21 16:39:16
@


1.16
log
@section reorder;
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.15 2003/03/06 20:19:52 jmc Exp $
a12 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed by Jason Downs for the
.\"      OpenBSD system.
.\" 4. Neither the name(s) of the author(s) nor the name OpenBSD
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
@


1.15
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.14 2003/02/14 23:20:36 jmc Exp $
d135 9
a221 9
.Sh FILES
The default locations of the host access control tables are:
.Pp
.Bl -tag -width /etc/hosts.allow -compact
.It Pa /etc/hosts.allow
Access control table (allow list)
.It Pa /etc/hosts.deny
Access control table (deny list)
.El
@


1.14
log
@typos;

tftpd(8): tweak and ok millert@@
tokenadm(8): tweak and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.13 2002/05/06 23:34:33 millert Exp $
d268 1
a268 1
.Xr rwall 8
@


1.13
log
@Kill/adjust r(login|exec)d? references now that those are no longer in
the tree.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.12 2001/09/06 15:04:34 mpech Exp $
d71 2
a72 2
pretend to have someone elses host name, and protection against hosts
that pretend to have someone elses network address.
d98 1
a98 1
.Pf ( .Xr rsh 1 )
d124 1
a124 1
to have an address that belongs to someone elses network.
@


1.12
log
@Initial idea from aaron@@: Last char of .Xr group in SEE ALSO section should
be a single digit. Powered by mantoya@@.

millert@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.11 2001/08/02 18:37:34 mpech Exp $
a45 1
.Xr rexecd 8 ,
a46 1
.Xr rlogin 1 ,
d98 2
a99 4
.Pf ( Xr rlogin 1 ,
.Xr rsh 1 )
relies
on host names.
@


1.11
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.10 2001/07/09 15:34:03 millert Exp $
d229 1
a229 1
.Xr syslog.conf 5 .
@


1.10
log
@Comment out extraneous .Pp since the text it goes with is commented out.
mpech@@prosoft.org.lv
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.9 2000/12/15 14:31:19 aaron Exp $
d230 1
a230 1
.Sh AUTHOR
@


1.9
log
@.Sh EXAMPLE -> .Sh EXAMPLES. Even if there's only one example, at least
this is consistent.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.8 2000/10/30 17:46:24 aaron Exp $
d115 1
a115 1
.Pp
@


1.8
log
@libexec man page fleshing. again, bored on the plane home.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.7 2000/04/15 02:15:30 aaron Exp $
d165 1
a165 1
.Sh EXAMPLE
@


1.7
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.6 2000/04/12 00:13:45 deraadt Exp $
d41 1
a41 1
.Nm tcpd
d63 1
a63 1
.Nm tcpd
d65 4
a68 3
.Nm tcpd
logs the request and does some additional checks.  When all is well,
.Nm tcpd
d77 1
a77 1
.Nm tcpd
d80 5
a84 4
facility. Each record contains a time stamp, the client host name and
the name of the requested service.  The information can be useful to detect
unwanted activities, especially when logfile information from several hosts
is merged.
d91 5
a95 4
.Nm tcpd
supports a simple form of access control that is based on pattern
matching.  The access-control software provides hooks for the execution
of shell commands when a pattern fires.  For details, see the
d103 3
a105 3
on host names. Some implementations believe the host name that they get
from any random name server; other implementations are more careful but
use a flawed algorithm.
d107 1
a107 1
.Nm tcpd
d110 3
a112 2
name->address DNS server.  If any discrepancy is detected,
.Nm tcpd
d125 6
a130 6
.Nm tcpd
disables source-routing socket options on every connection that it
deals with. This will take care of most attacks from hosts that pretend
to have an address that belongs to someone elses network. UDP services
do not benefit from this protection. This feature must be turned on
at compile time.
d133 3
a135 3
.Nm tcpd
will attempt to establish the name of the client user. This will
succeed only if the client host runs an RFC 931-compliant daemon.
d167 1
a167 1
.Nm tcpd
d170 1
a170 1
.Nm OpenBSD .
d207 2
a208 1
name field. For example:
d210 1
a210 1
.Bd -unfilled -offset indent
d217 22
d241 2
a242 2
finished their work, in case another request comes in.  In the inetd
configuration file these services are registered with the
d244 2
a245 1
option. Only the request that started such a daemon will be logged.
d265 2
a266 3
always
appear to come from the responding host. What happens is that the
client broadcasts the request to all
d268 1
a268 2
daemons on its
network; each
d270 2
a271 1
daemon forwards the request to a local daemon. As far as the
d273 1
a273 23
etc.  daemons know, the request comes from the local host.
.Sh FILES
The default locations of the host access control tables are:
.Pp
.Bl -tag -width /etc/hosts.allow -compact
.It Pa /etc/hosts.allow
Access control table (allow list)
.It Pa /etc/hosts.deny
Access control table (deny list)
.El
.Sh SEE ALSO
.Xr hosts_access 5 ,
.Xr inetd.conf 5 ,
.Xr syslog.conf 5 .
.Sh AUTHOR
.Bd -unfilled -offset indent
Wietse Venema (wietse@@wzv.win.tue.nl),
Department of Mathematics and Computing Science,
Eindhoven University of Technology
Den Dolech 2, P.O. Box 513,
5600 MB Eindhoven, The Netherlands
.Ed
\" @@(#) tcpd.8 1.5 96/02/21 16:39:16
@


1.6
log
@put wrapper in the Nd
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.5 1999/07/09 13:35:52 aaron Exp $
d171 2
a172 1
.Xr inetd 8 configuration file,
@


1.5
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.4 1999/04/02 16:21:36 aaron Exp $
d38 1
a38 1
.Nd access control facility for internet services
@


1.4
log
@.Pp macros do not belong immiedately after .Sh section header lines
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.3 1998/06/15 17:55:37 mickey Exp $
d40 1
a40 1
The 
d45 1
a45 1
.Xr ftp 1 , 
d62 1
a62 1
daemon is tricked into running the 
d64 1
a64 1
program instead of the desired server. 
d77 1
a77 1
are reported through the 
d96 1
a96 1
The authentication scheme of some protocols 
d115 1
a115 1
.\" Otherwise, the hostname can be matched with the 
d128 1
a128 1
When RFC 931 etc. lookups are enabled (compile-time option) 
d136 1
a136 1
.\" The details of using 
d140 1
a140 1
.\" This example applies when 
d145 1
a145 1
.\" In order to monitor access to the 
d162 1
a162 1
This example applies when 
d168 1
a168 1
In order to monitor access to the 
d170 1
a170 1
service, perform the following edits on the 
d190 1
a190 1
covered by 
d192 1
a192 1
Send a `kill -HUP\' to the 
d199 1
a199 1
or otherwise), edit the 
d208 1
a208 1
Only the last component 
d214 1
a214 1
configuration file these services are registered with the 
d219 1
a219 1
.\" are registered as 
d224 1
a224 1
.\" which is used by the 
d227 1
a227 1
.\" loss.  On most systems, 
d232 1
a232 1
RPC broadcast requests (for example: 
d238 1
a238 1
client broadcasts the request to all 
d241 1
a241 1
network; each 
d264 1
a264 1
Den Dolech 2, P.O. Box 513, 
@


1.3
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.2 1997/06/24 02:12:24 downsj Exp $
a246 1
.Pp
@


1.2
log
@New mandoc manual pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: tcpd.8,v 1.1 1997/02/26 06:17:05 downsj Exp $
d54 3
a56 1
.\" The program supports both 4.3BSD-style sockets and System V.4-style
@


1.1
log
@Initial integration of userland tcpd.
@
text
@d1 53
a53 11
.\"	$OpenBSD$
.TH TCPD 8
.SH NAME
tcpd \- access control facility for internet services
.SH DESCRIPTION
.PP
The \fItcpd\fR program can be set up to monitor incoming requests for
\fItelnet\fR, \fIfinger\fR, \fIftp\fR, \fIexec\fR, \fIrsh\fR,
\fIrlogin\fR, \fItftp\fR, \fItalk\fR, \fIcomsat\fR and other services
that have a one-to-one mapping onto executable files.
.PP
d57 1
a57 1
.\" .PP
d59 9
a67 5
\fIinetd\fP daemon is tricked into running the \fItcpd\fP program
instead of the desired server. \fItcpd\fP logs the request and does
some additional checks. When all is well, \fItcpd\fP runs the
appropriate server program and goes away.
.PP
d72 1
a72 1
.SH LOGGING
d74 8
a81 6
.I tcpd
are reported through the \fIsyslog\fR(3) facility. Each record contains
a time stamp, the client host name and the name of the requested
service.  The information can be useful to detect unwanted activities,
especially when logfile information from several hosts is merged.
.PP
d83 3
a85 2
configuration file, usually /etc/syslog.conf.
.SH ACCESS CONTROL
d87 1
a87 1
.I tcpd
d91 7
a97 3
\fIhosts_access\fR(5) manual page.
.SH HOST NAME VERIFICATION
The authentication scheme of some protocols (\fIrlogin, rsh\fR) relies
d101 2
a102 2
.PP
.I tcpd
d106 1
a106 1
.I tcpd
d109 9
a117 7
.PP
If the sources are compiled with -DPARANOID,
.I tcpd
will drop the connection in case of a host name/address mismatch.
Otherwise, the hostname can be matched with the \fIPARANOID\fR wildcard,
after which suitable action can be taken.
.SH HOST ADDRESS SPOOFING
d119 1
a119 1
.I tcpd
d125 3
a127 2
.SH RFC 931
When RFC 931 etc. lookups are enabled (compile-time option) \fItcpd\fR
d133 43
a175 34
.SH EXAMPLES
The details of using \fItcpd\fR depend on pathname information that was
compiled into the program.
.SH EXAMPLE 1
This example applies when \fItcpd\fR expects that the original network
daemons will be moved to an "other" place.
.PP
In order to monitor access to the \fIfinger\fR service, move the
original finger daemon to the "other" place and install tcpd in the
place of the original finger daemon. No changes are required to
configuration files.
.nf
.sp
.in +5
# mkdir /other/place
# mv /usr/etc/in.fingerd /other/place
# cp tcpd /usr/etc/in.fingerd
.fi
.PP
The example assumes that the network daemons live in /usr/etc. On some
systems, network daemons live in /usr/sbin or in /usr/libexec, or have
no `in.\' prefix to their name.
.SH EXAMPLE 2
This example applies when \fItcpd\fR expects that the network daemons
are left in their original place.
.PP
In order to monitor access to the \fIfinger\fR service, perform the
following edits on the \fIinetd\fR configuration file (usually 
\fI/etc/inetd.conf\fR or \fI/etc/inet/inetd.conf\fR):
.nf
.sp
.ti +5
finger  stream  tcp  nowait  nobody  /usr/etc/in.fingerd  in.fingerd
.sp
d177 10
a186 11
.sp
.ti +5
finger  stream  tcp  nowait  nobody  /some/where/tcpd     in.fingerd
.sp
.fi
.PP
The example assumes that the network daemons live in /usr/etc. On some
systems, network daemons live in /usr/sbin or in /usr/libexec, the
daemons have no `in.\' prefix to their name, or there is no userid
field in the inetd configuration file.
.PP
d188 8
a195 4
covered by \fItcpd\fR.  Send a `kill -HUP\' to the \fIinetd\fR(8)
process to make the changes effective. AIX users may also have to
execute the `inetimp\' command.
.SH EXAMPLE 3
d197 13
a209 11
or otherwise), edit the \fIinetd\fR configuration file so that it
specifies an absolute path name for the process name field. For example:
.nf
.sp
    ntalk  dgram  udp  wait  root  /some/where/tcpd  /usr/local/lib/ntalkd
.sp
.fi
.PP
Only the last component (ntalkd) of the pathname will be used for
access control and logging.
.SH BUGS
d212 2
a213 1
configuration file these services are registered with the \fIwait\fR
d215 20
a234 9
.PP
The program does not work with RPC services over TCP. These services
are registered as \fIrpc/tcp\fR in the inetd configuration file. The
only non-trivial service that is affected by this limitation is
\fIrexd\fR, which is used by the \fIon(1)\fR command. This is no great
loss.  On most systems, \fIrexd\fR is less secure than a wildcard in
/etc/hosts.equiv.
.PP
RPC broadcast requests (for example: \fIrwall, rup, rusers\fR) always
d236 10
a245 6
client broadcasts the request to all \fIportmap\fR daemons on its
network; each \fIportmap\fR daemon forwards the request to a local
daemon. As far as the \fIrwall\fR etc.  daemons know, the request comes
from the local host.
.SH FILES
.PP
d247 13
a259 13
.PP
/etc/hosts.allow
.br
/etc/hosts.deny
.SH SEE ALSO
.na
.nf
hosts_access(5), format of the tcpd access control tables.
syslog.conf(5), format of the syslogd control file.
inetd.conf(5), format of the inetd control file.
.SH AUTHORS
.na
.nf
d265 1
@
