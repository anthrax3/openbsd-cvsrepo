head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.8
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.16
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.8
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.12
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.10
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.6
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.4
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.2
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.14
	OPENBSD_5_0:1.17.0.12
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.10
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.8
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.4
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.6
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.2
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.16.0.10
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.8
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.6
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.4
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.13.0.4
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2015.10.04.11.58.09;	author tedu;	state Exp;
branches;
next	1.18;
commitid	npFkpN0ctNAVbBUf;

1.18
date	2012.03.04.04.05.15;	author fgsch;	state Exp;
branches;
next	1.17;

1.17
date	2008.09.12.16.12.08;	author moritz;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.21.17.42.50;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2004.12.22.00.54.39;	author david;	state Exp;
branches;
next	1.14;

1.14
date	2004.11.28.18.49.29;	author henning;	state Exp;
branches;
next	1.13;

1.13
date	2003.12.10.22.57.12;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.07.03.18.11;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.19.38.24;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.13.06.58.57;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.13.06.40.28;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.10.09.57.35;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.29;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.28.19.34.27;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	2000.11.14.20.27.01;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	99.12.08.13.15.21;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	97.06.29.07.35.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.07.09.00.18;	author bitblt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.15;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.15;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@fix custom popen to return pid to caller instead of tracking in a giant
array. this implies we can't use a function pointer for close, but also
means we get to repair some abuse of the comma operator.
ok miod
@
text
@/*	$OpenBSD: extern.h,v 1.18 2012/03/04 04:05:15 fgsch Exp $	*/
/*	$NetBSD: extern.h,v 1.2 1995/04/11 02:44:49 cgd Exp $	*/

/*
 * Copyright (C) 1997 and 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)extern.h	8.2 (Berkeley) 4/4/94
 */

void	blkfree(char **);
char  **copyblk(char **);
void	cwd(char *);
void	delete(char *);
void	dologout(int);
void	fatal(char *);
int	ftpd_pclose(FILE *, pid_t);
FILE   *ftpd_popen(char *, char *, pid_t *);
int     get_line(char *, int, FILE *);
void	ftpdlogwtmp(char *, char *, char *);
void	lreply(int, const char *, ...);
void	makedir(char *);
void	nack(char *);
enum auth_ret
	pass(char *);
void	passive(void);
int	epsvproto2af(int);
int	af2epsvproto(int);
void	long_passive(char *, int);
int	extended_port(const char *);
void	epsv_protounsupp(const char *);
void	perror_reply(int, char *);
void	pwd(void);
void	removedir(char *);
void	renamecmd(char *, char *);
char   *renamefrom(char *);
void	reply(int, const char *, ...);
void	reply_r(int, const char *, ...);
void	retrieve(char *, char *);
void	send_file_list(char *);
void	setproctitle(const char *, ...);
void	statcmd(void);
void	statfilecmd(char *);
void	store(char *, char *, int);
void	upper(char *);
void	user(char *);
void	yyerror(char *);
void	toolong(int);

struct utmp;
void	ftpd_login(struct utmp *ut);
int	ftpd_logout(char *);

int	yyparse(void);

union sockunion {
	struct sockinet {
		u_int8_t si_len;
		sa_family_t si_family;
		in_port_t si_port;
	} su_si;
	struct sockaddr_in  su_sin;
	struct sockaddr_in6 su_sin6;
};
#define su_len		su_si.si_len
#define su_family	su_si.si_family
#define su_port		su_si.si_port
@


1.18
log
@In preparation for getline and getdelim additions to libc, rename getline()
occurrences to get_line().
Based on a diff from Jan Klemkow <j-dot-klemkow-at-wemelug-dot-de> to tech.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.17 2008/09/12 16:12:08 moritz Exp $	*/
d70 2
a71 2
int	ftpd_pclose(FILE *);
FILE   *ftpd_popen(char *, char *);
@


1.17
log
@Don't split large commands into multiple commands on a 512-byte
boundary but just fail on them. This prevents CSRF-like attacks,
when a web browser is used to access an ftp server.

Reported by Maksymilian Arciemowicz <cxib@@securityreason.com>.

ok millert@@ martynas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.16 2006/04/21 17:42:50 deraadt Exp $	*/
d72 1
a72 1
int     getline(char *, int, FILE *);
@


1.16
log
@lint cleanup; ok ray moritz dhill
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.15 2004/12/22 00:54:39 david Exp $	*/
d72 1
a72 1
char   *getline(char *, int, FILE *);
@


1.15
log
@some -Wimplicit-function-declaration cleaning; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.14 2004/11/28 18:49:29 henning Exp $	*/
a79 2
int	lpsvproto2af(int);
int	af2lpsvproto(int);
@


1.14
log
@privilege seperate ftpd
handle the pre-authentication phase (minus a tiny tiny tiny amount
of code after accept()) in an unprivileged process, asking the
privileged monitor for help where needed.
work by Moritz Jodeit <moritz@@jodeit.org> with help from theo and me
tests theo ian@@ matthieu@@ ben@@networkinsanity.com a.schlichting@@lemarit.com
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.13 2003/12/10 22:57:12 deraadt Exp $	*/
d93 1
@


1.13
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.12 2003/07/07 03:18:11 deraadt Exp $	*/
d77 2
a78 1
void	pass(char *);
@


1.12
log
@make this match protos; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.11 2003/06/02 19:38:24 millert Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.10 2002/06/13 06:58:57 millert Exp $	*/
d102 4
@


1.10
log
@si_len should be u_int8_t, not socklen_t; form@@form.openbsd.ru
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2002/06/13 06:40:28 deraadt Exp $	*/
d45 1
a45 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@i heard in the bar that this breaks things
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.9 2002/06/13 06:30:59 deraadt Exp $	*/
d111 3
a113 3
		u_char si_len;
		u_char si_family;
		u_short si_port;
@


1.8
log
@u_char -> {socklen_t, sa_family_t, in_port_t}. From form@@.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.7 2002/02/16 21:27:29 millert Exp $	*/
d111 3
a113 3
		socklen_t si_len;
		sa_family_t si_family;
		in_port_t si_port;
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.6 2001/01/28 19:34:27 niklas Exp $	*/
d111 3
a113 3
		u_char si_len;
		u_char si_family;
		u_short si_port;
@


1.6
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: extern.h,v 1.2 1995/04/11 02:44:49 cgd Exp $	*/
d68 38
a105 38
void	blkfree __P((char **));
char  **copyblk __P((char **));
void	cwd __P((char *));
void	delete __P((char *));
void	dologout __P((int));
void	fatal __P((char *));
int	ftpd_pclose __P((FILE *));
FILE   *ftpd_popen __P((char *, char *));
char   *getline __P((char *, int, FILE *));
void	ftpdlogwtmp __P((char *, char *, char *));
void	lreply __P((int, const char *, ...));
void	makedir __P((char *));
void	nack __P((char *));
void	pass __P((char *));
void	passive __P((void));
int	lpsvproto2af __P((int));
int	af2lpsvproto __P((int));
int	epsvproto2af __P((int));
int	af2epsvproto __P((int));
void	long_passive __P((char *, int));
int	extended_port __P((const char *));
void	epsv_protounsupp __P((const char *));
void	perror_reply __P((int, char *));
void	pwd __P((void));
void	removedir __P((char *));
void	renamecmd __P((char *, char *));
char   *renamefrom __P((char *));
void	reply __P((int, const char *, ...));
void	retrieve __P((char *, char *));
void	send_file_list __P((char *));
void	setproctitle __P((const char *, ...));
void	statcmd __P((void));
void	statfilecmd __P((char *));
void	store __P((char *, char *, int));
void	upper __P((char *));
void	user __P((char *));
void	yyerror __P((char *));
void	toolong __P((int));
d107 1
a107 1
int	yyparse __P((void));
@


1.5
log
@cleanup EPSV/EPRT error handling.  avoid possible memory leak (getaddrinfo).
correct error code on unsupported protocol parameter against EPRT (522).
@
text
@d1 1
@


1.4
log
@IPv6 support from KAME.
XXX kerberos and tcp_wrapper needs checking
@
text
@d82 4
d87 2
@


1.3
log
@partial Wall
@
text
@d3 29
d82 1
d101 13
@


1.2
log
@ftpd now eventually times out if a ftp client does:
pasv
list
and then crashes.
The timeout should only apply the the accept(), so that transfers can
take as long as necessary to complete.
Thanks to Theo for moving toolong() to extern.h so that it can be used
in ftpd.c as well as in ftpcmd.y.
@
text
@d47 1
a47 1
void	logwtmp __P((char *, char *, char *));
d69 2
@


1.1
log
@Initial revision
@
text
@d68 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
