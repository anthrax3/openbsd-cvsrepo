head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.38
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.34
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.30
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.32
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.24
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.28
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.26
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.22
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.20
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.18
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.1.0.6
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.4
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.2
	OPENBSD_4_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2008.05.22.19.54.11;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.09.07.09.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2007.03.04.03.19.41;	author beck;	state Exp;
branches;
next	;


desc
@@


1.3
log
@version 2 of spamd sync protocol for two reasons:
1) ip addresses were accidentally being sent in host-byte order, which
   caused compatibility problems (spotted by jbg)
2) the sub-headers in the frame were not natively aligned, thus timeout
   values were incorrectly sent by 64-bit machines
ok beck
@
text
@/*	$OpenBSD: sync.h,v 1.2 2008/05/09 07:09:17 deraadt Exp $	*/

/*
 * Copyright (c) 2006, 2007 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _SPAMD_SYNC
#define _SPAMD_SYNC

/*
 * spamd(8) synchronisation protocol.
 *
 * This protocol has been designed for realtime synchronisation between
 * multiple machines running spamd(8), ie. in front of a MX and a backup MX.
 * It is a simple Type-Length-Value based protocol, it allows easy
 * extension with future subtypes and bulk transfers by sending multiple
 * entries at once. The unencrypted messages will be authenticated using
 * HMAC-SHA1.
 *
 * the spamd(8) synchronisation protocol is not intended to be used as
 * a public SPAM sender database or distribution between vendors.
 */

#define SPAM_SYNC_VERSION	2
#define SPAM_SYNC_MCASTADDR	"224.0.1.240"	/* XXX choose valid address */
#define SPAM_SYNC_MCASTTTL	IP_DEFAULT_MULTICAST_TTL
#define SPAM_SYNC_HMAC_LEN	20	/* SHA1 */
#define SPAM_SYNC_MAXSIZE	1408
#define SPAM_SYNC_KEY		"/etc/mail/spamd.key"

#define SPAM_ALIGNBYTES      (15)
#define SPAM_ALIGN(p)        (((u_int)(p) + SPAM_ALIGNBYTES) &~ SPAM_ALIGNBYTES)

struct spam_synchdr {
	u_int8_t	sh_version;
	u_int8_t	sh_af;
	u_int16_t	sh_length;
	u_int32_t	sh_counter;
	u_int8_t	sh_hmac[SPAM_SYNC_HMAC_LEN];
	u_int8_t	sh_pad[4];
} __packed;

struct spam_synctlv_hdr {
	u_int16_t	st_type;
	u_int16_t	st_length;
} __packed;

struct spam_synctlv_grey {
	u_int16_t	sg_type;
	u_int16_t	sg_length;
	u_int32_t	sg_timestamp;
	u_int32_t	sg_ip;
	u_int16_t	sg_from_length;
	u_int16_t	sg_to_length;
	u_int16_t	sg_helo_length;
	/* strings go here, then packet code re-aligns packet */
} __packed;

struct spam_synctlv_addr {
	u_int16_t	sd_type;
	u_int16_t	sd_length;
	u_int32_t	sd_timestamp;
	u_int32_t	sd_expire;
	u_int32_t	sd_ip;
} __packed;

#define SPAM_SYNC_END		0x0000
#define SPAM_SYNC_GREY		0x0001
#define SPAM_SYNC_WHITE		0x0002
#define SPAM_SYNC_TRAPPED	0x0003

extern int	 sync_init(const char *, const char *, u_short);
extern int	 sync_addhost(const char *, u_short);
extern void	 sync_recv(void);
extern void	 sync_update(time_t, char *, char *, char *, char *);
extern void	 sync_white(time_t, time_t, char *);
extern void	 sync_trapped(time_t, time_t, char *);

#endif /* _SPAMD_SYNC */
@


1.2
log
@As was done in dhcpd, insert pad blocks after sub-messages to keep the
structures aligned to 16 byte boundaries for maximum portability
(somewhat similar to CMSG's).  Old spamd's and new spamd's can still
communicate with this change.  It would be nice if someone tested spamd
on 64-bit unaligned architectures (with and without this change)
ok beck
@
text
@d1 1
a1 1
/*	$OpenBSD: sync.h,v 1.1 2007/03/04 03:19:41 beck Exp $	*/
d36 1
a36 1
#define SPAM_SYNC_VERSION	1
d49 1
a50 1
	u_int16_t	sh_length;
d52 1
a52 1
	u_int16_t	sh_pad[1];
d68 1
@


1.1
log
@
Database synchronizaton for spamd/spamlogd

This adds an HMAC protected synchronization protocol for use by spamd and
spamlogd.

- spamd can receive updates from other hosts for GREY, WHITE, and TRAPPED db
entries, and will update the local /var/db/spamd accordingly.

- spamd can send updates when it makes changes to the GREY or TRAPPED
entries in the db to other hosts running spamd. (Note it does not send
WHITE entries because the other spamd will see the GREY changes and have
complete information to make appropritate decisions)

- spamlogd can send updates for WHITE db entries that it performs on the local
db to other hosts running spamd, which will then apply them on remote hosts.

note that while this diff provides synchronization for changes made to the
spamd db by the daemons, it does *not* provide for sychonizing changes
to the spamd db made manually with the spamdb command.

Synchronization protocol and most of the work by reyk@@,
with a bunch of the spamd, and spamlogd stuff by me.

testing mostly at the U of A, running happily there under big load.

ok reyk@@ jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 3
@

