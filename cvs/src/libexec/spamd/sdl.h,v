head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.6.0.30
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.28
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.24
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.22
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.20
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.18
	OPENBSD_5_0:1.6.0.16
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.14
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.12
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.8
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.10
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.4
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.01.13.21.42.59;	author millert;	state Exp;
branches;
next	1.6;
commitid	FcrTmS5RaNh0dgrr;

1.6
date	2007.11.03.19.16.07;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.29.17.39.53;	author kjell;	state Exp;
branches;
next	1.4;

1.4
date	2007.03.26.16.55.45;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2005.11.30.20.44.07;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.26.08.18.56;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2003.03.02.19.22.00;	author beck;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Use address-family specific lists of addr/mask entries instead of
a union that can store either ipv4 or ipv6.  The old method used
4x as much memory as was really needed for ipv4.  The spamd-setup
protocol has changed from: tag;message;a/m;a/m;a/m...\n
to :tag;message;af;count;a/m;a/m;a/m...[af;count;a/m;a/m;a/m]\n
OK phessler@@ "nice" beck@@
@
text
@/*	$OpenBSD: sdl.h,v 1.6 2007/11/03 19:16:07 beck Exp $ */

/*
 * Copyright (c) 2003-2007 Bob Beck.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _SDL_H_
#define _SDL_H_

#include <sys/types.h>
#include <sys/socket.h>

/* spamd netblock (black) list entry (ipv4) */
struct sdentry_v4 {
	struct in_addr sda;
	struct in_addr sdm;
};

struct sdentries_v4 {
	struct sdentry_v4 *addrs;
	u_int naddrs;
};

struct sdaddr_v6 {
	union {
		struct in6_addr		addr;
		u_int32_t		addr32[4];
	} _sda;		    /* 128-bit address */
#define addr32  _sda.addr32
};

/* spamd netblock (black) list entry (ipv6) */
struct sdentry_v6 {
	struct sdaddr_v6 sda;
	struct sdaddr_v6 sdm;
};

struct sdentries_v6 {
	struct sdentry_v6 *addrs;
	u_int naddrs;
};

/* spamd source list */
struct sdlist {
	char *tag;	/* sdlist source name */
	char *string;	/* Format (451) string with no smtp code or \r\n */
	struct sdentries_v4 v4;
	struct sdentries_v6 v6;
};

int	sdl_add(char *, char *, char **, u_int, char **, u_int);
void	sdl_del(char *);
struct sdlist **sdl_lookup(struct sdlist *head, int af, void * src);

#endif	/* _SDL_H_ */
@


1.6
log
@

PR 5621 - spamd doesn't clear the last entry from an empty TRAP list,
noticed and patch from Piotr Sikora <piotr@@sikora.nu>
@
text
@d1 1
a1 1
/*	$OpenBSD: sdl.h,v 1.5 2007/03/29 17:39:53 kjell Exp $ */
d25 9
a33 6
/* spamd source list */
struct sdlist {
	char *tag;	/* sdlist source name */
	char *string;	/* Format (451) string with no smtp code or \r\n */
	struct sdentry *addrs;
	size_t naddrs;
d36 1
a36 2
/* yeah. Stolen from pf */
struct sdaddr {
d38 1
a38 4
		struct in_addr		v4;
		struct in6_addr		v6;
		u_int8_t		addr8[16];
		u_int16_t		addr16[8];
d41 1
a41 5
#define v4	_sda.v4
#define v6	_sda.v6
#define addr8	_sda.addr8
#define addr16	_sda.addr16
#define addr32	_sda.addr32
d44 4
a47 4
/* spamd netblock (black) list */
struct sdentry {
	struct sdaddr sda;
	struct sdaddr sdm;
d50 12
d63 3
a65 4
extern int	sdl_add(char *, char *, char **, int);
extern void	sdl_del(char *);
extern struct sdlist **sdl_lookup(struct sdlist *head,
	    int af, void * src);
@


1.5
log
@I relinquish any copyright claim I have on this file
@
text
@d1 1
a1 1
/*	$OpenBSD: sdl.h,v 1.4 2007/03/26 16:55:45 beck Exp $ */
d57 1
@


1.4
log
@use new license. ok kjell@@, who also wanted his name removed, but he needs
to remember how to commit to do that.
@
text
@d1 1
a1 1
/*	$OpenBSD: sdl.h,v 1.3 2005/11/30 20:44:07 deraadt Exp $ */
d4 1
a4 1
 * Copyright (c) 2003-2007 Bob Beck, Kjell Wooding.  All rights reserved.
@


1.3
log
@some cleanups prompted by lint, no really nasty bugs; ok beck
@
text
@d1 1
a1 1
/*	$OpenBSD: sdl.h,v 1.2 2004/02/26 08:18:56 deraadt Exp $ */
d4 1
a4 1
 * Copyright (c) 2003 Bob Beck, Kjell Wooding.  All rights reserved.
d6 3
a8 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@paranoia; beck ok
@
text
@d1 1
a1 1
/*	$OpenBSD: sdl.h,v 1.1 2003/03/02 19:22:00 beck Exp $ */
a31 1
#include <netinet/ip_ipsp.h>
@


1.1
log
@Spamd changes to add blacklist awareness to spamd, new spamd-setup.pl
which configures individual blacklists sources and deals with whitelists.
Perl still needs some stylistic changes as suggested by bmc which will go
in shortly.
ok deraadt@@
@
text
@d1 2
a2 1
/*	$OpenBSD$ */
d34 4
a37 5
/* structs */

struct sdlist { /* spamd source list */
	char *tag; /* sdlist source name */
	char *string; /* Format (451) string with no smtp code or \r\n */
d58 2
a59 1
struct sdentry { /* spamd netblock (black) list */
a64 2
/* prototypes */

d66 2
a67 3
extern struct sdlist **
sdl_lookup(struct sdlist *head, int af, void * src);

@

