head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.14
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.16
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.12
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.8
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.10
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.28
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.26
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.24
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.22
	OPENBSD_5_0:1.9.0.20
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.18
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.16
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.12
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.14
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.10
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.8
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.6
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.4
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.2
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.5.0.8
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.10
date	2013.08.21.16.13.29;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.06.23.38.36;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2007.03.04.03.19.41;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.27.02.10.58;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2007.02.23.19.22.07;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2005.03.11.23.09.53;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2004.10.05.21.04.36;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.26.08.30.01;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.26.08.18.56;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.26.07.28.55;	author beck;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove the use of time_t in the greylist db file and use int64_t instead
with backwards compatibility for records with 32-bit times.
OK deraadt@@ beck@@
@
text
@/*	$OpenBSD: grey.h,v 1.9 2007/03/06 23:38:36 beck Exp $	*/

/*
 * Copyright (c) 2004 Bob Beck.  All rights reserved.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define MAX_MAIL 1024 /* how big an email address will we consider */
#define PASSTIME (60 * 25) /* pass after first retry seen after 25 mins */
#define GREYEXP (60 * 60 * 4) /* remove grey entries after 4 hours */
#define WHITEEXP (60 * 60 * 24 * 36) /* remove white entries after 36 days */
#define TRAPEXP (60 * 60 * 24) /* hitting a spamtrap blacklists for a day */
#define PATH_PFCTL "/sbin/pfctl"
#define PATH_SPAMD_ALLOWEDDOMAINS "/etc/mail/spamd.alloweddomains"
#define DB_SCAN_INTERVAL 60
#define DB_TRAP_INTERVAL 60 * 10
#define PATH_SPAMD_DB "/var/db/spamd"

/* Obsolete grey data format. */
struct ogdata {
	int32_t first;  /* when did we see it first */
	int32_t pass;   /* when was it whitelisted */
	int32_t expire; /* when will we get rid of this entry */
	int bcount;     /* how many times have we blocked it */
	int pcount;     /* how many times passed, or -1 for spamtrap */
};

struct gdata {
	int64_t first;  /* when did we see it first */
	int64_t pass;   /* when was it whitelisted */
	int64_t expire; /* when will we get rid of this entry */
	int bcount;     /* how many times have we blocked it */
	int pcount;     /* how many times passed, or -1 for spamtrap */
};

extern int greywatcher(void);
extern int greyupdate(char *, char *, char *, char *, char *, int, char *);
extern int gdcopyin(const void *, struct gdata *);
@


1.9
log
@Add -M option to specify a local address that is a lower priority MX
address than the primary one. spamd will trap hosts that contact this
address first without first contacting the primary.
- get it in, deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.8 2007/03/04 03:19:41 beck Exp $	*/
d30 9
d40 5
a44 5
	time_t first;  /* when did we see it first */
	time_t pass;   /* when was it whitelisted */
	time_t expire; /* when will we get rid of this entry */
	int bcount;    /* how many times have we blocked it */
	int pcount;    /* how many times passed, or -1 for spamtrap */
d49 1
@


1.8
log
@
Database synchronizaton for spamd/spamlogd

This adds an HMAC protected synchronization protocol for use by spamd and
spamlogd.

- spamd can receive updates from other hosts for GREY, WHITE, and TRAPPED db
entries, and will update the local /var/db/spamd accordingly.

- spamd can send updates when it makes changes to the GREY or TRAPPED
entries in the db to other hosts running spamd. (Note it does not send
WHITE entries because the other spamd will see the GREY changes and have
complete information to make appropritate decisions)

- spamlogd can send updates for WHITE db entries that it performs on the local
db to other hosts running spamd, which will then apply them on remote hosts.

note that while this diff provides synchronization for changes made to the
spamd db by the daemons, it does *not* provide for sychonizing changes
to the spamd db made manually with the spamdb command.

Synchronization protocol and most of the work by reyk@@,
with a bunch of the spamd, and spamlogd stuff by me.

testing mostly at the U of A, running happily there under big load.

ok reyk@@ jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.7 2007/02/27 02:10:58 beck Exp $	*/
d27 1
d39 1
a39 1
extern int greyupdate(char *, char *, char *, char *, char *, int);
@


1.7
log
@Flag day for spamd -
1) config files move to /etc/mail
2) -g option goes away in spamd-setup and spamd - greylisting is now the default
3) option change to spamd, -b addr becomes -l addr.
4) -b option in spamd-setup and spamd to turn on old blacklisting mode.

Man page shortly to be flensed to make this easier to explain
ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.6 2007/02/23 19:22:07 beck Exp $	*/
d38 1
@


1.6
log
@greytrapping improvements
	1) remove requirement for <> around spamtrap addresses
	2) add support for /etc/spamd/alloweddomains to specify
	   suffixes for which any destinations that don't match
	   get trapped

	various knf's by theo, feedback from jmc, millert, deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.5 2005/03/11 23:09:53 beck Exp $	*/
d25 1
a25 1
#define PATH_SPAMD_ALLOWEDDOMAINS "/etc/spamd/alloweddomains"
@


1.5
log
@"Greytrapping" for spamd - allow for spamd greylisting to maintain
a list of spamtrap destination addresses in the spamd database. When
a spamtrap address gets an attempted greylist delivery, blacklist the
offending host for a day. Does not affect hosts already whitelisted.

ok deraadt@@, jmc@@, dhartmei@@ to get it in so it can be whacked on
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.4 2004/10/05 21:04:36 beck Exp $	*/
d25 1
@


1.4
log
@Change the default passtime to 25 minutes,
MTA's with a quadratic retry schedule have a retry after 26 minutes, and
then again after an hour, so this probably makes a lot more sense than the
old 30 minute default.

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.3 2004/02/26 08:30:01 beck Exp $	*/
d23 1
d33 1
a33 1
	int pcount;    /* how many good connections have we seen after wl */
@


1.3
log
@Add ommitted copyright.
@
text
@d1 1
a1 1
/*	$OpenBSD: grey.h,v 1.2 2004/02/26 08:18:56 deraadt Exp $	*/
d20 1
a20 1
#define PASSTIME (60 * 30) /* pass after first retry seen after 30 mins */
@


1.2
log
@paranoia; beck ok
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 13
a16 1
 * Where is your damn copyright?
d18 1
@


1.1
log
@Add -g option for greylisting support for spamd. The greylisting techinque
originates from a paper by Evan Harris which can be found at
http://projects.puremagic.com/greylisting/. This implementation makes
spamd allow for non-blacklisted addresses to be treated as "greylisted".
where they are tracked in a db file, and whitelisted by addition to a
pf table when the same envelope from and to are retried from the same
source IP address. Testing by many, ok deraadt@@
@
text
@d1 1
d3 3
@

