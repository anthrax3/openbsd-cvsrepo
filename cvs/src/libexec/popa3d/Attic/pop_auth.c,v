head	1.3;
access;
symbols
	Solar_Designer:1.1.1.1 camield:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2001.08.19.13.05.57;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	2001.08.13.20.19.33;	author camield;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.13.19.59.02;	author camield;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.08.13.19.59.02;	author camield;	state Exp;
branches;
next	;


desc
@@


1.3
log
@libexec is the wrong place for popa3d, since it can be started WITHOUT inetd
@
text
@/* $OpenBSD: pop_auth.c,v 1.2 2001/08/13 20:19:33 camield Exp $ */

/*
 * AUTHORIZATION state handling.
 */

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <syslog.h>

#include "misc.h"
#include "params.h"
#include "protocol.h"
#include "pop_auth.h"
#if POP_VIRTUAL
#include "virtual.h"
#endif

static char *pop_user, *pop_pass;

static int pop_auth_quit(char *params)
{
	if (params) return POP_ERROR;
	return POP_LEAVE;
}

static int pop_auth_user(char *params)
{
	char *user;

	user = pop_get_param(&params);
	if (!user || pop_user || params) return POP_ERROR;
	if (!(pop_user = strdup(user))) return POP_CRASH;
	return POP_OK;
}

static int pop_auth_pass(char *params)
{
	if (!params || !pop_user) return POP_ERROR;
	if (!(pop_pass = strdup(params))) return POP_CRASH;
	return POP_STATE;
}

static struct pop_command pop_auth_commands[] = {
	{"QUIT", pop_auth_quit},
	{"USER", pop_auth_user},
	{"PASS", pop_auth_pass},
	{NULL}
};

int do_pop_auth(int channel)
{
	pop_init();

	if (pop_reply_ok()) return 1;

	pop_user = NULL;
	if (pop_handle_state(pop_auth_commands) == POP_STATE) {
		pop_clean();
		write_loop(channel, (char *)&pop_buffer, sizeof(pop_buffer));
		write_loop(channel, pop_user, strlen(pop_user) + 1);
		write_loop(channel, pop_pass, strlen(pop_pass) + 1);
		if (close(channel)) return 1;
	}

	return 0;
}

void log_pop_auth(int result, char *mailbox)
{
	if (result == AUTH_NONE) {
		syslog(SYSLOG_PRIORITY, "Didn't attempt authentication");
		return;
	}

#if POP_VIRTUAL
	if (virtual_domain) {
		syslog(SYSLOG_PRIORITY, "Authentication %s for %s@@%s",
			result == AUTH_OK ? "passed" : "failed",
			mailbox ? mailbox : "UNKNOWN",
			virtual_domain);
		return;
	}
#endif
	syslog(SYSLOG_PRIORITY, "Authentication %s for %s",
		result == AUTH_OK ? "passed" : "failed",
		mailbox ? mailbox : "UNKNOWN");
}
@


1.2
log
@Tags
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@Solar Designer's popa3d POP3 daemon, version 0.4.9.1

Changes so far:
- removed auth_pam.c
- removed auth_shadow.c
- add BSD makefile
- remove md5, in favour of libc md5
- params.h: AUTH_PASSWD and MAIL_SPOOL_PATH

@
text
@@
