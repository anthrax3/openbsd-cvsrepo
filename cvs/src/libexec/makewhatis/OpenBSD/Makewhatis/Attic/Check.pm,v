head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.18
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.08.22.19.41.18;	author schwarze;	state dead;
branches;
next	1.4;
commitid	ey7eLp6W2n4XJ7B4;

1.4
date	2014.03.21.10.59.31;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.09.08.12.49;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.05.11.02.35;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.12.05.08;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@This code served us well for many years,
but we are unlikely to reactivate it; espie@@ agrees.
The new code is in /usr/src/usr.bin/mandoc/mandocdb.c.
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Check.pm,v 1.4 2014/03/21 10:59:31 espie Exp $
# Copyright (c) 2000-2004 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
package OpenBSD::Makewhatis::Check;

sub found
{
    my ($pattern, $filename) = @@_;
    my @@candidates = glob $pattern;
    if (@@candidates > 0) {
    	# quick check of inode, dev number
    	my ($dev_cmp, $inode_cmp) = (stat $filename)[0,1];
    	for my $f (@@candidates) {
	    my ($dev, $inode) = (stat $f)[0, 1];
	    if ($dev == $dev_cmp && $inode == $inode_cmp) {
		return 1;
	    }
	}
	# slow check with File::Compare
	require File::Compare;

	for my $f (@@candidates) {
	    if (File::Compare::compare($f, $filename) == 0) {
		return 1;
	    }
	}
    }
    return 0;
}
# verify_subject($subject, $filename, $p):
#
#   reparse the subject we're about to add, and check whether it makes
#   sense, e.g., is there a man page around.
sub verify_subject
{
    my ($s, $filename, $p) = @@_;
    if ($s =~ m/\s*(.*?)\s*\((.*?)\)\s-\s/) {
    	my $man = $1;
	my $section = $2;
	my @@mans = split(/\s*,\s*|\s+/, $man);
	my $base = $filename;
	if ($base =~ m|/|) {
	    $base =~ s,/[^/]*$,,;
	} else {
		$base = '.';
	}
	my @@notfound = ();
	for my $func (@@mans) {
	    my $i = $func;
	    next if found("$base/$i.*", $filename);
	    # try harder
	    $i =~ s/\(\)//;
	    $i =~ s/\-//g;
	    $i =~ s,^etc/,,;
	    next if found("$base/$i.*", $filename);
	    # and harder...
	    $i =~ tr/[A-Z]/[a-z]/;
	    next if found("$base/$i.*", $filename);
	    push(@@notfound, $func);
	}
	if (@@notfound > 0) {
	    $p->errsay("Couldn't find #1 in #2:\n#3",
	    	join(', ', @@notfound), $filename, $s);
	}
    }
}

1;
@


1.4
log
@fix "my $_" issues in preparation for perl 5.18
@
text
@d2 1
a2 1
# $OpenBSD: Check.pm,v 1.3 2010/07/09 08:12:49 espie Exp $
@


1.3
log
@don't print directly, use an interface that's similar enough to pkg_add
print framework so that we'll be able to integrate with it better.
ok millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Check.pm,v 1.2 2005/03/05 11:02:35 espie Exp $
d51 2
a52 2
    my ($_, $filename, $p) = @@_;
    if (m/\s*(.*?)\s*\((.*?)\)\s-\s/) {
d78 1
a78 1
	    	join(', ', @@notfound), $filename, $_);
@


1.2
log
@bit of clean-up, cosmetic, style, comments.
@
text
@d2 1
a2 1
# $OpenBSD: Check.pm,v 1.1 2004/08/06 12:05:08 espie Exp $
d21 1
a21 1
sub found($$)
d45 1
a45 1
# verify_subject($subject, $filename):
d49 1
a49 1
sub verify_subject($$)
d51 1
a51 2
    local $_ = shift;
    my $filename = shift;
d77 2
a78 2
	    print STDERR "Couldn't find ", join(', ', @@notfound), 
	    	" in $filename:\n$_\n" 
@


1.1
log
@Reorganize makewhatis in smaller modules.
Avoid pulling unneeded code: for instance, if you have only formated
manpages in your system, Unformated will never be used; Check put aside
and only used in -p mode. -t mode won't pull Whatis. Find; File::Compare
and File::Copy and File::Temp likewise.

okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD$
d49 1
a49 1
sub verify_subject
@

