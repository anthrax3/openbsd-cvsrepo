head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.26
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.24
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.20
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2016.08.22.19.41.18;	author schwarze;	state dead;
branches;
next	1.4;
commitid	ey7eLp6W2n4XJ7B4;

1.4
date	2014.03.21.10.59.31;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.02.12.47.49;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.05.11.02.35;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.12.05.08;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@This code served us well for many years,
but we are unlikely to reactivate it; espie@@ agrees.
The new code is in /usr/src/usr.bin/mandoc/mandocdb.c.
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Find.pm,v 1.4 2014/03/21 10:59:31 espie Exp $
# Copyright (c) 2000-2004 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
package OpenBSD::Makewhatis::Find;

use File::Find;

# Find out all file names that correspond to existing stuff

sub equivalents
{
	my $f = shift;
	my @@l = ();
	$f =~ s/(?:\.Z|\.gz)$//;
	push(@@l, $f, "$f.Z", "$f.gz");
	if ($f =~ s,/cat([\dln]\w*?)/(.*)\.0$,/man$1/$2.$1,) {
		push(@@l, $f, "$f.Z", "$f.gz");
	} elsif ($f =~ s,/man([\dln]\w*?)/(.*)\.\1$,/cat$1/$2.0,) {
		push(@@l, $f, "$f.Z", "$f.gz");
	}
	return @@l;
}

# $list = find_manpages($dir)
#
#   find all manpages under $dir, trim some duplicates.
#
sub find_manpages($)
{
	my $dir = shift;
	my $h = {};
	my $list=[];
	my $nodes = {};
	my $done = {};
	find(
	    sub {
		return unless m/\.[\dln]\w*(?:\.Z|\.gz)?$/;
		return unless -f $_;
		my $unique = join("/", (stat _)[0,1]);
		return if defined $nodes->{$unique};
		$nodes->{$unique} = 1;
		push @@$list, $File::Find::name;
		$h->{$File::Find::name} = (stat _)[9];
	    }, $dir);
	for my $i (keys %$h) {
		next if $done->{$i};
		# only keep stuff that actually exists
		my @@l = grep {defined $h->{$_}} equivalents($i);
		# don't do it twice
		$done->{$_} = 1 for @@l;
		# find the most recent one
		@@l = sort {$h->{$a} <=> $h->{$b}} @@l;
		push @@$list, pop @@l;
	}
	return $list;
}

1;
@


1.4
log
@fix "my $_" issues in preparation for perl 5.18
@
text
@d2 1
a2 1
# $OpenBSD: Find.pm,v 1.3 2011/07/02 12:47:49 espie Exp $
@


1.3
log
@add file equivalence. Choose the most recent timestamp between man and
catman pages.

okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Find.pm,v 1.2 2005/03/05 11:02:35 espie Exp $
d27 1
a27 1
	my $_ = shift;
d29 6
a34 6
	s/(?:\.Z|\.gz)$//;
	push(@@l, $_, "$_.Z", "$_.gz");
	if (s,/cat([\dln]\w*?)/(.*)\.0$,/man$1/$2.$1,) {
		push(@@l, $_, "$_.Z", "$_.gz");
	} elsif (s,/man([\dln]\w*?)/(.*)\.\1$,/cat$1/$2.0,) {
		push(@@l, $_, "$_.Z", "$_.gz");
@


1.2
log
@bit of clean-up, cosmetic, style, comments.
@
text
@d2 1
a2 1
# $OpenBSD: Find.pm,v 1.1 2004/08/06 12:05:08 espie Exp $
d23 15
d45 26
a70 13
    my $dir = shift;
    my ($list, %nodes);
    $list=[];
    find(
	sub {
	    return unless m/\.[\dln]\w*(?:\.Z|\.gz)?$/;
	    return unless -f $_;
	    my $unique = (stat _)[0]."/".(stat _)[1];
	    return if defined $nodes{$unique};
	    $nodes{$unique} = 1;
	    push(@@$list, $File::Find::name);
	}, $dir);
    return $list;
@


1.1
log
@Reorganize makewhatis in smaller modules.
Avoid pulling unneeded code: for instance, if you have only formated
manpages in your system, Unformated will never be used; Check put aside
and only used in -p mode. -t mode won't pull Whatis. Find; File::Compare
and File::Copy and File::Temp likewise.

okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD$
d28 1
a28 1
sub find_manpages
d35 6
a40 6
	return unless /\.[\dln]\w*(?:\.Z|\.gz)?$/;
	return unless -f $_;
	my $unique = (stat _)[0]."/".(stat _)[1];
	return if defined $nodes{$unique};
	$nodes{$unique} = 1;
	push(@@$list, $File::Find::name);
@

