head	1.10;
access;
symbols
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.1.0.2
	OPENBSD_3_6_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2016.08.22.19.41.18;	author schwarze;	state dead;
branches;
next	1.9;
commitid	ey7eLp6W2n4XJ7B4;

1.9
date	2014.03.21.10.59.31;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.17.20.04.21;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.29.11.08.56;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2011.02.22.00.23.14;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.07.09.08.12.49;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2009.10.11.08.14.37;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2005.03.05.11.02.35;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.12.24.00.00.04;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.06.12.05.08;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@This code served us well for many years,
but we are unlikely to reactivate it; espie@@ agrees.
The new code is in /usr/src/usr.bin/mandoc/mandocdb.c.
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Formated.pm,v 1.9 2014/03/21 10:59:31 espie Exp $
# Copyright (c) 2000-2004 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;
package OpenBSD::Makewhatis::Formated;

# add_formated_subject($_, $section, $h):
#   add subject $_ to the list of current subjects in $h, in section $section.
#
sub add_formated_subject
{
    my ($s, $section, $h) = @@_;

    if ($s =~ m/\-/) {
	$s =~ s/([-+.\w\d,])\s+/$1 /g;
	$s =~ s/([a-z][A-z])-\s+/$1/g;
	# some twits use: func -- description
	if ($s =~ m/^[^-+.\w\d]*(.*?) -(?:-?)\s+(.*)/) {
	    my ($func, $descr) = ($1, $2);
	    $func =~ s/,\s*$//;
	    # nroff will tend to cut function names at the weirdest places
	    if (length($func) > 40 && $func =~ m/,/ && $section =~ /^3/) {
	    	$func =~ s/\b \b//g;
	    }
	    $h->add("$func ($section) - $descr");
	    return;
	}
    }

    $h->weird_subject($s) if $h->p->picky;

    # try to find subject in line anyway
    if ($s =~ m/^\s*(.*\S)(?:\s{3,}|\(\)\s+)(.*?)\s*$/) {
    	my ($func, $descr) = ($1, $2);
	$func =~ s/\s+/ /g;
	$descr =~ s/\s+/ /g;
	$h->add("$func ($section) - $descr");
	return;
    }

    $h->weird_subject($s) unless $h->p->picky;
}

# handle($file, $h)
#
#   handle a formatted manpage in $file
#
#   may return several subjects, perl(3p) do !
#
sub handle
{
    my ($file, $h) = @@_;
    # my $_;
    my ($section, $subject);
    my $foundname = 0;
    while (<$file>) {
	chomp;
	if (m/^$/) {
	    # perl aggregates several subjects in one manpage
	    # so we don't stop after we've got one subject
	    add_formated_subject($subject, $section, $h) if defined $subject;
	    $subject = undef;
	    next;
	}
	# Remove boldface from wide characters
	while (s/(..)\cH\cH\1/$1/g)
	    {}
	# Remove boldface and underlining
	while (s/_\cH//g || s/(.)\cH\1/$1/g)
	    {}
	if (!$foundname && m/\w[-+.\w\d]*\(([-+.\w\d\/]+)\)/) {
	    $section = $1;
	    # Find architecture
	    if (m/Manual\s+\((.*?)\)/) {
		$section = "$section/$1";
	    }
	}
	# Not all man pages are in english
	# weird hex is `Namae' in japanese
	if (m/^(?:NAME|NAMES|NAZEV|NAMN|NOMBRE|NOME|Name|\xbe|\xcc\xbe\xbe\xce|\xcc\xbe\xc1\xb0)\s*$/) {
	    unless (defined $section) {
		# try to retrieve section from filename
		if ($h->filename =~ m/(?:cat|man)([\dln])\//) {
		    $section = $1;
		    $h->errsay("Can't find section in #2, deducting #1 from context", $section) if $h->p->picky;
		} else {
		    $section='??';
		    $h->errsay("Can't find section in #1");
		}
	    }
	    $foundname = 1;
	    next;
	}
	if ($foundname) {
	    if (m/^\S/ || m/^\s+\*{3,}\s*$/) {
		add_formated_subject($subject, $section, $h)
		    if defined $subject;
		last;
	    } else {
		# deal with troff hyphenations
		if (defined $subject and $subject =~ m/\xad\s*$/) {
		    $subject =~ s/(?:\xad\cH)*\xad\s*$//;
		    s/^\s*//;
		}
		# more troff hyphenation
		if (defined $subject and $subject =~ m/[^\s-](?:\-\cH)*\-$/) {
		    $subject =~ s/(?:\-\cH)*\-$//;
		    s/^\s*//;
		}
		s/^\s+/ /;
		$subject.=$_;
	    }
	}
    }

    $h->cant_find_subject if $h->no_subjects;
}

1;
@


1.9
log
@fix "my $_" issues in preparation for perl 5.18
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.8 2013/06/17 20:04:21 schwarze Exp $
@


1.8
log
@Do not misinterpret "--" at the end of a NAME section input line
as hyphenation.  Fixes parsing of some manuals preformatted with
outlandish versions of groff.

Issue found by kerberos-robert@@ in krb5_appdefault_time.0

Okay espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.7 2013/01/29 11:08:56 espie Exp $
d26 1
a26 1
    my ($_, $section, $h) = @@_;
d28 3
a30 3
    if (m/\-/) {
	s/([-+.\w\d,])\s+/$1 /g;
	s/([a-z][A-z])-\s+/$1/g;
d32 1
a32 1
	if (m/^[^-+.\w\d]*(.*?) -(?:-?)\s+(.*)/) {
d44 1
a44 1
    $h->weird_subject($_) if $h->p->picky;
d47 1
a47 1
    if (m/^\s*(.*\S)(?:\s{3,}|\(\)\s+)(.*?)\s*$/) {
d55 1
a55 1
    $h->weird_subject($_) unless $h->p->picky;
d67 1
a67 1
    my $_;
@


1.7
log
@refactor code a bit to actually store subjects in the subject object
reformat for 8 spaces tab.
okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.5 2010/07/09 08:12:49 espie Exp $
d120 1
a120 1
		if (defined $subject and $subject =~ m/\S(?:\-\cH)*\-$/) {
@


1.6
log
@shut up unless -v, and a few minor enhancements.
okay miod@@
@
text
@d21 2
a22 2
# add_formated_subject($subjects, $_, $section, $h):
#   add subject $_ to the list of current $subjects, in section $section.
d26 1
a26 2
    my ($subjects, $line, $section, $h) = @@_;
    my $_ = $line;
d28 1
a28 1
    if (m/-/) {
d39 1
a39 2
	    $_ = "$func ($section) - $descr";
	    push(@@$subjects, $_);
d51 1
a51 2
	$_ = "$func ($section) - $descr";
	push(@@$subjects, $_);
d58 1
a58 1
# $lines = handle($file, $h)
a68 1
    my @@lines=();
d75 1
a75 2
	    add_formated_subject(\@@lines, $subject, $section, $h) 
		if defined $subject;
d110 1
a110 1
		add_formated_subject(\@@lines, $subject, $section, $h)
d130 1
a130 2
    $h->cant_find_subject if @@lines == 0;
    return \@@lines;
@


1.5
log
@don't print directly, use an interface that's similar enough to pkg_add
print framework so that we'll be able to integrate with it better.
ok millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.4 2009/10/11 08:14:37 sthen Exp $
d21 1
a21 1
# add_formated_subject($subjects, $_, $section, $filename, $p):
d26 1
a26 1
    my ($subjects, $line, $section, $filename, $p) = @@_;
d46 1
a46 1
    $p->errsay("Weird subject line in #1:\n#2", $filename, $_) if $p->picky;
d58 1
a58 1
    $p->errsay("Weird subject line in #1:\n#2", $filename, $_) unless $p->picky;
d61 1
a61 1
# $lines = handle($file, $filename, $p)
d69 1
a69 1
    my ($file, $filename, $p) = @@_;
d79 1
a79 1
	    add_formated_subject(\@@lines, $subject, $section, $filename, $p) 
d99 1
a99 1
	if (m/^(?:NAME|NAMES|NAMN|NOMBRE|NOME|Name|\xbe|\xcc\xbe\xbe\xce|\xcc\xbe\xc1\xb0)\s*$/) {
d102 1
a102 1
		if ($filename =~ m/(?:cat|man)([\dln])\//) {
d104 1
a104 1
		    $p->errsay("Can't find section in #1, deducting #2 from context", $filename, $section) if $p->picky;
d107 1
a107 1
		    $p->errsay("Can't find section in #1", $filename);
d115 1
a115 1
		add_formated_subject(\@@lines, $subject, $section, $filename, $p)
d135 1
a135 1
    $p->errsay("Can't parse #1 (not a manpage ?)", $filename) if @@lines == 0;
@


1.4
log
@Support manpages with NAME written in Spanish/Italian/Portuguese
ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.3 2005/03/05 11:02:35 espie Exp $
d21 1
a21 1
# add_formated_subject($subjects, $_, $section, $filename, $picky):
d26 2
a27 2
    my ($subjects, $line, $section, $filename, $picky) = @@_;
    local $_ = $line;
d46 1
a46 1
    print STDERR "Weird subject line in $filename:\n$_\n" if $picky;
d58 1
a58 1
    print STDERR "Weird subject line in $filename:\n$_\n" unless $picky;
d61 1
a61 1
# $lines = handle($file, $filename, $picky)
d69 2
a70 2
    my ($file, $filename, $picky) = @@_;
    local $_;
d79 1
a79 1
	    add_formated_subject(\@@lines, $subject, $section, $filename, $picky) 
d104 1
a104 1
		    print STDERR "Can't find section in $filename, deducting $section from context\n" if $picky;
d107 1
a107 1
		    print STDERR "Can't find section in $filename\n";
d115 1
a115 1
		add_formated_subject(\@@lines, $subject, $section, $filename, $picky) 
d135 1
a135 1
    print STDERR "Can't parse $filename (not a manpage ?)\n" if @@lines == 0;
@


1.3
log
@bit of clean-up, cosmetic, style, comments.
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.2 2004/12/24 00:00:04 espie Exp $
d99 1
a99 1
	if (m/^(?:NAME|NAMES|NAMN|Name|\xbe|\xcc\xbe\xbe\xce|\xcc\xbe\xc1\xb0)\s*$/) {
@


1.2
log
@streamline parser loops, now we've got a simple loop with flags, instead
of involved loops. Makes it MUCH easier to have uniform treatment of
various constructs.
okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Formated.pm,v 1.1 2004/08/06 12:05:08 espie Exp $
d21 1
a21 1
# add_formated_subject($subjects, $_, $section):
d76 1
a76 1
	if (/^$/) {
@


1.1
log
@Reorganize makewhatis in smaller modules.
Avoid pulling unneeded code: for instance, if you have only formated
manpages in your system, Unformated will never be used; Check put aside
and only used in -p mode. -t mode won't pull Whatis. Find; File::Compare
and File::Copy and File::Temp likewise.

okay millert@@
@
text
@d2 1
a2 1
# $OpenBSD$
a28 3
    # some twits underline the command name
    while (s/_\cH//g || s/(.)\cH\1/$1/g)
	{}
d73 1
a74 1
	next if /^$/;
d76 8
d90 1
a90 1
	if (m/\w[-+.\w\d]*\(([-+.\w\d\/]+)\)/) {
d110 18
a127 24
	    while (<$file>) {
		chomp;
		# perl aggregates several subjects in one manpage
		if (m/^$/) {
		    add_formated_subject(\@@lines, $subject, $section, $filename, $picky) 
			if defined $subject;
		    $subject = undef;
		} elsif (m/^\S/ || m/^\s+\*{3,}\s*$/) {
		    add_formated_subject(\@@lines, $subject, $section, $filename, $picky) 
			if defined $subject;
		    last;
		} else {
		    # deal with troff hyphenations
		    if (defined $subject and $subject =~ m/\xad\s*$/) {
		    	$subject =~ s/(?:\xad\cH)*\xad\s*$//;
			s/^\s*//;
		    }
		    # more troff hyphenation
		    if (defined $subject and $subject =~ m/\S(?:\-\cH)*\-$/) {
		    	$subject =~ s/(?:\-\cH)*\-$//;
			s/^\s*//;
		    }
		    s/^\s+/ /;
		    $subject.=$_;
d129 2
a131 1
	last;
@

