head	1.6;
access;
symbols
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2000.04.10.20.47.07;	author ericj;	state dead;
branches;
next	1.5;

1.5
date	99.08.06.17.35.02;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.08.06.19.22.47;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.08.06.10.24.47;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.07.23.20.36.29;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.18;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove proxy.c as well
@
text
@/*
 * This program is in the public domain and may be used freely by anyone
 * who wants to.
 *
 * Please send bug fixes/bug reports to: Peter Eriksson <pen@@lysator.liu.se>
 */

#include <stdio.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/time.h>
#include <sys/socket.h>
#include <netinet/in.h>

#include "identd.h"

/*
 * This function should establish a connection to a remote IDENT
 * server and query it for the information associated with the
 * specified connection and the return that to the caller.
 *
 * Should there be three different timeouts (Connection Establishment,
 * Query Transmit and Query Receive)?
 */
int 
proxy(laddr, faddr, lport, fport, timeout)
	struct in_addr *laddr;
	struct in_addr *faddr;
	int     lport;
	int     fport;
	struct timeval *timeout;
{
#ifndef INCLUDE_PROXY
	printf("%d , %d : ERROR : %s\r\n", lport, fport,
	    unknown_flag ? "UNKNOWN-ERROR" : "X-NOT-YET-IMPLEMENTED");

	return (-1);
#else
	char	*answer, *opsys, *charset;
	id_t	*idp;

	idp = id_open(laddr, faddr, timeout);
	if (!idp) {
		printf("%d , %d : ERROR : %s\r\n", lport, fport,
		    unknown_flag ? "UNKNOWN-ERROR" : "X-CONNECTION-REFUSED");
		return -1;
	}
	if (id_query(idp, lport, fport, timeout) < 0) {
		printf("%d , %d : ERROR : %s\r\n", lport, fport,
		    unknown_flag ? "UNKNOWN-ERROR" : "X-TRANSMIT-QUERY-ERROR");
		id_close(idp);
		return -1;
	}
	switch (id_parse(idp, timeout, &lport, &fport, &answer,
	    &opsys, &charset)) {
	case 1:
		printf("%d , %d : USERID : %s %s%s : %s\r\n", lport, fport,
		    opsys, charset ? "," : "", charset ? charset : "",
		    answer);
		break;
	case 2:
		printf("%d , %d : ERROR : %s\r\n", lport, fport, answer);
		break;
	case 0:		/* More to parse - fix this later! */
	case -1:		/* Internal error */
	default:
		printf("%d , %d : ERROR : %s\r\n", lport, fport,
		    unknown_flag ? "UNKNOWN-ERROR" : "X-PARSE-REPLY-ERROR");
		break;
	}
	id_close(idp);
#endif
}
@


1.5
log
@Wall
@
text
@@


1.4
log
@indent
@
text
@a9 4

#include "identd.h"

#ifdef INCLUDE_PROXY
d12 1
d15 1
a15 2
#include <ident.h>
#endif
@


1.3
log
@reindent and remove extra crud. a program that is security sensitive must be readable
@
text
@a20 1

@


1.2
log
@tabify
@
text
@d2 5
a6 11
**	$Id: proxy.c,v 1.1.1.1 1995/10/18 08:43:18 deraadt Exp $
**
** proxy.c			   This file implements the proxy() call.
**
** This program is in the public domain and may be used freely by anyone
** who wants to. 
**
** Last update: 12 Dec 1992
**
** Please send bug fixes/bug reports to: Peter Eriksson <pen@@lysator.liu.se>
*/
a12 1

d23 14
a36 13
** This function should establish a connection to a remote IDENT
** server and query it for the information associated with the
** specified connection and the return that to the caller.
**
** Should there be three different timeouts (Connection Establishment,
** Query Transmit and Query Receive)?
*/
int proxy(laddr, faddr, lport, fport, timeout)
  struct in_addr *laddr;
  struct in_addr *faddr;
  int lport;
  int fport;
  struct timeval *timeout;
d39 4
a42 5
  printf("%d , %d : ERROR : %s\r\n",
	 lport, fport,
	 unknown_flag ? "UNKNOWN-ERROR" : "X-NOT-YET-IMPLEMENTED");
  
  return -1;
d44 2
a45 46
  id_t *idp;
  char *answer;
  char *opsys;
  char *charset;
  
  idp = id_open(laddr, faddr, timeout);
  if (!idp)
  {
    printf("%d , %d : ERROR : %s\r\n",
	   lport, fport,
	   unknown_flag ? "UNKNOWN-ERROR" : "X-CONNECTION-REFUSED");
    return -1;
  }

  if (id_query(idp, lport, fport, timeout) < 0)
  {
    printf("%d , %d : ERROR : %s\r\n",
	   lport, fport,
	   unknown_flag ? "UNKNOWN-ERROR" : "X-TRANSMIT-QUERY-ERROR");
    id_close(idp);
    return -1;
  }

  switch (id_parse(idp, timeout, &lport, &fport, &answer, &opsys, &charset))
  {
    case 1:
      printf("%d , %d : USERID : %s %s%s : %s\r\n",
	     lport, fport,
	     opsys,
	     charset ? "," : "",
	     charset ? charset : "",
	     answer);
      break;
      
    case 2:
      printf("%d , %d : ERROR : %s\r\n",
	     lport, fport, answer);
      break;
      
    case 0:  /* More to parse - fix this later! */
    case -1: /* Internal error */
    default:
      printf("%d , %d : ERROR : %s\r\n",
	     lport, fport,
	     unknown_flag ? "UNKNOWN-ERROR" : "X-PARSE-REPLY-ERROR");
  }
d47 31
a77 2
  id_close(idp);
#endif  
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
**	$Id: proxy.c,v 1.2 1994/02/04 23:18:04 cgd Exp $
d4 1
a4 1
** proxy.c                         This file implements the proxy() call.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
