head	1.10;
access;
symbols
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	r20000612:1.1.1.2
	dsr:1.1.1
	r19990103:1.1.1.1
	per:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2002.05.23.23.16.28;	author deraadt;	state dead;
branches;
next	1.9;

1.9
date	2002.02.11.13.58.49;	author art;	state Exp;
branches;
next	1.8;

1.8
date	2001.09.25.21.51.16;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.11.05.56.02;	author pvalchev;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.11.03.02.24;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.28.21.38.14;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.14.22.18.23;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.13.05.15.17;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.13.04.04.04;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.13.03.34.17;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.13.03.34.17;	author rahnds;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.06.13.03.40.29;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.10
log
@This stuff has no license.  Delete it.  If someone wants it back, get the licenses cleaned up, and put it in regress
@
text
@#	$OpenBSD: Makefile,v 1.9 2002/02/11 13:58:49 art Exp $

DIR=/usr/src/libexec/ld.so/obj/ld.so
#necessary to build the shared objects. not necessary for dltest but
#doesn't hurt
CFLAGS += -fpic
CFLAGS += -g
CFLAGS += -I${.CURDIR}/.. -I${.CURDIR}/../${MACHINE_ARCH}
LDFLAGS += -Wl,--export-dynamic -Wl,-dynamic-linker,${DIR} -Wl,-rpath,.
#LDFLAGS += -Wl,--export-dynamic 

SRCS=	ldt.c
PROG=	ldt
MAN=
CLEANFILES= dltest dltest.o libfoo.so libfoo.o libbar.so libbar.o libdep.so
CLEANFILES+= libdep.o CCtest dltest A.o B.o tst.o libA.so libB.so

all:	dltest CCtest

dltest: dltest.o libfoo.so libbar.so libdep.so
	$(CC) ${CFLAGS} -o $@@ dltest.o ${LDFLAGS}

libfoo.so: libfoo.o
	$(CC) -shared -o libfoo.so libfoo.o

libbar.so: libbar.o 
	$(CC) -shared -o libbar.so libbar.o 

libdep.so: libdep.o
	$(CC) -shared -o libdep.so libdep.o

A.o:	A.C
	g++ -c ${CFLAGS} ${.IMPSRC}

libA.so:	A.o
	$(CC) -shared -o $@@ A.o 

B.o:	B.C
	g++ -c ${CFLAGS} ${.IMPSRC}

libB.so:	B.o
	$(CC) -shared -o $@@ B.o 

CCtest:	libA.so libB.so tst.o
	g++ ${LDFLAGS} -o $@@ tst.o libB.so libA.so

run:
	@@echo running CCtest
	LD_LIBRARY_PATH=. CCtest
	@@echo running dltest -l bar -f bar
	LD_LIBRARY_PATH=. dltest -l bar -f bar
	@@echo running dltest -l foo -f foo
	LD_LIBRARY_PATH=. dltest -l foo -f foo

.include <bsd.prog.mk>
.include <bsd.subdir.mk>
@


1.9
log
@libdl is no more
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2001/09/25 21:51:16 drahn Exp $
@


1.8
log
@Slight cleanup on ld.so tests, link with rpath built in, so that running
test does not require LD_LIBRARY_PATH.
remove an unnecessary header file from dltest.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2001/07/11 05:56:02 pvalchev Exp $
d21 1
a21 1
	$(CC) ${CFLAGS} -o $@@ dltest.o ${LDFLAGS} -ldl
@


1.7
log
@typo in comment
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2001/07/11 03:02:24 pvalchev Exp $
d9 1
a9 1
LDFLAGS += -Wl,--export-dynamic -Wl,-dynamic-linker -Wl,${DIR}
@


1.6
log
@remove mips leftovers; ok brad
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2001/05/28 21:38:14 drahn Exp $
d4 1
a4 1
#necssary to build the shared objects. not necessary for dltest but
@


1.5
log
@Commonize csu code for elf systems, powerpc now no longer has it's own
versions of these files.

Fixed a bug in ld.so in this, instead of scheduling the fini of each of
the shared libraries with atexit. schedule a function of ld.so itself
and it will walk all of the open libraries when the program exits.
otherwise a shared library could be dl_open()ed and then dl_close()d
and then it would not be mapped for the atexit processing.

TODO:
What if atexit is not found (process did not link against libc?)
Do shared libraries that are dl_closed have their global destructors run?
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2001/05/28 21:27:50 drahn Exp $
a3 1
.if (${MACHINE_ARCH} != "mips")
a6 1
.endif
@


1.4
log
@Commit initial alpha bits, to facilitate in-tree dev.
This code is not yet working.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2000/10/13 05:15:17 drahn Exp $
d48 8
@


1.3
log
@Add secondary c++ shared library for testing purposes to verify
that appropriate constructors in each library are called.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/13 04:04:04 drahn Exp $
d4 1
a4 1
.if (${MACHINE_ARCH} == "powerpc")
d10 1
d47 1
a47 1
	g++ ${LDFLAGS} -o $@@ tst.o -L . -lB -lA
@


1.2
log
@Makefile:
	build with ${CC} -shared like the rest of shared libraries
	do now, instead of using ${LD}.
Other files:
	make output more useful so that it is possible to tell if
	a constructor/destructor is running the correct number of times.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2000/10/13 04:03:58 drahn Exp $
d17 1
a17 1
CLEANFILES+= libdep.o CCtest dltest A.o tst.o libA.so
d39 8
a46 2
CCtest:	libA.so tst.o
	g++ ${LDFLAGS} -o $@@ tst.o -L . -lA
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/04/27 20:55:51 millert Exp $
d3 6
d10 2
a11 1
LDFLAGS += -Wl,--export-dynamic -Wl,-dynamic-linker -Wl,/home/staff/pefo/newldso/ld.so/ld.so
d16 2
d19 1
a19 1
all:	dltest
d22 1
a22 1
	$(CC) -o $@@ dltest.o ${LDFLAGS} -ldl
d25 1
a25 1
	$(LD) -x --shared --soname=libfoo.so -o libfoo.so libfoo.o
d27 2
a28 2
libbar.so: libbar.o
	$(LD) -x --shared --soname=libbar.so -o libbar.so libbar.o libdep.so
d31 10
a40 1
	$(LD) -x --shared --soname=libdep.so -o libdep.so libdep.o
@


1.1.1.1
log
@Initial import of ELF ld.so. This was written indepently of the gnu rtld
code and is fully BSD copyrighted.
This initial import contains a mostly working mips and partially working
powerpc version. No support for ld.so.hints or system run path exists.

@
text
@@


1.1.1.2
log
@Updated version of ld.so, contains additional functionality and fixes/
design changes required by egcs.

added support for ldconfig/ld.so.hints

changes to low level relocation code, required by egcs pic
code generation that moved global variable loads to before the
self relocation was performed. Only powerpc supported, mips code not updated.

Code cleaned up somewhat reasonably.

This code needs to be reviewed closely for significant problems
such as correctness and security.
@
text
@a2 6
DIR=/usr/src/libexec/ld.so/obj/ld.so
.if (${MACHINE_ARCH} == "powerpc")
#necssary to build the shared objects. not necessary for dltest but
#doesn't hurt
CFLAGS += -fpic
.endif
d4 1
a4 2
LDFLAGS += -Wl,--export-dynamic -Wl,-dynamic-linker -Wl,${DIR}
#LDFLAGS += -Wl,--export-dynamic 
a8 2
CLEANFILES= dltest dltest.o libfoo.so libfoo.o libbar.so libbar.o libdep.so
CLEANFILES+= libdep.o CCtest dltest A.o tst.o libA.so
d10 1
a10 1
all:	dltest CCtest
d13 1
a13 1
	$(CC) ${CFLAGS} -o $@@ dltest.o ${LDFLAGS} -ldl
d18 2
a19 2
libbar.so: libbar.o 
	$(LD) -x --shared --soname=libbar.so -o libbar.so libbar.o 
a22 9

A.o:	A.C
	g++ -c ${CFLAGS} ${.IMPSRC}

libA.so:	A.o
	$(LD) -x --shared -soname $@@ -o $@@ /usr/lib/crtbeginS.o A.o /usr/lib/crtendS.o 

CCtest:	libA.so tst.o
	g++ ${LDFLAGS} -o $@@ tst.o -L . -lA
@

