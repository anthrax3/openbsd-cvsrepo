head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.42
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.38
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.40
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.32
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.36
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.34
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.30
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.28
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.26
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.24
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	r20000612:1.1.1.1
	dsr:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2006.05.12.23.35.16;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2006.05.12.23.20.52;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.07.06.20.04.00;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.24.00.25.42;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.07.18.45.32;	author mpech;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.30.02.39.04;	author brad;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.13.03.40.14;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.13.03.40.14;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.7
log
@do not call abort()
@
text
@/* $OpenBSD: etc.c,v 1.6 2006/05/12 23:20:52 deraadt Exp $ */

/* Public Domain */

#include <sys/types.h>

#include <err.h>
#include <stdlib.h>
#include <string.h>
#include "ld.h"

#define	OOM_MSG	"Out of memory"

char *
xstrdup(const char *s)
{
	char *ptr;

	if ((ptr = strdup(s)) == NULL)
		err(1, OOM_MSG);
	return (ptr);
}

void *
xmalloc(size_t size)
{
	void *ptr;

	if ((ptr = malloc(size)) == NULL)
		err(1, OOM_MSG);
	return (ptr);
}

void *
xrealloc(void *ptr, size_t size)
{
	void *nptr;

	if ((nptr = realloc(ptr, size)) == NULL)
		err(1, OOM_MSG);
	return (nptr);
}

void *
xcalloc(size_t nmemb, size_t size)
{
	void *ptr;

	ptr = calloc(nmemb, size);
	if (ptr == NULL)
		err(1, OOM_MSG);
	return ptr;
}

char *
concat(const char *s1, const char *s2, const char *s3)
{
	char *str;
	size_t len;

	len = strlen(s1) + strlen(s2) + strlen(s3) + 1;
	str = xmalloc(len);

	strlcpy(str, s1, len);
	strlcat(str, s2, len);
	strlcat(str, s3, len);

	return (str);
}
@


1.6
log
@move the prebind code into ldconfig as the -P option.
next we will want to enhance the verbose mode, fix error handling,
and change the prebind delete code to use the same directory handling
code
ok drahn
@
text
@d1 1
a1 1
/* $OpenBSD: etc.c,v 1.5 2003/07/06 20:04:00 deraadt Exp $ */
d47 1
a47 1
	void *ret;
d49 4
a52 7
	ret = calloc(nmemb, size);
	if (ret == NULL) {
		printf("unable to allocate memory\n");
		abort();
		exit (20);
	}
	return ret;
@


1.5
log
@various proto, ansi, and knf repair.  tested on all architectures that
use it. (build may require make cleandir because of .depend balony)
@
text
@d1 1
a1 1
/* $OpenBSD: etc.c,v 1.4 2002/05/24 00:25:42 ericj Exp $ */
d42 14
@


1.4
log
@
replace some wrapper functions w/ no license w/ some public domain ones.
deraadt@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d10 1
@


1.3
log
@kill more registers;

millert@@ ok
@
text
@d1 5
a5 3
/* * $OpenBSD: etc.c,v 1.2 2001/01/30 02:39:04 brad Exp $*/
/*
 */
d11 2
a12 3
/*
 * Like strdup but get fatal error if memory is exhausted.
 */
d14 1
a14 2
xstrdup(s)
	char*s;
d16 1
a16 1
	char *result = strdup(s);
d18 3
a20 4
	if (!result)
		errx(1, "virtual memory exhausted");

	return result;
a22 3
/*
 * Like malloc but get fatal error if memory is exhausted.
 */
d24 1
a24 2
xmalloc(size)
	size_t size;
d26 1
a26 4
	void	*result = (void *)malloc(size);

	if (!result)
		errx(1, "virtual memory exhausted");
d28 3
a30 1
	return result;
a32 3
/*
 * Like realloc but get fatal error if memory is exhausted.
 */
d34 1
a34 3
xrealloc(ptr, size)
	void *ptr;
	size_t size;
d36 1
a36 9
	void	*result;

	if (ptr == NULL)
		result = (void *)malloc(size);
	else
		result = (void *)realloc(ptr, size);

	if (!result)
		errx(1, "virtual memory exhausted");
d38 3
a40 1
	return result;
a42 4
/*
 * Return a newly-allocated string whose contents concatenate
 * the strings S1, S2, S3.
 */
d44 1
a44 2
concat(s1, s2, s3)
	const char *s1, *s2, *s3;
d46 2
a47 10
	int	len1 = strlen(s1),
			len2 = strlen(s2),
			len3 = strlen(s3);

	char *result = (char *)xmalloc(len1 + len2 + len3 + 1);

	strcpy(result, s1);
	strcpy(result + len1, s2);
	strcpy(result + len1 + len2, s3);
	result[len1 + len2 + len3] = 0;
d49 8
a56 1
	return result;
a57 1

@


1.2
log
@sync with a.out ldconfig, adds missing -U option. Reviewed by: drahn@@
@
text
@d1 1
a1 1
/* * $OpenBSD: etc.c,v 1.1.1.1 2000/06/13 03:40:14 rahnds Exp $*/
d31 1
a31 1
	register void	*result = (void *)malloc(size);
d47 1
a47 1
	register void	*result;
d68 1
a68 1
	register int	len1 = strlen(s1),
d72 1
a72 1
	register char *result = (char *)xmalloc(len1 + len2 + len3 + 1);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/* * $OpenBSD: etc.c,v 1.2 1998/03/26 19:46:18 niklas Exp $*/
d8 15
@


1.1.1.1
log
@Updated version of ld.so, contains additional functionality and fixes/
design changes required by egcs.

added support for ldconfig/ld.so.hints

changes to low level relocation code, required by egcs pic
code generation that moved global variable loads to before the
self relocation was performed. Only powerpc supported, mips code not updated.

Code cleaned up somewhat reasonably.

This code needs to be reviewed closely for significant problems 
such as correctness and security.

@
text
@@
