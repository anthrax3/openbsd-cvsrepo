head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.38
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.40
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.32
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.36
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.34
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.30
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.28
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.26
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.24
	OPENBSD_5_0:1.3.0.22
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2016.07.04.20.56.50;	author kettenis;	state dead;
branches;
next	1.3;
commitid	roU3LTBV1W77FE1g;

1.3
date	2006.06.15.22.09.32;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2006.05.13.05.59.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.12.23.20.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Nuke prebind support; it's unworkable and we're never going to finish it.

ok guenther@@, deraadt@@
@
text
@/* $OpenBSD: prebind_struct.h,v 1.3 2006/06/15 22:09:32 drahn Exp $ */
/*
 * Copyright (c) 2006 Dale Rahn <drahn@@dalerahn.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

struct symcache_noflag {
	const elf_object_t *obj;
	const Elf_Sym	*sym;
};

struct objlist {
	TAILQ_ENTRY(objlist) list;
	TAILQ_ENTRY(objlist) inst_list;
	struct elf_object *load_prog;
	struct elf_object *object;
};

struct proglist {
	TAILQ_ENTRY(proglist) list;
	TAILQ_HEAD(, objlist) curbin_list;
	struct fixup **fixup;
	int *fixupcnt;
	int *fixupcntalloc;
	int nobj;
	u_int32_t **libmap;
	u_int32_t *libmapcnt;
	char	*interp;
};
extern struct proglist *curbin;
extern struct elf_object *load_object;

typedef TAILQ_HEAD(, proglist) prog_list_ty;
typedef TAILQ_HEAD(, objlist) obj_list_ty;

extern obj_list_ty library_list;
extern prog_list_ty prog_list;

/* debug */
void	elf_print_curbin_list(struct proglist *bin);
void	elf_print_prog_list (prog_list_ty *prog_list);

void	elf_add_object_curbin_list(struct elf_object *object);

void	elf_copy_syms(struct symcache_noflag *tcache,
	    struct symcache_noflag *scache, struct elf_object *obj,
	    struct elf_object *prog, int nsyms);
int	elf_prep_lib_prebind(struct elf_object *object);
int	elf_prep_bin_prebind(struct proglist *pl);
void	elf_calc_fixups(struct proglist *pl, struct objlist *ol, int libidx);
int	elf_write_lib(struct elf_object *object, struct nameidx *nameidx,
	    char *nametab, int nametablen, int numlibs,
	    int nfixup, struct fixup **fixup, int *fixupcnt,
	    u_int32_t **libmap, int *libmapcnt,
	    struct symcachetab *symcachetab, int symcache_cnt,
	    struct symcachetab *pltsymcachetab, int pltsymcache_cnt);

void	dump_symcachetab(struct symcachetab *symcachetab, int symcache_cnt,
	    struct elf_object *object, int id);
void	dump_info(struct elf_object *object);
void	elf_clear_prog_load(int fd, struct elf_object *object);
void	elf_fixup_prog_load(int fd, struct prebind_footer *footer,
	    struct elf_object *object);
void	elf_dump_footer(struct prebind_footer *footer);

extern	int verbose;
extern	int merge;
extern	int safe;

extern int64_t prebind_blocks;
extern struct elf_object *load_object;
struct elf_object *elf_lookup_object(const char *name);
struct elf_object *load_file(const char *filename, int objtype);

void	elf_load_existing_prebind(struct elf_object *object, int fd);
@


1.3
log
@When writing a TXTBUSY file, make certain to preserve all file metadata,
also add -S flag, like install's -S flag to safely perform operations.
Getting it in so it gets tested.
@
text
@d1 1
a1 1
/* $OpenBSD: prebind_struct.h,v 1.2 2006/05/13 05:59:28 deraadt Exp $ */
@


1.2
log
@spacing
@
text
@d1 1
a1 1
/* $OpenBSD: prebind_struct.h,v 1.1 2006/05/12 23:20:53 deraadt Exp $ */
d79 1
@


1.1
log
@move the prebind code into ldconfig as the -P option.
next we will want to enhance the verbose mode, fix error handling,
and change the prebind delete code to use the same directory handling
code
ok drahn
@
text
@d1 1
a1 1
/* $OpenBSD: prebind_struct.h,v 1.5 2006/05/12 16:37:59 drahn Exp $ */
a43 1

d51 2
a52 3
void elf_print_curbin_list(struct proglist *bin);
void elf_print_prog_list (prog_list_ty *prog_list);

d54 1
a54 1
void elf_add_object_curbin_list(struct elf_object *object);
d56 20
a75 19
void elf_copy_syms(struct symcache_noflag *tcache,
    struct symcache_noflag *scache, struct elf_object *obj,
    struct elf_object *prog, int nsyms);
int elf_prep_lib_prebind(struct elf_object *object);
int elf_prep_bin_prebind(struct proglist *pl);
void elf_calc_fixups(struct proglist *pl, struct objlist *ol, int libidx);
int elf_write_lib(struct elf_object *object, struct nameidx *nameidx,
    char *nametab, int nametablen, int numlibs,
    int nfixup, struct fixup **fixup, int *fixupcnt,
    u_int32_t **libmap, int *libmapcnt,
    struct symcachetab *symcachetab, int symcache_cnt,
    struct symcachetab *pltsymcachetab, int pltsymcache_cnt);

void dump_symcachetab(struct symcachetab *symcachetab, int symcache_cnt, struct elf_object *object, int id);
void dump_info(struct elf_object *object);
void elf_clear_prog_load(int fd, struct elf_object *object);
void elf_fixup_prog_load(int fd, struct prebind_footer *footer,
    struct elf_object *object);
void elf_dump_footer(struct prebind_footer *footer);
d77 2
a78 2
extern int verbose;
extern int merge;
d85 1
a85 4
void elf_load_existing_prebind(struct elf_object *object, int fd);

void *xmalloc(size_t);
void *xcalloc(size_t,size_t);
@

