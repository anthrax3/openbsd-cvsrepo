head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.18.22.36.30;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2013.08.13.05.52.19;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.09.13.10.19;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2013.06.01.20.50.37;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2013.06.01.09.57.58;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.04.05.12.58.03;	author kurt;	state Exp;
branches;
next	1.1;

1.1
date	2013.01.23.19.15.58;	author miod;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: syscall.h,v 1.6 2013/08/13 05:52:19 guenther Exp $ */

/*
 * Copyright (c) 2001 Niklas Hallqvist
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef __DL_SYSCALL_H__
#define __DL_SYSCALL_H__

#include <sys/syscall.h>
#include <sys/stat.h>
#include <sys/signal.h>

#ifndef _dl_MAX_ERRNO
#define _dl_MAX_ERRNO 512L
#endif
#define _dl_mmap_error(__res) \
    ((long)__res < 0 && (long)__res >= -_dl_MAX_ERRNO)

int	_dl_close(int);
int	_dl_exit(int);
int	_dl_issetugid(void);
long	_dl__syscall(quad_t, ...);
int	_dl_mprotect(const void *, size_t, int);
int	_dl_munmap(const void *, size_t);
int	_dl_open(const char *, int);
ssize_t	_dl_read(int, const char *, size_t);
int	_dl_fstat(int, struct stat *);
int	_dl_fcntl(int, int, ...);
ssize_t	_dl_getdents(int, char *, size_t);
int	_dl_sigprocmask(int, const sigset_t *, sigset_t *);
int	_dl_sysctl(const int *, u_int, void *, size_t *, void *, size_t);
int	_dl_gettimeofday(struct timeval *, struct timezone *);
int	_dl_readlink(const char *, char *, size_t);
int	_dl_lstat(const char *, struct stat *);
int	_dl_getcwd(char *, size_t);
int	_dl_utrace(const char *, const void *, size_t);

static inline off_t
_dl_lseek(int fildes, off_t offset, int whence)
{
	return _dl__syscall((quad_t)SYS_lseek, fildes, 0, offset, whence);
}

static inline void *
_dl_mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)
{
	return((void *)(long)_dl__syscall((quad_t)SYS_mmap, addr, len, prot,
		flags, fd, 0, offset));
}

#endif /*__DL_SYSCALL_H__*/
@


1.6
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.5 2013/06/09 13:10:19 miod Exp $ */
@


1.5
log
@Constify the mib argument of sysctl().
ok matthew@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.4 2013/06/01 20:50:37 guenther Exp $ */
d52 1
a52 1
int	_dl_getdirentries(int, char *, int, off_t *);
@


1.4
log
@Make all the syscall prototypes consistent with their real forms for types,
whitespace, and no argument names.

ok matthew@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.3 2013/06/01 09:57:58 miod Exp $ */
d54 1
a54 1
int	_dl_sysctl(int *, u_int, void *, size_t *, void *, size_t);
@


1.3
log
@Introduce ltrace(1). This tool works with ld.so to inject utrace record for
each plt call, allowing to trace a binary linked against shared library at the
public function call level.

To do so, ltrace(1) sets up some environment variables to enable plt tracing
in ld.so, and invokes ktrace(2) for utrace events. ld.so will force lazy
binding and will send an utrace record in the plt resolver, without updating
the plt.

Minimal filtering capabilities are provided, inspired by Solaris' truss -u,
to limit tracing to libraries and/or symbol names. Non-traced libraries and
symbols will have the regular resolver processing, with the expected plt
update.

"Get it in" deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.2 2013/04/05 12:58:03 kurt Exp $ */
d46 4
a49 4
int	_dl_mprotect(const void *, int, int);
int	_dl_munmap(const void *, unsigned int);
int	_dl_open(const char *, unsigned int);
int	_dl_read(int, const char *, int);
d52 1
a52 1
int	_dl_getdirentries(int, char*, int, off_t *);
d55 5
a59 5
int	_dl_gettimeofday(struct timeval *tp, struct timezone *tzp);
int	_dl_readlink(const char *path, char *buf, size_t bufsiz);
int	_dl_lstat(const char *path, struct stat *sb);
int	_dl_getcwd(char *buf, size_t size);
int	_dl_utrace(const char *label, const void *addr, size_t len);
d68 1
a68 2
_dl_mmap(void *addr, unsigned int len, unsigned int prot,
	unsigned int flags, int fd, off_t offset)
@


1.2
log
@- Add ORIGIN, OSNAME, OSREL and PLATFORM substitution support for rpaths.
Improvements and okay matthew@@, millert@@, guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.1 2013/01/23 19:15:58 miod Exp $ */
d59 1
@


1.1
log
@bits for an m68k ELF ld.so, to be used soon. Lazy resolver wrapper borrowed from
NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: syscall.h,v 1.4 2012/10/24 03:26:56 guenther Exp $ */
d56 3
@

