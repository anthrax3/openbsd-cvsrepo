head	1.9;
access;
symbols
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.1.1.0.6
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	r20000612:1.1.1.1
	dsr:1.1.1
	r19990103:1.1.1.1
	per:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2004.08.11.17.11.45;	author pefo;	state dead;
branches;
next	1.8;

1.8
date	2004.08.09.13.44.19;	author pefo;	state Exp;
branches;
next	1.7;

1.7
date	2004.05.24.20.16.12;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.09.16.10.04;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.15.22.43.06;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.23.12.38.29;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.24.03.44.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.21.23.17.53;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.13.03.34.13;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.13.03.34.13;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.9
log
@mips->mips64
@
text
@/*	$OpenBSD: archdep.h,v 1.8 2004/08/09 13:44:19 pefo Exp $ */

/*
 * Copyright (c) 1998-2002 Opsycon AB, Sweden.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _MIPS_ARCHDEP_H_
#define _MIPS_ARCHDEP_H_

#include <link.h>

#include "syscall.h"
#include "resolve.h"
#include "util.h"

#define RTLD_PROTECT_PLT

#define	DL_MALLOC_ALIGN	4	/* Arch constraint or otherwise */

#define	MACHID	EM_MIPS		/* ELF e_machine ID value checked */

#define	RELTYPE	Elf32_Rel
#define	RELSIZE	sizeof(Elf32_Rel)

static inline void
RELOC_REL(Elf_Rel *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
{
}

static inline void
RELOC_RELA(Elf32_Rela *r, const Elf32_Sym *s, Elf32_Addr *p, unsigned long v)
{
	_dl_exit(20);
}

struct elf_object;

static inline void
RELOC_GOT(struct elf_object *dynld, long loff)
{
	Elf32_Addr *gotp;
	int i, n;
	const Elf_Sym *sp;

	/* Do all local gots */
	gotp = dynld->dyn.pltgot;
	n = dynld->Dyn.info[DT_MIPS_LOCAL_GOTNO - DT_LOPROC + DT_NUM];

	for (i = ((gotp[1] & 0x80000000) ? 2 : 1); i < n; i++) {
		gotp[i] += loff;
	}
	gotp += n;

	/* Do symbol referencing gots. There should be no global... */
	n =  dynld->Dyn.info[DT_MIPS_SYMTABNO - DT_LOPROC + DT_NUM] -
	  dynld->Dyn.info[DT_MIPS_GOTSYM - DT_LOPROC + DT_NUM];
	sp = dynld->dyn.symtab;
	sp += dynld->Dyn.info[DT_MIPS_GOTSYM - DT_LOPROC + DT_NUM];

	while (n--) {
		if (sp->st_shndx == SHN_UNDEF ||
		    sp->st_shndx == SHN_COMMON) {
			_dl_exit(6);
		} else if (ELF32_ST_TYPE(sp->st_info) == STT_FUNC) {
			*gotp += loff;
		} else {
			*gotp = sp->st_value + loff;
		}
		gotp++;
		sp++;
	}
	dynld->status |= STAT_GOT_DONE;
}

#define GOT_PERMS PROT_READ

#endif /* _MIPS_ARCHDEP_H_ */
@


1.8
log
@bang! no reloc.h
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.7 2004/05/24 20:16:12 drahn Exp $ */
@


1.7
log
@Change define used to deal with PLT protection, use postive logic not negative.
ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.6 2003/06/09 16:10:04 deraadt Exp $ */
a32 1
#include <machine/reloc.h>
@


1.6
log
@pefo 3/4 licence cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.5 2003/02/15 22:43:06 drahn Exp $ */
d38 2
@


1.5
log
@After relocation is completed, remove write protection from GOT/PLT in ld.so.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.4 2002/10/23 12:38:29 pefo Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.4
log
@mips archdep stuff update while waiting for ok on mi
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.3 2002/05/24 03:44:37 deraadt Exp $ */
d100 2
@


1.3
log
@various KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.2 2002/02/21 23:17:53 drahn Exp $ */
d4 1
a4 1
 * Copyright (c) 1998 Per Fogelstrom, Opsycon AB
d16 1
a16 2
 *	This product includes software developed under OpenBSD by
 *	Per Fogelstrom, Opsycon AB, Sweden.
d37 3
d41 1
d50 50
@


1.2
log
@cleanup of MD/MI ld.so (elf), most changes by art@@ cleanup by me.
tested on alpha sparc64 powerpc.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.1.1.1 2000/06/13 03:34:13 rahnds Exp $ */
d5 1
a5 1
 * 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d38 3
a46 87

/*
 *	Simple reloc of REL32's. Used by bootstrapping.
 */
#define	SIMPLE_RELOC(r, s, p, v)					\
	if(ELF32_R_TYPE((r)->r_info) == R_MIPS_REL32) {			\
		if(ELF32_ST_BIND((s)->st_info) == STB_LOCAL &&		\
		   (ELF32_ST_TYPE((s)->st_info) == STT_SECTION ||	\
		    ELF32_ST_TYPE((s)->st_info) == STT_NOTYPE) ) {	\
			*(p) += (v);					\
		}							\
		else {							\
			*(p) = (v) + (s)->st_value;			\
		}							\
	}

/*
 *	The following functions are declared inline so they can
 *	be used before bootstrap linking has been finished.
 */
extern inline void
_dl_wrstderr(const char *s)
{
	while(*s) {
		_dl_write(2, s, 1);
		s++;
	}
}

extern inline void *
_dl_memset(void *p, const char v, size_t c)
{
	char *ip = p;

	while(c--)
		*ip++ = v;
	return(p);
}

extern inline int
_dl_strlen(const char *p)
{
	const char *s = p;

	while(*s != '\0')
		s++;
	return(s - p);
}

extern inline char *
_dl_strcpy(char *d, const char *s)
{
	char *rd = d;

	while((*d++ = *s++) != '\0');

	return(rd);
}

extern inline int
_dl_strncmp(const char *d, const char *s, int c)
{
	while(c-- && *d && *d++ == *s++) {};
	if(c < 0) {
		return(0);
	}
	return(d[-1] - s[-1]);
}
 
extern inline int
_dl_strcmp(const char *d, const char *s)
{
	while(*d && *d++ == *s++) {};
	return(d[-1] - s[-1]);
}
 
extern inline const char *
_dl_strchr(const char *p, const int c)
{
	while(*p) {
		if(*p == c) {
			return(p);
		}
		p++;
	}
	return(0);
}
@


1.1.1.1
log
@Initial import of ELF ld.so. This was written indepently of the gnu rtld
code and is fully BSD copyrighted.
This initial import contains a mostly working mips and partially working
powerpc version. No support for ld.so.hints or system run path exists.

@
text
@@
