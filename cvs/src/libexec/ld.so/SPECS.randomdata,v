head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.10
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.8
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.4
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.2
	OPENBSD_5_3_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2015.02.06.23.58.12;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	Xlq9pdSoAVoFugi1;

1.1
date	2012.08.20.23.25.07;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Raise ELF_RANDOMIZE_LIMIT to 64K, so that programs and libraries can
legitimately use random section variables without execve failures...
Because this section is not demand faulted, yield() every page during
the fill otherwise the costs are charged poorly.
ok tedu matthew
@
text
@$OpenBSD: SPECS.randomdata,v 1.1 2012/08/20 23:25:07 matthew Exp $

This document describes the OpenBSD operating system supplement for
adding "random data" sections to the ELF ABI.  These sections can be
useful for holding values like GCC's stack-smashing protector cookies
and offer additional benefits like ensuring the data is initialized
before any constructor methods are called and allowing the dynamic
linker to mark the memory as read-only after initialization.


Program Header

OpenBSD defines the following operating system-specific segment type:

  Name                  Value
  PT_OPENBSD_RANDOMIZE  0x65a3dbe6


  PT_OPENBSD_RANDOMIZE

    The array element specifies the location and size of a random data
    section.  The system will initialize the specified memory range
    with random data.  The memory range must be separately mapped
    (e.g., by use of a PT_LOAD segment).


Special Sections

OpenBSD defines the following operating system-specific special
sections:

  Name                 Type          Attributes
  .openbsd.randomdata  SHT_PROGBITS  SHF_ALLOC


  .openbsd.randomdata

    This section holds the random data section.


Implementation Notes

On OpenBSD, PT_OPENBSD_RANDOMIZE segments are handled alongside
PT_LOAD segments: the kernel handles initializing random data segments
in executables and program interpreters (i.e., ld.so), while ld.so
handles initializing them in shared libraries.  Additionally, the
kernel limits the total number of PT_OPENBSD_RANDOMIZE segment bytes
in an executable or interpreter to 65536 bytes.
@


1.1
log
@Add support for .openbsd.randomdata sections and PT_OPENBSD_RANDOMIZE
segments to the kernel, ld (2.15), and ld.so.  Tested on alpha, amd64,
i386, macppc, and sparc64 (thanks naddy, mpi, and okan!).

Idea discussed for some time; committing now for further testing.
ok deraadt
@
text
@d1 1
a1 1
$OpenBSD$
d48 1
a48 1
in an executable or interpreter to 1024 bytes.
@

