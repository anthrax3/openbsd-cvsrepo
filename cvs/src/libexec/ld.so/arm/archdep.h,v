head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.2
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.4
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.20
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.12
date	2017.01.24.07.48.37;	author guenther;	state Exp;
branches;
next	1.11;
commitid	veGB6uLWx3BTEAfk;

1.11
date	2017.01.21.01.15.00;	author guenther;	state Exp;
branches;
next	1.10;
commitid	QprHiuRGEnP0ckD2;

1.10
date	2017.01.20.10.40.30;	author guenther;	state Exp;
branches;
next	1.9;
commitid	uAlj3GUarQrChIDM;

1.9
date	2017.01.09.22.51.04;	author kettenis;	state Exp;
branches;
next	1.8;
commitid	8mveS1UjNqlN99uR;

1.8
date	2016.09.08.18.56.58;	author kettenis;	state Exp;
branches;
next	1.7;
commitid	ICVA9xZlSZbMJOfM;

1.7
date	2016.05.18.20.40.20;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	2B3GUZfTLbygCJRi;

1.6
date	2015.12.06.23.36.12;	author guenther;	state Exp;
branches;
next	1.5;
commitid	g8Z7pgqt28AVPEBX;

1.5
date	2014.07.05.12.22.41;	author miod;	state Exp;
branches;
next	1.4;
commitid	9W9uPz2PrBSw3aOa;

1.4
date	2010.01.02.12.16.35;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.24.20.16.12;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.10.14.12.22;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.07.06.00.49;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.12
log
@On fatal errors, kill ourselves with thrkill(0,9,NULL) instead of
simply exiting, via helper functions _dl_die(), _dl_diedie(), and
_dl_oom().

prompted by a complaint from jsing@@
ok jsing@@ deraadt@@
@
text
@/*	$OpenBSD: archdep.h,v 1.11 2017/01/21 01:15:00 guenther Exp $ */

/*
 * Copyright (c) 1998 Per Fogelstrom, Opsycon AB
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _ARM_ARCHDEP_H_
#define _ARM_ARCHDEP_H_

#define	RELOC_TAG	DT_REL

#define	MACHID	EM_ARM	/* ELF e_machine ID value checked */

#include <elf_abi.h>
#include <machine/reloc.h>
#include "syscall.h"
#include "util.h"

/*
 *	The following functions are declared inline so they can
 *	be used before bootstrap linking has been finished.
 */

static inline void
RELOC_DYN(Elf_Rel *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
{
	if (ELF_R_TYPE(r->r_info) == R_ARM_RELATIVE) {
		*p += v;
	} else if (ELF_R_TYPE(r->r_info) == R_ARM_GLOB_DAT) {
		*p += v + s->st_value;
	} else if (ELF_R_TYPE(r->r_info) == R_ARM_ABS32) {
		*p += v + s->st_value;
	} else {
		_dl_exit(6);
	}
}

#define RELOC_GOT(obj, offs)

#endif /* _ARM_ARCHDEP_H_ */
@


1.11
log
@_dl_exit() is __dead, so it should return void.
Move _dl_mmap() and _dl_mquery() inlines from archdep.h to syscall.h and
remove pointless casts and unnecessary parens.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.10 2017/01/20 10:40:30 guenther Exp $ */
a55 2
		/* XXX - printf might not work here, but we give it a shot. */
		_dl_printf("Unknown bootstrap relocation.\n");
@


1.10
log
@Delete ancient macros and unnecessary #includes

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.9 2017/01/09 22:51:04 kettenis Exp $ */
a44 7

static inline void *
_dl_mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)
{
	return((void *)_dl__syscall((quad_t)SYS_mmap, addr, len, prot,
	    flags, fd, 0, offset));
}
@


1.9
log
@Remove dependency on __got_{start,end} symbols and look at PT_GNU_RELRO
instead.  Result in a few more pages that aren't writable on some platforms
(such as hppa).  Based on an initial diff from guenther@@.

Thanks to deraadt@@ for testing.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.8 2016/09/08 18:56:58 kettenis Exp $ */
a33 2
#define	DL_MALLOC_ALIGN	4	/* Arch constraint or otherwise */

a34 3

#define	RELTYPE	Elf32_Rela
#define	RELSIZE	sizeof(Elf32_Rela)
@


1.8
log
@Implement self-relocation for -static -pie on arm.  Also removes some
unecessary code from the normal startup code and do some general cleanup to
make the code more readable.

ok guenther@@, jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.7 2016/05/18 20:40:20 deraadt Exp $ */
a74 2

#define GOT_PERMS (PROT_READ|PROT_EXEC)
@


1.7
log
@fix types for mmap wrappers.  A few whitespace cleanups snuck in.
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.6 2015/12/06 23:36:12 guenther Exp $ */
d63 4
@


1.6
log
@Simplify the relocation code for the ld.so bootstrap and static pie: track
just the dynamic tags are needed instead of reusing the generic elf_object_t
structure.

testing and feedback from miod@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.5 2014/07/05 12:22:41 miod Exp $ */
d52 1
a52 2
_dl_mmap(void *addr, unsigned int len, unsigned int prot,
	unsigned int flags, int fd, off_t offset)
d55 1
a55 1
		flags, fd, 0, offset));
@


1.5
log
@No need to redefine DT_PROCNUM and DT_BIND_NOW here, these are provided by MI
<elf_abi.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.4 2010/01/02 12:16:35 kettenis Exp $ */
d32 2
d60 1
a60 1
RELOC_REL(Elf_Rel *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
a68 7
}

static inline void
RELOC_RELA(Elf32_Rela *r, const Elf32_Sym *s, Elf32_Addr *p, unsigned long v,
    Elf_Addr *pltgot)
{
	_dl_exit(20);
@


1.4
log
@Fix handling of hppa RELOC_IPLT relocations during 'bootstrap relocation'.

ok miod@@, deraadt@@, jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.3 2004/05/24 20:16:12 drahn Exp $ */
a42 6

/* HACK */
#define DT_PROCNUM 0
#ifndef DT_BIND_NOW
#define DT_BIND_NOW 0
#endif
@


1.3
log
@Change define used to deal with PLT protection, use postive logic not negative.
ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.2 2004/02/10 14:12:22 drahn Exp $ */
d76 2
a77 1
RELOC_RELA(Elf32_Rela *r, const Elf32_Sym *s, Elf32_Addr *p, unsigned long v)
@


1.2
log
@Check for RTLD_TEXT_PLT define instead of an architecture specific check.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.1 2004/02/07 06:00:49 drahn Exp $ */
a48 2

#define RTLD_TEXT_PLT
@


1.1
log
@Dynamic linker support for arm. non-lazy binding works.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.1 2004/01/18 22:02:08 drahn Exp $ */
d49 2
@

