head	1.3;
access;
symbols
	OPENBSD_5_9:1.2.0.38
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.40
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.32
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.36
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2016.07.04.21.15.06;	author guenther;	state dead;
branches;
next	1.2;
commitid	qHDzpShMNCJZKLBF;

1.2
date	2006.05.12.22.14.04;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.03.16.10.51;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove prebind support: binding to symbol table indices is too fragile
for our development process.

ok kettenis@@ deraadt@@
@
text
@/* $OpenBSD: prebind.h,v 1.2 2006/05/12 22:14:04 drahn Exp $ */
/*
 * Copyright (c) 2006 Dale Rahn <drahn@@dalerahn.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define PREBIND_VERSION		2
struct prebind_footer {
	off_t	prebind_base;
	u_int32_t nameidx_idx;
	u_int32_t symcache_idx;
	u_int32_t pltsymcache_idx;
	u_int32_t fixup_idx;
	u_int32_t nametab_idx;
	u_int32_t fixupcnt_idx;
	u_int32_t libmap_idx;

	u_int32_t symcache_cnt;
	u_int32_t pltsymcache_cnt;
	u_int32_t fixup_cnt;
	u_int32_t numlibs;
	u_int32_t prebind_size;

	u_int32_t id0;
	u_int32_t id1;
	/* do not modify or add fields below this point in the struct */
	off_t	orig_size;
	u_int32_t prebind_version;
	char bind_id[4];
#define BIND_ID0 'P'
#define BIND_ID1 'R'
#define BIND_ID2 'E'
#define BIND_ID3 'B'
};


struct nameidx {
	u_int32_t name;
	u_int32_t id0;
	u_int32_t id1;
};

struct symcachetab {
	u_int32_t idx;
	u_int32_t obj_idx;
	u_int32_t sym_idx;
};

struct fixup {
	u_int32_t sym;
	u_int32_t obj_idx;
	u_int32_t sym_idx;
};
@


1.2
log
@Commit the rest of the api change that started in prebind.
@
text
@d1 1
a1 1
/* $OpenBSD: prebind.h,v 1.1 2006/05/03 16:10:51 drahn Exp $ */
@


1.1
log
@prebind - how to prelink a binary without throwing security out the window

Prelink fixes the address of libraries making 'return to libc' attacks trival,
prebind uses a different method to achieve most of the same gains, however
without adding any security conerns.

Still under development, now in-tree.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d62 1
a62 1
	u_int32_t targobj_idx;
@

