head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.40
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.32
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.36
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.34
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.30
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.28
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.26
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.24
	OPENBSD_5_0:1.2.0.22
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.20
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.18
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.14
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.16
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.12
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.10
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.8
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.6
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2016.07.04.21.15.06;	author guenther;	state dead;
branches;
next	1.3;
commitid	qHDzpShMNCJZKLBF;

1.3
date	2015.11.02.07.19.14;	author guenther;	state Exp;
branches;
next	1.2;
commitid	zL0XxPeWrnS7fn4d;

1.2
date	2006.05.10.03.26.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2006.05.03.16.10.51;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove prebind support: binding to symbol table indices is too fragile
for our development process.

ok kettenis@@ deraadt@@
@
text
@/* $OpenBSD: dl_prebind.h,v 1.3 2015/11/02 07:19:14 guenther Exp $ */
/*
 * Copyright (c) 2006 Dale Rahn <drahn@@dalerahn.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/exec_elf.h>
#include "resolve.h"
#include "prebind.h"

extern char *_dl_noprebind;
extern char *_dl_prebind_validate;
void	_dl_prebind_pre_resolve(void);
void	_dl_prebind_post_resolve(void);
void	*prebind_load_fd(int fd, const char *name);
void	prebind_load_exe(Elf_Phdr *phdp, elf_object_t *exe_obj);

void	prebind_validate(elf_object_t *req_obj, unsigned int symidx, int flags,
	    const Elf_Sym *ref_sym);

void	prebind_symcache(elf_object_t *object, int pltflag);
void	prebind_free(elf_object_t *object);

extern struct prebind_footer *footer;
@


1.3
log
@Remove duplicate declaration
@
text
@d1 1
a1 1
/* $OpenBSD: dl_prebind.h,v 1.2 2006/05/10 03:26:50 deraadt Exp $ */
@


1.2
log
@pretty this up; ok drahn
@
text
@d1 1
a1 1
/* $OpenBSD: dl_prebind.h,v 1.1 2006/05/03 16:10:51 drahn Exp $ */
a30 1
extern char *_dl_prebind_validate; /* XXX */
@


1.1
log
@prebind - how to prelink a binary without throwing security out the window

Prelink fixes the address of libraries making 'return to libc' attacks trival,
prebind uses a different method to achieve most of the same gains, however
without adding any security conerns.

Still under development, now in-tree.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d21 1
d24 4
a27 4
void _dl_prebind_pre_resolve(void);
void _dl_prebind_post_resolve(void);
void *prebind_load_fd(int fd, const char *name);
void prebind_load_exe(Elf_Phdr *phdp, elf_object_t *exe_obj);
d29 2
a30 3
void
prebind_validate(elf_object_t *req_obj, unsigned int symidx, int flags,
    const Elf_Sym *ref_sym);
d33 2
a34 2
void prebind_symcache(elf_object_t *object, int pltflag);
void prebind_free(elf_object_t *object);
@

