head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.4
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.24
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.20
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.18
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.16
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.14
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.13
date	2016.05.18.20.40.20;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	2B3GUZfTLbygCJRi;

1.12
date	2015.12.06.23.36.12;	author guenther;	state Exp;
branches;
next	1.11;
commitid	g8Z7pgqt28AVPEBX;

1.11
date	2015.07.03.11.15.55;	author miod;	state Exp;
branches;
next	1.10;
commitid	8mBi6IclJX5aUiCt;

1.10
date	2014.11.03.17.50.56;	author guenther;	state Exp;
branches;
next	1.9;
commitid	FlXbNaFQfyra9gBu;

1.9
date	2010.01.02.12.16.35;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.24.20.16.12;	author drahn;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.09.16.10.04;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.15.22.43.06;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.23.19.14.25;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.25.10.39.52;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.12.01.05.23;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.27.15.36.53;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2002.07.27.13.19.26;	author art;	state Exp;
branches;
next	;


desc
@@


1.13
log
@fix types for mmap wrappers.  A few whitespace cleanups snuck in.
ok guenther
@
text
@/*	$OpenBSD: archdep.h,v 1.12 2015/12/06 23:36:12 guenther Exp $ */

/*
 * Copyright (c) 1998 Per Fogelstrom, Opsycon AB
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#ifndef _SPARC_ARCHDEP_H_
#define _SPARC_ARCHDEP_H_

#define	RELOC_TAG	DT_RELA

#define	DL_MALLOC_ALIGN	8	/* Arch constraint or otherwise */

#define	MACHID	EM_SPARC	/* ELF e_machine ID value checked */

#define	RELTYPE	Elf32_Rela
#define	RELSIZE	sizeof(Elf32_Rela)

#include <elf_abi.h>
#include <machine/exec.h>
#include <machine/reloc.h>
#include <sys/syscall.h>
#include "syscall.h"
#include "util.h"

static inline void *
_dl_mmap(void *addr, size_t len, int prot, int flags, int fd, off_t offset)
{
	return((void *)_dl__syscall((quad_t)SYS_mmap, addr, len, prot,
	    flags, fd, 0, offset));
}

static inline void
RELOC_DYN(Elf_RelA *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
{
	if (ELF_R_TYPE(r->r_info) == R_TYPE(NONE)) {
	} else if (ELF_R_TYPE(r->r_info) == R_TYPE(RELATIVE)) {
		*p = v + r->r_addend;
	} else {
		/* XXX - printf might not work here, but we give it a shot. */
		_dl_printf("Unknown bootstrap relocation.\n");
		_dl_exit(6);
	}
}

/*
 * this is not necessary for sparc, but can be used as a hook
 * to insert the mul,umul,... optimization for newer sparcs.
 */
#define RELOC_GOT(obj, offs) _dl_mul_fixup()
void _dl_mul_fixup(void);

#define GOT_PERMS PROT_READ

#endif /* _SPARC_ARCHDEP_H_ */
@


1.12
log
@Simplify the relocation code for the ld.so bootstrap and static pie: track
just the dynamic tags are needed instead of reusing the generic elf_object_t
structure.

testing and feedback from miod@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.11 2015/07/03 11:15:55 miod Exp $ */
d49 1
a49 2
_dl_mmap(void *addr, unsigned int len, unsigned int prot,
	unsigned int flags, int fd, off_t offset)
d52 1
a52 1
		flags, fd, 0, offset));
@


1.11
log
@Correctly handle relative-type relocations; very old ld.so bug which got
fixed everywhere but on sparc for some unknown reason (and did not cause
any havoc in real life).
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.10 2014/11/03 17:50:56 guenther Exp $ */
d32 2
d57 1
a57 9
RELOC_REL(Elf_Rel *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
{
	/* SPARC does not use REL type relocations */
	_dl_exit(20);
}

static inline void
RELOC_RELA(Elf_RelA *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v,
    Elf_Addr *pltgot)
@


1.10
log
@Eliminate RTLD_PROTECT_PLT: ld.so is built with -Bsymbolic so the
PLT is empty/unused.  On at least macppc and sparc64, ld.so's attempt
to mprotect its PLT could instead hit its own allocated data and
cause a segfault shortly there after.

While here, take a shot at preventing the same issue with the GOT
by checking for __got_start != __got_end.

reproduction *with ktracing* by afresh1@@ provided the key data
ok miod@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.9 2010/01/02 12:16:35 kettenis Exp $ */
d67 1
a67 1
		*p += v + r->r_addend;
@


1.9
log
@Fix handling of hppa RELOC_IPLT relocations during 'bootstrap relocation'.

ok miod@@, deraadt@@, jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.8 2004/05/24 20:16:12 drahn Exp $ */
a44 2

#define RTLD_PROTECT_PLT
@


1.8
log
@Change define used to deal with PLT protection, use postive logic not negative.
ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.7 2003/06/09 16:10:04 deraadt Exp $ */
d64 2
a65 1
RELOC_RELA(Elf_RelA *r, const Elf_Sym *s, Elf_Addr *p, unsigned long v)
@


1.7
log
@pefo 3/4 licence cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.6 2003/02/15 22:43:06 drahn Exp $ */
d45 2
@


1.6
log
@After relocation is completed, remove write protection from GOT/PLT in ld.so.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.5 2002/11/23 19:14:25 drahn Exp $ */
a13 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed under OpenBSD by
 *	Per Fogelstrom, Opsycon AB, Sweden.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.5
log
@Implement [u]mul/[u]div/[u]rem with faster version if available
on machine. Improves speed for dynamic userland processes when active.
Idea from Theo. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.4 2002/10/25 10:39:52 pefo Exp $ */
d87 1
@


1.4
log
@Some small fixes in MI code for mips backport. A new reloc md function,
RELOC_GOT, was added to handle mips got bootstrap reloc.

Also remove workaround used on previous versions of binutils for mips.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.3 2002/08/12 01:05:23 drahn Exp $ */
d80 7
a86 1
#define RELOC_GOT(obj, offs)
@


1.3
log
@Add support for REL type relocations, all currently supported arch
use only RELA type relocations, but that could change. ok art@@
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.2 2002/07/27 15:36:53 art Exp $ */
d79 2
@


1.2
log
@Make self-relocation work.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.1 2002/07/27 13:19:26 art Exp $ */
d58 7
@


1.1
log
@Just a skeleton for sparc. Builds, but pieces are missing and it doesn't
even get to dl_boot_bind correctly.
@
text
@d1 1
a1 1
/*	$OpenBSD: archdep.h,v 1.9 2002/07/12 20:18:30 drahn Exp $ */
d35 2
a36 2
#ifndef _SPARC64_ARCHDEP_H_
#define _SPARC64_ARCHDEP_H_
d63 3
a65 2
	if (ELF_R_TYPE(r->r_info) == RELOC_RELATIVE) {
		*p = v + r->r_addend;
d73 1
a73 1
#endif /* _SPARC64_ARCHDEP_H_ */
@

