head	1.8;
access;
symbols
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.8
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.6
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2005.05.25.05.35.22;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2003.06.02.19.38.25;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.29.05.51.51;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.23.19.44.31;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2001.05.25.10.25.22;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	98.03.12.04.53.07;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.03.28.23.21.54;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@bye bye
@
text
@/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "telnetd.h"

/* RCSID("$KTH: authenc.c,v 1.10 2000/11/15 23:20:43 assar Exp $"); */

int
telnet_net_write(unsigned char *str, int len)
{
    if (nfrontp + len < netobuf + BUFSIZ) {
	memmove(nfrontp, str, len);
	nfrontp += len;
	return(len);
    }
    return(0);
}

#ifdef AUTHENTICATION
void
net_encrypt(void)
{
#ifdef ENCRYPTION
    char *s = (nclearto > nbackp) ? nclearto : nbackp;
    if (s < nfrontp && encrypt_output) {
	(*encrypt_output)((unsigned char *)s, nfrontp - s);
    }
    nclearto = nfrontp;
#endif
}

int
telnet_spin(void)
{
    return ttloop();
}

char *
telnet_getenv(const char *val)
{
    return(getenv(val));
}

char *
telnet_gets(char *prompt, char *result, int length, int echo)
{
    return NULL;
}
#endif
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@@


1.6
log
@We need telnet_net_write() even when AUTHENTICATION is not defined.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@Replace our telnetd with the one from heimdal-0.3f, with the following changes:
- obvious buildsystem tweakes
- our way to filter out bad environment variables
@
text
@a37 2
#ifdef AUTHENTICATION

d49 1
@


1.4
log
@KerberosV support from Heimdal.
@
text
@a0 3
/*	$OpenBSD: authenc.c,v 1.3 1998/03/12 04:53:07 art Exp $	*/
/*	$NetBSD: authenc.c,v 1.3 1996/02/28 20:38:08 thorpej Exp $	*/

d34 3
a36 8
#ifndef lint
#if 0
static char sccsid[] = "@@(#)authenc.c	8.2 (Berkeley) 5/30/95";
static char rcsid[] = "$NetBSD: authenc.c,v 1.3 1996/02/28 20:38:08 thorpej Exp $";
#else
static char rcsid[] = "$OpenBSD: authenc.c,v 1.3 1998/03/12 04:53:07 art Exp $";
#endif
#endif /* not lint */
d38 1
a38 3
#if	defined(AUTHENTICATION)
#include "telnetd.h"
#include <libtelnet/misc.h>
d40 2
a41 4
	int
telnet_net_write(str, len)
	unsigned char *str;
	int len;
d43 6
a48 6
	if (nfrontp + len < netobuf + BUFSIZ) {
		memmove((void *)nfrontp, (void *)str, len);
		nfrontp += len;
		return(len);
	}
	return(0);
d51 2
a52 2
	void
net_encrypt()
d55 5
a59 5
	char *s = (nclearto > nbackp) ? nclearto : nbackp;
	if (s < nfrontp && encrypt_output) {
		(*encrypt_output)((unsigned char *)s, nfrontp - s);
	}
	nclearto = nfrontp;
d63 2
a64 2
	int
telnet_spin()
d66 1
a66 2
	ttloop();
	return(0);
d69 2
a70 3
	char *
telnet_getenv(val)
	const char *val;
d72 1
a72 2
	extern char *getenv(const char *);
	return(getenv(val));
d75 2
a76 6
	char *
telnet_gets(prompt, result, length, echo)
	char *prompt;
	char *result;
	int length;
	int echo;
d78 1
a78 1
	return NULL;
d80 1
a80 1
#endif	/* defined(AUTHENTICATION) */
@


1.3
log
@Encryption from kth-krb 0.9.8 (only for those with kerberos)
@
text
@d1 1
a1 1
/*	$OpenBSD: authenc.c,v 1.2 1996/03/28 23:21:54 niklas Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: authenc.c,v 1.2 1996/03/28 23:21:54 niklas Exp $";
d51 1
a51 1
net_write(str, len)
d84 1
a84 1
	char *val;
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD$";
d66 7
d86 1
a86 1
	extern char *getenv();
d97 1
a97 1
	return((char *)0);
@


1.1
log
@Initial revision
@
text
@d1 3
d38 6
a43 2
/* from: static char sccsid[] = "@@(#)authenc.c	8.1 (Berkeley) 6/4/93"; */
static char *rcsid = "$Id: authenc.c,v 1.1 1994/02/25 03:20:42 cgd Exp $";
d56 1
a56 1
		bcopy((void *)str, (void *)nfrontp, len);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

