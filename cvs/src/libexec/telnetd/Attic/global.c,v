head	1.13;
access;
symbols
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2005.05.25.05.35.22;	author deraadt;	state dead;
branches;
next	1.12;

1.12
date	2005.04.22.22.48.48;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.21.00.19.54;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.19.38.25;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.14.17.41.55;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.07.23.01.44;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.25.15.42.09;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.19.16.02.19;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.23.19.44.32;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	98.06.23.22.40.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.03.12.04.53.11;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.03.28.23.21.57;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.24;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@bye bye
@
text
@/*
 * Copyright (c) 1989, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* a *lot* of ugly global definitions that really should be removed...
 */

#include "telnetd.h"

/* RCSID("$KTH: global.c,v 1.12 1997/05/11 06:29:59 assar Exp $"); */

/*
 * Telnet server variable declarations
 */
char	options[256];
char	do_dont_resp[256];
char	will_wont_resp[256];
int	linemode;	/* linemode on/off */
int	flowmode;	/* current flow control state */
int	restartany;	/* restart output on any character state */
#ifdef DIAGNOSTICS
int	diagnostic;	/* telnet diagnostic capabilities */
#endif /* DIAGNOSTICS */

slcfun	slctab[NSLC + 1];	/* slc mapping table */

char	terminaltype[41];

/*
 * I/O data buffers, pointers, and counters.
 */
char	ptyobuf[BUFSIZ+NETSLOP], *pfrontp, *pbackp;

char	netibuf[BUFSIZ], *netip;

char	netobuf[BUFSIZ+NETSLOP], *nfrontp, *nbackp;
char	*neturg;		/* one past last bye of urgent data */

int	pcc, ncc;

int	ourpty, net;
int	SYNCHing;		/* we are in TELNET SYNCH mode */

/*
 * The following are some clocks used to decide how to interpret
 * the relationship between various variables.
 */

struct clocks_t clocks;


/* whether to log unauthenticated login attempts */
int log_unauth;

/* do not print warning if connection is not encrypted */
int no_warn;

/*
 * This function appends data to nfrontp and advances nfrontp.
 */

int
output_data (const char *format, ...)
{
  va_list args;
  size_t remaining;
  int n;

  va_start(args, format);
  remaining = BUFSIZ - (nfrontp - netobuf);
  if (remaining == 0) {
    va_end(args);
    return remaining;
  }
  if ((n = vsnprintf(nfrontp, remaining, format, args)) >= remaining || n < 0)
    n = strlen(nfrontp);
  nfrontp += n;
  va_end(args);
  return n;
}
@


1.12
log
@oops, forgot a va_end; spotted by andrushock@@korovino.net
@
text
@@


1.11
log
@bail out early, skip snprintf, if buflen is 0; ok cloder
@
text
@d96 2
a97 1
  if (remaining == 0)
d99 1
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d96 2
@


1.9
log
@Change terminalname from a pointer to an array.  Why people hide
the actual storage array as a static inside a function is beyond
me.  By exposing the real array we can use sizeof on it for strlcpy.
deraadt@@ OK
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@Kill '-a otp' flag.  Our login(5) doesn't support this option and on OpenBSD
you should use login.conf(5) for this kind of thing.  Closes PR 2967.
@
text
@d56 1
a56 1
char	*terminaltype;
@


1.7
log
@Check snprintf() rval for < 0; OK deraadt@@
@
text
@a52 1
int	require_otp;
@


1.6
log
@vsnprintf() can return a value larger than the buffer size.  from assar
@
text
@d96 2
a97 1
  size_t remaining, ret;
d101 3
a103 5
  ret = vsnprintf (nfrontp,
		   remaining,
		   format,
		   args);
  nfrontp += ((ret < remaining - 1) ? ret : remaining - 1);
d105 1
a105 1
  return ret;
@


1.5
log
@Replace our telnetd with the one from heimdal-0.3f, with the following changes:
- obvious buildsystem tweakes
- our way to filter out bad environment variables
@
text
@d104 1
a104 1
  nfrontp += ret;
@


1.4
log
@Fix snprintf return value usage.
@
text
@a0 3
/*	$OpenBSD: global.c,v 1.3 1998/03/12 04:53:11 art Exp $	*/
/*	$NetBSD: global.c,v 1.6 1996/02/28 20:38:14 thorpej Exp $	*/

d34 39
a72 8
#ifndef lint
#if 0
static char sccsid[] = "@@(#)global.c	8.1 (Berkeley) 6/4/93";
static char rcsid[] = "$NetBSD: global.c,v 1.6 1996/02/28 20:38:14 thorpej Exp $";
#else
static char rcsid[] = "$OpenBSD: global.c,v 1.3 1998/03/12 04:53:11 art Exp $";
#endif
#endif /* not lint */
d75 2
a76 5
 * Allocate global variables.  We do this
 * by including the header file that defines
 * them all as externs, but first we define
 * the keyword "extern" to be nothing, so that
 * we will actually allocate the space.
d79 12
a90 4
#include <stdarg.h>
#include <defs.h>
#define extern
#include <ext.h>
d101 3
a103 5
                   remaining,
                   format,
                   args);
  if (ret >= remaining)
	ret = remaining - 1;
@


1.3
log
@Encryption from kth-krb 0.9.8 (only for those with kerberos)
@
text
@d1 1
a1 1
/*	$OpenBSD: global.c,v 1.2 1996/03/28 23:21:57 niklas Exp $	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD: global.c,v 1.2 1996/03/28 23:21:57 niklas Exp $";
d71 2
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 1
a42 1
static char rcsid[] = "$OpenBSD$";
d54 1
d58 17
@


1.1
log
@Initial revision
@
text
@d1 3
d38 6
a43 2
/* from: static char sccsid[] = "@@(#)global.c	8.1 (Berkeley) 6/4/93"; */
static char *rcsid = "$Id: global.c,v 1.3 1994/02/25 03:20:49 cgd Exp $";
d54 1
a54 1
#include "defs.h"
d56 1
a56 1
#include "ext.h"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

