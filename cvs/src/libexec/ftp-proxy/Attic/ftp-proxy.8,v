head	1.44;
access;
symbols
	OPENBSD_3_8:1.42.0.4
	OPENBSD_3_8_BASE:1.42
	OPENBSD_3_7:1.42.0.2
	OPENBSD_3_7_BASE:1.42
	OPENBSD_3_6:1.41.0.2
	OPENBSD_3_6_BASE:1.41
	OPENBSD_3_5:1.40.0.2
	OPENBSD_3_5_BASE:1.40
	OPENBSD_3_4:1.37.0.2
	OPENBSD_3_4_BASE:1.37
	OPENBSD_3_3:1.34.0.2
	OPENBSD_3_3_BASE:1.34
	OPENBSD_3_2:1.21.0.2
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7;
locks; strict;
comment	@.\" @;


1.44
date	2005.11.24.17.12.50;	author deraadt;	state dead;
branches;
next	1.43;

1.43
date	2005.09.23.14.37.57;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2004.11.19.00.47.23;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2004.07.06.19.49.11;	author dhartmei;	state Exp;
branches;
next	1.40;

1.40
date	2004.03.16.08.50.07;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2004.02.24.20.39.30;	author millert;	state Exp;
branches;
next	1.38;

1.38
date	2004.01.22.16.10.30;	author beck;	state Exp;
branches;
next	1.37;

1.37
date	2003.09.05.12.27.47;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2003.09.05.06.29.18;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2003.05.10.20.48.31;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2003.03.20.01.34.48;	author david;	state Exp;
branches;
next	1.33;

1.33
date	2003.03.06.20.19.52;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2003.03.06.04.07.37;	author david;	state Exp;
branches;
next	1.31;

1.31
date	2003.02.26.15.05.07;	author david;	state Exp;
branches;
next	1.30;

1.30
date	2003.01.31.21.54.40;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2002.12.21.21.13.43;	author henning;	state Exp;
branches;
next	1.28;

1.28
date	2002.12.19.01.27.56;	author deraadt;	state Exp;
branches;
next	1.27;

1.27
date	2002.12.01.17.05.06;	author henning;	state Exp;
branches;
next	1.26;

1.26
date	2002.11.27.19.43.46;	author henning;	state Exp;
branches;
next	1.25;

1.25
date	2002.11.27.16.57.39;	author henning;	state Exp;
branches;
next	1.24;

1.24
date	2002.10.11.20.32.10;	author dhartmei;	state Exp;
branches;
next	1.23;

1.23
date	2002.10.04.09.37.19;	author henning;	state Exp;
branches;
next	1.22;

1.22
date	2002.10.04.02.47.28;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2002.07.24.03.22.42;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2002.06.17.00.21.28;	author pvalchev;	state Exp;
branches;
next	1.19;

1.19
date	2002.06.16.19.34.42;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.08.23.49.35;	author beck;	state Exp;
branches;
next	1.17;

1.17
date	2002.05.23.10.22.14;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2002.05.19.22.51.32;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.03.27.08.56.07;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.01.06.19.19;	author itojun;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.06.00.27.29;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.12.06.00.26.32;	author beck;	state Exp;
branches;
next	1.11;

1.11
date	2001.12.06.00.22.45;	author beck;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.05.23.47.12;	author dhartmei;	state Exp;
branches;
next	1.9;

1.9
date	2001.12.05.23.37.39;	author dhartmei;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.03.19.40.28;	author dhartmei;	state Exp;
branches;
next	1.7;

1.7
date	2001.09.05.20.40.10;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.22.17.22.00;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.22.15.17.28;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.22.05.41.03;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.22.05.28.15;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.19.13.43.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.19.04.11.11;	author beck;	state Exp;
branches;
next	;


desc
@@


1.44
log
@code is not being used; toss into Attic
@
text
@.\"	$OpenBSD: ftp-proxy.8,v 1.43 2005/09/23 14:37:57 jmc Exp $
.\"
.\" Copyright (c) 1996-2001
.\"	Obtuse Systems Corporation, All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY OBTUSE SYSTEMS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL OBTUSE OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd August 17, 2001
.Dt FTP-PROXY 8
.Os
.Sh NAME
.Nm ftp-proxy
.Nd Internet File Transfer Protocol proxy server
.Sh SYNOPSIS
.Nm ftp-proxy
.Bk -words
.Op Fl AnrVw
.Op Fl a Ar address
.Op Fl D Ar debuglevel
.Op Fl g Ar group
.Op Fl M Ar maxport
.Op Fl m Ar minport
.Op Fl R Ar address[:port]
.Op Fl S Ar address
.Op Fl t Ar timeout
.Op Fl u Ar user
.Ek
.Sh DESCRIPTION
.Nm
is a proxy for the Internet File Transfer Protocol.
The proxy uses
.Xr pf 4
and expects to have the FTP control connection as described in
.Xr services 5
redirected to it via a
.Xr pf 4
.Em rdr
command.
An example of how to do that is further down in this document.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A
Permit only anonymous FTP connections.
The proxy will allow connections to log in to other sites as the user
.Qq ftp
or
.Qq anonymous
only.
Any attempt to log in as another user will be blocked by the proxy.
.It Fl a Ar address
Specify the local IP address to use in
.Xr bind 2
as the source for connections made by
.Nm ftp-proxy
when connecting to destination FTP servers.
This may be necessary if the interface address of
your default route is not reachable from the destinations
.Nm
is attempting connections to, or this address is different from the one
connections are being NATed to.
In the usual case this means that
.Ar address
should be a publicly visible IP address assigned to one of
the interfaces on the machine running
.Nm
and should be the same address to which you are translating traffic
if you are using the
.Fl n
option.
.It Fl D Ar debuglevel
Specify a debug level, where the proxy emits verbose debug output
into
.Xr syslogd 8
at level
.Dv LOG_DEBUG .
Meaningful values of debuglevel are 0-3, where 0 is no debug output and
3 is lots of debug output, the default being 0.
.It Fl g Ar group
Specify the named group to drop group privileges to, after doing
.Xr pf 4
lookups which require root.
By default,
.Nm
uses the default group of the user it drops privilege to.
.It Fl M Ar maxport
Specify the upper end of the port range the proxy will use for the
data connections it establishes.
The default is
.Dv IPPORT_HILASTAUTO
defined in
.Aq Pa netinet/in.h
as 65535.
.It Fl m Ar minport
Specify the lower end of the port range the proxy will use for all
data connections it establishes.
The default is
.Dv IPPORT_HIFIRSTAUTO
defined in
.Aq Pa netinet/in.h
as 49152.
.It Fl n
Activate network address translation
.Pq NAT
mode.
In this mode, the proxy will not attempt to proxy passive mode
.Pq PASV or EPSV
data connections.
In order for this to work, the machine running the proxy will need to
be forwarding packets and doing network address translation to allow
the outbound passive connections from the client to reach the server.
See
.Xr pf.conf 5
for more details on NAT.
The proxy only ignores passive mode data connections when using this flag;
it will still proxy PORT and EPRT mode data connections.
Without this flag,
.Nm
does not require any IP forwarding or NAT beyond the
.Em rdr
necessary to capture the FTP control connection.
.It Fl R Ar address:[port]
Reverse proxy mode for FTP servers running behind a NAT gateway.
In this mode, no redirection is needed.
The proxy is run from
.Xr inetd 8
on the port that external clients connect to (usually 21).
Control connections and passive data connections are forwarded
to the server.
.It Fl r
Use reverse host
.Pq reverse DNS
lookups for logging and libwrap use.
By default,
the proxy does not look up hostnames for libwrap or logging purposes.
.It Fl S Ar address
Source address to use for data connections made by the proxy.
Useful when there are multiple addresses (aliases) available
to the proxy.
Clients may expect data connections to have the same source
address as the control connections, and reject or drop other
connections.
.It Fl t Ar timeout
Specifies a timeout, in seconds.
The proxy will exit and close open connections if it sees no data
for the duration of the timeout.
The default is 0, which means the proxy will not time out.
.It Fl u Ar user
Specify the named user to drop privilege to, after doing
.Xr pf 4
lookups which require root privilege.
By default,
.Nm
drops privilege to the user
.Em proxy .
.Pp
Running as root means that the source of data connections the proxy makes
for PORT and EPRT will be the RFC mandated port 20.
When running as a non-root user, the source of the data connections from
.Nm
will be chosen randomly from the range
.Ar minport
to
.Ar maxport
as described above.
.It Fl V
Be verbose.
With this option the proxy logs the control commands
sent by clients and the replies sent by the servers to
.Xr syslogd 8 .
.It Fl w
Use the tcp wrapper access control library
.Xr hosts_access 3 ,
allowing connections to be allowed or denied based on the tcp wrapper's
.Xr hosts.allow 5
and
.Xr hosts.deny 5
files.
The proxy does libwrap operations after determining the destination
of the captured control connection, so that tcp wrapper rules may
be written based on the destination as well as the source of FTP connections.
.El
.Pp
.Nm ftp-proxy
is run from
.Xr inetd 8
and requires that FTP connections are redirected to it using a
.Em rdr
rule.
A typical way to do this would be to use a
.Xr pf.conf 5
rule such as
.Bd -literal -offset 2n
int_if = \&"xl0\&"
rdr pass on $int_if proto tcp from any to any port 21 -> 127.0.0.1 \e
	port 8021
.Ed
.Pp
.Xr inetd 8
must then be configured to run
.Nm
on the port from above using
.Bd -literal -offset 2n
127.0.0.1:8021 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
.Ed
.Pp
in
.Xr inetd.conf 5 .
.Pp
.Nm
accepts the redirected control connections and forwards them
to the server.
The proxy replaces the address and port number that the client
sends through the control connection to the server with its own
address and proxy port, where it listens for the data connection.
When the server opens the data connection back to this port, the
proxy forwards it to the client.
The
.Xr pf.conf 5
rules need to let pass connections to these proxy ports
(see options
.Fl u , m ,
and
.Fl M
above) in on the external interface.
The following example allows only ports 49152 to 65535 to pass in
statefully:
.Bd -literal -offset indent
block in on $ext_if proto tcp all
pass  in on $ext_if inet proto tcp from any to $ext_if \e
    port > 49151 keep state
.Ed
.Pp
Alternatively, rules can make use of the fact that by default,
.Nm
runs as user
.Qq proxy
to allow the backchannel connections, as in the following example:
.Bd -literal -offset indent
block in on $ext_if proto tcp all
pass  in on $ext_if inet proto tcp from any to $ext_if \e
    user proxy keep state
.Ed
.Pp
These examples do not cover the connections from the proxy to the
foreign FTP server.
If one does not pass outgoing connections by default additional rules
are needed.
.Sh SEE ALSO
.Xr ftp 1 ,
.Xr pf 4 ,
.Xr hosts.allow 5 ,
.Xr hosts.deny 5 ,
.Xr inetd.conf 5 ,
.Xr pf.conf 5 ,
.Xr inetd 8 ,
.Xr pfctl 8 ,
.Xr syslogd 8
.Sh BUGS
Extended Passive mode
.Pq EPSV
is not supported by the proxy and will not work unless the proxy is run
in network address translation mode.
When not in network address translation mode, the proxy returns an error
to the client, hopefully forcing the client to revert to passive mode
.Pq PASV
which is supported.
EPSV will work in network address translation mode, assuming a
.Xr pf.conf 5
setup which allows the EPSV connections through to their destinations.
.Pp
IPv6 is not yet supported.
@


1.43
log
@avoid a nasty line split;
ok deraadt@@ ian@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.42 2004/11/19 00:47:23 jmc Exp $
@


1.42
log
@options sort and sync usage();
from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.41 2004/07/06 19:49:11 dhartmei Exp $
d217 2
a218 1
rdr pass on $int_if proto tcp from any to any port 21 -> 127.0.0.1 port 8021
@


1.41
log
@The 'reverse ftp-proxy' mode adds a command line option -R to
ftp-proxy which proxies connection from external ftp clients to
an internal ftp server, supporting client passive mode (where
server listens on a random port for data connections, and the
client connects to the server for data connections).

This is the reverse mode to normal operation, where ftp-proxy
proxies connections from local clients to external servers,
supporting client active mode.

ok beck@@, henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.40 2004/03/16 08:50:07 jmc Exp $
d38 1
d49 1
a143 6
.It Fl r
Use reverse host
.Pq reverse DNS
lookups for logging and libwrap use.
By default,
the proxy does not look up hostnames for libwrap or logging purposes.
d152 6
@


1.40
log
@typos from Andrey Matveev;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.39 2004/02/24 20:39:30 millert Exp $
d44 2
d148 15
@


1.39
log
@Make example "rdr pass" not just "rdr"; OK beck@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.38 2004/01/22 16:10:30 beck Exp $
d197 1
a197 1
int_if = xl0
@


1.38
log
@Add a -a address option to set the address which the proxy will use
to bind the local end of outgoing connections, and some man page
cleanup. Based on diff provided in pr 3538 by Karl O. Pinc <kop@@meme.com>
Closes pr 3538. ok dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.37 2003/09/05 12:27:47 jmc Exp $
d198 1
a198 1
rdr on $int_if proto tcp from any to any port 21 -> 127.0.0.1 port 8021
@


1.37
log
@macro cleanup and some typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.36 2003/09/05 06:29:18 jmc Exp $
d39 1
d42 1
a43 1
.Op Fl M Ar maxport
d69 20
d104 8
a119 8
.It Fl M Ar maxport
Specify the upper end of the port range the proxy will use for the
data connections it establishes.
The default is
.Dv IPPORT_HILASTAUTO
defined in
.Aq Pa netinet/in.h
as 65535.
@


1.36
log
@typo from naddy@@;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.35 2003/05/10 20:48:31 jmc Exp $
d35 1
a35 2
.Nd
Internet File Transfer Protocol proxy server.
d63 4
a66 1
"ftp" or "anonymous" only.
d72 2
a73 1
at level LOG_DEBUG.
d80 2
a81 2
By default
.Nm ftp-proxy
d87 3
a89 2
.Ev IPPORT_HIFIRSTAUTO
defined in <netinet/in.h>
d95 3
a97 2
.Ev IPPORT_HILASTAUTO
defined in <netinet/in.h>
d100 3
a102 1
Activate network address translation mode.
d104 2
a105 1
(PASV or EPSV) data connections.
d111 2
a112 2
for more details on nat.
The proxy only ignores passive mode data connections when using this flag,
d115 1
a115 1
.Nm ftp-proxy
d120 5
a124 3
Use reverse host (reverse DNS) lookups for logging and libwrap use.
By default the proxy does not look up hostnames for libwrap or logging
purposes.
d134 2
a135 2
By default
.Nm ftp-proxy
d141 2
a142 2
When running as a non-root user the source of the data connections from
.Nm ftp-proxy
d144 1
a144 1
.Nm minport
d146 2
a147 2
.Nm maxport
as described below.
d152 1
a152 1
.Xr syslogd 8
d155 1
a155 1
.Xr hosts_access 3
d175 3
a177 4
.Pp
.Bd -literal
  int_if = xl0
  rdr on $int_if proto tcp from any to any port 21 -> 127.0.0.1 port 8021
d182 1
a182 1
.Nm ftp-proxy
d184 3
a186 2
.Pp
  127.0.0.1:8021 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
d191 1
a191 1
.Nm ftp-proxy
d202 5
a206 1
(see options -u, -m and -M above) in on the external interface.
d209 4
a212 4
.Bd -literal
  block in on $ext_if proto tcp all
  pass  in on $ext_if inet proto tcp from any to $ext_if \\
      port > 49151 keep state
d216 8
a223 7
.Nm ftp-proxy
runs as user "proxy" to allow the backchannel connections, as in the
following example:
.Bd -literal
  block in on $ext_if proto tcp all
  pass  in on $ext_if inet proto tcp from any to $ext_if \\
      user proxy keep state
d227 1
a227 1
foreign ftp server.
d241 4
a244 2
Extended Passive mode (EPSV) is not supported by the proxy and will
not work unless the proxy is run in network address translation mode.
d246 2
a247 1
to the client, hopefully forcing the client to revert to Passive mode (PASV)
@


1.35
log
@removed unnecessary punctuation from SEE ALSO;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.34 2003/03/20 01:34:48 david Exp $
d185 1
a185 1
sends through the control connection to the server with his own
@


1.34
log
@cmdline options in alphabetical order in usage() and manpage
and make sure they are consistent

ok dhartmei@@ henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.33 2003/03/06 20:19:52 jmc Exp $
d224 1
a224 1
.Xr syslogd 8 .
@


1.33
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.32 2003/03/06 04:07:37 david Exp $
d39 1
a39 1
.Op Fl AnVwr
d66 8
a73 1
.It Fl g Ar groupname
d80 41
a120 1
.It Fl u Ar username
a137 17
.It Fl n
Activate network address translation mode.
In this mode, the proxy will not attempt to proxy passive mode
(PASV or EPSV) data connections.
In order for this to work, the machine running the proxy will need to
be forwarding packets and doing network address translation to allow
the outbound passive connections from the client to reach the server.
See
.Xr pf.conf 5
for more details on nat.
The proxy only ignores passive mode data connections when using this flag,
it will still proxy PORT and EPRT mode data connections.
Without this flag,
.Nm ftp-proxy
does not require any IP forwarding or NAT beyond the
.Em rdr
necessary to capture the FTP control connection.
a153 30
.It Fl r
Use reverse host (reverse DNS) lookups for logging and libwrap use.
By default the proxy does not look up hostnames for libwrap or logging
purposes.
.It Fl m Ar minport
Specify the lower end of the port range the proxy will use for all
data connections it establishes.
The default is
.Ev IPPORT_HIFIRSTAUTO
defined in <netinet/in.h>
as 49152.
.It Fl M Ar maxport
Specify the upper end of the port range the proxy will use for the
data connections it establishes.
The default is
.Ev IPPORT_HILASTAUTO
defined in <netinet/in.h>
as 65535.
.It Fl t Ar timeout
Specifies a timeout, in seconds.
The proxy will exit and close open connections if it sees no data
for the duration of the timeout.
The default is 0, which means the proxy will not time out.
.It Fl D Ar debuglevel
Specify a debug level, where the proxy emits verbose debug output
into
.Xr syslogd 8
at level LOG_DEBUG.
Meaningful values of debuglevel are 0-3, where 0 is no debug output and
3 is lots of debug output, the default being 0.
@


1.32
log
@date should be written formally: .Dd Month day, year
ok henning@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.31 2003/02/26 15:05:07 david Exp $
d112 1
a112 1
.Xr syslog 8
d150 1
a150 1
.Xr syslog 8
@


1.31
log
@start new sentence on a new line
ok mpech@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.30 2003/01/31 21:54:40 jmc Exp $
d30 1
a30 1
.Dd Aug 17, 2001
@


1.30
log
@typos;
eeprom(8): added .Ar to fields, removed references to sun3
sshd(8): help and ok markus@@

help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.29 2002/12/21 21:13:43 henning Exp $
d203 2
a204 1
runs as user "proxy" to allow the backchannel connections, as in the following example:
d212 3
a214 2
foreign ftp server. If one does not pass outgoing connections by default
additional rules are needed.
@


1.29
log
@better example rules from David Krause, Thanks!

ok dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.28 2002/12/19 01:27:56 deraadt Exp $
d111 1
a111 1
sent by clients and the replies send by the servers to
@


1.28
log
@missing .Pp
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.27 2002/12/01 17:05:06 henning Exp $
d197 1
a197 1
  pass  in on $ext_if proto tcp from any to $ext_if \\
d206 2
a207 1
  pass  in on $ext_if proto tcp from any to $ext_if user proxy keep state
@


1.27
log
@typo; David Krause
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.26 2002/11/27 19:43:46 henning Exp $
d208 1
@


1.26
log
@I fucked up. The manpage was correct before my last commit.
noticed by Daniel.

To unconfuse it a bit, add a little clarification.

ok dhartmei@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.25 2002/11/27 16:57:39 henning Exp $
d218 1
a218 1
.Xr inetd 8 .
@


1.25
log
@corrections and clarifications from Han Boetes <han at mijncomputer dot nl>
Thanks!
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.24 2002/10/11 20:32:10 dhartmei Exp $
d192 1
a192 1
(see options -u, -m and -M above) out on the external interface.
d196 2
a197 2
  block out on $ext_if proto tcp all
  pass  out on $ext_if proto tcp from $ext_if to any \\
d205 2
a206 2
  block out on $ext_if proto tcp all
  pass  out on $ext_if proto tcp from $ext_if to any user proxy keep state
d208 3
@


1.24
log
@Add 'proto tcp' to example rdr rule, it's required now.
Found by grange@@efnet.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.23 2002/10/04 09:37:19 henning Exp $
d162 3
a164 1
A typical way to do this would be to use a rule such as
d166 4
a169 1
rdr on xl0 proto tcp from any to any port 21 -> 127.0.0.1 port 8021 
a170 3
in
.Xr pf.conf 5
(this example assumes xl0 is the interface facing an internal network).
d176 1
a176 1
127.0.0.1:8021 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
d192 1
a192 1
(see options -u, -m and -M above) in on the external interface.
d194 1
a194 1
statefully (assuming xl1 is the external interface):
d196 3
a198 2
block in on xl1 proto tcp all
pass  in on xl1 proto tcp from any to xl1 port > 49151 keep state
d201 1
a201 1
Alternatively, rules make use of the fact that by default,
d205 2
a206 2
block in on xl1 proto tcp all
pass  in on xl1 proto tcp from any to xl1 user proxy keep state
d213 1
d215 1
d217 1
a217 1
.Xr syslogd 8
@


1.23
log
@use port 8021 in examples
inspired by a PR from rjmooney@@aboveground.cx

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.22 2002/10/04 02:47:28 deraadt Exp $
d164 1
a164 1
rdr on xl0 from any to any port 21 -> 127.0.0.1 port 8021 
@


1.22
log
@improvements; rjmooney@@aboveground.cx
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.21 2002/07/24 03:22:42 deraadt Exp $
d164 1
a164 1
rdr on xl0 from any to any port 21 -> 127.0.0.1 port 2021 
d174 1
a174 1
127.0.0.1:2021 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
@


1.21
log
@clean up docs a bit
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.20 2002/06/17 00:21:28 pvalchev Exp $
d48 1
a48 1
is a proxy for the Internet file transfer protocol.
d51 1
a51 1
and expects to have the ftp control connection as described in
d62 1
a62 1
Permit only anonymous ftp connections.
d105 1
a105 1
does not require any ip forwarding or NAT beyond the
d107 1
a107 1
necessary to capture the ftp control connection.
d123 1
a123 1
be written based on the destination as well as the source of ftp connections.
d159 1
a159 1
and requires that ftp connections are redirected to it using a
d164 1
a164 1
rdr on xl0 from any to any port 21 -> 127.0.0.1 port 8081
d174 1
a174 1
127.0.0.1:8081 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
@


1.20
log
@nat.conf(5) no longer exist, reference to pf.conf(5) instead
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.19 2002/06/16 19:34:42 miod Exp $
d53 4
a56 1
redirected to it via a pf rdr command.
d67 3
a69 2
Specify the named group to drop group privileges to, after doing pf lookups
which require root.
d74 3
a76 2
Specify the named user to drop privilege to, after doing pf lookups
which require root privilege.
d105 3
a107 2
does not require any ip forwarding or NAT beyond the rdr necessary to
capture the ftp control connection.
d144 2
a145 2
The proxy will exit and close open connections if it sees no data the
duration of the timeout.
d159 2
a160 1
and requires that ftp connections are redirected to it using an rdr
d207 1
@


1.19
log
@Some nat.conf(5) -> pf.conf(5) changes.
Some nat.conf(5) references remain in the text, since it looks better than
.Pa /etc/nat.conf and there is still a softlink.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.18 2002/06/08 23:49:35 beck Exp $
d160 1
a160 1
.Xr nat.conf 5
d212 1
a212 1
.Xr nat.conf 5
@


1.18
log
@add example using per-user pf rules to allow backchannel connections
to the proxy.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.17 2002/05/23 10:22:14 deraadt Exp $
d94 1
a94 1
.Xr nat.conf 5
a201 1
.Xr nat.conf 5 ,
@


1.17
log
@KNF during an audit; found an improperly initialized sockaddr
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.16 2002/05/19 22:51:32 millert Exp $
d189 8
@


1.16
log
@ o End a sentence with a period, not a comma; Hans-Joerg Hoexer
 o Start all sentences on a new line (me)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.15 2002/03/27 08:56:07 mpech Exp $
d64 1
a64 1
specify the named group to drop group privileges to, after doing pf lookups
d70 1
a70 1
specify the named user to drop privilege to, after doing pf lookups
d76 1
a76 1
.Pp 
d81 1
a81 1
will be chosen randomly from the range 
d123 1
a123 1
specify the lower end of the port range the proxy will use for all
d130 1
a130 1
specify the upper end of the port range the proxy will use for the
d137 1
a137 1
specifies a timeout, in seconds.
d142 1
a142 1
specify a debug level, where the proxy emits verbose debug output
@


1.15
log
@We need ftp-proxy only on loopback.

todd@@, beck@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.14 2002/02/01 06:19:19 itojun Exp $
d87 7
a93 6
Activate network address translation mode.  In this mode, the proxy
will not attempt to proxy passive mode (PASV or EPSV) data
connections, In order for this to work, the machine running the proxy
will need to be forwarding packets and doing network address
translation to allow the outbound passive connections from the client
to reach the server.  See
@


1.14
log
@missing period
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.13 2001/12/06 00:27:29 deraadt Exp $
d166 1
a166 1
8081 stream tcp nowait root /usr/libexec/ftp-proxy ftp-proxy
@


1.13
log
@use .Nm more
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.12 2001/12/06 00:26:32 beck Exp $
d118 1
a118 1
Use reverse host (reverse DNS) lookups for logging and libwrap use
@


1.12
log
@don't use "you" in a man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.11 2001/12/06 00:22:45 beck Exp $
d149 2
a150 1
ftp-proxy is run from
d162 3
a164 2
must then be configured to run ftp-proxy on the port from above
using
d171 2
a172 1
ftp-proxy accepts the redirected control connections and forwards them
@


1.11
log
@*** empty log message ***
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.10 2001/12/05 23:47:12 dhartmei Exp $
d157 1
a157 1
In
d159 1
a159 2
(this assumes you are on a gateway where xl0 would be your inside interface).
You would then need to configure
d161 1
a161 1
to run ftp-proxy on the port from above
@


1.10
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.9 2001/12/05 23:37:39 dhartmei Exp $
d87 6
a92 6
Activate network address translation mode.
In this mode, the proxy will not attempt to proxy passive mode (PASV or EPSV)
data connections, for this to work on a gateway you will need to be forwarding
packets and doing network address translation to allow the outbound passive
connections from the client to reach the server.
See
@


1.9
log
@Explain that filter rules need to let pass connections to the proxy ports
in, why this is so, and how it's done.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.8 2001/12/03 19:40:28 dhartmei Exp $
d181 1
a181 1
The following example allows only port 49152 to 65535 to pass in
d185 1
a185 1
pass  in on xl1 proto tcp from any to xl0 port > 49151 keep state
@


1.8
log
@Remove the last line, pf does support IPv6 now.
From Dries Schellekens. Closes PR 2221.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.7 2001/09/05 20:40:10 beck Exp $
d169 18
d192 1
@


1.7
log
@-Make ftp-proxy drop privs to user "proxy" by default.
   *WARNING* this means that it will die when it can't find user proxy
   if you are not running with a passwd database generated from current
- Speling cleanup and missing va_end() noticed by  <d.doroshenko@@omnitel.net>
- fix logging of getpwnam|getgrnam failures.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.6 2001/08/22 17:22:00 beck Exp $
a186 2
This will have to wait for corresponding support from
.Xr pf 4 .
@


1.6
log
@oops
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.5 2001/08/22 15:17:28 beck Exp $
d64 1
a64 1
specify the named group to drop group priviledges to, after doing pf lookups
d68 1
a68 1
uses the default group of the user it drops priviledge to.
d70 2
a71 2
specify the named user to drop priviledge to, after doing pf lookups
which require root priviledge.
d74 2
a75 1
does not drop priviledge and runs as root.
@


1.5
log
@Fixes for my worst abuses of nroff from mpech@@
Add a sentence at the start for espie in dumb user mode :)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.4 2001/08/22 05:41:03 beck Exp $
d170 2
a171 2
.Xr host.allow 5 ,
.Xr host.deny 5 ,
@


1.4
log
@Duh.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.3 2001/08/22 05:28:15 beck Exp $
d54 1
d59 4
a62 3
Permit only anonymous ftp connections. The proxy will allow connections
to log in to other sites as the user "ftp" or "anonymous" only. Any
attempt to log in as another user will be blocked by the proxy.
d65 2
a66 1
which require root. By default
d71 2
a72 1
which require root priviledge. By default
d77 2
a78 2
for PORT and EPRT will be the RFC mandated port 20. When
running as a non-root user the source of the data connections from
d86 6
a91 5
Activate network address translation mode. in this mode, the proxy
will not attempt to proxy passive mode (PASV or EPSV) data connections,
for this to work on a gateway you will need to be forwarding packets
and doing network address translation to allow the outbound passive
connections from the client to reach the server. See
d93 3
a95 2
for more details on nat. The proxy only ignores passive mode data connections
when using this flag, it will still proxy PORT and EPRT mode data connections.
d101 2
a102 1
Be verbose. With this option the proxy logs the control commands
d112 2
a113 1
files. The proxy does libwrap operations after determining the destination
d122 2
a123 1
data connections it establishes. The default is
d129 2
a130 1
data connections it establishes. The default is
d135 4
a138 3
specifies a timeout, in seconds. The proxy will exit
and close open connections if it sees no data the duration of
the timeout. The default is 0, which means the proxy will not time out.
d143 3
a145 2
at level LOG_DEBUG. meaningful values of debuglevel are 0-3, where 0
is no debug output and 3 is lots of debug output, the default being 0.
d151 2
a152 1
rule. A typical way to do this would be to use a rule such as
a175 1
.Pp
d180 2
a181 2
which is supported. EPSV will work in network address translation mode,
assuming a
d185 2
a186 2
IPv6 is not yet supported. This will have to wait for corresponding
support from
@


1.3
log
@-Functionify some of the main loop, so it isn't so horrificly deep and is
a bit easier to look at, for small values of easier.

-Add two options for -u user and -g group to optionally make the proxy drop
privs after doing it's pf ioctl's to find out where to go. Running as non
root does mean that the PORT and EPRT backchannels do not come from port 20,
but this isn't a problem for most sensible ftp clients and sets of packet
filter rules that aren't written by a knuckle dragging ape living in the 90's.
I would make it drop privs by default, but technically this breaks the ftp
specs, and for the upcoming stuff to deal with EPRT, we will need root privs
to manipulate rdr rules).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.2 2001/08/19 13:43:09 deraadt Exp $
a39 1
.Op Fl t Ar timeout
d41 1
d44 2
d61 1
a61 1
.It Fl g groupname
d66 1
a66 1
.It Fl u username
d112 1
a112 1
.It Fl m minport
d118 1
a118 1
.It Fl M maxport
d124 1
a124 1
.It Fl t timeout
d128 1
a128 1
.It Fl D debuglevel
@


1.2
log
@1564 lines of cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftp-proxy.8,v 1.1 2001/08/19 04:11:11 beck Exp $
d59 20
@


1.1
log
@transparent ftp proxy, based on Obtuse Systems juniper stuff with much
modernizing and cleanup. still needs looking at.

Currently supports PORT PASV EPRT data connections with only a pf rdr to
capture the control connection. (I.E. you don't need ip forwarding
or other NAT stuff). Runs from inetd.

Supports all passive (EPSV PASV) when using -n flag, where the proxy
ignores passive mode data connections (and assumes nat will get them
through).

Todo yet:
	More audit
	IpV6
	Handle EPSV in proxy (with an rdr added then removed)
	Option to Daemonize and bind only to the loopback
	More Content/Login filtering, etc. etc. and more bloat
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d47 1
a47 1
The proxy uses 
d61 1
a61 1
will not attempt to proxy passive mode (PASV or EPSV) data connections, 
d71 1
a71 1
capture the ftp control connection. 
d74 2
a75 2
sent by clients and the replies send by the servers to 
.Xr syslog 8 
d77 1
a77 1
Use the tcp wrapper access control library 
d81 1
a81 1
and  
d95 1
a95 1
as 49152
d101 1
a101 1
as 65535
d108 1
a108 1
into 
d111 1
a111 1
is no debug output and 3 is lots of debug output. the default is 0
d114 1
a114 1
ftp-proxy is run from 
d121 1
a121 1
In 
d131 2
a132 2
in 
.Xr inetd.conf 5
d144 1
a144 1
When not in network address translation mode, The proxy returns an error
d147 3
a149 3
assuming a 
.Xr nat.conf 5 
setup which allows the EPSV connections through to their destinations. 
d152 2
a153 3
support from 
.Xr pf 4
 
@

