head	1.6;
access;
symbols
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2005.11.24.17.12.51;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2005.02.24.15.49.08;	author dhartmei;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.06.19.49.11;	author dhartmei;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.23.10.22.14;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.28.19.35.04;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.19.04.11.12;	author beck;	state Exp;
branches;
next	;


desc
@@


1.6
log
@code is not being used; toss into Attic
@
text
@/*	$OpenBSD: util.h,v 1.5 2005/02/24 15:49:08 dhartmei Exp $ */

/*
 * Copyright (c) 1996-2001
 *	Obtuse Systems Corporation.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 4. Neither the name of the Obtuse Systems nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL OBTUSE SYSTEMS CORPORATION OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

struct proxy_channel {
	int pc_to_fd, pc_from_fd;
	int pc_alive;
	int pc_nextbyte;
	int pc_flags;
	int pc_length;
	int pc_size;
	struct sockaddr_in pc_from_sa, pc_to_sa;
	int (*pc_filter)( void ** databuf, int datalen);
	char *pc_buffer;
};

struct csiob {
	int fd;
	int line_buffer_size, io_buffer_size, io_buffer_len, next_byte;
	unsigned char *io_buffer, *line_buffer;
	struct sockaddr_in sa, real_sa;
	const char *who;
	char alive, got_eof, data_available;
	int send_oob_flags;
};

extern int telnet_getline(struct csiob *iobp,
    struct csiob *telnet_passthrough);

extern int get_proxy_env(int fd, struct sockaddr_in *server_sa_ptr,
    struct sockaddr_in *client_sa_ptr, struct sockaddr_in *proxy_sa_ptr);

extern int get_backchannel_socket(int type, int min_port, int max_port,
    int start_port, int direction, struct sockaddr_in *sap);

extern int xfer_data(const char *what_read, int from_fd, int to_fd,
    struct in_addr from, struct in_addr to);

extern char *ProgName;


@


1.5
log
@const correctness, string literals are const char *, no functional change
from Joerg Sonnenberger joerg(at)britannica(dot)bec(dot)de
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.4 2004/07/06 19:49:11 dhartmei Exp $ */
@


1.4
log
@The 'reverse ftp-proxy' mode adds a command line option -R to
ftp-proxy which proxies connection from external ftp clients to
an internal ftp server, supporting client passive mode (where
server listens on a random port for data connections, and the
client connects to the server for data connections).

This is the reverse mode to normal operation, where ftp-proxy
proxies connections from local clients to external servers,
supporting client active mode.

ok beck@@, henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.3 2002/05/23 10:22:14 deraadt Exp $ */
d49 1
a49 1
	char *who;
@


1.3
log
@KNF during an audit; found an improperly initialized sockaddr
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.2 2001/08/28 19:35:04 deraadt Exp $ */
d58 1
a58 1
    struct sockaddr_in *client_sa_ptr);
@


1.2
log
@oh, some cleanups etc etc
@
text
@d1 1
a1 1
/*	$OpenBSD: util.h,v 1.1 2001/08/19 04:11:12 beck Exp $ */
d23 1
a23 1
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, 
d28 1
a28 1
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF 
a29 1
 *   
d33 9
a41 9
    int pc_to_fd, pc_from_fd;
    int pc_alive;
    int pc_nextbyte;
    int pc_flags;
    int pc_length;
    int pc_size;
    struct sockaddr_in pc_from_sa, pc_to_sa;
    int (*pc_filter)( void ** databuf, int datalen);
    char *pc_buffer;
d45 7
a51 7
    int fd;
    int line_buffer_size, io_buffer_size, io_buffer_len, next_byte;
    unsigned char *io_buffer, *line_buffer;
    struct sockaddr_in sa, real_sa;
    char *who;
    char alive, got_eof, data_available;
    int send_oob_flags;
@


1.1
log
@transparent ftp proxy, based on Obtuse Systems juniper stuff with much
modernizing and cleanup. still needs looking at.

Currently supports PORT PASV EPRT data connections with only a pf rdr to
capture the control connection. (I.E. you don't need ip forwarding
or other NAT stuff). Runs from inetd.

Supports all passive (EPSV PASV) when using -n flag, where the proxy
ignores passive mode data connections (and assumes nat will get them
through).

Todo yet:
	More audit
	IpV6
	Handle EPSV in proxy (with an rdr added then removed)
	Option to Daemonize and bind only to the loopback
	More Content/Login filtering, etc. etc. and more bloat
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d64 1
a64 1
extern int xfer_data(const char *what_read, int from_fd, int to_fd, 
@

