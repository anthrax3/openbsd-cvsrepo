head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.4
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.10
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.8
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.4
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.4
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.2
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5;
locks; strict;
comment	@ * @;


1.14
date	2015.11.02.10.27.44;	author jsg;	state Exp;
branches;
next	1.13;
commitid	oYugXczRgOhXq8hY;

1.13
date	2015.06.11.18.49.09;	author reyk;	state Exp;
branches;
next	1.12;
commitid	r36j1ZCD0yPK3S9O;

1.12
date	2013.01.08.10.38.19;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2012.09.18.12.07.59;	author reyk;	state Exp;
branches;
next	1.10;

1.10
date	2011.05.27.12.01.02;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.08.10.13.47;	author jsg;	state Exp;
branches;
next	1.8;

1.8
date	2010.10.08.07.45.06;	author reyk;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.07.13.30.50;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.07.12.23.14;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.23.16.01.01;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.14.17.41.18;	author jsg;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.10.16.14.04;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.10.14.08.37;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.03.16.49.00;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Accept an ocsp option when creating certificates to set the extended
key usage for OCSP signing.

Requested by and ok reyk@@
@
text
@/*	$OpenBSD: parser.h,v 1.13 2015/06/11 18:49:09 reyk Exp $	*/

/*
 * Copyright (c) 2007-2013 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef IKECTL_PARSER_H
#define IKECTL_PARSER_H

enum actions {
	NONE,
	LOAD,
	RELOAD,
	MONITOR,
	LOG_VERBOSE,
	LOG_BRIEF,
	COUPLE,
	DECOUPLE,
	ACTIVE,
	PASSIVE,
	RESETALL,
	RESETCA,
	RESETPOLICY,
	RESETSA,
	RESETUSER,
	CA,
	CA_CREATE,
	CA_DELETE,
	CA_INSTALL,
	CA_EXPORT,
	CA_CERTIFICATE,
	CA_CERT_CREATE,
	CA_SERVER,
	CA_CLIENT,
	CA_OCSP,
	CA_CERT_DELETE,
	CA_CERT_INSTALL,
	CA_CERT_EXPORT,
	CA_CERT_REVOKE,
	CA_KEY_CREATE,
	CA_KEY_DELETE,
	CA_KEY_INSTALL,
	CA_KEY_IMPORT,
	SHOW_CA,
	SHOW_CA_CERTIFICATES
};

struct parse_result {
	enum actions	 action;
	struct imsgbuf	*ibuf;
	char		*path;
	char		*caname;
	char		*pass;
	char		*host;
	char		*peer;
	int		 htype;
	int		 quiet;
};

#define HOST_IPADDR	1
#define HOST_FQDN	2

struct parse_result	*parse(int, char *[]);

struct ca	*ca_setup(char *, int, int, char *);
int		 ca_create(struct ca *);
int		 ca_certificate(struct ca *, char *, int, int);
int		 ca_export(struct ca *, char *, char *, char *);
int		 ca_revoke(struct ca *, char *);
int		 ca_delete(struct ca *);
int		 ca_delkey(struct ca *, char *);
int		 ca_install(struct ca *, char *);
int		 ca_cert_install(struct ca *, char *, char *);
int		 ca_show_certs(struct ca *, char *);
int		 ca_key_create(struct ca *, char *);
int		 ca_key_delete(struct ca *, char *);
int		 ca_key_install(struct ca *, char *, char *);
int		 ca_key_import(struct ca *, char *, char *);

#endif /* IKECTL_PARSER_H */
@


1.13
log
@Use "compliant" header guards by avoiding the reserved '_' namespace.

Pointed out by Markus Elfring

OK mikeb@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.12 2013/01/08 10:38:19 reyk Exp $	*/
d47 1
@


1.12
log
@Remove private CVS tag from an obsolete repository and bump copyright
to 2013 while I'm here... this is my way of saying "happy new year!".
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.11 2012/09/18 12:07:59 reyk Exp $	*/
d19 2
a20 2
#ifndef _IKECTL_PARSER_H
#define _IKECTL_PARSER_H
d91 1
a91 1
#endif /* _IKECTL_PARSER_H */
@


1.11
log
@update email addresses to match reality.
sure jsg@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.10 2011/05/27 12:01:02 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2007, 2008 Reyk Floeter <reyk@@openbsd.org>
@


1.10
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.9 2010/10/08 10:13:47 jsg Exp $	*/
d4 1
a4 1
 * Copyright (c) 2007, 2008 Reyk Floeter <reyk@@vantronix.net>
@


1.9
log
@allow optional paths for the install commands so we can
install into the isakmpd directory hierarchy for example.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.8 2010/10/08 07:45:06 reyk Exp $	*/
d63 1
a63 1
	char 		*caname;
@


1.8
log
@Allow to show certificate details (show ca x cert [y]).
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.7 2010/10/07 13:30:50 reyk Exp $	*/
d62 1
a62 1
	char		*filename;
d83 2
a84 2
int		 ca_install(struct ca *);
int		 ca_cert_install(struct ca *, char *);
d88 1
a88 1
int		 ca_key_install(struct ca *, char *);
@


1.7
log
@Allow to specify the export password on the command line (optionally, for
scripting).  The "peer" argument now needs to be preceded with the "peer"
keyword, eg. ... export peer 10.1.1.1 instead of export 10.1.1.1.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.6 2010/10/07 12:23:14 reyk Exp $	*/
d85 1
a85 1
int		 ca_show_certs(struct ca *);
@


1.6
log
@- add a -q (quiet) command line option that will be used by ikeca to
set openssl batch mode: don't ask for x509 options, use the defaults.
- allow to specify the initial ca password on the command line to also
make it scriptable.
- allow to create certificates for clientAuth or serverAuth only
(eg. ikectl ca foo certificate bar server).
- cosmetics: move double declarations of ca_*() functions to parser.h.

ok phessler@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.5 2010/06/23 16:01:01 jsg Exp $	*/
d79 1
a79 1
int		 ca_export(struct ca *, char *, char *);
@


1.5
log
@Add a ca export command for EAP mode where we only require the CA cert,
and make both export commands optionally take an argument that will be
added to a peer.txt file in the exported output.   Additionally
include any site specific notes from /usr/share/iked if present.

man page bits and help with the parser from reyk
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.4 2010/06/14 17:41:18 jsg Exp $	*/
d19 3
d45 2
d64 1
d68 1
d75 17
@


1.4
log
@Add commands to create/delete/install/import keys without
involving certificates as suggested by reyk and don't
recreate private keys if a key already exists.

ok reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.3 2010/06/10 16:14:04 jsg Exp $	*/
d39 1
d60 1
@


1.3
log
@Add a command to revoke a certificate and generate a CRL;
make the ca install command install the CRL as well.

discussed with reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.2 2010/06/10 14:08:37 reyk Exp $	*/
d45 4
@


1.2
log
@add new commands: the couple/decouple commands will set loading of the
learned flows and SAs to the kernel which is useful for testing and
debugging. the active/passive commands are required to use iked
with sasyncd(8);  sasyncd just needs to call "ikectl active/passive" or
send the appropriate imsg to support iked but this is not implemented yet.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.1 2010/06/03 16:49:00 reyk Exp $	*/
d44 1
@


1.1
log
@Import iked, a new implementation of the IKEv2 protocol.

iked(8) is an automatic keying daemon for IPsec, like isakmpd(8), that
IPsec creates flows and SAs automatically.  Unlike isakmpd, iked(8)
implements the newer IKEv2 protocol instead of IKEv1/ISAKMP.  The
daemon is still work-in-progress and not enabled in the builds, but is
already able to establish IKEv2 sessions with some other IKEv2
implementations as a responder.

with lots of help and debugging by jsg@@
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.4 2008/01/18 02:09:30 reyk Exp $	*/
d26 4
@

