head	1.16;
access;
symbols
	OPENBSD_5_6:1.15.0.8
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.6
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.2
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.12.0.20
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.18
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.16
	OPENBSD_5_0:1.12.0.14
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.12
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.18
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.16
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.6
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.4
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	kame_19991209:1.1.1.1
	KAME:1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2014.12.22.09.13.35;	author florian;	state dead;
branches;
next	1.15;
commitid	QHLwHNotIjbdLNCu;

1.15
date	2013.04.21.19.46.31;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.21.19.42.32;	author florian;	state Exp;
branches;
next	1.13;

1.13
date	2013.04.17.00.13.40;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.10.04.49.11;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2003.10.05.15.29.28;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.10.19.57.35;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.31.21.24.27;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.31.09.53.26;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.28.09;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.22.05.34.54;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2000.10.06.02.46.58;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.13.18.24.00;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.25.10.32.21;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	99.12.09.15.10.49;	author itojun;	state Exp;
branches;
next	1.1;

1.1
date	99.12.09.14.56.00;	author itojun;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.12.09.14.56.00;	author itojun;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Out out you evil network daemon.
OK deraadt@@ some time ago
@
text
@/*	$OpenBSD: dump.c,v 1.15 2013/04/21 19:46:31 deraadt Exp $	*/
/*	$KAME: dump.c,v 1.10 2002/05/31 10:10:03 itojun Exp $	*/

/*
 * Copyright (C) 1999 WIDE Project.
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/time.h>
#include <sys/socket.h>

#include <net/if.h>
#include <netinet/in.h>
#include <netinet/icmp6.h>

#include <syslog.h>
#include <time.h>
#include <stdio.h>
#include <string.h>
#include <errno.h>

#include "rtsold.h"

static FILE *fp;

extern struct ifinfo *iflist;

static void dump_interface_status(void);
static char *sec2str(time_t);
char *ifstatstr[] = {"IDLE", "DELAY", "PROBE", "DOWN", "TENTATIVE"};

static void
dump_interface_status(void)
{
	struct ifinfo *ifinfo;
	struct timeval now;

	gettimeofday(&now, NULL);

	for (ifinfo = iflist; ifinfo; ifinfo = ifinfo->next) {
		fprintf(fp, "Interface %s\n", ifinfo->ifname);
		fprintf(fp, "  probe interval: ");
		if (ifinfo->probeinterval) {
			fprintf(fp, "%d\n", ifinfo->probeinterval);
			fprintf(fp, "  probe timer: %d\n", ifinfo->probetimer);
		} else {
			fprintf(fp, "infinity\n");
			fprintf(fp, "  no probe timer\n");
		}
		fprintf(fp, "  interface status: %s\n",
		    ifinfo->active > 0 ? "active" : "inactive");
#ifndef SMALL
		fprintf(fp, "  other config: %s\n",
		    ifinfo->otherconfig ? "on" : "off");
#endif
		fprintf(fp, "  rtsold status: %s\n", ifstatstr[ifinfo->state]);
		fprintf(fp, "  carrier detection: %s\n",
		    ifinfo->mediareqok ? "available" : "unavailable");
		fprintf(fp, "  probes: %d, dadcount = %d\n",
		    ifinfo->probes, ifinfo->dadcount);
		if (ifinfo->stoptimer)
			fprintf(fp, "  no timer\n");
		else {
			fprintf(fp, "  timer: interval=%lld:%ld, expire=%s\n",
			    (long long)ifinfo->timer.tv_sec,
			    ifinfo->timer.tv_usec,
			    (ifinfo->expire.tv_sec < now.tv_sec) ? "expired"
			    : sec2str(ifinfo->expire.tv_sec - now.tv_sec));
		}
		fprintf(fp, "  number of valid RAs: %d\n", ifinfo->racnt);
	}
}

void
rtsold_dump_file(char *dumpfile)
{
	if ((fp = fopen(dumpfile, "w")) == NULL) {
		warnmsg(LOG_WARNING, __func__, "open a dump file(%s): %s",
		    dumpfile, strerror(errno));
		return;
	}
	dump_interface_status();
	fclose(fp);
}

static char *
sec2str(time_t total)
{
	static char result[256];
	time_t days;
	int hours, mins, secs;
	int first = 1;
	char *p = result;
	char *ep = &result[sizeof(result)];
	int n;

	days = total / 3600 / 24;
	hours = (total / 3600) % 24;
	mins = (total / 60) % 60;
	secs = total % 60;

	if (days) {
		first = 0;
		n = snprintf(p, ep - p, "%lldd", (long long)days);
		if (n < 0 || n >= ep - p)
			return "?";
		p += n;
	}
	if (!first || hours) {
		first = 0;
		n = snprintf(p, ep - p, "%dh", hours);
		if (n < 0 || n >= ep - p)
			return "?";
		p += n;
	}
	if (!first || mins) {
		first = 0;
		n = snprintf(p, ep - p, "%dm", mins);
		if (n < 0 || n >= ep - p)
			return "?";
		p += n;
	}
	snprintf(p, ep - p, "%ds", secs);
	return(result);
}
@


1.15
log
@handle exceedingly long uptimes
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.14 2013/04/21 19:42:32 florian Exp $	*/
@


1.14
log
@IPv6 might still be around in 2038, replace magic timeval
{0x7fffffff, 0x7fffffff} with an explicit flag that timers should
be stopped.
input deraadt@@, kettenis@@
"Looks like a nice solution." deraadt@@
OK benno@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.13 2013/04/17 00:13:40 deraadt Exp $	*/
d115 2
a116 1
	int days, hours, mins, secs;
d129 1
a129 1
		n = snprintf(p, ep - p, "%dd", days);
@


1.13
log
@handle large time_t
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.12 2008/06/10 04:49:11 reyk Exp $	*/
d86 1
a86 2
		if (ifinfo->timer.tv_sec == tm_max.tv_sec &&
		    ifinfo->timer.tv_usec == tm_max.tv_usec)
@


1.12
log
@add the -O option to run an external script when the "other
configuration" flag is found in the RA message. it basically means
"here is your IPv6 address, but run something like DHCPv6 to get more
information".  so the main purpose is to run a dhcpv6 client to get
DNS etc.

Merged from KAME

ok rainer@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.11 2003/10/05 15:29:28 deraadt Exp $	*/
d90 3
a92 3
			fprintf(fp, "  timer: interval=%d:%d, expire=%s\n",
			    (int)ifinfo->timer.tv_sec,
			    (int)ifinfo->timer.tv_usec,
@


1.11
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.10 2002/06/10 19:57:35 espie Exp $	*/
d77 4
@


1.10
log
@Kill __FUNCTION__.
ok itojun@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.9 2002/05/31 21:24:27 itojun Exp $	*/
d58 1
a58 1
dump_interface_status()
d97 1
a97 2
rtsold_dump_file(dumpfile)
	char *dumpfile;
d109 1
a109 2
sec2str(total)
	time_t total;
@


1.9
log
@sync w/ latest kame.  link id handling.
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.8 2002/05/31 09:53:26 deraadt Exp $	*/
d101 1
a101 1
		warnmsg(LOG_WARNING, __FUNCTION__, "open a dump file(%s): %s",
@


1.8
log
@KNF; itojun ok
@
text
@d1 2
a2 2
/*	$OpenBSD: dump.c,v 1.7 2002/02/16 21:28:09 millert Exp $	*/
/*	$KAME: dump.c,v 1.9 2001/08/20 06:55:54 itojun Exp $	*/
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.6 2001/08/22 05:34:54 itojun Exp $	*/
d71 1
a71 2
		}
		else {
d76 1
a76 1
			ifinfo->active > 0 ? "active" : "inactive");
d79 1
a79 1
			ifinfo->mediareqok ? "available" : "unavailable");
d81 1
a81 1
			ifinfo->probes, ifinfo->dadcount);
d87 4
a90 4
				(int)ifinfo->timer.tv_sec,
				(int)ifinfo->timer.tv_usec,
				(ifinfo->expire.tv_sec < now.tv_sec) ? "expired"
				: sec2str(ifinfo->expire.tv_sec - now.tv_sec));
d102 1
a102 1
			dumpfile, strerror(errno));
a104 1

a105 1

a146 1

@


1.6
log
@snprintf() return audit.  sync with kame
@
text
@d1 1
a1 1
/*	$OpenBSD: dump.c,v 1.5 2000/10/06 02:46:58 itojun Exp $	*/
d53 2
a54 2
static void dump_interface_status __P((void));
static char *sec2str __P((time_t));
@


1.5
log
@printf string format audit.  from: sommerfeld@@netbsd.org
@
text
@d1 2
a2 2
/*	$OpenBSD: dump.c,v 1.4 2000/08/13 18:24:00 itojun Exp $	*/
/*	$KAME: dump.c,v 1.8 2000/10/05 22:20:39 itojun Exp $	*/
d120 2
d130 4
a133 1
		p += sprintf(p, "%dd", days);
d137 4
a140 1
		p += sprintf(p, "%dh", hours);
d144 4
a147 1
		p += sprintf(p, "%dm", mins);
d149 1
a149 1
	sprintf(p, "%ds", secs);
@


1.4
log
@add "rtsol -a" (automatically lookup outgoign interface).
warn if net.inet6.ip6.forwarding == 1.
improve manpage.
use $KAME$ for KAME tags.

sync with kame.
@
text
@d1 2
a2 2
/*	$OpenBSD: dump.c,v 1.3 2000/02/25 10:32:21 itojun Exp $	*/
/*	$KAME: dump.c,v 1.7 2000/08/13 06:14:59 itojun Exp $	*/
d102 1
a102 1
		warnmsg(LOG_WARNING, __FUNCTION__, "open a dump file(%s)",
@


1.3
log
@use getifaddrs, not SIOCGIFCONF for LP64 align issue. (sync with kame).
@
text
@d1 2
a2 1
/*	$OpenBSD: dump.c,v 1.2 1999/12/09 15:10:49 itojun Exp $	*/
@


1.2
log
@rtsold(8); router solicitation daemon.
rtsol(8); router solicitation program, for use in bootstrap process
(statically linked)

rcsid police.  add missing prototypes.
(sync with KAME)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 1
d36 1
@


1.1
log
@Initial revision
@
text
@d1 2
d50 1
@


1.1.1.1
log
@initial import from KAME tree
@
text
@@
