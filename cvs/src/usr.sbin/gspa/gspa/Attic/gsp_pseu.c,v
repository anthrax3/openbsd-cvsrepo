head	1.4;
access;
symbols
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.1.1.1.0.24
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.22
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2002.12.31.16.35.42;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2002.09.06.20.16.43;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.02.22.50.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*
 * GSP assembler - assembler directives
 *
 * Copyright (c) 1993 Paul Mackerras.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Mackerras.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include "gsp_ass.h"
#include "gsp_code.h"

extern unsigned int highest_pc, line_pc;

void
pseudo(int code, operand ops)
{
	operand o;
	int32_t val;
	unsigned int ln;
	u_int16_t words[2];

	switch( code ){
	case ORG:
		if( ops == NULL )
			break;
		if( ops->type != EXPR ){
			perr("Inappropriate operand");
			break;
		}
		if( !eval_expr(ops->op_u.value, &val, &ln) ){
			p1err("ORG operand must be defined on pass 1");
			break;
		}
		if( pc > highest_pc )
			highest_pc = pc;
		line_pc = pc = val;
		do_list_pc();
		break;
#ifdef EQU
	case EQU:
		if( label == NULL ){
			perr("Label required");
			break;
		}
		if( ops == NULL )
			break;
		if( ops->type != EXPR ){
			perr("Inappropriate operand");
			break;
		}
		do_asg(label, ops->op_u.value, 0);
		break;
#endif /* EQU */
	case WORD:
	case LONG:
		if( ops == NULL )
			break;
		for( o = ops; o != NULL; o = o->next ){
			if( o->type != EXPR ){
				perr("Inappropriate operand");
				continue;
			}
			if( pass2 ){
				eval_expr(o->op_u.value, &val, &ln);
				words[0] = val;
				if( code == LONG ){
					words[1] = val >> 16;
					putcode(words, 2);
				} else {
					if( val < -32768 || val > 65535 )
						perr("Word value too large");
					putcode(words, 1);
				}
			} else
				pc += code == LONG? 0x20: 0x10;
		}
		return;
	case INCL:
		if( ops == NULL )
			break;
		if( ops->type != STR_OPN ){
			perr("Require filename string");
			break;
		}
		push_input(ops->op_u.string);
		break;
	case BLKB:
	case BLKW:
	case BLKL:
		if( ops == NULL )
			break;
		if( ops->type != EXPR ){
			perr("Inappropriate operand");
			break;
		}
		if( !eval_expr(ops->op_u.value, &val, &ln) ){
			p1err(".BLK%c operand must be defined on pass 1",
				code==BLKB? 'B': code==BLKW? 'W': 'L');
			break;
		}
		val *= 8;
		if( code == BLKB )
			val = (val + 8) & ~15;	/* round to word */
		else
			val *= (code==BLKW? 2: 4);
		pc += val;
		do_list_pc();
		break;
	case START:
		if( !pass2 || ops == NULL )
			break;
		if( ops->type != EXPR ){
			perr("Inappropriate operand");
			break;
		}
		eval_expr(ops->op_u.value, &val, &ln);
		start_at(val);
		do_show_val(val);
		break;
	}
	if( ops == NULL )
		perr("Insufficient operands");
	else if( ops->next != NULL )
		perr("Extra operands ignored");
}
@


1.3
log
@first cut at -Wall
@
text
@@


1.2
log
@withough -> without
@
text
@d35 1
a35 1
extern unsigned highest_pc, line_pc;
d42 1
a42 1
	unsigned ln;
@


1.1
log
@Initial revision
@
text
@d19 1
a19 1
 *    derived from this software withough specific prior written permission
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
