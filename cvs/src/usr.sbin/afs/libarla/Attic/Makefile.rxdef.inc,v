head	1.5;
access;
symbols
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2002.06.07.04.53.20;	author hin;	state dead;
branches;
next	1.4;

1.4
date	2000.09.11.14.40.27;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.25.14.38.44;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.02;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.53.28;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.53.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.5
log
@New buildsystem reordered a bit, so these go away; bye bye
@
text
@### rxdef stuff
## No, cb.ss.c is _not_ a mistake. The _client_ is the callback server.
SRCS		+= vldb.cs.c fs.cs.c cb.ss.c pts.cs.c \
		   volumeserver.cs.c ubik.cs.c bos.cs.c

CLEANFILES 	+= vldb.ss.c vldb.cs.c vldb.ydr.c vldb.ss.h vldb.cs.h vldb.h \
		   fs.ss.c fs.cs.c fs.ydr.c fs.cs.h fs.ss.h fs.h \
		   cb.ss.c cb.cs.c cb.ydr.c cb.cs.h cb.ss.h cb.h \
		   pts.ss.c pts.cs.c pts.ydr.c pts.cs.h pts.ss.h pts.h \
		   volumeserver.ss.c volumeserver.cs.c volumeserver.ydr.c \
		   volumeserver.ss.h volumeserver.cs.h volumeserver.h \
		   ubik.ss.c ubik.cs.c ubik.ydr.c ubik.cs.h ubik.ss.h ubik.h \
		   bos.ss.c bos.cs.c bos.ydr.c bos.cs.h bos.ss.h bos.h \
		   vldb.td.c fs.td.c cb.td.c pts.td.c volumeserver.td.c \
		   ubik.td.c bos.td.c

CFLAGS		+= -I${.CURDIR}/../src/rxdef -I${.CURDIR}/../src/arlad

YDR		= ../ydr/ydr
YDRFLAGS	= -I${.CURDIR}
.PATH: ${.CURDIR}/../src/rxdef

vldb.cs.c vldb.cs.h vldb.ss.c vldb.ss.h vldb.ydr.c vldb.h: vldb.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/vldb.xg

fs.cs.c fs.cs.h fs.ss.c fs.ss.h fs.ydr.c fs.h: fs.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/fs.xg

cb.cs.c cb.cs.h cb.ss.c cb.ss.h cb.ydr.c cb.h: cb.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/cb.xg

pts.cs.c pts.cs.h pts.ss.c pts.ss.h pts.ydr.c pts.h: pts.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/pts.xg

volumeserver.cs.c volumeserver.cs.h volumeserver.ss.c volumeserver.ss.h volumeserver.ydr.c volumeserver.h: volumeserver.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/volumeserver.xg

ubik.cs.c ubik.cs.h ubik.ss.c ubik.ss.h ubik.ydr.c ubik.h: ubik.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/ubik.xg

bos.cs.c bos.cs.h bos.ss.c bos.ss.h bos.ydr.c bos.h: bos.xg
		$(YDR) $(YDRFLAGS) ${.CURDIR}/../src/rxdef/bos.xg

@


1.4
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@@


1.3
log
@Add some more files to CLEANFILES. (art@@ ok)
@
text
@d4 1
a4 1
		   volumeserver.cs.c ubik.cs.c
d13 3
a15 1
		   vldb.td.c fs.td.c cb.td.c pts.td.c volumeserver.td.c ubik.td.c
d40 3
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d12 2
a13 1
		   ubik.ss.c ubik.cs.c ubik.ydr.c ubik.cs.h ubik.ss.h ubik.h
@


1.1
log
@Initial revision
@
text
@d14 1
a14 1
CFLAGS		+= -I${.CURDIR}/../src/rxdef
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@
