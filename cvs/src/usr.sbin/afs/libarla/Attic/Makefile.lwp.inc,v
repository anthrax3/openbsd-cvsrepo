head	1.7;
access;
symbols
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2002.06.07.04.53.20;	author hin;	state dead;
branches;
next	1.6;

1.6
date	2001.09.11.05.03.44;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2001.09.11.05.01.24;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.10.12.27.16;	author hugh;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.11.14.40.27;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.02;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.53.28;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.53.28;	author art;	state Exp;
branches;
next	;


desc
@@


1.7
log
@New buildsystem reordered a bit, so these go away; bye bye
@
text
@### lwp stuff
SRCS		+= lwp.c lock.c iomgr.c timer.c fasttime.c preempt.c q.c
OBJS		+= process.o
CLEANFILES	+= process.S process.o lwp.c lwp.h
.PATH:	${.CURDIR}/../src/lwp
CFLAGS	+= -DAFS_BSD_ENV -DFD_SPEED_HACK -I${.CURDIR}/../src/lwp

# We use the handcoded assembler stuff for context switching, not
# pthreads (because pthreads do not work for now).

beforedepend: lwp.c lwp.h

lwp.h:
	ln -s ${.CURDIR}/../src/lwp/lwp_asm.h lwp.h
lwp.c:
	ln -s ${.CURDIR}/../src/lwp/lwp_asm.c lwp.c

process.S:
	HOST_CPU=${MACHINE_ARCH}; \
	case "$$HOST_CPU" in \
		sparc64) PROCESS_S="process.sparc.S" ;; \
		sparc)   PROCESS_S="process.sparc.S" ;; \
		i*86*)   PROCESS_S="process.i386.S" ;; \
		m68k)    PROCESS_S="process.m68k.S" ;; \
		mips*)   PROCESS_S="process.mips.S" ;; \
		alpha*)  PROCESS_S="process.alpha.S" ;; \
		hppa*)   PROCESS_S="process.hpux.S" ;; \
		powerpc) PROCESS_S="process.ppc.S" ;; \
		rs6000)  PROCESS_S="process.rios.S" ;; \
                vax)     PROCESS_S="process.vax.S" ;; \
		*)  echo "Unknown host_cpu, good luck" ;; \
	esac; \
	ln -s ${.CURDIR}/../src/lwp/$$PROCESS_S process.S

process.o: process.S
	${CC} ${CFLAGS} -DHAVE_PIC -c process.S
@


1.6
log
@oops, pretty
@
text
@@


1.5
log
@sparc64 and sparc share the same process.S
@
text
@d21 1
a21 1
		sparc64)   PROCESS_S="process.sparc.S" ;; \
@


1.4
log
@Use supplied vax support. Don't know if it works.
@
text
@d21 1
@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d29 1
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d4 1
a4 1
CLEANFILES	+= process.o
d8 2
d11 8
a18 1
process.o: process.S
d21 8
a28 8
		sparc) CPUDEF="-Dsparc" ;; \
		i*86*) CPUDEF="-DAFS_386i_ENV" ;; \
		m68k)  CPUDEF="-Dmc68000" ;; \
		mips)  CPUDEF="-Dmips" ;; \
		alpha) CPUDEF="-Dalpha" ;; \
		hppa*) CPUDEF="" ;; \
		powerpc) CPUDEF="-D__powerpc__" ;; \
		rs6000) CPUDEF="-DRIOS" ;; \
d31 4
a34 2
	OSDEF="-DAFS_NETBSD_ENV"; \
	${CC} ${CFLAGS} $$CPUDEF $$OSDEF -c ${.CURDIR}/../src/lwp/process.S
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
CFLAGS	+= -DFD_SPEED_HACK -I${.CURDIR}/../src/lwp
d23 1
a23 1
	${CC} $$CPUDEF $$OSDEF -c ${.CURDIR}/../src/lwp/process.S
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@
