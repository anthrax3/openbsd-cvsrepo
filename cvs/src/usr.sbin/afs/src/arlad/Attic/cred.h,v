head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	arla-20030805:1.1.1.3
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	arla-0-35-7:1.1.1.2
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.08.23.06.21.50;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2003.08.05.08.42.41;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.07.04.28.57;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.11.14.40.41;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.07;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.52.55;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.52.55;	author art;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.07.04.14.22;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.05.08.21.00;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2003 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Header for credetial cache
 */

/* $arla: cred.h,v 1.33 2003/06/10 16:21:11 lha Exp $ */

#ifndef _CRED_H_
#define _CRED_H_

#include <sys/types.h>
#include <time.h>
#include <lock.h>
#ifdef HAVE_KRB4
#ifdef HAVE_OPENSSL
#include <openssl/des.h>
#else
#include <des.h>
#endif
#include <krb.h>
#endif /* HAVE_KRB4 */
#include "bool.h"
#include <nnpfs/nnpfs_message.h>

/* The cred-types we support */
#define CRED_NONE     0
#define CRED_KRB4     1
#define CRED_KRB5     2
#define CRED_GK_K5    3
#define CRED_MAX      CRED_GK_K5
#define CRED_ANY      (-1)

struct cred_rxkad {
    struct ClearToken ct;
    size_t ticket_len;
    unsigned char ticket[MAXKRB4TICKETLEN];
};

struct cred_rxgk {
    int type;
    union {
	struct {
	    int32_t kvno;
	    int32_t enctype;
	    size_t sessionkey_len;
	    void *sessionkey;
	    size_t ticket_len;
	    void *ticket;
	} k5;
    } t;
};

typedef struct {
    nnpfs_pag_t cred;
    uid_t uid;
    int type;
    int securityindex;
    long cell;
    time_t expire;
    void *cred_data;
    void (*cred_free_func)(void *);
    struct {
	unsigned killme : 1;
    } flags;
    unsigned refcount;
    union {
	List *list; 
	Listitem *li;
    } pag;
} CredCacheEntry;

void cred_init (unsigned nentries);

CredCacheEntry *
cred_get (long cell, nnpfs_pag_t cred, int type);

int
cred_list_pag(nnpfs_pag_t, int, 
	      int (*func)(CredCacheEntry *, void *),
	      void *);

void
cred_free (CredCacheEntry *ce);

CredCacheEntry *
cred_add (nnpfs_pag_t cred, int type, int securityindex, long cell,
	  time_t expire, void *cred_data, size_t cred_data_sz,
	  uid_t uid);

void
cred_delete (CredCacheEntry *ce);

void
cred_expire (CredCacheEntry *ce);

void cred_status (void);

void cred_remove (nnpfs_pag_t cred);

#endif /* _CRED_H_ */
@


1.5
log
@Merge
@
text
@@


1.4
log
@merge
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d38 1
a38 1
/* $KTH: cred.h,v 1.26 2000/10/02 22:31:15 lha Exp $ */
d46 4
a49 1
#ifdef KERBEROS
d51 1
d53 1
a53 1
#endif /* KERBEROS */
d55 1
a55 1
#include <xfs/xfs_message.h>
d61 2
a62 1
#define CRED_MAX      CRED_KRB5
d65 19
a83 5
#ifdef KERBEROS
typedef struct {
    CREDENTIALS c;
} krbstruct;
#endif
d86 1
a86 1
    xfs_pag_t cred;
d93 1
d98 4
d107 6
a112 1
cred_get (long cell, xfs_pag_t cred, int type);
d118 1
a118 1
cred_add (xfs_pag_t cred, int type, int securityindex, long cell,
a127 4
#ifdef KERBEROS
CredCacheEntry * cred_add_krb4 (xfs_pag_t cred, uid_t uid, CREDENTIALS *c);
#endif

d130 1
a130 1
void cred_remove (xfs_pag_t cred);
@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d38 1
a38 1
/* $Id: cred.h,v 1.25 2000/06/08 21:45:06 lha Exp $ */
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998 Kungliga Tekniska Högskolan
d43 1
a43 1
/* $KTH: cred.h,v 1.23 1999/04/14 15:27:34 map Exp $ */
d72 1
a72 1
    pag_t cred;
d88 1
a88 1
cred_get (long cell, pag_t cred, int type);
d94 1
a94 1
cred_add (pag_t cred, int type, int securityindex, long cell,
d105 1
a105 1
CredCacheEntry * cred_add_krb4 (pag_t cred, uid_t uid, CREDENTIALS *c);
d110 1
a110 1
void cred_remove (pag_t cred);
@


1.1
log
@Initial revision
@
text
@d44 1
a44 1
/* $KTH: cred.h,v 1.18 1998/05/02 01:03:25 assar Exp $ */
d54 1
a54 1
#include <kerberosIV/krb.h>
d74 1
d96 2
a97 1
	  time_t expire, void *cred_data, size_t cred_data_sz);
d106 1
a106 1
CredCacheEntry * cred_add_krb4 (pag_t cred, CREDENTIALS *c);
d109 1
a109 1
void cred_status (FILE *f);
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@


1.1.1.2
log
@Import of arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
d44 1
a44 1
/* $KTH: cred.h,v 1.26 2000/10/02 22:31:15 lha Exp $ */
d54 1
a54 1
#include <krb.h>
d73 1
a73 2
    xfs_pag_t cred;
    uid_t uid;
d88 1
a88 1
cred_get (long cell, xfs_pag_t cred, int type);
d94 2
a95 3
cred_add (xfs_pag_t cred, int type, int securityindex, long cell,
	  time_t expire, void *cred_data, size_t cred_data_sz,
	  uid_t uid);
d104 1
a104 1
CredCacheEntry * cred_add_krb4 (xfs_pag_t cred, uid_t uid, CREDENTIALS *c);
d107 1
a107 1
void cred_status (void);
d109 1
a109 1
void cred_remove (xfs_pag_t cred);
@


1.1.1.3
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2003 Kungliga Tekniska Högskolan
d38 1
a38 1
/* $arla: cred.h,v 1.33 2003/06/10 16:21:11 lha Exp $ */
d46 1
a46 4
#ifdef HAVE_KRB4
#ifdef HAVE_OPENSSL
#include <openssl/des.h>
#else
a47 1
#endif
d49 1
a49 1
#endif /* HAVE_KRB4 */
d51 1
a51 1
#include <nnpfs/nnpfs_message.h>
d57 1
a57 2
#define CRED_GK_K5    3
#define CRED_MAX      CRED_GK_K5
d60 5
a64 19
struct cred_rxkad {
    struct ClearToken ct;
    size_t ticket_len;
    unsigned char ticket[MAXKRB4TICKETLEN];
};

struct cred_rxgk {
    int type;
    union {
	struct {
	    int32_t kvno;
	    int32_t enctype;
	    size_t sessionkey_len;
	    void *sessionkey;
	    size_t ticket_len;
	    void *ticket;
	} k5;
    } t;
};
d67 1
a67 1
    nnpfs_pag_t cred;
a73 1
    void (*cred_free_func)(void *);
a77 4
    union {
	List *list; 
	Listitem *li;
    } pag;
d83 1
a83 6
cred_get (long cell, nnpfs_pag_t cred, int type);

int
cred_list_pag(nnpfs_pag_t, int, 
	      int (*func)(CredCacheEntry *, void *),
	      void *);
d89 1
a89 1
cred_add (nnpfs_pag_t cred, int type, int securityindex, long cell,
d99 4
d105 1
a105 1
void cred_remove (nnpfs_pag_t cred);
@


