head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.08.23.06.21.50;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2003.08.05.08.42.41;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.08.09.25.13;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.07.04.28.57;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.11.14.40.41;	author art;	state Exp;
branches;
next	1.1;

1.1
date	99.04.30.01.59.07;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.22;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.00;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@OBSOLETE /* COPYRIGHT  (C)  1998
OBSOLETE  * THE REGENTS OF THE UNIVERSITY OF MICHIGAN
OBSOLETE  * ALL RIGHTS RESERVED
OBSOLETE  * 
OBSOLETE  * PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS 
OBSOLETE  * AND REDISTRIBUTE THIS SOFTWARE AND SUCH DERIVATIVE WORKS 
OBSOLETE  * FOR ANY PURPOSE, SO LONG AS THE NAME OF THE UNIVERSITY OF 
OBSOLETE  * MICHIGAN IS NOT USED IN ANY ADVERTISING OR PUBLICITY 
OBSOLETE  * PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE 
OBSOLETE  * WITHOUT SPECIFIC, WRITTEN PRIOR AUTHORIZATION.  IF THE 
OBSOLETE  * ABOVE COPYRIGHT NOTICE OR ANY OTHER IDENTIFICATION OF THE 
OBSOLETE  * UNIVERSITY OF MICHIGAN IS INCLUDED IN ANY COPY OF ANY 
OBSOLETE  * PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST 
OBSOLETE  * ALSO BE INCLUDED.
OBSOLETE  * 
OBSOLETE  * THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION 
OBSOLETE  * FROM THE UNIVERSITY OF MICHIGAN AS TO ITS FITNESS FOR ANY 
OBSOLETE  * PURPOSE, AND WITHOUT WARRANTY BY THE UNIVERSITY OF 
OBSOLETE  * MICHIGAN OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING 
OBSOLETE  * WITHOUT LIMITATION THE IMPLIED WARRANTIES OF 
OBSOLETE  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE 
OBSOLETE  * REGENTS OF THE UNIVERSITY OF MICHIGAN SHALL NOT BE LIABLE 
OBSOLETE  * FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR 
OBSOLETE  * CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING 
OBSOLETE  * OUT OF OR IN CONNECTION WITH THE USE OF THE SOFTWARE, EVEN 
OBSOLETE  * IF IT HAS BEEN OR IS HEREAFTER ADVISED OF THE POSSIBILITY OF 
OBSOLETE  * SUCH DAMAGES.
OBSOLETE  */
OBSOLETE 
OBSOLETE #include "arla_local.h"
OBSOLETE 
OBSOLETE RCSID("$arla: darla.c,v 1.8 2002/07/23 15:22:51 lha Exp $");
OBSOLETE 
OBSOLETE int DARLA_Open(DARLA_file *Dfp, char *fname, int oflag)
OBSOLETE {
OBSOLETE 
OBSOLETE   int fd;
OBSOLETE 
OBSOLETE   fd = open(fname, oflag, 0600);
OBSOLETE   if (fd == -1)
OBSOLETE       arla_log(ADEBMISC, "DARLA_Open: errno=%d", errno); 
OBSOLETE   if (fd > 0)
OBSOLETE   {
OBSOLETE     Dfp->fd = fd;
OBSOLETE     Dfp->offset=0;
OBSOLETE     Dfp->log_entries = 0;
OBSOLETE   }
OBSOLETE 
OBSOLETE   return fd;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Close(DARLA_file *Dfp)
OBSOLETE {
OBSOLETE   int ret;
OBSOLETE   
OBSOLETE   ret = close(Dfp->fd);
OBSOLETE   Dfp->fd = 0;
OBSOLETE   Dfp->offset =0;
OBSOLETE   arla_log(ADEBMISC, "DARLA_Close: ret=%d", ret);
OBSOLETE   return ret;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Read(DARLA_file *Dfp, char *cp, int len)
OBSOLETE {
OBSOLETE   ssize_t read_size;
OBSOLETE   
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     read_size = read (Dfp->fd, cp, len);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     read_size = 0;
OBSOLETE 
OBSOLETE   return read_size;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Write(DARLA_file *Dfp, char *cp, int len)
OBSOLETE {
OBSOLETE   ssize_t write_size;
OBSOLETE 
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     write_size = write(Dfp->fd, cp, len);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     write_size = 0;
OBSOLETE   
OBSOLETE   return write_size;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Seek(DARLA_file *Dfp, int offset, int whence)
OBSOLETE {
OBSOLETE 
OBSOLETE   off_t lseek_off;
OBSOLETE 
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     lseek_off = lseek(Dfp->fd, offset, whence);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     lseek_off = 0;
OBSOLETE 
OBSOLETE   return lseek_off;
OBSOLETE }
@


1.5
log
@Merge
@
text
@@


1.4
log
@Use open() with proper 3rd arg. From arla cvs. miod@@ ok.
@
text
@d1 104
a104 103
/* COPYRIGHT  (C)  1998
 * THE REGENTS OF THE UNIVERSITY OF MICHIGAN
 * ALL RIGHTS RESERVED
 * 
 * PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS 
 * AND REDISTRIBUTE THIS SOFTWARE AND SUCH DERIVATIVE WORKS 
 * FOR ANY PURPOSE, SO LONG AS THE NAME OF THE UNIVERSITY OF 
 * MICHIGAN IS NOT USED IN ANY ADVERTISING OR PUBLICITY 
 * PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE 
 * WITHOUT SPECIFIC, WRITTEN PRIOR AUTHORIZATION.  IF THE 
 * ABOVE COPYRIGHT NOTICE OR ANY OTHER IDENTIFICATION OF THE 
 * UNIVERSITY OF MICHIGAN IS INCLUDED IN ANY COPY OF ANY 
 * PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST 
 * ALSO BE INCLUDED.
 * 
 * THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION 
 * FROM THE UNIVERSITY OF MICHIGAN AS TO ITS FITNESS FOR ANY 
 * PURPOSE, AND WITHOUT WARRANTY BY THE UNIVERSITY OF 
 * MICHIGAN OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING 
 * WITHOUT LIMITATION THE IMPLIED WARRANTIES OF 
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE 
 * REGENTS OF THE UNIVERSITY OF MICHIGAN SHALL NOT BE LIABLE 
 * FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR 
 * CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING 
 * OUT OF OR IN CONNECTION WITH THE USE OF THE SOFTWARE, EVEN 
 * IF IT HAS BEEN OR IS HEREAFTER ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGES.
 */

#include "arla_local.h"

RCSID("$KTH: darla.c,v 1.6 2000/02/12 19:23:54 assar Exp $");

int DARLA_Open(DARLA_file *Dfp, char *fname, int oflag)
{

  int fd;

  fd = open(fname, oflag, 0600);
  arla_log(ADEBMISC, "DARLA_Open: errno=%d", errno); 
  if (fd > 0)
  {
    Dfp->fd = fd;
    Dfp->offset=0;
    Dfp->log_entries = 0;
  }

  return fd;
}

int DARLA_Close(DARLA_file *Dfp)
{
  int ret;
  
  ret = close(Dfp->fd);
  Dfp->fd = 0;
  Dfp->offset =0;
  arla_log(ADEBMISC, "DARLA_Close: ret=%d", ret);
  return ret;
}

int DARLA_Read(DARLA_file *Dfp, char *cp, int len)
{
  ssize_t read_size;
  
  if (Dfp->fd)
  {
    read_size = read (Dfp->fd, cp, len);
  }
  else
    read_size = 0;

  return read_size;
}

int DARLA_Write(DARLA_file *Dfp, char *cp, int len)
{
  ssize_t write_size;

  if (Dfp->fd)
  {
    write_size = write(Dfp->fd, cp, len);
  }
  else
    write_size = 0;
  
  return write_size;
}

int DARLA_Seek(DARLA_file *Dfp, int offset, int whence)
{

  off_t lseek_off;

  if (Dfp->fd)
  {
    lseek_off = lseek(Dfp->fd, offset, whence);
  }
  else
    lseek_off = 0;

  return lseek_off;
}
@


1.3
log
@merge
@
text
@d39 1
a39 1
  fd = open(fname, oflag);
@


1.2
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d32 1
a32 1
RCSID("$Id: darla.c,v 1.6 2000/02/12 19:23:54 assar Exp $");
@


1.1
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@a0 1
/*	$OpenBSD$	*/
d32 1
a32 1
RCSID("$KTH: darla.c,v 1.5 1998/12/21 21:54:03 assar Exp $");
d40 1
a40 1
  arla_log(ADEBMISC, "DARLA_Open: errno=%d\n", errno); 
d58 1
a58 1
  arla_log(ADEBMISC, "DARLA_Close: ret=%d\n", ret);
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d1 1
d33 1
a33 1
RCSID("$KTH: darla.c,v 1.6 2000/02/12 19:23:54 assar Exp $");
d41 1
a41 1
  arla_log(ADEBMISC, "DARLA_Open: errno=%d", errno); 
d59 1
a59 1
  arla_log(ADEBMISC, "DARLA_Close: ret=%d", ret);
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d1 103
a103 104
OBSOLETE /* COPYRIGHT  (C)  1998
OBSOLETE  * THE REGENTS OF THE UNIVERSITY OF MICHIGAN
OBSOLETE  * ALL RIGHTS RESERVED
OBSOLETE  * 
OBSOLETE  * PERMISSION IS GRANTED TO USE, COPY, CREATE DERIVATIVE WORKS 
OBSOLETE  * AND REDISTRIBUTE THIS SOFTWARE AND SUCH DERIVATIVE WORKS 
OBSOLETE  * FOR ANY PURPOSE, SO LONG AS THE NAME OF THE UNIVERSITY OF 
OBSOLETE  * MICHIGAN IS NOT USED IN ANY ADVERTISING OR PUBLICITY 
OBSOLETE  * PERTAINING TO THE USE OR DISTRIBUTION OF THIS SOFTWARE 
OBSOLETE  * WITHOUT SPECIFIC, WRITTEN PRIOR AUTHORIZATION.  IF THE 
OBSOLETE  * ABOVE COPYRIGHT NOTICE OR ANY OTHER IDENTIFICATION OF THE 
OBSOLETE  * UNIVERSITY OF MICHIGAN IS INCLUDED IN ANY COPY OF ANY 
OBSOLETE  * PORTION OF THIS SOFTWARE, THEN THE DISCLAIMER BELOW MUST 
OBSOLETE  * ALSO BE INCLUDED.
OBSOLETE  * 
OBSOLETE  * THIS SOFTWARE IS PROVIDED AS IS, WITHOUT REPRESENTATION 
OBSOLETE  * FROM THE UNIVERSITY OF MICHIGAN AS TO ITS FITNESS FOR ANY 
OBSOLETE  * PURPOSE, AND WITHOUT WARRANTY BY THE UNIVERSITY OF 
OBSOLETE  * MICHIGAN OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING 
OBSOLETE  * WITHOUT LIMITATION THE IMPLIED WARRANTIES OF 
OBSOLETE  * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE 
OBSOLETE  * REGENTS OF THE UNIVERSITY OF MICHIGAN SHALL NOT BE LIABLE 
OBSOLETE  * FOR ANY DAMAGES, INCLUDING SPECIAL, INDIRECT, INCIDENTAL, OR 
OBSOLETE  * CONSEQUENTIAL DAMAGES, WITH RESPECT TO ANY CLAIM ARISING 
OBSOLETE  * OUT OF OR IN CONNECTION WITH THE USE OF THE SOFTWARE, EVEN 
OBSOLETE  * IF IT HAS BEEN OR IS HEREAFTER ADVISED OF THE POSSIBILITY OF 
OBSOLETE  * SUCH DAMAGES.
OBSOLETE  */
OBSOLETE 
OBSOLETE #include "arla_local.h"
OBSOLETE 
OBSOLETE RCSID("$arla: darla.c,v 1.8 2002/07/23 15:22:51 lha Exp $");
OBSOLETE 
OBSOLETE int DARLA_Open(DARLA_file *Dfp, char *fname, int oflag)
OBSOLETE {
OBSOLETE 
OBSOLETE   int fd;
OBSOLETE 
OBSOLETE   fd = open(fname, oflag, 0600);
OBSOLETE   if (fd == -1)
OBSOLETE       arla_log(ADEBMISC, "DARLA_Open: errno=%d", errno); 
OBSOLETE   if (fd > 0)
OBSOLETE   {
OBSOLETE     Dfp->fd = fd;
OBSOLETE     Dfp->offset=0;
OBSOLETE     Dfp->log_entries = 0;
OBSOLETE   }
OBSOLETE 
OBSOLETE   return fd;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Close(DARLA_file *Dfp)
OBSOLETE {
OBSOLETE   int ret;
OBSOLETE   
OBSOLETE   ret = close(Dfp->fd);
OBSOLETE   Dfp->fd = 0;
OBSOLETE   Dfp->offset =0;
OBSOLETE   arla_log(ADEBMISC, "DARLA_Close: ret=%d", ret);
OBSOLETE   return ret;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Read(DARLA_file *Dfp, char *cp, int len)
OBSOLETE {
OBSOLETE   ssize_t read_size;
OBSOLETE   
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     read_size = read (Dfp->fd, cp, len);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     read_size = 0;
OBSOLETE 
OBSOLETE   return read_size;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Write(DARLA_file *Dfp, char *cp, int len)
OBSOLETE {
OBSOLETE   ssize_t write_size;
OBSOLETE 
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     write_size = write(Dfp->fd, cp, len);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     write_size = 0;
OBSOLETE   
OBSOLETE   return write_size;
OBSOLETE }
OBSOLETE 
OBSOLETE int DARLA_Seek(DARLA_file *Dfp, int offset, int whence)
OBSOLETE {
OBSOLETE 
OBSOLETE   off_t lseek_off;
OBSOLETE 
OBSOLETE   if (Dfp->fd)
OBSOLETE   {
OBSOLETE     lseek_off = lseek(Dfp->fd, offset, whence);
OBSOLETE   }
OBSOLETE   else
OBSOLETE     lseek_off = 0;
OBSOLETE 
OBSOLETE   return lseek_off;
OBSOLETE }
@


