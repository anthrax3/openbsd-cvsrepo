head	1.5;
access;
symbols
	OPENBSD_5_2:1.4.0.38
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.36
	OPENBSD_5_0:1.4.0.34
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2012.08.23.06.21.50;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2003.08.05.08.42.41;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.07.04.28.57;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.11.14.40.42;	author art;	state Exp;
branches;
next	1.1;

1.1
date	99.04.30.01.59.08;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.23;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.01;	author hin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1998 - 2000 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: fs_errors.h,v 1.12 2003/03/06 00:39:29 lha Exp $ */

#ifndef _FS_ERRORS_H_
#define _FS_ERRORS_H_ 1

#include <rx/rx.h>
#include <uae.h>

#if !defined(__GNUC__) && !defined(__attribute__)
#define __attribute__(x)
#endif

#define VICE_SPECIAL_ERRORS	101

#define VICE_SPECIAL_ERRORS_MIN	101
#define VICE_SPECIAL_ERRORS_MAX	112

#define VSALVAGE		101
#define VNOVNODE		102
#define VNOVOL			103
#define VVOLEXISTS		104
#define VNOSERVICE		105
#define VOFFLINE		106
#define VONLINE			107
#define VDISKFULL		108
#define VOVERQUOTA		109
#define VBUSY			110
#define VMOVED			111
#define VIO			112

#define VRESTARTING		-100

#define ARLA_SPECIAL_ERROR_ADD	  4000
#define ARLA_SPECIAL2_ERROR_ADD	  4600
#define ARLA_SPECIAL_RX_ERROR_ADD 4800 /* ->4899 */

#define ARLA_VSALVAGE		(ARLA_SPECIAL_ERROR_ADD+VSALVAGE)
#define ARLA_VNOVNODE		(ARLA_SPECIAL_ERROR_ADD+VNOVNODE)
#define ARLA_VNOVOL		(ARLA_SPECIAL_ERROR_ADD+VNOVOL)
#define ARLA_VVOLEXISTS		(ARLA_SPECIAL_ERROR_ADD+VVOLEXISTS)
#define ARLA_VNOSERVICE		(ARLA_SPECIAL_ERROR_ADD+VNOSERVICE)
#define ARLA_VOFFLINE		(ARLA_SPECIAL_ERROR_ADD+VOFFLINE)
#define ARLA_VONLINE		(ARLA_SPECIAL_ERROR_ADD+VONLINE)
#define ARLA_VDISKFULL		(ARLA_SPECIAL_ERROR_ADD+VDISKFULL)
#define ARLA_VOVERQUOTA		(ARLA_SPECIAL_ERROR_ADD+VOVERQUOTA)
#define ARLA_VBUSY		(ARLA_SPECIAL_ERROR_ADD+VBUSY)
#define ARLA_VMOVED		(ARLA_SPECIAL_ERROR_ADD+VMOVED)
#define ARLA_VIO		(ARLA_SPECIAL_ERROR_ADD+VIO)

#define ARLA_VRESTARTING	(ARLA_SPECIAL2_ERROR_ADD+VRESTARTING)

#define ARLA_CALL_DEAD		(ARLA_SPECIAL_RX_ERROR_ADD-RX_CALL_DEAD)
#define ARLA_INVALID_OPERATION	(ARLA_SPECIAL_RX_ERROR_ADD-RX_INVALID_OPERATION)
#define ARLA_CALL_TIMEOUT	(ARLA_SPECIAL_RX_ERROR_ADD-RX_CALL_TIMEOUT)
#define ARLA_EOF		(ARLA_SPECIAL_RX_ERROR_ADD-RX_EOF)
#define ARLA_PROTOCOL_ERROR	(ARLA_SPECIAL_RX_ERROR_ADD-RX_PROTOCOL_ERROR)
#define ARLA_USER_ABORT		(ARLA_SPECIAL_RX_ERROR_ADD-RX_USER_ABORT)
#define ARLA_ADDRINUSE		(ARLA_SPECIAL_RX_ERROR_ADD-RX_ADDRINUSE)
#define ARLA_MSGSIZE		(ARLA_SPECIAL_RX_ERROR_ADD-RX_MSGSIZE)

static inline int __attribute__ ((unused))
conv_to_arla_errno(int error)
{
    if (error >= VICE_SPECIAL_ERRORS_MIN &&
	error <= VICE_SPECIAL_ERRORS_MAX)
	return error + ARLA_SPECIAL_ERROR_ADD;
    else if (error == VRESTARTING)
	return ARLA_VRESTARTING;
    else if (error <= RX_MIN_ERROR && error >= RX_MAX_ERROR)
	return ARLA_SPECIAL_RX_ERROR_ADD - error;    /* RX code are negative */
    else
	return uae_error_to_errno(error);
}

#endif /* _FS_ERRORS_H_ */
@


1.4
log
@Merge
@
text
@@


1.3
log
@merge
@
text
@d34 1
a34 1
/* $KTH: fs_errors.h,v 1.10 2000/11/26 21:54:19 lha Exp $ */
d40 5
d105 1
a105 1
	return error;
@


1.2
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d34 1
a34 1
/* $Id: fs_errors.h,v 1.8 2000/04/02 20:46:07 assar Exp $ */
d39 2
d61 3
a63 2
#define ARLA_SPECIAL_ERROR_ADD	4000
#define ARLA_SPECIAL2_ERROR_ADD	4600
d77 1
d80 9
d97 2
@


1.1
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (c) 1998, 1999 Kungliga Tekniska Högskolan
d38 2
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1998 - 2000 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
a39 2
/* $KTH: fs_errors.h,v 1.10 2000/11/26 21:54:19 lha Exp $ */

a42 2
#include <rx/rx.h>

d63 2
a64 3
#define ARLA_SPECIAL_ERROR_ADD	  4000
#define ARLA_SPECIAL2_ERROR_ADD	  4600
#define ARLA_SPECIAL_RX_ERROR_ADD 4800 /* ->4899 */
a77 1

a79 9
#define ARLA_CALL_DEAD		(ARLA_SPECIAL_RX_ERROR_ADD-RX_CALL_DEAD)
#define ARLA_INVALID_OPERATION	(ARLA_SPECIAL_RX_ERROR_ADD-RX_INVALID_OPERATION)
#define ARLA_CALL_TIMEOUT	(ARLA_SPECIAL_RX_ERROR_ADD-RX_CALL_TIMEOUT)
#define ARLA_EOF		(ARLA_SPECIAL_RX_ERROR_ADD-RX_EOF)
#define ARLA_PROTOCOL_ERROR	(ARLA_SPECIAL_RX_ERROR_ADD-RX_PROTOCOL_ERROR)
#define ARLA_USER_ABORT		(ARLA_SPECIAL_RX_ERROR_ADD-RX_USER_ABORT)
#define ARLA_ADDRINUSE		(ARLA_SPECIAL_RX_ERROR_ADD-RX_ADDRINUSE)
#define ARLA_MSGSIZE		(ARLA_SPECIAL_RX_ERROR_ADD-RX_MSGSIZE)

a87 2
    else if (error <= RX_MIN_ERROR && error >= RX_MAX_ERROR)
	return ARLA_SPECIAL_RX_ERROR_ADD - error;    /* RX code are negative */
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d34 1
a34 1
/* $arla: fs_errors.h,v 1.12 2003/03/06 00:39:29 lha Exp $ */
a39 5
#include <uae.h>

#if !defined(__GNUC__) && !defined(__attribute__)
#define __attribute__(x)
#endif
d100 1
a100 1
	return uae_error_to_errno(error);
@


