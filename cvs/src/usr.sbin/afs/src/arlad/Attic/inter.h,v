head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	arla-20030805:1.1.1.3
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	arla-0-35-7:1.1.1.2
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.08.23.06.21.50;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2003.08.05.08.42.41;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.07.04.28.57;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.11.14.40.42;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.08;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.52.57;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.52.57;	author art;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.07.04.14.24;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.05.08.21.01;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2002 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * The interface to the cache manager.
 */

/* $arla: inter.h,v 1.36 2003/01/09 16:40:10 lha Exp $ */

#ifndef _INTER_H_
#define _INTER_H_

#include <cred.h>

void
cm_init (void);

void
cm_store_state (void);

int
cm_open (FCacheEntry *entry, CredCacheEntry *ce, u_int tokens);

int
cm_close (FCacheEntry *entry, int flag, AFSStoreStatus *status,
	  CredCacheEntry* ce);

int
cm_getattr (FCacheEntry *entry,
	    CredCacheEntry *ce,
	    AccessEntry **ae);

int
cm_setattr (FCacheEntry *entry, AFSStoreStatus *attr, CredCacheEntry *ce);

int
cm_ftruncate (FCacheEntry *entry, off_t size,
	      AFSStoreStatus *storeattr, CredCacheEntry *ce);

int
cm_access (FCacheEntry *entry, int mode, CredCacheEntry *ce);

int
cm_lookup (FCacheEntry **entry, const char *name, VenusFid *res,
	   CredCacheEntry **ce, int follow_mount_point);
int
cm_create (FCacheEntry **dir, const char *name, AFSStoreStatus *store_attr,
	   VenusFid *res, AFSFetchStatus *fetch_attr,
	   CredCacheEntry **ce);
int
cm_mkdir (FCacheEntry **dir, const char *name, AFSStoreStatus *store_attr,
	  VenusFid *res, AFSFetchStatus *fetch_attr,
	  CredCacheEntry **ce);

int
cm_remove (FCacheEntry **dir, const char *name, CredCacheEntry **ce);

int
cm_rmdir (FCacheEntry **dir, const char *name, CredCacheEntry **ce);

int
cm_link (FCacheEntry **dir, const char *name,
	 VenusFid existing_fid,
	 AFSFetchStatus *existing_status,
	 CredCacheEntry **ce);

int
cm_symlink (FCacheEntry **dir, const char *name,
	    AFSStoreStatus *store_attr,
	    VenusFid *res, VenusFid *real_fid,
	    AFSFetchStatus *fetch_attr,
	    const char *contents,
	    CredCacheEntry **ce);

int
cm_rename(FCacheEntry **old_dir, const char *old_name,
	  FCacheEntry **new_dir, const char *new_name,
	  VenusFid *child_fid,
	  int *update_child,
	  CredCacheEntry **ce);

int
cm_walk (VenusFid fid,
	 const char *name,
	 VenusFid *res);

void
cm_check_consistency (void);

void
cm_turn_on_consistency_check(void);

#endif /* _INTER_H_ */
@


1.5
log
@Merge
@
text
@@


1.4
log
@merge
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d38 1
a38 1
/* $KTH: inter.h,v 1.24 2000/11/28 01:42:15 lha Exp $ */
a44 11
/*
 * This is the return value of all these operations.
 * Iff res == -1, the error reason should be errno.
 */

typedef struct {
    int res;			/* result */
    int error;			/* error if res == -1 */
    u_int tokens;		/* resulting tokens (if res == 0) */
} Result;

d51 9
a59 11
Result
cm_open (VenusFid *fid, CredCacheEntry **ce, u_int tokens,
	 fcache_cache_handle *, char *, size_t);

Result
cm_close (VenusFid fid, int flag, AFSStoreStatus *, CredCacheEntry *ce);

Result
cm_getattr (VenusFid fid,
	    AFSFetchStatus *attr,
	    VenusFid *real_fid,
d63 2
a64 2
Result
cm_setattr (VenusFid fid, AFSStoreStatus *attr, CredCacheEntry *ce);
d66 3
a68 2
Result
cm_ftruncate (VenusFid fid, off_t size, CredCacheEntry *ce);
d70 2
a71 2
Result
cm_access (VenusFid fid, int mode, CredCacheEntry *ce);
d73 2
a74 2
Result
cm_lookup (VenusFid *dir_fid, const char *name, VenusFid *res,
d76 2
a77 2
Result
cm_create (VenusFid *dir_fid, const char *name, AFSStoreStatus *store_attr,
d80 2
a81 2
Result
cm_mkdir (VenusFid *dir_fid, const char *name, AFSStoreStatus *store_attr,
d85 2
a86 2
Result
cm_remove (VenusFid *dir_fid, const char *name, CredCacheEntry **ce);
d88 2
a89 2
Result
cm_rmdir (VenusFid *dir_fid, const char *name, CredCacheEntry **ce);
d91 2
a92 2
Result
cm_link (VenusFid *dir_fid, const char *name,
d97 2
a98 2
Result
cm_symlink (VenusFid *dir_fid, const char *name,
d105 3
a107 3
Result
cm_rename(VenusFid *old_parent_fid, const char *old_name,
	  VenusFid *new_parent_fid, const char *new_name,
d111 5
@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d38 1
a38 1
/* $Id: inter.h,v 1.21 2000/06/05 02:14:24 assar Exp $ */
d64 1
a64 1
	 xfs_cache_handle *, char *, size_t);
d125 1
a125 1
cm_check_usedbytes_consistency (void);
d128 1
a128 1
cm_turn_on_usedbytes_consistency(void);
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998 Kungliga Tekniska Högskolan
d43 1
a43 1
/* $KTH: inter.h,v 1.16 1999/01/10 20:25:58 map Exp $ */
d68 1
a68 1
cm_open (VenusFid fid, CredCacheEntry *ce, u_int tokens,
d91 2
a92 2
cm_lookup (VenusFid dir_fid, const char *name, VenusFid *res,
	   CredCacheEntry **ce);
d94 1
a94 1
cm_create (VenusFid dir_fid, const char *name, AFSStoreStatus *store_attr,
d96 1
a96 1
	   CredCacheEntry* ce);
d98 1
a98 1
cm_mkdir (VenusFid dir_fid, const char *name, AFSStoreStatus *store_attr,
d100 1
a100 4
	  CredCacheEntry* ce);

Result
cm_remove (VenusFid dir_fid, const char *name, CredCacheEntry *ce);
d103 1
a103 1
cm_rmdir (VenusFid dir_fid, const char *name, CredCacheEntry *ce);
d106 1
a106 1
cm_readdir (VenusFid fid);
d109 1
a109 1
cm_link (VenusFid dir_fid, const char *name,
d112 1
a112 1
	 CredCacheEntry* ce);
d115 1
a115 1
cm_symlink (VenusFid dir_fid, const char *name,
d117 2
a118 1
	    VenusFid *res, AFSFetchStatus *fetch_attr,
d120 1
a120 1
	    CredCacheEntry* ce);
d123 11
a133 3
cm_rename(VenusFid old_parent_fid, const char *old_name,
	  VenusFid new_parent_fid, const char *new_name,
	  CredCacheEntry* ce);
@


1.1
log
@Initial revision
@
text
@d44 1
a44 1
/* $KTH: inter.h,v 1.14 1998/07/22 07:04:06 assar Exp $ */
d57 3
a59 3
     int res;
     int error;
     u_int tokens;
d69 2
a70 1
cm_open (VenusFid fid, CredCacheEntry *ce, u_int tokens);
d73 1
a73 1
cm_close (VenusFid fid, int flag, CredCacheEntry *ce);
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@


1.1.1.2
log
@Import of arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
d44 1
a44 1
/* $KTH: inter.h,v 1.24 2000/11/28 01:42:15 lha Exp $ */
d57 3
a59 3
    int res;			/* result */
    int error;			/* error if res == -1 */
    u_int tokens;		/* resulting tokens (if res == 0) */
d69 1
a69 2
cm_open (VenusFid *fid, CredCacheEntry **ce, u_int tokens,
	 fcache_cache_handle *, char *, size_t);
d72 1
a72 1
cm_close (VenusFid fid, int flag, AFSStoreStatus *, CredCacheEntry *ce);
d91 2
a92 2
cm_lookup (VenusFid *dir_fid, const char *name, VenusFid *res,
	   CredCacheEntry **ce, int follow_mount_point);
d94 1
a94 1
cm_create (VenusFid *dir_fid, const char *name, AFSStoreStatus *store_attr,
d96 1
a96 1
	   CredCacheEntry **ce);
d98 1
a98 1
cm_mkdir (VenusFid *dir_fid, const char *name, AFSStoreStatus *store_attr,
d100 4
a103 1
	  CredCacheEntry **ce);
d106 1
a106 1
cm_remove (VenusFid *dir_fid, const char *name, CredCacheEntry **ce);
d109 1
a109 1
cm_rmdir (VenusFid *dir_fid, const char *name, CredCacheEntry **ce);
d112 1
a112 1
cm_link (VenusFid *dir_fid, const char *name,
d115 1
a115 1
	 CredCacheEntry **ce);
d118 1
a118 1
cm_symlink (VenusFid *dir_fid, const char *name,
d120 1
a120 2
	    VenusFid *res, VenusFid *real_fid,
	    AFSFetchStatus *fetch_attr,
d122 1
a122 1
	    CredCacheEntry **ce);
d125 3
a127 11
cm_rename(VenusFid *old_parent_fid, const char *old_name,
	  VenusFid *new_parent_fid, const char *new_name,
	  VenusFid *child_fid,
	  int *update_child,
	  CredCacheEntry **ce);

void
cm_check_consistency (void);

void
cm_turn_on_consistency_check(void);
@


1.1.1.3
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2002 Kungliga Tekniska Högskolan
d38 1
a38 1
/* $arla: inter.h,v 1.36 2003/01/09 16:40:10 lha Exp $ */
d45 11
d62 11
a72 9
int
cm_open (FCacheEntry *entry, CredCacheEntry *ce, u_int tokens);

int
cm_close (FCacheEntry *entry, int flag, AFSStoreStatus *status,
	  CredCacheEntry* ce);

int
cm_getattr (FCacheEntry *entry,
d76 2
a77 2
int
cm_setattr (FCacheEntry *entry, AFSStoreStatus *attr, CredCacheEntry *ce);
d79 2
a80 3
int
cm_ftruncate (FCacheEntry *entry, off_t size,
	      AFSStoreStatus *storeattr, CredCacheEntry *ce);
d82 2
a83 2
int
cm_access (FCacheEntry *entry, int mode, CredCacheEntry *ce);
d85 2
a86 2
int
cm_lookup (FCacheEntry **entry, const char *name, VenusFid *res,
d88 2
a89 2
int
cm_create (FCacheEntry **dir, const char *name, AFSStoreStatus *store_attr,
d92 2
a93 2
int
cm_mkdir (FCacheEntry **dir, const char *name, AFSStoreStatus *store_attr,
d97 2
a98 2
int
cm_remove (FCacheEntry **dir, const char *name, CredCacheEntry **ce);
d100 2
a101 2
int
cm_rmdir (FCacheEntry **dir, const char *name, CredCacheEntry **ce);
d103 2
a104 2
int
cm_link (FCacheEntry **dir, const char *name,
d109 2
a110 2
int
cm_symlink (FCacheEntry **dir, const char *name,
d117 3
a119 3
int
cm_rename(FCacheEntry **old_dir, const char *old_name,
	  FCacheEntry **new_dir, const char *new_name,
a122 5

int
cm_walk (VenusFid fid,
	 const char *name,
	 VenusFid *res);
@


