head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.24
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.22
	OPENBSD_5_0:1.5.0.20
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.18
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.16
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.08.23.06.21.52;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2006.11.17.20.54.47;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.05.09.07.34;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.07.04.41.27;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.09;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.30;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.04;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@/* $arla: process.m68k.S,v 1.7 2000/08/25 14:49:04 lha Exp $ */

/*
****************************************************************************
*        Copyright IBM Corporation 1988, 1989 - All Rights Reserved        *
*                                                                          *
* Permission to use, copy, modify, and distribute this software and its    *
* documentation for any purpose and without fee is hereby granted,         *
* provided that the above copyright notice appear in all copies and        *
* that both that copyright notice and this permission notice appear in     *
* supporting documentation, and that the name of IBM not be used in        *
* advertising or publicity pertaining to distribution of the software      *
* without specific, written prior permission.                              *
*                                                                          *
* IBM DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL *
* IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS, IN NO EVENT SHALL IBM *
* BE LIABLE FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY      *
* DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER  *
* IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING   *
* OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.    *
****************************************************************************
*/

#include <config.h>

#undef RCSID

#include <lwp_elf.h>

#if !defined(__ELF__) && !defined(sun3)
#define reg(x) x
#else /* __ELF__ || sun3 */
#ifdef __STDC__
#define reg(x) %##x
#else
#define reg(x) %/**/x
#endif /* __STDC__ */
#endif /* __ELF__ || sun3 */

/*
#
#	Information Technology Center
#	Carnegie-Mellon University
#
#
*/
	.data

/*
#
#	Process assembly language assist for Suns.
#
*/

	.text
	.even

/*
#
# struct savearea {
#	char	*topstack;
# }
#
*/

	.globl	_C_LABEL(PRE_Block)
	.globl	_C_LABEL(savecontext)
	.globl	_C_LABEL(returnto)
	
topstack =	0

/* Stuff to allow saving/restoring registers */
nregs	=	13
regs	=	0x3ffe			| d1-d7 & a0-a5

/*
# savecontext(f, area1, newsp)
#     int (*f)(); struct savearea *area1; char *newsp;
*/

/* Stack offsets of arguments */
f	=	8
area1	=	12
newsp	=	16

ENTRY(savecontext)
	movl	#1,_C_LABEL(PRE_Block)	| Dont allow any interrupt finagling
	link	reg(a6),#-(nregs*4)	| Save frame pointer & ...
					| ... allocate space for nregs registers
/* Save registers */
	moveml	#regs,reg(sp)@@

	movl	reg(a6)@@(area1),reg(a0)		| a0 = base of savearea
	movl	reg(sp),reg(a0)@@(topstack)	| area->topstack = sp
	movl	reg(a6)@@(newsp),reg(d0)		| Get new sp
	jeq	forw1			| If newsp == 0, no stack switch
	movl	reg(d0),reg(sp)			| Switch to new stack
forw1:
	movl	reg(a6)@@(f),reg(a0)		| a0 = f
	jbsr	reg(a0)@@			| f()

/* It is impossible to be here, so abort() */

	jbsr	_C_LABEL(abort)

/*
# returnto(area2)
#     struct savearea *area2;
*/

/* Stack offset of argument */
area2	=	8

ENTRY(returnto)
	link	reg(a6),#0
	movl	reg(a6)@@(area2),reg(a0)		| Base of savearea
	movl	reg(a0)@@(topstack),reg(sp)	| Restore sp
/* Restore registers */
	moveml	reg(sp)@@,#regs

	addl	#(nregs*4),reg(sp)
	movl	reg(sp),reg(a6)			| Argghh...be careful here
	unlk	reg(a6)
	clrl	_C_LABEL(PRE_Block)
	rts					| Return to previous process
@


1.5
log
@change PRE_Block to an int, which architectures like alpha can access
atomically. Adapt all the others (except s390 which is not fixed yet).

mips and hppa still do not work for some other reason.

testing by beck, ckuethe, todd, asm proofreading by miod
@
text
@@


1.4
log
@Merge
@
text
@d87 1
a87 1
	movb	#1,_C_LABEL(PRE_Block)	| Dont allow any interrupt finagling
d124 1
a124 1
	clrb	_C_LABEL(PRE_Block)
@


1.3
log
@merge
@
text
@d1 1
a1 1
/* $KTH: process.m68k.S,v 1.7 2000/08/25 14:49:04 lha Exp $ */
@


1.2
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/* $Id: process.m68k.S,v 1.1 2000/09/11 14:41:09 art Exp $ */
d33 1
d35 3
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d1 1
a1 1
/* $Id: process.m68k.S,v 1.7 2000/08/25 14:49:04 lha Exp $ */
a32 1
#ifdef __STDC__
a33 3
#else
#define reg(x) %/**/x
#endif /* __STDC__ */
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d1 1
a1 1
/* $KTH: process.m68k.S,v 1.7 2000/08/25 14:49:04 lha Exp $ */
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d1 1
a1 1
/* $arla: process.m68k.S,v 1.7 2000/08/25 14:49:04 lha Exp $ */
@


