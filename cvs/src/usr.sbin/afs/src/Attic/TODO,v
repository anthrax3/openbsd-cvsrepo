head	1.5;
access;
symbols
	OPENBSD_5_2:1.4.0.42
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.40
	OPENBSD_5_0:1.4.0.38
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.36
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.34
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.30
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.32
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.28
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.26
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.24
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.22
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.20
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.18
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.16
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	arla-0-35-7:1.1.1.2
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2012.08.23.06.21.46;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2002.06.07.04.49.04;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.11.14.40.29;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.04;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.52.52;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.52.52;	author art;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.07.04.14.18;	author hin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@the afs src tree can go away
@
text
@
  $KTH: TODO,v 1.140 2001/01/07 18:36:47 lha Exp $

    Release 0.36:
       Check Solaris
          SMP
	  xfs_map/xfs_getpage (check why patch doesn't work)
       Linux
          webserver (symlink loose contents)

    Release 0.35:
       MacOS X
          run-tests
          ran (find fd/vnode leek)
       Check with E people is bugs are fixed (rename of volume, ...)

   TODO-list, in no particular order.

Please mail arla-drinkers@@stacken.kth.se if you want to work on
any of these things so we don't do double work.

- fix weirdness with fake mount points
  installattr (token w/o data) (ls -l ; ls foo ; ls bar)

arlad: add regular pinging of file servers

fs flushall:
-volume ?
is this really good ?

xfs/linux: 
check that we DTRT wrt Documentation/filesystem/Locking.txt

xfs/*: teach xfs to read AFS directories for readdir

xfs/linux: check if we can hook into vm_operations/address_space to
figure out when cache pages are dirty and need to flushed.

*/Makefile.in: allow creation of shared libraries

*/Makefile.in: homogenize

arlad/xfs: return from open before fetching the whole file

arlad/xfs: cache in blocks (iff ?) file too large to fit in cache ?

arlad/xfs: implement advisory locking

arlad: more improvements on writing in disconnected mode

arlad: fallback to disconnected mode if networking is not working (possibly per cell)

arlad: more consistency checks before recovering state

arlad: remove unused stuff from FCacheEntry

xfs/aix: figure out where the PAG should be stored

xfs/irix: fix syscall and implement setgroups wrapper

xfs/irix: port to Irix 6.5

xfs/solaris: verify multithreadness, merge xnode and vnode mutex locks

xfs/sunos: implement setgroups wrapper

xfs: support building as part of the kernel

OPTIMIZATIONS

This is a list of posible optimizations that could be done to different parts
of arla.

 - Delay reads and writes to cache and AFS-servers. Make the more operations
   in one batch. (possible with rx?) Especially directories don't have to be
   synced for every operation.

 - send more messages to/from arlad in one sweep. (lookup on whole path in one
   message, getattr+getdata, etc..)

MILKO

Filbunke, the nnp-class-server generation:
- callbacks
- logging
- fsck/salvage, stability, more tests
- SPEED, real i*op
- volser (?)
- pts,vldb
- security
@


1.4
log
@merge
@
text
@@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d2 14
a15 1
$Id: TODO,v 1.124 2000/08/25 02:54:30 assar Exp $
a26 4
arlad/xfs:
cope with removal of a directory that is later changed to a
mountpoint

a30 7
arlad: find_first_fs:
rename/creation of a volume of the old name might cause (is known to)
that the assert(bit); fail. (check patch)

arlad/xfs:
cope with vos remove/vos create of a volume (SoftAssert on linux)

d32 1
a32 3
check that dcache-stuff works with al viro's dcache changes
verify locking with i_zombie
verify that we do the right thing with locking in 2.3.x
d63 1
a63 1
xfs/solaris: verify multithreadness
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d1 2
a2 1
$Id: TODO,v 1.93 1999/02/27 11:24:13 assar Exp $
d9 2
a10 1
*/Makefile.in: homogenize
d12 1
a12 1
*/Makefile.in: allow creation of shared libraries
d14 3
a16 1
tests: make sure all tests work everywhere
d18 3
a20 3
tests: figure out what output should be sent where and with what options
	
arlad/xfs: More stable, bugfixes etc
d22 3
a24 1
xfs/solaris: verify multithreadness
d26 2
a27 1
xfs+arlad: implement advisory locking
d29 4
a32 1
xfs: support building as part of the kernel
d34 1
a34 1
xfs/irix: port to Irix 6.5
d36 2
a37 1
arlad: disconnected mode
d39 1
a39 1
arlad: remove unused stuff from FCacheEntry
d41 1
a41 2
arlad: fallback to disconnected mode if networking is not working
(possibly per cell)
d45 8
d55 3
a57 1
more tests in test suite
d59 1
a59 1
cache in blocks (iff ?) file to large to fit in cache ?
d61 1
a61 1
rewrite milko (vfs-switch ?)
d63 5
a67 1
autoconf -j
d80 11
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
$Id: TODO,v 1.81 1998/07/29 21:35:12 assar Exp $
d8 8
d22 4
d35 9
a43 1
test suite
a48 3

 - Store cache files in inodes. Bypass the upper layer of VFS to read and
   write cache.
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@


1.1.1.2
log
@Import of arla-0.35.7
@
text
@d1 1
a1 15

  $KTH: TODO,v 1.140 2001/01/07 18:36:47 lha Exp $

    Release 0.36:
       Check Solaris
          SMP
	  xfs_map/xfs_getpage (check why patch doesn't work)
       Linux
          webserver (symlink loose contents)

    Release 0.35:
       MacOS X
          run-tests
          ran (find fd/vnode leek)
       Check with E people is bugs are fixed (rename of volume, ...)
d8 1
a8 2
- fix weirdness with fake mount points
  installattr (token w/o data) (ls -l ; ls foo ; ls bar)
d10 1
a10 1
arlad: add regular pinging of file servers
d12 1
a12 3
fs flushall:
-volume ?
is this really good ?
d14 1
a14 2
xfs/linux: 
check that we DTRT wrt Documentation/filesystem/Locking.txt
d16 1
a16 6
xfs/*: teach xfs to read AFS directories for readdir

xfs/linux: check if we can hook into vm_operations/address_space to
figure out when cache pages are dirty and need to flushed.

*/Makefile.in: allow creation of shared libraries
d18 2
a19 1
*/Makefile.in: homogenize
d23 1
a23 23
arlad/xfs: cache in blocks (iff ?) file too large to fit in cache ?

arlad/xfs: implement advisory locking

arlad: more improvements on writing in disconnected mode

arlad: fallback to disconnected mode if networking is not working (possibly per cell)

arlad: more consistency checks before recovering state

arlad: remove unused stuff from FCacheEntry

xfs/aix: figure out where the PAG should be stored

xfs/irix: fix syscall and implement setgroups wrapper

xfs/irix: port to Irix 6.5

xfs/solaris: verify multithreadness, merge xnode and vnode mutex locks

xfs/sunos: implement setgroups wrapper

xfs: support building as part of the kernel
d30 3
a38 11

MILKO

Filbunke, the nnp-class-server generation:
- callbacks
- logging
- fsck/salvage, stability, more tests
- SPEED, real i*op
- volser (?)
- pts,vldb
- security
@

