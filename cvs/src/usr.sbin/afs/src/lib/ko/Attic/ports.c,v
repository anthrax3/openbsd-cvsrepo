head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	arla-20030805:1.1.1.3
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	arla-0-35-7:1.1.1.2
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.08.23.06.21.51;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2003.08.05.08.47.46;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.07.04.38.03;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.11.14.40.58;	author art;	state Exp;
branches;
next	1.2;

1.2
date	99.04.30.01.59.11;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.53.00;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.53.00;	author art;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.07.04.14.29;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.05.08.21.03;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Take care of the port stuff.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif
#include <roken.h>
#ifdef HAVE_NETDB_H
#include <netdb.h>
#endif
#ifdef HAVE_NETINET_IN_H
#include <netinet/in.h>
#endif
#include <stdio.h>

#include "ports.h"

RCSID("$arla: ports.c,v 1.12 2001/04/22 01:23:12 lha Exp $") ;

typedef struct {
     const char *name;		/* Name of the service */
     const char *proto;		/* Protocol */
     int *port;			/* Variable with port-value */
     int defport;		/* Default port */
} Port;

int afsport = 0,
    afscallbackport = 0,
    afsprport = 0,
    afsvldbport = 0,
    afskaport = 0,
    afsvolport = 0,
    afserrorsport = 0,
    afsbosport = 0,
    afsupdateport = 0,
    afsrmtsys = 0;

Port ports[] = {
{"afs3-fileserver",	"udp", &afsport,	7000},
{"afs3-callback",       "udp", &afscallbackport,7001},
{"afs3-prserver",       "udp", &afsprport,      7002},
{"afs3-vlserver",	"udp", &afsvldbport,	7003},
{"afs3-kaserver",       "udp", &afskaport,      7004},
{"afs3-volser",         "udp", &afsvolport,     7005},
{"afs3-errors",         "udp", &afserrorsport,  7006},
{"afs3-bos",            "udp", &afsbosport,     7007},
{"afs3-update",         "udp", &afsupdateport,  7008},
{"afs3-rmtsys",         "udp", &afsrmtsys,      7009}
};

/*
 * Find all ports and set their values.
 */

void
ports_init (void)
{
     static int inited = 0;
     int i;

     if (inited)
	 return;

     for (i = 0; i < sizeof (ports) / sizeof (*ports); ++i) {
	  struct servent *service;

	  service = getservbyname (ports[i].name, ports[i].proto);
	  if (service == NULL)
	       *(ports[i].port) = ports[i].defport;
	  else
	       *(ports[i].port) = ntohs (service->s_port);
     }
     inited = 1;
}

/*
 * port -> name
 */

const char *
ports_num2name (int port)
{
     int i;

     for (i = 0; i < sizeof (ports) / sizeof (*ports); ++i) {

	 if (*(ports[i].port) == port)
	     return ports[i].name;
     }
     return NULL;
}
@


1.5
log
@Merge
@
text
@@


1.4
log
@merge
@
text
@d52 1
a52 1
RCSID("$KTH: ports.c,v 1.10.2.1 2001/04/22 01:21:37 lha Exp $") ;
@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d52 1
a52 1
RCSID("$Id: ports.c,v 1.8 1999/12/31 05:38:41 assar Exp $") ;
d61 10
a70 3
int afsport, afscallbackport, afsprport, afsvldbport,
   afskaport, afsvolport, afserrorsport, afsbosport,
   afsupdateport, afsrmtsys ;
d102 1
a102 5
	  if (service == NULL) {

	       fprintf (stderr,
			"Unable to find service %s/%s, using port %d\n",
			ports[i].name, ports[i].proto, ports[i].defport);
d104 1
a104 1
	  } else
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@a0 1
/*	$OpenBSD$	*/
d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998 Kungliga Tekniska Högskolan
a46 1
#include <stdio.h>
d53 1
d55 3
a57 1
RCSID("$KTH: ports.c,v 1.6 1998/12/06 07:40:56 assar Exp $") ;
d90 1
d93 3
d109 1
@


1.1
log
@Initial revision
@
text
@d56 1
a56 1
RCSID("$KTH: ports.c,v 1.5 1998/06/07 05:44:38 map Exp $") ;
d87 1
a87 1
initports (void)
d104 17
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@


1.1.1.2
log
@Import of arla-0.35.7
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
d18 6
a23 1
 * 3. Neither the name of the Institute nor the names of its contributors
d48 1
a54 3
#include <stdio.h>

#include "ports.h"
d56 1
a56 1
RCSID("$KTH: ports.c,v 1.10.2.1 2001/04/22 01:21:37 lha Exp $") ;
d65 3
a67 10
int afsport = 0,
    afscallbackport = 0,
    afsprport = 0,
    afsvldbport = 0,
    afskaport = 0,
    afsvolport = 0,
    afserrorsport = 0,
    afsbosport = 0,
    afsupdateport = 0,
    afsrmtsys = 0;
d87 1
a87 1
ports_init (void)
a88 1
     static int inited = 0;
a90 3
     if (inited)
	 return;

d95 5
a99 1
	  if (service == NULL)
d101 1
a101 1
	  else
a103 18
     inited = 1;
}

/*
 * port -> name
 */

const char *
ports_num2name (int port)
{
     int i;

     for (i = 0; i < sizeof (ports) / sizeof (*ports); ++i) {

	 if (*(ports[i].port) == port)
	     return ports[i].name;
     }
     return NULL;
@


1.1.1.3
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d52 1
a52 1
RCSID("$arla: ports.c,v 1.12 2001/04/22 01:23:12 lha Exp $") ;
@


