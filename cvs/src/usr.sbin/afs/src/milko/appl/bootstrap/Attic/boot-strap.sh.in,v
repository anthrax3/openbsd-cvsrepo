head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2012.08.23.06.21.52;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.42.37;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.11;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.30;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.04;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@#!/bin/sh
#
# Shell-script to bootstrap cell
#

# shell stuff

version="$arla: boot-strap.sh.in,v 1.4 2000/02/19 07:13:02 lha Exp $"
usage="Usage: $0 [-v] [-p /viceN ]"

#
# Milko Boot variables
#

#all zeros are needed on ROOTVOLNUM

ROOTVOL=root.cell
ROOTVOLNUM=00000003
ROOTPART=/vicepa

#
# Autoconf stuff
#

prefix=@@prefix@@
exec_prefix=@@exec_prefix@@
sbindir=@@sbindir@@
bindir=@@bindir@@
libexecdir=@@libexecdir@@
sysconfdir=@@sysconfdir@@

ksrvutil=/usr/athena/sbin/ksrvutil

while test $# -gt 0
do
    case $1 in
	-v) echo $version ; shift ; exit 1 ;;
	-p) ROOTPART=$2 ; 
	    shift 2 2>/dev/null || { echo $usage ; exit 1 }
	    ;;
	*)  echo $usage ; exit 1; break;;
    esac
done

#
# What we do if we fail
#

antibootstrapbin="${sbindir}/anti-boot-strap.sh"
antibootstrap="${antibootstrapbin} magic4711 $ROOTPART ${sysconfdir}"


PROGRAMS="$sbindir/sked \
    $libexecdir/fileserver \
    $libexecdir/ptserver \
    $libexecdir/bosserver \
    $libexecdir/vldbserver \
    $antibootstrapbin "

for a in $PROGRAMS; do
    if [ ! -x $a ] ; then
	echo "ERROR: missing $a, did you do a make install ?";
	exit 1;
    fi
done

if [ ! -d $ROOTPART ]; then
    echo "ERROR: You don't have a $ROOTPART katalog/mountpoint."
    echo "Please create.";
    exit 1
fi

# XXX figure out hostname

if [ -f $ROOTPART/vol$ROOTVOLNUM ] ; then
    echo "WARNING: are you sure you want to overwrite a existing installation"
    echo "There seams to be traces of a installation $ROOTPART"
    echo "Please remove it before retrying if you don't want it"
    exit 1
fi

if [ -f $sysconfdir/pr_database ] ; then
    echo "WARNING: there is already a pr database"
    echo "Remove it ($sysconfdir/pr_database) it you want to proceed"
    exit 1
fi

if [ -f $sysconfdir/vl_database ] ; then
    echo "WARNING: there is already a vl database"
    echo "Remove it ($sysconfdir/vl_database) it you want to proceed"
    exit 1
fi


if $sbindir/sked volcreate ${ROOTPART} ${ROOTVOLNUM} ${ROOTVOL}; then
    : ;
else
    echo "ERROR: failed to created ${ROOTVOL} with sked";
    exec ${antibootstrap}
fi

# XXX create root srvtab

if $libexecdir/vldbserver -create ; then
    : ;
else
    echo "ERROR: failed to vl database";
    exec ${antibootstrap}
fi

# XXX add rootvol

if $libexecdir/ptserver -create ; then
    : ;
else
    echo "ERROR: failed to pts database";
    exec ${antibootstrap}
fi

# XXX create a bosserver.conf

# XXX tell how to add users to system:administators (pts cu foo -local)

# XXX tell how to start bosserver

if test -x $ksrvutil ; then
    echo "Now its time to create kerberos tickets for you cell"
    echo "  For Name[rcmd]: write: afs"
    echo "  For Instance[hostname]: write: you.cell.here"
    echo "  For Realm [YOUR.REALM]: write YOUR.REALM.HERE"
    echo ""
    echo "  the rest is obvious"

    command="$ksrvutil -f $sysconfdir/srvtab -p $USER.admin get"

    echo "The command I'm try is \"$command\""

    eval $command

else

    echo "No kth-krb ksrvutil, create a srvtab with afs.you\.cell\.@@YOUR.REALM"
    echo "token in $sysconfdir"

fi

echo "Congratulations, done"

exit 0;@


1.3
log
@Merge
@
text
@@


1.2
log
@merge
@
text
@d8 1
a8 1
version="$KTH: boot-strap.sh.in,v 1.4 2000/02/19 07:13:02 lha Exp $"
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d8 1
a8 1
version="$Id: boot-strap.sh.in,v 1.4 2000/02/19 07:13:02 lha Exp $"
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d8 1
a8 1
version="$KTH: boot-strap.sh.in,v 1.4 2000/02/19 07:13:02 lha Exp $"
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d8 1
a8 1
version="$arla: boot-strap.sh.in,v 1.4 2000/02/19 07:13:02 lha Exp $"
@


