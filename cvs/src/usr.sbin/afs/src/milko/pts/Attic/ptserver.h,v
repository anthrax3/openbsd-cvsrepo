head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.08.23.06.21.53;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.42.38;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.19;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.33;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.06;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1998 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: ptserver.h,v 1.10 2001/10/12 15:25:50 tol Exp $ */

void
write_header(void);

void
read_header(void);

int
read_prentry(int id, prentry *pr_entry);

int
write_prentry(prentry *pr_entry);

int
store_disk_entry(prentry_disk *entry);

int
get_disk_entry(int id, prentry_disk *disk_entry);

int
get_ydr_disk_entry(int id, char **buf);

int
conv_name_to_id(const char *name, int *id);

int
conv_id_to_name(int id, char *name);

int
next_free_group_id(int *id);

int
next_free_user_id(int *id);

int
create_user(const char *name, int32_t id, int32_t owner, int32_t creator);
int
create_group(const char *name, int32_t id, int32_t owner, int32_t creator);

int
addtogroup(int32_t uid, int32_t gid);

int
removefromgroup(int32_t uid, int32_t gid);

int
listelements(int32_t id, prlist *elist, Bool default_id_p);

char *
localize_name(const char *name, Bool *localp);

extern prheader_disk pr_header;


@


1.3
log
@Merge
@
text
@@


1.2
log
@merge
@
text
@d34 1
a34 1
/* $KTH: ptserver.h,v 1.8 2000/10/03 00:20:56 lha Exp $ */
d36 5
a40 4
#define PRDB_DB		0x0200000
#define PRDB_RPC	0x0400000
#define PRDB_WARN	0x0800000
#define PRDB_ERROR	0x1000000
d42 2
a43 1
#define PR_DEFAULT_LOG (PRDB_WARN|PRDB_ERROR)
d45 2
a46 2
void
pt_setdebug (char *debug_level);
d48 2
a49 2
void
pt_debug (unsigned int level, char *fmt, ...);
d52 1
a52 1
get_pr_entry_by_id(int id, prentry *pr_entry);
d55 1
a55 1
get_pr_entry_by_name(const char *name, prentry *pr_entry);
d64 1
a64 1
next_free_group_id(void);
d67 1
a67 1
next_free_user_id(void);
d84 1
a84 1
localize_name(const char *name);
d86 1
a86 1
extern prheader pr_header;
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d34 49
a82 1
/* $Id: ptserver.h,v 1.6 2000/08/16 23:01:38 tol Exp $ */
a83 12
int get_pr_entry_by_id(int id, prentry *pr_entry);
int get_pr_entry_by_name(const char *name, prentry *pr_entry);
int conv_name_to_id(const char *name, int *id);
int conv_id_to_name(int id, char *name);
int next_free_group_id(void);
int next_free_user_id(void);
int create_user(const char *name, int32_t id, int32_t owner, int32_t creator);
int create_group(const char *name, int32_t id, int32_t owner, int32_t creator);
int addtogroup(int32_t uid, int32_t gid);
int removefromgroup(int32_t uid, int32_t gid);
int listelements(int32_t id, prlist *elist, Bool default_id_p);
char *localize_name(const char *name);
d85 2
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 49
/* $KTH: ptserver.h,v 1.8 2000/10/03 00:20:56 lha Exp $ */

#define PRDB_DB		0x0200000
#define PRDB_RPC	0x0400000
#define PRDB_WARN	0x0800000
#define PRDB_ERROR	0x1000000

#define PR_DEFAULT_LOG (PRDB_WARN|PRDB_ERROR)

void
pt_setdebug (char *debug_level);

void
pt_debug (unsigned int level, char *fmt, ...);

int
get_pr_entry_by_id(int id, prentry *pr_entry);

int
get_pr_entry_by_name(const char *name, prentry *pr_entry);

int
conv_name_to_id(const char *name, int *id);

int
conv_id_to_name(int id, char *name);

int
next_free_group_id(void);

int
next_free_user_id(void);

int
create_user(const char *name, int32_t id, int32_t owner, int32_t creator);
int
create_group(const char *name, int32_t id, int32_t owner, int32_t creator);

int
addtogroup(int32_t uid, int32_t gid);

int
removefromgroup(int32_t uid, int32_t gid);

int
listelements(int32_t id, prlist *elist, Bool default_id_p);

char *
localize_name(const char *name);
d41 12
a53 2


@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d34 8
a41 1
/* $arla: ptserver.h,v 1.10 2001/10/12 15:25:50 tol Exp $ */
d44 1
a44 1
write_header(void);
d47 1
a47 10
read_header(void);

int
read_prentry(int id, prentry *pr_entry);

int
write_prentry(prentry *pr_entry);

int
store_disk_entry(prentry_disk *entry);
d50 1
a50 1
get_disk_entry(int id, prentry_disk *disk_entry);
d53 1
a53 1
get_ydr_disk_entry(int id, char **buf);
d62 1
a62 1
next_free_group_id(int *id);
d65 1
a65 1
next_free_user_id(int *id);
d82 1
a82 1
localize_name(const char *name, Bool *localp);
d84 1
a84 1
extern prheader_disk pr_header;
@


