head	1.5;
access;
symbols
	OPENBSD_5_2:1.4.0.38
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.36
	OPENBSD_5_0:1.4.0.34
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.32
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2012.08.23.06.21.53;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.16.20.02.25;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.42.38;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.19;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.33;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.06;	author hin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1999 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * This module contains the code that parse the file /vice.+/vol\d{8}
 * file. The file is have the following fields:
 *	see vstat.xg file.
 */

#include <config.h>

RCSID("$arla: vstatus.c,v 1.6 2002/07/16 20:38:57 lha Exp $");

#include <sys/types.h>
#include <sys/uio.h>
#include <stdio.h>
#include <unistd.h>

#include <assert.h>

#include <err.h>

#include <vstatus.h>

/*
 *  Read in the volume status from `fd' and return it in `vs'
 */

int
vstatus_read (int fd, vstatus *v)
{
    char *ptr = NULL;
    char *ret_ptr;
    size_t len;
    int ret;

    assert (v);

    ptr = malloc (VSTATUS_SIZE);
    if (ptr == NULL) {
	ret = errno;
	goto err_out;
    }
    len = VSTATUS_SIZE;

    ret = lseek (fd, 0, SEEK_SET);
    if (ret) {
	ret = errno;
	goto err_out;
    }

    ret = read (fd, ptr, VSTATUS_SIZE);
    if (ret != VSTATUS_SIZE) {
	ret = errno;
	goto err_out;
    }

    ret_ptr = ydr_decode_vstatus (v, ptr, &len);
    if (len != 0) {
	ret = errno;
	goto err_out;
    }
    free (ptr);

    if (v->magic != VSTATUS_MAGIC ||
	v->version != VSTATUS_VERSION)
	return EINVAL;

    return 0;

 err_out:
    if (ptr)
	free (ptr);

    return ret;
}

/*
 * Write `vs' to `fd'
 */

int
vstatus_write (int fd, vstatus *v)
{
    char *ptr = NULL;
    char *ret_ptr;
    size_t len;
    int ret;

    assert (v);

    v->magic = VSTATUS_MAGIC;
    v->version = VSTATUS_VERSION;

    ptr = malloc (VSTATUS_SIZE);
    if (ptr == NULL) {
	ret = errno;
	goto err_out;
    }
    len = VSTATUS_SIZE;

    ret = lseek (fd, 0, SEEK_SET);
    if (ret) {
	ret = errno;
	goto err_out;
    }

    ret_ptr = ydr_encode_vstatus (v, ptr, &len);
    if (len != 0 || ret_ptr == NULL) {
	ret = errno;
	goto err_out;
    }

    ret = write (fd, ptr, VSTATUS_SIZE);
    if (ret != VSTATUS_SIZE) {
	ret = errno;
	goto err_out;
    }
    free (ptr);

    return 0;

 err_out:
    if (ptr)
	free (ptr);

    return ret;
}

void
vstatus_print_onode (FILE *out, onode_opaque *o)
{
    int i;
    assert (o);

    fprintf (out, "%d:0x", o->size);
    for (i = 0; i < o->size; i++) {
	fprintf (out, "%02x", (int) o->data[i] & 0xff);
    }
    fprintf (out, "\n");

}
@


1.4
log
@Merge
@
text
@@


1.3
log
@correct lseek arguments; from Moritz Jodeit <moritz@@jodeit.org> via PR/2822.
@
text
@d42 1
a42 1
RCSID("$KTH: vstatus.c,v 1.5 2000/10/03 00:20:35 lha Exp $");
@


1.2
log
@merge
@
text
@d76 1
a76 1
    ret = lseek (fd, SEEK_SET, 0);
d132 1
a132 1
    ret = lseek (fd, SEEK_SET, 0);
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d42 1
a42 1
RCSID("$Id: vstatus.c,v 1.4 2000/04/28 10:24:35 lha Exp $");
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d47 1
a47 1
RCSID("$KTH: vstatus.c,v 1.5 2000/10/03 00:20:35 lha Exp $");
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d42 1
a42 1
RCSID("$arla: vstatus.c,v 1.6 2002/07/16 20:38:57 lha Exp $");
d76 1
a76 1
    ret = lseek (fd, 0, SEEK_SET);
d132 1
a132 1
    ret = lseek (fd, 0, SEEK_SET);
@


