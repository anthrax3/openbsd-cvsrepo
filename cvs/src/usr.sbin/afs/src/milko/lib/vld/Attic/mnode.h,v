head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.08.23.06.21.53;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.42.38;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.17;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.32;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.05;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1999 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* $arla: mnode.h,v 1.9 2002/01/23 00:50:08 d95_mah Exp $ */

#ifndef MILKO_MNODE_H
#define MILKO_MNODE_H 1

#include <sys/types.h>

#include <fs.h>
#include <pts.h>
#include <voldb.h>

#include <list.h>

typedef enum { VOLOP_READ	= 0x001,	/* read file */
	       VOLOP_WRITE	= 0x002,	/* write file */
	       VOLOP_INSERT	= 0x004,	/* insert file */
	       VOLOP_LOOKUP	= 0x008,	/* lookup fileentry */
	       VOLOP_DELETE	= 0x010,	/* delete entry */
	       VOLOP_LOCK	= 0x020,	/* lock file */
	       VOLOP_ADMIN	= 0x040,	/* modify bits */
	       VOLOP_GETSTATUS	= 0x080,	/* get status */
	       VOLOP_NOCHECK	= 0x100		/* do no check */
} volop_flags ;

struct mnode {
    int fd;
    int ref;			/* reference counter */
    struct stat sb;		/* the status of the node */ 
    AFSFetchStatus fs;		/* fetchstatus */
    AFSFid fid;			/* only valid if on hashtable */
    struct voldb_entry e;	/* entry information */
    struct {
	unsigned usedp:1;	/* if node is used */
	unsigned removedp:1;	/* if node has been removed */
	unsigned fdp:1;		/* if fd is open */
	unsigned sbp:1;		/* if stat sb is valid */
	unsigned fsp:1;		/* if afsfetchstatus fs is valid */
	unsigned ep:1;		/* if voldb entry is valid */
    } flags;
    Listitem *li;		/* where we are placed in the mnode_lru */
};

struct msec {
    struct fs_security_context	*sec; /* security context */
    int32_t	caller_access;	/* access of caller */
    int32_t	anonymous_access; /* anonymous access */
    volop_flags	flags;		/* what we want to do with the node */
    int loop;			/* to detect loop */
};

struct fs_security_context {
    prlist *cps;	/* current proctection set */
    int32_t uid;	/* user id of caller */
    int superuser;	/* is super user */
    int ref;		/* reference counter */
};

void
mnode_init (unsigned num);

int
mnode_find (const AFSFid *fid, struct mnode **node);

void
mnode_free (struct mnode *node, Bool bad);

void
mnode_remove (const AFSFid *fid);

int
mnode_update_size_cached (struct mnode *);

int
mnode_update_size (struct mnode *, int32_t *len);

#endif /* MILKO_MNODE_H */
 
@


1.3
log
@Merge
@
text
@@


1.2
log
@merge
@
text
@d34 1
a34 1
/* $KTH: mnode.h,v 1.7 2000/10/03 00:19:22 lha Exp $ */
d66 2
a67 1
	unsigned usedp:1;		/* if node is used */
d87 1
d110 1
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d34 1
a34 1
/* $Id: mnode.h,v 1.5 2000/08/16 22:44:30 tol Exp $ */
d55 1
a55 2
	       VOLOP_PARENT	= 0x100,	/* this is a parent */
	       VOLOP_NOCHECK	= 0x200		/* do no check */
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d39 1
a39 1
/* $KTH: mnode.h,v 1.7 2000/10/03 00:19:22 lha Exp $ */
d60 2
a61 1
	       VOLOP_NOCHECK	= 0x100		/* do no check */
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d34 1
a34 1
/* $arla: mnode.h,v 1.9 2002/01/23 00:50:08 d95_mah Exp $ */
d66 1
a66 2
	unsigned usedp:1;	/* if node is used */
	unsigned removedp:1;	/* if node has been removed */
a85 1
    int superuser;	/* is super user */
a107 1
 
@


