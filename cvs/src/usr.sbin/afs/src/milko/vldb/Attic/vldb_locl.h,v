head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.08.23.06.21.53;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.42.38;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.20;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.33;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.06;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#include <rx/rx.h>
#include <rx/rx_null.h>

#include <ports.h>
#include <ko.h>

#ifdef KERBEROS
#ifdef HAVE_OPENSSL
#include <openssl/des.h>
#else
#include <des.h>
#endif
#include <krb.h>
#include <rxkad.h>
#endif

#include <err.h>
#include <assert.h>
#include <ctype.h>

#ifndef HAVE_UNISTD_H
#include <unistd.h>
#endif

#include <service.h>
#include <msecurity.h>
#include <netinit.h>

#include <agetarg.h>

#include <mlog.h>
#include <mdebug.h>
#include <mdb.h>

#include "rx/rxgencon.h"
#include "vldb.h"
#include "vldb.ss.h"
#include "ubik.ss.h"


extern int vl_database;
extern vital_vlheader vl_header;

void  vldb_write_header (void);
void  vldb_read_header (void);
int   vldb_write_entry(const disk_vlentry *vldb_entry);
int   vldb_read_entry (const char *name, disk_vlentry *entry);
int   vldb_delete_entry (const char *name);
int   vldb_id_to_name (const int32_t volid, char **name);
int   vldb_write_id (const char *name, const uint32_t volid);
int   vldb_delete_id (const char *name, const uint32_t volid);
void  vldb_close(void);
void  vldb_flush(void);


unsigned long vldb_get_id_hash (long id);
unsigned long vldb_get_name_hash (const char *name);
void  vldb_create (char *databaseprefix);
void  vldb_init (char *databaseprefix);
int   vldb_print_entry (vldbentry *entry, int long_print);

void  vldb_entry_to_disk(const struct vldbentry *newentry,
			 struct disk_vlentry *diskentry);
void  vldb_nentry_to_disk(const struct nvldbentry *entry,
			  struct disk_vlentry *diskentry);
void  vldb_disk_to_entry(const struct disk_vlentry *diskentry,
			 struct vldbentry *entry);
void  vldb_disk_to_nentry(const struct disk_vlentry *diskentry,
			  struct nvldbentry *entry);

void  vldb_free_diskentry(struct disk_vlentry *diskentry);
@


1.3
log
@Merge
@
text
@@


1.2
log
@merge
@
text
@d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
d50 3
d54 1
d73 4
d84 1
a84 2
extern vlheader vl_header;
extern off_t file_length;
d86 10
a95 3
void
vlservdebug (char *fmt, ...)
    __attribute__ ((format (printf, 1, 2)));
a97 6
void  vldb_write_header (void);
void  vldb_read_header (void);
void  vldb_get_file_length (void);
off_t vldb_find_first_free (void);
int   vldb_write_entry (off_t offset, disk_vlentry *vl_entry);
int   vldb_read_entry (off_t offset, disk_vlentry *vl_entry);
a99 6
int   vldb_get_first_id_entry (unsigned long hash_id, long type,
			       disk_vlentry *vl_entry);
int   vldb_get_first_name_entry (unsigned long hash_name,
				 disk_vlentry *vl_entry);
int   vldb_insert_entry (disk_vlentry *vl_entry);

d102 10
a111 3
int   vldb_print_entry (struct disk_vlentry *entry, int long_print);
int   vldb_setdebug (int debug);
void  vldb_debug (char *fmt, ...);
d113 1
a113 1
    
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d67 1
a67 1
#include <getarg.h>
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d72 1
a72 1
#include <agetarg.h>
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
a49 3
#ifdef HAVE_OPENSSL
#include <openssl/des.h>
#else
a50 1
#endif
a68 4
#include <mlog.h>
#include <mdebug.h>
#include <mdb.h>

d76 7
a82 1
extern vital_vlheader vl_header;
d86 4
a89 10
int   vldb_write_entry(const disk_vlentry *vldb_entry);
int   vldb_read_entry (const char *name, disk_vlentry *entry);
int   vldb_delete_entry (const char *name);
int   vldb_id_to_name (const int32_t volid, char **name);
int   vldb_write_id (const char *name, const uint32_t volid);
int   vldb_delete_id (const char *name, const uint32_t volid);
void  vldb_close(void);
void  vldb_flush(void);


d92 6
d100 3
a102 10
int   vldb_print_entry (vldbentry *entry, int long_print);

void  vldb_entry_to_disk(const struct vldbentry *newentry,
			 struct disk_vlentry *diskentry);
void  vldb_nentry_to_disk(const struct nvldbentry *entry,
			  struct disk_vlentry *diskentry);
void  vldb_disk_to_entry(const struct disk_vlentry *diskentry,
			 struct vldbentry *entry);
void  vldb_disk_to_nentry(const struct disk_vlentry *diskentry,
			  struct nvldbentry *entry);
d104 1
a104 1
void  vldb_free_diskentry(struct disk_vlentry *diskentry);
@


