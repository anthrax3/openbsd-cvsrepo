head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.38
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.36
	OPENBSD_5_0:1.5.0.34
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.32
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.30
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.26
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.28
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.24
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2012.08.23.06.21.55;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2003.08.05.11.03.12;	author hin;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.05.09.16.15;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2003.04.06.19.09.04;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.44.13;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.24;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.35;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.07;	author hin;	state Exp;
branches;
next	;


desc
@@


1.6
log
@the afs src tree can go away
@
text
@/* This is -*-c-*- */
/* $arla: bos.xg,v 1.8 2002/05/31 21:05:55 lha Exp $ */

/*
 * Interface to BOS server
 */

package BOZO_

%#include <fs_errors.h>

error-function conv_to_arla_errno

const BZNOTACTIVE		= 39424;
const BZNOENT			= 39425;
const BZBUSY			= 39426;
const BZEXISTS			= 39427;
const BZNOCREATE		= 39428;
const BZDOM			= 39429;
const BZACCESS			= 39430;
const BZSYNTAX			= 39431;
const BZIO			= 39432;
const BZNET			= 39433;
const BZBADTYPE			= 39434;

const BOZO_BSSIZE = 256;

/*
 *
 */

const BSTAT_SHUTDOWN		= 0;
const BSTAT_NORMAL		= 1;
const BSTAT_SHUTTINGDOWN	= 2;
const BSTAT_STARTINGUP		= 3;

const BOZO_PRUNEOLD		= 1;
const BOZO_PRUNEBAK		= 2;
const BOZO_PRUNECORE		= 4;

const BPROC_STARTED		= 1;
const BPROC_EXITED		= 2;

const BOZO_HASCORE		= 1;
const BOZO_ERRORSTOP		= 2;
const BOZO_BADDIRACCESS		= 4;

const BNODE_NEEDTIMEOUT		= 0x01;
const BNODE_ACTIVE		= 0x02;
const BNODE_WAIT		= 0x04;
const BNODE_DELETE		= 0x08;
const BNODE_ERRORSTOP		= 0x10;

const KTIME_HOUR		= 0x01;
const KTIME_MIN			= 0x02;
const KTIME_SEC			= 0x04; /* XXX check me */
const KTIME_DAY			= 0x08;
const KTIME_TIME		= 0x07;
const KTIME_NEVER		= 0x10;
const KTIME_NOW			= 0x20;

/* GetRestartTime */

const BOZO_RESTARTTIME_GENERAL	= 0x1;	/* general reboot time */
const BOZO_RESTARTTIME_NEWBIN	= 0x2;	/* new binary */

#if 0
const GETSTATUS_FSRUN  		= "file server running";
const GETSTATUS_RSRUNVOLDOWN	= "file server running; volser down";
const GETSTATUS_SALVAGE		= "salvaging file system";
const GETSTATUS_FSSTART		= "starting file server";
const GETSTATUS_FSDOWN		= "file server shutting down";
const GETSTATUS_SALVAGERDOWN	= "salvager shutting down";
const GETSTATUS_FSSTOP		= "salvager shut down";
#endif

struct bozo_status {
    long goal;
    long fileGoal;
    long porcStartTime;
    long procStarts;
    long lastAnyExit;
    long lastErrorExit;
    long errorCode;
    long errorSignal;
    long flags;
    long spare[8];
};

struct bozo_netKTime {
    long mask;
    short hour;
    short min;
    short sec;
    short day;
};

struct bozo_key {
    char data[8];
};

struct bozo_keyInfo {
    long mod_sec;
    long mod_usec;
    unsigned long keyCheckSum;
    long spare2;
};

#if 0
struct bnode_ops {
    struct bnode *(*create)();
    long (*timeout)();
    long (*getstat)();
    long (*setstat)();
    long (*delete)();
    long (*procexit)();
    long (*getstring)();
    long (*getparm)();
    long (*restartp)();
    long (*hascore)();
};
#endif


CreateBnode (IN string type<BOZO_BSSIZE>,
	     IN string instance<BOZO_BSSIZE>,
	     IN string p1<BOZO_BSSIZE>,
	     IN string p2<BOZO_BSSIZE>,
	     IN string p3<BOZO_BSSIZE>,
	     IN string p4<BOZO_BSSIZE>,
	     IN string p5<BOZO_BSSIZE>,
	     IN string p6<BOZO_BSSIZE>) = 80;

DeleteBnode (IN string instance<BOZO_BSSIZE>) = 81;

SetStatus (IN string instance<BOZO_BSSIZE>,
	    IN long status) = 82;


GetStatus (IN string instance<BOZO_BSSIZE>,
	   OUT long *inStat,
	   OUT string statdescr<BOZO_BSSIZE>) = 83;


EnumerateInstance (IN long instance,
		   OUT string iname<BOZO_BSSIZE>) = 84;

GetInstanceInfo (IN string instance<BOZO_BSSIZE>,
		 OUT string type<BOZO_BSSIZE>,
		 OUT struct bozo_status *status) = 85;
		  
GetInstanceParm (IN string instance<BOZO_BSSIZE>,
		 IN long num,
		 OUT string parm<BOZO_BSSIZE>) = 86;

AddSUser (IN string name<BOZO_BSSIZE>) = 87;

DeleteSUser (IN string name<BOZO_BSSIZE>) = 88;

ListSUsers (IN long an,
	    OUT string name<BOZO_BSSIZE>) = 89;

ListKeys (IN long an,
	  OUT long *kvno,
	  OUT struct bozo_key *key,
	  OUT struct bozo_keyInfo *keinfo) = 90;

AddKey (IN long an,
	IN struct bozo_key *key) = 91;

DeleteKey (IN long an) = 92;

SetCellName (IN string name<BOZO_BSSIZE>) = 93;

GetCellName (OUT string name<BOZO_BSSIZE>) = 94;

GetCellHost (IN long awhich,
	     OUT string name<BOZO_BSSIZE>) = 95;

AddCellHost (IN string name<BOZO_BSSIZE>) = 96;

DeleteCellHost (IN string name<BOZO_BSSIZE>) = 97;

SetTStatus (IN string instance<BOZO_BSSIZE>,
	    IN long status) = 98;

ShutdownAll () = 99;

RestartAll () = 100;

StartupAll () = 101;

SetNoAuthFlag (IN long flag) = 102;

ReBozo () = 103;

Restart (IN string instance<BOZO_BSSIZE>) = 104;

Install (IN string path<BOZO_BSSIZE>,
	 IN long size,
	 IN long flags,
	 IN long date) split = 105;

UnInstall (IN string path<BOZO_BSSIZE>) = 106;

GetDates (IN string path<BOZO_BSSIZE>,
	  OUT long *newtime,
	  OUT long *baktime,
	  OUT long *oldtime) = 107;


Exec (IN string cmd<BOZO_BSSIZE>) = 108;

Prune (IN long flags) = 109;

SetRestartTime (IN long type,
		IN struct bozo_netKTime *restartTime) = 110;



GetRestartTime (IN long type,
		OUT struct bozo_netKTime *restartTime) = 111;

GetLog(IN string name<BOZO_BSSIZE>) split = 112;

WaitAll () =  113;

GetInstanceStrings (IN string instance<BOZO_BSSIZE>,
		    OUT string errorname<BOZO_BSSIZE>,
		    OUT string spare1<BOZO_BSSIZE>,
		    OUT string spare2<BOZO_BSSIZE>,
		    OUT string spare3<BOZO_BSSIZE>) = 114;

@


1.5
log
@Removing strcpy/strcat is nice, but don't change a _wire protocol_
when fixing it. Instead, spend 30 seconds to find the real solution.
Why was i not asked to approve this before it was commited?
@
text
@@


1.4
log
@Merge
@
text
@d142 1
a142 2
	   OUT string statdescr<BOZO_BSSIZE>,
	   IN unsigned long size) = 83;
@


1.3
log
@strcpy/strcat/sprintf cleanups; ok krw deraadt
@
text
@d2 1
a2 1
/* $KTH: bos.xg,v 1.6 2000/08/31 02:46:42 lha Exp $ */
a9 2
%#include <config.h>
%#include <roken.h>
d39 1
a39 1
const BOZO_PRUNECORE		= 3;
d46 1
a46 1
const BOZO_BADDIRACCESS		= 3;
a108 13
struct bozo_keyInfoFOOO {
    long goal;
    long fileGoal;
    long procStartTime;
    long procStarts;
    long lastAnyExit;
    long lastErrorExit;
    long errorCode;
    long errorSignal;
    long flags;
    long spare[8];
};

d136 3
a138 1
SetStatus (IN string instance<BOZO_BSSIZE>) = 82;
d205 1
a205 1
UnInstall (IN string path) = 106;
d229 1
a229 1
GetInstanceStrings (IN string instance,
@


1.2
log
@merge
@
text
@d155 2
a156 1
	   OUT string statdescr<BOZO_BSSIZE>) = 83;
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d2 1
a2 1
/* $Id: bos.xg,v 1.4 2000/08/28 03:09:36 jimmy Exp $ */
d64 5
d140 8
a147 8
CreateBnode (IN string type,
	     IN string instance,
	     IN string p1,
	     IN string p2,
	     IN string p3,
	     IN string p4,
	     IN string p5,
	     IN string p6) = 80;
d149 1
a149 1
DeleteBnode (IN string instance) = 81;
d151 1
a151 1
SetStatus (IN string instance) = 82;
d153 1
a153 1
GetStatus (IN string instance,
d159 1
a159 1
		   OUT string iname) = 84;
d161 3
a163 3
GetInstanceInfo ( IN string instance,
		  OUT string type<>,
		  OUT struct bozo_status *status) = 85;
d165 1
a165 1
GetInstanceParm (IN string instance<>,
d167 1
a167 1
		 OUT string parm<>) = 86;
d169 1
a169 1
AddSUser (IN string name) = 87;
d171 1
a171 1
DeleteSUser (IN string name) = 88;
d174 1
a174 1
	    OUT string name<>) = 89;
d186 1
a186 1
SetCellName (IN string name) = 93;
d188 1
a188 1
GetCellName (OUT string name<>) = 94;
d191 1
a191 1
	     OUT string name<>) = 95;
d193 1
a193 1
AddCellHost (IN string name) = 96;
d195 1
a195 1
DeleteCellHost (IN string name) = 97;
d197 1
a197 1
SetTStatus (IN string instance,
d210 1
a210 1
Restart (IN string instance) = 104;
d212 1
a212 1
Install (IN string path,
d215 1
a215 3
	 IN long date) = 105;

/* EndBOZO_Install ? XXX */
d219 1
a219 1
GetDates (IN string path,
d225 1
a225 1
Exec (IN string cmd) = 108;
d237 1
a237 4
#if 0
GetLog 112
/* the documentation about this call(s?) is/are very confusing/confused */
#endif
d242 4
a245 5
		    OUT string errorname<>,
		    OUT string spare1<>,
		    OUT string spare2<>,
		    OUT string spare3<>) = 114;

a246 1
/* XXX */
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d2 1
a2 1
/* $KTH: bos.xg,v 1.6 2000/08/31 02:46:42 lha Exp $ */
a63 5
/* GetRestartTime */

const BOZO_RESTARTTIME_GENERAL	= 0x1;	/* general reboot time */
const BOZO_RESTARTTIME_NEWBIN	= 0x2;	/* new binary */

d135 8
a142 8
CreateBnode (IN string type<BOZO_BSSIZE>,
	     IN string instance<BOZO_BSSIZE>,
	     IN string p1<BOZO_BSSIZE>,
	     IN string p2<BOZO_BSSIZE>,
	     IN string p3<BOZO_BSSIZE>,
	     IN string p4<BOZO_BSSIZE>,
	     IN string p5<BOZO_BSSIZE>,
	     IN string p6<BOZO_BSSIZE>) = 80;
d144 1
a144 1
DeleteBnode (IN string instance<BOZO_BSSIZE>) = 81;
d146 1
a146 1
SetStatus (IN string instance<BOZO_BSSIZE>) = 82;
d148 1
a148 1
GetStatus (IN string instance<BOZO_BSSIZE>,
d154 1
a154 1
		   OUT string iname<BOZO_BSSIZE>) = 84;
d156 3
a158 3
GetInstanceInfo (IN string instance<BOZO_BSSIZE>,
		 OUT string type<BOZO_BSSIZE>,
		 OUT struct bozo_status *status) = 85;
d160 1
a160 1
GetInstanceParm (IN string instance<BOZO_BSSIZE>,
d162 1
a162 1
		 OUT string parm<BOZO_BSSIZE>) = 86;
d164 1
a164 1
AddSUser (IN string name<BOZO_BSSIZE>) = 87;
d166 1
a166 1
DeleteSUser (IN string name<BOZO_BSSIZE>) = 88;
d169 1
a169 1
	    OUT string name<BOZO_BSSIZE>) = 89;
d181 1
a181 1
SetCellName (IN string name<BOZO_BSSIZE>) = 93;
d183 1
a183 1
GetCellName (OUT string name<BOZO_BSSIZE>) = 94;
d186 1
a186 1
	     OUT string name<BOZO_BSSIZE>) = 95;
d188 1
a188 1
AddCellHost (IN string name<BOZO_BSSIZE>) = 96;
d190 1
a190 1
DeleteCellHost (IN string name<BOZO_BSSIZE>) = 97;
d192 1
a192 1
SetTStatus (IN string instance<BOZO_BSSIZE>,
d205 1
a205 1
Restart (IN string instance<BOZO_BSSIZE>) = 104;
d207 1
a207 1
Install (IN string path<BOZO_BSSIZE>,
d210 3
a212 1
	 IN long date) split = 105;
d216 1
a216 1
GetDates (IN string path<BOZO_BSSIZE>,
d222 1
a222 1
Exec (IN string cmd<BOZO_BSSIZE>) = 108;
d234 4
a237 1
GetLog(IN string name<BOZO_BSSIZE>) split = 112;
d242 5
a246 4
		    OUT string errorname<BOZO_BSSIZE>,
		    OUT string spare1<BOZO_BSSIZE>,
		    OUT string spare2<BOZO_BSSIZE>,
		    OUT string spare3<BOZO_BSSIZE>) = 114;
d248 1
@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d2 1
a2 1
/* $arla: bos.xg,v 1.8 2002/05/31 21:05:55 lha Exp $ */
d10 2
d41 1
a41 1
const BOZO_PRUNECORE		= 4;
d48 1
a48 1
const BOZO_BADDIRACCESS		= 4;
d111 13
d151 1
a151 3
SetStatus (IN string instance<BOZO_BSSIZE>,
	    IN long status) = 82;

d217 1
a217 1
UnInstall (IN string path<BOZO_BSSIZE>) = 106;
d241 1
a241 1
GetInstanceStrings (IN string instance<BOZO_BSSIZE>,
@


