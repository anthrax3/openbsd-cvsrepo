head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.42
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.40
	OPENBSD_5_0:1.2.0.38
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.36
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.32
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.23.06.21.51;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	2002.06.07.04.39.57;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.40.52;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.26;	author hin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@the afs src tree can go away
@
text
@# $KTH: Makefile.in,v 1.18 2000/12/01 08:30:46 lha Exp $
#

SHELL = /bin/sh
ED    = ed
AWK   = awk

srcdir = @@srcdir@@
top_srcdir = @@top_srcdir@@
top_builddir	= ..
VPATH = @@srcdir@@
prefix = @@prefix@@
exec_prefix = @@exec_prefix@@

infodir = @@infodir@@
mandir = @@mandir@@

DISTDIR =

INSTALL = @@INSTALL@@
INSTALL_PROGRAM = @@INSTALL_PROGRAM@@
INSTALL_DATA = @@INSTALL_DATA@@
INSTALL_SCRIPT = @@INSTALL_SCRIPT@@
transform = @@program_transform_name@@

PACKAGE = @@PACKAGE@@
VERSION = @@VERSION@@

info_TEXINFOS = arla.texi
arla_TEXINFOS =  ack.texi \
	intro.texi \
	partsofarla.texi \
	tools.texi \
	debugging.texi \
	authors.texi \
	storage.texi \
	timeline.texi \
	real-world.texi \
	index.texi \
	afs-basics.texi
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = ../include/config.h
CONFIG_CLEAN_FILES = 
TEXI2DVI = @@TEXI2DVI@@
TEXI2PDF = @@TEXI2PDF@@
TEXI2HTML = @@TEXI2HTML@@
TEXINFO_TEX = $(srcdir)/texinfo.tex
INFO_DEPS = arla.info
DVIS = arla.dvi
MAKEINFO = @@MAKEINFO@@
TEXINFOS = arla.texi
DIST_COMMON =  $(arla_TEXINFOS) Makefile.am Makefile.in


DISTFILES = $(DIST_COMMON) $(SOURCES) $(HEADERS) $(TEXINFOS) $(EXTRA_DIST)

TAR = tar
GZIP = --best
all: Makefile

.SUFFIXES:
.SUFFIXES: .dvi .info .ps .texi .texinfo .txi .pdf .html

Makefile: Makefile.in  ../config.status
	cd .. && CONFIG_FILES=doc/Makefile CONFIG_HEADERS= $(SHELL) ./config.status

arla.info: arla.texi $(arla_TEXINFOS)
arla.dvi: arla.texi $(arla_TEXINFOS)

ack.texi: ack.texi.in Makefile.in ../THANKS
	rm -f tempfile
	$(AWK) 'BEGIN { FS="|";foo=0;printf("/%%THANKS%%\nd\ni\n"); } \
	/@@/ { if (foo) { \
		printf("@@item %s\n\n",$$1);\
	} \
	} /expect you to/ { foo=1; } \
	END { printf(".\n1,$$s/<.*@@/&@@/g\n1,$$s/</\\\n@@tab @@email{/g\n1,$$s/>/}/g\nw %s\nq\n", "$(srcdir)/ack.texi") ;} ' < $(srcdir)/../THANKS > tempfile
	$(ED) $(srcdir)/ack.texi.in < tempfile
	rm -f tempfile

DVIPS = @@DVIPS@@

.texi.info:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`

.texi.dvi:
	TEXINPUTS=$(srcdir):$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.texi.pdf:
	TEXINPUTS=$(srcdir):$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2PDF) $<

.texi.html:
	TEXINPUTS=$(srcdir):$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2HTML) -split=chapter $<

.texi:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`

.texinfo.info:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`

.texinfo:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`

.texinfo.dvi:
	TEXINPUTS=$(srcdir):$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi.info:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`

.txi.dvi:
	TEXINPUTS=$(srcdir):$$TEXINPUTS \
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2DVI) $<

.txi:
	@@cd $(srcdir) && rm -f $@@ $@@-[0-9] $@@-[0-9][0-9]
	cd $(srcdir) \
	  && $(MAKEINFO) `echo $< | sed 's,.*/,,'`
.dvi.ps:
	$(DVIPS) $< -o $@@

install:
	$(mkinstalldirs) $(DESTDIR)$(infodir)
	@@for file in $(INFO_DEPS); do \
	  d=$(srcdir); \
	  for ifile in `cd $$d && echo $$file $$file-[0-9] $$file-[0-9][0-9]`; do \
	    if test -f $$d/$$ifile; then \
	      echo "$(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile"; \
	      $(INSTALL_DATA) $$d/$$ifile $(DESTDIR)$(infodir)/$$ifile; \
	    else : ; fi; \
	  done; \
	done

uninstall:
	@@if $(SHELL) -c 'install-info --version | sed 1q | fgrep -s -v -i debian' >/dev/null 2>&1; then \
	  ii=yes; \
	else ii=; fi; \
	for file in $(INFO_DEPS); do \
	  test -z "$ii" \
	    || install-info --info-dir=$(DESTDIR)$(infodir) --remove $$file; \
	done
	for file in $(INFO_DEPS); do \
	  (cd $(DESTDIR)$(infodir) && rm -f $$file $$file-[0-9] $$file-[0-9][0-9]); \
	done

dist-info: $(INFO_DEPS)
	for base in $(INFO_DEPS); do \
	  d=$(srcdir); \
	  for file in `cd $$d && eval echo $$base*`; do \
	    test -f $(distdir)/$$file \
	    || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	    || cp -p $$d/$$file $(distdir)/$$file; \
	  done; \
	done

distdir = $(top_builddir)/$(PACKAGE)-$(VERSION)/$(subdir)

subdir = doc

distdir: $(DISTFILES)
	@@for file in $(DISTFILES); do \
	  d=$(srcdir); \
	  test -f $(distdir)/$$file \
	  || ln $$d/$$file $(distdir)/$$file 2> /dev/null \
	  || cp -p $$d/$$file $(distdir)/$$file; \
	done
	$(MAKE) top_distdir="$(top_distdir)" distdir="$(distdir)" dist-info
info: $(INFO_DEPS)
dvi: $(DVIS)

clean:
	rm -f arla.aux arla.cp arla.cps arla.dvi arla.fn arla.fns arla.ky \
	  arla.kys arla.ps arla.log arla.pg arla.toc arla.tp arla.tps \
	  arla.vr arla.vrs arla.op arla.tr arla.cv arla.cn *.html

distclean:
	rm -f *.dvi *.info *.ps *.ps *.html *.pdf


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
@


1.2
log
@merge
@
text
@@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d1 1
a1 1
# $Id: Makefile.in,v 1.10 2000/08/13 13:57:47 lha Exp $
d10 1
d38 2
d70 1
a70 1
ack.texi: ack.texi.in Makefile.in
d77 1
a77 1
	END { printf(".\n1,$$s/<.*@@/&@@/g\n1,$$s/</\\\n@@email{/g\n1,$$s/>/}/g\nw %s\nq\n", "$(srcdir)/ack.texi") ;} ' < $(srcdir)/../THANKS > tempfile
d94 1
a94 1
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2PDF) --language=Texinfo $<
d98 1
a98 1
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2HTML) -split_chapter -split_node $< && ln -s $*_toc.html $*.html
d187 4
a190 1
	  arla.vr arla.vrs arla.op arla.tr arla.cv arla.cn
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d1 1
a1 1
# $KTH: Makefile.in,v 1.18 2000/12/01 08:30:46 lha Exp $
a9 1
top_builddir	= ..
a36 2
	real-world.texi \
	index.texi \
d67 1
a67 1
ack.texi: ack.texi.in Makefile.in ../THANKS
d74 1
a74 1
	END { printf(".\n1,$$s/<.*@@/&@@/g\n1,$$s/</\\\n@@tab @@email{/g\n1,$$s/>/}/g\nw %s\nq\n", "$(srcdir)/ack.texi") ;} ' < $(srcdir)/../THANKS > tempfile
d91 1
a91 1
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2PDF) $<
d95 1
a95 1
	  MAKEINFO='$(MAKEINFO) -I $(srcdir)' $(TEXI2HTML) -split=chapter $<
d184 1
a184 4
	  arla.vr arla.vrs arla.op arla.tr arla.cv arla.cn *.html

distclean:
	rm -f *.dvi *.info *.ps *.ps *.html *.pdf
@

