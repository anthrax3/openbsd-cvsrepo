head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.38
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.36
	OPENBSD_5_0:1.1.1.1.0.34
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.32
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.30
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.26
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.28
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.24
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.22
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.20
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.18
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.16
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.14
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.12
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.10
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	arla-20030805:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.08.23.06.21.51;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2003.08.05.08.21.02;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.05.08.21.02;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the afs src tree can go away
@
text
@@@c Copyright (c) 2002 Kungliga Tekniska Högskolan
@@c (Royal Institute of Technology, Stockholm, Sweden).
@@c All rights reserved.

@@c $arla: prog.texi,v 1.4 2002/09/07 10:43:57 lha Exp $

@@node Programming, Oddities, Porting, Top
@@comment  node-name,  next,  previous,  up
@@chapter Programming

This chapter is programming documentation of arla's internal parts.

This is just to cover the ideas of the implemation, but documentation
of the actual code, please see commends in the source code for that.

@@menu
* Arla pioctl's::	Documentation of arla pioctl's
* Disco with arla::	Disconnected mode
* afsUUID::		afs UUID
@@c * NNPFS interface::
@@end menu

@@node Arla pioctl's, Disco with arla, Programming, Programming
@@comment  node-name,  next,  previous,  up

@@include pioctl.texi

@@node Disco with arla, afsUUID, Arla pioctl's, Programming
@@comment  node-name,  next,  previous,  up

@@include prog-disco.texi

@@node afsUUID, , Disco with arla, Programming
@@comment  node-name,  next,  previous,  up

@@chapter afsUUID

@@cindex afsUUID
@@cindex DCE UUID

@@code{AFS} uses a @@code{DCE UUID} (Microsoft GUID is a another version
of a DCE UUID) is identify file servers and callback managers. The
callback manager regenerate its @@code{uuid} every time it restarts.

The fileserver stores its @@code{uuid} on disk and uses it to identify
it self when registering its addresses with the VLDB-server.

The @@code{afsUUID} is special in some implementations since it uses
the ip-address as the node identifier instead of the mac-address (IEEE
OUI + node address).  Also the time in DCE is based on Unix epoch
instead of DCE epoch. This will cause problems in about 287 years when
the old generated afs UUID till start to collide with new genrated DCE
UUIDs. Hopefully people have a solution to this problem then.

@@c
@@c I have a promise from Derrick that they will solve the problem before 
@@c I die, Love
@@c
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@@
