head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.08.23.06.21.55;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.18.11.45.48;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.45.18;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.29;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.37;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <sys/wait.h>
#include <fcntl.h>
#include <unistd.h>

#include <err.h>
#include <roken.h>

#ifdef RCSID
RCSID("$KTH: exit-wo-close.c,v 1.4 2000/10/03 00:33:44 lha Exp $");
#endif

static int 
child (const char *filename)
{
    int fd;
    int ret;

    fd = open (filename, O_WRONLY | O_CREAT | O_TRUNC, 0666);
    if (fd < 0)
	err (1, "open %s", filename);
    ret = write (fd, "hej", 3);
    if (ret != 3)
	err (1, "write %s", filename);
    return 0;
}

static int 
parent (const char *filename, pid_t child_pid)
{
    int stat;
    int ret;
    int fd;
    struct stat sb;
    char buf[3];

    ret = waitpid (child_pid, &stat, 0);
    if (ret < 0)
	err (1, "waitpid %u", (unsigned)child_pid);
    if (!WIFEXITED(stat) || WEXITSTATUS(stat) != 0)
	errx (1, "weird child %u", (unsigned)child_pid);
    fd = open (filename, O_RDONLY, 0);
    if (fd < 0)
	err (1, "open %s", filename);
    ret = fstat (fd, &sb);
    if (ret < 0)
	err (1, "fstat %s", filename);
    if (sb.st_size != 3)
	errx (1, "size of %s = %u != 3", filename, (unsigned)sb.st_size);
    ret = read (fd, buf, sizeof(buf));
    if (ret < 0)
	err (1, "read %s", filename);
    if (ret != 3)
	errx (1, "short read from %s", filename);
    if (memcmp (buf, "hej", 3) != 0)
	errx (1, "bad contents of %s = `%.3s'", filename, buf);
    close (fd);
    return 0;
}

static int
doit (const char *filename)
{
    pid_t pid;

    pid = fork ();
    if (pid < 0)
	err (1, "fork");

    if (pid == 0)
	return child (filename);
    else
	return parent (filename, pid);
}

int
main(int argc, char **argv)
{
    const char *file = "foo";

    set_progname (argv[0]);

    if (argc != 2 && argc != 1)
	errx (1, "usage: %s [file]", argv[0]);
    if (argc == 2)
	file = argv[1];
    return doit (file);
}
@


1.3
log
@err/warn \n cleanup

From Tom Cosgrove via deraadt@@
@
text
@@


1.2
log
@merge
@
text
@d97 1
a97 1
	errx (1, "bad contents of %s = `%.3s'\n", filename, buf);
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d51 1
a51 1
RCSID("$Id: exit-wo-close.c,v 1.3 2000/03/19 01:38:21 assar Exp $");
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d56 1
a56 1
RCSID("$KTH: exit-wo-close.c,v 1.4 2000/10/03 00:33:44 lha Exp $");
@

