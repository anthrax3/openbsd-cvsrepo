head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.42
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.40
	OPENBSD_5_0:1.2.0.38
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.36
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.32
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.23.06.21.56;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	2002.06.07.04.45.18;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.41.34;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.37;	author hin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@the afs src tree can go away
@
text
@#!/bin/sh
#
# $KTH: run-tests.in,v 1.70.2.3 2002/02/05 13:22:11 lha Exp $
#
srcdir=@@srcdir@@
objdir=`pwd`
SHELL=/bin/sh
VERSION=@@VERSION@@
PACKAGE=@@PACKAGE@@
host=@@host@@

AFSROOT=${AFSROOT-/afs}
export AFSROOT

ARLA_TESTS="creat1			\
	    mkdir1			\
	    mkdir2 			\
	    symlink 			\
	    hardlink1			\
	    hardlink2			\
	    hardlink3			\
	    touch1			\
	    write1			\
	    write2			\
	    append1			\
	    rename1			\
	    rename2			\
	    rename3			\
	    rename4			\
	    rename5			\
	    rename-under-feet		\
	    large-filename		\
	    fchmod			\
	    truncate			\
	    mkdir-lnk			\
	    mkm-rmm			\
	    fs-sa-la			\
	    copy-file			\
	    dd				\
	    exec			\
	    ga-test			\
	    kotest			\
	    readfile-wo-create		\
	    mountpoint			\
	    strange-characters		\
	    strange-characters-c	\
	    strange-other-characters	\
	    pine			\
	    write-ro-file		\
	    hello-world			\
	    write-ucc			\
	    utime-dir			\
	    append-over-page		\
	    mmap-shared-write		\
	    read-vs-mmap		\
	    read-vs-mmap2		\
	    mmap-vs-read		\
	    mmap-vs-read2		\
	    read-write			\
	    mmap-and-read		\
	    checkpwd			\
	    exit-wo-close		\
	    dir-size-mismatch		\
	    parallel1			\
	    getdents-and-unlink1	\
	    getdents-and-unlink2	\
	    getdents-and-unlink3	\
	    build-gdb			\
	    large-dir-16384		\
	    large-dir-extra		\
	    find-linux			\
	    find-and-cat-netbsd		\
	    test-gunzip-gnu-mirror	\
	    build-emacs			\
	    build-emacs-j		\
	    untar-emacs			\
	    copy-and-diff-gnu-mirror	\
	    setpag			\
	    create-remove-files		\
	    create-remove-dirs		\
	    fcachesize-dir		\
	    fcachesize-file-small	\
	    compare-inums"

# this should really be work, but it's hard and it doesn't work so
# leave it out not to scare users

#	    compare-inum-mp		\

#	    visit-volumes		\


#	    discon-create		\
#	    discon-echo			\
#	    discon-touch1		\
#	    discon-touch2		\
#	    discon-mkdir		\
#	    discon-mkdir2		\
#	    discon-tar1			\
#	    discon-tar2			\

# you need to be root to run this: setgroups

MILKO_TESTS="mkdir			\
	    many-dirs			\
	    many-files			\
	    many-symlinks		\
	    many-files-with-content	\
	    many-stores			\
	    many-fetchs			\
	    deep-tree			\
	    deep-tree2			\
	    boot-strap-arla"

TESTS="$ARLA_TESTS"
TEST_MODE="arla"

linebreak=":-------------------------------;"

PARALLELL=
FAST=
LARGE=
FAIL=
PRINT_CACHESIZE=
usage="Usage: $0 [-arla|-milko] [-all] [-fast] [-fail] [-j] [-large] [-verbose] [-x] tests ..."
while true
do
  case $1 in
  -all) ALL=yes;;
  -fast) FAST=yes;;
  -fail) FAIL=yes;;
  -large) LARGE=yes;;
  -j) PARALLELL="&";;
  -verbose) VERBOSE=yes;;
  -x) SHELLVERBOSE="-x";;
  -p) PRINT_CACHESIZE="yes";;
  -arla) TESTS="$ARLA_TESTS";TEST_MODE="arla";;
  -milko) TESTS="$MILKO_TESTS";TEST_MODE="milko";;
  -help|--help) echo $usage; 
	echo "arla tests available: $linebreak"; for a in "$ARLA_TESTS"; do echo $a ; done;
	echo "milko tests available: $linebreak"; for a in "$MILKO_TESTS"; do echo $a ; done;
	exit 0;;
  -version|--version) echo "$KTH: run-tests.in,v 1.70.2.3 2002/02/05 13:22:11 lha Exp $"; exit 0;;
  -*) echo "$0: Bad option $1"; echo $usage; exit 1;;
  *) break;;
  esac
  shift
done

if test "X$WORKDIR" = "X";then
	echo "WORKDIR=workdir $0 $* or env WORKDIR=workdir $0 $*"; exit 1;
fi

RUNTESTS=
if test "X$ALL" != "X" ; then
    RUNTESTS="$TESTS"
elif test $# -lt 1; then
    echo $usage; exit
else
    RUNTESTS=$*
fi

# these are variables exported to the scripts

export FAST
export LARGE
export VERBOSE
export SHELLVERBOSE

# and file descriptors

# 3 - progress
# 4 - details

if test "$VERBOSE" = "yes"; then
  exec 3>/dev/null
  exec 4>&1
else
  exec 3>&1
  exec 4>/dev/null
fi

# Find out where we really are

srcdir=`cd $srcdir; pwd`
objdir=`cd $objdir; pwd`

export srcdir
export objdir

echo "-------------------------------------------------"
echo "$PACKAGE-$VERSION"
echo "hosttype $host"
echo "${SHELL},${SHELLVERBOSE},${VERBOSE},${PARALLELL},${FAST}"
echo "testmode ${TEST_MODE}"
echo "${srcdir}"
echo "${objdir}"
echo "${WORKDIR}"
date
echo "-------------------------------------------------"

test "X$VERBOSE" != "X" && echo "Running tests"

FAILEDTESTS=
exitval=0

for a in $RUNTESTS; do
  #
  # XXX Test if binary in $srcdir, shellscript in $srcdir else
  # its a binary in objdir
  #
  if test -x ${srcdir}/$a ; then
    b="${srcdir}/$a"
  elif test -f ${srcdir}/$a ; then
    b="${SHELL} ${SHELLVERBOSE} ${srcdir}/$a"
  else
    b="${objdir}/$a"
  fi
  echo "Running $a"
  test "X$VERBOSE" != "X" && echo "Running test $a ($b)."
  tmpdir="`hostname`-$a-`date +%Y-%m-%d-%H-%M-%S`-$$"
  cd $WORKDIR && mkdir $tmpdir && (cd $tmpdir && $b ${PARALLELL})
  saved_res=$?
  test "X$VERBOSE" != "X" && echo "Saved res = $saved_res"
  if test "X${PARALLELL}" = "X" ;then
     if test $saved_res != 0 ; then 
	echo "Test $a FAILED"
        FAILEDTESTS="${FAILEDTESTS} $a";
        exitval=$savedres
	if test X$FAIL != X; then break; fi
     else
	test "X$VERBOSE" != "X" && echo "Test $a succeeded, tmpdir is removed"
	${objdir}/rm-rf $tmpdir
     fi
     test "X$VERBOSE" != "X" && echo "Done test $a."
  fi
  test "X${PRINT_CACHESIZE}" = Xyes && $objdir/../appl/fs/fs calculate
done

wait
date

if test "$FAILEDTESTS"; then
  echo "-----------------------------------------------------------"
  echo "Failed test(s) were: $FAILEDTESTS"
else
  echo "All test(s) were succesful!"
fi

exit $exitval
@


1.2
log
@merge
@
text
@@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d3 1
a3 1
# $Id: run-tests.in,v 1.67 2000/08/19 23:46:08 assar Exp $
d21 1
d32 3
d38 1
d83 6
a88 2
	    compare-inums		\
	    compare-inum-mp"
d122 2
d125 1
a125 1
usage="Usage: $0 [-arla|-milko] [-all] [-fast] [-j] [-verbose] [-x] tests ..."
d131 2
d143 1
a143 1
  -version|--version) echo "$0 $Id: run-tests.in,v 1.67 2000/08/19 23:46:08 assar Exp $"; exit 0;;
d166 1
d228 1
a228 1
        FAILEDTESTS="${FAILEDTESTS} $a"; 
d230 1
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d3 1
a3 1
# $KTH: run-tests.in,v 1.70.2.3 2002/02/05 13:22:11 lha Exp $
a20 1
	    hardlink3			\
a30 3
	    large-filename		\
	    fchmod			\
	    truncate			\
a33 1
	    copy-file			\
d78 2
a79 6
	    compare-inums"

# this should really be work, but it's hard and it doesn't work so
# leave it out not to scare users

#	    compare-inum-mp		\
a112 2
LARGE=
FAIL=
d114 1
a114 1
usage="Usage: $0 [-arla|-milko] [-all] [-fast] [-fail] [-j] [-large] [-verbose] [-x] tests ..."
a119 2
  -fail) FAIL=yes;;
  -large) LARGE=yes;;
d130 1
a130 1
  -version|--version) echo "$KTH: run-tests.in,v 1.70.2.3 2002/02/05 13:22:11 lha Exp $"; exit 0;;
a152 1
export LARGE
d214 1
a214 1
        FAILEDTESTS="${FAILEDTESTS} $a";
a215 1
	if test X$FAIL != X; then break; fi
@

