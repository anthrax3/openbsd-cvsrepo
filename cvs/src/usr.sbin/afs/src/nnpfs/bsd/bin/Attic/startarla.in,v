head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.1.0.38
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.36
	OPENBSD_5_0:1.1.1.1.0.34
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.32
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.30
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.26
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.28
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.24
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.22
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.20
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.18
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.16
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.14
	OPENBSD_4_0_BASE:1.1.1.1
	OPENBSD_3_9:1.1.1.1.0.12
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.10
	OPENBSD_3_8_BASE:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	arla-20030805:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2012.08.23.06.21.53;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2003.08.05.08.21.03;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.08.05.08.21.03;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the afs src tree can go away
@
text
@#!/bin/sh
#
# A simple startupscript to start arla for *BSD.
# 
# You must have a path that includes, modload, ld, 
# mount_nnpfs, and arlad.
#
# $arla: startarla.in,v 1.25 2002/12/20 12:43:11 lha Exp $
#


PATH=/sbin:/usr/sbin:/usr/bin:/bin
SBINDIR=%sbindir%
LKMDIR=%lkmdir%
CACHEDIR=%ARLACACHEDIR%
LIBEXECDIR=%libexecdir%
VARDB=/var/db

if [ ! -e $CACHEDIR ] ; then
   mkdir $CACHEDIR
   chmod 700 $CACHEDIR
   chown root $CACHEDIR
fi

if test -f  $LKMDIR/nnpfs.ko; then
  kldload $LKMDIR/nnpfs.ko
  if test ! -c /dev/nnpfs0; then
    mknod /dev/nnpfs0 c 128 0
  fi
elif test -x /sbin/kextload; then
  rm -f $VARDB/nnpfs_sym
  kextload -s $VARDB $LKMDIR/nnpfs.kext
  kextstat > $VARDB/nnpfs_modstat 2>&1
elif test -x /sbin/sysconfig; then
  /sbin/sysconfig -c nnpfs
  if test ! -c /dev/nnpfs0; then
    SYSCALL=`/sbin/sysconfig -q nnpfs major | awk '{print $3}'`
    mknod /dev/nnpfs0 c ${SYSCALL} 0
  fi
elif test -x /sbin/modload; then
  rm -f $VARDB/nnpfs_sym
  modload -o $VARDB/nnpfs_sym -e nnpfs_mod -p $SBINDIR/nnpfs_makedev \
	$LKMDIR/nnpfs_mod.o
  modstat > $VARDB/nnpfs_modstat 2>&1
else
  echo "Couldn't figure out how to load your kernel module"
  exit 1
fi
test -d /afs || mkdir /afs
${SBINDIR}/mount_nnpfs /dev/nnpfs0 /afs
${LIBEXECDIR}/arlad -z /dev/nnpfs0
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@@
