head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.42
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.40
	OPENBSD_5_0:1.2.0.38
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.36
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.32
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2012.08.23.06.21.50;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	2002.06.07.04.38.50;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.40.45;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.25;	author hin;	state Exp;
branches;
next	;


desc
@@


1.3
log
@the afs src tree can go away
@
text
@dnl
dnl $KTH: check-dirsiz.m4,v 1.1 1999/05/15 22:45:21 assar Exp $
dnl

dnl
dnl Check where DIRSIZ lives
dnl

AC_DEFUN(AC_CHECK_DIRSIZ, [

AC_CACHE_CHECK([if DIRSIZ lives in dirent.h], ac_cv_dirsiz_in_dirent,
AC_EGREP_CPP(yes,[#include <dirent.h>
#ifdef DIRSIZE
yes
#endif],
eval "ac_cv_dirsiz_in_dirent=yes",
eval "ac_cv_dirsiz_in_dirent=no"))
if test "$ac_cv_dirsiz_in_dirent" = "yes"; then
  AC_DEFINE(DIRSIZ_IN_DIRENT_H, 1, [define if DIRSIZ is defined in dirent.h])
fi

AC_CACHE_CHECK([if DIRSIZ lives in sys/dir.h], ac_cv_dirsiz_in_sys_dir,
AC_EGREP_CPP(yes,[#include <sys/dir.h>
#ifdef DIRSIZ
yes
#endif],
eval "ac_cv_dirsiz_in_sys_dir=yes",
eval "ac_cv_dirsiz_in_sys_dir=no"))
if test "$ac_cv_dirsiz_in_sys_dir" = "yes"; then
  AC_DEFINE(DIRSIZ_IN_SYS_DIR_H, 1, [define if DIRSIZ is defined in sys/dir.h])
fi

AC_CACHE_CHECK([if _GENERIC_DIRSIZ lives in sys/dirent.h],
ac_cv_generic_dirsiz_in_sys_dirent,
AC_EGREP_CPP(yes,[#include <sys/dirent.h>
#ifdef _GENERIC_DIRSIZ
yes
#endif],
eval "ac_cv_generic_dirsiz_in_sys_dirent=yes",
eval "ac_cv_generic_dirsiz_in_sys_dirent=no"))
if test "$ac_cv_generic_dirsiz_in_sys_dirent" = "yes"; then
  AC_DEFINE(GENERIC_DIRSIZ_IN_SYS_DIRENT_H, 1,
	[define if DIRSIZ is defined in sys/dirent.h])
fi
])
@


1.2
log
@merge
@
text
@@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d2 1
a2 1
dnl $Id: check-dirsiz.m4,v 1.1 1999/05/15 22:45:21 assar Exp $
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d2 1
a2 1
dnl $KTH: check-dirsiz.m4,v 1.1 1999/05/15 22:45:21 assar Exp $
@

