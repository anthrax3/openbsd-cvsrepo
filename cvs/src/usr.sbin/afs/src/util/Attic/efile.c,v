head	1.3;
access;
symbols
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	arla-0_9:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	2000.09.11.14.41.37;	author art;	state dead;
branches;
next	1.2;

1.2
date	99.04.30.01.59.16;	author art;	state Exp;
branches;
next	1.1;

1.1
date	98.09.14.21.53.22;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.09.14.21.53.22;	author art;	state Exp;
branches;
next	;


desc
@@


1.3
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@/*	$OpenBSD: efile.c,v 1.2 1999/04/30 01:59:16 art Exp $	*/
/*
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 *
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
RCSID("$KTH: efile.c,v 1.5 1999/02/27 11:04:50 assar Exp $");
#endif

#include <stdio.h>
#include "efile.h"

FILE *
efopen (const char *name, const char *mode)
{
     FILE *tmp;

     tmp = fopen (name, mode);
     if (tmp == NULL)
	 err (1, "open %s mode %s", name, mode);
     return tmp;
}

void
efclose (FILE *f)
{
     if (fclose (f))
	 err (1, "close");
}

size_t
efread (void *ptr, size_t size, size_t nitems, FILE *stream)
{
     size_t res;

     res = fread (ptr, size, nitems, stream);
     if (res == 0)
	 err (1, "read");
     return res;
}

size_t
efwrite (const void *ptr, size_t size, size_t nitems, FILE *stream)
{
     size_t res;

     res = fwrite (ptr, size, nitems, stream);
     if (res == 0)
	 err (1, "write");
     return res;
}
@


1.2
log
@upgrade Arla to fresher code. Too many new features and bugfixes.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
d46 1
a46 1
RCSID("$KTH: efile.c,v 1.4 1998/02/22 11:22:14 assar Exp $");
d53 1
a53 1
efopen (char *name, char *mode)
d58 2
a59 6
     if (tmp == NULL) {
	  fprintf (stderr, "Could not open file %s in mode %s\n",
		   name, mode);
	  perror ("open");
	  exit (1);
     }
d66 2
a67 4
     if (fclose (f)) {
	  fprintf (stderr, "Problems closing a file\n");
	  perror ("close");
     }
d76 2
a77 5
     if (res == 0) {
	  fprintf (stderr, "Error reading\n");
	  perror ("read");
	  exit (1);
     }
d87 2
a88 5
     if (res == 0) {
	  fprintf (stderr, "Error writing\n");
	  perror ("read");
	  exit (1);
     }
@


1.1.1.1
log
@Initial version of Arla, a free implementation of an AFS cache-manager.
(second try, hopefully into the correct repository this time)
@
text
@@
