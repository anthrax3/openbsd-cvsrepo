head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2012.08.23.06.21.49;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2003.08.05.09.05.49;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.04.28.42;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.11.14.40.38;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.22;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.21.00;	author hin;	state Exp;
branches;
next	;


desc
@@


1.4
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "appl_locl.h"
#include <sl.h>
#include "vos_local.h"

RCSID("$arla: vos_syncsite.c,v 1.14 2001/07/12 02:36:59 ahltorp Exp $");

static int helpflag;
static char *cell;
static int resolvep = 1;

static struct agetargs args[] = {
    {"cell",	'c',  aarg_string,	    &cell, "cell", NULL},
    {"help",	'h',  aarg_flag,             &helpflag, NULL, NULL},
    {"resolve", 'n',  aarg_negative_flag,    &resolvep, NULL, NULL}
};

static void
usage(void)
{
    aarg_printusage(args, "vos syncsite", "", AARG_AFSSTYLE);
}

int 
vos_syncsite (int argc, char **argv)
{
    struct in_addr saddr;
    int error;
    int optind = 0;

    helpflag = 0;
    cell = NULL;

    if (agetarg (args, argc, argv, &optind, AARG_AFSSTYLE)) {
	usage ();
	return 0;
    }
	
    if (helpflag) {
	usage ();
	return 0;
    }

    if (cell == NULL)
	cell = (char *)cell_getthiscell();

    error = arlalib_getsyncsite(cell, NULL, afsvldbport, &saddr.s_addr, 0);
    if (error) {
	fprintf(stderr, "syncsite: %s (%d)\n", koerr_gettext(error), error);
	return 0;
    }
    
    if (!resolvep)
	printf("%s's vldb syncsite is %s.\n", cell, inet_ntoa(saddr));
    else {
	char server_name[256];

	arlalib_host_to_name (saddr.s_addr, server_name, sizeof(server_name));
	
	printf("%s's vldb syncsite is %s (%s).\n", cell, server_name,
	       inet_ntoa(saddr));

    }
    return 0;
}
@


1.3
log
@Merge
@
text
@@


1.2
log
@merge
@
text
@d38 1
a38 1
RCSID("$KTH: vos_syncsite.c,v 1.12.2.1 2001/03/04 04:16:21 lha Exp $");
d90 1
a90 1
	get_servername (saddr.s_addr, server_name, sizeof(server_name));
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@d2 1
a2 1
 * Copyright (c) 1995, 1996, 1997, 1998, 1999 Kungliga Tekniska Högskolan
d17 1
a17 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
d38 1
a38 1
RCSID("$Id: vos_syncsite.c,v 1.3 1999/06/11 01:18:45 assar Exp $");
d44 4
a47 4
static struct getargs args[] = {
    {"cell",	'c',  arg_string,	    &cell, "cell", NULL},
    {"help",	'h',  arg_flag,             &helpflag, NULL, NULL},
    {"resolve", 'n',  arg_negative_flag,    &resolvep, NULL, NULL}
d53 1
a53 1
    arg_printusage(args, "vos syncsite", "", ARG_AFSSTYLE);
d66 1
a66 1
    if (getarg (args, argc, argv, &optind, ARG_AFSSTYLE)) {
d88 1
a88 1
	char name[256];
d90 3
a92 2
	inaddr2str (saddr, name, sizeof(name));
	printf("%s's vldb syncsite is %s (%s).\n", cell, name,
d94 1
@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2001 Kungliga Tekniska Högskolan
d17 6
a22 1
 * 3. Neither the name of the Institute nor the names of its contributors
d43 1
a43 1
RCSID("$KTH: vos_syncsite.c,v 1.12.2.1 2001/03/04 04:16:21 lha Exp $");
d49 4
a52 4
static struct agetargs args[] = {
    {"cell",	'c',  aarg_string,	    &cell, "cell", NULL},
    {"help",	'h',  aarg_flag,             &helpflag, NULL, NULL},
    {"resolve", 'n',  aarg_negative_flag,    &resolvep, NULL, NULL}
d58 1
a58 1
    aarg_printusage(args, "vos syncsite", "", AARG_AFSSTYLE);
d71 1
a71 1
    if (agetarg (args, argc, argv, &optind, AARG_AFSSTYLE)) {
d93 1
a93 1
	char server_name[256];
d95 2
a96 3
	get_servername (saddr.s_addr, server_name, sizeof(server_name));
	
	printf("%s's vldb syncsite is %s (%s).\n", cell, server_name,
a97 1

@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d38 1
a38 1
RCSID("$arla: vos_syncsite.c,v 1.14 2001/07/12 02:36:59 ahltorp Exp $");
d90 1
a90 1
	arlalib_host_to_name (saddr.s_addr, server_name, sizeof(server_name));
@


