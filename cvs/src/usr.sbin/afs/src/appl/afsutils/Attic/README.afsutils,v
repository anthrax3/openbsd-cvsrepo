head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.50
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.48
	OPENBSD_5_0:1.1.0.46
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.44
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.42
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.38
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.40
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.36
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.34
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.32
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.30
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.28
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.26
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.24
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.22
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.20
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.18
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.16
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.14
	OPENBSD_3_4_BASE:1.1
	arla-20030805:1.1.1.1
	OPENBSD_3_3:1.1.0.12
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	arla-0-35-7:1.1.1.1
	arla:1.1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2012.08.23.06.21.47;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2000.09.11.14.40.33;	author art;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.19;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the afs src tree can go away
@
text
@These are re-implementations of the traditional user utilities 'klog',
'tokens', and 'unlog' from AFS. The code is mostly written from scratch
with the appropriate bits of glue and insight taken from KTH-KRB.

The main goal in writing these programs was to achieve maximum
compatibility with the original programs by the same name (minus any truly
stupid bugs or security holes). In many cases, I believe users will find
themselves in a heterogeneous environment where Arla will be used
alongside the official AFS client on different machines, but with the same
shared user accounts.

It is not reasonable to expect such users to be forced to learn different
syntax for the same commands on both platforms. Indeed, even small
semantic differences quickly annoy users, and mercilessly cause scripts to
break.

While it is possible to do much of what these programs can do by using
script wrappers on the programs from KTH-KRB, it is not possible to get
100% of the features.

These features include:

[ klog ]
	- looking up the correct ViceId for the stored token, so that the
	  output of 'tokens' is more meaningful for those with access to
	  several AFS accounts

	- a new -timeout option, so that authentication won't hang forever
	  if the network is down

	- support for the -pipe and -setpag options from the original klog

[ tokens ]
	- the return code of the program can be used from a script to find
	  out if any (valid) tokens are present

	- the output format is identical to the original 'tokens' by
	  default

[ unlog ]
	- you can now unlog yourself from one or more cells only, leaving
	  the rest of your tokens intact


appl/klog.c
appl/klog.h
appl/tokens.c
appl/tokens.h
appl/unlog.c
appl/unlog.h
doc/README.afsutils
doc/TODO.afsutils
man/klog.1
man/tokens.1
man/unlog.1


Enjoy,

Chris Wing
wingc@@engin.umich.edu
@


1.1
log
@New Arla userland from Arla between 0.34.2 and current in arla cvs.
Too many new features and fixes to mention here.
@
text
@@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@@

