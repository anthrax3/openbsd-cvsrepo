head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.1.2.0.38
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.36
	OPENBSD_5_0:1.1.1.2.0.34
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.32
	OPENBSD_4_9_BASE:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.30
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.26
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.28
	OPENBSD_4_6_BASE:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.24
	OPENBSD_4_5_BASE:1.1.1.2
	OPENBSD_4_4:1.1.1.2.0.22
	OPENBSD_4_4_BASE:1.1.1.2
	OPENBSD_4_3:1.1.1.2.0.20
	OPENBSD_4_3_BASE:1.1.1.2
	OPENBSD_4_2:1.1.1.2.0.18
	OPENBSD_4_2_BASE:1.1.1.2
	OPENBSD_4_1:1.1.1.2.0.16
	OPENBSD_4_1_BASE:1.1.1.2
	OPENBSD_4_0:1.1.1.2.0.14
	OPENBSD_4_0_BASE:1.1.1.2
	OPENBSD_3_9:1.1.1.2.0.12
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.10
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.8
	OPENBSD_3_7_BASE:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.6
	OPENBSD_3_6_BASE:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.4
	OPENBSD_3_5_BASE:1.1.1.2
	OPENBSD_3_4:1.1.1.2.0.2
	OPENBSD_3_4_BASE:1.1.1.2
	arla-20030805:1.1.1.2
	OPENBSD_3_3:1.1.1.1.0.4
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.2
	OPENBSD_3_2_BASE:1.1.1.1
	arla-0-35-7:1.1.1.1
	arla:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2012.08.23.06.21.49;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2002.06.07.04.14.20;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.07.04.14.20;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.05.08.20.59;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@the afs src tree can go away
@
text
@/*
 * Copyright (c) 2000 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifdef HAVE_CONFIG_H
#include <config.h>
#endif

RCSID("$KTH: kalog.c,v 1.4 2001/01/08 16:52:36 lha Exp $");

#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>

#include <assert.h>

#include <ko.h>
#include <ports.h>
#include <log.h>

#include <arlalib.h>

#include <ka.cs.h>
#include <des.h>
#include <krb.h>

#include <ka-procs.h>

#include <roken.h>
#include <err.h>


static void
parse_user (char *argv1, const char **user, const char **cell)
{
    char *at = strchr(argv1, '@@');
    char *tmp_cell;
    
    if(at) {
	*at = '\0';
	
	*user = argv1;
	at++;
	tmp_cell = at;
	
	if(*tmp_cell != '\0')
	    *cell = tmp_cell;
    } else {
	*user = argv1;
    }
    
}

int
main (int argc, char **argv)
{
    int ret;
    Log_method *method;
    const char *cellname;
    const char *user;

    set_progname (argv[0]);

    method = log_open (get_progname(), "/dev/stderr:notime");
    if (method == NULL)
	errx (1, "log_open failed");
    cell_init(0, method);
    ports_init();
    
    cellname = cell_getthiscell();

    if (argc == 1)
	user = get_default_username();
    else if (argc == 2)
	parse_user (argv[1], &user, &cellname);
    else {
	fprintf (stderr, "usage: %s [username[@@cell]]\n",
		 get_progname());
	exit (1);
    }

    printf ("Getting ticket for %s@@%s\n", user, cellname);
    ret = ka_authenticate (user, "", cellname, NULL, 8 * 3600,
			   KA_AUTH_TICKET|KA_AUTH_TOKEN);
    if (ret)
	errx (1, "ka_authenticate failed with %s (%d)",
	      koerr_gettext(ret), ret);

    return 0;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of arla-0.35.7
@
text
@@


1.1.1.2
log
@Import of arla -current as of Aug 5 2003

ok todd@@ deraadt@@
@
text
@d38 1
a38 1
RCSID("$arla: kalog.c,v 1.8 2003/01/17 03:30:21 lha Exp $");
a52 3
#ifdef HAVE_OPENSSL
#include <openssl/des.h>
#else
a53 1
#endif
a60 1
#include <vers.h>
a91 1
    tzset();
d93 1
a93 1
    method = log_open (getprogname(), "/dev/stderr:notime");
d103 1
a103 4
    else if (strcmp("-version", argv[1]) == 0) {
	print_version(NULL);
	return 0;
    } else if (argc == 2)
d106 2
a107 2
	fprintf (stderr, "usage: %s [-version] [username[@@cell]]\n",
		 getprogname());
@

