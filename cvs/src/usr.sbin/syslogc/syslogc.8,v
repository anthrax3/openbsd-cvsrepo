head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.10
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.20
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.12
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.16
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.14
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.10
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.8
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.6
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.4
	OPENBSD_5_0:1.9.0.2
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.8.0.10
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.8
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.4
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@.\" @;


1.10
date	2015.11.05.09.48.05;	author jmc;	state Exp;
branches;
next	1.9;
commitid	2IdzdclaEuAvUpsp;

1.9
date	2011.07.12.11.28.31;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.10.22.17.33;	author sobrado;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.20.29;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.10.13.50.32;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.03.13.25.21;	author mpf;	state Exp;
branches;
next	1.4;

1.4
date	2005.09.24.02.09.54;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.11.12.11.54;	author xsa;	state Exp;
branches;
next	1.2;

1.2
date	2004.06.25.19.11.38;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.04.08.30.21;	author djm;	state Exp;
branches;
next	;


desc
@@


1.10
log
@"commandline" -> "command line", since there are so few examples
of the former in the pages, so many of the latter, and in some of
these pages we had multiple spellings;

prompted by tj
@
text
@.\"	$OpenBSD: syslogc.8,v 1.9 2011/07/12 11:28:31 sthen Exp $
.\"
.\" Copyright (c) 2004 Damien Miller
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.Dd $Mdocdate: July 12 2011 $
.Dt SYSLOGC 8
.Os
.Sh NAME
.Nm syslogc
.Nd collect messages from syslog memory buffer
.Sh SYNOPSIS
.Nm syslogc
.Op Fl Ccfo
.Op Fl n Ar lines
.Op Fl s Ar reporting_socket
.Ar logname
.Nm syslogc
.Fl q
.Sh DESCRIPTION
.Nm
collects messages from the
.Xr syslogd 8
memory buffer specified by the
.Ar logname
argument.
.Pp
For
.Nm
to work,
.Xr syslogd 8
must be configured with one or more memory buffer logs (see
.Xr syslog.conf 5
for details) and have a reporting socket location specified on the
command line (using the
.Fl s
option to
.Xr syslogd 8 ) .
.Pp
By default,
.Nm
will query the specified log and return all entries to standard output.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl C
Request that the log buffer be cleared without reading it.
.It Fl c
Request that the log buffer be cleared once it has been read.
.It Fl f
Print out the last 10 lines and read from the buffer continuously.
Like the
.Fl f
option in
.Xr tail 1 .
.It Fl n Ar lines
Print the specified number of lines from the end of the buffer.
.It Fl o
Check whether the specified log has overflowed.
If the log has overflowed, then a message will be printed to
.Xr stdout 4
and the exit status will be set to 1.
.It Fl q
Request a list of available logs.
If a log has overflowed an asterisk
.Pq Ql *
will be appended to its name.
.It Fl s Ar reporting_socket
Specify alternate reporting socket location (the default is
.Pa /var/run/syslogd.sock ) .
.El
.Sh SEE ALSO
.Xr syslog 3 ,
.Xr syslog.conf 5 ,
.Xr syslogd 8
.Sh HISTORY
The
.Nm
command first appeared in
.Ox 3.5 .
.Sh CAVEATS
The buffer space used for writing logs through the socket is limited.
Thus it is possible to lose logs when running in continuous mode.
Losses are reported on standard error.
@


1.9
log
@Allow syslogc -n XX to display less than the whole file, and -n XX -f to
display more/less than the default of 10.  ok mpf@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.8 2008/09/10 22:17:33 sobrado Exp $
d16 1
a16 1
.Dd $Mdocdate: September 10 2008 $
d45 1
a45 1
commandline (using the
@


1.8
log
@sync synopsis and usage; documentation tweaks.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.7 2007/05/31 19:20:29 jmc Exp $
d16 1
a16 1
.Dd $Mdocdate: May 31 2007 $
d25 1
d52 1
a52 1
will query the specified log and return it to standard output.
d66 2
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.6 2007/01/10 13:50:32 jmc Exp $
d16 1
a16 1
.Dd $Mdocdate$
d24 1
a24 1
.Op Fl Ccfoq
a25 3
.Ar logname
.Nm syslogc
.Op Fl Cc
@


1.6
log
@- better wording for -f, as well as missing punctuation
- put CAVEATS in the right place
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.5 2007/01/03 13:25:21 mpf Exp $
d16 1
a16 1
.Dd November 2, 2003
@


1.5
log
@Support for continuous reading of syslog memory buffers.
Works like ``tail -f'' on a log file.
OK markus@@, djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.4 2005/09/24 02:09:54 djm Exp $
d64 4
a67 4
Like
.Ar -f
in
.Xr tail 1
a81 4
.Sh CAVEATS
The buffer space used for writing logs through the socket is limited.
Thus it is possible to lose logs when running in continuous mode.
Losses are reported on standard error.
d91 4
@


1.4
log
@mention marking of logs that have wrapped their buffer, from stevesk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.3 2004/07/11 12:11:54 xsa Exp $
d24 1
a24 1
.Op Fl Ccoq
d62 6
d82 4
@


1.3
log
@
.Xr syslogd(8) in SEE ALSO; ok djm@@ jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.2 2004/06/25 19:11:38 djm Exp $
d69 3
@


1.2
log
@support new syslogd control protocol and add new -o option to detect memory
buffer overflow; idea & ok markus@@

NB if you are using memory buffered logging make sure you update both syslogd
and syslogc _and_ restart syslogd because the protocol has changed
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslogc.8,v 1.1 2004/01/04 08:30:21 djm Exp $
d75 2
a76 1
.Xr syslog.conf 5
@


1.1
log
@syslogc - client to read memory buffered logs from syslogd;
manpage nits jmc@@, fixes jose@@; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d24 1
a24 1
.Op Fl Ccq
d62 5
@

