head	1.4;
access;
symbols
	OPENBSD_5_4:1.3.0.48
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.46
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.44
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.42
	OPENBSD_5_0:1.3.0.40
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.38
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.36
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.32
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2013.12.15.17.37.25;	author tedu;	state dead;
branches;
next	1.3;

1.3
date	2002.03.27.14.08.43;	author camield;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.21.20.22.06;	author camield;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.19.13.05.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove popa3d. Sorry, no plaintext password only daemons allowed anymore.
ok deraadt and co.
@
text
@/* $OpenBSD: virtual.h,v 1.3 2002/03/27 14:08:43 camield Exp $ */

/*
 * Virtual domain support.
 */

#ifndef _POP_VIRTUAL_H
#define _POP_VIRTUAL_H

#include <pwd.h>
#include <sys/types.h>

/*
 * These are set by the authentication routine, below.
 */
extern char *virtual_domain;
extern char *virtual_spool;

/*
 * Initializes the virtual domain support at startup. Note that this will
 * only be called once in standalone mode, so don't expect an open socket
 * here. Returns a non-zero value on error.
 */
extern int virtual_startup(void);

/*
 * Tries to authenticate a username/password pair for the virtual domain
 * indicated either by the connected IP address (the socket is available
 * on fd 0), or as a part of the username. If the virtual domain is known,
 * virtual_domain and virtual_spool are set appropriately. If the username
 * is known as well, known is set. Returns the template user to run as if
 * authentication succeeds, or NULL otherwise.
 */
extern struct passwd *virtual_userpass(char *user, char *pass, int *known);

#endif
@


1.3
log
@Mostly cosmetic update so we can call it 0.5.

ok millert@@, fgsch@@
@
text
@d1 1
a1 1
/* $OpenBSD: virtual.h,v 1.2 2001/09/21 20:22:06 camield Exp $ */
@


1.2
log
@update to 0.4.9.4:
- stand-alone or inetd selectable from command-line (-D = daemon mode)
- logging priorities more accurate
- chroots to empty dir
- tcp wrappers support
@
text
@d1 1
a1 1
/* $OpenBSD: virtual.h,v 1.1 2001/08/19 13:05:57 deraadt Exp $ */
d32 1
a32 1
 * authentication is succeeds, or NULL otherwise.
@


1.1
log
@libexec is the wrong place for popa3d, since it can be started WITHOUT inetd
@
text
@d1 1
a1 1
/* $OpenBSD: virtual.h,v 1.2 2001/08/13 20:19:33 camield Exp $ */
d31 2
a32 2
 * is known as well, mailbox is set to the username. Returns the template
 * user to run as if the authentication is successful, or NULL otherwise.
d34 1
a34 1
extern struct passwd *virtual_userpass(char *user, char *pass, char **mailbox);
@

