head	1.5;
access;
symbols
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2013.12.15.17.37.25;	author tedu;	state dead;
branches;
next	1.4;

1.4
date	2009.12.20.15.55.42;	author tobias;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.12.19.28.22;	author camield;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.21.20.22.06;	author camield;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.19.13.05.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove popa3d. Sorry, no plaintext password only daemons allowed anymore.
ok deraadt and co.
@
text
@/* $OpenBSD: pop_auth.c,v 1.4 2009/12/20 15:55:42 tobias Exp $ */

/*
 * AUTHORIZATION state handling.
 */

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <syslog.h>

#include "misc.h"
#include "params.h"
#include "protocol.h"
#include "pop_auth.h"
#if POP_VIRTUAL
#include "virtual.h"
#endif

static char *pop_user, *pop_pass;

static int pop_auth_quit(char *params)
{
	if (params) return POP_ERROR;
	return POP_LEAVE;
}

static int pop_auth_user(char *params)
{
	char *user;

	user = pop_get_param(&params);
	if (!user || pop_user || params) return POP_ERROR;
	if (!(pop_user = strdup(user))) return POP_CRASH_SERVER;
	return POP_OK;
}

static int pop_auth_pass(char *params)
{
	if (!params) return POP_ERROR;
	if (!pop_user) {
		memset(params, 0, strlen(params));
		return POP_ERROR;
	}
	pop_pass = strdup(params);
	memset(params, 0, strlen(params));
	if (pop_pass == NULL) return POP_CRASH_SERVER;
	return POP_STATE;
}

static struct pop_command pop_auth_commands[] = {
	{"QUIT", pop_auth_quit},
	{"USER", pop_auth_user},
	{"PASS", pop_auth_pass},
	{NULL, NULL}
};

int do_pop_auth(int channel)
{
	pop_init();

	if (pop_reply_ok()) return 1;

	pop_user = NULL;
	if (pop_handle_state(pop_auth_commands) == POP_STATE) {
		pop_clean();
		write_loop(channel, (char *)&pop_buffer, sizeof(pop_buffer));
		write_loop(channel, pop_user, strlen(pop_user) + 1);
		write_loop(channel, pop_pass, strlen(pop_pass) + 1);
		memset(pop_pass, 0, strlen(pop_pass));
		if (close(channel)) return 1;
	}

	return 0;
}

void log_pop_auth(int result, char *user)
{
	if (result == AUTH_NONE) {
		syslog(SYSLOG_PRI_LO, "Didn't attempt authentication");
		return;
	}

#if POP_VIRTUAL
	if (virtual_domain) {
		syslog(result == AUTH_OK ? SYSLOG_PRI_LO : SYSLOG_PRI_HI,
			"Authentication %s for %s@@%s",
			result == AUTH_OK ? "passed" : "failed",
			user ? user : "UNKNOWN USER",
			virtual_domain);
		return;
	}
#endif
	syslog(result == AUTH_OK ? SYSLOG_PRI_LO : SYSLOG_PRI_HI,
		"Authentication %s for %s",
		result == AUTH_OK ? "passed" : "failed",
		user ? user : "UNKNOWN USER");
}
@


1.4
log
@Properly fill password string with zeros after use on unprivileged side of
fork() setup.

ok deraadt, millert
@
text
@d1 1
a1 1
/* $OpenBSD: pop_auth.c,v 1.3 2003/05/12 19:28:22 camield Exp $ */
@


1.3
log
@Sync to 0.6.2

- UIDL digest calculation has been improved
- minor bug fixes
- -V switch to show version
@
text
@d1 1
a1 1
/* $OpenBSD: pop_auth.c,v 1.2 2001/09/21 20:22:06 camield Exp $ */
d40 8
a47 2
	if (!params || !pop_user) return POP_ERROR;
	if (!(pop_pass = strdup(params))) return POP_CRASH_SERVER;
d70 1
@


1.2
log
@update to 0.4.9.4:
- stand-alone or inetd selectable from command-line (-D = daemon mode)
- logging priorities more accurate
- chroots to empty dir
- tcp wrappers support
@
text
@d1 1
a1 1
/* $OpenBSD: pop_auth.c,v 1.1 2001/08/19 13:05:57 deraadt Exp $ */
d49 1
a49 1
	{NULL}
@


1.1
log
@libexec is the wrong place for popa3d, since it can be started WITHOUT inetd
@
text
@d1 1
a1 1
/* $OpenBSD: pop_auth.c,v 1.2 2001/08/13 20:19:33 camield Exp $ */
d34 1
a34 1
	if (!(pop_user = strdup(user))) return POP_CRASH;
d41 1
a41 1
	if (!(pop_pass = strdup(params))) return POP_CRASH;
d70 1
a70 1
void log_pop_auth(int result, char *mailbox)
d73 1
a73 1
		syslog(SYSLOG_PRIORITY, "Didn't attempt authentication");
d79 2
a80 1
		syslog(SYSLOG_PRIORITY, "Authentication %s for %s@@%s",
d82 1
a82 1
			mailbox ? mailbox : "UNKNOWN",
d87 2
a88 1
	syslog(SYSLOG_PRIORITY, "Authentication %s for %s",
d90 1
a90 1
		mailbox ? mailbox : "UNKNOWN");
@

