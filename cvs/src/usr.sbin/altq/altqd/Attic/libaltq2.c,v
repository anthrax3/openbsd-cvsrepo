head	1.7;
access;
symbols
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	snap20010624:1.1.1.1
	KAME:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.11.23.18.47.28;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2002.02.20.10.55.12;	author kjc;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.19.19.39.39;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.01.18.56.53;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.16.12.59.43;	author kjc;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.08.07.04.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.27.18.23.17;	author kjc;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2001.06.27.18.23.17;	author kjc;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye
@
text
@/*	$KAME: libaltq2.c,v 1.3 2001/08/16 10:39:16 kjc Exp $	*/
/*
 * Copyright (C) 1997-2000
 *	Sony Computer Science Laboratories, Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY SONY CSL AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL SONY CSL OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * this file contains functions and variables needed to use libaltq.
 * since these are defined in rsvpd, they should be separated in order
 * to link libaltq to rsvpd.
 */
#include <sys/param.h>

#include <altq/altq.h>

#include <stdio.h>
#include <errno.h>
#include <string.h>
#include <syslog.h>
#include <stdarg.h>

#include "altq_qop.h"

/* from rsvp_main.c */
char *altqconfigfile = "/etc/altq.conf";

/* from rsvp_global.h */
int	if_num;		/* number of phyints */
int	m_debug;	/* Debug output control bits */
int	l_debug;	/* Logging severity level */

int daemonize = 1;

/* taken from rsvp_debug.c and modified. */
void
log_write(int severity, int syserr, const char *format, ...)
{
	va_list ap;

	va_start(ap, format);

	if (severity <= l_debug) {
		if (!daemonize) {
			vfprintf(stderr, format, ap);
			if (syserr != 0)
				fprintf(stderr, ": %s", strerror(syserr));
			fprintf(stderr, "\n");
		} else {
			if (syserr == 0)
				vsyslog(severity, format, ap);
			else {
				char buf[512];

				strlcpy(buf, format, sizeof(buf));
				strlcat(buf, ": %m", sizeof(buf));
				vsyslog(severity, buf, ap);
			}
		}
	}

	va_end(ap);
}
@


1.6
log
@sync with KAME
 - use strerror(3).
@
text
@@


1.5
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d66 2
a67 6
			if (syserr != 0) {
				if (syserr < sys_nerr)
					fprintf(stderr, ": %s", sys_errlist[syserr]);
				else
					fprintf(stderr, ": errno %d", syserr);
			}
@


1.4
log
@pull in protos
@
text
@a40 1
#ifdef __STDC__
a41 3
#else
#include <varargs.h>
#endif
a60 1
#ifdef __STDC__
a61 3
#else
	va_start(ap);
#endif
@


1.3
log
@sync with KAME.
altq userland cleanup:
 - string operation audit
 - remove variable names from function prototypes
 - clean up error messages
@
text
@d39 1
@


1.2
log
@put a kjc copyright on this
@
text
@d1 1
a1 1
/*	$OpenBSD: libaltq2.c,v 1.1.1.1 2001/06/27 18:23:17 kjc Exp $	*/
d71 1
a71 1
		if (!daemonize)
d73 18
a90 2
		else
			vsyslog(severity, format, ap);
a93 18

	if (syserr == 0) {
		/* Do nothing for now */
	} else if (syserr < sys_nerr) {
		if (severity <= l_debug) {
			if (!daemonize)
				fprintf(stderr, ": %s\n", sys_errlist[syserr]);
			else
				syslog(severity, ": %s", sys_errlist[syserr]);
		}
	} else {
		if (severity <= l_debug) {
			if (!daemonize)
				fprintf(stderr, ": errno %d\n", syserr);
			else
				syslog(severity, ": errno %d", syserr);
		}
	}
@


1.1
log
@Initial revision
@
text
@d1 27
a27 1
/*	$OpenBSD$	*/
@


1.1.1.1
log
@import ALTQ userland tools from KAME.
@
text
@@
