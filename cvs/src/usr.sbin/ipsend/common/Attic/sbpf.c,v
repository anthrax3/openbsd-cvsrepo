head	1.6;
access;
symbols
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2001.05.30.02.12.49;	author deraadt;	state dead;
branches;
next	1.5;

1.5
date	2001.01.17.06.01.25;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	99.12.30.08.02.33;	author kjell;	state Exp;
branches;
next	1.3;

1.3
date	98.01.26.04.16.53;	author dgregor;	state Exp;
branches;
next	1.2;

1.2
date	97.04.06.20.15.46;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.05.10.21.40.56;	author dm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@/*	$OpenBSD: sbpf.c,v 1.5 2001/01/17 06:01:25 fgsch Exp $	*/

/*
 * (C)opyright 1995-1998 Darren Reed. (from tcplog)
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and due credit is given
 * to the original author and the contributors.
 */
#include <stdio.h>
#include <netdb.h>
#include <string.h>
#include <unistd.h>
#include <stdlib.h>
#include <ctype.h>
#include <signal.h>
#include <errno.h>
#include <sys/types.h>
#include <sys/param.h>
#include <sys/mbuf.h>
#include <sys/time.h>
#include <sys/timeb.h>
#include <sys/socket.h>
#include <sys/file.h>
#include <sys/ioctl.h>
#if BSD < 199103
#include <sys/fcntlcom.h>
#endif
#if (__FreeBSD_version >= 300000)
# include <sys/dirent.h>
#else
# include <sys/dir.h>
#endif
#include <net/bpf.h>

#include <net/if.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#include <netinet/ip.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/udp_var.h>
#include <netinet/tcp.h>
#include "ipsend.h"

#if !defined(lint)
static const char sccsid[] = "@@(#)sbpf.c	1.3 8/25/95 (C)1995 Darren Reed";
static const char rcsid[] = "@@(#)$IPFilter: sbpf.c,v 2.1 1999/08/04 17:31:13 darrenr Exp $";
#endif

/*
 * the code herein is dervied from libpcap.
 */
static	u_char	*buf = NULL;
static	int	bufsize = 0, timeout = 1;


int	initdevice(device, sport, tout)
char	*device;
int	sport, tout;
{
	struct	bpf_version bv;
	struct	timeval to;
	struct	ifreq ifr;
	char	bpfname[16];
	int	fd, i;

	fd = 0;			/* shutup gcc	*/

	for (i = 0; i < 16; i++)
	    {
		(void) sprintf(bpfname, "/dev/bpf%d", i);
		if ((fd = open(bpfname, O_RDWR)) >= 0)
			break;
	    }
	if (i == 16)
	    {
		fprintf(stderr, "no bpf devices available as /dev/bpfxx\n");
		return -1;
	    }

	if (ioctl(fd, BIOCVERSION, (caddr_t)&bv) < 0)
	    {
		perror("BIOCVERSION");
		return -1;
	    }
	if (bv.bv_major != BPF_MAJOR_VERSION ||
	    bv.bv_minor < BPF_MINOR_VERSION)
	    {
		fprintf(stderr, "kernel bpf (v%d.%d) filter out of date:\n",
			bv.bv_major, bv.bv_minor);
		fprintf(stderr, "current version: %d.%d\n",
			BPF_MAJOR_VERSION, BPF_MINOR_VERSION);
		return -1;
	    }

	(void) strncpy(ifr.ifr_name, device, sizeof(ifr.ifr_name));
	if (ioctl(fd, BIOCSETIF, &ifr) == -1)
	    {
		fprintf(stderr, "%s(%d):", ifr.ifr_name, fd);
		perror("BIOCSETIF");
		exit(1);
	    }
	/*
	 * get kernel buffer size
	 */
	if (ioctl(fd, BIOCGBLEN, &bufsize) == -1)
	    {
		perror("BIOCSBLEN");
		exit(-1);
	    }
	buf = (u_char*)malloc(bufsize);
	/*
	 * set the timeout
	 */
	timeout = tout;
	to.tv_sec = 1;
	to.tv_usec = 0;
	if (ioctl(fd, BIOCSRTIMEOUT, (caddr_t)&to) == -1)
	    {
		perror("BIOCSRTIMEOUT");
		exit(-1);
	    }

	(void) ioctl(fd, BIOCFLUSH, 0);
	return fd;
}


/*
 * output an IP packet onto a fd opened for /dev/bpf
 */
int	sendip(fd, pkt, len)
int	fd, len;
char	*pkt;
{			
	if (write(fd, pkt, len) == -1)
	    {
		perror("send");
		return -1;
	    }

	return len;
}
@


1.5
log
@2nd part of the ipf code; need more testing.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@comment type. from kwesterback@@home.com
@
text
@d1 2
d4 1
a4 1
 * (C)opyright 1995-1997 Darren Reed. (from tcplog)
d29 5
a33 1
#include <sys/dir.h>
d48 1
a48 1
static const char rcsid[] = "@@(#)$Id: sbpf.c,v 1.3 1998/01/26 04:16:53 dgregor Exp $";
d52 1
a52 1
 * the code herein is derived from libpcap.
d67 2
@


1.3
log
@IPF 3.2.3
@
text
@d42 1
a42 1
static const char rcsid[] = "@@(#)$Id: sbpf.c,v 2.0.2.7 1997/10/23 11:42:47 darrenr Exp $";
d46 1
a46 1
 * the code herein is dervied from libpcap.
@


1.2
log
@#include stdlib.h to get malloc(3) and calloc(3) definitions.
Fixes compiler warnings.
@
text
@d2 1
a2 4
 * (C)opyright October 1995 Darren Reed. (from tcplog)
 *
 *   This software may be freely distributed as long as it is not altered
 * in any way and that this messagge always accompanies it.
d4 3
d9 3
a12 1
#include <netdb.h>
a33 1
#include <netinet/if_ether.h>
d38 1
a38 1
#include <netinet/tcpip.h>
d40 3
a42 2
#ifndef	lint
static	char	sbpf[] = "@@(#)sbpf.c	1.3 8/25/95 (C)1995 Darren Reed";
a55 1
	struct	bpf_program prog;
@


1.1
log
@ipfilter 3.0.4
@
text
@d9 1
@
