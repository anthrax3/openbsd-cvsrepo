head	1.7;
access;
symbols
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.12
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2004.04.28.06.57.40;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2002.06.18.03.44.06;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.02.10.02.23;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.26.17.38.16;	author matthieu;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.18.20.38.56;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.24.06.05.08;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.08.18.03.43.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@It is a big pleasure for me to remove this highe pile of gunk from the tree.
dhclient, dhcrelay and dhcpd have been factored out and cleaned up big time,
dhcpd and dhcrelay chroot itself, drop privileges and lock their bpf
descriptors after applyiing read/write filters now, and this pile of ISC code
with it's lovely char ServerName; /* Name of Server */ constructs is
obsolete.
theo ok, I owe you some beers for this pleasure
@
text
@/* print.c

   Turn data structures into printable text. */

/*
 * Copyright (c) 1995, 1996, 1997, 1998 The Internet Software Consortium.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of The Internet Software Consortium nor the names
 *    of its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
 * CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This software has been written for the Internet Software Consortium
 * by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
 * Enterprises.  To learn more about the Internet Software Consortium,
 * see ``http://www.vix.com/isc''.  To learn more about Vixie
 * Enterprises, see ``http://www.vix.com''.
 */

#include "dhcpd.h"

char *print_hw_addr (htype, hlen, data)
	int htype;
	int hlen;
	unsigned char *data;
{
	static char habuf [49];
	char *s;
	int i;

	if (htype == 0 || hlen == 0) {
		goto bad;
	} else {
		int slen = sizeof(habuf);
		s = habuf;
		for (i = 0; i < hlen; i++) {
			int j;
			j = snprintf (s, slen, "%02x", data [i]);
			if (j <= 0)
				goto bad;

			s += strlen (s);
			slen -= (strlen(s) + 1);
 			*s++ = ':';
		}
		*--s = 0;
	}
	return habuf;
 bad:	
	strlcpy (habuf, "<null>", sizeof habuf);
	return habuf;

}

void print_lease (lease)
	struct lease *lease;
{
	struct tm *t;
	char tbuf [32];

	debug ("      Lease %s",
	       piaddr (lease -> ip_addr));
	
	t = gmtime (&lease -> starts);
	strftime (tbuf, sizeof tbuf, "%Y/%m/%d %H:%M:%S", t);
	debug ("        start %s", tbuf);
	
	t = gmtime (&lease -> ends);
	strftime (tbuf, sizeof tbuf, "%Y/%m/%d %H:%M:%S", t);
	debug ("        end %s", tbuf);
	
	t = gmtime (&lease -> timestamp);
	strftime (tbuf, sizeof tbuf, "%Y/%m/%d %H:%M:%S", t);
	debug ("        stamp %s", tbuf);
	
	debug ("        hardware addr = %s",
	       print_hw_addr (lease -> hardware_addr.htype,
			       lease -> hardware_addr.hlen,
			       lease -> hardware_addr.haddr));
	debug ("        host %s  ",
	       lease -> host ? lease -> host -> name : "<none>");
}	

void dump_packet (tp)
	struct packet *tp;
{
	struct dhcp_packet *tdp = tp -> raw;

	debug ("packet length %d", tp -> packet_length);
	debug ("op = %d  htype = %d  hlen = %d  hops = %d",
	       tdp -> op, tdp -> htype, tdp -> hlen, tdp -> hops);
	debug ("xid = %x  secs = %d  flags = %x",
	       tdp -> xid, tdp -> secs, tdp -> flags);
	debug ("ciaddr = %s", inet_ntoa (tdp -> ciaddr));
	debug ("yiaddr = %s", inet_ntoa (tdp -> yiaddr));
	debug ("siaddr = %s", inet_ntoa (tdp -> siaddr));
	debug ("giaddr = %s", inet_ntoa (tdp -> giaddr));
	debug ("chaddr = %02x:%02x:%02x:%02x:%02x:%02x",
	       ((unsigned char *)(tdp -> chaddr)) [0],
	       ((unsigned char *)(tdp -> chaddr)) [1],
	       ((unsigned char *)(tdp -> chaddr)) [2],
	       ((unsigned char *)(tdp -> chaddr)) [3],
	       ((unsigned char *)(tdp -> chaddr)) [4],
	       ((unsigned char *)(tdp -> chaddr)) [5]);
	debug ("filename = %s", tdp -> file);
	debug ("server_name = %s", tdp -> sname);
	if (tp -> options_valid) {
		int i;

		for (i = 0; i < 256; i++) {
			if (tp -> options [i].data)
				debug ("  %s = %s",
					dhcp_options [i].name,
					pretty_print_option
					(i, tp -> options [i].data,
					 tp -> options [i].len, 1, 1));
		}
	}
	debug ("%s", "");
}

void dump_raw (buf, len)
	unsigned char *buf;
	int len;
{
	int i, j;
	char lbuf [80];
	int llen = sizeof(lbuf);
	int lbix = 0;

	lbuf [0] = 0;

	for (i = 0; i < len; i++) {
		if ((i & 15) == 0) {
			if (lbix)
				note (lbuf);
			j = snprintf (lbuf, llen, "%03x:", i);
			if (j >= llen)
				return;
			lbix+=j;
			llen-=j;
		} else if ((i & 7) == 0) { 
			lbuf [lbix++] = ' ';
			len--;
		}
		j = snprintf (&lbuf [lbix], llen, " %02x", buf [i]);
		if (j >= llen)
			return;
		lbix += j;
		llen -= j;
	}
	note (lbuf);
}

void hash_dump (table)
	struct hash_table *table;
{
	int i;
	struct hash_bucket *bp;

	if (!table)
		return;

	for (i = 0; i < table -> hash_count; i++) {
		if (!table -> buckets [i])
			continue;
		note ("hash bucket %d:", i);
		for (bp = table -> buckets [i]; bp; bp = bp -> next) {
			if (bp -> len)
				dump_raw (bp -> name, bp -> len);
			else
				note ((char *)bp -> name);
		}
	}
}
@


1.6
log
@format string audit.  From: Gregory Steuck <greg@@nest.cx>
@
text
@@


1.5
log
@strlcpy
@
text
@d121 1
a121 1
	debug ("chaddr = %02.2x:%02.2x:%02.2x:%02.2x:%02.2x:%02.2x",
d142 1
a142 1
	debug ("");
@


1.4
log
@Fix two typos that had the effect that ethernet addresses where always logged
as <null> and that hostname lookups didn't work, forcing people to use
IP adresses instead of names.  ok krw@@
@
text
@d73 1
a73 1
	strcpy (habuf, "<null>");
@


1.3
log
@be careful with snprintf/strlcpy - account for cases where they
can return values bigger than the length specified.
@
text
@d62 1
a62 1
			if (j >= 0)
@


1.2
log
@dhcp 2.0pl5 merge/cleanup/deadcode slashing. still needs more eyes on this
but appears to work better than what's been in-tree before for dealing with
stupid dhcp servers.
@
text
@d55 1
a55 1
		strcpy (habuf, "<null>");
d60 5
a64 1
			snprintf (s, slen, "%02x", data [i]);
d67 1
a67 1
			*s++ = ':';
d72 4
d161 2
d170 2
@


1.1
log
@ISC dhcp, needs security audit for sure
@
text
@d6 1
a6 1
 * Copyright (c) 1995, 1996 The Internet Software Consortium.
a42 5
#ifndef lint
static char copyright[] =
"$Id: print.c,v 1.1.1.4 1998/05/18 06:53:55 mellon Exp $ Copyright (c) 1995, 1996 The Internet Software Consortium.  All rights reserved.\n";
#endif /* not lint */

d57 1
d60 1
a60 1
			sprintf (s, "%02x", data [i]);
d62 1
d76 1
a76 1
	debug ("  Lease %s",
d80 2
a81 2
	strftime (tbuf, sizeof tbuf, "%D %H:%M:%S", t);
	debug ("  start %s", tbuf);
d84 2
a85 2
	strftime (tbuf, sizeof tbuf, "%D %H:%M:%S", t);
	debug ("  end %s", tbuf);
d88 2
a89 2
	strftime (tbuf, sizeof tbuf, "%D %H:%M:%S", t);
	debug ("  stamp %s", tbuf);
d91 1
a91 1
	debug ("    hardware addr = %s",
d95 1
a95 1
	debug ("  host %s  ",
d141 1
a141 1
	int i;
d143 1
d152 4
a155 3
			sprintf (lbuf, "%03x:", i);
			lbix = 4;
		} else if ((i & 7) == 0)
d157 5
a161 2
		sprintf (&lbuf [lbix], " %02x", buf [i]);
		lbix += 3;
d183 1
a183 1
				note (bp -> name);
@

