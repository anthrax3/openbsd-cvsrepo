head	1.18;
access;
symbols
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.11.0.12
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.10
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.8
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.18
date	2004.04.28.06.57.41;	author henning;	state dead;
branches;
next	1.17;

1.17
date	2004.01.11.03.24.40;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2004.01.09.07.49.07;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.16.00.45.16;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.15.22.54.00;	author krw;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.13.12.08.43;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.10.23.38.17;	author krw;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.18.23.42.56;	author todd;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.18.23.29.20;	author todd;	state Exp;
branches;
next	1.9;

1.9
date	2000.09.05.08.28.04;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2000.09.05.07.21.34;	author peter;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.03.22.33.19;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.25.08.41.12;	author dugsong;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.20.08.14.21;	author angelos;	state Exp;
branches
	1.5.2.1;
next	1.4;

1.4
date	2000.02.11.01.23.18;	author chris;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.31.17.51.42;	author chris;	state Exp;
branches;
next	1.2;

1.2
date	99.12.19.07.18.59;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	98.09.12.08.55.14;	author deraadt;	state Exp;
branches;
next	;

1.5.2.1
date	2000.06.25.18.31.54;	author jason;	state Exp;
branches;
next	;


desc
@@


1.18
log
@It is a big pleasure for me to remove this highe pile of gunk from the tree.
dhclient, dhcrelay and dhcpd have been factored out and cleaned up big time,
dhcpd and dhcrelay chroot itself, drop privileges and lock their bpf
descriptors after applyiing read/write filters now, and this pile of ISC code
with it's lovely char ServerName; /* Name of Server */ constructs is
obsolete.
theo ok, I owe you some beers for this pleasure
@
text
@#!/bin/sh
#
# $OpenBSD: dhclient-script,v 1.17 2004/01/11 03:24:40 deraadt Exp $
#
# Copyright (c) 2003 Kenneth R Westerback <krw@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#
#

#
# Helper functions that implement common actions.
#

delete_old_address() {
	if [ -n "$old_ip_address" ]; then
		ifconfig $interface inet -alias $old_ip_address $medium
		route delete "$old_ip_address" 127.0.0.1 >/dev/null 2>&1
	fi
}

add_new_address() {
	ifconfig $interface \
		inet $new_ip_address \
		netmask $new_subnet_mask \
		broadcast $new_broadcast_address \
		$medium

	# XXX Original TIMEOUT code did not do this unless $new_routers was set?
	route add $new_ip_address 127.0.0.1 >/dev/null 2>&1
}

delete_old_alias() {
	if [ -n "$alias_ip_address" ]; then
		ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
		route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
	fi
}

add_new_alias() {
	if [ -n "$alias_ip_address" ]; then
		ifconfig $interface inet alias $alias_ip_address netmask $alias_subnet_mask
		route add $alias_ip_address 127.0.0.1
	fi
}

delete_old_routes() {
	# Delete existing default route. We only allow one, so no need to
	# process $old_routers list.
	route delete default >/dev/null 2>&1

	if [ -n "$old_static_routes" ]; then
		set $old_static_routes
		while [ $# -gt 1 ]; do
			route delete "$1" "$2"
			shift; shift
		done
	fi

	# XXX BOUND RENEW REBIND REBOOT did not /dev/null output before.
	arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' | sh >/dev/null 2>&1
}

add_new_routes() {
	route delete default >/dev/null 2>&1
	for router in $new_routers; do
		route add default $router >/dev/null 2>&1
		# 2nd and subsequent default routers error out, so explicitly
		# stop processing the list after the first one.
		break
	done

	if [ -n "$new_static_routes" ]; then
		set $new_static_routes
		while [ $# -gt 1 ]; do
			route add $1 $2
			shift; shift
		done
	fi
}

add_new_resolv_conf() {
	# XXX Old code did not create/update resolv.conf unless both
	# $new_domain_name and $new_domain_name_servers were provided.  PR
	# #3135 reported some ISP's only provide $new_domain_name_servers and
	# thus broke the script. This code creates the resolv.conf if either
	# are provided.

	rm -f /etc/resolv.conf.std

	if [ -n "$new_domain_name" ]; then
		echo "search $new_domain_name" >>/etc/resolv.conf.std
	fi

	if [ -n "$new_domain_name_servers" ]; then
		for nameserver in $new_domain_name_servers; do
			echo "nameserver $nameserver" >>/etc/resolv.conf.std
		done
	fi

	if [ -f /etc/resolv.conf.std ]; then
		if [ -f /etc/resolv.conf.tail ]; then
			cat /etc/resolv.conf.tail >>/etc/resolv.conf.std
		fi

		# In case (e.g. during OpenBSD installs) /etc/resolv.conf
		# is a symbolic link, take care to preserve the link and write
		# the new data in the correct location.

		if [ -f /etc/resolv.conf ]; then
			cat /etc/resolv.conf > /etc/resolv.conf.save
		fi
		cat /etc/resolv.conf.std > /etc/resolv.conf
		rm -f /etc/resolv.conf.std

		# Try to ensure correct ownership and permissions.
		chown -RL root:wheel /etc/resolv.conf
		chmod -RL 644 /etc/resolv.conf

		return 0
	fi

	return 1
}

#
# Start of active code.
#

if [ -n "$new_network_number" ]; then
	echo "New Network Number: $new_network_number"
fi

if [ -n "$new_broadcast_address" ]; then
	echo "New Broadcast Address: $new_broadcast_address"
fi

case $reason in
MEDIUM)
	ifconfig $interface $medium
	ifconfig $interface inet -alias 0.0.0.0 $medium >/dev/null 2>&1
	sleep 1
	;;

PREINIT)
	delete_old_alias
	ifconfig $interface inet 0.0.0.0 netmask 0.0.0.0 broadcast 255.255.255.255 up
	;;

ARPCHECK|ARPSEND)
	;;
  
BOUND|RENEW|REBIND|REBOOT)
	if [ -n "$old_ip_address" ]; then
		if [ "$old_ip_address" != "$alias_ip_address" ]; then
			delete_old_alias
		fi
		if [ "$old_ip_address" != "$new_ip_address" ]; then
			delete_old_address
			delete_old_routes
		fi
	fi
	if [ "$reason" = BOUND ] || \
	   [ "$reason" = REBOOT ] || \
	   [ -z "$old_ip_address" ] || \
	   [ "$old_ip_address" != "$new_ip_address" ]; then
		add_new_address
		add_new_routes
	fi
	if [ "$new_ip_address" != "$alias_ip_address" ]; then
		add_new_alias
	fi
	add_new_resolv_conf
	;;

EXPIRE|FAIL)
	delete_old_alias
	if [ -n "$old_ip_address" ]; then
		delete_old_address
		delete_old_routes
	fi
	# XXX Why add alias we just deleted above?
	add_new_alias
	if [ -f /etc/resolv.conf.save ]; then
		cat /etc/resolv.conf.save > /etc/resolv.conf
	fi
	;;

TIMEOUT)
	delete_old_alias
	add_new_address
	sleep 1
	if [ -n "$new_routers" ]; then
		set "$new_routers"
		if ping -q -c 1 -w 1 "$1"; then
			if [ "$new_ip_address" != "$alias_ip_address" ]; then
				add_new_alias
			fi
			add_new_routes
			if add_new_resolv_conf; then
				exit 0
			fi
		fi
	fi
	ifconfig $interface inet -alias $new_ip_address $medium
	# XXX Why not a delete_old_address as before all other invocations of
	#     delete_old_routes?
	delete_old_routes
	exit 1
	;;
esac

exit 0
@


1.17
log
@save & restore resolv.conf when we can... krw ok
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.16 2004/01/09 07:49:07 deraadt Exp $
@


1.16
log
@Delete default route before attempting to add the new one, or the old one
stays; itojun ok
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.15 2003/06/16 00:45:16 krw Exp $
d120 3
d194 3
a196 1
	# XXX Delete resolv.conf as no longer relevant?
@


1.15
log
@Add more paranoia and try to ensure created resolv.conf files have the
correct owner and mode.

Suggested by & ok millert@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.14 2003/06/15 22:54:00 krw Exp $
d75 1
@


1.14
log
@Add an OpenBSD style license/copyright.

Suggested by deraadt@@, ok millert@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.13 2003/06/13 12:08:43 krw Exp $
d121 4
@


1.13
log
@Be more careful with resolv.conf. It may be a link (e.g. during
installs) so just pour new information into the existing file/link
rather than removing and replacing it.

Noticed by and fix tested by Jan Johansson.

Several enhancements suggested as a result and in the pipeline.

ok deraadt@@ millert@@
@
text
@d3 16
a18 1
# $OpenBSD: dhclient-script,v 1.12 2003/06/10 23:38:17 krw Exp $
@


1.12
log
@Rework script using advanced coding techniques like a case statement,
factoring out common code to functions, consistant indenting, etc.

Should be no semantic changes, just much easier to read, except for
ensuring that certain cable companies no longer confuse the issue by
supplying name server addresses without a domain name. Either will now
result in the creation of an appropriate resolv.conf

Inspired by PRs #2969 from Alexander Taler and #3135 from Jan
Johansson. Fixes #3135 completely according to Jan. #2969 may have
another item to fix.

Tested by various, including tech@@'ers Jan Johansson, Uwe A. P.
Wuerdinger and Jim Rees.

Let the flood of enhancements begin now that it can actually be read
and understood ...

ok deraadt@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.11 2000/10/18 23:42:56 todd Exp $
d100 6
a105 2
		rm -f /etc/resolv.conf
		mv /etc/resolv.conf.std /etc/resolv.conf
@


1.11
log
@this was overlooked in the last commit. ok beck@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.10 2000/10/18 23:29:20 todd Exp $
d6 102
a107 3
if [ "x$new_network_number" != "x" ]; then
   echo "New Network Number: $new_network_number"
fi
d109 3
a111 3
if [ "x$new_broadcast_address" != "x" ]; then
 echo "New Broadcast Address: $new_broadcast_address"
fi
d113 2
a114 5
if [ "x$reason" = "xMEDIUM" ]; then
  ifconfig $interface $medium
  ifconfig $interface inet -alias 0.0.0.0 $medium >/dev/null 2>&1
  sleep 1
  exit 0
d117 2
a118 8
if [ "x$reason" = "xPREINIT" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  ifconfig $interface inet 0.0.0.0 netmask 0.0.0.0 \
		broadcast 255.255.255.255 up
  exit 0
d121 6
a126 63
if [ "x$reason" = "xARPCHECK" ] || [ "x$reason" = "xARPSEND" ]; then
  exit 0;
fi
  
if [ "x$reason" = "xBOUND" ] || [ "x$reason" = "xRENEW" ] || \
   [ "x$reason" = "xREBIND" ] || [ "x$reason" = "xREBOOT" ]; then
  if [ "x$old_ip_address" != "x" ] && [ "x$alias_ip_address" != "x" ] && \
		[ "x$alias_ip_address" != "x$old_ip_address" ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$old_ip_address" != "x" ] && [ "x$old_ip_address" != "x$new_ip_address" ]; then
    ifconfig $interface inet -alias $old_ip_address $medium
    route delete "$old_ip_address" 127.1 >/dev/null 2>&1
    for router in $old_routers; do
      route delete default $router >/dev/null 2>&1
    done
    if [ "$old_static_routes" != "" ]; then
      set $old_static_routes
      while [ $# -gt 1 ]; do
	route delete "$1" "$2"
	shift; shift
      done
    fi
    arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' |sh
  fi
  if [ "x$old_ip_address" = "x" ] || \
     [ "x$old_ip_address" != "x$new_ip_address" ] || \
     [ "x$reason" = "xBOUND" ] || [ "x$reason" = "xREBOOT" ]; then
	ifconfig $interface inet $new_ip_address netmask $new_subnet_mask \
				    broadcast $new_broadcast_address $medium
    route add $new_ip_address 127.1 >/dev/null 2>&1
    for router in $new_routers; do
      route add default $router >/dev/null 2>&1
    done
    if [ "$new_static_routes" != "" ]; then
      set "$new_static_routes"
      while [ $# -gt 1 ]; do
	route add $1 $2
	shift; shift
      done
    fi
  fi
  if [ "x$new_ip_address" != "x$alias_ip_address" ] && [ "x$alias_ip_address" != "x" ];
   then
    ifconfig $interface inet alias $alias_ip_address netmask $alias_subnet_mask
    route add $alias_ip_address 127.0.0.1
  fi
  if [ "x$new_domain_name" != "x" ];
   then
    if [ -n "$new_domain_name_servers" ];
     then
      echo "search $new_domain_name" >/etc/resolv.conf
      for nameserver in $new_domain_name_servers; do
        echo nameserver $nameserver >>/etc/resolv.conf
      done
      if [ -f /etc/resolv.conf.tail ]; then
	cat /etc/resolv.conf.tail >>/etc/resolv.conf
      fi
      exit 0
    fi
  fi
fi
d128 4
a131 27
if [ "x$reason" = "xEXPIRE" ] || [ "x$reason" = "xFAIL" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$old_ip_address" != "x" ]; then
    ifconfig $interface inet -alias $old_ip_address $medium
    route delete $old_ip_address 127.1 >/dev/null 2>&1
    for router in $old_routers; do
      route delete default $router >/dev/null 2>&1
    done
    if [ "$old_static_routes" != "" ]; then
      set "$old_static_routes"
      while [ $# -gt 1 ]; do
	route delete $1 $2
	shift; shift
      done
    fi
    arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' \
						|sh >/dev/null 2>&1
  fi
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig $interface inet alias $alias_ip_address netmask $alias_subnet_mask
    route add $alias_ip_address 127.0.0.1
  fi
  exit 0
fi
d133 60
a192 60
if [ "x$reason" = "xTIMEOUT" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  ifconfig $interface inet $new_ip_address netmask $new_subnet_mask \
		broadcast $new_broadcast_address $medium
  sleep 1
  if [ "$new_routers" != "" ]; then
    set "$new_routers"
    if ping -q -c 1 -w 1 "$1"; then
      if [ "x$new_ip_address" != "x$alias_ip_address" ] && \
			[ "x$alias_ip_address" != "x" ]; then
	ifconfig $interface inet alias $alias_ip_address netmask $alias_subnet_mask
	route add $alias_ip_address 127.0.0.1
      fi
      route add $new_ip_address 127.1 >/dev/null 2>&1
      for router in $new_routers; do
	route add default $router >/dev/null 2>&1
      done
      if [ "$new_static_routes" != "" ]; then
        set "$new_static_routes"
        while [ $# -gt 1 ]; do
	  route add $1 $2
	  shift; shift
        done
      fi
      if [ "$new_domain_name" != "" ]; then
        if [ -n "$new_domain_name_servers" ]; then
          echo "search $new_domain_name" >/etc/resolv.conf.std
          for nameserver in $new_domain_name_servers; do
  	    echo "nameserver $nameserver" >>/etc/resolv.conf.std
          done
          if [ -f /etc/resolv.conf.tail ]; then
	    cat /etc/resolv.conf.tail >>/etc/resolv.conf.std
      	  fi
          if [ -f /etc/resolv.conf ]; then
	    rm -f /etc/resolv.conf
          fi
          mv /etc/resolv.conf.std /etc/resolv.conf
          exit 0
        fi
      fi
    fi
  fi
  ifconfig $interface inet -alias $new_ip_address $medium
  for router in $old_routers; do
    route delete default $router >/dev/null 2>&1
  done
  if [ "$old_static_routes" != "" ]; then
    set "$old_static_routes"
    while [ $# -gt 1 ]; do
      route delete $1 $2
      shift; shift
    done
  fi
  arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -d \1/p' \
							|sh >/dev/null 2>&1
  exit 1
fi
@


1.10
log
@due to over agressive quoting, various space separated variables were failing.
o remove un-necessary quotes, the source of several reported problems.
o remove un-necessary variable assignments (paranoia)
o remove un-necessary cases (when var="", $var evaluates to nothing)

Ok beck@@, testing by beck@@.
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.9 2000/09/05 08:28:04 deraadt Exp $
d84 1
a84 1
      for nameserver in "$new_domain_name_servers"; do
@


1.9
log
@undo security hole peter just commited
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.7 2000/07/03 22:33:19 niklas Exp $
a11 13
  new_broadcast_arg="broadcast $new_broadcast_address"
fi
if [ "x$old_broadcast_address" != "x" ]; then
  old_broadcast_arg="broadcast $old_broadcast_address"
fi
if [ "x$new_subnet_mask" != "x" ]; then
  new_netmask_arg="netmask $new_subnet_mask"
fi
if [ "x$old_subnet_mask" != "x" ]; then
  old_netmask_arg="netmask $old_subnet_mask"
fi
if [ "x$alias_subnet_mask" != "x" ]; then
  alias_subnet_arg="netmask $alias_subnet_mask"
d15 2
a16 2
  ifconfig "$interface" "$medium"
  ifconfig "$interface" inet -alias 0.0.0.0 "$medium" >/dev/null 2>&1
d23 2
a24 2
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
d26 1
a26 1
  ifconfig "$interface" inet 0.0.0.0 netmask 0.0.0.0 \
d39 2
a40 2
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
d43 1
a43 5
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet -alias "$old_ip_address" "$medium"
    else
	ifconfig "$interface" inet -alias "$old_ip_address"
    fi
d45 2
a46 2
    for router in "$old_routers"; do
      route delete default "$router" >/dev/null 2>&1
d57 2
a58 1
  if [ "x$old_ip_address" = "x" ] || [ "x$old_ip_address" != "x$new_ip_address" ] || \
d60 5
a64 10
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg "$medium"
    else
	ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg
    fi
    route add "$new_ip_address" 127.1 >/dev/null 2>&1
    for router in "$new_routers"; do
      route add default "$router" >/dev/null 2>&1
d69 1
a69 1
	route add "$1" "$2"
d76 2
a77 2
    ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
    route add "$alias_ip_address" 127.0.0.1
d85 1
a85 1
        echo "nameserver $nameserver" >>/etc/resolv.conf
d97 2
a98 2
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
d101 4
a104 8
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet -alias "$old_ip_address" "$medium"
    else
	ifconfig "$interface" inet -alias "$old_ip_address"
    fi
    route delete "$old_ip_address" 127.1 >/dev/null 2>&1
    for router in "$old_routers"; do
      route delete default "$router" >/dev/null 2>&1
d109 1
a109 1
	route delete "$1" "$2"
d117 2
a118 2
    ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
    route add "$alias_ip_address" 127.0.0.1
d125 2
a126 9
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$medium" != "x" ]; then
    ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg "$medium"
  else
    ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg
d128 2
d136 2
a137 2
	ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
	route add "$alias_ip_address" 127.0.0.1
d139 3
a141 3
      route add "$new_ip_address" 127.1 >/dev/null 2>&1
      for router in "$new_routers"; do
	route add default "$router" >/dev/null 2>&1
d146 1
a146 1
	  route add "$1" "$2"
d153 1
a153 1
          for nameserver in "$new_domain_name_servers"; do
d168 3
a170 7
  if [ "x$medium" != "x" ]; then
    ifconfig "$interface" inet -alias "$new_ip_address" "$medium"
  else
    ifconfig "$interface" inet -alias "$new_ip_address"
  fi
  for router in "$old_routers"; do
    route delete default "$router" >/dev/null 2>&1
d175 1
a175 1
      route delete "$1" "$2"
@


1.8
log
@Remove quotes from arguement lists to for loops.

This applied to two type of dhcp option, "domain_name_servers" and
"routers".

This fixes the problem of seeing mutliple nameservers on one
nameserver line in resolv.conf. If anyone used multiple routers, then
it would fix this too.
@
text
@d62 1
a62 1
    for router in $old_routers; do
d84 1
a84 1
    for router in $new_routers; do
d105 1
a105 1
      for nameserver in $new_domain_name_servers; do
d128 1
a128 1
    for router in $old_routers; do
d170 1
a170 1
      for router in $new_routers; do
d183 1
a183 1
          for nameserver in $new_domain_name_servers; do
d203 1
a203 1
  for router in $old_routers; do
@


1.7
log
@arp(8) invocations fixed
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.6 2000/06/25 08:41:12 dugsong Exp $
d62 1
a62 1
    for router in "$old_routers"; do
d84 1
a84 1
    for router in "$new_routers"; do
d105 1
a105 1
      for nameserver in "$new_domain_name_servers"; do
d128 1
a128 1
    for router in "$old_routers"; do
d170 1
a170 1
      for router in "$new_routers"; do
d183 1
a183 1
          for nameserver in "$new_domain_name_servers"; do
d203 1
a203 1
  for router in "$old_routers"; do
@


1.6
log
@safe shell quoting
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.5 2000/04/20 08:14:21 angelos Exp $
d72 1
a72 1
    arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' |sh
d138 1
a138 1
    arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' \
d213 1
a213 1
  arp -n -a | sed -n -e 's/^.*(\(.*\)) at .*$/arp -n -d \1/p' \
@


1.5
log
@If /etc/resolv.conf.tail exists, append to newly-constructed
/etc/resolv.conf
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.4 2000/02/11 01:23:18 chris Exp $
d6 2
a7 2
if [ x$new_network_number != x ]; then
   echo New Network Number: $new_network_number
d10 2
a11 2
if [ x$new_broadcast_address != x ]; then
 echo New Broadcast Address: $new_broadcast_address
d14 1
a14 1
if [ x$old_broadcast_address != x ]; then
d17 1
a17 1
if [ x$new_subnet_mask != x ]; then
d20 1
a20 1
if [ x$old_subnet_mask != x ]; then
d23 1
a23 1
if [ x$alias_subnet_mask != x ]; then
d27 3
a29 3
if [ x$reason = xMEDIUM ]; then
  ifconfig $interface $medium
  ifconfig $interface inet -alias 0.0.0.0 $medium >/dev/null 2>&1
d34 4
a37 4
if [ x$reason = xPREINIT ]; then
  if [ x$alias_ip_address != x ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
d39 1
a39 1
  ifconfig $interface inet 0.0.0.0 netmask 0.0.0.0 \
d44 1
a44 1
if [ x$reason = xARPCHECK ] || [ x$reason = xARPSEND ]; then
d48 16
a63 12
if [ x$reason = xBOUND ] || [ x$reason = xRENEW ] || \
   [ x$reason = xREBIND ] || [ x$reason = xREBOOT ]; then
  if [ x$old_ip_address != x ] && [ x$alias_ip_address != x ] && \
		[ x$alias_ip_address != x$old_ip_address ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  if [ x$old_ip_address != x ] && [ x$old_ip_address != x$new_ip_address ]; then
    ifconfig $interface inet -alias $old_ip_address $medium
    route delete $old_ip_address 127.1 >/dev/null 2>&1
    for router in $old_routers; do
      route delete default $router >/dev/null 2>&1
d68 1
a68 1
	route delete $1 $2
d74 12
a85 7
  if [ x$old_ip_address = x ] || [ x$old_ip_address != x$new_ip_address ] || \
     [ x$reason = xBOUND ] || [ x$reason = xREBOOT ]; then
    ifconfig $interface inet $new_ip_address $new_netmask_arg \
					$new_broadcast_arg $medium
    route add $new_ip_address 127.1 >/dev/null 2>&1
    for router in $new_routers; do
      route add default $router >/dev/null 2>&1
d88 1
a88 1
      set $new_static_routes
d90 1
a90 1
	route add $1 $2
d95 1
a95 1
  if [ x$new_ip_address != x$alias_ip_address ] && [ x$alias_ip_address != x ];
d97 2
a98 2
    ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
    route add $alias_ip_address 127.0.0.1
d100 1
a100 1
  if [ x$new_domain_name != x ];
d104 3
a106 3
      echo search $new_domain_name >/etc/resolv.conf
      for nameserver in $new_domain_name_servers; do
        echo nameserver $nameserver >>/etc/resolv.conf
d116 14
a129 10
if [ x$reason = xEXPIRE ] || [ x$reason = xFAIL ]; then
  if [ x$alias_ip_address != x ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
  fi
  if [ x$old_ip_address != x ]; then
    ifconfig $interface inet -alias $old_ip_address $medium
    route delete $old_ip_address 127.1 >/dev/null 2>&1
    for router in $old_routers; do
      route delete default $router >/dev/null 2>&1
d132 1
a132 1
      set $old_static_routes
d134 1
a134 1
	route delete $1 $2
d141 3
a143 3
  if [ x$alias_ip_address != x ]; then
    ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
    route add $alias_ip_address 127.0.0.1
d148 11
a158 4
if [ x$reason = xTIMEOUT ]; then
  if [ x$alias_ip_address != x ]; then
    ifconfig $interface inet -alias $alias_ip_address > /dev/null 2>&1
    route delete $alias_ip_address 127.0.0.1 > /dev/null 2>&1
a159 2
  ifconfig $interface inet $new_ip_address $new_netmask_arg \
					$new_broadcast_arg $medium
d162 6
a167 6
    set $new_routers
    if ping -q -c 1 -w 1 $1; then
      if [ x$new_ip_address != x$alias_ip_address ] && \
			[ x$alias_ip_address != x ]; then
	ifconfig $interface inet alias $alias_ip_address $alias_subnet_arg
	route add $alias_ip_address 127.0.0.1
d169 3
a171 3
      route add $new_ip_address 127.1 >/dev/null 2>&1
      for router in $new_routers; do
	route add default $router >/dev/null 2>&1
d174 1
a174 1
        set $new_static_routes
d176 1
a176 1
	  route add $1 $2
d182 3
a184 3
          echo search $new_domain_name >/etc/resolv.conf.std
          for nameserver in $new_domain_name_servers; do
  	    echo nameserver $nameserver >>/etc/resolv.conf.std
d198 7
a204 3
  ifconfig $interface inet -alias $new_ip_address $medium
  for router in $old_routers; do
    route delete default $router >/dev/null 2>&1
d207 1
a207 1
    set $old_static_routes
d209 1
a209 1
      route delete $1 $2
@


1.5.2.1
log
@Pull in patch from current:
Errata:
A serious bug in dhclient(8) could allow strings from a malicious dhcp server to be executed in the shell as root.
Fix (dugsong):
dhclient.c: pass variables to dhclient-script via a constructed environment, instead of a temporary shell script
dhclient-script: safe shell quoting
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.5 2000/04/20 08:14:21 angelos Exp $
d6 2
a7 2
if [ "x$new_network_number" != "x" ]; then
   echo "New Network Number: $new_network_number"
d10 2
a11 2
if [ "x$new_broadcast_address" != "x" ]; then
 echo "New Broadcast Address: $new_broadcast_address"
d14 1
a14 1
if [ "x$old_broadcast_address" != "x" ]; then
d17 1
a17 1
if [ "x$new_subnet_mask" != "x" ]; then
d20 1
a20 1
if [ "x$old_subnet_mask" != "x" ]; then
d23 1
a23 1
if [ "x$alias_subnet_mask" != "x" ]; then
d27 3
a29 3
if [ "x$reason" = "xMEDIUM" ]; then
  ifconfig "$interface" "$medium"
  ifconfig "$interface" inet -alias 0.0.0.0 "$medium" >/dev/null 2>&1
d34 4
a37 4
if [ "x$reason" = "xPREINIT" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
d39 1
a39 1
  ifconfig "$interface" inet 0.0.0.0 netmask 0.0.0.0 \
d44 1
a44 1
if [ "x$reason" = "xARPCHECK" ] || [ "x$reason" = "xARPSEND" ]; then
d48 12
a59 16
if [ "x$reason" = "xBOUND" ] || [ "x$reason" = "xRENEW" ] || \
   [ "x$reason" = "xREBIND" ] || [ "x$reason" = "xREBOOT" ]; then
  if [ "x$old_ip_address" != "x" ] && [ "x$alias_ip_address" != "x" ] && \
		[ "x$alias_ip_address" != "x$old_ip_address" ]; then
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$old_ip_address" != "x" ] && [ "x$old_ip_address" != "x$new_ip_address" ]; then
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet -alias "$old_ip_address" "$medium"
    else
	ifconfig "$interface" inet -alias "$old_ip_address"
    fi
    route delete "$old_ip_address" 127.1 >/dev/null 2>&1
    for router in "$old_routers"; do
      route delete default "$router" >/dev/null 2>&1
d64 1
a64 1
	route delete "$1" "$2"
d70 7
a76 12
  if [ "x$old_ip_address" = "x" ] || [ "x$old_ip_address" != "x$new_ip_address" ] || \
     [ "x$reason" = "xBOUND" ] || [ "x$reason" = "xREBOOT" ]; then
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg "$medium"
    else
	ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg
    fi
    route add "$new_ip_address" 127.1 >/dev/null 2>&1
    for router in "$new_routers"; do
      route add default "$router" >/dev/null 2>&1
d79 1
a79 1
      set "$new_static_routes"
d81 1
a81 1
	route add "$1" "$2"
d86 1
a86 1
  if [ "x$new_ip_address" != "x$alias_ip_address" ] && [ "x$alias_ip_address" != "x" ];
d88 2
a89 2
    ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
    route add "$alias_ip_address" 127.0.0.1
d91 1
a91 1
  if [ "x$new_domain_name" != "x" ];
d95 3
a97 3
      echo "search $new_domain_name" >/etc/resolv.conf
      for nameserver in "$new_domain_name_servers"; do
        echo "nameserver $nameserver" >>/etc/resolv.conf
d107 10
a116 14
if [ "x$reason" = "xEXPIRE" ] || [ "x$reason" = "xFAIL" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$old_ip_address" != "x" ]; then
    if [ "x$medium" != "x" ]; then
	ifconfig "$interface" inet -alias "$old_ip_address" "$medium"
    else
	ifconfig "$interface" inet -alias "$old_ip_address"
    fi
    route delete "$old_ip_address" 127.1 >/dev/null 2>&1
    for router in "$old_routers"; do
      route delete default "$router" >/dev/null 2>&1
d119 1
a119 1
      set "$old_static_routes"
d121 1
a121 1
	route delete "$1" "$2"
d128 3
a130 3
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
    route add "$alias_ip_address" 127.0.0.1
d135 4
a138 11
if [ "x$reason" = "xTIMEOUT" ]; then
  if [ "x$alias_ip_address" != "x" ]; then
    ifconfig "$interface" inet -alias "$alias_ip_address" > /dev/null 2>&1
    route delete "$alias_ip_address" 127.0.0.1 > /dev/null 2>&1
  fi
  if [ "x$medium" != "x" ]; then
    ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg "$medium"
  else
    ifconfig "$interface" inet "$new_ip_address" $new_netmask_arg \
					    $new_broadcast_arg
d140 2
d144 6
a149 6
    set "$new_routers"
    if ping -q -c 1 -w 1 "$1"; then
      if [ "x$new_ip_address" != "x$alias_ip_address" ] && \
			[ "x$alias_ip_address" != "x" ]; then
	ifconfig "$interface" inet alias "$alias_ip_address" $alias_subnet_arg
	route add "$alias_ip_address" 127.0.0.1
d151 3
a153 3
      route add "$new_ip_address" 127.1 >/dev/null 2>&1
      for router in "$new_routers"; do
	route add default "$router" >/dev/null 2>&1
d156 1
a156 1
        set "$new_static_routes"
d158 1
a158 1
	  route add "$1" "$2"
d164 3
a166 3
          echo "search $new_domain_name" >/etc/resolv.conf.std
          for nameserver in "$new_domain_name_servers"; do
  	    echo "nameserver $nameserver" >>/etc/resolv.conf.std
d180 3
a182 7
  if [ "x$medium" != "x" ]; then
    ifconfig "$interface" inet -alias "$new_ip_address" "$medium"
  else
    ifconfig "$interface" inet -alias "$new_ip_address"
  fi
  for router in "$old_routers"; do
    route delete default "$router" >/dev/null 2>&1
d185 1
a185 1
    set "$old_static_routes"
d187 1
a187 1
      route delete "$1" "$2"
@


1.4
log
@Fix from jonathon.fletcher@@pobox.com
Check $new_domain_name_servers not $nameserver
@
text
@d3 1
a3 1
# $OpenBSD: dhclient-script,v 1.3 2000/01/31 17:51:42 chris Exp $
d99 3
d168 3
@


1.3
log
@Don't update /etc/resolv.conf if no data is returned for DNS servers
or if user removes request domain-name-servers from /etc/dhclient.conf
@
text
@d3 1
a3 1
# $OpenBSD$
d93 1
a93 1
    if [ x$nameserver != x ];
d160 1
a160 1
        if [ "$nameserver" != "" ]; then
@


1.2
log
@Fix the TIMEOUT case not to dump the shell environment.
@
text
@d2 3
d91 11
a101 5
  echo search $new_domain_name >/etc/resolv.conf
  for nameserver in $new_domain_name_servers; do
    echo nameserver $nameserver >>/etc/resolv.conf
  done
  exit 0
d159 12
a170 6
      echo search $new_domain_name >/etc/resolv.conf.std
      for nameserver in $new_domain_name_servers; do
	echo nameserver $nameserver >>/etc/resolv.conf.std
      done
      if [ -f /etc/resolv.conf ]; then
	rm -f /etc/resolv.conf
a171 2
      mv /etc/resolv.conf.std /etc/resolv.conf
      exit 0
@


1.1
log
@move dhclient so that crunch can find it if needed
@
text
@d143 7
a149 5
      set $new_static_routes
      while [ $# -gt 1 ]; do
	route add $0 $1
	shift; shift
      done
@

