head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.10
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2014.10.15.21.37.27;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	HUSVyh3KaoubL9N1;

1.3
date	2012.11.24.10.42.46;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.27.18.50.43;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.21.12.56.45;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.4
log
@create xreallocarray() and use it
@
text
@/*	$OpenBSD: util.c,v 1.3 2012/11/24 10:42:46 kettenis Exp $	*/

/*
 * Copyright (c) 2012 Mark Kettenis
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <err.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "util.h"

int debug;

void *
xmalloc(size_t size)
{
	void *p;

	p = malloc(size);
	if (p == NULL)
		err(1, NULL);
	return p;
}

void *
xzalloc(size_t size)
{
	void *p;

	p = xmalloc(size);
	memset(p, 0, size);
	return p;
}

void *
xreallocarray(void *o, size_t nmemb, size_t size)
{
	void *p;

	p = reallocarray(o, nmemb, size);
	if (p == NULL)
		err(1, NULL);
	return p;
}

char *
xstrdup(const char *s)
{
	char *p;

	p = strdup(s);
	if (p == NULL)
		err(1, NULL);
	return p;
}

int
xasprintf(char **str, const char *fmt, ...)
{
	va_list ap;
	int ret;

	va_start(ap, fmt);
	ret = vasprintf(str, fmt, ap);
	va_end(ap);
	if (ret == -1)
		err(1, NULL);
	return ret;
}
@


1.3
log
@Add xasprintf.
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.2 2012/10/27 18:50:43 kettenis Exp $	*/
d47 11
@


1.2
log
@Only print debug output if explicitly requested.
@
text
@d1 1
a1 1
/*	$OpenBSD: util.c,v 1.1 2012/10/21 12:56:45 kettenis Exp $	*/
d20 2
d59 14
@


1.1
log
@Split out some general-purpose functions and macros into their own file.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 2
@

