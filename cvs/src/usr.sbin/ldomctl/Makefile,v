head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.20
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.16
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.12
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.14
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.10
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.8
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8;
locks; strict;
comment	@# @;


1.8
date	2012.11.24.11.50.45;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2012.11.04.20.09.02;	author kettenis;	state Exp;
branches;
next	1.6;

1.6
date	2012.11.04.18.59.02;	author kettenis;	state Exp;
branches;
next	1.5;

1.5
date	2012.11.04.18.14.09;	author kettenis;	state Exp;
branches;
next	1.4;

1.4
date	2012.10.21.12.56.45;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.21.12.47.58;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2012.10.15.20.28.50;	author kettenis;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.14.15.38.06;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Add code to create new system configuration.  Work in progress, but there's
enough functionality to create a configuration for a t1k or t2k running
System Firmware 6.7.x.
@
text
@#	$OpenBSD: Makefile,v 1.7 2012/11/04 20:09:02 kettenis Exp $

.if ${MACHINE} == "sparc64"

.PATH:	${.CURDIR}/../ldomd

PROG=	ldomctl
SRCS=	ldomctl.c ds.c mdesc.c util.c mdstore.c pri.c config.c parse.y
CFLAGS+=-Wall
CFLAGS+=-I${.CURDIR}/../ldomd -I${.CURDIR}
DEBUG= -g

.else

NOPROG=	yes

.endif

MAN=	ldomctl.8
MANSUBDIR=sparc64

.include <bsd.prog.mk>
@


1.7
log
@Support for listing configurations store on the SP.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2012/11/04 18:59:02 kettenis Exp $
d8 1
a8 1
SRCS=	ldomctl.c ds.c mdesc.c util.c mdstore.c pri.c
@


1.6
log
@Switch over to using the ds.[ch] from ldomd(8).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2012/11/04 18:14:09 kettenis Exp $
d8 1
a8 1
SRCS=	ldomctl.c ds.c mdesc.c util.c pri.c
@


1.5
log
@Factor out some code.  Use the "hvctl.h" header from ldomd.  Add man page.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2012/10/21 12:56:45 kettenis Exp $
d5 2
d8 1
a8 1
SRCS=	ldomctl.c ds.c mdesc.c util.c
d10 1
a10 1
CFLAGS+=-I${.CURDIR}/../ldomd
@


1.4
log
@Split out some general-purpose functions and macros into their own file.
@
text
@d1 3
a3 1
#	$OpenBSD: Makefile,v 1.3 2012/10/21 12:47:58 kettenis Exp $
d7 2
a8 2
NOMAN=
CFLAGS+= -Wall
d10 9
@


1.3
log
@Add domain services support code and use it to fetch the PRI
(Physical Resource Inventory) from the service processor.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2012/10/15 20:28:50 kettenis Exp $
d4 1
a4 1
SRCS=	ldomctl.c ds.c mdesc.c
@


1.2
log
@Specify domains by name instead of by number.
Provide status of all domains if none specified.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2012/10/14 15:38:06 kettenis Exp $
d4 1
a4 1
SRCS=	ldomctl.c mdesc.c
d7 1
@


1.1
log
@Beginning of a tool to control sun4v logical domains.  For now this can start
and stop domains.
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
d6 1
a6 1
CFLAGS= -Wall
@

