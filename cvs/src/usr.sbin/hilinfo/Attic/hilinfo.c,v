head	1.7;
access;
symbols
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2005.01.14.22.39.38;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2004.08.01.18.32.18;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2004.07.09.16.22.02;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.20.20.39;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.19.19.51.54;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	97.01.15.23.43.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Switch OpenBSD/hp300 to wscons, still using on-board ROM fonts for now.

Main features:
- MI hil drivers, allowing live plug/unplug of devices, and the keyboard
  does not need to be at id 1 anymore.
- SGC bus support on 4xx models. SGC frame buffers are supported too, but
  not as console, though you can use them as a regular glass terminal if
  you run a getty on ttyC0. Currently not compiled-in, awaiting for an sti(4)
  fix to be commited.
- HP-UX compatibility interfaces are removed. grfinfo and hilinfo are removed.

X11 support is currently broken by these changes; X.org X11R6 support will
be available very soon.

Tested on hyperion and 4 different flavours of catseye/topcat/kathmandu; other,
older frame buffers (davinci, gatorbox and renaissance) could not been tested
but should work; please report any regression.
@
text
@/*	$OpenBSD: hilinfo.c,v 1.6 2004/08/01 18:32:18 deraadt Exp $	*/
/* 
 * Copyright (c) 1987-1993, The University of Utah and
 * the Center for Software Science at the University of Utah (CSS).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software is hereby
 * granted provided that (1) source code retains these copyright, permission,
 * and disclaimer notices, and (2) redistributions including binaries
 * reproduce the notices in supporting documentation, and (3) all advertising
 * materials mentioning features or use of this software display the following
 * acknowledgement: ``This product includes software developed by the Center
 * for Software Science at the University of Utah.''
 *
 * THE UNIVERSITY OF UTAH AND CSS ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSS DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSS requests users of this software to return to css-dist@@cs.utah.edu any
 * improvements that they make and grant CSS redistribution rights.
 *
 * 	from: Utah $Hdr: hilinfo.c 1.3 94/04/04$
 */

#include <errno.h>
#include <stdio.h>
#include <unistd.h>
#include <util.h>
#include <sys/types.h>
#include <sys/ioctl.h>
#include <dev/hilioctl.h>

int getinfo(char *);
void printall(void);
char *tname(void);
void usage(void);

struct _hilbuf11 hi;
struct _hilbuf16 sc;

struct hil_info {
	u_char	hil_lo;
	u_char	hil_hi;
	char	*hil_name;
} info[] = {
	0xA0,	0xFF,	"keyboard",
	0x60,	0x6B,	"mouse",
	0x90,	0x97,	"tablet",
	0x34,	0x34,	"id-module",
	0x30,	0x30,	"button-box",
	0x00,	0x00,	"unknown",
};

int
main(int argc, char *argv[])
{
	int aflg, tflg;
	int c;
	char *dname;

	aflg = tflg = 0;
	while ((c = getopt(argc, argv, "at")) != -1) {
		switch (c) {
		case 'a':
			if (tflg != 0)
				usage();
			aflg++;
			break;
		case 't':
			if (aflg != 0)
				usage();
			tflg++;
			break;
		case '?':
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc == 0)
		usage();
	while (argc-- != 0) {
		dname = *argv++;
		if (getinfo(dname)) {
			printf("%s: ", dname);
			if (aflg)
				printall();
			else
				printf("%s\n", tname());
		}
	}
	exit(0);
}

int
getinfo(char *dname)
{
	int f;

	f = opendev(dname, 0, OPENDEV_BLCK, NULL);
	if (f < 0) {
		warn("open(%s)", dname);
		return 0;
	}
	if (ioctl(f, HILIOCID, &hi) < 0 || ioctl(f, HILIOCSC, &sc) < 0) {
		warn("ioctl(%s)", dname);
		close(f);
		return 0;
	}

	close(f);
	return 1;
}

void
printall(void)
{
	int i;

	printf("%s, info: ", tname());
	for (i = 0; i < 11; i++)
		printf("%2.2x", hi.string[i]);
	if (strcmp(tname(), "id-module") == 0) {
		printf(", sc: ");
		for (i = 0; i < 16; i++)
			printf("%2.2x", sc.string[i]);
	}
	printf("\n");
}

char *
tname(void)
{
	struct hil_info *hp;

	for (hp = info; hp->hil_lo; hp++)
		if (hi.string[0] >= hp->hil_lo && hi.string[0] <= hp->hil_hi)
			break;
	if (hi.string[0] == 0x61 && hi.string[1] == 0x13)
		return("knobs");
	return(hp->hil_name);
}

void
usage(void)
{
	extern char *__progname;

	fprintf(stderr, "usage: %s [-at] device\n", __progname);
	exit(1);
}
@


1.6
log
@ansi cleanup; khalek@@linuxgamers.net
@
text
@d1 1
a1 1
/*	$OpenBSD: hilinfo.c,v 1.5 2004/07/09 16:22:02 deraadt Exp $	*/
@


1.5
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: hilinfo.c,v 1.4 2002/02/19 20:20:39 miod Exp $	*/
d55 1
a55 2
main(argc, argv)
	char **argv;
d98 1
a98 2
getinfo(dname)
	char *dname;
@


1.4
log
@Use opendev(3) rather than open(2) to please lazy people like me that
don't want to type "/dev/".
It's somewhat an abuse of opendev(), but millert@@ said it was ok.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d120 1
a120 1
printall()
d136 1
a136 1
tname()
d149 1
a149 1
usage()
@


1.3
log
@Clean the dust, do decent error checking, and add a manual page.
@
text
@d28 1
d104 1
a104 1
	f = open(dname, 0);
@


1.2
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a22 1
 *	$Id: hilinfo.c,v 1.1.1.1 1995/10/18 08:47:35 deraadt Exp $
d25 1
d27 1
a29 1
#include <sys/errno.h>
d32 5
a36 4
int aflg = 0;
int tflg = 1;
char *pname;
char *dname, *tname();
d53 1
d57 3
a59 4
	extern int optind, optopt;
	extern char *optarg;
	register int c;
	int multi;
d61 2
a62 2
	pname = argv[0];
	while ((c = getopt(argc, argv, "at")) != -1)
a63 1
		/* everything */
d65 2
a67 1
			tflg = 0;
a68 1
		/* type */
d70 2
a72 1
			aflg = 0;
a73 1
		/* bogon */
d75 1
d78 5
a82 1
	if (optind == argc)
d84 3
a86 4
	multi = (argc - optind) - 1;
	while (optind < argc) {
		dname = argv[optind];
		if (multi)
a87 1
		if (getinfo()) {
d90 1
a90 1
			else if (tflg)
a92 1
		optind++;
d97 3
a99 1
getinfo()
a101 1
	extern int errno;
d104 6
a109 7
	if (f < 0 || ioctl(f, HILIOCID, &hi) < 0) {
		if (tflg)
			printf(errno == EBUSY ? "busy\n" : "none\n");
		else {
			printf("error\n");
			perror(dname);
		}
d111 1
a111 1
		return(0);
d113 1
a113 1
	(void) ioctl(f, HILIOCSC, &sc);
d115 1
a115 1
	return(1);
d118 1
d121 1
a121 1
	register int i;
d123 1
a123 1
	printf("%s: %s, info: ", dname, tname());
d137 1
a137 1
	register struct hil_info *hp;
d147 1
d150 3
a152 1
	fprintf(stderr, "usage: %s [-at] device\n", pname);
@


1.1
log
@Initial revision
@
text
@d22 1
a22 1
 *	$Id: hilinfo.c,v 1.1 1994/04/04 21:52:25 cgd Exp $
d60 1
a60 1
	while ((c = getopt(argc, argv, "at")) != EOF)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
