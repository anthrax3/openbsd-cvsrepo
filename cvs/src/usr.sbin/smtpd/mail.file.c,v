head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.08.09.07.17.47;	author gilles;	state Exp;
branches;
next	1.2;
commitid	znBqN8CltUnPlkwP;

1.2
date	2017.04.29.19.03.45;	author jung;	state Exp;
branches;
next	1.1;
commitid	lm7iJT4qXLCNvf13;

1.1
date	2017.02.14.16.43.28;	author gilles;	state Exp;
branches;
next	;
commitid	WIaBrAorVMQ8iF7Z;


desc
@@


1.3
log
@at the exception of mail.local, smtpd never executes an MDA as root.

the check is performed daemon-side before even forking the child process,
but let's also check euid in the mda we ship in case someone executes them
by hand and needs to see an explicit error message.
@
text
@/*
 * Copyright (c) 2017 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <limits.h>
#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

static void	file_engine(const char *);

int
main(int argc, char *argv[])
{
	int ch;

	if (! geteuid())
		errx(1, "mail.file: may not be executed as root");

	while ((ch = getopt(argc, argv, "")) != -1) {
		switch (ch) {
		default:
			break;
		}
	}
	argc -= optind;
	argv += optind;

	if (argc == 0)
		errx(1, "mail.file: filename required");

	if (argc > 1)
		errx(1, "mail.file: only one filename is supported");

	file_engine(argv[0]);
	
	return (0);
}

static void
file_engine(const char *filename)
{
	int	fd;
	FILE    *fp;
	char	*line = NULL;
	size_t	linesize = 0;
	ssize_t	linelen;
	int	n;
	struct stat sb;
	int	escaped = 0;
	
	fd = open(filename, O_CREAT | O_APPEND | O_WRONLY, 0600);
	if (fd < 0)
		err(1, NULL);
	if (fstat(fd, &sb) < 0)
		err(1, NULL);
	if (S_ISREG(sb.st_mode) && flock(fd, LOCK_EX) < 0)
		err(1, NULL);

	if ((fp = fdopen(fd, "a")) == NULL)
		err(1, NULL);

	while ((linelen = getline(&line, &linesize, stdin)) != -1) {
		line[strcspn(line, "\n")] = '\0';
		if (strncasecmp(line, "From ", 5) == 0) {
			if (!escaped)
				escaped = 1;
			else
				fprintf(fp, ">");
		}
		fprintf(fp, "%s\n", line);
	}
	free(line);
	if (ferror(stdin))
		goto truncate;

	if (fflush(fp) == -1)
		if (errno != EINVAL)
			goto truncate;

	if (fclose(fp) == EOF)
		goto truncate;
	
	exit(0);

truncate:
	n = errno;
	ftruncate(fd, sb.st_size);
	errno = n;
	err(1, NULL);
}
@


1.2
log
@fix argument check, this should never trigger because it is a libexec called by
smtpd, but for the sake of correctness

from Edgar Pettijohn

ok gilles@@
@
text
@d37 4
a40 1
	
@


1.1
log
@add standalone mda for file delivery which will later obsolete
builtin delivery_file + set of makefiles, not linked to build

ok sunil@@, eric@@
@
text
@d50 1
a50 1
	if (argc != 0)
@

