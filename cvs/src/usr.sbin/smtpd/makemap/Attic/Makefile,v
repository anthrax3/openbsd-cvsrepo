head	1.28;
access;
symbols
	OPENBSD_5_8:1.24.0.8
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.4
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.22.0.2
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.2
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5;
locks; strict;
comment	@# @;


1.28
date	2015.12.07.12.29.19;	author sunil;	state dead;
branches;
next	1.27;
commitid	NjgUX1eM1Q27CUqm;

1.27
date	2015.12.01.09.54.52;	author gilles;	state Exp;
branches;
next	1.26;
commitid	mGQIktdRJLIzAEZ6;

1.26
date	2015.11.23.21.50.12;	author gilles;	state Exp;
branches;
next	1.25;
commitid	HCn8C2lUMSgPueow;

1.25
date	2015.10.06.00.30.30;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	PDerChiZfmP0Ac2f;

1.24
date	2014.04.01.23.14.25;	author fgsch;	state Exp;
branches;
next	1.23;

1.23
date	2014.03.19.21.10.27;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2014.01.18.05.54.51;	author martynas;	state Exp;
branches;
next	1.21;

1.21
date	2013.07.19.21.14.52;	author eric;	state Exp;
branches;
next	1.20;

1.20
date	2013.07.19.19.53.33;	author eric;	state Exp;
branches;
next	1.19;

1.19
date	2013.05.24.17.03.14;	author eric;	state Exp;
branches;
next	1.18;

1.18
date	2013.01.31.14.17.48;	author eric;	state Exp;
branches;
next	1.17;

1.17
date	2013.01.26.09.37.24;	author gilles;	state Exp;
branches;
next	1.16;

1.16
date	2012.10.14.11.58.23;	author gilles;	state Exp;
branches;
next	1.15;

1.15
date	2012.10.07.15.46.38;	author chl;	state Exp;
branches;
next	1.14;

1.14
date	2012.08.29.16.26.17;	author gilles;	state Exp;
branches;
next	1.13;

1.13
date	2012.05.29.19.53.10;	author gilles;	state Exp;
branches;
next	1.12;

1.12
date	2011.12.13.23.00.52;	author eric;	state Exp;
branches;
next	1.11;

1.11
date	2011.12.13.22.09.53;	author eric;	state Exp;
branches;
next	1.10;

1.10
date	2011.05.21.18.43.08;	author gilles;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.21.21.04.29;	author gilles;	state Exp;
branches;
next	1.8;

1.8
date	2009.11.08.23.15.03;	author gilles;	state Exp;
branches;
next	1.7;

1.7
date	2009.03.23.15.14.54;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2009.03.16.22.02.56;	author jacekm;	state Exp;
branches;
next	1.5;

1.5
date	2009.02.17.23.46.03;	author jacekm;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.21.12.59.09;	author jacekm;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.17.22.59.39;	author jacekm;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.11.23.04.45;	author gilles;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.03.21.20.20;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.28
log
@Merge makemap(8) into smtpctl(8).

Ok gilles@@, jung@@
@
text
@#	$OpenBSD: Makefile,v 1.27 2015/12/01 09:54:52 gilles Exp $

.PATH:		${.CURDIR}/..

PROG=	makemap
BINOWN=	root

BINMODE?=555

BINDIR=	/usr/libexec/smtpd
MAN=	aliases.5 forward.5 makemap.8 newaliases.8

CFLAGS+=	-fstack-protector-all
CFLAGS+=	-I${.CURDIR}/..
CFLAGS+=	-Wall -Wstrict-prototypes -Wmissing-prototypes
CFLAGS+=	-Wmissing-declarations
CFLAGS+=	-Wshadow -Wpointer-arith -Wcast-qual
CFLAGS+=	-Wsign-compare
CFLAGS+=	-DNO_IO

SRCS=	aliases.c
SRCS+=	dict.c
SRCS+=	expand.c
SRCS+=	limit.c
SRCS+=	log.c
SRCS+=	makemap.c
SRCS+=	parse.y
SRCS+=	mailaddr.c
SRCS+=	table.c
SRCS+=	to.c
SRCS+=	tree.c
SRCS+=	util.c

SRCS+=	table_static.c
SRCS+=	table_db.c
SRCS+=	table_getpwnam.c
SRCS+=	table_proc.c

DPADD+= ${LIBUTIL} ${LIBCRYPTO} ${LIBZ}
LDADD+= -lutil -lcrypto -lz
.include <bsd.prog.mk>
@


1.27
log
@cleanup Makefile
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2015/11/23 21:50:12 gilles Exp $
@


1.26
log
@allow table API to lookup for mailaddr mappings

ok sunil@@, ok jung@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2015/10/06 00:30:30 deraadt Exp $
d13 1
a13 1
CFLAGS+=   -fstack-protector-all
d21 12
a32 2
SRCS=	aliases.c dict.c expand.c limit.c log.c makemap.c parse.y \
	mailaddr.c table.c to.c tree.c util.c
@


1.25
log
@The performance hit for -fstack-protector-all is worth it here.
ok gilles
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2014/04/01 23:14:25 fgsch Exp $
d22 1
a22 1
	table.c to.c tree.c util.c
@


1.24
log
@Remove -ggdb -g3, this shouldn't be here
Requested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2014/03/19 21:10:27 tedu Exp $
d13 1
@


1.23
log
@use smtpd man pages by default. ok deraadt jmc
sendmail.8 note by jmc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2014/01/18 05:54:51 martynas Exp $
d13 1
a13 1
CFLAGS+=	-g3 -ggdb -I${.CURDIR}/..
@


1.22
log
@Remove -Wbounded:  it is now the compiler default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2013/07/19 21:14:52 eric Exp $
d11 1
a11 3
MAN=	makemap.8 newaliases.8
# do not override default manpages for now
NOMAN=	noman
@


1.21
log
@Many MTA improvements:

- Better transient error handling logic: failing destinations are
  automatically disabled for a while.  When a destination is active
  again, ask the scheduler to retry previous envelopes immediatly.
- More informative error report when all routes fail for a mail.
- Implement a "smtpctl show hoststats" command to get the latest stat
  message per MX domain.
- Implement a "smtpctl show routes" command to show the state the
  currently known routes to remote MXs.
- Implement a "smtpctl resume route" command to re-enable a route that
  has been disabled.
- Do not hardcode limits
- Minor code improvements
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2013/07/19 19:53:33 eric Exp $
d19 1
a19 1
CFLAGS+=	-Wsign-compare -Wbounded
@


1.20
log
@Add a table_proc backend for delegating table lookups to another
process.  Stop building experimental table_sqlite and table_ldap as
they will be provided as external backends.
@
text
@d1 1
a1 1
#	$OpenBSD$
d22 1
a22 1
SRCS=	aliases.c dict.c expand.c log.c makemap.c parse.y \
@


1.19
log
@sync with OpenSMTPD 5.3.2

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2012/10/14 11:58:23 gilles Exp $
d22 2
a23 1
SRCS=	parse.y makemap.c aliases.c expand.c log.c util.c table.c dict.c tree.c to.c
d28 1
a28 2
SRCS+=	table_ldap.c
SRCS+=	table_sqlite.c
d30 2
a31 5
SRCS+=	ber.c
SRCS+=	aldap.c

DPADD+= ${LIBUTIL} ${LIBCRYPTO} ${LIBSQLITE3} ${LIBZ}
LDADD+= -lutil -lcrypto -lsqlite3 -lz
@


1.18
log
@do not overwrite default manpages

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2013/01/26 09:37:24 gilles Exp $
d28 2
a31 1
SRCS+=	table_sqlite.c
d33 2
a34 2
DPADD+= ${LIBUTIL} ${LIBCRYPTO} ${LIBSQLITE3}
LDADD+= -lutil -lcrypto -lsqlite3
@


1.17
log
@Sync with our smtpd repo:

* first bricks of ldap and sqlite support (not finished but both working)
* new table API to replace map API, all lookups are done through tables
* improved handling of temporary errors throughout the daemon
* improved scheduler and mta logic: connection reuse, optimizes batches
* improved queue: more tolerant to admin errors, new layout, less disk-IO
* improved memory usage under high load
* SSL certs/keys isolated to lookup process to avoid facing network
* VIRTUAL support improved, fully virtual setups possible now
* runtime tracing of processes through smtpctl trace
* ssl_privsep.c sync-ed with relayd
* ssl.c no longer contains smtpd specific interfaces
* smtpd-specific ssl bits moved to ssl_smtpd.c
* update mail address in copyright

FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE.

smtpd.conf(5) simplified, it will require adaptations

ok eric@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2012/10/14 11:58:23 gilles Exp $
d12 2
@


1.16
log
@introduce map_file.c which will deprecate map_stdio.c

The idea is to have a file-backed map but to have smtpd(8) cache the maps
so that it cannot be partially read if edited while mail is received. The
file is read and converted to a static map (map_static.c), changes aren't
visible to smtpd until an explicit: smtpctl update map  which reads file,
builds a new static map and invalidates the former.

partial-read issue discussed with beck@@ and halex@@
idea to convert internally to a static map by eric@@

diff ok eric@@ and chl@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2012/10/07 15:46:38 chl Exp $
d20 1
a20 2
SRCS=	parse.y makemap.c aliases.c expand.c log.c util.c map.c \
	map_static.c map_db.c map_file.c tree.c
d22 10
a31 2
DPADD+= ${LIBUTIL} ${LIBCRYPTO}
LDADD+= -lutil -lcrypto
@


1.15
log
@convert iobuf_queue()'s to iobuf_fqueue(). (idea from gilles@@)
introduce iobuf_xinit() and iobuf_xfqueue(). (idea from eric@@)

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2012/08/29 16:26:17 gilles Exp $
d21 1
a21 1
	map_static.c map_db.c map_stdio.c
@


1.14
log
@Introduce the crypto_backend API and provide support for... encrypted queue
using the new API. By default, OpenSMTPD does not provide queue encryption,
but it can be enabled with "queue encryption [args]" and will transparently
encrypt/decrypt envelopes/messages as they hit the queue.

By default, it will use Blowfish in CBC mode with a different random IV for
each envelope and message. User provided key is expanded using sha256 but a
different cipher and digest may be specified in smtpd.conf

Queue encryption is compatible with compression and if both options are set
it will do them in correct order and transparently.

tested by chl@@, a few users and myself
ok chl@@ and I
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2012/05/29 19:53:10 gilles Exp $
d18 1
@


1.13
log
@- introduce map_static.c as a backend to static maps in parse.y, this has
  the benefit that we no longer have two code paths whenever we deal with
  maps, we can always use the backend mechanism.

I have not plugged this in yet, I'll do it in a later commit, just get it
out of my sandbox
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2011/12/13 23:00:52 eric Exp $
d22 2
a23 2
DPADD+= ${LIBUTIL}
LDADD+= -lutil
@


1.12
log
@rename files for consistency.

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2011/12/13 22:09:53 eric Exp $
d20 1
a20 1
	map_db.c map_stdio.c
@


1.11
log
@merge map_backend.c into map.c

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2011/05/21 18:43:08 gilles Exp $
d20 1
a20 1
	map_backend_db.c map_backend_stdio.c
@


1.10
log
@until now the map_backend API was not really useful for backends that are
not key/val stores. refactored a bit so that smtpd can really take
advantage of backends. preliminary work for ldap support ;-)

no functionnal change
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2010/04/21 21:04:29 gilles Exp $
d19 3
a21 1
SRCS=	parse.y makemap.c aliases.c expand.c map.c map_backend.c map_backend_db.c map_backend_stdio.c log.c util.c
@


1.9
log
@map.c is growing big, split it into three different files:
map.c contains the map API calls as usable by smtpd processes,
map_backend.c contains backend implementations and map_parser.c contains
parser implementations used internally by the map API
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2009/11/08 23:15:03 gilles Exp $
d19 1
a19 1
SRCS=	parse.y makemap.c aliases.c expand.c map.c map_backend.c map_parser.c log.c util.c
@


1.8
log
@move expansion code to new expand.c to clearly separate it from aliases
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2009/03/23 15:14:54 deraadt Exp $
d19 1
a19 1
SRCS=	parse.y makemap.c aliases.c expand.c map.c log.c util.c
@


1.7
log
@good god no you do not use LDFLAGS to pull in libraries
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2009/03/16 22:02:56 jacekm Exp $
d19 1
a19 1
SRCS=	parse.y makemap.c aliases.c map.c log.c util.c
@


1.6
log
@makemap goes to libexec/smtpd; ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2009/02/17 23:46:03 jacekm Exp $
d20 2
a21 1
LDFLAGS=	-lutil
@


1.5
log
@sync makemap man page with the code. create separate page for newaliases
which points at makemap as the preferred utility; ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2008/12/21 12:59:09 jacekm Exp $
d10 1
a10 1
BINDIR=	/usr/bin
a17 2

LINKS=	${BINDIR}/makemap ${BINDIR}/newaliases
@


1.4
log
@Add more compile time checking; fix one warning reported by gcc.
From: Nicholas Marriott <nicholas.marriott@@gmail.com>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2008/12/17 22:59:39 jacekm Exp $
d11 1
a11 1
MAN=	makemap.8
a19 1
MLINKS=	makemap.8 newaliases.8
d21 1
a21 1
SRCS=	makemap.c aliases.c map.c log.c util.c
@


1.3
log
@Merge newaliases into makemap.

ok gilles@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2008/12/11 23:04:45 gilles Exp $
d12 6
@


1.2
log
@- snprintf -> bsnprintf
- makemap and newaliases need util.c now
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2008/12/03 21:20:20 gilles Exp $
d12 3
@


1.1
log
@- smtpd's db maps are incompatible with sendmail's and needs a distinct
	makemap utility, this is needed for virtual users support amongst
	other things. links to smtpd's aliases.c and only provides a
	frontent to parse map descriptions. contains code from pyr@@, chl@@
	and I. Should have also been imported with smtpd.
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
SRCS=	makemap.c aliases.c map.c log.c
@

