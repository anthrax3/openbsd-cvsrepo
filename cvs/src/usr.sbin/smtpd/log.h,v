head	1.7;
access;
symbols
	OPENBSD_6_0:1.5.0.12
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2017.01.09.14.49.22;	author reyk;	state Exp;
branches;
next	1.6;
commitid	eA8b246voAapPTkX;

1.6
date	2017.01.09.09.53.23;	author reyk;	state Exp;
branches;
next	1.5;
commitid	jM4eOMW1AJwdfKrr;

1.5
date	2014.07.08.10.30.52;	author eric;	state Exp;
branches;
next	1.4;
commitid	GDt5TYwvHfHsoUc2;

1.4
date	2013.01.26.09.37.23;	author gilles;	state Exp;
branches;
next	1.3;

1.3
date	2012.11.23.13.54.12;	author eric;	state Exp;
branches;
next	1.2;

1.2
date	2011.10.22.00.16.33;	author eric;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.28.13.56.43;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Stop accessing verbose and debug variables from log.c directly.

This replaces log_verbose() and "extern int verbose" with the two functions
log_setverbose() and log_getverbose().

Pointed out by benno@@
OK krw@@ eric@@ gilles@@ (OK gilles@@ for the snmpd bits as well)
@
text
@/*	$OpenBSD: log.h,v 1.6 2017/01/09 09:53:23 reyk Exp $	*/

/*
 * Copyright (c) 2010 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <syslog.h>

/* log.c */
void	log_init(int, int);
void	log_procinit(const char *);
void	log_setverbose(int);
int	log_getverbose(void);
void	log_warn(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_warnx(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_info(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_debug(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	logit(int, const char *, ...)
	    __attribute__((__format__ (printf, 2, 3)));
void	vlog(int, const char *, va_list)
	    __attribute__((__format__ (printf, 2, 0)));
__dead void fatal(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
__dead void fatalx(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));

/* util.c */
void	log_trace_verbose(int);
void	log_trace(int, const char *, ...)
	    __attribute__((format (printf, 2, 3)));
@


1.6
log
@smtpd joins the 7 other daemons that share the same log.c file.

The only major difference was the "log_trace" concept that is only
used by smtpd - move it from log.c into util.c and make it a local
concept.  This also needed to rename the global "verbose" variable to
"tracing" in a few places.

OK krw@@ gilles@@ eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.5 2014/07/08 10:30:52 eric Exp $	*/
d24 2
a25 1
void	log_verbose(int);
@


1.5
log
@Change fatal/fatalx to use a format string.  Expand in a static buffer
to cope with low-memory situations.

ok gilles@@ chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d19 27
a45 16
void		log_init(int);
void		log_verbose(int);
void		log_warn(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_warnx(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_info(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_debug(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_trace(int, const char *, ...)
    __attribute__((format (printf, 2, 3)));
__dead void	fatal(const char *, ...)
    __attribute__((format (printf, 1, 2)));
__dead void	fatalx(const char *, ...)
    __attribute__((format (printf, 1, 2)));
@


1.4
log
@Sync with our smtpd repo:

* first bricks of ldap and sqlite support (not finished but both working)
* new table API to replace map API, all lookups are done through tables
* improved handling of temporary errors throughout the daemon
* improved scheduler and mta logic: connection reuse, optimizes batches
* improved queue: more tolerant to admin errors, new layout, less disk-IO
* improved memory usage under high load
* SSL certs/keys isolated to lookup process to avoid facing network
* VIRTUAL support improved, fully virtual setups possible now
* runtime tracing of processes through smtpctl trace
* ssl_privsep.c sync-ed with relayd
* ssl.c no longer contains smtpd specific interfaces
* smtpd-specific ssl bits moved to ssl_smtpd.c
* update mail address in copyright

FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE.

smtpd.conf(5) simplified, it will require adaptations

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.2 2011/10/22 00:16:33 eric Exp $	*/
d31 4
a34 2
__dead void	fatal(const char *);
__dead void	fatalx(const char *);
@


1.3
log
@knf
@
text
@d4 1
a4 1
 * Copyright (c) 2010 Gilles Chehade <gilles@@openbsd.org>
@


1.2
log
@Add a log_trace() call to toggle logging of specific debugging info in
verbose mode, and an associated -T command line option.  Use it for
the imsg traces.

Requested by gilles@@ who doesn't like verbose to be too verbose.

ok gilles@@ chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.1 2010/11/28 13:56:43 gilles Exp $	*/
d22 1
a22 1
    __attribute__ ((format (printf, 1, 2)));
d24 1
a24 1
    __attribute__ ((format (printf, 1, 2)));
d26 1
a26 1
    __attribute__ ((format (printf, 1, 2)));
d28 1
a28 1
    __attribute__ ((format (printf, 1, 2)));
d30 1
a30 1
    __attribute__ ((format (printf, 2, 3)));
@


1.1
log
@a bit of .h cleanups, no functionnal change
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 2
@

