head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.8
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.10
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7;
locks; strict;
comment	@ * @;


1.9
date	2015.01.20.17.37.54;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	ZBTFreARDSMmzOIV;

1.8
date	2013.05.24.17.03.14;	author eric;	state Exp;
branches;
next	1.7;

1.7
date	2013.01.26.09.37.23;	author gilles;	state Exp;
branches;
next	1.6;

1.6
date	2012.09.16.15.55.55;	author chl;	state Exp;
branches;
next	1.5;

1.5
date	2012.08.30.19.33.25;	author chl;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.29.16.26.17;	author gilles;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.26.13.38.43;	author gilles;	state Exp;
branches;
next	1.2;

1.2
date	2012.08.26.10.17.13;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2012.08.25.23.35.09;	author chl;	state Exp;
branches;
next	;


desc
@@


1.9
log
@use <limits.h> comprehensively.  For now try to push <> includes to
each .c file, and out of the .h files.  To avoid overinclude.
ok gilles, in principle.  If this has been done right, -portable should
become easier to maintain.
@
text
@/*	$OpenBSD: compress_backend.c,v 1.8 2013/05/24 17:03:14 eric Exp $	*/

/*
 * Copyright (c) 2012 Charles Longeau <chl@@openbsd.org>
 * Copyright (c) 2012 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/queue.h>
#include <sys/tree.h>
#include <sys/socket.h>
#include <sys/stat.h>

#include <imsg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>

#include "smtpd.h"

#define	BUFFER_SIZE	16364

extern struct compress_backend compress_gzip;

struct compress_backend *
compress_backend_lookup(const char *name)
{
	if (!strcmp(name, "gzip"))
		return &compress_gzip;

	return NULL;
}

size_t
compress_chunk(void *ib, size_t ibsz, void *ob, size_t obsz)
{
	return (env->sc_comp->compress_chunk(ib, ibsz, ob, obsz));
}

size_t
uncompress_chunk(void *ib, size_t ibsz, void *ob, size_t obsz)
{
	return (env->sc_comp->uncompress_chunk(ib, ibsz, ob, obsz));
}

int
compress_file(FILE *ifile, FILE *ofile)
{
	return (env->sc_comp->compress_file(ifile, ofile));
}

int
uncompress_file(FILE *ifile, FILE *ofile)
{
	return (env->sc_comp->uncompress_file(ifile, ofile));
}
@


1.8
log
@sync with OpenSMTPD 5.3.2

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.7 2013/01/26 09:37:23 gilles Exp $	*/
d31 1
@


1.7
log
@Sync with our smtpd repo:

* first bricks of ldap and sqlite support (not finished but both working)
* new table API to replace map API, all lookups are done through tables
* improved handling of temporary errors throughout the daemon
* improved scheduler and mta logic: connection reuse, optimizes batches
* improved queue: more tolerant to admin errors, new layout, less disk-IO
* improved memory usage under high load
* SSL certs/keys isolated to lookup process to avoid facing network
* VIRTUAL support improved, fully virtual setups possible now
* runtime tracing of processes through smtpctl trace
* ssl_privsep.c sync-ed with relayd
* ssl.c no longer contains smtpd specific interfaces
* smtpd-specific ssl bits moved to ssl_smtpd.c
* update mail address in copyright

FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE.

smtpd.conf(5) simplified, it will require adaptations

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.6 2012/09/16 15:55:55 chl Exp $	*/
a22 1
#include <sys/param.h>
d34 2
d38 2
a39 4
static struct compress_backend	*backend = NULL;

int
compress_backend_init(const char *name)
d42 1
a42 1
		backend = &compress_gzip;
d44 1
a44 9
	if (backend)
		return (1);
	return (0);
}

void *
compress_new(void)
{
	return (backend->compress_new());
d48 1
a48 1
compress_chunk(void *hdl, void *ib, size_t ibsz, void *ob, size_t obsz)
d50 1
a50 1
	return (backend->compress_chunk(hdl, ib, ibsz, ob, obsz));
d54 1
a54 1
compress_finalize(void *hdl, void *ob, size_t obsz)
d56 1
a56 1
	return (backend->compress_finalize(hdl, ob, obsz));
d59 2
a60 26
void *
uncompress_new(void)
{
	return (backend->uncompress_new());
}

size_t
uncompress_chunk(void *hdl, void *ib, size_t ibsz, void *ob, size_t obsz)
{
	return (backend->uncompress_chunk(hdl, ib, ibsz, ob, obsz));
}

size_t
uncompress_finalize(void *hdl, void *ob, size_t obsz)
{
	return (backend->uncompress_finalize(hdl, ob, obsz));
}

size_t
compress_buffer(char *ib, size_t iblen, char *ob, size_t oblen)
{
	return (compress_chunk(NULL, ib, iblen, ob, oblen));
}

size_t
uncompress_buffer(char *ib, size_t iblen, char *ob, size_t oblen)
d62 1
a62 1
	return (uncompress_chunk(NULL, ib, iblen, ob, oblen));
d68 2
a69 2
	return (0);
};
@


1.6
log
@silent warnings

reported by ajacoutot@@

ok gilles@@ ajacoutot@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.5 2012/08/30 19:33:25 chl Exp $	*/
d5 1
d37 4
a40 2
struct compress_backend *
compress_backend_lookup(const char *name)
d43 12
a54 1
		return &compress_gzip;
d56 4
a59 1
	return (NULL);
d62 14
a75 2
int
compress_file(FILE *in, FILE *out)
d77 1
a77 1
	return env->sc_compress->compress_file(in, out);
d80 2
a81 2
int
uncompress_file(FILE *in, FILE *out)
d83 1
a83 1
	return env->sc_compress->uncompress_file(in, out);
d89 1
a89 1
	return env->sc_compress->compress_buffer(ib, iblen, ob, oblen);
d95 1
a95 1
	return env->sc_compress->uncompress_buffer(ib, iblen, ob, oblen);
d97 6
@


1.5
log
@switch compress_backend to use FILE * instead of file descriptors, like
crypto_backend

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.4 2012/08/29 16:26:17 gilles Exp $	*/
d58 1
a58 1
compress_buffer(const char *ib, size_t iblen, char *ob, size_t oblen)
d64 1
a64 1
uncompress_buffer(const char *ib, size_t iblen, char *ob, size_t oblen)
@


1.4
log
@Introduce the crypto_backend API and provide support for... encrypted queue
using the new API. By default, OpenSMTPD does not provide queue encryption,
but it can be enabled with "queue encryption [args]" and will transparently
encrypt/decrypt envelopes/messages as they hit the queue.

By default, it will use Blowfish in CBC mode with a different random IV for
each envelope and message. User provided key is expanded using sha256 but a
different cipher and digest may be specified in smtpd.conf

Queue encryption is compatible with compression and if both options are set
it will do them in correct order and transparently.

tested by chl@@, a few users and myself
ok chl@@ and I
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.3 2012/08/26 13:38:43 gilles Exp $	*/
d46 1
a46 1
compress_file(int fdin, int fdout)
d48 1
a48 1
	return env->sc_compress->compress_file(fdin, fdout);
d52 1
a52 1
uncompress_file(int fdin, int fdout)
d54 1
a54 1
	return env->sc_compress->uncompress_file(fdin, fdout);
@


1.3
log
@- use the same compression algorithm, gzip, for message file and envelopes
- rename compress_zlib.c to compress_gzip.c

with this commit it is possible to inspect a compressed queue with gzcat :)
@
text
@d1 1
a1 1
/*	$OpenBSD: compress_backend.c,v 1.2 2012/08/26 10:17:13 chl Exp $	*/
a40 6

	/* if (!strcmp(name, "bzip")) */
	/* 	return &compress_bzip; */

	/* if (!strcmp(name, "7zip")) */
	/* 	return &compress_7zip; */
@


1.2
log
@Add missing RCS Id.

Reminded by jasper@@

ok gilles@@ eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 1
a34 1
extern struct compress_backend compress_zlib;
d39 2
a40 2
	if (!strcmp(name, "zlib"))
		return &compress_zlib;
@


1.1
log
@Add compress_backend, allowing compression of messages and envelopes in the queue.
To use it, just add "queue compress" in smtpd.conf. For now, only zlib is used.

lots of feedback from eric@@ and gilles@@

ok eric@@ gilles@@
@
text
@d1 2
@

