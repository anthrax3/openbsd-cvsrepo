head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2008.11.17.21.23.54;	author gilles;	state dead;
branches;
next	1.3;

1.3
date	2008.11.05.12.49.58;	author sobrado;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.05.12.14.45;	author sobrado;	state Exp;
branches;
next	1.1;

1.1
date	2008.11.01.21.35.28;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.4
log
@- we don't need this anymore
@
text
@/*	$OpenBSD: atomic.c,v 1.3 2008/11/05 12:49:58 sobrado Exp $	*/

/*
 * Copyright (c) 2008 Gilles Chehade <gilles@@openbsd.org>
 * Copyright (c) 2008 Charles Longeau <chl@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/queue.h>
#include <sys/tree.h>
#include <sys/param.h>
#include <sys/socket.h>
#include <sys/wait.h>
#include <sys/time.h>

#include <err.h>
#include <errno.h>
#include <event.h>
#include <fcntl.h>
#include <paths.h>
#include <pwd.h>
#include <signal.h>
#include <stdarg.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "smtpd.h"

ssize_t
atomic_write(int d, const void *buf, size_t nbytes)
{
	ssize_t ret;
	size_t n = nbytes;

	do {
		ret = write(d, buf, n);
		if (ret == -1 && errno != EINTR)
			return -1;
		if (ret != -1)
			n -= ret;
	} while (n > 0 || (ret == -1 && errno == EINTR));

	return nbytes;
}

ssize_t
atomic_read(int d, void *buf, size_t nbytes)
{
	ssize_t ret;
	size_t n = nbytes;

	do {
		ret = read(d, buf, n);
		if (ret == -1 && errno != EINTR)
			return -1;
		if (ret != -1)
			n -= ret;

		if (ret == 0 && n != 0)
			return -1;

	} while (n > 0 || (ret == -1 && errno == EINTR));

	return nbytes;
}

ssize_t
atomic_printfd(int d, const char *fmt, ...)
{
	int ret;
	char *buf;

	va_list ap;
	va_start(ap, fmt);

	if ((ret = vasprintf(&buf, fmt, ap)) == -1) {
		va_end(ap);
		return -1;
	}
	va_end(ap);

	ret = atomic_write(d, buf, ret);
	free(buf);

	return ret;
}
@


1.3
log
@add gilles@@ as copyright holder for this file.
@
text
@d1 1
a1 1
/*	$OpenBSD: atomic.c,v 1.2 2008/11/05 12:14:45 sobrado Exp $	*/
@


1.2
log
@add a few missing id tags; there are a bunch of files, and developers
will probably miss this change when working on more important matters,
so it is probably better to sort them now.  there is a risk of losing
the tags if a change needs to be reverted too.

written with excellent advice from jmc@@

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 1
@


1.1
log
@smtpd is a smtp server implementation for OpenBSD. It is a work in progress
which still lacks many features. bringing it in tree will help working on it
more easily.

"at this stage it should go in" henning@@, "move ahead" deraadt@@
@
text
@d1 2
@

