head	1.6;
access;
symbols
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2013.01.26.09.50.22;	author gilles;	state dead;
branches;
next	1.5;

1.5
date	2012.11.23.13.54.12;	author eric;	state Exp;
branches;
next	1.4;

1.4
date	2012.08.20.21.14.17;	author gilles;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.19.14.16.58;	author chl;	state Exp;
branches;
next	1.2;

1.2
date	2012.07.11.17.20.29;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2012.06.14.21.56.13;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.6
log
@no longer used
@
text
@/*	$OpenBSD: filter_api.h,v 1.5 2012/11/23 13:54:12 eric Exp $	*/

/*
 * Copyright (c) 2011 Gilles Chehade <gilles@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/socket.h>

#include <netdb.h>

#define	FILTER_API_VERSION	 50

#define MAX_LINE_SIZE		 2048
#define MAX_LOCALPART_SIZE	 64
#define MAX_DOMAINPART_SIZE	 255

enum filter_status {
	STATUS_IGNORE,
	STATUS_REJECT,
	STATUS_ACCEPT,
	STATUS_WAITING
};

enum filter_type {
	FILTER_CONNECT		= 0x001,
	FILTER_HELO		= 0x002,
	FILTER_EHLO		= 0x004,
	FILTER_MAIL		= 0x008,
	FILTER_RCPT		= 0x010,
	FILTER_DATALINE		= 0x020,
	FILTER_QUIT		= 0x040,
	FILTER_CLOSE		= 0x080,
	FILTER_RSET		= 0x100,
};

struct filter_connect {
	char			hostname[MAXHOSTNAMELEN];
	struct sockaddr_storage	hostaddr;
};

struct filter_helo {
	char			helohost[MAXHOSTNAMELEN];
};

struct filter_mail {
	char			user[MAX_LOCALPART_SIZE];
	char			domain[MAX_DOMAINPART_SIZE];
};

struct filter_rcpt {
	char			user[MAX_LOCALPART_SIZE];
	char			domain[MAX_DOMAINPART_SIZE];
};

struct filter_dataline {
	char			line[MAX_LINE_SIZE];
};

union filter_union {
	struct filter_connect	connect;
	struct filter_helo	helo;
	struct filter_mail	mail;
	struct filter_rcpt	rcpt;
	struct filter_dataline	dataline;
};

struct filter_msg {
	uint64_t		id;	 /* set by smtpd(8) */
	uint64_t		cl_id;	 /* set by smtpd(8) */
	int8_t			code;
	uint8_t			version;
	enum filter_type	type;
	union filter_union	u;
};

/**/
void filter_init(void);
void filter_loop(void);

void filter_register_connect_callback(enum filter_status
    (*)(uint64_t, struct filter_connect *, void *), void *);
void filter_register_helo_callback(enum filter_status
    (*)(uint64_t, struct filter_helo *, void *), void *);
void filter_register_ehlo_callback(enum filter_status
    (*)(uint64_t, struct filter_helo *, void *), void *);
void filter_register_mail_callback(enum filter_status
    (*)(uint64_t, struct filter_mail *, void *), void *);
void filter_register_rcpt_callback(enum filter_status
    (*)(uint64_t, struct filter_rcpt *, void *), void *);
void filter_register_dataline_callback(enum filter_status
    (*)(uint64_t, struct filter_dataline *, void *), void *);
void filter_register_quit_callback(enum filter_status
    (*)(uint64_t, void *), void *);
void filter_register_close_callback(enum filter_status
    (*)(uint64_t, void *), void *);
void filter_register_rset_callback(enum filter_status
    (*)(uint64_t, void *), void *);

@


1.5
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: filter_api.h,v 1.4 2012/08/20 21:14:17 gilles Exp $	*/
@


1.4
log
@MAX_LINE_SIZE is supposed to define the max length of a SMTP line ...
... but SMTP_LINE_MAX *also* defines it ... with a different value ...
and did I mention both were too small anyway ?

quick fix until we kill one or the other: bump MAX_LINE_SIZE and define
SMTP_LINE_MAX to be MAX_LINE_SIZE. this fixes the immediate issue while
we decide which one bites the dust.

fixes the crashes and "line too long" errors spotted by todd@@
ok todd@@, ok chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD: filter_api.h,v 1.3 2012/08/19 14:16:58 chl Exp $	*/
d56 1
a56 1
 
d82 1
a82 1
	int8_t       		code;
d92 18
a109 9
void filter_register_connect_callback(enum filter_status (*)(uint64_t, struct filter_connect *, void *), void *);
void filter_register_helo_callback(enum filter_status (*)(uint64_t, struct filter_helo *, void *), void *);
void filter_register_ehlo_callback(enum filter_status (*)(uint64_t, struct filter_helo *, void *), void *);
void filter_register_mail_callback(enum filter_status (*)(uint64_t, struct filter_mail *, void *), void *);
void filter_register_rcpt_callback(enum filter_status (*)(uint64_t, struct filter_rcpt *, void *), void *);
void filter_register_dataline_callback(enum filter_status (*)(uint64_t, struct filter_dataline *, void *), void *);
void filter_register_quit_callback(enum filter_status (*)(uint64_t, void *), void *);
void filter_register_close_callback(enum filter_status (*)(uint64_t, void *), void *);
void filter_register_rset_callback(enum filter_status (*)(uint64_t, void *), void *);
@


1.3
log
@coding style: replace all occurences of u_int* with uint*

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: filter_api.h,v 1.2 2012/07/11 17:20:29 chl Exp $	*/
d23 1
a23 1
#define	FILTER_API_VERSION	50
d25 1
a25 5
#if !defined(MAX_LINE_SIZE)
#define MAX_LINE_SIZE		 1000
#endif

#if !defined(MAX_LOCALPART_SIZE)
a26 3
#endif

#if !defined(MAX_DOMAINPART_SIZE)
a27 1
#endif
@


1.2
log
@Respect RFC 5321, section 4.5.3.1.: it reduces our current max size for
localpart, domainpart and text line.

The sizeof struct envelope goes from 8k to 6k.

ok gilles@@ eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: filter_api.h,v 1.1 2012/06/14 21:56:13 gilles Exp $	*/
d88 2
a89 2
	u_int64_t		id;	 /* set by smtpd(8) */
	u_int64_t		cl_id;	 /* set by smtpd(8) */
d91 1
a91 1
	u_int8_t		version;
d100 9
a108 9
void filter_register_connect_callback(enum filter_status (*)(u_int64_t, struct filter_connect *, void *), void *);
void filter_register_helo_callback(enum filter_status (*)(u_int64_t, struct filter_helo *, void *), void *);
void filter_register_ehlo_callback(enum filter_status (*)(u_int64_t, struct filter_helo *, void *), void *);
void filter_register_mail_callback(enum filter_status (*)(u_int64_t, struct filter_mail *, void *), void *);
void filter_register_rcpt_callback(enum filter_status (*)(u_int64_t, struct filter_rcpt *, void *), void *);
void filter_register_dataline_callback(enum filter_status (*)(u_int64_t, struct filter_dataline *, void *), void *);
void filter_register_quit_callback(enum filter_status (*)(u_int64_t, void *), void *);
void filter_register_close_callback(enum filter_status (*)(u_int64_t, void *), void *);
void filter_register_rset_callback(enum filter_status (*)(u_int64_t, void *), void *);
@


1.1
log
@- rename filter.h -> filter_api.h to be consistent with upcoming changes
@
text
@d1 1
a1 1
/*	$OpenBSD: filter.h,v 1.7 2012/01/18 13:41:54 chl Exp $	*/
d26 1
a26 1
#define MAX_LINE_SIZE		 1024
d30 1
a30 1
#define MAX_LOCALPART_SIZE	 128
d34 1
a34 1
#define MAX_DOMAINPART_SIZE	 (MAX_LINE_SIZE-MAX_LOCALPART_SIZE)
@

