head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.07.09.12.16.24;	author eric;	state dead;
branches;
next	1.5;

1.5
date	2011.07.13.14.52.21;	author eric;	state Exp;
branches;
next	1.4;

1.4
date	2011.03.27.17.39.17;	author eric;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.26.14.38.14;	author eric;	state Exp;
branches;
next	1.2;

1.2
date	2011.03.26.11.04.05;	author eric;	state Exp;
branches;
next	1.1;

1.1
date	2010.11.29.15.25.55;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.6
log
@move to the new resolver implementation, with temporary glue to use
the relevant files from asr directly.

ok gilles@@
@
text
@/*	$OpenBSD: asr.h,v 1.5 2011/07/13 14:52:21 eric Exp $	*/
/*
 * Copyright (c) 2010,2011 Eric Faurot <eric@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/socket.h>

#include <netdb.h>
#include <netinet/in.h>

enum {
	ASR_COND,
	ASR_YIELD,
	ASR_DONE
};

#define ASR_READ	1
#define ASR_WRITE	2

#define ASR_NOREC	0x01

enum {
	ASR_OK = 0,
	EASR_MEMORY,
	EASR_TIMEDOUT,
	EASR_NAMESERVER,
	EASR_FAMILY,
	EASR_NOTFOUND,
	EASR_NAME,
	EASR_PARAM
};

struct asr_result {
	int		 ar_err;
	const char	*ar_errstr;

	int		 ar_cond;
	int		 ar_fd;
	int		 ar_timeout;

	int		 ar_count;
	struct addrinfo	*ar_ai;
	char		*ar_cname;
	void		*ar_data;
	size_t		 ar_datalen;
	union {
		struct sockaddr		sa;
		struct sockaddr_in	sain;
		struct sockaddr_in6	sain6;
	}	ar_sa;
};

struct asr_query;

struct asr	 *asr_resolver(const char*);
void		  asr_done(struct asr*);

int		  asr_run(struct asr_query*, struct asr_result*);
int		  asr_run_sync(struct asr_query*, struct asr_result*);
void		  asr_abort(struct asr_query*);

struct asr_query *asr_query_dns(struct asr*,
				uint16_t,
				uint16_t,
				const char*,
				int);

struct asr_query *asr_query_host(struct asr*,
				 const char*,
				 int);

struct asr_query *asr_query_addrinfo(struct asr*,
				     const char*,
				     const char*,
				     const struct addrinfo*);

struct asr_query *asr_query_cname(struct asr*,
				  const struct sockaddr*,
				  socklen_t);
@


1.5
log
@do not make these values look like they are flags.

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: asr.h,v 1.4 2011/03/27 17:39:17 eric Exp $	*/
@


1.4
log
@add missing CVS markers and update copyright year.

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d30 2
a31 2
#define ASR_READ	0x01
#define ASR_WRITE	0x02
@


1.3
log
@Tweak the asr API to make things a bit smoother on the user side.
Then asr_run() call now returns ASR_COND when a condition on a FD is
expected.  The exact condition (readable or writeable) is specified in
the asr_result structure, along with the fd and timeout.

ok gilles@@
@
text
@d1 1
d3 1
a3 1
 * Copyright (c) 2010 Eric Faurot <eric@@openbsd.org>
@


1.2
log
@Merge a reverse lookup query implementation into asr.
Not used by the rest of smtpd for now.

ok gilles@@
@
text
@d24 1
a24 2
	ASR_NEED_READ,
	ASR_NEED_WRITE,
d29 3
d46 4
d52 1
a52 2
	int		 ar_err;
	const char	*ar_errstr;
@


1.1
log
@replace the fork-based-non-blocking-resolver-hack by shiny async resolver
written by eric@@. it is still experimental but still better than what we
had earlier so ... we'll improve in tree :)

diff by me with *lots* of help from eric@@, tested by todd and I (and a
few people out there)
@
text
@d83 4
@

