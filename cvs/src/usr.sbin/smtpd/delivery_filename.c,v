head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.10
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.8
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.6
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2;
locks; strict;
comment	@ * @;


1.14
date	2015.12.28.19.47.57;	author millert;	state Exp;
branches;
next	1.13;
commitid	SrbhXD7b4kGRvc1c;

1.13
date	2015.10.10.11.42.49;	author jung;	state Exp;
branches;
next	1.12;
commitid	6SQmKxFFyKAzB7di;

1.12
date	2015.01.20.17.37.54;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	ZBTFreARDSMmzOIV;

1.11
date	2015.01.11.11.49.36;	author gilles;	state Exp;
branches;
next	1.10;
commitid	3c7hj62vdb5jpJaU;

1.10
date	2015.01.05.21.00.36;	author gilles;	state Exp;
branches;
next	1.9;
commitid	yxu6ugyHrRZIoam0;

1.9
date	2013.05.24.17.03.14;	author eric;	state Exp;
branches;
next	1.8;

1.8
date	2013.01.26.09.37.23;	author gilles;	state Exp;
branches;
next	1.7;

1.7
date	2012.11.23.10.55.25;	author eric;	state Exp;
branches;
next	1.6;

1.6
date	2012.10.03.17.58.03;	author gilles;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.25.13.51.41;	author chl;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.07.23.04.00;	author gilles;	state Exp;
branches;
next	1.3;

1.3
date	2012.03.07.22.54.49;	author gilles;	state Exp;
branches;
next	1.2;

1.2
date	2012.02.04.17.11.45;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.13.21.44.47;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.14
log
@fprintf() may not set the error indicator on failure so just use
fputs() + putc() to write the string and trailing newline.  OK jung@@
@
text
@/*	$OpenBSD: delivery_filename.c,v 1.13 2015/10/10 11:42:49 jung Exp $	*/

/*
 * Copyright (c) 2011 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/queue.h>
#include <sys/tree.h>
#include <sys/socket.h>
#include <sys/stat.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <event.h>
#include <fcntl.h>
#include <imsg.h>
#include <paths.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#include <limits.h>

#include "smtpd.h"
#include "log.h"

extern char	**environ;

/* filename backend */
static void delivery_filename_open(struct deliver *);

struct delivery_backend delivery_backend_filename = {
	0, delivery_filename_open
};


static void
delivery_filename_open(struct deliver *deliver)
{
	struct stat	 sb;
	size_t		 sz = 0;
	ssize_t		 len;
	int		 fd;
	FILE		*fp;
	char		*ln = NULL;
	char		*msg;
	int		 n;
	int		 escape_from;

#define error(m)	{ msg = m; goto err; }
#define error2(m)	{ msg = m; goto err2; }

	setproctitle("file delivery");
	fd = open(deliver->to, O_CREAT | O_APPEND | O_WRONLY, 0600);
	if (fd < 0)
		error("open");
	if (fstat(fd, &sb) < 0)
		error("fstat");
	if (S_ISREG(sb.st_mode) && flock(fd, LOCK_EX) < 0)
		error("flock");
	fp = fdopen(fd, "a");
	if (fp == NULL)
		error("fdopen");

	escape_from = 0;
	while ((len = getline(&ln, &sz, stdin)) != -1) {
		if (ln[len - 1] == '\n')
			ln[len - 1] = '\0';
		if (strncmp(ln, "From ", 5) == 0) {
			if (escape_from == 0)
				escape_from = 1;
			else
				putc('>', fp);
		}
		fputs(ln, fp);
		putc('\n', fp);
		if (ferror(fp))
			break;
	}
	free(ln);
	if (ferror(stdin))
		error2("read error");
	putc('\n', fp);
	if (fflush(fp) == EOF || ferror(fp))
		error2("write error");
	if (fsync(fd) == -1) {
		if (errno != EINVAL)
			error2("fsync");
	}
	if (fclose(fp) == EOF)
		error2("fclose");
	_exit(0);

err2:
	n = errno;
	ftruncate(fd, sb.st_size);
	errno = n;

err:
	perror(msg);
	_exit(1);
}
@


1.13
log
@three conversions of fgetln() to getline()

ok eric sunil
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.12 2015/01/20 17:37:54 deraadt Exp $	*/
d90 2
a91 1
		fprintf(fp, "%s\n", ln);
@


1.12
log
@use <limits.h> comprehensively.  For now try to push <> includes to
each .c file, and out of the .h files.  To avoid overinclude.
ok gilles, in principle.  If this has been done right, -portable should
become easier to maintain.
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.11 2015/01/11 11:49:36 gilles Exp $	*/
d56 2
a57 1
	size_t		 len;
d60 1
a60 1
	char		*ln;
d81 1
a81 1
	while ((ln = fgetln(stdin, &len)) != NULL) {
d83 2
a84 2
			len--;
		if (len >= 5 && memcmp(ln, "From ", 5) == 0) {
d90 1
a90 1
		fprintf(fp, "%.*s\n", (int)len, ln);
d94 1
@


1.11
log
@unbreak the delivery_filename backend, now that it no longer prepends the
From separator line but gets it injected in its iobuf by the mda process,
we need to make sure not to escape the first 'From ' we receive.

spotted by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.10 2015/01/05 21:00:36 gilles Exp $	*/
d37 1
@


1.10
log
@some third-party mda require a prepended From separator line, so remove the
prepending from delivery_filename backend and prepend conditionally earlier
in the code path if delivery method is through mda or filename.

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.9 2013/05/24 17:03:14 eric Exp $	*/
d61 1
d77 2
d82 6
a87 2
		if (len >= 5 && memcmp(ln, "From ", 5) == 0)
			putc('>', fp);
@


1.9
log
@sync with OpenSMTPD 5.3.2

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.8 2013/01/26 09:37:23 gilles Exp $	*/
a54 1
	time_t		 now;
a75 3
	time(&now);
	fprintf(fp, "From %s@@%s %s", SMTPD_USER, env->sc_hostname,
	    ctime(&now));
@


1.8
log
@Sync with our smtpd repo:

* first bricks of ldap and sqlite support (not finished but both working)
* new table API to replace map API, all lookups are done through tables
* improved handling of temporary errors throughout the daemon
* improved scheduler and mta logic: connection reuse, optimizes batches
* improved queue: more tolerant to admin errors, new layout, less disk-IO
* improved memory usage under high load
* SSL certs/keys isolated to lookup process to avoid facing network
* VIRTUAL support improved, fully virtual setups possible now
* runtime tracing of processes through smtpctl trace
* ssl_privsep.c sync-ed with relayd
* ssl.c no longer contains smtpd specific interfaces
* smtpd-specific ssl bits moved to ssl_smtpd.c
* update mail address in copyright

FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE.

smtpd.conf(5) simplified, it will require adaptations

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.6 2012/10/03 17:58:03 gilles Exp $	*/
a21 1
#include <sys/param.h>
@


1.7
log
@knf

ok gilles@@
@
text
@d4 1
a4 1
 * Copyright (c) 2011 Gilles Chehade <gilles@@openbsd.org>
d95 4
a98 2
	if (fsync(fd) < 0)
		error2("fsync");
@


1.6
log
@disallow root deliveries for "deliver to filename" and "deliver to mda"
rules, we only allow them for mbox and maildir though users should really
create a root alias ...

discussed with eric@@ and chl@@, ok both
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.5 2012/05/25 13:51:41 chl Exp $	*/
d55 1
a55 1
	struct stat 	 sb;
d64 1
a64 1
#define error(m)	{ msg = m; goto err; }	
@


1.5
log
@add missing header needed by time()

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.4 2012/03/07 23:04:00 gilles Exp $	*/
d48 1
a48 1
	delivery_filename_open
@


1.4
log
@- db.h not needed here, already removed by chl@@ but I fscked up previous
  commit ... remove again
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.3 2012/03/07 22:54:49 gilles Exp $	*/
d36 1
@


1.3
log
@various reliability fixes:

- prevent queue_fsqueue from fatal() when it hits an ENOENT, it can happen
- change a bit the scheduler API to simplify it, fix runner accordingly

- we can't remove msg/batch from ramqueue while envelope is offloaded or
  it will cause a double, instead we add refcnt to both msg/batch and
  only free them when it hits 0
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_filename.c,v 1.1 2011/12/13 21:44:47 gilles Exp $	*/
a25 1
#include <db.h>
@


1.2
log
@remove unused header

ok gilles@@
@
text
@d26 1
@


1.1
log
@- introduce delivery backend API (delivery.c)
- move each delivery method to it's own delivery backend
- simplify smtpd.c accordingly
- rename A_EXT -> A_MDA since that's what we really do

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a25 1
#include <db.h>
@

