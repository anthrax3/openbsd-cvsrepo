head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.2
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.17.0.6
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.7.0.2
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2;
locks; strict;
comment	@ * @;


1.18
date	2016.08.31.10.18.08;	author gilles;	state Exp;
branches;
next	1.17;
commitid	jWkTljYAPNXFatSw;

1.17
date	2015.12.28.22.08.30;	author jung;	state Exp;
branches;
next	1.16;
commitid	ZxnqOQqX6IeYI9jW;

1.16
date	2015.01.20.17.37.54;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	ZBTFreARDSMmzOIV;

1.15
date	2014.05.10.21.50.40;	author chl;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.30.09.17.29;	author gilles;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.19.17.31.35;	author gilles;	state Exp;
branches;
next	1.12;

1.12
date	2013.05.24.17.03.14;	author eric;	state Exp;
branches;
next	1.11;

1.11
date	2013.01.26.09.37.23;	author gilles;	state Exp;
branches;
next	1.10;

1.10
date	2012.11.23.10.55.25;	author eric;	state Exp;
branches;
next	1.9;

1.9
date	2012.10.03.17.58.03;	author gilles;	state Exp;
branches;
next	1.8;

1.8
date	2012.09.16.11.53.57;	author gilles;	state Exp;
branches;
next	1.7;

1.7
date	2012.07.12.08.51.43;	author chl;	state Exp;
branches;
next	1.6;

1.6
date	2012.05.25.13.51.42;	author chl;	state Exp;
branches;
next	1.5;

1.5
date	2012.03.07.23.04.00;	author gilles;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.07.22.54.49;	author gilles;	state Exp;
branches;
next	1.3;

1.3
date	2012.02.04.17.11.45;	author chl;	state Exp;
branches;
next	1.2;

1.2
date	2011.12.18.22.53.41;	author chl;	state Exp;
branches;
next	1.1;

1.1
date	2011.12.13.21.44.47;	author gilles;	state Exp;
branches;
next	;


desc
@@


1.18
log
@allow overriding the subaddressing delimiter with subaddressing-delimiter
keyword, the default is still +

ok eric@@, sunil@@
@
text
@/*	$OpenBSD: delivery_maildir.c,v 1.17 2015/12/28 22:08:30 jung Exp $	*/

/*
 * Copyright (c) 2011 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <sys/queue.h>
#include <sys/tree.h>
#include <sys/socket.h>
#include <sys/stat.h>

#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <event.h>
#include <fcntl.h>
#include <imsg.h>
#include <paths.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>
#include <limits.h>

#include "smtpd.h"
#include "log.h"

extern char	**environ;

/* maildir backend */
static void delivery_maildir_open(struct deliver *);
static int mailaddr_tag(const struct mailaddr *, char *, size_t);

struct delivery_backend delivery_backend_maildir = {
	1, delivery_maildir_open
};

static int
mailaddr_tag(const struct mailaddr *maddr, char *dest, size_t len)
{
	char		*tag;
	char		*sanitized;

	if ((tag = strchr(maddr->user, *env->sc_subaddressing_delim))) {
		tag++;
		while (*tag == '.')
			tag++;
	}
	if (tag == NULL)
		return 1;

	if (strlcpy(dest, tag, len) >= len)
		return 0;
	for (sanitized = dest; *sanitized; sanitized++)
		if (strchr(MAILADDR_ESCAPE, *sanitized))
			*sanitized = ':';
	return 1;
}

static void
delivery_maildir_open(struct deliver *deliver)
{
	char	 tmp[PATH_MAX], new[PATH_MAX], tag[PATH_MAX];
	int	 ch, fd;
	FILE	*fp;
	char	*msg;
	int	 n;
	const char	*chd;
	struct mailaddr	maddr;
	struct stat	sb;

#define error(m)	{ msg = m; goto err; }
#define error2(m)	{ msg = m; goto err2; }

	setproctitle("maildir delivery");

	memset(&maddr, 0, sizeof maddr);
	if (!text_to_mailaddr(&maddr, deliver->dest))
		error("cannot parse destination address");

	memset(tag, 0, sizeof tag);
	if (!mailaddr_tag(&maddr, tag, sizeof tag))
		error("cannot extract tag from destination address");

	if (mkdirs(deliver->to, 0700) < 0 && errno != EEXIST)
		error("cannot mkdir maildir");
	chd = deliver->to;

	if (tag[0]) {
		(void)snprintf(tmp, sizeof tmp, "%s/.%s", deliver->to, tag);
		if (stat(tmp, &sb) != -1)
			chd = tmp;
	}

	if (chdir(chd) < 0)
		error("cannot cd to maildir");
	if (mkdir("cur", 0700) < 0 && errno != EEXIST)
		error("mkdir cur failed");
	if (mkdir("tmp", 0700) < 0 && errno != EEXIST)
		error("mkdir tmp failed");
	if (mkdir("new", 0700) < 0 && errno != EEXIST)
		error("mkdir new failed");
	(void)snprintf(tmp, sizeof tmp, "tmp/%lld.%d.%s",
	    (long long int) time(NULL),
	    getpid(), env->sc_hostname);
	fd = open(tmp, O_CREAT | O_EXCL | O_WRONLY, 0600);
	if (fd < 0)
		error("cannot open tmp file");
	fp = fdopen(fd, "w");
	if (fp == NULL)
		error2("fdopen");
	while ((ch = getc(stdin)) != EOF)
		if (putc(ch, fp) == EOF)
			break;
	if (ferror(stdin))
		error2("read error");
	if (fflush(fp) == EOF || ferror(fp))
		error2("write error");
	if (fsync(fd) < 0)
		error2("fsync");
	if (fclose(fp) == EOF)
		error2("fclose");
	(void)snprintf(new, sizeof new, "new/%s", tmp + 4);
	if (rename(tmp, new) < 0)
		error2("cannot rename tmp->new");
	_exit(0);

err2:
	n = errno;
	unlink(tmp);
	errno = n;
err:
	perror(msg);
	_exit(1);
}
@


1.17
log
@remove spaces after '!'

no binary change

ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.16 2015/01/20 17:37:54 deraadt Exp $	*/
d58 1
a58 1
	if ((tag = strchr(maddr->user, TAG_CHAR))) {
@


1.16
log
@use <limits.h> comprehensively.  For now try to push <> includes to
each .c file, and out of the .h files.  To avoid overinclude.
ok gilles, in principle.  If this has been done right, -portable should
become easier to maintain.
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.15 2014/05/10 21:50:40 chl Exp $	*/
d92 1
a92 1
	if (! text_to_mailaddr(&maddr, deliver->dest))
d96 1
a96 1
	if (! mailaddr_tag(&maddr, tag, sizeof tag))
@


1.15
log
@fix typo in function prototype

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.14 2014/04/30 09:17:29 gilles Exp $	*/
d37 1
d77 1
a77 1
	char	 tmp[SMTPD_MAXPATHLEN], new[SMTPD_MAXPATHLEN], tag[SMTPD_MAXPATHLEN];
@


1.14
log
@when using maildir, do not create automatically create folders to match tag
in email address (ie: gilles+tag => ~/Maildir/.tag), instead use the folder
if it already exists and deliver to the mail Maildir otherwise.

ok eric@@ and chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.13 2014/04/19 17:31:35 gilles Exp $	*/
d45 1
a45 1
static int maildir_tag(const struct mailaddr *, char *, size_t);
@


1.13
log
@(void) cast snprintf calls that cannot truncate
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.12 2013/05/24 17:03:14 eric Exp $	*/
d45 1
d51 21
d76 1
a76 1
	char	 tmp[SMTPD_MAXPATHLEN], new[SMTPD_MAXPATHLEN];
d81 3
d89 9
d100 9
a108 1
	if (chdir(deliver->to) < 0)
@


1.12
log
@sync with OpenSMTPD 5.3.2

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.11 2013/01/26 09:37:23 gilles Exp $	*/
d74 1
a74 1
	snprintf(tmp, sizeof tmp, "tmp/%lld.%d.%s",
d94 1
a94 1
	snprintf(new, sizeof new, "new/%s", tmp + 4);
@


1.11
log
@Sync with our smtpd repo:

* first bricks of ldap and sqlite support (not finished but both working)
* new table API to replace map API, all lookups are done through tables
* improved handling of temporary errors throughout the daemon
* improved scheduler and mta logic: connection reuse, optimizes batches
* improved queue: more tolerant to admin errors, new layout, less disk-IO
* improved memory usage under high load
* SSL certs/keys isolated to lookup process to avoid facing network
* VIRTUAL support improved, fully virtual setups possible now
* runtime tracing of processes through smtpctl trace
* ssl_privsep.c sync-ed with relayd
* ssl.c no longer contains smtpd specific interfaces
* smtpd-specific ssl bits moved to ssl_smtpd.c
* update mail address in copyright

FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE. FLUSH YOUR QUEUE.

smtpd.conf(5) simplified, it will require adaptations

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.9 2012/10/03 17:58:03 gilles Exp $	*/
a21 1
#include <sys/param.h>
d54 1
a54 1
	char	 tmp[PATH_MAX], new[PATH_MAX];
@


1.10
log
@knf

ok gilles@@
@
text
@d4 1
a4 1
 * Copyright (c) 2011 Gilles Chehade <gilles@@openbsd.org>
@


1.9
log
@disallow root deliveries for "deliver to filename" and "deliver to mda"
rules, we only allow them for mbox and maildir though users should really
create a root alias ...

discussed with eric@@ and chl@@, ok both
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.8 2012/09/16 11:53:57 gilles Exp $	*/
d61 1
a61 1
#define error(m)	{ msg = m; goto err; }	
@


1.8
log
@replace BSD-licensed mkdir_p() with ISC-licensed mkdirs(), this allows us
to avoid a dual-licensed util.c for no reason

ok chl@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.7 2012/07/12 08:51:43 chl Exp $	*/
d48 1
a48 1
	delivery_maildir_open
@


1.7
log
@add support for maildir tagging/folders.

ok gilles@@
ok eric@@ on previous versions of this patch
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.6 2012/05/25 13:51:42 chl Exp $	*/
d65 1
a65 1
	if (mkdir_p(deliver->to, 0700) < 0 && errno != EEXIST)
@


1.6
log
@add missing header needed by time()

ok gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.5 2012/03/07 23:04:00 gilles Exp $	*/
d65 1
a65 1
	if (mkdir(deliver->to, 0700) < 0 && errno != EEXIST)
@


1.5
log
@- db.h not needed here, already removed by chl@@ but I fscked up previous
  commit ... remove again
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.4 2012/03/07 22:54:49 gilles Exp $	*/
d36 1
@


1.4
log
@various reliability fixes:

- prevent queue_fsqueue from fatal() when it hits an ENOENT, it can happen
- change a bit the scheduler API to simplify it, fix runner accordingly

- we can't remove msg/batch from ramqueue while envelope is offloaded or
  it will cause a double, instead we add refcnt to both msg/batch and
  only free them when it hits 0
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.2 2011/12/18 22:53:41 chl Exp $	*/
a25 1
#include <db.h>
@


1.3
log
@remove unused header

ok gilles@@
@
text
@d26 1
@


1.2
log
@use #defined error()

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD: delivery_maildir.c,v 1.1 2011/12/13 21:44:47 gilles Exp $	*/
a25 1
#include <db.h>
@


1.1
log
@- introduce delivery backend API (delivery.c)
- move each delivery method to it's own delivery backend
- simplify smtpd.c accordingly
- rename A_EXT -> A_MDA since that's what we really do

ok eric@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d65 2
a66 4
	if (mkdir(deliver->to, 0700) < 0 && errno != EEXIST) {
		msg = "cannot mkdir maildir";
		goto err;
	}
@

