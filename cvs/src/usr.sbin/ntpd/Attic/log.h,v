head	1.4;
access;
symbols
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.19.20.44.35;	author reyk;	state dead;
branches;
next	1.3;
commitid	yMsnemUVmfyHzTAL;

1.3
date	2015.12.19.17.55.29;	author reyk;	state Exp;
branches;
next	1.2;
commitid	xe8YS3ftA7mmBwbB;

1.2
date	2015.12.19.13.58.08;	author reyk;	state Exp;
branches;
next	1.1;
commitid	de21MufW7eCZF1cc;

1.1
date	2015.01.08.00.30.08;	author bcook;	state Exp;
branches;
next	;
commitid	KDtICkil0jI83gxu;


desc
@@


1.4
log
@No need for an extra log.h

OK bcook@@
@
text
@/*	$OpenBSD: log.h,v 1.3 2015/12/19 17:55:29 reyk Exp $	*/

/*
 * Copyright (c) 2010 Gilles Chehade <gilles@@poolp.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

void	log_init(int, int);
void	log_procinit(const char *);
void	log_verbose(int);
void	log_warn(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_warnx(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_info(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	log_debug(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
void	logit(int, const char *, ...)
	    __attribute__((__format__ (printf, 2, 3)));
void	vlog(int, const char *, va_list)
	    __attribute__((__format__ (printf, 2, 0)));
__dead void fatal(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
__dead void fatalx(const char *, ...)
	    __attribute__((__format__ (printf, 1, 2)));
@


1.3
log
@Switch and sync to the log.c variant from httpd/relayd/iked/snmpd/vmd.

OK bcook@@ jung@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.2 2015/12/19 13:58:08 reyk Exp $	*/
@


1.2
log
@Move log_sockaddr() to from log.c to util.c as it is a local addition
and actually not a "logging" function.  No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.1 2015/01/08 00:30:08 bcook Exp $	*/
d19 19
a37 16
void		log_init(int);
void		log_verbose(int);
void		log_warn(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_warnx(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_info(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_debug(const char *, ...)
    __attribute__((format (printf, 1, 2)));
void		log_trace(int, const char *, ...)
    __attribute__((format (printf, 2, 3)));
__dead void	fatal(const char *, ...)
    __attribute__((format (printf, 1, 2)));
__dead void	fatalx(const char *, ...)
    __attribute__((format (printf, 1, 2)));
@


1.1
log
@sync log.c from smtpd.

Reduces the number of log.c snowflakes by a little, and gives ntpd a
variadic fatal() function to be used later.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: log.h,v 1.5 2014/07/08 10:30:52 eric Exp $	*/
a34 1
const char *	log_sockaddr(struct sockaddr *sa);
@

