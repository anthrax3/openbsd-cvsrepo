head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.24
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.20
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.22
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.14
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.12
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.8
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.10
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.6
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.4
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.2
	OPENBSD_4_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2016.12.24.14.58.55;	author jca;	state Exp;
branches;
next	1.4;
commitid	dnEV84lDQLJRRZf7;

1.4
date	2010.08.22.21.15.25;	author bluhm;	state Exp;
branches;
next	1.3;

1.3
date	2007.12.13.08.54.05;	author claudio;	state Exp;
branches;
next	1.2;

1.2
date	2007.10.16.08.41.56;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2007.10.08.10.44.51;	author norby;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Print metric and type for "redistribute" in ospf6d -v.

Similar diff as for ospfd, from Remi Locherer.  ok stsp@@
@
text
@/*	$OpenBSD: printconf.c,v 1.4 2010/08/22 21:15:25 bluhm Exp $ */

/*
 * Copyright (c) 2004, 2005 Esben Norby <norby@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/queue.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#include <stdio.h>

#include "ospf6.h"
#include "ospf6d.h"
#include "ospfe.h"
#include "log.h"

void	print_mainconf(struct ospfd_conf *);
const char *print_no(u_int16_t);
void	print_redistribute(struct ospfd_conf *);
void	print_rtlabel(struct ospfd_conf *);
void	print_iface(struct iface *);

void
print_mainconf(struct ospfd_conf *conf)
{
	printf("router-id %s\n", inet_ntoa(conf->rtr_id));

	if (conf->flags & OSPFD_FLAG_NO_FIB_UPDATE)
		printf("fib-update no\n");
	else
		printf("fib-update yes\n");

	if (conf->flags & OSPFD_FLAG_STUB_ROUTER)
		printf("stub router yes\n");

	print_redistribute(conf);
	print_rtlabel(conf);

	printf("spf-delay %u\n", conf->spf_delay);
	printf("spf-holdtime %u\n", conf->spf_hold_time);
}

const char *
print_no(u_int16_t type)
{
	if (type & REDIST_NO)
		return ("no ");
	else
		return ("");
}

void
print_redistribute(struct ospfd_conf *conf)
{
	struct redistribute	*r;

	SIMPLEQ_FOREACH(r, &conf->redist_list, entry) {
		switch (r->type & ~REDIST_NO) {
		case REDIST_STATIC:
			printf("%sredistribute static ", print_no(r->type));
			break;
		case REDIST_CONNECTED:
			printf("%sredistribute connected ", print_no(r->type));
			break;
		case REDIST_LABEL:
			printf("%sredistribute rtlabel %s ",
			    print_no(r->type), rtlabel_id2name(r->label));
			break;
		case REDIST_ADDR:
			printf("%sredistribute %s/%d ",
			    print_no(r->type), log_in6addr(&r->addr),
			    r->prefixlen);
			break;
		case REDIST_DEFAULT:
			printf("%sredistribute default ", print_no(r->type));
			break;
		}
		printf("set { metric %d type %d }\n",
		    (r->metric & LSA_METRIC_MASK),
		    ((r->metric & LSA_ASEXT_E_FLAG) == 0 ? 1 : 2));
	}
}

void
print_rtlabel(struct ospfd_conf *conf)
{
	struct n2id_label	*label;

	TAILQ_FOREACH(label, &rt_labels, entry)
		if (label->ext_tag)
			printf("rtlabel \"%s\" external-tag %u\n",
			    label->name, label->ext_tag);
}

void
print_iface(struct iface *iface)
{
	printf("\tinterface %s {\n", iface->name);

	printf("\t\thello-interval %d\n", iface->hello_interval);
	printf("\t\tmetric %d\n", iface->metric);

	if (iface->cflags & F_IFACE_PASSIVE)
		printf("\t\tpassive\n");
	if (*iface->demote_group)
		printf("\t\tdemote %s\n", iface->demote_group);

	printf("\t\tretransmit-interval %d\n", iface->rxmt_interval);
	printf("\t\trouter-dead-time %d\n", iface->dead_interval);
	printf("\t\trouter-priority %d\n", iface->priority);
	printf("\t\ttransmit-delay %d\n", iface->transmit_delay);

	printf("\t}\n");
}

void
print_config(struct ospfd_conf *conf)
{
	struct area	*area;
	struct iface	*iface;

	printf("\n");
	print_mainconf(conf);
	printf("\n");

	LIST_FOREACH(area, &conf->area_list, entry) {
		printf("area %s {\n", inet_ntoa(area->id));
		if (*area->demote_group)
			printf("\tdemote %s %d\n", area->demote_group,
			area->demote_level);
		LIST_FOREACH(iface, &area->iface_list, entry) {
			print_iface(iface);
		}
		printf("}\n\n");
	}
}
@


1.4
log
@Redistributing the default route with ospf6d did not work correctly.
- kroute.c may not ignore the default route.
- Use the ROUNDUP macro from route/show.c as this one is also correct
  for netmask with prefixlen 0.
- Implement ospf_redistribute and the redistribute parser like
  ospfd.
ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.3 2007/12/13 08:54:05 claudio Exp $ */
d75 1
a75 1
			printf("%sredistribute static\n", print_no(r->type));
d78 1
a78 1
			printf("%sredistribute connected\n", print_no(r->type));
d81 1
a81 1
			printf("%sredistribute rtlabel %s\n",
d85 1
a85 1
			printf("%sredistribute %s/%d\n",
d90 1
a90 1
			printf("%sredistribute default\n", print_no(r->type));
d93 3
@


1.3
log
@Monster commit of stuff I did mostly last month. What it does:
 * removes kif and uses iface for everything interface related.
   This removes unneeded data redundancy which makes the code more complex.
 * adds the link local prefix to struct iface and attaches a list with
   the other prefixes to the struct iface. This is needed to generate the
   link LSA.
 * disconnects struct iface from struct area (the backpointer is gone)
   this will make the reload code a bit easier.
norby@@ agrees with the direction we're heading with this
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.2 2007/10/16 08:41:56 claudio Exp $ */
a71 3
	if (conf->redistribute & REDISTRIBUTE_DEFAULT)
		printf("redistribute default\n");

d88 3
@


1.2
log
@First step at making kroute IPv6 aware. This resulted in many additional
changes -- some are so hairy that I left them out for later by commenting out
larger blocks of code (just grep for XXX if you like to help).
Get it in early so that we can work on.
OK norby@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.1 2007/10/08 10:44:51 norby Exp $ */
d115 1
a115 1
	if (iface->passive)
@


1.1
log
@Welcome ospf6d

The new ospf6d daemon will support OSPFv3, basically OSPF for IPv6 networks.

It is heavily based on ospfd(8), it is more or less a copy and paste of it.
Currently some unneeded stuff has been removed and the trasition from
IPv4 to IPv6 has begun.

ospf6d is not very usefull at the moment, it is being imported to allow more
people to work on it concurrently.

Not yet connected to the builds.

ok claudio@@ dlg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.10 2007/06/19 16:45:15 reyk Exp $ */
d30 1
d89 2
a90 2
			    print_no(r->type), inet_ntoa(r->addr),
			    mask2prefixlen(r->mask.s_addr));
@

