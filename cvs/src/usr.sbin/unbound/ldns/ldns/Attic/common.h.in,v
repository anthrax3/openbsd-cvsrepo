head	1.2;
access;
symbols
	OPENBSD_5_5:1.1.1.4.0.4
	OPENBSD_5_5_BASE:1.1.1.4
	LDNS_1_6_17:1.1.1.4
	LDNS_1_6_16:1.1.1.3
	OPENBSD_5_4:1.1.1.2.0.4
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.2
	OPENBSD_5_3_BASE:1.1.1.2
	LDNS_1_6_13:1.1.1.2
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	LDNS_1_6_12:1.1.1.1
	NLNETLABS:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.03.16.11.43.29;	author sthen;	state dead;
branches;
next	1.1;

1.1
date	2012.03.26.18.08.25;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.03.26.18.08.25;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.08.23.22.28.45;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.09.22.11.58.42;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.02.04.03.48.49;	author brad;	state Exp;
branches;
next	;


desc
@@


1.2
log
@merge conflicts, remove old libldns files
@
text
@/**
 * \file common.h
 *
 * Common definitions for LDNS
 */

/**
 * a Net::DNS like library for C
 *
 * (c) NLnet Labs, 2004-2006
 *
 * See the file LICENSE for the license
 */

#ifndef LDNS_COMMON_H
#define LDNS_COMMON_H

/*
 * The build configuration that is used in the distributed headers,
 * as detected and determined by the auto configure script.
 */
#define LDNS_BUILD_CONFIG_HAVE_SSL         @@ldns_build_config_have_ssl@@
#define LDNS_BUILD_CONFIG_USE_ECDSA        @@ldns_build_config_use_ecdsa@@
#define LDNS_BUILD_CONFIG_HAVE_INTTYPES_H  @@ldns_build_config_have_inttypes_h@@
#define LDNS_BUILD_CONFIG_HAVE_ATTR_FORMAT @@ldns_build_config_have_attr_format@@
#define LDNS_BUILD_CONFIG_HAVE_ATTR_UNUSED @@ldns_build_config_have_attr_unused@@

/*
 * HAVE_STDBOOL_H is not available when distributed as a library, but no build 
 * configuration variables may be used (like those above) because the header
 * is sometimes only available when using special compiler flags to enable the
 * c99 environment. Because we cannot force the usage of this flag, we have to
 * provide a default type. Below what is suggested by the autoconf manual.
 */
/*@@ignore@@*/
/* splint barfs on this construct */
#ifdef HAVE_STDBOOL_H
# include <stdbool.h>
#else
# ifndef HAVE__BOOL
#  ifdef __cplusplus
typedef bool _Bool;
#  else
#   define _Bool signed char
#  endif
# endif
# define bool _Bool
# define false 0
# define true 1
# define __bool_true_false_are_defined 1
#endif
/*@@end@@*/

#if LDNS_BUILD_CONFIG_HAVE_ATTR_FORMAT
#define ATTR_FORMAT(archetype, string_index, first_to_check) \
    __attribute__ ((format (archetype, string_index, first_to_check)))
#else /* !LDNS_BUILD_CONFIG_HAVE_ATTR_FORMAT */
#define ATTR_FORMAT(archetype, string_index, first_to_check) /* empty */
#endif /* !LDNS_BUILD_CONFIG_HAVE_ATTR_FORMAT */

#if defined(__cplusplus)
#define ATTR_UNUSED(x)
#elif LDNS_BUILD_CONFIG_HAVE_ATTR_UNUSED
#define ATTR_UNUSED(x)  x __attribute__((unused))
#else /* !LDNS_BUILD_CONFIG_HAVE_ATTR_UNUSED */
#define ATTR_UNUSED(x)  x
#endif /* !LDNS_BUILD_CONFIG_HAVE_ATTR_UNUSED */

#endif /* LDNS_COMMON_H */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import ldns 1.6.12, needed for Unbound, to work on in-tree.

These are the direct sources from NLnet Labs upstream, minus these:
contrib doc/images examples packaging/fedora

ok deraadt@@ jakob@@
@
text
@@


1.1.1.2
log
@update to ldns 1.6.13, tested by okan@@, thanks (not yet linked to build).
@
text
@d23 1
@


1.1.1.3
log
@update to ldns 1.6.16
@
text
@a25 1
#define LDNS_BUILD_CONFIG_HAVE_SOCKLEN_T   @@ldns_build_config_have_socklen_t@@
a66 4

#if !LDNS_BUILD_CONFIG_HAVE_SOCKLEN_T
typedef int socklen_t;
#endif
@


1.1.1.4
log
@update to ldns 1.6.17, ok sthen@@
@
text
@a26 3
#define LDNS_BUILD_CONFIG_USE_DANE         @@ldns_build_config_use_dane@@
#define LDNS_BUILD_CONFIG_HAVE_B32_PTON    @@ldns_build_config_have_b32_pton@@
#define LDNS_BUILD_CONFIG_HAVE_B32_NTOP    @@ldns_build_config_have_b32_ntop@@
@


