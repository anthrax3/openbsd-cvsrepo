head	1.12;
access;
symbols
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	UNBOUND_1_5_4:1.1.1.9
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	UNBOUND_1_5_2RC1:1.1.1.8
	UNBOUND_1_5_1:1.1.1.7
	UNBOUND_1_5_0:1.1.1.6
	OPENBSD_5_6:1.1.1.5.0.4
	OPENBSD_5_6_BASE:1.1.1.5
	UNBOUND_1_4_22:1.1.1.5
	OPENBSD_5_5:1.1.1.4.0.4
	OPENBSD_5_5_BASE:1.1.1.4
	UNBOUND_1_4_21:1.1.1.4
	OPENBSD_5_4:1.1.1.3.0.4
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.2
	OPENBSD_5_3_BASE:1.1.1.3
	UNBOUND_1_4_18:1.1.1.3
	UNBOUND_1_4_17:1.1.1.2
	OPENBSD_5_2:1.1.1.1.0.2
	OPENBSD_5_2_BASE:1.1.1.1
	UNBOUND_1_4_16:1.1.1.1
	NLNETLABS:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2017.02.21.14.31.41;	author sthen;	state Exp;
branches;
next	1.11;
commitid	KsE38LxaQ5U60CcN;

1.11
date	2017.02.17.18.53.32;	author sthen;	state Exp;
branches;
next	1.10;
commitid	R6rMbeA8TNhmzWB4;

1.10
date	2016.06.22.20.05.40;	author sthen;	state Exp;
branches;
next	1.9;
commitid	EnU0HAX1qep1MppE;

1.9
date	2016.03.05.14.40.35;	author sthen;	state Exp;
branches;
next	1.8;
commitid	ueBpCw2SxWSX3ZZI;

1.8
date	2015.12.15.20.05.03;	author sthen;	state Exp;
branches;
next	1.7;
commitid	zaYkT0Y9LecyMgtm;

1.7
date	2015.11.05.21.29.02;	author sthen;	state Exp;
branches;
next	1.6;
commitid	v9i5hDDSBKqP5pls;

1.6
date	2015.07.16.01.44.00;	author sthen;	state Exp;
branches;
next	1.5;
commitid	kSPbvR6QMA7Gz7zd;

1.5
date	2015.03.11.11.08.53;	author florian;	state Exp;
branches;
next	1.4;
commitid	aEmI9jUwXJPkIwqN;

1.4
date	2014.12.11.16.26.58;	author brad;	state Exp;
branches;
next	1.3;
commitid	K3dlPrh0pAG9NarM;

1.3
date	2014.11.20.00.11.14;	author brad;	state Exp;
branches;
next	1.2;
commitid	8oTbeW6BGSPxqQCQ;

1.2
date	2014.08.20.19.13.03;	author florian;	state Exp;
branches;
next	1.1;
commitid	FJLSuEhCrlIwpsQp;

1.1
date	2012.03.26.18.05.42;	author sthen;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.03.26.18.05.42;	author sthen;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.08.23.22.36.30;	author sthen;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2012.08.23.22.56.27;	author sthen;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.09.22.11.31.06;	author sthen;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.03.16.11.38.22;	author sthen;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2014.11.20.00.00.26;	author brad;	state Exp;
branches;
next	1.1.1.7;
commitid	bB36RwIVwTq8fGsI;

1.1.1.7
date	2014.12.11.16.18.03;	author brad;	state Exp;
branches;
next	1.1.1.8;
commitid	fGLTsCVGImGBxGUi;

1.1.1.8
date	2015.02.17.10.01.51;	author sthen;	state Exp;
branches;
next	1.1.1.9;
commitid	HIel2ZueDMYXVbaV;

1.1.1.9
date	2015.07.16.01.42.20;	author sthen;	state Exp;
branches;
next	;
commitid	kEVXcRu8XDMmCd6c;


desc
@@


1.12
log
@update to unbound-1.6.1 release; only version string changes compared to
the release candidate we had.
@
text
@.TH "unbound" "8" "Feb 21, 2017" "NLnet Labs" "unbound 1.6.1"
.\"
.\" unbound.8 -- unbound manual
.\"
.\" Copyright (c) 2007, NLnet Labs. All rights reserved.
.\"
.\" See LICENSE for the license.
.\"
.\"
.SH "NAME"
.B unbound
\- Unbound DNS validating resolver 1.6.1.
.SH "SYNOPSIS"
.B unbound
.RB [ \-h ]
.RB [ \-d ]
.RB [ \-v ]
.RB [ \-c
.IR cfgfile ]
.SH "DESCRIPTION"
.B Unbound
is a caching DNS resolver.
.P
It uses a built in list of authoritative nameservers for the root zone (.),
the so called root hints.
On receiving a DNS query it will ask the root nameservers for
an answer and will in almost all cases receive a delegation to a top level
domain (TLD) authoritative nameserver.
It will then ask that nameserver for an answer.
It will recursively continue until an answer is found or no answer is
available (NXDOMAIN).
For performance and efficiency reasons that answer is cached for a
certain time (the answer's time\-to\-live or TTL).
A second query for the same name will then be answered from the cache.
Unbound can also do DNSSEC validation.
.P
To use a locally running
.B Unbound
for resolving put
.sp
.RS 6n
nameserver 127.0.0.1
.RE
.sp
into
.IR resolv.conf (5).
.P
If authoritative DNS is needed as well using
.IR nsd (8),
careful setup is required because authoritative nameservers and
resolvers are using the same port number (53).
.P
The available options are:
.TP
.B \-h
Show the version and commandline option help.
.TP
.B \-c\fI cfgfile
Set the config file with settings for unbound to read instead of reading the
file at the default location, @@ub_conf_file@@. The syntax is
described in \fIunbound.conf\fR(5).
.TP
.B \-d
Debug flag: do not fork into the background, but stay attached to
the console.  This flag will also delay writing to the log file until
the thread\-spawn time, so that most config and setup errors appear on
stderr. If given twice or more, logging does not switch to the log file
or to syslog, but the log messages are printed to stderr all the time.
.TP
.B \-v
Increase verbosity. If given multiple times, more information is logged.
This is in addition to the verbosity (if any) from the config file.
.SH "SEE ALSO"
\fIunbound.conf\fR(5),
\fIunbound\-checkconf\fR(8),
\fInsd\fR(8).
.SH "AUTHORS"
.B Unbound
developers are mentioned in the CREDITS file in the distribution.
@


1.11
log
@Update to unbound-1.6.1rc3 - thanks millert@@ and Brad for tests.
@
text
@d1 1
a1 1
.TH "unbound" "8" "Feb 14, 2017" "NLnet Labs" "unbound 1.6.1rc3"
d12 1
a12 1
\- Unbound DNS validating resolver 1.6.1rc3.
@


1.10
log
@update to unbound-1.5.9. (there will be a follow-up commit to cherrypick a
couple of post-1.5.9 patches).

tests from Mark Patruck, danj, matthieu, millert. reads ok to jung, ok florian.
@
text
@d1 1
a1 1
.TH "unbound" "8" "Jun  9, 2016" "NLnet Labs" "unbound 1.5.9"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.9.
@


1.9
log
@update to unbound 1.5.8, ok florian@@ jung@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Mar  2, 2016" "NLnet Labs" "unbound 1.5.8"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.8.
@


1.8
log
@update to Unbound 1.5.7, looks fine to deraadt@@.

Notable addition: implements optional support for qname minimisation
(a privacy improvement; see draft-ietf-dnsop-qname-minimisation-07)
@
text
@d1 1
a1 1
.TH "unbound" "8" "Dec 10, 2015" "NLnet Labs" "unbound 1.5.7"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.7.
@


1.7
log
@merge
@
text
@d1 1
a1 1
.TH "unbound" "8" "Oct 20, 2015" "NLnet Labs" "unbound 1.5.6"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.6.
@


1.6
log
@merge
@
text
@d1 1
a1 1
.TH "unbound" "8" "Jul  9, 2015" "NLnet Labs" "unbound 1.5.4"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.4.
@


1.5
log
@Point people to local-zone and stub-zone in unbound.conf and explain
when this can be used.
tweaks ian@@
OK ratchov@@, sthen@@
seems more useful to millert@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Dec  8, 2014" "NLnet Labs" "unbound 1.5.1"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.1.
d48 4
a51 14
.B Unbound
can serve local zones authoritatively to resolver clients.
This can be used for split horizon setups.
See
.B local\-zone
or
.B stub\-zone
in
.IR unbound.conf (5).
.B Unbound
must not be used to serve authoritative data to the internet at large.
Consider running 
.IR nsd (8)
on a different machine or on a different IP address.
@


1.4
log
@merge conflicts
@
text
@d48 14
a61 4
If authoritative DNS is needed as well using
.IR nsd (8),
careful setup is required because authoritative nameservers and
resolvers are using the same port number (53).
@


1.3
log
@merge conflicts
@
text
@d1 1
a1 1
.TH "unbound" "8" "Nov 18, 2014" "NLnet Labs" "unbound 1.5.0"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.0.
@


1.2
log
@Better explain what unbound is for.
While there fix some nits.
Problem pointed out by deraadt@@
Input jmc@@, schwarze@@
wouter@@ committed a slightly different diff upstream. Pull that on out
of svn and hand merge it.
OK schwarze@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Mar 12, 2014" "NLnet Labs" "unbound 1.4.22"
d12 1
a12 1
\- Unbound DNS validating resolver 1.4.22.
d64 5
a68 3
Debug flag, do not fork into the background, but stay attached to the
console. This flag will also delay writing to the logfile until the
thread\-spawn time. So that most config and setup errors appear on stderr.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.TH "unbound" "8" "Feb  2, 2012" "NLnet Labs" "unbound 1.4.16"
a10 1
.LP
d12 1
a12 1
\- Unbound DNS validating resolver 1.4.16.
a13 1
.LP
d18 1
a18 1
.RB [ \-c 
d21 31
a51 4
.LP
.B Unbound 
is an implementation of a DNS resolver, that does caching and 
DNSSEC validation.
d59 1
a59 1
Set the config file with settings for unbound to read instead of reading the 
d72 3
a74 2
\fIunbound.conf\fR(5), 
\fIunbound\-checkconf\fR(8).
@


1.1.1.1
log
@Import Unbound 1.4.16 to work on in-tree (not yet linked to the build).

These are the direct sources from NLnet Labs upstream, minus these:
compat contrib libunbound/python pythonmod testcode testdata winrc

ok deraadt@@ jakob@@
@
text
@@


1.1.1.2
log
@update to unbound 1.4.17, testing by okan@@ (not yet linked to build;
1.4.18 to follow later).
@
text
@d1 1
a1 1
.TH "unbound" "8" "May 24, 2012" "NLnet Labs" "unbound 1.4.17"
d13 1
a13 1
\- Unbound DNS validating resolver 1.4.17.
@


1.1.1.3
log
@update to unbound 1.4.18
@
text
@d1 1
a1 1
.TH "unbound" "8" "Aug  2, 2012" "NLnet Labs" "unbound 1.4.18"
d13 1
a13 1
\- Unbound DNS validating resolver 1.4.18.
@


1.1.1.4
log
@update to Unbound 1.4.21, ok brad@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Sep 19, 2013" "NLnet Labs" "unbound 1.4.21"
d13 1
a13 1
\- Unbound DNS validating resolver 1.4.21.
@


1.1.1.5
log
@import unbound 1.4.22 upstream sources, ok brad@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Mar 12, 2014" "NLnet Labs" "unbound 1.4.22"
d13 1
a13 1
\- Unbound DNS validating resolver 1.4.22.
@


1.1.1.6
log
@update to Unbound 1.5.0, ok sthen@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Nov 18, 2014" "NLnet Labs" "unbound 1.5.0"
d11 1
d13 1
a13 1
\- Unbound DNS validating resolver 1.5.0.
d15 1
d20 1
a20 1
.RB [ \-c
d23 4
a26 31
.B Unbound
is a caching DNS resolver.
.P
It uses a built in list of authoritative nameservers for the root zone (.),
the so called root hints.
On receiving a DNS query it will ask the root nameservers for
an answer and will in almost all cases receive a delegation to a top level
domain (TLD) authoritative nameserver.
It will then ask that nameserver for an answer.
It will recursively continue until an answer is found or no answer is
available (NXDOMAIN).
For performance and efficiency reasons that answer is cached for a
certain time (the answer's time\-to\-live or TTL).
A second query for the same name will then be answered from the cache.
Unbound can also do DNSSEC validation.
.P
To use a locally running
.B Unbound
for resolving put
.sp
.RS 6n
nameserver 127.0.0.1
.RE
.sp
into
.IR resolv.conf (5).
.P
If authoritative DNS is needed as well using
.IR nsd (8),
careful setup is required because authoritative nameservers and
resolvers are using the same port number (53).
d34 1
a34 1
Set the config file with settings for unbound to read instead of reading the
d39 3
a41 5
Debug flag: do not fork into the background, but stay attached to
the console.  This flag will also delay writing to the log file until
the thread\-spawn time, so that most config and setup errors appear on
stderr. If given twice or more, logging does not switch to the log file
or to syslog, but the log messages are printed to stderr all the time.
d47 2
a48 3
\fIunbound.conf\fR(5),
\fIunbound\-checkconf\fR(8),
\fInsd\fR(8).
@


1.1.1.7
log
@update to Unbound 1.5.1, ok sthen@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Dec  8, 2014" "NLnet Labs" "unbound 1.5.1"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.1.
@


1.1.1.8
log
@Update to unbound 1.5.2rc1, ok brad@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "@@date@@" "NLnet Labs" "unbound @@version@@"
d12 1
a12 1
\- Unbound DNS validating resolver @@version@@.
@


1.1.1.9
log
@update to Unbound 1.5.4, ok florian@@, looks sane deraadt@@
@
text
@d1 1
a1 1
.TH "unbound" "8" "Jul  9, 2015" "NLnet Labs" "unbound 1.5.4"
d12 1
a12 1
\- Unbound DNS validating resolver 1.5.4.
@


