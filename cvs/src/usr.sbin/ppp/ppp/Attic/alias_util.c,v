head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.50
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.46
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.44
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.42
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.40
	OPENBSD_5_0:1.7.0.38
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.36
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.34
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.30
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.32
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.28
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.26
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.24
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.22
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.20
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.18
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.16
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.14
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.12
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.10
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.8
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.03.17.17.15.51;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2002.06.15.08.02.00;	author brian;	state Exp;
branches;
next	1.6;

1.6
date	2001.11.23.11.17.03;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.07.09.32.55;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.11.14.40.26;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.27.01.38.24;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.07.03.26.52;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	98.08.31.08.16.34;	author brian;	state Exp;
branches;
next	;


desc
@@


1.8
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*-
 * Copyright (c) 2001 Charles Mott <cm@@linktel.net>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $OpenBSD: alias_util.c,v 1.7 2002/06/15 08:02:00 brian Exp $
 */

/*
    Alias_util.c contains general utilities used by other functions
    in the packet aliasing module.  At the moment, there are functions
    for computing IP header and TCP packet checksums.

    The checksum routines are based upon example code in a Unix networking
    text written by Stevens (sorry, I can't remember the title -- but
    at least this is a good author).

    Initial Version:  August, 1996  (cjm)

    Version 1.7:  January 9, 1997
         Added differential checksum update function.
*/

/*
Note: the checksum routines assume that the actual checksum word has
been zeroed out.  If the checksum word is filled with the proper value,
then these routines will give a result of zero (useful for testing
purposes);
*/

#include <sys/types.h>
#include <netinet/in_systm.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/tcp.h>

#include "alias.h"
#include "alias_local.h"

u_short
PacketAliasInternetChecksum(u_short *ptr, int nbytes)
{
    int sum, oddbyte;

    sum = 0;
    while (nbytes > 1)
    {
        sum += *ptr++;
        nbytes -= 2;
    }
    if (nbytes == 1)
    {
        oddbyte = 0;
        ((u_char *) &oddbyte)[0] = *(u_char *) ptr;
        ((u_char *) &oddbyte)[1] = 0;
        sum += oddbyte;
    }
    sum = (sum >> 16) + (sum & 0xffff);
    sum += (sum >> 16);
    return(~sum);
}

u_short
IpChecksum(struct ip *pip)
{
    return( PacketAliasInternetChecksum((u_short *) pip,
            (pip->ip_hl << 2)) );

}

u_short
TcpChecksum(struct ip *pip)
{
    u_short *ptr;
    struct tcphdr *tc;
    int nhdr, ntcp, nbytes;
    int sum, oddbyte;

    nhdr = pip->ip_hl << 2;
    ntcp = ntohs(pip->ip_len) - nhdr;

    tc = (struct tcphdr *) ((char *) pip + nhdr);
    ptr = (u_short *) tc;

/* Add up TCP header and data */
    nbytes = ntcp;
    sum = 0;
    while (nbytes > 1)
    {
        sum += *ptr++;
        nbytes -= 2;
    }
    if (nbytes == 1)
    {
        oddbyte = 0;
        ((u_char *) &oddbyte)[0] = *(u_char *) ptr;
        ((u_char *) &oddbyte)[1] = 0;
        sum += oddbyte;
    }

/* "Pseudo-header" data */
    ptr = (u_short *) &(pip->ip_dst);
    sum += *ptr++;
    sum += *ptr;
    ptr = (u_short *) &(pip->ip_src);
    sum += *ptr++;
    sum += *ptr;
    sum += htons((u_short) ntcp);
    sum += htons((u_short) pip->ip_p);

/* Roll over carry bits */
    sum = (sum >> 16) + (sum & 0xffff);
    sum += (sum >> 16);

/* Return checksum */
    return((u_short) ~sum);
}


void
DifferentialChecksum(u_short *cksum, u_short *new, u_short *old, int n)
{
    int i;
    int accumulate;

    accumulate = *cksum;
    for (i=0; i<n; i++)
    {
        accumulate -= *new++;
        accumulate += *old++;
    }

    if (accumulate < 0)
    {
        accumulate = -accumulate;
        accumulate = (accumulate >> 16) + (accumulate & 0xffff);
        accumulate += accumulate >> 16;
        *cksum = (u_short) ~accumulate;
    }
    else
    {
        accumulate = (accumulate >> 16) + (accumulate & 0xffff);
        accumulate += accumulate >> 16;
        *cksum = (u_short) accumulate;
    }
}

@


1.7
log
@Tidy up end of line whitespace
@
text
@d26 1
a26 1
 * $OpenBSD: alias_util.c,v 1.6 2001/11/23 11:17:03 brian Exp $
@


1.6
log
@cmott@@scientech.com -> cm@@linktel.net
Add the UPTIME variable
CCP protocol ``0xffffffff'' -> ``none''
Don't leak memory when expanding command arguments and not exec()ing
Make some functions static
Add the ``log'' command for manual logging
Fix some log text bogons
@
text
@d26 1
a26 1
 * $OpenBSD: alias_util.c,v 1.5 2001/06/07 09:32:55 brian Exp $
d50 1
a50 1
    
d91 1
a91 1
u_short 
d104 1
a104 1
    
@


1.5
log
@Depricate the -alias option (it's been -nat for a long time)
Handle carriage-return/line-feed stuff for ftp natting more generically
Fix an alignment bug when logging DNS traffic
Fix/add some copyrights
@
text
@d2 1
a2 1
 * Copyright (c) 2001 Charles Mott <cmott@@scientech.com>
d26 1
a26 1
 * $OpenBSD$
@


1.4
log
@Merge libalias stuff from FreeBSD:
Ppp only really benefits from a bunch of typo fixes, transparent pptp
support and ftp/EPRT support.
@
text
@d1 28
a41 2

    $OpenBSD: alias_util.c,v 1.3 2000/02/27 01:38:24 brian Exp $
@


1.3
log
@$Id$ -> $OpenBSD$
@
text
@d2 1
a2 1
    Alias_util.h contains general utilities used by other functions
d15 1
a15 1
    $OpenBSD: alias_util.c,v 1.2 2000/01/07 03:26:52 brian Exp $
d20 1
a20 1
been zeroed out.  If the checksum workd is filled with the proper value,
@


1.2
log
@Upgrade from 2.23 -> 2.26
I'll follow up with a list of changes (too big for a commit message IMHO)
@
text
@d15 1
a15 1
    $Id$
@


1.1
log
@Move libalias sources into the ppp directory.
Suggested (many times) by: Theo
@
text
@d14 2
d48 2
a49 1
        *((u_char *) &oddbyte) = *(u_char *) ptr;
d90 2
a91 1
        *((u_char *) &oddbyte) = *(u_char *) ptr;
@

