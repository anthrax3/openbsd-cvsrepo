head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.56
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.52
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.50
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.48
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.46
	OPENBSD_5_0:1.6.0.44
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.42
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.40
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.36
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.38
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.34
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.32
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.30
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.28
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.26
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.24
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.22
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.20
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.18
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.16
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.14
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.12
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.10
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.17.17.15.52;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2000.11.28.22.59.53;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.11.22.13.04;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.27.01.38.29;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.27.01.34.05;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	99.02.06.03.22.49;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	98.08.31.00.22.30;	author brian;	state Exp;
branches;
next	;


desc
@@


1.7
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*-
 * Copyright (c) 1997 Brian Somers <brian@@Awfulhak.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$OpenBSD: tun.h,v 1.6 2000/11/28 22:59:53 brian Exp $
 */

struct tun_data {
  union {
    u_int32_t family;
    u_int32_t timeout;
  } header;
  u_char data[MAX_MRU];
};

struct bundle;

extern void tun_configure(struct bundle *);
@


1.6
log
@Add ``enable/disable'' tcpmssfixup - enabled by default.
@
text
@d26 1
a26 1
 *	$OpenBSD: tun.h,v 1.5 2000/07/11 22:13:04 brian Exp $
@


1.5
log
@Allow a ``timeout secs'' filter option to let specific packet types
effect the idle timer in different ways.

Submitted by: Stefan Esser <se@@freebsd.org>

With adjustments by me to document the option in the man page and to
give the same semantics for outgoing traffic as incoming.

I made the style more consistent in ip.c - this should really have
been done as a separate commit.
@
text
@d26 1
a26 1
 *	$OpenBSD: tun.h,v 1.4 2000/02/27 01:38:29 brian Exp $
d39 1
a39 1
extern void tun_configure(struct bundle *, int);
@


1.4
log
@$Id$ -> $OpenBSD$
@
text
@d26 1
a26 1
 *	$OpenBSD: tun.h,v 1.3 2000/02/27 01:34:05 brian Exp $
d30 4
a33 1
  u_int32_t family;
@


1.3
log
@Fix a bug in end-of-line comment parsing.
Fix callback (don't ``forget'' to call back).
Restructure how we add/remove the address family when
writing/reading the tun device.
Notify the tun device that we've changed PID under FreeBSD.
@
text
@d26 1
a26 1
 *	$Id: tun.h,v 1.2 1999/02/06 03:22:49 brian Exp $
@


1.2
log
@Support RADIUS

While I'm in there, validate pap & chap header IDs if
``idcheck'' is enabled (the default) for other FSM packet
types.

NOTE: This involved integrating the generation of chap
      challenges and the validation of chap responses
      (and commenting what's going on in those routines).
      I currently have no way of testing ppps ability
      to respond to M$Chap CHALLENGEs correctly, so if
      someone could do the honours, it'd be much
      appreciated (it *looks* ok!).

Sponsored by: Internet Business Solutions Ltd., Switzerland
@
text
@d26 1
a26 1
 *	$Id: tun.h,v 1.6 1998/08/26 17:39:35 brian Exp $
d30 1
a30 3
#ifdef __OpenBSD__
  u_int32_t head;
#endif
a32 8

#ifdef __OpenBSD__
#define tun_fill_header(f,proto) do { (f).head = htonl(proto); } while (0)
#define tun_check_header(f,proto) ((f).head == htonl(proto))
#else
#define tun_fill_header(f,proto) do { } while (0)
#define tun_check_header(f,proto) (1)
#endif
@


1.1
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@@

