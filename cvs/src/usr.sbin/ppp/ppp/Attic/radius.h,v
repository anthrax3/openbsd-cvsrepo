head	1.17;
access;
symbols
	OPENBSD_5_5:1.16.0.36
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.32
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.30
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.28
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.26
	OPENBSD_5_0:1.16.0.24
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.22
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.20
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.16
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.18
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.14
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.12
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.10
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.8
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.6
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.4
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.2
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.11.0.14
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.12
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.10
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.8
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.6
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.17
date	2014.03.17.17.15.51;	author deraadt;	state dead;
branches;
next	1.16;

1.16
date	2005.09.21.16.58.34;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2005.09.21.16.28.47;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2005.09.21.02.07.25;	author brad;	state Exp;
branches;
next	1.13;

1.13
date	2005.09.21.01.43.07;	author brad;	state Exp;
branches;
next	1.12;

1.12
date	2005.09.21.01.16.05;	author brad;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.17.01.14.08;	author brian;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.15.08.02.01;	author brian;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.15.01.33.23;	author brian;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.16.14.27.21;	author brian;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.16.01.13.39;	author brian;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.01.22.41.23;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.24.01.06.05;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	2000.08.28.22.44.42;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.27.01.38.28;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.27.00.21.09;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	99.02.06.03.22.44;	author brian;	state Exp;
branches;
next	;


desc
@@


1.17
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*
 * Copyright 1999 Internet Business Solutions Ltd., Switzerland
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$OpenBSD: radius.h,v 1.16 2005/09/21 16:58:34 brad Exp $
 */

#define	MPPE_POLICY_ALLOWED	1
#define	MPPE_POLICY_REQUIRED	2

#define	MPPE_TYPE_40BIT		2
#define	MPPE_TYPE_128BIT	4

struct radius {
  struct fdescriptor desc;	/* We're a sort of (selectable) fdescriptor */
  struct {
    int fd;			/* We're selecting on this */
    struct rad_handle *rad;	/* Using this to talk to our lib */
    struct pppTimer timer;	/* for this long */
    struct authinfo *auth;	/* Tell this about success/failure */
  } cx;
  unsigned valid : 1;           /* Is this structure valid ? */
  unsigned vj : 1;              /* FRAMED Compression */
  struct in_addr ip;            /* FRAMED IP */
  struct in_addr mask;          /* FRAMED Netmask */
  unsigned long mtu;            /* FRAMED MTU */
  unsigned long sessiontime;    /* Session-Timeout */
  char *filterid;		/* FRAMED Filter Id */
  struct sticky_route *routes;  /* FRAMED Routes */
  char *msrepstr;		/* MS-CHAP2-Response */
  char *repstr;			/* Reply-Message */
  char *errstr;			/* Error-Message */
#ifndef NOINET6
  uint8_t *ipv6prefix;		/* FRAMED IPv6 Prefix */
  struct sticky_route *ipv6routes;  /* FRAMED IPv6 Routes */
#endif
  struct {
    int policy;			/* MPPE_POLICY_* */
    int types;			/* MPPE_TYPE_*BIT bitmask */
    char *recvkey;
    size_t recvkeylen;
    char *sendkey;
    size_t sendkeylen;
  } mppe;
  struct {
    char file[PATH_MAX];	/* Radius config file */
  } cfg;
  struct {
    struct pppTimer timer;	/* for this long */
    int interval;
  } alive;
};

struct radacct {
  struct radius *rad_parent;	/* "Parent" struct radius stored in bundle */
  char user_name[AUTHLEN];	/* Session User-Name */
  char session_id[256];		/* Unique session ID */
  char multi_session_id[51];	/* Unique MP session ID */
  int  authentic;		/* How the session has been authenticated */
  u_short proto;		/* Protocol number */
  union {
    struct {
      struct in_addr addr;
      struct in_addr mask;
    } ip;
#ifndef NOINET6
    struct {
      u_char ifid[8];
    } ipv6;
#endif
  } peer;
};

#define descriptor2radius(d) \
  ((d)->type == RADIUS_DESCRIPTOR ? (struct radius *)(d) : NULL)

struct bundle;

extern void radius_Flush(struct radius *);
extern void radius_Init(struct radius *);
extern void radius_Destroy(struct radius *);

extern void radius_Show(struct radius *, struct prompt *);
extern void radius_StartTimer(struct bundle *);
extern void radius_StopTimer(struct radius *);
extern int radius_Authenticate(struct radius *, struct authinfo *,
                               const char *, const char *, int,
                               const char *, int);
extern void radius_Account_Set_Ip(struct radacct *, struct in_addr *,
				  struct in_addr *);
#ifndef NOINET6
extern void radius_Account_Set_Ipv6(struct radacct *, u_char *);
#endif
extern void radius_Account(struct radius *, struct radacct *,
                           struct datalink *, int, struct pppThroughput *);

/* An (int) parameter to radius_Account, from radlib.h */
#if !defined(RAD_START)
#define RAD_START	1
#define RAD_STOP	2
#endif

#define RAD_ALIVE	3

/* Get address from NAS pool */
#define RADIUS_INADDR_POOL	htonl(0xfffffffe)	/* 255.255.255.254 */
@


1.16
log
@Add a radius_Flush() function that waits for the response (or timeout) to
any pending RADIUS transaction.  Use this before sending RAD_STOP RADIUS
messages so that we definitely ``stop'' the session.

It was discovered that sometimes when the link timed out, we got lucky
enough to have an un-ACK'd RADIUS accounting transaction in progress,
resulting in the RAD_STOP message failing to send.

From brian FreeBSD
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.15 2005/09/21 16:28:47 brad Exp $
@


1.15
log
@Support a ``set rad_alive N'' command to enable periodic RADIUS accounting
information being sent to the RADIUS server.

Logging of RADIUS accounting information moves to a ``set log [+-]radius''
level, along with the RADIUS alive info.

From brian FreeBSD
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.14 2005/09/21 02:07:25 brad Exp $
d100 1
@


1.14
log
@name union.

From ume FreeBSD
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.13 2005/09/21 01:43:07 brad Exp $
d69 4
d104 2
d122 2
@


1.13
log
@Do RADIUS accounting on IPV6CP.

From ume FreeBSD
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.12 2005/09/21 01:16:05 brad Exp $
d88 1
a88 1
  };
@


1.12
log
@Install routes specified by Framed-IPv6-Route.  Since the format
of Framed-IPv6-Route is user defined, it follows Framed-IP-route.

From ume FreeBSD
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.11 2002/06/17 01:14:08 brian Exp $
d77 12
a88 2
  struct in_addr ip;
  struct in_addr mask;
d103 5
d109 1
a109 2
                           struct datalink *, int, struct in_addr *,
                           struct in_addr *, struct pppThroughput *);
@


1.11
log
@Compensate for dodgy Win98/WinME MSCHAPv2 responses later in the code
path... after we've talked to any RADIUS servers involved, so that we
haven't touched the data before it gets to the server.
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.10 2002/06/15 08:02:01 brian Exp $
d54 4
@


1.10
log
@Tidy up end of line whitespace
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.9 2002/06/15 01:33:23 brian Exp $
d88 1
a88 1
                               const char *, int, const char *, int);
@


1.9
log
@Understand MS-MPPE-Encryption-Policy, MS-MPPE-Encryption-Types,
MS-MPPE-Recv-Key and MS-MPPE-Send-Key RADIUS attributes, making
MPPE work properly with RADIUS & MSCHAPv2.

Do something with the Filter-Id RADIUS attribute.

Handle MS-CHAP-Error and MS-CHAP2-Success correctly rather than
bogusly including the Ident field in the text passed back to the
client.

Bump the max FSM option length to 52 (was 20)

Add some missing includes.
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.8 2002/05/16 14:27:21 brian Exp $
d89 1
a89 1
extern void radius_Account(struct radius *, struct radacct *, 
@


1.8
log
@Handle MS-CHAPv2 authentication correctly via the RADIUS server (if it's
configured).

This doesn't yet work with MPPE.  More to follow.
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.7 2002/05/16 01:13:39 brian Exp $
d29 6
d54 8
@


1.7
log
@o Bump the version number
o Tidy up includes
o Fix macros in auth.h
o Insist on context for ``set mru'' in MP mode
o Usage -> usage
o Don't intialise after processing config requests
o Show FSM values for ConfigAcks
o Make ident output prettier
o Fix some Id keywords
o Handle RADIUS pool address 255.255.255.254
o Support RADIUS Session-Timeout attributes
o Support RADIUS Reply-Message attributes
o Support RADIUS CHAP-Error attributes
o Store RADIUS Filter-Id attributes
o Provide a NAS-Port-Type attribute to RADIUS servers
o Provide a better NAS-Port attribute to RADIUS servers
o Support MS-CHAP with RADIUS
o Improve FSM decode functions
o Support an OCTETSIN variable
o Support an OCTETSOUT variable
o Support an PACKETSIN variable
o Support an PACKETSOUT variable
o Support an IPOCTETSIN variable
o Support an IPOCTETSOUT variable
o Support an IPPACKETSIN variable
o Support an IPPACKETSOUT variable
o Support an IPV6OCTETSIN variable
o Support an IPV6OCTETSOUT variable
o Support an IPV6PACKETSIN variable
o Support an IPV6PACKETSOUT variable
o Support a SOCKNAME variable
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.6 2001/04/01 22:41:23 brian Exp $
d45 1
d72 3
a74 3
extern void radius_Authenticate(struct radius *, struct authinfo *,
                                const char *, const char *, int,
                                const char *, int);
@


1.6
log
@Don't assume challenges and responses don't contain embedded '\0's.

Mschapv2 response generation may produce embedded NULs... causing
us to send a bogus response to the radius server and end up
failing the client's valid response.

Problem pointed out by: Eugene Vigovskiy <vigov@@com2com.ru>
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.5 2001/03/24 01:06:05 brian Exp $
d42 2
d45 2
d83 3
@


1.5
log
@Remove some unprotected prototype variable names
MAXPATHLEN -> PATH_MAX
Handle ENOENT from opening /dev/tun* properly
Rename _PATH_PPP -> PPP_CONFDIR and allow it to be redefined at compile time
Reduce MIN_LQRPERIOD and MIN_FSMRETRY to 1 second
Be smarter about identifying sockets on stdin
Allow primary DNS IP negotiation when the secondary IP has been rejected
Fix the call to PacketAliasProxyRule() properly.
Add/fix some comments
Fix man page markups; ru@@FreeBSD.org
Use localhost when no hostname is configured
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.4 2000/08/28 22:44:42 brian Exp $
d68 2
a69 1
                                const char *, const char *, const char *);
@


1.4
log
@Support radius accounting, and add a packet count to throughput
statistics as a side effect.

Submitted by: Marcin Cieslak <saper@@system.pl>

with some tweaks to RAD_ACCT_SESSION_ID and
RAD_ACCT_MULTI_SESSION_ID generation by me.
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.3 2000/02/27 01:38:28 brian Exp $
d44 1
a44 1
    char file[MAXPATHLEN];	/* Radius config file */
@


1.3
log
@$Id$ -> $OpenBSD$
@
text
@d26 1
a26 1
 *	$OpenBSD: radius.h,v 1.2 2000/02/27 00:21:09 brian Exp $
d48 10
d69 9
@


1.2
log
@When we stop a timer that's the first in the timer list, ensure
that we adjust that timers `rest' value (with the current getitimer()
values) before using that to adjust the next items `rest' value.
After adjusting that value, restart the timer service so that we've
now got the correct setitimer() values.
When adjusting timer::rest, round to the closest TICKUNIT usecs
value.

struct descriptor -> struct fdescriptor (to avoid header polution in
NetBSD).

Introduce LOCALNAT and LOCALRAD defines.

The interface list that comes back from the PF_ROUTE/NET_RT_IFLIST mib
is aligned.  Teach this to ``show route'' and clean up some of the
sockaddr parsing routines.

Add ``set log dns'' to log DNS QUERY packets.

When ppp can't identify the relevant name, don't use "???", use
<nnn> or <0xnnn> instead.

Don't ``break'' when we come accross a non-RTM_IFINFO type
entry in the block returned by the NET_RT_IFLIST mib,
continue instead.

Correct UN_SIZE definition; ben@@scientia.demon.co.uk
@
text
@d26 1
a26 1
 *	$Id: radius.h,v 1.1 1999/02/06 03:22:44 brian Exp $
@


1.1
log
@Support RADIUS

While I'm in there, validate pap & chap header IDs if
``idcheck'' is enabled (the default) for other FSM packet
types.

NOTE: This involved integrating the generation of chap
      challenges and the validation of chap responses
      (and commenting what's going on in those routines).
      I currently have no way of testing ppps ability
      to respond to M$Chap CHALLENGEs correctly, so if
      someone could do the honours, it'd be much
      appreciated (it *looks* ok!).

Sponsored by: Internet Business Solutions Ltd., Switzerland
@
text
@d26 1
a26 1
 *	$Id: radius.h,v 1.1 1999/01/28 01:56:34 brian Exp $
d30 1
a30 1
  struct descriptor desc;	/* We're a sort of (selectable) descriptor */
@

