head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.38
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.30
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.32
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.6
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.17.17.15.51;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2012.01.23.09.13.16;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.15.08.01.59;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.02.00.53.47;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	2000.10.06.00.26.43;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.27.01.38.24;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	98.08.31.08.16.32;	author brian;	state Exp;
branches;
next	;


desc
@@


1.7
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*-
 * Copyright (c) 1998 Brian Somers <brian@@Awfulhak.org>
 *                    with the aid of code written by
 *                    Junichi SATOH <junichi@@astec.co.jp> 1996, 1997.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$OpenBSD: alias_cuseeme.c,v 1.6 2012/01/23 09:13:16 nicm Exp $
 */

#include <sys/types.h>
#include <netinet/in_systm.h>
#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/udp.h>

#include "alias_local.h"

/* CU-SeeMe Data Header */
struct cu_header {
    u_int16_t dest_family;
    u_int16_t dest_port;
    u_int32_t  dest_addr;
    int16_t family;
    u_int16_t port;
    u_int32_t addr;
    u_int32_t seq;
    u_int16_t msg;
    u_int16_t data_type;
    u_int16_t packet_len;
};

/* Open Continue Header */
struct oc_header {
    u_int16_t client_count;    /* Number of client info structs */
    u_int32_t seq_no;
    char user_name[20];
    char reserved[4];        /* flags, version stuff, etc */
};

/* client info structures */
struct client_info {
    u_int32_t address;          /* Client address */
    char reserved[8];        /* Flags, pruning bitfield, packet counts etc */
};

void
AliasHandleCUSeeMeOut(struct ip *pip, struct alias_link *link)
{
  struct udphdr *ud;

  ud = (struct udphdr *)((char *)pip + (pip->ip_hl << 2));
  if (ntohs(ud->uh_ulen) - sizeof(struct udphdr) >= sizeof(struct cu_header)) {
    struct cu_header *cu;
#ifndef NO_FW_PUNCH
    struct alias_link *cu_link;
#endif

    cu = (struct cu_header *)(ud + 1);
    if (cu->addr)
      cu->addr = (u_int32_t)GetAliasAddress(link).s_addr;

#ifndef NO_FW_PUNCH
    cu_link = FindUdpTcpOut(pip->ip_src, GetDestAddress(link),
                            ud->uh_dport, 0, IPPROTO_UDP, 1);
    if (cu_link)
        PunchFWHole(cu_link);
#endif
  }
}

void
AliasHandleCUSeeMeIn(struct ip *pip, struct in_addr original_addr)
{
  struct in_addr alias_addr;
  struct udphdr *ud;
  struct cu_header *cu;
  struct oc_header *oc;
  struct client_info *ci;
  char *end;
  int i;

  alias_addr.s_addr = pip->ip_dst.s_addr;
  ud = (struct udphdr *)((char *)pip + (pip->ip_hl << 2));
  cu = (struct cu_header *)(ud + 1);
  oc = (struct oc_header *)(cu + 1);
  ci = (struct client_info *)(oc + 1);
  end = (char *)ud + ntohs(ud->uh_ulen);

  if ((char *)oc <= end) {
    if(cu->dest_addr)
      cu->dest_addr = (u_int32_t)original_addr.s_addr;
    if(ntohs(cu->data_type) == 101)
      /* Find and change our address */
      for(i = 0; (char *)(ci + 1) <= end && i < oc->client_count; i++, ci++)
        if(ci->address == (u_int32_t)alias_addr.s_addr) {
          ci->address = (u_int32_t)original_addr.s_addr;
          break;
        }
  }
}
@


1.6
log
@Trim unused variables, from Michael W. Bombardieri.

ok yasuoka
@
text
@d28 1
a28 1
 *	$OpenBSD: alias_cuseeme.c,v 1.5 2002/06/15 08:01:59 brian Exp $
@


1.5
log
@Tidy up end of line whitespace
@
text
@d28 1
a28 1
 *	$OpenBSD: alias_cuseeme.c,v 1.4 2000/11/02 00:53:47 brian Exp $
d75 1
d77 1
d83 1
a85 2

#ifndef NO_FW_PUNCH
@


1.4
log
@Improvements for ICMP and GRE/PPTP; FreeBSD
@
text
@d28 1
a28 1
 *	$OpenBSD: alias_cuseeme.c,v 1.3 2000/10/06 00:26:43 brian Exp $
d83 1
a83 1
                         
@


1.3
log
@Fix byte ordering for CuSeeMe and add some tidy-ups; FreeBSD
@
text
@d28 1
a28 1
 *	$OpenBSD: alias_cuseeme.c,v 1.2 2000/02/27 01:38:24 brian Exp $
d82 1
a82 1
                            ud->uh_dport, 0, IPPROTO_UDP);
@


1.2
log
@$Id$ -> $OpenBSD$
@
text
@d28 1
a28 1
 *	$OpenBSD: alias_cuseeme.c,v 1.1 1998/08/31 08:16:32 brian Exp $
d73 1
a73 1
  if(ud->uh_ulen >= sizeof(struct cu_header)) {
d107 1
a107 1
  end = (char *)cu + ud->uh_ulen;
@


1.1
log
@Move libalias sources into the ppp directory.
Suggested (many times) by: Theo
@
text
@d28 1
a28 1
 *	$Id: alias_cuseeme.c,v 1.1 1998/08/31 00:22:04 brian Exp $
@

