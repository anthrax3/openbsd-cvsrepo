head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.60
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.56
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.54
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.52
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.50
	OPENBSD_5_0:1.4.0.48
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.46
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.44
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.40
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.42
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.38
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.36
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.34
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.32
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.30
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.28
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.26
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.24
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.22
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.20
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.18
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.16
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.14
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2014.03.17.17.15.52;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2000.02.27.01.38.29;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.07.03.26.56;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	99.06.05.21.36.04;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	99.05.12.10.03.55;	author brian;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*-
 * Copyright (c) 1999 Brian Somers <brian@@Awfulhak.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$OpenBSD: udp.h,v 1.4 2000/02/27 01:38:29 brian Exp $
 */

struct physical;
struct device;

extern struct device *udp_Create(struct physical *);
extern struct device *udp_iov2device(int, struct physical *,
                                     struct iovec *, int *, int, int *, int *);
extern int udp_DeviceSize(void);
@


1.4
log
@$Id$ -> $OpenBSD$
@
text
@d26 1
a26 1
 *	$OpenBSD: udp.h,v 1.3 2000/01/07 03:26:56 brian Exp $
@


1.3
log
@Upgrade from 2.23 -> 2.26
I'll follow up with a list of changes (too big for a commit message IMHO)
@
text
@d26 1
a26 1
 *	$Id: udp.h,v 1.2 1999/06/05 21:36:04 brian Exp $
@


1.2
log
@Correct the way ppp transfers links on the server side in MP
mode by padding out the ``struct device'' to the maximum
device size.
Bump the ppp version number to indicate the transfer format
change.

This should make MP over tty and udp devices functional again.
@
text
@d26 1
a26 1
 *	$Id: udp.h,v 1.1 1999/05/12 10:03:55 brian Exp $
d34 1
a34 1
                                     struct iovec *, int *, int);
@


1.1
log
@Allow ``host:port/udp'' devices and support ``host:port/tcp'' as
being the same as the previous (still supported) ``host:port''
syntax for tcp socket devices.

A udp device uses synchronous ppp rather than async, and avoids
the double-retransmit overhead that comes with ppp over tcp (it's
usually a bad idea to transport IP over a reliable transport that
itself is using an unreliable transport).  PPP over UDP provides
througput of ** 1.5Mb per second ** with all compression disabled,
maxing out a PPro/200 when running ppp twice, back-to-back.

This proves that PPPoE is plausable in userland....

This change adds a few more handler functions to struct device and
allows derivations of struct device (which may contain their own
data etc) to pass themselves through the unix domain socket for MP.
** At last **, struct physical has lost all the tty crud !

iov2physical() is now smart enough to restore the correct stack of
layers so that MP servers will work again.

The version number has bumped as our MP link transfer contents have
changed (they now may contain a `struct device').

Don't extract the protocol twice in MP mode (resulting in protocol
rejects for every MP packet).  This was broken with my original
layering changes.

Add ``Physical'' and ``Sync'' log levels for logging the relevent
raw packets and add protocol-tracking LogDEBUG stuff in various
LayerPush & LayerPull functions.

Assign our physical device name for incoming tcp connections by
calling getpeername().

Assign our physical device name for incoming udp connections from
the address retrieved by the first recvfrom().
@
text
@d26 1
a26 1
 *	$Id: tcp.h,v 1.1 1999/05/08 11:07:45 brian Exp $
d35 1
@

