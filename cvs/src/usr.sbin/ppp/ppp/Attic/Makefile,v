head	1.33;
access;
symbols
	OPENBSD_5_5:1.32.0.4
	OPENBSD_5_5_BASE:1.32
	OPENBSD_5_4:1.30.0.2
	OPENBSD_5_4_BASE:1.30
	OPENBSD_5_3:1.29.0.10
	OPENBSD_5_3_BASE:1.29
	OPENBSD_5_2:1.29.0.8
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.6
	OPENBSD_5_0:1.29.0.4
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.29.0.2
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.28.0.20
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.16
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.28.0.18
	OPENBSD_4_6_BASE:1.28
	OPENBSD_4_5:1.28.0.14
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.28.0.12
	OPENBSD_4_4_BASE:1.28
	OPENBSD_4_3:1.28.0.10
	OPENBSD_4_3_BASE:1.28
	OPENBSD_4_2:1.28.0.8
	OPENBSD_4_2_BASE:1.28
	OPENBSD_4_1:1.28.0.6
	OPENBSD_4_1_BASE:1.28
	OPENBSD_4_0:1.28.0.4
	OPENBSD_4_0_BASE:1.28
	OPENBSD_3_9:1.28.0.2
	OPENBSD_3_9_BASE:1.28
	OPENBSD_3_8:1.27.0.2
	OPENBSD_3_8_BASE:1.27
	OPENBSD_3_7:1.26.0.6
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.4
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.26.0.2
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.25.0.6
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.25.0.4
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.25.0.2
	OPENBSD_3_2_BASE:1.25
	OPENBSD_3_1:1.24.0.2
	OPENBSD_3_1_BASE:1.24
	OPENBSD_3_0:1.23.0.2
	OPENBSD_3_0_BASE:1.23
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_9:1.20.0.2
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4;
locks; strict;
comment	@# @;


1.33
date	2014.03.17.17.15.51;	author deraadt;	state dead;
branches;
next	1.32;

1.32
date	2014.01.18.05.54.51;	author martynas;	state Exp;
branches;
next	1.31;

1.31
date	2013.08.20.09.14.32;	author mpi;	state Exp;
branches;
next	1.30;

1.30
date	2013.07.10.15.56.56;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.15.10.18.42;	author jsg;	state Exp;
branches;
next	1.28;

1.28
date	2005.09.22.00.08.24;	author brad;	state Exp;
branches;
next	1.27;

1.27
date	2005.07.26.01.32.24;	author brad;	state Exp;
branches;
next	1.26;

1.26
date	2004.01.24.18.43.22;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2002.05.11.00.20.21;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2002.03.31.02.38.49;	author brian;	state Exp;
branches;
next	1.23;

1.23
date	2001.09.08.20.22.37;	author ho;	state Exp;
branches;
next	1.22;

1.22
date	2001.08.19.23.22.17;	author brian;	state Exp;
branches;
next	1.21;

1.21
date	2001.08.09.02.26.26;	author jsyn;	state Exp;
branches;
next	1.20;

1.20
date	2000.11.28.22.59.52;	author brian;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.02.00.54.32;	author brian;	state Exp;
branches;
next	1.18;

1.18
date	2000.09.14.22.02.49;	author brian;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.18.00.06.25;	author brian;	state Exp;
branches;
next	1.16;

1.16
date	2000.08.13.22.05.47;	author brian;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.23.09.47.04;	author brian;	state Exp;
branches;
next	1.14;

1.14
date	2000.02.27.01.38.24;	author brian;	state Exp;
branches;
next	1.13;

1.13
date	2000.02.27.00.21.05;	author brian;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.07.03.26.52;	author brian;	state Exp;
branches;
next	1.11;

1.11
date	99.07.15.02.10.31;	author brian;	state Exp;
branches;
next	1.10;

1.10
date	99.07.15.02.04.06;	author brian;	state Exp;
branches;
next	1.9;

1.9
date	99.05.12.10.03.48;	author brian;	state Exp;
branches;
next	1.8;

1.8
date	99.05.08.11.06.32;	author brian;	state Exp;
branches;
next	1.7;

1.7
date	99.03.08.01.40.21;	author brian;	state Exp;
branches;
next	1.6;

1.6
date	99.02.06.03.22.30;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	98.10.29.02.21.44;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	98.09.17.00.47.13;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	98.08.31.08.16.25;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	98.08.31.00.43.56;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.08.31.00.22.14;	author brian;	state Exp;
branches;
next	;


desc
@@


1.33
log
@ppp(8) goes to the bit bucket in the sky
@
text
@#	$OpenBSD: Makefile,v 1.32 2014/01/18 05:54:51 martynas Exp $

PROG=	ppp
SRCS=	alias.c alias_cuseeme.c alias_db.c alias_ftp.c alias_irc.c \
	alias_nbt.c alias_pptp.c alias_proxy.c alias_skinny.c alias_smedia.c \
	alias_util.c acf.c arp.c async.c auth.c bundle.c cbcp.c ccp.c chap.c \
	chap_ms.c chat.c command.c datalink.c deflate.c defs.c exec.c filter.c \
	fsm.c hdlc.c iface.c ip.c ipcp.c ipv6cp.c iplist.c lcp.c link.c log.c \
	lqr.c main.c mbuf.c mp.c mppe.c ncp.c ncpaddr.c nat_cmd.c pap.c physical.c \
	pred.c probe.c prompt.c proto.c radius.c radlib.c route.c server.c \
	sig.c slcompress.c systems.c sync.c tcp.c tcpmss.c throughput.c \
	timer.c tty.c tun.c udp.c vjcomp.c
CFLAGS+=-Wall -DNO_FW_PUNCH -DNOI4B -DNONETGRAPH
CFLAGS+=-DLOCALNAT -DLOCALRAD
LDADD+= -lcrypto -lutil -lz
DPADD+=	${LIBUTIL} ${LIBZ} ${LIBCRYPTO}
.if defined(NOSUID) || defined(PPP_NOSUID)
BINMODE=554
.else
BINMODE=4550
BINOWN=	root
.endif
BINGRP=	network
MAN=	ppp.8

.if defined(NOSUID) || defined(PPP_NOSUID)
CFLAGS+=-DNOSUID
.else
SRCS+=	id.c
.endif

CDIAGFLAGS+=	-Wpointer-arith
CDIAGFLAGS+=	-Wno-uninitialized
CDIAGFLAGS+=	-Wstrict-prototypes
CDIAGFLAGS+=	-Wmissing-prototypes
CDIAGFLAGS+=	-Wunused
#CDIAGFLAGS+=	-Wsign-compare
#CDIAGFLAGS+=	-Wshadow

.include <bsd.prog.mk>
@


1.32
log
@Remove -Wbounded:  it is now the compiler default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2013/08/20 09:14:32 mpi Exp $
@


1.31
log
@tedu netnatm and ueagle(4).

ok mikeb@@, sthen@@, tedu@@ (implied), doc bits ok jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2013/07/10 15:56:56 jmc Exp $
a37 1
CDIAGFLAGS+=	-Wbounded
@


1.30
log
@no need for this file to be .m4 any longer; i'm actually following suit
to the same move as made by, i think, freebsd, but i can;t for the life of
me find the corresponding commit;

ok/help espie
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2010/10/15 10:18:42 jsg Exp $
a24 6
NOATM=	/usr/include/netnatm required
.if defined(NOATM)
CFLAGS+=-DNOATM
.else
SRCS+=	atm.c
.endif
@


1.29
log
@Switch the remaining users of libdes in src to libcrypto,
telnet portion partially from the latest heimdal.

ok mikeb@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2005/09/22 00:08:24 brad Exp $
a14 1
M4FLAGS=-DLOCALNAT -DLOCALRAD
a24 7
CLEANFILES=	ppp.8

.SUFFIXES: .8 .8.m4

.8.m4.8:
	m4 ${M4FLAGS} ${.IMPSRC} >${.TARGET}

@


1.28
log
@add a few flags to CDIAGFLAGS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2005/07/26 01:32:24 brad Exp $
d16 2
a17 2
LDADD+= -lcrypto -ldes -lutil -lz
DPADD+=	${LIBDES} ${LIBUTIL} ${LIBZ} ${LIBCRYPTO}
@


1.27
log
@Add Cisco Skinny Station Protocol translation support to libalias
and supporting applications (ppp).

From marcus FreeBSD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2004/01/24 18:43:22 deraadt Exp $
d45 9
@


1.26
log
@since other users cannot exec them, do not make it readable either
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2002/05/11 00:20:21 espie Exp $
d5 5
a9 5
	alias_nbt.c alias_pptp.c alias_proxy.c alias_smedia.c alias_util.c \
	acf.c arp.c async.c auth.c bundle.c cbcp.c ccp.c chap.c chap_ms.c \
	chat.c command.c datalink.c deflate.c defs.c exec.c filter.c fsm.c \
	hdlc.c iface.c ip.c ipcp.c ipv6cp.c iplist.c lcp.c link.c log.c lqr.c \
	main.c mbuf.c mp.c mppe.c ncp.c ncpaddr.c nat_cmd.c pap.c physical.c \
@


1.25
log
@Add missing libraries to bsd.prog.mk (mostly kerberosV)
Use them in DPADD throughout the tree.
Fix a few mispells (LIBMATH -> LIBM...)
Wipe obsolete lib (LIBRESOLV)
Sort added missing libraries, move obsolete stuff apart.
Synch documentation in bsd.README

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2002/03/31 02:38:49 brian Exp $
d21 1
a21 1
BINMODE=4554
@


1.24
log
@Change ``ifdef HAVE_DES'' to ``ifndef NODES'' for consistency.
Notice if the IP header length changes when doing transparent proxying; FreeBSD
Handle domain\\user entries in ppp.secret
Add some mp_Down() calls to ensure that our multi-link NCP goes away properly
Miscellaneous #ifdef'd out FreeBSD changes (mostly netgraph stuff).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2001/09/08 20:22:37 ho Exp $
d17 1
a17 1
DPADD+=	${LIBDES} ${LIBUTIL} ${LIBZ}
@


1.23
log
@The generated ppp.8 should be removed by 'make clean'. brian@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2001/08/19 23:22:17 brian Exp $
d13 1
a13 1
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH -DNOI4B -DNONETGRAPH
@


1.22
log
@Add IPv6 support.

IPV6CP support is crude for now, and hasn't been tested against
any other implementations.  RADIUS and IPv6 are independent of
eachother for now.  ppp.linkup/ppp.linkdown aren't currently used
by IPV6CP

Understand all protocols(5) in filter rules rather than only a select
few.

Allow a mask specification for the ``delete'' command.  It's now
possible to specifically delete one of two conflicting routes.

When creating and deleting proxy arp entries, do it for all IPv4
interface addresses rather than doing it just for the ``current''
peer address.

When iface-alias isn't in effect, don't blow away manually (via ``iface
add'') added interface addresses.

When listening on a tcp server (diagnostic) socket, bind so that a
tcp46 socket is created -- allowing both IPv4 and IPv6 connections.

When displaying ICMP traffic, don't display the icmp type twice.

When display traffic, display at least some information about unrecognised
traffic.

Bump version
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2001/08/09 02:26:26 jsyn Exp $
d26 1
@


1.21
log
@add m4 preprocessing based on enabled features; ok brian@@, input
from todd@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2000/11/28 22:59:52 brian Exp $
d8 5
a12 5
	hdlc.c iface.c ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c \
	main.c mbuf.c mp.c mppe.c nat_cmd.c pap.c physical.c pred.c probe.c \
	prompt.c proto.c radius.c radlib.c route.c server.c sig.c \
	slcompress.c systems.c sync.c tcp.c tcpmss.c throughput.c timer.c \
	tty.c tun.c udp.c vjcomp.c
@


1.20
log
@Add ``enable/disable'' tcpmssfixup - enabled by default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2000/11/02 00:54:32 brian Exp $
d15 1
d26 5
@


1.19
log
@Some whitespace changes
Some slightly better diagnostics
Add MPPE and chapv2 support; Ustimenko Semen <semen@@iclub.nsu.ru>
Bump the version number
Add ``all'' logging; perhaps@@yes.no
Handle quoted hash characters properly
Honour ``nat deny_incoming'' properly
Fix radius accounting initialisation
Moan about tcsetattr() failures
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2000/09/14 22:02:49 brian Exp $
d11 2
a12 2
	slcompress.c systems.c sync.c tcp.c throughput.c timer.c tty.c tun.c \
	udp.c vjcomp.c
@


1.18
log
@Support PPPoATM, disabled for now as /usr/include/netnatm doesn't exist

Submitted by: Jakob Stoklund Olesen <stoklund@@taxidriver.dk>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2000/08/18 00:06:25 brian Exp $
d9 4
a12 3
	main.c mbuf.c mp.c nat_cmd.c pap.c physical.c pred.c probe.c prompt.c \
	proto.c radius.c radlib.c route.c server.c sig.c slcompress.c \
	systems.c sync.c tcp.c throughput.c timer.c tty.c tun.c udp.c vjcomp.c
d15 1
a15 1
LDADD+= -ldes -lutil -lz
@


1.17
log
@Make -DNOSUID (or -DPPP_NOSUID) possible to build ppp without SUID
capabilities.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2000/08/13 22:05:47 brian Exp $
d24 7
@


1.16
log
@Add support for streaming media; FreeBSD
Add support for radius accounting in radlib.c (not yet working in ppp); FreeBSD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2000/06/23 09:47:04 brian Exp $
d8 1
a8 1
	hdlc.c id.c iface.c ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c \
d16 3
d21 1
d24 6
@


1.15
log
@Improved 227, 229 and EPRT support in the nat code; FreeBSD
Moved security checks into one place; FreeBSD
Remove ``nat pptp'' now that it's transparent
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2000/02/27 01:38:24 brian Exp $
d5 5
a9 5
	alias_nbt.c alias_pptp.c alias_proxy.c alias_util.c acf.c arp.c \
	async.c auth.c bundle.c cbcp.c ccp.c chap.c chap_ms.c chat.c \
	command.c datalink.c deflate.c defs.c exec.c filter.c fsm.c hdlc.c \
	id.c iface.c ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c \
	mbuf.c mp.c nat_cmd.c pap.c physical.c pred.c probe.c prompt.c \
d12 2
a13 1
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH -DNOI4B -DNONETGRAPH -DLOCALNAT -DLOCALRAD
@


1.14
log
@$Id$ -> $OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2000/02/27 00:21:05 brian Exp $
d5 7
a11 7
	alias_nbt.c alias_proxy.c alias_util.c acf.c arp.c async.c auth.c \
	bundle.c cbcp.c ccp.c chap.c chap_ms.c chat.c command.c datalink.c \
	deflate.c defs.c exec.c filter.c fsm.c hdlc.c id.c iface.c ip.c \
	ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c mbuf.c mp.c nat_cmd.c \
	pap.c physical.c pred.c probe.c prompt.c proto.c radius.c radlib.c \
	route.c server.c sig.c slcompress.c systems.c sync.c tcp.c \
	throughput.c timer.c tty.c tun.c udp.c vjcomp.c
@


1.13
log
@When we stop a timer that's the first in the timer list, ensure
that we adjust that timers `rest' value (with the current getitimer()
values) before using that to adjust the next items `rest' value.
After adjusting that value, restart the timer service so that we've
now got the correct setitimer() values.
When adjusting timer::rest, round to the closest TICKUNIT usecs
value.

struct descriptor -> struct fdescriptor (to avoid header polution in
NetBSD).

Introduce LOCALNAT and LOCALRAD defines.

The interface list that comes back from the PF_ROUTE/NET_RT_IFLIST mib
is aligned.  Teach this to ``show route'' and clean up some of the
sockaddr parsing routines.

Add ``set log dns'' to log DNS QUERY packets.

When ppp can't identify the relevant name, don't use "???", use
<nnn> or <0xnnn> instead.

Don't ``break'' when we come accross a non-RTM_IFINFO type
entry in the block returned by the NET_RT_IFLIST mib,
continue instead.

Correct UN_SIZE definition; ben@@scientia.demon.co.uk
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.12 2000/01/07 03:26:52 brian Exp $
@


1.12
log
@Upgrade from 2.23 -> 2.26
I'll follow up with a list of changes (too big for a commit message IMHO)
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.11 1999/07/15 02:10:31 brian Exp $
d12 1
a12 1
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH -DNOI4B -DNONETGRAPH
@


1.11
log
@Back out the mis-commit of my development ISDN modifications.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.9 1999/05/12 10:03:48 brian Exp $
d4 9
a12 9
SRCS=	alias.c alias_cmd.c alias_cuseeme.c alias_db.c alias_ftp.c \
	alias_irc.c alias_nbt.c alias_proxy.c alias_util.c \
	acf.c arp.c async.c auth.c bundle.c cbcp.c ccp.c chap.c chap_ms.c \
	chat.c command.c datalink.c deflate.c defs.c exec.c filter.c fsm.c \
	hdlc.c id.c iface.c ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c \
	main.c mbuf.c mp.c pap.c physical.c pred.c probe.c prompt.c proto.c \
	radius.c radlib.c route.c server.c sig.c slcompress.c systems.c \
	sync.c tcp.c throughput.c timer.c tty.c tun.c udp.c vjcomp.c
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH
@


1.10
log
@Don't declare `end' if we aren't compiling radius support.
@
text
@d12 1
a12 1
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH -DNOI4B
@


1.9
log
@Allow ``host:port/udp'' devices and support ``host:port/tcp'' as
being the same as the previous (still supported) ``host:port''
syntax for tcp socket devices.

A udp device uses synchronous ppp rather than async, and avoids
the double-retransmit overhead that comes with ppp over tcp (it's
usually a bad idea to transport IP over a reliable transport that
itself is using an unreliable transport).  PPP over UDP provides
througput of ** 1.5Mb per second ** with all compression disabled,
maxing out a PPro/200 when running ppp twice, back-to-back.

This proves that PPPoE is plausable in userland....

This change adds a few more handler functions to struct device and
allows derivations of struct device (which may contain their own
data etc) to pass themselves through the unix domain socket for MP.
** At last **, struct physical has lost all the tty crud !

iov2physical() is now smart enough to restore the correct stack of
layers so that MP servers will work again.

The version number has bumped as our MP link transfer contents have
changed (they now may contain a `struct device').

Don't extract the protocol twice in MP mode (resulting in protocol
rejects for every MP packet).  This was broken with my original
layering changes.

Add ``Physical'' and ``Sync'' log levels for logging the relevent
raw packets and add protocol-tracking LogDEBUG stuff in various
LayerPush & LayerPull functions.

Assign our physical device name for incoming tcp connections by
calling getpeername().

Assign our physical device name for incoming udp connections from
the address retrieved by the first recvfrom().
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.8 1999/05/08 11:06:32 brian Exp $
d12 1
a12 1
CFLAGS+=-Wall -DHAVE_DES -DNO_FW_PUNCH
@


1.8
log
@o Redesign the layering mechanism and make the aliasing code part of
  the layering.

  We now ``stack'' layers as soon as we open the device (when we figure
  out what we're dealing with).  A static set of `dispatch' routines are
  also declared for dealing with incoming packets after they've been
  `pulled' up through the stacked layers.

  Physical devices are now assigned handlers based on the device type
  when they're opened.  For the moment there are three device types;
  ttys, execs and tcps.

o Increment version number to 2.2
o Make an entry in [uw]tmp for non-tty -direct invocations (after
  pap/chap authentication).
o Make throughput counters quad_t's
o Account for the absolute number of mbuf malloc()s and free()s in
  ``show mem''.
o ``show modem'' becomes ``show physical''.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.7 1999/03/08 01:40:21 brian Exp $
d11 1
a11 1
	sync.c tcp.c throughput.c timer.c tty.c tun.c vjcomp.c
@


1.7
log
@Add proxying & transparent proxying support (``alias proxy'').
Add PPTP packet aliasing (GRE fixed address) support (``alias pptp'').
Add a 0 to the front of the mode to signify octal.
Thanks to: Charles Mott <cmott@@srv.net> & Dru Nelson <dnelson@@redwoodsoft.com>
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.6 1999/02/06 03:22:30 brian Exp $
d5 7
a11 7
	alias_irc.c alias_nbt.c alias_proxy.c alias_util.c arp.c async.c \
	auth.c bundle.c cbcp.c ccp.c chap.c chap_ms.c chat.c command.c \
	datalink.c deflate.c defs.c filter.c fsm.c hdlc.c id.c iface.c ip.c \
	ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c mbuf.c modem.c mp.c \
	pap.c physical.c pred.c probe.c prompt.c radius.c radlib.c route.c \
	server.c sig.c slcompress.c systems.c throughput.c timer.c tun.c \
	vjcomp.c
@


1.6
log
@Support RADIUS

While I'm in there, validate pap & chap header IDs if
``idcheck'' is enabled (the default) for other FSM packet
types.

NOTE: This involved integrating the generation of chap
      challenges and the validation of chap responses
      (and commenting what's going on in those routines).
      I currently have no way of testing ppps ability
      to respond to M$Chap CHALLENGEs correctly, so if
      someone could do the honours, it'd be much
      appreciated (it *looks* ok!).

Sponsored by: Internet Business Solutions Ltd., Switzerland
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.5 1998/10/29 02:21:44 brian Exp $
d5 7
a11 6
	alias_irc.c alias_nbt.c alias_util.c arp.c async.c auth.c bundle.c \
	cbcp.c ccp.c chap.c chap_ms.c chat.c command.c datalink.c deflate.c \
	defs.c filter.c fsm.c hdlc.c id.c iface.c ip.c ipcp.c iplist.c lcp.c \
	link.c log.c lqr.c main.c mbuf.c modem.c mp.c pap.c physical.c pred.c \
	probe.c prompt.c radius.c radlib.c route.c server.c sig.c slcompress.c \
	systems.c throughput.c timer.c tun.c vjcomp.c
a18 1

@


1.5
log
@Catch up with the latest ppp updates/fixes:

- Add enable/disable proxyall to proxy arp an entire subnet
  (smaller than class C)
- Add ``set {send,recv}pipe for controlling socket buffers.
- Fix the infamous ``first connection'' problem where the process
  that causes an auto dial to an ISP that assigns a dynamic IP never
  connects (due to the bound socket IP being changed on the tun iface).
  See ``enable/disable iface-alias'' and ``iface ...'' in the man page.
- Add PROCESSID as a substitution string when running commands.
- Add ``set proctitle'' for changing argv0.  You can use all the command
  substitutions here too (eg ``set proctitle ppp: USER INTERFACE'').
- Add a missing untimeout as soon as the chat expect string is received
  rather than waiting for the next expect to happen.
- Be less restrictive about when auth{name,key}, enddisc, shortseq and
  mrru can be changed.
- Improve some diagnostics.
- Don't send a DELAY field with CBCP_NONUM messages (as per the spec).
- Emphasise how to make callback optional in the man page.
- Allow the caller to request no callback if they're allowed choose the
  number anyway.
- Set our CBCP RESPONSE fsm id according to the REQ, moan if the peer
  gets the response id wrong (but continue anyway).
- Shuffle the ``set ?'' output back a column so that broken terminals
  that can't display 80 columns *and* a '\n' will look ok.
- If DES is compiled out, be more verbose about why CHAP 0x80 was rejected.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.4 1998/09/17 00:47:13 brian Exp $
d4 8
a11 7
SRCS=	arp.c async.c auth.c bundle.c cbcp.c ccp.c chap.c chap_ms.c chat.c \
	command.c datalink.c deflate.c defs.c filter.c fsm.c hdlc.c id.c \
	iface.c ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c mbuf.c \
	modem.c mp.c pap.c physical.c pred.c probe.c prompt.c route.c \
	server.c sig.c slcompress.c systems.c throughput.c timer.c tun.c \
	vjcomp.c
CFLAGS+=-Wall -DHAVE_DES
a18 7
.if defined(NOALIAS)
CFLAGS+=-DNOALIAS
.else
CFLAGS+=-DNO_FW_PUNCH
SRCS+=	alias.c alias_cmd.c alias_cuseeme.c alias_db.c alias_ftp.c \
	alias_irc.c alias_nbt.c alias_util.c
.endif
@


1.4
log
@Depolute Makefiles.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.3 1998/08/31 08:16:25 brian Exp $
d6 4
a9 3
	ip.c ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c mbuf.c modem.c \
	mp.c pap.c physical.c pred.c probe.c prompt.c route.c server.c \
	sig.c slcompress.c systems.c throughput.c timer.c tun.c vjcomp.c
@


1.3
log
@Move libalias sources into the ppp directory.
Suggested (many times) by: Theo
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.2 1998/08/31 00:43:56 deraadt Exp $
d4 3
a6 3
SRCS=	arp.c async.c auth.c bundle.c cbcp.c ccp.c chap.c chat.c command.c \
	datalink.c deflate.c defs.c filter.c fsm.c hdlc.c id.c ip.c \
	ipcp.c iplist.c lcp.c link.c log.c lqr.c main.c mbuf.c modem.c \
d9 3
a11 3
CFLAGS+=-Wall
LDADD+= -lutil -lz
DPADD+=	${LIBUTIL} ${LIBZ}
a14 3

OPSYS!=	uname -s
.if (${OPSYS} == "OpenBSD")
a15 9
.else
MAN8=	ppp.8
LDADD+=	-lmd -lcrypt
DPADD+= ${LIBMD} ${LIBCRYPT}
.endif

.if defined(RELEASE_CRUNCH)
CFLAGS+=-DRELEASE_CRUNCH
.endif
a19 2
.if !defined(RELEASE_CRUNCH)
.if (${OPSYS} == "OpenBSD")
d21 2
a22 26
SRCS+=	alias.c alias_cmd.c alias_cuseeme.c alias_db.c alias_ftp.c alias_irc.c \
	alias_nbt.c alias_util.c
.else
SRCS+=	alias_cmd.c
LDADD+=	-lalias
DPADD+= ${LIBALIAS}
.endif
.endif
.endif

.if exists(${.CURDIR}/../../secure) && !defined(NOCRYPT) && !defined(NOSECURE) && !defined(RELEASE_CRUNCH)
DISTRIBUTION=des
CFLAGS+=-DHAVE_DES
SRCS+=	chap_ms.c
LDADD+= -ldes
DPADD+= ${LIBDES}
.endif

.if defined(RELEASE_CRUNCH)
# We must create these objects because the crunchgen will link them,
# and we don't want any unused symbols to spoil the final link.
CFLAGS+=-DNOALIAS
SRCS+=	alias_cmd.c chap_ms.c
chap_ms.o alias_cmd.o:
	>null_${.PREFIX}.c
	cc -c -o ${.TARGET} null_${.PREFIX}.c
@


1.2
log
@mostly fix build problems
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.1 1998/08/31 00:22:14 brian Exp $
a32 1
SRCS+=	alias_cmd.c
d34 3
a36 3
CFLAGS+=-I${.CURDIR}/../libalias
LDADD+=	../libalias/libalias.a
DPADD+= ../libalias/libalias.a
d38 1
@


1.1
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@d1 1
a1 1
#	$Id: Makefile,v 1.45 1998/08/07 18:42:47 brian Exp $
d35 1
a35 1
CFLAGS+=-I../libalias
@

