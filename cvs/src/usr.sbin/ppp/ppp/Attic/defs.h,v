head	1.25;
access;
symbols
	OPENBSD_5_5:1.24.0.50
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.46
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.44
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.42
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.40
	OPENBSD_5_0:1.24.0.38
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.36
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.24.0.34
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.24.0.30
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.24.0.32
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.24.0.28
	OPENBSD_4_5_BASE:1.24
	OPENBSD_4_4:1.24.0.26
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.24.0.24
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.24.0.22
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.24.0.20
	OPENBSD_4_1_BASE:1.24
	OPENBSD_4_0:1.24.0.18
	OPENBSD_4_0_BASE:1.24
	OPENBSD_3_9:1.24.0.16
	OPENBSD_3_9_BASE:1.24
	OPENBSD_3_8:1.24.0.14
	OPENBSD_3_8_BASE:1.24
	OPENBSD_3_7:1.24.0.12
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.24.0.10
	OPENBSD_3_6_BASE:1.24
	OPENBSD_3_5:1.24.0.8
	OPENBSD_3_5_BASE:1.24
	OPENBSD_3_4:1.24.0.6
	OPENBSD_3_4_BASE:1.24
	OPENBSD_3_3:1.24.0.4
	OPENBSD_3_3_BASE:1.24
	OPENBSD_3_2:1.24.0.2
	OPENBSD_3_2_BASE:1.24
	OPENBSD_3_1:1.23.0.2
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.21.0.2
	OPENBSD_3_0_BASE:1.21
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_9:1.20.0.2
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.25
date	2014.03.17.17.15.51;	author deraadt;	state dead;
branches;
next	1.24;

1.24
date	2002.05.16.01.13.39;	author brian;	state Exp;
branches;
next	1.23;

1.23
date	2002.03.31.02.38.49;	author brian;	state Exp;
branches;
next	1.22;

1.22
date	2001.11.23.11.17.03;	author brian;	state Exp;
branches;
next	1.21;

1.21
date	2001.06.13.21.33.40;	author brian;	state Exp;
branches;
next	1.20;

1.20
date	2001.03.24.01.05.59;	author brian;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.02.00.54.33;	author brian;	state Exp;
branches;
next	1.18;

1.18
date	2000.10.09.21.18.56;	author brian;	state Exp;
branches;
next	1.17;

1.17
date	2000.08.31.00.46.12;	author brian;	state Exp;
branches;
next	1.16;

1.16
date	2000.08.16.09.07.27;	author brian;	state Exp;
branches;
next	1.15;

1.15
date	2000.06.13.09.57.51;	author brian;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.07.23.46.39;	author brian;	state Exp;
branches;
next	1.13;

1.13
date	2000.02.27.01.38.25;	author brian;	state Exp;
branches;
next	1.12;

1.12
date	2000.02.27.00.21.07;	author brian;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.07.03.26.53;	author brian;	state Exp;
branches;
next	1.10;

1.10
date	99.08.05.10.32.13;	author brian;	state Exp;
branches;
next	1.9;

1.9
date	99.06.01.19.08.51;	author brian;	state Exp;
branches;
next	1.8;

1.8
date	99.05.08.11.06.35;	author brian;	state Exp;
branches;
next	1.7;

1.7
date	99.04.27.00.21.25;	author brian;	state Exp;
branches;
next	1.6;

1.6
date	99.02.26.21.28.21;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	99.02.25.20.07.36;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	99.02.16.00.18.02;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	99.02.11.10.14.50;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	99.02.06.03.22.35;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	98.08.31.00.22.19;	author brian;	state Exp;
branches;
next	;


desc
@@


1.25
log
@ppp(8) goes to the bit bucket in the sky
@
text
@/*-
 * Copyright (c) 1996 - 2001 Brian Somers <brian@@Awfulhak.org>
 *          based on work by Toshiharu OHNO <tony-o@@iij.ad.jp>
 *                           Internet Initiative Japan, Inc (IIJ)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $OpenBSD: defs.h,v 1.24 2002/05/16 01:13:39 brian Exp $
 */

/* Check the following definitions for your machine environment */
#ifdef __FreeBSD__
# define  MODEM_LIST	"/dev/cuaa1\0/dev/cuaa0"	/* name of tty device */
#else
# ifdef __OpenBSD__
#  define MODEM_LIST	"/dev/cua01\0/dev/cua00"	/* name of tty device */
# else
#  define MODEM_LIST	"/dev/tty01\0/dev/tty00"	/* name of tty device */
# endif
#endif
#define NMODEMS		2

#ifndef PPP_CONFDIR
#define PPP_CONFDIR	"/etc/ppp"
#endif

#define TUN_NAME	"tun"
#define TUN_PREFIX	(_PATH_DEV TUN_NAME)	/* /dev/tun */

#define MODEM_SPEED	B38400	/* tty speed */
#define	SERVER_PORT	3000	/* Base server port no. */
#define	MODEM_CTSRTS	1	/* Default (true): use CTS/RTS signals */
#define	RECONNECT_TIMEOUT 3	/* Default timer for carrier loss */
#define	DIAL_TIMEOUT	30	/* Default and Max random time to redial */
#define	DIAL_NEXT_TIMEOUT 3	/* Default Hold time to next number redial */
#define SCRIPT_LEN 512		/* Size of login/dial/hangup scripts */
#define LINE_LEN SCRIPT_LEN 	/* Size of lines */
#define DEVICE_LEN SCRIPT_LEN	/* Size of individual devices */
#define AUTHLEN 100 		/* Size of authname/authkey */
#define CHAPDIGESTLEN 100	/* Maximum chap digest */
#define CHAPCHALLENGELEN 48	/* Maximum chap challenge */
#define CHAPAUTHRESPONSELEN 48	/* Maximum chap authresponse (chap81) */
#define MAXARGS 40		/* How many args per config line */
#define NCP_IDLE_TIMEOUT 180	/* Drop all links */
#define CHOKED_TIMEOUT 120	/* Delete queued packets w/ blocked tun */

#define MIN_LQRPERIOD 1		/* Minimum LQR frequency */
#define DEF_LQRPERIOD 30	/* Default LQR frequency */
#define MIN_FSMRETRY 1		/* Minimum FSM retry frequency */
#define DEF_FSMRETRY 3		/* FSM retry frequency */
#define DEF_FSMTRIES 5		/* Default max retries */
#define DEF_FSMAUTHTRIES 3	/* Default max auth retries */
#define DEF_IFQUEUE 30		/* Default interface queue size */

#define	CONFFILE 	"ppp.conf"
#define	LINKUPFILE 	"ppp.linkup"
#define	LINKDOWNFILE 	"ppp.linkdown"
#define	SECRETFILE	"ppp.secret"

#define	EX_SIG		-1
#define	EX_NORMAL	0
#define	EX_START	1
#define	EX_SOCK		2
#define	EX_MODEM	3
#define	EX_DIAL		4
#define	EX_DEAD		5
#define	EX_DONE		6
#define	EX_REBOOT	7
#define	EX_ERRDEAD	8
#define	EX_HANGUP	9
#define	EX_TERM		10
#define EX_NODIAL	11
#define EX_NOLOGIN	12
/* return values for -background mode, not really exits */
#define EX_REDIAL	13
#define EX_RECONNECT	14

/* physical::type values (OR'd in bundle::phys_type) */
#define PHYS_NONE		0
#define PHYS_INTERACTIVE	1  /* Manual link */
#define PHYS_AUTO		2  /* Dial-on-demand link */
#define	PHYS_DIRECT		4  /* Incoming link, deleted when closed */
#define	PHYS_DEDICATED		8  /* Dedicated link */
#define	PHYS_DDIAL		16 /* Dial immediately, stay connected */
#define PHYS_BACKGROUND		32 /* Dial immediately, deleted when closed */
#define PHYS_FOREGROUND		64 /* Pseudo mode, same as background */
#define PHYS_ALL		127

/* flags passed to findblank() and MakeArgs() */
#define PARSE_NORMAL	0
#define PARSE_REDUCE	1
#define PARSE_NOHASH	2

/* flags passed to loadmodules */
#define	LOAD_QUIETLY	1
#define	LOAD_VERBOSLY	2

#define ROUNDUP(x) ((x) ? (1 + (((x) - 1) | (sizeof(long) - 1))) : sizeof(long))

#if defined(__NetBSD__) || __FreeBSD__ < 3
extern void randinit(void);
#else
#define random arc4random
#define randinit()
#endif

extern ssize_t fullread(int, void *, size_t);
extern const char *mode2Nam(int);
extern int Nam2mode(const char *);
extern struct in_addr GetIpAddr(const char *);
extern int SpeedToInt(speed_t);
extern speed_t IntToSpeed(int);
extern char *findblank(char *, int);
extern int MakeArgs(char *, char **, int, int);
extern const char *NumStr(long, char *, size_t);
extern const char *HexStr(long, char *, size_t);
extern const char *ex_desc(int);
extern void SetTitle(const char *);
extern fd_set *mkfdset(void);
extern void zerofdset(fd_set *);
extern void Concatinate(char *, size_t, int, const char *const *);
extern int loadmodules(int, const char *, ...);
@


1.24
log
@o Bump the version number
o Tidy up includes
o Fix macros in auth.h
o Insist on context for ``set mru'' in MP mode
o Usage -> usage
o Don't intialise after processing config requests
o Show FSM values for ConfigAcks
o Make ident output prettier
o Fix some Id keywords
o Handle RADIUS pool address 255.255.255.254
o Support RADIUS Session-Timeout attributes
o Support RADIUS Reply-Message attributes
o Support RADIUS CHAP-Error attributes
o Store RADIUS Filter-Id attributes
o Provide a NAS-Port-Type attribute to RADIUS servers
o Provide a better NAS-Port attribute to RADIUS servers
o Support MS-CHAP with RADIUS
o Improve FSM decode functions
o Support an OCTETSIN variable
o Support an OCTETSOUT variable
o Support an PACKETSIN variable
o Support an PACKETSOUT variable
o Support an IPOCTETSIN variable
o Support an IPOCTETSOUT variable
o Support an IPPACKETSIN variable
o Support an IPPACKETSOUT variable
o Support an IPV6OCTETSIN variable
o Support an IPV6OCTETSOUT variable
o Support an IPV6PACKETSIN variable
o Support an IPV6PACKETSOUT variable
o Support a SOCKNAME variable
@
text
@d28 1
a28 1
 * $OpenBSD: defs.h,v 1.23 2002/03/31 02:38:49 brian Exp $
@


1.23
log
@Change ``ifdef HAVE_DES'' to ``ifndef NODES'' for consistency.
Notice if the IP header length changes when doing transparent proxying; FreeBSD
Handle domain\\user entries in ppp.secret
Add some mp_Down() calls to ensure that our multi-link NCP goes away properly
Miscellaneous #ifdef'd out FreeBSD changes (mostly netgraph stuff).
@
text
@d28 1
a28 1
 * $OpenBSD: defs.h,v 1.22 2001/11/23 11:17:03 brian Exp $
d142 1
a142 1
extern void loadmodules(int, const char *, ...);
@


1.22
log
@cmott@@scientech.com -> cm@@linktel.net
Add the UPTIME variable
CCP protocol ``0xffffffff'' -> ``none''
Don't leak memory when expanding command arguments and not exec()ing
Make some functions static
Add the ``log'' command for manual logging
Fix some log text bogons
@
text
@d28 1
a28 1
 * $OpenBSD: defs.h,v 1.21 2001/06/13 21:33:40 brian Exp $
d114 4
d142 1
@


1.21
log
@Convert IIJ copyrights to BSD copyrights; ok tohno@@sirius.ocn.ne.jp
@
text
@d28 1
a28 1
 * $OpenBSD$
d137 1
@


1.20
log
@Remove some unprotected prototype variable names
MAXPATHLEN -> PATH_MAX
Handle ENOENT from opening /dev/tun* properly
Rename _PATH_PPP -> PPP_CONFDIR and allow it to be redefined at compile time
Reduce MIN_LQRPERIOD and MIN_FSMRETRY to 1 second
Be smarter about identifying sockets on stdin
Allow primary DNS IP negotiation when the secondary IP has been rejected
Fix the call to PacketAliasProxyRule() properly.
Add/fix some comments
Fix man page markups; ru@@FreeBSD.org
Use localhost when no hostname is configured
@
text
@d1 5
a5 2
/*
 *	    Written by Toshiharu OHNO (tony-o@@iij.ad.jp)
d7 8
a14 1
 *   Copyright (C) 1993, Internet Initiative Japan, Inc. All rights reserverd.
d16 11
a26 11
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the Internet Initiative Japan.  The name of the
 * IIJ may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d28 1
a28 3
 * $OpenBSD: defs.h,v 1.19 2000/11/02 00:54:33 brian Exp $
 *
 *	TODO:
@


1.19
log
@Some whitespace changes
Some slightly better diagnostics
Add MPPE and chapv2 support; Ustimenko Semen <semen@@iclub.nsu.ru>
Bump the version number
Add ``all'' logging; perhaps@@yes.no
Handle quoted hash characters properly
Honour ``nat deny_incoming'' properly
Fix radius accounting initialisation
Moan about tcsetattr() failures
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.18 2000/10/09 21:18:56 brian Exp $
d35 3
a37 1
#define _PATH_PPP	"/etc/ppp"
d59 1
a59 1
#define MIN_LQRPERIOD 2		/* Minimum LQR frequency */
d61 1
a61 1
#define MIN_FSMRETRY 3		/* Minimum FSM retry frequency */
@


1.18
log
@Create fd_sets big enough to handle getdtablesize() descriptors.
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.17 2000/08/31 00:46:12 brian Exp $
d52 1
@


1.17
log
@Use arc4random() instead of random()

Suggested by: Theo
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.16 2000/08/16 09:07:27 brian Exp $
d124 2
@


1.16
log
@setproctitle() doesn't need to be called with root privs, so move
it from id.c into defs.c
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.15 2000/06/13 09:57:51 brian Exp $
d105 1
d107 5
@


1.15
log
@Add ``set ifqueue'' to adjust the number of packets ppp buffers.
Handle an ``open'' correctly from state DATALINK_READY.
Don't disable the autoload timer when bringing down the second last auto
link or bringing up the last auto link.
Allow ``set urgent none'' to disable IPTOS_LOWDELAY prioritisation.
Honour ``set speed sync'' for ``!program'' links and use a udp socketpair
between ppp and ``program''.
HUP ``program'' when a ``!program'' link comes down.
Don't complain about valid padded ppp frames, but complain and drop the
data if the length claims to be more than the payload.
Correct the umask when creating a new /etc/resolv.conf (when dns is enabled),
and don't segfault when trying to rewrite the previous (non-existent) contents.
Be more verbose about ``inappropriate peer'' messages in MP mode.
Allow ``nat target MYADDR'' (to redirect incoming connections to the gateway).
Pass everything through the NAT engine - let it decide if it wants it.
Fix the return code when failing to create a tcp link
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.14 2000/04/07 23:46:39 brian Exp $
d117 1
@


1.14
log
@When running ppp -background, show comfort messages showing
when we're redialing/reconnecting.

While we're here, log redial, reconnect and phone number
announcements to LogCHAT, and reduce some other logging to
LogDEBUG.
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.13 2000/02/27 01:38:25 brian Exp $
d62 1
@


1.13
log
@$Id$ -> $OpenBSD$
@
text
@d18 1
a18 1
 * $OpenBSD: defs.h,v 1.12 2000/02/27 00:21:07 brian Exp $
d78 7
a84 4
#define	EX_HANGUP	10
#define	EX_TERM		11
#define EX_NODIAL	12
#define EX_NOLOGIN	13
d115 1
@


1.12
log
@When we stop a timer that's the first in the timer list, ensure
that we adjust that timers `rest' value (with the current getitimer()
values) before using that to adjust the next items `rest' value.
After adjusting that value, restart the timer service so that we've
now got the correct setitimer() values.
When adjusting timer::rest, round to the closest TICKUNIT usecs
value.

struct descriptor -> struct fdescriptor (to avoid header polution in
NetBSD).

Introduce LOCALNAT and LOCALRAD defines.

The interface list that comes back from the PF_ROUTE/NET_RT_IFLIST mib
is aligned.  Teach this to ``show route'' and clean up some of the
sockaddr parsing routines.

Add ``set log dns'' to log DNS QUERY packets.

When ppp can't identify the relevant name, don't use "???", use
<nnn> or <0xnnn> instead.

Don't ``break'' when we come accross a non-RTM_IFINFO type
entry in the block returned by the NET_RT_IFLIST mib,
continue instead.

Correct UN_SIZE definition; ben@@scientia.demon.co.uk
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.11 2000/01/07 03:26:53 brian Exp $
@


1.11
log
@Upgrade from 2.23 -> 2.26
I'll follow up with a list of changes (too big for a commit message IMHO)
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.10 1999/08/05 10:32:13 brian Exp $
d99 2
d110 2
@


1.10
log
@o Obsolete the undocumented ``set weight'' command.
o If we're using RADIUS and the RADIUS mtu is less than our
  peers mru/mrru, reduce our mtu to this value for NetBSD too.
o Make struct throughput's sample period dynamic and tweak the ppp
  version number to reflect the extra stuff being passed through
  the local domain socket as a result (MP mode).
o Measure the current throughput based on the number of samples actually
  taken rather than on the full sample period.
o Keep the throughput statisics persistent while being passed to
  another ppp invocation through the local domain socket.
o When showing throughput statistics after the timer has stopped, use
  the stopped time for overall calculations, not the current time.
  Also show the stopped time and how long the current throughput has
  been sampled for.
o Use time() consistently in throughput.c
o Tighten up the ``show bundle'' output.
o Introduce the ``set bandwidth'' command.
o Rewrite the ``set autoload'' command.  It now takes three arguments
  and works based on a rolling bundle throughput average compared against
  the theoretical bundle bandwidth over a given period (read: it's now
  functional).
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.9 1999/06/01 19:08:51 brian Exp $
d61 1
a61 2
#define DEF_FSMAUTHTRIES 3		/* Default max auth retries */
#define DEF_CDDELAY  1		/* Delay before checking for carrier */
d91 7
a97 1
#define PHYS_ALL		63
d106 2
a107 1
extern int MakeArgs(char *, char **, int);
@


1.9
log
@Increase the length of an individual device name to LINE_LEN.
Adjust the base physical device name correctly after a link
transfer (allowing correct multilink callbacks).
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.8 1999/05/08 11:06:35 brian Exp $
a55 1
#define LINK_MINWEIGHT 20
@


1.8
log
@o Redesign the layering mechanism and make the aliasing code part of
  the layering.

  We now ``stack'' layers as soon as we open the device (when we figure
  out what we're dealing with).  A static set of `dispatch' routines are
  also declared for dealing with incoming packets after they've been
  `pulled' up through the stacked layers.

  Physical devices are now assigned handlers based on the device type
  when they're opened.  For the moment there are three device types;
  ttys, execs and tcps.

o Increment version number to 2.2
o Make an entry in [uw]tmp for non-tty -direct invocations (after
  pap/chap authentication).
o Make throughput counters quad_t's
o Account for the absolute number of mbuf malloc()s and free()s in
  ``show mem''.
o ``show modem'' becomes ``show physical''.
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.7 1999/04/27 00:21:25 brian Exp $
d46 3
a48 2
#define SCRIPT_LEN 512		/* Size of login scripts */
#define LINE_LEN SCRIPT_LEN 	/* Size of login scripts */
@


1.7
log
@Change ``set device'' so that it parses its arguments as one
device per argument rather than the old way of concatenating
everything then splitting the result at commas and whitespace.

Old syntax of ``set device /dev/cuaa0, /dev/cuaa1''
may no longer contain the comma, but syntax such as
``set device "!ssh host ppp -direct label"'' is now
possible.
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.6 1999/02/26 21:28:21 brian Exp $
d99 3
@


1.6
log
@Allow control over the number of ConfigREQ & TermREQ attempts
that are made in each of the FSMs (LCP, CCP & IPCP) and the
number of REQs/Challenges for PAP/CHAP by accepting more arguments
in the ``set {c,ip,l}cpretry'' and ``set {ch,p}apretry'' commands.

Change the non-convergence thresholds to 3 times the number of configured
REQ tries (rather than the previous fixed ``10'').  We now notice
repeated NAKs and REJs rather than just REQs.

Don't suggest that CHAP 0x05 isn't supported when it's not configured.

Fix some bugs that expose themselves with smaller numbers of retries:
o Handle instantaneous disconnects (set device /dev/null) correctly
  by stopping all fsm timers in fsm2initial.
o Don't forget to uu_unlock() devices that are files but are not
  ttys (set device /dev/zero).

Fix a *HORRENDOUS* bug in RFC1661 (already fixed for an Open event in state
``Closed''):
  According to the state transition table, a RCR+ or RCR- received in
  the ``Stopped'' state are supposed to InitRestartCounter, SendConfigReq
  and SendConfig{Ack,Nak}.  However, in ``Stopped'', we haven't yet
  done a TLS (or the last thing we did is a TLF).  We must therefore
  do the TLS at this point !

  This was never noticed before because LCP and CCP used not use
  LayerStart() for anything interesting, and IPCP tends to go into
  Stopped then get a Down because of an LCP RTR rather than getting a
  RCR again.
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.5 1999/02/25 20:07:36 brian Exp $
d25 1
a25 1
# define  MODEM_LIST	"/dev/cuaa1, /dev/cuaa0"	/* name of tty device */
d28 1
a28 1
#  define MODEM_LIST	"/dev/cua01, /dev/cua00"	/* name of tty device */
d30 1
a30 1
#  define MODEM_LIST	"/dev/tty01, /dev/tty00"	/* name of tty device */
d33 1
@


1.5
log
@Parse IP addresses more securely - specifically, don't allow
a bum name to return as 0.0.0.0... we don't want ``delete xxx''
to delete the default route when xxx doesn't resolve.

Support IP number specifications as the host when specifying
a tcp-style device (rather than *just* hostnames).
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.4 1999/02/16 00:18:02 brian Exp $
d59 2
a60 1
#define DEF_REQs     5		/* This number of REQs in IRC */
@


1.4
log
@Wait by default for one second after the login script
is complete before checking carrier.  If it's there,
the device supports carrier.  If it's not it doesn't.

Add the ``set cd'' command for deciding how soon to check
for carrier, and for deciding if carrier is REQUIRED.

The default has changed:  Pre 2.0 versions of ppp waited
for 1 second.  Version 2 didn't wait, but this causes
problems with some (few?) modems that don't assert carrier
immediately on reporting CONNECT.  The one second delay
is back now and can be removed with ``set cd 0''.

Bump the ppp version number in case this needs to be changed
again....
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.3 1999/02/11 10:14:50 brian Exp $
d96 1
@


1.3
log
@When resending chap challenges, resend the same challenge
each time rather than making up a new one.

Increase the authname/authkey max sizes to 100 characters.

Allow ``authkey'' specifications beginning with ``!''.
When a challenge is received, the text following the
``!'' is executed as a program (expanding stuff in the same
way that ``sh'' and ``!bg'' do).  The program is passed the
peer name, peer challenge and local ``authname'' on standard
input and is expected to output the name/key combination that
should be used to build the CHAP response.

This provides support for Secure ID cards (guess what I was
given at work recently!) using CHAP.

Examples will follow.
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.2 1999/02/06 03:22:35 brian Exp $
d60 1
@


1.2
log
@Support RADIUS

While I'm in there, validate pap & chap header IDs if
``idcheck'' is enabled (the default) for other FSM packet
types.

NOTE: This involved integrating the generation of chap
      challenges and the validation of chap responses
      (and commenting what's going on in those routines).
      I currently have no way of testing ppps ability
      to respond to M$Chap CHALLENGEs correctly, so if
      someone could do the honours, it'd be much
      appreciated (it *looks* ok!).

Sponsored by: Internet Business Solutions Ltd., Switzerland
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.37 1999/01/28 01:56:31 brian Exp $
d47 1
a47 1
#define AUTHLEN 50 		/* Size of authname/authkey */
@


1.1
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@d18 1
a18 1
 * $Id: defs.h,v 1.36 1998/08/25 17:48:42 brian Exp $
d47 3
@

