head	1.4;
access;
symbols
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	PPP1_5:1.1.1.1
	BRIAN:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	98.08.31.00.21.19;	author brian;	state dead;
branches;
next	1.3;

1.3
date	98.01.08.23.47.09;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	97.12.15.22.44.55;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.23.20.27.35;	author brian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.23.20.27.35;	author brian;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@/*
 *	    Written by Toshiharu OHNO (tony-o@@iij.ad.jp)
 *
 *   Copyright (C) 1993, Internet Initiative Japan, Inc. All rights reserverd.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the Internet Initiative Japan.  The name of the
 * IIJ may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Id: os.h,v 1.3 1998/01/08 23:47:09 brian Exp $
 *
 *	TODO:
 */

extern char *IfDevName;

extern int  OsSetIpaddress(struct in_addr, struct in_addr);
extern int  OsTrySetIpaddress(struct in_addr, struct in_addr);
extern int  OsInterfaceDown(int);
extern int  OpenTunnel(int *);
extern void OsLinkup(void);
extern int  OsLinkIsUp(void);
extern void OsLinkdown(void);
extern int  CleanInterface(const char *);
@


1.3
log
@Zap any addresses on the network side of the `tun' as soon
as we've successfully opened the /dev side.
@
text
@d18 1
a18 1
 * $Id: os.h,v 1.2 1997/12/15 22:44:55 brian Exp $
@


1.2
log
@Allow random IP number allocation to peer.
Validate the peers suggested IP by attempting to make a routing table
entry.
Give up IPCP negotiation if the peer NAKs us with an unusable IP.
Always SIOCDIFADDR then SIOCAIFADDR when configuring the tun device.
Using SIOCSIFDSTADDR allows duplicate dst addresses (which we don't
want)!!!
Allow up to 200 interface names (was 50) (now that ppp can play server
properly).

Cosmetic:
  Log unexpected CCP packets in the CCP log rather than the ERROR log.
  Log unexpected Config Reqs in the appropriate LCP/IPCP/CCP log rather
  than the ERROR log.
  Log failed route additions and deletions with WARN, not TCPIP.
  Log the option id and length for unrecognised IPCP options.
  Change some .Sq to .Ar in the man page.
@
text
@d18 1
a18 1
 * $Id: os.h,v 1.1.1.1 1997/11/23 20:27:35 brian Exp $
d32 1
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 * $Id: os.h,v 1.12 1997/11/22 03:37:42 brian Exp $
d25 2
a26 1
extern int OsSetIpaddress(struct in_addr, struct in_addr, struct in_addr);
@


1.1.1.1
log
@Import version 1.5 of ppp.

<sales>
This is a user-level ppp implementation that uses the
tun driver.  It was originally created by a Japanese
ISP.  It's now piled with features.  Check the man pages
for details.
</sales>

The sources are identical to the ones in FreeBSD, except
for the Makefile.

IP aliasing (NAT) is disabled, and can be enabled by simply
doing a ``make install'' of libalias, then rebuilding
ppp.  I'll create libalias as a port soon.
@
text
@@
