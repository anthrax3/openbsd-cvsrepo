head	1.5;
access;
symbols
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	PPP1_5:1.1.1.1
	BRIAN:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	98.08.31.00.21.00;	author brian;	state dead;
branches;
next	1.4;

1.4
date	98.01.11.17.54.47;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	97.12.06.12.09.10;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	97.12.06.12.08.59;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.23.20.27.34;	author brian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.23.20.27.34;	author brian;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@/*
 *	    Written by Toshiharu OHNO (tony-o@@iij.ad.jp)
 *
 *   Copyright (C) 1993, Internet Initiative Japan, Inc. All rights reserverd.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the Internet Initiative Japan.  The name of the
 * IIJ may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Id: lcp.h,v 1.4 1998/01/11 17:54:47 brian Exp $
 *
 *	TODO:
 */

#define	REJECTED(p, x)	((p)->his_reject & (1<<(x)))

struct lcpstate {
  u_int16_t his_mru;
  u_int32_t his_accmap;
  u_int32_t his_magic;
  u_int32_t his_lqrperiod;
  u_char his_protocomp;
  u_char his_acfcomp;
  u_short his_auth;

  u_short want_mru;
  u_int32_t want_accmap;
  u_int32_t want_magic;
  u_int32_t want_lqrperiod;
  u_char want_protocomp;
  u_char want_acfcomp;
  u_short want_auth;

  u_int32_t his_reject;		/* Request codes rejected by peer */
  u_int32_t my_reject;		/* Request codes I have rejected */

  u_short auth_iwait;
  u_short auth_ineed;
};

#define	LCP_MAXCODE	CODE_DISCREQ

#define	TY_MRU		1	/* Maximum-Receive-Unit */
#define	TY_ACCMAP	2	/* Async-Control-Character-Map */
#define	TY_AUTHPROTO	3	/* Authentication-Protocol */
#define	TY_QUALPROTO	4	/* Quality-Protocol */
#define	TY_MAGICNUM	5	/* Magic-Number */
#define	TY_RESERVED	6	/* RESERVED */
#define	TY_PROTOCOMP	7	/* Protocol-Field-Compression */
#define	TY_ACFCOMP	8	/* Address-and-Control-Field-Compression */
#define	TY_FCSALT	9	/* FCS-Alternatives */
#define	TY_SDP		10	/* Self-Describing-Padding */

#define MAX_LCP_OPT_LEN 10
struct lcp_opt {
  u_char id;
  u_char len;
  u_char data[MAX_LCP_OPT_LEN-2];
};


extern struct lcpstate LcpInfo;
extern struct fsm LcpFsm;

extern void LcpInit(void);
extern void LcpUp(void);
extern void LcpSendProtoRej(u_char *, int);
extern void LcpOpen(int);
extern void LcpClose(void);
extern void LcpDown(void);
extern int LcpPutConf(int, u_char *, const struct lcp_opt *, const char *,
                       const char *, ...);
extern int ReportLcpStatus(struct cmdargs const *);
extern void LcpInput(struct mbuf *);
@


1.4
log
@Make things work when sizeof(long) != 32 (hopefully)
@
text
@d18 1
a18 1
 * $Id: lcp.h,v 1.3 1997/12/06 12:09:10 brian Exp $
@


1.3
log
@Parenthesise the REJECTED macro.
@
text
@d18 1
a18 1
 * $Id: lcp.h,v 1.2 1997/12/06 12:08:59 brian Exp $
d26 4
a29 4
  u_long his_mru;
  u_long his_accmap;
  u_long his_magic;
  u_long his_lqrperiod;
d34 4
a37 4
  u_long want_mru;
  u_long want_accmap;
  u_long want_magic;
  u_long want_lqrperiod;
d42 2
a43 2
  u_long his_reject;		/* Request codes rejected by peer */
  u_long my_reject;		/* Request codes I have rejected */
@


1.2
log
@Add DEFLATE capabilities (rfc1979).
@
text
@d18 1
a18 1
 * $Id: lcp.h,v 1.1.1.1 1997/11/23 20:27:34 brian Exp $
d23 1
a23 1
#define	REJECTED(p, x)	(p->his_reject & (1<<x))
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 * $Id: lcp.h,v 1.13 1997/11/22 03:37:36 brian Exp $
d23 2
d62 5
a66 5
struct lqrreq {
  u_char type;
  u_char length;
  u_short proto;		/* Quality protocol */
  u_long period;		/* Reporting interval */
d69 1
d79 2
a80 1
extern void PutConfValue(int, u_char **, const char **, u_char, int, u_long);
@


1.1.1.1
log
@Import version 1.5 of ppp.

<sales>
This is a user-level ppp implementation that uses the
tun driver.  It was originally created by a Japanese
ISP.  It's now piled with features.  Check the man pages
for details.
</sales>

The sources are identical to the ones in FreeBSD, except
for the Makefile.

IP aliasing (NAT) is disabled, and can be enabled by simply
doing a ``make install'' of libalias, then rebuilding
ppp.  I'll create libalias as a port soon.
@
text
@@
