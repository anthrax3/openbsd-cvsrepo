head	1.4;
access;
symbols
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	PPP1_5:1.1.1.1
	BRIAN:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	98.08.31.00.21.37;	author brian;	state dead;
branches;
next	1.3;

1.3
date	98.03.08.23.32.14;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	97.12.21.14.27.14;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.23.20.27.36;	author brian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.23.20.27.36;	author brian;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@/*-
 * Copyright (c) 1997 Brian Somers <brian@@Awfulhak.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$Id: sig.c,v 1.3 1998/03/08 23:32:14 brian Exp $
 */

#include <sys/types.h>

#include <signal.h>

#include "command.h"
#include "mbuf.h"
#include "log.h"
#include "sig.h"

static int caused[NSIG];	/* An array of pending signals */
static sig_type handler[NSIG];	/* all start at SIG_DFL */


/* Record a signal in the "caused" array */

static void
signal_recorder(int sig)
{
  caused[sig - 1]++;
}


/*
 * Set up signal_recorder, and record handler as the function to ultimately
 * call in handle_signal()
*/

sig_type
pending_signal(int sig, sig_type fn)
{
  sig_type Result;

  if (sig <= 0 || sig > NSIG) {
    /* Oops - we must be a bit out of date (too many sigs ?) */
    LogPrintf(LogALERT, "Eeek! %s:%s: I must be out of date!\n",
	      __FILE__, __LINE__);
    return signal(sig, fn);
  }
  Result = handler[sig - 1];
  if (fn == SIG_DFL || fn == SIG_IGN) {
    signal(sig, fn);
    handler[sig - 1] = (sig_type) 0;
  } else {
    handler[sig - 1] = fn;
    signal(sig, signal_recorder);
  }
  caused[sig - 1] = 0;
  return Result;
}


/* Call the handlers for any pending signals */

void
handle_signals()
{
  int sig;
  int got;

  do {
    got = 0;
    for (sig = 0; sig < NSIG; sig++)
      if (caused[sig]) {
	caused[sig]--;
	got++;
	(*handler[sig]) (sig + 1);
      }
  } while (got);
}
@


1.3
log
@Please gcc 2.8
@
text
@d26 1
a26 1
 *	$Id: sig.c,v 1.2 1997/12/21 14:27:14 brian Exp $
@


1.2
log
@Add (BSD) copyright headers
@
text
@d26 1
a26 1
 *	$Id$
d38 1
a38 1
static caused[NSIG];		/* An array of pending signals */
@


1.1
log
@Initial revision
@
text
@d1 26
a26 2
/*
 * $Id: sig.c,v 1.10 1997/11/22 03:37:46 brian Exp $
@


1.1.1.1
log
@Import version 1.5 of ppp.

<sales>
This is a user-level ppp implementation that uses the
tun driver.  It was originally created by a Japanese
ISP.  It's now piled with features.  Check the man pages
for details.
</sales>

The sources are identical to the ones in FreeBSD, except
for the Makefile.

IP aliasing (NAT) is disabled, and can be enabled by simply
doing a ``make install'' of libalias, then rebuilding
ppp.  I'll create libalias as a port soon.
@
text
@@

