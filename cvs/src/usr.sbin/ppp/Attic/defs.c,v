head	1.9;
access;
symbols
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	PPP1_5:1.1.1.1
	BRIAN:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	98.08.31.00.20.38;	author brian;	state dead;
branches;
next	1.8;

1.8
date	98.03.13.03.15.32;	author brian;	state Exp;
branches;
next	1.7;

1.7
date	98.01.21.02.13.31;	author brian;	state Exp;
branches;
next	1.6;

1.6
date	97.12.30.20.03.16;	author brian;	state Exp;
branches;
next	1.5;

1.5
date	97.12.27.13.45.18;	author brian;	state Exp;
branches;
next	1.4;

1.4
date	97.12.24.09.30.28;	author brian;	state Exp;
branches;
next	1.3;

1.3
date	97.12.23.22.38.02;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	97.12.21.14.27.03;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.23.20.27.33;	author brian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.23.20.27.33;	author brian;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@/*-
 * Copyright (c) 1997 Brian Somers <brian@@Awfulhak.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$Id: defs.c,v 1.8 1998/03/13 03:15:32 brian Exp $
 */

#include <sys/param.h>
#include <netinet/in.h>

#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#include <unistd.h>

#include "defs.h"
#include "command.h"
#include "mbuf.h"
#include "log.h"
#include "loadalias.h"
#include "vars.h"

int mode = MODE_INTER;
int BGFiledes[2] = { -1, -1 };
int modem = -1;
int tun_in = -1;
int tun_out = -1;
int netfd = -1;

static char dstsystem[50];

void
SetLabel(const char *label)
{
  if (label)
    strncpy(dstsystem, label, sizeof dstsystem - 1);
  else
    *dstsystem = '\0';
}

const char *
GetLabel()
{
  return *dstsystem ? dstsystem : NULL;
}

void
randinit()
{
#if __FreeBSD__ >= 3
  static int initdone;

  if (!initdone) {
    initdone = 1;
    srandomdev();
  }
#else
  srandom(time(NULL)^getpid());
#endif
}


int
GetShortHost()
{
  char *p;

  if (gethostname(VarShortHost, sizeof VarShortHost)) {
    LogPrintf(LogERROR, "GetShortHost: gethostname: %s\n", strerror(errno));
    return 0;
  }

  if ((p = strchr(VarShortHost, '.')))
    *p = '\0';

  return 1;
}

void
DropClient(int verbose)
{
  FILE *oVarTerm;

  if (VarTerm && !(mode & MODE_INTER)) {
    oVarTerm = VarTerm;
    VarTerm = 0;
    if (oVarTerm)
      fclose(oVarTerm);
    close(netfd);
    netfd = -1;
    if (verbose)
      LogPrintf(LogPHASE, "Client connection dropped.\n");
  }
}
@


1.8
log
@Correct #ifdef for __FreeBSD__ < 3
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.7 1998/01/21 02:13:31 brian Exp $
@


1.7
log
@Remove unused #includes.
Make various bits static.
Remove unused variables.
Submitted by: eivind
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.6 1997/12/30 20:03:16 brian Exp $
d36 1
d73 1
a73 1
#ifdef __FreeBSD__
@


1.6
log
@Typo in error message.
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.5 1997/12/27 13:45:18 brian Exp $
a35 1
#include <time.h>
@


1.5
log
@Show who closes the diagnostic connection.
Show the IP range (if specified) in "show ipcp".
Close unused descriptors 0 and 2 in interactive mode.
Pass (size_t *) rather than (int *) to sysctl().
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.4 1997/12/24 09:30:28 brian Exp $
d92 1
a92 1
    LogPrintf(LogERROR, "GetShortHost: gethostbyname: %s\n", strerror(errno));
@


1.4
log
@Cosmetic (style):
  sizeof(var) -> sizeof var
  sizeof type -> sizeof(type)

Suggested by: J Wunsch <j@@uriah.heep.sax.de>
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.3 1997/12/23 22:38:02 brian Exp $
d103 1
a103 1
DropClient()
d114 2
a115 1
    LogPrintf(LogPHASE, "Client connection closed.\n");
@


1.3
log
@strncpy(x,y,sizeof(x)) --> strncpy(x,y,sizeof(x)-1)

Suggested by: Philippe Charnier <charnier@@lirmm.fr>
              Theo de Raadt <deraadt@@cvs.openbsd.org>
@
text
@d26 1
a26 1
 *	$Id: defs.c,v 1.2 1997/12/21 14:27:03 brian Exp $
d59 1
a59 1
    strncpy(dstsystem, label, sizeof(dstsystem) - 1);
d91 1
a91 1
  if (gethostname(VarShortHost, sizeof(VarShortHost))) {
@


1.2
log
@Add (BSD) copyright headers
@
text
@d26 1
a26 1
 *	$Id$
d59 1
a59 1
    strncpy(dstsystem, label, sizeof dstsystem);
@


1.1
log
@Initial revision
@
text
@d1 26
a26 2
/*
 * $Id: defs.c,v 1.5 1997/11/22 03:37:29 brian Exp $
@


1.1.1.1
log
@Import version 1.5 of ppp.

<sales>
This is a user-level ppp implementation that uses the
tun driver.  It was originally created by a Japanese
ISP.  It's now piled with features.  Check the man pages
for details.
</sales>

The sources are identical to the ones in FreeBSD, except
for the Makefile.

IP aliasing (NAT) is disabled, and can be enabled by simply
doing a ``make install'' of libalias, then rebuilding
ppp.  I'll create libalias as a port soon.
@
text
@@

