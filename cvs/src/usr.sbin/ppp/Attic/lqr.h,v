head	1.4;
access;
symbols
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	PPP1_5:1.1.1.1
	BRIAN:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	98.08.31.00.21.08;	author brian;	state dead;
branches;
next	1.3;

1.3
date	98.01.21.02.13.36;	author brian;	state Exp;
branches;
next	1.2;

1.2
date	98.01.11.17.54.48;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.23.20.27.34;	author brian;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	97.11.23.20.27.34;	author brian;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Upgrade ppp to version 2.0

This adds a number of features including:
o Multilink
o Callback (including CBCP)
o DNS negotiation (client & server)
o Easy to configure masquerading/packet aliasing
o Any number of diagnostic socket connections (limits DOS attacks)
o Sticky routes (ppp updates the routing table when the IP number is changed)

See the file README.changes for things that effect current
configurations.
@
text
@/*
 *	    Written by Toshiharu OHNO (tony-o@@iij.ad.jp)
 *
 *   Copyright (C) 1993, Internet Initiative Japan, Inc. All rights reserverd.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by the Internet Initiative Japan.  The name of the
 * IIJ may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * $Id: lqr.h,v 1.3 1998/01/21 02:13:36 brian Exp $
 *
 *	TODO:
 */

/*
 *  Structure of LQR packet defined in RFC1333
 */
struct lqrdata {
  u_int32_t MagicNumber;
  u_int32_t LastOutLQRs;
  u_int32_t LastOutPackets;
  u_int32_t LastOutOctets;
  u_int32_t PeerInLQRs;
  u_int32_t PeerInPackets;
  u_int32_t PeerInDiscards;
  u_int32_t PeerInErrors;
  u_int32_t PeerInOctets;
  u_int32_t PeerOutLQRs;
  u_int32_t PeerOutPackets;
  u_int32_t PeerOutOctets;
};

struct lqrsave {
  u_int32_t SaveInLQRs;
  u_int32_t SaveInPackets;
  u_int32_t SaveInDiscards;
  u_int32_t SaveInErrors;
  u_int32_t SaveInOctets;
};

extern struct lqrdata MyLqrData, HisLqrData;
extern struct lqrsave HisLqrSave;

/*
 *  We support LQR and ECHO as LQM method
 */
#define	LQM_LQR	  1
#define	LQM_ECHO  2

extern void LqrDump(const char *, const struct lqrdata *);
extern void LqrChangeOrder(struct lqrdata *, struct lqrdata *);
extern void StartLqm(void);
extern void StopLqr(int);
extern void StopLqrTimer(void);
extern void RecvEchoLqr(struct mbuf *);
extern void LqrInput(struct mbuf *);
@


1.3
log
@Remove unused #includes.
Make various bits static.
Remove unused variables.
Submitted by: eivind
@
text
@d18 1
a18 1
 * $Id: lqr.h,v 1.2 1998/01/11 17:54:48 brian Exp $
@


1.2
log
@Make things work when sizeof(long) != 32 (hopefully)
@
text
@d18 1
a18 1
 * $Id: lqr.h,v 1.1.1.1 1997/11/23 20:27:34 brian Exp $
d49 2
a50 2
struct lqrdata MyLqrData, HisLqrData;
struct lqrsave HisLqrSave;
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
 * $Id: lqr.h,v 1.10 1997/11/22 03:37:38 brian Exp $
d27 12
a38 12
  u_long MagicNumber;
  u_long LastOutLQRs;
  u_long LastOutPackets;
  u_long LastOutOctets;
  u_long PeerInLQRs;
  u_long PeerInPackets;
  u_long PeerInDiscards;
  u_long PeerInErrors;
  u_long PeerInOctets;
  u_long PeerOutLQRs;
  u_long PeerOutPackets;
  u_long PeerOutOctets;
d42 5
a46 5
  u_long SaveInLQRs;
  u_long SaveInPackets;
  u_long SaveInDiscards;
  u_long SaveInErrors;
  u_long SaveInOctets;
@


1.1.1.1
log
@Import version 1.5 of ppp.

<sales>
This is a user-level ppp implementation that uses the
tun driver.  It was originally created by a Japanese
ISP.  It's now piled with features.  Check the man pages
for details.
</sales>

The sources are identical to the ones in FreeBSD, except
for the Makefile.

IP aliasing (NAT) is disabled, and can be enabled by simply
doing a ``make install'' of libalias, then rebuilding
ppp.  I'll create libalias as a port soon.
@
text
@@
