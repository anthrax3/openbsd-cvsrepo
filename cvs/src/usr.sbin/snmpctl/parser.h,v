head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.12
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.10
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.20
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.18
	OPENBSD_5_0:1.4.0.16
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.14
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.12
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.8
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2015.06.11.18.49.09;	author reyk;	state Exp;
branches;
next	1.9;
commitid	r36j1ZCD0yPK3S9O;

1.9
date	2014.04.14.12.56.21;	author blambert;	state Exp;
branches;
next	1.8;

1.8
date	2013.10.07.11.40.09;	author reyk;	state Exp;
branches;
next	1.7;

1.7
date	2013.10.01.17.20.39;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2013.10.01.12.41.48;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2012.09.17.16.43.59;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2008.01.18.02.09.30;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2008.01.16.09.51.15;	author reyk;	state Exp;
branches;
next	1.2;

1.2
date	2007.12.28.17.22.32;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2007.12.05.09.22.44;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Use "compliant" header guards by avoiding the reserved '_' namespace.

Pointed out by Markus Elfring

OK mikeb@@ millert@@
@
text
@/*	$OpenBSD: parser.h,v 1.9 2014/04/14 12:56:21 blambert Exp $	*/

/*
 * Copyright (c) 2007, 2008 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef SNMPCTL_PARSER_H
#define SNMPCTL_PARSER_H

enum actions {
	NONE,
	MONITOR,
	SHOW_MIB,
	TRAP,
	GET,
	WALK,
	BULKWALK
};

struct parse_val {
	char			*val;
	TAILQ_ENTRY(parse_val)	 val_entry;
};
TAILQ_HEAD(parse_vals, parse_val);

struct parse_varbind {
	struct snmp_imsg		 sm;
	union {
		uint32_t	 	 u;
		int32_t	 	 	 d;
		uint64_t	 	 l;
		struct in_addr	 	 in4;
		struct in6_addr	 	 in6;
		char			*str;
	} u;

	TAILQ_ENTRY(parse_varbind)	 vb_entry;
};
TAILQ_HEAD(parse_varbinds, parse_varbind);

struct parse_result {
	enum actions		 action;
	struct imsgbuf		*ibuf;
	char			*host;
	char			*trapoid;
	struct parse_vals	 oids;
	struct parse_varbinds	 varbinds;
	char			*community;
	int			 version;
};

struct parse_result	*parse(int, char *[]);
void			 snmpclient(struct parse_result *);

#endif /* SNMPCTL_PARSER_H */
@


1.9
log
@Adapt snmpctl to use AgentX protocol to send traps

ok reyk@@ benno@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.8 2013/10/07 11:40:09 reyk Exp $	*/
d19 3
d66 2
@


1.8
log
@Allow to specify the "oid" option multiple times, eg.
snmpctl walk 127.0.0.1 oid system oid ifName
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.7 2013/10/01 17:20:39 reyk Exp $	*/
d35 15
d54 1
d56 1
@


1.7
log
@Initial support for the "bulkwalk" command.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.6 2013/10/01 12:41:48 reyk Exp $	*/
d29 6
d36 6
a41 6
	enum actions	 action;
	struct imsgbuf	*ibuf;
	char		*host;
	char		*oid;
	char		*community;
	int		 version;
@


1.6
log
@Add initial SNMP client utility to snmpctl(8).
For example, snmpctl snmp walk 127.0.0.1

commit it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.5 2012/09/17 16:43:59 reyk Exp $	*/
d25 2
a26 1
	WALK
@


1.5
log
@Update copyright and my email address in snmpd while I'm here.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.4 2008/01/18 02:09:30 reyk Exp $	*/
d23 3
a25 1
	TRAP
d31 4
d38 1
@


1.4
log
@add a snmpctl command to send traps to registered receivers using
snmpd's imsg trap interface.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.3 2008/01/16 09:51:15 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2007, 2008 Reyk Floeter <reyk@@vantronix.net>
@


1.3
log
@bump copyright
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.2 2007/12/28 17:22:32 reyk Exp $	*/
d22 2
a23 1
	SHOW_MIB
d27 2
a28 1
	enum actions	action;
a31 2
const struct token      *match_token(const char *, const struct token []);
void                     show_valid_args(const struct token []);
@


1.2
log
@add "show mib" command to dump compiled-in MIB names
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.1 2007/12/05 09:22:44 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2007 Reyk Floeter <reyk@@vantronix.net>
@


1.1
log
@Start working on snmpd(8) and snmpctl(8), a lightweight SNMP implementation
for OpenBSD.  SNMP is a necessary evil.  This is work in progress, don't
expect too much from it yet.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.6 2007/09/28 13:29:56 pyr Exp $	*/
d21 2
a22 1
	MONITOR
@

