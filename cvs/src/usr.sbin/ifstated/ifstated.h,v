head	1.15;
access;
symbols
	OPENBSD_6_1:1.10.0.6
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.15
date	2017.07.02.15.28.26;	author benno;	state Exp;
branches;
next	1.14;
commitid	O1Rrj73rj6EeHP15;

1.14
date	2017.07.02.14.30.35;	author benno;	state Exp;
branches;
next	1.13;
commitid	pgJHo6dw6Ld70cMo;

1.13
date	2017.07.02.14.27.30;	author benno;	state Exp;
branches;
next	1.12;
commitid	2Xe9BR5D8dBy0BPP;

1.12
date	2017.06.28.11.10.08;	author benno;	state Exp;
branches;
next	1.11;
commitid	tUK1smkVTTOdBDTV;

1.11
date	2017.06.18.12.03.47;	author benno;	state Exp;
branches;
next	1.10;
commitid	1ImWCgIqWBjLLpn1;

1.10
date	2016.07.19.08.04.53;	author benno;	state Exp;
branches;
next	1.9;
commitid	GJhiNiG2F4EkLTkc;

1.9
date	2016.07.18.21.17.32;	author benno;	state Exp;
branches;
next	1.8;
commitid	cJS1GbDgSBu4BVww;

1.8
date	2014.11.03.18.44.36;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	8nAFL7sqdqdC8oHX;

1.7
date	2013.03.06.21.42.40;	author sthen;	state Exp;
branches;
next	1.6;

1.6
date	2010.02.04.13.50.14;	author stevesk;	state Exp;
branches;
next	1.5;

1.5
date	2007.10.25.06.03.31;	author pyr;	state Exp;
branches;
next	1.4;

1.4
date	2004.03.10.00.13.38;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.15.00.56.01;	author mcbride;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.05.02.18.55;	author mcbride;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.04.23.47.49;	author mcbride;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Second diff to rename additional "always" variable in struct ifsd_config.
from Rob Pierce.
Requested by stsp@@
@
text
@/*	$OpenBSD: ifstated.h,v 1.14 2017/07/02 14:30:35 benno Exp $	*/

/*
 * Copyright (c) 2004 Ryan McBride
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/queue.h>

struct ifsd_expression;
TAILQ_HEAD(ifsd_expression_list, ifsd_expression);

struct ifsd_ifstate {
	TAILQ_ENTRY(ifsd_ifstate)	 entries;
	struct ifsd_expression_list	 expressions;
	int				 ifstate;
#define IFSD_LINKUNKNOWN	0
#define IFSD_LINKDOWN		1
#define IFSD_LINKUP		2
	int				 prevstate;
	u_int32_t			 refcount;
	u_short				 ifindex;
};

struct ifsd_external {
	TAILQ_ENTRY(ifsd_external)	 entries;
	struct event			 ev;
	struct ifsd_expression_list	 expressions;
	char				*command;
	int				 prevstatus;
	u_int32_t			 frequency;
	u_int32_t			 refcount;
	u_int32_t			 lastexec;
	pid_t				 pid;
};

struct ifsd_action;
TAILQ_HEAD(ifsd_action_list, ifsd_action);

struct ifsd_action {
	TAILQ_ENTRY(ifsd_action)	 entries;
	struct ifsd_action		*parent;
	union {
		char			*logmessage;
		char			*command;
		struct ifsd_state	*nextstate;
		char			*statename;
		struct {
			struct ifsd_action_list	 actions;
			struct ifsd_expression	*expression;
		} c;
	} act;
	u_int32_t			 type;
#define IFSD_ACTION_LOG			0
#define IFSD_ACTION_COMMAND		1
#define IFSD_ACTION_CHANGESTATE		2
#define IFSD_ACTION_CONDITION		3
};

struct ifsd_expression {
	TAILQ_ENTRY(ifsd_expression)	 entries;
	TAILQ_ENTRY(ifsd_expression)	 eval;
	struct ifsd_expression		*parent;
	struct ifsd_action		*action;
	struct ifsd_expression		*left;
	struct ifsd_expression		*right;
	union {
		struct ifsd_ifstate		*ifstate;
		struct ifsd_external		*external;
	} u;
	int				 depth;
	u_int32_t			 type;
#define IFSD_OPER_AND	1
#define IFSD_OPER_OR	2
#define IFSD_OPER_NOT	3
#define IFSD_OPER_EXTERNAL	4
#define IFSD_OPER_IFSTATE	5
	u_int8_t			 truth;
};

TAILQ_HEAD(ifsd_ifstate_list, ifsd_ifstate);
TAILQ_HEAD(ifsd_external_list, ifsd_external);

struct ifsd_state {
	struct event			 ev;
	struct ifsd_ifstate_list	 interface_states;
	struct ifsd_external_list	 external_tests;
	TAILQ_ENTRY(ifsd_state)		 entries;
	struct ifsd_action		*init;
	struct ifsd_action		*body;
	u_int32_t			 entered;
	char				*name;
};

TAILQ_HEAD(ifsd_state_list, ifsd_state);

struct ifsd_config {
	struct ifsd_state		 initstate;
	struct ifsd_state_list		 states;
	struct ifsd_state		*curstate;
	struct ifsd_state		*nextstate;
	u_int32_t			 opts;
#define IFSD_OPT_VERBOSE	0x00000001
#define IFSD_OPT_VERBOSE2	0x00000002
#define IFSD_OPT_NOACTION	0x00000004
	int				 maxdepth;
};

enum	{ IFSD_EVTIMER_ADD, IFSD_EVTIMER_DEL };
struct ifsd_config *parse_config(char *, int);
int	cmdline_symset(char *);
void	clear_config(struct ifsd_config *);
@


1.14
log
@Remove unused variable from header file.
from Rob Pierce.

ok stsp@@ and me
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.13 2017/07/02 14:27:30 benno Exp $	*/
d120 1
a120 1
	struct ifsd_state		 always;
@


1.13
log
@Rename one of the "always" variables to "body" for improved readability.
No functional change.
from Rob Pierce.

ok stsp@@ and me
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.12 2017/06/28 11:10:08 benno Exp $	*/
a72 1
			u_int8_t		 ignore_init;
@


1.12
log
@whitespace fixes, from Rob Pierce and me
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.11 2017/06/18 12:03:47 benno Exp $	*/
d113 1
a113 1
	struct ifsd_action		*always;
@


1.11
log
@update log.c in ifstated to the same used in bgpd etc.
Done by Rob Pierce <rob AT 2keys DOT ca>, thanks
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.10 2016/07/19 08:04:53 benno Exp $	*/
a31 1

a81 1

@


1.10
log
@remove bogus attributes from ifstated, spooted by guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.9 2016/07/18 21:17:32 benno Exp $	*/
a137 17

/* log.c */
void	log_init(int);
void	log_warn(const char *, ...)
		__attribute__((__format__ (printf, 1, 2)));
void	log_warnx(const char *, ...)
		__attribute__((__format__ (printf, 1, 2)));
void	log_info(const char *, ...)
		__attribute__((__format__ (printf, 1, 2)));
void	log_debug(const char *, ...)
		__attribute__((__format__ (printf, 1, 2)));
void	vlog(int, const char *, va_list)
		__attribute__((__format__ (printf, 2, 0)));
void	logit(int, const char *, ...)
		__attribute__((__format__ (printf, 2, 3)));
void fatal(const char *) __dead;
void fatalx(const char *) __dead;
@


1.9
log
@add format attributes to log functions
ok stsp@@ claudio@@ florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.8 2014/11/03 18:44:36 bluhm Exp $	*/
d153 2
a154 4
void fatal(const char *) __dead
		__attribute__((__format__ (printf, 1, 0)));
void fatalx(const char *) __dead
		__attribute__((__format__ (printf, 1, 0)));
@


1.8
log
@Convert the logic in yyerror().  Instead of creating a temporary
format string, create a temporary message.
OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.7 2013/03/06 21:42:40 sthen Exp $	*/
d141 16
a156 8
void	log_warn(const char *, ...);
void	log_warnx(const char *, ...);
void	log_info(const char *, ...);
void	log_debug(const char *, ...);
void	vlog(int, const char *, va_list);
void	logit(int, const char *, ...);
__dead void fatal(const char *);
__dead void fatalx(const char *);
@


1.7
log
@as done in ospf{,6}d/relayd, sync yyerror in various other daemons with
that from bgpd, so that it logs to syslog when daemonized.
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.6 2010/02/04 13:50:14 stevesk Exp $	*/
d146 1
@


1.6
log
@remove assumption that internal IFSD_LINK* defines are the same as
LINK_STATE* defines in <net/if.h>, which were changed Sep 14.  this
fixes link state down being treated as up.

ok claudio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.5 2007/10/25 06:03:31 pyr Exp $	*/
d145 1
@


1.5
log
@sync logging with most other daemons.
ok mcbride@@, mpf@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.4 2004/03/10 00:13:38 deraadt Exp $	*/
d40 3
a42 3
#define IFSD_LINKUNKNOWN	0	/* LINK_STATE_UNKNOWN */
#define IFSD_LINKDOWN		1	/* LINK_STATE_DOWN */
#define IFSD_LINKUP		2	/* LINK_STATE_UP */
@


1.4
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.3 2004/02/15 00:56:01 mcbride Exp $	*/
a131 6
	u_int8_t			 loglevel;
#define IFSD_LOG_NONE		0
#define IFSD_LOG_QUIET		1
#define IFSD_LOG_NORMAL		2
#define IFSD_LOG_VERBOSE	3
#define IFSD_LOG_DEBUG		4
d138 9
@


1.3
log
@- Check error condition on config; load exit() on initial startup, simply
  warn if loading due to SIGHUP. (pointed out by mpf@@)
- Can't just bcopy the config struct, there are TAILQs. Pass pointers instead.
- Initialise the SIGHUP and routing socket handlers after config is loaded.

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.2 2004/02/05 02:18:55 mcbride Exp $	*/
d45 1
a45 1
	u_short 			 ifindex;
d139 1
a139 1
 
@


1.2
log
@Clean up command line options:
- Make -v work as intended.
- Add -n to test config without doing anything.
@
text
@d1 1
a1 1
/*	$OpenBSD: ifstated.h,v 1.1 2004/02/04 23:47:49 mcbride Exp $	*/
d141 1
a141 1
int	parse_config(char *, struct ifsd_config *);
d143 1
@


1.1
log
@Update to ifstated; replace parser, introduce the concept of states,
external tests, and boolean logic. Allows ifstated to handle partial
failures on firewalls that are CARPd to each other.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d130 1
@

