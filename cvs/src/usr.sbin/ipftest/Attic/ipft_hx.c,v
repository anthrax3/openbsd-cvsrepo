head	1.15;
access;
symbols
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_9:1.14.0.2
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.8.0.4
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.15
date	2001.05.30.02.12.42;	author deraadt;	state dead;
branches;
next	1.14;

1.14
date	2001.01.30.04.31.01;	author kjell;	state Exp;
branches;
next	1.13;

1.13
date	2001.01.17.06.01.22;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.13.23.40.20;	author kjell;	state Exp;
branches;
next	1.11;

1.11
date	2000.02.16.22.34.23;	author kjell;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.01.19.30.01;	author kjell;	state Exp;
branches;
next	1.9;

1.9
date	99.12.15.05.20.26;	author kjell;	state Exp;
branches;
next	1.8;

1.8
date	99.02.05.05.58.46;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.09.15.10.05.50;	author pattonme;	state Exp;
branches;
next	1.6;

1.6
date	98.01.26.04.16.34;	author dgregor;	state Exp;
branches;
next	1.5;

1.5
date	97.06.23.16.44.48;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.02.11.22.23.50;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.07.14.06;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.07.18.04.59.23;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.05.10.21.40.25;	author dm;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@/*	$OpenBSD: ipft_hx.c,v 1.14 2001/01/30 04:31:01 kjell Exp $	*/

/*
 * Copyright (C) 1995-2000 by Darren Reed.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and due credit is given
 * to the original author and the contributors.
 */
#include <stdio.h>
#include <ctype.h>
#include <assert.h>
#include <string.h>
#include <sys/types.h>
#if !defined(__SVR4) && !defined(__svr4__)
#include <strings.h>
#else
#include <sys/byteorder.h>
#endif
#include <sys/param.h>
#include <sys/time.h>
#include <stdlib.h>
#include <unistd.h>
#include <stddef.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#ifndef	linux
#include <netinet/ip_var.h>
#endif
#include <netinet/ip.h>
#include <netinet/udp.h>
#include <netinet/tcp.h>
#include <netinet/ip_icmp.h>
#include <net/if.h>
#include <netdb.h>
#include <arpa/nameser.h>
#include <resolv.h>
#include <netinet/ip_fil_compat.h>
#include <netinet/tcpip.h>
#include "ipf.h"
#include "ipt.h"

#if !defined(lint)
static const char sccsid[] = "@@(#)ipft_hx.c	1.1 3/9/96 (C) 1996 Darren Reed";
static const char rcsid[] = "@@(#)$IPFilter: ipft_hx.c,v 2.2 2000/03/13 22:10:24 darrenr Exp $";
#endif

extern	int	opts;

static	int	hex_open __P((char *));
static	int	hex_close __P((void));
static	int	hex_readip __P((char *, int, char **, int *));
static	char	*readhex __P((char *, char *));

struct	ipread	iphex = { hex_open, hex_close, hex_readip };
static	FILE	*tfp = NULL;
static	int	tfd = -1;

static	int	hex_open(fname)
char	*fname;
{
	if (tfp && tfd != -1) {
		rewind(tfp);
		return tfd;
	}

	if (!strcmp(fname, "-")) {
		tfd = 0;
		tfp = stdin;
	} else {
		tfd = open(fname, O_RDONLY);
		if (tfd != -1)
			tfp = fdopen(tfd, "r");
	}
	return tfd;
}


static	int	hex_close()
{
	int	cfd = tfd;

	tfd = -1;
	return close(cfd);
}


static	int	hex_readip(buf, cnt, ifn, dir)
char	*buf, **ifn;
int	cnt, *dir;
{
	register char *s, *t, *u;
	char	line[513];
	ip_t	*ip;

 	ip = (ip_t *)buf;
	while (fgets(line, sizeof(line)-1, tfp)) {
		if ((s = index(line, '\n'))) {
			if (s == line)
				return (char *)ip - buf;
			*s = '\0';
		}
		if ((s = index(line, '#')))
			*s = '\0';
		if (!*line)
			continue;
		if (!(opts & OPT_BRIEF)) {
			printf("input: %s\n", line);
			fflush(stdout);
		}

		/*
		 * interpret start of line as possibly "[ifname]" or
		 * "[in/out,ifname]".
		 */
		if (ifn)
			*ifn = NULL;
		if (dir)
			*dir = 0;
		if ((*buf == '[') && (s = index(line, ']'))) {
			t = buf + 1;
			if (t - s > 0) {
				if ((u = index(t, ',')) && (u < s)) {
					u++;
					if (ifn)
						*ifn = u;
					if (dir) {
						if (*t == 'i')
							*dir = 0;
						else if (*t == 'o')
							*dir = 1;
					}
				} else if (ifn)
					*ifn = t;
				*s++ = '\0';
			}
		} else
			s = line;
		ip = (ip_t *)readhex(s, (char *)ip);
	}
	return -1;
}


static	char	*readhex(src, dst)
register char	*src, *dst;
{
	int	state = 0;
	char	c;

	while ((c = *src++)) {
		if (isspace(c)) {
			if (state) {
				dst++;
				state = 0;
			}
			continue;
		} else if ((c >= '0' && c <= '9') || (c >= 'a' && c <= 'f') ||
			   (c >= 'A' && c <= 'F')) {
			c = isdigit(c) ? (c - '0') : (toupper(c) - 55);
			if (state == 0) {
				*dst = (c << 4);
				state++;
			} else {
				*dst++ |= c;
				state = 0;
			}
		} else
			break;
	}
	return dst;
}
@


1.14
log
@reimplement whacked changes. ip_compat.h to ip_fil_compat.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ipft_hx.c,v 1.13 2001/01/17 06:01:22 fgsch Exp $	*/
@


1.13
log
@2nd part of the ipf code; need more testing.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
#include <netinet/ip_compat.h>
@


1.12
log
@Import of Darren Reed's IPFilter 3.3.11. See sbin/ipf/HISTORY for detailed
changelog. Documentation changes are now way behind. Volunteers?
@
text
@d4 1
a4 1
 * Copyright (C) 1995-1998 by Darren Reed.
d40 1
a40 1
#include <netinet/ip_fil_compat.h>
d47 1
a47 1
static const char rcsid[] = "@@(#)$IPFilter: ipft_hx.c,v 2.1 1999/08/04 17:30:03 darrenr Exp $";
@


1.11
log
@Import IPFilter 3.3.9. Primarily, bugfixes since 3.3.8. See sbin/ipf/HISTORY
for details.
@
text
@@


1.10
log
@Update to IPFilter 3.3.8. Man pages still to go. See sbin/ipf/HISTORY
for details.
@
text
@@


1.9
log
@Import of Darren Reed's IPFilter 3.3.4, including OpenBSD patches.

Many, many enhancements and improvements, including new in-kernel
proxies, enhancements to logging, and many bugfixes.

Note: Man pages have not yet been re-converted to mdoc.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d47 1
a47 1
static const char rcsid[] = "@@(#)$Id: ipft_hx.c,v 2.1 1999/08/04 17:30:03 darrenr Exp $";
@


1.8
log
@ipf 3.2.10; work by kjell
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_hx.c,v 1.7 1998/09/15 10:05:50 pattonme Exp $     */
d39 1
a39 5
#if defined(__OpenBSD__)
# include <netinet/ip_fil_compat.h>
#else
# include <netinet/ip_compat.h>
#endif
d46 1
a46 1
static const char rcsid[] = "@@(#)$Id: ipft_hx.c,v 1.7 1998/09/15 10:05:50 pattonme Exp $";
@


1.7
log
@updated to v3.2.9 of Darren's codebase. His code reimplements variable
locking, replaces u_long's with u_32_t to properly handle 64bit archs.
Wrapped OpenBSD specific preprocessor logic.
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_hx.c,v 1.6 1998/01/26 04:16:34 dgregor Exp $     */
d3 1
a3 1
 * Copyright (C) 1995-1997 by Darren Reed.
d50 1
a50 1
static const char rcsid[] = "@@(#)$Id$";
@


1.6
log
@IPF 3.2.3
@
text
@d1 1
a1 1
/*    $OpenBSD$     */
d39 5
a43 1
#include "ip_fil_compat.h"
d50 1
a50 1
static const char rcsid[] = "@@(#)$Id: ipft_hx.c,v 2.0.2.8.2.1 1997/11/12 10:56:07 darrenr Exp $";
@


1.5
log
@fix tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 1
a3 1
 * (C)opyright 1995 by Darren Reed.
d13 1
a18 1
#include <sys/types.h>
d20 1
d28 1
d30 1
a34 1
#include <netinet/tcpip.h>
d39 2
d44 3
a46 3
#if !defined(lint) && defined(LIBC_SCCS)
static	char	sccsid[] = "@@(#)ipft_hx.c	1.1 3/9/96 (C) 1996 Darren Reed";
static	char	rcsid[] = "$DRId: ipft_hx.c,v 2.0.1.2 1997/02/04 13:57:56 darrenr Exp $";
a49 2
extern	u_short	portnum();
extern	u_long	buildopts();
d51 4
a54 2
static	int	hex_open(), hex_close(), hex_readip();
static	char	*readhex();
d93 1
a93 2
	register char *s;
	struct	ip *ip;
d95 1
d97 1
a97 1
 	ip = (struct ip *)buf;
d112 29
a140 1
		ip = (struct ip *)readhex(line, (char *)ip);
@


1.4
log
@IPF 1.3.7
@
text
@d1 1
d42 1
a42 1
static	char	rcsid[] = "$Id: ipft_hx.c,v 2.0.1.2 1997/02/04 13:57:56 darrenr Exp $";
@


1.3
log
@r?index -> strr?chr
@
text
@a32 1
#include "ip_fil_compat.h"
d39 1
a39 1
#ifndef	lint
d41 1
a41 1
static	char	rcsid[] = "$Id: ipft_hx.c,v 1.2 1996/07/18 04:59:23 dm Exp $";
a92 1
	*ifn = NULL;
d94 1
a94 1
		if ((s = strchr(line, '\n'))) {
d99 1
a99 3
		if ((s = strchr(line, '\r')))
			*s = '\0';
		if ((s = strchr(line, '#')))
a106 2
		*ifn = NULL;
		*dir = 0;
@


1.2
log
@ipfilter 3.1.0
@
text
@d42 1
a42 1
static	char	rcsid[] = "$Id: ipft_hx.c,v 1.1.1.1 1996/06/23 07:27:17 darrenr Exp $";
d96 1
a96 1
		if ((s = index(line, '\n'))) {
d101 1
a101 1
		if ((s = index(line, '\r')))
d103 1
a103 1
		if ((s = index(line, '#')))
@


1.1
log
@ipfilter 3.0.4
@
text
@d33 1
d42 1
@
