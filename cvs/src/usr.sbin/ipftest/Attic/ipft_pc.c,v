head	1.19;
access;
symbols
	OPENBSD_2_9_BASE:1.18
	OPENBSD_2_9:1.18.0.2
	OPENBSD_2_8:1.16.0.4
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.16.0.2
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.12.0.4
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.12.0.2
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.19
date	2001.05.30.02.12.42;	author deraadt;	state dead;
branches;
next	1.18;

1.18
date	2001.01.30.04.31.01;	author kjell;	state Exp;
branches;
next	1.17;

1.17
date	2001.01.17.06.01.22;	author fgsch;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.13.23.40.20;	author kjell;	state Exp;
branches;
next	1.15;

1.15
date	2000.02.16.22.34.23;	author kjell;	state Exp;
branches;
next	1.14;

1.14
date	2000.02.01.19.30.01;	author kjell;	state Exp;
branches;
next	1.13;

1.13
date	99.12.15.05.20.26;	author kjell;	state Exp;
branches;
next	1.12;

1.12
date	99.02.05.05.58.46;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.09.15.10.05.50;	author pattonme;	state Exp;
branches;
next	1.10;

1.10
date	98.06.11.00.01.20;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	98.06.04.23.11.40;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.01.26.04.16.35;	author dgregor;	state Exp;
branches;
next	1.7;

1.7
date	97.06.23.16.44.49;	author kstailey;	state Exp;
branches;
next	1.6;

1.6
date	97.02.11.22.23.51;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.10.08.07.33.35;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.07.18.04.59.23;	author dm;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.21.40.26;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.01.25.05.41.33;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	96.01.07.02.34.25;	author dm;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Remove ipf.  Darren Reed has interpreted his (old, new, whichever)
licence in a way that makes ipf not free according to the rules we
established over 5 years ago, at www.openbsd.org/goals.html (and those
same basic rules govern the other *BSD projects too).  Specifically,
Darren says that modified versions are not permitted.  But software
which OpenBSD uses and redistributes must be free to all (be they
people or companies), for any purpose they wish to use it, including
modification, use, peeing on, or even integration into baby mulching
machines or atomic bombs to be dropped on Australia.  Furthermore, we
know of a number of companies using ipf with modification like us, who
are now in the same situation, and we hope that some of them will work
with us to fill this gap that now exists in OpenBSD (temporarily, we
hope).
@
text
@/*	$OpenBSD: ipft_pc.c,v 1.18 2001/01/30 04:31:01 kjell Exp $	*/

/*
 * Copyright (C) 1993-2000 by Darren Reed.
 *
 * Redistribution and use in source and binary forms are permitted
 * provided that this notice is preserved and due credit is given
 * to the original author and the contributors.
 */
#include <stdio.h>
#include <string.h>
#if !defined(__SVR4) && !defined(__GNUC__)
#include <strings.h>
#endif
#include <sys/types.h>
#include <sys/time.h>
#include <stdlib.h>
#include <unistd.h>
#include <stddef.h>
#include <sys/socket.h>
#include <sys/ioctl.h>
#include <sys/param.h>
#include <netinet/in.h>
#include <netinet/in_systm.h>
#ifndef	linux
#include <netinet/ip_var.h>
#endif
#include <netinet/ip.h>
#include <netinet/tcp.h>
#include <net/if.h>
#include <netinet/ip_fil_compat.h>
#include <netinet/tcpip.h>
#include "ipf.h"
#include "pcap.h"
#include "ipt.h"

#if !defined(lint)
static const char rcsid[] = "@@(#)$IPFilter: ipft_pc.c,v 2.2 2000/03/13 22:10:24 darrenr Exp $";
#endif

struct	llc	{
	int	lc_sz;	/* LLC header length */
	int	lc_to;	/* LLC Type offset */
	int	lc_tl;	/* LLC Type length */
};

/*
 * While many of these maybe the same, some do have different header formats
 * which make this useful.
 */
#define	DLT_MAX	14

static	struct	llc	llcs[DLT_MAX] = {
	{ 0, 0, 0 },	/* DLT_NULL */
	{ 14, 12, 2 },	/* DLT_E10MB */
	{ 0, 0, 0 },	/* DLT_EN3MB */
	{ 0, 0, 0 },	/* DLT_AX25 */
	{ 0, 0, 0 },	/* DLT_PRONET */
	{ 0, 0, 0 },	/* DLT_CHAOS */
	{ 0, 0, 0 },	/* DLT_IEEE802 */
	{ 0, 0, 0 },	/* DLT_ARCNET */
	{ 0, 0, 0 },	/* DLT_SLIP */
	{ 0, 0, 0 },	/* DLT_PPP */
	{ 0, 0, 0 },	/* DLT_FDDI */
	{ 0, 0, 0 },	/* DLT_ATMRFC1483 */
	{ 0, 0, 0 },   	/* DLT_LOOP */
	{ 0, 0, 0 }   	/* DLT_ENC */
};

static	int	pcap_open __P((char *));
static	int	pcap_close __P((void));
static	int	pcap_readip __P((char *, int, char **, int *));
static	void	swap_hdr __P((pcaphdr_t *));
static	int	pcap_read_rec __P((struct pcap_pkthdr *));

static	int	pfd = -1, s_type = -1, swapped = 0;

struct	ipread	pcap = { pcap_open, pcap_close, pcap_readip };

#define	SWAPLONG(y)	\
	((((y)&0xff)<<24) | (((y)&0xff00)<<8) | (((y)&0xff0000)>>8) | (((y)>>24)&0xff))
#define	SWAPSHORT(y)	\
	( (((y)&0xff)<<8) | (((y)&0xff00)>>8) )

static	void	swap_hdr(p)
pcaphdr_t	*p;
{
	p->pc_v_maj = SWAPSHORT(p->pc_v_maj);
	p->pc_v_min = SWAPSHORT(p->pc_v_min);
	p->pc_zone = SWAPLONG(p->pc_zone);
	p->pc_sigfigs = SWAPLONG(p->pc_sigfigs);
	p->pc_slen = SWAPLONG(p->pc_slen);
	p->pc_type = SWAPLONG(p->pc_type);
}

static	int	pcap_open(fname)
char	*fname;
{
	pcaphdr_t ph;
	int	fd;

	if (pfd != -1)
		return pfd;

	if (!strcmp(fname, "-"))
		fd = 0;
	else if ((fd = open(fname, O_RDONLY)) == -1)
		return -1;

	if (read(fd, (char *)&ph, sizeof(ph)) != sizeof(ph))
		return -2;

	if (ph.pc_id != TCPDUMP_MAGIC) {
		if (SWAPLONG(ph.pc_id) != TCPDUMP_MAGIC) {
			(void) close(fd);
			return -2;
		}
		swapped = 1;
		swap_hdr(&ph);
	}

	if (ph.pc_v_maj != PCAP_VERSION_MAJ || ph.pc_type >= DLT_MAX) {
		(void) close(fd);
		return -2;
	}

	pfd = fd;
	s_type = ph.pc_type;
	printf("opened pcap file %s:\n", fname);
	printf("\tid: %08x version: %d.%d type: %d snap %d\n",
		ph.pc_id, ph.pc_v_maj, ph.pc_v_min, ph.pc_type, ph.pc_slen);

	return fd;
}


static	int	pcap_close()
{
	return close(pfd);
}


/*
 * read in the header (and validate) which should be the first record
 * in a pcap file.
 */
static	int	pcap_read_rec(rec)
struct	pcap_pkthdr *rec;
{
	int	n, p;

	if (read(pfd, (char *)rec, sizeof(*rec)) != sizeof(*rec))
		return -2;

	if (swapped) {
		rec->ph_clen = SWAPLONG(rec->ph_clen);
		rec->ph_len = SWAPLONG(rec->ph_len);
		rec->ph_ts.tv_sec = SWAPLONG(rec->ph_ts.tv_sec);
		rec->ph_ts.tv_usec = SWAPLONG(rec->ph_ts.tv_usec);
	}
	p = rec->ph_clen;
	n = MIN(p, rec->ph_len);
	if (!n || n < 0)
		return -3;

	return p;
}


#ifdef	notyet
/*
 * read an entire pcap packet record.  only the data part is copied into
 * the available buffer, with the number of bytes copied returned.
 */
static	int	pcap_read(buf, cnt)
char	*buf;
int	cnt;
{
	struct	pcap_pkthdr rec;
	static	char	*bufp = NULL;
	int	i, n;

	if ((i = pcap_read_rec(&rec)) <= 0)
		return i;

	if (!bufp)
		bufp = malloc(i);
	else
		bufp = realloc(bufp, i);

	if (read(pfd, bufp, i) != i)
		return -2;

	n = MIN(i, cnt);
	bcopy(bufp, buf, n);
	return n;
}
#endif


/*
 * return only an IP packet read into buf
 */
static	int	pcap_readip(buf, cnt, ifn, dir)
char	*buf, **ifn;
int	cnt, *dir;
{
	static	char	*bufp = NULL;
	struct	pcap_pkthdr rec;
	struct	llc	*l;
	char	*s, ty[4];
	int	i, n;

	do {
		if ((i = pcap_read_rec(&rec)) <= 0)
			return i;

		if (!bufp)
			bufp = malloc(i);
		else
			bufp = realloc(bufp, i);
		s = bufp;

		if (read(pfd, s, i) != i)
			return -2;

		l = &llcs[s_type];
		i -= l->lc_sz;
		s += l->lc_to;
		bcopy(s, ty, l->lc_tl);
		s += l->lc_tl;
	} while (ty[0] != 0x8 && ty[1] != 0);
	n = MIN(i, cnt);
	bcopy(s, buf, n);
	return n;
}
@


1.18
log
@reimplement whacked changes. ip_compat.h to ip_fil_compat.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ipft_pc.c,v 1.17 2001/01/17 06:01:22 fgsch Exp $	*/
@


1.17
log
@2nd part of the ipf code; need more testing.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
#include <netinet/ip_compat.h>
d51 1
a51 1
#define	DLT_MAX	10
d53 1
a53 1
static	struct	llc	llcs[DLT_MAX+1] = {
d64 4
a67 1
	{ 0, 0, 0 }	/* DLT_FDDI */
d122 1
a122 1
	if (ph.pc_v_maj != PCAP_VERSION_MAJ || ph.pc_type > DLT_MAX) {
@


1.16
log
@Import of Darren Reed's IPFilter 3.3.11. See sbin/ipf/HISTORY for detailed
changelog. Documentation changes are now way behind. Volunteers?
@
text
@d4 1
a4 1
 * Copyright (C) 1993-1998 by Darren Reed.
d31 1
a31 1
#include <netinet/ip_fil_compat.h>
d38 1
a38 1
static const char rcsid[] = "@@(#)$IPFilter: ipft_pc.c,v 2.1 1999/08/04 17:30:03 darrenr Exp $";
d51 1
a51 1
#define	DLT_MAX	14
d53 1
a53 1
static	struct	llc	llcs[DLT_MAX] = {
d64 1
a64 4
	{ 0, 0, 0 },	/* DLT_FDDI */
	{ 0, 0, 0 },	/* DLT_ATMRFC1483 */
	{ 0, 0, 0 },   	/* DLT_LOOP */
	{ 0, 0, 0 }   	/* DLT_ENC */
d119 1
a119 1
	if (ph.pc_v_maj != PCAP_VERSION_MAJ || ph.pc_type >= DLT_MAX) {
@


1.15
log
@Import IPFilter 3.3.9. Primarily, bugfixes since 3.3.8. See sbin/ipf/HISTORY
for details.
@
text
@@


1.14
log
@Update to IPFilter 3.3.8. Man pages still to go. See sbin/ipf/HISTORY
for details.
@
text
@@


1.13
log
@Import of Darren Reed's IPFilter 3.3.4, including OpenBSD patches.

Many, many enhancements and improvements, including new in-kernel
proxies, enhancements to logging, and many bugfixes.

Note: Man pages have not yet been re-converted to mdoc.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d38 1
a38 1
static const char rcsid[] = "@@(#)$Id: ipft_pc.c,v 2.1 1999/08/04 17:30:03 darrenr Exp $";
@


1.12
log
@ipf 3.2.10; work by kjell
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_pc.c,v 1.11 1998/09/15 10:05:50 pattonme Exp $     */
d30 1
a30 5
#if defined(__OpenBSD__)
# include <netinet/ip_fil_compat.h>
#else
# include <netinet/ip_compat.h>
#endif
d33 1
a34 1
#include "pcap.h"
d37 1
a37 1
static const char rcsid[] = "@@(#)$Id: ipft_pc.c,v 1.11 1998/09/15 10:05:50 pattonme Exp $";
@


1.11
log
@updated to v3.2.9 of Darren's codebase. His code reimplements variable
locking, replaces u_long's with u_32_t to properly handle 64bit archs.
Wrapped OpenBSD specific preprocessor logic.
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_pc.c,v 1.10 1998/06/11 00:01:20 provos Exp $     */
d3 1
a3 1
 * Copyright (C) 1993-1997 by Darren Reed.
d41 1
a41 1
static const char rcsid[] = "@@(#)$Id$";
@


1.10
log
@handle IPSec processed packets (DLT_ENC) in libpcap, display them with
tcpdump + additional info (SPI + which type of transforms where passed).
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_pc.c,v 1.9 1998/06/04 23:11:40 deraadt Exp $     */
d30 5
a34 1
#include "ip_fil_compat.h"
d41 1
a41 1
static const char rcsid[] = "@@(#)$Id: ipft_pc.c,v 1.9 1998/06/04 23:11:40 deraadt Exp $";
d54 1
a54 1
#define	DLT_MAX	12
d56 1
a56 1
static	struct	llc	llcs[DLT_MAX+1] = {
d125 1
a125 1
	if (ph.pc_v_maj != PCAP_VERSION_MAJ || ph.pc_type > DLT_MAX) {
@


1.9
log
@add DLT_LOOP support; 4-byte header indicates proto; cstone@@pobox.com
@
text
@d1 1
a1 1
/*    $OpenBSD: ipft_pc.c,v 1.8 1998/01/26 04:16:35 dgregor Exp $     */
d37 1
a37 1
static const char rcsid[] = "@@(#)$Id: ipft_pc.c,v 1.8 1998/01/26 04:16:35 dgregor Exp $";
d65 2
a66 1
	{ 0, 0, 0 }		/* DLT_LOOP */
@


1.8
log
@IPF 3.2.3
@
text
@d1 1
a1 1
/*    $OpenBSD$     */
d37 1
a37 1
static const char rcsid[] = "@@(#)$Id: ipft_pc.c,v 2.0.2.6.2.1 1997/11/12 10:56:08 darrenr Exp $";
d50 1
a50 1
#define	DLT_MAX	10
d63 3
a65 1
	{ 0, 0, 0 }	/* DLT_FDDI */
@


1.7
log
@fix tags
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 1
a3 1
 * (C)opyright 1993-1996 by Darren Reed.
d24 1
d26 1
d29 2
a31 1
#include <net/if.h>
d36 2
a37 2
#if !defined(lint) && defined(LIBC_SCCS)
static	char	rcsid[] = "$DRId: ipft_pc.c,v 2.0.1.1 1997/01/09 15:14:44 darrenr Exp $";
d66 5
a70 1
static	int	pcap_open(), pcap_close(), pcap_readip();
@


1.6
log
@IPF 1.3.7
@
text
@d1 1
d34 1
a34 1
static	char	rcsid[] = "$Id: ipft_pc.c,v 2.0.1.1 1997/01/09 15:14:44 darrenr Exp $";
@


1.5
log
@Prototype & Stylistic fixes for high -W gcc levels
@
text
@a27 2
#include "ip_fil_compat.h"
#include "ip_fil.h"
d32 2
a33 2
#ifndef	lint
static	char	rcsid[] = "$Id: ipft_pc.c,v 1.4 1996/07/18 04:59:23 dm Exp $";
@


1.4
log
@ipfilter 3.1.0
@
text
@d28 1
d35 1
a35 1
static	char	rcsid[] = "$Id: ipft_pc.c,v 1.1.1.1 1996/06/23 07:27:17 darrenr Exp $";
@


1.3
log
@ipfilter 3.0.4
@
text
@d33 4
@


1.2
log
@IP filter 3.0.1
@
text
@d2 1
a2 1
 * (C)opyright 1993,1994,1995 by Darren Reed.
d61 1
a61 1
static	int	pfd = -1, s_type = -1;
d65 15
d98 9
d140 6
@


1.1
log
@from beurton@@fnet.fr:  Darren Reed's IP filter
@
text
@d28 1
a28 1
#include <netinet/ip_fil.h>
d125 1
d153 1
@
