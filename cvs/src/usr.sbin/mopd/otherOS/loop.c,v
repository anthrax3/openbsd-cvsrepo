head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.30
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.28
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.24
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.26
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.18
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.20
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.18
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.16
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	MOPD254:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2009.10.27.23.59.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.17.16.23.01;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.12.16.19.27.20;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.01.00.56.51;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.21.38.40;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	98.07.07.17.32.44;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.12.44;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.17;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.17;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: loop.c,v 1.7 2006/04/17 16:23:01 deraadt Exp $ */

/*
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "os.h"
#include "common/common.h"
#include "common/mopdef.h"

/*
 * The list of all interfaces that are being listened to.  loop()
 * "selects" on the descriptors in this list.
 */
struct if_info *iflist;
u_char	buf[BUFSIZE];

void   mopProcess   (/* struct if_info *, u_char * */);

int
mopOpenRC(p, trans)
	struct if_info *p;
	int	trans;
{
#ifndef NORC
	int	fd;

	fd = (*(p->iopen))(p->if_name,
			   O_RDWR,
			   MOP_K_PROTO_RC,
			   trans);
	if (fd >= 0) {
		pfAddMulti(fd, p->if_name, rc_mcst);
		pfEthAddr(fd, p->eaddr);
	}

	return fd;
#else
	return -1;
#endif
}

int
mopOpenDL(p, trans)
	struct if_info *p;
	int	trans;
{
#ifndef NODL
	int	fd;

	fd = (*(p->iopen))(p->if_name,
			   O_RDWR,
			   MOP_K_PROTO_DL,
			   trans);
	if (fd >= 0) {
		pfAddMulti(fd, p->if_name, dl_mcst);
		pfEthAddr(fd, p->eaddr);
	}

	return fd;
#else
	return -1;
#endif
}

void
mopReadRC(p, fd)
	struct if_info *p;
	int	fd;
{
	int cc;

	if ((cc = pfRead(fd, buf+HDRSIZ, BUFSIZE-HDRSIZ)) < 0) {
		return;
	}

	if (cc == 0)
		return;

	mopProcess(p, buf+HDRSIZ);

	return;
}

void
mopReadDL(p, fd)
	struct if_info *p;
	int	fd;
{
	int cc;

	if ((cc = pfRead(fd, buf+HDRSIZ, BUFSIZE-HDRSIZ)) < 0) {
		return;
	}

	if (cc == 0)
		return;

	mopProcess(p, buf+HDRSIZ);

	return;
}

/*
 * Loop indefinitely listening for MOP requests on the
 * interfaces in 'iflist'.
 */
void
Loop()
{
	fd_set  fds, listeners;
	int     maxfd = 0;
	struct if_info *ii;

	if (iflist == 0) {
		fprintf(stderr,"no interfaces");
		exit(0);
	}
	
	/*
         * Find the highest numbered file descriptor for select().
         * Initialize the set of descriptors to listen to.
         */
	FD_ZERO(&fds);
	for (ii = iflist; ii; ii = ii->next) {
		if (ii->fd != -1) {
			FD_SET(ii->fd, &fds);
			if (ii->fd > maxfd)
				maxfd = ii->fd;
	        }
	}
	while (1) {
		listeners = fds;
		if (select(maxfd + 1, &listeners, (fd_set *) 0,
			(fd_set *) 0, (struct timeval *) 0) < 0) {
			fprintf(stderr, "select: %s", strerror(errno));
			exit(0);
		}
		for (ii = iflist; ii; ii = ii->next) {
			if (ii->fd != -1) {
				if (FD_ISSET(ii->fd, &listeners))
					(*(ii->read))(ii,ii->fd);
			}
		}
	}
}





@


1.7
log
@more cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: loop.c,v 1.6 2003/12/16 19:27:20 deraadt Exp $ */
a25 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: loop.c,v 1.6 2003/12/16 19:27:20 deraadt Exp $";
#endif
@


1.6
log
@bad printf; leopold-bloom@@foni.net
@
text
@d1 1
a1 1
/*	$OpenBSD: loop.c,v 1.5 2003/12/01 00:56:51 avsm Exp $ */
d27 2
a28 2
#ifndef LINT
static const char rcsid[] = "$OpenBSD: loop.c,v 1.5 2003/12/01 00:56:51 avsm Exp $";
@


1.5
log
@-Wall cleanup: trim unused vars, right format strings, constify rcsids,
braces where needed, add missing prototypes.

tested and ok maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: loop.c,v 1.4 2003/06/02 21:38:40 maja Exp $ */
d28 1
a28 1
static const char rcsid[] = "$OpenBSD: loop.c,v 1.4 2003/06/02 21:38:40 maja Exp $";
d160 1
a160 1
			fprintf(stderr, "select: %s");
@


1.4
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: loop.c,v 1.3 1998/07/07 17:32:44 art Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: loop.c,v 1.3 1998/07/07 17:32:44 art Exp $";
@


1.3
log
@fd_set is not a struct
@
text
@d1 1
a1 1
/*	$OpenBSD: loop.c,v 1.2 1996/09/21 19:12:44 maja Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: loop.c,v 1.2 1996/09/21 19:12:44 maja Exp $";
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: loop.c,v 1.1.1.1 1996/09/21 13:49:17 maja Exp $";
d163 2
a164 2
		if (select(maxfd + 1, &listeners, (struct fd_set *) 0,
			(struct fd_set *) 0, (struct timeval *) 0) < 0) {
@


1.1
log
@Initial revision
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: loop.c,v 1.8 1996/08/07 23:48:15 moj Exp $";
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@
