head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.32
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.28
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.24
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.26
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.18
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.22
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.14
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.10
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.8
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.6
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.4
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.2
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.14
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	MOPD254:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2009.10.27.23.59.52;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2006.10.11.20.56.59;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2006.04.17.16.23.01;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.21.01.40.24;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.14.20.37.28;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.01.00.56.51;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.21.38.39;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.16.44.25;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.28.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.07.17.32.46;	author art;	state Exp;
branches;
next	1.3;

1.3
date	97.08.18.03.11.30;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.11.38;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches;
next	;


desc
@@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: loop-bsd.c,v 1.12 2006/10/11 20:56:59 deraadt Exp $ */

/*
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <errno.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#if defined(__bsdi__) || defined(__FreeBSD__)
#include <sys/time.h>
#endif
#include <net/bpf.h>
#include <sys/ioctl.h>

#include "os.h"
#include "common/common.h"
#include "common/mopdef.h"

int
mopOpenRC(struct if_info *p, int trans)
{
#ifndef NORC
	return (*(p->iopen))(p->if_name, O_RDWR, MOP_K_PROTO_RC, trans);
#else
	return (-1);
#endif
}

int
mopOpenDL(struct if_info *p, int trans)
{
#ifndef NODL
	return (*(p->iopen))(p->if_name, O_RDWR, MOP_K_PROTO_DL, trans);
#else
	return (-1);
#endif
}

void
mopReadRC(void)
{
}

void
mopReadDL(void)
{
}

/*
 * The list of all interfaces that are being listened to.  loop()
 * "selects" on the descriptors in this list.
 */
struct if_info *iflist;

void   mopProcess(struct if_info *, u_char *);

/*
 * Loop indefinitely listening for MOP requests on the
 * interfaces in 'iflist'.
 */
void
Loop(void)
{
	u_char		*buf, *bp, *ep;
	int		 cc;
	fd_set		 fds, listeners;
	int		 bufsize, maxfd = 0;
	struct if_info	*ii;

	if (iflist == 0) {
		syslog(LOG_ERR, "no interfaces");
		exit(0);
	}
	if (iflist->fd != -1)
		if (ioctl(iflist->fd, BIOCGBLEN, (caddr_t)&bufsize) < 0) {
			syslog(LOG_ERR, "BIOCGBLEN: %m");
			exit(0);
		}

	buf = malloc(bufsize);
	if (buf == 0) {
		syslog(LOG_ERR, "malloc: %m");
		exit(0);
	}
	/*
         * Find the highest numbered file descriptor for select().
         * Initialize the set of descriptors to listen to.
         */
	FD_ZERO(&fds);
	for (ii = iflist; ii; ii = ii->next)
		if (ii->fd != -1) {
			FD_SET(ii->fd, &fds);
			if (ii->fd > maxfd)
				maxfd = ii->fd;
		}

	while (1) {
		listeners = fds;
		if (select(maxfd + 1, &listeners, NULL, NULL, NULL) < 0) {
			syslog(LOG_ERR, "select: %m");
			exit(0);
		}
		for (ii = iflist; ii; ii = ii->next)
			if (ii->fd != -1) {
				if (!FD_ISSET(ii->fd, &listeners))
					continue;
again:
			cc = read(ii->fd, buf, bufsize);
			/* Don't choke when we get ptraced */
			if (cc < 0 && errno == EINTR)
				goto again;
			/* Due to a SunOS bug, after 2^31 bytes, the file
			 * offset overflows and read fails with EINVAL.  The
			 * lseek() to 0 will fix things. */
			if (cc < 0) {
				if (errno == EINVAL && (lseek(ii->fd, 0,
				    SEEK_CUR) + bufsize) < 0) {
					lseek(ii->fd, 0, SEEK_SET);
					goto again;
				}
				syslog(LOG_ERR, "read: %m");
				exit(0);
			}
			/* Loop through the packet(s) */
#define bhp ((struct bpf_hdr *)bp)
			bp = buf;
			ep = bp + cc;
			while (bp < ep) {
				int caplen, hdrlen;

				caplen = bhp->bh_caplen;
				hdrlen = bhp->bh_hdrlen;
				mopProcess(ii, bp + hdrlen);
				bp += BPF_WORDALIGN(hdrlen + caplen);
			}
		}
	}
}
@


1.12
log
@use SEEK_SET; chl@@tuxfamily.org
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.11 2006/04/17 16:23:01 deraadt Exp $ */
a25 5

#ifndef lint
static const char rcsid[] =
    "$OpenBSD: loop-bsd.c,v 1.11 2006/04/17 16:23:01 deraadt Exp $";
#endif
@


1.11
log
@more cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.10 2005/12/21 01:40:24 millert Exp $ */
d29 1
a29 1
    "$OpenBSD: loop-bsd.c,v 1.10 2005/12/21 01:40:24 millert Exp $";
d145 1
a145 1
					lseek(ii->fd, 0, 0);
@


1.10
log
@Userland programs should include <errno.h> not <sys/errno.h>
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.9 2004/04/14 20:37:28 henning Exp $ */
d27 1
a27 1
#ifndef LINT
d29 1
a29 1
    "$OpenBSD: loop-bsd.c,v 1.9 2004/04/14 20:37:28 henning Exp $";
@


1.9
log
@4000 lines worth of cleanup, KNF, Knall&Rauch elemination and such
tested by hshoexer, "don't wait for me" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.8 2003/12/01 00:56:51 avsm Exp $ */
d29 1
a29 1
    "$OpenBSD: loop-bsd.c,v 1.8 2003/12/01 00:56:51 avsm Exp $";
d32 1
a40 1
#include <sys/errno.h>
@


1.8
log
@-Wall cleanup: trim unused vars, right format strings, constify rcsids,
braces where needed, add missing prototypes.

tested and ok maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.7 2003/06/02 21:38:39 maja Exp $ */
d28 2
a29 1
static const char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.7 2003/06/02 21:38:39 maja Exp $";
d47 1
a47 3
mopOpenRC(p, trans)
	struct if_info *p;
	int	trans;
d50 1
a50 4
	return (*(p->iopen))(p->if_name,
			     O_RDWR,
			     MOP_K_PROTO_RC,
			     trans);
d52 1
a52 1
	return -1;
d57 1
a57 3
mopOpenDL(p, trans)
	struct if_info *p;
	int	trans;
d60 1
a60 4
	return (*(p->iopen))(p->if_name,
			     O_RDWR,
			     MOP_K_PROTO_DL,
			     trans);
d62 1
a62 1
	return -1;
d67 1
a67 1
mopReadRC()
d72 1
a72 1
mopReadDL()
d89 1
a89 1
Loop()
d91 5
a95 5
	u_char *buf, *bp, *ep;
	int     cc;
	fd_set  fds, listeners;
	int     bufsize, maxfd = 0;
	struct if_info *ii;
d101 2
a102 2
	if (iflist->fd != -1) {
		if (ioctl(iflist->fd, BIOCGBLEN, (caddr_t) & bufsize) < 0) {
d105 3
a107 3
	        }
	}
	buf = (u_char *) malloc((unsigned) bufsize);
d117 1
a117 1
	for (ii = iflist; ii; ii = ii->next) {
d122 2
a123 2
	        }
	}
d126 1
a126 2
		if (select(maxfd + 1, &listeners, (fd_set *) 0,
			(fd_set *) 0, (struct timeval *) 0) < 0) {
d130 1
a130 1
		for (ii = iflist; ii; ii = ii->next) {
d134 2
a135 3
			}
	again:
			cc = read(ii->fd, (char *) buf, bufsize);
d143 3
a145 3
				if (errno == EINVAL &&
				    (lseek(ii->fd, 0, SEEK_CUR) + bufsize) < 0) {
					(void) lseek(ii->fd, 0, 0);
@


1.7
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.6 2002/03/14 16:44:25 mpech Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.6 2002/03/14 16:44:25 mpech Exp $";
@


1.6
log
@kill more registers.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.5 2002/02/16 21:28:04 millert Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.5 2002/02/16 21:28:04 millert Exp $";
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.4 1998/07/07 17:32:46 art Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.4 1998/07/07 17:32:46 art Exp $";
d172 1
a172 1
				register int caplen, hdrlen;
@


1.4
log
@fd_set is not a struct
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.3 1997/08/18 03:11:30 millert Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.3 1997/08/18 03:11:30 millert Exp $";
d96 1
a96 1
void   mopProcess    __P((struct if_info *, u_char *));
@


1.3
log
@#include <string.h> not <strings.h> -- Yes, I'm a weanie...
@
text
@d1 1
a1 1
/*	$OpenBSD: loop-bsd.c,v 1.2 1996/09/21 19:11:38 maja Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.2 1996/09/21 19:11:38 maja Exp $";
d140 2
a141 2
		if (select(maxfd + 1, &listeners, (struct fd_set *) 0,
			(struct fd_set *) 0, (struct timeval *) 0) < 0) {
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: loop-bsd.c,v 1.1.1.1 1996/09/21 13:49:16 maja Exp $";
d37 1
a37 1
#include <strings.h>
@


1.1
log
@Initial revision
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: loop-bsd.c,v 1.11 1996/08/16 22:41:28 moj Exp $";
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@
