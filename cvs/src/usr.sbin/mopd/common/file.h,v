head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.8
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.4
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.6
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.11.0.8
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.6
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.2
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.10.0.28
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.26
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.24
	OPENBSD_5_0:1.10.0.22
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.20
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.18
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.14
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.16
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.12
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.10
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.8
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.6
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.4
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.2
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.9.0.8
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.6
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	MOPD254:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.12.13.14.44.59;	author miod;	state Exp;
branches;
next	1.11;
commitid	KfI83DTUbjunQXXj;

1.11
date	2013.07.05.21.02.07;	author miod;	state Exp;
branches;
next	1.10;

1.10
date	2006.04.29.16.26.56;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.14.20.37.28;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.01.00.56.51;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.21.38.39;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.10.21.05.25;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.17.19.42.36;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.28.04;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.12.12.03.03;	author heko;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.11.33;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Give the mop suite the ability to process alpha Elf64 files and create mop
alpha images of them.
@
text
@/*	$OpenBSD: file.h,v 1.11 2013/07/05 21:02:07 miod Exp $ */

/*
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *	$OpenBSD: file.h,v 1.11 2013/07/05 21:02:07 miod Exp $
 *
 */

#ifndef _FILE_H_
#define _FILE_H_

#define INFO_PRINT 1

const char	*FileTypeName(mopd_imagetype);

void		mopFilePutLX(u_char *, int, u_int32_t, int);
void		mopFilePutBX(u_char *, int, u_int32_t, int);
u_int32_t	mopFileGetLX(u_char *, int, int);
u_int32_t	mopFileGetBX(u_char *, int, int);
u_int64_t	mopFileGetLXX(u_char *, int, int);
u_int64_t	mopFileGetBXX(u_char *, int, int);
ssize_t		mopFileRead(struct dllist *, u_char *);
void		mopFileSwapX(u_char *, int, int);

int		CheckMopFile(int);
int		GetMopFileInfo(struct dllist *, int);

int		CheckElfFile(int);
int		GetElf32FileInfo(struct dllist *, int);
int		GetElf64FileInfo(struct dllist *, int);

int		CheckAOutFile(int);
int		GetAOutFileInfo(struct dllist *, int);

int		GetFileInfo(struct dllist *, int);

#endif /* _FILE_H_ */
@


1.11
log
@Teach mopd and mopa.out about ELF files, and allow forthcoming VAX ELF boot
blocks to be converted to working mop binaries. From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.10 2006/04/29 16:26:56 maja Exp $ */
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.10 2006/04/29 16:26:56 maja Exp $
d41 2
d50 2
a51 1
int		GetElfFileInfo(struct dllist *, int);
@


1.10
log
@Change the compile time option -DINFO into a runtime option to get ride
of some lint warnings. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.9 2004/04/14 20:37:28 henning Exp $ */
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.9 2004/04/14 20:37:28 henning Exp $
d35 19
a53 13
void	mopFilePutLX(u_char *, int, u_long, int);
void	mopFilePutBX(u_char *, int, u_long, int);
u_long	mopFileGetLX(void *, int, int);
u_long	mopFileGetBX(void *, int, int);
void	mopFileSwapX(void *, int, int);
int	CheckMopFile(int);
int	GetMopFileInfo(int, u_long *, u_long *, int);
int	CheckAOutFile(int);
int	GetAOutFileInfo(int, u_long *, u_long *, u_long *, u_long *,
			u_long *, u_long *, u_long *, u_long *, int *, int);
int	GetFileInfo(int, u_long *, u_long *, int *, u_long *, u_long *,
		    u_long *, u_long *, u_long *, u_long *, int);
ssize_t mopFileRead(struct dllist *, u_char *);
@


1.9
log
@4000 lines worth of cleanup, KNF, Knall&Rauch elemination and such
tested by hshoexer, "don't wait for me" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.8 2003/12/01 00:56:51 avsm Exp $ */
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.8 2003/12/01 00:56:51 avsm Exp $
d33 2
d41 1
a41 1
int	GetMopFileInfo(int, u_long *, u_long *);
d44 1
a44 1
			u_long *, u_long *, u_long *, u_long *, int *);
d46 1
a46 1
		    u_long *, u_long *, u_long *, u_long *);
@


1.8
log
@-Wall cleanup: trim unused vars, right format strings, constify rcsids,
braces where needed, add missing prototypes.

tested and ok maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.7 2003/06/02 21:38:39 maja Exp $ */
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.7 2003/06/02 21:38:39 maja Exp $
d35 3
a37 3
u_long	mopFileGetLX(u_char *, int, int);
u_long	mopFileGetBX(u_char *, int, int);
void	mopFileSwapX(u_char *, int, int);
@


1.7
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.6 2002/06/10 21:05:25 maja Exp $ */
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.6 2002/06/10 21:05:25 maja Exp $
d45 1
@


1.6
log
@Remove NO__P since __P has been removed. Found by hin@@ -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.5 2002/02/17 19:42:36 millert Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 1
a26 1
 *	$OpenBSD: file.h,v 1.5 2002/02/17 19:42:36 millert Exp $
@


1.5
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.4 2002/02/16 21:28:04 millert Exp $ */
d31 1
a31 1
 *	$OpenBSD: file.h,v 1.4 2002/02/16 21:28:04 millert Exp $
a37 15
#ifdef NO__P
void	mopFilePutLX   (/* u_char *, int, u_long, int */);
void	mopFilePutBX   (/* u_char *, int, u_long, int */);
u_long	mopFileGetLX   (/* u_char *, int, int */);
u_long	mopFileGetBX   (/* u_char *, int, int */);
void	mopFileSwapX   (/* u_char *, int, int */);
int	CheckMopFile   (/* int */);
int	GetMopFileInfo (/* int, u_long *, u_long * */);
int	CheckAOutFile  (/* int */);
int	GetAOutFileInfo(/* int, u_long *, u_long *, u_long *, u_long *,
			   u_long *, u_long *, u_long *, u_long * */);
int	GetFileInfo    (/* int, u_long *, u_long *, int *, u_long *, u_long *,
			   u_long *, u_long *, u_long *, u_long * */);
#else
__BEGIN_DECLS
a49 2
__END_DECLS
#endif
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.3 2001/08/12 12:03:03 heko Exp $ */
d31 1
a31 1
 *	$OpenBSD: file.h,v 1.3 2001/08/12 12:03:03 heko Exp $
d61 4
a64 5
int	GetAOutFileInfo __P((int, u_long *, u_long *, u_long *, u_long *,
			     u_long *, u_long *, u_long *, u_long *, int *));
int	GetFileInfo     __P((int, u_long *, u_long *, int *,
			     u_long *, u_long *, u_long *, u_long *,
			     u_long *, u_long *));
@


1.3
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: file.h,v 1.2 1996/09/21 19:11:33 maja Exp $ */
d31 1
a31 1
 *	$OpenBSD: file.h,v 1.2 1996/09/21 19:11:33 maja Exp $
d53 8
a60 8
void	mopFilePutLX    __P((u_char *, int, u_long, int));
void	mopFilePutBX    __P((u_char *, int, u_long, int));
u_long	mopFileGetLX    __P((u_char *, int, int));
u_long	mopFileGetBX    __P((u_char *, int, int));
void	mopFileSwapX    __P((u_char *, int, int));
int	CheckMopFile    __P((int));
int	GetMopFileInfo  __P((int, u_long *, u_long *));
int	CheckAOutFile   __P((int));
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d31 1
a31 1
 *	$OpenBSD: file.h,v 1.1.1.1 1996/09/21 13:49:16 maja Exp $
d69 1
a69 1
#endif _FILE_H_
@


1.1
log
@Initial revision
@
text
@d1 2
d31 1
a31 1
 *	$Id: file.h,v 1.2 1996/08/13 18:36:17 moj Exp $
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@
