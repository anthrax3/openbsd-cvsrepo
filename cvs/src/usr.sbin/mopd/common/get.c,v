head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.34
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.32
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.28
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.24
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.26
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.18
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	MOPD254:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2009.10.27.23.59.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2006.04.17.13.17.07;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2004.04.14.20.37.28;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2003.12.01.00.56.51;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.21.38.39;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	2002.03.14.16.44.25;	author mpech;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.11.35;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches;
next	;


desc
@@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@/*	$OpenBSD: get.c,v 1.7 2006/04/17 13:17:07 maja Exp $ */

/*
 * Copyright (c) 1993-2006 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include "common/mopdef.h"

u_char
mopGetChar(u_char *pkt, int *idx)
{
	u_char ret;

	ret = pkt[*idx];
	*idx = *idx + 1;
	return (ret);
}

u_short
mopGetShort(u_char *pkt, int *idx)
{
	u_short ret;

	ret = pkt[*idx] + pkt[*idx+1]*256;
	*idx = *idx + 2;
	return (ret);
}

u_short
mopGetNShort(u_char *pkt, int *idx)
{
	u_short ret;

	ret = pkt[*idx]*256 + pkt[*idx+1];
	*idx = *idx + 2;
	return (ret);
}

u_long
mopGetLong(u_char *pkt, int *idx)
{
	u_long ret;

	ret = pkt[*idx] + pkt[*idx+1]*0x100 + pkt[*idx+2]*0x10000 +
	    pkt[*idx+3]*0x1000000;
	*idx = *idx + 4;
	return (ret);
}

void
mopGetMulti(u_char *pkt, int *idx, u_char *dest, int size)
{
	int i;

	for (i = 0; i < size; i++)
		dest[i] = pkt[*idx+i];
	*idx = *idx + size;
}

int
mopGetTrans(u_char *pkt, int trans)
{
	u_short	ptype;

	if (trans == 0) {
		ptype = pkt[12]*256 + pkt[13];
		if (ptype < 1600)
			trans = TRANS_8023;
		else
			trans = TRANS_ETHER;
	}
	return (trans);
}

void
mopGetHeader(u_char *pkt, int *idx, u_char **dst, u_char **src,
    u_short *proto, int *len, int trans)
{
	*dst = pkt;
	*src = pkt + 6;
	*idx = *idx + 12;

	switch (trans) {
	case TRANS_ETHER:
		*proto = mopGetNShort(pkt, idx);
		*len   = (int)mopGetShort(pkt, idx);
		break;
	case TRANS_8023:
		*len   = (int)mopGetNShort(pkt, idx);
		*idx   = *idx + 6;
		*proto = mopGetNShort(pkt, idx);
		break;
	}
}

u_short
mopGetLength(u_char *pkt, int trans)
{
	switch (trans) {
	case TRANS_ETHER:
		return (pkt[14] + pkt[15]*256);
	case TRANS_8023:
		return (pkt[12]*256 + pkt[13]);
	}
	return (0);
}
@


1.7
log
@Make the code lint friendly. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: get.c,v 1.6 2004/04/14 20:37:28 henning Exp $ */
a25 5

#ifndef lint
static const char rcsid[] =
    "$OpenBSD: get.c,v 1.6 2004/04/14 20:37:28 henning Exp $";
#endif
@


1.6
log
@4000 lines worth of cleanup, KNF, Knall&Rauch elemination and such
tested by hshoexer, "don't wait for me" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: get.c,v 1.5 2003/12/01 00:56:51 avsm Exp $ */
d4 1
a4 1
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
d27 1
a27 1
#ifndef LINT
d29 1
a29 1
    "$OpenBSD: get.c,v 1.5 2003/12/01 00:56:51 avsm Exp $";
d36 1
a36 1
mopGetChar(u_char *pkt, int *index)
d40 2
a41 2
	ret = pkt[*index];
	*index = *index + 1;
d46 1
a46 1
mopGetShort(u_char *pkt, int *index)
d50 12
a61 2
	ret = pkt[*index] + pkt[*index+1]*256;
	*index = *index + 2;
d66 1
a66 1
mopGetLong(u_char *pkt, int *index)
d70 3
a72 3
	ret = pkt[*index] + pkt[*index+1]*0x100 + pkt[*index+2]*0x10000 +
	    pkt[*index+3]*0x1000000;
	*index = *index + 4;
d77 1
a77 1
mopGetMulti(u_char *pkt, int *index, u_char *dest, int size)
d82 2
a83 2
		dest[i] = pkt[*index+i];
	*index = *index + size;
d89 1
a89 1
	u_short	*ptype;
d92 2
a93 2
		ptype = (u_short *)(pkt+12);
		if (ntohs(*ptype) < 1600)
d102 1
a102 1
mopGetHeader(u_char *pkt, int *index, u_char **dst, u_char **src,
d107 1
a107 1
	*index = *index + 12;
d111 2
a112 4
		*proto = (u_short)(pkt[*index] * 256 + pkt[*index + 1]);
		*index = *index + 2;
		*len   = (int)(pkt[*index + 1] * 256 + pkt[*index]);
		*index = *index + 2;
d115 3
a117 4
		*len   = (int)(pkt[*index] * 256 + pkt[*index + 1]);
		*index = *index + 8;
		*proto = (u_short)(pkt[*index] * 256 + pkt[*index + 1]);
		*index = *index + 2;
d127 1
a127 2
		return (pkt[15] * 256 + pkt[14]);
		break;
d129 1
a129 2
		return (pkt[12] * 256 + pkt[13]);
		break;
@


1.5
log
@-Wall cleanup: trim unused vars, right format strings, constify rcsids,
braces where needed, add missing prototypes.

tested and ok maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: get.c,v 1.4 2003/06/02 21:38:39 maja Exp $ */
d28 2
a29 1
static const char rcsid[] = "$OpenBSD: get.c,v 1.4 2003/06/02 21:38:39 maja Exp $";
d36 1
a36 3
mopGetChar(pkt, index)
	u_char *pkt;
	int    *index;
d38 1
a38 1
        u_char ret;
d42 1
a42 1
	return(ret);
d46 1
a46 3
mopGetShort(pkt, index)
	u_char *pkt;
	int    *index;
d48 2
a49 2
        u_short ret;
	
d52 1
a52 1
	return(ret);
d56 6
a61 10
mopGetLong(pkt, index)
	u_char *pkt;
	int    *index;
{
        u_long ret;
	
	ret = pkt[*index] +
	      pkt[*index+1]*0x100 +
	      pkt[*index+2]*0x10000 +
	      pkt[*index+3]*0x1000000;
d63 1
a63 1
	return(ret);
d67 1
a67 3
mopGetMulti(pkt, index, dest, size)
	u_char *pkt,*dest;
	int    *index,size;
d71 2
a72 3
	for (i = 0; i < size; i++) {
	  dest[i] = pkt[*index+i];
	}  
a73 1

d77 1
a77 3
mopGetTrans(pkt, trans)
	u_char	*pkt;
	int	 trans;
d80 1
a80 1
	
d83 1
a83 1
		if (ntohs(*ptype) < 1600) {
d85 1
a85 1
		} else {
a86 1
		}
d88 1
a88 1
	return(trans);
d92 2
a93 4
mopGetHeader(pkt, index, dst, src, proto, len, trans)
	u_char	*pkt, **dst, **src;
	int	*index, *len, trans;
	u_short	*proto;
d99 1
a99 1
	switch(trans) {
d101 1
a101 1
		*proto = (u_short)(pkt[*index]*256 + pkt[*index+1]);
d103 1
a103 1
		*len   = (int)(pkt[*index+1]*256 + pkt[*index]);
d107 1
a107 1
		*len   = (int)(pkt[*index]*256 + pkt[*index+1]);
d109 1
a109 1
		*proto = (u_short)(pkt[*index]*256 + pkt[*index+1]);
d116 1
a116 3
mopGetLength(pkt, trans)
	u_char	*pkt;
	int	 trans;
d118 1
a118 1
	switch(trans) {
d120 1
a120 1
		return(pkt[15]*256 + pkt[14]);
d123 1
a123 1
		return(pkt[12]*256 + pkt[13]);
d126 1
a126 1
	return(0);
@


1.4
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: get.c,v 1.3 2002/03/14 16:44:25 mpech Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: get.c,v 1.3 2002/03/14 16:44:25 mpech Exp $";
@


1.3
log
@kill more registers.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: get.c,v 1.2 1996/09/21 19:11:35 maja Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: get.c,v 1.2 1996/09/21 19:11:35 maja Exp $";
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: get.c,v 1.1.1.1 1996/09/21 13:49:16 maja Exp $";
d41 2
a42 2
	register u_char *pkt;
	register int    *index;
d53 2
a54 2
	register u_char *pkt;
	register int    *index;
d65 2
a66 2
	register u_char *pkt;
	register int    *index;
d80 2
a81 2
	register u_char *pkt,*dest;
	register int    *index,size;
@


1.1
log
@Initial revision
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: get.c,v 1.5 1996/03/31 18:50:14 moj Exp $";
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@
