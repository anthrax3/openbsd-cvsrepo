head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.28
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.26
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.24
	OPENBSD_5_0:1.7.0.22
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.20
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.18
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.14
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.16
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.12
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.10
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.8
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.6
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	MOPD254:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2014.12.13.14.44.59;	author miod;	state Exp;
branches;
next	1.8;
commitid	KfI83DTUbjunQXXj;

1.8
date	2013.07.05.21.02.07;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2006.05.11.05.18.38;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2004.09.20.17.51.07;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.14.20.37.28;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.21.38.39;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.12.12.03.03;	author heko;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.11.21;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.16;	author maja;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Give the mop suite the ability to process alpha Elf64 files and create mop
alpha images of them.
@
text
@/*	$OpenBSD: common.h,v 1.8 2013/07/05 21:02:07 miod Exp $	*/
/*	$NetBSD: common.h,v 1.9 2011/08/30 19:49:10 joerg Exp $	*/

/*
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#ifndef _COMMON_H_
#define _COMMON_H_

#define MAXDL		16		/* maximum number concurrent load */
#define IFNAME_SIZE	32		/* maximum size if interface name */
#define BUFSIZE		1600		/* main receive buffer size	*/
#define HDRSIZ		22		/* room for 803.2 header	*/

#ifndef MOP_FILE_PATH
#define MOP_FILE_PATH	"/tftpboot/mop"
#endif

#define DEBUG_ONELINE	1
#define DEBUG_HEADER	2
#define DEBUG_INFO	3

/*
 * structure per interface
 *
 */

struct if_info {
	int	fd;			/* File Descriptor                 */
	int	trans;			/* Transport type Ethernet/802.3   */
	u_char	eaddr[6];		/* Ethernet addr of this interface */
	char	if_name[IFNAME_SIZE];	/* Interface Name		   */
	int	(*iopen)(char *, int, u_short, int);
					/* Interface Open Routine	   */
	int	(*write)(int, u_char *, int, int);
					/* Interface Write Routine	   */
	void	(*read)(void);		/* Interface Read Routine          */
	struct if_info *next;		/* Next Interface		   */
};

#define DL_STATUS_FREE		 0
#define DL_STATUS_READ_IMGHDR	 1
#define DL_STATUS_SENT_MLD	 2
#define DL_STATUS_SENT_PLT	 3

typedef enum {
	IMAGE_TYPE_MOP,			/* MOP image */
	IMAGE_TYPE_AOUT,		/* a.out image */
	IMAGE_TYPE_ELF32,		/* Elf32 image */
	IMAGE_TYPE_ELF64		/* Elf64 image */
} mopd_imagetype;

struct dllist {
	u_char		status;		/* Status byte			*/
	struct if_info *ii;		/* interface pointer		*/
	u_char		eaddr[6];	/* targets ethernet addres	*/
	int		ldfd;		/* filedescriptor for loadfile	*/
	u_short		dl_bsz;		/* Data Link Buffer Size	*/
	int		timeout;	/* Timeout counter		*/
	u_char		count;		/* Packet Counter		*/
	u_int32_t	loadaddr;	/* Load Address			*/
	u_int32_t	xferaddr;	/* Transfer Address		*/
	u_int32_t	nloadaddr;	/* Next Load Address		*/
	off_t		lseek;		/* Seek before last read	*/
	mopd_imagetype	image_type;	/* what type of image is it?	*/

	/* For ELF files */
	int		e_machine;	/* Machine ID			*/
	int		e_nsec;		/* number of program sections	*/
#define	SEC_MAX	4
	struct {
		off_t s_foff;		/* file offset of section	*/
		u_int32_t s_vaddr;	/* virtual address of section	*/
		u_int32_t s_fsize;	/* file size of section		*/
		u_int32_t s_msize;	/* memory size of section	*/
		u_int32_t s_pad;	/* padding until next section	*/
		u_int32_t s_loff;	/* logical offset into image	*/
	} e_sections[SEC_MAX];		/* program sections		*/
	u_int32_t	e_curpos;	/* current logical position	*/
	int		e_cursec;	/* current section */

	/* For a.out files */
	int		a_mid;		/* Machine ID			*/
	u_int32_t	a_text;		/* Size of text segment		*/
	u_int32_t	a_text_fill;	/* Size of text segment fill	*/
	u_int32_t	a_data;		/* Size of data segment		*/
	u_int32_t	a_data_fill;	/* Size of data segment fill	*/
	u_int32_t	a_bss;		/* Size of bss segment		*/
	u_int32_t	a_bss_fill;	/* Size of bss segment fill	*/
	off_t		a_lseek;	/* Keep track of pos in newfile */
};

#endif /* _COMMON_H_ */
@


1.8
log
@Teach mopd and mopa.out about ELF files, and allow forthcoming VAX ELF boot
blocks to be converted to working mop binaries. From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d71 2
a72 1
	IMAGE_TYPE_ELF32		/* Elf32 image */
d89 1
a89 1
	/* For Elf32 files */
@


1.7
log
@Some more delint. -moj
@
text
@d1 2
a2 1
/*	$OpenBSD: common.h,v 1.6 2004/09/20 17:51:07 miod Exp $ */
a26 2
 *	$OpenBSD: common.h,v 1.6 2004/09/20 17:51:07 miod Exp $
 *
d32 4
a35 4
#define	MAXDL		16		/* maximum number concurrent load */
#define	IFNAME_SIZE	32		/* maximum size if interface name */
#define	BUFSIZE		1600		/* main receive buffer size	*/
#define	HDRSIZ		22		/* room for 803.2 header	*/
d41 3
a43 3
#define	DEBUG_ONELINE	1
#define	DEBUG_HEADER	2
#define	DEBUG_INFO	3
d55 5
a59 3
	int	(*iopen)();		/* Interface Open Routine	   */
	int	(*write)();		/* Interface Write Routine	   */
	void	(*read)();		/* Interface Read Routine          */
d63 10
a72 4
#define	DL_STATUS_FREE		 0
#define	DL_STATUS_READ_IMGHDR	 1
#define	DL_STATUS_SENT_MLD	 2
#define	DL_STATUS_SENT_PLT	 3
d75 1
a75 1
	u_char	status;			/* Status byte			*/
d77 35
a111 17
	u_char	eaddr[6];		/* targets ethernet address	*/
	int	ldfd;			/* filedescriptor for loadfile	*/
	u_long	dl_bsz;			/* Data Link Buffer Size	*/
	int	timeout;		/* Timeout counter		*/
	u_char	count;			/* Packet Counter		*/
	u_long	loadaddr;		/* Load Address			*/
	u_long	xferaddr;		/* Transfer Address		*/
	u_long	nloadaddr;		/* Next Load Address		*/
	off_t	lseek;			/* Seek before last read	*/
	int	aout;			/* Is it an a.out file		*/
	u_long	a_text;			/* Size of text segment		*/
	u_long	a_text_fill;		/* Size of text segment fill	*/
	u_long	a_data;			/* Size of data segment		*/
	u_long	a_data_fill;		/* Size of data segment fill	*/
	u_long	a_bss;			/* Size of bss segment		*/
	u_long	a_bss_fill;		/* Size of bss segment fill	*/
	off_t	a_lseek;		/* Keep track of pos in newfile */
@


1.6
log
@addres -> address
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.5 2004/04/14 20:37:28 henning Exp $ */
d26 1
a26 1
 *	$OpenBSD: common.h,v 1.5 2004/04/14 20:37:28 henning Exp $
d72 1
a72 1
	u_short	dl_bsz;			/* Data Link Buffer Size	*/
d78 1
a78 1
	long	lseek;			/* Seek before last read	*/
d86 1
a86 1
	long	a_lseek;		/* Keep track of pos in newfile */
@


1.5
log
@4000 lines worth of cleanup, KNF, Knall&Rauch elemination and such
tested by hshoexer, "don't wait for me" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.4 2003/06/02 21:38:39 maja Exp $ */
d26 1
a26 1
 *	$OpenBSD: common.h,v 1.4 2003/06/02 21:38:39 maja Exp $
d70 1
a70 1
	u_char	eaddr[6];		/* targets ethernet addres	*/
@


1.4
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.3 2001/08/12 12:03:03 heko Exp $ */
d26 1
a26 1
 *	$OpenBSD: common.h,v 1.3 2001/08/12 12:03:03 heko Exp $
d33 4
a36 4
#define MAXDL		16		/* maximum number concurrent load */
#define IFNAME_SIZE	32		/* maximum size if interface name */
#define BUFSIZE		1600		/* main receive buffer size	*/
#define HDRSIZ		22		/* room for 803.2 header	*/
d42 3
a44 3
#define DEBUG_ONELINE	1
#define DEBUG_HEADER	2
#define DEBUG_INFO	3
d62 4
a65 4
#define DL_STATUS_FREE		 0
#define DL_STATUS_READ_IMGHDR	 1
#define DL_STATUS_SENT_MLD	 2
#define DL_STATUS_SENT_PLT	 3
@


1.3
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.2 1996/09/21 19:11:21 maja Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d26 1
a26 1
 *	$OpenBSD: common.h,v 1.2 1996/09/21 19:11:21 maja Exp $
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d31 1
a31 1
 *	$OpenBSD: common.h,v 1.1.1.1 1996/09/21 13:49:16 maja Exp $
d94 1
a94 1
#endif _COMMON_H_
@


1.1
log
@Initial revision
@
text
@d1 2
d31 1
a31 1
 *	$Id: common.h,v 1.14 1996/08/13 12:22:29 moj Exp $
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@
