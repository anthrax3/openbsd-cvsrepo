head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.10
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.12
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.8
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.4
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.6
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.12.0.8
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.6
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.10
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.16
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	MOPD254:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	MOPD253:1.1.1.1
	MAJA:1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.02.09.23.00.14;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	822YD61EeG0Xl9Na;

1.12
date	2013.07.05.21.02.07;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.27.23.59.52;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2009.07.11.13.42.32;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2006.04.16.11.48.19;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.01.00.56.51;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.21.38.40;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2002.06.10.21.05.25;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.28.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.03.19.07.40.13;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.44.30;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.09.21.19.12.39;	author maja;	state Exp;
branches;
next	1.1;

1.1
date	96.09.21.13.49.17;	author maja;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.09.21.13.49.17;	author maja;	state Exp;
branches;
next	;


desc
@@


1.13
log
@clean up flags++ instances around getopt()
ok florian
@
text
@/*	$OpenBSD: moptrace.c,v 1.12 2013/07/05 21:02:07 miod Exp $ */

/*
 * Copyright (c) 1993-95 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * moptrace - MOP Trace Utility
 *
 * Usage:	moptrace [-3 | -4] [-ad] interface
 */

#include "os.h"
#include "common/common.h"
#include "common/mopdef.h"
#include "common/device.h"
#include "common/print.h"
#include "common/pf.h"
#include "common/dl.h"
#include "common/rc.h"
#include "common/get.h"

/*
 * The list of all interfaces that are being listened to. 
 * "selects" on the descriptors in this list.
 */
struct if_info *iflist;

void   Usage(void);
void   mopProcess(struct if_info *, u_char *);

int     AllFlag = 0;		/* listen on "all" interfaces  */
int     DebugFlag = 0;		/* print debugging messages    */
int	Not3Flag = 0;		/* Ignore MOP V3 messages      */
int	Not4Flag = 0;		/* Ignore MOP V4 messages      */ 
int	promisc = 1;		/* Need promisc mode           */
extern char *__progname;

int
main(int argc, char *argv[])
{
	int     op;
	char   *interface;

	/* All error reporting is done through syslogs. */
	openlog(__progname, LOG_PID | LOG_CONS, LOG_DAEMON);

	opterr = 0;
	while ((op = getopt(argc, argv, "34ad")) != -1) {
		switch (op) {
		case '3':
			Not3Flag = 1;
			break;
		case '4':
			Not4Flag = 1;
			break;
		case 'a':
			AllFlag = 1;
			break;
		case 'd':
			DebugFlag++;
			break;
		default:
			Usage();
			/* NOTREACHED */
		}
	}

	interface = argv[optind++];
	
	if ((AllFlag && interface) ||
	    (!AllFlag && interface == 0) ||
	    (Not3Flag && Not4Flag))
		Usage();

	if (AllFlag)
 		deviceInitAll();
	else
		deviceInitOne(interface);

	Loop();
	/* NOTREACHED */
}

void
Usage()
{
	fprintf(stderr, "usage: %s [-3 | -4] [-ad] interface\n", __progname);
	exit(1);
}

/*
 * Process incoming packages.
 */
/* ARGSUSED */
void
mopProcess(struct if_info *ii, u_char *pkt)
{
	int	 trans;

	/* We don't known which transport, Guess! */

	trans = mopGetTrans(pkt, 0);

	/* Ok, return if we don't want this message */

	if ((trans == TRANS_ETHER) && Not3Flag) return;
	if ((trans == TRANS_8023) && Not4Flag)	return;

	fprintf(stdout, "Interface    : %s", ii->if_name);
	mopPrintHeader(stdout, pkt, trans);
	mopPrintMopHeader(stdout, pkt, trans);
	
	mopDumpDL(stdout, pkt, trans);
	mopDumpRC(stdout, pkt, trans);

	fprintf(stdout, "\n");
	fflush(stdout);
}
@


1.12
log
@Teach mopd and mopa.out about ELF files, and allow forthcoming VAX ELF boot
blocks to be converted to working mop binaries. From NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.11 2009/10/27 23:59:52 deraadt Exp $ */
d72 1
a72 1
			Not3Flag++;
d75 1
a75 1
			Not4Flag++;
d78 1
a78 1
			AllFlag++;
@


1.11
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.10 2009/07/11 13:42:32 sobrado Exp $ */
a48 1
void   Loop(void) __dead;
@


1.10
log
@synchronize the synopsis and usage of mopa.out(1); mopchk(1) can handle
more than one filename at a time; add a description for -3 and -4
in mopd(8), and document -v; remove a duplicate flag in mopprobe(1);
use a better style for synopses; sort flags and arguments.

written with help by jmc@@

ok jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.9 2006/04/16 11:48:19 maja Exp $ */
a25 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: moptrace.c,v 1.9 2006/04/16 11:48:19 maja Exp $";
#endif
@


1.9
log
@Add on which interface the packet arrived. Some cleanup and delint. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.8 2003/12/01 00:56:51 avsm Exp $ */
d28 1
a28 1
static const char rcsid[] = "$OpenBSD: moptrace.c,v 1.8 2003/12/01 00:56:51 avsm Exp $";
d34 1
a34 2
 * Usage:	moptrace -a [ -d ] [ -3 | -4 ]
 *		moptrace [ -d ] [ -3 | -4 ] interface
d113 1
a113 3
	fprintf(stderr, "usage: %s -a [ -d ] [ -3 | -4 ]\n", __progname);
	fprintf(stderr, "       %s [ -d ] [ -3 | -4 ] interface\n",
	    __progname);
@


1.8
log
@-Wall cleanup: trim unused vars, right format strings, constify rcsids,
braces where needed, add missing prototypes.

tested and ok maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.7 2003/06/02 21:38:40 maja Exp $ */
d27 2
a28 2
#ifndef LINT
static const char rcsid[] = "$OpenBSD: moptrace.c,v 1.7 2003/06/02 21:38:40 maja Exp $";
d63 1
a63 1
char	*Program;
d66 1
a66 3
main(argc, argv)
	int     argc;
	char  **argv;
a70 10
	extern int optind, opterr;

	if ((Program = strrchr(argv[0], '/')))
		Program++;
	else
		Program = argv[0];
	
	if (*Program == '-')
		Program++;

d72 1
a72 1
	openlog(Program, LOG_PID | LOG_CONS, LOG_DAEMON);
d108 1
d114 3
a116 3
	(void) fprintf(stderr, "usage: %s -a [ -d ] [ -3 | -4 ]\n",Program);
	(void) fprintf(stderr, "       %s [ -d ] [ -3 | -4 ] interface\n",
		       Program);
d123 1
d125 1
a125 3
mopProcess(ii, pkt)
	struct if_info *ii;
	u_char *pkt;
d138 1
a147 2


@


1.7
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.6 2002/06/10 21:05:25 maja Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.6 2002/06/10 21:05:25 maja Exp $";
d54 1
a54 1
void   Loop(void);
@


1.6
log
@Remove NO__P since __P has been removed. Found by hin@@ -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.5 2002/02/16 21:28:04 millert Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.5 2002/02/16 21:28:04 millert Exp $";
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.4 1998/03/19 07:40:13 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.4 1998/03/19 07:40:13 deraadt Exp $";
a58 5
#ifdef NO__P
void   Loop	     (/* void */);
void   Usage         (/* void */);
void   mopProcess    (/* struct if_info *, u_char * */);
#else
a61 1
#endif
@


1.4
log
@main returns int
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.3 1997/01/15 23:44:30 millert Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.3 1997/01/15 23:44:30 millert Exp $";
d64 3
a66 3
void   Loop	     __P((void));
void   Usage         __P((void));
void   mopProcess    __P((struct if_info *, u_char *));
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: moptrace.c,v 1.2 1996/09/21 19:12:39 maja Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.2 1996/09/21 19:12:39 maja Exp $";
d76 1
a76 1
void
@


1.2
log
@Replace $Id with $OpenBSD, 3:rd try. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: moptrace.c,v 1.1.1.1 1996/09/21 13:49:17 maja Exp $";
d98 1
a98 1
	while ((op = getopt(argc, argv, "34ad")) != EOF) {
@


1.1
log
@Initial revision
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: moptrace.c,v 1.10 1996/08/05 07:49:14 moj Exp $";
@


1.1.1.1
log
@Initial import of mopd-2.5.3. -moj
@
text
@@

