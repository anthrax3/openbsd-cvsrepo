head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.66
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.64
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.58
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.60
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.52
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.56
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.54
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.50
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.48
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.46
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.44
	OPENBSD_5_0:1.7.0.42
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.40
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.38
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.34
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.36
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.32
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.30
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.28
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.26
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.24
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.22
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.20
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.18
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.16
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.14
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.12
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.10
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.8
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.6
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.7
date	2001.08.11.22.26.39;	author jakob;	state Exp;
branches;
next	1.6;

1.6
date	2000.10.03.14.31.55;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.50;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.11;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.59.07;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@update license. ok from author (John LoVerso).
@
text
@#!/bin/sh
#	$OpenBSD: makemib,v 1.6 2000/10/03 14:31:55 ho Exp $
#
# Copyright (c) 1990, 1996
#     John Robert LoVerso. All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
#
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
#
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
#

#
# This script will read either ASN.1-style MIB files or the ".defs" files
# created by the ISODE "mosy" program on such files.
#
# The output of this script is the "mib.h" file used by tcpdumps' ASN.1/SNMP
# decoding code.
#
# This script needs to be run by "gawk" (GNU awk).  "nawk" will work, but
# dump will get a recursion error if you process LARGE mibs.  While it would
# by farily easy to rewrite this not to use recursion (and also easy to
# eliminate use of gsub and functions to use classic "awk"), you have to 
# order the structure declarations in defined-first order for the compiler
# not to barf; too bad tsort doesn't take arguments.
#

cat << EOF
/*
 * This file was generated by tcpdump/makemib on `date`
 * You probably don't want to edit this by hand!
 *
 * struct mib somename = { desc, oid-octet, type, child-pointer, next-pointer 
};
 */

EOF

# use sed to make the ASN.1 easier to parse
# I should really just use a recursive descent parser in awk, but...
sed \
	-e 's/--\*.*\*--//' \
	-e 's/--.*//' \
	-e 's/\([{}]\)/ \1 /g' \
	$@@ \
| gawk '
BEGIN {
	# for sanity, we prep the namespace with objects from RFC-1155
	# (we manually establish the root)
	oid["iso"]=1
	oidadd("org", "iso", 3)
	oidadd("dod", "org", 6)
	oidadd("internet", "dod", 1)
	oidadd("directory", "internet", 1)
	oidadd("mgmt", "internet", 2)
	oidadd("mib", "mgmt", 1)
	oidadd("experimental", "internet", 3)
	oidadd("private", "internet", 4)
	oidadd("enterprises", "private", 1)

	holddesc="none"
}

#
# Read mosy "*.defs" file.  mosy does all the parsing work; we just read
# its simple and straightforward output.  It would not be too hard to make
# tcpdump directly read mosy output, but...
#

NF > 1 && index($2,".")>0 {
	# currently ignore items of the form "{ iso.3.6.1 }"
	if (split($2, p, ".") == 2)
		oidadd($1, p[1], p[2])
	next
}

#
# this next section is simple and naive, but does the job 100%
#

$2$3$4 == "OBJECTIDENTIFIER::=" {
	holddesc="none"
	if (NF == 8)
		oidadd($1, $6, $7)
}
$2 == "OBJECT-TYPE" {
	holddesc=$1
}
$1 == "::=" && holddesc != "none" && NF == 5 {
	oidadd(holddesc, $3, $4)
	holddesc="none"
}

# 
# End of the road - output the data.
#

END {
	print "struct obj"
	dump("iso")
	print "*mibroot = &_iso_obj;"
}

#
# add a new object to the tree
#
#		new OBJECT IDENTIFIER ::= { parent value }
#

function oidadd(new, parent, value) {
	# use safe C identifiers
	gsub(/[-&\/]/,"",new)
	gsub(/[-&\/]/,"",parent)
	# check if parent missing
	if (oid[parent] == 0) {
		printf "/* parse problem: no parent for %s.%s(%d) */\n", \
			parent, new, value
		return
	}
	# check if parent.value already exists
	if (oid[new] > 0 && oid[new] != value) {
		printf "/* parse problem: dup %s.%s(%d) != old (%d) */\n", \
			parent, new, value, oid[new]
		return
	}
	# check for new name for parent.value
	if (child[parent] != "") {
		for (sib = child[parent]; sib != ""; sib = sibling[sib])
			if (oid[sib] == value) {
				printf "/* parse problem: new name \"%s\"" \
					" for %s.%s(%d) ignored */\n", \
						new, parent, sib, value
				return
			}
	}

	oid[new]=value
	if (child[parent] == "") {
		child[parent] = new
	} else {
		sibling[new] = child[parent]
		child[parent] = new
	}
}

#
# old(?) routine to recurse down the tree (in postfix order for convenience)
#

function dump(item, c, s) {
#	newitem=sofar"."item"("oid[item]")"
#	printf "/* %s c=%s s=%s */\n", newitem, child[item], sibling[item]
	c="NULL"
	if (child[item] != "") {
		dump(child[item])
		c = "&_"child[item]"_obj"
	}
	s="NULL"
	if (sibling[item] != "") {
		dump(sibling[item])
		s = "&_"sibling[item]"_obj"
	}
	printf "_%s_obj = {\n\t\"%s\", %d, 0,\n\t%s, %s\n},\n", \
		item, item, oid[item], c, s
}
'
exit 0
@


1.6
log
@Add $OpenBSD$. (jakob@@ ok)
@
text
@d2 1
a2 1
# @@(#) $OpenBSD: makemib,v 1.5 1996/12/12 16:22:50 bitblt Exp $ (jlv
d4 2
a5 2
# Copyright (c) 1990, 1996, by John Robert LoVerso.
# All rights reserved.
d7 21
a27 9
# Redistribution and use in source and binary forms are permitted
# provided that the above copyright notice and this paragraph are
# duplicated in all such forms and that any documentation,
# advertising materials, and other materials related to such
# distribution and use acknowledge that the software was developed
# by John Robert LoVerso.
# THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
# WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
a28 1
)
@


1.5
log
@*** empty log message ***
@
text
@d2 1
a16 1
# @@(#) $Id: makemib,v 2.1 90/07/10 23:51:54 loverso Exp Locker: loverso $ (jlv
@


1.4
log
@it is 3.2 now.
@
text
@d3 1
a3 4
#	$OpenBSD: makemib,v 1.3 1996/06/10 07:47:20 deraadt Exp $
#	$NetBSD: makemib,v 1.2 1995/03/06 19:10:22 mycroft Exp $
#
# Copyright (c) 1990, by John Robert LoVerso.
d14 1
a14 1
# WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d16 2
a17 1
# @@(#) Id: makemib,v 2.1 90/07/10 23:51:54 loverso Exp Locker: loverso (jlv)
d52 1
a52 1
| awk '
@


1.3
log
@sync to latest
@
text
@d3 1
a3 1
#	$OpenBSD: makemib,v 1.2 1995/03/06 19:10:22 mycroft Exp $
d19 1
a19 2
# @@(#) Id: makemib,v 2.1 90/07/10 23:51:54 loverso Exp Locker: loverso (jlv
)
d54 1
a54 1
| gawk '
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d3 1
a3 1
#	$OpenBSD$
@


1.1
log
@Initial revision
@
text
@d3 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
