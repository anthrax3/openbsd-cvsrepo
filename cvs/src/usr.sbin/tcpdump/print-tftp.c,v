head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.6
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.8.0.10
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.30
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.28
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.26
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.24
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.22
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.20
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.18
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.16
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.14
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.12
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.4
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.11.16.00.16.39;	author mmcc;	state Exp;
branches;
next	1.11;
commitid	enjTsnD5UO6xazKc;

1.11
date	2015.01.16.06.40.22;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	Uu5nFG3wCl0LACBb;

1.10
date	2009.10.27.23.59.57;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2009.07.30.15.36.19;	author sthen;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.03.14.31.58;	author ho;	state Exp;
branches;
next	1.6;

1.6
date	99.09.16.20.58.47;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.25;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.32;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.51;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.59.40;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove remaining instances of the register keyword.

ok deraadt@@
@
text
@/*	$OpenBSD: print-tftp.c,v 1.11 2015/01/16 06:40:22 deraadt Exp $	*/

/*
 * Copyright (c) 1990, 1991, 1993, 1994, 1995, 1996, 1997
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * Format and print trivial file transfer protocol packets.
 */

#include <sys/time.h>

#include <netinet/in.h>

#ifdef SEGSIZE
#undef SEGSIZE					/* SINIX sucks */
#endif
#include <arpa/tftp.h>

#include <ctype.h>
#include <stdio.h>
#include <string.h>

#include "interface.h"
#include "addrtoname.h"

/* op code to string mapping */
static struct tok op2str[] = {
	{ RRQ,		"RRQ" },	/* read request */
	{ WRQ,		"WRQ" },	/* write request */
	{ DATA,		"DATA" },	/* data packet */
	{ ACK,		"ACK" },	/* acknowledgement */
	{ ERROR,	"ERROR" },	/* error code */
	{ 0,		NULL }
};

/* error code to string mapping */
static struct tok err2str[] = {
	{ EUNDEF,	"EUNDEF" },	/* not defined */
	{ ENOTFOUND,	"ENOTFOUND" },	/* file not found */
	{ EACCESS,	"EACCESS" },	/* access violation */
	{ ENOSPACE,	"ENOSPACE" },	/* disk full or allocation exceeded */
	{ EBADOP,	"EBADOP" },	/* illegal TFTP operation */
	{ EBADID,	"EBADID" },	/* unknown transfer ID */
	{ EEXISTS,	"EEXISTS" },	/* file already exists */
	{ ENOUSER,	"ENOUSER" },	/* no such user */
	{ 0,		NULL }
};

/*
 * Print trivial file transfer program requests
 */
void
tftp_print(const u_char *bp, u_int length)
{
	const struct tftphdr *tp;
	const char *cp;
	const u_char *p;
	int opcode, i;
	static char tstr[] = " [|tftp]";

	tp = (const struct tftphdr *)bp;

	/* Print length */
	printf(" %d", length);

	/* Print tftp request type */
	TCHECK(tp->th_opcode);
	opcode = ntohs(tp->th_opcode);
	cp = tok2str(op2str, "tftp-#%d", opcode);
	printf(" %s", cp);
	/* Bail if bogus opcode */
	if (*cp == 't')
		return;

	switch (opcode) {

	case RRQ:
	case WRQ:
		/*
		 * XXX Not all arpa/tftp.h's specify th_stuff as any
		 * array; use address of th_block instead
		 */
#ifdef notdef
		p = (u_char *)tp->th_stuff;
#else
		p = (u_char *)&tp->th_block;
#endif
		fputs(" \"", stdout);
		i = fn_print(p, snapend);
		putchar('"');
		if (i)
			goto trunc;
		break;

	case ACK:
	case DATA:
		TCHECK(tp->th_block);
		printf(" block %d", ntohs(tp->th_block));
		break;

	case ERROR:
		/* Print error code string */
		TCHECK(tp->th_code);
		printf(" %s ", tok2str(err2str, "tftp-err-#%d \"",
				       ntohs(tp->th_code)));
		/* Print error message string */
		putchar('"');
		i = fn_print((const u_char *)tp->th_data, snapend);
		putchar('"');
		if (i)
			goto trunc;
		break;

	default:
		/* We shouldn't get here */
		printf("(unknown #%d)", opcode);
		break;
	}
	return;
trunc:
	fputs(tstr, stdout);
	return;
}
@


1.11
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-tftp.c,v 1.10 2009/10/27 23:59:57 deraadt Exp $	*/
d69 1
a69 1
tftp_print(register const u_char *bp, u_int length)
d71 4
a74 4
	register const struct tftphdr *tp;
	register const char *cp;
	register const u_char *p;
	register int opcode, i;
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-tftp.c,v 1.9 2009/07/30 15:36:19 sthen Exp $	*/
a25 1
#include <sys/param.h>
@


1.9
log
@add missing " when printing an error string. ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-tftp.c,v 1.8 2007/10/07 16:41:05 deraadt Exp $	*/
a24 5

#ifndef lint
static const char rcsid[] =
    "@@(#) $Id: print-tftp.c,v 1.8 2007/10/07 16:41:05 deraadt Exp $ (LBL)";
#endif
@


1.8
log
@trash $Header goo which is just annoying; 5595
@
text
@d1 1
a1 1
/*	$OpenBSD: print-tftp.c,v 1.7 2000/10/03 14:31:58 ho Exp $	*/
d28 1
a28 1
    "@@(#) $Id$ (LBL)";
d129 1
@


1.7
log
@Add $OpenBSD$. (jakob@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 1
a28 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-tftp.c,v 1.6 1999/09/16 20:58:47 brad Exp $ (LBL)";
@


1.6
log
@bring more inline with tcpdump 3.4
@
text
@d1 2
d28 1
a28 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-tftp.c,v 1.5 1996/12/12 16:22:25 bitblt Exp $ (LBL)";
@


1.5
log
@*** empty log message ***
@
text
@d2 1
a2 1
 * Copyright (c) 1990, 1991, 1993, 1994, 1995, 1996
d26 1
a26 1
    "@@(#) $Header: print-tftp.c,v 1.28 96/09/26 23:36:50 leres Exp $ (LBL)";
d34 3
@


1.4
log
@it is 3.2 now.
@
text
@a0 2
/*	$OpenBSD$	*/

d25 2
a26 2
static char rcsid[] =
    "@@(#) Header: print-tftp.c,v 1.23 96/06/23 02:11:47 leres Exp (LBL)";
a30 1
#include <sys/types.h>
d70 1
a70 1
tftp_print(register const u_char *bp, int length)
d74 2
a75 3
	register const u_char *ep, *p;
	register int opcode;
#define TCHECK(var, l) if ((u_char *)&(var) > ep - l) goto trunc
a78 2
	/* 'ep' points to the end of available data. */
	ep = snapend;
d84 1
a84 1
	TCHECK(tp->th_opcode, sizeof(tp->th_opcode));
a95 1
		putchar(' ');
d105 5
a109 4
		if (fn_print(p, ep)) {
			fputs(&tstr[1], stdout);
			return;
		}
d114 1
a114 1
		TCHECK(tp->th_block, sizeof(tp->th_block));
d120 2
a121 2
		TCHECK(tp->th_code, sizeof(tp->th_code));
		printf(" %s ", tok2str(err2str, "tftp-err-#%d",
d124 4
a127 4
		if (fn_print((const u_char *)tp->th_data, ep)) {
			fputs(&tstr[1], stdout);
			return;
		}
d138 1
a138 1
#undef TCHECK
@


1.3
log
@sync to latest
@
text
@d1 1
a1 2
/**//*	$OpenBSD: print-tftp.c,v 1.2 1995/03/06 19:11:35 mycroft Exp $	*/
/*	$NetBSD: print-tftp.c,v 1.2 1995/03/06 19:11:35 mycroft Exp $	*/
d4 1
a4 1
 * Copyright (c) 1990, 1991, 1993, 1994
d28 1
a28 1
    "@@(#) Header: print-tftp.c,v 1.20 94/06/14 20:18:49 leres Exp (LBL)";
d47 1
a47 1
static struct token op2str[] = {
d57 1
a57 1
static struct token err2str[] = {
d83 1
a83 1
	/* 'ep' points to the end of avaible data. */
d118 1
a121 3
		break;

	case ACK:
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
