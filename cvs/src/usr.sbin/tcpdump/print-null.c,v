head	1.22;
access;
symbols
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.22.0.8
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.6
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.21.0.6
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.19.0.22
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.20
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.16
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.14
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.12
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.10
	OPENBSD_5_0:1.19.0.8
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.6
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.4
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.6
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.17.0.4
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.16.0.24
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.22
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.20
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.18
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.16
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.14
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.12
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.10
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.8
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.16.0.6
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.16.0.4
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.2
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.8.0.4
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.22
date	2015.11.05.17.57.37;	author jca;	state Exp;
branches;
next	1.21;
commitid	W5LspaMPKYAjVY5Y;

1.21
date	2015.01.16.06.40.21;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	Uu5nFG3wCl0LACBb;

1.20
date	2014.08.14.12.44.44;	author mpi;	state Exp;
branches;
next	1.19;
commitid	yLXrOcgrag4eS8u4;

1.19
date	2009.10.27.23.59.55;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2008.12.29.10.02.55;	author michele;	state Exp;
branches;
next	1.17;

1.17
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2002.02.19.19.39.40;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2002.01.23.23.32.20;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.25.19.53.54;	author provos;	state Exp;
branches;
next	1.13;

1.13
date	2001.05.24.04.15.26;	author angelos;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.03.14.31.58;	author ho;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.26.21.35.42;	author jakob;	state Exp;
branches;
next	1.10;

1.10
date	99.09.16.20.58.47;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	99.07.28.20.41.36;	author jakob;	state Exp;
branches;
next	1.8;

1.8
date	98.06.26.09.14.50;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.07.25.20.12.26;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	97.07.23.02.59.02;	author denny;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.30;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.27;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.59.32;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Account for the header size when dealing with null link layer ifaces.

From Kevin Reay, ok sthen@@
@
text
@/*	$OpenBSD: print-null.c,v 1.21 2015/01/16 06:40:21 deraadt Exp $	*/

/*
 * Copyright (c) 1991, 1993, 1994, 1995, 1996, 1997
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include <sys/time.h>
#include <sys/socket.h>
#include <sys/file.h>
#include <sys/ioctl.h>

struct mbuf;
struct rtentry;
#include <net/if.h>

#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/if_ether.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/udp_var.h>
#include <netinet/tcp.h>

#include <pcap.h>
#include <stdio.h>
#include <string.h>

#ifdef INET6
#include <netinet/ip6.h>
#endif

#include "interface.h"
#include "addrtoname.h"

#ifndef AF_NS
#define AF_NS		6		/* XEROX NS protocols */
#endif

/*
 * The DLT_NULL packet header is 4 bytes long. It contains a host
 * order 32 bit integer that specifies the family, e.g. AF_INET
 */
#define	NULL_HDRLEN 4

static void
null_print(const u_char *p, const struct ip *ip, u_int length)
{
	u_int family;

	memcpy((char *)&family, (char *)p, sizeof(family));

	if (nflag && family != AF_LINK) {
		/* XXX just dump the header */
		return;
	}
	switch (family) {

	case AF_INET:
		printf("ip: ");
		break;

#ifdef INET6
	case AF_INET6:
		printf("ip6: ");
		break;
#endif

	case AF_NS:
		printf("ns: ");
		break;

#ifdef __OpenBSD__
	case AF_LINK:
		ether_print(p + NULL_HDRLEN, length);
		break;
#endif
	case AF_MPLS:
		printf("mpls: ");
		break;

	default:
		printf("AF %d: ", family);
		break;
	}
}

void
loop_if_print(u_char *user, const struct pcap_pkthdr *h, const u_char *p)
{
	*(u_int *)p = ntohl(*(u_int *)p);

	null_if_print(user, h, p);
}

void
null_if_print(u_char *user, const struct pcap_pkthdr *h, const u_char *p)
{
	u_int length = h->len;
	u_int caplen = h->caplen;
	u_int family = *(u_int *)p;

#ifdef __OpenBSD__
	struct ether_header *ep;
	u_short ether_type;
	extern u_short extracted_ethertype;
#endif

	ts_print(&h->ts);

	/*
	 * Some printers want to get back at the link level addresses,
	 * and/or check that they're not walking off the end of the packet.
	 * Rather than pass them all the way down, we set these globals.
	 */
	packetp = p;
	snapend = p + caplen;

	length -= NULL_HDRLEN;

	if (eflag)
		null_print(p, (struct ip *)(p + NULL_HDRLEN), length);

	switch (family) {
	case AF_INET:
		ip_print(p + NULL_HDRLEN, length);
		break;

#ifdef INET6
	case AF_INET6:
		ip6_print(p + NULL_HDRLEN, length);
		break;
#endif /*INET6*/

	case AF_MPLS:
		mpls_print(p + NULL_HDRLEN, length);
		break;

#ifdef __OpenBSD__
	case AF_LINK:
		if (caplen < sizeof(struct ether_header) + NULL_HDRLEN) {
			printf("[|ether]");
			goto out;
		}

		length -= sizeof(struct ether_header);
		caplen -= sizeof(struct ether_header);
		ep = (struct ether_header *)(p + NULL_HDRLEN);
		p += NULL_HDRLEN + sizeof(struct ether_header);
		packetp += sizeof(struct ether_header);
		ether_type = ntohs(ep->ether_type);

		extracted_ethertype = 0;
		if (ether_type <= ETHERMTU) {
			/* Try to print the LLC-layer header & higher layers */
			if (llc_print(p, length, caplen, ESRC(ep),
			    EDST(ep)) == 0) {
				/* ether_type not known, print raw packet */
				if (!eflag)
					ether_print((u_char *)ep, length);
				if (extracted_ethertype) {
					printf("(LLC %s) ",
					       etherproto_string(htons(extracted_ethertype)));
				}
				if (!xflag && !qflag)
					default_print(p, caplen - NULL_HDRLEN);
			}
		} else if (ether_encap_print(ether_type, p, length,
		           caplen) == 0) {
			/* ether_type not known, print raw packet */
			if (!eflag)
				ether_print((u_char *)ep, length +
				    sizeof(*ep));
			if (!xflag && !qflag)
				default_print(p, caplen - NULL_HDRLEN);
		}
		break;
#endif /* __OpenBSD__ */
	}

	if (xflag)
		default_print((const u_char *)(packetp + NULL_HDRLEN),
		    caplen - NULL_HDRLEN);
 out:
	putchar('\n');
}

@


1.21
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.20 2014/08/14 12:44:44 mpi Exp $	*/
d182 1
a182 1
					default_print(p, caplen);
d191 1
a191 1
				default_print(p, caplen);
@


1.20
log
@No use for <netinet/in_systm.h> nor <netinet/tcpip.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.19 2009/10/27 23:59:55 deraadt Exp $	*/
a23 1
#include <sys/param.h>
@


1.19
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.18 2008/12/29 10:02:55 michele Exp $	*/
a34 1
#include <netinet/in_systm.h>
@


1.18
log
@Recognize MPLS packets over loopback interfaces.

OK canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.17 2007/10/07 16:41:05 deraadt Exp $	*/
a22 5

#ifndef lint
static const char rcsid[] =
    "@@(#) $Id: print-null.c,v 1.17 2007/10/07 16:41:05 deraadt Exp $ (LBL)";
#endif
@


1.17
log
@trash $Header goo which is just annoying; 5595
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.16 2002/02/19 19:39:40 millert Exp $	*/
d26 1
a26 1
    "@@(#) $Id$ (LBL)";
d101 3
d157 4
@


1.16
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.15 2002/01/23 23:32:20 mickey Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.15 2002/01/23 23:32:20 mickey Exp $ (LBL)";
@


1.15
log
@proper handling for DLT_NULL and DLT_LOOP (header byte swapping); pointed out and tested by Alexander Yurchenko <grange@@rt.mipt.ru>
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.14 2001/06/25 19:53:54 provos Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.14 2001/06/25 19:53:54 provos Exp $ (LBL)";
a34 1
#ifdef __STDC__
a36 1
#endif
@


1.14
log
@add missing ntohl
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.13 2001/05/24 04:15:26 angelos Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.13 2001/05/24 04:15:26 angelos Exp $ (LBL)";
d66 1
a66 1
 * The DLT_NULL packet header is 4 bytes long. It contains a network
a76 1
	family = ntohl(family);
d111 8
d123 1
a123 1
	u_int family;
a129 3

	memcpy((char *)&family, (char *)p, sizeof(family));
	family = ntohl(family);
@


1.13
log
@Correctly handle gif(4) interface passing down AF_LINK family frames
(which we treat as ethernet frames). itojun@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: print-null.c,v 1.12 2000/10/03 14:31:58 ho Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.12 2000/10/03 14:31:58 ho Exp $ (LBL)";
d77 1
d125 1
@


1.12
log
@Add $OpenBSD$. (jakob@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.11 2000/04/26 21:35:42 jakob Exp $ (LBL)";
d78 1
a78 1
	if (nflag) {
d98 6
d115 9
a123 1
	const struct ip *ip;
d137 2
a138 1
	ip = (struct ip *)(p + NULL_HDRLEN);
d140 4
a143 2
	if (eflag)
		null_print(p, ip, length);
d145 4
a148 7
#ifndef INET6
	ip_print((const u_char *)ip, length);
#else
	if (ip->ip_v == IPVERSION)
		ip_print((const u_char *)ip, length);
	else if (ip->ip_v == 6)
		ip6_print((const u_char *)ip, length);
d151 42
d194 3
a196 1
		default_print((const u_char *)ip, caplen - NULL_HDRLEN);
@


1.11
log
@INET6
DHCP/BOOTP
tcp & udp checksum detection
numerous bugfixes
@
text
@d1 2
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.10 1999/09/16 20:58:47 brad Exp $ (LBL)";
@


1.10
log
@bring more inline with tcpdump 3.4
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.9 1999/07/28 20:41:36 jakob Exp $ (LBL)";
a46 1
#include <netinet/tcpip.h>
d52 4
d70 1
a70 1
null_print(const u_char *p, u_int length, u_int family)
d72 4
d86 6
d107 1
a107 2
	u_int family;
	const u_char *pkt;
a118 1
	pkt = p + NULL_HDRLEN;
d121 1
a121 1
	memcpy((char *)&family, (char *)p, sizeof(family));
d124 1
a124 1
		null_print(p, length, family);
d126 8
a133 8
	switch (ntohl(family)) {
	case AF_INET:
		ip_print(pkt, length);
		break;
	case AF_APPLETALK:
		atalk_print(pkt, length);
		break;
	}
d136 1
a136 1
		default_print(pkt, caplen - NULL_HDRLEN);
@


1.9
log
@-  Merge some changes from tcpdump 3.4
   -a flag; attempt to convert network and broadcast addresses to names
   Improved signal handling
   Miscellaneous fixes and typos
   OSPF MD5 authentication support

-  -X flag; emacs-hexl print (including ascii)

-  Add ECN bits to TCP and IP headers

-  IKE & IPsec (ESP & AH) support

OK deraadt@@
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.8 1998/06/26 09:14:50 deraadt Exp $ (LBL)";
d53 1
d55 4
a58 1
#include "interface.h"
a64 4

#ifndef AF_NS
#define AF_NS		6		/* XEROX NS protocols */
#endif
@


1.8
log
@convert DLT_LOOP header to network-order u_int32_t
@
text
@d2 1
a2 1
 * Copyright (c) 1991, 1993, 1994, 1995, 1996
d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.7 1997/07/25 20:12:26 mickey Exp $ (LBL)";
d56 4
a68 1

@


1.7
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-null.c,v 1.6 1997/07/23 02:59:02 denny Exp $ (LBL)";
d112 1
a112 1
	switch (family) {
@


1.6
log
@Better handling for AppleTalk, and netatalk in particular.
Handle native Ethertalk phase 1 & 2 as well as the localtalk encapsulation a la Kinetics FastPath previously handled.
@
text
@d24 1
a24 1
    "@@(#) $Header: /usr/src/usr.sbin/tcpdump/RCS/print-null.c,v 1.2 1997/07/20 17:16:38 denny Exp denny $ (LBL)";
d33 1
a33 1
#if __STDC__
@


1.5
log
@*** empty log message ***
@
text
@d24 1
a24 1
    "@@(#) $Header: print-null.c,v 1.22 96/12/10 23:18:58 leres Exp $ (LBL)";
d63 1
a63 1
null_print(const u_char *p, const struct ip *ip, u_int length)
a64 3
	u_int family;

	memcpy((char *)&family, (char *)p, sizeof(family));
d91 2
a92 1
	const struct ip *ip;
d104 1
d107 1
a107 1
	ip = (struct ip *)(p + NULL_HDRLEN);
d110 1
a110 1
		null_print(p, ip, length);
d112 8
a119 1
	ip_print((const u_char *)ip, length);
d122 1
a122 1
		default_print((const u_char *)ip, caplen - NULL_HDRLEN);
@


1.4
log
@it is 3.2 now.
@
text
@a0 2
/*	$OpenBSD$	*/

d23 2
a24 2
static char rcsid[] =
    "@@(#)Header: print-null.c,v 1.18 96/06/03 02:53:51 leres Exp (LBL)";
d49 1
d53 1
a54 2
#include "addrtoname.h"
#include "pcap.h"
d58 4
d63 1
a63 1
null_print(const u_char *p, const struct ip *ip, int length)
d92 2
a93 2
	int length = h->len;
	int caplen = h->caplen;
@


1.3
log
@sync to latest
@
text
@d1 1
a1 2
/**//*	$OpenBSD: print-null.c,v 1.3 1995/03/06 19:11:24 mycroft Exp $	*/
/*	$NetBSD: print-null.c,v 1.3 1995/03/06 19:11:24 mycroft Exp $	*/
d4 1
a4 1
 * Copyright (c) 1991, 1993, 1994
d26 1
a26 1
    "@@(#)Header: print-null.c,v 1.14 94/06/10 17:01:35 mccanne Exp (LBL)";
d35 4
a50 1

d52 1
d65 1
a65 1
	bcopy(p, &family, sizeof(family));
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
