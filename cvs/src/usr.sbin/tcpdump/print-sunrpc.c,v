head	1.20;
access;
symbols
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.6
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.19.0.6
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.17.0.22
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.20
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.16
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.14
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.12
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.10
	OPENBSD_5_0:1.17.0.8
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.6
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.16.0.10
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.6
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.4
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.2
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.15.0.16
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.14
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.12
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.10
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.8
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.13.0.8
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.4
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.20
date	2015.11.16.00.16.39;	author mmcc;	state Exp;
branches;
next	1.19;
commitid	enjTsnD5UO6xazKc;

1.19
date	2015.01.16.06.40.21;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	Uu5nFG3wCl0LACBb;

1.18
date	2014.08.14.12.44.44;	author mpi;	state Exp;
branches;
next	1.17;
commitid	yLXrOcgrag4eS8u4;

1.17
date	2009.10.27.23.59.55;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2004.01.28.19.44.55;	author canacar;	state Exp;
branches;
next	1.14;

1.14
date	2004.01.20.09.00.41;	author otto;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.19.19.39.40;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.11.07.18.48.16;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.06.03.11.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.05.08.17.45;	author jakob;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.03.14.31.58;	author ho;	state Exp;
branches;
next	1.8;

1.8
date	99.07.28.20.41.36;	author jakob;	state Exp;
branches;
next	1.7;

1.7
date	98.07.14.00.01.11;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.07.25.20.12.27;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.26;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.31;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.49;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.59.39;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Remove remaining instances of the register keyword.

ok deraadt@@
@
text
@/*	$OpenBSD: print-sunrpc.c,v 1.19 2015/01/16 06:40:21 deraadt Exp $	*/

/*
 * Copyright (c) 1992, 1993, 1994, 1995, 1996
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include <sys/time.h>
#include <sys/socket.h>

struct mbuf;
struct rtentry;
#include <net/if.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <netinet/ip.h>
#include <netinet/ip_var.h>

#include <rpc/rpc.h>
#ifdef HAVE_RPC_RPCENT_H
#include <rpc/rpcent.h>
#endif
#include <rpc/pmap_prot.h>

#include <ctype.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>

#include "interface.h"
#include "addrtoname.h"
#include "privsep.h"

static struct tok proc2str[] = {
	{ PMAPPROC_NULL,	"null" },
	{ PMAPPROC_SET,		"set" },
	{ PMAPPROC_UNSET,	"unset" },
	{ PMAPPROC_GETPORT,	"getport" },
	{ PMAPPROC_DUMP,	"dump" },
	{ PMAPPROC_CALLIT,	"call" },
	{ 0,			NULL }
};

/* Forwards */
static char *progstr(u_int32_t);

void
sunrpcrequest_print(const u_char *bp, u_int length, const u_char *bp2)
{
	const struct rpc_msg *rp;
	const struct ip *ip;
	u_int32_t x;

	rp = (struct rpc_msg *)bp;
	ip = (struct ip *)bp2;

	printf("xid 0x%x %d", (u_int32_t)ntohl(rp->rm_xid), length);
	printf(" %s", tok2str(proc2str, " proc #%u",
	    (u_int32_t)ntohl(rp->rm_call.cb_proc)));
	x = ntohl(rp->rm_call.cb_rpcvers);
	if (x != 2)
		printf(" [rpcver %u]", x);

	switch (ntohl(rp->rm_call.cb_proc)) {

	case PMAPPROC_SET:
	case PMAPPROC_UNSET:
	case PMAPPROC_GETPORT:
	case PMAPPROC_CALLIT:
		x = ntohl(rp->rm_call.cb_prog);
		if (!nflag)
			printf(" %s", progstr(x));
		else
			printf(" %u", x);
		printf(".%u", (u_int32_t)ntohl(rp->rm_call.cb_vers));
		break;
	}
}

static char *
progstr(prog)
	u_int32_t prog;
{
	char progname[32];
	static char buf[32];
	static int lastprog = 0;

	if (lastprog != 0 && prog == lastprog)
		return (buf);
	lastprog = prog;
        if (priv_getrpcbynumber(prog, progname, sizeof(progname)) == 0)
		snprintf(buf, sizeof(buf), "#%u", prog);
	else
		strlcpy(buf, progname, sizeof(buf));
	return (buf);
}
@


1.19
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.18 2014/08/14 12:44:44 mpi Exp $	*/
d65 1
a65 2
sunrpcrequest_print(register const u_char *bp, register u_int length,
		    register const u_char *bp2)
d67 2
a68 2
	register const struct rpc_msg *rp;
	register const struct ip *ip;
@


1.18
log
@No use for <netinet/in_systm.h> nor <netinet/tcpip.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.17 2009/10/27 23:59:55 deraadt Exp $	*/
a23 1
#include <sys/param.h>
@


1.17
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.16 2007/10/07 16:41:05 deraadt Exp $	*/
a33 1
#include <netinet/in_systm.h>
@


1.16
log
@trash $Header goo which is just annoying; 5595
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.15 2004/01/28 19:44:55 canacar Exp $	*/
a22 5

#ifndef lint
static const char rcsid[] =
    "@@(#) $Id$ (LBL)";
#endif
@


1.15
log
@privilege separated tcpdump, joint work with otto@@

tested by avsm@@ vincent@@ dhartmei@@ markus@@ hshoexer@@ and others
go for it deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.14 2004/01/20 09:00:41 otto Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.14 2004/01/20 09:00:41 otto Exp $ (LBL)";
@


1.14
log
@If you go through the trouble of caching the name of the last printed
rpc num, you might as well use it later too. ok canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.13 2002/02/19 19:39:40 millert Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.13 2002/02/19 19:39:40 millert Exp $ (LBL)";
d56 1
d109 1
a109 1
	register struct rpcent *rp;
d116 1
a116 2
	rp = getrpcbynumber(prog);
	if (rp == NULL)
d119 1
a119 1
		strlcpy(buf, rp->r_name, sizeof(buf));
@


1.13
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.12 2001/11/07 18:48:16 deraadt Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.12 2001/11/07 18:48:16 deraadt Exp $ (LBL)";
d114 1
@


1.12
log
@simplify buffer handling; ok ho
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.11 2001/11/06 03:11:40 deraadt Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.11 2001/11/06 03:11:40 deraadt Exp $ (LBL)";
a32 1
#ifdef __STDC__
a34 1
#endif
@


1.11
log
@a bit of snprintf cleaning
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.10 2000/12/05 08:17:45 jakob Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.10 2000/12/05 08:17:45 jakob Exp $ (LBL)";
d118 3
a120 5
		(void) snprintf(buf, sizeof(buf), "#%u", prog);
	else {
		strncpy(buf, rp->r_name, sizeof buf-1);
		buf[sizeof buf-1] = '\0';
	}
@


1.10
log
@tcpdump incorrectly print port numbers when parsing NFS (PR#1540)
fix submitted by Grigoriy Orlov <gluk@@ptci.ru>
@
text
@d1 1
a1 1
/*	$OpenBSD: print-sunrpc.c,v 1.9 2000/10/03 14:31:58 ho Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.9 2000/10/03 14:31:58 ho Exp $ (LBL)";
d118 1
a118 1
		(void) sprintf(buf, "#%u", prog);
@


1.9
log
@Add $OpenBSD$. (jakob@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.8 1999/07/28 20:41:36 jakob Exp $ (LBL)";
d83 1
a83 13
	if (!nflag)
		(void)printf("%s.%x > %s.sunrpc: %d",
			     ipaddr_string(&ip->ip_src),
			     (u_int32_t)ntohl(rp->rm_xid),
			     ipaddr_string(&ip->ip_dst),
			     length);
	else
		(void)printf("%s.%x > %s.%x: %d",
			     ipaddr_string(&ip->ip_src),
			     (u_int32_t)ntohl(rp->rm_xid),
			     ipaddr_string(&ip->ip_dst),
			     PMAPPORT,
			     length);
@


1.8
log
@-  Merge some changes from tcpdump 3.4
   -a flag; attempt to convert network and broadcast addresses to names
   Improved signal handling
   Miscellaneous fixes and typos
   OSPF MD5 authentication support

-  -X flag; emacs-hexl print (including ascii)

-  Add ECN bits to TCP and IP headers

-  IKE & IPsec (ESP & AH) support

OK deraadt@@
@
text
@d1 2
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.7 1998/07/14 00:01:11 deraadt Exp $ (LBL)";
@


1.7
log
@buf oflow
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.6 1997/07/25 20:12:27 mickey Exp $ (LBL)";
d122 1
a122 1
	static lastprog = 0;
@


1.6
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-sunrpc.c,v 1.5 1996/12/12 16:22:26 bitblt Exp $ (LBL)";
d129 4
a132 2
	else
		strcpy(buf, rp->r_name);
@


1.5
log
@*** empty log message ***
@
text
@d24 1
a24 1
    "@@(#) $Header: print-sunrpc.c,v 1.25 96/09/26 23:36:49 leres Exp $ (LBL)";
d31 1
a31 1
#if __STDC__
@


1.4
log
@it is 3.2 now.
@
text
@a0 2
/*	$OpenBSD$	*/

d2 1
a2 1
 * Copyright (c) 1992, 1993, 1994, 1995
d23 2
a24 2
static char rcsid[] =
    "@@(#) Header: print-sunrpc.c,v 1.22 95/10/19 20:27:46 leres Exp (LBL)";
a28 1
#include <sys/types.h>
d71 1
a71 1
sunrpcrequest_print(register const u_char *bp, register int length,
@


1.3
log
@sync to latest
@
text
@d1 1
a1 2
/**//*	$OpenBSD: print-sunrpc.c,v 1.3 1995/03/06 19:11:32 mycroft Exp $	*/
/*	$NetBSD: print-sunrpc.c,v 1.3 1995/03/06 19:11:32 mycroft Exp $	*/
d4 1
a4 1
 * Copyright (c) 1992, 1993, 1994
d26 1
a26 1
    "@@(#) Header: print-sunrpc.c,v 1.12 94/06/14 20:18:48 leres Exp (LBL)";
d34 4
d46 3
a48 2
#ifdef SOLARIS
#include <tiuser.h>
a49 1
#include <rpc/rpc.h>
d53 1
a53 1
#include <errno.h>
d55 1
a58 23
#include "extract.h"			/* must come after interface.h */

#if BYTE_ORDER == LITTLE_ENDIAN
static void bswap(u_int32 *, u_int);
#endif

#if BYTE_ORDER == LITTLE_ENDIAN
/*
 * Byte swap an array of n 32-bit words.
 * Assume input is word-aligned.
 * Check that buffer is bounded by "snapend".
 */
static void
bswap(register u_int32 *bp, register u_int n)
{
	register int nwords = ((char *)snapend - (char *)bp) / sizeof(*bp);

	if (nwords > n)
		nwords = n;
	for (; --nwords >= 0; ++bp)
		*bp = ntohl(*bp);
}
#endif
d60 1
a60 1
static struct token proc2str[] = {
d70 3
d79 1
d87 1
a87 1
			     ntohl(rp->rm_xid),
d93 1
a93 1
			     ntohl(rp->rm_xid),
d97 20
a116 2
	printf(" %s", tok2str(proc2str, " proc #%d",
			      ntohl(rp->rm_call.cb_proc)));
d119 17
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
