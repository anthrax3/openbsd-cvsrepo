head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.6
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.10
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.1.0.12
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.10
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.8
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.7
date	2015.11.16.00.16.39;	author mmcc;	state Exp;
branches;
next	1.6;
commitid	enjTsnD5UO6xazKc;

1.6
date	2015.01.16.06.40.22;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	Uu5nFG3wCl0LACBb;

1.5
date	2009.10.27.23.59.57;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.10.11.58.37;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.09.19.47.17;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.07.22.52.00;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove remaining instances of the register keyword.

ok deraadt@@
@
text
@/*	$OpenBSD: print-timed.c,v 1.6 2015/01/16 06:40:22 deraadt Exp $	*/

/*
 * Copyright (c) 2000 Ben Smithurst <ben@@scientia.demon.co.uk>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 *
 * from tcpdump.org:
 * Header: /tcpdump/master/tcpdump/print-timed.c,v 1.1 2000/10/06 05:35:37 guy Exp
 * 
 */

#ifdef HAVE_CONFIG_H
#include "config.h"
#endif

#include <sys/time.h>

#include <netinet/in.h>

#include <protocols/timed.h>

#include <stdio.h>
#include <string.h>

#include "interface.h"
#include "addrtoname.h"
#include "extract.h"                    /* must come after interface.h */

static const char *tsptype[TSPTYPENUMBER] =
  { "ANY", "ADJTIME", "ACK", "MASTERREQ", "MASTERACK", "SETTIME", "MASTERUP",
  "SLAVEUP", "ELECTION", "ACCEPT", "REFUSE", "CONFLICT", "RESOLVE", "QUIT",
  "DATE", "DATEREQ", "DATEACK", "TRACEON", "TRACEOFF", "MSITE", "MSITEREQ",
  "TEST", "SETDATE", "SETDATEREQ", "LOOP" };

void
timed_print(const u_char *bp, u_int length)
{
#define endof(x) ((u_char *)&(x) + sizeof (x))
	struct tsp *tsp = (struct tsp *)bp;
	long sec, usec;
	const u_char *end;

	TCHECK(tsp->tsp_type);
	if (tsp->tsp_type < TSPTYPENUMBER)
		printf("TSP_%s", tsptype[tsp->tsp_type]);
	else
		printf("(tsp_type %#x)", tsp->tsp_type);

	TCHECK(tsp->tsp_vers);
	printf(" vers %d", tsp->tsp_vers);

	TCHECK(tsp->tsp_seq);
	printf(" seq %d", tsp->tsp_seq);

	if (tsp->tsp_type == TSP_LOOP) {
		TCHECK(tsp->tsp_hopcnt);
		printf(" hopcnt %d", tsp->tsp_hopcnt);
	} else if (tsp->tsp_type == TSP_SETTIME ||
	    tsp->tsp_type == TSP_ADJTIME ||
	    tsp->tsp_type == TSP_SETDATE ||
	    tsp->tsp_type == TSP_SETDATEREQ) {
		TCHECK(tsp->tsp_time);
		sec = EXTRACT_32BITS(&tsp->tsp_time.tv_sec);
		usec = EXTRACT_32BITS(&tsp->tsp_time.tv_usec);
		if (usec < 0)
			/* corrupt, skip the rest of the packet */
			return;
		fputs(" time ", stdout);
		if (sec < 0 && usec != 0) {
			sec++;
			if (sec == 0)
				fputc('-', stdout);
			usec = 1000000 - usec;
		}
		printf("%ld.%06ld", sec, usec);
	}

	end = endof(tsp->tsp_name) > snapend ? snapend : endof(tsp->tsp_name);
	fputs(" name ", stdout);
	if (fn_print(tsp->tsp_name, end))
		goto trunc;
	return;
trunc:
	fputs(" [|timed]", stdout);
}
@


1.6
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-timed.c,v 1.5 2009/10/27 23:59:57 deraadt Exp $	*/
d52 1
a52 1
timed_print(register const u_char *bp, u_int length)
@


1.5
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-timed.c,v 1.4 2007/10/07 16:41:05 deraadt Exp $	*/
a31 1
#include <sys/param.h>
@


1.4
log
@trash $Header goo which is just annoying; 5595
@
text
@d1 1
a1 1
/*	$OpenBSD: print-timed.c,v 1.3 2004/01/10 11:58:37 otto Exp $	*/
a26 5

#ifndef lint
static const char rcsid[] =
    "@@(#) $Id$";
#endif
@


1.3
log
@Avoid duplication of code; handle truncated packets properly; use
fn_print to print strings. Joint work with & ok canacar@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-timed.c,v 1.2 2004/01/09 19:47:17 otto Exp $	*/
d30 1
a30 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-timed.c,v 1.2 2004/01/09 19:47:17 otto Exp $";
@


1.2
log
@Avoid messing up the screen by non-printable chars in hostname +
sync with tcpdump.org. ok canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-timed.c,v 1.1 2000/12/07 22:52:00 mickey Exp $	*/
d30 1
a30 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-timed.c,v 1.1 2000/12/07 22:52:00 mickey Exp $";
a43 1
#include <ctype.h>
d63 1
a63 1
	const u_char *end, *p;
d65 1
a65 4
	if (endof(tsp->tsp_type) > snapend) {
		fputs("[|timed]", stdout);
		return;
	}
d71 1
a71 4
	if (endof(tsp->tsp_vers) > snapend) {
		fputs(" [|timed]", stdout);
		return;
	}
d74 1
a74 4
	if (endof(tsp->tsp_seq) > snapend) {
		fputs(" [|timed]", stdout);
		return;
	}
d78 1
a78 4
		if (endof(tsp->tsp_hopcnt) > snapend) {
			fputs(" [|timed]", stdout);
			return;
		}
d84 1
a84 4
		if (endof(tsp->tsp_time) > snapend) {
			fputs(" [|timed]", stdout);
			return;
		}
d100 7
a106 8
	end = memchr(tsp->tsp_name, '\0', snapend - (u_char *)tsp->tsp_name);
	if (end == NULL)
		fputs(" [|timed]", stdout);
	else {
		fputs(" name ", stdout);
		for (p = tsp->tsp_name; p < end; p++)
			putchar(isprint(*p) ? *p : '?');
	}
@


1.1
log
@timed printing; from Ben Smithurst <ben@@scientia.demon.co.uk>; via tcpdump.org
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d30 1
a30 1
    "@@(#) $Header: /tcpdump/master/tcpdump/print-timed.c,v 1.1 2000/10/06 05:35:37 guy Exp $";
d44 1
d52 1
a52 1
static char *tsptype[TSPTYPENUMBER] =
d64 1
a64 1
	const u_char *end;
d71 1
a71 1
		printf("%s", tsptype[tsp->tsp_type]);
d101 2
a102 2
		sec = ntohl((long)tsp->tsp_time.tv_sec);
		usec = ntohl((long)tsp->tsp_time.tv_usec);
d121 2
a122 1
		fwrite(tsp->tsp_name, end - (u_char *)tsp->tsp_name, 1, stdout);
@

