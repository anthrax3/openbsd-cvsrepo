head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.8
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.6
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.3.0.22
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.20
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.16
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.30
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.28
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.26
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.24
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.22
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.20
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.18
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.16
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.11.16.00.16.39;	author mmcc;	state Exp;
branches;
next	1.5;
commitid	enjTsnD5UO6xazKc;

1.5
date	2015.01.16.06.40.21;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	Uu5nFG3wCl0LACBb;

1.4
date	2014.08.14.12.44.44;	author mpi;	state Exp;
branches;
next	1.3;
commitid	yLXrOcgrag4eS8u4;

1.3
date	2009.10.27.23.59.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.06.09.56.45;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.26.21.35.42;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove remaining instances of the register keyword.

ok deraadt@@
@
text
@/*	$OpenBSD: print-rt6.c,v 1.5 2015/01/16 06:40:21 deraadt Exp $	*/


/*
 * Copyright (c) 1988, 1989, 1990, 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#ifdef INET6

#include <sys/time.h>
#include <sys/types.h>
#include <sys/socket.h>

#include <net/if.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <netinet/ip.h>
#include <netinet/ip_icmp.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/udp_var.h>
#include <netinet/tcp.h>

#include <stdio.h>

#include <netinet/ip6.h>

#include "interface.h"
#include "addrtoname.h"

int
rt6_print(const u_char *bp, const u_char *bp2)
{
	const struct ip6_rthdr *dp;
	const struct ip6_rthdr0 *dp0;
	const struct ip6_hdr *ip;
	const u_char *ep;
	int i, len;

	dp = (struct ip6_rthdr *)bp;
	ip = (struct ip6_hdr *)bp2;
	len = dp->ip6r_len;

	/* 'ep' points to the end of avaible data. */
	ep = snapend;

#if 0
	printf("%s > %s: ",
	       ip6addr_string(&ip->ip6_src),
	       ip6addr_string(&ip->ip6_dst));
#endif

	TCHECK(dp->ip6r_segleft);

	printf("srcrt (len=%d, ", dp->ip6r_len);
	printf("type=%d, ", dp->ip6r_type);
	printf("segleft=%d", dp->ip6r_segleft);

	switch (dp->ip6r_type) {
	case IPV6_RTHDR_TYPE_0:
		dp0 = (struct ip6_rthdr0 *)dp;

		TCHECK(dp0->ip6r0_reserved);
		if (dp0->ip6r0_reserved || vflag) {
			printf(", rsv=0x%0x",
				(u_int32_t)ntohl(dp0->ip6r0_reserved));
		}

		if (len % 2 == 1)
			goto trunc;
		len >>= 1;
		for (i = 0; i < len; i++) {
			struct in6_addr *addr;

			addr = ((struct in6_addr *)(dp0 + 1)) + i;
			if ((u_char *)addr > ep - sizeof(*addr))
				goto trunc;

			printf(", [%d]%s", i, ip6addr_string((u_char *)addr));
		}
		printf(")");
		return((dp0->ip6r0_len + 1) << 3);
	default:
		if (bp + ((dp->ip6r_len + 1) << 3) > ep)
			goto trunc;
		printf(")");
		return((dp->ip6r_len + 1) << 3);
	}

 trunc:
	fputs(", [|srcrt]", stdout);
	return 65535;		/* XXX */
}
#endif /* INET6 */
@


1.5
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rt6.c,v 1.4 2014/08/14 12:44:44 mpi Exp $	*/
d50 1
a50 1
rt6_print(register const u_char *bp, register const u_char *bp2)
d52 4
a55 4
	register const struct ip6_rthdr *dp;
	register const struct ip6_rthdr0 *dp0;
	register const struct ip6_hdr *ip;
	register const u_char *ep;
@


1.4
log
@No use for <netinet/in_systm.h> nor <netinet/tcpip.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rt6.c,v 1.3 2009/10/27 23:59:55 deraadt Exp $	*/
a26 1
#include <sys/param.h>
@


1.3
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rt6.c,v 1.2 2007/05/06 09:56:45 claudio Exp $	*/
a35 1
#include <netinet/in_systm.h>
@


1.2
log
@Don't fail hard on non RH0 routing headers. The calculation of the length
of RH headers is always the same. Now tcpdump just prints the type, length
and segleft headers for unknown headers.
OK henning@@ mcbride@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rt6.c,v 1.1 2000/04/26 21:35:42 jakob Exp $	*/
a23 5

#ifndef lint
static const char rcsid[] =
    "@@(#) /master/usr.sbin/tcpdump/tcpdump/print-icmp.c,v 2.1 1995/02/03 18:14:42 polk Exp (LBL)";
#endif
@


1.1
log
@INET6
DHCP/BOOTP
tcp & udp checksum detection
numerous bugfixes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d82 1
a82 1
	printf("segleft=%d, ", dp->ip6r_segleft);
d90 1
a90 1
			printf("rsv=0x%0x, ",
d104 1
a104 4
			printf("[%d]%s", i, ip6addr_string((u_char *)addr));
			if (i != len - 1)
				printf(", ");
		   
a107 1
		break;
d109 4
a112 2
		goto trunc;
		break;
d116 1
a116 1
	fputs("[|srcrt]", stdout);
@

