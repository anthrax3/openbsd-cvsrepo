head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.6
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.10
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.6
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.4
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.2
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.10.0.28
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.26
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.24
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.22
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.20
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.18
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.16
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.14
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.12
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.10
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.8
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.6
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2015.11.16.00.16.39;	author mmcc;	state Exp;
branches;
next	1.15;
commitid	enjTsnD5UO6xazKc;

1.15
date	2015.03.29.14.09.29;	author bluhm;	state Exp;
branches;
next	1.14;
commitid	SFj5yhNu0OcZK6bT;

1.14
date	2015.01.16.06.40.21;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	Uu5nFG3wCl0LACBb;

1.13
date	2014.08.14.12.44.44;	author mpi;	state Exp;
branches;
next	1.12;
commitid	yLXrOcgrag4eS8u4;

1.12
date	2009.10.27.23.59.55;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.05.08.16.15;	author jakob;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.13.08.32.16;	author jakob;	state Exp;
branches;
next	1.8;

1.8
date	2000.10.03.14.21.57;	author ho;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.18.09.39.28;	author jakob;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.26.21.35.42;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.28;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.29;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.59.35;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Remove remaining instances of the register keyword.

ok deraadt@@
@
text
@/*	$OpenBSD: print-rip.c,v 1.15 2015/03/29 14:09:29 bluhm Exp $	*/

/*
 * Copyright (c) 1989, 1990, 1991, 1993, 1994, 1996
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that: (1) source code distributions
 * retain the above copyright notice and this paragraph in its entirety, (2)
 * distributions including binary code include the above copyright notice and
 * this paragraph in its entirety in the documentation or other materials
 * provided with the distribution, and (3) all advertising materials mentioning
 * features or use of this software display the following acknowledgement:
 * ``This product includes software developed by the University of California,
 * Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
 * the University nor the names of its contributors may be used to endorse
 * or promote products derived from this software without specific prior
 * written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 */

#include <sys/time.h>
#include <sys/socket.h>

#include <netinet/in.h>
#include <netinet/ip.h>
#include <netinet/ip_var.h>
#include <netinet/udp.h>
#include <netinet/udp_var.h>

#include <stdio.h>
#include <string.h>
#include <ctype.h>

#include "interface.h"
#include "addrtoname.h"
#include "extract.h"			/* must come after interface.h */

struct rip {
	u_char rip_cmd;			/* request/response */
	u_char rip_vers;		/* protocol version # */
	u_short rip_zero2;		/* unused */
};
#define	RIPCMD_REQUEST		1	/* want info */
#define	RIPCMD_RESPONSE		2	/* responding to request */
#define	RIPCMD_TRACEON		3	/* turn tracing on */
#define	RIPCMD_TRACEOFF		4	/* turn it off */
#define	RIPCMD_POLL		5	/* want info from everybody */
#define	RIPCMD_POLLENTRY	6	/* poll for entry */

#define RIP_AUTHLEN 16

struct rip_netinfo {
	u_short rip_family;
	u_short rip_tag;
	u_int32_t rip_dest;
	u_int32_t rip_dest_mask;
	u_int32_t rip_router;
	u_int32_t rip_metric;		/* cost of route */
};

static void
rip_printblk(const u_char *cp, const u_char *ep)
{
	for (; cp < ep; cp += 2)
		printf(" %04x", EXTRACT_16BITS(cp));
	return;
}

static void
rip_entry_print_v1(int vers, const struct rip_netinfo *ni)
{
	u_short family;

	/* RFC 1058 */
	family = EXTRACT_16BITS(&ni->rip_family);
	if (family != AF_INET) {
		printf(" [family %d:", family);
		rip_printblk((u_char *)&ni->rip_tag,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	}
	if (ni->rip_tag || ni->rip_dest_mask || ni->rip_router) {
		/* MBZ fields not zero */
		printf(" [");
		rip_printblk((u_char *)&ni->rip_family,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	}
	printf(" {%s}(%d)", ipaddr_string(&ni->rip_dest),
	       EXTRACT_32BITS(&ni->rip_metric));
}

static void
rip_entry_print_v2(int vers, const struct rip_netinfo *ni)
{
	u_char *p;
	u_short family;
	char buf[RIP_AUTHLEN];

	/* RFC 1723 */
	family = EXTRACT_16BITS(&ni->rip_family);
	if (family == 0xFFFF) {
		if (EXTRACT_16BITS(&ni->rip_tag) == 2) {
			memcpy(buf, &ni->rip_dest, sizeof(buf));
			buf[sizeof(buf)-1] = '\0';
			for (p = buf; *p; p++) {
				if (!isprint(*p))
					break;
			}
			if (!*p) {
				printf(" [password %s]", buf);
			} else {
				printf(" [password: ");
				rip_printblk((u_char *)&ni->rip_dest,
					     (u_char *)&ni->rip_metric +
					     sizeof(ni->rip_metric));
				printf("]");
			}
		} else {
			printf(" [auth %d:",
			       EXTRACT_16BITS(&ni->rip_tag));
			rip_printblk((u_char *)&ni->rip_dest,
				     (u_char *)&ni->rip_metric +
				     sizeof(ni->rip_metric));
			printf("]");
		}
	} else if (family != AF_INET) {
		printf(" [family %d:", family);
		rip_printblk((u_char *)&ni->rip_tag,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
		printf("]");
		return;
	} else { /* AF_INET */
		printf(" {%s", ipaddr_string(&ni->rip_dest));
		if (ni->rip_dest_mask)
			printf("/%s", ipaddr_string(&ni->rip_dest_mask));
		if (ni->rip_router)
			printf("->%s", ipaddr_string(&ni->rip_router));
		if (ni->rip_tag)
			printf(" tag %04x", EXTRACT_16BITS(&ni->rip_tag));
		printf("}(%d)", EXTRACT_32BITS(&ni->rip_metric));
	}
}

void
rip_print(const u_char *dat, u_int length)
{
	const struct rip *rp;
	const struct rip_netinfo *ni;
	int i, j, trunc;

	i = min(length, snapend - dat) - sizeof(*rp);
	if (i < 0) {
		printf(" [|rip]");
		return;
	}

	rp = (struct rip *)dat;
	switch (rp->rip_vers) {
	case 0:
		/* RFC 1058 */
		printf(" RIPv0: ");
		rip_printblk((u_char *)(rp + 1), snapend);
		break;
	default:
		switch (rp->rip_cmd) {
		case RIPCMD_REQUEST:
			printf(" RIPv%d-req %d", rp->rip_vers, length);
			break;
		case RIPCMD_RESPONSE:
			j = length / sizeof(*ni);
			if (j * sizeof(*ni) != length - 4)
				printf(" RIPv%d-resp [items %d] [%d]:",
				       rp->rip_vers, j, length);
			else
				printf(" RIPv%d-resp [items %d]:",
				       rp->rip_vers, j);
			trunc = (i / sizeof(*ni)) != j;
			ni = (struct rip_netinfo *)(rp + 1);
			for (; (i -= sizeof(*ni)) >= 0; ++ni) {
				if (rp->rip_vers == 1)
					rip_entry_print_v1(rp->rip_vers, ni);
				else
					rip_entry_print_v2(rp->rip_vers, ni);
			}
			if (trunc)
				printf("[|rip]");
			break;
		case RIPCMD_TRACEON:
			printf(" RIPv%d-traceon %d: \"", rp->rip_vers, length);
			(void)fn_print((const u_char *)(rp + 1), snapend);
			fputs("\"", stdout);
			break;
		case RIPCMD_TRACEOFF:
			printf(" RIPv%d-traceoff %d", rp->rip_vers, length);
			break;
		case RIPCMD_POLL:
			printf(" RIPv%d-poll %d", rp->rip_vers, length);
			break;
		case RIPCMD_POLLENTRY:
			printf(" RIPv%d-pollentry %d", rp->rip_vers, length);
			break;
		default:
			printf(" RIPv%d-#%d %d", rp->rip_vers, rp->rip_cmd,
			       length);
			break;
		}
        }
}
@


1.15
log
@Most packets generate one line in tcpdump.  For AH and RIP there
was an extra line without benefit.  Remove the new-line in printf
to make parsing easier.
OK lteo@@ mikeb@@
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.14 2015/01/16 06:40:21 deraadt Exp $	*/
d73 1
a73 1
rip_entry_print_v1(register int vers, register const struct rip_netinfo *ni)
d75 1
a75 1
	register u_short family;
d101 1
a101 1
rip_entry_print_v2(register int vers, register const struct rip_netinfo *ni)
d103 2
a104 2
	register u_char *p;
	register u_short family;
d156 3
a158 3
	register const struct rip *rp;
	register const struct rip_netinfo *ni;
	register int i, j, trunc;
@


1.14
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.13 2014/08/14 12:44:44 mpi Exp $	*/
d200 1
a200 1
			fputs("\"\n", stdout);
@


1.13
log
@No use for <netinet/in_systm.h> nor <netinet/tcpip.h>.
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.12 2009/10/27 23:59:55 deraadt Exp $	*/
a23 1
#include <sys/param.h>
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.11 2007/10/07 16:41:05 deraadt Exp $	*/
a28 1
#include <netinet/in_systm.h>
@


1.11
log
@trash $Header goo which is just annoying; 5595
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.10 2000/12/05 08:16:15 jakob Exp $	*/
a22 5

#ifndef lint
static const char rcsid[] =
    "@@(#) $Id$ (LBL)";
#endif
@


1.10
log
@fix RIPv0 (RFC 1058) printing; <james@@squish.net>
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.9 2000/10/13 08:32:16 jakob Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.9 2000/10/13 08:32:16 jakob Exp $ (LBL)";
@


1.9
log
@fix build on alpha with -Werror; David Leonard <david.leonard@@csee.uq.edu.au>
@
text
@d1 1
a1 1
/*	$OpenBSD: print-rip.c,v 1.8 2000/10/03 14:21:57 ho Exp $	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.8 2000/10/03 14:21:57 ho Exp $ (LBL)";
d178 1
a178 5
#if 0 /* XXX this is broken, ni is uninitialized */
		rip_printblk((u_char *)&ni->rip_family,
			     (u_char *)&ni->rip_metric +
			     sizeof(ni->rip_metric));
#endif
@


1.8
log
@Compile with -Wall. Add $OpenBSD$. (jakob@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.7 2000/06/18 09:39:28 jakob Exp $ (LBL)";
d41 1
@


1.7
log
@Improve RIP support; PR#1266, James Ponder <james@@oaktree.co.uk>

*  Fixes the way version numbers are handled so that it is compliant
   with RFC 1058 in the order that you should look at things.

*  Adds support for the authentication attribute with cleartext passwords.

*  Improves readability in output.

*  Handles version 0 of RIP and unknown conditions a lot better
@
text
@d1 2
d26 1
a26 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.6 2000/04/26 21:35:42 jakob Exp $ (LBL)";
d41 1
d177 1
d181 1
@


1.6
log
@INET6
DHCP/BOOTP
tcp & udp checksum detection
numerous bugfixes
@
text
@d24 1
a24 1
    "@@(#) $Header: /cvs/src/usr.sbin/tcpdump/print-rip.c,v 1.5 1996/12/12 16:22:28 bitblt Exp $ (LBL)";
d56 2
d68 9
a76 1
rip_entry_print(register int vers, register const struct rip_netinfo *ni)
d78 1
a78 1
	register u_char *cp, *ep;
d80 22
a101 1
	if (EXTRACT_16BITS(&ni->rip_family) != AF_INET) {
d103 39
a141 5
		printf(" [family %d:", EXTRACT_16BITS(&ni->rip_family));
		cp = (u_char *)&ni->rip_tag;
		ep = (u_char *)&ni->rip_metric + sizeof(ni->rip_metric);
		for (; cp < ep; cp += 2)
			printf(" %04x", EXTRACT_16BITS(cp));
d143 2
a144 5
	} else if (vers < 2) {
		/* RFC 1058 */
		printf(" %s", ipaddr_string(&ni->rip_dest));
	} else {
		/* RFC 1723 */
d152 1
a152 1
		printf("}");
a153 1
	printf("(%d)", EXTRACT_32BITS(&ni->rip_metric));
a169 42
	switch (rp->rip_cmd) {

	case RIPCMD_REQUEST:
		printf(" rip-req %d", length);
		break;

	case RIPCMD_RESPONSE:
		j = length / sizeof(*ni);
		if (j * sizeof(*ni) != length - 4)
			printf(" rip-resp %d[%d]:", j, length);
		else
			printf(" rip-resp %d:", j);
		trunc = (i / sizeof(*ni)) != j;
		ni = (struct rip_netinfo *)(rp + 1);
		for (; (i -= sizeof(*ni)) >= 0; ++ni)
			rip_entry_print(rp->rip_vers, ni);
		if (trunc)
			printf("[|rip]");
		break;

	case RIPCMD_TRACEON:
		printf(" rip-traceon %d: \"", length);
		(void)fn_print((const u_char *)(rp + 1), snapend);
		fputs("\"\n", stdout);
		break;

	case RIPCMD_TRACEOFF:
		printf(" rip-traceoff %d", length);
		break;

	case RIPCMD_POLL:
		printf(" rip-poll %d", length);
		break;

	case RIPCMD_POLLENTRY:
		printf(" rip-pollentry %d", length);
		break;

	default:
		printf(" rip-#%d %d", rp->rip_cmd, length);
		break;
	}
d171 6
a176 3

	case 1:
	case 2:
a177 1

d179 42
a220 2
		printf(" [vers %d]", rp->rip_vers);
		break;
@


1.5
log
@*** empty log message ***
@
text
@d24 1
a24 1
    "@@(#) $Header: print-rip.c,v 1.36 96/11/29 01:22:50 leres Exp $ (LBL)";
d103 2
a104 1
	if (i < 0)
d106 1
d121 1
a121 1
		trunc = ((i / sizeof(*ni)) * sizeof(*ni) != i);
@


1.4
log
@it is 3.2 now.
@
text
@a0 2
/*	$OpenBSD$	*/

d23 2
a24 2
static char rcsid[] =
    "@@(#) Header: print-rip.c,v 1.30 96/06/24 22:12:54 leres Exp (LBL)";
a28 1
#include <sys/types.h>
d70 1
a70 1
	if (EXTRACT_SHORT(&ni->rip_family) != AF_INET) {
d72 1
a72 1
		printf(" [family %d:", EXTRACT_SHORT(&ni->rip_family));
d76 1
a76 1
			printf(" %04x", EXTRACT_SHORT(cp));
d89 1
a89 1
			printf(" tag %04x", EXTRACT_SHORT(&ni->rip_tag));
d92 1
a92 1
	printf("(%d)", EXTRACT_LONG(&ni->rip_metric));
d96 1
a96 1
rip_print(const u_char *dat, int length)
d102 1
a102 1
	i = min(length, snapend - dat) - (sizeof(*rp) - sizeof(*ni));
d128 1
a128 1
		printf(" rip-traceon %d: ", length);
d130 1
a130 1
		putchar('\n');
@


1.3
log
@sync to latest
@
text
@d1 1
a1 2
/**//*	$OpenBSD: print-rip.c,v 1.4 1995/06/20 23:38:49 christos Exp $	*/
/*	$NetBSD: print-rip.c,v 1.4 1995/06/20 23:38:49 christos Exp $	*/
d4 1
a4 1
 * Copyright (c) 1989, 1990, 1991, 1993, 1994
d26 1
a26 1
    "@@(#) Header: print-rip.c,v 1.20 94/06/14 20:18:47 leres Exp (LBL)";
a40 3
#include <protocols/routed.h>

#include <errno.h>
d45 22
d69 1
a69 1
rip_entry_print(register const struct netinfo *ni)
d71 1
a71 2
	if (ntohs(ni->rip_family) != AF_INET) {
		register int i;
d73 7
a79 2
		printf(" [family %d:", ntohs(ni->rip_family));
		printf(" %04x", ni->rip_dst);
d81 3
d85 6
a90 3
		struct sockaddr_in sin;
		sin.sin_addr.s_addr = ni->rip_dst;
		printf(" %s", ipaddr_string(&sin.sin_addr));
d92 2
a93 1
			printf(" [port %d]", ni->rip_tag);
d95 1
a95 1
	printf("(%d)", ntohl(ni->rip_metric));
d101 3
a103 7
	register const struct rip *rp = (struct rip *)dat;
	register const struct netinfo *ni;
	register int amt = snapend - dat;
	register int i = min(length, amt) -
			 (sizeof(struct rip) - sizeof(struct netinfo));
	int j;
	int trunc;
d105 1
d109 1
d115 1
d123 3
a125 2
		for (ni = rp->rip_nets; (i -= sizeof(*ni)) >= 0; ++ni)
			rip_entry_print(ni);
d129 1
d131 3
a133 1
		printf(" rip-traceon %d: \"%s\"", length, rp->rip_tracefile);
d135 1
d139 1
d143 1
d147 1
d149 1
a149 1
		printf(" rip-%d ?? %d", rp->rip_cmd, length);
d152 7
a158 1
	if (rp->rip_vers != RIP_VERSION_1)
d160 2
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
