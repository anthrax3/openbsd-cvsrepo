head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.36
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.40
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.38
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.32
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.34
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.26
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.30
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.28
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.24
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.22
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.20
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.18
	OPENBSD_5_0:1.8.0.16
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.14
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.12
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.8
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.10
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.6
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.7.0.30
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.28
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.26
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.24
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.22
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.20
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.18
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.16
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.14
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.12
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2007.10.07.16.41.05;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.03.14.31.54;	author ho;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.26.21.35.38;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	96.12.12.16.22.58;	author bitblt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.13.11.01.08;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.47.13;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.58.59;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@trash $Header goo which is just annoying; 5595
@
text
@/*	$OpenBSD: bootp.h,v 1.7 2000/10/03 14:31:54 ho Exp $	*/

/* @@(#) $Id$ (LBL) */
/*
 * Bootstrap Protocol (BOOTP).  RFC951 and RFC1048.
 *
 * This file specifies the "implementation-independent" BOOTP protocol
 * information which is common to both client and server.
 *
 * Copyright 1988 by Carnegie Mellon.
 *
 * Permission to use, copy, modify, and distribute this program for any
 * purpose and without fee is hereby granted, provided that this copyright
 * and permission notice appear on all copies and supporting documentation,
 * the name of Carnegie Mellon not be used in advertising or publicity
 * pertaining to distribution of the program without specific prior
 * permission, and notice be given in supporting documentation that copying
 * and distribution is by permission of Carnegie Mellon and Stanford
 * University.  Carnegie Mellon makes no representations about the
 * suitability of this software for any purpose.  It is provided "as is"
 * without express or implied warranty.
 */


struct bootp {
	unsigned char	bp_op;		/* packet opcode type */
	unsigned char	bp_htype;	/* hardware addr type */
	unsigned char	bp_hlen;	/* hardware addr length */
	unsigned char	bp_hops;	/* gateway hops */
	u_int32_t	bp_xid;		/* transaction ID */
	unsigned short	bp_secs;	/* seconds since boot began */
	unsigned short	bp_flags;	/* flags: 0x8000 is broadcast */
	struct in_addr	bp_ciaddr;	/* client IP address */
	struct in_addr	bp_yiaddr;	/* 'your' IP address */
	struct in_addr	bp_siaddr;	/* server IP address */
	struct in_addr	bp_giaddr;	/* gateway IP address */
	unsigned char	bp_chaddr[16];	/* client hardware address */
	unsigned char	bp_sname[64];	/* server host name */
	unsigned char	bp_file[128];	/* boot file name */
	unsigned char	bp_vend[64];	/* vendor-specific area */
};

/*
 * UDP port numbers, server and client.
 */
#define	IPPORT_BOOTPS		67
#define	IPPORT_BOOTPC		68

#define BOOTREPLY		2
#define BOOTREQUEST		1


/*
 * Vendor magic cookie (v_magic) for CMU
 */
#define VM_CMU		"CMU"

/*
 * Vendor magic cookie (v_magic) for RFC1048
 */
#define VM_RFC1048	{ 99, 130, 83, 99 }



/*
 * RFC1048 tag values used to specify what information is being supplied in
 * the vendor field of the packet.
 */

#define TAG_PAD			((unsigned char)   0)
#define TAG_SUBNET_MASK		((unsigned char)   1)
#define TAG_TIME_OFFSET		((unsigned char)   2)
#define TAG_GATEWAY		((unsigned char)   3)
#define TAG_TIME_SERVER		((unsigned char)   4)
#define TAG_NAME_SERVER		((unsigned char)   5)
#define TAG_DOMAIN_SERVER	((unsigned char)   6)
#define TAG_LOG_SERVER		((unsigned char)   7)
#define TAG_COOKIE_SERVER	((unsigned char)   8)
#define TAG_LPR_SERVER		((unsigned char)   9)
#define TAG_IMPRESS_SERVER	((unsigned char)  10)
#define TAG_RLP_SERVER		((unsigned char)  11)
#define TAG_HOSTNAME		((unsigned char)  12)
#define TAG_BOOTSIZE		((unsigned char)  13)
#define TAG_END			((unsigned char) 255)
/* RFC1497 tags */
#define	TAG_DUMPPATH		((unsigned char)  14)
#define	TAG_DOMAINNAME		((unsigned char)  15)
#define	TAG_SWAP_SERVER		((unsigned char)  16)
#define	TAG_ROOTPATH		((unsigned char)  17)
#define	TAG_EXTPATH		((unsigned char)  18)
/* RFC2132 */
#define	TAG_IP_FORWARD		((unsigned char)  19)
#define	TAG_NL_SRCRT		((unsigned char)  20)
#define	TAG_PFILTERS		((unsigned char)  21)
#define	TAG_REASS_SIZE		((unsigned char)  22)
#define	TAG_DEF_TTL		((unsigned char)  23)
#define	TAG_MTU_TIMEOUT		((unsigned char)  24)
#define	TAG_MTU_TABLE		((unsigned char)  25)
#define	TAG_INT_MTU		((unsigned char)  26)
#define	TAG_LOCAL_SUBNETS	((unsigned char)  27)
#define	TAG_BROAD_ADDR		((unsigned char)  28)
#define	TAG_DO_MASK_DISC	((unsigned char)  29)
#define	TAG_SUPPLY_MASK		((unsigned char)  30)
#define	TAG_DO_RDISC		((unsigned char)  31)
#define	TAG_RTR_SOL_ADDR	((unsigned char)  32)
#define	TAG_STATIC_ROUTE	((unsigned char)  33)
#define	TAG_USE_TRAILERS	((unsigned char)  34)
#define	TAG_ARP_TIMEOUT		((unsigned char)  35)
#define	TAG_ETH_ENCAP		((unsigned char)  36)
#define	TAG_TCP_TTL		((unsigned char)  37)
#define	TAG_TCP_KEEPALIVE	((unsigned char)  38)
#define	TAG_KEEPALIVE_GO	((unsigned char)  39)
#define	TAG_NIS_DOMAIN		((unsigned char)  40)
#define	TAG_NIS_SERVERS		((unsigned char)  41)
#define	TAG_NTP_SERVERS		((unsigned char)  42)
#define	TAG_VENDOR_OPTS		((unsigned char)  43)
#define	TAG_NETBIOS_NS		((unsigned char)  44)
#define	TAG_NETBIOS_DDS		((unsigned char)  45)
#define	TAG_NETBIOS_NODE	((unsigned char)  46)
#define	TAG_NETBIOS_SCOPE	((unsigned char)  47)
#define	TAG_XWIN_FS		((unsigned char)  48)
#define	TAG_XWIN_DM		((unsigned char)  49)
#define	TAG_NIS_P_DOMAIN	((unsigned char)  64)
#define	TAG_NIS_P_SERVERS	((unsigned char)  65)
#define	TAG_MOBILE_HOME		((unsigned char)  68)
#define	TAG_SMPT_SERVER		((unsigned char)  69)
#define	TAG_POP3_SERVER		((unsigned char)  70)
#define	TAG_NNTP_SERVER		((unsigned char)  71)
#define	TAG_WWW_SERVER		((unsigned char)  72)
#define	TAG_FINGER_SERVER	((unsigned char)  73)
#define	TAG_IRC_SERVER		((unsigned char)  74)
#define	TAG_STREETTALK_SRVR	((unsigned char)  75)
#define	TAG_STREETTALK_STDA	((unsigned char)  76)
/* DHCP options */
#define	TAG_REQUESTED_IP	((unsigned char)  50)
#define	TAG_IP_LEASE		((unsigned char)  51)
#define	TAG_OPT_OVERLOAD	((unsigned char)  52)
#define	TAG_TFTP_SERVER		((unsigned char)  66)
#define	TAG_BOOTFILENAME	((unsigned char)  67)
#define	TAG_DHCP_MESSAGE	((unsigned char)  53)
#define	TAG_SERVER_ID		((unsigned char)  54)
#define	TAG_PARM_REQUEST	((unsigned char)  55)
#define	TAG_MESSAGE		((unsigned char)  56)
#define	TAG_MAX_MSG_SIZE	((unsigned char)  57)
#define	TAG_RENEWAL_TIME	((unsigned char)  58)
#define	TAG_REBIND_TIME		((unsigned char)  59)
#define	TAG_VENDOR_CLASS	((unsigned char)  60)
#define	TAG_CLIENT_ID		((unsigned char)  61)

/* DHCP Message types (values for TAG_DHCP_MESSAGE option) */
#define		DHCPDISCOVER	1
#define		DHCPOFFER	2
#define		DHCPREQUEST	3
#define		DHCPDECLINE	4
#define		DHCPACK		5
#define		DHCPNAK		6
#define		DHCPRELEASE	7
#define		DHCPINFORM	8


/*
 * "vendor" data permitted for CMU bootp clients.
 */

struct cmu_vend {
	unsigned char	v_magic[4];	/* magic number */
	u_int32_t	v_flags;	/* flags/opcodes, etc. */
	struct in_addr	v_smask;	/* Subnet mask */
	struct in_addr	v_dgate;	/* Default gateway */
	struct in_addr	v_dns1, v_dns2; /* Domain name servers */
	struct in_addr	v_ins1, v_ins2; /* IEN-116 name servers */
	struct in_addr	v_ts1, v_ts2;	/* Time servers */
	unsigned char	v_unused[24];	/* currently unused */
};


/* v_flags values */
#define VF_SMASK	1	/* Subnet mask field contains valid data */
@


1.7
log
@Add $OpenBSD$. (jakob@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 1
a3 1
/* @@(#) $Header: /cvs/src/usr.sbin/tcpdump/bootp.h,v 1.6 2000/04/26 21:35:38 jakob Exp $ (LBL) */
@


1.6
log
@INET6
DHCP/BOOTP
tcp & udp checksum detection
numerous bugfixes
@
text
@d1 3
a3 1
/* @@(#) $Header: /cvs/src/usr.sbin/tcpdump/bootp.h,v 1.5 1996/12/12 16:22:58 bitblt Exp $ (LBL) */
@


1.5
log
@*** empty log message ***
@
text
@d1 1
a1 1
/* @@(#) $Header: bootp.h,v 1.7 95/05/04 17:52:46 mccanne Exp $ (LBL) */
d30 1
a30 1
	unsigned short	bp_unused;
d89 68
a156 1

@


1.4
log
@it is 3.2 now.
@
text
@d1 1
a1 3
/*	$OpenBSD$	*/

/* @@(#) Header: bootp.h,v 1.7 95/05/04 17:52:46 mccanne Exp (LBL) */
@


1.3
log
@sync to latest
@
text
@d1 1
a1 2
/**//*	$OpenBSD: bootp.h,v 1.2 1995/03/06 19:09:54 mycroft Exp $	*/
/*	$NetBSD: bootp.h,v 1.2 1995/03/06 19:09:54 mycroft Exp $	*/
d3 1
a3 1
/* @@(#) Header: bootp.h,v 1.6 94/01/13 19:06:29 leres Exp (LBL) */
d30 1
a30 1
	u_int32		bp_xid;		/* transaction ID */
d100 1
a100 1
	u_int32		v_flags;	/* flags/opcodes, etc. */
@


1.2
log
@Updating to the latest LBL release.
Sun's SKIP support added.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
