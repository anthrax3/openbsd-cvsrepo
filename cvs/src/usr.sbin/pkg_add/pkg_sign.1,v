head	1.10;
access;
symbols
	OPENBSD_6_0:1.8.0.6
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4;
locks; strict;
comment	@.\" @;


1.10
date	2017.02.15.13.19.08;	author jmc;	state Exp;
branches;
next	1.9;
commitid	j8UnunCP9XczEY7i;

1.9
date	2016.10.03.13.11.38;	author espie;	state Exp;
branches;
next	1.8;
commitid	hwwIsWsKgEbZ0cRm;

1.8
date	2015.09.25.16.56.26;	author schwarze;	state Exp;
branches;
next	1.7;
commitid	Cv8f5AJ04kkOil8J;

1.7
date	2014.10.11.08.41.06;	author espie;	state Exp;
branches;
next	1.6;
commitid	gEIC1zYajgIDVCi4;

1.6
date	2014.09.11.23.57.33;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	qKX6LVBR1Jqm8sUQ;

1.5
date	2014.09.08.01.27.55;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	cPoapLAXYNe1fcgV;

1.4
date	2014.02.12.12.15.03;	author schwarze;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.23.22.57.06;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.23.12.41.55;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2014.01.23.12.21.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@improve list item formatting;
from salvador sabaini
@
text
@.\"	$OpenBSD: pkg_sign.1,v 1.9 2016/10/03 13:11:38 espie Exp $
.\" Copyright (c) 2014 Marc Espie <espie@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 3 2016 $
.Dt PKG_SIGN 1
.Os
.Sh NAME
.Nm pkg_sign
.Nd sign binary packages for distribution
.Sh SYNOPSIS
.Nm pkg_sign
.Bk -words
.Op Fl Cvi
.Op Fl D Ar name Ns Op = Ns Ar value
.Op Fl j Ar maxjobs
.Op Fl o Ar dir
.Fl s Cm signify2
.Fl s Ar privkey
.Op Fl S Ar source
.Op Ar pkg-name ...
.Ek
.Sh DESCRIPTION
The
.Nm
command is used to sign existing collections of binary packages
created by
.Xr pkg_create 1 .
.Pp
It will sign the packages and optionally, produce a
.Pa SHA256
manifest file in the output directory.
The options are as follows:
.Bl -tag -width Ds
.It Fl C
Append
.Xr sha256 1
checksums to
.Pa SHA256
in the output directory, then sort it.
.\" .It Fl D Ar resign
.\" Allows signing over already signed packages.
.\" Obviously, this checks the existing signature first,
.\" so the
.\" .Fl D Ar SIGNER
.\" and
.\" .Fl D Ar nosig
.\" also apply with the same semantics as
.\" .Xr pkg_add 1 .
.It Fl i
Incremental mode.
Ignore packages that are already in the output repository.
Note that, in verbose mode, they will still show up as
.Sq Signed
in the listing.
.It Fl j Ar maxjobs
Sign existing packages in parallel.
.It Fl o Ar dir
Specify output directory for signing packages.
Otherwise, unsigned packages are created in the current directory.
.It Fl S Ar source
Source repository for packages to be signed.
.\" This can be any url admissible for a
.\" .Ev PKG_PATH ,
.\" so that it is possible to sign packages during a transfer, e.g.,
.\" .Bd -literal -offset indent
.\" pkg_sign -s signify -s mykey-pkg.sec \e
.\" 	-o output -S scp://build-machine/packages/
.\" .Ed
.It Xo
.Fl s Cm signify2
.Fl s Ar privkey
.Xc
Specify signature parameters for signed packages.
Option parameters are as follows:
.Bl -tag -width signify2
.It Cm signify2
Choose
.Xr signify 1
new style signatures, where the
.Xr gzip 1
compressed data is signed.
.It Ar privkey
The path to the signer's private key.
For
.Cm signify ,
the private key name is used to set the
.Cm @@signer
annotation.
If a corresponding public key is found, the first signatures will be
checked for key mismatches.
.El
.It Fl v
Turn on verbose output, display
.Sq Signed output/pkg.tgz
after each package is signed.
.El
.Sh SIGNATURE DETAILS
The signature is stored within the
.Xr gzip 1
comment, as plain text data, according to
.Xr signify 1
.Fl zS
mode.
It contains the ed25519 signature, some meta-information,
and
SHA512/256 checksums for each 64K block of compressed data.
.Pp
Additionally, for further manual checking, the packing-list contains
a complete manifest of files within the package,
checksummed with
.Xr sha256 1
and annotated with proper
.Cm @@mode ,
.Cm @@user ,
.Cm @@group
annotations, so that
.Xr pkg_add 1
will refuse to give special rights to any file which isn't properly annotated,
and so that it will abort on installation of a file whose checksum does not
match.
.Pp
Meta-information from
.Xr signify 1
gets inserted in the packing list during extraction,
adding a
.Cm @@digital-signature
annotation and a
.Cm @@signer
annotation for further manual inspection.
.Sh SEE ALSO
.Xr cksum 1 ,
.Xr pkg_add 1 ,
.Xr signify 1 ,
.Xr tar 1 ,
.Xr package 5
.Sh HISTORY
The
.Nm
command first appeared in
.Ox 5.5 .
The signature process was completely redesigned for
.Ox 6.1 .
.Sh AUTHORS
.An Marc Espie
@


1.9
log
@document what signify2 does, remove remnants of signify/x509.
comment out stuff that's not supported yet, but may make a come-back later
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.8 2015/09/25 16:56:26 schwarze Exp $
d16 1
a16 1
.Dd $Mdocdate: September 25 2015 $
d87 1
a87 1
.Bl -tag -width signify2 -compact
d89 1
a89 1
choose
d95 1
a95 1
the path to the signer's private key.
@


1.8
log
@Use .Cm rather than .Ar for fixed strings on the command line
and remove invalid escaping of `@@' characters.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.7 2014/10/11 08:41:06 espie Exp $
d16 1
a16 1
.Dd $Mdocdate: October 11 2014 $
d29 1
a29 2
.Fl s Cm signify Ns | Ns Cm x509
.Op Fl s Ar cert
d52 9
a60 9
.It Fl D Ar resign
Allows signing over already signed packages.
Obviously, this checks the existing signature first,
so the
.Fl D Ar SIGNER
and
.Fl D Ar nosig
also apply with the same semantics as
.Xr pkg_add 1 .
d74 7
a80 7
This can be any url admissible for a
.Ev PKG_PATH ,
so that it is possible to sign packages during a transfer, e.g.,
.Bd -literal -offset indent
pkg_sign -s signify -s mykey-pkg.sec \e
	-o output -S scp://build-machine/packages/
.Ed
d82 1
a82 2
.Fl s Cm signify Ns | Ns Cm x509
.Op Fl s Ar cert
d87 2
a88 2
.Bl -tag -width signify|x509 -compact
.It Cm signify Ns | Ns Cm x509
d91 3
a93 3
or X.509-style signatures.
.It Ar cert
the path to the signer's certificate (X.509 only)
a103 7
.Pp
For X.509, the signer's certificate and the signer's private key
should be generated using standard openssl x509 commands.
This assumes the existence of a certificate authority (or several), whose
public information is recorded as a
.Pa /etc/ssl/pkgca.pem
file.
d110 12
a121 2
The packing-list is extracted from the source package:
it already contains a complete manifest of files within the package,
d134 3
a136 1
That packing list is a text file that is signed using the provided method,
d139 3
a141 5
annotation.
The signed package is then created, by putting the signed packing-list at
the start of the new package, and then blindly copying the rest of the source
package: there is no need to re-checksum any of the files;
if someone tampers with them later, their checksum will not match.
d143 1
a143 1
.Xr openssl 1 ,
a144 2
.Xr pkg_create 1 ,
.Xr sha256 1 ,
d153 2
@


1.7
log
@allow signing to proceed when interrupted
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.6 2014/09/11 23:57:33 schwarze Exp $
d16 1
a16 1
.Dd $Mdocdate: September 11 2014 $
d29 1
a29 1
.Fl s Ar signify|x509
d83 1
a83 1
.Fl s Ar signify|x509
d89 2
a90 2
.Bl -tag -width ArsignifyDx509 -compact
.It Ar signify|x509
d99 1
a99 1
.Xr signify ,
d101 1
a101 1
.Cm \@@signer
d124 3
a126 3
.Cm \@@mode ,
.Cm \@@user ,
.Cm \@@group
d135 1
a135 1
.Cm \@@digital-signature
@


1.6
log
@fix the only .Xr ordering and punctuation issue i could find
with the new MANDOCERR_XR_* warnings in the whole tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.5 2014/09/08 01:27:55 schwarze Exp $
d16 1
a16 1
.Dd $Mdocdate: September 8 2014 $
d25 1
a25 1
.Op Fl Cv
d62 6
@


1.5
log
@obvious cases of missing .An;
found with the new mandoc(1) MANDOCERR_AN_MISSING warning;
no text changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.4 2014/02/12 12:15:03 schwarze Exp $
d16 1
a16 1
.Dd $Mdocdate: February 12 2014 $
d139 1
a140 1
.Xr sha256 1 ,
d142 1
a142 1
.Xr package 5 ,
@


1.4
log
@no need for .Pp before .It and .Sh, zap trailing whitespace,
and no need to capitalize the first word after a semicolon;
from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.3 2014/01/23 22:57:06 espie Exp $
d16 1
a16 1
.Dd $Mdocdate: January 23 2014 $
d149 1
a149 3
.Bl -tag -width indent -compact
.It "Marc Espie"
.El
@


1.3
log
@tweak the way we create and sign packages significantly:

all modern compression formats support multi-stream archives.
Store the packing-list as a separate stream, and note where the
first stream ends when reading back the packing list.

When pkg_sign sees a split-stream archive, it does not need to unpack/repack
the whole archive: it can just sign the packing-list, close the stream, and
copy the next stream(s) from the source archive verbatim.

This is perfectly transparent to pkg_add, but abuses IO::Uncompress::Gunzip
internals slightly (to be solved with cpan).

also adds explicit option -C for generating a SHA256 list of all packages.

and okay naddy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.2 2014/01/23 12:41:55 espie Exp $
a106 1
.Pp
a111 1
.Pp
d127 1
a127 1
That packing list is a text file that is signed using the provided method, 
d133 2
a134 2
package: there is no need to re-checksum any of the files; 
If someone tampers with them later, their checksum will not match.
@


1.2
log
@explain signatures
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_sign.1,v 1.1 2014/01/23 12:21:44 espie Exp $
d25 1
a25 1
.Op Fl v
d42 1
a42 1
It will sign the packages and additionally, produce a
d47 6
@


1.1
log
@separate pkg_sign documentation. Option description becomes MUCH saner.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d16 1
a16 1
.Dd $Mdocdate$
d42 3
d109 22
a130 1
To be done.
d136 1
@

