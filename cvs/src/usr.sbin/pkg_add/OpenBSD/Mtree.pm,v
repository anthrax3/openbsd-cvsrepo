head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.14
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.6
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.16
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.12
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.10
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.8
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.6
	OPENBSD_5_0:1.12.0.4
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.2
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.6.0.4
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.6
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.2
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.13
date	2014.03.18.18.53.29;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.05.12.01.08;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2008.10.20.10.25.16;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.20.14.31.38;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.04.14.40.39;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.15.10.17.29;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.26.13.56.28;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.14.22.24.21;	author espie;	state Exp;
branches;
next	;


desc
@@


1.13
log
@remove $_ usage that warns under perl 5.18
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Mtree.pm,v 1.12 2010/12/24 09:04:14 espie Exp $
#
# Copyright (c) 2004-2005 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

package OpenBSD::Mtree;
use File::Spec;

# read an mtree file, and produce the corresponding directory hierarchy

sub parse_fh
{
	my ($mtree, $basedir, $fh, $h) = @@_;
	while(<$fh>) {
		chomp;
		s/^\s*//o;
		next if /^\#/o || /^\//o;
		s/\s.*$//o;
		next if /^$/o;
		if ($_ eq '..') {
			$basedir =~ s|/[^/]*$||o;
			next;
		} elsif (m/^\//) {
			$basedir = $_;
		} else {
			$basedir.="/$_";
		}
		$_ = $basedir;
		while (s|/\./|/|o)	{}
		if (defined $h) {
			$mtree->{File::Spec->canonpath($_)} //= {};
		} else {
			$mtree->{File::Spec->canonpath($_)} = 1;
		}
	}
}

sub parse
{
	my ($mtree, $basedir, $filename, $h) = @@_;
	open my $file, '<', $filename or die "can't open $filename: $!";
	parse_fh($mtree, $basedir, $file, $h);
	close $file;
}

1;
@


1.12
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@d2 1
a2 1
# $OpenBSD$
a28 1
	my $_;
@


1.11
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.10
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.9
log
@whitespace cleanup
@
text
@@


1.8
log
@interface tweaks:
- allow mtree to create more diverse data structures.
- new "working" method, for when progressmeter should show that something is
going on, but doesn't actually have an actual % to show, so show cartwheels.
e.g., progress->working(1024);
(actual counter will be /= argument, so that it does move a bit slower).
@
text
@d2 1
a2 1
# $OpenBSD: Mtree.pm,v 1.7 2010/05/10 09:17:55 espie Exp $
@


1.7
log
@whitespace fixes
@
text
@d2 1
a2 1
# $OpenBSD$
d28 1
a28 1
	my ($mtree, $basedir, $fh) = @@_;
d46 5
a50 1
		$mtree->{File::Spec->canonpath($_)} = 1;
d56 1
a56 1
	my ($mtree, $basedir, $filename) = @@_;
d58 1
a58 1
	parse_fh($mtree, $basedir, $file);
@


1.6
log
@Say goodbye to local $_
lexical scoping is so much neater (courtesy of perl 5.10)
@
text
@d50 1
a50 1
sub parse 
@


1.5
log
@prepare to handle future extensions
@
text
@d29 1
a29 1
	local $_;
@


1.4
log
@some minor systematic changes.
- mark all regexps I can with /o if they can be compiled once.
- turn $o->method() into $o->method
- remove unneeded prototypes
- reduce split /re/ into split "string" where possible.
@
text
@d2 1
a2 1
# $OpenBSD: Mtree.pm,v 1.3 2007/04/15 10:17:29 espie Exp $
d39 2
@


1.3
log
@update copyright years, standardize licence.
reword the introduction to the stuff originally from FreeBSD to clarify
slightly.
@
text
@d2 1
a2 1
# $OpenBSD: Mtree.pm,v 1.2 2005/02/26 13:56:28 espie Exp $
d32 4
a35 4
		s/^\s*//;
		next if /^\#/ || /^\//;
		s/\s.*$//;
		next if /^$/;
d37 1
a37 1
			$basedir =~ s|/[^/]*$||;
d43 1
a43 1
		while (s|/\./|/|)	{}
@


1.2
log
@cosmetic clean-up
@
text
@d2 1
a2 1
# $OpenBSD: Mtree.pm,v 1.1 2004/09/14 22:24:21 espie Exp $
d4 1
a4 1
# Copyright (c) 2004 Marc Espie <espie@@openbsd.org>
@


1.1
log
@Handle basic mtree for directory creation.
@
text
@d2 1
a2 1
# $OpenBSD$
d25 2
a26 1
sub parse 
d28 3
a30 3
	my ($mtree, $current_dir, $filename) = @@_;
	open my $file, '<', $filename;
	while(<$file>) {
d37 1
a37 1
			$current_dir =~ s|/[^/]*$||;
d40 1
a40 1
			$current_dir.="/$_";
d42 1
a42 1
		$_ = $current_dir;
d46 7
@

