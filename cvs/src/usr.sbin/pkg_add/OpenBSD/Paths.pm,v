head	1.35;
access;
symbols
	OPENBSD_6_0:1.33.0.8
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.4
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.30.0.2
	OPENBSD_5_7_BASE:1.30
	OPENBSD_5_6:1.29.0.4
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.27.0.4
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.21.0.8
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.21.0.6
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.4
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.2
	OPENBSD_5_0:1.17.0.4
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.15.0.2
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.6
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.4
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6
	OPENBSD_4_2_BASE:1.6;
locks; strict;
comment	@# @;


1.35
date	2017.03.01.17.52.00;	author rpe;	state Exp;
branches;
next	1.34;
commitid	Pyv9UH3uCjhXY197;

1.34
date	2017.02.06.15.13.23;	author espie;	state Exp;
branches;
next	1.33;
commitid	euMih8NZU8IZREri;

1.33
date	2015.07.23.19.46.52;	author jung;	state Exp;
branches;
next	1.32;
commitid	FubrkaydzkRgvEdw;

1.32
date	2015.07.21.05.10.12;	author naddy;	state Exp;
branches;
next	1.31;
commitid	fLpjbJu4kEnyMIHg;

1.31
date	2015.04.16.13.29.16;	author espie;	state Exp;
branches;
next	1.30;
commitid	glpsNd6nX6NAzNf5;

1.30
date	2014.08.26.17.47.24;	author jsing;	state Exp;
branches;
next	1.29;
commitid	7A7DObXgY4Fni8xJ;

1.29
date	2014.07.14.08.47.49;	author espie;	state Exp;
branches;
next	1.28;
commitid	ja6CSic7SEsRa8BZ;

1.28
date	2014.04.18.10.00.48;	author schwarze;	state Exp;
branches;
next	1.27;

1.27
date	2014.01.17.10.54.14;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2014.01.09.20.20.01;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2014.01.09.10.36.52;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.04.00.14.08;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2014.01.02.13.45.14;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2013.12.31.11.21.10;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2012.01.16.08.42.38;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2012.01.09.01.59.08;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2012.01.07.16.28.16;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2012.01.05.23.03.57;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2010.06.15.08.19.31;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2010.06.05.07.17.26;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2010.04.24.09.28.19;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.04.05.14.47.05;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.02.28.10.06.46;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2009.04.14.17.53.58;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2007.08.28.10.39.03;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2007.07.14.21.50.05;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.16.09.37.31;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.06.16.09.29.37;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2007.06.12.09.57.50;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2007.06.10.16.59.30;	author espie;	state Exp;
branches;
next	;


desc
@@


1.35
log
@Remove pkg.conf leftover.

OK espie@@
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Paths.pm,v 1.34 2017/02/06 15:13:23 espie Exp $
#
# Copyright (c) 2007-2014 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

package OpenBSD::Paths;

# Commands
sub ldconfig() { '/sbin/ldconfig' }
sub chroot() { '/usr/sbin/chroot' }
sub mkfontscale() { '/usr/X11R6/bin/mkfontscale' }
sub mkfontdir() { '/usr/X11R6/bin/mkfontdir' }
sub fc_cache() { '/usr/X11R6/bin/fc-cache' }
sub install_info() { '/usr/bin/install-info' }
sub useradd() { '/usr/sbin/useradd' }
sub groupadd() { '/usr/sbin/groupadd' }
sub sysctl() { '/sbin/sysctl' }
sub openssl() { '/usr/bin/openssl' }
sub pkgca() { '/etc/ssl/pkgca.pem' }
sub signify() { '/usr/bin/signify' }
sub signifykey { my $s = $_[1]; "/etc/signify/$s.pub" }
sub pkg_add() { '/usr/sbin/pkg_add' }
sub chmod() { '/bin/chmod' }	# external command is used for symbolic modes.
sub gzip() { '/usr/bin/gzip' }
sub ftp() { $ENV{'FETCH_CMD'} || '/usr/bin/ftp' }
sub groff() { '/usr/local/bin/groff' }
sub sh() { '/bin/sh' }
sub arch() { '/usr/bin/arch' }
sub uname() { '/usr/bin/uname' }
sub userdel() { '/usr/sbin/userdel' }
sub groupdel() { '/usr/sbin/groupdel' }
sub makewhatis() { '/usr/sbin/makewhatis' }
sub mknod() { '/sbin/mknod' }
sub mount() { '/sbin/mount' }
sub df() { '/bin/df' }
sub ssh() { '/usr/bin/ssh' }
sub make() { '/usr/bin/make' }
sub mklocatedb() { '/usr/libexec/locate.mklocatedb' }
sub hostname() { '/bin/hostname' }
sub doas() { '/usr/bin/doas' }
sub env() { '/usr/bin/env' }
sub du() { '/usr/bin/du' }
sub diff() { '/usr/bin/diff' }
sub sha256() { '/bin/sha256' }

# Various paths
sub shells() { '/etc/shells' }
sub pkgdb() { '/var/db/pkg' }
sub localbase() { '/usr/local' }
sub vartmp() { '/var/tmp' }
sub portsdir() { '/usr/ports' }

sub library_dirs() { ("/usr", "/usr/X11R6") }
sub master_keys() { ("/etc/master_key") }
sub installurl() { "/etc/installurl" }
sub srclocatedb() { "/usr/lib/locate/src.db" }
sub xlocatedb() { "/usr/X11R6/lib/locate/xorg.db" }

sub font_cruft() { ("fonts.alias", "fonts.dir", "fonts.cache-1", "fonts.scale") }
sub man_cruft() { ("whatis.db", "mandoc.db", "mandoc.index") }
sub info_cruft() { ("dir") }

# a bit of code, OS-dependent stuff that's run-time detected and has no
# home yet.

my ($machine_arch, $arch, $osversion, $osdirectory);

sub architecture
{
	if (!defined $arch) {
		my $cmd = uname()." -m";
		chomp($arch = `$cmd`);
	}
	return $arch;
}

sub machine_architecture
{
	if (!defined $machine_arch) {
		my $cmd = arch()." -s";
		chomp($machine_arch = `$cmd`);
	}
	return $machine_arch;
}

sub compute_osversion
{
	open my $cmd, '-|', OpenBSD::Paths->sysctl, '-n', 'kern.version';
	my $line = <$cmd>;
	close($cmd);
	if ($line =~ m/^OpenBSD (\d\.\d)(\S*)\s/) {
		$osversion = $1;
		if ($2 eq '-current' or $2 eq '-beta') {
			$osdirectory = 'snapshots';
		} else {
			$osdirectory = $osversion;
		}
	}
}

sub os_version
{
	if (!defined $osversion) {
		compute_osversion();
	}
	return $osversion;
}

sub os_directory
{
	if (!defined $osversion) {
		compute_osversion();
	}
	return $osdirectory;
}

1;
@


1.34
log
@basic installurl support, get installpath from it (appending the requisite
magic for packages location...).   Fairly straightforward

if pkg.conf defines installpath=, it takes precedence
(manual trumps automatic)

to be fully documented once the dust settles.

okay aja@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.33 2015/07/23 19:46:52 jung Exp $
a69 1
sub pkgconf() { "/etc/pkg.conf" }
@


1.33
log
@change the expansion of %m and %c in installpath during -beta to the
snapshots/ folder

ok phessler@@ sthen@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.32 2015/07/21 05:10:12 naddy Exp $
d71 1
@


1.32
log
@switch dpb from sudo to doas (and env as required); ok sthen@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.31 2015/04/16 13:29:16 espie Exp $
d108 1
a108 1
		if ($2 eq '-current') {
@


1.31
log
@reorg code, the arch/osversion code should live in a single place,
short and sweet
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.30 2014/08/26 17:47:24 jsing Exp $
d55 2
a56 1
sub sudo() { '/usr/bin/sudo' }
@


1.30
log
@Move openssl(1) from /usr/sbin/openssl to /usr/bin/openssl, since it is not
a system/superuser binary. At the same time, move the source code from its
current lib/libssl/src/apps location to a more appropriate home under
usr.bin/openssl.

ok deraadt@@ miod@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.29 2014/07/14 08:47:49 espie Exp $
d76 54
@


1.29
log
@unhardcode db paths.
put pruning of paths back early: these happen to be in the source db for
the most part, so if we auto-detect source first, we lose.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.28 2014/04/18 10:00:48 schwarze Exp $
d33 1
a33 1
sub openssl() { '/usr/sbin/openssl' }
@


1.28
log
@Switch to the new makewhatis(8)/apropos(1)/whatis(1) combo.
"commit the switch now" espie@@  "go for it" deraadt@@

See the apropos(1) manual for a description of what's new.
On machines where you want the full functionality,
run "sudo makewhatis" and put "MAKEWHATISARGS=' '" into weekly.local(8).
Otherwise, when upgrading via source, run "sudo makewhatis -Q".
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.27 2014/01/17 10:54:14 espie Exp $
d70 2
@


1.27
log
@tweak the interface to generating signatures yet again.
- assume key names match, deduce signer from sec key.
e.g., -s signify -s 55pkg.sec
will set signer to 55pkg and look for a pubkey named 55pkg.pub,
either besides 55pkg.sec or in /etc/signify.
- verify there's no mismatch, if possible, by verifying the first package
signed.

- also build a SHA256 on the fly while signing.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.26 2014/01/09 20:20:01 espie Exp $
d47 1
@


1.26
log
@bump copyright to 2014
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.25 2014/01/09 10:36:52 espie Exp $
d57 1
@


1.25
log
@tweak signing yet again. Have pkg_create automatically add signing
identities every time, and make matching identities mandatory.
e.g., pkg_create and pkg_add must have matching -DSIGNER.
by default, signer is derived from uname -r and role (pkg_add/fw_update),
e.g., 54pkg, 54fw...
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.24 2014/01/04 00:14:08 espie Exp $
d4 1
a4 1
# Copyright (c) 2007 Marc Espie <espie@@openbsd.org>
@


1.24
log
@vendor->signer
shorten pubkey -> pub (naddy@@)
\\ -> \e (jmc@@)
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.23 2014/01/02 13:45:14 espie Exp $
d36 1
a36 2
sub signifykey() { '/etc/signify/openbsd.pub' }
sub signifyfwkey() { '/etc/signify/openbsd-fw.pub' }
@


1.23
log
@adapt to signify changes
allow a separate key for firmwares
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.22 2013/12/31 11:21:10 espie Exp $
d36 2
a37 2
sub signifykey() { '/etc/openbsd.pubkey' }
sub signifyfwkey() { '/etc/openbsd-fw.pubkey' }
@


1.22
log
@signify support
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.21 2012/01/16 08:42:38 schwarze Exp $
d37 1
@


1.21
log
@Backout activation of the new apropos(1)/whatis(1)/makewhatis(8).
In its current state, it causes too much slowdown, in particular
during system builds, and there are other regressions.
That cannot be fixed quickly while it's enabled.

Problems pointed out by espie@@, backout requested by deraadt@@,
diff "looks good" to espie@@.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.20 2012/01/09 01:59:08 schwarze Exp $
d35 2
@


1.20
log
@Rename whatis.{db,index} back to mandoc.{db,index}
such that makewhatis(8) called from pkg_delete(1)
does not fail trying to open old-style whatis.db files as btree(3).
Suggested by espie@@ deraadt@@ millert@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.19 2012/01/07 16:28:16 espie Exp $
a49 1
sub makewhatis() { '/usr/libexec/makewhatis' }
@


1.19
log
@sloppy Ingo, whatis.db + whatis.index

fix PkgCheck to use the proper API.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.18 2012/01/05 23:03:57 schwarze Exp $
d69 1
a69 1
sub man_cruft() { ("whatis.db", "whatis.index") }
@


1.18
log
@Enable the new apropos(1), whatis(1), and makewhatis(8).
Unlink the old apropos(1), whatis(1), and makewhatis(8) from the build.
Call the new tools from pkg_create(1) and pkg_add(1).
"Please enable it now."  deraadt@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.17 2010/12/24 09:04:14 espie Exp $
d69 1
a69 1
sub man_cruft() { ("whatis.db") }
@


1.17
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@d2 1
a2 1
# $OpenBSD$
d50 1
@


1.16
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.15
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.14
log
@whitespace cleanup
@
text
@@


1.13
log
@yet another path, maybe to change
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.12 2010/06/05 07:17:26 espie Exp $
@


1.12
log
@+diff
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.11 2010/05/10 09:17:55 espie Exp $
d65 1
@


1.11
log
@whitespace fixes
@
text
@d2 1
a2 1
# $OpenBSD$
d54 1
@


1.10
log
@+ pkg_add, for dpb
@
text
@@


1.9
log
@auto-format manpages with /usr/local/bin/groff if -DUSE_GROFF=1
@
text
@d35 1
@


1.8
log
@more useful paths (for dpb)
@
text
@d38 1
a38 1
sub groff() { '/usr/bin/groff' }
@


1.7
log
@initial implementation of package signatures, based on x509 certificates and
smime detached signatures.
@
text
@d50 3
@


1.6
log
@reverse mistaken commit, restore FETCH_CMD to functionality.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.5 2007/07/14 21:50:05 ajacoutot Exp $
d34 1
@


1.5
log
@- there's no point in running mkfontdir only for @@fontdir ; so let's run
mkfontscale too (and remove fonts.scale on package removal)

discussed with matthieu@@ and espie@@ weeks ago
"seems fine" pyr@@, ok espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.4 2007/06/16 09:37:31 espie Exp $
d36 1
a36 1
sub ftp() { '/usr/bin/ftp' }
@


1.4
log
@FTP_KEEPALIVE as a crude interface to ftp -k. To be thought out later.
this is just an experiment.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.3 2007/06/16 09:29:37 espie Exp $
d26 1
d60 1
a60 1
sub font_cruft() { ("fonts.alias", "fonts.dir", "fonts.cache-1") }
@


1.3
log
@use OpenBSD::Paths contents
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.2 2007/06/12 09:57:50 espie Exp $
d35 1
a35 1
sub ftp() { $ENV{'FETCH_CMD'} || '/usr/bin/ftp' }
@


1.2
log
@use constant subs instead of variable names.
Turns out completely specified variable names do not warn, even if strict,
so the previous scheme was not immune from typos.
@
text
@d2 1
a2 1
# $OpenBSD: Paths.pm,v 1.1 2007/06/10 16:59:30 espie Exp $
d25 1
d33 1
a33 1
sub chmod() { '/bin/chmod' }
d45 1
a45 1
sub ssh() { '/us/bin/ssh' }
d61 1
@


1.1
log
@Add Paths.pm, to centralize all system dependent paths all over the place.
okay millert@@, deraadt@@
@
text
@d2 1
a2 1
# $OpenBSD$
d24 23
a46 23
our $ldconfig = '/sbin/ldconfig';
our $mkfontdir = '/usr/X11R6/bin/mkfontdir';
our $fc_cache = '/usr/X11R6/bin/fc-cache';
our $install_info = '/usr/bin/install-info';
our $useradd = '/usr/sbin/useradd';
our $groupadd = '/usr/sbin/groupadd';
our $sysctl = '/sbin/sysctl';
our $openssl = '/usr/sbin/openssl';
our $chmod = '/bin/chmod';
our $gzip = '/usr/bin/gzip';
our $ftp = '/usr/bin/ftp';
our $groff = '/usr/bin/groff';
our $sh = '/bin/sh';
our $arch = '/usr/bin/arch';
our $uname = '/usr/bin/uname';
our $userdel = '/usr/sbin/userdel';
our $groupdel = '/usr/sbin/groupdel';
our $mknod = '/sbin/mknod';
our $mount = '/sbin/mount';
our $df = '/bin/df';
our $ssh = '/us/bin/ssh';
our $make = '/usr/bin/make';
our $mklocatedb = '/usr/libexec/locate.mklocatedb';
d49 5
a53 5
our $shells = '/etc/shells';
our $pkgdb = '/var/db/pkg';
our $localbase = '/usr/local';
our $vartmp = '/var/tmp';
our $portsdir = '/usr/ports';
d55 2
a56 2
our @@library_dirs = ("/usr", "/usr/X11R6");
our @@master_keys = ("/etc/master_key");
d58 2
a59 2
our @@font_cruft = ("fonts.alias", "fonts.dir", "fonts.cache-1");
our @@man_cruft = ("whatis.db");
@

