head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.24
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.26
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.20
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.22
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.14
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.18
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.16
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.12
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.12
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2009.11.10.11.36.56;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2007.06.04.14.40.39;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2007.04.15.10.17.29;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.13.11.33.07;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2004.09.14.22.37.39;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@# ex:ts=8 sw=4:
# $OpenBSD$
#
# Copyright (c) 2002-2005 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF

use strict;
use warnings;

package OpenBSD::SimpleIdCache;
sub new
{
	my $class = shift;
	bless {}, $class;
}

sub lookup
{
	my ($self, $name, $default) = @@_;
	my $r;

	if (defined $self->{$name}) {
		$r = $self->{$name};
	} else {
		$r = $self->convert($name);
		if (!defined $r) {
			$r = $default;
		}
		$self->{$name} = $r;
	}
	return $r;
}


package OpenBSD::IdCache;
our @@ISA=qw(OpenBSD::SimpleIdCache);

sub lookup
{
	my ($self, $name, $default) = @@_;

	if ($name =~ m/^\d+$/o) {
		return $name;
	} else {
		return $self->SUPER::lookup($name, $default);
	}
}

package OpenBSD::UidCache;
our @@ISA=qw(OpenBSD::IdCache);

sub convert
{
	my @@entry = getpwnam($_[1]);
	return @@entry == 0 ? undef : $entry[2];
}

package OpenBSD::GidCache;
our @@ISA=qw(OpenBSD::IdCache);

sub convert
{
	my @@entry = getgrnam($_[1]);
	return @@entry == 0 ? undef : $entry[2];
}

package OpenBSD::UnameCache;
our @@ISA=qw(OpenBSD::SimpleIdCache);

sub convert
{
	return getpwuid($_[1]);
}

package OpenBSD::GnameCache;
our @@ISA=qw(OpenBSD::SimpleIdCache);

sub convert
{
	return getgrgid($_[1]);
}

1;
@


1.9
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.8
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.7
log
@whitespace cleanup
@
text
@@


1.6
log
@whitespace fixes
@
text
@@


1.5
log
@bad espie: use strict/warnings consistently, and fix two nits and two
actual errors !
@
text
@d76 1
a76 1
	
d92 1
a92 1
	
@


1.4
log
@some minor systematic changes.
- mark all regexps I can with /o if they can be compiled once.
- turn $o->method() into $o->method
- remove unneeded prototypes
- reduce split /re/ into split "string" where possible.
@
text
@d2 1
a2 1
# $OpenBSD: IdCache.pm,v 1.3 2007/04/15 10:17:29 espie Exp $
a15 1
#
@


1.3
log
@update copyright years, standardize licence.
reword the introduction to the stuff originally from FreeBSD to clarify
slightly.
@
text
@d2 1
a2 1
# $OpenBSD: IdCache.pm,v 1.2 2005/06/13 11:33:07 espie Exp $
d53 1
a53 1
	if ($name =~ m/^\d+$/) {
@


1.2
log
@provide reverse lookup services, as a simple extension (to be used
to write UStar archives momentarily).
@
text
@d2 1
a2 1
# $OpenBSD: IdCache.pm,v 1.1 2004/09/14 22:37:39 espie Exp $
d4 1
a4 1
# Copyright (c) 2002-2004 Marc Espie <espie@@openbsd.org>
@


1.1
log
@IdCache module, that deals with uid/gid caches.
@
text
@d2 1
a2 1
# $OpenBSD$
a19 1
package OpenBSD::IdCache;
d21 1
a32 3
	if ($name =~ m/^\d+$/) {
		return $name;
	}
d45 15
d76 16
@

