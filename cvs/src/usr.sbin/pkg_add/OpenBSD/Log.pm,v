head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.6
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.12
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.10
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.8
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.6
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4;
locks; strict;
comment	@# @;


1.9
date	2014.07.27.22.17.33;	author espie;	state Exp;
branches;
next	1.8;
commitid	tugRNKisEeApzroc;

1.8
date	2014.03.18.18.53.29;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2014.02.02.23.10.41;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2010.08.03.14.10.12;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2010.06.15.08.26.39;	author espie;	state Exp;
branches;
next	;


desc
@@


1.9
log
@ensure log stuff happens, even without context
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Log.pm,v 1.8 2014/03/18 18:53:29 espie Exp $
#
# Copyright (c) 2007-2010 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

use strict;
use warnings;

package OpenBSD::Log;

sub new
{
	my ($class, $printer) = @@_;
	bless { p => $printer }, $class;
}

sub set_context
{
	my ($self, $context) = @@_;
	$self->{context} = $context;
}

sub messages
{
	my $self = shift;
	$self->{context} //= "???";
	return $self->{messages}{$self->{context}} //= [];
}

sub errmessages
{
	my $self = shift;
	$self->{context} //= "???";
	return $self->{errmessages}{$self->{context}} //= [];
}

sub f
{
	my $self = shift;
	$self->{p}->f(@@_);
}

sub print
{
	my $self = shift;
	push(@@{$self->messages}, $self->f(@@_));
}

sub say
{
	my $self = shift;
	push(@@{$self->messages}, $self->f(@@_)."\n");
}

sub errprint
{
	my $self = shift;
	push(@@{$self->errmessages}, $self->f(@@_));
}

sub errsay
{
	my $self = shift;
	push(@@{$self->errmessages}, $self->f(@@_)."\n");
}

sub specialsort
{
	return ((sort grep { /^\-/ } @@_), (sort grep { /^\+/} @@_),
	    (sort grep { !/^[\-+]/ } @@_));
}

sub dump
{
	my $self = shift;
	for my $ctxt (specialsort keys %{$self->{errmessages}}) {
		my $msgs = $self->{errmessages}{$ctxt};
		if (@@$msgs > 0) {
			$self->{p}->errsay("--- #1 -------------------", $ctxt);
			$self->{p}->_errprint(@@$msgs);
		}
	}
	$self->{errmessages} = {};
	for my $ctxt (specialsort keys %{$self->{messages}}) {
		my $msgs = $self->{messages}{$ctxt};
		if (@@$msgs > 0) {
			$self->{p}->say("--- #1 -------------------", $ctxt);
			$self->{p}->_print(@@$msgs);
		}
	}
	$self->{messages} = {};
}

sub fatal
{
	my $self = shift;
	if (defined $self->{context}) {
		$self->{p}->_fatal($self->{context}, ":", $self->f(@@_));
	}

	$self->{p}->_fatal($self->f(@@_));
}

sub system
{
	my $self = shift;
	if (open(my $grab, "-|", @@_)) {
		while (<$grab>) {
			$self->{p}->_print($_);
		}
		if (!close $grab) {
			$self->{p}->say("system(#1) failed: #2 #3",
			    join(", ", @@_), $!,
			    $self->{p}->child_error);
		}
		return $?;
	} else {
		$self->{p}->say("system(#1) was not run: #2 #3",
		    join(", ", @@_), $!, $self->{p}->child_error);
	}
}

1;
@


1.8
log
@remove $_ usage that warns under perl 5.18
@
text
@d2 1
a2 1
# $OpenBSD: Log.pm,v 1.7 2014/02/02 23:10:41 espie Exp $
d39 1
d46 1
@


1.7
log
@don't create empty lists that won't be used
@
text
@d2 1
a2 1
# $OpenBSD: Log.pm,v 1.6 2010/12/24 09:04:14 espie Exp $
a118 1
		my $_;
@


1.6
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@d2 1
a2 1
# $OpenBSD$
d34 12
a45 2
	$self->{output} = $self->{messages}->{$context} //= [];
	$self->{erroutput} = $self->{errmessages}->{$context} //= [];
d57 1
a57 1
	push(@@{$self->{output}}, $self->f(@@_));
d63 1
a63 1
	push(@@{$self->{output}}, $self->f(@@_)."\n");
d69 1
a69 1
	push(@@{$self->{erroutput}}, $self->f(@@_));
d75 1
a75 1
	push(@@{$self->{erroutput}}, $self->f(@@_)."\n");
d88 1
a88 1
		my $msgs = $self->{errmessages}->{$ctxt};
d96 1
a96 1
		my $msgs = $self->{messages}->{$ctxt};
@


1.5
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.4
log
@sort journal messsages in a better way, put - before +, so that one can
see deinstall info before new install info (prompted by a comment from
tedu@@)
@
text
@d2 1
a2 1
# $OpenBSD: Log.pm,v 1.3 2010/06/30 10:51:04 espie Exp $
@


1.3
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@d2 1
a2 1
# $OpenBSD$
d68 6
d77 1
a77 1
	for my $ctxt (sort keys %{$self->{errmessages}}) {
d85 1
a85 1
	for my $ctxt (sort keys %{$self->{messages}}) {
@


1.2
log
@whitespace cleanup
@
text
@@


1.1
log
@more printing changes.

move log operations into their own file, since they're used outside of
pkg_add/pkg_delete by pkg_check.

move all system stuff to State, so that printing can be localized/controlled.
Create primitives _print, _errprint, _fatal for overriding output, without
localization.

Accordingly, move a lot of code out of Error. We should also move Unlink and
Copy eventually.
@
text
@d2 1
a2 1
# $OpenBSD: AddDelete.pm,v 1.25 2010/06/09 08:13:19 espie Exp $
d108 1
a108 1
			$self->{p}->say("system(#1) failed: #2 #3", 
d114 1
a114 1
		$self->{p}->say("system(#1) was not run: #2 #3", 
@

