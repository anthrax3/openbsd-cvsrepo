head	1.39;
access;
symbols
	OPENBSD_6_0:1.39.0.14
	OPENBSD_6_0_BASE:1.39
	OPENBSD_5_9:1.39.0.8
	OPENBSD_5_9_BASE:1.39
	OPENBSD_5_8:1.39.0.10
	OPENBSD_5_8_BASE:1.39
	OPENBSD_5_7:1.39.0.2
	OPENBSD_5_7_BASE:1.39
	OPENBSD_5_6:1.39.0.6
	OPENBSD_5_6_BASE:1.39
	OPENBSD_5_5:1.39.0.4
	OPENBSD_5_5_BASE:1.39
	OPENBSD_5_4:1.37.0.10
	OPENBSD_5_4_BASE:1.37
	OPENBSD_5_3:1.37.0.8
	OPENBSD_5_3_BASE:1.37
	OPENBSD_5_2:1.37.0.6
	OPENBSD_5_2_BASE:1.37
	OPENBSD_5_1_BASE:1.37
	OPENBSD_5_1:1.37.0.4
	OPENBSD_5_0:1.37.0.2
	OPENBSD_5_0_BASE:1.37
	OPENBSD_4_9:1.36.0.2
	OPENBSD_4_9_BASE:1.36
	OPENBSD_4_8:1.34.0.2
	OPENBSD_4_8_BASE:1.34
	OPENBSD_4_7:1.29.0.2
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.27.0.4
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.25.0.6
	OPENBSD_4_5_BASE:1.25
	OPENBSD_4_4:1.25.0.4
	OPENBSD_4_4_BASE:1.25
	OPENBSD_4_3:1.25.0.2
	OPENBSD_4_3_BASE:1.25
	OPENBSD_4_2:1.24.0.2
	OPENBSD_4_2_BASE:1.24
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	pkgtools:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.39
date	2014.02.01.10.53.17;	author espie;	state Exp;
branches;
next	1.38;

1.38
date	2014.01.31.10.30.48;	author espie;	state Exp;
branches;
next	1.37;

1.37
date	2011.07.02.12.12.58;	author espie;	state Exp;
branches;
next	1.36;

1.36
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.34;

1.34
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.32;

1.32
date	2010.06.11.09.56.44;	author espie;	state Exp;
branches;
next	1.31;

1.31
date	2010.06.04.17.29.53;	author espie;	state Exp;
branches;
next	1.30;

1.30
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2009.12.12.17.18.11;	author espie;	state Exp;
branches;
next	1.28;

1.28
date	2009.12.12.07.44.03;	author espie;	state Exp;
branches;
next	1.27;

1.27
date	2009.06.06.10.53.38;	author espie;	state Exp;
branches;
next	1.26;

1.26
date	2009.04.19.14.58.32;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2007.12.28.12.55.03;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2007.06.12.09.53.36;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2007.05.29.10.40.20;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.14.11.22.00;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.14.11.02.15;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.14.10.53.31;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.14.10.43.45;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.12.14.48.45;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.07.12.12.10;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.07.12.08.36;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.07.08.24.16;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.02.15.05.30;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2007.04.15.10.17.29;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.12.18.41.35;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.14.08.46.24;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.28.13.54.13;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.19.14.09.53;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2004.12.16.11.30.16;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.11.09.44.06;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2004.10.05.19.52.44;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.24.08.46.04;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.18.08.14.40;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.14.22.49.36;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.06.07.51.17;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.39
log
@style
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: PkgCfl.pm,v 1.38 2014/01/31 10:30:48 espie Exp $
#
# Copyright (c) 2003-2005 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

package OpenBSD::PkgCfl;
use OpenBSD::PackageName;
use OpenBSD::Search;
use OpenBSD::PackageInfo;

sub make_conflict_list
{
	my ($class, $plist) = @@_;
	my $l = [];
	my $pkgname = $plist->pkgname;
	my $stem = OpenBSD::PackageName::splitstem($pkgname);

	unless (defined $plist->{'no-default-conflict'}) {
		push(@@$l, OpenBSD::Search::PkgSpec->new("$stem-*", 1));
	} else {
		push(@@$l, OpenBSD::Search::Exact->new($pkgname, 1));
	}
	if (defined $plist->{conflict}) {
		for my $cfl (@@{$plist->{conflict}}) {
		    push(@@$l, $cfl->spec);
		}
	}
	bless $l, $class;
}

sub conflicts_with
{
	my ($self, @@pkgnames) = @@_;
	my @@libs = grep {/^\.libs\d*\-/} @@pkgnames;
	@@pkgnames = grep {!/^\.libs\d*\-/} @@pkgnames;
	if (wantarray) {
		my @@l = ();
		for my $cfl (@@$self) {
			push(@@l, $cfl->filter(@@pkgnames));
			push(@@l, $cfl->filter_libs(@@libs));
		}
		return @@l;
	} else {
		for my $cfl (@@$self) {
			if ($cfl->filter(@@pkgnames)) {
				return 1;
			}
			if ($cfl->filter_libs(@@libs)) {
				return 1;
			}
		}
		return 0;
	}
}

sub register($$)
{
	my ($plist, $state) = @@_;

	$state->{conflict_list}{$plist->pkgname} = $plist->conflict_list;
}

sub unregister($$)
{
	my ($plist, $state) = @@_;
	delete $state->{conflict_list}{$plist->pkgname};
}

sub fill_conflict_lists($)
{
	my $state = shift;
	for my $pkg (installed_packages()) {
		my $plist = OpenBSD::PackingList->from_installation($pkg,
		    \&OpenBSD::PackingList::ConflictOnly);
		next unless defined $plist;
		if (!defined $plist->pkgname) {
			print STDERR "No pkgname in packing-list for $pkg\n";
			next;
		}
		register($plist, $state);
	}
}

sub find($$)
{
	my ($pkgname, $state) = @@_;
	my @@bad = ();
	if (is_installed $pkgname) {
		push(@@bad, $pkgname);
	}
	if (!defined $state->{conflict_list}) {
		fill_conflict_lists($state);
	}
	while (my ($name, $l) = each %{$state->{conflict_list}}) {
		next if $name eq $pkgname;
		if (!defined $l) {
			die "Error: $name has no definition";
		}
		if ($l->conflicts_with($pkgname)) {
			push(@@bad, $name);
		}
	}
	return @@bad;
}

sub find_all
{
	my ($plist, $state) = @@_;

	my @@first = $plist->conflict_list->conflicts_with(installed_packages());
	# XXX optimization
	if (@@first > 0 && !$state->{allow_replacing}) {
		return @@first;
	}

	my @@conflicts = find($plist->pkgname, $state);
	return (@@conflicts, @@first);
}

1;
@


1.38
log
@handle conflict with partial in a less hackish ways, by passing an
extra "with_partial" parameter to specs.
This also removes quite a lot extraneous objects.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.37 2011/07/02 12:12:58 espie Exp $
d75 1
a75 1
	$state->{conflict_list}->{$plist->pkgname} = $plist->conflict_list;
d81 1
a81 1
	delete $state->{conflict_list}->{$plist->pkgname};
@


1.37
log
@allows .libs* packages to match correctly in the presence of @@conflict markers
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.36 2010/12/24 09:04:14 espie Exp $
d34 1
a34 1
		push(@@$l, OpenBSD::Search::PkgSpec->new("$stem-*|partial-$stem-*"));
d36 1
a36 1
		push(@@$l, OpenBSD::Search::Exact->new("$pkgname|partial-$pkgname"));
@


1.36
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@d2 1
a2 1
# $OpenBSD$
a37 1
	push(@@$l, OpenBSD::Search::PkgSpec->new(".libs-$stem-*"));
d49 2
d55 1
d61 3
@


1.35
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.34
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.33
log
@whitespace cleanup
@
text
@@


1.32
log
@add wantarray optimization, just reply 1 as soon as we can when we actually
don't try to build the list.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.31 2010/06/04 17:29:53 espie Exp $
@


1.31
log
@add ->spec to Conflict and use the same check as for depend during pkg_create.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.30 2010/05/10 09:17:55 espie Exp $
d50 13
a62 3
	my @@l = ();
	for my $cfl (@@$self) {
		push(@@l, $cfl->filter(@@pkgnames));
a63 1
	return @@l;
@


1.30
log
@whitespace fixes
@
text
@d2 1
a2 1
# $OpenBSD$
d41 1
a41 1
		    push(@@$l, OpenBSD::Search::PkgSpec->new($cfl->name));
@


1.29
log
@autovivified
@
text
@d74 1
a74 1
		my $plist = OpenBSD::PackingList->from_installation($pkg, 
@


1.28
log
@tie conflict lists to packing lists and use them
@
text
@a92 1
		$state->{conflict_list} = {};
@


1.27
log
@quick path for pkg cfl: check whether the new package conflicts with
installed stuff first. If that's the case, and we're not in replacement
mode, we don't really need to scan all the installed packages.
@
text
@d28 1
a28 1
	my ($class, $plist, $pkg) = @@_;
a30 4
	if (!defined $pkgname) {
		print STDERR "No pkgname in packing-list for $pkg\n";
		return;
	}
d60 2
a61 4
	if (!defined $plist->{conflicts}) {
		$plist->{conflicts} = OpenBSD::PkgCfl->make_conflict_list($plist);
	}
	$state->{conflict_list}->{$plist->pkgname} = $plist->{conflicts};
d77 4
a80 1
		$plist->{conflicts} = OpenBSD::PkgCfl->make_conflict_list($plist, $pkg);
a110 1
	my $pkgname = $plist->pkgname;
d112 1
a112 3
	my $l = OpenBSD::PkgCfl->make_conflict_list($plist);
	$plist->{conflicts} = $l;
	my @@first = $l->conflicts_with(installed_packages());
d118 1
a118 1
	my @@conflicts = find($pkgname, $state);
@


1.26
log
@synch with my new style search/location changes
It's likely there will be some fallout, but it's getting a bit too large
to keep around.
This does kill a few very old oddities as well.
@
text
@d118 5
d125 1
a125 2
	push(@@conflicts, $l->conflicts_with(installed_packages()));
	return @@conflicts;
@


1.25
log
@tweak the semantics so that no-default-conflict works.

requested by mbalmer@@,sturm@@. okay winiger@@
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.24 2007/06/12 09:53:36 espie Exp $
d45 1
a45 1
		    push(@@$l, OpenBSD::Search::PkgSpec->new($cfl->{name}));
@


1.24
log
@tidy error messages: uses $! more consistently, do not append \n on die,
do append \n on warn.

Fix the two cases where the temp dir vanished too soon: not copying +DESC
should have been apparent. Not finding a +DISPLAY file is not a reason for
burping all over the place.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.23 2007/05/29 10:40:20 espie Exp $
d40 1
a40 2
		$pkgname =~ s/p\d+$//;
		push(@@$l, OpenBSD::Search::PkgSpec->new("$pkgname|partial-$pkgname"));
@


1.23
log
@don't use 0 as an error number.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.22 2007/05/14 11:22:00 espie Exp $
d103 1
a103 1
			die "Error: $name has no definition\n";
@


1.22
log
@redo search filters as real objects. Accordingly, rename match_list to
filter.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.21 2007/05/14 11:02:15 espie Exp $
d115 1
a115 1
	my $pkgname = $plist->pkgname();
@


1.21
log
@put Search objects into their own file, finally
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.20 2007/05/14 10:53:31 espie Exp $
d57 1
a57 1
		push(@@l, $cfl->match_list(@@pkgnames));
@


1.20
log
@put search objects into a search class.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.19 2007/05/14 10:43:45 espie Exp $
d23 1
a23 1
use OpenBSD::PkgSpec;
@


1.19
log
@name tweaks: match -> match_list, match_repo -> match
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.18 2007/05/12 14:48:45 espie Exp $
d38 1
a38 1
		push(@@$l, OpenBSD::PkgSpec->new("$stem-*|partial-$stem-*"));
d41 1
a41 1
		push(@@$l, OpenBSD::PkgSpec->new("$pkgname|partial-$pkgname"));
d43 1
a43 1
	push(@@$l, OpenBSD::PkgSpec->new(".libs-$stem-*"));
d46 1
a46 1
		    push(@@$l, OpenBSD::PkgSpec->new($cfl->{name}));
@


1.18
log
@use PkgSpec objects most of the time
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.17 2007/05/07 12:12:10 espie Exp $
d57 1
a57 1
		push(@@l, $cfl->match(@@pkgnames));
@


1.17
log
@since we always use PkgSpec::Match, there's no need to build anon subs.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.16 2007/05/07 12:08:36 espie Exp $
d38 1
a38 1
		push(@@$l, "$stem-*|partial-$stem-*");
d41 1
a41 1
		push(@@$l, "$pkgname|partial-$pkgname");
d43 1
a43 1
	push(@@$l, ".libs-$stem-*");
d46 1
a46 1
		    push(@@$l, $cfl->{name});
d57 1
a57 1
		push(@@l, OpenBSD::PkgSpec::match($cfl, @@pkgnames));
@


1.16
log
@PkgSpec::match does the right thing, so use it there too.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.15 2007/05/07 08:24:16 espie Exp $
d38 1
a38 1
		push(@@$l, sub { OpenBSD::PkgSpec::match("$stem-*|partial-$stem-*", @@_); });
d41 1
a41 1
		push(@@$l, sub { OpenBSD::PkgSpec::match("$pkgname|partial-$pkgname", @@_);});
d43 1
a43 1
	push(@@$l, sub { OpenBSD::PkgSpec::match(".libs-$stem-*", @@_); });
d46 1
a46 1
		    push(@@$l, sub { OpenBSD::PkgSpec::match($cfl->{name}, @@_); });
d57 1
a57 1
		push(@@l, &$cfl(@@pkgnames));
@


1.15
log
@kill old code to handle deprecated pkgcfl.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.14 2007/05/02 15:05:30 espie Exp $
d41 1
a41 1
		push(@@$l, sub { my $a; grep { $a = $_; $a =~ s/p\d+$//; $a eq $pkgname || $a eq "partial-$pkgname"} @@_;});
@


1.14
log
@$o->method() becomes $o->method
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.13 2007/04/15 10:17:29 espie Exp $
a25 10
sub glob2re
{
	local $_ = shift;
	s/\./\\\./g;
	s/\+/\\\+/g;
	s/\*/\.\*/g;
	s/\?/\./g;
	return "^$_\$";
}

a43 6
	if (defined $plist->{pkgcfl}) {
		for my $cfl (@@{$plist->{pkgcfl}}) {
			my $re = glob2re($cfl->{name});
			push(@@$l, sub { grep { m/$re/ } @@_; });
		}
	}
@


1.13
log
@update copyright years, standardize licence.
reword the introduction to the stuff originally from FreeBSD to clarify
slightly.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.12 2005/08/12 18:41:35 espie Exp $
d40 1
a40 1
	my $pkgname = $plist->pkgname();
d84 1
a84 1
	$state->{conflict_list}->{$plist->pkgname()} = $plist->{conflicts};
d90 1
a90 1
	delete $state->{conflict_list}->{$plist->pkgname()};
@


1.12
log
@minor semantic tweak: foo-1.0 needs to conflict with foo-1.0p0, always,
even in @@option no-default-conflict, for updates to actually work.

okay henning@@
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.11 2005/03/14 08:46:24 espie Exp $
d4 1
a4 1
# Copyright (c) 2003-2004 Marc Espie <espie@@openbsd.org>
@


1.11
log
@report/ignore broken packing-lists.
Happens only to guys who don't run fsck after panics, but hey ! ;-)
okay pval@@
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.10 2004/12/28 13:54:13 espie Exp $
d50 2
a51 1
		push(@@$l, sub { grep { $_ eq $pkgname || $_ eq "partial-$pkgname"} @@_;});
@


1.10
log
@synchronize conflict lists when we add/remove anything.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.9 2004/12/19 14:09:53 espie Exp $
d36 1
a36 1
sub make_conflict_list($)
d38 1
a38 1
	my ($class, $plist) = @@_;
d41 4
d99 1
a99 1
		$plist->{conflicts} = OpenBSD::PkgCfl->make_conflict_list($plist);
@


1.9
log
@move conflict code to PkgCfl.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.8 2004/12/16 11:30:16 espie Exp $
d76 3
d82 6
d113 3
@


1.8
log
@better conflict: conflict with partial installations, always conflict with
the package itself, and all potential instances of libraries.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.7 2004/10/11 09:44:06 espie Exp $
d24 1
d71 51
@


1.7
log
@split PackageName handling into PackageName stuff/PkgSpec matching.
Kill new method that isn't really used.

Name explicit splitstem() to get the stem of a packagename.

Adjust calls to the interface.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.6 2004/10/05 19:52:44 espie Exp $
d39 2
d43 3
a45 2
		my $stem = OpenBSD::PackageName::splitstem($plist->pkgname());
		push(@@$l, sub { OpenBSD::PkgSpec::match($stem."-*", @@_); });
d47 1
@


1.6
log
@make a list of all conflicts.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.5 2004/09/24 08:46:04 espie Exp $
d23 1
d41 2
a42 2
		my $stem = (OpenBSD::PackageName::splitname $plist->pkgname())[0];
		push(@@$l, sub { OpenBSD::PackageName::pkgspec_match($stem."-*", @@_); });
d52 1
a52 1
		    push(@@$l, sub { OpenBSD::PackageName::pkgspec_match($cfl->{name}, @@_); });
@


1.5
log
@use pkgspec_match for default conflict too.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.4 2004/09/18 08:14:40 espie Exp $
d60 1
d62 1
a62 4
		my @@l = &$cfl(@@pkgnames);
		if (@@l) {
			return @@l;
		}
d64 1
a64 1
	return 0;
@


1.4
log
@new-style conflicts that respect pkgspec.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.3 2004/09/14 22:49:36 espie Exp $
d41 1
a41 1
		push(@@$l, sub { grep { m/^\Q$stem\E-\d.*$/ } @@_; });
@


1.3
log
@better reporting of conflicts, suggested by naddy@@
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.2 2004/08/06 07:51:17 espie Exp $
d20 1
d22 1
d40 2
a41 2
		my $stem = (OpenBSD::PackageName::splitname$plist->pkgname())[0];
		push(@@$l, "^\Q$stem\E-\\d.*\$");
d45 7
a51 1
			push(@@$l, glob2re($cfl->{name}));
d61 3
a63 2
		if (grep { m/$cfl/ } @@pkgnames) {
			return grep { m/$cfl/ } @@pkgnames;
@


1.2
log
@unified headers, switch to smaller copyright notice.
@
text
@d2 1
a2 1
# $OpenBSD: PkgCfl.pm,v 1.1.1.1 2003/10/16 17:43:34 espie Exp $
d54 1
a54 1
			return 1;
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
# $OpenBSD: PkgCfl.pm,v 1.1.1.1 2003/10/16 17:16:30 espie Exp $
d4 13
a16 22
# Copyright (c) 2003 Marc Espie.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
# PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1.1.1
log
@new import of my pkgtools, after a slight naming disagreement with the
Upper Management...
@
text
@@
