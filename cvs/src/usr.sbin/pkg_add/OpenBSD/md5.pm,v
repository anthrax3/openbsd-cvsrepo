head	1.17;
access;
symbols
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.4
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.16.0.14
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.8
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.10
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.6
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.4
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.15.0.10
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.8
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.6
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.4
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.10
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.8
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.6
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.4
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.2
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	pkgtools:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2017.03.07.16.11.08;	author espie;	state Exp;
branches;
next	1.16;
commitid	t8KhKlsTqLNqMHSA;

1.16
date	2014.01.31.15.48.44;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2011.06.27.12.14.25;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2011.05.21.08.33.41;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2009.12.31.11.31.03;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2008.10.06.09.36.17;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.11.09.42.40;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.02.15.05.30;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.12.19.42.01;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.06.07.51.17;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.27.23.25.31;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Digest::SHA is nasty: it shows an incomplete error message if the
file can't be read properly (got a Read error on delete),
so stop trying to do things ourselves, just wrap the error to inject
a decent error message, catching inexistent files and read errors in
the process.
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: md5.pm,v 1.16 2014/01/31 15:48:44 espie Exp $
#
# Copyright (c) 2003-2007 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

package OpenBSD::digest;

sub new
{
	my ($class, $filename) = @@_;
	$class = ref($class) || $class;
	my $digest = $class->digest_file($filename);
	bless \$digest, $class;
}

sub key
{
	my $self = shift;
	return $$self;
}

sub write
{
	my ($self, $fh) = @@_;
	print $fh "\@@", $self->keyword, " ", $self->stringize, "\n";
}

sub digest_file
{
	my ($self, $fname) = @@_;
	my $d = $self->algo;
	eval {
		$d->addfile($fname);
	};
	if ($@@) {
		$@@ =~ s/\sat.*//;
		die "can't compute ".$self->keyword." on $fname: $@@";
	}
	return $d->digest;
}

sub fromstring
{
	my ($class, $arg) = @@_;
	$class = ref($class) || $class;
	my $d = $class->unstringize($arg);
	bless \$d, $class;
}

sub equals
{
	my ($a, $b) = @@_;
	return ref($a) eq ref($b) && $$a eq $$b;
}

package OpenBSD::sha;
our @@ISA=(qw(OpenBSD::digest));

use Digest::SHA;
use MIME::Base64;

sub algo
{
	my $self = shift;

	return Digest::SHA->new(256);
}

sub stringize
{
	my $self = shift;

	return encode_base64($$self, '');
}

sub unstringize
{
	my ($class, $arg) = @@_;
	if ($arg =~ /^[0-9a-f]{64}$/i) {
		return pack('H*', $arg);
	}
	return decode_base64($arg);
}

sub keyword
{
	return "sha";
}

1;
@


1.16
log
@@@md5 annotations died at the end of 2008, so it's reasonable to scrape the
code now.
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.15 2011/06/27 12:14:25 espie Exp $
a45 11
	open(my $file, '<', $fname) or die "can't open $fname: $!";
	my $digest = $self->digest_fh($file);
	close($file) or die "problem closing $fname: $!";
	return $digest;
}


sub digest_fh
{
	my ($self, $file) = @@_;

d47 7
a53 2

	$d->addfile($file);
@


1.15
log
@add useless method for tied readability
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.14 2011/05/21 08:33:41 espie Exp $
a74 40
}

package OpenBSD::md5;
our @@ISA=(qw(OpenBSD::digest));

sub fromfile
{
	my $fname = shift;
	return OpenBSD::md5->digest_file($fname);
}

sub fromfh
{
	my $file = shift;
	return OpenBSD::md5->digest_fh($file);
}

sub algo
{
	my $self = shift;
	require Digest::MD5;

	return Digest::MD5->new;
}

sub stringize
{
	my $self = shift;
	return unpack('H*', $$self);
}

sub unstringize
{
	my ($class, $arg) = @@_;
	return pack('H*', $arg);
}

sub keyword
{
	return "md5";
@


1.14
log
@add legacy support for old sha256 checksums in distinfos.
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.13 2010/12/24 09:04:14 espie Exp $
d29 6
@


1.13
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@d2 1
a2 1
# $OpenBSD$
d134 3
a136 1

@


1.12
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.11
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.10
log
@whitespace cleanup
@
text
@@


1.9
log
@whitespace fixes
@
text
@@


1.8
log
@sha256 is the common case, no need to delay loading.
@
text
@@


1.7
log
@turn the checksums stored in packing elements into real objects, so that
pkg_add becomes mostly independent of the type of checksum stored.

separate md5 into an abstract OpenBSD::digest class and an md5 subclass
with specific methods to compute checksums and serialize results, and create
an sha class that does the same thing with sha256 (with a base64 serializer)
@
text
@d114 3
a119 1
	require Digest::SHA;
a126 1
	require MIME::Base64;
d128 1
a128 1
	return MIME::Base64::encode_base64($$self, '');
a133 1
	require MIME::Base64;
d135 1
a135 1
	return MIME::Base64::decode_base64($arg);
@


1.6
log
@refactor md5 code to be able to work from a filehandle (like a pipe output)
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.5 2007/05/02 15:05:30 espie Exp $
d21 50
d72 1
a72 1
use Digest::MD5;
d77 1
a77 4
	open(my $file, '<', $fname) or die "can't open $fname: $!";
	my $digest = fromfh($file);
	close($file) or die "problem closing $fname: $!";
	return $digest;
d83 27
d111 2
a112 1
	my $md5 = new Digest::MD5;
d114 27
a140 2
	$md5->addfile($file);
	return $md5->digest;
@


1.5
log
@$o->method() becomes $o->method
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.4 2004/11/12 19:42:01 espie Exp $
d28 9
a39 1
	close($file) or die "problem closing $fname: $!";
d42 1
@


1.4
log
@don't store hexdigest internally.
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.3 2004/08/06 07:51:17 espie Exp $
d4 1
a4 1
# Copyright (c) 2003-2004 Marc Espie <espie@@openbsd.org>
d32 1
a32 1
	return $md5->digest();
@


1.3
log
@unified headers, switch to smaller copyright notice.
@
text
@d2 1
a2 1
# $OpenBSD: md5.pm,v 1.2 2004/01/27 23:25:31 espie Exp $
d32 1
a32 1
	return $md5->hexdigest();
@


1.2
log
@avoid File::IO, one less module to load.
catch more error conditions and die in a systematic way.
okay sturm@@
@
text
@d1 2
a2 1
# $OpenBSD: md5.pm,v 1.1.1.1 2003/10/16 17:43:34 espie Exp $
d4 13
a16 22
# Copyright (c) 2003 Marc Espie.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
# PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
# $OpenBSD: md5.pm,v 1.1.1.1 2003/10/16 17:16:30 espie Exp $
d35 1
a35 2
	die "No such file: \"$fname\"\n" unless -f $fname;
	open(my $file, '<', $fname) or return;
d39 1
a39 1
	close($file);
@


1.1.1.1
log
@new import of my pkgtools, after a slight naming disagreement with the
Upper Management...
@
text
@@
