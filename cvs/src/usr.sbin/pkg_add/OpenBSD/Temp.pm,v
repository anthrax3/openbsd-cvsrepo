head	1.27;
access;
symbols
	OPENBSD_6_1:1.27.0.8
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.10
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.4
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.6
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.26.0.6
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.25.0.6
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.4
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.25.0.2
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.4
	OPENBSD_5_0:1.23.0.2
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.22.0.2
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.14.0.4
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.6.0.6
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.4
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.2
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	pkgtools:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.27
date	2015.03.04.13.55.32;	author espie;	state Exp;
branches;
next	1.26;
commitid	23nA8DerE0x6I5Dv;

1.26
date	2014.02.07.14.06.43;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2012.04.28.15.22.49;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2012.04.27.12.52.57;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2011.03.07.09.26.47;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2010.12.24.09.04.14;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2010.10.27.14.35.56;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2010.06.30.10.41.42;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2010.05.10.09.17.55;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2010.01.09.16.37.03;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2010.01.09.14.49.53;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2009.11.10.11.36.56;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.19.14.58.32;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2007.06.16.09.29.37;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2007.06.14.13.19.39;	author kili;	state Exp;
branches;
next	1.11;

1.11
date	2007.06.12.09.26.46;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.07.09.56.48;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.07.09.37.30;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.07.09.32.51;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2007.04.15.10.17.29;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2005.10.10.10.31.46;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.21.18.38.17;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.19.00.09.51;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.06.07.51.17;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.04.17.54.21;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.27
log
@better error reports if PKG_TMPDIR is not writable, okay millert@@
@
text
@# ex:ts=8 sw=4:
# $OpenBSD: Temp.pm,v 1.26 2014/02/07 14:06:43 espie Exp $
#
# Copyright (c) 2003-2005 Marc Espie <espie@@openbsd.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

use strict;
use warnings;

package OpenBSD::Temp;

use OpenBSD::MkTemp;
use OpenBSD::Paths;
use OpenBSD::Error;

our $tempbase = $ENV{'PKG_TMPDIR'} || OpenBSD::Paths->vartmp;

my $dirs = {};
my $files = {};

my $cleanup = sub {
	while (my ($name, $pid) = each %$files) {
		unlink($name) if $pid == $$;
	}
	while (my ($dir, $pid) = each %$dirs) {
		OpenBSD::Error->rmtree([$dir]) if $pid == $$;
	}
};

END {
	&$cleanup;
}
OpenBSD::Handler->register($cleanup);

sub dir
{
	my $caught;
	my $h = sub { $caught = shift; };
	my $dir;

	{
	    local $SIG{'INT'} = $h;
	    local $SIG{'QUIT'} = $h;
	    local $SIG{'HUP'} = $h;
	    local $SIG{'KILL'} = $h;
	    local $SIG{'TERM'} = $h;
	    $dir = permanent_dir($tempbase, "pkginfo");
	    $dirs->{$dir} = $$;
	}
	if (defined $caught) {
		kill $caught, $$;
	}
	return "$dir/";
}

sub file
{
	my $caught;
	my $h = sub { $caught = shift; };
	my ($fh, $file);

	{
	    local $SIG{'INT'} = $h;
	    local $SIG{'QUIT'} = $h;
	    local $SIG{'HUP'} = $h;
	    local $SIG{'KILL'} = $h;
	    local $SIG{'TERM'} = $h;
	    ($fh, $file) = permanent_file($tempbase, "pkgout");
	    if (defined $file) {
		    $files->{$file} = $$;
	    }
	}
	if (defined $caught) {
		kill $caught, $$;
	}
	return $file;
}

sub reclaim
{
	my ($class, $name) = @@_;
	delete $files->{$name};
	delete $dirs->{$name};
}

sub permanent_file
{
	my ($dir, $stem) = @@_;
	my $template = "$stem.XXXXXXXXXX";
	if (defined $dir) {
		$template = "$dir/$template";
	}
	return OpenBSD::MkTemp::mkstemp($template);
}

sub permanent_dir
{
	my ($dir, $stem) = @@_;
	my $template = "$stem.XXXXXXXXXX";
	if (defined $dir) {
		$template = "$dir/$template";
	}
	return OpenBSD::MkTemp::mkdtemp($template);
}

1;
@


1.26
log
@reclaim: we don't need to keep tracking temporary files/directories we
removed.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.25 2012/04/28 15:22:49 espie Exp $
d80 3
a82 1
	    $files->{$file} = $$;
@


1.25
log
@File::Path::rmtree is very stupid and spews out warning messages if there's
no cwd.

Well, if there's no cwd, we don't care about getting back there, so wrap
rmtree to just move to / before calling the real rmtree.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.24 2012/04/27 12:52:57 espie Exp $
d86 7
@


1.24
log
@use our light-weight OpenBSD::MkTemp, which is safer, more accurate,
and doesn't pull a shitload of other modules with it.
@
text
@d2 1
a2 1
# $OpenBSD$
a32 2
	require File::Path;

d37 1
a37 1
		File::Path::rmtree([$dir]) if $pid == $$;
@


1.23
log
@run makewhatis during pkg_create in verbose mode.
tweak temp manpage generation a bit, so that it has correct names in its
own directory, because makewhatis will be really pissed off otherwise.
@
text
@d23 1
a23 1
use File::Temp;
d97 1
a97 1
	return File::Temp::mkstemp($template);
d107 1
a107 1
	return File::Temp::mkdtemp($template);
@


1.22
log
@handle failures from ports tree with more care.
this does avoid infinite loops in case of wrong plists.
necessary since print-plist-with-depends CAN fail...
@
text
@@


1.21
log
@initial scaffolding for @@rcscript: for now, acts like normal files,
but allow absolute pathnames (treat that as an implicit @@cwd).
@
text
@@


1.20
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@@


1.19
log
@whitespace cleanup
@
text
@@


1.18
log
@whitespace fixes
@
text
@@


1.17
log
@oops
@
text
@d53 1
a53 1
		
d74 1
a74 1
		
@


1.16
log
@move signal catching up, so we can clean repos and temp files at once.
Fix main program try/catch: signal message should use standard form so
it gets caught.
@
text
@d25 1
@


1.15
log
@bad espie: use strict/warnings consistently, and fix two nits and two
actual errors !
@
text
@d31 2
a32 6
sub cleanup
{
	my $caught;
	my $h = sub { $caught = shift; };
	{
	    require File::Path;
d34 2
a35 12
	    local $SIG{'INT'} = $h;
	    local $SIG{'QUIT'} = $h;
	    local $SIG{'HUP'} = $h;
	    local $SIG{'KILL'} = $h;
	    local $SIG{'TERM'} = $h;

	    while (my ($name, $pid) = each %$files) {
		    unlink($name) if $pid == $$;
	    }
	    while (my ($dir, $pid) = each %$dirs) {
		    File::Path::rmtree([$dir]) if $pid == $$;
	    }
d37 2
a38 2
	if (defined $caught) {
		kill $caught, $$;
d40 1
a40 1
}
d43 1
a43 1
	cleanup();
d45 1
a45 13

my $handler = sub {
	my ($sig) = @@_;
	cleanup();
	$SIG{$sig} = 'DEFAULT';
	kill $sig, $$;
};

$SIG{'INT'} = $handler;
$SIG{'QUIT'} = $handler;
$SIG{'HUP'} = $handler;
$SIG{'KILL'} = $handler;
$SIG{'TERM'} = $handler;
@


1.14
log
@synch with my new style search/location changes
It's likely there will be some fallout, but it's getting a bit too large
to keep around.
This does kill a few very old oddities as well.
@
text
@d20 1
@


1.13
log
@use OpenBSD::Paths contents
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.12 2007/06/14 13:19:39 kili Exp $
d72 1
a72 1
sub dir()
d93 1
a93 1
sub file()
@


1.12
log
@
Really cleanup temporary directories.

"commit that now, please." espie@@
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.11 2007/06/12 09:26:46 espie Exp $
d23 1
d25 1
a25 1
our $tempbase = $ENV{'PKG_TMPDIR'} || '/var/tmp';
@


1.11
log
@tag directories and files with pid, so that we clean them up when the
corresponding process dies, not before...
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.10 2007/05/07 09:56:48 espie Exp $
d45 1
a45 1
	    while (my ($dir, $pid) = each %$files) {
@


1.10
log
@take over tempfile/dir cleaning entirely
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.9 2007/05/07 09:37:30 espie Exp $
d26 2
a27 2
my $dirs = [];
my $files = [];
d42 6
a47 2
	    unlink(@@$files);
	    File::Path::rmtree($dirs);
d84 1
a84 1
	    push(@@$dirs, $dir);
d105 1
a105 1
	    push(@@$files, $file);
@


1.9
log
@zap old unused code
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.8 2007/05/07 09:32:51 espie Exp $
a22 1
use File::Path;
d29 25
d56 1
a56 2
	File::Path::rmtree($dirs);
	unlink(@@$files);
d79 1
a79 2
	    $dir = File::Temp::tempdir("pkginfo.XXXXXXXXXXX", 
	    	DIR => $tempbase, CLEANUP => 1).'/';
d85 1
a85 1
	return $dir;
d100 1
a100 2
	    ($fh, $file) = File::Temp::tempfile("pkgout.XXXXXXXXXXX", 
	    	DIR => $tempbase, CLEANUP => 1);
d117 10
@


1.8
log
@make sure all temporary file handling goes through OpenBSD::Temp
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.7 2007/04/15 10:17:29 espie Exp $
a85 5
}

sub list($)
{
	return File::Temp::tempfile("list.XXXXXXXXXXX", DIR => shift);
@


1.7
log
@update copyright years, standardize licence.
reword the introduction to the stuff originally from FreeBSD to clarify
slightly.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.6 2005/10/10 10:31:46 espie Exp $
d91 10
@


1.6
log
@allows for tempfiles.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.5 2005/08/21 18:38:17 espie Exp $
d4 1
a4 1
# Copyright (c) 2003-2004 Marc Espie <espie@@openbsd.org>
@


1.5
log
@catch QUIT, HUP, KILL, TERM along with INT, remove the temp dirs, then die.
(remember, perl signal handlers are safe, e.g., there's a redirection).
Handle critical section where we create the directory so that we die after
it's registered.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.4 2005/08/19 00:09:51 espie Exp $
d28 1
d33 1
d64 22
@


1.4
log
@trap SIGINT so that tempdirs get removed.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.3 2004/08/06 07:51:17 espie Exp $
d29 2
a30 1
$SIG{'INT'} = sub {
d32 2
a33 2
	$SIG{'INT'} = 'DEFAULT';
	kill 'INT', $$;
d36 6
d44 17
a60 3
	my $dir = File::Temp::tempdir("pkginfo.XXXXXXXXXXX", DIR => $tempbase,
	    CLEANUP => 1).'/';
	push(@@$dirs, $dir);
@


1.3
log
@unified headers, switch to smaller copyright notice.
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.2 2003/11/04 17:54:21 espie Exp $
d23 2
d27 8
d37 1
a37 1
	return File::Temp::tempdir("pkginfo.XXXXXXXXXXX", DIR => $tempbase,
d39 2
@


1.2
log
@Add logging facilities (temp module exposes its temporary directory)
@
text
@d1 8
a8 2
use strict;
# $OpenBSD: Temp.pm,v 1.1.1.1 2003/10/16 17:43:34 espie Exp $
d10 7
a16 22
# Copyright (c) 2003 Marc Espie.
# 
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 
# THIS SOFTWARE IS PROVIDED BY THE OPENBSD PROJECT AND CONTRIBUTORS
# ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
# LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
# A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OPENBSD
# PROJECT OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
# SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
# LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
# OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d18 1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $OpenBSD: Temp.pm,v 1.1.1.1 2003/10/16 17:16:30 espie Exp $
d31 1
a31 1
my $tempbase = $ENV{'PKG_TMPDIR'} || '/var/tmp';
@


1.1.1.1
log
@new import of my pkgtools, after a slight naming disagreement with the
Upper Management...
@
text
@@
