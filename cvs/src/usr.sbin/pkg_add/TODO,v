head	1.26;
access;
symbols
	OPENBSD_6_2_BASE:1.26
	OPENBSD_6_1:1.26.0.26
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.26.0.24
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.18
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.26.0.20
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.12
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.26.0.16
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.14
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.26.0.10
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.8
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.26.0.6
	OPENBSD_5_2_BASE:1.26
	OPENBSD_5_1_BASE:1.26
	OPENBSD_5_1:1.26.0.4
	OPENBSD_5_0:1.26.0.2
	OPENBSD_5_0_BASE:1.26
	OPENBSD_4_9:1.25.0.4
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.17.0.12
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.8
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.6
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.11.0.2
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.1.1.1.0.2
	OPENBSD_3_5_BASE:1.1.1.1
	pkgtools:1.1.1.1
	espie:1.1.1;
locks; strict;
comment	@# @;


1.26
date	2011.04.18.18.49.34;	author espie;	state Exp;
branches;
next	1.25;

1.25
date	2010.08.03.14.10.30;	author espie;	state Exp;
branches;
next	1.24;

1.24
date	2010.01.11.15.02.25;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2010.01.10.16.03.49;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2010.01.08.16.42.56;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2010.01.01.19.21.38;	author espie;	state Exp;
branches;
next	1.20;

1.20
date	2009.12.29.14.42.42;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	2009.12.05.11.40.33;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2009.11.29.21.38.32;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2007.06.07.13.06.02;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.29.23.12.26;	author espie;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.16.17.14.11;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.13.09.02.38;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2005.06.26.16.41.31;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.06.26.13.26.58;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.02.15.09.13.05;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2004.12.19.14.47.33;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2004.12.18.14.50.19;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.20.23.40.20;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.14.13.10.16;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.13.13.06.11;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2004.11.13.12.50.32;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.11.12.21.52.01;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.11.11.22.17.22;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.05.23.36.39;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.10.16.17.43.34;	author espie;	state Exp;
branches;
next	;


desc
@@


1.26
log
@yeouch
@
text
@- fix library updates special cases: should note all potential library
packages as conflicts. Then save_old_libraries can split stuff off old
sets to keep libraries that are not in the new packages. There's only
one slightly tricky part, which concerns moving stuff that's not really
needed out of $set->{older}.
- in interactive mode, make it ask questions whenever the user could get
frustrated.
- finish pulling the pkg_add code into Add.pm/Update.pm.
- figure out when to continue after some errors, which should not stop a
full update, for instance... or ignore already installed packages (mostly
done).
- get an update path for libraries to be able to adjust dependencies correctly.
- messy .libs-* match for conflicts, to integrate with spec matching ?
@


1.25
log
@shrink! :)
@
text
@d13 1
@


1.24
log
@sometimes, I manage to finish some stuff
@
text
@a11 5
- make sure all user-interface is done through a few functions, so that it's
easy to plug another interface in (mostly done)
- don't close Location unconditionally while looking for updates. In most
cases, we're going to install this package right away, so we should try to
keep it open to avoid spurious ftp disconnects.
@


1.23
log
@use full signatures to avoid downgrades.
remove double check in update that properly belongs in pkg_add
replace has_new_sig by has_different_sig, with better diagnostic messages.
@
text
@a17 1
- allow pkg_add newpackage to do updates or install.
@


1.22
log
@stat objects with more than value (store symlinks eventually)
@
text
@a13 2
- compare full package signatures during updates, to ignore stuff that's
different but older.
d18 1
a18 1
- provide a "smart" is it installed ? option. pkg_info -u package ?
@


1.21
log
@shrink, for once
@
text
@d20 1
@


1.20
log
@ouch, got slightly longer, some stuff to fix soonish
@
text
@a13 1
- add needed annotations to handle updates correctly (to revisit)
a15 4
- mark that some older packages were found, cant_update should be different
from uptodate.
- if looking at replacements with a different name (based on the pkgpath),
stuff should still @@conflict.
a19 2
- if things don't change, move package to kept instead of aborting the set
unconditionally.
@


1.19
log
@quirks exists
@
text
@d24 3
@


1.18
log
@some major changes have happened
@
text
@a20 1
- finally add the quirks package, to handle renames and similar stuff.
@


1.17
log
@outline what to do with old libs.
@
text
@a5 7
- make sure solved dependencies are adjusted along with stuff that actually
get installed or replaced... this would make some stuff ways less brittle.
- handle n-to-1 updates: mostly need to allow for a list of replaced packages.
The tricky part is that the replaced packages will often have 
inter-dependencies, and we must ignore those inter-dependencies.
- clean up the interface of the dependencies module, to be able to use it in
n-to-1 updates.
d10 2
a11 1
full update, for instance... or ignore already installed packages.
d13 12
a24 2
easy to plug another interface in.
- add needed annotations to handle updates correctly.
@


1.16
log
@In update mode, restore previous behavior: some updated packages may have
names that match installed packages, but still mark them to be installed,
so that they're returned as dependencies, and get updated first.

Write in TODO that the current situation is brittle, solved dependencies
should get adjusted in real time to be 100% sure this won't cause problems...
@
text
@d1 5
@


1.15
log
@clean-up TODO list of stuff that was actually done.
@
text
@d1 2
@


1.14
log
@make the todo-list reflect what is actually going on.
@
text
@a5 3
- rewrite of PackageLocator to make listing of distant packages effective,
which is the first step of pkg updates (done, to be committed after 3.8)
- write an update mode (done, to be committed after 3.8)
a8 2
- make some hard decisions about what to update (automatically update
depencencies).
@


1.13
log
@pkg_merge aliasing of hard links fixed.
@
text
@d4 2
d7 4
a10 1
which is the first step of pkg updates.
d12 7
@


1.12
log
@missing support for `identical' files.
@
text
@a6 2
- add aliasing support to Ustar writer so that pkg_merge can safely copy
links over.
@


1.11
log
@New command: pkg_mklocatedb, that can be used to create locate(1)-style
databases for packages (duh, isn't that obvious from the name ?)

Tweaks based on comments from naddy/jmc.
@
text
@a3 2
- UStar::write method, so that we can handle long links, and that we can
write a decent pkg_merge.
d7 2
@


1.10
log
@simplify solve_dependencies: always compute to_install array (it is
reasonably cheap). Remove else conditions, use next: after all, it's
a simple pattern, try one solution after the other until one succeeds.
Pass state to access replace: in that case, first try the list of
packages to install/update so that we force them into proper order.

Add a mark to handles for finished packages: with -r, we can no longer rely
on installed packages to avoid doing the work twice.
@
text
@a0 2
- smart handling of .libs-*: pkg_add correctly discards potential conflicts.
It doesn't handle yet actual conflicts with .libs-*.
@


1.9
log
@reflect reality.
@
text
@a2 6
- `global' replacement through pkg_add -r: the dependency solver needs
to look into the command-line to figure out ways to solve dependencies:
in effect, packages updated through -r must be sorted in dependency order.
This does break pkg_add -n -r very thoroughly for complicated cases.
And this is needed for 3.7 updates, if we don't want to have to update
each package manually, in order.
@


1.8
log
@done items
@
text
@d1 16
a16 22
+ add pkgname parsing
+ handle package conflicts
+ handle package dependencies to the level of the old implementation
+ handle chmod/chown to the level of the old implementation
+ handle PKGPATH
+ replace symlinks with @@symlink commands at pkg_create time
+ basic validation of packing list at end of reading it...
+ don't store @@pkgdep in packing-lists, makes for a lot of traffic, use
separate +REQUIRE file instead. Automatically convert from the old model.
+ add better error handling
- let package delete log files it cannot delete
- smart package dependency handling

Known update issues:
- pkg_add -r can have two conflicting packages (or more) n-to-m updates
should be handled.

- switch all runtime dependencies to @@newdepend.  Stuff older @@libdepend
into newer @@wantlib keyword.  Makes for more systematic handling (adjust
RUN_DEPENDS to take wildcard pkgspec by default as well) and allows us
to put all lib dependencies into a package: base system included.
Issue (again): converting from the old model.
@


1.7
log
@current unsolved issues.
@
text
@d8 3
a10 1
- add better error handling
a16 3

- don't store @@pkgdep in packing-lists, makes for a lot of traffic, use
separate +REQUIRE file instead. Issue: converting from the old model.
@


1.6
log
@look for libspecs in old packages that match the libdepend specification
as well.
@
text
@d15 9
@


1.5
log
@reduce down TODO list.
@
text
@a12 2
- shared libs should be looked for in .libs-pkgspec as well if -f old(?)
so that correct dependencies are registered.
@


1.4
log
@be saner wrt directory creation during pkg updates:
don't disturb existing objects if they're not directories,
create them better if they don't exist.
@
text
@a12 4
- error during extraction breaks things badly: need a mechanism to register
borked package similar to pkg_add. Preferably avoid doing it.
- shared libs must be matched against the package that holds the deps, not
just any package.
@


1.3
log
@stuff that needs to be done.
@
text
@a12 4
- symlink to directory doesn't get created during extraction, which
throws off the rest of the extraction (probably needs to create those
correctly). More generally: extraction may fail if the updated package
renames directory structure.
@


1.2
log
@refactor classes in PackingElement to share more code.
- all files go through FileBase, all directories go through DirBase.
- dirclass() is used to switch classes based on final /, so that
@@sample, @@extra, and @@file  all take directories as well.
- set NoDuplicateNames() more thoroughly.
- make sure all no-default-conflict objects are correct.

compute_fullname() checks for absolute paths, allowed for @@sample and
@@extra.

lastfile only gets set for actual files.

special names like INSTALL are only checked for normal files.

add a CVSTag class for @@comment $OpenBSD$, so that these get sorted first.

Changes for make-plist rewrite:

clone() method that can create copies of all hash objects, to specialize
if needed.

add_object() method so that add() is now new() followed by add_object()
for most objects (useful for cloned objects).

Check that plist has a name in pkg_create, allowing PackingList to write
unnamed plists.
@
text
@d11 14
@


1.1
log
@Initial revision
@
text
@d6 2
a9 1
- replace symlinks with @@symlink commands at pkg_create time
a10 1
- basic validation of packing list at end of reading it...
@


1.1.1.1
log
@new import of my pkgtools, after a slight naming disagreement with the
Upper Management...
@
text
@@
