head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.26
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.30
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.28
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.22
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.24
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.20
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2009.12.17.11.41.30;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2006.02.22.18.34.49;	author bernd;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.17.08.17.44;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@$OpenBSD$

=head1 NAME

OpenBSD::PackageName - package names handling

=head1 SYNOPSIS

   use OpenBSD::PackageName;

   $pkgname = OpenBSD::PackageName::url2pkgname($url);

   ($stem, $version, @@flavors) = OpenBSD::PackageName::splitname($pkgname);
   $stem = OpenBSD::PackageName::splitstem($pkgname);

   OpenBSD::PackageName::is_stem($stem) == 1;
   OpenBSD::PackageName::is_stem($pkgname) == 0;

   @@candidates = OpenBSD::PackageName::findstem($stem, @@pkgnames);
   # alternate interface
   $h = OpenBSD::PackageName::compile_stemlist(@@pkgnames);
   @@candidates = $h->findstem($stem);

=head1 DESCRIPTION

C<OpenBSD::PackageName> is the canonical interface to package names
handling.

=over 4

=item C<OpenBSD::PackageName::url2pkgname($url)>

strip an C<$url> of path elements and C<.tgz> suffixes, yield a canonicalized
package name.

=item C<OpenBSD::PackageName::splitname($pkgname)>

split a C<$pkgname> into a C<$stem>, a C<$version> number, and a (possibly
empty) list of C<@@flavors> components.  If the name contains no identifiable
version, C<$version> will be C<undef>.

=item C<OpenBSD::PackageName::splitstem($pkgname)>

short version of C<splitname> that extracts only the C<$stem>.

=item C<OpenBSD::PackageName::is_stem($string)>

check whether a C<$string> is a valid stem, as opposed to a full package name.
Useful for commands that take either full names or stems, and need to
reconstruct the full name from the stem.

=item C<OpenBSD::PackageName::findstem($stem, @@pkgnames)>

look up a C<$stem> into a list of C<@@pkgnames>. Return a list of candidates
for further processing.

=item C<OpenBSD::PackageName::compile_stemlist(@@pkgnames)>

alternate interface that is faster when lots of look ups are involved.
Compile a list of C<@@pkgnames> into an object C<$h> that can be queried
using C<$h-E<gt>findstem($stem)>.

=back
@


1.3
log
@remove extra spaces, fix doc for Ustar (create, not extract), and document
callback.
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::PackageName.pod,v 1.2 2006/02/22 18:34:49 bernd Exp $
@


1.2
log
@Fix typo.
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::PackageName.pod,v 1.1 2005/08/17 08:17:44 espie Exp $
d16 1
a16 1
   OpenBSD::PackageName::is_stem($stem) == 1 
@


1.1
log
@document OpenBSD::PackageName
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::PkgSpec.pod,v 1.2 2005/02/28 14:30:01 espie Exp $
d61 1
a61 1
using C<$h-E<gt>finstem($stem)>.
@

