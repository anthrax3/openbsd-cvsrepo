head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.30
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.28
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.22
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.24
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.20
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.22
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.18
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.16
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.14
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.12
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.10
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.8
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.6
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.4
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.2
	OPENBSD_3_7_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2009.12.17.11.41.30;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.07.21.39.53;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.28.13.08.41;	author espie;	state Exp;
branches;
next	;


desc
@@


1.4
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@$OpenBSD$

=head1 NAME

OpenBSD::Mtree - simple C<mtree(8)> spec parser

=head1 SYNOPSIS

    use OpenBSD::Mtree;

    my %hier;

    OpenBSD::Mtree::parse(\%hier, "/", "/etc/mtree/4.4BSD.dist");

=head1 DESCRIPTION

C<OpenBSD::Mtree> is a parser for C<mtree(8)> specifications that
can reconstruct directory hierarchies.

The basic function C<OpenBSD::Mtree::parse_fh(\%hash, $basedir, $fh)>
will populate the hash C<$hash> with defined entries for each directory
seen while reading from C<$fh>, assuming the specification is to be interpreted
relative to C<$basedir> (some canonicalization of directory names will
occur).

C<OpenBSD::Mtree:parse(\%hash, $basedir, $filename)> is a convenience
function which also handles opening the filehandle from C<$filename>
and closing it after reading the specification.
@


1.3
log
@remove extra spaces, fix doc for Ustar (create, not extract), and document
callback.
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::Mtree.pod,v 1.2 2005/03/07 21:39:53 espie Exp $
@


1.2
log
@oops
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::Mtree.pod,v 1.1 2005/02/28 13:08:41 espie Exp $
d18 1
a18 1
can reconstruct directory hierarchies. 
d20 1
a20 1
The basic function C<OpenBSD::Mtree::parse_fh(\%hash, $basedir, $fh)> 
@


1.1
log
@basic API documentation, not yet finished.
@
text
@d1 1
a1 1
$OpenBSD$
d8 1
@

