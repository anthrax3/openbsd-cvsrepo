head	1.3;
access;
symbols
	OPENBSD_6_0:1.3.0.28
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.22
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.24
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.16
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.20
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.18
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.14
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.12
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.10
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.22
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.18
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.16
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.14
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.12
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.10
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.8
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.6
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.06.30.10.51.04;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2009.12.17.11.41.30;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.28.13.08.41;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@allow say and errsay to work without parameters, as it's ways common.
create verbose_system up in state, because it makes sense without verbose.
@
text
@$OpenBSD$

=head1 NAME

OpenBSD::PkgCfl - C<pkg_create(1)> C<@@conflict> handling

=head1 SYNOPSIS

    use OpenBSD::PkgCfl;

    $clist = OpenBSD::PkgCfl->make_conflicts_list($plist);
    @@cfls = $clist->conflicts_with(@@pkgnames);

    OpenBSD::PkgCfl::register($plist, $state);
    OpenBSD::PkgCfl::unregister($plist, $state);
    @@cfls = OpenBSD::PkgCfl::find_all($plist, $state);

=head1 DESCRIPTION

C<OpenBSD::PkgCfl> is the canonical interface to packing-list conflict
handling.

Conflict information can be extracted from a packing-list
(see L<OpenBSD::PackingList>) through the
C<OpenBSD::PkgCfl> class method. The result is an opaque object C<$clist> that
can be queried to find out which package names conflict with the
packing-list.   A query of the form C<$clist-E<gt>conflicts_with(@@pkgnames)>
will extract from the list the package names that actually conflict with
the packing-list.

Most handling of conflict information happens through the higher level
interface: C<OpenBSD::PkgCfl::register>, C<OpenBSD::PkgCfl::unregister>
and C<OpenBSD::PkgCfl::find_all>.  Package tools usually handle installed
packages, and this interface automatically takes the initial set of installed
packages into account. The C<register> and C<unregister> functions must
be used to add and remove a packing-list from the set of installed packages,
where conflict information is concerned.

The C<find_all> function can be used to find out about all possible conflicts
a new packing-list will entail, before actually adding the package.

The extra argument C<$state> is a hash used to record system-wide options.
In this case, it acts as a hidden object that records all conflict
information. The hash key C<conflict_list> is reserved for that purpose.
@


1.2
log
@remove extra spaces, fix doc for Ustar (create, not extract), and document
callback.
@
text
@d1 1
a1 1
$OpenBSD: OpenBSD::PkgCfl.pod,v 1.1 2005/02/28 13:08:41 espie Exp $
@


1.1
log
@basic API documentation, not yet finished.
@
text
@d1 1
a1 1
$OpenBSD$
d23 1
a23 1
Conflict information can be extracted from a packing-list 
d26 1
a26 1
can be queried to find out which package names conflict with the 
d32 2
a33 2
interface: C<OpenBSD::PkgCfl::register>, C<OpenBSD::PkgCfl::unregister> 
and C<OpenBSD::PkgCfl::find_all>.  Package tools usually handle installed 
d35 2
a36 2
packages into account. The C<register> and C<unregister> functions must 
be used to add and remove a packing-list from the set of installed packages, 
d42 2
a43 2
The extra argument C<$state> is a hash used to record system-wide options. 
In this case, it acts as a hidden object that records all conflict 
@

