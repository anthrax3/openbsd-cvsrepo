head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2014.01.19.02.58.51;	author jsing;	state dead;
branches;
next	1.4;

1.4
date	2014.01.18.03.07.05;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2013.12.28.15.05.34;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2013.12.28.15.03.47;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.28.14.45.57;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Rework installboot and use a single directory with a single makefile. The
directory per machine model is arguably cleaner, however it does not play
well with distrib/special and instbin.

Discussed with deraadt@@
@
text
@/*	$OpenBSD: sparc64_installboot.c,v 1.4 2014/01/18 03:07:05 jsing Exp $	*/

/*
 * Copyright (c) 2012, 2013 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>
#include <sys/stat.h>

#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <ufs/ffs/fs.h>

#include "installboot.h"

char	*bootldr;

char	*blkstore;
char	*ldrstore;
size_t	blksize;
size_t	ldrsize;

void
md_init(void)
{
	stages = 2;
	stage1 = "/usr/mdec/bootblk";
	stage2 = "/usr/mdec/ofwboot";

	bootldr = "/ofwboot";
}

void
md_loadboot(void)
{
	struct stat sb;
	size_t blocks;
	int fd;

	/* Load first-stage boot block. */
	if ((fd = open(stage1, O_RDONLY)) < 0)
		err(1, "open");
	if (fstat(fd, &sb) == -1)
		err(1, "fstat");
	blocks = howmany((size_t)sb.st_size, DEV_BSIZE);
	blksize = blocks * DEV_BSIZE;
	if (verbose)
		fprintf(stderr, "boot block is %zu bytes "
                    "(%zu blocks @@ %u bytes = %zu bytes)\n",
                    (ssize_t)sb.st_size, blocks, DEV_BSIZE, blksize);
	if (blksize > SBSIZE - DEV_BSIZE)
		errx(1, "boot blocks too big (%zu > %d)",
		    blksize, SBSIZE - DEV_BSIZE);
	blkstore = malloc(blksize);
	if (blkstore == NULL)
		err(1, "malloc");
	memset(blkstore, 0, blksize);
	if (read(fd, blkstore, sb.st_size) != (ssize_t)sb.st_size)
		err(1, "read");
	close(fd);

	/* Load second-stage boot loader. */
        if ((fd = open(stage2, O_RDONLY)) < 0)
                err(1, "open");
        if (fstat(fd, &sb) == -1)
                err(1, "stat");
        ldrsize = sb.st_size;
        ldrstore = malloc(ldrsize);
        if (ldrstore == NULL)
                err(1, "malloc");
        if (read(fd, ldrstore, ldrsize) != (ssize_t)sb.st_size)
                err(1, "read");
        close(fd);
}

void
md_installboot(int devfd, char *dev)
{
	/* XXX - is this necessary? */
	sync();

	bootldr = fileprefix(root, bootldr);
	if (!nowrite)
		filecopy(stage2, bootldr);

	/* Write bootblock into the superblock. */
	if (lseek(devfd, DEV_BSIZE, SEEK_SET) != DEV_BSIZE)
		err(1, "lseek");
	if (verbose)
		fprintf(stderr, "%s boot block to disk %s\n",
		    (nowrite ? "would write" : "writing"), dev);
	if (nowrite)
		return;
	if (write(devfd, blkstore, blksize) != (ssize_t)blksize)
		err(1, "write");
}
@


1.4
log
@Make installboot(8) easier to use - copy the second stage boot loader to
the default location used by the given architecture. This eliminates the
need to copy it over manually prior to running installboot.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.3 2013/12/28 15:05:34 jsing Exp $	*/
@


1.3
log
@Actually load the second-stage boot loader so that softraid can store it in
the softraid boot area.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.2 2013/12/28 15:03:47 jsing Exp $	*/
d33 2
d45 3
a47 1
	stage2 = "/ofwboot";
d98 4
@


1.2
log
@sparc64 uses /ofwboot as the second stage, not /boot.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.1 2013/12/28 14:45:57 jsing Exp $	*/
d34 1
d36 1
d53 1
a57 1

a66 1

d73 1
d75 12
a86 1
	close(fd);
@


1.1
log
@Add installboot support for sparc64.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d41 1
a41 1
	stage2 = "/boot";
@

