head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.4
	OPENBSD_5_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.28.23.00.29;	author krw;	state Exp;
branches;
next	1.6;
commitid	FIvgNlFZBIBsxjAi;

1.6
date	2015.11.30.17.34.57;	author jsing;	state Exp;
branches;
next	1.5;
commitid	E65fbNPRxq1kisMY;

1.5
date	2015.11.26.19.03.10;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	l08CzgnpmHFvutrT;

1.4
date	2015.10.08.14.50.38;	author krw;	state Exp;
branches;
next	1.3;
commitid	xtMQpAxwl7GHdojH;

1.3
date	2015.01.16.00.05.12;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	khLbW7SmDyckNaAs;

1.2
date	2014.06.09.13.13.48;	author jsing;	state Exp;
branches;
next	1.1;
commitid	uiG9sLEyw5REyB4f;

1.1
date	2014.01.19.02.58.50;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Replace lseek/[read|write] with pread|pwrite.

ok millert@@ a while ago.
@
text
@/*	$OpenBSD: sparc64_installboot.c,v 1.6 2015/11/30 17:34:57 jsing Exp $	*/

/*
 * Copyright (c) 2012, 2013 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>	/* DEV_BSIZE */
#include <sys/stat.h>

#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include <ufs/ffs/fs.h>

#include "installboot.h"

char	*bootldr;

char	*blkstore;
char	*ldrstore;
size_t	blksize;
size_t	ldrsize;

void
md_init(void)
{
	stages = 2;
	stage1 = "/usr/mdec/bootblk";
	stage2 = "/usr/mdec/ofwboot";

	bootldr = "/ofwboot";
}

void
md_loadboot(void)
{
	struct stat sb;
	size_t blocks;
	int fd;

	/* Load first-stage boot block. */
	if ((fd = open(stage1, O_RDONLY)) < 0)
		err(1, "open");
	if (fstat(fd, &sb) == -1)
		err(1, "fstat");
	blocks = howmany((size_t)sb.st_size, DEV_BSIZE);
	blksize = blocks * DEV_BSIZE;
	if (verbose)
		fprintf(stderr, "boot block is %zu bytes "
                    "(%zu blocks @@ %u bytes = %zu bytes)\n",
                    (ssize_t)sb.st_size, blocks, DEV_BSIZE, blksize);
	if (blksize > SBSIZE - DEV_BSIZE)
		errx(1, "boot blocks too big (%zu > %d)",
		    blksize, SBSIZE - DEV_BSIZE);
	blkstore = calloc(1, blksize);
	if (blkstore == NULL)
		err(1, "calloc");
	if (read(fd, blkstore, sb.st_size) != (ssize_t)sb.st_size)
		err(1, "read");
	close(fd);

	/* Load second-stage boot loader. */
        if ((fd = open(stage2, O_RDONLY)) < 0)
                err(1, "open");
        if (fstat(fd, &sb) == -1)
                err(1, "stat");
        ldrsize = sb.st_size;
        ldrstore = malloc(ldrsize);
        if (ldrstore == NULL)
                err(1, "malloc");
        if (read(fd, ldrstore, ldrsize) != (ssize_t)sb.st_size)
                err(1, "read");
        close(fd);
}

void
md_installboot(int devfd, char *dev)
{
	/* XXX - is this necessary? */
	sync();

	bootldr = fileprefix(root, bootldr);
	if (bootldr == NULL)
		exit(1);
	if (!nowrite)
		if (filecopy(stage2, bootldr) == -1)
			exit(1);

	/* Write bootblock into the superblock. */
	if (verbose)
		fprintf(stderr, "%s boot block to disk %s\n",
		    (nowrite ? "would write" : "writing"), dev);
	if (nowrite)
		return;
	if (pwrite(devfd, blkstore, blksize, DEV_BSIZE) != (ssize_t)blksize)
		err(1, "pwrite");
}
@


1.6
log
@Revert the sync -> fsync conversion (at least for the time being) - there
is a good chance that this is causing the 'No blocks to load' errors that
various people have encountered.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.5 2015/11/26 19:03:10 deraadt Exp $	*/
a105 2
	if (lseek(devfd, DEV_BSIZE, SEEK_SET) != DEV_BSIZE)
		err(1, "lseek");
d111 2
a112 2
	if (write(devfd, blkstore, blksize) != (ssize_t)blksize)
		err(1, "write");
@


1.5
log
@Apply pledge.
The people I asked to review this did not get back to me, so
we will test this a different way.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.4 2015/10/08 14:50:38 krw Exp $	*/
d95 2
a96 1
	fsync(devfd);
@


1.4
log
@Refactor fileprefix() and filecopy() to use warn() instead of err()
to display error message, and to return error indications (NULL and
-1 respectively).  Use the error indications in write_efisystem()
to unwind in the face of more error conditions. In other cases just
exit(1) to emulation current behaviour.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.3 2015/01/16 00:05:12 deraadt Exp $	*/
d95 1
a95 2
	/* XXX - is this necessary? */
	sync();
@


1.3
log
@first batch of cleanup to programs based upon the namespace cleanups
in net/pfvar.h sys/proc.h sys/ucred.h arpa/nameser.h
change to PATH_MAX, reduce use of MIN() and MAX(), HOST_NAME_MAX+1,
LOGIN_NAME_MAX, etc etc
ok millert guenther, some review by doug
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.2 2014/06/09 13:13:48 jsing Exp $	*/
d99 2
d102 2
a103 1
		filecopy(stage2, bootldr);
@


1.2
log
@Use calloc() instead of malloc()/memset().

From Benjamin Baier.
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.1 2014/01/19 02:58:50 jsing Exp $	*/
d19 1
a19 1
#include <sys/param.h>
@


1.1
log
@Rework installboot and use a single directory with a single makefile. The
directory per machine model is arguably cleaner, however it does not play
well with distrib/special and instbin.

Discussed with deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sparc64_installboot.c,v 1.4 2014/01/18 03:07:05 jsing Exp $	*/
d71 1
a71 1
	blkstore = malloc(blksize);
d73 1
a73 2
		err(1, "malloc");
	memset(blkstore, 0, blksize);
@

