head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.10
date	2015.10.15.19.27.30;	author miod;	state Exp;
branches;
next	1.9;
commitid	R07mNNZ6Dolm5xg5;

1.9
date	2015.10.15.04.41.09;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	YCy9VT1TdPmamHBH;

1.8
date	2015.10.14.14.13.12;	author jsg;	state Exp;
branches;
next	1.7;
commitid	itPOjRCe42sg73q3;

1.7
date	2015.10.14.00.19.04;	author krw;	state Exp;
branches;
next	1.6;
commitid	S1rWOspi53imJwNv;

1.6
date	2015.10.12.20.52.20;	author krw;	state Exp;
branches;
next	1.5;
commitid	5Pek8GQzWpYoGc1F;

1.5
date	2015.10.08.14.50.38;	author krw;	state Exp;
branches;
next	1.4;
commitid	xtMQpAxwl7GHdojH;

1.4
date	2014.01.18.03.07.05;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.18.02.47.27;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2013.12.28.11.26.57;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.27.13.52.40;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Add an extra argument to bootstrap() to allow for a limited overlap between an
existing partition and the boot blocks span, and update all callers to require
an overlap limit of zero sectors (thus not changing their behaviour).

Then, add proper support for vax: copy the 2nd-stage boot block to /boot and
install the 1st-stage boot block at the beginning of the disk, retaining the
disklabel; allow for an overlap of up to 16 sectors, which is perfectly fine
as long as your `a' partition is FFS.

Note that regular installs will not even have such an overlap, because the
default OpenBSD span on a disk on vax starts at sector 16, but installation
media use sperific layout which require this.

ok krw@@
@
text
@/*	$OpenBSD: installboot.h,v 1.9 2015/10/15 04:41:09 deraadt Exp $	*/
/*
 * Copyright (c) 2012, 2013 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdlib.h>

extern int nowrite;
extern int stages;
extern int verbose;

extern char *root;
extern char *stage1;
extern char *stage2;

#ifdef BOOTSTRAP
void	bootstrap(int, char *, char *, unsigned int);
#endif

int	filecopy(const char *, const char *);
char	*fileprefix(const char *, const char *);
u_int32_t crc32(const u_char *, const u_int32_t);

void	md_init(void);
void	md_loadboot(void);
void	md_installboot(int, char *);

#ifdef SOFTRAID
void	sr_installboot(int, char *);
void	sr_install_bootblk(int, int, int);
void	sr_install_bootldr(int, char *);
#endif
@


1.9
log
@give up; include stdlib.h from the .h file, sigh
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.8 2015/10/14 14:13:12 jsg Exp $	*/
d29 1
a29 1
void	bootstrap(int, char *, char *);
@


1.8
log
@add includes for crc32() and uuid_dec_be() missed in rev 1.11
ok krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.7 2015/10/14 00:19:04 krw Exp $	*/
d17 2
@


1.7
log
@Backout last. Breaks sparc64, amoung other dubiousness.

requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.6 2015/10/12 20:52:20 krw Exp $	*/
d32 1
@


1.6
log
@Check that the disk specified on the command line is the disk that
files are copied to. Error out with 'cross-device install' if not.

ok millert@@, ok deraadt@@ & jsing@@ for previous version
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.5 2015/10/08 14:50:38 krw Exp $	*/
a20 2
extern int dstblkunit;
extern int dstblkmajor;
@


1.5
log
@Refactor fileprefix() and filecopy() to use warn() instead of err()
to display error message, and to return error indications (NULL and
-1 respectively).  Use the error indications in write_efisystem()
to unwind in the face of more error conditions. In other cases just
exit(1) to emulation current behaviour.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.4 2014/01/18 03:07:05 jsing Exp $	*/
d21 2
@


1.4
log
@Make installboot(8) easier to use - copy the second stage boot loader to
the default location used by the given architecture. This eliminates the
need to copy it over manually prior to running installboot.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.2 2013/12/28 11:26:57 jsing Exp $	*/
d30 1
a30 1
void	filecopy(const char *, const char *);
@


1.3
log
@Add a -r flag that allows for the mount point of the root filesystem to be
specified. This is primarily for use by the installer and defaults to /.
@
text
@d30 1
@


1.2
log
@Various code clean ups - add a missing header, add a missing prototype,
add some casts, tweak some types and variable names.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.h,v 1.1 2013/12/27 13:52:40 jsing Exp $	*/
d22 1
d29 2
@


1.1
log
@Initial version of a unified installboot(8) that lives outside of
sys/arch/${MACHINE}/stand. For now this only supports i386, however
additional architectures will be added and further development can happen
in tree.

Requested by deraadt@@ quite some time ago.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 4
@

