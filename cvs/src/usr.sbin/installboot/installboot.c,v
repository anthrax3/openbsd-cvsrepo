head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.6
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4;
locks; strict;
comment	@ * @;


1.11
date	2015.11.29.00.14.07;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	LV4M6QY41g3hecuJ;

1.10
date	2015.11.26.19.03.10;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	l08CzgnpmHFvutrT;

1.9
date	2015.10.14.00.19.04;	author krw;	state Exp;
branches;
next	1.8;
commitid	S1rWOspi53imJwNv;

1.8
date	2015.10.12.20.52.20;	author krw;	state Exp;
branches;
next	1.7;
commitid	5Pek8GQzWpYoGc1F;

1.7
date	2015.10.08.14.50.38;	author krw;	state Exp;
branches;
next	1.6;
commitid	xtMQpAxwl7GHdojH;

1.6
date	2015.10.03.16.56.52;	author krw;	state Exp;
branches;
next	1.5;
commitid	HJFSHENKbnsmJpnF;

1.5
date	2015.09.10.16.53.28;	author miod;	state Exp;
branches;
next	1.4;
commitid	PgY11mdK0DsyLzS4;

1.4
date	2014.01.19.04.14.22;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.19.03.49.31;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2014.01.18.02.47.27;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2013.12.27.13.52.40;	author jsing;	state Exp;
branches;
next	;


desc
@@


1.11
log
@give up on pledge for now.
this will have to wait until jsing and stsp find time to look at it.
@
text
@/*	$OpenBSD: installboot.c,v 1.10 2015/11/26 19:03:10 deraadt Exp $	*/

/*
 * Copyright (c) 2012, 2013 Joel Sing <jsing@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <err.h>
#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <util.h>

#include "installboot.h"

int	nowrite;
int	stages;
int	verbose;

char	*root = "/";
char	*stage1;
char	*stage2;

static __dead void
usage(void)
{
	extern char *__progname;

	fprintf(stderr, "usage: %s [-nv] [-r root] disk [stage1%s]\n",
	    __progname, (stages >= 2) ? " [stage2]" : "");

	exit(1);
}

int
main(int argc, char **argv)
{
	char *dev, *realdev;
	int devfd, opt;

	md_init();

	while ((opt = getopt(argc, argv, "nr:v")) != -1) {
		switch (opt) {
		case 'n':
			nowrite = 1;
			break;
		case 'r':
			root = strdup(optarg);
			if (root == NULL)
				err(1, "strdup");
			break;
		case 'v':
			verbose = 1;
			break;
		default:
			usage();
		}
	}

	argc -= optind;
	argv += optind;

	if (argc < 1 || argc > stages + 1)
		usage();

	dev = argv[0];
	if (argc > 1)
		stage1 = argv[1];
	if (argc > 2)
		stage2 = argv[2];

	/* Prefix stages with root, unless they were user supplied. */
	if (verbose)
		fprintf(stderr, "Using %s as root\n", root);
	if (argc <= 1 && stage1 != NULL) {
		stage1 = fileprefix(root, stage1);
		if (stage1 == NULL)
			exit(1);
	}
	if (argc <= 2 && stage2 != NULL) {
		stage2 = fileprefix(root, stage2);
		if (stage2 == NULL)
			exit(1);
	}

	if ((devfd = opendev(dev, (nowrite ? O_RDONLY : O_RDWR), OPENDEV_PART,
	    &realdev)) < 0)
		err(1, "open: %s", realdev);

        if (verbose) {
		fprintf(stderr, "%s bootstrap on %s\n",
		    (nowrite ? "would install" : "installing"), realdev);
		if (stage1)
			fprintf(stderr, "using first-stage %s", stage1);
		if (stage2)
			fprintf(stderr, ", second-stage %s", stage2);
		fprintf(stderr, "\n");
	}

	md_loadboot();

#ifdef SOFTRAID
	sr_installboot(devfd, dev);
#else
	md_installboot(devfd, realdev);
#endif

	return 0;
}
@


1.10
log
@Apply pledge.
The people I asked to review this did not get back to me, so
we will test this a different way.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.9 2015/10/14 00:19:04 krw Exp $	*/
a52 3

	if (pledge("stdio rpath wpath cpath fattr disklabel", NULL) == -1)
		err(1, "pledge");
@


1.9
log
@Backout last. Breaks sparc64, amoung other dubiousness.

requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.8 2015/10/12 20:52:20 krw Exp $	*/
d53 3
@


1.8
log
@Check that the disk specified on the command line is the disk that
files are copied to. Error out with 'cross-device install' if not.

ok millert@@, ok deraadt@@ & jsing@@ for previous version
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.7 2015/10/08 14:50:38 krw Exp $	*/
a18 3
#include <sys/types.h>
#include <sys/disklabel.h>
#include <sys/stat.h>
a31 2
int	dstblkunit;
int	dstblkmajor;
d51 1
a51 2
	struct stat sb;
	char *dev, *realdev, *blkdev;
a102 9

	if (realdev == NULL || strncmp(realdev, "/dev/r", 6))
		errx(1, "realdev");
	if (asprintf(&blkdev, "/dev/%s", realdev+6) == -1)
		err(1, "asprintf");
	if (stat(blkdev, &sb) == -1)
		err(1, "fstat");
	dstblkunit = DISKUNIT(sb.st_rdev);
	dstblkmajor = major(sb.st_rdev);
@


1.7
log
@Refactor fileprefix() and filecopy() to use warn() instead of err()
to display error message, and to return error indications (NULL and
-1 respectively).  Use the error indications in write_efisystem()
to unwind in the face of more error conditions. In other cases just
exit(1) to emulation current behaviour.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.6 2015/10/03 16:56:52 krw Exp $	*/
d19 3
d35 2
d56 2
a57 1
	char *dev, *realdev;
d109 9
@


1.6
log
@Nuke trailing whitespace to avoid cluttering possible upcoming diffs.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.5 2015/09/10 16:53:28 miod Exp $	*/
d89 1
a89 1
	if (argc <= 1 && stage1 != NULL)
d91 4
a94 1
	if (argc <= 2 && stage2 != NULL)
d96 3
@


1.5
log
@Assign the return value of getopt() to an int, not a char, so that options
actually work on unsigned char platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.4 2014/01/19 04:14:22 jsing Exp $	*/
d106 1
a106 1
	} 
@


1.4
log
@Tweak comment re root prefixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.3 2014/01/19 03:49:31 jsing Exp $	*/
d52 1
a52 2
	int devfd;
	char opt;
@


1.3
log
@Do not prefix user specified stages with the root filesystem mount point.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.2 2014/01/18 02:47:27 jsing Exp $	*/
d87 1
a87 1
	/* Prefix stages with root. */
@


1.2
log
@Add a -r flag that allows for the mount point of the root filesystem to be
specified. This is primarily for use by the installer and defaults to /.
@
text
@d1 1
a1 1
/*	$OpenBSD: installboot.c,v 1.1 2013/12/27 13:52:40 jsing Exp $	*/
d90 1
a90 1
	if (stage1 != NULL)
d92 1
a92 1
	if (stage2 != NULL)
@


1.1
log
@Initial version of a unified installboot(8) that lives outside of
sys/arch/${MACHINE}/stand. For now this only supports i386, however
additional architectures will be added and further development can happen
in tree.

Requested by deraadt@@ quite some time ago.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
d33 1
d42 1
a42 1
	fprintf(stderr, "usage: %s [-nv] disk [stage1%s]\n",
d57 1
a57 1
	while ((opt = getopt(argc, argv, "nv")) != -1) {
d62 5
d86 8
@

