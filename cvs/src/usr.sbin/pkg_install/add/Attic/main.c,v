head	1.19;
access;
symbols
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.15.0.4
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.2
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.4
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_9:1.13.0.2
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.7.0.2
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.19
date	2004.05.28.20.15.48;	author brad;	state dead;
branches;
next	1.18;

1.18
date	2003.08.06.20.46.36;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.07.04.17.31.19;	author avsm;	state Exp;
branches;
next	1.16;

1.16
date	2003.04.03.19.42.53;	author avsm;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.08.22.01.50;	author tdeval;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.16.21.28.06;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.04.08.16.45.46;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2000.02.04.05.05.45;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	99.10.09.20.35.44;	author beck;	state Exp;
branches;
next	1.10;

1.10
date	99.02.28.18.55.24;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.10.13.23.09.49;	author marc;	state Exp;
branches;
next	1.8;

1.8
date	98.09.07.22.30.13;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	98.04.07.04.18.45;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.04.07.04.17.47;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.04.07.04.06.37;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	98.04.04.22.44.13;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.01.15.23.44.09;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.04.08.43.34;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.07.56.03;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.19
log
@bye bye old package tools.

ok deraadt@@
@
text
@/*	$OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $	*/

#ifndef lint
static const char rcsid[] = "$OpenBSD: main.c,v 1.18 2003/08/06 20:46:36 millert Exp $";
#endif

/*
 *
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * This is the add module.
 *
 */

#include <err.h>
#include <sys/param.h>
#include "lib.h"
#include "add.h"

static char Options[] = "hvIRfnp:SMt:";

char	*Prefix		= NULL;
Boolean	NoInstall	= FALSE;
Boolean	NoRecord	= FALSE;

char	*Mode		= NULL;
char	*Owner		= NULL;
char	*Group		= NULL;
char	*PkgName	= NULL;
char	*Directory	= NULL;
char	FirstPen[FILENAME_MAX];
add_mode_t AddMode	= NORMAL;

char **pkgs;
int pkg_count = 0;

static void usage(void);

int
main(int argc, char **argv)
{
    int ch, err;
    char **start;
    char *cp;

    start = argv;
    while ((ch = getopt(argc, argv, Options)) != -1) {
	switch(ch) {
	case 'v':
	    Verbose = TRUE;
	    break;

	case 'p':
	    Prefix = optarg;
	    break;

	case 'I':
	    NoInstall = TRUE;
	    break;

	case 'R':
	    NoRecord = TRUE;
	    break;

	case 'f':
	    Force = TRUE;
	    break;

	case 'n':
	    Fake = TRUE;
	    Verbose = TRUE;
	    break;

	case 't':
	    strlcpy(FirstPen, optarg, sizeof(FirstPen));
	    break;

	case 'S':
	    AddMode = SLAVE;
	    break;

	case 'M':
	    AddMode = MASTER;
	    break;

	case 'h':
	case '?':
	default:
	    usage();
	    break;
	}
    }
    argc -= optind;
    argv += optind;

    pkg_count = argc + 1;
    pkgs = (char **)calloc(pkg_count,  sizeof(char **));
    if (pkgs == NULL) {
    	fprintf(stderr, "malloc failed - abandoning package add.\n");
    	exit(1);		
    }      
    
    if (AddMode != SLAVE) {

	/* Get all the remaining package names, if any */
	for (ch = 0; *argv; ch++, argv++) {
	    /* Don't mangle stdin ("-") or URL arguments */
	    if ( (strcmp(*argv, "-") == 0)  
		 || (isURL(*argv))) {
	         pkgs[ch] = strdup(*argv);
		 if (pkgs[ch] == NULL) {
		     fprintf(stderr, 
			     "malloc failed - abandoning package add.\n");
		     exit(1);		
		 }
	    }
	    else {			/* expand all pathnames to fullnames */
		char *s, *tmp;

		s=ensure_tgz(*argv);
		    
		if (fexists(s)) { /* refers to a file directly */ 
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr, 
				"malloc failed - abandoning package add.\n");
			exit(1);		
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		}
		else if (ispkgpattern(*argv)
			 && (s=findbestmatchingname(dirname_of(*argv),
						    basename_of(*argv)))
			    != NULL) {
		    if (Verbose)
			printf("Using %s for %s\n",s, *argv);
		    pkgs[ch] = (char *) malloc(MAXPATHLEN * sizeof(char));
		    if (pkgs[ch] == NULL) {
		        fprintf(stderr, 
				"malloc failed - abandoning package add.\n");
			exit(1);		
		    }
		    tmp = realpath(s, pkgs[ch]);
		    if (tmp == NULL) {
		        perror("realpath failed");
			fprintf(stderr, "failing path was %s\n", pkgs[ch]);
			exit(1);
		    }
		    free(s);
		} else {
		    /* look for the file(pattern) in the expected places */
		    if (!(cp = fileFindByPath(NULL, *argv))) {
		        fprintf(stderr, "can't find package '%s'\n", *argv);
			exit(1);
		    }
		    else {
			pkgs[ch] = strdup(cp);
			if (pkgs[ch] == NULL) {
			    fprintf(stderr, 
				  "malloc failed - abandoning package add.\n");
			    exit(1);		
			}
		    }
		}
	    }
	}
	/* If no packages, yelp */
	if (!ch)
	    pwarnx("missing package name(s)"), usage();
	else if (ch > 1 && AddMode == MASTER)
	    pwarnx("only one package name may be specified with master mode"),
	    usage();
    }
    if ((err = pkg_perform(pkgs)) != 0) {
	if (Verbose)
	    pwarnx("%d package addition(s) failed", err);
	return err;
    }
    else
	return 0;
}

static void
usage()
{
    fprintf(stderr, "%s\n",
	"usage: pkg_add [-vInfRMS] [-t template] [-p prefix] pkg-name ...");
    exit(1);
}
@


1.18
log
@Plug some memory leaks; from Patrick Latifi
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.17 2003/07/04 17:31:19 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: main.c,v 1.17 2003/07/04 17:31:19 avsm Exp $";
@


1.17
log
@'static const char rcsid[]' to make it -Wall clean
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.16 2003/04/03 19:42:53 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: main.c,v 1.16 2003/04/03 19:42:53 avsm Exp $";
d167 1
@


1.16
log
@some strcpy/strcat -> strlcpy/strlcat conversions
ok hin@@, ho@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.15 2002/09/08 22:01:50 tdeval Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.15 2002/09/08 22:01:50 tdeval Exp $";
@


1.15
log
@Avoid ordered comparison between pointers and integers (ANSI).
ok deraadt@@, espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.14 2002/02/16 21:28:06 millert Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.14 2002/02/16 21:28:06 millert Exp $";
d88 1
a88 1
	    strcpy(FirstPen, optarg);
@


1.14
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.13 2001/04/08 16:45:46 espie Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.13 2001/04/08 16:45:46 espie Exp $";
d151 2
a152 1
						    basename_of(*argv))) > 0) {
@


1.13
log
@Better error messages: pwarnx function, which works like pwarn, except
it shows a current package name along with the program name, e.g.,
pkg_add(foo-3.0): some error occurred.

A few messages now bear redundant pkgnames, which is much better than
doing pkg_add * and being informed that something went slightly wrong
somewhere...
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.12 2000/02/04 05:05:45 deraadt Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.12 2000/02/04 05:05:45 deraadt Exp $";
d50 1
a50 1
static void usage __P((void));
@


1.12
log
@what is this hatred of newlines on error messages?
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.11 1999/10/09 20:35:44 beck Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.11 1999/10/09 20:35:44 beck Exp $";
d185 1
a185 1
	    warnx("missing package name(s)"), usage();
d187 1
a187 1
	    warnx("only one package name may be specified with master mode"),
d192 1
a192 1
	    warnx("%d package addition(s) failed", err);
@


1.11
log
@Band Aid fixes, polyglot of espies and mine:

  - ensure package files end in .tgz if not suffixed, but allow for .tar.gz and
uncompressed .tar as well.

  - make pkg_add take as many args as you can feed it. - "pkg_add *.tgz"
works now.

  - fix bug where realpath could fail and leave NULL in arg list.
  - fix bug where nonexistent package could fail and leave NULL in arg list.
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.10 1999/02/28 18:55:24 deraadt Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.10 1999/02/28 18:55:24 deraadt Exp $";
d145 1
a145 1
			fprintf(stderr, "failing path was %s", pkgs[ch]);
d163 1
a163 1
			fprintf(stderr, "failing path was %s", pkgs[ch]);
d169 1
a169 1
		        fprintf(stderr, "can't find package '%s'", *argv);
@


1.10
log
@nice usage messages
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.9 1998/10/13 23:09:49 marc Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.9 1998/10/13 23:09:49 marc Exp $";
d47 2
a48 3
#define MAX_PKGS	20
char	pkgnames[MAX_PKGS][MAXPATHLEN];
char	*pkgs[MAX_PKGS];
d109 7
a115 5
    if (argc > MAX_PKGS) {
	warnx("too many packages (max %d)", MAX_PKGS);
	return(1);
    }

a116 1
	for (ch = 0; ch < MAX_PKGS; pkgs[ch++] = NULL) ;
d120 10
a129 4
	    if (!strcmp(*argv, "-"))	/* stdin? */
		pkgs[ch] = "-";
	    else if (isURL(*argv))	/* preserve URLs */
		pkgs[ch] = strcpy(pkgnames[ch], *argv);
d131 3
a133 1
		char *s;
d135 14
a148 2
		if (fexists(*argv)) /* refers to a file directly */
		    pkgs[ch] = realpath(*argv, pkgnames[ch]);
d154 12
a165 2
		    
		    pkgs[ch] = realpath(s, pkgnames[ch]);
d168 12
a179 4
		    if (!(cp = fileFindByPath(NULL, *argv)))
			warnx("can't find package '%s'", *argv);
		    else
			pkgs[ch] = strcpy(pkgnames[ch], cp);
@


1.9
log
@Sync with recent NetBSD changes:
- use snprintf in place of sprintf
- code cleanup
- Package -> package_t, PackingList -> plist_t
Also: remove files that haven't been linked in a while
Pass -q to mtree so it is quiet in the presence of symlinks
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.8 1998/09/07 22:30:13 marc Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.8 1998/09/07 22:30:13 marc Exp $";
d164 2
a165 3
    fprintf(stderr, "%s\n%s\n",
		"usage: pkg_add [-vInfRMS] [-t template] [-p prefix]",
		"               pkg-name [pkg-name ...]");
@


1.8
log
@updated pkg_* tools.  Merged in many changes/improvements from NetBSD.
New features include md5 hash so pkg_delete won't remove files that have
changed and the ability to define conflicting packages, e.g. you can't
install both mh and nmh.  The ports tree will have to be updated to take
advantage of this.

Let me know of any problems, real or imagined :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.7 1998/04/07 04:18:45 deraadt Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.7 1998/04/07 04:18:45 deraadt Exp $";
d125 2
d129 9
a137 1
		else {		/* look for the file in the expected places */
@


1.7
log
@even cleaner
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.6 1998/04/07 04:17:47 deraadt Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.6 1998/04/07 04:17:47 deraadt Exp $";
d28 1
a37 1
Boolean	Force		= FALSE;
d51 2
d58 1
a58 1
    char *prog_name = argv[0], *cp;
d103 1
a103 1
	    usage(prog_name, NULL);
d111 1
a111 1
	whinge("Too many packages (max %d).", MAX_PKGS);
d129 1
a129 1
			whinge("Can't find package '%s'.", *argv);
d137 1
a137 1
	  usage(prog_name, NULL);
d139 2
a140 2
	  usage(prog_name,
		"Only one package name may be specified with master mode");
d142 1
a142 1
    if ((err = pkg_perform(pkgs)) != NULL) {
d144 1
a144 1
	    fprintf(stderr, "%d package addition(s) failed.\n", err);
d151 2
a152 2
void
usage(const char *name, const char *fmt, ...)
d154 3
a156 10
    va_list args;

    va_start(args, fmt);
    if (fmt) {
	fprintf(stderr, "%s: ", name);
	vfprintf(stderr, fmt, args);
	fprintf(stderr, "\n");
    }
    va_end(args);
    fprintf(stderr, "usage: %s [-vInfRMS] [-t template] [-p prefix] pkg ...\n", name);
@


1.6
log
@cleanup usage even more; very annoying
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.5 1998/04/07 04:06:37 marc Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.5 1998/04/07 04:06:37 marc Exp $";
d135 1
a135 1
	  usage(prog_name, "Missing package name(s)");
@


1.5
log
@fix check for no command line args
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.4 1998/04/04 22:44:13 deraadt Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.4 1998/04/04 22:44:13 deraadt Exp $";
d158 1
a158 1
	fprintf(stderr, "\n\n");
d161 1
a161 9
    fprintf(stderr, "Usage: %s [args] pkg [ .. pkg ]\n", name);
    fprintf(stderr, "\t-v         verbose\n");
    fprintf(stderr, "\t-p arg     override prefix with arg\n");
    fprintf(stderr, "\t-I         don't execute pkg install script, if any\n");
    fprintf(stderr, "\t-R         don't record installation (can't delete!)\n");
    fprintf(stderr, "\t-n         don't actually install, just show steps\n");
    fprintf(stderr, "\t-t temp    use temp as template for mktemp()\n");
    fprintf(stderr, "\t-S         run in SLAVE mode\n");
    fprintf(stderr, "\t-M         run in MASTER mode\n");
@


1.4
log
@fix usage
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.3 1997/01/15 23:44:09 millert Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.3 1997/01/15 23:44:09 millert Exp $";
d133 6
a139 5
    /* If no packages, yelp */
    else if (!ch)
	usage(prog_name, "Missing package name(s)");
    else if (ch > 1 && AddMode == MASTER)
	usage(prog_name, "Only one package name may be specified with master mode");
@


1.3
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.2 1996/06/04 08:43:34 niklas Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.2 1996/06/04 08:43:34 niklas Exp $";
d161 8
a168 9
    fprintf(stderr, "Where args are one or more of:\n\n");
    fprintf(stderr, "-v         verbose\n");
    fprintf(stderr, "-p arg     override prefix with arg\n");
    fprintf(stderr, "-I         don't execute pkg install script, if any\n");
    fprintf(stderr, "-R         don't record installation (can't delete!)\n");
    fprintf(stderr, "-n         don't actually install, just show steps\n");
    fprintf(stderr, "-t temp    use temp as template for mktemp()\n");
    fprintf(stderr, "-S         run in SLAVE mode\n");
    fprintf(stderr, "-M         run in MASTER mode\n");
@


1.2
log
@Oops, screwed up the $OpenBSD$ IDs
@
text
@d1 1
a1 1
/*	$OpenBSD: main.c,v 1.1 1996/06/04 07:56:03 niklas Exp $	*/
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.1 1996/06/04 07:56:03 niklas Exp $";
d59 1
a59 1
    while ((ch = getopt(argc, argv, Options)) != EOF) {
@


1.1
log
@add package tools from FreeBSD
@
text
@d1 2
a2 1
#	$OpenBSD$
d4 1
a4 1
static char *rcsid = "$OpenBSD: main.c,v 1.10 1996/03/12 06:12:36 jkh Exp $";
@
