head	1.33;
access;
symbols
	OPENBSD_3_5:1.32.0.4
	OPENBSD_3_5_BASE:1.32
	OPENBSD_3_4:1.32.0.2
	OPENBSD_3_4_BASE:1.32
	OPENBSD_3_3:1.30.0.2
	OPENBSD_3_3_BASE:1.30
	OPENBSD_3_2:1.29.0.2
	OPENBSD_3_2_BASE:1.29
	OPENBSD_3_1:1.27.0.4
	OPENBSD_3_1_BASE:1.27
	OPENBSD_3_0:1.27.0.2
	OPENBSD_3_0_BASE:1.27
	OPENBSD_2_9_BASE:1.25
	OPENBSD_2_9:1.25.0.4
	OPENBSD_2_8:1.25.0.2
	OPENBSD_2_8_BASE:1.25
	OPENBSD_2_7:1.22.0.2
	OPENBSD_2_7_BASE:1.22
	OPENBSD_2_6:1.14.0.2
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.33
date	2004.05.28.20.15.48;	author brad;	state dead;
branches;
next	1.32;

1.32
date	2003.07.14.13.38.24;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2003.04.15.19.50.22;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2003.03.07.06.30.38;	author david;	state Exp;
branches;
next	1.29;

1.29
date	2002.07.01.02.03.16;	author brad;	state Exp;
branches;
next	1.28;

1.28
date	2002.06.09.19.11.18;	author brad;	state Exp;
branches;
next	1.27;

1.27
date	2001.08.17.11.13.58;	author mpech;	state Exp;
branches;
next	1.26;

1.26
date	2001.08.02.18.37.35;	author mpech;	state Exp;
branches;
next	1.25;

1.25
date	2000.10.15.19.30.31;	author marc;	state Exp;
branches;
next	1.24;

1.24
date	2000.07.18.22.02.52;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2000.07.06.04.15.08;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	2000.05.05.17.09.44;	author espie;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.25.19.56.51;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.04.15.02.15.19;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.12.21.47.55;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.19.17.57.09;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.02.18.33.30;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.02.18.27.37;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.01.17.20.21.34;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	99.10.17.20.35.47;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	99.10.17.16.27.47;	author provos;	state Exp;
branches;
next	1.12;

1.12
date	99.10.09.20.35.45;	author beck;	state Exp;
branches;
next	1.11;

1.11
date	99.10.07.22.22.58;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.10.07.22.09.20;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.05.22.17.48;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.04.21.21.27.49;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.12.16.02.47.52;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.09.07.22.30.14;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	98.09.06.22.23.18;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.04.25.05.09.06;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.04.13.14.26.15;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.04.07.07.11.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.07.56.04;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.33
log
@bye bye old package tools.

ok deraadt@@
@
text
@.\"	$OpenBSD: pkg_add.1,v 1.32 2003/07/14 13:38:24 jmc Exp $
.\"
.\" FreeBSD install - a package for the installation and maintenance
.\" of non-core utilities.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" Jordan K. Hubbard
.\"
.\"
.\"     @@(#)pkg_add.1
.\"
.Dd November 25, 1994
.Dt PKG_ADD 1
.Os
.Sh NAME
.Nm pkg_add
.Nd install software package distributions
.Sh SYNOPSIS
.Nm pkg_add
.Op Fl vInfRMS
.Op Fl t Ar template
.Op Fl p Ar prefix
.Ar pkg-name Op Ar ...
.Sh DESCRIPTION
The
.Nm
command is used to extract packages that have been previously created
with the
.Xr pkg_create 1
command.
Selected packages containing pre-compiled applications from the
.Pa /usr/ports
tree can be found on the
.Ox
FTP site or on the official
.Ox
CD.
These packages are provided as a convenience for quickly installing software
that would otherwise need to be built manually.
.Bd -filled -offset indent
.Em Note :
System distribution files, e.g. base28.tgz, comp28.tgz, etc., are
.Em not
packages and may not be installed using
.Nm pkg_add .
.Ed
.Pp
Package names may be specified as filenames (which normally consist of the
package name itself plus the
.Dq .tgz ,
.Dq .tar.gz ,
or
.Dq .tar
suffix) or an FTP location in the form of an URL.
For example, the following is valid:
.Pp
.Ic pkg_add -v ftp://ftp.openbsd.org/pub/OpenBSD/2.7/packages/i386/m4-1.4.tgz
.Pp
If the given package names are not found in the current working directory,
.Nm
will search for them in each directory named by the
.Ev PKG_PATH
environment variable.
Specifying
.Ql -
as a package name causes
.Nm
to read from the standard input.
.Pp
Alternatively, it is possible to add packages interactively from within
the ftp client.
For example, the following works:
.Bd -literal
	$ ftp ftp://ftp.openbsd.org/pub/OpenBSD/2.7/packages/i386/
	250 CWD command successful
	ftp> ls m*
	227 Entering Passive Mode (129,128,5,191,164,73)
	150 Opening ASCII mode data connection for m*.
	m4-1.4.tgz
	metamail-2.7.tgz
	mh-6.8.4.tgz
	mm-1.0.12.tgz
	mpeg_lib-1.2.1.tgz
	mpeg_play-2.4.tgz
	mpg123-0.59q.tgz
	mutt-0.95.7i.tgz
	226 Transfer complete.
	ftp> get m4-1.4.tgz "|pkg_add -v -"
.Ed
.Pp
.Sy Warning:
Since the
.Nm
command may execute scripts or programs contained within a package file,
your system may be susceptible to
.Dq trojan horses
or other subtle attacks from miscreants who create dangerous packages.
Be sure the specified package(s) are from trusted sources.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl v
Turn on verbose output.
.It Fl I
If an installation script exists for a given package, do not execute it.
.It Fl n
Don't actually install a package, just report the steps that
would be taken if it was.
.It Fl R
Do not record the installation of a package.
This means that you cannot deinstall it later, so only use this option if
you know what you are doing!
.It Fl f
Force installation to proceed even if prerequisite packages are not
installed or the requirements script fails.
Although
.Nm
will still try to find and auto-install missing prerequisite packages,
a failure to find one will not be fatal.
.It Fl p Ar prefix
Set
.Ar prefix
as the directory in which to extract files from a package.
If a package has set its default directory, it will be overridden
by this flag.
Note that only the first
.Cm @@cwd
directive will be replaced, since
.Nm
has no way of knowing which directory settings are relative and
which are absolute.
It is rare in any case to see more than one
directory transition made, but when such does happen and you wish
to have control over
.Em all
directory transitions, then you may then wish to look into the use of
.Cm MASTER
and
.Cm SLAVE
modes (see the
.Fl M
and
.Fl S
options).
.It Fl t Ar template
Use
.Ar template
as the input to
.Xr mkdtemp 3
when creating a
.Dq staging area .
By default, this is the string
.Pa /var/tmp/instmp.XXXXXX ,
but it may be necessary to override it (see CAVEATS).
Be sure to leave some number of
.Dq X
characters for
.Xr mkdtemp 3
to fill in with a unique ID.
.Pp
You can get a performance boost by setting the staging area
.Ar template
to reside on the same disk partition as target directories for package
file installation; often this is
.Pa /usr .
.It Fl M
Run in
.Cm MASTER
mode.
This is a very specialized mode for running
.Nm
and is meant to be run in conjunction with
.Cm SLAVE
mode.
When run in this mode,
.Nm
does no work beyond extracting the package into a temporary staging
area (see the
.Fl t
option), reading in the packing list, and then dumping it (prefaced by
the current staging area) to the standard output where it may be filtered by a
program such as
.Xr sed 1 .
When used in conjunction with
.Cm SLAVE
mode, it allows you to make radical changes to the package structure
before acting on its contents.
.It Fl S
Run in
.Cm SLAVE
mode.
This is a very specialized mode for running
.Nm
and is meant to be run in conjunction with
.Cm MASTER
mode.
When run in this mode,
.Nm
expects the release contents to be already extracted and waiting
in the staging area, the location of which is read as a string
from the standard input.
The complete packing list is also read from stdin,
and the contents then acted on as normal.
.El
.Pp
By default, when adding packages via FTP, the
.Xr ftp 1
program operates in
.Dq passive
mode.
If you wish to use active mode instead, set the
.Ev FTPMODE
environment variable to
.Qq active .
If
.Nm
consistently fails to fetch a package from a site known to work,
it may be because the site does not support
passive mode ftp correctly.
This is very rare since
.Nm
will try active mode ftp if the server refuses a passive mode
connection.
.Ss Technical details
.Nm
extracts each package's
.Dq packing list
into a special staging directory in
.Pa /var/tmp
(or
.Ev PKG_TMPDIR
if set - see CAVEATS section)
and then runs through the following sequence to fully extract the contents
of the package:
.Bl -enum
.It
A check is made to determine if the package is already recorded as installed.
If it is,
installation is terminated.
.It
A check is made to determine if the package conflicts (from
.Cm @@pkgcfl
directives, see
.Xr pkg_create 1 )
with an already recorded as installed package.
If it is, installation is terminated.
.It
All package dependencies (from
.Cm @@pkgdep
directives, see
.Xr pkg_create 1 )
are read from the packing list.
If any of these required packages are not currently installed,
an attempt is made to find and install it;
if the missing package cannot be found or installed,
the installation is terminated.
.It
A staging area is created under
.Pa /var/tmp ,
and the package is extracted into the staging area.
.It
If the package contains a
.Ar require
script (see
.Xr pkg_create 1 ) ,
it is executed with the following arguments:
.Bl -tag -width indentindent
.It Ar pkg-name
The name of the package being installed
.It Cm INSTALL
Keyword denoting to the script that it is to run an installation requirements
check
(the keyword is useful only to scripts which serve multiple functions).
.El
.Pp
If the
.Ar require
script exits with a non-zero status code, the installation is terminated.
.It
If the package contains an
.Ar install
script, it is executed with the following arguments:
.Bl -tag -width indentindent
.It Ar pkg-name
The name of the package being installed.
.It Cm PRE-INSTALL
Keyword denoting that the script is to perform any actions needed before
the package is installed.
.El
.Pp
If the
.Ar install
script exits with a non-zero status code, the installation is terminated.
.It
The packing list is used as a guide for moving (or copying, as necessary)
files from the staging area into their final locations.
.It
If the package contains an
.Ar mtreefile
file (see
.Xr pkg_create 1 ) ,
then mtree is invoked as:
.Pp
.Bd -filled -offset indent -compact
.Cm mtree
.Fl u
.Fl f
.Ar mtreefile
.Fl d
.Fl e
.Fl p
.Pa prefix
.Ed
.Pp
where
.Pa prefix
is either the prefix specified with the
.Fl p
flag or, if no
.Fl p
flag was specified, the name of the first directory named by a
.Cm @@cwd
directive within this package.
.It
If an
.Ar install
script exists for the package, it is executed with the following arguments:
.Bl -tag -width indentindent
.It Ar pkg_name
The name of the package being installed.
.It Cm POST-INSTALL
Keyword denoting that the script is to perform any actions needed
after the package has been installed.
.El
.It
After installation is complete, a copy of the packing list,
.Ar deinstall
script, description, and display files are copied into
.Pa /var/db/pkg/<pkg-name>
for subsequent possible use by
.Xr pkg_delete 1 .
Any package dependencies are recorded in the other packages'
.Pa /var/db/pkg/<other-pkg>/+REQUIRED_BY
file
(if the environment variable
.Ev PKG_DBDIR
is set, this overrides the
.Pa /var/db/pkg/
path shown above).
.It
Finally, the staging area is deleted and the program terminates.
.El
.Pp
The
.Ar install
and
.Ar require
scripts are called with the environment variable
.Ev PKG_PREFIX
set to the installation prefix (see the
.Fl p
option above).
This allows a package author to write a script
that reliably performs some action on the directory where the package
is installed, even if the user might change it with the
.Fl p
flag to
.Cm pkg_add .
.Sh ENVIRONMENT
.Bl -tag -width PKG_TMPDIR
.It Ev PKG_PATH
If a given package name cannot be found,
the directories named by
.Ev PKG_PATH
are searched.
It should contain a series of entries separated by colons.
Each entry consists of a directory name.
The current directory may be indicated
implicitly by an empty directory name, or explicitly by a single
period
.Pq Ql \&. .
.It Ev PKG_DBDIR
Where to register packages instead of
.Pa /var/db/pkg .
.It Ev PKG_TMPDIR
Temporary area where packages will be extracted, instead of
.Pa /var/tmp .
.El
.Sh SEE ALSO
.Xr pkg_create 1 ,
.Xr pkg_delete 1 ,
.Xr pkg_info 1 ,
.Xr mkdtemp 3 ,
.Xr sysconf 3 ,
.Xr mtree 8
.Sh AUTHORS
.Bl -tag -width indent -compact
.It "Jordan Hubbard"
Initial work and ongoing development.
.It "John Kohl"
.Nx
refinements.
.El
.Sh CAVEATS
Package extraction does need a temporary area that
.Bl -bullet -compact
.It
is big enough to hold the complete extracted package,
.It
can hold executable scripts.
.El
.Pp
.Nm
looks through ${PKG_TMPDIR}, ${TMPDIR}, /var/tmp, /tmp, /usr/tmp
for such an area, in sequence.
.Pp
If ${TMPDIR} and /var/tmp are mounted noexec, you must set PKG_TMPDIR
to a suitable area, as
.Nm
has no way to check for noexec status except by failing to run installation
scripts.
.Sh BUGS
Hard links between files in a distribution are only preserved if either
(1) the staging area is on the same file system as the target directory of
all the links to the file, or (2) all the links to the file are bracketed by
.Cm @@cwd
directives in the contents file,
.Em and
the link names are extracted with a single
.Xr tar 1
command (not split between
invocations due to exec argument-space limitations; this depends on the
value returned by
.Fn sysconf _SC_ARG_MAX ) .
.Pp
Sure to be others.
@


1.32
log
@fix a list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.31 2003/04/15 19:50:22 jmc Exp $
@


1.31
log
@added trailing slash to ftp example;
from Ingolf Schuchardt, PR 3203;

ok pval@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.30 2003/03/07 06:30:38 david Exp $
d243 1
a243 1
.Bl -enum -indent indent
@


1.30
log
@spelling errors/typos
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.29 2002/07/01 02:03:16 brad Exp $
d82 1
a82 1
	$ ftp ftp://ftp.openbsd.org/pub/OpenBSD/2.7/packages/i386
d303 1
a303 1
The packing list is used as a guide for moving (or copying, as necessary) 
@


1.29
log
@typo.
--
PR 2781
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.28 2002/06/09 19:11:18 brad Exp $
d3 1
a3 1
.\" FreeBSD install - a package for the installation and maintainance
@


1.28
log
@some fixes.
--
From: PR 2722.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.27 2001/08/17 11:13:58 mpech Exp $
d96 1
a96 1
	ftp> get m4-1.4tgz "|pkg_add -v -"
@


1.27
log
@o) {Open,Net,Free}BSD -> .{O,N,F}x;
o) "start sentence on new line" issues;
o) minimal -mdoc improvements;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.26 2001/08/02 18:37:35 mpech Exp $
d162 1
a162 4
but it may be necessary to override it in the situation where
space in your
.Pa /var/tmp
directory is limited.
d237 1
a237 1
.Pa /tmp
d240 1
a240 1
if set)
d267 1
a267 1
.Pa /tmp ,
@


1.26
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.25 2000/10/15 19:30:31 marc Exp $
d412 2
a413 1
NetBSD refinements.
@


1.25
log
@
add note that pkg_add is not to be used for system distribution files.
I'd like to reference some other doc/man page... any ideas as to what?
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.24 2000/07/18 22:02:52 espie Exp $
d407 1
a407 1
.Sh AUTHOR
@


1.24
log
@Summarily explain about the playpen and PKG_TMPDIR, so that guys
with no room in /var/tmp or weird installations (/var/tmp mounted noexec
can find out what to do)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.23 2000/07/06 04:15:08 aaron Exp $
d48 7
@


1.23
log
@Insert missing .El directives.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.22 2000/05/05 17:09:44 espie Exp $
d374 1
a374 1
.Bl -tag -width PKG_DBDIR
d389 3
d407 18
@


1.22
log
@Nip references to extract-in-place
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.21 2000/04/25 19:56:51 aaron Exp $
d389 1
@


1.21
log
@2.6 -> 2.7; deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.20 2000/04/15 02:15:19 aaron Exp $
d262 3
a264 13
A search is made for any
.Cm @@option
directives which control how the package is added to the system.
The only currently implemented option is
.Cm @@option extract-in-place ,
which causes the package to be extracted directly into its
prefix directory rather than moving it through a staging area in
.Pa /tmp .
.It
If
.Cm @@option extract-in-place
is enabled, the package is now extracted directly into its
final location, otherwise it is extracted into the staging area.
d299 2
a300 5
If
.Cm @@option extract-in-place
is not present in the packing list,
then it is used as a guide for moving (or copying, as necessary) files from
the staging area into their final locations.
@


1.20
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.19 2000/04/12 21:47:55 aaron Exp $
d58 1
a58 1
.Ic pkg_add -v ftp://ftp.openbsd.org/pub/OpenBSD/2.6/packages/i386/m4-1.4.tgz
d75 1
a75 1
	$ ftp ftp://ftp.openbsd.org/pub/OpenBSD/2.6/packages/i386
@


1.19
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.18 2000/03/19 17:57:09 aaron Exp $
d279 1
a279 1
.Xr pkg_create 1 ),
d318 1
a318 1
.Xr pkg_create 1 ),
@


1.18
log
@Remove hard sentence breaks. Add $OpenBSD$ tags where appropriate. Some other
cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.17 2000/03/02 18:33:30 aaron Exp $
d51 3
a53 4
.Dq .tgz
,
.Dq .tar.gz
, or 
@


1.17
log
@interactivly -> interactively (Germans can't spell) :-)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.16 2000/03/02 18:27:37 aaron Exp $
d56 2
a57 2
suffix) or an FTP location in the form of an URL. For example, the following
is valid:
d112 2
a113 2
Do not record the installation of a package.  This means
that you cannot deinstall it later, so only use this option if
d117 2
a118 1
installed or the requirements script fails.  Although
d127 2
a128 1
by this flag.  Note that only the first
d133 2
a134 1
which are absolute.  It is rare in any case to see more than one
d159 2
a160 1
directory is limited.  Be sure to leave some number of
d174 2
a175 1
mode.  This is a very specialized mode for running
d179 2
a180 1
mode.  When run in this mode,
d196 2
a197 1
mode.  This is a very specialized mode for running
d201 2
a202 1
mode.  When run in this mode,
d206 2
a207 1
from the standard input.  The complete packing list is also read from stdin,
d215 2
a216 1
mode. If you wish to use active mode instead, set the
d224 2
a225 1
passive mode ftp correctly. This is very rare since
d250 2
a251 2
with an already recorded as installed package. If it is,
installation is terminated.
d380 2
a381 1
option above).  This allows a package author to write a script
d394 3
a396 2
It should contain a series of entries separated by colons.  Each entry
consists of a directory name. The current directory may be indicated
@


1.16
log
@alternativly -> alternatively
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.15 2000/01/17 20:21:34 deraadt Exp $
d72 3
a74 2
Alternatively, it is possible to add packages interactivly from within
the ftp client.  For example, the following works:
@


1.15
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.14 1999/10/17 20:35:47 aaron Exp $
d72 1
a72 1
Alternativly, it is possible to add packages interactivly from within
@


1.14
log
@Remove some redundant .Pp.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.13 1999/10/17 16:27:47 provos Exp $
d89 1
a89 1
	ftp> get m4-1.4tgz "|pgk_add -v -"
@


1.13
log
@explain about using pkg_add interactivly from within the ftp client
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.12 1999/10/09 20:35:45 beck Exp $
a101 1
.Pp
@


1.12
log
@Band Aid fixes, polyglot of espies and mine:

  - ensure package files end in .tgz if not suffixed, but allow for .tar.gz and
uncompressed .tar as well.

  - make pkg_add take as many args as you can feed it. - "pkg_add *.tgz"
works now.

  - fix bug where realpath could fail and leave NULL in arg list.
  - fix bug where nonexistent package could fail and leave NULL in arg list.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.11 1999/10/07 22:22:58 aaron Exp $
d71 20
@


1.11
log
@Use -v option in the example; deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.10 1999/10/07 22:09:20 aaron Exp $
d52 4
@


1.10
log
@Much improved. Could use some more work though, I'm sure.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.9 1999/06/05 22:17:48 aaron Exp $
d55 1
a55 1
.Ic pkg_add ftp://ftp.openbsd.org/pub/OpenBSD/2.6/packages/i386/zsh-3.0.6.tgz
@


1.9
log
@remove trailing whitespace, some Nm cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.8 1999/04/21 21:27:49 aaron Exp $
d25 1
a25 1
.Nd a utility for installing software package distributions
d31 1
a31 1
.Ar pkg-name Op Ar pkg-name ...
d39 30
a68 2
.Sh WARNING
.Bf -emphasis
d72 6
a77 2
your system may be susceptible to ``trojan horses'' or other subtle
attacks from miscreants who create dangerous package files.
d79 1
a79 32
You are advised to verify the competence and identity of those who
provide installable package files.  For extra protection, use the
.Fl M
flag to extract the package file, and inspect its contents and scripts
to insure it poses no danger to your system's integrity.  Pay particular
attention to any +INSTALL, +DEINSTALL, +REQUIRE or +MTREE_DIRS files,
and inspect the +CONTENTS file for
.Cm @@cwd ,
.Cm @@mode
(check for setuid),
.Cm @@dirrm ,
.Cm @@exec ,
and
.Cm @@unexec
directives, and/or use the
.Xr pkg_info 1
command to examine the package file.
.Ef

.Sh OPTIONS
The following command line arguments are supported:
.Bl -tag -width indent
.It Ar pkg-name Op Ar ... pkg-name
The named packages are installed.  A package name of
.Dq \&-
will cause
.Nm
to read from stdin. If the packages are not found in the current
working directory,
.Nm
will search them in each directory named by
.Ev PKG_PATH .
d156 1
a156 1
the current staging area) to stdout where it may be filtered by a
d174 1
a174 1
from stdin.  The complete packing list is also read from stdin,
d178 3
a180 20
One or more
.Ar pkg-name
arguments may be specified, each being either a file containing the
package (these usually ending with the
.Dq .tgz
suffix) or a
URL pointing at a file available on an ftp site.  Thus you may
extract files directly from their anonymous ftp locations (e.g.
.Nm
ftp://ftp.freebsd.org/pub/FreeBSD/packages/shells/bash-1.14.4.tgz).
Note:  If you wish to use
.Bf -emphasis
active mode
.Ef
ftp in such transfers, set
the variable
.Ev FTPMODE
to
.Dq active
in your environment.  Otherwise, the more flexible
d182 1
a182 3
mode may be used (see
.Xr ftp 1
for more info on the
d184 3
a186 1
environment variable).  If
d194 1
a194 1
.Sh TECHNICAL DETAILS
d352 4
a355 2
.Ss PKG_PATH
The value of the
d357 2
a358 4
is used if a given package can't be found; it's usually set to
.Pa /usr/pkgsrc/packages/All .
The environment variable
should be a series of entries separated by colons.  Each entry
d361 3
a363 2
period.
.Ss PKG_DBDIR
d373 1
a373 1
.Sh AUTHORS
d388 1
a388 1
.Cm tar
d390 1
a390 1
invocations due to exec argument-space limitations--this depends on the
@


1.8
log
@seperate -> separate, people really need to learn how to spell this word
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.7 1998/12/16 02:47:52 aaron Exp $
d55 1
a55 1
.Cm @@mode 
d75 1
a75 1
working directory, 
d122 2
a123 2
as the input to 
.Xr mkdtemp 3 
d211 1
a211 1
.Nm 
d260 1
a260 1
script (see 
d305 2
a306 2
.Fl u 
.Fl f 
d309 3
a311 3
.Fl e 
.Fl p 
.Pa prefix 
d318 1
a318 1
flag or, if no 
d341 1
a341 1
Any package dependencies are recorded in the other packages' 
d400 1
a400 1
directives in the contents file, 
@


1.7
log
@more .Nm fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.6 1998/09/07 22:30:14 marc Exp $
d374 1
a374 1
should be a series of entries seperated by colons.  Each entry
@


1.6
log
@updated pkg_* tools.  Merged in many changes/improvements from NetBSD.
New features include md5 hash so pkg_delete won't remove files that have
changed and the ability to define conflicting packages, e.g. you can't
install both mh and nmh.  The ports tree will have to be updated to take
advantage of this.

Let me know of any problems, real or imagined :-)
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.5 1998/09/06 22:23:18 aaron Exp $
d21 1
a21 1
.Dt pkg_add 1
d27 1
a27 1
.Nm
d31 1
a31 1
.Ar pkg-name [pkg-name ...]
a38 1

d69 4
a72 2
.It Ar pkg-name [... pkg-name]
The named packages are installed.  A package name of - will cause
d108 3
a110 2
to have control over *all* directory transitions, then you
may then wish to look into the use of
d124 2
a125 1
when creating a ``staging area.''
d131 3
a133 2
directory is limited.  Be sure to leave some number of `X' characters
for
d180 3
a182 1
package (these usually ending with the ``.tgz'' suffix) or a
d193 1
a193 3
.Bf -emphasis
FTPMODE
.Ef
d197 2
a198 1
PASSIVE mode may be used.  (see
d202 1
a202 1
environment variable.)  If
d206 1
a206 4
.Bf -emphasis
passive mode
.Ef
ftp correctly.  This is very rare since
d208 1
a208 8
will try
.Bf -emphasis
active mode
.Ef
ftp if the server refuses a
.Bf -emphasis
passive mode
.Ef
d212 7
a218 2
extracts each package's "packing list"
into a special staging directory in /tmp (or $PKG_TMPDIR if set)
d239 1
a239 1
If any of these required packages is not currently installed,
d268 2
a269 2
check.
(The keyword is useful only to scripts which serve multiple functions).
d302 1
d313 1
d344 3
a346 1
(if the environment variable PKG_DBDIR is set, this overrides the
d371 1
a371 1
is used if a given package can't be found, it's usually set to
@


1.5
log
@More man page fixes. Spelling, grammar, some typos. Lots of double-word
occurrences squashed as well.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.4 1998/04/25 05:09:06 millert Exp $
d25 1
a25 1
.Nd a utility for installing software package distributions.
d68 1
a68 1
The following command line arguments are supported.
d73 5
a77 1
to read from stdin.
d79 1
a79 2
Turns on verbose output.
.Em "Optional."
a81 1
.Em "Optional."
a84 1
.Em "Optional."
a88 1
.Em "Optional."
d90 5
a94 3
Forces installation to proceed even if prerequisite packages are not
installed or the requirements script fails.
.Em "Optional."
d96 1
a96 1
Sets
d105 4
a108 3
which are absolute.  It is rare, in any case, to see more than one
directory transition made, but when such is the case you
may then wish to look into the use of the
a116 1
.Em "Optional."
d127 1
a127 1
.Pa /tmp
a137 1
.Em "Optional."
a180 1
.Pp
d216 5
a220 4
.Nm
is fairly simple.  It extracts each packages' "packing list"
into a special staging directory in /tmp (or $PKG_TMPDIR), parses it,
then runs through the following sequence to fully extract the contents:
d223 3
a225 2
Check if the package is already recorded as installed.  If so,
terminate installation.
d227 8
a234 1
Scan all the package dependencies (from
d238 5
a242 2
and make sure each one is met. If not, print the missing dependencies and
terminate the installation.
d244 1
a244 1
Search for any
d247 5
a251 4
At the time of this writing, the only currently implemented option is
.Cm @@option extract-in-place
which will cause the package to be extracted direcly into its
prefix directory without moving through a staging area in /tmp.
d260 1
a260 1
file (see 
d262 13
a274 10
then execute it with the following arguments:
.Bd -filled -offset indent -compact
.Ar <pkg-name>
.Ar INSTALL
.Ed
where
.Ar <pkg-name>
is the name of the package in question and
.Ar INSTALL
is simply a keyword denoting that this is an installation requirements check.
d276 12
a287 1
If an
d289 1
a289 10
script exists for the package, it is then executed with the following arguments:
.Bd -filled -offset indent -compact
.Ar <pkg-name>
.Ar PRE-INSTALL 
.Ed
where
.Ar <pkg-name>
is the name of the package in question and
.Ar PRE-INSTALL
is a keyword denoting that this is the preinstallation phase.
d293 2
a294 3
is not used, then the packing list (this is the
.Pa +CONTENTS
file) is now used as a guide for moving (or copying, as necessary) files from
d299 1
a299 3
file (see the
.Fl m
option to
d301 1
a301 1
then mtree is invoked as
d324 8
a331 9
script exists for the package, it is then executed as 
.Bd -filled -offset indent -compact
.Cm <script>
.Ar <pkg-name>
.Ar POST-INSTALL 
.Ed
This all allows you to write a single
.Ar install
script that does both ``before and after'' actions.
d349 5
a353 1
All the scripts are called with the environment variable
d363 14
d378 2
a379 1
.Xr ftp 1 ,
d383 1
a383 3
.Xr mtree 8 ,
.Xr pkg_create 1 ,
.Xr pkg_delete 1 .
d387 1
a387 1
most of the work
d389 1
a389 1
refined it for NetBSD
@


1.4
log
@Use mkdtemp(3), not mktemp(3).
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.3 1998/04/13 14:26:15 millert Exp $
d367 1
a367 1
and the link names are extracted with a single
@


1.3
log
@fixup active vs. passive info
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.2 1998/04/07 07:11:32 deraadt Exp $
d119 1
a119 1
.Xr mktemp 3 
d128 1
a128 1
.Xr mktemp 3
d348 1
a348 1
.Xr mktemp 3 ,
@


1.2
log
@active mode is way busted; default to passive
@
text
@d1 1
a1 1
.\"	$OpenBSD: pkg_add.1,v 1.1 1996/06/04 07:56:04 niklas Exp $
d22 1
a22 1
.Os FreeBSD 2.0
d171 2
a172 1
On or more
d180 1
d183 1
a183 1
passive mode
d188 1
a188 1
FTP_ACTIVE_MODE
d190 8
a197 2
to some value in your environment.  Otherwise, the more standard
PASSIVE mode may be used.  If
d200 11
a210 1
it may be because you have a firewall that demands the usage of
d214 1
a214 1
ftp.
d346 1
@


1.1
log
@add package tools from FreeBSD
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d186 1
a186 1
FTP_PASSIVE_MODE
d189 1
a189 1
ACTIVE mode may be used.  If
@

