head	1.14;
access;
symbols
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.14
date	2004.05.28.20.15.48;	author brad;	state dead;
branches;
next	1.13;

1.13
date	2003.08.21.20.24.56;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.04.17.31.19;	author avsm;	state Exp;
branches;
next	1.11;

1.11
date	2003.04.04.08.56.01;	author avsm;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.07.20.57.23;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2001.04.08.16.45.47;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.10.18.44.31;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	99.03.08.02.01.02;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	98.11.22.23.22.41;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	98.11.19.04.12.55;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	98.10.13.23.09.51;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.09.07.22.30.16;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	96.06.04.08.43.40;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.07.56.10;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.14
log
@bye bye old package tools.

ok deraadt@@
@
text
@/*	$OpenBSD: show.c,v 1.13 2003/08/21 20:24:56 espie Exp $	*/

#ifndef lint
static const char rcsid[] = "$OpenBSD: show.c,v 1.13 2003/08/21 20:24:56 espie Exp $";
#endif

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 23 Aug 1993
 *
 * Various display routines for the info module.
 *
 */

#include <err.h>

#include "lib.h"
#include "info.h"

/* structure to define entries for the "show table" */
typedef struct show_t {
	pl_ent_t	sh_type;	/* type of entry */
	char		*sh_quiet;	/* message when quiet */
	char		*sh_verbose;	/* message when verbose */
} show_t;

/* the entries in this table must be ordered the same as pl_ent_t constants */
static show_t	showv[] = {
	{	PLIST_FILE,	"%s",		"File: %s" },
	{	PLIST_CWD,	"@@cwd %s",	"\tCWD to: %s" },
	{	PLIST_CMD,	"@@exec %s",	"\tEXEC '%s'" },
	{	PLIST_CHMOD,	"@@chmod %s",	"\tCHMOD to %s" },
	{	PLIST_CHOWN,	"@@chown %s",	"\tCHOWN to %s" },
	{	PLIST_CHGRP,	"@@chgrp %s",	"\tCHGRP to %s" },
	{	PLIST_COMMENT,	"@@comment %s",	"\tComment: %s" },
	{	PLIST_IGNORE,	NULL,	NULL },
	{	PLIST_NAME,	"@@name %s",	"\tPackage name: %s" },
	{	PLIST_UNEXEC,	"@@unexec %s",	"\tUNEXEC '%s'" },
	{	PLIST_SRC,	"@@srcdir: %s",	"\tSRCDIR to: %s" },
	{	PLIST_DISPLAY,	"@@display %s",	"\tInstall message file: %s" },
	{	PLIST_PKGDEP,	"@@pkgdep %s",	"\tPackage depends on: %s" },
	{	PLIST_MTREE,	"@@mtree %s",	"\tPackage mtree file: %s" },
	{	PLIST_DIR_RM,	"@@dirrm %s",	"\tDeinstall directory remove: %s" },
	{	PLIST_OPTION,	"@@option %s",	"\tPackage has option: %s" },
	{	PLIST_PKGCFL,	"@@pkgcfl %s",	"\tPackage conflicts with: %s" },
	{	PLIST_EXTRA,	"@@extra %s",	"\tExtra files: %s" },
	{	PLIST_EXTRAUNEXEC,	
				"@@extraunexec %s",	
						"\tExtra UNEXEC: %s" },
	{	-1,		NULL,		 NULL }
};

void
show_file(char *title, char *fname)
{
	FILE *fp;
	char line[1024];
	int n;

	if (!Quiet) {
		printf("%s%s", InfoPrefix, title);
	}
	if ((fp = fopen(fname, "r")) == (FILE *) NULL) {
		printf("ERROR: show_file: Can't open '%s' for reading!\n", fname);
	} else {
		while ((n = fread(line, 1, 1024, fp)) != 0) {
			fwrite(line, 1, n, stdout);
		}
		(void) fclose(fp);
	}
	printf("\n");	/* just in case */
}

void
show_index(char *title, char *fname)
{
	FILE *fp;
	char line[MAXINDEXSIZE+2];

	strlcpy(line, "???\n", sizeof(line));

	if (!Quiet) {
		printf("%s%-18s ", InfoPrefix, title);
	}
	if ((fp = fopen(fname, "r")) == (FILE *) NULL) {
		pwarnx("show_file (%s): can't open '%s' for reading", title, fname);
	} 
	else {
		if (fgets(line, MAXINDEXSIZE+1, fp)) {
			int  line_length = strlen(line);

			if (line[line_length-1] != '\n') {
				line[line_length] = '\n';
				line[line_length+1] = 0;
			}
		}
		(void) fclose(fp);
	}
        (void) fputs(line, stdout);
}

/* Show a packing list item type.  If type is PLIST_SHOW_ALL, show all */
void
show_plist(char *title, package_t *plist, pl_ent_t type)
{
    plist_t *p;
    Boolean ign;

    if (!Quiet) {
	printf("%s%s", InfoPrefix, title);
    }
    for (ign = FALSE, p = plist->head; p ; p = p->next) {
	if (p->type == type || type == PLIST_SHOW_ALL) {
		switch(p->type) {
		case PLIST_FILE:
			printf(Quiet ? showv[p->type].sh_quiet : showv[p->type].sh_verbose, p->name);
			if (ign) {
				if (!Quiet) {
					printf(" (ignored)");
				}
				ign = FALSE;
			}
			break;
		case PLIST_CHMOD:
		case PLIST_CHOWN:
		case PLIST_CHGRP:
			printf(Quiet ? showv[p->type].sh_quiet : showv[p->type].sh_verbose,
				p->name ? p->name : "(clear default)");
			break;
		case PLIST_IGNORE:
			ign = TRUE;
			break;
		case PLIST_CWD:
		case PLIST_CMD:
		case PLIST_SRC:
		case PLIST_UNEXEC:
		case PLIST_COMMENT:
		case PLIST_NAME:
		case PLIST_DISPLAY:
		case PLIST_PKGDEP:
		case PLIST_MTREE:
		case PLIST_DIR_RM:
		case PLIST_OPTION:
		case PLIST_PKGCFL:
		case PLIST_EXTRA:
		case PLIST_EXTRAUNEXEC:
			printf(Quiet ? showv[p->type].sh_quiet : showv[p->type].sh_verbose, p->name);
			break;
		default:
			pwarnx("unknown command type %d (%s)", p->type, p->name);
		}
		(void) fputc('\n', stdout);
	}
    }
}

/* Show all files in the packing list (except ignored ones) */
void
show_files(char *title, package_t *plist)
{
	plist_t	*p;
	Boolean	ign;
	char	*dir = ".";

	if (!Quiet) {
		printf("%s%s", InfoPrefix, title);
	}
	for (ign = FALSE, p = plist->head; p ; p = p->next) {
		switch(p->type) {
		case PLIST_FILE:
			if (!ign) {
				printf("%s/%s\n", dir, p->name);
			}
			ign = FALSE;
			break;
		case PLIST_CWD:
			dir = p->name;
			break;
		case PLIST_IGNORE:
			ign = TRUE;
			break;
		default:
			break;
		}
	}
}
@


1.13
log
@New keywords: @@extra and @@extraunexec.
Used to record extra files (configuration) and action, that will only
be taken with pkg_delete -c.
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.12 2003/07/04 17:31:19 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: show.c,v 1.12 2003/07/04 17:31:19 avsm Exp $";
@


1.12
log
@'static const char rcsid[]' to make it -Wall clean
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.11 2003/04/04 08:56:01 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: show.c,v 1.11 2003/04/04 08:56:01 avsm Exp $";
d58 4
d157 2
@


1.11
log
@some more strcpy/strcat -> strlcpy/strlcat conversions
ok and tweaks by ho@@
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.10 2001/11/07 20:57:23 espie Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.10 2001/11/07 20:57:23 espie Exp $";
@


1.10
log
@Say goodbye to @@ignore_inst, we don't use it, and it doesn't even work in
any sane way...
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.9 2001/04/08 16:45:47 espie Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.9 2001/04/08 16:45:47 espie Exp $";
d88 1
a88 1
	strcpy(line, "???\n");
@


1.9
log
@Better error messages: pwarnx function, which works like pwarn, except
it shows a current package name along with the program name, e.g.,
pkg_add(foo-3.0): some error occurred.

A few messages now bear redundant pkgnames, which is much better than
doing pkg_add * and being informed that something went slightly wrong
somewhere...
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.8 2000/04/10 18:44:31 espie Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.8 2000/04/10 18:44:31 espie Exp $";
a55 2
	{	PLIST_IGNORE_INST,	"@@ignore_inst ??? doesn't belong here",
		"\tIgnore next file installation directive (doesn't belong)" },
a138 4
			ign = TRUE;
			break;
		case PLIST_IGNORE_INST:
			printf(Quiet ? showv[p->type].sh_quiet : showv[p->type].sh_verbose, p->name);
@


1.8
log
@Speed up simple pkg_info: don't retrieve information we don't use.
Improve pkg list display slightly, insert space between pkg name and info
always (requested by aaron@@).
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.7 1999/03/08 02:01:02 marc Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.7 1999/03/08 02:01:02 marc Exp $";
d96 1
a96 1
		warnx("show_file (%s): can't open '%s' for reading", title, fname);
d162 1
a162 1
			warnx("unknown command type %d (%s)", p->type, p->name);
@


1.7
log
@Handle comments that do not end in \n correctly; WHS <wouters@@cistron.nl>
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.6 1998/11/22 23:22:41 espie Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.6 1998/11/22 23:22:41 espie Exp $";
d93 1
a93 1
		printf("%s%-19s", InfoPrefix, title);
@


1.6
log
@fixed typo, noticed by jbernard@@ox.mines.edu (netbsd/pkg/6481)
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.5 1998/11/19 04:12:55 espie Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.5 1998/11/19 04:12:55 espie Exp $";
d100 5
a104 2
			if (line[MAXINDEXSIZE-1] != '\n') {
				line[MAXINDEXSIZE] = '\n';
a105 1
			line[MAXINDEXSIZE+1] = 0;
@


1.5
log
@- fix pkg_info to give more rational summary when COMMENTS files are weird.
- warn when COMMENT > 60 characters.
*** In one month we turn this into an error -> fix packages files ***
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.4 1998/10/13 23:09:51 marc Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.4 1998/10/13 23:09:51 marc Exp $";
d42 1
a42 1
	{	PLIST_CWD,	"@@cwd: %s",	"\tCWD to: %s" },
@


1.4
log
@Sync with recent NetBSD changes:
- use snprintf in place of sprintf
- code cleanup
- Package -> package_t, PackingList -> plist_t
Also: remove files that haven't been linked in a while
Pass -q to mtree so it is quiet in the presence of symlinks
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.3 1998/09/07 22:30:16 marc Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.3 1998/09/07 22:30:16 marc Exp $";
d90 2
d93 1
a93 1
		printf("%s%s", InfoPrefix, title);
d96 8
a103 6
		warnx("show_file: can't open '%s' for reading", fname);
		return;
	}
	if (fgets(line, MAXINDEXSIZE+1, fp)) {
		if (line[MAXINDEXSIZE-1] != '\n') {
			line[MAXINDEXSIZE] = '\n';
d105 1
a105 2
		line[MAXINDEXSIZE+1] = 0;
		(void) fputs(line, stdout);
d107 1
a107 1
	(void) fclose(fp);
@


1.3
log
@updated pkg_* tools.  Merged in many changes/improvements from NetBSD.
New features include md5 hash so pkg_delete won't remove files that have
changed and the ability to define conflicting packages, e.g. you can't
install both mh and nmh.  The ports tree will have to be updated to take
advantage of this.

Let me know of any problems, real or imagined :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.2 1996/06/04 08:43:40 niklas Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.2 1996/06/04 08:43:40 niklas Exp $";
d32 31
d66 3
a68 3
    FILE *fp;
    char line[1024];
    int n;
d70 12
a81 11
    if (!Quiet)
	printf("%s%s", InfoPrefix, title);
    fp = fopen(fname, "r");
    if (!fp)
	printf("ERROR: show_file: Can't open '%s' for reading!\n", fname);
    else {
	while ((n = fread(line, 1, 1024, fp)) != 0)
	    fwrite(line, 1, n, stdout);
	fclose(fp);
    }
    printf("\n");	/* just in case */
d87 2
a88 2
    FILE *fp;
    char line[MAXINDEXSIZE+2];
d90 15
a104 14
    if (!Quiet)
        printf("%s%s", InfoPrefix, title);
    fp = fopen(fname, "r");
    if (!fp) {
        warnx("show_file: can't open '%s' for reading", fname);
        return;
    }
    if(fgets(line, MAXINDEXSIZE+1, fp)) {
	if(line[MAXINDEXSIZE-1] != '\n')
          line[MAXINDEXSIZE] = '\n';
	line[MAXINDEXSIZE+1] = 0;
	fputs(line, stdout);
    }
    fclose(fp);
d107 1
a107 1
/* Show a packing list item type.  If type is -1, show all */
d109 1
a109 1
show_plist(char *title, Package *plist, plist_t type)
d111 2
a112 2
    PackingList p;
    Boolean ign = FALSE;
d114 1
a114 1
    if (!Quiet)
d116 44
a159 85
    p = plist->head;
    while (p) {
	if (p->type != type && type != -1) {
	    p = p->next;
	    continue;
	}
	switch(p->type) {
	case PLIST_FILE:
	    if (ign) {
		printf(Quiet ? "%s\n" : "File: %s (ignored)\n", p->name);
		ign = FALSE;
	    }
	    else
		printf(Quiet ? "%s\n" : "File: %s\n", p->name);
	    break;

	case PLIST_CWD:
	    printf(Quiet ? "@@cwd %s\n" : "\tCWD to %s\n", p->name);
	    break;

	case PLIST_SRC:
	    printf(Quiet ? "@@srcdir %s\n" : "\tSRCDIR to %s\n", p->name);
	    break;

	case PLIST_CMD:
	    printf(Quiet ? "@@exec %s\n" : "\tEXEC '%s'\n", p->name);
	    break;

	case PLIST_UNEXEC:
	    printf(Quiet ? "@@unexec %s\n" : "\tUNEXEC '%s'\n", p->name);
	    break;

	case PLIST_CHMOD:
	    printf(Quiet ? "@@chmod %s\n" : "\tCHMOD to %s\n",
		   p->name ? p->name : "(clear default)");
	    break;

	case PLIST_CHOWN:
	    printf(Quiet ? "@@chown %s\n" : "\tCHOWN to %s\n",
		   p->name ? p->name : "(clear default)");
	    break;

	case PLIST_CHGRP:
	    printf(Quiet ? "@@chgrp %s\n" : "\tCHGRP to %s\n",
		   p->name ? p->name : "(clear default)");
	    break;

	case PLIST_COMMENT:
	    printf(Quiet ? "@@comment %s\n" : "\tComment: %s\n", p->name);
	    break;

	case PLIST_IGNORE:
	    ign = TRUE;
	    break;

	case PLIST_IGNORE_INST:
	    printf(Quiet ? "@@ignore_inst ??? doesn't belong here.\n" :
		   "\tIgnore next file installation directive (doesn't belong)\n");
	    ign = TRUE;
	    break;

	case PLIST_NAME:
	    printf(Quiet ? "@@name %s\n" : "\tPackage name: %s\n", p->name);
	    break;

	case PLIST_DISPLAY:
	    printf(Quiet ? "@@display %s\n" : "\tInstall message file: %s\n", p->name);
	    break;

	case PLIST_PKGDEP:
	    printf(Quiet ? "@@pkgdep %s\n" : "\tPackage depends on: %s\n", p->name);
	    break;

	case PLIST_MTREE:
	    printf(Quiet ? "@@mtree %s\n" : "\tPackage mtree file: %s\n", p->name);
	    break;

	case PLIST_DIR_RM:
	    printf(Quiet ? "@@dirrm %s\n" : "\tDeinstall directory remove: %s\n", p->name);
	    break;

	default:
	    cleanup(0);
	    errx(2, "unknown command type %d (%s)", p->type, p->name);
	    break;
a160 1
	p = p->next;
d166 1
a166 1
show_files(char *title, Package *plist)
d168 3
a170 3
    PackingList p;
    Boolean ign = FALSE;
    char *dir = ".";
d172 20
a191 21
    if (!Quiet)
	printf("%s%s", InfoPrefix, title);
    p = plist->head;
    while (p) {
	switch(p->type) {
	case PLIST_FILE:
	    if (!ign)
		printf("%s/%s\n", dir, p->name);
	    ign = FALSE;
	    break;

	case PLIST_CWD:
	    dir = p->name;
	    break;

	case PLIST_IGNORE:
	    ign = TRUE;
	    break;

	default:
	    break;
a192 2
	p = p->next;
    }
@


1.2
log
@Oops, screwed up the $OpenBSD$ IDs
@
text
@d1 1
a1 1
/*	$OpenBSD: show.c,v 1.1 1996/06/04 07:56:10 niklas Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.1 1996/06/04 07:56:10 niklas Exp $";
d27 2
d45 1
a45 1
	while (n = fread(line, 1, 1024, fp))
a56 1
    int i,n;
d62 1
a62 1
        whinge("show_file: Can't open '%s' for reading.", fname);
d111 4
d165 2
a166 1
	    barf("Unknown command type %d (%s)\n", p->type, p->name);
d198 3
@


1.1
log
@add package tools from FreeBSD
@
text
@d1 2
a2 1
#	$OpenBSD$
d4 1
a4 1
static const char *rcsid = "$OpenBSD: show.c,v 1.7 1995/07/30 01:08:34 ache Exp $";
@
