head	1.15;
access;
symbols
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.11.0.6
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.4
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.15
date	2004.05.28.20.15.48;	author brad;	state dead;
branches;
next	1.14;

1.14
date	2003.08.21.20.24.57;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2003.08.01.08.56.01;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2003.04.04.08.56.01;	author avsm;	state Exp;
branches;
next	1.11;

1.11
date	2001.11.07.20.57.24;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.07.20.51.08;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.06.20.56.35;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2001.04.08.16.45.47;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2001.04.02.10.13.40;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.24.00.20.04;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.10.09.20.35.46;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	98.11.19.04.12.55;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	98.10.13.23.09.53;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.09.07.22.30.16;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.07.56.13;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.15
log
@bye bye old package tools.

ok deraadt@@
@
text
@/* $OpenBSD: lib.h,v 1.14 2003/08/21 20:24:57 espie Exp $ */

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * Include and define various things wanted by the library routines.
 *
 */

#ifndef _INST_LIB_LIB_H_
#define _INST_LIB_LIB_H_

/* Includes */
#include <sys/param.h>
#include <sys/stat.h>
#include <sys/file.h>

#include <ctype.h>
#include <dirent.h>
#include <stdio.h>
#include <stdlib.h>
#include <stdarg.h>
#include <string.h>
#include <unistd.h>

/* Macros */
#define SUCCESS	(0)
#define	FAIL	(-1)

#ifndef TRUE
#define TRUE	(1)
#endif

#ifndef FALSE
#define FALSE	(0)
#endif

#define YES		2
#define NO		1

/* Usually "rm", but often "echo" during debugging! */
#define REMOVE_CMD	"rm"

/* Usually "rm", but often "echo" during debugging! */
#define RMDIR_CMD	"rmdir"

/* Where we put logging information by default, else ${PKG_DBDIR} if set */
#define DEF_LOG_DIR		"/var/db/pkg"
/* just in case we change the environment variable name */
#define PKG_DBDIR		"PKG_DBDIR"

/* The names of our "special" files */
#define CONTENTS_FNAME		"+CONTENTS"
#define COMMENT_FNAME		"+COMMENT"
#define DESC_FNAME		"+DESC"
#define INSTALL_FNAME		"+INSTALL"
#define DEINSTALL_FNAME		"+DEINSTALL"
#define REQUIRE_FNAME		"+REQUIRE"
#define REQUIRED_BY_FNAME	"+REQUIRED_BY"
#define DISPLAY_FNAME		"+DISPLAY"
#define MTREE_FNAME		"+MTREE_DIRS"

#define CMD_CHAR		'@@'	/* prefix for extended PLIST cmd */

/* The name of the "prefix" environment variable given to scripts */
#define PKG_PREFIX_VNAME	"PKG_PREFIX"

/* maximum size of comment that will fit on one line */
#ifndef MAXINDEXSIZE
#define MAXINDEXSIZE 60
#endif

/* enumerated constants for plist entry types */
typedef enum pl_ent_t {
	PLIST_SHOW_ALL = -1,
	PLIST_FILE,
	PLIST_CWD,
	PLIST_CMD,
	PLIST_CHMOD,
	PLIST_CHOWN,
	PLIST_CHGRP,
	PLIST_COMMENT,
	PLIST_IGNORE,
	PLIST_NAME,
	PLIST_UNEXEC,
	PLIST_SRC,
	PLIST_DISPLAY,
	PLIST_PKGDEP,
	PLIST_MTREE,
	PLIST_DIR_RM,
	PLIST_OPTION,
	PLIST_PKGCFL,
	PLIST_EXTRA,
	PLIST_EXTRAUNEXEC,
	PLIST_NEWDEP,
	PLIST_LIBDEP
} pl_ent_t;

/* Types */
typedef unsigned int Boolean;

/* this structure describes a packing list entry */
typedef struct plist_t {
	struct plist_t	*prev;		/* previous entry */
	struct plist_t	*next;		/* next entry */
	char		*name;		/* name of entry */
	Boolean		marked;		/* whether entry has been marked */
	pl_ent_t	type;		/* type of entry */
} plist_t;

/* this structure describes a package's complete packing list */
typedef struct package_t {
	plist_t		*head;		/* head of list */
	plist_t		*tail;		/* tail of list */
} package_t;

enum {
	ChecksumLen = 16,
	LegibleChecksumLen = 33
};

/* type of function to be handed to findmatchingname; return value of this
 * is currently ignored */
typedef int (*matchfn)(const char *found, char *data, int len);

/* Prototypes */
/* Misc */
int		vsystem(const char *, ...);
void		cleanup(int);
char		*make_playpen(char *, size_t, size_t);
char		*where_playpen(void);
void		leave_playpen(char *);
off_t		min_free(char *);
void            save_dirs(char **c, char **p);
void            restore_dirs(char *c, char *p);

/* String */
char 		*get_dash_string(char **);
char		*copy_string(char *);
Boolean		suffix(char *, char *);
void		nuke_suffix(char *);
void		str_lowercase(char *);
char		*basename_of(char *);
char		*dirname_of(const char *);
char		*strconcat(char *, char *);
int		pmatch(const char *, const char *);
int		findmatchingname(const char *, const char *, matchfn, char *, int); /* doesn't really belong here */
char		*findbestmatchingname(const char *, const char *); /* neither */
int		ispkgpattern(const char *);
char		*strnncpy(char *to, size_t tosize, char *from, size_t cc);

/* File */
Boolean		fexists(const char *);
Boolean		isdir(const char *);
Boolean		islinktodir(const char *);
Boolean		isemptydir(const char *fname);
Boolean		isemptyfile(const char *fname);
Boolean         isfile(const char *);
Boolean		isURL(const char *);
char		*ensure_tgz(char *);
char		*fileGetURL(char *, char *);
char		*fileURLFilename(char *, char *, int);
char		*fileURLHost(char *, char *, int);
char		*fileFindByPath(char *, char *);
char		*fileGetContents(char *);
Boolean		make_preserve_name(char *, size_t, char *, char *);
void		write_file(char *, char *);
void		copy_file(char *, char *, char *);
void		move_file(char *, char *, char *);
void		copy_hierarchy(char *, char *, Boolean);
int		delete_hierarchy(char *, Boolean, Boolean);
int		unpack(char *, char *);
int		format_cmd(char *, size_t , const char *, const char *,
    const char *);

/* Packing list */
plist_t		*new_plist_entry(void);
plist_t		*last_plist(package_t *);
plist_t		*find_plist(package_t *, pl_ent_t);
char		*find_plist_option(package_t *, char *name);
void		plist_delete(package_t *, Boolean, pl_ent_t, char *);
void		free_plist(package_t *);
void		mark_plist(package_t *);
void		csum_plist_entry(char *, plist_t *);
void		add_plist(package_t *, pl_ent_t, char *);
void		add_plist_top(package_t *, pl_ent_t, char *);
void		delete_plist(package_t *pkg, Boolean all, pl_ent_t type, char *name);
void		write_plist(package_t *, FILE *);
void		read_plist(package_t *, FILE *);
int		plist_cmd(char *, char **);
int		delete_package(Boolean, Boolean, Boolean, Boolean, package_t *);

/* For all */
int		pkg_perform(char **);


void		set_pkg(char *);
void 		pwarnx(const char *, ...);
void 		pwarn(const char *, ...);

/* Externs */
extern Boolean	Verbose;
extern Boolean	Fake;
extern Boolean  Force;

#endif /* _INST_LIB_LIB_H_ */
@


1.14
log
@New keywords: @@extra and @@extraunexec.
Used to record extra files (configuration) and action, that will only
be taken with pkg_delete -c.
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.13 2003/08/01 08:56:01 espie Exp $ */
@


1.13
log
@Add -q flag to pkg_delete: don't check md5 before removing.
Useful for bulk-package builders who want to clean /usr/local quickly.
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.12 2003/04/04 08:56:01 avsm Exp $ */
d106 2
d166 7
a172 8
Boolean		fexists(char *);
Boolean		isdir(char *);
Boolean		islinktodir(char *);
Boolean		isemptydir(char *fname);
Boolean		isemptyfile(char *fname);
Boolean         isfile(char *);
Boolean		isempty(char *);
Boolean		isURL(char *);
d204 1
a204 1
int		delete_package(Boolean, Boolean, Boolean, package_t *);
d212 1
@


1.12
log
@some more strcpy/strcat -> strlcpy/strlcat conversions
ok and tweaks by ho@@
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.11 2001/11/07 20:57:24 espie Exp $ */
d203 1
a203 1
int		delete_package(Boolean, Boolean, package_t *);
@


1.11
log
@Say goodbye to @@ignore_inst, we don't use it, and it doesn't even work in
any sane way...
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.10 2001/11/07 20:51:08 espie Exp $ */
d135 1
a135 1
typedef int (*matchfn)(const char *found, char *data);
d158 1
a158 1
int		findmatchingname(const char *, const char *, matchfn, char *); /* doesn't really belong here */
@


1.10
log
@Recognize libdepend keyword.
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.9 2001/06/06 20:56:35 espie Exp $ */
a103 1
	PLIST_IGNORE_INST,
@


1.9
log
@Let set_pkg kill  trailing / in pkgname.

Saves poor angelos from getting his dependencies screwed when he does
pkg_delete pkg_name/

Ok angelos@@
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.8 2001/04/08 16:45:47 espie Exp $ */
d107 2
a108 1
	PLIST_NEWDEP
@


1.8
log
@Better error messages: pwarnx function, which works like pwarn, except
it shows a current package name along with the program name, e.g.,
pkg_add(foo-3.0): some error occurred.

A few messages now bear redundant pkgnames, which is much better than
doing pkg_add * and being informed that something went slightly wrong
somewhere...
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.7 2001/04/02 10:13:40 espie Exp $ */
d209 1
a209 1
void		set_pkg(const char *);
@


1.7
log
@Handle for newdepend.
- recognize the keyword,
- pass all packing lists to `pkg dependencies solve' for rewriting.

pkg dependencies solve is a no-op in the absence of newdepends.

With newdepends, it rewrites @@newdepends -> @@pkgdep on the fly, depending
on what's actually installed on the machine.
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.6 2000/03/24 00:20:04 espie Exp $ */
d207 4
@


1.6
log
@Handle expansion sequences in @@exec better (let the expander decide whether
it needs a file name instead of assuming we always need one).

Sent to *quite a few* people, comments by drahn@@... guys, wake up !!!
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.5 1999/10/09 20:35:46 beck Exp $ */
d106 2
a107 1
	PLIST_PKGCFL
@


1.5
log
@Band Aid fixes, polyglot of espies and mine:

  - ensure package files end in .tgz if not suffixed, but allow for .tar.gz and
uncompressed .tar as well.

  - make pkg_add take as many args as you can feed it. - "pkg_add *.tgz"
works now.

  - fix bug where realpath could fail and leave NULL in arg list.
  - fix bug where nonexistent package could fail and leave NULL in arg list.
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.4 1998/11/19 04:12:55 espie Exp $ */
d184 2
a185 1
void		format_cmd(char *, size_t , char *, char *, char *);
@


1.4
log
@- fix pkg_info to give more rational summary when COMMENTS files are weird.
- warn when COMMENT > 60 characters.
*** In one month we turn this into an error -> fix packages files ***
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.3 1998/10/13 23:09:53 marc Exp $ */
d171 1
@


1.3
log
@Sync with recent NetBSD changes:
- use snprintf in place of sprintf
- code cleanup
- Package -> package_t, PackingList -> plist_t
Also: remove files that haven't been linked in a while
Pass -q to mtree so it is quiet in the presence of symlinks
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.2 1998/09/07 22:30:16 marc Exp $ */
d80 5
@


1.2
log
@updated pkg_* tools.  Merged in many changes/improvements from NetBSD.
New features include md5 hash so pkg_delete won't remove files that have
changed and the ability to define conflicting packages, e.g. you can't
install both mh and nmh.  The ports tree will have to be updated to take
advantage of this.

Let me know of any problems, real or imagined :-)
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.1 1996/06/04 07:56:13 niklas Exp $ */
d81 22
a102 8
enum _plist_t {
    PLIST_FILE, PLIST_CWD, PLIST_CMD, PLIST_CHMOD,
    PLIST_CHOWN, PLIST_CHGRP, PLIST_COMMENT, PLIST_IGNORE,
    PLIST_NAME, PLIST_UNEXEC, PLIST_SRC, PLIST_DISPLAY,
    PLIST_PKGDEP, PLIST_MTREE, PLIST_DIR_RM, PLIST_IGNORE_INST,
    PLIST_OPTION, PLIST_PKGCFL
};
typedef enum _plist_t plist_t;
d107 18
a124 5
struct _plist {
    struct _plist *prev, *next;
    char *name;
    Boolean marked;
    plist_t type;
a125 1
typedef struct _plist *PackingList;
d127 3
a129 4
struct _pack {
    struct _plist *head, *tail;
};
typedef struct _pack Package;
d135 1
a135 1
char		*make_playpen(char *, size_t);
d139 2
d149 1
d151 5
d171 1
a171 1
Boolean		make_preserve_name(char *, int, char *, char *);
d178 1
a178 7
void		format_cmd(char *, char *, char *, char *);

/* Msg */
void		upchuck(const char *);
void		barf(const char *, ...);
void		whinge(const char *, ...);
Boolean		y_or_n(Boolean, const char *, ...);
d181 13
a193 13
PackingList	new_plist_entry(void);
PackingList	last_plist(Package *);
PackingList	find_plist(Package *, plist_t);
char		*find_plist_option(Package *, char *name);
void		plist_delete(Package *, Boolean, plist_t, char *);
void		free_plist(Package *);
void		mark_plist(Package *);
void		csum_plist_entry(char *, PackingList);
void		add_plist(Package *, plist_t, char *);
void		add_plist_top(Package *, plist_t, char *);
void		delete_plist(Package *pkg, Boolean all, plist_t type, char *name);
void		write_plist(Package *, FILE *);
void		read_plist(Package *, FILE *);
d195 1
a195 1
int		delete_package(Boolean, Boolean, Package *);
a203 1
extern int	AutoAnswer;
@


1.1
log
@add package tools from FreeBSD
@
text
@d1 1
a1 1
/* $OpenBSD: lib.h,v 1.19 1995/10/25 15:38:34 jkh Exp $ */
d27 6
a37 5
#include <ctype.h>
#include <dirent.h>
#include <sys/stat.h>
#include <sys/types.h>
#include <sys/file.h>
d66 6
a71 6
#define CONTENTS_FNAME	"+CONTENTS"
#define COMMENT_FNAME	"+COMMENT"
#define DESC_FNAME	"+DESC"
#define INSTALL_FNAME	"+INSTALL"
#define DEINSTALL_FNAME	"+DEINSTALL"
#define REQUIRE_FNAME	"+REQUIRE"
d73 2
a74 2
#define DISPLAY_FNAME	"+DISPLAY"
#define MTREE_FNAME	"+MTREE_DIRS"
d76 1
a76 1
#define CMD_CHAR	'@@'	/* prefix for extended PLIST cmd */
d83 2
a84 2
    PLIST_CHOWN, PLIST_CHGRP, PLIST_COMMENT,
    PLIST_IGNORE, PLIST_NAME, PLIST_UNEXEC, PLIST_SRC, PLIST_DISPLAY,
d86 1
a86 1
    PLIST_OPTION
d113 1
a113 1
size_t		min_free(char *);
d127 3
d138 1
d164 1
a170 1
void		usage(const char *, const char *, ...);
d176 1
@

