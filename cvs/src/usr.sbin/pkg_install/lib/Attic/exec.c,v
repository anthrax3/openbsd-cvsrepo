head	1.9;
access;
symbols
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.10
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2004.05.28.20.15.48;	author brad;	state dead;
branches;
next	1.8;

1.8
date	2003.09.05.19.40.42;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.04.17.31.19;	author avsm;	state Exp;
branches;
next	1.6;

1.6
date	2001.04.08.16.45.47;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	98.10.13.23.09.52;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	98.09.07.22.30.16;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.06.23.23.17.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.06.04.08.43.41;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	96.06.04.07.56.11;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bye bye old package tools.

ok deraadt@@
@
text
@/*	$OpenBSD: exec.c,v 1.8 2003/09/05 19:40:42 tedu Exp $	*/

#ifndef lint
static const char rcsid[] = "$OpenBSD: exec.c,v 1.8 2003/09/05 19:40:42 tedu Exp $";
#endif

/*
 * FreeBSD install - a package for the installation and maintainance
 * of non-core utilities.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * Jordan K. Hubbard
 * 18 July 1993
 *
 * Miscellaneous system routines.
 *
 */

#include <err.h>
#include "lib.h"

/*
 * Unusual system() substitute.  Accepts format string and args,
 * builds and executes command.  Returns exit code.
 */

int
vsystem(const char *fmt, ...)
{
	va_list	args;
	char	*cmd;
	size_t	maxargs;
	int	ret;

	maxargs = (size_t) sysconf(_SC_ARG_MAX);
	if ((long)maxargs == -1) {
		pwarnx("vsystem can't retrieve max args");
		return 1;
	}
	maxargs -= 32;			/* some slop for the sh -c */
	if ((cmd = (char *) malloc(maxargs)) == (char *) NULL) {
		pwarnx("vsystem can't alloc arg space");
		return 1;
	}

	va_start(args, fmt);
	if (vsnprintf(cmd, maxargs, fmt, args) >= maxargs) {
		pwarnx("vsystem args are too long");
		free(cmd);
		return 1;
	}
#ifdef DEBUG
	printf("Executing %s\n", cmd);
#endif
	ret = system(cmd);
	va_end(args);
	free(cmd);
	return ret;
}

@


1.8
log
@one check return from sysconf, one off by one vnsprintf, and one missing free.
all from Patrick Latifi in pr3414
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.7 2003/07/04 17:31:19 avsm Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: exec.c,v 1.7 2003/07/04 17:31:19 avsm Exp $";
@


1.7
log
@'static const char rcsid[]' to make it -Wall clean
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.6 2001/04/08 16:45:47 espie Exp $	*/
d4 1
a4 1
static const char rcsid[] = "$OpenBSD: exec.c,v 1.6 2001/04/08 16:45:47 espie Exp $";
d44 4
d55 1
a55 1
	if (vsnprintf(cmd, maxargs, fmt, args) > maxargs) {
d57 1
@


1.6
log
@Better error messages: pwarnx function, which works like pwarn, except
it shows a current package name along with the program name, e.g.,
pkg_add(foo-3.0): some error occurred.

A few messages now bear redundant pkgnames, which is much better than
doing pkg_add * and being informed that something went slightly wrong
somewhere...
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.5 1998/10/13 23:09:52 marc Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.5 1998/10/13 23:09:52 marc Exp $";
@


1.5
log
@Sync with recent NetBSD changes:
- use snprintf in place of sprintf
- code cleanup
- Package -> package_t, PackingList -> plist_t
Also: remove files that haven't been linked in a while
Pass -q to mtree so it is quiet in the presence of symlinks
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.4 1998/09/07 22:30:16 marc Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.4 1998/09/07 22:30:16 marc Exp $";
d46 1
a46 1
		warnx("vsystem can't alloc arg space");
d52 1
a52 1
		warnx("vsystem args are too long");
@


1.4
log
@updated pkg_* tools.  Merged in many changes/improvements from NetBSD.
New features include md5 hash so pkg_delete won't remove files that have
changed and the ability to define conflicting packages, e.g. you can't
install both mh and nmh.  The ports tree will have to be updated to take
advantage of this.

Let me know of any problems, real or imagined :-)
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.3 1998/06/23 23:17:20 millert Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.3 1998/06/23 23:17:20 millert Exp $";
d38 17
a54 17
    va_list args;
    char *cmd;
    int ret, maxargs;

    maxargs = sysconf(_SC_ARG_MAX);
    maxargs -= 32;			/* some slop for the sh -c */
    cmd = malloc(maxargs);
    if (!cmd) {
	warnx("vsystem can't alloc arg space");
	return 1;
    }

    va_start(args, fmt);
    if (vsnprintf(cmd, maxargs, fmt, args) > maxargs) {
	warnx("vsystem args are too long");
	return 1;
    }
d56 1
a56 1
printf("Executing %s\n", cmd);
d58 4
a61 4
    ret = system(cmd);
    va_end(args);
    free(cmd);
    return ret;
@


1.3
log
@Fix snprintf return value usage.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.2 1996/06/04 08:43:41 niklas Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.2 1996/06/04 08:43:41 niklas Exp $";
d27 1
d46 1
a46 1
	whinge("vsystem can't alloc arg space");
d51 2
a52 2
    if (vsnprintf(cmd, maxargs, fmt, args) >= maxargs) {
	whinge("vsystem args are too long");
@


1.2
log
@Oops, screwed up the $OpenBSD$ IDs
@
text
@d1 1
a1 1
/*	$OpenBSD: exec.c,v 1.1 1996/06/04 07:56:11 niklas Exp $	*/
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.1 1996/06/04 07:56:11 niklas Exp $";
d50 1
a50 1
    if (vsnprintf(cmd, maxargs, fmt, args) > maxargs) {
@


1.1
log
@add package tools from FreeBSD
@
text
@d1 2
a2 1
#	$OpenBSD$
d4 1
a4 1
static const char *rcsid = "$OpenBSD: exec.c,v 1.3 1994/12/06 00:51:47 jkh Exp $";
@
