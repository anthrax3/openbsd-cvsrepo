head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.10
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.8
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.14
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2002.11.16.13.22.32;	author matthieu;	state dead;
branches;
next	1.2;

1.2
date	2000.06.30.16.00.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.03.03.11.59.12;	author downsj;	state Exp;
branches
	1.1.14.1;
next	;

1.1.14.1
date	2000.10.06.21.24.22;	author jason;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove pccon which is a left-over from the i386 pccons console driver.
Noticed by David Krause. Thanks.
@
text
@/*	$OpenBSD: pccon.c,v 1.2 2000/06/30 16:00:29 millert Exp $	*/

/*
 * Copyright (c) 1997, Jason Downs.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR(S) ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR(S) BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <fcntl.h>
#include <paths.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <err.h>

#include <i386/pccons.h>

extern char *__progname;

int main(argc, argv)
	int argc;
	char *argv[];
{
	int ch, fd, blank;
	char *ep, *dev = _PATH_CONSOLE;

	blank = -1;
	while ((ch = getopt(argc, argv, "b:f:")) != -1) {
		switch (ch) {
		case 'b':
			blank = strtol(optarg, &ep, 10);
			if (ep == optarg)
				errx (1, "numeric argument expected");
			if (blank < 0)
				errx (1, "illegal blank value");
			break;

		case 'f':
			dev = optarg;
			break;

		default:
			fprintf (stderr,
				"usage: %s [-f device] [-b interval]\n",
				__progname);
			exit (1);
		}
	}

	fd = open (dev, O_RDWR);
	if (fd < 0)
		err (1, "%s", dev);

	if (blank >= 0) {
		if (ioctl(fd, CONSOLE_SET_BLANK, &blank) < 0)
			err (1, "ioctl");
	}

	close (fd);
	exit (0);
}
@


1.2
log
@warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: pccon.c,v 1.1 1997/03/03 11:59:12 downsj Exp $	*/
@


1.1
log
@pc console ioctl interface.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d72 1
a72 1
		err (1, dev);
@


1.1.14.1
log
@Pull in patch from current:
Fix (millert):
warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: pccon.c,v 1.2 2000/06/30 16:00:29 millert Exp $	*/
d72 1
a72 1
		err (1, "%s", dev);
@


