head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.6
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.26
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.22
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.24
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.16
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.20
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.18
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.14
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.12
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.2
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3;
locks; strict;
comment	@# @;


1.9
date	2016.09.02.14.02.48;	author benno;	state Exp;
branches;
next	1.8;
commitid	ZCYScyTMvHGcp7WF;

1.8
date	2010.05.26.16.44.32;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.29.22.08.25;	author claudio;	state Exp;
branches;
next	1.6;

1.6
date	2006.11.26.11.31.13;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.05.30.22.06.14;	author claudio;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.26.18.46.15;	author norby;	state Exp;
branches;
next	1.3;

1.3
date	2005.02.27.08.21.15;	author norby;	state Exp;
branches;
next	1.2;

1.2
date	2005.02.02.21.22.28;	author norby;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.28.14.05.40;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.9
log
@work on making log.c similar in all daemons:

move daemon-local functions into new logmsg.c, and reduce
the (mostly whitespace) differences so that log.c's can be diffed easily.

ok claudio@@, feedback from henning@@, deraadt@@, reyk@@
@
text
@#	$OpenBSD: Makefile,v 1.8 2010/05/26 16:44:32 nicm Exp $

PROG=	ospfd
SRCS=	area.c auth.c carp.c control.c database.c hello.c \
	in_cksum.c interface.c iso_cksum.c kroute.c lsack.c \
	lsreq.c lsupdate.c log.c logmsg.c neighbor.c ospfd.c ospfe.c packet.c \
	parse.y printconf.c rde.c rde_lsdb.c rde_spf.c name2id.c

MAN=	ospfd.8 ospfd.conf.5

CFLAGS+= -Wall -I${.CURDIR}
CFLAGS+= -Wstrict-prototypes -Wmissing-prototypes
CFLAGS+= -Wmissing-declarations
CFLAGS+= -Wshadow -Wpointer-arith -Wcast-qual
CFLAGS+= -Wsign-compare
YFLAGS=
LDADD+=	-levent -lutil
DPADD+= ${LIBEVENT} ${LIBUTIL}

.include <bsd.prog.mk>
@


1.8
log
@Move imsg into libutil and add a man page.

Minor bump for libutil.

Previous versions of this diff and man page looked at by various people.

"you should just commit" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2007/05/29 22:08:25 claudio Exp $
d6 1
a6 1
	lsreq.c lsupdate.c log.c neighbor.c ospfd.c ospfe.c packet.c \
@


1.7
log
@Demote support for ospfd. It is possible to specify a demote group on
interfaces and areas. With this carp setups using ospfd are more reliable
because we can fail over if the OSPF connectivity is (partially) lost.
OK norby@@
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile,v 1.6 2006/11/26 11:31:13 deraadt Exp $

d4 2
a5 2
SRCS=	area.c auth.c buffer.c carp.c control.c database.c hello.c \
	imsg.c in_cksum.c interface.c iso_cksum.c kroute.c lsack.c \
d17 2
a18 2
LDADD+=	-levent
DPADD+= ${LIBEVENT}
@


1.6
log
@repair missing DPADD requests
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2006/05/30 22:06:14 claudio Exp $
d5 1
a5 1
SRCS=	area.c auth.c buffer.c control.c database.c hello.c \
@


1.5
log
@Now that rtlabels are accessable via sysctl we can use route lables to
define which routes should be redistributed via OSPF. So now you can
define the export list on a fine graded basis. More to come... OK norby@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2005/05/26 18:46:15 norby Exp $
d19 1
@


1.4
log
@Support dumping the configuration the way bgpd(8) does it.

This makes it possible to have ospfd(8) parse a configuration file and
display the parsed result.

ok claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2005/02/27 08:21:15 norby Exp $
d8 1
a8 1
	parse.y printconf.c rde.c rde_lsdb.c rde_spf.c
@


1.3
log
@SPF and route table calculation.

Calculate Shortest Path Tree for each area known in the link state
database.

The Shortest Path Tree is used as input for route table calculation.
Route tabled is calculated and the result is inserted into the kernel
route table.

ok claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2005/02/02 21:22:28 norby Exp $
d5 1
a5 1
SRCS=	area.c auth.c buffer.c config.c control.c database.c hello.c \
d8 1
a8 1
	parse.y rde.c rde_lsdb.c rde_spf.c
@


1.2
log
@Add manpage ospfd.conf(5).

ok claudio@@ henning@@ jmc@@ jaredy@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2005/01/28 14:05:40 claudio Exp $
d8 1
a8 1
	parse.y rde.c rde_lsdb.c
@


1.1
log
@Welcome ospfd
started by Esben Norby some time ago by using the imsg/three process framework
of bgpd. He implemented the basic concept plus the ospf finite state machines.
Later I joined and helped him cleanup, debug and extend his work.
Right now it is not particularly useful, major parts are still missing but is
imported to allow more people to work on it.
status:
The basic protocol works for broadcast networks and the LS database is
synchronized and updated. It is not possible to be DR or BDR on a network
and other interface types like point-to-point are not yet supported.
The shortest path tree is not calculated and so no routing information is
exchanged with the kernel FIB.

Not yet connected to the builds.
OK henning@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d10 1
a10 1
MAN=	ospfd.8
@

