head	1.7;
access;
symbols
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.14
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.10
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.6
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.8
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.6.0.32
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.28
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.26
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.24
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.22
	OPENBSD_5_0:1.6.0.20
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.18
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.16
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.12
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.14
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.10
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.8
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.6
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.4.0.2
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.1.0.4
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.07.20.20.27.19;	author tobias;	state Exp;
branches;
next	1.6;
commitid	zpX3WT9OCHtCjiMK;

1.6
date	2007.01.08.19.37.04;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.09.26.11.56.22;	author claudio;	state Exp;
branches;
next	1.4;

1.4
date	2006.04.25.08.22.14;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2006.03.09.09.43.03;	author claudio;	state Exp;
branches;
next	1.2;

1.2
date	2005.10.19.15.44.25;	author stevesk;	state Exp;
branches;
next	1.1;

1.1
date	2005.01.28.14.05.40;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Fixed typo in error message.

okay deraadt@@
@
text
@/*	$OpenBSD: in_cksum.c,v 1.6 2007/01/08 19:37:04 deraadt Exp $	*/
/*	$NetBSD: in_cksum.c,v 1.3 1995/04/22 13:53:48 cgd Exp $	*/

/*
 * Copyright (c) 1992 Regents of the University of California.
 * All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * @@(#) Header: in_cksum.c,v 1.1 92/09/11 01:15:55 leres Exp  (LBL)
 */

#include <sys/types.h>

#include "ospfd.h"
#include "log.h"

/*
 * Checksum routine for Internet Protocol family headers.
 * This routine is very heavily used in the network
 * code and should be modified for each CPU to be as fast as possible.
 * In particular, it should not be this one.
 */
u_int16_t
in_cksum(void *p, size_t l)
{
	unsigned int sum = 0;
	int len;
	u_char *cp = p;

	/* ensure that < 2^16 bytes being summed */
	if (l >= (1 << 16))
		fatalx("in_cksum: packet too big");
	len = (int)l;

	if (((long)cp & 1) == 0) {
		while (len > 1) {
			sum += htons(*(u_short *)cp);
			cp += 2;
			len -= 2;
		}
	} else {
		while (len > 1) {
			sum += *cp++ << 8;
			sum += *cp++;
			len -= 2;
		}
	}
	if (len == 1)
		sum += *cp << 8;

	sum = (sum >> 16) + (sum & 0xffff); /* add in accumulated carries */
	sum += sum >> 16;		/* add potential last carry */
	sum = ntohs(sum);
	return (0xffff & ~sum);
}
@


1.6
log
@term 3 here can be dropped too
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.5 2006/09/26 11:56:22 claudio Exp $	*/
d59 1
a59 1
		fatalx("in_cksum: packet to big");
@


1.5
log
@Sync in_cksum.c to the same version dvmrpd has. This fixes problems with odd
packet lenght even though ospfd does not produce such packets.
OK norby@@
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.4 2006/04/25 08:22:14 claudio Exp $	*/
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratory and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Path the length of the packet as size_t to in_cksum(). Enforce that the
passed size is not bigger than 2^16 (limit of the used algorithm).
This removes some more lint warnings and makes sense.
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.3 2006/03/09 09:43:03 claudio Exp $	*/
d58 1
a58 1
	int len, oddbyte = 0, v = 0;
d66 5
a70 4
	while (len > 0) {
		if (oddbyte) {
			sum += v + *cp++;
			len--;
d72 5
a76 10
		if (((long)cp & 1) == 0) {
			while ((len -= 2) >= 0) {
				sum += *(u_short *)cp;
				cp += 2;
			}
		} else {
			while ((len -= 2) >= 0) {
				sum += *cp++ << 8;
				sum += *cp++;
			}
a77 2
		if ((oddbyte = len & 1) != 0)
			v = *cp << 8;
d79 3
a81 2
	if (oddbyte)
		sum += v;
d84 1
@


1.3
log
@in_cksum() should return a u_int16_t and not int. Switch a variable to
unsigned. Found by lint.
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.2 2005/10/19 15:44:25 stevesk Exp $	*/
d46 1
d55 1
a55 1
in_cksum(void *p, int len)
d58 1
a58 1
	int oddbyte = 0, v = 0;
d61 5
a65 1
	/* we assume < 2^16 bytes being summed */
@


1.2
log
@header cleaning; ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.1 2005/01/28 14:05:40 claudio Exp $	*/
d53 1
a53 1
int
d56 2
a57 1
	int sum = 0, oddbyte = 0, v = 0;
@


1.1
log
@Welcome ospfd
started by Esben Norby some time ago by using the imsg/three process framework
of bgpd. He implemented the basic concept plus the ospf finite state machines.
Later I joined and helped him cleanup, debug and extend his work.
Right now it is not particularly useful, major parts are still missing but is
imported to allow more people to work on it.
status:
The basic protocol works for broadcast networks and the LS database is
synchronized and updated. It is not possible to be DR or BDR on a network
and other interface types like point-to-point are not yet supported.
The shortest path tree is not calculated and so no routing information is
exchanged with the kernel FIB.

Not yet connected to the builds.
OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: in_cksum.c,v 1.3 2003/08/11 06:23:09 deraadt Exp $	*/
a43 6
#include <sys/socket.h>
#include <net/if.h>
#include <netinet/in.h>

#include <netinet/if_ether.h>
#include <netinet/in_systm.h>
@

