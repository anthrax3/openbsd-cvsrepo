head	1.13;
access;
symbols
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.16
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.12
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.8
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.10
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.6
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.4
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.8
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.4
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.2
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2;
locks; strict;
comment	@.\" @;


1.13
date	2013.08.14.06.32.37;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2013.07.16.11.13.34;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.22.09.10.40;	author sobrado;	state Exp;
branches;
next	1.10;

1.10
date	2008.07.09.19.58.28;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.20.30;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2007.03.15.22.33.22;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.26.20.25.27;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.12.12.59.53;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.14.23.20.36;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.06.15.04.34;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.01.03.08.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.21.04.52.03;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.20.02.08.09;	author millert;	state Exp;
branches;
next	;


desc
@@


1.13
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@.\" $OpenBSD: tokeninit.8,v 1.12 2013/07/16 11:13:34 schwarze Exp $
.\"
.\" Copyright (c) 1995 Migration Associates Corporation. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Berkeley Software Design,
.\"	Inc.
.\" 4. The name of Berkeley Software Design, Inc.  may not be used to endorse
.\"    or promote products derived from this software without specific prior
.\"    written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY BERKELEY SOFTWARE DESIGN, INC. ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL BERKELEY SOFTWARE DESIGN, INC. BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	BSDI $From: tokeninit.8,v 1.3 1997/01/16 03:23:11 bostic Exp $
.\"
.Dd $Mdocdate: July 16 2013 $
.Dt TOKENINIT 8
.Os
.Sh NAME
.Nm activinit ,
.Nm cryptoinit ,
.Nm snkinit
.Nd modify or add user in ActivCard, CRYPTOCard, or SNK-004 authentication system
.Sh SYNOPSIS
.Nm tokeninit
.Op Fl fhsv
.Op Fl m Ar mode
.Ar user ...
.Sh DESCRIPTION
The
.Nm tokeninit
utility may also be invoked by one of the following names:
.Nm activinit ,
.Nm cryptoinit ,
or
.Nm snkinit .
Depending on the name it was invoked as, it will
initialize the system information to allow one to use the
ActivCard, CRYPTOCard, or SNK-004 digital encryption token to login.
The
.Nm tokeninit
utility is intended for use by the system administrator.
.Pp
Token card systems provide strong user authentication by combining a user's
unique knowledge (a Personal Identification Number) and a physical object
(the token) which the user must have in their possession to login.
The system administrator programs the token with a secret encryption key
which is also stored in the database.
The user programs the token with a PIN.
To discourage exhaustive attempts to guess the PIN,
configuration options permit the token to be programmed
to erase knowledge of the shared secret should the user enter
an excessive number of incorrect PIN entries.
.Pp
The user activates the token by entering their PIN into the token.
After activating the token, the user enters a random number challenge
presented by the host computer into the token.
The challenge is encrypted by the token and a response is displayed.
The user then enters the response at the host computer's prompt,
where it is compared with the anticipated response.
.Pp
Token cards typically support multiple unique encryption keys.
This facility allows a single token to be used for multiple computer
systems, or multiple user instances on the same system.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl f
Force reinitialization of an existing account.
The current shared secret stored in the database will be replaced with
a new shared secret.
The new shared secret must be entered into the token,
replacing the current one.
.It Fl h
Read the shared secret as a 16 digit hexadecimal integer rather than
a sequence of 8 octets.
This is not supported when invoked as
.Nm snkinit .
.It Fl m Ar mode
Specify the input modes allowed for this user.
Possible modes are decimal (dec), hexadecimal (hex), phonebook (phone),
and reduced-input (rim).
Not all modes are available for all types of cards.
Multiple
.Fl m
options may be specified to enable multiple modes.
By default only the hexadecimal mode is enabled, except for the SNK-004
token, which by default only enables the decimal mode.
If an attempt is made to initialize a card with only reduced-input, the
default mode for the card is silently included.
.It Fl s
By default,
.Nm tokeninit
prompts for a shared secret to enter into the authentication database.
The
.Fl s
option generates a 64-bit cryptographically strong key for use in the token.
This shared secret will be saved in the database for the user ID
specified on the command line.
After entering the shared secret into the token, determine that the
checksum computed by the token matches the one displayed by
.Nm tokeninit .
.It Fl v
Enable verbose mode.
.Nm tokeninit
will emit messages on the status of each user ID processed.
.El
.Sh REDUCED-INPUT MODE
Reduced-input mode allows the token to predict the next challenge,
given the current challenge.
This may be used to eliminate the need to enter the challenge to the
token or may also be used with a paper list.
Using a program such as
.Xr x99token 1
many challenges could be precomputed and printed.
This list should be kept secret.
This list can then take the place of an actual token until
the system has issued all the challenges printed.
Challenges are predicted by the following algorithm:
.Bd -unfilled -offset indent
* Encrypt the last challenge with the shared secret key

* AND each byte of the response with 0x0f

* Modulo each byte by 10 (0x0a)

* ADD 0x30 (ASCII value of '0') to each byte
.Ed
.Pp
The resulting 8 bytes are all ASCII decimal digits and are the next challenge.
.Sh FILES
.Bl -tag -width xetcxcrypto.db -compact
.It Pa /etc/activ.db
database of information for ActivCard system
.It Pa /etc/crypto.db
database of information for CRYPTOCard system
.It Pa /etc/snk.db
database of information for SNK-004 system
.El
.Sh DIAGNOSTICS
Diagnostic messages are logged via
.Xr syslog 3
with the LOG_AUTH facility.
.Sh COMMENTS
A supplier for ActivCard tokens may be obtained by contacting:
.Bd -unfilled -offset indent
ActivCard, Inc.
303 Twin Dolphin Dr., Ste 420
Redwood City, CA 94065
Tel: (415) 654-1700
Fax: (415) 654-1701
.Ed
.Pp
CRYPTOCard tokens may be obtained by contacting:
.Bd -unfilled -offset indent
CRYPTOCard Incorporated
Attn: Wade Clark
1649 Barclay Blvd.
Buffalo Grove, Illinois 60089
Tel: (800) 307-7042 / (708) 459-6500
Fax: (708) 459-6599
<token@@cryptocard.com>
.Ed
.Pp
SNK-004 tokens are no longer available for purchase.
.Sh SEE ALSO
.Xr x99token 1 ,
.Xr syslog 3 ,
.Xr login_token 8 ,
.Xr tokenadm 8
.Sh AUTHORS
.An Jack Flory Aq Mt jpf@@mig.com
.Sh BUGS
Not all modes of all cards are supported.
@


1.12
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.11 2009/10/22 09:10:40 sobrado Exp $
d35 1
a35 1
.Dd $Mdocdate: October 22 2009 $
d42 1
a42 1
.Nd "modify or add user in ActivCard, CRYPTOCard, or SNK-004 authentication system"
@


1.11
log
@replace strftime(3) by ".Xr strftime 3" and syslog(3) by ".Xr syslog 3".

ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.10 2008/07/09 19:58:28 sobrado Exp $
d35 1
a35 1
.Dd $Mdocdate: July 9 2008 $
d191 1
a191 1
.An Jack Flory Aq jpf@@mig.com
@


1.10
log
@an ellipsis is not an optional argument.
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.9 2007/05/31 19:20:30 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 31 2007 $
d160 3
a162 1
Diagnostic messages are logged via syslog(3) with the LOG_AUTH facility.
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.8 2007/03/15 22:33:22 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate$
d47 1
a47 2
.Ar user
.Op Ar ...
@


1.8
log
@simplify synopsis/usage() and sort options;
from Igor Sobrado
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.7 2003/11/26 20:25:27 jmc Exp $
d35 1
a35 1
.Dd September 26, 1995
@


1.7
log
@remove reference to defunct Digital Pathways, and note that SNK-004 tokens
are no longer available;
kill some .Pp's before displays;

diff from Alex Holst;
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.6 2003/06/12 12:59:53 jmc Exp $
d45 1
a45 2
.Op Fl f
.Op Fl h
d47 1
a47 3
.Op Fl s
.Op Fl v
.Ar user_ID
d99 1
a99 1
.It Fl m
@


1.6
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- new sentence, new line
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.5 2003/02/14 23:20:36 jmc Exp $
a142 1
.Pp
a166 1
.Pp
a175 1
.Pp
d186 1
a186 11
SNK-004 tokens may be obtained by contacting:
.Pp
.Bd -unfilled -offset indent
Digital Pathways, Inc.
Attn: Paul Kamian
201 Ravendale Drive
Mountain View, CA  94043-5216
Tel: (415) 964-0707
Fax: (415) 961-7487
<paul@@digpath.com>
.Ed
@


1.5
log
@typos;

tftpd(8): tweak and ok millert@@
tokenadm(8): tweak and ok millert@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.4 2001/09/06 15:04:34 mpech Exp $
d143 2
a144 2
.nf
.sp
d152 2
a153 2
.fi
.sp
a154 2
.Sh DIAGNOSTICS
Diagnostic messages are logged via syslog(3) with the LOG_AUTH facility.
d164 2
d169 2
a170 3
.Bl -inset -offset indent
.It ActivCard, Inc.
.br
a171 1
.br
a172 1
.br
a173 1
.br
d175 1
a175 1
.El
d179 2
a180 3
.Bl -inset -offset indent
.It CRYPTOCard Incorporated
.br
a181 1
.br
a182 1
.br
a183 1
.br
a184 1
.br
a185 1
.br
d187 1
a187 1
.El
d190 3
a192 3
.Bl -inset -offset indent
.It Digital Pathways, Inc.
.br
a193 1
.br
a194 1
.br
a195 1
.br
a196 1
.br
a197 1
.br
d199 1
a199 3
.El
.Sh BUGS
Not all modes of all cards are supported.
d206 3
a208 2
Jack Flory
.Aq jpf@@mig.com
@


1.4
log
@Initial idea from aaron@@: Last char of .Xr group in SEE ALSO section should
be a single digit. Powered by mantoya@@.

millert@@ ok.
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.3 2001/08/01 03:08:29 millert Exp $
d67 1
a67 1
Token cards system provides strong user authentication by combining a user's
@


1.3
log
@Remove tokenctl and tokenls from SEE ALSO -- they don't exist
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.2 2000/12/21 04:52:03 aaron Exp $
d221 1
a221 1
.Xr tokenadm 8 ,
@


1.2
log
@Standard OpenBSD'ifications that happen when new man pages are imported.
@
text
@d1 1
a1 1
.\" $OpenBSD: tokeninit.8,v 1.1 2000/12/20 02:08:09 millert Exp $
a221 1
.Xr tokenls 8
@


1.1
log
@Commands for manipulating the token database (ActivCard, CRYPTOCard, or SNK-004)
from BSDi.  Will be enabled when BSD authentication is turned on (login_token).
@
text
@d1 1
a1 1
.\" $OpenBSD$
d39 4
a42 2
.Nm activinit , cryptoinit , snkinit
.Nd Modify or add user in ActivCard, CRYPTOCard, or SNK-004 authentication system.
d51 1
a51 1
.Op Ar user_ID ...
a52 1
.Pp
d55 3
a57 2
utility may also be invoked by one of the names:
.Nm activinit , cryptoinit ,
d60 1
a60 1
Depending on the name it was invoked under, it will
d62 1
a62 1
ActivCard, CRYPTOCard or SNK-004 digital encryption token to login.
d70 4
a73 3
The system administrator programs the token with a secret encryption key 
which is also stored in the database.  The user programs the token with
a PIN.  To discourage exhaustive attempts to guess the PIN,
d80 4
a83 4
presented by the host computer into the token.  The challenge is encrypted by
the token and a response displayed.  The user then enters the 
response at the host computer's prompt, where it is compared with the
anticipated response.
d88 3
a90 2
.Sh OPTIONS
.Bl -hang
d93 2
a94 2
The current shared secret stored in the database will be replaced a new
shared secret.
d103 5
a107 3
Specify the input modes allowed for this user.  Possible modes are
decimal (dec), hexadecimal (hex), phonebook (phone) and reduced-input (rim).
Not all modes are available for all types of cards.  Multiple
d119 6
a124 7
.Fl s 
option generates a 64 bit cryptographically strong key for use in the token.
This shared secret will be saved
in the database for the user ID specified on the command line.
After entering the shared secret into the token,
determine that the checksum computed
by the token matches the one displayed by
d133 3
a135 2
given the current challenge.  This may be used to eliminate the need
to enter the challenge to the token or may also be used with a paper list.
d138 3
a140 2
many challenges could be precomputed and printed.  This list should be
kept secret.  This list can then take the place of an actual token until
d158 1
a158 1
.Bl -tag -width xetcxcrypto.db
d160 1
a160 1
data base of information for ActivCard system
d162 1
a162 1
data base of information for CRYPTOCard system
d164 1
a164 1
data base of information for SNK-004 system
d167 1
a167 2
A supplier for
ActivCard tokens may be obtained by contacting:
a216 1
.Pp
d220 1
d222 4
a225 4
.Xr tokenls 8 ,
.Xr login_token 8
.Sh AUTHOR
Jack Flory <jpf@@mig.com>
@

