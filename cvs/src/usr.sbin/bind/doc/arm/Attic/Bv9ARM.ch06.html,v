head	1.12;
access;
symbols
	OPENBSD_5_6:1.11.0.28
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.26
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.22
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.20
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.18
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.16
	OPENBSD_5_0:1.11.0.14
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.12
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.10
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.6
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	BIND_9_4_2_P1:1.1.1.7
	OPENBSD_4_3:1.10.0.2
	OPENBSD_4_3_BASE:1.10
	BIND_9_4_2:1.1.1.6
	OPENBSD_4_2:1.9.0.4
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.2
	OPENBSD_4_1_BASE:1.9
	BIND_9_3_4:1.1.1.5
	BIND_9_3_3:1.1.1.5
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	BIND_9_3_2:1.1.1.4
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	BIND_9_3_1:1.1.1.3
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	BIND_9_3_0:1.1.1.2
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2
	BIND_9_2_2_RC1:1.1.1.1
	ISC:1.1.1;
locks; strict;
comment	@# @;


1.12
date	2014.08.25.07.08.34;	author brad;	state dead;
branches;
next	1.11;
commitid	zKogyOACFMOV70QE;

1.11
date	2008.07.09.19.02.52;	author jakob;	state Exp;
branches;
next	1.10;

1.10
date	2007.12.09.13.39.43;	author jakob;	state Exp;
branches
	1.10.2.1;
next	1.9;

1.9
date	2007.01.10.19.07.59;	author jakob;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.05.17.36.34;	author jakob;	state Exp;
branches;
next	1.7;

1.7
date	2006.02.07.12.22.23;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2005.03.22.16.52.39;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	2004.09.28.17.14.05;	author jakob;	state Exp;
branches;
next	1.4;

1.4
date	2003.11.18.14.14.06;	author jakob;	state Exp;
branches;
next	1.3;

1.3
date	2003.09.22.19.49.28;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2003.03.05.09.18.32;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.20.21.06.52;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.20.21.06.52;	author jakob;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.09.28.16.34.31;	author jakob;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.03.22.16.37.27;	author jakob;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.05.16.43.14;	author jakob;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2007.01.10.18.19.20;	author jakob;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2007.12.09.12.33.36;	author jakob;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2008.07.09.18.45.30;	author jakob;	state Exp;
branches;
next	;

1.10.2.1
date	2008.07.23.17.39.39;	author brad;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Start removing unused documentation and the server and related binaries source
code.
@
text
@<!--
 - Copyright (C) 2004-2007 Internet Systems Consortium, Inc. ("ISC")
 - Copyright (C) 2000-2003 Internet Software Consortium.
 - 
 - Permission to use, copy, modify, and distribute this software for any
 - purpose with or without fee is hereby granted, provided that the above
 - copyright notice and this permission notice appear in all copies.
 - 
 - THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
 - REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 - AND FITNESS. IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
 - INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 - LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
 - OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 - PERFORMANCE OF THIS SOFTWARE.
-->
<!-- $ISC: Bv9ARM.ch06.html,v 1.82.18.73.8.1 2008/05/27 22:07:34 each Exp $ -->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Chapter 6. BIND 9 Configuration Reference</title>
<meta name="generator" content="DocBook XSL Stylesheets V1.71.1">
<link rel="start" href="Bv9ARM.html" title="BIND 9 Administrator Reference Manual">
<link rel="up" href="Bv9ARM.html" title="BIND 9 Administrator Reference Manual">
<link rel="prev" href="Bv9ARM.ch05.html" title="Chapter 5. The BIND 9 Lightweight Resolver">
<link rel="next" href="Bv9ARM.ch07.html" title="Chapter 7. BIND 9 Security Considerations">
</head>
<body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
<div class="navheader">
<table width="100%" summary="Navigation header">
<tr><th colspan="3" align="center">Chapter 6. <acronym class="acronym">BIND</acronym> 9 Configuration Reference</th></tr>
<tr>
<td width="20%" align="left">
<a accesskey="p" href="Bv9ARM.ch05.html">Prev</a> </td>
<th width="60%" align="center"> </th>
<td width="20%" align="right"> <a accesskey="n" href="Bv9ARM.ch07.html">Next</a>
</td>
</tr>
</table>
<hr>
</div>
<div class="chapter" lang="en">
<div class="titlepage"><div><div><h2 class="title">
<a name="Bv9ARM.ch06"></a>Chapter 6. <acronym class="acronym">BIND</acronym> 9 Configuration Reference</h2></div></div></div>
<div class="toc">
<p><b>Table of Contents</b></p>
<dl>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#configuration_file_elements">Configuration File Elements</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#address_match_lists">Address Match Lists</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2573480">Comment Syntax</a></span></dt>
</dl></dd>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#Configuration_File_Grammar">Configuration File Grammar</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574092"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#acl"><span><strong class="command">acl</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574282"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage"><span><strong class="command">controls</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574711"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574726"><span><strong class="command">include</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574749"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574771"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574930"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2575056"><span><strong class="command">logging</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576406"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576480"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576544"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576587"><span><strong class="command">masters</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576602"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#options"><span><strong class="command">options</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_grammar"><span><strong class="command">server</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_definition_and_usage"><span><strong class="command">server</strong></span> Statement Definition and
            Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585361"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585410"><span><strong class="command">trusted-keys</strong></span> Statement Definition
            and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#view_statement_grammar"><span><strong class="command">view</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585490"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#zone_statement_grammar"><span><strong class="command">zone</strong></span>
            Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586798"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
</dl></dd>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2589080">Zone File</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#types_of_resource_records_and_when_to_use_them">Types of Resource Records and When to Use Them</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591101">Discussion of MX Records</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#Setting_TTLs">Setting TTLs</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591653">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591848">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2592173"><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#zonefile_format">Additional File Formats</a></span></dt>
</dl></dd>
</dl>
</div>
<p>
      <acronym class="acronym">BIND</acronym> 9 configuration is broadly similar
      to <acronym class="acronym">BIND</acronym> 8; however, there are a few new
      areas
      of configuration, such as views. <acronym class="acronym">BIND</acronym>
      8 configuration files should work with few alterations in <acronym class="acronym">BIND</acronym>
      9, although more complex configurations should be reviewed to check
      if they can be more efficiently implemented using the new features
      found in <acronym class="acronym">BIND</acronym> 9.
    </p>
<p>
      <acronym class="acronym">BIND</acronym> 4 configuration files can be
      converted to the new format
      using the shell script
      <code class="filename">contrib/named-bootconf/named-bootconf.sh</code>.
    </p>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="configuration_file_elements"></a>Configuration File Elements</h2></div></div></div>
<p>
        Following is a list of elements used throughout the <acronym class="acronym">BIND</acronym> configuration
        file documentation:
      </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                <p>
                  <code class="varname">acl_name</code>
                </p>
              </td>
<td>
                <p>
                  The name of an <code class="varname">address_match_list</code> as
                  defined by the <span><strong class="command">acl</strong></span> statement.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">address_match_list</code>
                </p>
              </td>
<td>
                <p>
                  A list of one or more
                  <code class="varname">ip_addr</code>,
                  <code class="varname">ip_prefix</code>, <code class="varname">key_id</code>,
                  or <code class="varname">acl_name</code> elements, see
                  <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">masters_list</code>
                </p>
              </td>
<td>
                <p>
                  A named list of one or more <code class="varname">ip_addr</code>
                  with optional <code class="varname">key_id</code> and/or
                  <code class="varname">ip_port</code>.
                  A <code class="varname">masters_list</code> may include other
                  <code class="varname">masters_lists</code>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">domain_name</code>
                </p>
              </td>
<td>
                <p>
                  A quoted string which will be used as
                  a DNS name, for example "<code class="literal">my.test.domain</code>".
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">dotted_decimal</code>
                </p>
              </td>
<td>
                <p>
                  One to four integers valued 0 through
                  255 separated by dots (`.'), such as <span><strong class="command">123</strong></span>,
                  <span><strong class="command">45.67</strong></span> or <span><strong class="command">89.123.45.67</strong></span>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">ip4_addr</code>
                </p>
              </td>
<td>
                <p>
                  An IPv4 address with exactly four elements
                  in <code class="varname">dotted_decimal</code> notation.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">ip6_addr</code>
                </p>
              </td>
<td>
                <p>
                  An IPv6 address, such as <span><strong class="command">2001:db8::1234</strong></span>.
                  IPv6 scoped addresses that have ambiguity on their scope
                  zones must be
                  disambiguated by an appropriate zone ID with the percent
                  character
                  (`%') as delimiter.
                  It is strongly recommended to use string zone names rather
                  than
                  numeric identifiers, in order to be robust against system
                  configuration changes.
                  However, since there is no standard mapping for such names
                  and
                  identifier values, currently only interface names as link
                  identifiers
                  are supported, assuming one-to-one mapping between
                  interfaces and links.
                  For example, a link-local address <span><strong class="command">fe80::1</strong></span> on the
                  link attached to the interface <span><strong class="command">ne0</strong></span>
                  can be specified as <span><strong class="command">fe80::1%ne0</strong></span>.
                  Note that on most systems link-local addresses always have
                  the
                  ambiguity, and need to be disambiguated.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">ip_addr</code>
                </p>
              </td>
<td>
                <p>
                  An <code class="varname">ip4_addr</code> or <code class="varname">ip6_addr</code>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">ip_port</code>
                </p>
              </td>
<td>
                <p>
                  An IP port <code class="varname">number</code>.
                  The <code class="varname">number</code> is limited to 0
                  through 65535, with values
                  below 1024 typically restricted to use by processes running
                  as root.
                  In some cases, an asterisk (`*') character can be used as a
                  placeholder to
                  select a random high-numbered port.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">ip_prefix</code>
                </p>
              </td>
<td>
                <p>
                  An IP network specified as an <code class="varname">ip_addr</code>,
                  followed by a slash (`/') and then the number of bits in the
                  netmask.
                  Trailing zeros in a <code class="varname">ip_addr</code>
                  may omitted.
                  For example, <span><strong class="command">127/8</strong></span> is the
                  network <span><strong class="command">127.0.0.0</strong></span> with
                  netmask <span><strong class="command">255.0.0.0</strong></span> and <span><strong class="command">1.2.3.0/28</strong></span> is
                  network <span><strong class="command">1.2.3.0</strong></span> with netmask <span><strong class="command">255.255.255.240</strong></span>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">key_id</code>
                </p>
              </td>
<td>
                <p>
                  A <code class="varname">domain_name</code> representing
                  the name of a shared key, to be used for transaction
                  security.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">key_list</code>
                </p>
              </td>
<td>
                <p>
                  A list of one or more
                  <code class="varname">key_id</code>s,
                  separated by semicolons and ending with a semicolon.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">number</code>
                </p>
              </td>
<td>
                <p>
                  A non-negative 32-bit integer
                  (i.e., a number between 0 and 4294967295, inclusive).
                  Its acceptable value might further
                  be limited by the context in which it is used.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">path_name</code>
                </p>
              </td>
<td>
                <p>
                  A quoted string which will be used as
                  a pathname, such as <code class="filename">zones/master/my.test.domain</code>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">size_spec</code>
                </p>
              </td>
<td>
                <p>
                  A number, the word <strong class="userinput"><code>unlimited</code></strong>,
                  or the word <strong class="userinput"><code>default</code></strong>.
                </p>
                <p>
                  An <code class="varname">unlimited</code> <code class="varname">size_spec</code> requests unlimited
                  use, or the maximum available amount. A <code class="varname">default size_spec</code> uses
                  the limit that was in force when the server was started.
                </p>
                <p>
                  A <code class="varname">number</code> can optionally be
                  followed by a scaling factor:
                  <strong class="userinput"><code>K</code></strong> or <strong class="userinput"><code>k</code></strong>
                  for kilobytes,
                  <strong class="userinput"><code>M</code></strong> or <strong class="userinput"><code>m</code></strong>
                  for megabytes, and
                  <strong class="userinput"><code>G</code></strong> or <strong class="userinput"><code>g</code></strong> for gigabytes,
                  which scale by 1024, 1024*1024, and 1024*1024*1024
                  respectively.
                </p>
                <p>
                  The value must be representable as a 64-bit unsigned integer
                  (0 to 18446744073709551615, inclusive).
                  Using <code class="varname">unlimited</code> is the best
                  way
                  to safely set a really large number.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">yes_or_no</code>
                </p>
              </td>
<td>
                <p>
                  Either <strong class="userinput"><code>yes</code></strong> or <strong class="userinput"><code>no</code></strong>.
                  The words <strong class="userinput"><code>true</code></strong> and <strong class="userinput"><code>false</code></strong> are
                  also accepted, as are the numbers <strong class="userinput"><code>1</code></strong>
                  and <strong class="userinput"><code>0</code></strong>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">dialup_option</code>
                </p>
              </td>
<td>
                <p>
                  One of <strong class="userinput"><code>yes</code></strong>,
                  <strong class="userinput"><code>no</code></strong>, <strong class="userinput"><code>notify</code></strong>,
                  <strong class="userinput"><code>notify-passive</code></strong>, <strong class="userinput"><code>refresh</code></strong> or
                  <strong class="userinput"><code>passive</code></strong>.
                  When used in a zone, <strong class="userinput"><code>notify-passive</code></strong>,
                  <strong class="userinput"><code>refresh</code></strong>, and <strong class="userinput"><code>passive</code></strong>
                  are restricted to slave and stub zones.
                </p>
              </td>
</tr>
</tbody>
</table></div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="address_match_lists"></a>Address Match Lists</h3></div></div></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2573277"></a>Syntax</h4></div></div></div>
<pre class="programlisting"><code class="varname">address_match_list</code> = address_match_list_element ;
  [<span class="optional"> address_match_list_element; ... </span>]
<code class="varname">address_match_list_element</code> = [<span class="optional"> ! </span>] (ip_address [<span class="optional">/length</span>] |
   key key_id | acl_name | { address_match_list } )
</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2573305"></a>Definition and Usage</h4></div></div></div>
<p>
            Address match lists are primarily used to determine access
            control for various server operations. They are also used in
            the <span><strong class="command">listen-on</strong></span> and <span><strong class="command">sortlist</strong></span>
            statements. The elements
            which constitute an address match list can be any of the
            following:
          </p>
<div class="itemizedlist"><ul type="disc">
<li>an IP address (IPv4 or IPv6)</li>
<li>an IP prefix (in `/' notation)</li>
<li>
                a key ID, as defined by the <span><strong class="command">key</strong></span>
                statement
              </li>
<li>the name of an address match list defined with
                the <span><strong class="command">acl</strong></span> statement
              </li>
<li>a nested address match list enclosed in braces</li>
</ul></div>
<p>
            Elements can be negated with a leading exclamation mark (`!'),
            and the match list names "any", "none", "localhost", and
            "localnets"
            are predefined. More information on those names can be found in
            the description of the acl statement.
          </p>
<p>
            The addition of the key clause made the name of this syntactic
            element something of a misnomer, since security keys can be used
            to validate access without regard to a host or network address.
            Nonetheless,
            the term "address match list" is still used throughout the
            documentation.
          </p>
<p>
            When a given IP address or prefix is compared to an address
            match list, the list is traversed in order until an element
            matches.
            The interpretation of a match depends on whether the list is being
            used
            for access control, defining listen-on ports, or in a sortlist,
            and whether the element was negated.
          </p>
<p>
            When used as an access control list, a non-negated match
            allows access and a negated match denies access. If
            there is no match, access is denied. The clauses
            <span><strong class="command">allow-notify</strong></span>,
            <span><strong class="command">allow-query</strong></span>,
            <span><strong class="command">allow-query-cache</strong></span>,
            <span><strong class="command">allow-transfer</strong></span>,
            <span><strong class="command">allow-update</strong></span>,
            <span><strong class="command">allow-update-forwarding</strong></span>, and
            <span><strong class="command">blackhole</strong></span> all use address match
            lists.  Similarly, the listen-on option will cause the
            server to not accept queries on any of the machine's
            addresses which do not match the list.
          </p>
<p>
            Because of the first-match aspect of the algorithm, an element
            that defines a subset of another element in the list should come
            before the broader element, regardless of whether either is
            negated. For
            example, in
            <span><strong class="command">1.2.3/24; ! 1.2.3.13;</strong></span> the 1.2.3.13
            element is
            completely useless because the algorithm will match any lookup for
            1.2.3.13 to the 1.2.3/24 element.
            Using <span><strong class="command">! 1.2.3.13; 1.2.3/24</strong></span> fixes
            that problem by having 1.2.3.13 blocked by the negation but all
            other 1.2.3.* hosts fall through.
          </p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2573480"></a>Comment Syntax</h3></div></div></div>
<p>
          The <acronym class="acronym">BIND</acronym> 9 comment syntax allows for
          comments to appear
          anywhere that whitespace may appear in a <acronym class="acronym">BIND</acronym> configuration
          file. To appeal to programmers of all kinds, they can be written
          in the C, C++, or shell/perl style.
        </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2573495"></a>Syntax</h4></div></div></div>
<p>
            </p>
<pre class="programlisting">/* This is a <acronym class="acronym">BIND</acronym> comment as in C */</pre>
<p>
            </p>
<pre class="programlisting">// This is a <acronym class="acronym">BIND</acronym> comment as in C++</pre>
<p>
            </p>
<pre class="programlisting"># This is a <acronym class="acronym">BIND</acronym> comment as in common UNIX shells and perl</pre>
<p>
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2573525"></a>Definition and Usage</h4></div></div></div>
<p>
            Comments may appear anywhere that whitespace may appear in
            a <acronym class="acronym">BIND</acronym> configuration file.
          </p>
<p>
            C-style comments start with the two characters /* (slash,
            star) and end with */ (star, slash). Because they are completely
            delimited with these characters, they can be used to comment only
            a portion of a line or to span multiple lines.
          </p>
<p>
            C-style comments cannot be nested. For example, the following
            is not valid because the entire comment ends with the first */:
          </p>
<p>

</p>
<pre class="programlisting">/* This is the start of a comment.
   This is still part of the comment.
/* This is an incorrect attempt at nesting a comment. */
   This is no longer in any comment. */
</pre>
<p>

          </p>
<p>
            C++-style comments start with the two characters // (slash,
            slash) and continue to the end of the physical line. They cannot
            be continued across multiple physical lines; to have one logical
            comment span multiple lines, each line must use the // pair.
          </p>
<p>
            For example:
          </p>
<p>

</p>
<pre class="programlisting">// This is the start of a comment.  The next line
// is a new comment, even though it is logically
// part of the previous comment.
</pre>
<p>

          </p>
<p>
            Shell-style (or perl-style, if you prefer) comments start
            with the character <code class="literal">#</code> (number sign)
            and continue to the end of the
            physical line, as in C++ comments.
          </p>
<p>
            For example:
          </p>
<p>

</p>
<pre class="programlisting"># This is the start of a comment.  The next line
# is a new comment, even though it is logically
# part of the previous comment.
</pre>
<p>

          </p>
<div class="warning" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Warning</h3>
<p>
              You cannot use the semicolon (`;') character
              to start a comment such as you would in a zone file. The
              semicolon indicates the end of a configuration
              statement.
            </p>
</div>
</div>
</div>
</div>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="Configuration_File_Grammar"></a>Configuration File Grammar</h2></div></div></div>
<p>
        A <acronym class="acronym">BIND</acronym> 9 configuration consists of
        statements and comments.
        Statements end with a semicolon. Statements and comments are the
        only elements that can appear without enclosing braces. Many
        statements contain a block of sub-statements, which are also
        terminated with a semicolon.
      </p>
<p>
        The following statements are supported:
      </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                <p><span><strong class="command">acl</strong></span></p>
              </td>
<td>
                <p>
                  defines a named IP address
                  matching list, for access control and other uses.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">controls</strong></span></p>
              </td>
<td>
                <p>
                  declares control channels to be used
                  by the <span><strong class="command">rndc</strong></span> utility.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">include</strong></span></p>
              </td>
<td>
                <p>
                  includes a file.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">key</strong></span></p>
              </td>
<td>
                <p>
                  specifies key information for use in
                  authentication and authorization using TSIG.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">logging</strong></span></p>
              </td>
<td>
                <p>
                  specifies what the server logs, and where
                  the log messages are sent.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">lwres</strong></span></p>
              </td>
<td>
                <p>
                  configures <span><strong class="command">named</strong></span> to
                  also act as a light-weight resolver daemon (<span><strong class="command">lwresd</strong></span>).
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">masters</strong></span></p>
              </td>
<td>
                <p>
                  defines a named masters list for
                  inclusion in stub and slave zone masters clauses.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">options</strong></span></p>
              </td>
<td>
                <p>
                  controls global server configuration
                  options and sets defaults for other statements.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">server</strong></span></p>
              </td>
<td>
                <p>
                  sets certain configuration options on
                  a per-server basis.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">trusted-keys</strong></span></p>
              </td>
<td>
                <p>
                  defines trusted DNSSEC keys.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">view</strong></span></p>
              </td>
<td>
                <p>
                  defines a view.
                </p>
              </td>
</tr>
<tr>
<td>
                <p><span><strong class="command">zone</strong></span></p>
              </td>
<td>
                <p>
                  defines a zone.
                </p>
              </td>
</tr>
</tbody>
</table></div>
<p>
        The <span><strong class="command">logging</strong></span> and
        <span><strong class="command">options</strong></span> statements may only occur once
        per
        configuration.
      </p>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574092"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">acl</strong></span> acl-name {
    address_match_list
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="acl"></a><span><strong class="command">acl</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">acl</strong></span> statement assigns a symbolic
          name to an address match list. It gets its name from a primary
          use of address match lists: Access Control Lists (ACLs).
        </p>
<p>
          Note that an address match list's name must be defined
          with <span><strong class="command">acl</strong></span> before it can be used
          elsewhere; no
          forward references are allowed.
        </p>
<p>
          The following ACLs are built-in:
        </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                  <p><span><strong class="command">any</strong></span></p>
                </td>
<td>
                  <p>
                    Matches all hosts.
                  </p>
                </td>
</tr>
<tr>
<td>
                  <p><span><strong class="command">none</strong></span></p>
                </td>
<td>
                  <p>
                    Matches no hosts.
                  </p>
                </td>
</tr>
<tr>
<td>
                  <p><span><strong class="command">localhost</strong></span></p>
                </td>
<td>
                  <p>
                    Matches the IPv4 and IPv6 addresses of all network
                    interfaces on the system.
                  </p>
                </td>
</tr>
<tr>
<td>
                  <p><span><strong class="command">localnets</strong></span></p>
                </td>
<td>
                  <p>
                    Matches any host on an IPv4 or IPv6 network
                    for which the system has an interface.
                    Some systems do not provide a way to determine the prefix
                    lengths of
                    local IPv6 addresses.
                    In such a case, <span><strong class="command">localnets</strong></span>
                    only matches the local
                    IPv6 addresses, just like <span><strong class="command">localhost</strong></span>.
                  </p>
                </td>
</tr>
</tbody>
</table></div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574282"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">controls</strong></span> {
   [ inet ( ip_addr | * ) [ port ip_port ] allow { <em class="replaceable"><code> address_match_list </code></em> }
                keys { <em class="replaceable"><code>key_list</code></em> }; ]
   [ inet ...; ]
   [ unix <em class="replaceable"><code>path</code></em> perm <em class="replaceable"><code>number</code></em> owner <em class="replaceable"><code>number</code></em> group <em class="replaceable"><code>number</code></em> keys { <em class="replaceable"><code>key_list</code></em> }; ]
   [ unix ...; ]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="controls_statement_definition_and_usage"></a><span><strong class="command">controls</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">controls</strong></span> statement declares control
          channels to be used by system administrators to control the
          operation of the name server. These control channels are
          used by the <span><strong class="command">rndc</strong></span> utility to send
          commands to and retrieve non-DNS results from a name server.
        </p>
<p>
          An <span><strong class="command">inet</strong></span> control channel is a TCP socket
          listening at the specified <span><strong class="command">ip_port</strong></span> on the
          specified <span><strong class="command">ip_addr</strong></span>, which can be an IPv4 or IPv6
          address.  An <span><strong class="command">ip_addr</strong></span> of <code class="literal">*</code> (asterisk) is
          interpreted as the IPv4 wildcard address; connections will be
          accepted on any of the system's IPv4 addresses.
          To listen on the IPv6 wildcard address,
          use an <span><strong class="command">ip_addr</strong></span> of <code class="literal">::</code>.
          If you will only use <span><strong class="command">rndc</strong></span> on the local host,
          using the loopback address (<code class="literal">127.0.0.1</code>
          or <code class="literal">::1</code>) is recommended for maximum security.
        </p>
<p>
          If no port is specified, port 953 is used. The asterisk
          "<code class="literal">*</code>" cannot be used for <span><strong class="command">ip_port</strong></span>.
        </p>
<p>
          The ability to issue commands over the control channel is
          restricted by the <span><strong class="command">allow</strong></span> and
          <span><strong class="command">keys</strong></span> clauses.
          Connections to the control channel are permitted based on the
          <span><strong class="command">address_match_list</strong></span>.  This is for simple
          IP address based filtering only; any <span><strong class="command">key_id</strong></span>
          elements of the <span><strong class="command">address_match_list</strong></span>
          are ignored.
        </p>
<p>
          A <span><strong class="command">unix</strong></span> control channel is a UNIX domain
          socket listening at the specified path in the file system.
          Access to the socket is specified by the <span><strong class="command">perm</strong></span>,
          <span><strong class="command">owner</strong></span> and <span><strong class="command">group</strong></span> clauses.
          Note on some platforms (SunOS and Solaris) the permissions
          (<span><strong class="command">perm</strong></span>) are applied to the parent directory
          as the permissions on the socket itself are ignored.
        </p>
<p>
          The primary authorization mechanism of the command
          channel is the <span><strong class="command">key_list</strong></span>, which
          contains a list of <span><strong class="command">key_id</strong></span>s.
          Each <span><strong class="command">key_id</strong></span> in the <span><strong class="command">key_list</strong></span>
          is authorized to execute commands over the control channel.
          See <a href="Bv9ARM.ch03.html#rndc">Remote Name Daemon Control application</a> in <a href="Bv9ARM.ch03.html#admin_tools" title="Administrative Tools">the section called &#8220;Administrative Tools&#8221;</a>)
          for information about configuring keys in <span><strong class="command">rndc</strong></span>.
        </p>
<p>
          If no <span><strong class="command">controls</strong></span> statement is present,
          <span><strong class="command">named</strong></span> will set up a default
          control channel listening on the loopback address 127.0.0.1
          and its IPv6 counterpart ::1.
          In this case, and also when the <span><strong class="command">controls</strong></span> statement
          is present but does not have a <span><strong class="command">keys</strong></span> clause,
          <span><strong class="command">named</strong></span> will attempt to load the command channel key
          from the file <code class="filename">rndc.key</code> in
          <code class="filename">/etc</code> (or whatever <code class="varname">sysconfdir</code>
          was specified as when <acronym class="acronym">BIND</acronym> was built).
          To create a <code class="filename">rndc.key</code> file, run
          <strong class="userinput"><code>rndc-confgen -a</code></strong>.
        </p>
<p>
          The <code class="filename">rndc.key</code> feature was created to
          ease the transition of systems from <acronym class="acronym">BIND</acronym> 8,
          which did not have digital signatures on its command channel
          messages and thus did not have a <span><strong class="command">keys</strong></span> clause.

          It makes it possible to use an existing <acronym class="acronym">BIND</acronym> 8
          configuration file in <acronym class="acronym">BIND</acronym> 9 unchanged,
          and still have <span><strong class="command">rndc</strong></span> work the same way
          <span><strong class="command">ndc</strong></span> worked in BIND 8, simply by executing the
          command <strong class="userinput"><code>rndc-confgen -a</code></strong> after BIND 9 is
          installed.
        </p>
<p>
          Since the <code class="filename">rndc.key</code> feature
          is only intended to allow the backward-compatible usage of
          <acronym class="acronym">BIND</acronym> 8 configuration files, this
          feature does not
          have a high degree of configurability.  You cannot easily change
          the key name or the size of the secret, so you should make a
          <code class="filename">rndc.conf</code> with your own key if you
          wish to change
          those things.  The <code class="filename">rndc.key</code> file
          also has its
          permissions set such that only the owner of the file (the user that
          <span><strong class="command">named</strong></span> is running as) can access it.
          If you
          desire greater flexibility in allowing other users to access
          <span><strong class="command">rndc</strong></span> commands, then you need to create
          a
          <code class="filename">rndc.conf</code> file and make it group
          readable by a group
          that contains the users who should have access.
        </p>
<p>
          To disable the command channel, use an empty
          <span><strong class="command">controls</strong></span> statement:
          <span><strong class="command">controls { };</strong></span>.
        </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574711"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">include <em class="replaceable"><code>filename</code></em>;</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574726"></a><span><strong class="command">include</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">include</strong></span> statement inserts the
          specified file at the point where the <span><strong class="command">include</strong></span>
          statement is encountered. The <span><strong class="command">include</strong></span>
                statement facilitates the administration of configuration
          files
          by permitting the reading or writing of some things but not
          others. For example, the statement could include private keys
          that are readable only by the name server.
        </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574749"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">key <em class="replaceable"><code>key_id</code></em> {
    algorithm <em class="replaceable"><code>string</code></em>;
    secret <em class="replaceable"><code>string</code></em>;
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574771"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>
          The <span><strong class="command">key</strong></span> statement defines a shared
          secret key for use with TSIG (see <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
          or the command channel
          (see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and
          Usage&#8221;</a>).
        </p>
<p>
          The <span><strong class="command">key</strong></span> statement can occur at the
          top level
          of the configuration file or inside a <span><strong class="command">view</strong></span>
          statement.  Keys defined in top-level <span><strong class="command">key</strong></span>
          statements can be used in all views.  Keys intended for use in
          a <span><strong class="command">controls</strong></span> statement
          (see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and
          Usage&#8221;</a>)
          must be defined at the top level.
        </p>
<p>
          The <em class="replaceable"><code>key_id</code></em>, also known as the
          key name, is a domain name uniquely identifying the key. It can
          be used in a <span><strong class="command">server</strong></span>
          statement to cause requests sent to that
          server to be signed with this key, or in address match lists to
          verify that incoming requests have been signed with a key
          matching this name, algorithm, and secret.
        </p>
<p>
          The <em class="replaceable"><code>algorithm_id</code></em> is a string
          that specifies a security/authentication algorithm.  Named
          supports <code class="literal">hmac-md5</code>,
          <code class="literal">hmac-sha1</code>, <code class="literal">hmac-sha224</code>,
          <code class="literal">hmac-sha256</code>, <code class="literal">hmac-sha384</code>
          and <code class="literal">hmac-sha512</code> TSIG authentication.
          Truncated hashes are supported by appending the minimum
          number of required bits preceded by a dash, e.g.
          <code class="literal">hmac-sha1-80</code>.  The
          <em class="replaceable"><code>secret_string</code></em> is the secret
          to be used by the algorithm, and is treated as a base-64
          encoded string.
        </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2574930"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">logging</strong></span> {
   [ <span><strong class="command">channel</strong></span> <em class="replaceable"><code>channel_name</code></em> {
     ( <span><strong class="command">file</strong></span> <em class="replaceable"><code>path name</code></em>
         [ <span><strong class="command">versions</strong></span> ( <em class="replaceable"><code>number</code></em> | <span><strong class="command">unlimited</strong></span> ) ]
         [ <span><strong class="command">size</strong></span> <em class="replaceable"><code>size spec</code></em> ]
       | <span><strong class="command">syslog</strong></span> <em class="replaceable"><code>syslog_facility</code></em>
       | <span><strong class="command">stderr</strong></span>
       | <span><strong class="command">null</strong></span> );
     [ <span><strong class="command">severity</strong></span> (<code class="option">critical</code> | <code class="option">error</code> | <code class="option">warning</code> | <code class="option">notice</code> |
                 <code class="option">info</code> | <code class="option">debug</code> [ <em class="replaceable"><code>level</code></em> ] | <code class="option">dynamic</code> ); ]
     [ <span><strong class="command">print-category</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
     [ <span><strong class="command">print-severity</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
     [ <span><strong class="command">print-time</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
   }; ]
   [ <span><strong class="command">category</strong></span> <em class="replaceable"><code>category_name</code></em> {
     <em class="replaceable"><code>channel_name</code></em> ; [ <em class="replaceable"><code>channel_name</code></em> ; ... ]
   }; ]
   ...
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2575056"></a><span><strong class="command">logging</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">logging</strong></span> statement configures a
          wide
          variety of logging options for the name server. Its <span><strong class="command">channel</strong></span> phrase
          associates output methods, format options and severity levels with
          a name that can then be used with the <span><strong class="command">category</strong></span> phrase
          to select how various classes of messages are logged.
        </p>
<p>
          Only one <span><strong class="command">logging</strong></span> statement is used to
          define
          as many channels and categories as are wanted. If there is no <span><strong class="command">logging</strong></span> statement,
          the logging configuration will be:
        </p>
<pre class="programlisting">logging {
     category default { default_syslog; default_debug; };
     category unmatched { null; };
};
</pre>
<p>
          In <acronym class="acronym">BIND</acronym> 9, the logging configuration
          is only established when
          the entire configuration file has been parsed.  In <acronym class="acronym">BIND</acronym> 8, it was
          established as soon as the <span><strong class="command">logging</strong></span>
          statement
          was parsed. When the server is starting up, all logging messages
          regarding syntax errors in the configuration file go to the default
          channels, or to standard error if the "<code class="option">-g</code>" option
          was specified.
        </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2575108"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
<p>
            All log output goes to one or more <span class="emphasis"><em>channels</em></span>;
            you can make as many of them as you want.
          </p>
<p>
            Every channel definition must include a destination clause that
            says whether messages selected for the channel go to a file, to a
            particular syslog facility, to the standard error stream, or are
            discarded. It can optionally also limit the message severity level
            that will be accepted by the channel (the default is
            <span><strong class="command">info</strong></span>), and whether to include a
            <span><strong class="command">named</strong></span>-generated time stamp, the
            category name
            and/or severity level (the default is not to include any).
          </p>
<p>
            The <span><strong class="command">null</strong></span> destination clause
            causes all messages sent to the channel to be discarded;
            in that case, other options for the channel are meaningless.
          </p>
<p>
            The <span><strong class="command">file</strong></span> destination clause directs
            the channel
            to a disk file.  It can include limitations
            both on how large the file is allowed to become, and how many
            versions
            of the file will be saved each time the file is opened.
          </p>
<p>
            If you use the <span><strong class="command">versions</strong></span> log file
            option, then
            <span><strong class="command">named</strong></span> will retain that many backup
            versions of the file by
            renaming them when opening.  For example, if you choose to keep
            three old versions
            of the file <code class="filename">lamers.log</code>, then just
            before it is opened
            <code class="filename">lamers.log.1</code> is renamed to
            <code class="filename">lamers.log.2</code>, <code class="filename">lamers.log.0</code> is renamed
            to <code class="filename">lamers.log.1</code>, and <code class="filename">lamers.log</code> is
            renamed to <code class="filename">lamers.log.0</code>.
            You can say <span><strong class="command">versions unlimited</strong></span> to
            not limit
            the number of versions.
            If a <span><strong class="command">size</strong></span> option is associated with
            the log file,
            then renaming is only done when the file being opened exceeds the
            indicated size.  No backup versions are kept by default; any
            existing
            log file is simply appended.
          </p>
<p>
            The <span><strong class="command">size</strong></span> option for files is used
            to limit log
            growth. If the file ever exceeds the size, then <span><strong class="command">named</strong></span> will
            stop writing to the file unless it has a <span><strong class="command">versions</strong></span> option
            associated with it.  If backup versions are kept, the files are
            rolled as
            described above and a new one begun.  If there is no
            <span><strong class="command">versions</strong></span> option, no more data will
            be written to the log
            until some out-of-band mechanism removes or truncates the log to
            less than the
            maximum size.  The default behavior is not to limit the size of
            the
            file.
          </p>
<p>
            Example usage of the <span><strong class="command">size</strong></span> and
            <span><strong class="command">versions</strong></span> options:
          </p>
<pre class="programlisting">channel an_example_channel {
    file "example.log" versions 3 size 20m;
    print-time yes;
    print-category yes;
};
</pre>
<p>
            The <span><strong class="command">syslog</strong></span> destination clause
            directs the
            channel to the system log.  Its argument is a
            syslog facility as described in the <span><strong class="command">syslog</strong></span> man
            page. Known facilities are <span><strong class="command">kern</strong></span>, <span><strong class="command">user</strong></span>,
            <span><strong class="command">mail</strong></span>, <span><strong class="command">daemon</strong></span>, <span><strong class="command">auth</strong></span>,
            <span><strong class="command">syslog</strong></span>, <span><strong class="command">lpr</strong></span>, <span><strong class="command">news</strong></span>,
            <span><strong class="command">uucp</strong></span>, <span><strong class="command">cron</strong></span>, <span><strong class="command">authpriv</strong></span>,
            <span><strong class="command">ftp</strong></span>, <span><strong class="command">local0</strong></span>, <span><strong class="command">local1</strong></span>,
            <span><strong class="command">local2</strong></span>, <span><strong class="command">local3</strong></span>, <span><strong class="command">local4</strong></span>,
            <span><strong class="command">local5</strong></span>, <span><strong class="command">local6</strong></span> and
            <span><strong class="command">local7</strong></span>, however not all facilities
            are supported on
            all operating systems.
            How <span><strong class="command">syslog</strong></span> will handle messages
            sent to
            this facility is described in the <span><strong class="command">syslog.conf</strong></span> man
            page. If you have a system which uses a very old version of <span><strong class="command">syslog</strong></span> that
            only uses two arguments to the <span><strong class="command">openlog()</strong></span> function,
            then this clause is silently ignored.
          </p>
<p>
            The <span><strong class="command">severity</strong></span> clause works like <span><strong class="command">syslog</strong></span>'s
            "priorities", except that they can also be used if you are writing
            straight to a file rather than using <span><strong class="command">syslog</strong></span>.
            Messages which are not at least of the severity level given will
            not be selected for the channel; messages of higher severity
            levels
            will be accepted.
          </p>
<p>
            If you are using <span><strong class="command">syslog</strong></span>, then the <span><strong class="command">syslog.conf</strong></span> priorities
            will also determine what eventually passes through. For example,
            defining a channel facility and severity as <span><strong class="command">daemon</strong></span> and <span><strong class="command">debug</strong></span> but
            only logging <span><strong class="command">daemon.warning</strong></span> via <span><strong class="command">syslog.conf</strong></span> will
            cause messages of severity <span><strong class="command">info</strong></span> and
            <span><strong class="command">notice</strong></span> to
            be dropped. If the situation were reversed, with <span><strong class="command">named</strong></span> writing
            messages of only <span><strong class="command">warning</strong></span> or higher,
            then <span><strong class="command">syslogd</strong></span> would
            print all messages it received from the channel.
          </p>
<p>
            The <span><strong class="command">stderr</strong></span> destination clause
            directs the
            channel to the server's standard error stream.  This is intended
            for
            use when the server is running as a foreground process, for
            example
            when debugging a configuration.
          </p>
<p>
            The server can supply extensive debugging information when
            it is in debugging mode. If the server's global debug level is
            greater
            than zero, then debugging mode will be active. The global debug
            level is set either by starting the <span><strong class="command">named</strong></span> server
            with the <code class="option">-d</code> flag followed by a positive integer,
            or by running <span><strong class="command">rndc trace</strong></span>.
            The global debug level
            can be set to zero, and debugging mode turned off, by running <span><strong class="command">rndc
notrace</strong></span>. All debugging messages in the server have a debug
            level, and higher debug levels give more detailed output. Channels
            that specify a specific debug severity, for example:
          </p>
<pre class="programlisting">channel specific_debug_level {
    file "foo";
    severity debug 3;
};
</pre>
<p>
            will get debugging output of level 3 or less any time the
            server is in debugging mode, regardless of the global debugging
            level. Channels with <span><strong class="command">dynamic</strong></span>
            severity use the
            server's global debug level to determine what messages to print.
          </p>
<p>
            If <span><strong class="command">print-time</strong></span> has been turned on,
            then
            the date and time will be logged. <span><strong class="command">print-time</strong></span> may
            be specified for a <span><strong class="command">syslog</strong></span> channel,
            but is usually
            pointless since <span><strong class="command">syslog</strong></span> also prints
            the date and
            time. If <span><strong class="command">print-category</strong></span> is
            requested, then the
            category of the message will be logged as well. Finally, if <span><strong class="command">print-severity</strong></span> is
            on, then the severity level of the message will be logged. The <span><strong class="command">print-</strong></span> options may
            be used in any combination, and will always be printed in the
            following
            order: time, category, severity. Here is an example where all
            three <span><strong class="command">print-</strong></span> options
            are on:
          </p>
<p>
            <code class="computeroutput">28-Feb-2000 15:05:32.863 general: notice: running</code>
          </p>
<p>
            There are four predefined channels that are used for
            <span><strong class="command">named</strong></span>'s default logging as follows.
            How they are
            used is described in <a href="Bv9ARM.ch06.html#the_category_phrase" title="The category Phrase">the section called &#8220;The <span><strong class="command">category</strong></span> Phrase&#8221;</a>.
          </p>
<pre class="programlisting">channel default_syslog {
    syslog daemon;                      // send to syslog's daemon
                                        // facility
    severity info;                      // only send priority info
                                        // and higher
};

channel default_debug {
    file "named.run";                   // write to named.run in
                                        // the working directory
                                        // Note: stderr is used instead
                                        // of "named.run"
                                        // if the server is started
                                        // with the '-f' option.
    severity dynamic;                   // log at the server's
                                        // current debug level
};

channel default_stderr {
    stderr;                             // writes to stderr
    severity info;                      // only send priority info
                                        // and higher
};

channel null {
   null;                                // toss anything sent to
                                        // this channel
};
</pre>
<p>
            The <span><strong class="command">default_debug</strong></span> channel has the
            special
            property that it only produces output when the server's debug
            level is
            nonzero.  It normally writes to a file called <code class="filename">named.run</code>
            in the server's working directory.
          </p>
<p>
            For security reasons, when the "<code class="option">-u</code>"
            command line option is used, the <code class="filename">named.run</code> file
            is created only after <span><strong class="command">named</strong></span> has
            changed to the
            new UID, and any debug output generated while <span><strong class="command">named</strong></span> is
            starting up and still running as root is discarded.  If you need
            to capture this output, you must run the server with the "<code class="option">-g</code>"
            option and redirect standard error to a file.
          </p>
<p>
            Once a channel is defined, it cannot be redefined. Thus you
            cannot alter the built-in channels directly, but you can modify
            the default logging by pointing categories at channels you have
            defined.
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="the_category_phrase"></a>The <span><strong class="command">category</strong></span> Phrase</h4></div></div></div>
<p>
            There are many categories, so you can send the logs you want
            to see wherever you want, without seeing logs you don't want. If
            you don't specify a list of channels for a category, then log
            messages
            in that category will be sent to the <span><strong class="command">default</strong></span> category
            instead. If you don't specify a default category, the following
            "default default" is used:
          </p>
<pre class="programlisting">category default { default_syslog; default_debug; };
</pre>
<p>
            As an example, let's say you want to log security events to
            a file, but you also want keep the default logging behavior. You'd
            specify the following:
          </p>
<pre class="programlisting">channel my_security_channel {
    file "my_security_file";
    severity info;
};
category security {
    my_security_channel;
    default_syslog;
    default_debug;
};</pre>
<p>
            To discard all messages in a category, specify the <span><strong class="command">null</strong></span> channel:
          </p>
<pre class="programlisting">category xfer-out { null; };
category notify { null; };
</pre>
<p>
            Following are the available categories and brief descriptions
            of the types of log information they contain. More
            categories may be added in future <acronym class="acronym">BIND</acronym> releases.
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p><span><strong class="command">default</strong></span></p>
                  </td>
<td>
                    <p>
                      The default category defines the logging
                      options for those categories where no specific
                      configuration has been
                      defined.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">general</strong></span></p>
                  </td>
<td>
                    <p>
                      The catch-all. Many things still aren't
                      classified into categories, and they all end up here.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">database</strong></span></p>
                  </td>
<td>
                    <p>
                      Messages relating to the databases used
                      internally by the name server to store zone and cache
                      data.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">security</strong></span></p>
                  </td>
<td>
                    <p>
                      Approval and denial of requests.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">config</strong></span></p>
                  </td>
<td>
                    <p>
                      Configuration file parsing and processing.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">resolver</strong></span></p>
                  </td>
<td>
                    <p>
                      DNS resolution, such as the recursive
                      lookups performed on behalf of clients by a caching name
                      server.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">xfer-in</strong></span></p>
                  </td>
<td>
                    <p>
                      Zone transfers the server is receiving.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">xfer-out</strong></span></p>
                  </td>
<td>
                    <p>
                      Zone transfers the server is sending.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">notify</strong></span></p>
                  </td>
<td>
                    <p>
                      The NOTIFY protocol.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">client</strong></span></p>
                  </td>
<td>
                    <p>
                      Processing of client requests.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">unmatched</strong></span></p>
                  </td>
<td>
                    <p>
                      Messages that named was unable to determine the
                      class of or for which there was no matching <span><strong class="command">view</strong></span>.
                      A one line summary is also logged to the <span><strong class="command">client</strong></span> category.
                      This category is best sent to a file or stderr, by
                      default it is sent to
                      the <span><strong class="command">null</strong></span> channel.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">network</strong></span></p>
                  </td>
<td>
                    <p>
                      Network operations.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">update</strong></span></p>
                  </td>
<td>
                    <p>
                      Dynamic updates.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">update-security</strong></span></p>
                  </td>
<td>
                    <p>
                      Approval and denial of update requests.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">queries</strong></span></p>
                  </td>
<td>
                    <p>
                      Specify where queries should be logged to.
                    </p>
                    <p>
                      At startup, specifying the category <span><strong class="command">queries</strong></span> will also
                      enable query logging unless <span><strong class="command">querylog</strong></span> option has been
                      specified.
                    </p>
                    <p>
                      The query log entry reports the client's IP address and
                      port number, and the
                      query name, class and type.  It also reports whether the
                      Recursion Desired
                      flag was set (+ if set, - if not set), EDNS was in use
                      (E) or if the
                      query was signed (S).
                    </p>
                    <p>
                      <code class="computeroutput">client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</code>
                    </p>
                    <p>
                      <code class="computeroutput">client ::1#62537: query: www.example.net IN AAAA -SE</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">dispatch</strong></span></p>
                  </td>
<td>
                    <p>
                      Dispatching of incoming packets to the
                      server modules where they are to be processed.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">dnssec</strong></span></p>
                  </td>
<td>
                    <p>
                      DNSSEC and TSIG protocol processing.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">lame-servers</strong></span></p>
                  </td>
<td>
                    <p>
                      Lame servers.  These are misconfigurations
                      in remote servers, discovered by BIND 9 when trying to
                      query
                      those servers during resolution.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">delegation-only</strong></span></p>
                  </td>
<td>
                    <p>
                      Delegation only.  Logs queries that have have
                      been forced to NXDOMAIN as the result of a
                      delegation-only zone or
                      a <span><strong class="command">delegation-only</strong></span> in a
                      hint or stub zone declaration.
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2576406"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
<p>
           This is the grammar of the <span><strong class="command">lwres</strong></span>
          statement in the <code class="filename">named.conf</code> file:
        </p>
<pre class="programlisting"><span><strong class="command">lwres</strong></span> {
    [<span class="optional"> listen-on { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> view <em class="replaceable"><code>view_name</code></em>; </span>]
    [<span class="optional"> search { <em class="replaceable"><code>domain_name</code></em> ; [<span class="optional"> <em class="replaceable"><code>domain_name</code></em> ; ... </span>] }; </span>]
    [<span class="optional"> ndots <em class="replaceable"><code>number</code></em>; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2576480"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>
          The <span><strong class="command">lwres</strong></span> statement configures the
          name
          server to also act as a lightweight resolver server. (See
          <a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.)  There may be multiple
          <span><strong class="command">lwres</strong></span> statements configuring
          lightweight resolver servers with different properties.
        </p>
<p>
          The <span><strong class="command">listen-on</strong></span> statement specifies a
          list of
          addresses (and ports) that this instance of a lightweight resolver
          daemon
          should accept requests on.  If no port is specified, port 921 is
          used.
          If this statement is omitted, requests will be accepted on
          127.0.0.1,
          port 921.
        </p>
<p>
          The <span><strong class="command">view</strong></span> statement binds this
          instance of a
          lightweight resolver daemon to a view in the DNS namespace, so that
          the
          response will be constructed in the same manner as a normal DNS
          query
          matching this view.  If this statement is omitted, the default view
          is
          used, and if there is no default view, an error is triggered.
        </p>
<p>
          The <span><strong class="command">search</strong></span> statement is equivalent to
          the
          <span><strong class="command">search</strong></span> statement in
          <code class="filename">/etc/resolv.conf</code>.  It provides a
          list of domains
          which are appended to relative names in queries.
        </p>
<p>
          The <span><strong class="command">ndots</strong></span> statement is equivalent to
          the
          <span><strong class="command">ndots</strong></span> statement in
          <code class="filename">/etc/resolv.conf</code>.  It indicates the
          minimum
          number of dots in a relative domain name that should result in an
          exact match lookup before search path elements are appended.
        </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2576544"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">
<span><strong class="command">masters</strong></span> <em class="replaceable"><code>name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] };
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2576587"></a><span><strong class="command">masters</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p><span><strong class="command">masters</strong></span>
          lists allow for a common set of masters to be easily used by
          multiple stub and slave zones.
        </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2576602"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
<p>
          This is the grammar of the <span><strong class="command">options</strong></span>
          statement in the <code class="filename">named.conf</code> file:
        </p>
<pre class="programlisting">options {
    [<span class="optional"> version <em class="replaceable"><code>version_string</code></em>; </span>]
    [<span class="optional"> hostname <em class="replaceable"><code>hostname_string</code></em>; </span>]
    [<span class="optional"> server-id <em class="replaceable"><code>server_id_string</code></em>; </span>]
    [<span class="optional"> directory <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> named-xfer <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> tkey-domain <em class="replaceable"><code>domainname</code></em>; </span>]
    [<span class="optional"> tkey-dhkey <em class="replaceable"><code>key_name</code></em> <em class="replaceable"><code>key_tag</code></em>; </span>]
    [<span class="optional"> cache-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> dump-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> memstatistics-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> pid-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> recursing-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> statistics-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> auth-nxdomain <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> deallocate-on-exit <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em>; </span>]
    [<span class="optional"> fake-iquery <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> fetch-glue <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> flush-zones-on-shutdown <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> has-old-clients <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> host-statistics <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> host-statistics-max <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> minimal-responses <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> multiple-cnames <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em>; </span>]
    [<span class="optional"> recursion <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> rfc2308-type1 <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> use-id-pool <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-enable <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-validation <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-lookaside <em class="replaceable"><code>domain</code></em> trust-anchor <em class="replaceable"><code>domain</code></em>; </span>]
    [<span class="optional"> dnssec-must-be-secure <em class="replaceable"><code>domain yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-accept-expired <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> forward ( <em class="replaceable"><code>only</code></em> | <em class="replaceable"><code>first</code></em> ); </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> dual-stack-servers [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] {
        ( <em class="replaceable"><code>domain_name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] |
          <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ) ; 
        ... }; </span>]
    [<span class="optional"> check-names ( <em class="replaceable"><code>master</code></em> | <em class="replaceable"><code>slave</code></em> | <em class="replaceable"><code>response</code></em> )
        ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-mx ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-wildcard <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-integrity <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-mx-cname ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-srv-cname ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-sibling <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-query-cache { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-recursion { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> update-check-ksk <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> allow-v6-synthesis { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> blackhole { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> avoid-v4-udp-ports { <em class="replaceable"><code>port_list</code></em> }; </span>]
    [<span class="optional"> avoid-v6-udp-ports { <em class="replaceable"><code>port_list</code></em> }; </span>]
    [<span class="optional"> listen-on [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em> </span>] { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> listen-on-v6 [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em> </span>] { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> query-source ( ( <em class="replaceable"><code>ip4_addr</code></em> | <em class="replaceable"><code>*</code></em> )
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] |
        [<span class="optional"> address ( <em class="replaceable"><code>ip4_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] ) ; </span>]
    [<span class="optional"> query-source-v6 ( ( <em class="replaceable"><code>ip6_addr</code></em> | <em class="replaceable"><code>*</code></em> )
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] | 
        [<span class="optional"> address ( <em class="replaceable"><code>ip6_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] 
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] ) ; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> tcp-clients <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> recursive-clients <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> serial-query-rate <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> serial-queries <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> tcp-listen-queue <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfer-format <em class="replaceable"><code>( one-answer | many-answers )</code></em>; </span>]
    [<span class="optional"> transfers-in  <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfers-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfers-per-ns <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify-delay <em class="replaceable"><code>seconds</code></em> ; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-journal-size <em class="replaceable"><code>size_spec</code></em>; </span>]
    [<span class="optional"> coresize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> datasize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> files <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> stacksize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> cleaning-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> heartbeat-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> interface-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> statistics-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> topology { <em class="replaceable"><code>address_match_list</code></em> }</span>];
    [<span class="optional"> sortlist { <em class="replaceable"><code>address_match_list</code></em> }</span>];
    [<span class="optional"> rrset-order { <em class="replaceable"><code>order_spec</code></em> ; [<span class="optional"> <em class="replaceable"><code>order_spec</code></em> ; ... </span>] </span>] };
    [<span class="optional"> lame-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-ncache-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-cache-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-roots <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> use-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> provide-ixfr <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> request-ixfr <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> treat-cr-as-space <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em>; </span>]
    [<span class="optional"> additional-from-auth <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> additional-from-cache <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> random-device <em class="replaceable"><code>path_name</code></em> ; </span>]
    [<span class="optional"> max-cache-size <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> match-mapped-addresses <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> preferred-glue ( <em class="replaceable"><code>A</code></em> | <em class="replaceable"><code>AAAA</code></em> | <em class="replaceable"><code>NONE</code></em> ); </span>]
    [<span class="optional"> edns-udp-size <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-udp-size <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> root-delegation-only [<span class="optional"> exclude { <em class="replaceable"><code>namelist</code></em> } </span>] ; </span>]
    [<span class="optional"> querylog <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> disable-algorithms <em class="replaceable"><code>domain</code></em> { <em class="replaceable"><code>algorithm</code></em>; [<span class="optional"> <em class="replaceable"><code>algorithm</code></em>; </span>] }; </span>]
    [<span class="optional"> acache-enable <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> acache-cleaning-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-acache-size <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> clients-per-query <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-clients-per-query <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> empty-server <em class="replaceable"><code>name</code></em> ; </span>]
    [<span class="optional"> empty-contact <em class="replaceable"><code>name</code></em> ; </span>]
    [<span class="optional"> empty-zones-enable <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> disable-empty-zone <em class="replaceable"><code>zone_name</code></em> ; </span>]
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> zero-no-soa-ttl-cache <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="options"></a><span><strong class="command">options</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">options</strong></span> statement sets up global
          options
          to be used by <acronym class="acronym">BIND</acronym>. This statement
          may appear only
          once in a configuration file. If there is no <span><strong class="command">options</strong></span>
          statement, an options block with each option set to its default will
          be used.
        </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">directory</strong></span></span></dt>
<dd><p>
                The working directory of the server.
                Any non-absolute pathnames in the configuration file will be
                taken
                as relative to this directory. The default location for most
                server
                output files (e.g. <code class="filename">named.run</code>)
                is this directory.
                If a directory is not specified, the working directory
                defaults to `<code class="filename">.</code>', the directory from
                which the server
                was started. The directory specified should be an absolute
                path.
              </p></dd>
<dt><span class="term"><span><strong class="command">key-directory</strong></span></span></dt>
<dd><p>
                When performing dynamic update of secure zones, the
                directory where the public and private key files should be
                found,
                if different than the current working directory.  The
                directory specified
                must be an absolute path.
              </p></dd>
<dt><span class="term"><span><strong class="command">named-xfer</strong></span></span></dt>
<dd><p>
                <span class="emphasis"><em>This option is obsolete.</em></span>
                It was used in <acronym class="acronym">BIND</acronym> 8 to
                specify the pathname to the <span><strong class="command">named-xfer</strong></span> program.
                In <acronym class="acronym">BIND</acronym> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
                needed; its functionality is built into the name server.
              </p></dd>
<dt><span class="term"><span><strong class="command">tkey-domain</strong></span></span></dt>
<dd><p>
                The domain appended to the names of all
                shared keys generated with
                <span><strong class="command">TKEY</strong></span>. When a client
                requests a <span><strong class="command">TKEY</strong></span> exchange, it
                may or may not specify
                the desired name for the key. If present, the name of the
                shared
                key will be "<code class="varname">client specified part</code>" +
                "<code class="varname">tkey-domain</code>".
                Otherwise, the name of the shared key will be "<code class="varname">random hex
digits</code>" + "<code class="varname">tkey-domain</code>". In most cases,
                the <span><strong class="command">domainname</strong></span> should be the
                server's domain
                name.
              </p></dd>
<dt><span class="term"><span><strong class="command">tkey-dhkey</strong></span></span></dt>
<dd><p>
                The Diffie-Hellman key used by the server
                to generate shared keys with clients using the Diffie-Hellman
                mode
                of <span><strong class="command">TKEY</strong></span>. The server must be
                able to load the
                public and private keys from files in the working directory.
                In
                most cases, the keyname should be the server's host name.
              </p></dd>
<dt><span class="term"><span><strong class="command">cache-file</strong></span></span></dt>
<dd><p>
                This is for testing only.  Do not use.
              </p></dd>
<dt><span class="term"><span><strong class="command">dump-file</strong></span></span></dt>
<dd><p>
                The pathname of the file the server dumps
                the database to when instructed to do so with
                <span><strong class="command">rndc dumpdb</strong></span>.
                If not specified, the default is <code class="filename">named_dump.db</code>.
              </p></dd>
<dt><span class="term"><span><strong class="command">memstatistics-file</strong></span></span></dt>
<dd>
<p>
                The pathname of the file the server writes memory
                usage statistics to on exit.  If specified the
                statistics will be written to the file on exit.
              </p>
<p>
                In <acronym class="acronym">BIND</acronym> 9.5 and later this will
                default to <code class="filename">named.memstats</code>.
                <acronym class="acronym">BIND</acronym> 9.5 will also introduce
                <span><strong class="command">memstatistics</strong></span> to control the
                writing.
              </p>
</dd>
<dt><span class="term"><span><strong class="command">pid-file</strong></span></span></dt>
<dd><p>
                The pathname of the file the server writes its process ID
                in. If not specified, the default is <code class="filename">/var/run/named.pid</code>.
                The pid-file is used by programs that want to send signals to
                the running
                name server. Specifying <span><strong class="command">pid-file none</strong></span> disables the
                use of a PID file &#8212; no file will be written and any
                existing one will be removed.  Note that <span><strong class="command">none</strong></span>
                is a keyword, not a filename, and therefore is not enclosed
                in
                double quotes.
              </p></dd>
<dt><span class="term"><span><strong class="command">recursing-file</strong></span></span></dt>
<dd><p>
                The pathname of the file the server dumps
                the queries that are currently recursing when instructed
                to do so with <span><strong class="command">rndc recursing</strong></span>.
                If not specified, the default is <code class="filename">named.recursing</code>.
              </p></dd>
<dt><span class="term"><span><strong class="command">statistics-file</strong></span></span></dt>
<dd><p>
                The pathname of the file the server appends statistics
                to when instructed to do so using <span><strong class="command">rndc stats</strong></span>.
                If not specified, the default is <code class="filename">named.stats</code> in the
                server's current directory.  The format of the file is
                described
                in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
              </p></dd>
<dt><span class="term"><span><strong class="command">port</strong></span></span></dt>
<dd><p>
                The UDP/TCP port number the server uses for
                receiving and sending DNS protocol traffic.
                The default is 53.  This option is mainly intended for server
                testing;
                a server using a port other than 53 will not be able to
                communicate with
                the global DNS.
              </p></dd>
<dt><span class="term"><span><strong class="command">random-device</strong></span></span></dt>
<dd><p>
                The source of entropy to be used by the server.  Entropy is
                primarily needed
                for DNSSEC operations, such as TKEY transactions and dynamic
                update of signed
                zones.  This options specifies the device (or file) from which
                to read
                entropy.  If this is a file, operations requiring entropy will
                fail when the
                file has been exhausted.  If not specified, the default value
                is
                <code class="filename">/dev/random</code>
                (or equivalent) when present, and none otherwise.  The
                <span><strong class="command">random-device</strong></span> option takes
                effect during
                the initial configuration load at server startup time and
                is ignored on subsequent reloads.
              </p></dd>
<dt><span class="term"><span><strong class="command">preferred-glue</strong></span></span></dt>
<dd><p>
                If specified, the listed type (A or AAAA) will be emitted
                before other glue
                in the additional section of a query response.
                The default is not to prefer any type (NONE).
              </p></dd>
<dt><span class="term"><span><strong class="command">root-delegation-only</strong></span></span></dt>
<dd>
<p>
                Turn on enforcement of delegation-only in TLDs (top level domains) and root zones
                with an optional
                exclude list.
              </p>
<p>
                Note some TLDs are not delegation only (e.g. "DE", "LV", "US"
                and "MUSEUM").
              </p>
<pre class="programlisting">
options {
        root-delegation-only exclude { "de"; "lv"; "us"; "museum"; };
};
</pre>
</dd>
<dt><span class="term"><span><strong class="command">disable-algorithms</strong></span></span></dt>
<dd><p>
                Disable the specified DNSSEC algorithms at and below the
                specified name.
                Multiple <span><strong class="command">disable-algorithms</strong></span>
                statements are allowed.
                Only the most specific will be applied.
              </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-lookaside</strong></span></span></dt>
<dd><p>
                When set, <span><strong class="command">dnssec-lookaside</strong></span>
                provides the
                validator with an alternate method to validate DNSKEY records
                at the
                top of a zone.  When a DNSKEY is at or below a domain
                specified by the
                deepest <span><strong class="command">dnssec-lookaside</strong></span>, and
                the normal dnssec validation
                has left the key untrusted, the trust-anchor will be append to
                the key
                name and a DLV record will be looked up to see if it can
                validate the
                key.  If the DLV record validates a DNSKEY (similarly to the
                way a DS
                record does) the DNSKEY RRset is deemed to be trusted.
              </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-must-be-secure</strong></span></span></dt>
<dd><p>
                Specify hierarchies which must be or may not be secure (signed and
                validated).
                If <strong class="userinput"><code>yes</code></strong>, then named will only accept
                answers if they
                are secure.
                If <strong class="userinput"><code>no</code></strong>, then normal dnssec validation
                applies
                allowing for insecure answers to be accepted.
                The specified domain must be under a <span><strong class="command">trusted-key</strong></span> or
                <span><strong class="command">dnssec-lookaside</strong></span> must be
                active.
              </p></dd>
</dl></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="boolean_options"></a>Boolean Options</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">auth-nxdomain</strong></span></span></dt>
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then the <span><strong class="command">AA</strong></span> bit
                  is always set on NXDOMAIN responses, even if the server is
                  not actually
                  authoritative. The default is <strong class="userinput"><code>no</code></strong>;
                  this is
                  a change from <acronym class="acronym">BIND</acronym> 8. If you
                  are using very old DNS software, you
                  may need to set it to <strong class="userinput"><code>yes</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">deallocate-on-exit</strong></span></span></dt>
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym>
                  8 to enable checking
                  for memory leaks on exit. <acronym class="acronym">BIND</acronym> 9 ignores the option and always performs
                  the checks.
                </p></dd>
<dt><span class="term"><span><strong class="command">dialup</strong></span></span></dt>
<dd>
<p>
                  If <strong class="userinput"><code>yes</code></strong>, then the
                  server treats all zones as if they are doing zone transfers
                  across
                  a dial-on-demand dialup link, which can be brought up by
                  traffic
                  originating from this server. This has different effects
                  according
                  to zone type and concentrates the zone maintenance so that
                  it all
                  happens in a short interval, once every <span><strong class="command">heartbeat-interval</strong></span> and
                  hopefully during the one call. It also suppresses some of
                  the normal
                  zone maintenance traffic. The default is <strong class="userinput"><code>no</code></strong>.
                </p>
<p>
                  The <span><strong class="command">dialup</strong></span> option
                  may also be specified in the <span><strong class="command">view</strong></span> and
                  <span><strong class="command">zone</strong></span> statements,
                  in which case it overrides the global <span><strong class="command">dialup</strong></span>
                  option.
                </p>
<p>
                  If the zone is a master zone, then the server will send out a
                  NOTIFY
                  request to all the slaves (default). This should trigger the
                  zone serial
                  number check in the slave (providing it supports NOTIFY)
                  allowing the slave
                  to verify the zone while the connection is active.
                  The set of servers to which NOTIFY is sent can be controlled
                  by
                  <span><strong class="command">notify</strong></span> and <span><strong class="command">also-notify</strong></span>.
                </p>
<p>
                  If the
                  zone is a slave or stub zone, then the server will suppress
                  the regular
                  "zone up to date" (refresh) queries and only perform them
                  when the
                  <span><strong class="command">heartbeat-interval</strong></span> expires in
                  addition to sending
                  NOTIFY requests.
                </p>
<p>
                  Finer control can be achieved by using
                  <strong class="userinput"><code>notify</code></strong> which only sends NOTIFY
                  messages,
                  <strong class="userinput"><code>notify-passive</code></strong> which sends NOTIFY
                  messages and
                  suppresses the normal refresh queries, <strong class="userinput"><code>refresh</code></strong>
                  which suppresses normal refresh processing and sends refresh
                  queries
                  when the <span><strong class="command">heartbeat-interval</strong></span>
                  expires, and
                  <strong class="userinput"><code>passive</code></strong> which just disables normal
                  refresh
                  processing.
                </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                          <p>
                            dialup mode
                          </p>
                        </td>
<td>
                          <p>
                            normal refresh
                          </p>
                        </td>
<td>
                          <p>
                            heart-beat refresh
                          </p>
                        </td>
<td>
                          <p>
                            heart-beat notify
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">no</strong></span> (default)</p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">yes</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">notify</strong></span></p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">refresh</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">passive</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">notify-passive</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
</tr>
</tbody>
</table></div>
<p>
                  Note that normal NOTIFY processing is not affected by
                  <span><strong class="command">dialup</strong></span>.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">fake-iquery</strong></span></span></dt>
<dd><p>
                  In <acronym class="acronym">BIND</acronym> 8, this option
                  enabled simulating the obsolete DNS query type
                  IQUERY. <acronym class="acronym">BIND</acronym> 9 never does
                  IQUERY simulation.
                </p></dd>
<dt><span class="term"><span><strong class="command">fetch-glue</strong></span></span></dt>
<dd><p>
                  This option is obsolete.
                  In BIND 8, <strong class="userinput"><code>fetch-glue yes</code></strong>
                  caused the server to attempt to fetch glue resource records
                  it
                  didn't have when constructing the additional
                  data section of a response.  This is now considered a bad
                  idea
                  and BIND 9 never does it.
                </p></dd>
<dt><span class="term"><span><strong class="command">flush-zones-on-shutdown</strong></span></span></dt>
<dd><p>
                  When the nameserver exits due receiving SIGTERM,
                  flush or do not flush any pending zone writes.  The default
                  is
                  <span><strong class="command">flush-zones-on-shutdown</strong></span> <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">has-old-clients</strong></span></span></dt>
<dd><p>
                  This option was incorrectly implemented
                  in <acronym class="acronym">BIND</acronym> 8, and is ignored by <acronym class="acronym">BIND</acronym> 9.
                  To achieve the intended effect
                  of
                  <span><strong class="command">has-old-clients</strong></span> <strong class="userinput"><code>yes</code></strong>, specify
                  the two separate options <span><strong class="command">auth-nxdomain</strong></span> <strong class="userinput"><code>yes</code></strong>
                  and <span><strong class="command">rfc2308-type1</strong></span> <strong class="userinput"><code>no</code></strong> instead.
                </p></dd>
<dt><span class="term"><span><strong class="command">host-statistics</strong></span></span></dt>
<dd><p>
                  In BIND 8, this enables keeping of
                  statistics for every host that the name server interacts
                  with.
                  Not implemented in BIND 9.
                </p></dd>
<dt><span class="term"><span><strong class="command">maintain-ixfr-base</strong></span></span></dt>
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  It was used in <acronym class="acronym">BIND</acronym> 8 to
                  determine whether a transaction log was
                  kept for Incremental Zone Transfer. <acronym class="acronym">BIND</acronym> 9 maintains a transaction
                  log whenever possible.  If you need to disable outgoing
                  incremental zone
                  transfers, use <span><strong class="command">provide-ixfr</strong></span> <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">minimal-responses</strong></span></span></dt>
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then when generating
                  responses the server will only add records to the authority
                  and additional data sections when they are required (e.g.
                  delegations, negative responses).  This may improve the
                  performance of the server.
                  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">multiple-cnames</strong></span></span></dt>
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym> 8 to allow
                  a domain name to have multiple CNAME records in violation of
                  the DNS standards.  <acronym class="acronym">BIND</acronym> 9.2 onwards
                  always strictly enforces the CNAME rules both in master
                  files and dynamic updates.
                </p></dd>
<dt><span class="term"><span><strong class="command">notify</strong></span></span></dt>
<dd>
<p>
                  If <strong class="userinput"><code>yes</code></strong> (the default),
                  DNS NOTIFY messages are sent when a zone the server is
                  authoritative for
                  changes, see <a href="Bv9ARM.ch04.html#notify" title="Notify">the section called &#8220;Notify&#8221;</a>.  The messages are
                  sent to the
                  servers listed in the zone's NS records (except the master
                  server identified
                  in the SOA MNAME field), and to any servers listed in the
                  <span><strong class="command">also-notify</strong></span> option.
                </p>
<p>
                  If <strong class="userinput"><code>master-only</code></strong>, notifies are only
                  sent
                  for master zones.
                  If <strong class="userinput"><code>explicit</code></strong>, notifies are sent only
                  to
                  servers explicitly listed using <span><strong class="command">also-notify</strong></span>.
                  If <strong class="userinput"><code>no</code></strong>, no notifies are sent.
                </p>
<p>
                  The <span><strong class="command">notify</strong></span> option may also be
                  specified in the <span><strong class="command">zone</strong></span>
                  statement,
                  in which case it overrides the <span><strong class="command">options notify</strong></span> statement.
                  It would only be necessary to turn off this option if it
                  caused slaves
                  to crash.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">recursion</strong></span></span></dt>
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, and a
                  DNS query requests recursion, then the server will attempt
                  to do
                  all the work required to answer the query. If recursion is
                  off
                  and the server does not already know the answer, it will
                  return a
                  referral response. The default is
                  <strong class="userinput"><code>yes</code></strong>.
                  Note that setting <span><strong class="command">recursion no</strong></span> does not prevent
                  clients from getting data from the server's cache; it only
                  prevents new data from being cached as an effect of client
                  queries.
                  Caching may still occur as an effect the server's internal
                  operation, such as NOTIFY address lookups.
                  See also <span><strong class="command">fetch-glue</strong></span> above.
                </p></dd>
<dt><span class="term"><span><strong class="command">rfc2308-type1</strong></span></span></dt>
<dd>
<p>
                  Setting this to <strong class="userinput"><code>yes</code></strong> will
                  cause the server to send NS records along with the SOA
                  record for negative
                  answers. The default is <strong class="userinput"><code>no</code></strong>.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Not yet implemented in <acronym class="acronym">BIND</acronym>
                    9.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">use-id-pool</strong></span></span></dt>
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  <acronym class="acronym">BIND</acronym> 9 always allocates query
                  IDs from a pool.
                </p></dd>
<dt><span class="term"><span><strong class="command">zone-statistics</strong></span></span></dt>
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, the server will collect
                  statistical data on all zones (unless specifically turned
                  off
                  on a per-zone basis by specifying <span><strong class="command">zone-statistics no</strong></span>
                  in the <span><strong class="command">zone</strong></span> statement).
                  These statistics may be accessed
                  using <span><strong class="command">rndc stats</strong></span>, which will
                  dump them to the file listed
                  in the <span><strong class="command">statistics-file</strong></span>.  See
                  also <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
                </p></dd>
<dt><span class="term"><span><strong class="command">use-ixfr</strong></span></span></dt>
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  If you need to disable IXFR to a particular server or
                  servers, see
                  the information on the <span><strong class="command">provide-ixfr</strong></span> option
                  in <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                  See also
                  <a href="Bv9ARM.ch04.html#incremental_zone_transfers" title="Incremental Zone Transfers (IXFR)">the section called &#8220;Incremental Zone Transfers (IXFR)&#8221;</a>.
                </p></dd>
<dt><span class="term"><span><strong class="command">provide-ixfr</strong></span></span></dt>
<dd><p>
                  See the description of
                  <span><strong class="command">provide-ixfr</strong></span> in
                  <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                </p></dd>
<dt><span class="term"><span><strong class="command">request-ixfr</strong></span></span></dt>
<dd><p>
                  See the description of
                  <span><strong class="command">request-ixfr</strong></span> in
                  <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                </p></dd>
<dt><span class="term"><span><strong class="command">treat-cr-as-space</strong></span></span></dt>
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym>
                  8 to make
                  the server treat carriage return ("<span><strong class="command">\r</strong></span>") characters the same way
                  as a space or tab character,
                  to facilitate loading of zone files on a UNIX system that
                  were generated
                  on an NT or DOS machine. In <acronym class="acronym">BIND</acronym> 9, both UNIX "<span><strong class="command">\n</strong></span>"
                  and NT/DOS "<span><strong class="command">\r\n</strong></span>" newlines
                  are always accepted,
                  and the option is ignored.
                </p></dd>
<dt>
<span class="term"><span><strong class="command">additional-from-auth</strong></span>, </span><span class="term"><span><strong class="command">additional-from-cache</strong></span></span>
</dt>
<dd>
<p>
                  These options control the behavior of an authoritative
                  server when
                  answering queries which have additional data, or when
                  following CNAME
                  and DNAME chains.
                </p>
<p>
                  When both of these options are set to <strong class="userinput"><code>yes</code></strong>
                  (the default) and a
                  query is being answered from authoritative data (a zone
                  configured into the server), the additional data section of
                  the
                  reply will be filled in using data from other authoritative
                  zones
                  and from the cache.  In some situations this is undesirable,
                  such
                  as when there is concern over the correctness of the cache,
                  or
                  in servers where slave zones may be added and modified by
                  untrusted third parties.  Also, avoiding
                  the search for this additional data will speed up server
                  operations
                  at the possible expense of additional queries to resolve
                  what would
                  otherwise be provided in the additional section.
                </p>
<p>
                  For example, if a query asks for an MX record for host <code class="literal">foo.example.com</code>,
                  and the record found is "<code class="literal">MX 10 mail.example.net</code>", normally the address
                  records (A and AAAA) for <code class="literal">mail.example.net</code> will be provided as well,
                  if known, even though they are not in the example.com zone.
                  Setting these options to <span><strong class="command">no</strong></span>
                  disables this behavior and makes
                  the server only search for additional data in the zone it
                  answers from.
                </p>
<p>
                  These options are intended for use in authoritative-only
                  servers, or in authoritative-only views.  Attempts to set
                  them to <span><strong class="command">no</strong></span> without also
                  specifying
                  <span><strong class="command">recursion no</strong></span> will cause the
                  server to
                  ignore the options and log a warning message.
                </p>
<p>
                  Specifying <span><strong class="command">additional-from-cache no</strong></span> actually
                  disables the use of the cache not only for additional data
                  lookups
                  but also when looking up the answer.  This is usually the
                  desired
                  behavior in an authoritative-only server where the
                  correctness of
                  the cached data is an issue.
                </p>
<p>
                  When a name server is non-recursively queried for a name
                  that is not
                  below the apex of any served zone, it normally answers with
                  an
                  "upwards referral" to the root servers or the servers of
                  some other
                  known parent of the query name.  Since the data in an
                  upwards referral
                  comes from the cache, the server will not be able to provide
                  upwards
                  referrals when <span><strong class="command">additional-from-cache no</strong></span>
                  has been specified.  Instead, it will respond to such
                  queries
                  with REFUSED.  This should not cause any problems since
                  upwards referrals are not required for the resolution
                  process.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">match-mapped-addresses</strong></span></span></dt>
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then an
                  IPv4-mapped IPv6 address will match any address match
                  list entries that match the corresponding IPv4 address.
                  Enabling this option is sometimes useful on IPv6-enabled
                  Linux
                  systems, to work around a kernel quirk that causes IPv4
                  TCP connections such as zone transfers to be accepted
                  on an IPv6 socket using mapped addresses, causing
                  address match lists designed for IPv4 to fail to match.
                  The use of this option for any other purpose is discouraged.
                </p></dd>
<dt><span class="term"><span><strong class="command">ixfr-from-differences</strong></span></span></dt>
<dd>
<p>
                  When <strong class="userinput"><code>yes</code></strong> and the server loads a new version of a master
                  zone from its zone file or receives a new version of a slave
                  file by a non-incremental zone transfer, it will compare
                  the new version to the previous one and calculate a set
                  of differences.  The differences are then logged in the
                  zone's journal file such that the changes can be transmitted
                  to downstream slaves as an incremental zone transfer.
                </p>
<p>
                  By allowing incremental zone transfers to be used for
                  non-dynamic zones, this option saves bandwidth at the
                  expense of increased CPU and memory consumption at the
                  master.
                  In particular, if the new version of a zone is completely
                  different from the previous one, the set of differences
                  will be of a size comparable to the combined size of the
                  old and new zone version, and the server will need to
                  temporarily allocate memory to hold this complete
                  difference set.
                </p>
<p><span><strong class="command">ixfr-from-differences</strong></span>
                  also accepts <span><strong class="command">master</strong></span> and
                  <span><strong class="command">slave</strong></span> at the view and options
                  levels which causes
                  <span><strong class="command">ixfr-from-differences</strong></span> to apply to
                  all <span><strong class="command">master</strong></span> or
                  <span><strong class="command">slave</strong></span> zones respectively.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">multi-master</strong></span></span></dt>
<dd><p>
                  This should be set when you have multiple masters for a zone
                  and the
                  addresses refer to different machines.  If <strong class="userinput"><code>yes</code></strong>, named will
                  not log
                  when the serial number on the master is less than what named
                  currently
                  has.  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-enable</strong></span></span></dt>
<dd><p>
                  Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>,
                  named behaves as if it does not support DNSSEC.
                  The default is <strong class="userinput"><code>yes</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-validation</strong></span></span></dt>
<dd><p>
                  Enable DNSSEC validation in named.
                  Note <span><strong class="command">dnssec-enable</strong></span> also needs to be
                  set to <strong class="userinput"><code>yes</code></strong> to be effective.
                  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-accept-expired</strong></span></span></dt>
<dd><p>
                  Accept expired signatures when verifying DNSSEC signatures.
                  The default is <strong class="userinput"><code>no</code></strong>.
                  Setting this option to "yes" leaves named vulnerable to replay attacks.
                </p></dd>
<dt><span class="term"><span><strong class="command">querylog</strong></span></span></dt>
<dd><p>
                  Specify whether query logging should be started when named
                  starts.
                  If <span><strong class="command">querylog</strong></span> is not specified,
                  then the query logging
                  is determined by the presence of the logging category <span><strong class="command">queries</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-names</strong></span></span></dt>
<dd>
<p>
                  This option is used to restrict the character set and syntax
                  of
                  certain domain names in master files and/or DNS responses
                  received
                  from the network.  The default varies according to usage
                  area.  For
                  <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.
                  For <span><strong class="command">slave</strong></span> zones the default
                  is <span><strong class="command">warn</strong></span>.
                  For answers received from the network (<span><strong class="command">response</strong></span>)
                  the default is <span><strong class="command">ignore</strong></span>.
                </p>
<p>
                  The rules for legal hostnames and mail domains are derived
                  from RFC 952 and RFC 821 as modified by RFC 1123.
                </p>
<p><span><strong class="command">check-names</strong></span>
                  applies to the owner names of A, AAA and MX records.
                  It also applies to the domain names in the RDATA of NS, SOA
                  and MX records.
                  It also applies to the RDATA of PTR records where the owner
                  name indicated that it is a reverse lookup of a hostname
                  (the owner name ends in IN-ADDR.ARPA, IP6.ARPA, or IP6.INT).
                </p>
</dd>
<dt><span class="term"><span><strong class="command">check-mx</strong></span></span></dt>
<dd><p>
                  Check whether the MX record appears to refer to a IP address.
                  The default is to <span><strong class="command">warn</strong></span>.  Other possible
                  values are <span><strong class="command">fail</strong></span> and
                  <span><strong class="command">ignore</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-wildcard</strong></span></span></dt>
<dd><p>
                  This option is used to check for non-terminal wildcards.
                  The use of non-terminal wildcards is almost always as a
                  result of a failure
                  to understand the wildcard matching algorithm (RFC 1034).
                  This option
                  affects master zones.  The default (<span><strong class="command">yes</strong></span>) is to check
                  for non-terminal wildcards and issue a warning.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-integrity</strong></span></span></dt>
<dd><p>
                  Perform post load zone integrity checks on master
                  zones.  This checks that MX and SRV records refer
                  to address (A or AAAA) records and that glue
                  address records exist for delegated zones.  For
                  MX and SRV records only in-zone hostnames are
                  checked (for out-of-zone hostnames use named-checkzone).
                  For NS records only names below top of zone are
                  checked (for out-of-zone names and glue consistency
                  checks use named-checkzone).  The default is
                  <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-mx-cname</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">check-integrity</strong></span> is set then
                  fail, warn or ignore MX records that refer
                  to CNAMES.  The default is to <span><strong class="command">warn</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-srv-cname</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">check-integrity</strong></span> is set then
                  fail, warn or ignore SRV records that refer
                  to CNAMES.  The default is to <span><strong class="command">warn</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-sibling</strong></span></span></dt>
<dd><p>
                  When performing integrity checks, also check that
                  sibling glue exists.  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl</strong></span></span></dt>
<dd><p>
                  When returning authoritative negative responses to
                  SOA queries set the TTL of the SOA recored returned in
                  the authority section to zero.
                  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl-cache</strong></span></span></dt>
<dd><p>
                  When caching a negative response to a SOA query
                  set the TTL to zero.
                  The default is <span><strong class="command">no</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">update-check-ksk</strong></span></span></dt>
<dd><p>
                  When regenerating the RRSIGs following a UPDATE
                  request to a secure zone, check the KSK flag on
                  the DNSKEY RR to determine if this key should be
                  used to generate the RRSIG.  This flag is ignored
                  if there are not DNSKEY RRs both with and without
                  a KSK.
                  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2580536"></a>Forwarding</h4></div></div></div>
<p>
            The forwarding facility can be used to create a large site-wide
            cache on a few servers, reducing traffic over links to external
            name servers. It can also be used to allow queries by servers that
            do not have direct access to the Internet, but wish to look up
            exterior
            names anyway. Forwarding occurs only on those queries for which
            the server is not authoritative and does not have the answer in
            its cache.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">forward</strong></span></span></dt>
<dd><p>
                  This option is only meaningful if the
                  forwarders list is not empty. A value of <code class="varname">first</code>,
                  the default, causes the server to query the forwarders
                  first &#8212; and
                  if that doesn't answer the question, the server will then
                  look for
                  the answer itself. If <code class="varname">only</code> is
                  specified, the
                  server will only query the forwarders.
                </p></dd>
<dt><span class="term"><span><strong class="command">forwarders</strong></span></span></dt>
<dd><p>
                  Specifies the IP addresses to be used
                  for forwarding. The default is the empty list (no
                  forwarding).
                </p></dd>
</dl></div>
<p>
            Forwarding can also be configured on a per-domain basis, allowing
            for the global forwarding options to be overridden in a variety
            of ways. You can set particular domains to use different
            forwarders,
            or have a different <span><strong class="command">forward only/first</strong></span> behavior,
            or not forward at all, see <a href="Bv9ARM.ch06.html#zone_statement_grammar" title="zone
            Statement Grammar">the section called &#8220;<span><strong class="command">zone</strong></span>
            Statement Grammar&#8221;</a>.
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2580595"></a>Dual-stack Servers</h4></div></div></div>
<p>
            Dual-stack servers are used as servers of last resort to work
            around
            problems in reachability due the lack of support for either IPv4
            or IPv6
            on the host machine.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">dual-stack-servers</strong></span></span></dt>
<dd><p>
                  Specifies host names or addresses of machines with access to
                  both IPv4 and IPv6 transports. If a hostname is used, the
                  server must be able
                  to resolve the name using only the transport it has.  If the
                  machine is dual
                  stacked, then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
                  access to a transport has been disabled on the command line
                  (e.g. <span><strong class="command">named -4</strong></span>).
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="access_control"></a>Access Control</h4></div></div></div>
<p>
            Access to the server can be restricted based on the IP address
            of the requesting system. See <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a> for
            details on how to specify IP address lists.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">allow-notify</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to
                  notify this server, a slave, of zone changes in addition
                  to the zone masters.
                  <span><strong class="command">allow-notify</strong></span> may also be
                  specified in the
                  <span><strong class="command">zone</strong></span> statement, in which case
                  it overrides the
                  <span><strong class="command">options allow-notify</strong></span>
                  statement.  It is only meaningful
                  for a slave zone.  If not specified, the default is to
                  process notify messages
                  only from a zone's master.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-query</strong></span></span></dt>
<dd>
<p>
                  Specifies which hosts are allowed to ask ordinary
                  DNS questions. <span><strong class="command">allow-query</strong></span> may
                  also be specified in the <span><strong class="command">zone</strong></span>
                  statement, in which case it overrides the
                  <span><strong class="command">options allow-query</strong></span> statement.
                  If not specified, the default is to allow queries
                  from all hosts.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    <span><strong class="command">allow-query-cache</strong></span> is now
                    used to specify access to the cache.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">allow-query-cache</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to get answers
                  from the cache.  If <span><strong class="command">allow-query-cache</strong></span>
                  is not set then <span><strong class="command">allow-recursion</strong></span>
                  is used if set, otherwise <span><strong class="command">allow-query</strong></span>
                  is used if set, otherwise the default
                  (<span><strong class="command">localnets;</strong></span>
                  <span><strong class="command">localhost;</strong></span>) is used.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-recursion</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to make recursive
                  queries through this server. If
                  <span><strong class="command">allow-recursion</strong></span> is not set
                  then <span><strong class="command">allow-query-cache</strong></span> is
                  used if set, otherwise <span><strong class="command">allow-query</strong></span>
                  is used if set, otherwise the default
                  (<span><strong class="command">localnets;</strong></span>
                  <span><strong class="command">localhost;</strong></span>) is used.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-update</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to
                  submit Dynamic DNS updates for master zones. The default is
                  to deny
                  updates from all hosts.  Note that allowing updates based
                  on the requestor's IP address is insecure; see
                  <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a> for details.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-update-forwarding</strong></span></span></dt>
<dd>
<p>
                  Specifies which hosts are allowed to
                  submit Dynamic DNS updates to slave zones to be forwarded to
                  the
                  master.  The default is <strong class="userinput"><code>{ none; }</code></strong>,
                  which
                  means that no update forwarding will be performed.  To
                  enable
                  update forwarding, specify
                  <strong class="userinput"><code>allow-update-forwarding { any; };</code></strong>.
                  Specifying values other than <strong class="userinput"><code>{ none; }</code></strong> or
                  <strong class="userinput"><code>{ any; }</code></strong> is usually
                  counterproductive, since
                  the responsibility for update access control should rest
                  with the
                  master server, not the slaves.
                </p>
<p>
                  Note that enabling the update forwarding feature on a slave
                  server
                  may expose master servers relying on insecure IP address
                  based
                  access control to attacks; see <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a>
                  for more details.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">allow-v6-synthesis</strong></span></span></dt>
<dd><p>
                  This option was introduced for the smooth transition from
                  AAAA
                  to A6 and from "nibble labels" to binary labels.
                  However, since both A6 and binary labels were then
                  deprecated,
                  this option was also deprecated.
                  It is now ignored with some warning messages.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-transfer</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to
                  receive zone transfers from the server. <span><strong class="command">allow-transfer</strong></span> may
                  also be specified in the <span><strong class="command">zone</strong></span>
                  statement, in which
                  case it overrides the <span><strong class="command">options allow-transfer</strong></span> statement.
                  If not specified, the default is to allow transfers to all
                  hosts.
                </p></dd>
<dt><span class="term"><span><strong class="command">blackhole</strong></span></span></dt>
<dd><p>
                  Specifies a list of addresses that the
                  server will not accept queries from or use to resolve a
                  query. Queries
                  from these addresses will not be responded to. The default
                  is <strong class="userinput"><code>none</code></strong>.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2581153"></a>Interfaces</h4></div></div></div>
<p>
            The interfaces and ports that the server will answer queries
            from may be specified using the <span><strong class="command">listen-on</strong></span> option. <span><strong class="command">listen-on</strong></span> takes
            an optional port, and an <code class="varname">address_match_list</code>.
            The server will listen on all interfaces allowed by the address
            match list. If a port is not specified, port 53 will be used.
          </p>
<p>
            Multiple <span><strong class="command">listen-on</strong></span> statements are
            allowed.
            For example,
          </p>
<pre class="programlisting">listen-on { 5.6.7.8; };
listen-on port 1234 { !1.2.3.4; 1.2/16; };
</pre>
<p>
            will enable the name server on port 53 for the IP address
            5.6.7.8, and on port 1234 of an address on the machine in net
            1.2 that is not 1.2.3.4.
          </p>
<p>
            If no <span><strong class="command">listen-on</strong></span> is specified, the
            server will listen on port 53 on all interfaces.
          </p>
<p>
            The <span><strong class="command">listen-on-v6</strong></span> option is used to
            specify the interfaces and the ports on which the server will
            listen
            for incoming queries sent using IPv6.
          </p>
<p>
            When </p>
<pre class="programlisting">{ any; }</pre>
<p> is
            specified
            as the <code class="varname">address_match_list</code> for the
            <span><strong class="command">listen-on-v6</strong></span> option,
            the server does not bind a separate socket to each IPv6 interface
            address as it does for IPv4 if the operating system has enough API
            support for IPv6 (specifically if it conforms to RFC 3493 and RFC
            3542).
            Instead, it listens on the IPv6 wildcard address.
            If the system only has incomplete API support for IPv6, however,
            the behavior is the same as that for IPv4.
          </p>
<p>
            A list of particular IPv6 addresses can also be specified, in
            which case
            the server listens on a separate socket for each specified
            address,
            regardless of whether the desired API is supported by the system.
          </p>
<p>
            Multiple <span><strong class="command">listen-on-v6</strong></span> options can
            be used.
            For example,
          </p>
<pre class="programlisting">listen-on-v6 { any; };
listen-on-v6 port 1234 { !2001:db8::/32; any; };
</pre>
<p>
            will enable the name server on port 53 for any IPv6 addresses
            (with a single wildcard socket),
            and on port 1234 of IPv6 addresses that is not in the prefix
            2001:db8::/32 (with separate sockets for each matched address.)
          </p>
<p>
            To make the server not listen on any IPv6 address, use
          </p>
<pre class="programlisting">listen-on-v6 { none; };
</pre>
<p>
            If no <span><strong class="command">listen-on-v6</strong></span> option is
            specified,
            the server will not listen on any IPv6 address.
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2581241"></a>Query Address</h4></div></div></div>
<p>
            If the server doesn't know the answer to a question, it will
            query other name servers. <span><strong class="command">query-source</strong></span> specifies
            the address and port used for such queries. For queries sent over
            IPv6, there is a separate <span><strong class="command">query-source-v6</strong></span> option.
            If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> (asterisk) or is omitted,
            a wildcard IP address (<span><strong class="command">INADDR_ANY</strong></span>)
            will be used.
            If <span><strong class="command">port</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
	    a random unprivileged port number is picked up and will be
            used for each query.
	    It is generally strongly discouraged to
	    specify a particular port for the
	    <span><strong class="command">query-source</strong></span> or
	    <span><strong class="command">query-source-v6</strong></span>
	    options; it implicitly disables the use of randomized port numbers
	    and leads to insecure operation.
	    The <span><strong class="command">avoid-v4-udp-ports</strong></span>
	    and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used
	    to prevent named
	    from selecting certain ports. The defaults are:
          </p>
<pre class="programlisting">query-source address * port *;
query-source-v6 address * port *;
</pre>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              The address specified in the <span><strong class="command">query-source</strong></span> option
              is used for both UDP and TCP queries, but the port applies only
              to
              UDP queries.  TCP queries always use a random
              unprivileged port.
            </p>
</div>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              Solaris 2.5.1 and earlier does not support setting the source
              address for TCP sockets.
            </p>
</div>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              See also <span><strong class="command">transfer-source</strong></span> and
              <span><strong class="command">notify-source</strong></span>.
            </p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="zone_transfers"></a>Zone Transfers</h4></div></div></div>
<p>
            <acronym class="acronym">BIND</acronym> has mechanisms in place to
            facilitate zone transfers
            and set limits on the amount of load that transfers place on the
            system. The following options apply to zone transfers.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">also-notify</strong></span></span></dt>
<dd><p>
                  Defines a global list of IP addresses of name servers
                  that are also sent NOTIFY messages whenever a fresh copy of
                  the
                  zone is loaded, in addition to the servers listed in the
                  zone's NS records.
                  This helps to ensure that copies of the zones will
                  quickly converge on stealth servers. If an <span><strong class="command">also-notify</strong></span> list
                  is given in a <span><strong class="command">zone</strong></span> statement,
                  it will override
                  the <span><strong class="command">options also-notify</strong></span>
                  statement. When a <span><strong class="command">zone notify</strong></span>
                  statement
                  is set to <span><strong class="command">no</strong></span>, the IP
                  addresses in the global <span><strong class="command">also-notify</strong></span> list will
                  not be sent NOTIFY messages for that zone. The default is
                  the empty
                  list (no global notification list).
                </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-in</strong></span></span></dt>
<dd><p>
                  Inbound zone transfers running longer than
                  this many minutes will be terminated. The default is 120
                  minutes
                  (2 hours).  The maximum value is 28 days (40320 minutes).
                </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-in</strong></span></span></dt>
<dd><p>
                  Inbound zone transfers making no progress
                  in this many minutes will be terminated. The default is 60
                  minutes
                  (1 hour).  The maximum value is 28 days (40320 minutes).
                </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-out</strong></span></span></dt>
<dd><p>
                  Outbound zone transfers running longer than
                  this many minutes will be terminated. The default is 120
                  minutes
                  (2 hours).  The maximum value is 28 days (40320 minutes).
                </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-out</strong></span></span></dt>
<dd><p>
                  Outbound zone transfers making no progress
                  in this many minutes will be terminated.  The default is 60
                  minutes (1
                  hour).  The maximum value is 28 days (40320 minutes).
                </p></dd>
<dt><span class="term"><span><strong class="command">serial-query-rate</strong></span></span></dt>
<dd><p>
                  Slave servers will periodically query master servers
                  to find out if zone serial numbers have changed. Each such
                  query uses
                  a minute amount of the slave server's network bandwidth.  To
                  limit the
                  amount of bandwidth used, BIND 9 limits the rate at which
                  queries are
                  sent.  The value of the <span><strong class="command">serial-query-rate</strong></span> option,
                  an integer, is the maximum number of queries sent per
                  second.
                  The default is 20.
                </p></dd>
<dt><span class="term"><span><strong class="command">serial-queries</strong></span></span></dt>
<dd><p>
                  In BIND 8, the <span><strong class="command">serial-queries</strong></span>
                  option
                  set the maximum number of concurrent serial number queries
                  allowed to be outstanding at any given time.
                  BIND 9 does not limit the number of outstanding
                  serial queries and ignores the <span><strong class="command">serial-queries</strong></span> option.
                  Instead, it limits the rate at which the queries are sent
                  as defined using the <span><strong class="command">serial-query-rate</strong></span> option.
                </p></dd>
<dt><span class="term"><span><strong class="command">transfer-format</strong></span></span></dt>
<dd><p>
                  Zone transfers can be sent using two different formats,
                  <span><strong class="command">one-answer</strong></span> and
                  <span><strong class="command">many-answers</strong></span>.
                  The <span><strong class="command">transfer-format</strong></span> option is used
                  on the master server to determine which format it sends.
                  <span><strong class="command">one-answer</strong></span> uses one DNS message per
                  resource record transferred.
                  <span><strong class="command">many-answers</strong></span> packs as many resource
                  records as possible into a message.
                  <span><strong class="command">many-answers</strong></span> is more efficient, but is
                  only supported by relatively new slave servers,
                  such as <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
                  8.x and <acronym class="acronym">BIND</acronym> 4.9.5 onwards.
                  The <span><strong class="command">many-answers</strong></span> format is also supported by
                  recent Microsoft Windows nameservers.
                  The default is <span><strong class="command">many-answers</strong></span>.
                  <span><strong class="command">transfer-format</strong></span> may be overridden on a
                  per-server basis by using the <span><strong class="command">server</strong></span>
                  statement.
                </p></dd>
<dt><span class="term"><span><strong class="command">transfers-in</strong></span></span></dt>
<dd><p>
                  The maximum number of inbound zone transfers
                  that can be running concurrently. The default value is <code class="literal">10</code>.
                  Increasing <span><strong class="command">transfers-in</strong></span> may
                  speed up the convergence
                  of slave zones, but it also may increase the load on the
                  local system.
                </p></dd>
<dt><span class="term"><span><strong class="command">transfers-out</strong></span></span></dt>
<dd><p>
                  The maximum number of outbound zone transfers
                  that can be running concurrently. Zone transfer requests in
                  excess
                  of the limit will be refused. The default value is <code class="literal">10</code>.
                </p></dd>
<dt><span class="term"><span><strong class="command">transfers-per-ns</strong></span></span></dt>
<dd><p>
                  The maximum number of inbound zone transfers
                  that can be concurrently transferring from a given remote
                  name server.
                  The default value is <code class="literal">2</code>.
                  Increasing <span><strong class="command">transfers-per-ns</strong></span>
                  may
                  speed up the convergence of slave zones, but it also may
                  increase
                  the load on the remote name server. <span><strong class="command">transfers-per-ns</strong></span> may
                  be overridden on a per-server basis by using the <span><strong class="command">transfers</strong></span> phrase
                  of the <span><strong class="command">server</strong></span> statement.
                </p></dd>
<dt><span class="term"><span><strong class="command">transfer-source</strong></span></span></dt>
<dd>
<p><span><strong class="command">transfer-source</strong></span>
                  determines which local address will be bound to IPv4
                  TCP connections used to fetch zones transferred
                  inbound by the server.  It also determines the
                  source IPv4 address, and optionally the UDP port,
                  used for the refresh queries and forwarded dynamic
                  updates.  If not set, it defaults to a system
                  controlled value which will usually be the address
                  of the interface "closest to" the remote end. This
                  address must appear in the remote end's
                  <span><strong class="command">allow-transfer</strong></span> option for the
                  zone being transferred, if one is specified. This
                  statement sets the
                  <span><strong class="command">transfer-source</strong></span> for all zones,
                  but can be overridden on a per-view or per-zone
                  basis by including a
                  <span><strong class="command">transfer-source</strong></span> statement within
                  the <span><strong class="command">view</strong></span> or
                  <span><strong class="command">zone</strong></span> block in the configuration
                  file.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Solaris 2.5.1 and earlier does not support setting the
                    source address for TCP sockets.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">transfer-source-v6</strong></span></span></dt>
<dd><p>
                  The same as <span><strong class="command">transfer-source</strong></span>,
                  except zone transfers are performed using IPv6.
                </p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source</strong></span></span></dt>
<dd>
<p>
                  An alternate transfer source if the one listed in
                  <span><strong class="command">transfer-source</strong></span> fails and
                  <span><strong class="command">use-alt-transfer-source</strong></span> is
                  set.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
                  If you do not wish the alternate transfer source
                  to be used, you should set
                  <span><strong class="command">use-alt-transfer-source</strong></span>
                  appropriately and you should not depend upon
                  getting a answer back to the first refresh
                  query.
                </div>
</dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source-v6</strong></span></span></dt>
<dd><p>
                  An alternate transfer source if the one listed in
                  <span><strong class="command">transfer-source-v6</strong></span> fails and
                  <span><strong class="command">use-alt-transfer-source</strong></span> is
                  set.
                </p></dd>
<dt><span class="term"><span><strong class="command">use-alt-transfer-source</strong></span></span></dt>
<dd><p>
                  Use the alternate transfer sources or not.  If views are
                  specified this defaults to <span><strong class="command">no</strong></span>
                  otherwise it defaults to
                  <span><strong class="command">yes</strong></span> (for BIND 8
                  compatibility).
                </p></dd>
<dt><span class="term"><span><strong class="command">notify-source</strong></span></span></dt>
<dd>
<p><span><strong class="command">notify-source</strong></span>
                  determines which local source address, and
                  optionally UDP port, will be used to send NOTIFY
                  messages.  This address must appear in the slave
                  server's <span><strong class="command">masters</strong></span> zone clause or
                  in an <span><strong class="command">allow-notify</strong></span> clause.  This
                  statement sets the <span><strong class="command">notify-source</strong></span>
                  for all zones, but can be overridden on a per-zone or
                  per-view basis by including a
                  <span><strong class="command">notify-source</strong></span> statement within
                  the <span><strong class="command">zone</strong></span> or
                  <span><strong class="command">view</strong></span> block in the configuration
                  file.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Solaris 2.5.1 and earlier does not support setting the
                    source address for TCP sockets.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">notify-source-v6</strong></span></span></dt>
<dd><p>
                  Like <span><strong class="command">notify-source</strong></span>,
                  but applies to notify messages sent to IPv6 addresses.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2581988"></a>Bad UDP Port Lists</h4></div></div></div>
<p><span><strong class="command">avoid-v4-udp-ports</strong></span>
            and <span><strong class="command">avoid-v6-udp-ports</strong></span> specify a list
            of IPv4 and IPv6 UDP ports that will not be used as system
            assigned source ports for UDP sockets.  These lists
            prevent named from choosing as its random source port a
            port that is blocked by your firewall.  If a query went
            out with such a source port, the answer would not get by
            the firewall and the name server would have to query
            again.
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2582003"></a>Operating System Resource Limits</h4></div></div></div>
<p>
            The server's usage of many system resources can be limited.
            Scaled values are allowed when specifying resource limits.  For
            example, <span><strong class="command">1G</strong></span> can be used instead of
            <span><strong class="command">1073741824</strong></span> to specify a limit of
            one
            gigabyte. <span><strong class="command">unlimited</strong></span> requests
            unlimited use, or the
            maximum available amount. <span><strong class="command">default</strong></span>
            uses the limit
            that was in force when the server was started. See the description
            of <span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.
          </p>
<p>
            The following options set operating system resource limits for
            the name server process.  Some operating systems don't support
            some or
            any of the limits. On such systems, a warning will be issued if
            the
            unsupported limit is used.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">coresize</strong></span></span></dt>
<dd><p>
                  The maximum size of a core dump. The default
                  is <code class="literal">default</code>.
                </p></dd>
<dt><span class="term"><span><strong class="command">datasize</strong></span></span></dt>
<dd><p>
                  The maximum amount of data memory the server
                  may use. The default is <code class="literal">default</code>.
                  This is a hard limit on server memory usage.
                  If the server attempts to allocate memory in excess of this
                  limit, the allocation will fail, which may in turn leave
                  the server unable to perform DNS service.  Therefore,
                  this option is rarely useful as a way of limiting the
                  amount of memory used by the server, but it can be used
                  to raise an operating system data size limit that is
                  too small by default.  If you wish to limit the amount
                  of memory used by the server, use the
                  <span><strong class="command">max-cache-size</strong></span> and
                  <span><strong class="command">recursive-clients</strong></span>
                  options instead.
                </p></dd>
<dt><span class="term"><span><strong class="command">files</strong></span></span></dt>
<dd><p>
                  The maximum number of files the server
                  may have open concurrently. The default is <code class="literal">unlimited</code>.
                </p></dd>
<dt><span class="term"><span><strong class="command">stacksize</strong></span></span></dt>
<dd><p>
                  The maximum amount of stack memory the server
                  may use. The default is <code class="literal">default</code>.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2582186"></a>Server  Resource Limits</h4></div></div></div>
<p>
            The following options set limits on the server's
            resource consumption that are enforced internally by the
            server rather than the operating system.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">max-ixfr-log-size</strong></span></span></dt>
<dd><p>
                  This option is obsolete; it is accepted
                  and ignored for BIND 8 compatibility.  The option
                  <span><strong class="command">max-journal-size</strong></span> performs a
                  similar function in BIND 9.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-journal-size</strong></span></span></dt>
<dd><p>
                  Sets a maximum size for each journal file
                  (see <a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file
                  approaches
                  the specified size, some of the oldest transactions in the
                  journal
                  will be automatically removed.  The default is
                  <code class="literal">unlimited</code>.
                </p></dd>
<dt><span class="term"><span><strong class="command">host-statistics-max</strong></span></span></dt>
<dd><p>
                  In BIND 8, specifies the maximum number of host statistics
                  entries to be kept.
                  Not implemented in BIND 9.
                </p></dd>
<dt><span class="term"><span><strong class="command">recursive-clients</strong></span></span></dt>
<dd><p>
                  The maximum number of simultaneous recursive lookups
                  the server will perform on behalf of clients.  The default
                  is
                  <code class="literal">1000</code>.  Because each recursing
                  client uses a fair
                  bit of memory, on the order of 20 kilobytes, the value of
                  the
                  <span><strong class="command">recursive-clients</strong></span> option may
                  have to be decreased
                  on hosts with limited memory.
                </p></dd>
<dt><span class="term"><span><strong class="command">tcp-clients</strong></span></span></dt>
<dd><p>
                  The maximum number of simultaneous client TCP
                  connections that the server will accept.
                  The default is <code class="literal">100</code>.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-cache-size</strong></span></span></dt>
<dd><p>
                  The maximum amount of memory to use for the
                  server's cache, in bytes.  When the amount of data in the
                  cache
                  reaches this limit, the server will cause records to expire
                  prematurely so that the limit is not exceeded.  In a server
                  with
                  multiple views, the limit applies separately to the cache of
                  each
                  view.  The default is <code class="literal">unlimited</code>, meaning that
                  records are purged from the cache only when their TTLs
                  expire.
                </p></dd>
<dt><span class="term"><span><strong class="command">tcp-listen-queue</strong></span></span></dt>
<dd><p>
                  The listen queue depth.  The default and minimum is 3.
                  If the kernel supports the accept filter "dataready" this
                  also controls how
                  many TCP connections that will be queued in kernel space
                  waiting for
                  some data before being passed to accept.  Values less than 3
                  will be
                  silently raised.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2582320"></a>Periodic Task Intervals</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">cleaning-interval</strong></span></span></dt>
<dd><p>
                  The server will remove expired resource records
                  from the cache every <span><strong class="command">cleaning-interval</strong></span> minutes.
                  The default is 60 minutes.  The maximum value is 28 days
                  (40320 minutes).
                  If set to 0, no periodic cleaning will occur.
                </p></dd>
<dt><span class="term"><span><strong class="command">heartbeat-interval</strong></span></span></dt>
<dd><p>
                  The server will perform zone maintenance tasks
                  for all zones marked as <span><strong class="command">dialup</strong></span> whenever this
                  interval expires. The default is 60 minutes. Reasonable
                  values are up
                  to 1 day (1440 minutes).  The maximum value is 28 days
                  (40320 minutes).
                  If set to 0, no zone maintenance for these zones will occur.
                </p></dd>
<dt><span class="term"><span><strong class="command">interface-interval</strong></span></span></dt>
<dd><p>
                  The server will scan the network interface list
                  every <span><strong class="command">interface-interval</strong></span>
                  minutes. The default
                  is 60 minutes. The maximum value is 28 days (40320 minutes).
                  If set to 0, interface scanning will only occur when
                  the configuration file is  loaded. After the scan, the
                  server will
                  begin listening for queries on any newly discovered
                  interfaces (provided they are allowed by the
                  <span><strong class="command">listen-on</strong></span> configuration), and
                  will
                  stop listening on interfaces that have gone away.
                </p></dd>
<dt><span class="term"><span><strong class="command">statistics-interval</strong></span></span></dt>
<dd>
<p>
                  Name server statistics will be logged
                  every <span><strong class="command">statistics-interval</strong></span>
                  minutes. The default is
                  60. The maximum value is 28 days (40320 minutes).
                  If set to 0, no statistics will be logged.
                  </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Not yet implemented in
                    <acronym class="acronym">BIND</acronym> 9.
                  </p>
</div>
</dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="topology"></a>Topology</h4></div></div></div>
<p>
            All other things being equal, when the server chooses a name
            server
            to query from a list of name servers, it prefers the one that is
            topologically closest to itself. The <span><strong class="command">topology</strong></span> statement
            takes an <span><strong class="command">address_match_list</strong></span> and
            interprets it
            in a special way. Each top-level list element is assigned a
            distance.
            Non-negated elements get a distance based on their position in the
            list, where the closer the match is to the start of the list, the
            shorter the distance is between it and the server. A negated match
            will be assigned the maximum distance from the server. If there
            is no match, the address will get a distance which is further than
            any non-negated list element, and closer than any negated element.
            For example,
          </p>
<pre class="programlisting">topology {
    10/8;
    !1.2.3/24;
    { 1.2/16; 3/8; };
};</pre>
<p>
            will prefer servers on network 10 the most, followed by hosts
            on network 1.2.0.0 (netmask 255.255.0.0) and network 3, with the
            exception of hosts on network 1.2.3 (netmask 255.255.255.0), which
            is preferred least of all.
          </p>
<p>
            The default topology is
          </p>
<pre class="programlisting">    topology { localhost; localnets; };
</pre>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              The <span><strong class="command">topology</strong></span> option
              is not implemented in <acronym class="acronym">BIND</acronym> 9.
            </p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="the_sortlist_statement"></a>The <span><strong class="command">sortlist</strong></span> Statement</h4></div></div></div>
<p>
            The response to a DNS query may consist of multiple resource
            records (RRs) forming a resource records set (RRset).
            The name server will normally return the
            RRs within the RRset in an indeterminate order
            (but see the <span><strong class="command">rrset-order</strong></span>
            statement in <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>).
            The client resolver code should rearrange the RRs as appropriate,
            that is, using any addresses on the local net in preference to
            other addresses.
            However, not all resolvers can do this or are correctly
            configured.
            When a client is using a local server, the sorting can be performed
            in the server, based on the client's address. This only requires
            configuring the name servers, not all the clients.
          </p>
<p>
            The <span><strong class="command">sortlist</strong></span> statement (see below)
            takes
            an <span><strong class="command">address_match_list</strong></span> and
            interprets it even
            more specifically than the <span><strong class="command">topology</strong></span>
            statement
            does (<a href="Bv9ARM.ch06.html#topology" title="Topology">the section called &#8220;Topology&#8221;</a>).
            Each top level statement in the <span><strong class="command">sortlist</strong></span> must
            itself be an explicit <span><strong class="command">address_match_list</strong></span> with
            one or two elements. The first element (which may be an IP
            address,
            an IP prefix, an ACL name or a nested <span><strong class="command">address_match_list</strong></span>)
            of each top level list is checked against the source address of
            the query until a match is found.
          </p>
<p>
            Once the source address of the query has been matched, if
            the top level statement contains only one element, the actual
            primitive
            element that matched the source address is used to select the
            address
            in the response to move to the beginning of the response. If the
            statement is a list of two elements, then the second element is
            treated the same as the <span><strong class="command">address_match_list</strong></span> in
            a <span><strong class="command">topology</strong></span> statement. Each top
            level element
            is assigned a distance and the address in the response with the
            minimum
            distance is moved to the beginning of the response.
          </p>
<p>
            In the following example, any queries received from any of
            the addresses of the host itself will get responses preferring
            addresses
            on any of the locally connected networks. Next most preferred are
            addresses
            on the 192.168.1/24 network, and after that either the
            192.168.2/24
            or
            192.168.3/24 network with no preference shown between these two
            networks. Queries received from a host on the 192.168.1/24 network
            will prefer other addresses on that network to the 192.168.2/24
            and
            192.168.3/24 networks. Queries received from a host on the
            192.168.4/24
            or the 192.168.5/24 network will only prefer other addresses on
            their directly connected networks.
          </p>
<pre class="programlisting">sortlist {
    { localhost;                                   // IF   the local host
        { localnets;                               // THEN first fit on the
            192.168.1/24;                          //   following nets
            { 192.168.2/24; 192.168.3/24; }; }; };
    { 192.168.1/24;                                // IF   on class C 192.168.1
        { 192.168.1/24;                            // THEN use .1, or .2 or .3
            { 192.168.2/24; 192.168.3/24; }; }; };
    { 192.168.2/24;                                // IF   on class C 192.168.2
        { 192.168.2/24;                            // THEN use .2, or .1 or .3
            { 192.168.1/24; 192.168.3/24; }; }; };
    { 192.168.3/24;                                // IF   on class C 192.168.3
        { 192.168.3/24;                            // THEN use .3, or .1 or .2
            { 192.168.1/24; 192.168.2/24; }; }; };
    { { 192.168.4/24; 192.168.5/24; };             // if .4 or .5, prefer that net
    };
};</pre>
<p>
            The following example will give reasonable behavior for the
            local host and hosts on directly connected networks. It is similar
            to the behavior of the address sort in <acronym class="acronym">BIND</acronym> 4.9.x. Responses sent
            to queries from the local host will favor any of the directly
            connected
            networks. Responses sent to queries from any other hosts on a
            directly
            connected network will prefer addresses on that same network.
            Responses
            to other queries will not be sorted.
          </p>
<pre class="programlisting">sortlist {
           { localhost; localnets; };
           { localnets; };
};
</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="rrset_ordering"></a>RRset Ordering</h4></div></div></div>
<p>
            When multiple records are returned in an answer it may be
            useful to configure the order of the records placed into the
            response.
            The <span><strong class="command">rrset-order</strong></span> statement permits
            configuration
            of the ordering of the records in a multiple record response.
            See also the <span><strong class="command">sortlist</strong></span> statement,
            <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a>.
          </p>
<p>
            An <span><strong class="command">order_spec</strong></span> is defined as
            follows:
          </p>
<p>
            [<span class="optional">class <em class="replaceable"><code>class_name</code></em></span>]
            [<span class="optional">type <em class="replaceable"><code>type_name</code></em></span>]
            [<span class="optional">name <em class="replaceable"><code>"domain_name"</code></em></span>]
            order <em class="replaceable"><code>ordering</code></em>
          </p>
<p>
            If no class is specified, the default is <span><strong class="command">ANY</strong></span>.
            If no type is specified, the default is <span><strong class="command">ANY</strong></span>.
            If no name is specified, the default is "<span><strong class="command">*</strong></span>" (asterisk).
          </p>
<p>
            The legal values for <span><strong class="command">ordering</strong></span> are:
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p><span><strong class="command">fixed</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in the order they
                      are defined in the zone file.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">random</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in some random order.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">cyclic</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in a round-robin
                      order.
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
<p>
            For example:
          </p>
<pre class="programlisting">rrset-order {
   class IN type A name "host.example.com" order random;
   order cyclic;
};
</pre>
<p>
            will cause any responses for type A records in class IN that
            have "<code class="literal">host.example.com</code>" as a
            suffix, to always be returned
            in random order. All other records are returned in cyclic order.
          </p>
<p>
            If multiple <span><strong class="command">rrset-order</strong></span> statements
            appear,
            they are not combined &#8212; the last one applies.
          </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              The <span><strong class="command">rrset-order</strong></span> statement
              is not yet fully implemented in <acronym class="acronym">BIND</acronym> 9.
              BIND 9 currently does not fully support "fixed" ordering.
            </p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="tuning"></a>Tuning</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">lame-ttl</strong></span></span></dt>
<dd><p>
                  Sets the number of seconds to cache a
                  lame server indication. 0 disables caching. (This is
                  <span class="bold"><strong>NOT</strong></span> recommended.)
                  The default is <code class="literal">600</code> (10 minutes) and the
                  maximum value is
                  <code class="literal">1800</code> (30 minutes).
                </p></dd>
<dt><span class="term"><span><strong class="command">max-ncache-ttl</strong></span></span></dt>
<dd><p>
                  To reduce network traffic and increase performance,
                  the server stores negative answers. <span><strong class="command">max-ncache-ttl</strong></span> is
                  used to set a maximum retention time for these answers in
                  the server
                  in seconds. The default
                  <span><strong class="command">max-ncache-ttl</strong></span> is <code class="literal">10800</code> seconds (3 hours).
                  <span><strong class="command">max-ncache-ttl</strong></span> cannot exceed
                  7 days and will
                  be silently truncated to 7 days if set to a greater value.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-cache-ttl</strong></span></span></dt>
<dd><p>
                  Sets the maximum time for which the server will
                  cache ordinary (positive) answers. The default is
                  one week (7 days).
                </p></dd>
<dt><span class="term"><span><strong class="command">min-roots</strong></span></span></dt>
<dd>
<p>
                  The minimum number of root servers that
                  is required for a request for the root servers to be
                  accepted. The default
                  is <strong class="userinput"><code>2</code></strong>.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Not implemented in <acronym class="acronym">BIND</acronym> 9.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">sig-validity-interval</strong></span></span></dt>
<dd><p>
                  Specifies the number of days into the
                  future when DNSSEC signatures automatically generated as a
                  result
                  of dynamic updates (<a href="Bv9ARM.ch04.html#dynamic_update" title="Dynamic Update">the section called &#8220;Dynamic Update&#8221;</a>)
                  will expire. The default is <code class="literal">30</code> days.
                  The maximum value is 10 years (3660 days). The signature
                  inception time is unconditionally set to one hour before the
                  current time
                  to allow for a limited amount of clock skew.
                </p></dd>
<dt>
<span class="term"><span><strong class="command">min-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">max-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">min-retry-time</strong></span>, </span><span class="term"><span><strong class="command">max-retry-time</strong></span></span>
</dt>
<dd>
<p>
                  These options control the server's behavior on refreshing a
                  zone
                  (querying for SOA changes) or retrying failed transfers.
                  Usually the SOA values for the zone are used, but these
                  values
                  are set by the master, giving slave server administrators
                  little
                  control over their contents.
                </p>
<p>
                  These options allow the administrator to set a minimum and
                  maximum
                  refresh and retry time either per-zone, per-view, or
                  globally.
                  These options are valid for slave and stub zones,
                  and clamp the SOA refresh and retry times to the specified
                  values.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">edns-udp-size</strong></span></span></dt>
<dd><p>
                  Sets the advertised EDNS UDP buffer size in bytes.  Valid
                  values are 512 to 4096 (values outside this range
                  will be silently adjusted).  The default value is
                  4096.  The usual reason for setting edns-udp-size to
                  a non-default value is to get UDP answers to pass
                  through broken firewalls that block fragmented
                  packets and/or block UDP packets that are greater
                  than 512 bytes.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-udp-size</strong></span></span></dt>
<dd><p>
                  Sets the maximum EDNS UDP message size named will
                  send in bytes.  Valid values are 512 to 4096 (values outside
                  this range will be silently adjusted).  The default
                  value is 4096.  The usual reason for setting
                  max-udp-size to a non-default value is to get UDP
                  answers to pass through broken firewalls that
                  block fragmented packets and/or block UDP packets
                  that are greater than 512 bytes.
                  This is independent of the advertised receive
                  buffer (<span><strong class="command">edns-udp-size</strong></span>).
                </p></dd>
<dt><span class="term"><span><strong class="command">masterfile-format</strong></span></span></dt>
<dd><p>Specifies
                  the file format of zone files (see
                  <a href="Bv9ARM.ch06.html#zonefile_format" title="Additional File Formats">the section called &#8220;Additional File Formats&#8221;</a>).
                  The default value is <code class="constant">text</code>, which is the
                  standard textual representation.  Files in other formats
                  than <code class="constant">text</code> are typically expected
                  to be generated by the <span><strong class="command">named-compilezone</strong></span> tool.
                  Note that when a zone file in a different format than
                  <code class="constant">text</code> is loaded, <span><strong class="command">named</strong></span>
                  may omit some of the checks which would be performed for a
                  file in the <code class="constant">text</code> format.  In particular,
                  <span><strong class="command">check-names</strong></span> checks do not apply
                  for the <code class="constant">raw</code> format.  This means
                  a zone file in the <code class="constant">raw</code> format
                  must be generated with the same check level as that
                  specified in the <span><strong class="command">named</strong></span> configuration
                  file.  This statement sets the
                  <span><strong class="command">masterfile-format</strong></span> for all zones,
                  but can be overridden on a per-zone or per-view basis
                  by including a <span><strong class="command">masterfile-format</strong></span>
                  statement within the <span><strong class="command">zone</strong></span> or
                  <span><strong class="command">view</strong></span> block in the configuration
                  file.
                </p></dd>
<dt>
<span class="term"><span><strong class="command">clients-per-query</strong></span>, </span><span class="term"><span><strong class="command">max-clients-per-query</strong></span></span>
</dt>
<dd>
<p>These set the
                  initial value (minimum) and maximum number of recursive
                  simultanious clients for any given query
                  (&lt;qname,qtype,qclass&gt;) that the server will accept
                  before dropping additional clients.  named will attempt to
                  self tune this value and changes will be logged.  The
                  default values are 10 and 100.
                </p>
<p>
                  This value should reflect how many queries come in for
                  a given name in the time it takes to resolve that name.
                  If the number of queries exceed this value, named will
                  assume that it is dealing with a non-responsive zone
                  and will drop additional queries.  If it gets a response
                  after dropping queries, it will raise the estimate.  The
                  estimate will then be lowered in 20 minutes if it has
                  remained unchanged.
                </p>
<p>
                  If <span><strong class="command">clients-per-query</strong></span> is set to zero,
                  then there is no limit on the number of clients per query
                  and no queries will be dropped.
                </p>
<p>
                  If <span><strong class="command">max-clients-per-query</strong></span> is set to zero,
                  then there is no upper bound other than imposed by
                  <span><strong class="command">recursive-clients</strong></span>.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">notify-delay</strong></span></span></dt>
<dd><p>
                  The delay, in seconds, between sending sets of notify
                  messages for a zone.  The default is zero.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="builtin"></a>Built-in server information zones</h4></div></div></div>
<p>
            The server provides some helpful diagnostic information
            through a number of built-in zones under the
            pseudo-top-level-domain <code class="literal">bind</code> in the
            <span><strong class="command">CHAOS</strong></span> class.  These zones are part
            of a
            built-in view (see <a href="Bv9ARM.ch06.html#view_statement_grammar" title="view Statement Grammar">the section called &#8220;<span><strong class="command">view</strong></span> Statement Grammar&#8221;</a>) of
            class
            <span><strong class="command">CHAOS</strong></span> which is separate from the
            default view of
            class <span><strong class="command">IN</strong></span>; therefore, any global
            server options
            such as <span><strong class="command">allow-query</strong></span> do not apply
            the these zones.
            If you feel the need to disable these zones, use the options
            below, or hide the built-in <span><strong class="command">CHAOS</strong></span>
            view by
            defining an explicit view of class <span><strong class="command">CHAOS</strong></span>
            that matches all clients.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">version</strong></span></span></dt>
<dd><p>
                  The version the server should report
                  via a query of the name <code class="literal">version.bind</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  The default is the real version number of this server.
                  Specifying <span><strong class="command">version none</strong></span>
                  disables processing of the queries.
                </p></dd>
<dt><span class="term"><span><strong class="command">hostname</strong></span></span></dt>
<dd><p>
                  The hostname the server should report via a query of
                  the name <code class="filename">hostname.bind</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  This defaults to the hostname of the machine hosting the
                  name server as
                  found by the gethostname() function.  The primary purpose of such queries
                  is to
                  identify which of a group of anycast servers is actually
                  answering your queries.  Specifying <span><strong class="command">hostname none;</strong></span>
                  disables processing of the queries.
                </p></dd>
<dt><span class="term"><span><strong class="command">server-id</strong></span></span></dt>
<dd><p>
                  The ID of the server should report via a query of
                  the name <code class="filename">ID.SERVER</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  The primary purpose of such queries is to
                  identify which of a group of anycast servers is actually
                  answering your queries.  Specifying <span><strong class="command">server-id none;</strong></span>
                  disables processing of the queries.
                  Specifying <span><strong class="command">server-id hostname;</strong></span> will cause named to
                  use the hostname as found by the gethostname() function.
                  The default <span><strong class="command">server-id</strong></span> is <span><strong class="command">none</strong></span>.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="empty"></a>Built-in Empty Zones</h4></div></div></div>
<p>
            Named has some built-in empty zones (SOA and NS records only).
            These are for zones that should normally be answered locally
            and which queries should not be sent to the Internet's root
            servers.  The official servers which cover these namespaces
            return NXDOMAIN responses to these queries.  In particular,
            these cover the reverse namespace for addresses from RFC 1918 and
            RFC 3330.  They also include the reverse namespace for IPv6 local
            address (locally assigned), IPv6 link local addresses, the IPv6
            loopback address and the IPv6 unknown addresss.
          </p>
<p>
            Named will attempt to determine if a built in zone already exists
            or is active (covered by a forward-only forwarding declaration)
            and will not not create a empty zone in that case.
          </p>
<p>
            The current list of empty zones is:
            </p>
<div class="itemizedlist"><ul type="disc">
<li>10.IN-ADDR.ARPA</li>
<li>127.IN-ADDR.ARPA</li>
<li>254.169.IN-ADDR.ARPA</li>
<li>16.172.IN-ADDR.ARPA</li>
<li>17.172.IN-ADDR.ARPA</li>
<li>18.172.IN-ADDR.ARPA</li>
<li>19.172.IN-ADDR.ARPA</li>
<li>20.172.IN-ADDR.ARPA</li>
<li>21.172.IN-ADDR.ARPA</li>
<li>22.172.IN-ADDR.ARPA</li>
<li>23.172.IN-ADDR.ARPA</li>
<li>24.172.IN-ADDR.ARPA</li>
<li>25.172.IN-ADDR.ARPA</li>
<li>26.172.IN-ADDR.ARPA</li>
<li>27.172.IN-ADDR.ARPA</li>
<li>28.172.IN-ADDR.ARPA</li>
<li>29.172.IN-ADDR.ARPA</li>
<li>30.172.IN-ADDR.ARPA</li>
<li>31.172.IN-ADDR.ARPA</li>
<li>168.192.IN-ADDR.ARPA</li>
<li>2.0.192.IN-ADDR.ARPA</li>
<li>0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.IP6.ARPA</li>
<li>1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.IP6.ARPA</li>
<li>D.F.IP6.ARPA</li>
<li>8.E.F.IP6.ARPA</li>
<li>9.E.F.IP6.ARPA</li>
<li>A.E.F.IP6.ARPA</li>
<li>B.E.F.IP6.ARPA</li>
</ul></div>
<p>
          </p>
<p>
            Empty zones are settable at the view level and only apply to
            views of class IN.  Disabled empty zones are only inherited
            from options if there are no disabled empty zones specified
            at the view level.  To override the options list of disabled
            zones, you can disable the root zone at the view level, for example:
</p>
<pre class="programlisting">
            disable-empty-zone ".";
</pre>
<p>
          </p>
<p>
            If you are using the address ranges covered here, you should
            already have reverse zones covering the addresses you use.
            In practice this appears to not be the case with many queries
            being made to the infrastructure servers for names in these
            spaces.  So many in fact that sacrificial servers were needed
            to be deployed to channel the query load away from the
            infrastructure servers.
          </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
            The real parent servers for these zones should disable all
            empty zone under the parent zone they serve.  For the real
            root servers, this is all built in empty zones.  This will
            enable them to return referrals to deeper in the tree.
          </div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">empty-server</strong></span></span></dt>
<dd><p>
                  Specify what server name will appear in the returned
                  SOA record for empty zones.  If none is specified, then
                  the zone's name will be used.
                </p></dd>
<dt><span class="term"><span><strong class="command">empty-contact</strong></span></span></dt>
<dd><p>
                  Specify what contact name will appear in the returned
                  SOA record for empty zones.  If none is specified, then
                  "." will be used.
                </p></dd>
<dt><span class="term"><span><strong class="command">empty-zones-enable</strong></span></span></dt>
<dd><p>
                  Enable or disable all empty zones.  By default they
                  are enabled.
                </p></dd>
<dt><span class="term"><span><strong class="command">disable-empty-zone</strong></span></span></dt>
<dd><p>
                  Disable individual empty zones.  By default none are
                  disabled.  This option can be specified multiple times.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="statsfile"></a>The Statistics File</h4></div></div></div>
<p>
            The statistics file generated by <acronym class="acronym">BIND</acronym> 9
            is similar, but not identical, to that
            generated by <acronym class="acronym">BIND</acronym> 8.
          </p>
<p>
            The statistics dump begins with a line, like:
          </p>
<p>
            <span><strong class="command">+++ Statistics Dump +++ (973798949)</strong></span>
          </p>
<p>
            The number in parentheses is a standard
            Unix-style timestamp, measured as seconds since January 1, 1970.
            Following
            that line are a series of lines containing a counter type, the
            value of the
            counter, optionally a zone name, and optionally a view name.
            The lines without view and zone listed are global statistics for
            the entire server.
            Lines with a zone and view name for the given view and zone (the
            view name is
            omitted for the default view).
          </p>
<p>
            The statistics dump ends with the line where the
            number is identical to the number in the beginning line; for example:
          </p>
<p>
            <span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>
          </p>
<p>
            The following statistics counters are maintained:
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p><span><strong class="command">success</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of
                      successful queries made to the server or zone.  A
                      successful query
                      is defined as query which returns a NOERROR response
                      with at least
                      one answer RR.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">referral</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted
                      in referral responses.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">nxrrset</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted in
                      NOERROR responses with no data.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">nxdomain</strong></span></p>
                  </td>
<td>
                    <p>
                      The number
                      of queries which resulted in NXDOMAIN responses.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">failure</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted in a
                      failure response other than those above.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">recursion</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which caused the server
                      to perform recursion in order to find the final answer.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">duplicate</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which the server attempted to
                      recurse but discover a existing query with the same
                      IP address, port, query id, name, type and class
                      already being processed.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">dropped</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries for which the server
                      discovered a excessive number of existing
                      recursive queries for the same name, type and
                      class and were subsequently dropped.
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
<p>
            Each query received by the server will cause exactly one of
            <span><strong class="command">success</strong></span>,
            <span><strong class="command">referral</strong></span>,
            <span><strong class="command">nxrrset</strong></span>,
            <span><strong class="command">nxdomain</strong></span>, or
            <span><strong class="command">failure</strong></span>
            to be incremented, and may additionally cause the
            <span><strong class="command">recursion</strong></span> counter to be
            incremented.
          </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="acache"></a>Additional Section Caching</h4></div></div></div>
<p>
            The additional section cache, also called <span><strong class="command">acache</strong></span>,
            is an internal cache to improve the response performance of BIND 9.
            When additional section caching is enabled, BIND 9 will
            cache an internal short-cut to the additional section content for
            each answer RR.
            Note that <span><strong class="command">acache</strong></span> is an internal caching
            mechanism of BIND 9, and is not related to the DNS caching
            server function.
          </p>
<p>
            Additional section caching does not change the
            response content (except the RRsets ordering of the additional
            section, see below), but can improve the response performance
            significantly.
            It is particularly effective when BIND 9 acts as an authoritative
            server for a zone that has many delegations with many glue RRs.
          </p>
<p>
            In order to obtain the maximum performance improvement
            from additional section caching, setting
            <span><strong class="command">additional-from-cache</strong></span>
            to <span><strong class="command">no</strong></span> is recommended, since the current
            implementation of <span><strong class="command">acache</strong></span>
            does not short-cut of additional section information from the
            DNS cache data.
          </p>
<p>
            One obvious disadvantage of <span><strong class="command">acache</strong></span> is
            that it requires much more
            memory for the internal cached data.
            Thus, if the response performance does not matter and memory
            consumption is much more critical, the
            <span><strong class="command">acache</strong></span> mechanism can be
            disabled by setting <span><strong class="command">acache-enable</strong></span> to
            <span><strong class="command">no</strong></span>.
            It is also possible to specify the upper limit of memory
            consumption
            for acache by using <span><strong class="command">max-acache-size</strong></span>.
          </p>
<p>
            Additional section caching also has a minor effect on the
            RRset ordering in the additional section.
            Without <span><strong class="command">acache</strong></span>,
            <span><strong class="command">cyclic</strong></span> order is effective for the additional
            section as well as the answer and authority sections.
            However, additional section caching fixes the ordering when it
            first caches an RRset for the additional section, and the same
            ordering will be kept in succeeding responses, regardless of the
            setting of <span><strong class="command">rrset-order</strong></span>.
            The effect of this should be minor, however, since an
            RRset in the additional section
            typically only contains a small number of RRs (and in many cases
            it only contains a single RR), in which case the
            ordering does not matter much.
          </p>
<p>
            The following is a summary of options related to
            <span><strong class="command">acache</strong></span>.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">acache-enable</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">yes</strong></span>, additional section caching is
                  enabled.  The default value is <span><strong class="command">no</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">acache-cleaning-interval</strong></span></span></dt>
<dd><p>
                  The server will remove stale cache entries, based on an LRU
                  based
                  algorithm, every <span><strong class="command">acache-cleaning-interval</strong></span> minutes.
                  The default is 60 minutes.
                  If set to 0, no periodic cleaning will occur.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-acache-size</strong></span></span></dt>
<dd><p>
                  The maximum amount of memory in bytes to use for the server's acache.
                  When the amount of data in the acache reaches this limit,
                  the server
                  will clean more aggressively so that the limit is not
                  exceeded.
                  In a server with multiple views, the limit applies
                  separately to the
                  acache of each view.
                  The default is <code class="literal">unlimited</code>,
                  meaning that
                  entries are purged from the acache only at the
                  periodic cleaning time.
                </p></dd>
</dl></div>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="server_statement_grammar"></a><span><strong class="command">server</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">server <em class="replaceable"><code>ip_addr[/prefixlen]</code></em> {
    [<span class="optional"> bogus <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> provide-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> request-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> edns <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> edns-udp-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-udp-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> transfers <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> transfer-format <em class="replaceable"><code>( one-answer | many-answers )</code></em> ; ]</span>]
    [<span class="optional"> keys <em class="replaceable"><code>{ string ; [<span class="optional"> string ; [<span class="optional">...</span>]</span>] }</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> query-source [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
    [<span class="optional"> query-source-v6 [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="server_statement_definition_and_usage"></a><span><strong class="command">server</strong></span> Statement Definition and
            Usage</h3></div></div></div>
<p>
            The <span><strong class="command">server</strong></span> statement defines
            characteristics
            to be associated with a remote name server.  If a prefix length is
            specified, then a range of servers is covered.  Only the most
            specific
            server clause applies regardless of the order in
            <code class="filename">named.conf</code>.
          </p>
<p>
            The <span><strong class="command">server</strong></span> statement can occur at
            the top level of the
            configuration file or inside a <span><strong class="command">view</strong></span>
            statement.
            If a <span><strong class="command">view</strong></span> statement contains
            one or more <span><strong class="command">server</strong></span> statements, only
            those
            apply to the view and any top-level ones are ignored.
            If a view contains no <span><strong class="command">server</strong></span>
            statements,
            any top-level <span><strong class="command">server</strong></span> statements are
            used as
            defaults.
          </p>
<p>
            If you discover that a remote server is giving out bad data,
            marking it as bogus will prevent further queries to it. The
            default
            value of <span><strong class="command">bogus</strong></span> is <span><strong class="command">no</strong></span>.
          </p>
<p>
            The <span><strong class="command">provide-ixfr</strong></span> clause determines
            whether
            the local server, acting as master, will respond with an
            incremental
            zone transfer when the given remote server, a slave, requests it.
            If set to <span><strong class="command">yes</strong></span>, incremental transfer
            will be provided
            whenever possible. If set to <span><strong class="command">no</strong></span>,
            all transfers
            to the remote server will be non-incremental. If not set, the
            value
            of the <span><strong class="command">provide-ixfr</strong></span> option in the
            view or
            global options block is used as a default.
          </p>
<p>
            The <span><strong class="command">request-ixfr</strong></span> clause determines
            whether
            the local server, acting as a slave, will request incremental zone
            transfers from the given remote server, a master. If not set, the
            value of the <span><strong class="command">request-ixfr</strong></span> option in
            the view or
            global options block is used as a default.
          </p>
<p>
            IXFR requests to servers that do not support IXFR will
            automatically
            fall back to AXFR.  Therefore, there is no need to manually list
            which servers support IXFR and which ones do not; the global
            default
            of <span><strong class="command">yes</strong></span> should always work.
            The purpose of the <span><strong class="command">provide-ixfr</strong></span> and
            <span><strong class="command">request-ixfr</strong></span> clauses is
            to make it possible to disable the use of IXFR even when both
            master
            and slave claim to support it, for example if one of the servers
            is buggy and crashes or corrupts data when IXFR is used.
          </p>
<p>
            The <span><strong class="command">edns</strong></span> clause determines whether
            the local server will attempt to use EDNS when communicating
            with the remote server.  The default is <span><strong class="command">yes</strong></span>.
          </p>
<p>
            The <span><strong class="command">edns-udp-size</strong></span> option sets the EDNS UDP size
            that is advertised by named when querying the remote server.
            Valid values are 512 to 4096 bytes (values outside this range will be
            silently adjusted).  This option is useful when you wish to
            advertises a different value to this server than the value you
            advertise globally, for example, when there is a firewall at the
            remote site that is blocking large replies.
          </p>
<p>
            The <span><strong class="command">max-udp-size</strong></span> option sets the
            maximum EDNS UDP message size named will send.  Valid
            values are 512 to 4096 bytes (values outside this range will
            be silently adjusted).  This option is useful when you
            know that there is a firewall that is blocking large
            replies from named.
          </p>
<p>
            The server supports two zone transfer methods. The first, <span><strong class="command">one-answer</strong></span>,
            uses one DNS message per resource record transferred. <span><strong class="command">many-answers</strong></span> packs
            as many resource records as possible into a message. <span><strong class="command">many-answers</strong></span> is
            more efficient, but is only known to be understood by <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
            8.x, and patched versions of <acronym class="acronym">BIND</acronym>
            4.9.5. You can specify which method
            to use for a server with the <span><strong class="command">transfer-format</strong></span> option.
            If <span><strong class="command">transfer-format</strong></span> is not
            specified, the <span><strong class="command">transfer-format</strong></span>
            specified
            by the <span><strong class="command">options</strong></span> statement will be
            used.
          </p>
<p><span><strong class="command">transfers</strong></span>
            is used to limit the number of concurrent inbound zone
            transfers from the specified server. If no
            <span><strong class="command">transfers</strong></span> clause is specified, the
            limit is set according to the
            <span><strong class="command">transfers-per-ns</strong></span> option.
          </p>
<p>
            The <span><strong class="command">keys</strong></span> clause identifies a
            <span><strong class="command">key_id</strong></span> defined by the <span><strong class="command">key</strong></span> statement,
            to be used for transaction security (TSIG, <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
            when talking to the remote server.
            When a request is sent to the remote server, a request signature
            will be generated using the key specified here and appended to the
            message. A request originating from the remote server is not
            required
            to be signed by this key.
          </p>
<p>
            Although the grammar of the <span><strong class="command">keys</strong></span>
            clause
            allows for multiple keys, only a single key per server is
            currently
            supported.
          </p>
<p>
            The <span><strong class="command">transfer-source</strong></span> and
            <span><strong class="command">transfer-source-v6</strong></span> clauses specify
            the IPv4 and IPv6 source
            address to be used for zone transfer with the remote server,
            respectively.
            For an IPv4 remote server, only <span><strong class="command">transfer-source</strong></span> can
            be specified.
            Similarly, for an IPv6 remote server, only
            <span><strong class="command">transfer-source-v6</strong></span> can be
            specified.
            For more details, see the description of
            <span><strong class="command">transfer-source</strong></span> and
            <span><strong class="command">transfer-source-v6</strong></span> in
            <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
          </p>
<p>
            The <span><strong class="command">notify-source</strong></span> and
            <span><strong class="command">notify-source-v6</strong></span> clauses specify the
            IPv4 and IPv6 source address to be used for notify
            messages sent to remote servers, respectively.  For an
            IPv4 remote server, only <span><strong class="command">notify-source</strong></span>
            can be specified.  Similarly, for an IPv6 remote server,
            only <span><strong class="command">notify-source-v6</strong></span> can be specified.
          </p>
<p>
            The <span><strong class="command">query-source</strong></span> and
            <span><strong class="command">query-source-v6</strong></span> clauses specify the
            IPv4 and IPv6 source address to be used for queries
            sent to remote servers, respectively.  For an IPv4
            remote server, only <span><strong class="command">query-source</strong></span> can
            be specified.  Similarly, for an IPv6 remote server,
            only <span><strong class="command">query-source-v6</strong></span> can be specified.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2585361"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">trusted-keys {
    <em class="replaceable"><code>string</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ;
    [<span class="optional"> <em class="replaceable"><code>string</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; [<span class="optional">...</span>]</span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2585410"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
            and Usage</h3></div></div></div>
<p>
            The <span><strong class="command">trusted-keys</strong></span> statement defines
            DNSSEC security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the
            public key for a non-authoritative zone is known, but
            cannot be securely obtained through DNS, either because
            it is the DNS root zone or because its parent zone is
            unsigned.  Once a key has been configured as a trusted
            key, it is treated as if it had been validated and
            proven secure. The resolver attempts DNSSEC validation
            on all DNS data in subdomains of a security root.
          </p>
<p>
            All keys (and corresponding zones) listed in
            <span><strong class="command">trusted-keys</strong></span> are deemed to exist regardless
            of what parent zones say.  Similarly for all keys listed in
            <span><strong class="command">trusted-keys</strong></span> only those keys are
            used to validate the DNSKEY RRset.  The parent's DS RRset
            will not be used.
          </p>
<p>
            The <span><strong class="command">trusted-keys</strong></span> statement can contain
            multiple key entries, each consisting of the key's
            domain name, flags, protocol, algorithm, and the Base-64
            representation of the key data.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="view_statement_grammar"></a><span><strong class="command">view</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">view <em class="replaceable"><code>view_name</code></em>
      [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
      match-clients { <em class="replaceable"><code>address_match_list</code></em> };
      match-destinations { <em class="replaceable"><code>address_match_list</code></em> };
      match-recursive-only <em class="replaceable"><code>yes_or_no</code></em> ;
      [<span class="optional"> <em class="replaceable"><code>view_option</code></em>; ...</span>]
      [<span class="optional"> <em class="replaceable"><code>zone_statement</code></em>; ...</span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2585490"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>
            The <span><strong class="command">view</strong></span> statement is a powerful
            feature
            of <acronym class="acronym">BIND</acronym> 9 that lets a name server
            answer a DNS query differently
            depending on who is asking. It is particularly useful for
            implementing
            split DNS setups without having to run multiple servers.
          </p>
<p>
            Each <span><strong class="command">view</strong></span> statement defines a view
            of the
            DNS namespace that will be seen by a subset of clients.  A client
            matches
            a view if its source IP address matches the
            <code class="varname">address_match_list</code> of the view's
            <span><strong class="command">match-clients</strong></span> clause and its
            destination IP address matches
            the <code class="varname">address_match_list</code> of the
            view's
            <span><strong class="command">match-destinations</strong></span> clause.  If not
            specified, both
            <span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
            default to matching all addresses.  In addition to checking IP
            addresses
            <span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
            can also take <span><strong class="command">keys</strong></span> which provide an
            mechanism for the
            client to select the view.  A view can also be specified
            as <span><strong class="command">match-recursive-only</strong></span>, which
            means that only recursive
            requests from matching clients will match that view.
            The order of the <span><strong class="command">view</strong></span> statements is
            significant &#8212;
            a client request will be resolved in the context of the first
            <span><strong class="command">view</strong></span> that it matches.
          </p>
<p>
            Zones defined within a <span><strong class="command">view</strong></span>
            statement will
            be only be accessible to clients that match the <span><strong class="command">view</strong></span>.
            By defining a zone of the same name in multiple views, different
            zone data can be given to different clients, for example,
            "internal"
            and "external" clients in a split DNS setup.
          </p>
<p>
            Many of the options given in the <span><strong class="command">options</strong></span> statement
            can also be used within a <span><strong class="command">view</strong></span>
            statement, and then
            apply only when resolving queries with that view.  When no
            view-specific
            value is given, the value in the <span><strong class="command">options</strong></span> statement
            is used as a default.  Also, zone options can have default values
            specified
            in the <span><strong class="command">view</strong></span> statement; these
            view-specific defaults
            take precedence over those in the <span><strong class="command">options</strong></span> statement.
          </p>
<p>
            Views are class specific.  If no class is given, class IN
            is assumed.  Note that all non-IN views must contain a hint zone,
            since only the IN class has compiled-in default hints.
          </p>
<p>
            If there are no <span><strong class="command">view</strong></span> statements in
            the config
            file, a default view that matches any client is automatically
            created
            in class IN. Any <span><strong class="command">zone</strong></span> statements
            specified on
            the top level of the configuration file are considered to be part
            of
            this default view, and the <span><strong class="command">options</strong></span>
            statement will
            apply to the default view. If any explicit <span><strong class="command">view</strong></span>
            statements are present, all <span><strong class="command">zone</strong></span>
            statements must
            occur inside <span><strong class="command">view</strong></span> statements.
          </p>
<p>
            Here is an example of a typical split DNS setup implemented
            using <span><strong class="command">view</strong></span> statements:
          </p>
<pre class="programlisting">view "internal" {
      // This should match our internal networks.
      match-clients { 10.0.0.0/8; };

      // Provide recursive service to internal clients only.
      recursion yes;

      // Provide a complete view of the example.com zone
      // including addresses of internal hosts.
      zone "example.com" {
            type master;
            file "example-internal.db";
      };
};

view "external" {
      // Match all clients not matched by the previous view.
      match-clients { any; };

      // Refuse recursive service to external clients.
      recursion no;

      // Provide a restricted view of the example.com zone
      // containing only publicly accessible hosts.
      zone "example.com" {
           type master;
           file "example-external.db";
      };
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="zone_statement_grammar"></a><span><strong class="command">zone</strong></span>
            Statement Grammar</h3></div></div></div>
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type master;
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> update-policy { <em class="replaceable"><code>update_policy_rule</code></em> [<span class="optional">...</span>] }; </span>]
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> check-mx (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> check-wildcard <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-integrity <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> journal <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> ixfr-base <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> ixfr-tmp-file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em> ; </span>]
    [<span class="optional"> notify-delay <em class="replaceable"><code>seconds</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type slave;
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> update-check-ksk <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> journal <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> ixfr-base <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> ixfr-tmp-file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] }; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> multi-master <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type hint;
    file <em class="replaceable"><code>string</code></em> ;
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; // Not Implemented. </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type stub;
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] }; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> multi-master <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type forward;
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
    type delegation-only;
};

</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2586798"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2586806"></a>Zone Types</h4></div></div></div>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        <code class="varname">master</code>
                      </p>
                    </td>
<td>
                      <p>
                        The server has a master copy of the data
                        for the zone and will be able to provide authoritative
                        answers for
                        it.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">slave</code>
                      </p>
                    </td>
<td>
                      <p>
                        A slave zone is a replica of a master
                        zone. The <span><strong class="command">masters</strong></span> list
                        specifies one or more IP addresses
                        of master servers that the slave contacts to update
                        its copy of the zone.
                        Masters list elements can also be names of other
                        masters lists.
                        By default, transfers are made from port 53 on the
                        servers; this can
                        be changed for all servers by specifying a port number
                        before the
                        list of IP addresses, or on a per-server basis after
                        the IP address.
                        Authentication to the master can also be done with
                        per-server TSIG keys.
                        If a file is specified, then the
                        replica will be written to this file whenever the zone
                        is changed,
                        and reloaded from this file on a server restart. Use
                        of a file is
                        recommended, since it often speeds server startup and
                        eliminates
                        a needless waste of bandwidth. Note that for large
                        numbers (in the
                        tens or hundreds of thousands) of zones per server, it
                        is best to
                        use a two-level naming scheme for zone filenames. For
                        example,
                        a slave server for the zone <code class="literal">example.com</code> might place
                        the zone contents into a file called
                        <code class="filename">ex/example.com</code> where <code class="filename">ex/</code> is
                        just the first two letters of the zone name. (Most
                        operating systems
                        behave very slowly if you put 100 000 files into
                        a single directory.)
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">stub</code>
                      </p>
                    </td>
<td>
                      <p>
                        A stub zone is similar to a slave zone,
                        except that it replicates only the NS records of a
                        master zone instead
                        of the entire zone. Stub zones are not a standard part
                        of the DNS;
                        they are a feature specific to the <acronym class="acronym">BIND</acronym> implementation.
                      </p>

                      <p>
                        Stub zones can be used to eliminate the need for glue
                        NS record
                        in a parent zone at the expense of maintaining a stub
                        zone entry and
                        a set of name server addresses in <code class="filename">named.conf</code>.
                        This usage is not recommended for new configurations,
                        and BIND 9
                        supports it only in a limited way.
                        In <acronym class="acronym">BIND</acronym> 4/8, zone
                        transfers of a parent zone
                        included the NS records from stub children of that
                        zone. This meant
                        that, in some cases, users could get away with
                        configuring child stubs
                        only in the master server for the parent zone. <acronym class="acronym">BIND</acronym>
                        9 never mixes together zone data from different zones
                        in this
                        way. Therefore, if a <acronym class="acronym">BIND</acronym> 9 master serving a parent
                        zone has child stub zones configured, all the slave
                        servers for the
                        parent zone also need to have the same child stub
                        zones
                        configured.
                      </p>

                      <p>
                        Stub zones can also be used as a way of forcing the
                        resolution
                        of a given domain to use a particular set of
                        authoritative servers.
                        For example, the caching name servers on a private
                        network using
                        RFC1918 addressing may be configured with stub zones
                        for
                        <code class="literal">10.in-addr.arpa</code>
                        to use a set of internal name servers as the
                        authoritative
                        servers for that domain.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">forward</code>
                      </p>
                    </td>
<td>
                      <p>
                        A "forward zone" is a way to configure
                        forwarding on a per-domain basis.  A <span><strong class="command">zone</strong></span> statement
                        of type <span><strong class="command">forward</strong></span> can
                        contain a <span><strong class="command">forward</strong></span>
                        and/or <span><strong class="command">forwarders</strong></span>
                        statement,
                        which will apply to queries within the domain given by
                        the zone
                        name. If no <span><strong class="command">forwarders</strong></span>
                        statement is present or
                        an empty list for <span><strong class="command">forwarders</strong></span> is given, then no
                        forwarding will be done for the domain, canceling the
                        effects of
                        any forwarders in the <span><strong class="command">options</strong></span> statement. Thus
                        if you want to use this type of zone to change the
                        behavior of the
                        global <span><strong class="command">forward</strong></span> option
                        (that is, "forward first"
                        to, then "forward only", or vice versa, but want to
                        use the same
                        servers as set globally) you need to re-specify the
                        global forwarders.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">hint</code>
                      </p>
                    </td>
<td>
                      <p>
                        The initial set of root name servers is
                        specified using a "hint zone". When the server starts
                        up, it uses
                        the root hints to find a root name server and get the
                        most recent
                        list of root name servers. If no hint zone is
                        specified for class
                        IN, the server uses a compiled-in default set of root
                        servers hints.
                        Classes other than IN have no built-in defaults hints.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">delegation-only</code>
                      </p>
                    </td>
<td>
                      <p>
                        This is used to enforce the delegation-only
                        status of infrastructure zones (e.g. COM, NET, ORG).
                        Any answer that
                        is received without an explicit or implicit delegation
                        in the authority
                        section will be treated as NXDOMAIN.  This does not
                        apply to the zone
                        apex.  This should not be applied to leaf zones.
                      </p>
                      <p>
                        <code class="varname">delegation-only</code> has no
                        effect on answers received
                        from forwarders.
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2587362"></a>Class</h4></div></div></div>
<p>
              The zone's name may optionally be followed by a class. If
              a class is not specified, class <code class="literal">IN</code> (for <code class="varname">Internet</code>),
              is assumed. This is correct for the vast majority of cases.
            </p>
<p>
              The <code class="literal">hesiod</code> class is
              named for an information service from MIT's Project Athena. It
              is
              used to share information about various systems databases, such
              as users, groups, printers and so on. The keyword
              <code class="literal">HS</code> is
              a synonym for hesiod.
            </p>
<p>
              Another MIT development is Chaosnet, a LAN protocol created
              in the mid-1970s. Zone data for it can be specified with the <code class="literal">CHAOS</code> class.
            </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2587395"></a>Zone Options</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">allow-notify</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">allow-query</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">allow-transfer</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">allow-transfer</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">allow-update</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">allow-update</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">update-policy</strong></span></span></dt>
<dd><p>
                    Specifies a "Simple Secure Update" policy. See
                    <a href="Bv9ARM.ch06.html#dynamic_update_policies" title="Dynamic Update Policies">the section called &#8220;Dynamic Update Policies&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">allow-update-forwarding</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">allow-update-forwarding</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">also-notify</strong></span></span></dt>
<dd><p>
                    Only meaningful if <span><strong class="command">notify</strong></span>
                    is
                    active for this zone. The set of machines that will
                    receive a
                    <code class="literal">DNS NOTIFY</code> message
                    for this zone is made up of all the listed name servers
                    (other than
                    the primary master) for the zone plus any IP addresses
                    specified
                    with <span><strong class="command">also-notify</strong></span>. A port
                    may be specified
                    with each <span><strong class="command">also-notify</strong></span>
                    address to send the notify
                    messages to a port other than the default of 53.
                    <span><strong class="command">also-notify</strong></span> is not
                    meaningful for stub zones.
                    The default is the empty list.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-names</strong></span></span></dt>
<dd><p>
                    This option is used to restrict the character set and
                    syntax of
                    certain domain names in master files and/or DNS responses
                    received from the
                    network.  The default varies according to zone type.  For <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.  For <span><strong class="command">slave</strong></span>
                    zones the default is <span><strong class="command">warn</strong></span>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-mx</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-mx</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-wildcard</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-wildcard</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-integrity</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-integrity</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-sibling</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-sibling</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">zero-no-soa-ttl</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">update-check-ksk</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">update-check-ksk</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">database</strong></span></span></dt>
<dd>
<p>
                    Specify the type of database to be used for storing the
                    zone data.  The string following the <span><strong class="command">database</strong></span> keyword
                    is interpreted as a list of whitespace-delimited words.
                    The first word
                    identifies the database type, and any subsequent words are
                    passed
                    as arguments to the database to be interpreted in a way
                    specific
                    to the database type.
                  </p>
<p>
                    The default is <strong class="userinput"><code>"rbt"</code></strong>, BIND 9's
                    native in-memory
                    red-black-tree database.  This database does not take
                    arguments.
                  </p>
<p>
                    Other values are possible if additional database drivers
                    have been linked into the server.  Some sample drivers are
                    included
                    with the distribution but none are linked in by default.
                  </p>
</dd>
<dt><span class="term"><span><strong class="command">dialup</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">dialup</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">delegation-only</strong></span></span></dt>
<dd><p>
                    The flag only applies to hint and stub zones.  If set
                    to <strong class="userinput"><code>yes</code></strong>, then the zone will also be
                    treated as if it
                    is also a delegation-only type zone.
                  </p></dd>
<dt><span class="term"><span><strong class="command">forward</strong></span></span></dt>
<dd><p>
                    Only meaningful if the zone has a forwarders
                    list. The <span><strong class="command">only</strong></span> value causes
                    the lookup to fail
                    after trying the forwarders and getting no answer, while <span><strong class="command">first</strong></span> would
                    allow a normal lookup to be tried.
                  </p></dd>
<dt><span class="term"><span><strong class="command">forwarders</strong></span></span></dt>
<dd><p>
                    Used to override the list of global forwarders.
                    If it is not specified in a zone of type <span><strong class="command">forward</strong></span>,
                    no forwarding is done for the zone and the global options are
                    not used.
                  </p></dd>
<dt><span class="term"><span><strong class="command">ixfr-base</strong></span></span></dt>
<dd><p>
                    Was used in <acronym class="acronym">BIND</acronym> 8 to
                    specify the name
                    of the transaction log (journal) file for dynamic update
                    and IXFR.
                    <acronym class="acronym">BIND</acronym> 9 ignores the option
                    and constructs the name of the journal
                    file by appending "<code class="filename">.jnl</code>"
                    to the name of the
                    zone file.
                  </p></dd>
<dt><span class="term"><span><strong class="command">ixfr-tmp-file</strong></span></span></dt>
<dd><p>
                    Was an undocumented option in <acronym class="acronym">BIND</acronym> 8.
                    Ignored in <acronym class="acronym">BIND</acronym> 9.
                  </p></dd>
<dt><span class="term"><span><strong class="command">journal</strong></span></span></dt>
<dd><p>
                    Allow the default journal's filename to be overridden.
                    The default is the zone's filename with "<code class="filename">.jnl</code>" appended.
                    This is applicable to <span><strong class="command">master</strong></span> and <span><strong class="command">slave</strong></span> zones.
                  </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-in</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-time-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-in</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-idle-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-out</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-time-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-out</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-idle-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">notify</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">notify</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">notify-delay</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">notify-delay</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">pubkey</strong></span></span></dt>
<dd><p>
                    In <acronym class="acronym">BIND</acronym> 8, this option was
                    intended for specifying
                    a public zone key for verification of signatures in DNSSEC
                    signed
                    zones when they are loaded from disk. <acronym class="acronym">BIND</acronym> 9 does not verify signatures
                    on load and ignores the option.
                  </p></dd>
<dt><span class="term"><span><strong class="command">zone-statistics</strong></span></span></dt>
<dd><p>
                    If <strong class="userinput"><code>yes</code></strong>, the server will keep
                    statistical
                    information for this zone, which can be dumped to the
                    <span><strong class="command">statistics-file</strong></span> defined in
                    the server options.
                  </p></dd>
<dt><span class="term"><span><strong class="command">sig-validity-interval</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">sig-validity-interval</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">transfer-source</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">transfer-source-v6</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source-v6</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">use-alt-transfer-source</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">notify-source</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">notify-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">notify-source-v6</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">notify-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
<dt>
<span class="term"><span><strong class="command">min-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">max-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">min-retry-time</strong></span>, </span><span class="term"><span><strong class="command">max-retry-time</strong></span></span>
</dt>
<dd><p>
                    See the description in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">ixfr-from-differences</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">ixfr-from-differences</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">key-directory</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and
          Usage&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">multi-master</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">multi-master</strong></span> in
                    <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">masterfile-format</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">masterfile-format</strong></span>
                    in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="dynamic_update_policies"></a>Dynamic Update Policies</h4></div></div></div>
<p>
              <acronym class="acronym">BIND</acronym> 9 supports two alternative
              methods of granting clients
              the right to perform dynamic updates to a zone,
              configured by the <span><strong class="command">allow-update</strong></span>
              and
              <span><strong class="command">update-policy</strong></span> option,
              respectively.
            </p>
<p>
              The <span><strong class="command">allow-update</strong></span> clause works the
              same
              way as in previous versions of <acronym class="acronym">BIND</acronym>. It grants given clients the
              permission to update any record of any name in the zone.
            </p>
<p>
              The <span><strong class="command">update-policy</strong></span> clause is new
              in <acronym class="acronym">BIND</acronym>
              9 and allows more fine-grained control over what updates are
              allowed.
              A set of rules is specified, where each rule either grants or
              denies
              permissions for one or more names to be updated by one or more
              identities.
              If the dynamic update request message is signed (that is, it
              includes
              either a TSIG or SIG(0) record), the identity of the signer can
              be determined.
            </p>
<p>
              Rules are specified in the <span><strong class="command">update-policy</strong></span> zone
              option, and are only meaningful for master zones.  When the <span><strong class="command">update-policy</strong></span> statement
              is present, it is a configuration error for the <span><strong class="command">allow-update</strong></span> statement
              to be present.  The <span><strong class="command">update-policy</strong></span>
              statement only
              examines the signer of a message; the source address is not
              relevant.
            </p>
<p>
              This is how a rule definition looks:
            </p>
<pre class="programlisting">
( <span><strong class="command">grant</strong></span> | <span><strong class="command">deny</strong></span> ) <em class="replaceable"><code>identity</code></em> <em class="replaceable"><code>nametype</code></em> <em class="replaceable"><code>name</code></em> [<span class="optional"> <em class="replaceable"><code>types</code></em> </span>]
</pre>
<p>
              Each rule grants or denies privileges.  Once a message has
              successfully matched a rule, the operation is immediately
              granted
              or denied and no further rules are examined.  A rule is matched
              when the signer matches the identity field, the name matches the
              name field in accordance with the nametype field, and the type
              matches
              the types specified in the type field.
            </p>
<p>
              The identity field specifies a name or a wildcard name.
              Normally, this
              is the name of the TSIG or SIG(0) key used to sign the update
              request.  When a
              TKEY exchange has been used to create a shared secret, the
              identity of the
              shared secret is the same as the identity of the key used to
              authenticate the
              TKEY exchange.  When the <em class="replaceable"><code>identity</code></em> field specifies a
              wildcard name, it is subject to DNS wildcard expansion, so the
              rule will apply
              to multiple identities.  The <em class="replaceable"><code>identity</code></em> field must
              contain a fully-qualified domain name.
            </p>
<p>
              The <em class="replaceable"><code>nametype</code></em> field has 6
              values:
              <code class="varname">name</code>, <code class="varname">subdomain</code>,
              <code class="varname">wildcard</code>, <code class="varname">self</code>,
               <code class="varname">selfsub</code>, and <code class="varname">selfwild</code>.
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        <code class="varname">name</code>
                      </p>
                    </td>
<td>
                      <p>
                        Exact-match semantics.  This rule matches
                        when the name being updated is identical
                        to the contents of the
                        <em class="replaceable"><code>name</code></em> field.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">subdomain</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule matches when the name being updated
                        is a subdomain of, or identical to, the
                        contents of the <em class="replaceable"><code>name</code></em>
                        field.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">wildcard</code>
                      </p>
                    </td>
<td>
                      <p>
                        The <em class="replaceable"><code>name</code></em> field
                        is subject to DNS wildcard expansion, and
                        this rule matches when the name being updated
                        name is a valid expansion of the wildcard.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">self</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule matches when the name being updated
                        matches the contents of the
                        <em class="replaceable"><code>identity</code></em> field.
                        The <em class="replaceable"><code>name</code></em> field
                        is ignored, but should be the same as the
                        <em class="replaceable"><code>identity</code></em> field.
                        The <code class="varname">self</code> nametype is
                        most useful when allowing using one key per
                        name to update, where the key has the same
                        name as the name to be updated.  The
                        <em class="replaceable"><code>identity</code></em> would
                        be specified as <code class="constant">*</code> (an asterisk) in
                        this case.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">selfsub</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule is similar to <code class="varname">self</code>
                        except that subdomains of <code class="varname">self</code>
                        can also be updated.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">selfwild</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule is similar to <code class="varname">self</code>
                        except that only subdomains of
                        <code class="varname">self</code> can be updated.
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              In all cases, the <em class="replaceable"><code>name</code></em>
              field must
              specify a fully-qualified domain name.
            </p>
<p>
              If no types are explicitly specified, this rule matches all
              types except
              RRSIG, NS, SOA, and NSEC. Types may be specified by name, including
              "ANY" (ANY matches all types except NSEC, which can never be
              updated).
              Note that when an attempt is made to delete all records
              associated with a
              name, the rules are checked for each existing record type.
            </p>
</div>
</div>
</div>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="id2589080"></a>Zone File</h2></div></div></div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="types_of_resource_records_and_when_to_use_them"></a>Types of Resource Records and When to Use Them</h3></div></div></div>
<p>
            This section, largely borrowed from RFC 1034, describes the
            concept of a Resource Record (RR) and explains when each is used.
            Since the publication of RFC 1034, several new RRs have been
            identified
            and implemented in the DNS. These are also included.
          </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2589098"></a>Resource Records</h4></div></div></div>
<p>
              A domain name identifies a node.  Each node has a set of
              resource information, which may be empty.  The set of resource
              information associated with a particular name is composed of
              separate RRs. The order of RRs in a set is not significant and
              need not be preserved by name servers, resolvers, or other
              parts of the DNS. However, sorting of multiple RRs is
              permitted for optimization purposes, for example, to specify
              that a particular nearby server be tried first. See <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a> and <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>.
            </p>
<p>
              The components of a Resource Record are:
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        owner name
                      </p>
                    </td>
<td>
                      <p>
                        The domain name where the RR is found.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        type
                      </p>
                    </td>
<td>
                      <p>
                        An encoded 16-bit value that specifies
                        the type of the resource record.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        TTL
                      </p>
                    </td>
<td>
                      <p>
                        The time-to-live of the RR. This field
                        is a 32-bit integer in units of seconds, and is
                        primarily used by
                        resolvers when they cache RRs. The TTL describes how
                        long a RR can
                        be cached before it should be discarded.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        class
                      </p>
                    </td>
<td>
                      <p>
                        An encoded 16-bit value that identifies
                        a protocol family or instance of a protocol.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RDATA
                      </p>
                    </td>
<td>
                      <p>
                        The resource data.  The format of the
                        data is type (and sometimes class) specific.
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              The following are <span class="emphasis"><em>types</em></span> of valid RRs:
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        A
                      </p>
                    </td>
<td>
                      <p>
                        A host address.  In the IN class, this is a
                        32-bit IP address.  Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        AAAA
                      </p>
                    </td>
<td>
                      <p>
                        IPv6 address.  Described in RFC 1886.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        A6
                      </p>
                    </td>
<td>
                      <p>
                        IPv6 address.  This can be a partial
                        address (a suffix) and an indirection to the name
                        where the rest of the
                        address (the prefix) can be found.  Experimental.
                        Described in RFC 2874.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        AFSDB
                      </p>
                    </td>
<td>
                      <p>
                        Location of AFS database servers.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        APL
                      </p>
                    </td>
<td>
                      <p>
                        Address prefix list.  Experimental.
                        Described in RFC 3123.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        CERT
                      </p>
                    </td>
<td>
                      <p>
                        Holds a digital certificate.
                        Described in RFC 2538.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        CNAME
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the canonical name of an alias.
                        Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        DNAME
                      </p>
                    </td>
<td>
                      <p>
                        Replaces the domain name specified with
                        another name to be looked up, effectively aliasing an
                        entire
                        subtree of the domain name space rather than a single
                        record
                        as in the case of the CNAME RR.
                        Described in RFC 2672.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        DNSKEY
                      </p>
                    </td>
<td>
                      <p>
                        Stores a public key associated with a signed
                        DNS zone.  Described in RFC 4034.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        DS
                      </p>
                    </td>
<td>
                      <p>
                        Stores the hash of a public key associated with a
                        signed DNS zone.  Described in RFC 4034.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        GPOS
                      </p>
                    </td>
<td>
                      <p>
                        Specifies the global position.  Superseded by LOC.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        HINFO
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the CPU and OS used by a host.
                        Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        ISDN
                      </p>
                    </td>
<td>
                      <p>
                        Representation of ISDN addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        KEY
                      </p>
                    </td>
<td>
                      <p>
                        Stores a public key associated with a
                        DNS name.  Used in original DNSSEC; replaced
                        by DNSKEY in DNSSECbis, but still used with
                        SIG(0).  Described in RFCs 2535 and 2931.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        KX
                      </p>
                    </td>
<td>
                      <p>
                        Identifies a key exchanger for this
                        DNS name.  Described in RFC 2230.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        LOC
                      </p>
                    </td>
<td>
                      <p>
                        For storing GPS info.  Described in RFC 1876.
                        Experimental.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        MX
                      </p>
                    </td>
<td>
                      <p>
                        Identifies a mail exchange for the domain with
                        a 16-bit preference value (lower is better)
                        followed by the host name of the mail exchange.
                        Described in RFC 974, RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        NAPTR
                      </p>
                    </td>
<td>
                      <p>
                        Name authority pointer.  Described in RFC 2915.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        NSAP
                      </p>
                    </td>
<td>
                      <p>
                        A network service access point.
                        Described in RFC 1706.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        NS
                      </p>
                    </td>
<td>
                      <p>
                        The authoritative name server for the
                        domain.  Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        NSEC
                      </p>
                    </td>
<td>
                      <p>
                        Used in DNSSECbis to securely indicate that
                        RRs with an owner name in a certain name interval do
                        not exist in
                        a zone and indicate what RR types are present for an
                        existing name.
                        Described in RFC 4034.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        NXT
                      </p>
                    </td>
<td>
                      <p>
                        Used in DNSSEC to securely indicate that
                        RRs with an owner name in a certain name interval do
                        not exist in
                        a zone and indicate what RR types are present for an
                        existing name.
                        Used in original DNSSEC; replaced by NSEC in
                        DNSSECbis.
                        Described in RFC 2535.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        PTR
                      </p>
                    </td>
<td>
                      <p>
                        A pointer to another part of the domain
                        name space.  Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        PX
                      </p>
                    </td>
<td>
                      <p>
                        Provides mappings between RFC 822 and X.400
                        addresses.  Described in RFC 2163.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RP
                      </p>
                    </td>
<td>
                      <p>
                        Information on persons responsible
                        for the domain.  Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RRSIG
                      </p>
                    </td>
<td>
                      <p>
                        Contains DNSSECbis signature data.  Described
                        in RFC 4034.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RT
                      </p>
                    </td>
<td>
                      <p>
                        Route-through binding for hosts that
                        do not have their own direct wide area network
                        addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        SIG
                      </p>
                    </td>
<td>
                      <p>
                        Contains DNSSEC signature data.  Used in
                        original DNSSEC; replaced by RRSIG in
                        DNSSECbis, but still used for SIG(0).
                        Described in RFCs 2535 and 2931.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        SOA
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the start of a zone of authority.
                        Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        SRV
                      </p>
                    </td>
<td>
                      <p>
                        Information about well known network
                        services (replaces WKS).  Described in RFC 2782.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        TXT
                      </p>
                    </td>
<td>
                      <p>
                        Text records.  Described in RFC 1035.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        WKS
                      </p>
                    </td>
<td>
                      <p>
                        Information about which well known
                        network services, such as SMTP, that a domain
                        supports. Historical.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        X25
                      </p>
                    </td>
<td>
                      <p>
                        Representation of X.25 network addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              The following <span class="emphasis"><em>classes</em></span> of resource records
              are currently valid in the DNS:
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        IN
                      </p>
                    </td>
<td>
                      <p>
                        The Internet.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        CH
                      </p>
                    </td>
<td>
                      <p>
                        Chaosnet, a LAN protocol created at MIT in the
                        mid-1970s.
                        Rarely used for its historical purpose, but reused for
                        BIND's
                        built-in server information zones, e.g.,
                        <code class="literal">version.bind</code>.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        HS
                      </p>
                    </td>
<td>
                      <p>
                        Hesiod, an information service
                        developed by MIT's Project Athena. It is used to share
                        information
                        about various systems databases, such as users,
                        groups, printers
                        and so on.
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              The owner name is often implicit, rather than forming an
              integral
              part of the RR.  For example, many name servers internally form
              tree
              or hash structures for the name space, and chain RRs off nodes.
              The remaining RR parts are the fixed header (type, class, TTL)
              which is consistent for all RRs, and a variable part (RDATA)
              that
              fits the needs of the resource being described.
            </p>
<p>
              The meaning of the TTL field is a time limit on how long an
              RR can be kept in a cache.  This limit does not apply to
              authoritative
              data in zones; it is also timed out, but by the refreshing
              policies
              for the zone.  The TTL is assigned by the administrator for the
              zone where the data originates.  While short TTLs can be used to
              minimize caching, and a zero TTL prohibits caching, the
              realities
              of Internet performance suggest that these times should be on
              the
              order of days for the typical host.  If a change can be
              anticipated,
              the TTL can be reduced prior to the change to minimize
              inconsistency
              during the change, and then increased back to its former value
              following
              the change.
            </p>
<p>
              The data in the RDATA section of RRs is carried as a combination
              of binary strings and domain names.  The domain names are
              frequently
              used as "pointers" to other data in the DNS.
            </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2590513"></a>Textual expression of RRs</h4></div></div></div>
<p>
              RRs are represented in binary form in the packets of the DNS
              protocol, and are usually represented in highly encoded form
              when
              stored in a name server or resolver.  In the examples provided
              in
              RFC 1034, a style similar to that used in master files was
              employed
              in order to show the contents of RRs.  In this format, most RRs
              are shown on a single line, although continuation lines are
              possible
              using parentheses.
            </p>
<p>
              The start of the line gives the owner of the RR.  If a line
              begins with a blank, then the owner is assumed to be the same as
              that of the previous RR.  Blank lines are often included for
              readability.
            </p>
<p>
              Following the owner, we list the TTL, type, and class of the
              RR.  Class and type use the mnemonics defined above, and TTL is
              an integer before the type field.  In order to avoid ambiguity
              in
              parsing, type and class mnemonics are disjoint, TTLs are
              integers,
              and the type mnemonic is always last. The IN class and TTL
              values
              are often omitted from examples in the interests of clarity.
            </p>
<p>
              The resource data or RDATA section of the RR are given using
              knowledge of the typical representation for the data.
            </p>
<p>
              For example, we might show the RRs carried in a message as:
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        <code class="literal">ISI.EDU.</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">MX</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10 VENERA.ISI.EDU.</code>
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">MX</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10 VAXA.ISI.EDU</code>
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="literal">VENERA.ISI.EDU</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">128.9.0.32</code>
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.1.0.52</code>
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="literal">VAXA.ISI.EDU</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.2.0.27</code>
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">128.9.0.33</code>
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              The MX RRs have an RDATA section which consists of a 16-bit
              number followed by a domain name.  The address RRs use a
              standard
              IP address format to contain a 32-bit internet address.
            </p>
<p>
              The above example shows six RRs, with two RRs at each of three
              domain names.
            </p>
<p>
              Similarly we might see:
            </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                      <p>
                        <code class="literal">XX.LCS.MIT.EDU.</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">IN A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.0.0.44</code>
                      </p>
                    </td>
</tr>
<tr>
<td> </td>
<td>
                      <p>
                        <code class="literal">CH A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">MIT.EDU. 2420</code>
                      </p>
                    </td>
</tr>
</tbody>
</table></div>
<p>
              This example shows two addresses for
              <code class="literal">XX.LCS.MIT.EDU</code>, each of a different class.
            </p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2591101"></a>Discussion of MX Records</h3></div></div></div>
<p>
            As described above, domain servers store information as a
            series of resource records, each of which contains a particular
            piece of information about a given domain name (which is usually,
            but not always, a host). The simplest way to think of a RR is as
            a typed pair of data, a domain name matched with a relevant datum,
            and stored with some additional type information to help systems
            determine when the RR is relevant.
          </p>
<p>
            MX records are used to control delivery of email. The data
            specified in the record is a priority and a domain name. The
            priority
            controls the order in which email delivery is attempted, with the
            lowest number first. If two priorities are the same, a server is
            chosen randomly. If no servers at a given priority are responding,
            the mail transport agent will fall back to the next largest
            priority.
            Priority numbers do not have any absolute meaning &#8212; they are
            relevant
            only respective to other MX records for that domain name. The
            domain
            name given is the machine to which the mail will be delivered.
            It <span class="emphasis"><em>must</em></span> have an associated address record
            (A or AAAA) &#8212; CNAME is not sufficient.
          </p>
<p>
            For a given domain, if there is both a CNAME record and an
            MX record, the MX record is in error, and will be ignored.
            Instead,
            the mail will be delivered to the server specified in the MX
            record
            pointed to by the CNAME.
          </p>
<p>
            For example:
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p>
                      <code class="literal">example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail.example.com.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p></p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail2.example.com.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p></p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">20</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail.backup.org.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      <code class="literal">mail.example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">A</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10.0.0.1</code>
                    </p>
                  </td>
<td>
                    <p></p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      <code class="literal">mail2.example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">A</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10.0.0.2</code>
                    </p>
                  </td>
<td>
                    <p></p>
                  </td>
</tr>
</tbody>
</table></div>
<p>
            Mail delivery will be attempted to <code class="literal">mail.example.com</code> and
            <code class="literal">mail2.example.com</code> (in
            any order), and if neither of those succeed, delivery to <code class="literal">mail.backup.org</code> will
            be attempted.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="Setting_TTLs"></a>Setting TTLs</h3></div></div></div>
<p>
            The time-to-live of the RR field is a 32-bit integer represented
            in units of seconds, and is primarily used by resolvers when they
            cache RRs. The TTL describes how long a RR can be cached before it
            should be discarded. The following three types of TTL are
            currently
            used in a zone file.
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p>
                      SOA
                    </p>
                  </td>
<td>
                    <p>
                      The last field in the SOA is the negative
                      caching TTL. This controls how long other servers will
                      cache no-such-domain
                      (NXDOMAIN) responses from you.
                    </p>
                    <p>
                      The maximum time for
                      negative caching is 3 hours (3h).
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      $TTL
                    </p>
                  </td>
<td>
                    <p>
                      The $TTL directive at the top of the
                      zone file (before the SOA) gives a default TTL for every
                      RR without
                      a specific TTL set.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      RR TTLs
                    </p>
                  </td>
<td>
                    <p>
                      Each RR can have a TTL as the second
                      field in the RR, which will control how long other
                      servers can cache
                      the it.
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
<p>
            All of these TTLs default to units of seconds, though units
            can be explicitly specified, for example, <code class="literal">1h30m</code>.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2591653"></a>Inverse Mapping in IPv4</h3></div></div></div>
<p>
            Reverse name resolution (that is, translation from IP address
            to name) is achieved by means of the <span class="emphasis"><em>in-addr.arpa</em></span> domain
            and PTR records. Entries in the in-addr.arpa domain are made in
            least-to-most significant order, read left to right. This is the
            opposite order to the way IP addresses are usually written. Thus,
            a machine with an IP address of 10.1.2.3 would have a
            corresponding
            in-addr.arpa name of
            3.2.1.10.in-addr.arpa. This name should have a PTR resource record
            whose data field is the name of the machine or, optionally,
            multiple
            PTR records if the machine has more than one name. For example,
            in the [<span class="optional">example.com</span>] domain:
          </p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p>
                      <code class="literal">$ORIGIN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">2.1.10.in-addr.arpa</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      <code class="literal">3</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN PTR foo.example.com.</code>
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
              The <span><strong class="command">$ORIGIN</strong></span> lines in the examples
              are for providing context to the examples only &#8212; they do not
              necessarily
              appear in the actual usage. They are only used here to indicate
              that the example is relative to the listed origin.
            </p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2591848"></a>Other Zone File Directives</h3></div></div></div>
<p>
            The Master File Format was initially defined in RFC 1035 and
            has subsequently been extended. While the Master File Format
            itself
            is class independent all records in a Master File must be of the
            same
            class.
          </p>
<p>
            Master File Directives include <span><strong class="command">$ORIGIN</strong></span>, <span><strong class="command">$INCLUDE</strong></span>,
            and <span><strong class="command">$TTL.</strong></span>
          </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2591870"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$ORIGIN</strong></span>
              <em class="replaceable"><code>domain-name</code></em>
              [<span class="optional"><em class="replaceable"><code>comment</code></em></span>]
            </p>
<p><span><strong class="command">$ORIGIN</strong></span>
              sets the domain name that will be appended to any
              unqualified records. When a zone is first read in there
              is an implicit <span><strong class="command">$ORIGIN</strong></span>
              &lt;<code class="varname">zone-name</code>&gt;<span><strong class="command">.</strong></span>
              The current <span><strong class="command">$ORIGIN</strong></span> is appended to
              the domain specified in the <span><strong class="command">$ORIGIN</strong></span>
              argument if it is not absolute.
            </p>
<pre class="programlisting">
$ORIGIN example.com.
WWW     CNAME   MAIN-SERVER
</pre>
<p>
              is equivalent to
            </p>
<pre class="programlisting">
WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.
</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2592000"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$INCLUDE</strong></span>
              <em class="replaceable"><code>filename</code></em>
              [<span class="optional">
<em class="replaceable"><code>origin</code></em> </span>]
              [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]
            </p>
<p>
              Read and process the file <code class="filename">filename</code> as
              if it were included into the file at this point.  If <span><strong class="command">origin</strong></span> is
              specified the file is processed with <span><strong class="command">$ORIGIN</strong></span> set
              to that value, otherwise the current <span><strong class="command">$ORIGIN</strong></span> is
              used.
            </p>
<p>
              The origin and the current domain name
              revert to the values they had prior to the <span><strong class="command">$INCLUDE</strong></span> once
              the file has been read.
            </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                RFC 1035 specifies that the current origin should be restored
                after
                an <span><strong class="command">$INCLUDE</strong></span>, but it is silent
                on whether the current
                domain name should also be restored.  BIND 9 restores both of
                them.
                This could be construed as a deviation from RFC 1035, a
                feature, or both.
              </p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2592069"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$TTL</strong></span>
              <em class="replaceable"><code>default-ttl</code></em>
              [<span class="optional">
<em class="replaceable"><code>comment</code></em> </span>]
            </p>
<p>
              Set the default Time To Live (TTL) for subsequent records
              with undefined TTLs. Valid TTLs are of the range 0-2147483647
              seconds.
            </p>
<p><span><strong class="command">$TTL</strong></span>
               is defined in RFC 2308.
            </p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2592173"></a><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
<p>
            Syntax: <span><strong class="command">$GENERATE</strong></span>
            <em class="replaceable"><code>range</code></em>
            <em class="replaceable"><code>lhs</code></em>
            [<span class="optional"><em class="replaceable"><code>ttl</code></em></span>]
            [<span class="optional"><em class="replaceable"><code>class</code></em></span>]
            <em class="replaceable"><code>type</code></em>
            <em class="replaceable"><code>rhs</code></em>
            [<span class="optional"><em class="replaceable"><code>comment</code></em></span>]
          </p>
<p><span><strong class="command">$GENERATE</strong></span>
            is used to create a series of resource records that only
            differ from each other by an
            iterator. <span><strong class="command">$GENERATE</strong></span> can be used to
            easily generate the sets of records required to support
            sub /24 reverse delegations described in RFC 2317:
            Classless IN-ADDR.ARPA delegation.
          </p>
<pre class="programlisting">$ORIGIN 0.0.192.IN-ADDR.ARPA.
$GENERATE 1-2 0 NS SERVER$.EXAMPLE.
$GENERATE 1-127 $ CNAME $.0</pre>
<p>
            is equivalent to
          </p>
<pre class="programlisting">0.0.0.192.IN-ADDR.ARPA NS SERVER1.EXAMPLE.
0.0.0.192.IN-ADDR.ARPA. NS SERVER2.EXAMPLE.
1.0.0.192.IN-ADDR.ARPA. CNAME 1.0.0.0.192.IN-ADDR.ARPA.
2.0.0.192.IN-ADDR.ARPA. CNAME 2.0.0.0.192.IN-ADDR.ARPA.
...
127.0.0.192.IN-ADDR.ARPA. CNAME 127.0.0.0.192.IN-ADDR.ARPA.
</pre>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td>
                    <p><span><strong class="command">range</strong></span></p>
                  </td>
<td>
                    <p>
                      This can be one of two forms: start-stop
                      or start-stop/step. If the first form is used, then step
                      is set to
                      1. All of start, stop and step must be positive.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">lhs</strong></span></p>
                  </td>
<td>
                    <p>This
                      describes the owner name of the resource records
                      to be created.  Any single <span><strong class="command">$</strong></span>
                      (dollar sign)
                      symbols within the <span><strong class="command">lhs</strong></span> side
                      are replaced by the iterator value.

                      To get a $ in the output, you need to escape the
                      <span><strong class="command">$</strong></span> using a backslash
                      <span><strong class="command">\</strong></span>,
                      e.g. <span><strong class="command">\$</strong></span>. The
                      <span><strong class="command">$</strong></span> may optionally be followed
                      by modifiers which change the offset from the
                      iterator, field width and base.

                      Modifiers are introduced by a
                      <span><strong class="command">{</strong></span> (left brace) immediately following the
                      <span><strong class="command">$</strong></span> as
                      <span><strong class="command">${offset[,width[,base]]}</strong></span>.
                      For example, <span><strong class="command">${-20,3,d}</strong></span>
                      subtracts 20 from the current value, prints the
                      result as a decimal in a zero-padded field of
                      width 3.

                      Available output forms are decimal
                      (<span><strong class="command">d</strong></span>), octal
                      (<span><strong class="command">o</strong></span>) and hexadecimal
                      (<span><strong class="command">x</strong></span> or <span><strong class="command">X</strong></span>
                      for uppercase).  The default modifier is
                      <span><strong class="command">${0,0,d}</strong></span>.  If the
                      <span><strong class="command">lhs</strong></span> is not absolute, the
                      current <span><strong class="command">$ORIGIN</strong></span> is appended
                      to the name.
                    </p>
                    <p>
                      For compatibility with earlier versions, <span><strong class="command">$$</strong></span> is still
                      recognized as indicating a literal $ in the output.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">ttl</strong></span></p>
                  </td>
<td>
                    <p>
                      Specifies the time-to-live of the generated records. If
                      not specified this will be inherited using the
                      normal ttl inheritance rules.
                    </p>
                    <p><span><strong class="command">class</strong></span>
                      and <span><strong class="command">ttl</strong></span> can be
                      entered in either order.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">class</strong></span></p>
                  </td>
<td>
                    <p>
                      Specifies the class of the generated records.
                      This must match the zone class if it is
                      specified.
                    </p>
                    <p><span><strong class="command">class</strong></span>
                      and <span><strong class="command">ttl</strong></span> can be
                      entered in either order.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">type</strong></span></p>
                  </td>
<td>
                    <p>
                      At present the only supported types are
                      PTR, CNAME, DNAME, A, AAAA and NS.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">rhs</strong></span></p>
                  </td>
<td>
                    <p>
                      <span><strong class="command">rhs</strong></span> is a domain name. It is processed
                      similarly to lhs.
                    </p>
                  </td>
</tr>
</tbody>
</table></div>
<p>
            The <span><strong class="command">$GENERATE</strong></span> directive is a <acronym class="acronym">BIND</acronym> extension
            and not part of the standard zone file format.
          </p>
<p>
            BIND 8 does not support the optional TTL and CLASS fields.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="zonefile_format"></a>Additional File Formats</h3></div></div></div>
<p>
            In addition to the standard textual format, BIND 9
            supports the ability to read or dump to zone files in
            other formats.  The <code class="constant">raw</code> format is
            currently available as an additional format.  It is a
            binary format representing BIND 9's internal data
            structure directly, thereby remarkably improving the
            loading time.
          </p>
<p>
            For a primary server, a zone file in the
            <code class="constant">raw</code> format is expected to be
            generated from a textual zone file by the
            <span><strong class="command">named-compilezone</strong></span> command.  For a
            secondary server or for a dynamic zone, it is automatically
            generated (if this format is specified by the
            <span><strong class="command">masterfile-format</strong></span> option) when
            <span><strong class="command">named</strong></span> dumps the zone contents after
            zone transfer or when applying prior updates.
          </p>
<p>
            If a zone file in a binary format needs manual modification,
            it first must be converted to a textual form by the
            <span><strong class="command">named-compilezone</strong></span> command.  All
            necessary modification should go to the text file, which
            should then be converted to the binary form by the
            <span><strong class="command">named-compilezone</strong></span> command again.
          </p>
<p>
             Although the <code class="constant">raw</code> format uses the
             network byte order and avoids architecture-dependent
             data alignment so that it is as much portable as
             possible, it is primarily expected to be used inside
             the same single system.  In order to export a zone
             file in the <code class="constant">raw</code> format or make a
             portable backup of the file, it is recommended to
             convert the file to the standard textual representation.
          </p>
</div>
</div>
</div>
<div class="navfooter">
<hr>
<table width="100%" summary="Navigation footer">
<tr>
<td width="40%" align="left">
<a accesskey="p" href="Bv9ARM.ch05.html">Prev</a> </td>
<td width="20%" align="center"> </td>
<td width="40%" align="right"> <a accesskey="n" href="Bv9ARM.ch07.html">Next</a>
</td>
</tr>
<tr>
<td width="40%" align="left" valign="top">Chapter 5. The <acronym class="acronym">BIND</acronym> 9 Lightweight Resolver </td>
<td width="20%" align="center"><a accesskey="h" href="Bv9ARM.html">Home</a></td>
<td width="40%" align="right" valign="top"> Chapter 7. <acronym class="acronym">BIND</acronym> 9 Security Considerations</td>
</tr>
</table>
</div>
</body>
</html>
@


1.11
log
@merge and resolve conflicts introduced by 9.4.2-P1
@
text
@@


1.10
log
@resolve conflicts
@
text
@d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.82.18.73 2007/10/31 01:35:58 marka Exp $ -->
d3081 12
a3092 4
            a random unprivileged port will be used. The <span><strong class="command">avoid-v4-udp-ports</strong></span>
            and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used
            to prevent named
            from selecting certain ports. The defaults are:
@


1.10.2.1
log
@Vendor patch to add port randomization to deal with the DNS cache
poisoning attack.

Dynamically allocate fd_sets so we are not limited to FD_SETSIZE
connections.

From djm@@
@
text
@d3081 4
a3084 12
	    a random unprivileged port number is picked up and will be
            used for each query.
	    It is generally strongly discouraged to
	    specify a particular port for the
	    <span><strong class="command">query-source</strong></span> or
	    <span><strong class="command">query-source-v6</strong></span>
	    options; it implicitly disables the use of randomized port numbers
	    and leads to insecure operation.
	    The <span><strong class="command">avoid-v4-udp-ports</strong></span>
	    and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used
	    to prevent named
	    from selecting certain ports. The defaults are:
@


1.9
log
@resolve conflicts and regen configure script
@
text
@d2 1
a2 1
 - Copyright (C) 2004-2006 Internet Systems Consortium, Inc. ("ISC")
d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.56.2.12.2.43 2006/11/15 04:33:41 marka Exp $ -->
d22 1
a22 1
<meta name="generator" content="DocBook XSL Stylesheets V1.70.1">
d51 1
a51 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2575672">Comment Syntax</a></span></dt>
d55 1
a55 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576157"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
d57 20
a76 15
Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576326"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage"><span><strong class="command">controls</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576672"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576686"><span><strong class="command">include</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576709"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576730"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576870"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2577064"><span><strong class="command">logging</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578270"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578343"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578406"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578518"><span><strong class="command">masters</strong></span> Statement Definition and Usage </a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578533"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#options"><span><strong class="command">options</strong></span> Statement Definition and Usage</a></span></dt>
d78 5
a82 4
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_definition_and_usage"><span><strong class="command">server</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586290"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586338"><span><strong class="command">trusted-keys</strong></span> Statement Definition
	    and Usage</a></span></dt>
d84 1
a84 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586420"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
d86 2
a87 2
Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2587635"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
d89 1
a89 1
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2589173">Zone File</a></span></dt>
d92 1
a92 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2590605">Discussion of MX Records</a></span></dt>
d94 4
a97 3
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591102">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591208">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591377"><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
d101 16
a116 10
<p><acronym class="acronym">BIND</acronym> 9 configuration is broadly similar
to <acronym class="acronym">BIND</acronym> 8; however, there are a few new areas
of configuration, such as views. <acronym class="acronym">BIND</acronym>
8 configuration files should work with few alterations in <acronym class="acronym">BIND</acronym>
9, although more complex configurations should be reviewed to check
if they can be more efficiently implemented using the new features
found in <acronym class="acronym">BIND</acronym> 9.</p>
<p><acronym class="acronym">BIND</acronym> 4 configuration files can be converted to the new format
using the shell script
<code class="filename">contrib/named-bootconf/named-bootconf.sh</code>.</p>
d120 4
a123 2
<p>Following is a list of elements used throughout the <acronym class="acronym">BIND</acronym> configuration
file documentation:</p>
d131 27
a157 3
<td><p><code class="varname">acl_name</code></p></td>
<td><p>The name of an <code class="varname">address_match_list</code> as
defined by the <span><strong class="command">acl</strong></span> statement.</p></td>
d160 14
a173 5
<td><p><code class="varname">address_match_list</code></p></td>
<td><p>A list of one or more <code class="varname">ip_addr</code>, 
<code class="varname">ip_prefix</code>, <code class="varname">key_id</code>, 
or <code class="varname">acl_name</code> elements, see
<a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a>.</p></td>
d176 11
a186 3
<td><p><code class="varname">domain_name</code></p></td>
<td><p>A quoted string which will be used as
a DNS name, for example "<code class="literal">my.test.domain</code>".</p></td>
d189 12
a200 4
<td><p><code class="varname">dotted_decimal</code></p></td>
<td><p>One to four integers valued 0 through
255 separated by dots (`.'), such as <span><strong class="command">123</strong></span>, 
<span><strong class="command">45.67</strong></span> or <span><strong class="command">89.123.45.67</strong></span>.</p></td>
d203 11
a213 3
<td><p><code class="varname">ip4_addr</code></p></td>
<td><p>An IPv4 address with exactly four elements
in <code class="varname">dotted_decimal</code> notation.</p></td>
d216 31
a246 16
<td><p><code class="varname">ip6_addr</code></p></td>
<td><p>An IPv6 address, such as <span><strong class="command">2001:db8::1234</strong></span>.
IPv6 scoped addresses that have ambiguity on their scope zones must be
disambiguated by an appropriate zone ID with the percent character
(`%') as delimiter.
It is strongly recommended to use string zone names rather than
numeric identifiers, in order to be robust against system
configuration changes.
However, since there is no standard mapping for such names and
identifier values, currently only interface names as link identifiers
are supported, assuming one-to-one mapping between interfaces and links.
For example, a link-local address <span><strong class="command">fe80::1</strong></span> on the
link attached to the interface <span><strong class="command">ne0</strong></span>
can be specified as <span><strong class="command">fe80::1%ne0</strong></span>.
Note that on most systems link-local addresses always have the
ambiguity, and need to be disambiguated.</p></td>
d249 10
a258 2
<td><p><code class="varname">ip_addr</code></p></td>
<td><p>An <code class="varname">ip4_addr</code> or <code class="varname">ip6_addr</code>.</p></td>
d261 17
a277 6
<td><p><code class="varname">ip_port</code></p></td>
<td><p>An IP port <code class="varname">number</code>.
<code class="varname">number</code> is limited to 0 through 65535, with values
below 1024 typically restricted to use by processes running as root.
In some cases, an asterisk (`*') character can be used as a placeholder to
select a random high-numbered port.</p></td>
d280 18
a297 7
<td><p><code class="varname">ip_prefix</code></p></td>
<td><p>An IP network specified as an <code class="varname">ip_addr</code>,
followed by a slash (`/') and then the number of bits in the netmask.
Trailing zeros in a <code class="varname">ip_addr</code> may omitted.
For example, <span><strong class="command">127/8</strong></span> is the network <span><strong class="command">127.0.0.0</strong></span> with
netmask <span><strong class="command">255.0.0.0</strong></span> and <span><strong class="command">1.2.3.0/28</strong></span> is
network <span><strong class="command">1.2.3.0</strong></span> with netmask <span><strong class="command">255.255.255.240</strong></span>.</p></td>
d300 12
a311 3
<td><p><code class="varname">key_id</code></p></td>
<td><p>A <code class="varname">domain_name</code> representing
the name of a shared key, to be used for transaction security.</p></td>
d314 12
a325 3
<td><p><code class="varname">key_list</code></p></td>
<td><p>A list of one or more <code class="varname">key_id</code>s,
separated by semicolons and ending with a semicolon.</p></td>
d328 13
a340 5
<td><p><code class="varname">number</code></p></td>
<td><p>A non-negative 32-bit integer
(i.e., a number between 0 and 4294967295, inclusive).
Its acceptable value might further
be limited by the context in which it is used.</p></td>
d343 11
a353 3
<td><p><code class="varname">path_name</code></p></td>
<td><p>A quoted string which will be used as
a pathname, such as <code class="filename">zones/master/my.test.domain</code>.</p></td>
a355 1
<td><p><code class="varname">size_spec</code></p></td>
d357 33
a389 16
<p>A number, the word <strong class="userinput"><code>unlimited</code></strong>,
or the word <strong class="userinput"><code>default</code></strong>.</p>
<p>
An <code class="varname">unlimited</code> <code class="varname">size_spec</code> requests unlimited
use, or the maximum available amount. A <code class="varname">default size_spec</code> uses
the limit that was in force when the server was started.</p>
<p>A <code class="varname">number</code> can
optionally be followed by a scaling factor: <strong class="userinput"><code>K</code></strong> or <strong class="userinput"><code>k</code></strong> for
kilobytes, <strong class="userinput"><code>M</code></strong> or <strong class="userinput"><code>m</code></strong> for
megabytes, and <strong class="userinput"><code>G</code></strong> or <strong class="userinput"><code>g</code></strong> for gigabytes,
which scale by 1024, 1024*1024, and 1024*1024*1024 respectively.</p>
<p>The value must be representable as a 64-bit unsigned integer
(0 to 18446744073709551615, inclusive).
Using <code class="varname">unlimited</code> is the best way
to safely set a really large number.</p>
</td>
d392 13
a404 4
<td><p><code class="varname">yes_or_no</code></p></td>
<td><p>Either <strong class="userinput"><code>yes</code></strong> or <strong class="userinput"><code>no</code></strong>.
The words <strong class="userinput"><code>true</code></strong> and <strong class="userinput"><code>false</code></strong> are
also accepted, as are the numbers <strong class="userinput"><code>1</code></strong> and <strong class="userinput"><code>0</code></strong>.</p></td>
d407 16
a422 8
<td><p><code class="varname">dialup_option</code></p></td>
<td><p>One of <strong class="userinput"><code>yes</code></strong>,
<strong class="userinput"><code>no</code></strong>, <strong class="userinput"><code>notify</code></strong>,
<strong class="userinput"><code>notify-passive</code></strong>, <strong class="userinput"><code>refresh</code></strong> or
<strong class="userinput"><code>passive</code></strong>.
When used in a zone, <strong class="userinput"><code>notify-passive</code></strong>,
<strong class="userinput"><code>refresh</code></strong>, and <strong class="userinput"><code>passive</code></strong>
are restricted to slave and stub zones.</p></td>
d431 1
a431 1
<a name="id2575552"></a>Syntax</h4></div></div></div>
d440 9
a448 6
<a name="id2575578"></a>Definition and Usage</h4></div></div></div>
<p>Address match lists are primarily used to determine access
control for various server operations. They are also used in
the <span><strong class="command">listen-on</strong></span> and <span><strong class="command">sortlist</strong></span>
statements. The elements
which constitute an address match list can be any of the following:</p>
d452 4
a455 1
<li>a key ID, as defined by the <span><strong class="command">key</strong></span> statement</li>
d457 2
a458 1
the <span><strong class="command">acl</strong></span> statement</li>
d461 53
a513 32
<p>Elements can be negated with a leading exclamation mark (`!'),
and the match list names "any", "none", "localhost", and "localnets"
are predefined. More information on those names can be found in
the description of the acl statement.</p>
<p>The addition of the key clause made the name of this syntactic
element something of a misnomer, since security keys can be used
to validate access without regard to a host or network address. Nonetheless,
the term "address match list" is still used throughout the documentation.</p>
<p>When a given IP address or prefix is compared to an address
match list, the list is traversed in order until an element matches.
The interpretation of a match depends on whether the list is being used
for access control, defining listen-on ports, or in a sortlist,
and whether the element was negated.</p>
<p>When used as an access control list, a non-negated match allows
access and a negated match denies access. If there is no match,
access is denied. The clauses <span><strong class="command">allow-notify</strong></span>,
<span><strong class="command">allow-query</strong></span>, <span><strong class="command">allow-transfer</strong></span>,
<span><strong class="command">allow-update</strong></span>, <span><strong class="command">allow-update-forwarding</strong></span>,
and <span><strong class="command">blackhole</strong></span> all
use address match lists  this. Similarly, the listen-on option will cause
the server to not accept queries on any of the machine's addresses
which do not match the list.</p>
<p>Because of the first-match aspect of the algorithm, an element
that defines a subset of another element in the list should come
before the broader element, regardless of whether either is negated. For
example, in
<span><strong class="command">1.2.3/24; ! 1.2.3.13;</strong></span> the 1.2.3.13 element is
completely useless because the algorithm will match any lookup for
1.2.3.13 to the 1.2.3/24 element.
Using <span><strong class="command">! 1.2.3.13; 1.2.3/24</strong></span> fixes
that problem by having 1.2.3.13 blocked by the negation but all
other 1.2.3.* hosts fall through.</p>
d518 8
a525 5
<a name="id2575672"></a>Comment Syntax</h3></div></div></div>
<p>The <acronym class="acronym">BIND</acronym> 9 comment syntax allows for comments to appear
anywhere that white space may appear in a <acronym class="acronym">BIND</acronym> configuration
file. To appeal to programmers of all kinds, they can be written
in the C, C++, or shell/perl style.</p>
d528 3
a530 1
<a name="id2575687"></a>Syntax</h4></div></div></div>
d533 1
a533 1
</p>
d536 1
a536 1
</p>
d539 1
a539 1
      </p>
d543 18
a560 9
<a name="id2575716"></a>Definition and Usage</h4></div></div></div>
<p>Comments may appear anywhere that white space may appear in
a <acronym class="acronym">BIND</acronym> configuration file.</p>
<p>C-style comments start with the two characters /* (slash,
star) and end with */ (star, slash). Because they are completely
delimited with these characters, they can be used to comment only
a portion of a line or to span multiple lines.</p>
<p>C-style comments cannot be nested. For example, the following
is not valid because the entire comment ends with the first */:</p>
d566 15
a580 5
<p>C++-style comments start with the two characters // (slash,
slash) and continue to the end of the physical line. They cannot
be continued across multiple physical lines; to have one logical
comment span multiple lines, each line must use the // pair.</p>
<p>For example:</p>
d585 15
a599 4
<p>Shell-style (or perl-style, if you prefer) comments start
with the character <code class="literal">#</code> (number sign) and continue to the end of the
physical line, as in C++ comments.</p>
<p>For example:</p>
d605 2
a606 1
</p>
d609 6
a614 4
<p>You cannot use the semicolon (`;') character
   to start a comment such as you would in a zone file. The
   semicolon indicates the end of a configuration
   statement.</p>
d622 11
a632 6
<p>A <acronym class="acronym">BIND</acronym> 9 configuration consists of statements and comments.
    Statements end with a semicolon. Statements and comments are the
    only elements that can appear without enclosing braces. Many
    statements contain a block of sub-statements, which are also
    terminated with a semicolon.</p>
<p>The following statements are supported:</p>
d640 9
a648 3
<td><p><span><strong class="command">acl</strong></span></p></td>
<td><p>defines a named IP address
matching list, for access control and other uses.</p></td>
d651 9
a659 3
<td><p><span><strong class="command">controls</strong></span></p></td>
<td><p>declares control channels to be used
by the <span><strong class="command">rndc</strong></span> utility.</p></td>
d662 8
a669 2
<td><p><span><strong class="command">include</strong></span></p></td>
<td><p>includes a file.</p></td>
d672 9
a680 3
<td><p><span><strong class="command">key</strong></span></p></td>
<td><p>specifies key information for use in
authentication and authorization using TSIG.</p></td>
d683 9
a691 3
<td><p><span><strong class="command">logging</strong></span></p></td>
<td><p>specifies what the server logs, and where
the log messages are sent.</p></td>
d694 9
a702 3
<td><p><span><strong class="command">lwres</strong></span></p></td>
<td><p>configures <span><strong class="command">named</strong></span> to
also act as a light-weight resolver daemon (<span><strong class="command">lwresd</strong></span>).</p></td>
d705 9
a713 3
<td><p><span><strong class="command">masters</strong></span></p></td>
<td><p>defines a named masters list for
inclusion in stub and slave zone masters clauses.</p></td>
d716 9
a724 3
<td><p><span><strong class="command">options</strong></span></p></td>
<td><p>controls global server configuration
options and sets defaults for other statements.</p></td>
d727 9
a735 3
<td><p><span><strong class="command">server</strong></span></p></td>
<td><p>sets certain configuration options on
a per-server basis.</p></td>
d738 8
a745 2
<td><p><span><strong class="command">trusted-keys</strong></span></p></td>
<td><p>defines trusted DNSSEC keys.</p></td>
d748 8
a755 2
<td><p><span><strong class="command">view</strong></span></p></td>
<td><p>defines a view.</p></td>
d758 8
a765 2
<td><p><span><strong class="command">zone</strong></span></p></td>
<td><p>defines a zone.</p></td>
d769 6
a774 3
<p>The <span><strong class="command">logging</strong></span> and
    <span><strong class="command">options</strong></span> statements may only occur once per
    configuration.</p>
d777 3
a779 3
<a name="id2576157"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">acl</strong></span> acl-name { 
    address_match_list 
d786 15
a800 8
Usage</h3></div></div></div>
<p>The <span><strong class="command">acl</strong></span> statement assigns a symbolic
      name to an address match list. It gets its name from a primary
      use of address match lists: Access Control Lists (ACLs).</p>
<p>Note that an address match list's name must be defined
      with <span><strong class="command">acl</strong></span> before it can be used elsewhere; no
      forward references are allowed.</p>
<p>The following ACLs are built-in:</p>
d808 8
a815 2
<td><p><span><strong class="command">any</strong></span></p></td>
<td><p>Matches all hosts.</p></td>
d818 8
a825 2
<td><p><span><strong class="command">none</strong></span></p></td>
<td><p>Matches no hosts.</p></td>
d828 9
a836 3
<td><p><span><strong class="command">localhost</strong></span></p></td>
<td><p>Matches the IPv4 and IPv6 addresses of all network
interfaces on the system.</p></td>
d839 15
a853 8
<td><p><span><strong class="command">localnets</strong></span></p></td>
<td><p>Matches any host on an IPv4 or IPv6 network
for which the system has an interface.
Some systems do not provide a way to determine the prefix lengths of
local IPv6 addresses.
In such a case, <span><strong class="command">localnets</strong></span> only matches the local
IPv6 addresses, just like <span><strong class="command">localhost</strong></span>.
</p></td>
d860 1
a860 1
<a name="id2576326"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
d862 5
a866 3
   inet ( ip_addr | * ) [<span class="optional"> port ip_port </span>] allow { <em class="replaceable"><code> address_match_list </code></em> }
                keys { <em class="replaceable"><code> key_list </code></em> };
   [<span class="optional"> inet ...; </span>]
d872 68
a939 20
<a name="controls_statement_definition_and_usage"></a><span><strong class="command">controls</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">controls</strong></span> statement declares control
      channels to be used by system administrators to control the
      operation of the name server. These control channels are
      used by the <span><strong class="command">rndc</strong></span> utility to send commands to
      and retrieve non-DNS results from a name server.</p>
<p>An <span><strong class="command">inet</strong></span> control channel is a TCP
      socket listening at the specified
      <span><strong class="command">ip_port</strong></span> on the specified
      <span><strong class="command">ip_addr</strong></span>, which can be an IPv4 or IPv6
      address.  An <span><strong class="command">ip_addr</strong></span>
      of <code class="literal">*</code> (asterisk) is interpreted as the IPv4 wildcard
      address; connections will be accepted on any of the system's
      IPv4 addresses.  To listen on the IPv6 wildcard address,
      use an <span><strong class="command">ip_addr</strong></span> of <code class="literal">::</code>.
      If you will only use <span><strong class="command">rndc</strong></span> on the local host,
      using the loopback address (<code class="literal">127.0.0.1</code>
      or <code class="literal">::1</code>) is recommended for maximum
      security.
      </p>
d941 12
a952 47
      If no port is specified, port 953
      is used.  The asterisk "<code class="literal">*</code>" cannot be used for
      <span><strong class="command">ip_port</strong></span>.</p>
<p>The ability to issue commands over the control channel is
      restricted by the <span><strong class="command">allow</strong></span> and
      <span><strong class="command">keys</strong></span> clauses. Connections to the control
      channel are permitted based on the
      <span><strong class="command">address_match_list</strong></span>.  This is for simple
      IP address based filtering only; any <span><strong class="command">key_id</strong></span>
      elements of the <span><strong class="command">address_match_list</strong></span> are
      ignored.
      </p>
<p>The primary authorization mechanism of the command
      channel is the <span><strong class="command">key_list</strong></span>, which contains
      a list of <span><strong class="command">key_id</strong></span>s.
      Each <span><strong class="command">key_id</strong></span> in
      the <span><strong class="command">key_list</strong></span> is authorized to execute
      commands over the control channel.
      See <a href="Bv9ARM.ch03.html#rndc">Remote Name Daemon Control application</a> in
      <a href="Bv9ARM.ch03.html#admin_tools" title="Administrative Tools">the section called &#8220;Administrative Tools&#8221;</a>) for information about
      configuring keys in <span><strong class="command">rndc</strong></span>.</p>
<p>
If no <span><strong class="command">controls</strong></span> statement is present,
<span><strong class="command">named</strong></span> will set up a default
control channel listening on the loopback address 127.0.0.1
and its IPv6 counterpart ::1.
In this case, and also when the <span><strong class="command">controls</strong></span> statement
is present but does not have a <span><strong class="command">keys</strong></span> clause,
<span><strong class="command">named</strong></span> will attempt to load the command channel key
from the file <code class="filename">rndc.key</code> in
<code class="filename">/etc</code> (or whatever <code class="varname">sysconfdir</code>
was specified as when <acronym class="acronym">BIND</acronym> was built).
To create a <code class="filename">rndc.key</code> file, run
<strong class="userinput"><code>rndc-confgen -a</code></strong>.
</p>
<p>The <code class="filename">rndc.key</code> feature was created to
      ease the transition of systems from <acronym class="acronym">BIND</acronym> 8,
      which did not have digital signatures on its command channel messages
      and thus did not have a <span><strong class="command">keys</strong></span> clause.

It makes it possible to use an existing <acronym class="acronym">BIND</acronym> 8
configuration file in <acronym class="acronym">BIND</acronym> 9 unchanged,
and still have <span><strong class="command">rndc</strong></span> work the same way
<span><strong class="command">ndc</strong></span> worked in BIND 8, simply by executing the
command <strong class="userinput"><code>rndc-confgen -a</code></strong> after BIND 9 is
installed.
</p>
d954 20
a973 19
      Since the <code class="filename">rndc.key</code> feature
      is only intended to allow the backward-compatible usage of
      <acronym class="acronym">BIND</acronym> 8 configuration files, this feature does not
      have a high degree of configurability.  You cannot easily change
      the key name or the size of the secret, so you should make a
      <code class="filename">rndc.conf</code> with your own key if you wish to change
      those things.  The <code class="filename">rndc.key</code> file also has its
      permissions set such that only the owner of the file (the user that
      <span><strong class="command">named</strong></span> is running as) can access it.  If you
      desire greater flexibility in allowing other users to access
      <span><strong class="command">rndc</strong></span> commands, then you need to create a
      <code class="filename">rndc.conf</code> file and make it group readable by a group
      that contains the users who should have access.</p>
<p>The UNIX control channel type of <acronym class="acronym">BIND</acronym> 8 is not supported
      in <acronym class="acronym">BIND</acronym> 9.0, <acronym class="acronym">BIND</acronym> 9.1,
      <acronym class="acronym">BIND</acronym> 9.2 and <acronym class="acronym">BIND</acronym> 9.3.
      If it is present in the controls statement from a
      <acronym class="acronym">BIND</acronym> 8 configuration file, it is ignored
      and a warning is logged.</p>
d975 4
a978 3
To disable the command channel, use an empty <span><strong class="command">controls</strong></span>
statement: <span><strong class="command">controls { };</strong></span>.
</p>
d982 1
a982 1
<a name="id2576672"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
d987 12
a998 8
<a name="id2576686"></a><span><strong class="command">include</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">include</strong></span> statement inserts the
      specified file at the point where the <span><strong class="command">include</strong></span>
      statement is encountered. The <span><strong class="command">include</strong></span>
      statement facilitates the administration of configuration files
      by permitting the reading or writing of some things but not
      others. For example, the statement could include private keys
      that are readable only by the name server.</p>
d1002 1
a1002 1
<a name="id2576709"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
d1011 30
a1040 6
<a name="id2576730"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">key</strong></span> statement defines a shared
secret key for use with TSIG (see <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
or the command channel
(see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and Usage&#8221;</a>).
</p>
d1042 13
a1054 22
The <span><strong class="command">key</strong></span> statement can occur at the top level
of the configuration file or inside a <span><strong class="command">view</strong></span> 
statement.  Keys defined in top-level <span><strong class="command">key</strong></span>
statements can be used in all views.  Keys intended for use in
a <span><strong class="command">controls</strong></span> statement
(see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and Usage&#8221;</a>)
must be defined at the top level.
</p>
<p>The <em class="replaceable"><code>key_id</code></em>, also known as the
key name, is a domain name uniquely identifying the key. It can
be used in a <span><strong class="command">server</strong></span>
statement to cause requests sent to that
server to be signed with this key, or in address match lists to
verify that incoming requests have been signed with a key
matching this name, algorithm, and secret.</p>
<p>The <em class="replaceable"><code>algorithm_id</code></em> is a string
that specifies a security/authentication algorithm. The only
algorithm currently supported with TSIG authentication is
<code class="literal">hmac-md5</code>.  The
<em class="replaceable"><code>secret_string</code></em> is the secret to be
used by the algorithm, and is treated as a base-64 encoded
string.</p>
d1058 1
a1058 1
<a name="id2576870"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
d1062 1
a1062 1
         [ <span><strong class="command">versions</strong></span> ( <em class="replaceable"><code>number</code></em> | <code class="literal">unlimited</code> ) ]
d1074 1
a1074 1
     <em class="replaceable"><code>channel_name</code></em> ; [ <em class="replaceable"><code>channel_nam</code></em>e ; ... ]
d1082 16
a1097 9
<a name="id2577064"></a><span><strong class="command">logging</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">logging</strong></span> statement configures a wide
variety of logging options for the name server. Its <span><strong class="command">channel</strong></span> phrase
associates output methods, format options and severity levels with
a name that can then be used with the <span><strong class="command">category</strong></span> phrase
to select how various classes of messages are logged.</p>
<p>Only one <span><strong class="command">logging</strong></span> statement is used to define
as many channels and categories as are wanted. If there is no <span><strong class="command">logging</strong></span> statement,
the logging configuration will be:</p>
d1103 85
a1187 52
<p>In <acronym class="acronym">BIND</acronym> 9, the logging configuration is only established when
the entire configuration file has been parsed.  In <acronym class="acronym">BIND</acronym> 8, it was
established as soon as the <span><strong class="command">logging</strong></span> statement
was parsed. When the server is starting up, all logging messages
regarding syntax errors in the configuration file go to the default
channels, or to standard error if the "<code class="option">-g</code>" option
was specified.</p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2577116"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
<p>All log output goes to one or more <span class="emphasis"><em>channels</em></span>;
you can make as many of them as you want.</p>
<p>Every channel definition must include a destination clause that
says whether messages selected for the channel go to a file, to a
particular syslog facility, to the standard error stream, or are
discarded. It can optionally also limit the message severity level
that will be accepted by the channel (the default is
<span><strong class="command">info</strong></span>), and whether to include a
<span><strong class="command">named</strong></span>-generated time stamp, the category name
and/or severity level (the default is not to include any).</p>
<p>The <span><strong class="command">null</strong></span> destination clause 
causes all messages sent to the channel to be discarded;
in that case, other options for the channel are meaningless.</p>
<p>The <span><strong class="command">file</strong></span> destination clause directs the channel
to a disk file.  It can include limitations
both on how large the file is allowed to become, and how many versions
of the file will be saved each time the file is opened.</p>
<p>If you use the <span><strong class="command">versions</strong></span> log file option, then
<span><strong class="command">named</strong></span> will retain that many backup versions of the file by
renaming them when opening.  For example, if you choose to keep three old versions
of the file <code class="filename">lamers.log</code>, then just before it is opened
<code class="filename">lamers.log.1</code> is renamed to
<code class="filename">lamers.log.2</code>, <code class="filename">lamers.log.0</code> is renamed
to <code class="filename">lamers.log.1</code>, and <code class="filename">lamers.log</code> is
renamed to <code class="filename">lamers.log.0</code>.
You can say <span><strong class="command">versions unlimited</strong></span> to not limit
the number of versions.
If a <span><strong class="command">size</strong></span> option is associated with the log file,
then renaming is only done when the file being opened exceeds the
indicated size.  No backup versions are kept by default; any existing
log file is simply appended.</p>
<p>The <span><strong class="command">size</strong></span> option for files is used to limit log
growth. If the file ever exceeds the size, then <span><strong class="command">named</strong></span> will
stop writing to the file unless it has a <span><strong class="command">versions</strong></span> option
associated with it.  If backup versions are kept, the files are rolled as
described above and a new one begun.  If there is no
<span><strong class="command">versions</strong></span> option, no more data will be written to the log
until some out-of-band mechanism removes or truncates the log to less than the
maximum size.  The default behavior is not to limit the size of the
file.</p>
<p>Example usage of the <span><strong class="command">size</strong></span> and
<span><strong class="command">versions</strong></span> options:</p>
d1194 62
a1255 43
<p>The <span><strong class="command">syslog</strong></span> destination clause directs the
channel to the system log.  Its argument is a
syslog facility as described in the <span><strong class="command">syslog</strong></span> man
page. Known facilities are <span><strong class="command">kern</strong></span>, <span><strong class="command">user</strong></span>,
<span><strong class="command">mail</strong></span>, <span><strong class="command">daemon</strong></span>, <span><strong class="command">auth</strong></span>,
<span><strong class="command">syslog</strong></span>, <span><strong class="command">lpr</strong></span>, <span><strong class="command">news</strong></span>,
<span><strong class="command">uucp</strong></span>, <span><strong class="command">cron</strong></span>, <span><strong class="command">authpriv</strong></span>,
<span><strong class="command">ftp</strong></span>, <span><strong class="command">local0</strong></span>, <span><strong class="command">local1</strong></span>,
<span><strong class="command">local2</strong></span>, <span><strong class="command">local3</strong></span>, <span><strong class="command">local4</strong></span>,
<span><strong class="command">local5</strong></span>, <span><strong class="command">local6</strong></span> and
<span><strong class="command">local7</strong></span>, however not all facilities are supported on
all operating systems.
How <span><strong class="command">syslog</strong></span> will handle messages sent to
this facility is described in the <span><strong class="command">syslog.conf</strong></span> man
page. If you have a system which uses a very old version of <span><strong class="command">syslog</strong></span> that
only uses two arguments to the <span><strong class="command">openlog()</strong></span> function,
then this clause is silently ignored.</p>
<p>The <span><strong class="command">severity</strong></span> clause works like <span><strong class="command">syslog</strong></span>'s
"priorities", except that they can also be used if you are writing
straight to a file rather than using <span><strong class="command">syslog</strong></span>.
Messages which are not at least of the severity level given will
not be selected for the channel; messages of higher severity levels
will be accepted.</p>
<p>If you are using <span><strong class="command">syslog</strong></span>, then the <span><strong class="command">syslog.conf</strong></span> priorities
will also determine what eventually passes through. For example,
defining a channel facility and severity as <span><strong class="command">daemon</strong></span> and <span><strong class="command">debug</strong></span> but
only logging <span><strong class="command">daemon.warning</strong></span> via <span><strong class="command">syslog.conf</strong></span> will
cause messages of severity <span><strong class="command">info</strong></span> and <span><strong class="command">notice</strong></span> to
be dropped. If the situation were reversed, with <span><strong class="command">named</strong></span> writing
messages of only <span><strong class="command">warning</strong></span> or higher, then <span><strong class="command">syslogd</strong></span> would
print all messages it received from the channel.</p>
<p>The <span><strong class="command">stderr</strong></span> destination clause directs the
channel to the server's standard error stream.  This is intended for
use when the server is running as a foreground process, for example
when debugging a configuration.</p>
<p>The server can supply extensive debugging information when
it is in debugging mode. If the server's global debug level is greater
than zero, then debugging mode will be active. The global debug
level is set either by starting the <span><strong class="command">named</strong></span> server
with the <code class="option">-d</code> flag followed by a positive integer,
or by running <span><strong class="command">rndc trace</strong></span>.
The global debug level
can be set to zero, and debugging mode turned off, by running <span><strong class="command">rndc
d1257 3
a1259 2
level, and higher debug levels give more detailed output. Channels
that specify a specific debug severity, for example:</p>
d1265 34
a1298 19
<p>will get debugging output of level 3 or less any time the
server is in debugging mode, regardless of the global debugging
level. Channels with <span><strong class="command">dynamic</strong></span> severity use the
server's global debug level to determine what messages to print.</p>
<p>If <span><strong class="command">print-time</strong></span> has been turned on, then
the date and time will be logged. <span><strong class="command">print-time</strong></span> may
be specified for a <span><strong class="command">syslog</strong></span> channel, but is usually
pointless since <span><strong class="command">syslog</strong></span> also prints the date and
time. If <span><strong class="command">print-category</strong></span> is requested, then the
category of the message will be logged as well. Finally, if <span><strong class="command">print-severity</strong></span> is
on, then the severity level of the message will be logged. The <span><strong class="command">print-</strong></span> options may
be used in any combination, and will always be printed in the following
order: time, category, severity. Here is an example where all three <span><strong class="command">print-</strong></span> options
are on:</p>
<p><code class="computeroutput">28-Feb-2000 15:05:32.863 general: notice: running</code></p>
<p>There are four predefined channels that are used for
<span><strong class="command">named</strong></span>'s default logging as follows. How they are
used is described in <a href="Bv9ARM.ch06.html#the_category_phrase" title="The category Phrase">the section called &#8220;The <span><strong class="command">category</strong></span> Phrase&#8221;</a>.
</p>
d1328 24
a1351 14
<p>The <span><strong class="command">default_debug</strong></span> channel has the special
property that it only produces output when the server's debug level is
nonzero.  It normally writes to a file called <code class="filename">named.run</code>
in the server's working directory.</p>
<p>For security reasons, when the "<code class="option">-u</code>"
command line option is used, the <code class="filename">named.run</code> file
is created only after <span><strong class="command">named</strong></span> has changed to the
new UID, and any debug output generated while <span><strong class="command">named</strong></span> is
starting up and still running as root is discarded.  If you need
to capture this output, you must run the server with the "<code class="option">-g</code>"
option and redirect standard error to a file.</p>
<p>Once a channel is defined, it cannot be redefined. Thus you
cannot alter the built-in channels directly, but you can modify
the default logging by pointing categories at channels you have defined.</p>
d1356 9
a1364 6
<p>There are many categories, so you can send the logs you want
to see wherever you want, without seeing logs you don't want. If
you don't specify a list of channels for a category, then log messages
in that category will be sent to the <span><strong class="command">default</strong></span> category
instead. If you don't specify a default category, the following
"default default" is used:</p>
d1367 5
a1371 3
<p>As an example, let's say you want to log security events to
a file, but you also want keep the default logging behavior. You'd
specify the following:</p>
d1381 3
a1383 1
<p>To discard all messages in a category, specify the <span><strong class="command">null</strong></span> channel:</p>
d1387 5
a1391 3
<p>Following are the available categories and brief descriptions
of the types of log information they contain. More
categories may be added in future <acronym class="acronym">BIND</acronym> releases.</p>
d1399 11
a1409 4
<td><p><span><strong class="command">default</strong></span></p></td>
<td><p>The default category defines the logging
options for those categories where no specific configuration has been
defined.</p></td>
d1412 9
a1420 3
<td><p><span><strong class="command">general</strong></span></p></td>
<td><p>The catch-all. Many things still aren't
classified into categories, and they all end up here.</p></td>
d1423 10
a1432 3
<td><p><span><strong class="command">database</strong></span></p></td>
<td><p>Messages relating to the databases used
internally by the name server to store zone and cache data.</p></td>
d1435 8
a1442 2
<td><p><span><strong class="command">security</strong></span></p></td>
<td><p>Approval and denial of requests.</p></td>
d1445 8
a1452 2
<td><p><span><strong class="command">config</strong></span></p></td>
<td><p>Configuration file parsing and processing.</p></td>
d1455 10
a1464 3
<td><p><span><strong class="command">resolver</strong></span></p></td>
<td><p>DNS resolution, such as the recursive
lookups performed on behalf of clients by a caching name server.</p></td>
d1467 8
a1474 2
<td><p><span><strong class="command">xfer-in</strong></span></p></td>
<td><p>Zone transfers the server is receiving.</p></td>
d1477 8
a1484 2
<td><p><span><strong class="command">xfer-out</strong></span></p></td>
<td><p>Zone transfers the server is sending.</p></td>
d1487 8
a1494 2
<td><p><span><strong class="command">notify</strong></span></p></td>
<td><p>The NOTIFY protocol.</p></td>
d1497 8
a1504 2
<td><p><span><strong class="command">client</strong></span></p></td>
<td><p>Processing of client requests.</p></td>
d1507 13
a1519 6
<td><p><span><strong class="command">unmatched</strong></span></p></td>
<td><p>Messages that named was unable to determine the
class of or for which there was no matching <span><strong class="command">view</strong></span>.
A one line summary is also logged to the <span><strong class="command">client</strong></span> category.
This category is best sent to a file or stderr, by default it is sent to
the <span><strong class="command">null</strong></span> channel.</p></td>
d1522 8
a1529 2
<td><p><span><strong class="command">network</strong></span></p></td>
<td><p>Network operations.</p></td>
d1532 8
a1539 2
<td><p><span><strong class="command">update</strong></span></p></td>
<td><p>Dynamic updates.</p></td>
d1542 8
a1549 2
<td><p><span><strong class="command">update-security</strong></span></p></td>
<td><p>Approval and denial of update requests.</p></td>
a1551 1
<td><p><span><strong class="command">queries</strong></span></p></td>
d1553 27
a1579 16
<p>Specify where queries should be logged to.</p>
<p>
At startup, specifying the category <span><strong class="command">queries</strong></span> will also
enable query logging unless <span><strong class="command">querylog</strong></span> option has been
specified.
</p>
<p>
The query log entry reports the client's IP address and port number, and the
query name, class and type.  It also reports whether the Recursion Desired
flag was set (+ if set, - if not set), EDNS was in use (E) or if the
query was signed (S).</p>
<p><code class="computeroutput">client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</code>
</p>
<p><code class="computeroutput">client ::1#62537: query: www.example.net IN AAAA -SE</code>
</p>
</td>
d1582 9
a1590 4
<td><p><span><strong class="command">dispatch</strong></span></p></td>
<td><p>Dispatching of incoming packets to the
server modules where they are to be processed.
</p></td>
d1593 8
a1600 3
<td><p><span><strong class="command">dnssec</strong></span></p></td>
<td><p>DNSSEC and TSIG protocol processing.
</p></td>
d1603 11
a1613 5
<td><p><span><strong class="command">lame-servers</strong></span></p></td>
<td><p>Lame servers.  These are misconfigurations
in remote servers, discovered by BIND 9 when trying to query
those servers during resolution.
</p></td>
d1616 12
a1627 5
<td><p><span><strong class="command">delegation-only</strong></span></p></td>
<td><p>Delegation only.  Logs queries that have have
been forced to NXDOMAIN as the result of a delegation-only zone or
a <span><strong class="command">delegation-only</strong></span> in a hint or stub zone declaration.
</p></td>
d1635 5
a1639 3
<a name="id2578270"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
<p> This is the grammar of the <span><strong class="command">lwres</strong></span>
statement in the <code class="filename">named.conf</code> file:</p>
d1650 48
a1697 25
<a name="id2578343"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">lwres</strong></span> statement configures the name
server to also act as a lightweight resolver server. (See
<a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.)  There may be be multiple
<span><strong class="command">lwres</strong></span> statements configuring
lightweight resolver servers with different properties.</p>
<p>The <span><strong class="command">listen-on</strong></span> statement specifies a list of
addresses (and ports) that this instance of a lightweight resolver daemon
should accept requests on.  If no port is specified, port 921 is used.
If this statement is omitted, requests will be accepted on 127.0.0.1,
port 921.</p>
<p>The <span><strong class="command">view</strong></span> statement binds this instance of a
lightweight resolver daemon to a view in the DNS namespace, so that the
response will be constructed in the same manner as a normal DNS query
matching this view.  If this statement is omitted, the default view is
used, and if there is no default view, an error is triggered.</p>
<p>The <span><strong class="command">search</strong></span> statement is equivalent to the
<span><strong class="command">search</strong></span> statement in
<code class="filename">/etc/resolv.conf</code>.  It provides a list of domains
which are appended to relative names in queries.</p>
<p>The <span><strong class="command">ndots</strong></span> statement is equivalent to the
<span><strong class="command">ndots</strong></span> statement in
<code class="filename">/etc/resolv.conf</code>.  It indicates the minimum
number of dots in a relative domain name that should result in an
exact match lookup before search path elements are appended.</p>
d1701 1
a1701 1
<a name="id2578406"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
d1703 1
a1703 1
<span><strong class="command">masters</strong></span> <em class="replaceable"><code>name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; 
d1708 6
a1713 3
<a name="id2578518"></a><span><strong class="command">masters</strong></span> Statement Definition and Usage </h3></div></div></div>
<p><span><strong class="command">masters</strong></span> lists allow for a common set of masters
to be easily used by multiple stub and slave zones.</p>
d1717 5
a1721 3
<a name="id2578533"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
<p>This is the grammar of the <span><strong class="command">options</strong></span>
statement in the <code class="filename">named.conf</code> file:</p>
d1735 1
d1749 1
a1749 1
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em>; </span>]
d1755 1
d1758 1
d1761 12
a1772 2
    [<span class="optional"> dual-stack-servers [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>domain_name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ) ; ... }; </span>]
    [<span class="optional"> check-names ( <em class="replaceable"><code>master</code></em> | <em class="replaceable"><code>slave</code></em> | <em class="replaceable"><code>response</code></em> )( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
d1775 1
d1778 1
d1780 1
d1787 8
a1794 2
    [<span class="optional"> query-source [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
    [<span class="optional"> query-source-v6 [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
d1813 1
d1851 1
d1855 12
d1872 11
a1882 6
<a name="options"></a><span><strong class="command">options</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">options</strong></span> statement sets up global options
to be used by <acronym class="acronym">BIND</acronym>. This statement may appear only
once in a configuration file. If there is no <span><strong class="command">options</strong></span>
statement, an options block with each option set to its default will
be used.</p>
d1885 14
a1898 7
<dd><p>The working directory of the server.
Any non-absolute pathnames in the configuration file will be taken
as relative to this directory. The default location for most server
output files (e.g. <code class="filename">named.run</code>) is this directory.
If a directory is not specified, the working directory defaults
to `<code class="filename">.</code>', the directory from which the server
was started. The directory specified should be an absolute path.</p></dd>
d1900 8
a1907 4
<dd><p>When performing dynamic update of secure zones, the
directory where the public and private key files should be found,
if different than the current working directory.  The directory specified
must be an absolute path.</p></dd>
d1909 7
a1915 5
<dd><p><span class="emphasis"><em>This option is obsolete.</em></span>
It was used in <acronym class="acronym">BIND</acronym> 8 to
specify the pathname to the <span><strong class="command">named-xfer</strong></span> program.
In <acronym class="acronym">BIND</acronym> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
needed; its functionality is built into the name server.</p></dd>
d1917 11
a1927 7
<dd><p>The domain appended to the names of all
shared keys generated with <span><strong class="command">TKEY</strong></span>. When a client
requests a <span><strong class="command">TKEY</strong></span> exchange, it may or may not specify
the desired name for the key. If present, the name of the shared
key will be "<code class="varname">client specified part</code>" + 
"<code class="varname">tkey-domain</code>".
Otherwise, the name of the shared key will be "<code class="varname">random hex
d1929 4
a1932 2
the <span><strong class="command">domainname</strong></span> should be the server's domain
name.</p></dd>
d1934 10
a1943 5
<dd><p>The Diffie-Hellman key used by the server
to generate shared keys with clients using the Diffie-Hellman mode
of <span><strong class="command">TKEY</strong></span>. The server must be able to load the
public and private keys from files in the working directory. In
most cases, the keyname should be the server's host name.</p></dd>
d1946 1
a1946 1
		This is for testing only.  Do not use.
d1949 6
a1954 4
<dd><p>The pathname of the file the server dumps
the database to when instructed to do so with
<span><strong class="command">rndc dumpdb</strong></span>.
If not specified, the default is <code class="filename">named_dump.db</code>.</p></dd>
d1956 14
a1969 3
<dd><p>The pathname of the file the server writes memory
usage statistics to on exit. If not specified,
the default is <code class="filename">named.memstats</code>.</p></dd>
d1971 19
a1989 8
<dd><p>The pathname of the file the server writes its process ID
in. If not specified, the default is <code class="filename">/var/run/named.pid</code>.
The pid-file is used by programs that want to send signals to the running
name server. Specifying <span><strong class="command">pid-file none</strong></span> disables the
use of a PID file &#8212; no file will be written and any
existing one will be removed.  Note that <span><strong class="command">none</strong></span>
is a keyword, not a file name, and therefore is not enclosed in
double quotes.</p></dd>
d1991 8
a1998 5
<dd><p>The pathname of the file the server appends statistics
to when instructed to do so using <span><strong class="command">rndc stats</strong></span>.
If not specified, the default is <code class="filename">named.stats</code> in the
server's current directory.  The format of the file is described
in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.</p></dd>
d2001 8
a2008 6
The UDP/TCP port number the server uses for 
receiving and sending DNS protocol traffic.
The default is 53.  This option is mainly intended for server testing;
a server using a port other than 53 will not be able to communicate with
the global DNS.
</p></dd>
d2011 17
a2027 10
The source of entropy to be used by the server.  Entropy is primarily needed
for DNSSEC operations, such as TKEY transactions and dynamic update of signed
zones.  This options specifies the device (or file) from which to read
entropy.  If this is a file, operations requiring entropy will fail when the
file has been exhausted.  If not specified, the default value is
<code class="filename">/dev/random</code>
(or equivalent) when present, and none otherwise.  The
<span><strong class="command">random-device</strong></span> option takes effect during
the initial configuration load at server startup time and
is ignored on subsequent reloads.</p></dd>
d2030 5
a2034 4
If specified, the listed type (A or AAAA) will be emitted before other glue
in the additional section of a query response.
The default is not to prefer any type (NONE).
</p></dd>
d2038 4
a2041 3
Turn on enforcement of delegation-only in TLDs (top level domains)
and root zones with an optional exclude list.
</p>
d2043 3
a2045 2
Note some TLDs are not delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
</p>
d2048 1
a2048 1
	root-delegation-only exclude { "de"; "lv"; "us"; "museum"; };
d2054 6
a2059 4
Disable the specified DNSSEC algorithms at and below the specified name.
Multiple <span><strong class="command">disable-algorithms</strong></span> statements are allowed.
Only the most specific will be applied.
</p></dd>
d2062 16
a2077 9
When set, <span><strong class="command">dnssec-lookaside</strong></span> provides the
validator with an alternate method to validate DNSKEY records at the
top of a zone.  When a DNSKEY is at or below a domain specified by the
deepest <span><strong class="command">dnssec-lookaside</strong></span>, and the normal dnssec validation
has left the key untrusted, the trust-anchor will be append to the key
name and a DLV record will be looked up to see if it can validate the
key.  If the DLV record validates a DNSKEY (similarly to the way a DS
record does) the DNSKEY RRset is deemed to be trusted.
</p></dd>
d2080 12
a2091 8
Specify heirarchies which must be or may not be secure (signed and validated).
If <strong class="userinput"><code>yes</code></strong>, then named will only accept answers if they
are secure.
If <strong class="userinput"><code>no</code></strong>, then normal dnssec validation applies
allowing for insecure answers to be accepted.
The specified domain must be under a <span><strong class="command">trusted-key</strong></span> or
<span><strong class="command">dnssec-lookaside</strong></span> must be active.
</p></dd>
d2098 10
a2107 5
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then the <span><strong class="command">AA</strong></span> bit
is always set on NXDOMAIN responses, even if the server is not actually
authoritative. The default is <strong class="userinput"><code>no</code></strong>; this is
a change from <acronym class="acronym">BIND</acronym> 8. If you are using very old DNS software, you
may need to set it to <strong class="userinput"><code>yes</code></strong>.</p></dd>
d2109 6
a2114 3
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to enable checking
for memory leaks on exit. <acronym class="acronym">BIND</acronym> 9 ignores the option and always performs
the checks.</p></dd>
d2117 59
a2175 32
<p>If <strong class="userinput"><code>yes</code></strong>, then the
server treats all zones as if they are doing zone transfers across
a dial-on-demand dialup link, which can be brought up by traffic
originating from this server. This has different effects according
to zone type and concentrates the zone maintenance so that it all
happens in a short interval, once every <span><strong class="command">heartbeat-interval</strong></span> and
hopefully during the one call. It also suppresses some of the normal
zone maintenance traffic. The default is <strong class="userinput"><code>no</code></strong>.</p>
<p>The <span><strong class="command">dialup</strong></span> option
may also be specified in the <span><strong class="command">view</strong></span> and 
<span><strong class="command">zone</strong></span> statements,
in which case it overrides the global <span><strong class="command">dialup</strong></span>
option.</p>
<p>If the zone is a master zone, then the server will send out a NOTIFY 
request to all the slaves (default). This should trigger the zone serial
number check in the slave (providing it supports NOTIFY) allowing the slave
to verify the zone while the connection is active.
The set of servers to which NOTIFY is sent can be controlled by
<span><strong class="command">notify</strong></span> and <span><strong class="command">also-notify</strong></span>.</p>
<p>If the
zone is a slave or stub zone, then the server will suppress the regular
"zone up to date" (refresh) queries and only perform them when the
<span><strong class="command">heartbeat-interval</strong></span> expires in addition to sending
NOTIFY requests.</p>
<p>Finer control can be achieved by using
<strong class="userinput"><code>notify</code></strong> which only sends NOTIFY messages,
<strong class="userinput"><code>notify-passive</code></strong> which sends NOTIFY messages and
suppresses the normal refresh queries, <strong class="userinput"><code>refresh</code></strong>
which suppresses normal refresh processing and sends refresh queries 
when the <span><strong class="command">heartbeat-interval</strong></span> expires, and
<strong class="userinput"><code>passive</code></strong> which just disables normal refresh
processing.</p>
d2185 20
a2204 4
<td><p>dialup mode</p></td>
<td><p>normal refresh</p></td>
<td><p>heart-beat refresh</p></td>
<td><p>heart-beat notify</p></td>
d2207 18
a2224 4
<td><p><span><strong class="command">no</strong></span> (default)</p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
<td><p>no</p></td>
d2227 18
a2244 4
<td><p><span><strong class="command">yes</strong></span></p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
<td><p>yes</p></td>
d2247 18
a2264 4
<td><p><span><strong class="command">notify</strong></span></p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
d2267 18
a2284 4
<td><p><span><strong class="command">refresh</strong></span></p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
d2287 18
a2304 4
<td><p><span><strong class="command">passive</strong></span></p></td>
<td><p>no</p></td>
<td><p>no</p></td>
<td><p>no</p></td>
d2307 18
a2324 4
<td><p><span><strong class="command">notify-passive</strong></span></p></td>
<td><p>no</p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
d2328 4
a2331 2
<p>Note that normal NOTIFY processing is not affected by
<span><strong class="command">dialup</strong></span>.</p>
d2334 6
a2339 4
<dd><p>In <acronym class="acronym">BIND</acronym> 8, this option
enabled simulating the obsolete DNS query type
IQUERY. <acronym class="acronym">BIND</acronym> 9 never does IQUERY simulation.
</p></dd>
d2341 10
a2350 6
<dd><p>This option is obsolete.
In BIND 8, <strong class="userinput"><code>fetch-glue yes</code></strong>
caused the server to attempt to fetch glue resource records it
didn't have when constructing the additional
data section of a response.  This is now considered a bad idea
and BIND 9 never does it.</p></dd>
d2352 6
a2357 4
<dd><p>When the nameserver exits due receiving SIGTERM,
flush or do not flush any pending zone writes.  The default is
<span><strong class="command">flush-zones-on-shutdown</strong></span> <strong class="userinput"><code>no</code></strong>.
</p></dd>
d2359 9
a2367 8
<dd><p>This option was incorrectly implemented
in <acronym class="acronym">BIND</acronym> 8, and is ignored by <acronym class="acronym">BIND</acronym> 9.
To achieve the intended effect
of
<span><strong class="command">has-old-clients</strong></span> <strong class="userinput"><code>yes</code></strong>, specify
the two separate options <span><strong class="command">auth-nxdomain</strong></span> <strong class="userinput"><code>yes</code></strong>
and <span><strong class="command">rfc2308-type1</strong></span> <strong class="userinput"><code>no</code></strong> instead.
</p></dd>
d2369 6
a2374 4
<dd><p>In BIND 8, this enables keeping of
statistics for every host that the name server interacts with.
Not implemented in BIND 9.
</p></dd>
d2376 9
a2384 6
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
 It was used in <acronym class="acronym">BIND</acronym> 8 to determine whether a transaction log was
kept for Incremental Zone Transfer. <acronym class="acronym">BIND</acronym> 9 maintains a transaction
log whenever possible.  If you need to disable outgoing incremental zone
transfers, use <span><strong class="command">provide-ixfr</strong></span> <strong class="userinput"><code>no</code></strong>.
</p></dd>
d2386 8
a2393 6
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then when generating
responses the server will only add records to the authority and
additional data sections when they are required (e.g. delegations,
negative responses).  This may improve the performance of the server.
The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
d2395 7
a2401 5
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to allow
a domain name to have multiple CNAME records in violation of the
DNS standards.  <acronym class="acronym">BIND</acronym> 9.2 always strictly
enforces the CNAME rules both in master files and dynamic updates.
</p></dd>
a2403 7
<p>If <strong class="userinput"><code>yes</code></strong> (the default),
DNS NOTIFY messages are sent when a zone the server is authoritative for
changes, see <a href="Bv9ARM.ch04.html#notify" title="Notify">the section called &#8220;Notify&#8221;</a>.  The messages are sent to the
servers listed in the zone's NS records (except the master server identified
in the SOA MNAME field), and to any servers listed in the
<span><strong class="command">also-notify</strong></span> option.
</p>
d2405 19
a2423 4
If <strong class="userinput"><code>explicit</code></strong>, notifies are sent only to
servers explicitly listed using <span><strong class="command">also-notify</strong></span>.
If <strong class="userinput"><code>no</code></strong>, no notifies are sent.
</p>
d2425 8
a2432 5
The <span><strong class="command">notify</strong></span> option may also be
specified in the <span><strong class="command">zone</strong></span> statement,
in which case it overrides the <span><strong class="command">options notify</strong></span> statement.
It would only be necessary to turn off this option if it caused slaves
to crash.</p>
d2435 18
a2452 12
<dd><p>If <strong class="userinput"><code>yes</code></strong>, and a
DNS query requests recursion, then the server will attempt to do
all the work required to answer the query. If recursion is off
and the server does not already know the answer, it will return a
referral response. The default is <strong class="userinput"><code>yes</code></strong>.
Note that setting <span><strong class="command">recursion no</strong></span> does not prevent
clients from getting data from the server's cache; it only
prevents new data from being cached as an effect of client queries.
Caching may still occur as an effect the server's internal
operation, such as NOTIFY address lookups.
See also <span><strong class="command">fetch-glue</strong></span> above.
</p></dd>
d2455 6
a2460 3
<p>Setting this to <strong class="userinput"><code>yes</code></strong> will
cause the server to send NS records along with the SOA record for negative
answers. The default is <strong class="userinput"><code>no</code></strong>.</p>
d2463 4
a2466 1
<p>Not yet implemented in <acronym class="acronym">BIND</acronym> 9.</p>
d2470 5
a2474 3
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
<acronym class="acronym">BIND</acronym> 9 always allocates query IDs from a pool.
</p></dd>
d2476 12
a2487 7
<dd><p>If <strong class="userinput"><code>yes</code></strong>, the server will collect
statistical data on all zones (unless specifically turned off
on a per-zone basis by specifying <span><strong class="command">zone-statistics no</strong></span>
in the <span><strong class="command">zone</strong></span> statement).  These statistics may be accessed
using <span><strong class="command">rndc stats</strong></span>, which will dump them to the file listed
in the <span><strong class="command">statistics-file</strong></span>.  See also <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
</p></dd>
d2489 11
a2499 6
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
If you need to disable IXFR to a particular server or servers see
the information on the <span><strong class="command">provide-ixfr</strong></span> option
in <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>. See also
<a href="Bv9ARM.ch04.html#incremental_zone_transfers" title="Incremental Zone Transfers (IXFR)">the section called &#8220;Incremental Zone Transfers (IXFR)&#8221;</a>.
</p></dd>
d2502 6
a2507 4
See the description of
<span><strong class="command">provide-ixfr</strong></span> in
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>.
</p></dd>
d2510 6
a2515 4
See the description of
<span><strong class="command">request-ixfr</strong></span> in
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>.
</p></dd>
d2517 12
a2528 7
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to make
the server treat carriage return ("<span><strong class="command">\r</strong></span>") characters the same way
as a space or tab character,
to facilitate loading of zone files on a UNIX system that were generated
on an NT or DOS machine. In <acronym class="acronym">BIND</acronym> 9, both UNIX "<span><strong class="command">\n</strong></span>"
and NT/DOS "<span><strong class="command">\r\n</strong></span>" newlines are always accepted,
and the option is ignored.</p></dd>
d2534 6
a2539 4
These options control the behavior of an authoritative server when
answering queries which have additional data, or when following CNAME
and DNAME chains.
</p>
d2541 19
a2559 13
When both of these options are set to <strong class="userinput"><code>yes</code></strong> 
(the default) and a
query is being answered from authoritative data (a zone
configured into the server), the additional data section of the
reply will be filled in using data from other authoritative zones
and from the cache.  In some situations this is undesirable, such
as when there is concern over the correctness of the cache, or
in servers where slave zones may be added and modified by
untrusted third parties.  Also, avoiding
the search for this additional data will speed up server operations
at the possible expense of additional queries to resolve what would
otherwise be provided in the additional section.
</p>
d2561 9
a2569 7
For example, if a query asks for an MX record for host <code class="literal">foo.example.com</code>,
and the record found is "<code class="literal">MX 10 mail.example.net</code>", normally the address
records (A and AAAA) for <code class="literal">mail.example.net</code> will be provided as well,
if known, even though they are not in the example.com zone.
Setting these options to <span><strong class="command">no</strong></span> disables this behavior and makes
the server only search for additional data in the zone it answers from.
</p>
d2571 8
a2578 6
These options are intended for use in authoritative-only 
servers, or in authoritative-only views.  Attempts to set
them to <span><strong class="command">no</strong></span> without also specifying
<span><strong class="command">recursion no</strong></span> will cause the server to
ignore the options and log a warning message.
</p>
d2580 9
a2588 6
Specifying <span><strong class="command">additional-from-cache no</strong></span> actually
disables the use of the cache not only for additional data lookups
but also when looking up the answer.  This is usually the desired
behavior in an authoritative-only server where the correctness of
the cached data is an issue.
</p>
d2590 17
a2606 10
When a name server is non-recursively queried for a name that is not
below the apex of any served zone, it normally answers with an
"upwards referral" to the root servers or the servers of some other
known parent of the query name.  Since the data in an upwards referral
comes from the cache, the server will not be able to provide upwards
referrals when <span><strong class="command">additional-from-cache no</strong></span>
has been specified.  Instead, it will respond to such queries
with REFUSED.  This should not cause any problems since
upwards referrals are not required for the resolution process.
</p>
d2609 12
a2620 10
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then an
IPv4-mapped IPv6 address will match any address match
list entries that match the corresponding IPv4 address.
Enabling this option is sometimes useful on IPv6-enabled Linux
systems, to work around a kernel quirk that causes IPv4
TCP connections such as zone transfers to be accepted
on an IPv6 socket using mapped addresses, causing
address match lists designed for IPv4 to fail to match.
The use of this option for any other purpose is discouraged.
</p></dd>
d2624 8
a2631 8
When  <strong class="userinput"><code>yes</code></strong> and the server loads a new version of a master
zone from its zone file or receives a new version of a slave
file by a non-incremental zone transfer, it will compare
the new version to the previous one and calculate a set
of differences.  The differences are then logged in the
zone's journal file such that the changes can be transmitted
to downstream slaves as an incremental zone transfer.
</p>
d2633 19
a2651 10
By allowing incremental zone transfers to be used for
non-dynamic zones, this option saves bandwidth at the
expense of increased CPU and memory consumption at the master.
In particular, if the new version of a zone is completely
different from the previous one, the set of differences
will be of a size comparable to the combined size of the
old and new zone version, and the server will need to
temporarily allocate memory to hold this complete
difference set.
</p>
d2655 8
a2662 5
This should be set when you have multiple masters for a zone and the
addresses refer to different machines.  If <strong class="userinput"><code>yes</code></strong>, named will not log
when the serial number on the master is less than what named currently
has.  The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
d2665 17
a2681 4
Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>,
named behaves as if it does not support DNSSEC.
The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
d2684 6
a2689 4
Specify whether query logging should be started when named starts.
If <span><strong class="command">querylog</strong></span> is not specified, then the query logging
is determined by the presence of the logging category <span><strong class="command">queries</strong></span>.
</p></dd>
d2693 24
a2716 17
This option is used to restrict the character set and syntax of
certain domain names in master files and/or DNS responses received
from the network.  The default varies according to usage area.  For
<span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.
For <span><strong class="command">slave</strong></span> zones the default is <span><strong class="command">warn</strong></span>.
For answers received from the network (<span><strong class="command">response</strong></span>)
the default is <span><strong class="command">ignore</strong></span>.
</p>
<p>The rules for legal hostnames and mail domains are derived from RFC 952
and RFC 821 as modified by RFC 1123.
</p>
<p><span><strong class="command">check-names</strong></span> applies to the owner names of A, AAA and
MX records.  It also applies to the domain names in the RDATA of NS, SOA and MX
records.  It also applies to the RDATA of PTR records where the owner name
indicated that it is a reverse lookup of a hostname (the owner name ends in
IN-ADDR.ARPA, IP6.ARPA, IP6.INT).
</p>
d2718 70
d2792 11
a2802 8
<a name="id2581312"></a>Forwarding</h4></div></div></div>
<p>The forwarding facility can be used to create a large site-wide
cache on a few servers, reducing traffic over links to external
name servers. It can also be used to allow queries by servers that
do not have direct access to the Internet, but wish to look up exterior
names anyway. Forwarding occurs only on those queries for which
the server is not authoritative and does not have the answer in
its cache.</p>
d2805 11
a2815 7
<dd><p>This option is only meaningful if the
forwarders list is not empty. A value of <code class="varname">first</code>,
the default, causes the server to query the forwarders first &#8212; and
if that doesn't answer the question, the server will then look for
the answer itself. If <code class="varname">only</code> is specified, the
server will only query the forwarders.
</p></dd>
d2817 5
a2821 3
<dd><p>Specifies the IP addresses to be used
for forwarding. The default is the empty list (no forwarding).
</p></dd>
d2823 10
a2832 7
<p>Forwarding can also be configured on a per-domain basis, allowing
for the global forwarding options to be overridden in a variety
of ways. You can set particular domains to use different forwarders,
or have a different <span><strong class="command">forward only/first</strong></span> behavior,
or not forward at all, see <a href="Bv9ARM.ch06.html#zone_statement_grammar" title="zone
Statement Grammar">the section called &#8220;<span><strong class="command">zone</strong></span>
Statement Grammar&#8221;</a>.</p>
d2836 8
a2843 4
<a name="id2581362"></a>Dual-stack Servers</h4></div></div></div>
<p>Dual-stack servers are used as servers of last resort to work around
problems in reachability due the lack of support for either IPv4 or IPv6
on the host machine.</p>
d2846 10
a2855 6
<dd><p>Specifies host names or addresses of machines with access to
both IPv4 and IPv6 transports. If a hostname is used, the server must be able
to resolve the name using only the transport it has.  If the machine is dual
stacked, then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
access to a transport has been disabled on the command line
(e.g. <span><strong class="command">named -4</strong></span>).</p></dd>
d2861 5
a2865 3
<p>Access to the server can be restricted based on the IP address
of the requesting system. See <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a> for
details on how to specify IP address lists.</p>
d2868 14
a2881 8
<dd><p>Specifies which hosts are allowed to
notify this server, a slave, of zone changes in addition
to the zone masters.
<span><strong class="command">allow-notify</strong></span> may also be specified in the
<span><strong class="command">zone</strong></span> statement, in which case it overrides the
<span><strong class="command">options allow-notify</strong></span> statement.  It is only meaningful
for a slave zone.  If not specified, the default is to process notify messages
only from a zone's master.</p></dd>
d2883 28
a2910 5
<dd><p>Specifies which hosts are allowed to
ask ordinary DNS questions. <span><strong class="command">allow-query</strong></span> may also
be specified in the <span><strong class="command">zone</strong></span> statement, in which
case it overrides the <span><strong class="command">options allow-query</strong></span> statement. If
not specified, the default is to allow queries from all hosts.</p></dd>
d2912 19
a2930 6
<dd><p>Specifies which hosts are allowed to
make recursive queries through this server. If not specified, the
default is to allow recursive queries from all hosts. 
Note that disallowing recursive queries for a host does not prevent the
host from retrieving data that is already in the server's cache.
</p></dd>
d2933 25
a2957 14
<p>Specifies which hosts are allowed to
submit Dynamic DNS updates to slave zones to be forwarded to the
master.  The default is <strong class="userinput"><code>{ none; }</code></strong>, which 
means that no update forwarding will be performed.  To enable
update forwarding, specify
<strong class="userinput"><code>allow-update-forwarding { any; };</code></strong>.
Specifying values other than <strong class="userinput"><code>{ none; }</code></strong> or
<strong class="userinput"><code>{ any; }</code></strong> is usually counterproductive, since
the responsibility for update access control should rest with the 
master server, not the slaves.</p>
<p>Note that enabling the update forwarding feature on a slave server
may expose master servers relying on insecure IP address based
access control to attacks; see <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a>
for more details.</p>
d2960 9
a2968 6
<dd><p>This option was introduced for the smooth transition from AAAA
to A6 and from "nibble labels" to binary labels.
However, since both A6 and binary labels were then deprecated,
this option was also deprecated.
It is now ignored with some warning messages.
</p></dd>
d2970 9
a2978 5
<dd><p>Specifies which hosts are allowed to
receive zone transfers from the server. <span><strong class="command">allow-transfer</strong></span> may
also be specified in the <span><strong class="command">zone</strong></span> statement, in which
case it overrides the <span><strong class="command">options allow-transfer</strong></span> statement.
If not specified, the default is to allow transfers to all hosts.</p></dd>
d2980 7
a2986 3
<dd><p>Specifies a list of addresses that the
server will not accept queries from or use to resolve a query. Queries
from these addresses will not be responded to. The default is <strong class="userinput"><code>none</code></strong>.</p></dd>
d2991 13
a3003 8
<a name="id2581677"></a>Interfaces</h4></div></div></div>
<p>The interfaces and ports that the server will answer queries
from may be specified using the <span><strong class="command">listen-on</strong></span> option. <span><strong class="command">listen-on</strong></span> takes
an optional port, and an <code class="varname">address_match_list</code>.
The server will listen on all interfaces allowed by the address
match list. If a port is not specified, port 53 will be used.</p>
<p>Multiple <span><strong class="command">listen-on</strong></span> statements are allowed.
For example,</p>
d3007 17
a3023 9
<p>will enable the name server on port 53 for the IP address
5.6.7.8, and on port 1234 of an address on the machine in net
1.2 that is not 1.2.3.4.</p>
<p>If no <span><strong class="command">listen-on</strong></span> is specified, the
server will listen on port 53 on all interfaces.</p>
<p>The <span><strong class="command">listen-on-v6</strong></span> option is used to
specify the interfaces and the ports on which the server will listen
for incoming queries sent using IPv6.</p>
<p>When </p>
d3025 24
a3048 14
<p> is specified
as the <code class="varname">address_match_list</code> for the
<span><strong class="command">listen-on-v6</strong></span> option,
the server does not bind a separate socket to each IPv6 interface
address as it does for IPv4 if the operating system has enough API
support for IPv6 (specifically if it conforms to RFC 3493 and RFC 3542).
Instead, it listens on the IPv6 wildcard address.
If the system only has incomplete API support for IPv6, however,
the behavior is the same as that for IPv4.</p>
<p>A list of particular IPv6 addresses can also be specified, in which case
the server listens on a separate socket for each specified address,
regardless of whether the desired API is supported by the system.</p>
<p>Multiple <span><strong class="command">listen-on-v6</strong></span> options can be used.
For example,</p>
d3052 9
a3060 5
<p>will enable the name server on port 53 for any IPv6 addresses
(with a single wildcard socket),
and on port 1234 of IPv6 addresses that is not in the prefix
2001:db8::/32 (with separate sockets for each matched address.)</p>
<p>To make the server not listen on any IPv6 address, use</p>
d3063 5
a3067 2
<p>If no <span><strong class="command">listen-on-v6</strong></span> option is specified,
the server will not listen on any IPv6 address.</p>
d3071 15
a3085 11
<a name="id2581834"></a>Query Address</h4></div></div></div>
<p>If the server doesn't know the answer to a question, it will
query other name servers. <span><strong class="command">query-source</strong></span> specifies
the address and port used for such queries. For queries sent over
IPv6, there is a separate <span><strong class="command">query-source-v6</strong></span> option.
If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> (asterisk) or is omitted,
a wildcard IP address (<span><strong class="command">INADDR_ANY</strong></span>) will be used.
If <span><strong class="command">port</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
a random unprivileged port will be used. The <span><strong class="command">avoid-v4-udp-ports</strong></span>
and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used to prevent named
from selecting certain ports. The defaults are:</p>
d3091 7
a3097 4
<p>The address specified in the <span><strong class="command">query-source</strong></span> option
is used for both UDP and TCP queries, but the port applies only to 
UDP queries.  TCP queries always use a random
unprivileged port.</p>
d3101 4
a3104 2
<p>See also <span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">notify-source</strong></span>.</p>
d3109 3
a3111 3
	    Solaris 2.5.1 and earlier does not support setting the source
	    address for TCP sockets.
	  </p>
d3117 6
a3122 3
<p><acronym class="acronym">BIND</acronym> has mechanisms in place to facilitate zone transfers
and set limits on the amount of load that transfers place on the
system. The following options apply to zone transfers.</p>
d3125 19
a3143 10
<dd><p>Defines a global list of IP addresses of name servers
that are also sent NOTIFY messages whenever a fresh copy of the
zone is loaded, in addition to the servers listed in the zone's NS records.
This helps to ensure that copies of the zones will
quickly converge on stealth servers. If an <span><strong class="command">also-notify</strong></span> list
is given in a <span><strong class="command">zone</strong></span> statement, it will override
the <span><strong class="command">options also-notify</strong></span> statement. When a <span><strong class="command">zone notify</strong></span> statement
is set to <span><strong class="command">no</strong></span>, the IP addresses in the global <span><strong class="command">also-notify</strong></span> list will
not be sent NOTIFY messages for that zone. The default is the empty
list (no global notification list).</p></dd>
d3145 6
a3150 3
<dd><p>Inbound zone transfers running longer than
this many minutes will be terminated. The default is 120 minutes
(2 hours).  The maximum value is 28 days (40320 minutes).</p></dd>
d3152 6
a3157 3
<dd><p>Inbound zone transfers making no progress
in this many minutes will be terminated. The default is 60 minutes
(1 hour).  The maximum value is 28 days (40320 minutes).</p></dd>
d3159 6
a3164 3
<dd><p>Outbound zone transfers running longer than
this many minutes will be terminated. The default is 120 minutes
(2 hours).  The maximum value is 28 days (40320 minutes).</p></dd>
d3166 6
a3171 3
<dd><p>Outbound zone transfers making no progress
in this many minutes will be terminated.  The default is 60 minutes (1
hour).  The maximum value is 28 days (40320 minutes).</p></dd>
d3173 13
a3185 8
<dd><p>Slave servers will periodically query master servers
to find out if zone serial numbers have changed. Each such query uses
a minute amount of the slave server's network bandwidth.  To limit the
amount of bandwidth used, BIND 9 limits the rate at which queries are
sent.  The value of the <span><strong class="command">serial-query-rate</strong></span> option,
an integer, is the maximum number of queries sent per second.
The default is 20.
</p></dd>
d3187 10
a3196 8
<dd><p>In BIND 8, the <span><strong class="command">serial-queries</strong></span> option
set the maximum number of concurrent serial number queries
allowed to be outstanding at any given time.
BIND 9 does not limit the number of outstanding
serial queries and ignores the <span><strong class="command">serial-queries</strong></span> option.
Instead, it limits the rate at which the queries are sent
as defined using the <span><strong class="command">serial-query-rate</strong></span> option.
</p></dd>
d3199 20
a3218 16
Zone transfers can be sent using two different formats,
<span><strong class="command">one-answer</strong></span> and <span><strong class="command">many-answers</strong></span>.
The <span><strong class="command">transfer-format</strong></span> option is used
on the master server to determine which format it sends.
<span><strong class="command">one-answer</strong></span> uses one DNS message per
resource record transferred.
<span><strong class="command">many-answers</strong></span> packs as many resource records as
possible into a message. <span><strong class="command">many-answers</strong></span> is more
efficient, but is only supported by relatively new slave servers,
such as <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym> 8.x and patched
versions of <acronym class="acronym">BIND</acronym> 4.9.5. The <span><strong class="command">many-answers</strong></span>
format is also supported by recent Microsoft Windows nameservers. The default is
<span><strong class="command">many-answers</strong></span>. <span><strong class="command">transfer-format</strong></span>
may be overridden on a per-server basis by using the
<span><strong class="command">server</strong></span> statement.
</p></dd>
d3220 8
a3227 4
<dd><p>The maximum number of inbound zone transfers
that can be running concurrently. The default value is <code class="literal">10</code>.
Increasing <span><strong class="command">transfers-in</strong></span> may speed up the convergence
of slave zones, but it also may increase the load on the local system.</p></dd>
d3229 6
a3234 3
<dd><p>The maximum number of outbound zone transfers
that can be running concurrently. Zone transfer requests in excess
of the limit will be refused. The default value is <code class="literal">10</code>.</p></dd>
d3236 13
a3248 7
<dd><p>The maximum number of inbound zone transfers
that can be concurrently transferring from a given remote name server.
The default value is <code class="literal">2</code>. Increasing <span><strong class="command">transfers-per-ns</strong></span> may
speed up the convergence of slave zones, but it also may increase
the load on the remote name server. <span><strong class="command">transfers-per-ns</strong></span> may
be overridden on a per-server basis by using the <span><strong class="command">transfers</strong></span> phrase
of the <span><strong class="command">server</strong></span> statement.</p></dd>
d3250 30
a3279 14
<dd><p><span><strong class="command">transfer-source</strong></span> determines
which local address will be bound to IPv4 TCP connections used to
fetch zones transferred inbound by the server.  It also determines
the source IPv4 address, and optionally the UDP port, used for the
refresh queries and forwarded dynamic updates.  If not set, it defaults
to a system controlled value which will usually be the address of
the interface "closest to" the remote end. This address must appear
in the remote end's <span><strong class="command">allow-transfer</strong></span> option for
the zone being transferred, if one is specified. This statement
sets the <span><strong class="command">transfer-source</strong></span> for all zones, but can
be overridden on a per-view or per-zone basis by including a
<span><strong class="command">transfer-source</strong></span> statement within the
<span><strong class="command">view</strong></span> or <span><strong class="command">zone</strong></span> block
in the configuration file.</p></dd>
d3281 4
a3284 2
<dd><p>The same as <span><strong class="command">transfer-source</strong></span>,
except zone transfers are performed using IPv6.</p></dd>
d3288 5
a3292 5
		  An alternate transfer source if the one listed in
		  <span><strong class="command">transfer-source</strong></span> fails and
		  <span><strong class="command">use-alt-transfer-source</strong></span> is
		  set.
		</p>
d3295 7
a3301 7
		  If you do not wish the alternate transfer source
		  to be used, you should set
		  <span><strong class="command">use-alt-transfer-source</strong></span>
		  appropriately and you should not depend upon
		  getting a answer back to the first refresh
		  query.
		</div>
d3304 6
a3309 3
<dd><p>An alternate transfer source if the one listed in
<span><strong class="command">transfer-source-v6</strong></span> fails and
<span><strong class="command">use-alt-transfer-source</strong></span> is set.</p></dd>
d3311 7
a3317 3
<dd><p>Use the alternate transfer sources or not.  If views are
specified this defaults to <span><strong class="command">no</strong></span> otherwise it defaults to
<span><strong class="command">yes</strong></span> (for BIND 8 compatibility).</p></dd>
d3320 14
a3333 9
<p><span><strong class="command">notify-source</strong></span> determines
which local source address, and optionally UDP port, will be used to
send NOTIFY messages.
This address must appear in the slave server's <span><strong class="command">masters</strong></span>
zone clause or in an <span><strong class="command">allow-notify</strong></span> clause.
This statement sets the <span><strong class="command">notify-source</strong></span> for all zones,
but can be overridden on a per-zone or per-view basis by including a
<span><strong class="command">notify-source</strong></span> statement within the <span><strong class="command">zone</strong></span>
or <span><strong class="command">view</strong></span> block in the configuration file.</p>
d3337 3
a3339 3
                   Solaris 2.5.1 and earlier does not support setting the
                   source address for TCP sockets.
                 </p>
d3343 4
a3346 2
<dd><p>Like <span><strong class="command">notify-source</strong></span>,
but applies to notify messages sent to IPv6 addresses.</p></dd>
d3351 11
a3361 10
<a name="id2582444"></a>Bad UDP Port Lists</h4></div></div></div>
<p>
<span><strong class="command">avoid-v4-udp-ports</strong></span> and <span><strong class="command">avoid-v6-udp-ports</strong></span>
specify a list of IPv4 and IPv6 UDP ports that will not be used as system
assigned source ports for UDP sockets.  These lists prevent named
from choosing as its random source port a port that is blocked by
your firewall.  If a query went out with such a source port, the
answer would not get by the firewall and the name server would have
to query again.
</p>
d3365 22
a3386 13
<a name="id2570036"></a>Operating System Resource Limits</h4></div></div></div>
<p>The server's usage of many system resources can be limited.
Scaled values are allowed when specifying resource limits.  For
example, <span><strong class="command">1G</strong></span> can be used instead of
<span><strong class="command">1073741824</strong></span> to specify a limit of one
gigabyte. <span><strong class="command">unlimited</strong></span> requests unlimited use, or the
maximum available amount. <span><strong class="command">default</strong></span> uses the limit
that was in force when the server was started. See the description
of <span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.</p>
<p>The following options set operating system resource limits for
the name server process.  Some operating systems don't support some or
any of the limits. On such systems, a warning will be issued if the
unsupported limit is used.</p>
d3389 4
a3392 2
<dd><p>The maximum size of a core dump. The default
is <code class="literal">default</code>.</p></dd>
d3394 16
a3409 15
<dd><p>The maximum amount of data memory the server
may use. The default is <code class="literal">default</code>.
This is a hard limit on server memory usage.
If the server attempts to allocate memory in excess of this
limit, the allocation will fail, which may in turn leave
the server unable to perform DNS service.  Therefore,
this option is rarely useful as a way of limiting the
amount of memory used by the server, but it can be used
to raise an operating system data size limit that is
too small by default.  If you wish to limit the amount
of memory used by the server, use the
<span><strong class="command">max-cache-size</strong></span> and 
<span><strong class="command">recursive-clients</strong></span>
options instead.
</p></dd>
d3411 4
a3414 3
<dd><p>The maximum number of files the server
may have open concurrently. The default is <code class="literal">unlimited</code>.
</p></dd>
d3416 4
a3419 2
<dd><p>The maximum amount of stack memory the server
may use. The default is <code class="literal">default</code>.</p></dd>
d3424 6
a3429 4
<a name="id2570205"></a>Server  Resource Limits</h4></div></div></div>
<p>The following options set limits on the server's
resource consumption that are enforced internally by the
server rather than the operating system.</p>
d3432 6
a3437 5
<dd><p>This option is obsolete; it is accepted
and ignored for BIND 8 compatibility.  The option
<span><strong class="command">max-journal-size</strong></span> performs a similar
function in BIND 8.
</p></dd>
d3439 9
a3447 5
<dd><p>Sets a maximum size for each journal file
(see <a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file approaches
the specified size, some of the oldest transactions in the journal
will be automatically removed.  The default is
<code class="literal">unlimited</code>.</p></dd>
d3449 5
a3453 4
<dd><p>In BIND 8, specifies the maximum number of host statistics
entries to be kept.
Not implemented in BIND 9.
</p></dd>
d3455 12
a3466 7
<dd><p>The maximum number of simultaneous recursive lookups
the server will perform on behalf of clients.  The default is
<code class="literal">1000</code>.  Because each recursing client uses a fair
bit of memory, on the order of 20 kilobytes, the value of the
<span><strong class="command">recursive-clients</strong></span> option may have to be decreased
on hosts with limited memory.
</p></dd>
d3468 5
a3472 3
<dd><p>The maximum number of simultaneous client TCP
connections that the server will accept.
The default is <code class="literal">100</code>.</p></dd>
d3474 13
a3486 8
<dd><p>The maximum amount of memory to use for the
server's cache, in bytes.  When the amount of data in the cache
reaches this limit, the server will cause records to expire
prematurely so that the limit is not exceeded.  In a server with
multiple views, the limit applies separately to the cache of each
view.  The default is <code class="literal">unlimited</code>, meaning that 
records are purged from the cache only when their TTLs expire.
</p></dd>
d3488 10
a3497 6
<dd><p>The listen queue depth.  The default and minimum is 3.
If the kernel supports the accept filter "dataready" this also controls how
many TCP connections that will be queued in kernel space waiting for
some data before being passed to accept.  Values less than 3 will be
silently raised.
</p></dd>
d3502 1
a3502 1
<a name="id2584723"></a>Periodic Task Intervals</h4></div></div></div>
d3505 7
a3511 4
<dd><p>The server will remove expired resource records
from the cache every <span><strong class="command">cleaning-interval</strong></span> minutes.
The default is 60 minutes.  The maximum value is 28 days (40320 minutes).
If set to 0, no periodic cleaning will occur.</p></dd>
d3513 9
a3521 5
<dd><p>The server will perform zone maintenance tasks
for all zones marked as <span><strong class="command">dialup</strong></span> whenever this
interval expires. The default is 60 minutes. Reasonable values are up
to 1 day (1440 minutes).  The maximum value is 28 days (40320 minutes).
If set to 0, no zone maintenance for these zones will occur.</p></dd>
d3523 14
a3536 9
<dd><p>The server will scan the network interface list
every <span><strong class="command">interface-interval</strong></span> minutes. The default
is 60 minutes. The maximum value is 28 days (40320 minutes).
If set to 0, interface scanning will only occur when
the configuration file is  loaded. After the scan, the server will
begin listening for queries on any newly discovered
interfaces (provided they are allowed by the
<span><strong class="command">listen-on</strong></span> configuration), and will
stop listening on interfaces that have gone away.</p></dd>
d3539 7
a3545 4
<p>Name server statistics will be logged
every <span><strong class="command">statistics-interval</strong></span> minutes. The default is 
60. The maximum value is 28 days (40320 minutes).
If set to 0, no statistics will be logged.</p>
d3548 4
a3551 1
<p>Not yet implemented in <acronym class="acronym">BIND</acronym>9.</p>
d3559 17
a3575 12
<p>All other things being equal, when the server chooses a name server
to query from a list of name servers, it prefers the one that is
topologically closest to itself. The <span><strong class="command">topology</strong></span> statement
takes an <span><strong class="command">address_match_list</strong></span> and interprets it
in a special way. Each top-level list element is assigned a distance.
Non-negated elements get a distance based on their position in the
list, where the closer the match is to the start of the list, the
shorter the distance is between it and the server. A negated match
will be assigned the maximum distance from the server. If there
is no match, the address will get a distance which is further than
any non-negated list element, and closer than any negated element.
For example,</p>
d3581 9
a3589 5
<p>will prefer servers on network 10 the most, followed by hosts
on network 1.2.0.0 (netmask 255.255.0.0) and network 3, with the
exception of hosts on network 1.2.3 (netmask 255.255.255.0), which
is preferred least of all.</p>
<p>The default topology is</p>
d3594 4
a3597 3
<p>The <span><strong class="command">topology</strong></span> option
is not implemented in <acronym class="acronym">BIND</acronym> 9.
</p>
d3603 65
a3667 43
<p>The response to a DNS query may consist of multiple resource
records (RRs) forming a resource records set (RRset).
The name server will normally return the
RRs within the RRset in an indeterminate order
(but see the <span><strong class="command">rrset-order</strong></span>
statement in <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>).
The client resolver code should rearrange the RRs as appropriate,
that is, using any addresses on the local net in preference to other addresses.
However, not all resolvers can do this or are correctly configured.
When a client is using a local server, the sorting can be performed
in the server, based on the client's address. This only requires
configuring the name servers, not all the clients.</p>
<p>The <span><strong class="command">sortlist</strong></span> statement (see below) takes
an <span><strong class="command">address_match_list</strong></span> and interprets it even
more specifically than the <span><strong class="command">topology</strong></span> statement
does (<a href="Bv9ARM.ch06.html#topology" title="Topology">the section called &#8220;Topology&#8221;</a>).
Each top level statement in the <span><strong class="command">sortlist</strong></span> must
itself be an explicit <span><strong class="command">address_match_list</strong></span> with
one or two elements. The first element (which may be an IP address,
an IP prefix, an ACL name or a nested <span><strong class="command">address_match_list</strong></span>)
of each top level list is checked against the source address of
the query until a match is found.</p>
<p>Once the source address of the query has been matched, if
the top level statement contains only one element, the actual primitive
element that matched the source address is used to select the address
in the response to move to the beginning of the response. If the
statement is a list of two elements, then the second element is
treated the same as the <span><strong class="command">address_match_list</strong></span> in
a <span><strong class="command">topology</strong></span> statement. Each top level element
is assigned a distance and the address in the response with the minimum
distance is moved to the beginning of the response.</p>
<p>In the following example, any queries received from any of
the addresses of the host itself will get responses preferring addresses
on any of the locally connected networks. Next most preferred are addresses
on the 192.168.1/24 network, and after that either the 192.168.2/24
or
192.168.3/24 network with no preference shown between these two
networks. Queries received from a host on the 192.168.1/24 network
will prefer other addresses on that network to the 192.168.2/24
and
192.168.3/24 networks. Queries received from a host on the 192.168.4/24
or the 192.168.5/24 network will only prefer other addresses on
their directly connected networks.</p>
d3685 12
a3696 7
<p>The following example will give reasonable behavior for the
local host and hosts on directly connected networks. It is similar
to the behavior of the address sort in <acronym class="acronym">BIND</acronym> 4.9.x. Responses sent
to queries from the local host will favor any of the directly connected
networks. Responses sent to queries from any other hosts on a directly
connected network will prefer addresses on that same network. Responses
to other queries will not be sorted.</p>
d3706 28
a3733 15
<p>When multiple records are returned in an answer it may be
useful to configure the order of the records placed into the response.
The <span><strong class="command">rrset-order</strong></span> statement permits configuration
of the ordering of the records in a multiple record response.
See also the <span><strong class="command">sortlist</strong></span> statement,
<a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a>.
</p>
<p>An <span><strong class="command">order_spec</strong></span> is defined as follows:</p>
<pre class="programlisting">[<span class="optional"> class <em class="replaceable"><code>class_name</code></em> </span>][<span class="optional"> type <em class="replaceable"><code>type_name</code></em> </span>][<span class="optional"> name <em class="replaceable"><code>"domain_name"</code></em></span>]
      order <em class="replaceable"><code>ordering</code></em>
</pre>
<p>If no class is specified, the default is <span><strong class="command">ANY</strong></span>.
If no type is specified, the default is <span><strong class="command">ANY</strong></span>.
If no name is specified, the default is "<span><strong class="command">*</strong></span>" (asterisk).</p>
<p>The legal values for <span><strong class="command">ordering</strong></span> are:</p>
d3741 9
a3749 3
<td><p><span><strong class="command">fixed</strong></span></p></td>
<td><p>Records are returned in the order they
are defined in the zone file.</p></td>
d3752 8
a3759 2
<td><p><span><strong class="command">random</strong></span></p></td>
<td><p>Records are returned in some random order.</p></td>
d3762 9
a3770 3
<td><p><span><strong class="command">cyclic</strong></span></p></td>
<td><p>Records are returned in a round-robin
order.</p></td>
d3774 3
a3776 1
<p>For example:</p>
d3782 11
a3792 5
<p>will cause any responses for type A records in class IN that
have "<code class="literal">host.example.com</code>" as a suffix, to always be returned
in random order. All other records are returned in cyclic order.</p>
<p>If multiple <span><strong class="command">rrset-order</strong></span> statements appear,
they are not combined &#8212; the last one applies.</p>
d3795 5
a3799 4
<p>The <span><strong class="command">rrset-order</strong></span> statement
is not yet fully implemented in <acronym class="acronym">BIND</acronym> 9.
BIND 9 currently does not support "fixed" ordering.
</p>
d3807 8
a3814 5
<dd><p>Sets the number of seconds to cache a
lame server indication. 0 disables caching. (This is
<span class="bold"><strong>NOT</strong></span> recommended.)
The default is <code class="literal">600</code> (10 minutes) and the maximum value is 
<code class="literal">1800</code> (30 minutes).</p></dd>
d3816 11
a3826 7
<dd><p>To reduce network traffic and increase performance,
the server stores negative answers. <span><strong class="command">max-ncache-ttl</strong></span> is
used to set a maximum retention time for these answers in the server
in seconds. The default
<span><strong class="command">max-ncache-ttl</strong></span> is <code class="literal">10800</code> seconds (3 hours).
<span><strong class="command">max-ncache-ttl</strong></span> cannot exceed 7 days and will
be silently truncated to 7 days if set to a greater value.</p></dd>
d3828 5
a3832 3
<dd><p>Sets
the maximum time for which the server will cache ordinary (positive)
answers. The default is one week (7 days).</p></dd>
d3835 6
a3840 3
<p>The minimum number of root servers that
is required for a request for the root servers to be accepted. The default
is <strong class="userinput"><code>2</code></strong>.</p>
d3843 3
a3845 1
<p>Not implemented in <acronym class="acronym">BIND</acronym> 9.</p>
d3849 11
a3859 7
<dd><p>Specifies the number of days into the
future when DNSSEC signatures automatically generated as a result
of dynamic updates (<a href="Bv9ARM.ch04.html#dynamic_update" title="Dynamic Update">the section called &#8220;Dynamic Update&#8221;</a>)
will expire. The default is <code class="literal">30</code> days.
The maximum value is 10 years (3660 days). The signature
inception time is unconditionally set to one hour before the current time
to allow for a limited amount of clock skew.</p></dd>
d3865 9
a3873 6
These options control the server's behavior on refreshing a zone
(querying for SOA changes) or retrying failed transfers.
Usually the SOA values for the zone are used, but these values
are set by the master, giving slave server administrators little
control over their contents.
</p>
d3875 8
a3882 5
These options allow the administrator to set a minimum and maximum
refresh and retry time either per-zone, per-view, or globally.
These options are valid for slave and stub zones,
and clamp the SOA refresh and retry times to the specified values.
</p>
d3886 85
a3970 7
<span><strong class="command">edns-udp-size</strong></span> sets the advertised EDNS UDP buffer
size in bytes.  Valid values are 512 to 4096 bytes (values outside this range will be
silently adjusted).  The default value is 4096.  The usual reason for
setting edns-udp-size to a non-default value it to get UDP answers to
pass through broken firewalls that block fragmented packets and/or
block UDP packets that are greater than 512 bytes.
</p></dd>
d3976 20
a3995 12
<p>The server provides some helpful diagnostic information
through a number of built-in zones under the
pseudo-top-level-domain <code class="literal">bind</code> in the
<span><strong class="command">CHAOS</strong></span> class.  These zones are part of a
built-in view (see <a href="Bv9ARM.ch06.html#view_statement_grammar" title="view Statement Grammar">the section called &#8220;<span><strong class="command">view</strong></span> Statement Grammar&#8221;</a>) of class
<span><strong class="command">CHAOS</strong></span> which is separate from the default view of
class <span><strong class="command">IN</strong></span>; therefore, any global server options
such as <span><strong class="command">allow-query</strong></span> do not apply the these zones.
If you feel the need to disable these zones, use the options
below, or hide the built-in <span><strong class="command">CHAOS</strong></span> view by
defining an explicit view of class <span><strong class="command">CHAOS</strong></span>
that matches all clients.</p>
d3998 8
a4005 6
<dd><p>The version the server should report
via a query of the name <code class="literal">version.bind</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
The default is the real version number of this server.
Specifying <span><strong class="command">version none</strong></span>
disables processing of the queries.</p></dd>
d4007 12
a4018 8
<dd><p>The hostname the server should report via a query of
the name <code class="filename">hostname.bind</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
This defaults to the hostname of the machine hosting the name server as
found by the gethostname() function.  The primary purpose of such queries is to
identify which of a group of anycast servers is actually
answering your queries.  Specifying <span><strong class="command">hostname none;</strong></span>
disables processing of the queries.</p></dd>
d4020 119
a4138 11
<dd><p>The ID of the server should report via a query of
the name <code class="filename">ID.SERVER</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
The primary purpose of such queries is to
identify which of a group of anycast servers is actually
answering your queries.  Specifying <span><strong class="command">server-id none;</strong></span>
disables processing of the queries.
Specifying <span><strong class="command">server-id hostname;</strong></span> will cause named to
use the hostname as found by the gethostname() function.
The default <span><strong class="command">server-id</strong></span> is <span><strong class="command">none</strong></span>.
</p></dd>
a4143 5
<p>The statistics file generated by <acronym class="acronym">BIND</acronym> 9
is similar, but not identical, to that
generated by <acronym class="acronym">BIND</acronym> 8.
</p>
<p>The statistics dump begins with a line, like:</p>
d4145 27
a4171 10
 <span><strong class="command">+++ Statistics Dump +++ (973798949)</strong></span>
 </p>
<p>The numberr in parentheses is a standard
Unix-style timestamp, measured as seconds since January 1, 1970.  Following
that line are a series of lines containing a counter type, the value of the
counter, optionally a zone name, and optionally a view name.
The lines without view and zone listed are global statistics for the entire server.
Lines with a zone and view name for the given view and zone (the view name is
omitted for the default view).
</p>
d4173 2
a4174 3
The statistics dump ends with the line where the
number is identical to the number in the beginning line; for example:
</p>
d4176 2
a4177 3
<span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>
</p>
<p>The following statistics counters are maintained:</p>
d4185 35
a4219 5
<td><p><span><strong class="command">success</strong></span></p></td>
<td><p>The number of
successful queries made to the server or zone.  A successful query
is defined as query which returns a NOERROR response with at least
one answer RR.</p></td>
d4222 9
a4230 3
<td><p><span><strong class="command">referral</strong></span></p></td>
<td><p>The number of queries which resulted
in referral responses.</p></td>
d4233 9
a4241 3
<td><p><span><strong class="command">nxrrset</strong></span></p></td>
<td><p>The number of queries which resulted in
NOERROR responses with no data.</p></td>
d4244 9
a4252 3
<td><p><span><strong class="command">nxdomain</strong></span></p></td>
<td><p>The number
of queries which resulted in NXDOMAIN responses.</p></td>
d4255 11
a4265 3
<td><p><span><strong class="command">failure</strong></span></p></td>
<td><p>The number of queries which resulted in a
failure response other than those above.</p></td>
d4268 11
a4278 3
<td><p><span><strong class="command">recursion</strong></span></p></td>
<td><p>The number of queries which caused the server
to perform recursion in order to find the final answer.</p></td>
d4283 104
a4386 9
Each query received by the server will cause exactly one of
<span><strong class="command">success</strong></span>,
<span><strong class="command">referral</strong></span>,
<span><strong class="command">nxrrset</strong></span>,
<span><strong class="command">nxdomain</strong></span>, or
<span><strong class="command">failure</strong></span>
to be incremented, and may additionally cause the
<span><strong class="command">recursion</strong></span> counter to be incremented.
</p>
d4392 1
a4392 1
<pre class="programlisting">server <em class="replaceable"><code>ip_addr</code></em> {
d4397 2
d4404 4
d4413 166
a4578 75
<a name="server_statement_definition_and_usage"></a><span><strong class="command">server</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">server</strong></span> statement defines characteristics
to be associated with a remote name server.</p>
<p>
The <span><strong class="command">server</strong></span> statement can occur at the top level of the
configuration file or inside a <span><strong class="command">view</strong></span> statement.  
If a <span><strong class="command">view</strong></span> statement contains
one or more <span><strong class="command">server</strong></span> statements, only those
apply to the view and any top-level ones are ignored.
If a view contains no <span><strong class="command">server</strong></span> statements,
any top-level <span><strong class="command">server</strong></span> statements are used as
defaults.
</p>
<p>If you discover that a remote server is giving out bad data,
marking it as bogus will prevent further queries to it. The default
value of <span><strong class="command">bogus</strong></span> is <span><strong class="command">no</strong></span>.</p>
<p>The <span><strong class="command">provide-ixfr</strong></span> clause determines whether
the local server, acting as master, will respond with an incremental
zone transfer when the given remote server, a slave, requests it.
If set to <span><strong class="command">yes</strong></span>, incremental transfer will be provided
whenever possible. If set to <span><strong class="command">no</strong></span>, all transfers
to the remote server will be non-incremental. If not set, the value
of the <span><strong class="command">provide-ixfr</strong></span> option in the view or
global options block is used as a default.</p>
<p>The <span><strong class="command">request-ixfr</strong></span> clause determines whether
the local server, acting as a slave, will request incremental zone
transfers from the given remote server, a master. If not set, the
value of the <span><strong class="command">request-ixfr</strong></span> option in the view or
global options block is used as a default.</p>
<p>IXFR requests to servers that do not support IXFR will automatically
fall back to AXFR.  Therefore, there is no need to manually list
which servers support IXFR and which ones do not; the global default
of <span><strong class="command">yes</strong></span> should always work.
The purpose of the <span><strong class="command">provide-ixfr</strong></span> and
<span><strong class="command">request-ixfr</strong></span> clauses is
to make it possible to disable the use of IXFR even when both master
and slave claim to support it, for example if one of the servers
is buggy and crashes or corrupts data when IXFR is used.</p>
<p>The <span><strong class="command">edns</strong></span> clause determines whether the local server
will attempt to use EDNS when communicating with the remote server.  The
default is <span><strong class="command">yes</strong></span>.</p>
<p>The server supports two zone transfer methods. The first, <span><strong class="command">one-answer</strong></span>,
uses one DNS message per resource record transferred. <span><strong class="command">many-answers</strong></span> packs
as many resource records as possible into a message. <span><strong class="command">many-answers</strong></span> is
more efficient, but is only known to be understood by <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
8.x, and patched versions of <acronym class="acronym">BIND</acronym> 4.9.5. You can specify which method
to use for a server with the <span><strong class="command">transfer-format</strong></span> option.
If <span><strong class="command">transfer-format</strong></span> is not specified, the <span><strong class="command">transfer-format</strong></span> specified
by the <span><strong class="command">options</strong></span> statement will be used.</p>
<p><span><strong class="command">transfers</strong></span> is used to limit the number of
concurrent inbound zone transfers from the specified server. If
no <span><strong class="command">transfers</strong></span> clause is specified, the limit is
set according to the <span><strong class="command">transfers-per-ns</strong></span> option.</p>
<p>The <span><strong class="command">keys</strong></span> clause identifies a
<span><strong class="command">key_id</strong></span> defined by the <span><strong class="command">key</strong></span> statement,
to be used for transaction security (TSIG, <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
when talking to the remote server. 
When a request is sent to the remote server, a request signature
will be generated using the key specified here and appended to the
message. A request originating from the remote server is not required
to be signed by this key.</p>
<p>Although the grammar of the <span><strong class="command">keys</strong></span> clause
allows for multiple keys, only a single key per server is currently
supported.</p>
<p>The <span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">transfer-source-v6</strong></span> clauses specify the IPv4 and IPv6 source
address to be used for zone transfer with the remote server, respectively.
For an IPv4 remote server, only <span><strong class="command">transfer-source</strong></span> can
be specified.
Similarly, for an IPv6 remote server, only
<span><strong class="command">transfer-source-v6</strong></span> can be specified.
For more details, see the description of
<span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">transfer-source-v6</strong></span> in
<a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p>
d4582 1
a4582 1
<a name="id2586290"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
d4591 2
a4592 2
<a name="id2586338"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
	    and Usage</h3></div></div></div>
d4594 24
a4617 24
	    The <span><strong class="command">trusted-keys</strong></span> statement defines
	    DNSSEC security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the
	    public key for a non-authoritative zone is known, but
	    cannot be securely obtained through DNS, either because
	    it is the DNS root zone or because its parent zone is
	    unsigned.  Once a key has been configured as a trusted
	    key, it is treated as if it had been validated and
	    proven secure. The resolver attempts DNSSEC validation
	    on all DNS data in subdomains of a security root.
  	  </p>
<p>
	    All keys (and corresponding zones) listed in
	    <span><strong class="command">trusted-keys</strong></span> are deemed to exist regardless
	    of what parent zones say.  Similarly for all keys listed in
	    <span><strong class="command">trusted-keys</strong></span> only those keys are
	    used to validate the DNSKEY RRset.  The parent's DS RRset
	    will not be used.
  	  </p>
<p>
	    The <span><strong class="command">trusted-keys</strong></span> statement can contain
	    multiple key entries, each consisting of the key's
	    domain name, flags, protocol, algorithm, and the Base-64
	    representation of the key data.
	  </p>
d4622 1
a4622 1
<pre class="programlisting">view <em class="replaceable"><code>view_name</code></em> 
d4624 2
a4625 2
      match-clients { <em class="replaceable"><code>address_match_list</code></em> } ;
      match-destinations { <em class="replaceable"><code>address_match_list</code></em> } ;
d4634 85
a4718 47
<a name="id2586420"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">view</strong></span> statement is a powerful new feature
of <acronym class="acronym">BIND</acronym> 9 that lets a name server answer a DNS query differently
depending on who is asking. It is particularly useful for implementing
split DNS setups without having to run multiple servers.</p>
<p>Each <span><strong class="command">view</strong></span> statement defines a view of the
DNS namespace that will be seen by a subset of clients.  A client matches
a view if its source IP address matches the 
<code class="varname">address_match_list</code> of the view's
<span><strong class="command">match-clients</strong></span> clause and its destination IP address matches
the <code class="varname">address_match_list</code> of the view's
<span><strong class="command">match-destinations</strong></span> clause.  If not specified, both
<span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
default to matching all addresses.  In addition to checking IP addresses
<span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
can also take <span><strong class="command">keys</strong></span> which provide an mechanism for the
client to select the view.  A view can also be specified
as <span><strong class="command">match-recursive-only</strong></span>, which means that only recursive
requests from matching clients will match that view.
The order of the <span><strong class="command">view</strong></span> statements is significant &#8212;
a client request will be resolved in the context of the first
<span><strong class="command">view</strong></span> that it matches.</p>
<p>Zones defined within a <span><strong class="command">view</strong></span> statement will
be only be accessible to clients that match the <span><strong class="command">view</strong></span>.
 By defining a zone of the same name in multiple views, different
zone data can be given to different clients, for example, "internal"
and "external" clients in a split DNS setup.</p>
<p>Many of the options given in the <span><strong class="command">options</strong></span> statement
can also be used within a <span><strong class="command">view</strong></span> statement, and then
apply only when resolving queries with that view.  When no view-specific
value is given, the value in the <span><strong class="command">options</strong></span> statement
is used as a default.  Also, zone options can have default values specified
in the <span><strong class="command">view</strong></span> statement; these view-specific defaults
take precedence over those in the <span><strong class="command">options</strong></span> statement.</p>
<p>Views are class specific.  If no class is given, class IN
is assumed.  Note that all non-IN views must contain a hint zone,
since only the IN class has compiled-in default hints.</p>
<p>If there are no <span><strong class="command">view</strong></span> statements in the config
file, a default view that matches any client is automatically created
in class IN. Any <span><strong class="command">zone</strong></span> statements specified on
the top level of the configuration file are considered to be part of
this default view, and the <span><strong class="command">options</strong></span> statement will
apply to the default view. If any explicit <span><strong class="command">view</strong></span>
statements are present, all <span><strong class="command">zone</strong></span> statements must
occur inside <span><strong class="command">view</strong></span> statements.</p>
<p>Here is an example of a typical split DNS setup implemented
using <span><strong class="command">view</strong></span> statements:</p>
d4753 2
a4754 2
Statement Grammar</h3></div></div></div>
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4756 4
a4759 4
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> update-policy { <em class="replaceable"><code>update_policy_rule</code></em> [<span class="optional">...</span>] } ; </span>]
d4762 3
d4767 2
d4777 2
a4778 1
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> ; </span>]
d4790 1
d4793 1
a4793 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4795 5
a4799 4
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
d4804 2
d4811 1
a4811 1
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; </span>]
d4817 1
a4817 1
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> ; </span>]
d4833 1
d4836 1
a4836 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4838 1
a4838 1
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
d4843 1
a4843 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4845 1
a4845 1
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
d4850 1
d4853 1
a4853 1
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; </span>]
a4862 1
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
d4871 1
a4871 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4878 1
a4878 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
d4881 1
d4886 1
a4886 1
<a name="id2587635"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
d4889 1
a4889 1
<a name="id2587641"></a>Zone Types</h4></div></div></div>
d4897 101
a4997 37
<td><p><code class="varname">master</code></p></td>
<td><p>The server has a master copy of the data
for the zone and will be able to provide authoritative answers for
it.</p></td>
</tr>
<tr>
<td><p><code class="varname">slave</code></p></td>
<td><p>A slave zone is a replica of a master
zone. The <span><strong class="command">masters</strong></span> list specifies one or more IP addresses
of master servers that the slave contacts to update its copy of the zone.
Masters list elements can also be names of other masters lists.
By default, transfers are made from port 53 on the servers; this can
be changed for all servers by specifying a port number before the
list of IP addresses, or on a per-server basis after the IP address.
Authentication to the master can also be done with per-server TSIG keys.
If a file is specified, then the
replica will be written to this file whenever the zone is changed,
and reloaded from this file on a server restart. Use of a file is
recommended, since it often speeds server startup and eliminates
a needless waste of bandwidth. Note that for large numbers (in the
tens or hundreds of thousands) of zones per server, it is best to
use a two-level naming scheme for zone file names. For example,
a slave server for the zone <code class="literal">example.com</code> might place
the zone contents into a file called
<code class="filename">ex/example.com</code> where <code class="filename">ex/</code> is
just the first two letters of the zone name. (Most operating systems
behave very slowly if you put 100 000 files into
a single directory.)</p></td>
</tr>
<tr>
<td><p><code class="varname">stub</code></p></td>
<td>
<p>A stub zone is similar to a slave zone,
except that it replicates only the NS records of a master zone instead
of the entire zone. Stub zones are not a standard part of the DNS;
they are a feature specific to the <acronym class="acronym">BIND</acronym> implementation.
</p>
d4999 48
a5046 23
<p>Stub zones can be used to eliminate the need for glue NS record
in a parent zone at the expense of maintaining a stub zone entry and
a set of name server addresses in <code class="filename">named.conf</code>.
This usage is not recommended for new configurations, and BIND 9
supports it only in a limited way.
In <acronym class="acronym">BIND</acronym> 4/8, zone transfers of a parent zone
included the NS records from stub children of that zone. This meant
that, in some cases, users could get away with configuring child stubs
only in the master server for the parent zone. <acronym class="acronym">BIND</acronym>
9 never mixes together zone data from different zones in this
way. Therefore, if a <acronym class="acronym">BIND</acronym> 9 master serving a parent
zone has child stub zones configured, all the slave servers for the
parent zone also need to have the same child stub zones
configured.</p>

<p>Stub zones can also be used as a way of forcing the resolution
of a given domain to use a particular set of authoritative servers.
For example, the caching name servers on a private network using
RFC1918 addressing may be configured with stub zones for
<code class="literal">10.in-addr.arpa</code>
to use a set of internal name servers as the authoritative
servers for that domain.</p>
</td>
a5048 1
<td><p><code class="varname">forward</code></p></td>
d5050 18
a5067 13
<p>A "forward zone" is a way to configure
forwarding on a per-domain basis.  A <span><strong class="command">zone</strong></span> statement
of type <span><strong class="command">forward</strong></span> can contain a <span><strong class="command">forward</strong></span> and/or <span><strong class="command">forwarders</strong></span> statement,
which will apply to queries within the domain given by the zone
name. If no <span><strong class="command">forwarders</strong></span> statement is present or
an empty list for <span><strong class="command">forwarders</strong></span> is given, then no
forwarding will be done for the domain, canceling the effects of
any forwarders in the <span><strong class="command">options</strong></span> statement. Thus
if you want to use this type of zone to change the behavior of the
global <span><strong class="command">forward</strong></span> option (that is, "forward first"
to, then "forward only", or vice versa, but want to use the same
servers as set globally) you need to re-specify the global forwarders.</p>
</td>
d5070 22
a5091 19
<td><p><code class="varname">hint</code></p></td>
<td><p>The initial set of root name servers is
specified using a "hint zone". When the server starts up, it uses
the root hints to find a root name server and get the most recent
list of root name servers. If no hint zone is specified for class
IN, the server uses a compiled-in default set of root servers hints.
Classes other than IN have no built-in defaults hints.</p></td>
</tr>
<tr>
<td><p><code class="varname">delegation-only</code></p></td>
<td>
<p>This is used to enforce the delegation-only
status of infrastructure zones (e.g. COM, NET, ORG).  Any answer that
is received without an explicit or implicit delegation in the authority
section will be treated as NXDOMAIN.  This does not apply to the zone
apex.  This should not be applied to leaf zones.</p>
<p><code class="varname">delegation-only</code> has no effect on answers received
from forwarders.</p>
</td>
d5098 19
a5116 12
<a name="id2588084"></a>Class</h4></div></div></div>
<p>The zone's name may optionally be followed by a class. If
a class is not specified, class <code class="literal">IN</code> (for <code class="varname">Internet</code>),
is assumed. This is correct for the vast majority of cases.</p>
<p>The <code class="literal">hesiod</code> class is
named for an information service from MIT's Project Athena. It is
used to share information about various systems databases, such
as users, groups, printers and so on. The keyword 
<code class="literal">HS</code> is
a synonym for hesiod.</p>
<p>Another MIT development is CHAOSnet, a LAN protocol created
in the mid-1970s. Zone data for it can be specified with the <code class="literal">CHAOS</code> class.</p>
d5120 1
a5120 1
<a name="id2588115"></a>Zone Options</h4></div></div></div>
d5123 4
a5126 2
<dd><p>See the description of
<span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d5128 4
a5131 2
<dd><p>See the description of
<span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d5133 4
a5136 2
<dd><p>See the description of <span><strong class="command">allow-transfer</strong></span>
in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d5138 4
a5141 6
<dd><p>Specifies which hosts are allowed to
submit Dynamic DNS updates for master zones. The default is to deny
updates from all hosts.  Note that allowing updates based
on the requestor's IP address is insecure; see
<a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a> for details.
</p></dd>
d5143 4
a5146 2
<dd><p>Specifies a "Simple Secure Update" policy. See
<a href="Bv9ARM.ch06.html#dynamic_update_policies" title="Dynamic Update Policies">the section called &#8220;Dynamic Update Policies&#8221;</a>.</p></dd>
d5148 4
a5151 2
<dd><p>See the description of <span><strong class="command">allow-update-forwarding</strong></span>
in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d5153 19
a5171 10
<dd><p>Only meaningful if <span><strong class="command">notify</strong></span> is
active for this zone. The set of machines that will receive a 
<code class="literal">DNS NOTIFY</code> message
for this zone is made up of all the listed name servers (other than
the primary master) for the zone plus any IP addresses specified
with <span><strong class="command">also-notify</strong></span>. A port may be specified
with each <span><strong class="command">also-notify</strong></span> address to send the notify
messages to a port other than the default of 53.
<span><strong class="command">also-notify</strong></span> is not meaningful for stub zones.
The default is the empty list.</p></dd>
d5174 37
a5210 5
This option is used to restrict the character set and syntax of
certain domain names in master files and/or DNS responses received from the
network.  The default varies according to zone type.  For <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.  For <span><strong class="command">slave</strong></span>
zones the default is <span><strong class="command">warn</strong></span>.
</p></dd>
d5213 23
a5235 11
<p>Specify the type of database to be used for storing the
zone data.  The string following the <span><strong class="command">database</strong></span> keyword
is interpreted as a list of whitespace-delimited words.  The first word
identifies the database type, and any subsequent words are passed
as arguments to the database to be interpreted in a way specific
to the database type.</p>
<p>The default is <strong class="userinput"><code>"rbt"</code></strong>, BIND 9's native in-memory
red-black-tree database.  This database does not take arguments.</p>
<p>Other values are possible if additional database drivers
have been linked into the server.  Some sample drivers are included
with the distribution but none are linked in by default.</p>
d5238 4
a5241 2
<dd><p>See the description of
<span><strong class="command">dialup</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
d5243 6
a5248 4
<dd><p>The flag only applies to hint and stub zones.  If set
to <strong class="userinput"><code>yes</code></strong>, then the zone will also be treated as if it
is also a delegation-only type zone.
</p></dd>
d5250 7
a5256 4
<dd><p>Only meaningful if the zone has a forwarders
list. The <span><strong class="command">only</strong></span> value causes the lookup to fail
after trying the forwarders and getting no answer, while <span><strong class="command">first</strong></span> would
allow a normal lookup to be tried.</p></dd>
d5258 6
a5263 3
<dd><p>Used to override the list of global forwarders.
If it is not specified in a zone of type <span><strong class="command">forward</strong></span>,
no forwarding is done for the zone and the global options are not used.</p></dd>
d5265 11
a5275 5
<dd><p>Was used in <acronym class="acronym">BIND</acronym> 8 to specify the name
of the transaction log (journal) file for dynamic update and IXFR.
<acronym class="acronym">BIND</acronym> 9 ignores the option and constructs the name of the journal
file by appending "<code class="filename">.jnl</code>" to the name of the
zone file.</p></dd>
d5277 10
a5286 2
<dd><p>Was an undocumented option in <acronym class="acronym">BIND</acronym> 8.
Ignored in <acronym class="acronym">BIND</acronym> 9.</p></dd>
d5288 4
a5291 2
<dd><p>See the description of
<span><strong class="command">max-transfer-time-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
d5293 4
a5296 2
<dd><p>See the description of
<span><strong class="command">max-transfer-idle-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
d5298 4
a5301 2
<dd><p>See the description of
<span><strong class="command">max-transfer-time-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
d5303 4
a5306 2
<dd><p>See the description of
<span><strong class="command">max-transfer-idle-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
d5308 9
a5316 2
<dd><p>See the description of
<span><strong class="command">notify</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
d5318 8
a5325 4
<dd><p>In <acronym class="acronym">BIND</acronym> 8, this option was intended for specifying
a public zone key for verification of signatures in DNSSEC signed
zones when they are loaded from disk. <acronym class="acronym">BIND</acronym> 9 does not verify signatures
on load and ignores the option.</p></dd>
d5327 7
a5333 3
<dd><p>If <strong class="userinput"><code>yes</code></strong>, the server will keep statistical
information for this zone, which can be dumped to the
<span><strong class="command">statistics-file</strong></span> defined in the server options.</p></dd>
d5335 4
a5338 2
<dd><p>See the description of
<span><strong class="command">sig-validity-interval</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.</p></dd>
d5340 4
a5343 3
<dd><p>See the description of
<span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5345 4
a5348 3
<dd><p>See the description of
<span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5350 4
a5353 3
<dd><p>See the description of
<span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5355 4
a5358 3
<dd><p>See the description of
<span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5360 4
a5363 3
<dd><p>See the description of
<span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5365 4
a5368 3
<dd><p>See the description of
<span><strong class="command">notify-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
d5370 4
a5373 3
<dd><p>See the description of
<span><strong class="command">notify-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
d5378 2
a5379 2
See the description in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
</p></dd>
d5381 4
a5384 2
<dd><p>See the description of
<span><strong class="command">ixfr-from-differences</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
d5386 6
a5391 2
<dd><p>See the description of
<span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and Usage&#8221;</a>.</p></dd>
d5393 9
a5401 2
<dd><p>See the description of
<span><strong class="command">multi-master</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
d5407 41
a5447 20
<p><acronym class="acronym">BIND</acronym> 9 supports two alternative methods of granting clients
the right to perform dynamic updates to a zone, 
configured by the <span><strong class="command">allow-update</strong></span> and
<span><strong class="command">update-policy</strong></span> option, respectively.</p>
<p>The <span><strong class="command">allow-update</strong></span> clause works the same
way as in previous versions of <acronym class="acronym">BIND</acronym>. It grants given clients the
permission to update any record of any name in the zone.</p>
<p>The <span><strong class="command">update-policy</strong></span> clause is new in <acronym class="acronym">BIND</acronym>
9 and allows more fine-grained control over what updates are allowed.
A set of rules is specified, where each rule either grants or denies
permissions for one or more names to be updated by one or more identities.
 If the dynamic update request message is signed (that is, it includes
either a TSIG or SIG(0) record), the identity of the signer can
be determined.</p>
<p>Rules are specified in the <span><strong class="command">update-policy</strong></span> zone
option, and are only meaningful for master zones.  When the <span><strong class="command">update-policy</strong></span> statement
is present, it is a configuration error for the <span><strong class="command">allow-update</strong></span> statement
to be present.  The <span><strong class="command">update-policy</strong></span> statement only
examines the signer of a message; the source address is not relevant.</p>
<p>This is how a rule definition looks:</p>
d5451 32
a5482 18
<p>Each rule grants or denies privileges.  Once a message has
successfully matched a rule, the operation is immediately granted
or denied and no further rules are examined.  A rule is matched
when the signer matches the identity field, the name matches the
name field in accordance with the nametype field, and the type matches
the types specified in the type field.</p>
<p>The identity field specifies a name or a wildcard name.  Normally, this
is the name of the TSIG or SIG(0) key used to sign the update request.  When a
TKEY exchange has been used to create a shared secret, the identity of the
shared secret is the same as the identity of the key used to authenticate the
TKEY exchange.  When the <em class="replaceable"><code>identity</code></em> field specifies a
wildcard name, it is subject to DNS wildcard expansion, so the rule will apply
to multiple identities.  The <em class="replaceable"><code>identity</code></em> field must
contain a fully qualified domain name.</p>
<p>The <em class="replaceable"><code>nametype</code></em> field has 4 values:
<code class="varname">name</code>, <code class="varname">subdomain</code>,
<code class="varname">wildcard</code>, and <code class="varname">self</code>.
</p>
d5490 95
a5584 27
<td><p><code class="varname">name</code></p></td>
<td><p>Exact-match semantics.  This rule matches when the
name being updated is identical to the contents of the
<em class="replaceable"><code>name</code></em> field.</p></td>
</tr>
<tr>
<td><p><code class="varname">subdomain</code></p></td>
<td><p>This rule matches when the name being updated
is a subdomain of, or identical to, the contents of the
<em class="replaceable"><code>name</code></em> field.</p></td>
</tr>
<tr>
<td><p><code class="varname">wildcard</code></p></td>
<td><p>The <em class="replaceable"><code>name</code></em> field is
subject to DNS wildcard expansion, and this rule matches when the name
being updated name is a valid expansion of the wildcard.</p></td>
</tr>
<tr>
<td><p><code class="varname">self</code></p></td>
<td><p>This rule matches when the name being updated
matches the contents of the <em class="replaceable"><code>identity</code></em> field.
The <em class="replaceable"><code>name</code></em> field is ignored, but should be
the same as the <em class="replaceable"><code>identity</code></em> field.  The
<code class="varname">self</code> nametype is most useful when allowing using
one key per name to update, where the key has the same name as the name
to be updated.  The <em class="replaceable"><code>identity</code></em> would be
specified as <code class="constant">*</code> in this case.</p></td>
d5588 15
a5602 8
<p>In all cases, the <em class="replaceable"><code>name</code></em> field must
specify a fully qualified domain name.</p>
<p>If no types are explicitly specified, this rule matches all types except
SIG, NS, SOA, and NXT. Types may be specified by name, including
"ANY" (ANY matches all types except NXT, which can never be updated).
Note that when an attempt is made to delete all records associated with a
name, the rules are checked for each existing record type.
</p>
d5608 1
a5608 1
<a name="id2589173"></a>Zone File</h2></div></div></div>
d5612 23
a5634 16
<p>This section, largely borrowed from RFC 1034, describes the
concept of a Resource Record (RR) and explains when each is used.
Since the publication of RFC 1034, several new RRs have been identified
and implemented in the DNS. These are also included.</p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2589191"></a>Resource Records</h4></div></div></div>
<p>A domain name identifies a node.  Each node has a set of
        resource information, which may be empty.  The set of resource
        information associated with a particular name is composed of
        separate RRs. The order of RRs in a set is not significant and
        need not be preserved by name servers, resolvers, or other
        parts of the DNS. However, sorting of multiple RRs is
        permitted for optimization purposes, for example, to specify
        that a particular nearby server be tried first. See <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a> and <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>.</p>
<p>The components of a Resource Record are:</p>
d5642 10
a5651 2
<td><p>owner name</p></td>
<td><p>the domain name where the RR is found.</p></td>
d5654 11
a5664 3
<td><p>type</p></td>
<td><p>an encoded 16-bit value that specifies
the type of the resource record.</p></td>
d5667 15
a5681 5
<td><p>TTL</p></td>
<td><p>the time-to-live of the RR. This field
is a 32-bit integer in units of seconds, and is primarily used by
resolvers when they cache RRs. The TTL describes how long a RR can
be cached before it should be discarded.</p></td>
d5684 11
a5694 3
<td><p>class</p></td>
<td><p>an encoded 16-bit value that identifies
a protocol family or instance of a protocol.</p></td>
d5697 11
a5707 3
<td><p>RDATA</p></td>
<td><p>the resource data.  The format of the
data is type (and sometimes class) specific.</p></td>
d5711 3
a5713 1
<p>The following are <span class="emphasis"><em>types</em></span> of valid RRs:</p>
d5721 11
a5731 3
<td><p>A</p></td>
<td><p>a host address.  In the IN class, this is a
32-bit IP address.  Described in RFC 1035.</p></td>
d5734 10
a5743 2
<td><p>AAAA</p></td>
<td><p>IPv6 address.  Described in RFC 1886.</p></td>
d5746 14
a5759 4
<td><p>A6</p></td>
<td><p>IPv6 address.  This can be a partial
address (a suffix) and an indirection to the name where the rest of the
address (the prefix) can be found.  Experimental.  Described in RFC 2874.</p></td>
d5762 11
a5772 3
<td><p>AFSDB</p></td>
<td><p>location of AFS database servers.
Experimental.  Described in RFC 1183.</p></td>
d5775 11
a5785 3
<td><p>APL</p></td>
<td><p>address prefix list.  Experimental.
Described in RFC 3123.</p></td>
d5788 11
a5798 3
<td><p>CERT</p></td>
<td><p>holds a digital certificate.
Described in RFC 2538.</p></td>
d5801 11
a5811 3
<td><p>CNAME</p></td>
<td><p>identifies the canonical name of an alias.
Described in RFC 1035.</p></td>
d5814 16
a5829 6
<td><p>DNAME</p></td>
<td><p>Replaces the domain name specified with
another name to be looked up, effectively aliasing an entire
subtree of the domain name space rather than a single record
as in the case of the CNAME RR.
Described in RFC 2672.</p></td>
d5832 11
a5842 2
<td><p>GPOS</p></td>
<td><p>Specifies the global position.  Superseded by LOC.</p></td>
d5845 11
a5855 3
<td><p>HINFO</p></td>
<td><p>identifies the CPU and OS used by a host.
Described in RFC 1035.</p></td>
d5858 10
a5867 3
<td><p>ISDN</p></td>
<td><p>representation of ISDN addresses.
Experimental.  Described in RFC 1183.</p></td>
d5870 11
a5880 3
<td><p>KEY</p></td>
<td><p>stores a public key associated with a
DNS name.  Described in RFC 2535.</p></td>
d5883 11
a5893 3
<td><p>KX</p></td>
<td><p>identifies a key exchanger for this
DNS name.  Described in RFC 2230.</p></td>
d5896 66
a5961 3
<td><p>LOC</p></td>
<td><p>for storing GPS info.  Described in RFC 1876.
Experimental.</p></td>
d5964 11
a5974 5
<td><p>MX</p></td>
<td><p>identifies a mail exchange for the domain.
A 16-bit preference value (lower is better)
followed by the host name of the mail exchange.
Described in RFC 974, RFC 1035.</p></td>
d5977 11
a5987 2
<td><p>NAPTR</p></td>
<td><p>name authority pointer.  Described in RFC 2915.</p></td>
d5990 15
a6004 3
<td><p>NSAP</p></td>
<td><p>a network service access point.
Described in RFC 1706.</p></td>
d6007 17
a6023 3
<td><p>NS</p></td>
<td><p>the authoritative name server for the
domain.  Described in RFC 1035.</p></td>
d6026 11
a6036 5
<td><p>NXT</p></td>
<td><p>used in DNSSEC to securely indicate that
RRs with an owner name in a certain name interval do not exist in
a zone and indicate what RR types are present for an existing name.
Described in RFC 2535.</p></td>
d6039 11
a6049 3
<td><p>PTR</p></td>
<td><p>a pointer to another part of the domain
name space.  Described in RFC 1035.</p></td>
d6052 11
a6062 3
<td><p>PX</p></td>
<td><p>provides mappings between RFC 822 and X.400
addresses.  Described in RFC 2163.</p></td>
d6065 11
a6075 3
<td><p>RP</p></td>
<td><p>information on persons responsible
for the domain.  Experimental.  Described in RFC 1183.</p></td>
d6078 13
a6090 4
<td><p>RT</p></td>
<td><p>route-through binding for hosts that
do not have their own direct wide area network addresses.
Experimental.  Described in RFC 1183.</p></td>
d6093 13
a6105 3
<td><p>SIG</p></td>
<td><p>("signature") contains data authenticated
in the secure DNS.  Described in RFC 2535.</p></td>
d6108 11
a6118 3
<td><p>SOA</p></td>
<td><p>identifies the start of a zone of authority.
Described in RFC 1035.</p></td>
d6121 11
a6131 3
<td><p>SRV</p></td>
<td><p>information about well known network
services (replaces WKS).  Described in RFC 2782.</p></td>
d6134 10
a6143 2
<td><p>TXT</p></td>
<td><p>text records.  Described in RFC 1035.</p></td>
d6146 12
a6157 4
<td><p>WKS</p></td>
<td><p>information about which well known
network services, such as SMTP, that a domain supports. Historical.
</p></td>
d6160 11
a6170 3
<td><p>X25</p></td>
<td><p>representation of X.25 network addresses.
Experimental.  Described in RFC 1183.</p></td>
d6174 4
a6177 2
<p>The following <span class="emphasis"><em>classes</em></span> of resource records
are currently valid in the DNS:</p>
d6185 27
a6211 2
<td><p>IN</p></td>
<td><p>The Internet.</p></td>
d6214 15
a6228 16
<td><p>CH</p></td>
<td><p>
CHAOSnet, a LAN protocol created at MIT in the mid-1970s.
Rarely used for its historical purpose, but reused for BIND's
built-in server information zones, e.g.,
<code class="literal">version.bind</code>.
</p></td>
</tr>
<tr>
<td><p>HS</p></td>
<td><p>
Hesiod, an information service
developed by MIT's Project Athena. It is used to share information
about various systems databases, such as users, groups, printers
and so on.
</p></td>
d6232 37
a6268 20
<p>The owner name is often implicit, rather than forming an integral
part of the RR.  For example, many name servers internally form tree
or hash structures for the name space, and chain RRs off nodes.
 The remaining RR parts are the fixed header (type, class, TTL)
which is consistent for all RRs, and a variable part (RDATA) that
fits the needs of the resource being described.</p>
<p>The meaning of the TTL field is a time limit on how long an
RR can be kept in a cache.  This limit does not apply to authoritative
data in zones; it is also timed out, but by the refreshing policies
for the zone.  The TTL is assigned by the administrator for the
zone where the data originates.  While short TTLs can be used to
minimize caching, and a zero TTL prohibits caching, the realities
of Internet performance suggest that these times should be on the
order of days for the typical host.  If a change can be anticipated,
the TTL can be reduced prior to the change to minimize inconsistency
during the change, and then increased back to its former value following
the change.</p>
<p>The data in the RDATA section of RRs is carried as a combination
of binary strings and domain names.  The domain names are frequently
used as "pointers" to other data in the DNS.</p>
d6272 38
a6309 20
<a name="id2590180"></a>Textual expression of RRs</h4></div></div></div>
<p>RRs are represented in binary form in the packets of the DNS
protocol, and are usually represented in highly encoded form when
stored in a name server or resolver.  In the examples provided in
RFC 1034, a style similar to that used in master files was employed
in order to show the contents of RRs.  In this format, most RRs
are shown on a single line, although continuation lines are possible
using parentheses.</p>
<p>The start of the line gives the owner of the RR.  If a line
begins with a blank, then the owner is assumed to be the same as
that of the previous RR.  Blank lines are often included for readability.</p>
<p>Following the owner, we list the TTL, type, and class of the
RR.  Class and type use the mnemonics defined above, and TTL is
an integer before the type field.  In order to avoid ambiguity in
parsing, type and class mnemonics are disjoint, TTLs are integers,
and the type mnemonic is always last. The IN class and TTL values
are often omitted from examples in the interests of clarity.</p>
<p>The resource data or RDATA section of the RR are given using
knowledge of the typical representation for the data.</p>
<p>For example, we might show the RRs carried in a message as:</p>
d6318 15
a6332 3
<td><p><code class="literal">ISI.EDU.</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10 VENERA.ISI.EDU.</code></p></td>
d6335 13
a6347 3
<td><p></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10 VAXA.ISI.EDU</code></p></td>
d6350 15
a6364 3
<td><p><code class="literal">VENERA.ISI.EDU</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">128.9.0.32</code></p></td>
d6367 13
a6379 3
<td><p></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.1.0.52</code></p></td>
d6382 15
a6396 3
<td><p><code class="literal">VAXA.ISI.EDU</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.2.0.27</code></p></td>
d6399 13
a6411 3
<td><p></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">128.9.0.33</code></p></td>
d6415 13
a6427 6
<p>The MX RRs have an RDATA section which consists of a 16-bit
number followed by a domain name.  The address RRs use a standard
IP address format to contain a 32-bit internet address.</p>
<p>The above example shows six RRs, with two RRs at each of three
domain names.</p>
<p>Similarly we might see:</p>
d6436 15
a6450 3
<td><p><code class="literal">XX.LCS.MIT.EDU. IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.44</code></p></td>
d6453 11
a6463 3
<td><p><code class="literal">CH</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">MIT.EDU. 2420</code></p></td>
d6467 4
a6470 2
<p>This example shows two addresses for <code class="literal">XX.LCS.MIT.EDU</code>,
each of a different class.</p>
d6475 38
a6512 22
<a name="id2590605"></a>Discussion of MX Records</h3></div></div></div>
<p>As described above, domain servers store information as a
series of resource records, each of which contains a particular
piece of information about a given domain name (which is usually,
but not always, a host). The simplest way to think of a RR is as
a typed pair of data, a domain name matched with a relevant datum,
and stored with some additional type information to help systems 
determine when the RR is relevant.</p>
<p>MX records are used to control delivery of email. The data
specified in the record is a priority and a domain name. The priority
controls the order in which email delivery is attempted, with the
lowest number first. If two priorities are the same, a server is
chosen randomly. If no servers at a given priority are responding,
the mail transport agent will fall back to the next largest priority.
Priority numbers do not have any absolute meaning &#8212; they are relevant
only respective to other MX records for that domain name. The domain
name given is the machine to which the mail will be delivered. It <span class="emphasis"><em>must</em></span> have
an associated A record &#8212; CNAME is not sufficient.</p>
<p>For a given domain, if there is both a CNAME record and an
MX record, the MX record is in error, and will be ignored. Instead,
the mail will be delivered to the server specified in the MX record
pointed to by the CNAME.</p>
d6523 125
a6647 33
<td><p><code class="literal">example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10</code></p></td>
<td><p><code class="literal">mail.example.com.</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10</code></p></td>
<td><p><code class="literal">mail2.example.com.</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">20</code></p></td>
<td><p><code class="literal">mail.backup.org.</code></p></td>
</tr>
<tr>
<td><p><code class="literal">mail.example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.1</code></p></td>
<td><p></p></td>
</tr>
<tr>
<td><p><code class="literal">mail2.example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.2</code></p></td>
<td><p></p></td>
d6651 6
a6656 5
<p>For example:</p>
<p>Mail delivery will be attempted to <code class="literal">mail.example.com</code> and
<code class="literal">mail2.example.com</code> (in
any order), and if neither of those succeed, delivery to <code class="literal">mail.backup.org</code> will
be attempted.</p>
d6661 8
a6668 5
<p>The time-to-live of the RR field is a 32-bit integer represented
in units of seconds, and is primarily used by resolvers when they
cache RRs. The TTL describes how long a RR can be cached before it
should be discarded. The following three types of TTL are currently
used in a zone file.</p>
a6675 1
<td><p>SOA</p></td>
d6677 16
a6692 6
<p>The last field in the SOA is the negative
caching TTL. This controls how long other servers will cache no-such-domain
(NXDOMAIN) responses from you.</p>
<p>The maximum time for
negative caching is 3 hours (3h).</p>
</td>
d6695 13
a6707 4
<td><p>$TTL</p></td>
<td><p>The $TTL directive at the top of the
zone file (before the SOA) gives a default TTL for every RR without
a specific TTL set.</p></td>
d6710 13
a6722 4
<td><p>RR TTLs</p></td>
<td><p>Each RR can have a TTL as the second
field in the RR, which will control how long other servers can cache
the it.</p></td>
d6726 4
a6729 2
<p>All of these TTLs default to units of seconds, though units
can be explicitly specified, for example, <code class="literal">1h30m</code>. </p>
d6733 16
a6748 12
<a name="id2591102"></a>Inverse Mapping in IPv4</h3></div></div></div>
<p>Reverse name resolution (that is, translation from IP address
to name) is achieved by means of the <span class="emphasis"><em>in-addr.arpa</em></span> domain
and PTR records. Entries in the in-addr.arpa domain are made in
least-to-most significant order, read left to right. This is the
opposite order to the way IP addresses are usually written. Thus,
a machine with an IP address of 10.1.2.3 would have a corresponding
in-addr.arpa name of
3.2.1.10.in-addr.arpa. This name should have a PTR resource record
whose data field is the name of the machine or, optionally, multiple
PTR records if the machine has more than one name. For example,
in the [<span class="optional">example.com</span>] domain:</p>
d6756 10
a6765 2
<td><p><code class="literal">$ORIGIN</code></p></td>
<td><p><code class="literal">2.1.10.in-addr.arpa</code></p></td>
d6768 10
a6777 2
<td><p><code class="literal">3</code></p></td>
<td><p><code class="literal">IN PTR foo.example.com.</code></p></td>
d6783 7
a6789 4
<p>The <span><strong class="command">$ORIGIN</strong></span> lines in the examples
are for providing context to the examples only-they do not necessarily
appear in the actual usage. They are only used here to indicate
that the example is relative to the listed origin.</p>
d6794 40
a6833 21
<a name="id2591208"></a>Other Zone File Directives</h3></div></div></div>
<p>The Master File Format was initially defined in RFC 1035 and
has subsequently been extended. While the Master File Format itself
is class independent all records in a Master File must be of the same
class.</p>
<p>Master File Directives include <span><strong class="command">$ORIGIN</strong></span>, <span><strong class="command">$INCLUDE</strong></span>,
and <span><strong class="command">$TTL.</strong></span></p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2591227"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$ORIGIN
</strong></span><em class="replaceable"><code>domain-name</code></em> [<span class="optional"> <em class="replaceable"><code>comment</code></em></span>]</p>
<p><span><strong class="command">$ORIGIN</strong></span> sets the domain name that will
be appended to any unqualified records. When a zone is first read
in there is an implicit <span><strong class="command">$ORIGIN</strong></span> &lt;<code class="varname">zone-name</code>&gt;<span><strong class="command">.</strong></span> The
current <span><strong class="command">$ORIGIN</strong></span> is appended to the domain specified
in the <span><strong class="command">$ORIGIN</strong></span> argument if it is not absolute.</p>
<pre class="programlisting">$ORIGIN example.com.
WWW     CNAME   MAIN-SERVER</pre>
<p>is equivalent to</p>
<pre class="programlisting">WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.</pre>
d6837 20
a6856 12
<a name="id2591283"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$INCLUDE</strong></span>
<em class="replaceable"><code>filename</code></em> [<span class="optional">
<em class="replaceable"><code>origin</code></em> </span>] [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]</p>
<p>Read and process the file <code class="filename">filename</code> as
if it were included into the file at this point.  If <span><strong class="command">origin</strong></span> is
specified the file is processed with <span><strong class="command">$ORIGIN</strong></span> set
to that value, otherwise the current <span><strong class="command">$ORIGIN</strong></span> is
used.</p>
<p>The origin and the current domain name
revert to the values they had prior to the <span><strong class="command">$INCLUDE</strong></span> once
the file has been read.</p>
d6860 9
a6868 5
RFC 1035 specifies that the current origin should be restored after
an <span><strong class="command">$INCLUDE</strong></span>, but it is silent on whether the current
domain name should also be restored.  BIND 9 restores both of them.
This could be construed as a deviation from RFC 1035, a feature, or both.
</p>
d6873 15
a6887 7
<a name="id2591346"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$TTL</strong></span>
<em class="replaceable"><code>default-ttl</code></em> [<span class="optional">
<em class="replaceable"><code>comment</code></em> </span>]</p>
<p>Set the default Time To Live (TTL) for subsequent records
with undefined TTLs. Valid TTLs are of the range 0-2147483647 seconds.</p>
<p><span><strong class="command">$TTL</strong></span> is defined in RFC 2308.</p>
d6892 19
a6910 7
<a name="id2591377"></a><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
<p>Syntax: <span><strong class="command">$GENERATE</strong></span> <em class="replaceable"><code>range</code></em> <em class="replaceable"><code>lhs</code></em> [<span class="optional"><em class="replaceable"><code>ttl</code></em></span>] [<span class="optional"><em class="replaceable"><code>class</code></em></span>] <em class="replaceable"><code>type</code></em> <em class="replaceable"><code>rhs</code></em> [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]</p>
<p><span><strong class="command">$GENERATE</strong></span> is used to create a series of
resource records that only differ from each other by an iterator. <span><strong class="command">$GENERATE</strong></span> can
be used to easily generate the sets of records required to support
sub /24 reverse delegations described in RFC 2317: Classless IN-ADDR.ARPA
delegation.</p>
d6914 3
a6916 1
<p>is equivalent to</p>
d6931 56
a6986 30
<td><p><span><strong class="command">range</strong></span></p></td>
<td><p>This can be one of two forms: start-stop
or start-stop/step. If the first form is used, then step is set to
        1. All of start, stop and step must be positive.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">lhs</strong></span></p></td>
<td>
<p><span><strong class="command">lhs</strong></span> describes the
owner name of the resource records to be created. Any single
<span><strong class="command">$</strong></span> (dollar sign) symbols
within the <span><strong class="command">lhs</strong></span> side are replaced by the iterator
value.
To get a $ in the output you need to escape the <span><strong class="command">$</strong></span>
using a backslash <span><strong class="command">\</strong></span>,
e.g. <span><strong class="command">\$</strong></span>. The <span><strong class="command">$</strong></span> may optionally be followed
by modifiers which change the offset from the iterator, field width and base. 
Modifiers are introduced by a <span><strong class="command">{</strong></span> immediately following the
<span><strong class="command">$</strong></span> as <span><strong class="command">${offset[,width[,base]]}</strong></span>.
For example, <span><strong class="command">${-20,3,d}</strong></span> which subtracts 20 from the current value,
prints the result as a decimal in a zero-padded field of width 3.  Available
output forms are decimal (<span><strong class="command">d</strong></span>), octal (<span><strong class="command">o</strong></span>)
and hexadecimal (<span><strong class="command">x</strong></span> or <span><strong class="command">X</strong></span> for uppercase).
The default modifier is <span><strong class="command">${0,0,d}</strong></span>.
If the <span><strong class="command">lhs</strong></span> is not
absolute, the current <span><strong class="command">$ORIGIN</strong></span> is appended to
the name.</p>
<p>For compatibility with earlier versions, <span><strong class="command">$$</strong></span> is still
recognized as indicating a literal $ in the output.</p>
</td>
a6988 1
<td><p><span><strong class="command">ttl</strong></span></p></td>
d6990 13
a7002 6
<p>Specifies the
	  ttl of the generated records. If not specified this will be
	  inherited using the normal ttl inheritance rules.</p>
	  <p><span><strong class="command">class</strong></span> and <span><strong class="command">ttl</strong></span> can be
	  entered in either order.</p>
</td>
a7004 1
<td><p><span><strong class="command">class</strong></span></p></td>
d7006 13
a7018 6
<p>Specifies the
	  class of the generated records.  This must match the zone class if
	  it is specified.</p>
	  <p><span><strong class="command">class</strong></span> and <span><strong class="command">ttl</strong></span> can be
	  entered in either order.</p>
</td>
d7021 9
a7029 3
<td><p><span><strong class="command">type</strong></span></p></td>
<td><p>At present the only supported types are
PTR, CNAME, DNAME, A, AAAA and NS.</p></td>
d7032 9
a7040 3
<td><p><span><strong class="command">rhs</strong></span></p></td>
<td><p>A domain name. It is processed
similarly to lhs.</p></td>
d7044 49
a7092 3
<p>The <span><strong class="command">$GENERATE</strong></span> directive is a <acronym class="acronym">BIND</acronym> extension
and not part of the standard zone file format.</p>
<p>BIND 8 does not support the optional TTL and CLASS fields.</p>
@


1.8
log
@resolve conflicts
@
text
@d2 1
a2 1
 - Copyright (C) 2004, 2005 Internet Systems Consortium, Inc. ("ISC")
d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.56.2.12.2.30 2005/10/13 02:34:00 marka Exp $ -->
d22 1
a22 1
<meta name="generator" content="DocBook XSL Stylesheets V1.69.1">
d31 1
a31 1
<tr><th colspan="3" align="center">Chapter 6. <span class="acronym">BIND</span> 9 Configuration Reference</th></tr>
d44 1
a44 1
<a name="Bv9ARM.ch06"></a>Chapter 6. <span class="acronym">BIND</span> 9 Configuration Reference</h2></div></div></div>
d51 1
a51 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2551817">Comment Syntax</a></span></dt>
d55 1
a55 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552302"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
d58 1
a58 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552471"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
d60 11
a70 11
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552808"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552823"><span><strong class="command">include</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552845"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552867"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2553006"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2553269"><span><strong class="command">logging</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554474"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554547"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554610"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554653"><span><strong class="command">masters</strong></span> Statement Definition and Usage </a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554668"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
d74 3
a76 3
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562233"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562281"><span><strong class="command">trusted-keys</strong></span> Statement Definition
and Usage</a></span></dt>
d78 1
a78 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562349"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
d81 1
a81 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2563022"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
d83 1
a83 1
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2564557">Zone File</a></span></dt>
d86 1
a86 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2565990">Discussion of MX Records</a></span></dt>
d88 3
a90 3
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566487">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566593">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566761"><span class="acronym">BIND</span> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
d94 4
a97 4
<p><span class="acronym">BIND</span> 9 configuration is broadly similar
to <span class="acronym">BIND</span> 8; however, there are a few new areas
of configuration, such as views. <span class="acronym">BIND</span>
8 configuration files should work with few alterations in <span class="acronym">BIND</span>
d100 2
a101 2
found in <span class="acronym">BIND</span> 9.</p>
<p><span class="acronym">BIND</span> 4 configuration files can be converted to the new format
d107 1
a107 1
<p>Following is a list of elements used throughout the <span class="acronym">BIND</span> configuration
d170 1
a170 1
In some cases an asterisk (`*') character can be used as a placeholder to
d194 1
a194 1
<td><p>A non-negative 32 bit integer
d247 1
a247 1
<a name="id2551560"></a>Syntax</h4></div></div></div>
d256 1
a256 1
<a name="id2551587"></a>Definition and Usage</h4></div></div></div>
d306 3
a308 3
<a name="id2551817"></a>Comment Syntax</h3></div></div></div>
<p>The <span class="acronym">BIND</span> 9 comment syntax allows for comments to appear
anywhere that white space may appear in a <span class="acronym">BIND</span> configuration
d313 2
a314 2
<a name="id2551832"></a>Syntax</h4></div></div></div>
<pre class="programlisting">/* This is a <span class="acronym">BIND</span> comment as in C */</pre>
d317 1
a317 1
<pre class="programlisting">// This is a <span class="acronym">BIND</span> comment as in C++</pre>
d320 1
a320 1
<pre class="programlisting"># This is a <span class="acronym">BIND</span> comment as in common UNIX shells and perl</pre>
d326 3
a328 3
<a name="id2551861"></a>Definition and Usage</h4></div></div></div>
<p>Comments may appear anywhere that whitespace may appear in
a <span class="acronym">BIND</span> configuration file.</p>
d372 1
a372 1
<p>A <span class="acronym">BIND</span> 9 configuration consists of statements and comments.
d411 1
a411 1
also act as a light weight resolver daemon (<span><strong class="command">lwresd</strong></span>).</p></td>
d447 1
a447 1
<a name="id2552302"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
d498 1
a498 1
<a name="id2552471"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
d519 1
a519 1
      of <code class="literal">*</code> is interpreted as the IPv4 wildcard
d530 1
a530 1
      is used.  "<code class="literal">*</code>" cannot be used for
d560 1
a560 1
was specified as when <span class="acronym">BIND</span> was built).
d565 1
a565 1
      ease the transition of systems from <span class="acronym">BIND</span> 8,
d569 2
a570 2
It makes it possible to use an existing <span class="acronym">BIND</span> 8
configuration file in <span class="acronym">BIND</span> 9 unchanged,
d579 1
a579 1
      <span class="acronym">BIND</span> 8 configuration files, this feature does not
d587 2
a588 2
      <span><strong class="command">rndc</strong></span> commands then you need to create an
      <code class="filename">rndc.conf</code> and make it group readable by a group
d590 5
a594 4
<p>The UNIX control channel type of <span class="acronym">BIND</span> 8 is not supported
      in <span class="acronym">BIND</span> 9, and is not expected to be added in future
      releases.  If it is present in the controls statement from a
      <span class="acronym">BIND</span> 8 configuration file, it is ignored
d603 1
a603 1
<a name="id2552808"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
d608 1
a608 1
<a name="id2552823"></a><span><strong class="command">include</strong></span> Statement Definition and Usage</h3></div></div></div>
d619 1
a619 1
<a name="id2552845"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
d628 1
a628 1
<a name="id2552867"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
d660 1
a660 1
<a name="id2553006"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
d684 1
a684 1
<a name="id2553269"></a><span><strong class="command">logging</strong></span> Statement Definition and Usage</h3></div></div></div>
d698 2
a699 2
<p>In <span class="acronym">BIND</span> 9, the logging configuration is only established when
the entire configuration file has been parsed.  In <span class="acronym">BIND</span> 8, it was
d707 1
a707 1
<a name="id2553321"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
d727 2
a728 2
renaming them when opening.  For example, if you choose to keep 3 old versions
of the file <code class="filename">lamers.log</code> then just before it is opened
d798 1
a798 1
can be set to zero, and debugging mode turned off, by running <span><strong class="command">ndc
d857 1
a857 1
nonzero.  It normally writes to a file <code class="filename">named.run</code>
d899 1
a899 1
categories may be added in future <span class="acronym">BIND</span> releases.</p>
d976 1
a976 1
At startup, specifing the category <span><strong class="command">queries</strong></span> will also
d981 1
a981 1
The query log entry reports the client's IP address and port number.  The
d1022 1
a1022 1
<a name="id2554474"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
d1035 1
a1035 1
<a name="id2554547"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
d1037 2
a1038 2
server to also act as a lightweight resolver server, see
<a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.  There may be be multiple
d1063 1
a1063 1
<a name="id2554610"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
d1070 1
a1070 1
<a name="id2554653"></a><span><strong class="command">masters</strong></span> Statement Definition and Usage </h3></div></div></div>
d1076 1
a1076 1
<a name="id2554668"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
d1088 1
d1195 1
a1195 1
to be used by <span class="acronym">BIND</span>. This statement may appear only
d1215 1
a1215 1
It was used in <span class="acronym">BIND</span> 8 to
d1217 1
a1217 1
In <span class="acronym">BIND</span> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
d1236 4
d1263 1
a1263 1
in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a></p></dd>
d1286 1
a1286 1
If specified the listed type (A or AAAA) will be emitted before other glue
d1288 1
a1288 1
The default is not to preference any type (NONE).
d1293 2
a1294 2
Turn on enforcement of delegation-only in TLDs and root zones with an optional
exclude list.
d1297 1
a1297 1
Note some TLDs are NOT delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
d1313 1
a1313 1
When set <span><strong class="command">dnssec-lookaside</strong></span> provides the
d1324 2
a1325 2
Specify heirarchies which must / may not be secure (signed and validated).
If <strong class="userinput"><code>yes</code></strong> then named will only accept answers if they
d1327 1
a1327 1
If <strong class="userinput"><code>no</code></strong> then normal dnssec validation applies
d1341 1
a1341 1
a change from <span class="acronym">BIND</span> 8. If you are using very old DNS software, you
d1344 2
a1345 2
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to enable checking
for memory leaks on exit. <span class="acronym">BIND</span> 9 ignores the option and always performs
d1351 1
a1351 1
a dial on demand dialup link, which can be brought up by traffic
d1362 1
a1362 1
<p>If the zone is a master zone then the server will send out a NOTIFY 
d1437 1
a1437 1
<dd><p>In <span class="acronym">BIND</span> 8, this option
d1439 1
a1439 1
IQUERY. <span class="acronym">BIND</span> 9 never does IQUERY simulation.
d1450 1
a1450 1
flush / do not flush any pending zone writes.  The default is
d1455 1
a1455 1
in <span class="acronym">BIND</span> 8, and is ignored by <span class="acronym">BIND</span> 9.
d1469 2
a1470 2
 It was used in <span class="acronym">BIND</span> 8 to determine whether a transaction log was
kept for Incremental Zone Transfer. <span class="acronym">BIND</span> 9 maintains a transaction
d1482 1
a1482 1
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to allow
d1484 1
a1484 1
DNS standards.  <span class="acronym">BIND</span> 9.2 always strictly
d1528 1
a1528 1
<p>Not yet implemented in <span class="acronym">BIND</span> 9.</p>
d1533 1
a1533 1
<span class="acronym">BIND</span> 9 always allocates query IDs from a pool.
d1554 1
a1554 1
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>
d1560 1
a1560 1
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>
d1563 1
a1563 1
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to make
d1567 1
a1567 1
on an NT or DOS machine. In <span class="acronym">BIND</span> 9, both UNIX "<span><strong class="command">\n</strong></span>"
d1641 1
a1641 1
When 'yes' and the server loads a new version of a master
d1664 1
a1664 1
addresses refer to different machines.  If 'yes' named will not log
d1670 1
a1670 1
Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>
d1676 2
a1677 2
Specify whether query logging should be started when named start.
If <span><strong class="command">querylog</strong></span> is not specified then the query logging
d1688 1
a1688 1
For answer received from the network (<span><strong class="command">response</strong></span>)
d1691 1
a1691 1
<p>The rules for legal hostnames / mail domains are derived from RFC 952
d1705 1
a1705 1
<a name="id2557350"></a>Forwarding</h4></div></div></div>
d1717 2
a1718 2
the default, causes the server to query the forwarders first, and
if that doesn't answer the question the server will then look for
d1737 1
a1737 1
<a name="id2557400"></a>Dual-stack Servers</h4></div></div></div>
d1743 2
a1744 2
<dd><p>Specifies host names / addresses of machines with access to
both IPv4 and IPv6 transports. If a hostname is used the server must be able
d1746 1
a1746 1
stacked then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
d1818 1
a1818 1
<a name="id2557716"></a>Interfaces</h4></div></div></div>
d1868 1
a1868 1
<a name="id2557804"></a>Query Address</h4></div></div></div>
d1873 1
a1873 1
If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
d1876 3
a1878 3
a random unprivileged port will be used, <span><strong class="command">avoid-v4-udp-ports</strong></span>
and <span><strong class="command">avoid-v6-udp-ports</strong></span> can be used to prevent named
from selecting certain ports. The defaults are</p>
d1894 7
d1905 1
a1905 1
<p><span class="acronym">BIND</span> has mechanisms in place to facilitate zone transfers
d1965 3
a1967 2
such as <span class="acronym">BIND</span> 9, <span class="acronym">BIND</span> 8.x and patched
versions of <span class="acronym">BIND</span> 4.9.5. The default is
d2018 1
a2018 1
		  to be used you should set
d2034 2
a2035 1
<dd><p><span><strong class="command">notify-source</strong></span> determines
d2041 1
a2041 1
but can be overridden on a per-zone / per-view basis by including a
d2043 9
a2051 1
or <span><strong class="command">view</strong></span> block in the configuration file.</p></dd>
d2059 1
a2059 1
<a name="id2558398"></a>Bad UDP Port Lists</h4></div></div></div>
d2072 1
a2072 1
<a name="id2558414"></a>Operating System Resource Limits</h4></div></div></div>
d2079 2
a2080 2
that was in force when the server was started. See the description of
<span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.</p>
d2116 1
a2116 1
<a name="id2558584"></a>Server  Resource Limits</h4></div></div></div>
d2129 1
a2129 1
(<a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file approaches
d2134 1
a2134 1
<dd><p>In BIND 8, specifies the maximum number of host statistic
d2170 1
a2170 1
<a name="id2558765"></a>Periodic Task Intervals</h4></div></div></div>
d2176 1
a2176 1
If set to 0, no  periodic cleaning will occur.</p></dd>
d2201 1
a2201 1
<p>Not yet implemented in <span class="acronym">BIND</span>9.</p>
d2236 1
a2236 1
is not implemented in <span class="acronym">BIND</span> 9.
d2252 1
a2252 1
When a client is using a local server the sorting can be performed
d2305 1
a2305 1
to the behavior of the address sort in <span class="acronym">BIND</span> 4.9.x. Responses sent
d2332 1
a2332 1
If no name is specified, the default is "<span><strong class="command">*</strong></span>".</p>
d2370 1
a2370 1
is not yet fully implemented in <span class="acronym">BIND</span> 9.
d2383 1
a2383 1
Default is <code class="literal">600</code> (10 minutes). Maximum value is 
d2386 1
a2386 1
<dd><p>To reduce network traffic and increase performance
d2394 1
a2394 1
<dd><p><span><strong class="command">max-cache-ttl</strong></span> sets
d2400 1
a2400 1
is required for a request for the root servers to be accepted. Default
d2404 1
a2404 1
<p>Not implemented in <span class="acronym">BIND</span>9.</p>
d2436 1
a2436 1
size.  Valid values are 512 to 4096 (values outside this range will be
d2438 1
a2438 1
setting edns-udp-size to a non default value it to get UDP answers to
d2472 1
a2472 1
found by gethostname().  The primary purpose of such queries is to
d2485 1
a2485 1
use the hostname as found by gethostname().
d2493 1
a2493 1
<p>The statistics file generated by <span class="acronym">BIND</span> 9
d2495 1
a2495 1
generated by <span class="acronym">BIND</span> 8.
d2497 5
a2501 2
<p>The statistics dump begins with the line <span><strong class="command">+++ Statistics Dump
+++ (973798949)</strong></span>, where the number in parentheses is a standard
d2507 9
a2515 3
omitted for the default view).  The statistics dump ends
with the line <span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>, where the
number is identical to the number in the beginning line.</p>
d2631 2
a2632 2
more efficient, but is only known to be understood by <span class="acronym">BIND</span> 9, <span class="acronym">BIND</span>
8.x, and patched versions of <span class="acronym">BIND</span> 4.9.5. You can specify which method
d2658 1
a2658 1
Form more details, see the description of
d2665 1
a2665 1
<a name="id2562233"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
d2674 27
a2700 13
<a name="id2562281"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
and Usage</h3></div></div></div>
<p>The <span><strong class="command">trusted-keys</strong></span> statement defines DNSSEC
security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the public key for a non-authoritative
zone is known, but cannot be securely obtained through DNS, either
because it is the  DNS root zone or because its parent zone is unsigned.
Once a key has been configured as a trusted key, it is treated as
if it had been validated and proven secure. The resolver attempts
DNSSEC validation on all DNS data in subdomains of a security root.</p>
<p>The <span><strong class="command">trusted-keys</strong></span> statement can contain
multiple key entries, each consisting of the key's domain name,
flags, protocol, algorithm, and the base-64 representation of the
key data.</p>
d2717 1
a2717 1
<a name="id2562349"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
d2719 1
a2719 1
of <span class="acronym">BIND</span> 9 that lets a name server answer a DNS query differently
d2763 1
a2763 1
using <span><strong class="command">view</strong></span> statements.</p>
d2799 2
a2800 3
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] [<span class="optional">{ 
    type ( master | slave | hint | stub | forward | delegation-only ) ;
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
d2805 31
a2839 1
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
d2862 34
d2903 8
a2910 1
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
d2912 3
a2914 1
}</span>];
d2919 1
a2919 1
<a name="id2563022"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
d2922 1
a2922 1
<a name="id2563029"></a>Zone Types</h4></div></div></div>
d2948 1
a2948 1
recommended, since it often speeds server start-up and eliminates
d2951 1
a2951 1
use a two level naming scheme for zone file names. For example,
d2965 1
a2965 1
they are a feature specific to the <span class="acronym">BIND</span> implementation.
d2973 1
a2973 1
In <span class="acronym">BIND</span> 4/8, zone transfers of a parent zone
d2976 1
a2976 1
only in the master server for the parent zone. <span class="acronym">BIND</span>
d2978 1
a2978 1
way. Therefore, if a <span class="acronym">BIND</span> 9 master serving a parent
d2986 1
a2986 1
RFC1981 addressing may be configured with stub zones for
d3004 2
a3005 2
global <span><strong class="command">forward</strong></span> option (that is, "forward first
to", then "forward only", or vice versa, but want to use the same
d3021 1
a3021 1
<p>This is used to enforce the delegation only
d3023 1
a3023 1
is received without a explicit or implicit delegation in the authority
d3025 1
a3025 1
apex.  This SHOULD NOT be applied to leaf zones.</p>
d3035 1
a3035 1
<a name="id2563267"></a>Class</h4></div></div></div>
d3050 1
a3050 1
<a name="id2563434"></a>Zone Options</h4></div></div></div>
d3054 1
a3054 1
<span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a></p></dd>
d3057 1
a3057 1
<span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a></p></dd>
d3111 1
a3111 1
to <strong class="userinput"><code>yes</code></strong> then the zone will also be treated as if it
d3122 1
a3122 1
no forwarding is done for the zone; the global options are not used.</p></dd>
d3124 1
a3124 1
<dd><p>Was used in <span class="acronym">BIND</span> 8 to specify the name
d3126 1
a3126 1
<span class="acronym">BIND</span> 9 ignores the option and constructs the name of the journal
d3130 2
a3131 2
<dd><p>Was an undocumented option in <span class="acronym">BIND</span> 8.
Ignored in <span class="acronym">BIND</span> 9.</p></dd>
d3148 1
a3148 1
<dd><p>In <span class="acronym">BIND</span> 8, this option was intended for specifying
d3150 1
a3150 1
zones when they are loaded from disk. <span class="acronym">BIND</span> 9 does not verify signatures
d3161 1
a3161 1
<span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
d3165 1
a3165 1
<span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
d3169 1
a3169 1
<span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
d3173 1
a3173 1
<span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
d3177 1
a3177 1
<span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
d3198 1
a3198 1
<span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and Usage&#8221;</a></p></dd>
d3207 1
a3207 1
<p><span class="acronym">BIND</span> 9 supports two alternative methods of granting clients
d3212 1
a3212 1
way as in previous versions of <span class="acronym">BIND</span>. It grants given clients the
d3214 1
a3214 1
<p>The <span><strong class="command">update-policy</strong></span> clause is new in <span class="acronym">BIND</span>
d3298 1
a3298 1
<a name="id2564557"></a>Zone File</h2></div></div></div>
d3308 1
a3308 1
<a name="id2564576"></a>Resource Records</h4></div></div></div>
d3330 1
a3330 1
<td><p>an encoded 16 bit value that specifies
d3335 2
a3336 2
<td><p>the time to live of the RR. This field
is a 32 bit integer in units of seconds, and is primarily used by
d3342 1
a3342 1
<td><p>an encoded 16 bit value that identifies
d3434 1
a3434 1
a 16 bit preference value (lower is better)
d3567 1
a3567 1
<a name="id2565564"></a>Textual expression of RRs</h4></div></div></div>
d3626 1
a3626 1
<p>The MX RRs have an RDATA section which consists of a 16 bit
d3628 2
a3629 2
IP address format to contain a 32 bit internet address.</p>
<p>This example shows six RRs, with two RRs at each of three
d3657 1
a3657 1
<a name="id2565990"></a>Discussion of MX Records</h3></div></div></div>
d3734 1
a3734 1
<p>The time to live of the RR field is a 32 bit integer represented
d3774 1
a3774 1
<a name="id2566487"></a>Inverse Mapping in IPv4</h3></div></div></div>
d3812 1
a3812 1
<a name="id2566593"></a>Other Zone File Directives</h3></div></div></div>
d3821 1
a3821 1
<a name="id2566612"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
d3836 1
a3836 1
<a name="id2566667"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
d3860 1
a3860 1
<a name="id2566730"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
d3871 1
a3871 1
<a name="id2566761"></a><span class="acronym">BIND</span> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
d3898 1
a3898 1
or start-stop/step. If the first form is used then step is set to
d3905 2
a3906 1
owner name of the resource records to be created.      Any single <span><strong class="command">$</strong></span> symbols
d3915 2
a3916 2
e.g. <span><strong class="command">${-20,3,d}</strong></span> which subtracts 20 from the current value,
prints the result as a decimal in a zero padded field of with 3.  Available
d3923 2
a3924 2
<p>For compatibility with earlier versions <span><strong class="command">$$</strong></span> is still
recognized a indicating a literal $ in the output.</p>
d3930 1
a3930 1
<p><span><strong class="command">ttl</strong></span> specifies the
d3940 1
a3940 1
<p><span><strong class="command">class</strong></span> specifies the
d3954 1
a3954 1
<td><p>rhs is a domain name. It is processed
d3959 1
a3959 1
<p>The <span><strong class="command">$GENERATE</strong></span> directive is a <span class="acronym">BIND</span> extension
d3976 1
a3976 1
<td width="40%" align="left" valign="top">Chapter 5. The <span class="acronym">BIND</span> 9 Lightweight Resolver </td>
d3978 1
a3978 1
<td width="40%" align="right" valign="top"> Chapter 7. <span class="acronym">BIND</span> 9 Security Considerations</td>
@


1.7
log
@typos from alexey dobriyan;
ok jakob, who is passing these fixes upstream...
@
text
@d1 97
a97 118
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML
><HEAD
><TITLE
>BIND 9 Configuration Reference</TITLE
><META
NAME="GENERATOR"
CONTENT="Modular DocBook HTML Stylesheet Version 1.7"><LINK
REL="HOME"
TITLE="BIND 9 Administrator Reference Manual"
HREF="Bv9ARM.html"><LINK
REL="PREVIOUS"
TITLE="The BIND 9 Lightweight Resolver"
HREF="Bv9ARM.ch05.html"><LINK
REL="NEXT"
TITLE="BIND 9 Security Considerations"
HREF="Bv9ARM.ch07.html"></HEAD
><BODY
CLASS="chapter"
BGCOLOR="#FFFFFF"
TEXT="#000000"
LINK="#0000FF"
VLINK="#840084"
ALINK="#0000FF"
><DIV
CLASS="NAVHEADER"
><TABLE
SUMMARY="Header navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TH
COLSPAN="3"
ALIGN="center"
>BIND 9 Administrator Reference Manual</TH
></TR
><TR
><TD
WIDTH="10%"
ALIGN="left"
VALIGN="bottom"
><A
HREF="Bv9ARM.ch05.html"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="80%"
ALIGN="center"
VALIGN="bottom"
></TD
><TD
WIDTH="10%"
ALIGN="right"
VALIGN="bottom"
><A
HREF="Bv9ARM.ch07.html"
ACCESSKEY="N"
>Next</A
></TD
></TR
></TABLE
><HR
ALIGN="LEFT"
WIDTH="100%"></DIV
><DIV
CLASS="chapter"
><H1
><A
NAME="ch06"
></A
>Chapter 6. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 Configuration Reference</H1
><DIV
CLASS="TOC"
><DL
><DT
><B
>Table of Contents</B
></DT
><DT
>6.1. <A
HREF="Bv9ARM.ch06.html#configuration_file_elements"
>Configuration File Elements</A
></DT
><DT
>6.2. <A
HREF="Bv9ARM.ch06.html#Configuration_File_Grammar"
>Configuration File Grammar</A
></DT
><DT
>6.3. <A
HREF="Bv9ARM.ch06.html#AEN4050"
>Zone File</A
></DT
></DL
></DIV
><P
><ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 configuration is broadly similar
to <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8; however, there are a few new areas
of configuration, such as views. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>
8 configuration files should work with few alterations in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>
d100 2
a101 9
found in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.</P
><P
><ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 4 configuration files can be converted to the new format
d103 43
a145 153
<TT
CLASS="filename"
>contrib/named-bootconf/named-bootconf.sh</TT
>.</P
><DIV
CLASS="sect1"
><H1
CLASS="sect1"
><A
NAME="configuration_file_elements"
>6.1. Configuration File Elements</A
></H1
><P
>Following is a list of elements used throughout the <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> configuration
file documentation:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN1086"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="varname"
>acl_name</VAR
></P
></TD
><TD
><P
>The name of an <VAR
CLASS="varname"
>address_match_list</VAR
> as
defined by the <B
CLASS="command"
>acl</B
> statement.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>address_match_list</VAR
></P
></TD
><TD
><P
>A list of one or more <VAR
CLASS="varname"
>ip_addr</VAR
>, 
<VAR
CLASS="varname"
>ip_prefix</VAR
>, <VAR
CLASS="varname"
>key_id</VAR
>, 
or <VAR
CLASS="varname"
>acl_name</VAR
> elements, see
<A
HREF="Bv9ARM.ch06.html#address_match_lists"
>Section 6.1.1</A
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>domain_name</VAR
></P
></TD
><TD
><P
>A quoted string which will be used as
a DNS name, for example "<VAR
CLASS="literal"
>my.test.domain</VAR
>".</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>dotted_decimal</VAR
></P
></TD
><TD
><P
>One to four integers valued 0 through
255 separated by dots (`.'), such as <B
CLASS="command"
>123</B
>, 
<B
CLASS="command"
>45.67</B
> or <B
CLASS="command"
>89.123.45.67</B
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>ip4_addr</VAR
></P
></TD
><TD
><P
>An IPv4 address with exactly four elements
in <VAR
CLASS="varname"
>dotted_decimal</VAR
> notation.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>ip6_addr</VAR
></P
></TD
><TD
><P
>An IPv6 address, such as <B
CLASS="command"
>2001:db8::1234</B
>.
d155 3
a157 12
For example, a link-local address <B
CLASS="command"
>fe80::1</B
> on the
link attached to the interface <B
CLASS="command"
>ne0</B
>
can be specified as <B
CLASS="command"
>fe80::1%ne0</B
>.
d159 10
a168 40
ambiguity, and need to be disambiguated.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>ip_addr</VAR
></P
></TD
><TD
><P
>An <VAR
CLASS="varname"
>ip4_addr</VAR
> or <VAR
CLASS="varname"
>ip6_addr</VAR
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>ip_port</VAR
></P
></TD
><TD
><P
>An IP port <VAR
CLASS="varname"
>number</VAR
>.
<VAR
CLASS="varname"
>number</VAR
> is limited to 0 through 65535, with values
d171 5
a175 17
select a random high-numbered port.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>ip_prefix</VAR
></P
></TD
><TD
><P
>An IP network specified as an <VAR
CLASS="varname"
>ip_addr</VAR
>,
d177 18
a194 72
Trailing zeros in a <VAR
CLASS="varname"
>ip_addr</VAR
> may omitted.
For example, <B
CLASS="command"
>127/8</B
> is the network <B
CLASS="command"
>127.0.0.0</B
> with
netmask <B
CLASS="command"
>255.0.0.0</B
> and <B
CLASS="command"
>1.2.3.0/28</B
> is
network <B
CLASS="command"
>1.2.3.0</B
> with netmask <B
CLASS="command"
>255.255.255.240</B
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>key_id</VAR
></P
></TD
><TD
><P
>A <VAR
CLASS="varname"
>domain_name</VAR
> representing
the name of a shared key, to be used for transaction security.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>key_list</VAR
></P
></TD
><TD
><P
>A list of one or more <VAR
CLASS="varname"
>key_id</VAR
>s,
separated by semicolons and ending with a semicolon.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>number</VAR
></P
></TD
><TD
><P
>A non-negative 32 bit integer
d197 22
a218 81
be limited by the context in which it is used.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>path_name</VAR
></P
></TD
><TD
><P
>A quoted string which will be used as
a pathname, such as <TT
CLASS="filename"
>zones/master/my.test.domain</TT
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>size_spec</VAR
></P
></TD
><TD
><P
>A number, the word <KBD
CLASS="userinput"
>unlimited</KBD
>,
or the word <KBD
CLASS="userinput"
>default</KBD
>.</P
><P
>&#13;An <VAR
CLASS="varname"
>unlimited</VAR
> <VAR
CLASS="varname"
>size_spec</VAR
> requests unlimited
use, or the maximum available amount. A <VAR
CLASS="varname"
>default size_spec</VAR
> uses
the limit that was in force when the server was started.</P
><P
>A <VAR
CLASS="varname"
>number</VAR
> can
optionally be followed by a scaling factor: <KBD
CLASS="userinput"
>K</KBD
> or <KBD
CLASS="userinput"
>k</KBD
> for
kilobytes, <KBD
CLASS="userinput"
>M</KBD
> or <KBD
CLASS="userinput"
>m</KBD
> for
megabytes, and <KBD
CLASS="userinput"
>G</KBD
> or <KBD
CLASS="userinput"
>g</KBD
> for gigabytes,
which scale by 1024, 1024*1024, and 1024*1024*1024 respectively.</P
>
<P
>The value must be representable as a 64-bit unsigned integer
d220 31
a250 127
Using <VAR
CLASS="varname"
>unlimited</VAR
> is the best way
to safely set a really large number.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>yes_or_no</VAR
></P
></TD
><TD
><P
>Either <KBD
CLASS="userinput"
>yes</KBD
> or <KBD
CLASS="userinput"
>no</KBD
>.
The words <KBD
CLASS="userinput"
>true</KBD
> and <KBD
CLASS="userinput"
>false</KBD
> are
also accepted, as are the numbers <KBD
CLASS="userinput"
>1</KBD
> and <KBD
CLASS="userinput"
>0</KBD
>.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>dialup_option</VAR
></P
></TD
><TD
><P
>One of <KBD
CLASS="userinput"
>yes</KBD
>,
<KBD
CLASS="userinput"
>no</KBD
>, <KBD
CLASS="userinput"
>notify</KBD
>,
<KBD
CLASS="userinput"
>notify-passive</KBD
>, <KBD
CLASS="userinput"
>refresh</KBD
> or
<KBD
CLASS="userinput"
>passive</KBD
>.
When used in a zone, <KBD
CLASS="userinput"
>notify-passive</KBD
>,
<KBD
CLASS="userinput"
>refresh</KBD
>, and <KBD
CLASS="userinput"
>passive</KBD
>
are restricted to slave and stub zones.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="address_match_lists"
>6.1.1. Address Match Lists</A
></H2
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN1251"
>6.1.1.1. Syntax</A
></H3
><PRE
CLASS="programlisting"
><VAR
CLASS="varname"
>address_match_list</VAR
> = address_match_list_element ;
  [<SPAN
CLASS="optional"
> address_match_list_element; ... </SPAN
>]
<VAR
CLASS="varname"
>address_match_list_element</VAR
> = [<SPAN
CLASS="optional"
> ! </SPAN
>] (ip_address [<SPAN
CLASS="optional"
>/length</SPAN
>] |
d252 6
a257 12
</PRE
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN1259"
>6.1.1.2. Definition and Usage</A
></H3
><P
>Address match lists are primarily used to determine access
d259 1
a259 7
the <B
CLASS="command"
>listen-on</B
> and <B
CLASS="command"
>sortlist</B
>
d261 10
a270 34
which constitute an address match list can be any of the following:</P
><P
></P
><UL
><LI
><P
>an IP address (IPv4 or IPv6)</P
></LI
><LI
><P
>an IP prefix (in `/' notation)</P
></LI
><LI
><P
>a key ID, as defined by the <B
CLASS="command"
>key</B
> statement</P
></LI
><LI
><P
>the name of an address match list previously defined with
the <B
CLASS="command"
>acl</B
> statement</P
></LI
><LI
><P
>a nested address match list enclosed in braces</P
></LI
></UL
><P
>Elements can be negated with a leading exclamation mark (`!'),
d273 2
a274 3
the description of the acl statement.</P
><P
>The addition of the key clause made the name of this syntactic
d277 2
a278 3
the term "address match list" is still used throughout the documentation.</P
><P
>When a given IP address or prefix is compared to an address
d282 2
a283 3
and whether the element was negated.</P
><P
>When used as an access control list, a non-negated match allows
d285 4
a288 22
access is denied. The clauses <B
CLASS="command"
>allow-notify</B
>,
<B
CLASS="command"
>allow-query</B
>, <B
CLASS="command"
>allow-transfer</B
>,
<B
CLASS="command"
>allow-update</B
>, <B
CLASS="command"
>allow-update-forwarding</B
>,
and <B
CLASS="command"
>blackhole</B
> all
d291 2
a292 3
which do not match the list.</P
><P
>Because of the first-match aspect of the algorithm, an element
d296 1
a296 4
<B
CLASS="command"
>1.2.3/24; ! 1.2.3.13;</B
> the 1.2.3.13 element is
d299 1
a299 4
Using <B
CLASS="command"
>! 1.2.3.13; 1.2.3/24</B
> fixes
d301 8
a308 20
other 1.2.3.* hosts fall through.</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1290"
>6.1.2. Comment Syntax</A
></H2
><P
>The <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 comment syntax allows for comments to appear
anywhere that white space may appear in a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> configuration
d310 20
a329 49
in the C, C++, or shell/perl style.</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN1295"
>6.1.2.1. Syntax</A
></H3
><P
><PRE
CLASS="programlisting"
>/* This is a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> comment as in C */</PRE
>
<PRE
CLASS="programlisting"
>// This is a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> comment as in C++</PRE
>
<PRE
CLASS="programlisting"
># This is a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> comment as in common UNIX shells and perl</PRE
>
      </P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN1304"
>6.1.2.2. Definition and Usage</A
></H3
><P
>Comments may appear anywhere that whitespace may appear in
a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> configuration file.</P
><P
>C-style comments start with the two characters /* (slash,
d332 4
a335 8
a portion of a line or to span multiple lines.</P
><P
>C-style comments cannot be nested. For example, the following
is not valid because the entire comment ends with the first */:</P
><P
><PRE
CLASS="programlisting"
>/* This is the start of a comment.
d339 2
a340 4
</PRE
></P
><P
>C++-style comments start with the two characters // (slash,
d343 3
a345 7
comment span multiple lines, each line must use the // pair.</P
><P
>For example:</P
><P
><PRE
CLASS="programlisting"
>// This is the start of a comment.  The next line
d348 6
a353 15
</PRE
></P
><P
>Shell-style (or perl-style, if you prefer) comments start
with the character <VAR
CLASS="literal"
>#</VAR
> (number sign) and continue to the end of the
physical line, as in C++ comments.</P
><P
>For example:</P
><P
><PRE
CLASS="programlisting"
># This is the start of a comment.  The next line
d356 6
a361 23
</PRE
>
</P
><DIV
CLASS="warning"
><P
></P
><TABLE
CLASS="warning"
BORDER="1"
WIDTH="100%"
><TR
><TD
ALIGN="CENTER"
><B
>Warning</B
></TD
></TR
><TR
><TD
ALIGN="LEFT"
><P
>You cannot use the semicolon (`;') character
d364 9
a372 21
   statement.</P
></TD
></TR
></TABLE
></DIV
></DIV
></DIV
></DIV
><DIV
CLASS="sect1"
><H1
CLASS="sect1"
><A
NAME="Configuration_File_Grammar"
>6.2. Configuration File Grammar</A
></H1
><P
>A <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 configuration consists of statements and comments.
d376 73
a448 220
    terminated with a semicolon.</P
><P
>The following statements are supported:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN1328"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>acl</B
></P
></TD
><TD
><P
>defines a named IP address
matching list, for access control and other uses.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>controls</B
></P
></TD
><TD
><P
>declares control channels to be used
by the <B
CLASS="command"
>rndc</B
> utility.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>include</B
></P
></TD
><TD
><P
>includes a file.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>key</B
></P
></TD
><TD
><P
>specifies key information for use in
authentication and authorization using TSIG.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>logging</B
></P
></TD
><TD
><P
>specifies what the server logs, and where
the log messages are sent.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>lwres</B
></P
></TD
><TD
><P
>configures <B
CLASS="command"
>named</B
> to
also act as a light weight resolver daemon (<B
CLASS="command"
>lwresd</B
>).</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>masters</B
></P
></TD
><TD
><P
>defines a named masters list for
inclusion in stub and slave zone masters clauses.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>options</B
></P
></TD
><TD
><P
>controls global server configuration
options and sets defaults for other statements.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>server</B
></P
></TD
><TD
><P
>sets certain configuration options on
a per-server basis.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>trusted-keys</B
></P
></TD
><TD
><P
>defines trusted DNSSEC keys.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>view</B
></P
></TD
><TD
><P
>defines a view.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>zone</B
></P
></TD
><TD
><P
>defines a zone.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The <B
CLASS="command"
>logging</B
> and
    <B
CLASS="command"
>options</B
> statements may only occur once per
    configuration.</P
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1411"
>6.2.1. <B
CLASS="command"
>acl</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
><B
CLASS="command"
>acl</B
> acl-name { 
d451 7
a457 19
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="acl"
>6.2.2. <B
CLASS="command"
>acl</B
> Statement Definition and
Usage</A
></H2
><P
>The <B
CLASS="command"
>acl</B
> statement assigns a symbolic
d459 27
a485 73
      use of address match lists: Access Control Lists (ACLs).</P
><P
>Note that an address match list's name must be defined
      with <B
CLASS="command"
>acl</B
> before it can be used elsewhere; no
      forward references are allowed.</P
><P
>The following ACLs are built-in:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN1424"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>any</B
></P
></TD
><TD
><P
>Matches all hosts.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>none</B
></P
></TD
><TD
><P
>Matches no hosts.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>localhost</B
></P
></TD
><TD
><P
>Matches the IPv4 and IPv6 addresses of all network
interfaces on the system.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>localnets</B
></P
></TD
><TD
><P
>Matches any host on an IPv4 or IPv6 network
d489 21
a509 68
In such a case, <B
CLASS="command"
>localnets</B
> only matches the local
IPv6 addresses, just like <B
CLASS="command"
>localhost</B
>.
</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1455"
>6.2.3. <B
CLASS="command"
>controls</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
><B
CLASS="command"
>controls</B
> {
   inet ( ip_addr | * ) [<SPAN
CLASS="optional"
> port ip_port </SPAN
>] allow { <VAR
CLASS="replaceable"
> address_match_list </VAR
> }
                keys { <VAR
CLASS="replaceable"
> key_list </VAR
> };
   [<SPAN
CLASS="optional"
> inet ...; </SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="controls_statement_definition_and_usage"
>6.2.4. <B
CLASS="command"
>controls</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>controls</B
> statement declares control
d512 3
a514 10
      used by the <B
CLASS="command"
>rndc</B
> utility to send commands to
      and retrieve non-DNS results from a name server.</P
><P
>An <B
CLASS="command"
>inet</B
> control channel is a TCP
d516 4
a519 16
      <B
CLASS="command"
>ip_port</B
> on the specified
      <B
CLASS="command"
>ip_addr</B
>, which can be an IPv4 or IPv6
      address.  An <B
CLASS="command"
>ip_addr</B
>
      of <VAR
CLASS="literal"
>*</VAR
> is interpreted as the IPv4 wildcard
d522 4
a525 19
      use an <B
CLASS="command"
>ip_addr</B
> of <VAR
CLASS="literal"
>::</VAR
>.
      If you will only use <B
CLASS="command"
>rndc</B
> on the local host,
      using the loopback address (<VAR
CLASS="literal"
>127.0.0.1</VAR
>
      or <VAR
CLASS="literal"
>::1</VAR
>) is recommended for maximum
d527 8
a534 21
      </P
><P
>&#13;      If no port is specified, port 953
      is used.  "<VAR
CLASS="literal"
>*</VAR
>" cannot be used for
      <B
CLASS="command"
>ip_port</B
>.</P
><P
>The ability to issue commands over the control channel is
      restricted by the <B
CLASS="command"
>allow</B
> and
      <B
CLASS="command"
>keys</B
> clauses. Connections to the control
d536 3
a538 12
      <B
CLASS="command"
>address_match_list</B
>.  This is for simple
      IP address based filtering only; any <B
CLASS="command"
>key_id</B
>
      elements of the <B
CLASS="command"
>address_match_list</B
> are
d540 6
a545 19
      </P
><P
>The primary authorization mechanism of the command
      channel is the <B
CLASS="command"
>key_list</B
>, which contains
      a list of <B
CLASS="command"
>key_id</B
>s.
      Each <B
CLASS="command"
>key_id</B
> in
      the <B
CLASS="command"
>key_list</B
> is authorized to execute
d547 6
a552 21
      See <A
HREF="Bv9ARM.ch03.html#rndc"
>Remote Name Daemon Control application</A
> in
      <A
HREF="Bv9ARM.ch03.html#admin_tools"
>Section 3.3.1.2</A
>) for information about
      configuring keys in <B
CLASS="command"
>rndc</B
>.</P
><P
>&#13;If no <B
CLASS="command"
>controls</B
> statement is present,
<B
CLASS="command"
>named</B
> will set up a default
d555 11
a565 45
In this case, and also when the <B
CLASS="command"
>controls</B
> statement
is present but does not have a <B
CLASS="command"
>keys</B
> clause,
<B
CLASS="command"
>named</B
> will attempt to load the command channel key
from the file <TT
CLASS="filename"
>rndc.key</TT
> in
<TT
CLASS="filename"
>/etc</TT
> (or whatever <VAR
CLASS="varname"
>sysconfdir</VAR
>
was specified as when <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> was built).
To create a <TT
CLASS="filename"
>rndc.key</TT
> file, run
<KBD
CLASS="userinput"
>rndc-confgen -a</KBD
>.
</P
><P
>The <TT
CLASS="filename"
>rndc.key</TT
> feature was created to
      ease the transition of systems from <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8,
d567 1
a567 4
      and thus did not have a <B
CLASS="command"
>keys</B
> clause.
d569 5
a573 20
It makes it possible to use an existing <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8
configuration file in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 unchanged,
and still have <B
CLASS="command"
>rndc</B
> work the same way
<B
CLASS="command"
>ndc</B
> worked in BIND 8, simply by executing the
command <KBD
CLASS="userinput"
>rndc-confgen -a</KBD
> after BIND 9 is
d575 3
a577 6
</P
><P
>&#13;      Since the <TT
CLASS="filename"
>rndc.key</TT
> feature
d579 1
a579 4
      <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 configuration files, this feature does not
d582 2
a583 8
      <TT
CLASS="filename"
>rndc.conf</TT
> with your own key if you wish to change
      those things.  The <TT
CLASS="filename"
>rndc.key</TT
> file also has its
d585 1
a585 4
      <B
CLASS="command"
>named</B
> is running as) can access it.  If you
d587 5
a591 18
      <B
CLASS="command"
>rndc</B
> commands then you need to create an
      <TT
CLASS="filename"
>rndc.conf</TT
> and make it group readable by a group
      that contains the users who should have access.</P
><P
>The UNIX control channel type of <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 is not supported
      in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, and is not expected to be added in future
d593 18
a610 58
      <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 configuration file, it is ignored
      and a warning is logged.</P
><P
>&#13;To disable the command channel, use an empty <B
CLASS="command"
>controls</B
>
statement: <B
CLASS="command"
>controls { };</B
>.
</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1534"
>6.2.5. <B
CLASS="command"
>include</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>include <VAR
CLASS="replaceable"
>filename</VAR
>;</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1539"
>6.2.6. <B
CLASS="command"
>include</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>include</B
> statement inserts the
      specified file at the point where the <B
CLASS="command"
>include</B
>
      statement is encountered. The <B
CLASS="command"
>include</B
>
d614 16
a629 50
      that are readable only by the name server.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1546"
>6.2.7. <B
CLASS="command"
>key</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>key <VAR
CLASS="replaceable"
>key_id</VAR
> {
    algorithm <VAR
CLASS="replaceable"
>string</VAR
>;
    secret <VAR
CLASS="replaceable"
>string</VAR
>;
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1553"
>6.2.8. <B
CLASS="command"
>key</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>key</B
> statement defines a shared
secret key for use with TSIG (see <A
HREF="Bv9ARM.ch04.html#tsig"
>Section 4.5</A
>)
d631 6
a636 18
(see <A
HREF="Bv9ARM.ch06.html#controls_statement_definition_and_usage"
>Section 6.2.4</A
>).
</P
><P
>&#13;The <B
CLASS="command"
>key</B
> statement can occur at the top level
of the configuration file or inside a <B
CLASS="command"
>view</B
> 
statement.  Keys defined in top-level <B
CLASS="command"
>key</B
>
d638 2
a639 8
a <B
CLASS="command"
>controls</B
> statement
(see <A
HREF="Bv9ARM.ch06.html#controls_statement_definition_and_usage"
>Section 6.2.4</A
>)
d641 2
a642 6
</P
><P
>The <VAR
CLASS="replaceable"
>key_id</VAR
>, also known as the
d644 1
a644 4
be used in a <B
CLASS="command"
>server</B
>
d648 2
a649 6
matching this name, algorithm, and secret.</P
><P
>The <VAR
CLASS="replaceable"
>algorithm_id</VAR
> is a string
d652 2
a653 8
<VAR
CLASS="literal"
>hmac-md5</VAR
>.  The
<VAR
CLASS="replaceable"
>secret_string</VAR
> is the secret to be
d655 18
a672 124
string.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1573"
>6.2.9. <B
CLASS="command"
>logging</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
><B
CLASS="command"
>logging</B
> {
   [ <B
CLASS="command"
>channel</B
> <VAR
CLASS="replaceable"
>channel_name</VAR
> {
     ( <B
CLASS="command"
>file</B
> <VAR
CLASS="replaceable"
>path name</VAR
>
         [ <B
CLASS="command"
>versions</B
> ( <VAR
CLASS="replaceable"
>number</VAR
> | <VAR
CLASS="literal"
>unlimited</VAR
> ) ]
         [ <B
CLASS="command"
>size</B
> <VAR
CLASS="replaceable"
>size spec</VAR
> ]
       | <B
CLASS="command"
>syslog</B
> <VAR
CLASS="replaceable"
>syslog_facility</VAR
>
       | <B
CLASS="command"
>stderr</B
>
       | <B
CLASS="command"
>null</B
> );
     [ <B
CLASS="command"
>severity</B
> (<VAR
CLASS="option"
>critical</VAR
> | <VAR
CLASS="option"
>error</VAR
> | <VAR
CLASS="option"
>warning</VAR
> | <VAR
CLASS="option"
>notice</VAR
> |
                 <VAR
CLASS="option"
>info</VAR
> | <VAR
CLASS="option"
>debug</VAR
> [ <VAR
CLASS="replaceable"
>level</VAR
> ] | <VAR
CLASS="option"
>dynamic</VAR
> ); ]
     [ <B
CLASS="command"
>print-category</B
> <VAR
CLASS="option"
>yes</VAR
> or <VAR
CLASS="option"
>no</VAR
>; ]
     [ <B
CLASS="command"
>print-severity</B
> <VAR
CLASS="option"
>yes</VAR
> or <VAR
CLASS="option"
>no</VAR
>; ]
     [ <B
CLASS="command"
>print-time</B
> <VAR
CLASS="option"
>yes</VAR
> or <VAR
CLASS="option"
>no</VAR
>; ]
d674 2
a675 14
   [ <B
CLASS="command"
>category</B
> <VAR
CLASS="replaceable"
>category_name</VAR
> {
     <VAR
CLASS="replaceable"
>channel_name</VAR
> ; [ <VAR
CLASS="replaceable"
>channel_nam</VAR
>e ; ... ]
d679 7
a685 22
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1613"
>6.2.10. <B
CLASS="command"
>logging</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>logging</B
> statement configures a wide
variety of logging options for the name server. Its <B
CLASS="command"
>channel</B
> phrase
d687 6
a692 18
a name that can then be used with the <B
CLASS="command"
>category</B
> phrase
to select how various classes of messages are logged.</P
><P
>Only one <B
CLASS="command"
>logging</B
> statement is used to define
as many channels and categories as are wanted. If there is no <B
CLASS="command"
>logging</B
> statement,
the logging configuration will be:</P
><PRE
CLASS="programlisting"
>logging {
d696 4
a699 14
</PRE
><P
>In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, the logging configuration is only established when
the entire configuration file has been parsed.  In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8, it was
established as soon as the <B
CLASS="command"
>logging</B
> statement
d702 8
a709 27
channels, or to standard error if the "<VAR
CLASS="option"
>-g</VAR
>" option
was specified.</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN1629"
>6.2.10.1. The <B
CLASS="command"
>channel</B
> Phrase</A
></H3
><P
>All log output goes to one or more <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>channels</I
></SPAN
>;
you can make as many of them as you want.</P
><P
>Every channel definition must include a destination clause that
d714 4
a717 14
<B
CLASS="command"
>info</B
>), and whether to include a
<B
CLASS="command"
>named</B
>-generated time stamp, the category name
and/or severity level (the default is not to include any).</P
><P
>The <B
CLASS="command"
>null</B
> destination clause 
d719 2
a720 6
in that case, other options for the channel are meaningless.</P
><P
>The <B
CLASS="command"
>file</B
> destination clause directs the channel
d723 3
a725 10
of the file will be saved each time the file is opened.</P
><P
>If you use the <B
CLASS="command"
>versions</B
> log file option, then
<B
CLASS="command"
>named</B
> will retain that many backup versions of the file by
d727 6
a732 30
of the file <TT
CLASS="filename"
>lamers.log</TT
> then just before it is opened
<TT
CLASS="filename"
>lamers.log.1</TT
> is renamed to
<TT
CLASS="filename"
>lamers.log.2</TT
>, <TT
CLASS="filename"
>lamers.log.0</TT
> is renamed
to <TT
CLASS="filename"
>lamers.log.1</TT
>, and <TT
CLASS="filename"
>lamers.log</TT
> is
renamed to <TT
CLASS="filename"
>lamers.log.0</TT
>.
You can say <B
CLASS="command"
>versions unlimited</B
> to not limit
d734 1
a734 4
If a <B
CLASS="command"
>size</B
> option is associated with the log file,
d737 4
a740 14
log file is simply appended.</P
><P
>The <B
CLASS="command"
>size</B
> option for files is used to limit log
growth. If the file ever exceeds the size, then <B
CLASS="command"
>named</B
> will
stop writing to the file unless it has a <B
CLASS="command"
>versions</B
> option
d743 1
a743 4
<B
CLASS="command"
>versions</B
> option, no more data will be written to the log
d746 4
a749 13
file.</P
><P
>Example usage of the <B
CLASS="command"
>size</B
> and
<B
CLASS="command"
>versions</B
> options:</P
><PRE
CLASS="programlisting"
>channel an_example_channel {
d754 2
a755 6
</PRE
><P
>The <B
CLASS="command"
>syslog</B
> destination clause directs the
d757 9
a765 72
syslog facility as described in the <B
CLASS="command"
>syslog</B
> man
page. Known facilities are <B
CLASS="command"
>kern</B
>, <B
CLASS="command"
>user</B
>,
<B
CLASS="command"
>mail</B
>, <B
CLASS="command"
>daemon</B
>, <B
CLASS="command"
>auth</B
>,
<B
CLASS="command"
>syslog</B
>, <B
CLASS="command"
>lpr</B
>, <B
CLASS="command"
>news</B
>,
<B
CLASS="command"
>uucp</B
>, <B
CLASS="command"
>cron</B
>, <B
CLASS="command"
>authpriv</B
>,
<B
CLASS="command"
>ftp</B
>, <B
CLASS="command"
>local0</B
>, <B
CLASS="command"
>local1</B
>,
<B
CLASS="command"
>local2</B
>, <B
CLASS="command"
>local3</B
>, <B
CLASS="command"
>local4</B
>,
<B
CLASS="command"
>local5</B
>, <B
CLASS="command"
>local6</B
> and
<B
CLASS="command"
>local7</B
>, however not all facilities are supported on
d767 6
a772 25
How <B
CLASS="command"
>syslog</B
> will handle messages sent to
this facility is described in the <B
CLASS="command"
>syslog.conf</B
> man
page. If you have a system which uses a very old version of <B
CLASS="command"
>syslog</B
> that
only uses two arguments to the <B
CLASS="command"
>openlog()</B
> function,
then this clause is silently ignored.</P
><P
>The <B
CLASS="command"
>severity</B
> clause works like <B
CLASS="command"
>syslog</B
>'s
d774 1
a774 4
straight to a file rather than using <B
CLASS="command"
>syslog</B
>.
d777 2
a778 9
will be accepted.</P
><P
>If you are using <B
CLASS="command"
>syslog</B
>, then the <B
CLASS="command"
>syslog.conf</B
> priorities
d780 7
a786 38
defining a channel facility and severity as <B
CLASS="command"
>daemon</B
> and <B
CLASS="command"
>debug</B
> but
only logging <B
CLASS="command"
>daemon.warning</B
> via <B
CLASS="command"
>syslog.conf</B
> will
cause messages of severity <B
CLASS="command"
>info</B
> and <B
CLASS="command"
>notice</B
> to
be dropped. If the situation were reversed, with <B
CLASS="command"
>named</B
> writing
messages of only <B
CLASS="command"
>warning</B
> or higher, then <B
CLASS="command"
>syslogd</B
> would
print all messages it received from the channel.</P
><P
>The <B
CLASS="command"
>stderr</B
> destination clause directs the
d789 2
a790 3
when debugging a configuration.</P
><P
>The server can supply extensive debugging information when
d793 3
a795 12
level is set either by starting the <B
CLASS="command"
>named</B
> server
with the <VAR
CLASS="option"
>-d</VAR
> flag followed by a positive integer,
or by running <B
CLASS="command"
>rndc trace</B
>.
d797 2
a798 5
can be set to zero, and debugging mode turned off, by running <B
CLASS="command"
>ndc
notrace</B
>. All debugging messages in the server have a debug
d800 2
a801 4
that specify a specific debug severity, for example:</P
><PRE
CLASS="programlisting"
>channel specific_debug_level {
d805 2
a806 3
</PRE
><P
>will get debugging output of level 3 or less any time the
d808 9
a816 34
level. Channels with <B
CLASS="command"
>dynamic</B
> severity use the
server's global debug level to determine what messages to print.</P
><P
>If <B
CLASS="command"
>print-time</B
> has been turned on, then
the date and time will be logged. <B
CLASS="command"
>print-time</B
> may
be specified for a <B
CLASS="command"
>syslog</B
> channel, but is usually
pointless since <B
CLASS="command"
>syslog</B
> also prints the date and
time. If <B
CLASS="command"
>print-category</B
> is requested, then the
category of the message will be logged as well. Finally, if <B
CLASS="command"
>print-severity</B
> is
on, then the severity level of the message will be logged. The <B
CLASS="command"
>print-</B
> options may
d818 8
a825 24
order: time, category, severity. Here is an example where all three <B
CLASS="command"
>print-</B
> options
are on:</P
><P
><SAMP
CLASS="computeroutput"
>28-Feb-2000 15:05:32.863 general: notice: running</SAMP
></P
><P
>There are four predefined channels that are used for
<B
CLASS="command"
>named</B
>'s default logging as follows. How they are
used is described in <A
HREF="Bv9ARM.ch06.html#the_category_phrase"
>Section 6.2.10.2</A
>.
</P
><PRE
CLASS="programlisting"
>channel default_syslog {
d853 2
a854 6
</PRE
><P
>The <B
CLASS="command"
>default_debug</B
> channel has the special
d856 6
a861 22
nonzero.  It normally writes to a file <TT
CLASS="filename"
>named.run</TT
>
in the server's working directory.</P
><P
>For security reasons, when the "<VAR
CLASS="option"
>-u</VAR
>"
command line option is used, the <TT
CLASS="filename"
>named.run</TT
> file
is created only after <B
CLASS="command"
>named</B
> has changed to the
new UID, and any debug output generated while <B
CLASS="command"
>named</B
> is
d863 3
a865 7
to capture this output, you must run the server with the "<VAR
CLASS="option"
>-g</VAR
>"
option and redirect standard error to a file.</P
><P
>Once a channel is defined, it cannot be redefined. Thus you
d867 6
a872 15
the default logging by pointing categories at channels you have defined.</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="the_category_phrase"
>6.2.10.2. The <B
CLASS="command"
>category</B
> Phrase</A
></H3
><P
>There are many categories, so you can send the logs you want
d875 1
a875 4
in that category will be sent to the <B
CLASS="command"
>default</B
> category
d877 4
a880 7
"default default" is used:</P
><PRE
CLASS="programlisting"
>category default { default_syslog; default_debug; };
</PRE
><P
>As an example, let's say you want to log security events to
d882 2
a883 4
specify the following:</P
><PRE
CLASS="programlisting"
>channel my_security_channel {
d891 3
a893 9
};</PRE
><P
>To discard all messages in a category, specify the <B
CLASS="command"
>null</B
> channel:</P
><PRE
CLASS="programlisting"
>category xfer-out { null; };
d895 2
a896 3
</PRE
><P
>Following are the available categories and brief descriptions
d898 10
a907 27
categories may be added in future <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> releases.</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN1753"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>default</B
></P
></TD
><TD
><P
>The default category defines the logging
d909 46
a954 142
defined.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>general</B
></P
></TD
><TD
><P
>The catch-all. Many things still aren't
classified into categories, and they all end up here.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>database</B
></P
></TD
><TD
><P
>Messages relating to the databases used
internally by the name server to store zone and cache data.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>security</B
></P
></TD
><TD
><P
>Approval and denial of requests.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>config</B
></P
></TD
><TD
><P
>Configuration file parsing and processing.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>resolver</B
></P
></TD
><TD
><P
>DNS resolution, such as the recursive
lookups performed on behalf of clients by a caching name server.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>xfer-in</B
></P
></TD
><TD
><P
>Zone transfers the server is receiving.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>xfer-out</B
></P
></TD
><TD
><P
>Zone transfers the server is sending.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>notify</B
></P
></TD
><TD
><P
>The NOTIFY protocol.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>client</B
></P
></TD
><TD
><P
>Processing of client requests.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>unmatched</B
></P
></TD
><TD
><P
>Messages that named was unable to determine the
class of or for which there was no matching <B
CLASS="command"
>view</B
>.
A one line summary is also logged to the <B
CLASS="command"
>client</B
> category.
d956 21
a976 66
the <B
CLASS="command"
>null</B
> channel.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>network</B
></P
></TD
><TD
><P
>Network operations.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>update</B
></P
></TD
><TD
><P
>Dynamic updates.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>update-security</B
></P
></TD
><TD
><P
>Approval and denial of update requests.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>queries</B
></P
></TD
><TD
><P
>Specify where queries should be logged to.</P
>
<P
>&#13;At startup, specifing the category <B
CLASS="command"
>queries</B
> will also
enable query logging unless <B
CLASS="command"
>querylog</B
> option has been
d978 3
a980 4
</P
>
<P
>&#13;The query log entry reports the client's IP address and port number.  The
d983 10
a992 27
query was signed (S).</P
>
<PRE
CLASS="programlisting"
><SAMP
CLASS="computeroutput"
>client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</SAMP
>
<SAMP
CLASS="computeroutput"
>client ::1#62537: query: www.example.net IN AAAA -SE</SAMP
>
</PRE
>
</TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>dispatch</B
></P
></TD
><TD
><P
>Dispatching of incoming packets to the
d994 10
a1003 28
</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>dnssec</B
></P
></TD
><TD
><P
>DNSSEC and TSIG protocol processing.
</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>lame-servers</B
></P
></TD
><TD
><P
>Lame servers.  These are misconfigurations
d1006 5
a1010 14
</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>delegation-only</B
></P
></TD
><TD
><P
>Delegation only.  Logs queries that have have
d1012 24
a1035 111
a <B
CLASS="command"
>delegation-only</B
> in a hint or stub zone declaration.
</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1883"
>6.2.11. <B
CLASS="command"
>lwres</B
> Statement Grammar</A
></H2
><P
> This is the grammar of the <B
CLASS="command"
>lwres</B
>
statement in the <TT
CLASS="filename"
>named.conf</TT
> file:</P
><PRE
CLASS="programlisting"
><B
CLASS="command"
>lwres</B
> {
    [<SPAN
CLASS="optional"
> listen-on { <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> view <VAR
CLASS="replaceable"
>view_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> search { <VAR
CLASS="replaceable"
>domain_name</VAR
> ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>domain_name</VAR
> ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> ndots <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1907"
>6.2.12. <B
CLASS="command"
>lwres</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>lwres</B
> statement configures the name
d1037 4
a1040 14
<A
HREF="Bv9ARM.ch05.html#lwresd"
>Section 5.2</A
>.  There may be be multiple
<B
CLASS="command"
>lwres</B
> statements configuring
lightweight resolver servers with different properties.</P
><P
>The <B
CLASS="command"
>listen-on</B
> statement specifies a list of
d1044 2
a1045 6
port 921.</P
><P
>The <B
CLASS="command"
>view</B
> statement binds this instance of a
d1049 8
a1056 28
used, and if there is no default view, an error is triggered.</P
><P
>The <B
CLASS="command"
>search</B
> statement is equivalent to the
<B
CLASS="command"
>search</B
> statement in
<TT
CLASS="filename"
>/etc/resolv.conf</TT
>.  It provides a list of domains
which are appended to relative names in queries.</P
><P
>The <B
CLASS="command"
>ndots</B
> statement is equivalent to the
<B
CLASS="command"
>ndots</B
> statement in
<TT
CLASS="filename"
>/etc/resolv.conf</TT
>.  It indicates the minimum
d1058 137
a1194 1072
exact match lookup before search path elements are appended.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1926"
>6.2.13. <B
CLASS="command"
>masters</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>&#13;<B
CLASS="command"
>masters</B
> <VAR
CLASS="replaceable"
>name</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] { ( <VAR
CLASS="replaceable"
>masters_list</VAR
> | <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] [<SPAN
CLASS="optional"
>key <VAR
CLASS="replaceable"
>key</VAR
></SPAN
>] ) ; [<SPAN
CLASS="optional"
>...</SPAN
>] } ; 
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1941"
>6.2.14. <B
CLASS="command"
>masters</B
> Statement Definition and Usage</A
></H2
><P
><B
CLASS="command"
>masters</B
> lists allow for a common set of masters
to be easily used by multiple stub and slave zones.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1946"
>6.2.15. <B
CLASS="command"
>options</B
> Statement Grammar</A
></H2
><P
>This is the grammar of the <B
CLASS="command"
>options</B
>
statement in the <TT
CLASS="filename"
>named.conf</TT
> file:</P
><PRE
CLASS="programlisting"
>options {
    [<SPAN
CLASS="optional"
> version <VAR
CLASS="replaceable"
>version_string</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> hostname <VAR
CLASS="replaceable"
>hostname_string</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> server-id <VAR
CLASS="replaceable"
>server_id_string</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> directory <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> key-directory <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> named-xfer <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> tkey-domain <VAR
CLASS="replaceable"
>domainname</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> tkey-dhkey <VAR
CLASS="replaceable"
>key_name</VAR
> <VAR
CLASS="replaceable"
>key_tag</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dump-file <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> memstatistics-file <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> pid-file <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> statistics-file <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> zone-statistics <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> auth-nxdomain <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> deallocate-on-exit <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dialup <VAR
CLASS="replaceable"
>dialup_option</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> fake-iquery <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> fetch-glue <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> flush-zones-on-shutdown <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> has-old-clients <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> host-statistics <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> host-statistics-max <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> minimal-responses <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> multiple-cnames <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify <VAR
CLASS="replaceable"
>yes_or_no</VAR
> | <VAR
CLASS="replaceable"
>explicit</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> recursion <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> rfc2308-type1 <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> use-id-pool <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> maintain-ixfr-base <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-enable <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-lookaside <VAR
CLASS="replaceable"
>domain</VAR
> trust-anchor <VAR
CLASS="replaceable"
>domain</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-must-be-secure <VAR
CLASS="replaceable"
>domain yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> forward ( <VAR
CLASS="replaceable"
>only</VAR
> | <VAR
CLASS="replaceable"
>first</VAR
> ); </SPAN
>]
    [<SPAN
CLASS="optional"
> forwarders { <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> dual-stack-servers [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] { ( <VAR
CLASS="replaceable"
>domain_name</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] | <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ) ; ... }; </SPAN
>]
    [<SPAN
CLASS="optional"
> check-names ( <VAR
CLASS="replaceable"
>master</VAR
> | <VAR
CLASS="replaceable"
>slave</VAR
> | <VAR
CLASS="replaceable"
>response</VAR
> )( <VAR
CLASS="replaceable"
>warn</VAR
> | <VAR
CLASS="replaceable"
>fail</VAR
> | <VAR
CLASS="replaceable"
>ignore</VAR
> ); </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-notify { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-query { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-transfer { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-recursion { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-update-forwarding { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-v6-synthesis { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> blackhole { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> avoid-v4-udp-ports { <VAR
CLASS="replaceable"
>port_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> avoid-v6-udp-ports { <VAR
CLASS="replaceable"
>port_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> listen-on [<SPAN
CLASS="optional"
> port <VAR
CLASS="replaceable"
>ip_port</VAR
> </SPAN
>] { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> listen-on-v6 [<SPAN
CLASS="optional"
> port <VAR
CLASS="replaceable"
>ip_port</VAR
> </SPAN
>] { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> query-source [<SPAN
CLASS="optional"
> address ( <VAR
CLASS="replaceable"
>ip_addr</VAR
> | <VAR
CLASS="replaceable"
>*</VAR
> ) </SPAN
>] [<SPAN
CLASS="optional"
> port ( <VAR
CLASS="replaceable"
>ip_port</VAR
> | <VAR
CLASS="replaceable"
>*</VAR
> ) </SPAN
>]; </SPAN
>]
    [<SPAN
CLASS="optional"
> query-source-v6 [<SPAN
CLASS="optional"
> address ( <VAR
CLASS="replaceable"
>ip_addr</VAR
> | <VAR
CLASS="replaceable"
>*</VAR
> ) </SPAN
>] [<SPAN
CLASS="optional"
> port ( <VAR
CLASS="replaceable"
>ip_port</VAR
> | <VAR
CLASS="replaceable"
>*</VAR
> ) </SPAN
>]; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-time-in <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-time-out <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-idle-in <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-idle-out <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> tcp-clients <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> recursive-clients <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> serial-query-rate <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> serial-queries <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> tcp-listen-queue <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-format <VAR
CLASS="replaceable"
>( one-answer | many-answers )</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfers-in  <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfers-out <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfers-per-ns <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> alt-transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> alt-transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> use-alt-transfer-source <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> also-notify { <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-ixfr-log-size <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-journal-size <VAR
CLASS="replaceable"
>size_spec</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> coresize <VAR
CLASS="replaceable"
>size_spec</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> datasize <VAR
CLASS="replaceable"
>size_spec</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> files <VAR
CLASS="replaceable"
>size_spec</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> stacksize <VAR
CLASS="replaceable"
>size_spec</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> cleaning-interval <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> heartbeat-interval <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> interface-interval <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> statistics-interval <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> topology { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }</SPAN
>];
    [<SPAN
CLASS="optional"
> sortlist { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }</SPAN
>];
    [<SPAN
CLASS="optional"
> rrset-order { <VAR
CLASS="replaceable"
>order_spec</VAR
> ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>order_spec</VAR
> ; ... </SPAN
>] </SPAN
>] };
    [<SPAN
CLASS="optional"
> lame-ttl <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-ncache-ttl <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-cache-ttl <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> sig-validity-interval <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> min-roots <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> use-ixfr <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> provide-ixfr <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> request-ixfr <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> treat-cr-as-space <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> min-refresh-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-refresh-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> min-retry-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-retry-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> port <VAR
CLASS="replaceable"
>ip_port</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> additional-from-auth <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> additional-from-cache <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> random-device <VAR
CLASS="replaceable"
>path_name</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-cache-size <VAR
CLASS="replaceable"
>size_spec</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> match-mapped-addresses <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> preferred-glue ( <VAR
CLASS="replaceable"
>A</VAR
> | <VAR
CLASS="replaceable"
>AAAA</VAR
> | <VAR
CLASS="replaceable"
>NONE</VAR
> ); </SPAN
>]
    [<SPAN
CLASS="optional"
> edns-udp-size <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> root-delegation-only [<SPAN
CLASS="optional"
> exclude { <VAR
CLASS="replaceable"
>namelist</VAR
> } </SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> querylog <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> disable-algorithms <VAR
CLASS="replaceable"
>domain</VAR
> { <VAR
CLASS="replaceable"
>algorithm</VAR
>; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>algorithm</VAR
>; </SPAN
>] }; </SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="options"
>6.2.16. <B
CLASS="command"
>options</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>options</B
> statement sets up global options
to be used by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>. This statement may appear only
once in a configuration file. If there is no <B
CLASS="command"
>options</B
>
d1196 4
a1199 14
be used.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>directory</B
></DT
><DD
><P
>The working directory of the server.
d1202 1
a1202 4
output files (e.g. <TT
CLASS="filename"
>named.run</TT
>) is this directory.
d1204 4
a1207 14
to `<TT
CLASS="filename"
>.</TT
>', the directory from which the server
was started. The directory specified should be an absolute path.</P
></DD
><DT
><B
CLASS="command"
>key-directory</B
></DT
><DD
><P
>When performing dynamic update of secure zones, the
d1210 11
a1220 49
must be an absolute path.</P
></DD
><DT
><B
CLASS="command"
>named-xfer</B
></DT
><DD
><P
><SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>This option is obsolete.</I
></SPAN
>
It was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to
specify the pathname to the <B
CLASS="command"
>named-xfer</B
> program.
In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, no separate <B
CLASS="command"
>named-xfer</B
> program is
needed; its functionality is built into the name server.</P
></DD
><DT
><B
CLASS="command"
>tkey-domain</B
></DT
><DD
><P
>The domain appended to the names of all
shared keys generated with <B
CLASS="command"
>TKEY</B
>. When a client
requests a <B
CLASS="command"
>TKEY</B
> exchange, it may or may not specify
d1222 8
a1229 30
key will be "<VAR
CLASS="varname"
>client specified part</VAR
>" + 
"<VAR
CLASS="varname"
>tkey-domain</VAR
>".
Otherwise, the name of the shared key will be "<VAR
CLASS="varname"
>random hex
digits</VAR
>" + "<VAR
CLASS="varname"
>tkey-domain</VAR
>". In most cases,
the <B
CLASS="command"
>domainname</B
> should be the server's domain
name.</P
></DD
><DT
><B
CLASS="command"
>tkey-dhkey</B
></DT
><DD
><P
>The Diffie-Hellman key used by the server
d1231 1
a1231 4
of <B
CLASS="command"
>TKEY</B
>. The server must be able to load the
d1233 3
a1235 10
most cases, the keyname should be the server's host name.</P
></DD
><DT
><B
CLASS="command"
>dump-file</B
></DT
><DD
><P
>The pathname of the file the server dumps
d1237 4
a1240 17
<B
CLASS="command"
>rndc dumpdb</B
>.
If not specified, the default is <TT
CLASS="filename"
>named_dump.db</TT
>.</P
></DD
><DT
><B
CLASS="command"
>memstatistics-file</B
></DT
><DD
><P
>The pathname of the file the server writes memory
d1242 4
a1245 17
the default is <TT
CLASS="filename"
>named.memstats</TT
>.</P
></DD
><DT
><B
CLASS="command"
>pid-file</B
></DT
><DD
><P
>The pathname of the file the server writes its process ID
in. If not specified, the default is <TT
CLASS="filename"
>/var/run/named.pid</TT
>.
d1247 1
a1247 4
name server. Specifying <B
CLASS="command"
>pid-file none</B
> disables the
d1249 1
a1249 4
existing one will be removed.  Note that <B
CLASS="command"
>none</B
>
d1251 5
a1255 18
double quotes.</P
></DD
><DT
><B
CLASS="command"
>statistics-file</B
></DT
><DD
><P
>The pathname of the file the server appends statistics
to when instructed to do so using <B
CLASS="command"
>rndc stats</B
>.
If not specified, the default is <TT
CLASS="filename"
>named.stats</TT
> in the
d1257 4
a1260 13
in <A
HREF="Bv9ARM.ch06.html#statsfile"
>Section 6.2.16.17</A
></P
></DD
><DT
><B
CLASS="command"
>port</B
></DT
><DD
><P
>&#13;The UDP/TCP port number the server uses for 
d1265 4
a1268 10
</P
></DD
><DT
><B
CLASS="command"
>random-device</B
></DT
><DD
><P
>&#13;The source of entropy to be used by the server.  Entropy is primarily needed
d1270 1
a1270 1
zones.  This option specifies the device (or file) from which to read
d1273 1
a1273 4
<TT
CLASS="filename"
>/dev/random</TT
>
d1275 1
a1275 4
<B
CLASS="command"
>random-device</B
> option takes effect during
d1277 4
a1280 10
is ignored on subsequent reloads.</P
></DD
><DT
><B
CLASS="command"
>preferred-glue</B
></DT
><DD
><P
>&#13;If specified the listed type (A or AAAA) will be emitted before other glue
d1283 5
a1287 10
</P
></DD
><DT
><B
CLASS="command"
>root-delegation-only</B
></DT
><DD
><P
>&#13;Turn on enforcement of delegation-only in TLDs and root zones with an optional
d1289 6
a1294 7
</P
><P
>&#13;Note some TLDs are NOT delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
</P
><PRE
CLASS="programlisting"
>&#13;options {
d1297 6
a1302 14
</PRE
></DD
><DT
><B
CLASS="command"
>disable-algorithms</B
></DT
><DD
><P
>&#13;Disable the specified DNSSEC algorithms at and below the specified name.
Multiple <B
CLASS="command"
>disable-algorithms</B
> statements are allowed.
d1304 4
a1307 13
</P
></DD
><DT
><B
CLASS="command"
>dnssec-lookaside</B
></DT
><DD
><P
>&#13;When set <B
CLASS="command"
>dnssec-lookaside</B
> provides the
d1310 1
a1310 4
deepest <B
CLASS="command"
>dnssec-lookaside</B
>, and the normal dnssec validation
d1315 5
a1319 14
</P
></DD
><DT
><B
CLASS="command"
>dnssec-must-be-secure</B
></DT
><DD
><P
>&#13;Specify heirachies which must / may not be secure (signed and validated).
If <KBD
CLASS="userinput"
>yes</KBD
> then named will only accept answers if they
d1321 1
a1321 4
If <KBD
CLASS="userinput"
>no</KBD
> then normal dnssec validation applies
d1323 10
a1332 39
The specified domain must be under a <B
CLASS="command"
>trusted-key</B
> or
<B
CLASS="command"
>dnssec-lookaside</B
> must be active.
</P
></DD
></DL
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="boolean_options"
>6.2.16.1. Boolean Options</A
></H3
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>auth-nxdomain</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, then the <B
CLASS="command"
>AA</B
> bit
d1334 10
a1343 41
authoritative. The default is <KBD
CLASS="userinput"
>no</KBD
>; this is
a change from <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8. If you are using very old DNS software, you
may need to set it to <KBD
CLASS="userinput"
>yes</KBD
>.</P
></DD
><DT
><B
CLASS="command"
>deallocate-on-exit</B
></DT
><DD
><P
>This option was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to enable checking
for memory leaks on exit. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 ignores the option and always performs
the checks.</P
></DD
><DT
><B
CLASS="command"
>dialup</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, then the
d1348 1
a1348 4
happens in a short interval, once every <B
CLASS="command"
>heartbeat-interval</B
> and
d1350 7
a1356 24
zone maintenance traffic. The default is <KBD
CLASS="userinput"
>no</KBD
>.</P
><P
>The <B
CLASS="command"
>dialup</B
> option
may also be specified in the <B
CLASS="command"
>view</B
> and 
<B
CLASS="command"
>zone</B
> statements,
in which case it overrides the global <B
CLASS="command"
>dialup</B
>
option.</P
><P
>If the zone is a master zone then the server will send out a NOTIFY 
d1361 2
a1362 9
<B
CLASS="command"
>notify</B
> and <B
CLASS="command"
>also-notify</B
>.</P
><P
>If the
d1365 6
a1370 19
<B
CLASS="command"
>heartbeat-interval</B
> expires in addition to sending
NOTIFY requests.</P
><P
>Finer control can be achieved by using
<KBD
CLASS="userinput"
>notify</KBD
> which only sends NOTIFY messages,
<KBD
CLASS="userinput"
>notify-passive</KBD
> which sends NOTIFY messages and
suppresses the normal refresh queries, <KBD
CLASS="userinput"
>refresh</KBD
>
d1372 60
a1431 188
when the <B
CLASS="command"
>heartbeat-interval</B
> expires, and
<KBD
CLASS="userinput"
>passive</KBD
> which just disables normal refresh
processing.</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN2402"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>dialup mode</P
></TD
><TD
><P
>normal refresh</P
></TD
><TD
><P
>heart-beat refresh</P
></TD
><TD
><P
>heart-beat notify</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>no</B
> (default)</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>yes</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>yes</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>notify</B
></P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>refresh</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>passive</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>notify-passive</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>Note that normal NOTIFY processing is not affected by
<B
CLASS="command"
>dialup</B
>.</P
></DD
><DT
><B
CLASS="command"
>fake-iquery</B
></DT
><DD
><P
>In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8, this option
d1433 5
a1437 18
IQUERY. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 never does IQUERY simulation.
</P
></DD
><DT
><B
CLASS="command"
>fetch-glue</B
></DT
><DD
><P
>This option is obsolete.
In BIND 8, <KBD
CLASS="userinput"
>fetch-glue yes</KBD
>
d1441 3
a1443 10
and BIND 9 never does it.</P
></DD
><DT
><B
CLASS="command"
>flush-zones-on-shutdown</B
></DT
><DD
><P
>When the nameserver exits due receiving SIGTERM,
d1445 5
a1449 24
<B
CLASS="command"
>flush-zones-on-shutdown</B
> <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>has-old-clients</B
></DT
><DD
><P
>This option was incorrectly implemented
in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8, and is ignored by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.
d1452 6
a1457 31
<B
CLASS="command"
>has-old-clients</B
> <KBD
CLASS="userinput"
>yes</KBD
>, specify
the two separate options <B
CLASS="command"
>auth-nxdomain</B
> <KBD
CLASS="userinput"
>yes</KBD
>
and <B
CLASS="command"
>rfc2308-type1</B
> <KBD
CLASS="userinput"
>no</KBD
> instead.
</P
></DD
><DT
><B
CLASS="command"
>host-statistics</B
></DT
><DD
><P
>In BIND 8, this enables keeping of
d1460 5
a1464 24
</P
></DD
><DT
><B
CLASS="command"
>maintain-ixfr-base</B
></DT
><DD
><P
><SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>This option is obsolete</I
></SPAN
>.
 It was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to determine whether a transaction log was
kept for Incremental Zone Transfer. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 maintains a transaction
d1466 4
a1469 20
transfers, use <B
CLASS="command"
>provide-ixfr</B
> <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>minimal-responses</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, then when generating
d1473 4
a1476 17
The default is <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>multiple-cnames</B
></DT
><DD
><P
>This option was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to allow
d1478 1
a1478 4
DNS standards.  <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.2 always strictly
d1480 4
a1483 13
</P
></DD
><DT
><B
CLASS="command"
>notify</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
> (the default),
d1485 1
a1485 4
changes, see <A
HREF="Bv9ARM.ch04.html#notify"
>Section 4.1</A
>.  The messages are sent to the
d1488 11
a1498 32
<B
CLASS="command"
>also-notify</B
> option.
</P
><P
>&#13;If <KBD
CLASS="userinput"
>explicit</KBD
>, notifies are sent only to
servers explicitly listed using <B
CLASS="command"
>also-notify</B
>.
If <KBD
CLASS="userinput"
>no</KBD
>, no notifies are sent.
</P
><P
>&#13;The <B
CLASS="command"
>notify</B
> option may also be
specified in the <B
CLASS="command"
>zone</B
> statement,
in which case it overrides the <B
CLASS="command"
>options notify</B
> statement.
d1500 4
a1503 13
to crash.</P
></DD
><DT
><B
CLASS="command"
>recursion</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, and a
d1507 2
a1508 8
referral response. The default is <KBD
CLASS="userinput"
>yes</KBD
>.
Note that setting <B
CLASS="command"
>recursion no</B
> does not prevent
d1513 5
a1517 17
See also <B
CLASS="command"
>fetch-glue</B
> above.
</P
></DD
><DT
><B
CLASS="command"
>rfc2308-type1</B
></DT
><DD
><P
>Setting this to <KBD
CLASS="userinput"
>yes</KBD
> will
d1519 12
a1530 49
answers. The default is <KBD
CLASS="userinput"
>no</KBD
>.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>Not yet implemented in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.</P
></BLOCKQUOTE
></DIV
></DD
><DT
><B
CLASS="command"
>use-id-pool</B
></DT
><DD
><P
><SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>This option is obsolete</I
></SPAN
>.
<ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 always allocates query IDs from a pool.
</P
></DD
><DT
><B
CLASS="command"
>zone-statistics</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, the server will collect
d1532 7
a1538 35
on a per-zone basis by specifying <B
CLASS="command"
>zone-statistics no</B
>
in the <B
CLASS="command"
>zone</B
> statement).  These statistics may be accessed
using <B
CLASS="command"
>rndc stats</B
>, which will dump them to the file listed
in the <B
CLASS="command"
>statistics-file</B
>.  See also <A
HREF="Bv9ARM.ch06.html#statsfile"
>Section 6.2.16.17</A
>.
</P
></DD
><DT
><B
CLASS="command"
>use-ixfr</B
></DT
><DD
><P
><SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>This option is obsolete</I
></SPAN
>.
d1540 19
a1558 65
the information on the <B
CLASS="command"
>provide-ixfr</B
> option
in <A
HREF="Bv9ARM.ch06.html#server_statement_definition_and_usage"
>Section 6.2.18</A
>. See also
<A
HREF="Bv9ARM.ch04.html#incremental_zone_transfers"
>Section 4.3</A
>.
</P
></DD
><DT
><B
CLASS="command"
>provide-ixfr</B
></DT
><DD
><P
>&#13;See the description of
<B
CLASS="command"
>provide-ixfr</B
> in
<A
HREF="Bv9ARM.ch06.html#server_statement_definition_and_usage"
>Section 6.2.18</A
>
</P
></DD
><DT
><B
CLASS="command"
>request-ixfr</B
></DT
><DD
><P
>&#13;See the description of
<B
CLASS="command"
>request-ixfr</B
> in
<A
HREF="Bv9ARM.ch06.html#server_statement_definition_and_usage"
>Section 6.2.18</A
>
</P
></DD
><DT
><B
CLASS="command"
>treat-cr-as-space</B
></DT
><DD
><P
>This option was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to make
the server treat carriage return ("<B
CLASS="command"
>\r</B
>") characters the same way
d1561 9
a1569 24
on an NT or DOS machine. In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, both UNIX "<B
CLASS="command"
>\n</B
>"
and NT/DOS "<B
CLASS="command"
>\r\n</B
>" newlines are always accepted,
and the option is ignored.</P
></DD
><DT
><B
CLASS="command"
>additional-from-auth</B
>, <B
CLASS="command"
>additional-from-cache</B
></DT
><DD
><P
>&#13;These options control the behavior of an authoritative server when
d1572 3
a1574 6
</P
><P
>&#13;When both of these options are set to <KBD
CLASS="userinput"
>yes</KBD
> 
d1586 5
a1590 14
</P
><P
>&#13;For example, if a query asks for an MX record for host <VAR
CLASS="literal"
>foo.example.com</VAR
>,
and the record found is "<VAR
CLASS="literal"
>MX 10 mail.example.net</VAR
>", normally the address
records (A and AAAA) for <VAR
CLASS="literal"
>mail.example.net</VAR
> will be provided as well,
d1592 1
a1592 4
Setting these options to <B
CLASS="command"
>no</B
> disables this behavior and makes
d1594 3
a1596 3
</P
><P
>&#13;These options are intended for use in authoritative-only 
d1598 2
a1599 8
them to <B
CLASS="command"
>no</B
> without also specifying
<B
CLASS="command"
>recursion no</B
> will cause the server to
d1601 3
a1603 6
</P
><P
>&#13;Specifying <B
CLASS="command"
>additional-from-cache no</B
> actually
d1608 3
a1610 3
</P
><P
>&#13;When a name server is non-recursively queried for a name that is not
d1615 1
a1615 4
referrals when <B
CLASS="command"
>additional-from-cache no</B
>
d1619 4
a1622 13
</P
></DD
><DT
><B
CLASS="command"
>match-mapped-addresses</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, then an
d1631 5
a1635 10
</P
></DD
><DT
><B
CLASS="command"
>ixfr-from-differences</B
></DT
><DD
><P
>&#13;When 'yes' and the server loads a new version of a master
d1642 3
a1644 3
</P
><P
>&#13;By allowing incremental zone transfers to be used for
d1653 5
a1657 10
</P
></DD
><DT
><B
CLASS="command"
>multi-master</B
></DT
><DD
><P
>&#13;This should be set when you have multiple masters for a zone and the
d1660 5
a1664 17
has.  The default is <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>dnssec-enable</B
></DT
><DD
><P
>&#13;Enable DNSSEC support in named.  Unless set to <KBD
CLASS="userinput"
>yes</KBD
>
d1666 12
a1677 32
The default is <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>querylog</B
></DT
><DD
><P
>&#13;Specify whether query logging should be started when named start.
If <B
CLASS="command"
>querylog</B
> is not specified then the query logging
is determined by the presence of the logging category <B
CLASS="command"
>queries</B
>.
</P
></DD
><DT
><B
CLASS="command"
>check-names</B
></DT
><DD
><P
>&#13;This option is used to restrict the character set and syntax of
d1680 6
a1685 25
<B
CLASS="command"
>master</B
> zones the default is <B
CLASS="command"
>fail</B
>.
For <B
CLASS="command"
>slave</B
> zones the default is <B
CLASS="command"
>warn</B
>.
For answer received from the network (<B
CLASS="command"
>response</B
>)
the default is <B
CLASS="command"
>ignore</B
>.
</P
><P
>The rules for legal hostnames / mail domains are derived from RFC 952
d1687 2
a1688 6
</P
><P
><B
CLASS="command"
>check-names</B
> applies to the owner names of A, AAA and
d1693 8
a1700 15
</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2695"
>6.2.16.2. Forwarding</A
></H3
><P
>The forwarding facility can be used to create a large site-wide
d1706 5
a1710 18
its cache.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>forward</B
></DT
><DD
><P
>This option is only meaningful if the
forwarders list is not empty. A value of <VAR
CLASS="varname"
>first</VAR
>,
d1713 1
a1713 4
the answer itself. If <VAR
CLASS="varname"
>only</VAR
> is specified, the
d1715 3
a1717 10
</P
></DD
><DT
><B
CLASS="command"
>forwarders</B
></DT
><DD
><P
>Specifies the IP addresses to be used
d1719 3
a1721 6
</P
></DD
></DL
></DIV
><P
>Forwarding can also be configured on a per-domain basis, allowing
d1724 9
a1732 19
or have a different <B
CLASS="command"
>forward only/first</B
> behavior,
or not forward at all, see <A
HREF="Bv9ARM.ch06.html#zone_statement_grammar"
>Section 6.2.23</A
>.</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2714"
>6.2.16.3. Dual-stack Servers</A
></H3
><P
>Dual-stack servers are used as servers of last resort to work around
d1734 4
a1737 14
on the host machine.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>dual-stack-servers</B
></DT
><DD
><P
>Specifies host names / addresses of machines with access to
d1740 1
a1740 4
stacked then the <B
CLASS="command"
>dual-stack-servers</B
> have no effect unless
d1742 12
a1753 36
(e.g. <B
CLASS="command"
>named -4</B
>).</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="access_control"
>6.2.16.4. Access Control</A
></H3
><P
>Access to the server can be restricted based on the IP address
of the requesting system. See <A
HREF="Bv9ARM.ch06.html#address_match_lists"
>Section 6.1.1</A
> for
details on how to specify IP address lists.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>allow-notify</B
></DT
><DD
><P
>Specifies which hosts are allowed to
d1756 3
a1758 12
<B
CLASS="command"
>allow-notify</B
> may also be specified in the
<B
CLASS="command"
>zone</B
> statement, in which case it overrides the
<B
CLASS="command"
>options allow-notify</B
> statement.  It is only meaningful
d1760 9
a1768 32
only from a zone's master.</P
></DD
><DT
><B
CLASS="command"
>allow-query</B
></DT
><DD
><P
>Specifies which hosts are allowed to
ask ordinary DNS questions. <B
CLASS="command"
>allow-query</B
> may also
be specified in the <B
CLASS="command"
>zone</B
> statement, in which
case it overrides the <B
CLASS="command"
>options allow-query</B
> statement. If
not specified, the default is to allow queries from all hosts.</P
></DD
><DT
><B
CLASS="command"
>allow-recursion</B
></DT
><DD
><P
>Specifies which hosts are allowed to
d1773 4
a1776 10
</P
></DD
><DT
><B
CLASS="command"
>allow-update-forwarding</B
></DT
><DD
><P
>Specifies which hosts are allowed to
d1778 1
a1778 4
master.  The default is <KBD
CLASS="userinput"
>{ none; }</KBD
>, which 
d1781 3
a1783 12
<KBD
CLASS="userinput"
>allow-update-forwarding { any; };</KBD
>.
Specifying values other than <KBD
CLASS="userinput"
>{ none; }</KBD
> or
<KBD
CLASS="userinput"
>{ any; }</KBD
> is usually counterproductive, since
d1785 2
a1786 3
master server, not the slaves.</P
><P
>Note that enabling the update forwarding feature on a slave server
d1788 5
a1792 14
access control to attacks; see <A
HREF="Bv9ARM.ch07.html#dynamic_update_security"
>Section 7.3</A
>
for more details.</P
></DD
><DT
><B
CLASS="command"
>allow-v6-synthesis</B
></DT
><DD
><P
>This option was introduced for the smooth transition from AAAA
d1797 9
a1805 32
</P
></DD
><DT
><B
CLASS="command"
>allow-transfer</B
></DT
><DD
><P
>Specifies which hosts are allowed to
receive zone transfers from the server. <B
CLASS="command"
>allow-transfer</B
> may
also be specified in the <B
CLASS="command"
>zone</B
> statement, in which
case it overrides the <B
CLASS="command"
>options allow-transfer</B
> statement.
If not specified, the default is to allow transfers to all hosts.</P
></DD
><DT
><B
CLASS="command"
>blackhole</B
></DT
><DD
><P
>Specifies a list of addresses that the
d1807 9
a1815 29
from these addresses will not be responded to. The default is <KBD
CLASS="userinput"
>none</KBD
>.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2781"
>6.2.16.5. Interfaces</A
></H3
><P
>The interfaces and ports that the server will answer queries
from may be specified using the <B
CLASS="command"
>listen-on</B
> option. <B
CLASS="command"
>listen-on</B
> takes
an optional port, and an <VAR
CLASS="varname"
>address_match_list</VAR
>.
d1817 4
a1820 10
match list. If a port is not specified, port 53 will be used.</P
><P
>Multiple <B
CLASS="command"
>listen-on</B
> statements are allowed.
For example,</P
><PRE
CLASS="programlisting"
>listen-on { 5.6.7.8; };
d1822 2
a1823 3
</PRE
><P
>will enable the name server on port 53 for the IP address
d1825 4
a1828 12
1.2 that is not 1.2.3.4.</P
><P
>If no <B
CLASS="command"
>listen-on</B
> is specified, the
server will listen on port 53 on all interfaces.</P
><P
>The <B
CLASS="command"
>listen-on-v6</B
> option is used to
d1830 6
a1835 14
for incoming queries sent using IPv6.</P
><P
>When <PRE
CLASS="programlisting"
>{ any; }</PRE
> is specified
as the <VAR
CLASS="varname"
>address_match_list</VAR
> for the
<B
CLASS="command"
>listen-on-v6</B
> option,
d1841 2
a1842 3
the behavior is the same as that for IPv4.</P
><P
>A list of particular IPv6 addresses can also be specified, in which case
d1844 4
a1847 10
regardless of whether the desired API is supported by the system.</P
><P
>Multiple <B
CLASS="command"
>listen-on-v6</B
> options can be used.
For example,</P
><PRE
CLASS="programlisting"
>listen-on-v6 { any; };
d1849 2
a1850 3
</PRE
><P
>will enable the name server on port 53 for any IPv6 addresses
d1853 12
a1864 28
2001:db8::/32 (with separate sockets for each matched address.)</P
><P
>To make the server not listen on any IPv6 address, use</P
><PRE
CLASS="programlisting"
>listen-on-v6 { none; };
</PRE
><P
>If no <B
CLASS="command"
>listen-on-v6</B
> option is specified,
the server will not listen on any IPv6 address.</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2808"
>6.2.16.6. Query Address</A
></H3
><P
>If the server doesn't know the answer to a question, it will
query other name servers. <B
CLASS="command"
>query-source</B
> specifies
d1866 8
a1873 34
IPv6, there is a separate <B
CLASS="command"
>query-source-v6</B
> option.
If <B
CLASS="command"
>address</B
> is <B
CLASS="command"
>*</B
> or is omitted,
a wildcard IP address (<B
CLASS="command"
>INADDR_ANY</B
>) will be used.
If <B
CLASS="command"
>port</B
> is <B
CLASS="command"
>*</B
> or is omitted,
a random unprivileged port will be used, <B
CLASS="command"
>avoid-v4-udp-ports</B
>
and <B
CLASS="command"
>avoid-v6-udp-ports</B
> can be used to prevent named
from selecting certain ports. The defaults are</P
><PRE
CLASS="programlisting"
>query-source address * port *;
d1875 4
a1878 12
</PRE
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>The address specified in the <B
CLASS="command"
>query-source</B
> option
d1881 12
a1892 34
unprivileged port.</P
></BLOCKQUOTE
></DIV
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>See also <B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>notify-source</B
>.</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="zone_transfers"
>6.2.16.7. Zone Transfers</A
></H3
><P
><ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> has mechanisms in place to facilitate zone transfers
d1894 4
a1897 14
system. The following options apply to zone transfers.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>also-notify</B
></DT
><DD
><P
>Defines a global list of IP addresses of name servers
d1901 4
a1904 22
quickly converge on stealth servers. If an <B
CLASS="command"
>also-notify</B
> list
is given in a <B
CLASS="command"
>zone</B
> statement, it will override
the <B
CLASS="command"
>options also-notify</B
> statement. When a <B
CLASS="command"
>zone notify</B
> statement
is set to <B
CLASS="command"
>no</B
>, the IP addresses in the global <B
CLASS="command"
>also-notify</B
> list will
d1906 3
a1908 10
list (no global notification list).</P
></DD
><DT
><B
CLASS="command"
>max-transfer-time-in</B
></DT
><DD
><P
>Inbound zone transfers running longer than
d1910 3
a1912 10
(2 hours).  The maximum value is 28 days (40320 minutes).</P
></DD
><DT
><B
CLASS="command"
>max-transfer-idle-in</B
></DT
><DD
><P
>Inbound zone transfers making no progress
d1914 3
a1916 10
(1 hour).  The maximum value is 28 days (40320 minutes).</P
></DD
><DT
><B
CLASS="command"
>max-transfer-time-out</B
></DT
><DD
><P
>Outbound zone transfers running longer than
d1918 3
a1920 10
(2 hours).  The maximum value is 28 days (40320 minutes).</P
></DD
><DT
><B
CLASS="command"
>max-transfer-idle-out</B
></DT
><DD
><P
>Outbound zone transfers making no progress
d1922 3
a1924 10
hour).  The maximum value is 28 days (40320 minutes).</P
></DD
><DT
><B
CLASS="command"
>serial-query-rate</B
></DT
><DD
><P
>Slave servers will periodically query master servers
d1928 1
a1928 4
sent.  The value of the <B
CLASS="command"
>serial-query-rate</B
> option,
d1931 3
a1933 13
</P
></DD
><DT
><B
CLASS="command"
>serial-queries</B
></DT
><DD
><P
>In BIND 8, the <B
CLASS="command"
>serial-queries</B
> option
d1937 1
a1937 4
serial queries and ignores the <B
CLASS="command"
>serial-queries</B
> option.
d1939 7
a1945 25
as defined using the <B
CLASS="command"
>serial-query-rate</B
> option.
</P
></DD
><DT
><B
CLASS="command"
>transfer-format</B
></DT
><DD
><P
>&#13;Zone transfers can be sent using two different formats,
<B
CLASS="command"
>one-answer</B
> and <B
CLASS="command"
>many-answers</B
>.
The <B
CLASS="command"
>transfer-format</B
> option is used
d1947 1
a1947 4
<B
CLASS="command"
>one-answer</B
> uses one DNS message per
d1949 2
a1950 8
<B
CLASS="command"
>many-answers</B
> packs as many resource records as
possible into a message. <B
CLASS="command"
>many-answers</B
> is more
d1952 3
a1954 18
such as <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8.x and patched
versions of <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 4.9.5. The default is
<B
CLASS="command"
>many-answers</B
>. <B
CLASS="command"
>transfer-format</B
>
d1956 9
a1964 32
<B
CLASS="command"
>server</B
> statement.
</P
></DD
><DT
><B
CLASS="command"
>transfers-in</B
></DT
><DD
><P
>The maximum number of inbound zone transfers
that can be running concurrently. The default value is <VAR
CLASS="literal"
>10</VAR
>.
Increasing <B
CLASS="command"
>transfers-in</B
> may speed up the convergence
of slave zones, but it also may increase the load on the local system.</P
></DD
><DT
><B
CLASS="command"
>transfers-out</B
></DT
><DD
><P
>The maximum number of outbound zone transfers
d1966 3
a1968 13
of the limit will be refused. The default value is <VAR
CLASS="literal"
>10</VAR
>.</P
></DD
><DT
><B
CLASS="command"
>transfers-per-ns</B
></DT
><DD
><P
>The maximum number of inbound zone transfers
d1970 1
a1970 7
The default value is <VAR
CLASS="literal"
>2</VAR
>. Increasing <B
CLASS="command"
>transfers-per-ns</B
> may
d1972 5
a1976 24
the load on the remote name server. <B
CLASS="command"
>transfers-per-ns</B
> may
be overridden on a per-server basis by using the <B
CLASS="command"
>transfers</B
> phrase
of the <B
CLASS="command"
>server</B
> statement.</P
></DD
><DT
><B
CLASS="command"
>transfer-source</B
></DT
><DD
><P
><B
CLASS="command"
>transfer-source</B
> determines
d1983 1
a1983 4
in the remote end's <B
CLASS="command"
>allow-transfer</B
> option for
d1985 1
a1985 4
sets the <B
CLASS="command"
>transfer-source</B
> for all zones, but can
d1987 34
a2020 88
<B
CLASS="command"
>transfer-source</B
> statement within the
<B
CLASS="command"
>view</B
> or <B
CLASS="command"
>zone</B
> block
in the configuration file.</P
></DD
><DT
><B
CLASS="command"
>transfer-source-v6</B
></DT
><DD
><P
>The same as <B
CLASS="command"
>transfer-source</B
>,
except zone transfers are performed using IPv6.</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source</B
></DT
><DD
><P
>An alternate transfer source if the one listed in
<B
CLASS="command"
>transfer-source</B
> fails and
<B
CLASS="command"
>use-alt-transfer-source</B
> is set.</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source-v6</B
></DT
><DD
><P
>An alternate transfer source if the one listed in
<B
CLASS="command"
>transfer-source-v6</B
> fails and
<B
CLASS="command"
>use-alt-transfer-source</B
> is set.</P
></DD
><DT
><B
CLASS="command"
>use-alt-transfer-source</B
></DT
><DD
><P
>Use the alternate transfer sources or not.  If views are
specified this defaults to <B
CLASS="command"
>no</B
> otherwise it defaults to
<B
CLASS="command"
>yes</B
> (for BIND 8 compatibility).</P
></DD
><DT
><B
CLASS="command"
>notify-source</B
></DT
><DD
><P
><B
CLASS="command"
>notify-source</B
> determines
d2023 3
a2025 12
This address must appear in the slave server's <B
CLASS="command"
>masters</B
>
zone clause or in an <B
CLASS="command"
>allow-notify</B
> clause.
This statement sets the <B
CLASS="command"
>notify-source</B
> for all zones,
d2027 12
a2038 44
<B
CLASS="command"
>notify-source</B
> statement within the <B
CLASS="command"
>zone</B
>
or <B
CLASS="command"
>view</B
> block in the configuration file.</P
></DD
><DT
><B
CLASS="command"
>notify-source-v6</B
></DT
><DD
><P
>Like <B
CLASS="command"
>notify-source</B
>,
but applies to notify messages sent to IPv6 addresses.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2974"
>6.2.16.8. Bad UDP Port Lists</A
></H3
><P
>&#13;<B
CLASS="command"
>avoid-v4-udp-ports</B
> and <B
CLASS="command"
>avoid-v6-udp-ports</B
>
d2045 6
a2050 12
</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2979"
>6.2.16.9. Operating System Resource Limits</A
></H3
><P
>The server's usage of many system resources can be limited.
d2052 4
a2055 16
example, <B
CLASS="command"
>1G</B
> can be used instead of
<B
CLASS="command"
>1073741824</B
> to specify a limit of one
gigabyte. <B
CLASS="command"
>unlimited</B
> requests unlimited use, or the
maximum available amount. <B
CLASS="command"
>default</B
> uses the limit
d2057 2
a2058 9
<B
CLASS="command"
>size_spec</B
> in <A
HREF="Bv9ARM.ch06.html#configuration_file_elements"
>Section 6.1</A
>.</P
><P
>The following options set operating system resource limits for
d2061 8
a2068 31
unsupported limit is used.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>coresize</B
></DT
><DD
><P
>The maximum size of a core dump. The default
is <VAR
CLASS="literal"
>default</VAR
>.</P
></DD
><DT
><B
CLASS="command"
>datasize</B
></DT
><DD
><P
>The maximum amount of data memory the server
may use. The default is <VAR
CLASS="literal"
>default</VAR
>.
d2078 2
a2079 8
<B
CLASS="command"
>max-cache-size</B
> and 
<B
CLASS="command"
>recursive-clients</B
>
d2081 14
a2094 42
</P
></DD
><DT
><B
CLASS="command"
>files</B
></DT
><DD
><P
>The maximum number of files the server
may have open concurrently. The default is <VAR
CLASS="literal"
>unlimited</VAR
>.
</P
></DD
><DT
><B
CLASS="command"
>stacksize</B
></DT
><DD
><P
>The maximum amount of stack memory the server
may use. The default is <VAR
CLASS="literal"
>default</VAR
>.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN3016"
>6.2.16.10. Server  Resource Limits</A
></H3
><P
>The following options set limits on the server's
d2096 4
a2099 14
server rather than the operating system.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>max-ixfr-log-size</B
></DT
><DD
><P
>This option is obsolete; it is accepted
d2101 1
a2101 4
<B
CLASS="command"
>max-journal-size</B
> performs a similar
d2103 4
a2106 14
</P
></DD
><DT
><B
CLASS="command"
>max-journal-size</B
></DT
><DD
><P
>Sets a maximum size for each journal file
(<A
HREF="Bv9ARM.ch04.html#journal"
>Section 4.2.1</A
>).  When the journal file approaches
d2109 3
a2111 13
<VAR
CLASS="literal"
>unlimited</VAR
>.</P
></DD
><DT
><B
CLASS="command"
>host-statistics-max</B
></DT
><DD
><P
>In BIND 8, specifies the maximum number of host statistic
d2114 3
a2116 10
</P
></DD
><DT
><B
CLASS="command"
>recursive-clients</B
></DT
><DD
><P
>The maximum number of simultaneous recursive lookups
d2118 1
a2118 4
<VAR
CLASS="literal"
>1000</VAR
>.  Because each recursing client uses a fair
d2120 1
a2120 4
<B
CLASS="command"
>recursive-clients</B
> option may have to be decreased
d2122 3
a2124 10
</P
></DD
><DT
><B
CLASS="command"
>tcp-clients</B
></DT
><DD
><P
>The maximum number of simultaneous client TCP
d2126 3
a2128 13
The default is <VAR
CLASS="literal"
>100</VAR
>.</P
></DD
><DT
><B
CLASS="command"
>max-cache-size</B
></DT
><DD
><P
>The maximum amount of memory to use for the
d2133 1
a2133 4
view.  The default is <VAR
CLASS="literal"
>unlimited</VAR
>, meaning that 
d2135 3
a2137 10
</P
></DD
><DT
><B
CLASS="command"
>tcp-listen-queue</B
></DT
><DD
><P
>The listen queue depth.  The default and minimum is 3.
d2142 10
a2151 30
</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN3062"
>6.2.16.11. Periodic Task Intervals</A
></H3
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>cleaning-interval</B
></DT
><DD
><P
>The server will remove expired resource records
from the cache every <B
CLASS="command"
>cleaning-interval</B
> minutes.
d2153 4
a2156 14
If set to 0, no  periodic cleaning will occur.</P
></DD
><DT
><B
CLASS="command"
>heartbeat-interval</B
></DT
><DD
><P
>The server will perform zone maintenance tasks
for all zones marked as <B
CLASS="command"
>dialup</B
> whenever this
d2159 4
a2162 14
If set to 0, no zone maintenance for these zones will occur.</P
></DD
><DT
><B
CLASS="command"
>interface-interval</B
></DT
><DD
><P
>The server will scan the network interface list
every <B
CLASS="command"
>interface-interval</B
> minutes. The default
d2168 6
a2173 18
<B
CLASS="command"
>listen-on</B
> configuration), and will
stop listening on interfaces that have gone away.</P
></DD
><DT
><B
CLASS="command"
>statistics-interval</B
></DT
><DD
><P
>Name server statistics will be logged
every <B
CLASS="command"
>statistics-interval</B
> minutes. The default is 
d2175 12
a2186 28
If set to 0, no statistics will be logged.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>Not yet implemented in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>9.</P
></BLOCKQUOTE
></DIV
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="topology"
>6.2.16.12. Topology</A
></H3
><P
>All other things being equal, when the server chooses a name server
d2188 2
a2189 8
topologically closest to itself. The <B
CLASS="command"
>topology</B
> statement
takes an <B
CLASS="command"
>address_match_list</B
> and interprets it
d2197 2
a2198 4
For example,</P
><PRE
CLASS="programlisting"
>topology {
d2202 2
a2203 3
};</PRE
><P
>will prefer servers on network 10 the most, followed by hosts
d2206 15
a2220 39
is preferred least of all.</P
><P
>The default topology is</P
><PRE
CLASS="programlisting"
>    topology { localhost; localnets; };
</PRE
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>The <B
CLASS="command"
>topology</B
> option
is not implemented in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.
</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="the_sortlist_statement"
>6.2.16.13. The <B
CLASS="command"
>sortlist</B
> Statement</A
></H3
><P
>The response to a DNS query may consist of multiple resource
d2224 2
a2225 8
(but see the <B
CLASS="command"
>rrset-order</B
>
statement in <A
HREF="Bv9ARM.ch06.html#rrset_ordering"
>Section 6.2.16.14</A
>).
d2231 7
a2237 26
configuring the name servers, not all the clients.</P
><P
>The <B
CLASS="command"
>sortlist</B
> statement (see below) takes
an <B
CLASS="command"
>address_match_list</B
> and interprets it even
more specifically than the <B
CLASS="command"
>topology</B
> statement
does (<A
HREF="Bv9ARM.ch06.html#topology"
>Section 6.2.16.12</A
>).
Each top level statement in the <B
CLASS="command"
>sortlist</B
> must
itself be an explicit <B
CLASS="command"
>address_match_list</B
> with
d2239 1
a2239 4
an IP prefix, an ACL name or a nested <B
CLASS="command"
>address_match_list</B
>)
d2241 2
a2242 3
the query until a match is found.</P
><P
>Once the source address of the query has been matched, if
d2247 2
a2248 8
treated the same as the <B
CLASS="command"
>address_match_list</B
> in
a <B
CLASS="command"
>topology</B
> statement. Each top level element
d2250 2
a2251 3
distance is moved to the beginning of the response.</P
><P
>In the following example, any queries received from any of
d2262 2
a2263 4
their directly connected networks.</P
><PRE
CLASS="programlisting"
>sortlist {
d2279 2
a2280 3
};</PRE
><P
>The following example will give reasonable behavior for the
d2282 1
a2282 4
to the behavior of the address sort in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 4.9.x. Responses sent
d2286 2
a2287 4
to other queries will not be sorted.</P
><PRE
CLASS="programlisting"
>sortlist {
d2291 6
a2296 12
</PRE
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="rrset_ordering"
>6.2.16.14. RRset Ordering</A
></H3
><P
>When multiple records are returned in an answer it may be
d2298 1
a2298 4
The <B
CLASS="command"
>rrset-order</B
> statement permits configuration
d2300 35
a2334 121
See also the <B
CLASS="command"
>sortlist</B
> statement,
<A
HREF="Bv9ARM.ch06.html#the_sortlist_statement"
>Section 6.2.16.13</A
>.
</P
><P
>An <B
CLASS="command"
>order_spec</B
> is defined as follows:</P
><PRE
CLASS="programlisting"
>[<SPAN
CLASS="optional"
> class <VAR
CLASS="replaceable"
>class_name</VAR
> </SPAN
>][<SPAN
CLASS="optional"
> type <VAR
CLASS="replaceable"
>type_name</VAR
> </SPAN
>][<SPAN
CLASS="optional"
> name <VAR
CLASS="replaceable"
>"domain_name"</VAR
></SPAN
>]
      order <VAR
CLASS="replaceable"
>ordering</VAR
>
</PRE
><P
>If no class is specified, the default is <B
CLASS="command"
>ANY</B
>.
If no type is specified, the default is <B
CLASS="command"
>ANY</B
>.
If no name is specified, the default is "<B
CLASS="command"
>*</B
>".</P
><P
>The legal values for <B
CLASS="command"
>ordering</B
> are:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN3150"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>fixed</B
></P
></TD
><TD
><P
>Records are returned in the order they
are defined in the zone file.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>random</B
></P
></TD
><TD
><P
>Records are returned in some random order.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>cyclic</B
></P
></TD
><TD
><P
>Records are returned in a round-robin
order.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>For example:</P
><PRE
CLASS="programlisting"
>rrset-order {
d2338 10
a2347 29
</PRE
><P
>will cause any responses for type A records in class IN that
have "<VAR
CLASS="literal"
>host.example.com</VAR
>" as a suffix, to always be returned
in random order. All other records are returned in cyclic order.</P
><P
>If multiple <B
CLASS="command"
>rrset-order</B
> statements appear,
they are not combined &#8212; the last one applies.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>The <B
CLASS="command"
>rrset-order</B
> statement
is not yet fully implemented in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.
d2349 9
a2357 25
</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="tuning"
>6.2.16.15. Tuning</A
></H3
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>lame-ttl</B
></DT
><DD
><P
>Sets the number of seconds to cache a
d2359 6
a2364 28
<SPAN
CLASS="bold"
><B
CLASS="emphasis"
>NOT</B
></SPAN
> recommended.)
Default is <VAR
CLASS="literal"
>600</VAR
> (10 minutes). Maximum value is 
<VAR
CLASS="literal"
>1800</VAR
> (30 minutes).</P
></DD
><DT
><B
CLASS="command"
>max-ncache-ttl</B
></DT
><DD
><P
>To reduce network traffic and increase performance
the server stores negative answers. <B
CLASS="command"
>max-ncache-ttl</B
> is
d2367 5
a2371 24
<B
CLASS="command"
>max-ncache-ttl</B
> is <VAR
CLASS="literal"
>10800</VAR
> seconds (3 hours).
<B
CLASS="command"
>max-ncache-ttl</B
> cannot exceed 7 days and will
be silently truncated to 7 days if set to a greater value.</P
></DD
><DT
><B
CLASS="command"
>max-cache-ttl</B
></DT
><DD
><P
><B
CLASS="command"
>max-cache-ttl</B
> sets
d2373 4
a2376 10
answers. The default is one week (7 days).</P
></DD
><DT
><B
CLASS="command"
>min-roots</B
></DT
><DD
><P
>The minimum number of root servers that
d2378 8
a2385 26
is <KBD
CLASS="userinput"
>2</KBD
>.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>Not implemented in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>9.</P
></BLOCKQUOTE
></DIV
></DD
><DT
><B
CLASS="command"
>sig-validity-interval</B
></DT
><DD
><P
>Specifies the number of days into the
d2387 2
a2388 8
of dynamic updates (<A
HREF="Bv9ARM.ch04.html#dynamic_update"
>Section 4.2</A
>)
will expire. The default is <VAR
CLASS="literal"
>30</VAR
> days.
d2391 7
a2397 19
to allow for a limited amount of clock skew.</P
></DD
><DT
><B
CLASS="command"
>min-refresh-time</B
>, <B
CLASS="command"
>max-refresh-time</B
>, <B
CLASS="command"
>min-retry-time</B
>, <B
CLASS="command"
>max-retry-time</B
></DT
><DD
><P
>&#13;These options control the server's behavior on refreshing a zone
d2402 3
a2404 3
</P
><P
>&#13;These options allow the administrator to set a minimum and maximum
d2408 5
a2412 13
</P
></DD
><DT
><B
CLASS="command"
>edns-udp-size</B
></DT
><DD
><P
>&#13;<B
CLASS="command"
>edns-udp-size</B
> sets the advertised EDNS UDP buffer
d2418 7
a2424 15
</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="builtin"
>6.2.16.16. Built-in server information zones</A
></H3
><P
>The server provides some helpful diagnostic information
d2426 6
a2431 24
pseudo-top-level-domain <VAR
CLASS="literal"
>bind</VAR
> in the
<B
CLASS="command"
>CHAOS</B
> class.  These zones are part of a
built-in view (see <A
HREF="Bv9ARM.ch06.html#view_statement_grammar"
>Section 6.2.21</A
>) of class
<B
CLASS="command"
>CHAOS</B
> which is separate from the default view of
class <B
CLASS="command"
>IN</B
>; therefore, any global server options
such as <B
CLASS="command"
>allow-query</B
> do not apply the these zones.
d2433 8
a2440 33
below, or hide the built-in <B
CLASS="command"
>CHAOS</B
> view by
defining an explicit view of class <B
CLASS="command"
>CHAOS</B
>
that matches all clients.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>version</B
></DT
><DD
><P
>The version the server should report
via a query of the name <VAR
CLASS="literal"
>version.bind</VAR
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
d2442 6
a2447 25
Specifying <B
CLASS="command"
>version none</B
>
disables processing of the queries.</P
></DD
><DT
><B
CLASS="command"
>hostname</B
></DT
><DD
><P
>The hostname the server should report via a query of
the name <TT
CLASS="filename"
>hostname.bind</TT
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
d2451 6
a2456 25
answering your queries.  Specifying <B
CLASS="command"
>hostname none;</B
>
disables processing of the queries.</P
></DD
><DT
><B
CLASS="command"
>server-id</B
></DT
><DD
><P
>The ID of the server should report via a query of
the name <TT
CLASS="filename"
>ID.SERVER</TT
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
d2459 1
a2459 4
answering your queries.  Specifying <B
CLASS="command"
>server-id none;</B
>
d2461 1
a2461 4
Specifying <B
CLASS="command"
>server-id hostname;</B
> will cause named to
d2463 8
a2470 25
The default <B
CLASS="command"
>server-id</B
> is <B
CLASS="command"
>none</B
>.
</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="statsfile"
>6.2.16.17. The Statistics File</A
></H3
><P
>The statistics file generated by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9
d2472 4
a2475 11
generated by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8.
</P
><P
>The statistics dump begins with the line <B
CLASS="command"
>+++ Statistics Dump
+++ (973798949)</B
>, where the number in parentheses is a standard
d2482 12
a2493 30
with the line <B
CLASS="command"
>--- Statistics Dump --- (973798949)</B
>, where the
number is identical to the number in the beginning line.</P
><P
>The following statistics counters are maintained:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN3294"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>success</B
></P
></TD
><TD
><P
>The number of
d2496 36
a2531 100
one answer RR.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>referral</B
></P
></TD
><TD
><P
>The number of queries which resulted
in referral responses.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>nxrrset</B
></P
></TD
><TD
><P
>The number of queries which resulted in
NOERROR responses with no data.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>nxdomain</B
></P
></TD
><TD
><P
>The number
of queries which resulted in NXDOMAIN responses.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>failure</B
></P
></TD
><TD
><P
>The number of queries which resulted in a
failure response other than those above.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>recursion</B
></P
></TD
><TD
><P
>The number of queries which caused the server
to perform recursion in order to find the final answer.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>&#13;Each query received by the server will cause exactly one of
<B
CLASS="command"
>success</B
>,
<B
CLASS="command"
>referral</B
>,
<B
CLASS="command"
>nxrrset</B
>,
<B
CLASS="command"
>nxdomain</B
>, or
<B
CLASS="command"
>failure</B
>
d2533 30
a2562 148
<B
CLASS="command"
>recursion</B
> counter to be incremented.
</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="server_statement_grammar"
>6.2.17. <B
CLASS="command"
>server</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>server <VAR
CLASS="replaceable"
>ip_addr</VAR
> {
    [<SPAN
CLASS="optional"
> bogus <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> provide-ixfr <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> request-ixfr <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> edns <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfers <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-format <VAR
CLASS="replaceable"
>( one-answer | many-answers )</VAR
> ; ]</SPAN
>]
    [<SPAN
CLASS="optional"
> keys <VAR
CLASS="replaceable"
>{ string ; [<SPAN
CLASS="optional"
> string ; [<SPAN
CLASS="optional"
>...</SPAN
>]</SPAN
>] }</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="server_statement_definition_and_usage"
>6.2.18. <B
CLASS="command"
>server</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>server</B
> statement defines characteristics
to be associated with a remote name server.</P
><P
>&#13;The <B
CLASS="command"
>server</B
> statement can occur at the top level of the
configuration file or inside a <B
CLASS="command"
>view</B
> statement.  
If a <B
CLASS="command"
>view</B
> statement contains
one or more <B
CLASS="command"
>server</B
> statements, only those
d2564 2
a2565 8
If a view contains no <B
CLASS="command"
>server</B
> statements,
any top-level <B
CLASS="command"
>server</B
> statements are used as
d2567 2
a2568 3
</P
><P
>If you discover that a remote server is giving out bad data,
d2570 2
a2571 12
value of <B
CLASS="command"
>bogus</B
> is <B
CLASS="command"
>no</B
>.</P
><P
>The <B
CLASS="command"
>provide-ixfr</B
> clause determines whether
d2574 2
a2575 8
If set to <B
CLASS="command"
>yes</B
>, incremental transfer will be provided
whenever possible. If set to <B
CLASS="command"
>no</B
>, all transfers
d2577 3
a2579 10
of the <B
CLASS="command"
>provide-ixfr</B
> option in the view or
global options block is used as a default.</P
><P
>The <B
CLASS="command"
>request-ixfr</B
> clause determines whether
d2582 3
a2584 7
value of the <B
CLASS="command"
>request-ixfr</B
> option in the view or
global options block is used as a default.</P
><P
>IXFR requests to servers that do not support IXFR will automatically
d2587 3
a2589 12
of <B
CLASS="command"
>yes</B
> should always work.
The purpose of the <B
CLASS="command"
>provide-ixfr</B
> and
<B
CLASS="command"
>request-ixfr</B
> clauses is
d2592 2
a2593 6
is buggy and crashes or corrupts data when IXFR is used.</P
><P
>The <B
CLASS="command"
>edns</B
> clause determines whether the local server
d2595 10
a2604 48
default is <B
CLASS="command"
>yes</B
>.</P
><P
>The server supports two zone transfer methods. The first, <B
CLASS="command"
>one-answer</B
>,
uses one DNS message per resource record transferred. <B
CLASS="command"
>many-answers</B
> packs
as many resource records as possible into a message. <B
CLASS="command"
>many-answers</B
> is
more efficient, but is only known to be understood by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9, <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>
8.x, and patched versions of <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 4.9.5. You can specify which method
to use for a server with the <B
CLASS="command"
>transfer-format</B
> option.
If <B
CLASS="command"
>transfer-format</B
> is not specified, the <B
CLASS="command"
>transfer-format</B
> specified
by the <B
CLASS="command"
>options</B
> statement will be used.</P
><P
><B
CLASS="command"
>transfers</B
> is used to limit the number of
d2606 5
a2610 24
no <B
CLASS="command"
>transfers</B
> clause is specified, the limit is
set according to the <B
CLASS="command"
>transfers-per-ns</B
> option.</P
><P
>The <B
CLASS="command"
>keys</B
> clause identifies a
<B
CLASS="command"
>key_id</B
> defined by the <B
CLASS="command"
>key</B
> statement,
to be used for transaction security (TSIG, <A
HREF="Bv9ARM.ch04.html#tsig"
>Section 4.5</A
>)
d2615 2
a2616 6
to be signed by this key.</P
><P
>Although the grammar of the <B
CLASS="command"
>keys</B
> clause
d2618 3
a2620 10
supported.</P
><P
>The <B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>transfer-source-v6</B
> clauses specify the IPv4 and IPv6 source
d2622 1
a2622 4
For an IPv4 remote server, only <B
CLASS="command"
>transfer-source</B
> can
d2625 1
a2625 4
<B
CLASS="command"
>transfer-source-v6</B
> can be specified.
d2627 19
a2645 89
<B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>transfer-source-v6</B
> in
<A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN3433"
>6.2.19. <B
CLASS="command"
>trusted-keys</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>trusted-keys {
    <VAR
CLASS="replaceable"
>string</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>string</VAR
> ;
    [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>string</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>string</VAR
> ; [<SPAN
CLASS="optional"
>...</SPAN
>]</SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN3449"
>6.2.20. <B
CLASS="command"
>trusted-keys</B
> Statement Definition
and Usage</A
></H2
><P
>The <B
CLASS="command"
>trusted-keys</B
> statement defines DNSSEC
security roots. DNSSEC is described in <A
HREF="Bv9ARM.ch04.html#DNSSEC"
>Section 4.8</A
>. A security root is defined when the public key for a non-authoritative
d2650 2
a2651 6
DNSSEC validation on all DNS data in subdomains of a security root.</P
><P
>The <B
CLASS="command"
>trusted-keys</B
> statement can contain
d2654 20
a2673 75
key data.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="view_statement_grammar"
>6.2.21. <B
CLASS="command"
>view</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>view <VAR
CLASS="replaceable"
>view_name</VAR
> 
      [<SPAN
CLASS="optional"
><VAR
CLASS="replaceable"
>class</VAR
></SPAN
>] {
      match-clients { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ;
      match-destinations { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ;
      match-recursive-only <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ;
      [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>view_option</VAR
>; ...</SPAN
>]
      [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>zone_statement</VAR
>; ...</SPAN
>]
};
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN3471"
>6.2.22. <B
CLASS="command"
>view</B
> Statement Definition and Usage</A
></H2
><P
>The <B
CLASS="command"
>view</B
> statement is a powerful new feature
of <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 that lets a name server answer a DNS query differently
d2675 2
a2676 6
split DNS setups without having to run multiple servers.</P
><P
>Each <B
CLASS="command"
>view</B
> statement defines a view of the
d2679 5
a2683 23
<VAR
CLASS="varname"
>address_match_list</VAR
> of the view's
<B
CLASS="command"
>match-clients</B
> clause and its destination IP address matches
the <VAR
CLASS="varname"
>address_match_list</VAR
> of the view's
<B
CLASS="command"
>match-destinations</B
> clause.  If not specified, both
<B
CLASS="command"
>match-clients</B
> and <B
CLASS="command"
>match-destinations</B
>
d2685 2
a2686 11
<B
CLASS="command"
>match-clients</B
> and <B
CLASS="command"
>match-destinations</B
>
can also take <B
CLASS="command"
>keys</B
> which provide an mechanism for the
d2688 1
a2688 4
as <B
CLASS="command"
>match-recursive-only</B
>, which means that only recursive
d2690 1
a2690 4
The order of the <B
CLASS="command"
>view</B
> statements is significant &#8212;
d2692 3
a2694 13
<B
CLASS="command"
>view</B
> that it matches.</P
><P
>Zones defined within a <B
CLASS="command"
>view</B
> statement will
be only be accessible to clients that match the <B
CLASS="command"
>view</B
>.
d2697 3
a2699 10
and "external" clients in a split DNS setup.</P
><P
>Many of the options given in the <B
CLASS="command"
>options</B
> statement
can also be used within a <B
CLASS="command"
>view</B
> statement, and then
d2701 1
a2701 4
value is given, the value in the <B
CLASS="command"
>options</B
> statement
d2703 3
a2705 10
in the <B
CLASS="command"
>view</B
> statement; these view-specific defaults
take precedence over those in the <B
CLASS="command"
>options</B
> statement.</P
><P
>Views are class specific.  If no class is given, class IN
d2707 2
a2708 6
since only the IN class has compiled-in default hints.</P
><P
>If there are no <B
CLASS="command"
>view</B
> statements in the config
d2710 1
a2710 4
in class IN. Any <B
CLASS="command"
>zone</B
> statements specified on
d2712 7
a2718 25
this default view, and the <B
CLASS="command"
>options</B
> statement will
apply to the default view. If any explicit <B
CLASS="command"
>view</B
>
statements are present, all <B
CLASS="command"
>zone</B
> statements must
occur inside <B
CLASS="command"
>view</B
> statements.</P
><P
>Here is an example of a typical split DNS setup implemented
using <B
CLASS="command"
>view</B
> statements.</P
><PRE
CLASS="programlisting"
>view "internal" {
d2747 7
a2753 28
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="zone_statement_grammar"
>6.2.23. <B
CLASS="command"
>zone</B
>
Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>zone <VAR
CLASS="replaceable"
>zone_name</VAR
> [<SPAN
CLASS="optional"
><VAR
CLASS="replaceable"
>class</VAR
></SPAN
>] [<SPAN
CLASS="optional"
>{ 
d2755 40
a2794 418
    [<SPAN
CLASS="optional"
> allow-notify { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-query { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-transfer { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-update { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> update-policy { <VAR
CLASS="replaceable"
>update_policy_rule</VAR
> [<SPAN
CLASS="optional"
>...</SPAN
>] } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> allow-update-forwarding { <VAR
CLASS="replaceable"
>address_match_list</VAR
> } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> also-notify { <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> check-names (<CODE
CLASS="constant"
>warn</CODE
>|<CODE
CLASS="constant"
>fail</CODE
>|<CODE
CLASS="constant"
>ignore</CODE
>) ; </SPAN
>]
    [<SPAN
CLASS="optional"
> dialup <VAR
CLASS="replaceable"
>dialup_option</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> delegation-only <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> file <VAR
CLASS="replaceable"
>string</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> forward (<CODE
CLASS="constant"
>only</CODE
>|<CODE
CLASS="constant"
>first</CODE
>) ; </SPAN
>]
    [<SPAN
CLASS="optional"
> forwarders { <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; ... </SPAN
>] }; </SPAN
>]
    [<SPAN
CLASS="optional"
> ixfr-base <VAR
CLASS="replaceable"
>string</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> ixfr-tmp-file <VAR
CLASS="replaceable"
>string</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> maintain-ixfr-base <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> masters [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] { ( <VAR
CLASS="replaceable"
>masters_list</VAR
> | <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] [<SPAN
CLASS="optional"
>key <VAR
CLASS="replaceable"
>key</VAR
></SPAN
>] ) ; [<SPAN
CLASS="optional"
>...</SPAN
>] } ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-ixfr-log-size <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-idle-in <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-idle-out <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-time-in <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-transfer-time-out <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify <VAR
CLASS="replaceable"
>yes_or_no</VAR
> | <VAR
CLASS="replaceable"
>explicit</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> pubkey <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>number</VAR
> <VAR
CLASS="replaceable"
>string</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> alt-transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> alt-transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> use-alt-transfer-source <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> zone-statistics <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> sig-validity-interval <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> database <VAR
CLASS="replaceable"
>string</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> min-refresh-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-refresh-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> min-retry-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> max-retry-time <VAR
CLASS="replaceable"
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> multi-master <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> key-directory <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
d2796 18
a2813 46
}</SPAN
>];
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN3645"
>6.2.24. <B
CLASS="command"
>zone</B
> Statement Definition and Usage</A
></H2
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN3648"
>6.2.24.1. Zone Types</A
></H3
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN3650"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="varname"
>master</VAR
></P
></TD
><TD
><P
>The server has a master copy of the data
d2815 6
a2820 18
it.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>slave</VAR
></P
></TD
><TD
><P
>A slave zone is a replica of a master
zone. The <B
CLASS="command"
>masters</B
> list specifies one or more IP addresses
d2834 1
a2834 4
a slave server for the zone <VAR
CLASS="literal"
>example.com</VAR
> might place
d2836 1
a2836 7
<TT
CLASS="filename"
>ex/example.com</TT
> where <TT
CLASS="filename"
>ex/</TT
> is
d2839 6
a2844 14
a single directory.)</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>stub</VAR
></P
></TD
><TD
><P
>A stub zone is similar to a slave zone,
d2847 2
a2848 6
they are a feature specific to the <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> implementation.
</P
>
d2850 1
a2850 2
<P
>Stub zones can be used to eliminate the need for glue NS record
d2852 1
a2852 4
a set of name server addresses in <TT
CLASS="filename"
>named.conf</TT
>.
d2855 1
a2855 4
In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 4/8, zone transfers of a parent zone
d2858 1
a2858 4
only in the master server for the parent zone. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>
d2860 1
a2860 4
way. Therefore, if a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 master serving a parent
d2863 1
a2863 2
configured.</P
>
d2865 1
a2865 2
<P
>Stub zones can also be used as a way of forcing the resolution
d2869 1
a2869 4
<VAR
CLASS="literal"
>10.in-addr.arpa</VAR
>
d2871 9
a2879 29
servers for that domain.</P
>
</TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>forward</VAR
></P
></TD
><TD
><P
>A "forward zone" is a way to configure
forwarding on a per-domain basis.  A <B
CLASS="command"
>zone</B
> statement
of type <B
CLASS="command"
>forward</B
> can contain a <B
CLASS="command"
>forward</B
> and/or <B
CLASS="command"
>forwarders</B
> statement,
d2881 2
a2882 8
name. If no <B
CLASS="command"
>forwarders</B
> statement is present or
an empty list for <B
CLASS="command"
>forwarders</B
> is given, then no
d2884 1
a2884 4
any forwarders in the <B
CLASS="command"
>options</B
> statement. Thus
d2886 1
a2886 4
global <B
CLASS="command"
>forward</B
> option (that is, "forward first
d2888 6
a2893 15
servers as set globally) you need to re-specify the global forwarders.</P
>
</TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>hint</VAR
></P
></TD
><TD
><P
>The initial set of root name servers is
d2898 6
a2903 14
Classes other than IN have no built-in defaults hints.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>delegation-only</VAR
></P
></TD
><TD
><P
>This is used to enforce the delegation only
d2907 15
a2921 39
apex.  This SHOULD NOT be applied to leaf zones.</P
>
<P
><VAR
CLASS="varname"
>delegation-only</VAR
> has no effect on answers received
from forwarders.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN3713"
>6.2.24.2. Class</A
></H3
><P
>The zone's name may optionally be followed by a class. If
a class is not specified, class <VAR
CLASS="literal"
>IN</VAR
> (for <VAR
CLASS="varname"
>Internet</VAR
>),
is assumed. This is correct for the vast majority of cases.</P
><P
>The <VAR
CLASS="literal"
>hesiod</VAR
> class is
d2925 20
a2944 81
<VAR
CLASS="literal"
>HS</VAR
> is
a synonym for hesiod.</P
><P
>Another MIT development is CHAOSnet, a LAN protocol created
in the mid-1970s. Zone data for it can be specified with the <VAR
CLASS="literal"
>CHAOS</VAR
> class.</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN3723"
>6.2.24.3. Zone Options</A
></H3
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>allow-notify</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>allow-notify</B
> in <A
HREF="Bv9ARM.ch06.html#access_control"
>Section 6.2.16.4</A
></P
></DD
><DT
><B
CLASS="command"
>allow-query</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>allow-query</B
> in <A
HREF="Bv9ARM.ch06.html#access_control"
>Section 6.2.16.4</A
></P
></DD
><DT
><B
CLASS="command"
>allow-transfer</B
></DT
><DD
><P
>See the description of <B
CLASS="command"
>allow-transfer</B
>
in <A
HREF="Bv9ARM.ch06.html#access_control"
>Section 6.2.16.4</A
>.</P
></DD
><DT
><B
CLASS="command"
>allow-update</B
></DT
><DD
><P
>Specifies which hosts are allowed to
d2948 10
a2957 46
<A
HREF="Bv9ARM.ch07.html#dynamic_update_security"
>Section 7.3</A
> for details.
</P
></DD
><DT
><B
CLASS="command"
>update-policy</B
></DT
><DD
><P
>Specifies a "Simple Secure Update" policy. See
<A
HREF="Bv9ARM.ch06.html#dynamic_update_policies"
>Section 6.2.24.4</A
>.</P
></DD
><DT
><B
CLASS="command"
>allow-update-forwarding</B
></DT
><DD
><P
>See the description of <B
CLASS="command"
>allow-update-forwarding</B
>
in <A
HREF="Bv9ARM.ch06.html#access_control"
>Section 6.2.16.4</A
>.</P
></DD
><DT
><B
CLASS="command"
>also-notify</B
></DT
><DD
><P
>Only meaningful if <B
CLASS="command"
>notify</B
> is
d2959 1
a2959 4
<VAR
CLASS="literal"
>DNS NOTIFY</VAR
> message
d2962 2
a2963 8
with <B
CLASS="command"
>also-notify</B
>. A port may be specified
with each <B
CLASS="command"
>also-notify</B
> address to send the notify
d2965 5
a2969 14
<B
CLASS="command"
>also-notify</B
> is not meaningful for stub zones.
The default is the empty list.</P
></DD
><DT
><B
CLASS="command"
>check-names</B
></DT
><DD
><P
>&#13;This option is used to restrict the character set and syntax of
d2971 7
a2977 28
network.  The default varies according to zone type.  For <B
CLASS="command"
>master</B
> zones the default is <B
CLASS="command"
>fail</B
>.  For <B
CLASS="command"
>slave</B
>
zones the default is <B
CLASS="command"
>warn</B
>.
</P
></DD
><DT
><B
CLASS="command"
>database</B
></DT
><DD
><P
>Specify the type of database to be used for storing the
zone data.  The string following the <B
CLASS="command"
>database</B
> keyword
d2981 4
a2984 9
to the database type.</P
><P
>The default is <KBD
CLASS="userinput"
>"rbt"</KBD
>, BIND 9's native in-memory
red-black-tree database.  This database does not take arguments.</P
><P
>Other values are possible if additional database drivers
d2986 8
a2993 30
with the distribution but none are linked in by default.</P
></DD
><DT
><B
CLASS="command"
>dialup</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>dialup</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
><DT
><B
CLASS="command"
>delegation-only</B
></DT
><DD
><P
>The flag only applies to hint and stub zones.  If set
to <KBD
CLASS="userinput"
>yes</KBD
> then the zone will also be treated as if it
d2995 12
a3006 45
</P
></DD
><DT
><B
CLASS="command"
>forward</B
></DT
><DD
><P
>Only meaningful if the zone has a forwarders
list. The <B
CLASS="command"
>only</B
> value causes the lookup to fail
after trying the forwarders and getting no answer, while <B
CLASS="command"
>first</B
> would
allow a normal lookup to be tried.</P
></DD
><DT
><B
CLASS="command"
>forwarders</B
></DT
><DD
><P
>Used to override the list of global forwarders.
If it is not specified in a zone of type <B
CLASS="command"
>forward</B
>,
no forwarding is done for the zone; the global options are not used.</P
></DD
><DT
><B
CLASS="command"
>ixfr-base</B
></DT
><DD
><P
>Was used in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8 to specify the name
d3008 23
a3030 117
<ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 ignores the option and constructs the name of the journal
file by appending "<TT
CLASS="filename"
>.jnl</TT
>" to the name of the
zone file.</P
></DD
><DT
><B
CLASS="command"
>ixfr-tmp-file</B
></DT
><DD
><P
>Was an undocumented option in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8.
Ignored in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9.</P
></DD
><DT
><B
CLASS="command"
>max-transfer-time-in</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>max-transfer-time-in</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
></DD
><DT
><B
CLASS="command"
>max-transfer-idle-in</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>max-transfer-idle-in</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
></DD
><DT
><B
CLASS="command"
>max-transfer-time-out</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>max-transfer-time-out</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
></DD
><DT
><B
CLASS="command"
>max-transfer-idle-out</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>max-transfer-idle-out</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
></DD
><DT
><B
CLASS="command"
>notify</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>notify</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
><DT
><B
CLASS="command"
>pubkey</B
></DT
><DD
><P
>In <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8, this option was intended for specifying
d3032 4
a3035 17
zones when they are loaded from disk. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 does not verify signatures
on load and ignores the option.</P
></DD
><DT
><B
CLASS="command"
>zone-statistics</B
></DT
><DD
><P
>If <KBD
CLASS="userinput"
>yes</KBD
>, the server will keep statistical
d3037 53
a3089 226
<B
CLASS="command"
>statistics-file</B
> defined in the server options.</P
></DD
><DT
><B
CLASS="command"
>sig-validity-interval</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>sig-validity-interval</B
> in <A
HREF="Bv9ARM.ch06.html#tuning"
>Section 6.2.16.15</A
>.</P
></DD
><DT
><B
CLASS="command"
>transfer-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>transfer-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>transfer-source-v6</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>transfer-source-v6</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>alt-transfer-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source-v6</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>alt-transfer-source-v6</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>use-alt-transfer-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>use-alt-transfer-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>notify-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>notify-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>notify-source-v6</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>notify-source-v6</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.
</P
></DD
><DT
><B
CLASS="command"
>min-refresh-time</B
>, <B
CLASS="command"
>max-refresh-time</B
>, <B
CLASS="command"
>min-retry-time</B
>, <B
CLASS="command"
>max-retry-time</B
></DT
><DD
><P
>&#13;See the description in <A
HREF="Bv9ARM.ch06.html#tuning"
>Section 6.2.16.15</A
>.
</P
></DD
><DT
><B
CLASS="command"
>ixfr-from-differences</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>ixfr-from-differences</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
><DT
><B
CLASS="command"
>key-directory</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>key-directory</B
> in <A
HREF="Bv9ARM.ch06.html#options"
>Section 6.2.16</A
></P
></DD
><DT
><B
CLASS="command"
>multi-master</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>multi-master</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="dynamic_update_policies"
>6.2.24.4. Dynamic Update Policies</A
></H3
><P
><ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 supports two alternative methods of granting clients
d3091 6
a3096 26
configured by the <B
CLASS="command"
>allow-update</B
> and
<B
CLASS="command"
>update-policy</B
> option, respectively.</P
><P
>The <B
CLASS="command"
>allow-update</B
> clause works the same
way as in previous versions of <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>. It grants given clients the
permission to update any record of any name in the zone.</P
><P
>The <B
CLASS="command"
>update-policy</B
> clause is new in <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
>
d3102 11
a3112 48
be determined.</P
><P
>Rules are specified in the <B
CLASS="command"
>update-policy</B
> zone
option, and are only meaningful for master zones.  When the <B
CLASS="command"
>update-policy</B
> statement
is present, it is a configuration error for the <B
CLASS="command"
>allow-update</B
> statement
to be present.  The <B
CLASS="command"
>update-policy</B
> statement only
examines the signer of a message; the source address is not relevant.</P
><P
>This is how a rule definition looks:</P
><PRE
CLASS="programlisting"
>&#13;( <B
CLASS="command"
>grant</B
> | <B
CLASS="command"
>deny</B
> ) <VAR
CLASS="replaceable"
>identity</VAR
> <VAR
CLASS="replaceable"
>nametype</VAR
> <VAR
CLASS="replaceable"
>name</VAR
> [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>types</VAR
> </SPAN
>]
</PRE
><P
>Each rule grants or denies privileges.  Once a message has
d3117 2
a3118 3
the types specified in the type field.</P
><P
>The identity field specifies a name or a wildcard name.  Normally, this
d3122 1
a3122 4
TKEY exchange.  When the <VAR
CLASS="replaceable"
>identity</VAR
> field specifies a
d3124 15
a3138 48
to multiple identities.  The <VAR
CLASS="replaceable"
>identity</VAR
> field must
contain a fully qualified domain name.</P
><P
>The <VAR
CLASS="replaceable"
>nametype</VAR
> field has 4 values:
<VAR
CLASS="varname"
>name</VAR
>, <VAR
CLASS="varname"
>subdomain</VAR
>,
<VAR
CLASS="varname"
>wildcard</VAR
>, and <VAR
CLASS="varname"
>self</VAR
>.
</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4009"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="varname"
>name</VAR
></P
></TD
><TD
><P
>Exact-match semantics.  This rule matches when the
d3140 5
a3144 17
<VAR
CLASS="replaceable"
>name</VAR
> field.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>subdomain</VAR
></P
></TD
><TD
><P
>This rule matches when the name being updated
d3146 5
a3150 20
<VAR
CLASS="replaceable"
>name</VAR
> field.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>wildcard</VAR
></P
></TD
><TD
><P
>The <VAR
CLASS="replaceable"
>name</VAR
> field is
d3152 9
a3160 30
being updated name is a valid expansion of the wildcard.</P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="varname"
>self</VAR
></P
></TD
><TD
><P
>This rule matches when the name being updated
matches the contents of the <VAR
CLASS="replaceable"
>identity</VAR
> field.
The <VAR
CLASS="replaceable"
>name</VAR
> field is ignored, but should be
the same as the <VAR
CLASS="replaceable"
>identity</VAR
> field.  The
<VAR
CLASS="varname"
>self</VAR
> nametype is most useful when allowing using
d3162 8
a3169 23
to be updated.  The <VAR
CLASS="replaceable"
>identity</VAR
> would be
specified as <CODE
CLASS="constant"
>*</CODE
> in this case.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>In all cases, the <VAR
CLASS="replaceable"
>name</VAR
> field must
specify a fully qualified domain name.</P
><P
>If no types are explicitly specified, this rule matches all types except
d3174 11
a3184 22
</P
></DIV
></DIV
></DIV
><DIV
CLASS="sect1"
><H1
CLASS="sect1"
><A
NAME="AEN4050"
>6.3. Zone File</A
></H1
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="types_of_resource_records_and_when_to_use_them"
>6.3.1. Types of Resource Records and When to Use Them</A
></H2
><P
>This section, largely borrowed from RFC 1034, describes the
d3187 5
a3191 11
and implemented in the DNS. These are also included.</P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN4055"
>6.3.1.1. Resource Records</A
></H3
><P
>A domain name identifies a node.  Each node has a set of
d3198 20
a3217 50
        that a particular nearby server be tried first. See <A
HREF="Bv9ARM.ch06.html#the_sortlist_statement"
>Section 6.2.16.13</A
> and <A
HREF="Bv9ARM.ch06.html#rrset_ordering"
>Section 6.2.16.14</A
>.</P
><P
>The components of a Resource Record are:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4061"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>owner name</P
></TD
><TD
><P
>the domain name where the RR is found.</P
></TD
></TR
><TR
><TD
><P
>type</P
></TD
><TD
><P
>an encoded 16 bit value that specifies
the type of the resource record.</P
></TD
></TR
><TR
><TD
><P
>TTL</P
></TD
><TD
><P
>the time to live of the RR. This field
d3220 33
a3252 79
be cached before it should be discarded.</P
></TD
></TR
><TR
><TD
><P
>class</P
></TD
><TD
><P
>an encoded 16 bit value that identifies
a protocol family or instance of a protocol.</P
></TD
></TR
><TR
><TD
><P
>RDATA</P
></TD
><TD
><P
>the resource data.  The format of the
data is type (and sometimes class) specific.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The following are <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>types</I
></SPAN
> of valid RRs:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4093"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>A</P
></TD
><TD
><P
>a host address.  In the IN class, this is a
32-bit IP address.  Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>AAAA</P
></TD
><TD
><P
>IPv6 address.  Described in RFC 1886.</P
></TD
></TR
><TR
><TD
><P
>A6</P
></TD
><TD
><P
>IPv6 address.  This can be a partial
d3254 25
a3278 55
address (the prefix) can be found.  Experimental.  Described in RFC 2874.</P
></TD
></TR
><TR
><TD
><P
>AFSDB</P
></TD
><TD
><P
>location of AFS database servers.
Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
><P
>APL</P
></TD
><TD
><P
>address prefix list.  Experimental.
Described in RFC 3123.</P
></TD
></TR
><TR
><TD
><P
>CERT</P
></TD
><TD
><P
>holds a digital certificate.
Described in RFC 2538.</P
></TD
></TR
><TR
><TD
><P
>CNAME</P
></TD
><TD
><P
>identifies the canonical name of an alias.
Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>DNAME</P
></TD
><TD
><P
>Replaces the domain name specified with
d3282 34
a3315 76
Described in RFC 2672.</P
></TD
></TR
><TR
><TD
><P
>GPOS</P
></TD
><TD
><P
>Specifies the global position.  Superseded by LOC.</P
></TD
></TR
><TR
><TD
><P
>HINFO</P
></TD
><TD
><P
>identifies the CPU and OS used by a host.
Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>ISDN</P
></TD
><TD
><P
>representation of ISDN addresses.
Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
><P
>KEY</P
></TD
><TD
><P
>stores a public key associated with a
DNS name.  Described in RFC 2535.</P
></TD
></TR
><TR
><TD
><P
>KX</P
></TD
><TD
><P
>identifies a key exchanger for this
DNS name.  Described in RFC 2230.</P
></TD
></TR
><TR
><TD
><P
>LOC</P
></TD
><TD
><P
>for storing GPS info.  Described in RFC 1876.
Experimental.</P
></TD
></TR
><TR
><TD
><P
>MX</P
></TD
><TD
><P
>identifies a mail exchange for the domain.
d3318 19
a3336 43
Described in RFC 974, RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>NAPTR</P
></TD
><TD
><P
>name authority pointer.  Described in RFC 2915.</P
></TD
></TR
><TR
><TD
><P
>NSAP</P
></TD
><TD
><P
>a network service access point.
Described in RFC 1706.</P
></TD
></TR
><TR
><TD
><P
>NS</P
></TD
><TD
><P
>the authoritative name server for the
domain.  Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>NXT</P
></TD
><TD
><P
>used in DNSSEC to securely indicate that
d3339 20
a3358 44
Described in RFC 2535.</P
></TD
></TR
><TR
><TD
><P
>PTR</P
></TD
><TD
><P
>a pointer to another part of the domain
name space.  Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>PX</P
></TD
><TD
><P
>provides mappings between RFC 822 and X.400
addresses.  Described in RFC 2163.</P
></TD
></TR
><TR
><TD
><P
>RP</P
></TD
><TD
><P
>information on persons responsible
for the domain.  Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
><P
>RT</P
></TD
><TD
><P
>route-through binding for hosts that
d3360 24
a3383 54
Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
><P
>SIG</P
></TD
><TD
><P
>("signature") contains data authenticated
in the secure DNS.  Described in RFC 2535.</P
></TD
></TR
><TR
><TD
><P
>SOA</P
></TD
><TD
><P
>identifies the start of a zone of authority.
Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>SRV</P
></TD
><TD
><P
>information about well known network
services (replaces WKS).  Described in RFC 2782.</P
></TD
></TR
><TR
><TD
><P
>TXT</P
></TD
><TD
><P
>text records.  Described in RFC 1035.</P
></TD
></TR
><TR
><TD
><P
>WKS</P
></TD
><TD
><P
>information about which well known
d3385 25
a3409 58
</P
></TD
></TR
><TR
><TD
><P
>X25</P
></TD
><TD
><P
>representation of X.25 network addresses.
Experimental.  Described in RFC 1183.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The following <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>classes</I
></SPAN
> of resource records
are currently valid in the DNS:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4245"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>IN</P
></TD
><TD
><P
>The Internet.</P
></TD
></TR
><TR
><TD
><P
>CH</P
></TD
><TD
><P
>&#13;CHAOSnet, a LAN protocol created at MIT in the mid-1970s.
d3412 7
a3418 15
<VAR
CLASS="literal"
>version.bind</VAR
>.
</P
></TD
></TR
><TR
><TD
><P
>HS</P
></TD
><TD
><P
>&#13;Hesiod, an information service
d3422 5
a3426 10
</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The owner name is often implicit, rather than forming an integral
d3431 2
a3432 3
fits the needs of the resource being described.</P
><P
>The meaning of the TTL field is a time limit on how long an
d3442 2
a3443 3
the change.</P
><P
>The data in the RDATA section of RRs is carried as a combination
d3445 6
a3450 12
used as "pointers" to other data in the DNS.</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN4269"
>6.3.1.2. Textual expression of RRs</A
></H3
><P
>RRs are represented in binary form in the packets of the DNS
d3456 2
a3457 3
using parentheses.</P
><P
>The start of the line gives the owner of the RR.  If a line
d3459 2
a3460 3
that of the previous RR.  Blank lines are often included for readability.</P
><P
>Following the owner, we list the TTL, type, and class of the
d3465 44
a3508 154
are often omitted from examples in the interests of clarity.</P
><P
>The resource data or RDATA section of the RR are given using
knowledge of the typical representation for the data.</P
><P
>For example, we might show the RRs carried in a message as:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4276"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="literal"
>ISI.EDU.</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MX</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10 VENERA.ISI.EDU.</VAR
></P
></TD
></TR
><TR
><TD
><P
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MX</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10 VAXA.ISI.EDU</VAR
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>VENERA.ISI.EDU</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>128.9.0.32</VAR
></P
></TD
></TR
><TR
><TD
><P
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10.1.0.52</VAR
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>VAXA.ISI.EDU</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10.2.0.27</VAR
></P
></TD
></TR
><TR
><TD
><P
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>128.9.0.33</VAR
></P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The MX RRs have an RDATA section which consists of a 16 bit
d3510 31
a3540 87
IP address format to contain a 32 bit internet address.</P
><P
>This example shows six RRs, with two RRs at each of three
domain names.</P
><P
>Similarly we might see:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4342"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="literal"
>XX.LCS.MIT.EDU. IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10.0.0.44</VAR
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>CH</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MIT.EDU. 2420</VAR
></P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>This example shows two addresses for <VAR
CLASS="literal"
>XX.LCS.MIT.EDU</VAR
>,
each of a different class.</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN4370"
>6.3.2. Discussion of MX Records</A
></H2
><P
>As described above, domain servers store information as a
d3546 2
a3547 3
determine when the RR is relevant.</P
><P
>MX records are used to control delivery of email. The data
d3555 3
a3557 10
name given is the machine to which the mail will be delivered. It <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>must</I
></SPAN
> have
an associated A record &#8212; CNAME is not sufficient.</P
><P
>For a given domain, if there is both a CNAME record and an
d3560 57
a3616 218
pointed to by the CNAME.</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4376"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="literal"
>example.com.</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MX</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>mail.example.com.</VAR
></P
></TD
></TR
><TR
><TD
><P
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MX</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>mail2.example.com.</VAR
></P
></TD
></TR
><TR
><TD
><P
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>MX</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>20</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>mail.backup.org.</VAR
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>mail.example.com.</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10.0.0.1</VAR
></P
></TD
><TD
><P
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>mail2.example.com.</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>A</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>10.0.0.2</VAR
></P
></TD
><TD
><P
></P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>For example:</P
><P
>Mail delivery will be attempted to <VAR
CLASS="literal"
>mail.example.com</VAR
> and
<VAR
CLASS="literal"
>mail2.example.com</VAR
> (in
any order), and if neither of those succeed, delivery to <VAR
CLASS="literal"
>mail.backup.org</VAR
> will
be attempted.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="Setting_TTLs"
>6.3.3. Setting TTLs</A
></H2
><P
>The time to live of the RR field is a 32 bit integer represented
d3620 11
a3630 21
used in a zone file.</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4468"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>SOA</P
></TD
><TD
><P
>The last field in the SOA is the negative
d3632 8
a3639 14
(NXDOMAIN) responses from you.</P
><P
>The maximum time for
negative caching is 3 hours (3h).</P
></TD
></TR
><TR
><TD
><P
>$TTL</P
></TD
><TD
><P
>The $TTL directive at the top of the
d3641 5
a3645 11
a specific TTL set.</P
></TD
></TR
><TR
><TD
><P
>RR TTLs</P
></TD
><TD
><P
>Each RR can have a TTL as the second
d3647 12
a3658 32
the it.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>All of these TTLs default to units of seconds, though units
can be explicitly specified, for example, <VAR
CLASS="literal"
>1h30m</VAR
>. </P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN4491"
>6.3.4. Inverse Mapping in IPv4</A
></H2
><P
>Reverse name resolution (that is, translation from IP address
to name) is achieved by means of the <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>in-addr.arpa</I
></SPAN
> domain
d3667 20
a3686 64
in the [<SPAN
CLASS="optional"
>example.com</SPAN
>] domain:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4496"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><VAR
CLASS="literal"
>$ORIGIN</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>2.1.10.in-addr.arpa</VAR
></P
></TD
></TR
><TR
><TD
><P
><VAR
CLASS="literal"
>3</VAR
></P
></TD
><TD
><P
><VAR
CLASS="literal"
>IN PTR foo.example.com.</VAR
></P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>The <B
CLASS="command"
>$ORIGIN</B
> lines in the examples
d3689 7
a3695 14
that the example is relative to the listed origin.</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN4518"
>6.3.5. Other Zone File Directives</A
></H2
><P
>The Master File Format was initially defined in RFC 1035 and
d3698 9
a3706 44
class.</P
><P
>Master File Directives include <B
CLASS="command"
>$ORIGIN</B
>, <B
CLASS="command"
>$INCLUDE</B
>,
and <B
CLASS="command"
>$TTL.</B
></P
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN4525"
>6.3.5.1. The <B
CLASS="command"
>$ORIGIN</B
> Directive</A
></H3
><P
>Syntax: <B
CLASS="command"
>$ORIGIN
</B
><VAR
CLASS="replaceable"
>domain-name</VAR
> [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>comment</VAR
></SPAN
>]</P
><P
><B
CLASS="command"
>$ORIGIN</B
> sets the domain name that will
d3708 25
a3732 99
in there is an implicit <B
CLASS="command"
>$ORIGIN</B
> &#60;<VAR
CLASS="varname"
>zone-name</VAR
>&#62;<B
CLASS="command"
>.</B
> The
current <B
CLASS="command"
>$ORIGIN</B
> is appended to the domain specified
in the <B
CLASS="command"
>$ORIGIN</B
> argument if it is not absolute.</P
><PRE
CLASS="programlisting"
><VAR
CLASS="literal"
>$ORIGIN example.com.
WWW     CNAME   MAIN-SERVER</VAR
></PRE
><P
>is equivalent to</P
><PRE
CLASS="programlisting"
><VAR
CLASS="literal"
>WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.</VAR
></PRE
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN4545"
>6.3.5.2. The <B
CLASS="command"
>$INCLUDE</B
> Directive</A
></H3
><P
>Syntax: <B
CLASS="command"
>$INCLUDE</B
>
<VAR
CLASS="replaceable"
>filename</VAR
> [<SPAN
CLASS="optional"
>&#13;<VAR
CLASS="replaceable"
>origin</VAR
> </SPAN
>] [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>comment</VAR
> </SPAN
>]</P
><P
>Read and process the file <TT
CLASS="filename"
>filename</TT
> as
if it were included into the file at this point.  If <B
CLASS="command"
>origin</B
> is
specified the file is processed with <B
CLASS="command"
>$ORIGIN</B
> set
to that value, otherwise the current <B
CLASS="command"
>$ORIGIN</B
> is
used.</P
><P
>The origin and the current domain name
revert to the values they had prior to the <B
CLASS="command"
>$INCLUDE</B
> once
the file has been read.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>
d3734 1
a3734 4
an <B
CLASS="command"
>$INCLUDE</B
>, but it is silent on whether the current
d3737 20
a3756 98
</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN4565"
>6.3.5.3. The <B
CLASS="command"
>$TTL</B
> Directive</A
></H3
><P
>Syntax: <B
CLASS="command"
>$TTL</B
>
<VAR
CLASS="replaceable"
>default-ttl</VAR
> [<SPAN
CLASS="optional"
>&#13;<VAR
CLASS="replaceable"
>comment</VAR
> </SPAN
>]</P
><P
>Set the default Time To Live (TTL) for subsequent records
with undefined TTLs. Valid TTLs are of the range 0-2147483647 seconds.</P
><P
><B
CLASS="command"
>$TTL</B
> is defined in RFC 2308.</P
></DIV
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN4576"
>6.3.6. <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> Master File Extension: the  <B
CLASS="command"
>$GENERATE</B
> Directive</A
></H2
><P
>Syntax: <B
CLASS="command"
>$GENERATE</B
> <VAR
CLASS="replaceable"
>range</VAR
> <VAR
CLASS="replaceable"
>lhs</VAR
> [<SPAN
CLASS="optional"
><VAR
CLASS="replaceable"
>ttl</VAR
></SPAN
>] [<SPAN
CLASS="optional"
><VAR
CLASS="replaceable"
>class</VAR
></SPAN
>] <VAR
CLASS="replaceable"
>type</VAR
> <VAR
CLASS="replaceable"
>rhs</VAR
> [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>comment</VAR
> </SPAN
>]</P
><P
><B
CLASS="command"
>$GENERATE</B
> is used to create a series of
resource records that only differ from each other by an iterator. <B
CLASS="command"
>$GENERATE</B
> can
d3759 2
a3760 6
delegation.</P
><PRE
CLASS="programlisting"
><VAR
CLASS="literal"
>$ORIGIN 0.0.192.IN-ADDR.ARPA.
d3762 3
a3764 9
$GENERATE 1-127 $ CNAME $.0</VAR
></PRE
><P
>is equivalent to</P
><PRE
CLASS="programlisting"
><VAR
CLASS="literal"
>0.0.0.192.IN-ADDR.ARPA NS SERVER1.EXAMPLE.
d3770 10
a3779 25
</VAR
></PRE
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4600"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
><B
CLASS="command"
>range</B
></P
></TD
><TD
><P
>This can be one of two forms: start-stop
d3781 8
a3788 25
        1. All of start, stop and step must be positive.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>lhs</B
></P
></TD
><TD
><P
><B
CLASS="command"
>lhs</B
> describes the
owner name of the resource records to be created.      Any single <B
CLASS="command"
>$</B
> symbols
within the <B
CLASS="command"
>lhs</B
> side are replaced by the iterator
d3790 3
a3792 15
To get a $ in the output you need to escape the <B
CLASS="command"
>$</B
>
using a backslash <B
CLASS="command"
>\</B
>,
e.g. <B
CLASS="command"
>\$</B
>. The <B
CLASS="command"
>$</B
> may optionally be followed
d3794 3
a3796 15
Modifiers are introduced by a <B
CLASS="command"
>{</B
> immediately following the
<B
CLASS="command"
>$</B
> as <B
CLASS="command"
>${offset[,width[,base]]}</B
>.
e.g. <B
CLASS="command"
>${-20,3,d}</B
> which subtracts 20 from the current value,
d3798 14
a3811 50
output forms are decimal (<B
CLASS="command"
>d</B
>), octal (<B
CLASS="command"
>o</B
>)
and hexadecimal (<B
CLASS="command"
>x</B
> or <B
CLASS="command"
>X</B
> for uppercase).
The default modifier is <B
CLASS="command"
>${0,0,d}</B
>.
If the <B
CLASS="command"
>lhs</B
> is not
absolute, the current <B
CLASS="command"
>$ORIGIN</B
> is appended to
the name.</P
>
<P
>For compatibility with earlier versions <B
CLASS="command"
>$$</B
> is still
recognized a indicating a literal $ in the output.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>ttl</B
></P
></TD
><TD
><P
><B
CLASS="command"
>ttl</B
> specifies the
d3813 9
a3821 27
	  inherited using the normal ttl inheritance rules.</P
>
	  <P
><B
CLASS="command"
>class</B
> and <B
CLASS="command"
>ttl</B
> can be
	  entered in either order.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>class</B
></P
></TD
><TD
><P
><B
CLASS="command"
>class</B
> specifies the
d3823 42
a3864 127
	  it is specified.</P
>
	  <P
><B
CLASS="command"
>class</B
> and <B
CLASS="command"
>ttl</B
> can be
	  entered in either order.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>type</B
></P
></TD
><TD
><P
>At present the only supported types are
PTR, CNAME, DNAME, A, AAAA and NS.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>rhs</B
></P
></TD
><TD
><P
>rhs is a domain name. It is processed
similarly to lhs.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The <B
CLASS="command"
>$GENERATE</B
> directive is a <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> extension
and not part of the standard zone file format.</P
><P
>BIND 8 does not support the optional TTL and CLASS fields.</P
></DIV
></DIV
></DIV
><DIV
CLASS="NAVFOOTER"
><HR
ALIGN="LEFT"
WIDTH="100%"><TABLE
SUMMARY="Footer navigation table"
WIDTH="100%"
BORDER="0"
CELLPADDING="0"
CELLSPACING="0"
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
><A
HREF="Bv9ARM.ch05.html"
ACCESSKEY="P"
>Prev</A
></TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
><A
HREF="Bv9ARM.html"
ACCESSKEY="H"
>Home</A
></TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><A
HREF="Bv9ARM.ch07.html"
ACCESSKEY="N"
>Next</A
></TD
></TR
><TR
><TD
WIDTH="33%"
ALIGN="left"
VALIGN="top"
>The <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 Lightweight Resolver</TD
><TD
WIDTH="34%"
ALIGN="center"
VALIGN="top"
>&nbsp;</TD
><TD
WIDTH="33%"
ALIGN="right"
VALIGN="top"
><ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9 Security Considerations</TD
></TR
></TABLE
></DIV
></BODY
></HTML
>
@


1.6
log
@resolve conflicts
@
text
@d4234 1
a4234 1
zones.  This options specifies the device (or file) from which to read
d11559 1
a11559 1
>@


1.5
log
@resolve conflicts
@
text
@d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN4015"
d154 1
a154 1
NAME="AEN1076"
d626 1
a626 1
NAME="AEN1241"
d657 1
a657 1
NAME="AEN1249"
d771 1
a771 1
NAME="AEN1280"
d790 1
a790 1
NAME="AEN1285"
d822 1
a822 1
NAME="AEN1294"
d935 1
a935 1
NAME="AEN1318"
d1135 1
a1135 1
NAME="AEN1401"
d1184 1
a1184 1
NAME="AEN1414"
d1267 1
a1267 1
NAME="AEN1445"
d1581 1
a1581 1
NAME="AEN1524"
d1599 1
a1599 1
NAME="AEN1529"
d1628 1
a1628 1
NAME="AEN1536"
d1656 1
a1656 1
NAME="AEN1543"
d1738 1
a1738 1
NAME="AEN1563"
d1880 1
a1880 1
NAME="AEN1603"
d1943 1
a1943 1
NAME="AEN1619"
d2459 1
a2459 1
NAME="AEN1743"
d2786 1
a2786 1
NAME="AEN1873"
d2867 1
a2867 1
NAME="AEN1897"
d2941 1
a2941 1
NAME="AEN1916"
d2990 1
a2990 1
NAME="AEN1931"
d3008 1
a3008 1
NAME="AEN1936"
d3178 7
d3332 1
a3332 1
> response</VAR
a3962 1
};
d3979 1
d4500 1
a4500 1
NAME="AEN2390"
d5291 48
d5347 1
a5347 1
NAME="AEN2669"
d5415 1
a5415 1
NAME="AEN2688"
d5627 1
a5627 1
NAME="AEN2755"
d5730 1
a5730 1
NAME="AEN2782"
d6238 1
a6238 1
NAME="AEN2948"
d6262 1
a6262 1
NAME="AEN2953"
d6382 1
a6382 1
NAME="AEN2990"
d6432 12
d6517 1
a6517 1
NAME="AEN3031"
d6882 1
a6882 1
NAME="AEN3119"
d7344 1
a7344 1
NAME="AEN3263"
d7816 1
a7816 1
NAME="AEN3402"
d7871 1
a7871 1
NAME="AEN3418"
d7959 1
a7959 1
NAME="AEN3440"
d8593 1
a8593 1
NAME="AEN3614"
d8604 1
a8604 1
NAME="AEN3617"
d8612 1
a8612 1
NAME="AEN3619"
d8844 1
a8844 1
NAME="AEN3682"
d8882 1
a8882 1
NAME="AEN3692"
d9026 14
a9039 1
network.
d9631 1
a9631 1
NAME="AEN3974"
d9756 1
a9756 1
NAME="AEN4015"
d9777 1
a9777 1
NAME="AEN4020"
d9802 1
a9802 1
NAME="AEN4026"
d9883 1
a9883 1
NAME="AEN4058"
d10234 1
a10234 1
NAME="AEN4210"
d10316 1
a10316 1
NAME="AEN4234"
d10348 1
a10348 1
NAME="AEN4241"
d10503 1
a10503 1
NAME="AEN4307"
d10574 1
a10574 1
NAME="AEN4335"
d10612 1
a10612 1
NAME="AEN4341"
d10833 1
a10833 1
NAME="AEN4433"
d10896 1
a10896 1
NAME="AEN4456"
d10925 1
a10925 1
NAME="AEN4461"
d10991 1
a10991 1
NAME="AEN4483"
d11016 1
a11016 1
NAME="AEN4490"
d11082 1
a11082 1
NAME="AEN4510"
d11158 1
a11158 1
NAME="AEN4530"
d11194 1
a11194 1
NAME="AEN4541"
d11277 1
a11277 1
NAME="AEN4565"
@


1.4
log
@update to BIND v9.2.3. ok todd@@
@
text
@d1 1
d8 1
a8 2
CONTENT="Modular DocBook HTML Stylesheet Version 1.73
"><LINK
d73 2
a74 1
>Chapter 6. <SPAN
d76 2
a77 3
>BIND</SPAN
> 9 Configuration Reference</A
></H1
d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN3560"
d103 1
a103 1
><SPAN
d105 3
a107 2
>BIND</SPAN
> 9 configuration is broadly similar to <SPAN
d109 3
a111 3
>BIND</SPAN
> 8.x; however,
there are a few new areas of configuration, such as views. <SPAN
d113 1
a113 1
>BIND</SPAN
d115 1
a115 1
8.x configuration files should work with few alterations in <SPAN
d117 1
a117 1
>BIND</SPAN
d121 1
a121 1
found in <SPAN
d123 1
a123 1
>BIND</SPAN
d126 1
a126 1
><SPAN
d128 1
a128 1
>BIND</SPAN
d144 1
a144 1
>Following is a list of elements used throughout the <SPAN
d146 1
a146 1
>BIND</SPAN
d151 2
d154 1
a154 1
NAME="AEN1060"
a155 2
><P
></P
a162 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d164 1
a164 1
><TT
d166 1
a166 1
>acl_name</TT
a169 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d171 1
a171 1
>The name of an <TT
d173 1
a173 1
>address_match_list</TT
a182 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d184 1
a184 1
><TT
d186 1
a186 1
>address_match_list</TT
a189 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d191 1
a191 1
>A list of one or more <TT
d193 3
a195 2
>ip_addr</TT
>, <TT
d197 2
a198 2
>ip_prefix</TT
>, <TT
d200 3
a202 2
>key_id</TT
>, or <TT
d204 1
a204 1
>acl_name</TT
a213 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d215 1
a215 1
><TT
d217 1
a217 1
>domain_name</TT
a220 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d223 1
a223 1
a DNS name, for example "<TT
d225 1
a225 1
>my.test.domain</TT
a230 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d232 1
a232 1
><TT
d234 1
a234 1
>dotted_decimal</TT
a237 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d239 2
a240 2
>One or more integers valued 0 through
255 separated only by dots (`.'), such as <B
d243 2
a244 1
>, <B
a254 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d256 1
a256 1
><TT
d258 1
a258 1
>ip4_addr</TT
a261 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d264 1
a264 1
in <TT
d266 1
a266 1
>dotted_decimal</TT
a271 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d273 1
a273 1
><TT
d275 1
a275 1
>ip6_addr</TT
a278 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d282 25
a306 2
>fe80::200:f8ff:fe01:9742</B
>.</P
a310 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d312 1
a312 1
><TT
d314 1
a314 1
>ip_addr</TT
a317 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d319 1
a319 1
>An <TT
d321 2
a322 2
>ip4_addr</TT
> or <TT
d324 1
a324 1
>ip6_addr</TT
a329 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d331 1
a331 1
><TT
d333 1
a333 1
>ip_port</TT
a336 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d338 1
a338 1
>An IP port <TT
d340 1
a340 1
>number</TT
d342 1
a342 1
 <TT
d344 1
a344 1
>number</TT
d346 2
a347 2
below 1024 typically restricted to root-owned processes. In some
cases an asterisk (`*') character can be used as a placeholder to
a352 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d354 1
a354 1
><TT
d356 1
a356 1
>ip_prefix</TT
a359 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d361 1
a361 1
>An IP network specified as an <TT
d363 1
a363 1
>ip_addr</TT
d366 1
a366 1
Trailing zeros in a <TT
d368 1
a368 1
>ip_addr</TT
a394 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d396 1
a396 1
><TT
d398 1
a398 1
>key_id</TT
a401 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d403 1
a403 1
>A <TT
d405 1
a405 1
>domain_name</TT
a411 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d413 1
a413 1
><TT
d415 1
a415 1
>key_list</TT
a418 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d420 1
a420 1
>A list of one or more <TT
d422 1
a422 1
>key_id</TT
a428 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d430 1
a430 1
><TT
d432 1
a432 1
>number</TT
a435 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d437 1
a437 1
>A non-negative 32 bit unsigned integer
a444 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d446 1
a446 1
><TT
d448 1
a448 1
>path_name</TT
a451 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
a461 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d463 1
a463 1
><TT
d465 1
a465 1
>size_spec</TT
a468 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d470 1
a470 1
>A number, the word <TT
d472 1
a472 3
><B
>unlimited</B
></TT
d474 1
a474 1
or the word <TT
d476 1
a476 3
><B
>default</B
></TT
d479 1
a479 1
>&#13;An <TT
d481 2
a482 2
>unlimited</TT
> <TT
d484 1
a484 1
>size_spec</TT
d486 1
a486 1
use, or the maximum available amount. A <TT
d488 1
a488 1
>default size_spec</TT
d492 1
a492 1
>A <TT
d494 1
a494 1
>number</TT
d496 1
a496 1
optionally be followed by a scaling factor: <TT
d498 2
a499 4
><B
>K</B
></TT
> or <TT
d501 1
a501 3
><B
>k</B
></TT
d503 1
a503 1
kilobytes, <TT
d505 2
a506 4
><B
>M</B
></TT
> or <TT
d508 1
a508 3
><B
>m</B
></TT
d510 1
a510 1
megabytes, and <TT
d512 2
a513 4
><B
>G</B
></TT
> or <TT
d515 1
a515 3
><B
>g</B
></TT
d522 1
a522 1
 Using <TT
d524 1
a524 1
>unlimited</TT
a530 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d532 1
a532 1
><TT
d534 1
a534 1
>yes_or_no</TT
a537 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d539 1
a539 1
>Either <TT
d541 2
a542 4
><B
>yes</B
></TT
> or <TT
d544 1
a544 3
><B
>no</B
></TT
d546 1
a546 1
The words <TT
d548 2
a549 4
><B
>true</B
></TT
> and <TT
d551 1
a551 3
><B
>false</B
></TT
d553 1
a553 1
also accepted, as are the numbers <TT
d555 2
a556 4
><B
>1</B
></TT
> and <TT
d558 1
a558 3
><B
>0</B
></TT
a563 3
WIDTH="178"
ALIGN="LEFT"
VALIGN="MIDDLE"
d565 1
a565 1
><TT
d567 1
a567 1
>dialup_option</TT
a570 3
WIDTH="362"
ALIGN="LEFT"
VALIGN="MIDDLE"
d572 1
a572 1
>One of <TT
d574 1
a574 3
><B
>yes</B
></TT
d576 1
a576 1
<TT
d578 2
a579 4
><B
>no</B
></TT
>, <TT
d581 1
a581 3
><B
>notify</B
></TT
d583 1
a583 1
<TT
d585 2
a586 4
><B
>notify-passive</B
></TT
>, <TT
d588 1
a588 3
><B
>refresh</B
></TT
d590 1
a590 1
<TT
d592 1
a592 3
><B
>passive</B
></TT
d594 1
a594 1
When used in a zone, <TT
d596 1
a596 3
><B
>notify-passive</B
></TT
d598 1
a598 1
<TT
d600 2
a601 4
><B
>refresh</B
></TT
>, and <TT
d603 1
a603 3
><B
>passive</B
></TT
d626 1
a626 1
NAME="AEN1222"
d631 1
a631 1
><TT
d633 1
a633 1
>address_match_list</TT
d639 1
a639 1
<TT
d641 1
a641 1
>address_match_list_element</TT
d657 1
a657 1
NAME="AEN1230"
d662 2
a663 3
control for various server operations. They are also used to define
priorities for querying other nameservers and to set the addresses
on which <B
d665 6
a670 2
>named</B
> will listen for queries. The elements
d681 1
a681 1
>an IP prefix (in the `/'-notation)</P
d685 4
a688 1
>a key ID, as defined by the key statement</P
d704 2
a705 2
>Elements can be negated with a leading exclamation mark (`!')
and the match list names "any," "none," "localhost" and "localnets"
d717 1
a717 1
for access control, defining listen-on ports, or as a topology,
d736 5
a740 1
> and <B
a747 8
>When used with the topology clause, a non-negated match returns
a distance based on its position on the list (the closer the match
is to the start of the list, the shorter the distance is between
it and the server). A negated match will be assigned the maximum
distance from the server. If there is no match, the address will
get a distance which is further than any non-negated list element,
and closer than any negated element.</P
><P
d757 2
a758 1
1.2.3.13 to the 1.2.3/24 element. Using <B
d771 1
a771 1
NAME="AEN1259"
d775 1
a775 1
>The <SPAN
d777 1
a777 1
>BIND</SPAN
d779 1
a779 1
      anywhere that white space may appear in a <SPAN
d781 1
a781 1
>BIND</SPAN
d783 2
a784 2
      file. To appeal to programmers of all kinds, they can be written
      in C, C++, or shell/perl constructs.</P
d790 1
a790 1
NAME="AEN1264"
d796 1
a796 1
>/* This is a <SPAN
d798 1
a798 1
>BIND</SPAN
d803 1
a803 1
>// This is a <SPAN
d805 1
a805 1
>BIND</SPAN
d810 1
a810 1
># This is a <SPAN
d812 1
a812 1
>BIND</SPAN
d822 1
a822 1
NAME="AEN1273"
d827 1
a827 1
a <SPAN
d829 1
a829 1
>BIND</SPAN
d865 1
a865 1
with the character <TT
d867 1
a867 1
>#</TT
d879 2
a880 1
></P
d900 4
a903 4
>WARNING: you cannot use the semicolon (`;') character
          to start a comment such as you would in a zone file. The
          semicolon indicates the end of a configuration
          statement.</P
d920 1
a920 1
>A <SPAN
d922 1
a922 1
>BIND</SPAN
d926 1
a926 1
    statements contain a block of substatements, which are also
d932 2
d935 1
a935 1
NAME="AEN1297"
a936 2
><P
></P
a943 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a950 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a957 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a964 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a974 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a981 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a987 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a994 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1001 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1008 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
d1016 34
a1049 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1056 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1063 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1070 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1077 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1084 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1090 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1097 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1103 3
WIDTH="128"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1110 3
WIDTH="363"
ALIGN="LEFT"
VALIGN="MIDDLE"
d1135 1
a1135 1
NAME="AEN1366"
d1181 2
d1184 1
a1184 1
NAME="AEN1379"
a1185 2
><P
></P
a1192 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1199 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1205 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1212 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1218 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1225 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
d1227 1
a1227 1
>Matches the IPv4 addresses of all network
a1232 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
a1239 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
d1241 13
a1253 2
>Matches any host on an IPv4 network for which
the system has an interface.</P
a1260 20
><P
>The <B
CLASS="command"
>localhost</B
> and <B
CLASS="command"
>localnets</B
>
ACLs do not currently support IPv6 (that is,
<B
CLASS="command"
>localhost</B
> does not match the host's IPv6 addresses,
and <B
CLASS="command"
>localnets</B
> does not match the host's attached
IPv6 networks) due to the lack of a standard method of determining the
complete set of local IPv6 addresses for a host.
</P
d1267 1
a1267 1
NAME="AEN1413"
d1282 1
a1282 1
>] allow { <TT
d1284 1
a1284 3
><I
> address_match_list </I
></TT
d1286 1
a1286 1
                keys { <TT
d1288 1
a1288 3
><I
> key_list </I
></TT
d1313 2
a1314 2
      channels to be used by system administrators to affect the
      operation of the local nameserver. These control channels are
d1319 1
a1319 1
      and retrieve non-DNS results from a nameserver.</P
d1338 1
a1338 1
      of <TT
d1340 1
a1340 1
>*</TT
d1347 1
a1347 1
> of <TT
d1349 1
a1349 1
>::</TT
d1355 1
a1355 1
      using the loopback address (<TT
d1357 1
a1357 1
>127.0.0.1</TT
d1359 1
a1359 1
      or <TT
d1361 1
a1361 1
>::1</TT
d1366 10
d1384 2
a1385 2
> clauses.  Connections to the control
      channel are permitted based on the address permissions in
d1389 2
a1390 1
>. <B
d1394 1
a1394 1
      members of the <B
d1398 5
a1402 2
      ignored, and instead are interpreted independently based the
      <B
d1405 6
a1410 1
>.  Each <B
d1417 3
a1419 4
> is allowed to be used to
      authenticate commands and responses given over the control
      channel by digitally signing each message between the server and
      a command client (See <A
d1425 6
a1430 4
>Section 3.4.1.2</A
>). All commands to the control channel
      must be signed by one of its specified keys to
      be honored.</P
a1441 1

d1461 1
a1461 1
> (or whatever <TT
d1463 1
a1463 1
>sysconfdir</TT
d1465 1
a1465 1
was specified as when <SPAN
d1467 1
a1467 1
>BIND</SPAN
d1473 1
a1473 1
<TT
d1475 1
a1475 3
><B
>rndc-confgen -a</B
></TT
d1483 1
a1483 1
      ease the transition of systems from <SPAN
d1485 1
a1485 1
>BIND</SPAN
d1493 1
a1493 1
It makes it possible to use an existing <SPAN
d1495 1
a1495 1
>BIND</SPAN
d1497 1
a1497 1
configuration file in <SPAN
d1499 1
a1499 1
>BIND</SPAN
d1509 1
a1509 1
command <TT
d1511 1
a1511 3
><B
>rndc-confgen -a</B
></TT
d1521 1
a1521 1
      <SPAN
d1523 1
a1523 1
>BIND</SPAN
d1551 1
a1551 1
>The UNIX control channel type of <SPAN
d1553 1
a1553 1
>BIND</SPAN
d1555 1
a1555 1
      in <SPAN
d1557 1
a1557 1
>BIND</SPAN
d1560 1
a1560 1
      <SPAN
d1562 1
a1562 1
>BIND</SPAN
d1581 1
a1581 1
NAME="AEN1486"
d1589 1
a1589 1
>include <TT
d1591 1
a1591 3
><I
>filename</I
></TT
d1599 1
a1599 1
NAME="AEN1491"
d1610 1
a1610 1
      specified file at the point that the <B
d1621 1
a1621 1
      that are readable only by a nameserver.</P
d1628 1
a1628 1
NAME="AEN1498"
d1636 1
a1636 1
>key <TT
d1638 1
a1638 3
><I
>key_id</I
></TT
d1640 1
a1640 1
    algorithm <TT
d1642 1
a1642 3
><I
>string</I
></TT
d1644 1
a1644 1
    secret <TT
d1646 1
a1646 3
><I
>string</I
></TT
d1656 1
a1656 1
NAME="AEN1505"
d1667 1
a1667 1
secret key for use with TSIG, see <A
d1669 8
a1676 2
>Section 4.4</A
>.</P
d1702 1
a1702 1
>The <TT
d1704 1
a1704 3
><I
>key_id</I
></TT
d1707 5
a1711 1
be used in a "server" statement to cause requests sent to that
d1716 1
a1716 1
>The <TT
d1718 1
a1718 3
><I
>algorithm_id</I
></TT
d1722 1
a1722 1
<TT
d1724 1
a1724 1
>hmac-md5</TT
d1726 1
a1726 1
<TT
d1728 1
a1728 3
><I
>secret_string</I
></TT
d1738 1
a1738 1
NAME="AEN1523"
d1753 1
a1753 1
> <TT
d1755 1
a1755 3
><I
>channel_name</I
></TT
d1760 1
a1760 1
> <TT
d1762 1
a1762 3
><I
>path name</I
></TT
d1767 1
a1767 1
> ( <TT
d1769 2
a1770 4
><I
>number</I
></TT
> | <TT
d1772 1
a1772 1
>unlimited</TT
d1777 1
a1777 1
> <TT
d1779 1
a1779 3
><I
>size spec</I
></TT
d1784 1
a1784 1
> <TT
d1786 1
a1786 3
><I
>syslog_facility</I
></TT
d1799 1
a1799 1
> (<TT
d1801 2
a1802 2
>critical</TT
> | <TT
d1804 2
a1805 2
>error</TT
> | <TT
d1807 2
a1808 2
>warning</TT
> | <TT
d1810 1
a1810 1
>notice</TT
d1812 1
a1812 1
                 <TT
d1814 2
a1815 2
>info</TT
> | <TT
d1817 2
a1818 2
>debug</TT
> [ <TT
d1820 2
a1821 4
><I
>level</I
></TT
> ] | <TT
d1823 1
a1823 1
>dynamic</TT
d1828 1
a1828 1
> <TT
d1830 2
a1831 2
>yes</TT
> or <TT
d1833 1
a1833 1
>no</TT
d1838 1
a1838 1
> <TT
d1840 2
a1841 2
>yes</TT
> or <TT
d1843 1
a1843 1
>no</TT
d1848 1
a1848 1
> <TT
d1850 2
a1851 2
>yes</TT
> or <TT
d1853 1
a1853 1
>no</TT
d1859 1
a1859 1
> <TT
d1861 1
a1861 3
><I
>category_name</I
></TT
d1863 1
a1863 1
     <TT
d1865 2
a1866 4
><I
>channel_name</I
></TT
> ; [ <TT
d1868 1
a1868 3
><I
>channel_nam</I
></TT
d1880 1
a1880 1
NAME="AEN1563"
d1891 1
a1891 1
variety of logging options for the nameserver. Its <B
d1914 2
a1915 2
     category "unmatched" { "null"; };
     category "default" { "default_syslog"; "default_debug"; };
d1919 1
a1919 1
>In <SPAN
d1921 1
a1921 1
>BIND</SPAN
d1923 1
a1923 1
the entire configuration file has been parsed.  In <SPAN
d1925 1
a1925 1
>BIND</SPAN
d1933 1
a1933 1
channels, or to standard error if the "<TT
d1935 1
a1935 1
>-g</TT
d1943 1
a1943 1
NAME="AEN1579"
d2026 1
a2026 1
>versions unlimited;</B
d2069 1
a2069 1
>channel "an_example_channel" {
d2179 1
a2179 1
"priorities," except that they can also be used if you are writing
d2245 1
a2245 1
with the <TT
d2247 1
a2247 1
>-d</TT
d2263 1
a2263 1
>channel "specific_debug_level" {
d2275 1
a2275 1
server's global level to determine what messages to print.</P
d2312 1
a2312 1
><TT
d2314 1
a2314 1
>28-Feb-2000 15:05:32.863 general: notice: running</TT
d2329 1
a2329 1
>channel "default_syslog" {
d2336 1
a2336 1
channel "default_debug" {
d2347 2
a2348 2
channel "default_stderr" {              // writes to stderr
    stderr;
d2353 1
a2353 1
channel "null" {
d2370 1
a2370 1
>For security reasons, when the "<TT
d2372 1
a2372 1
>-u</TT
d2387 1
a2387 1
to capture this output, you must run the server with the "<TT
d2389 1
a2389 1
>-g</TT
d2420 1
a2420 1
>category "default" { "default_syslog"; "default_debug"; };
d2428 1
a2428 1
>channel "my_security_channel" {
d2432 4
a2435 4
category "security" {
    "my_security_channel";
    "default_syslog";
    "default_debug";
d2444 2
a2445 2
>category "xfer-out" { "null"; };
category "notify" { "null"; };
d2450 1
a2450 1
categories may be added in future <SPAN
d2452 1
a2452 1
>BIND</SPAN
d2456 2
d2459 1
a2459 1
NAME="AEN1703"
d2461 1
a2461 3
><P
></P
><TABLE
a2467 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2474 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2482 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2489 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2496 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2503 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2510 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2517 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2523 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2530 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2536 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2543 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2550 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2557 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2563 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2570 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2576 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2583 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2589 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2596 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2602 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2609 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2628 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2635 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2641 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2648 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d2655 13
a2667 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2674 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d2676 4
a2679 1
>Queries. Using the category <B
d2682 27
a2708 2
> will enable query logging.</P
></TD
a2711 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2718 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2726 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2733 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2740 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2747 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2756 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a2763 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d2770 1
a2770 1
> in a hint or stub zone declartation.
d2786 1
a2786 1
NAME="AEN1821"
d2809 1
a2809 1
> listen-on { <TT
d2811 1
a2811 3
><I
>ip_addr</I
></TT
d2814 1
a2814 1
>port <TT
d2816 1
a2816 3
><I
>ip_port</I
></TT
d2820 1
a2820 1
> <TT
d2822 1
a2822 3
><I
>ip_addr</I
></TT
d2825 1
a2825 1
>port <TT
d2827 1
a2827 3
><I
>ip_port</I
></TT
d2834 1
a2834 1
> view <TT
d2836 1
a2836 3
><I
>view_name</I
></TT
d2841 1
a2841 1
> search { <TT
d2843 1
a2843 3
><I
>domain_name</I
></TT
d2846 1
a2846 1
> <TT
d2848 1
a2848 3
><I
>domain_name</I
></TT
d2854 1
a2854 1
> ndots <TT
d2856 1
a2856 3
><I
>number</I
></TT
d2867 1
a2867 1
NAME="AEN1845"
d2941 1
a2941 1
NAME="AEN1864"
d2944 67
d3028 8
a3035 1
> version <TT
d3037 29
a3065 3
><I
>version_string</I
></TT
d3070 1
a3070 1
> directory <TT
d3072 1
a3072 3
><I
>path_name</I
></TT
d3077 1
a3077 1
> named-xfer <TT
d3079 4
a3082 3
><I
>path_name</I
></TT
d3087 1
a3087 1
> tkey-domain <TT
d3089 1
a3089 3
><I
>domainname</I
></TT
d3094 1
a3094 1
> tkey-dhkey <TT
d3096 6
a3101 4
><I
>key_name</I
></TT
> <TT
d3103 1
a3103 3
><I
>key_tag</I
></TT
d3108 1
a3108 1
> dump-file <TT
d3110 1
a3110 3
><I
>path_name</I
></TT
d3115 1
a3115 1
> memstatistics-file <TT
d3117 1
a3117 3
><I
>path_name</I
></TT
d3122 1
a3122 1
> pid-file <TT
d3124 1
a3124 3
><I
>path_name</I
></TT
d3129 1
a3129 1
> statistics-file <TT
d3131 1
a3131 3
><I
>path_name</I
></TT
d3136 1
a3136 1
> zone-statistics <TT
d3138 1
a3138 3
><I
>yes_or_no</I
></TT
d3143 1
a3143 1
> auth-nxdomain <TT
d3145 1
a3145 3
><I
>yes_or_no</I
></TT
d3150 1
a3150 1
> deallocate-on-exit <TT
d3152 1
a3152 3
><I
>yes_or_no</I
></TT
d3157 1
a3157 1
> dialup <TT
d3159 1
a3159 3
><I
>dialup_option</I
></TT
d3164 1
a3164 1
> fake-iquery <TT
d3166 1
a3166 3
><I
>yes_or_no</I
></TT
d3171 1
a3171 1
> fetch-glue <TT
d3173 1
a3173 3
><I
>yes_or_no</I
></TT
d3178 1
a3178 1
> has-old-clients <TT
d3180 1
a3180 3
><I
>yes_or_no</I
></TT
d3185 1
a3185 1
> host-statistics <TT
d3187 1
a3187 3
><I
>yes_or_no</I
></TT
d3192 4
a3195 1
> minimal-responses <TT
d3197 1
a3197 3
><I
>yes_or_no</I
></TT
d3202 1
a3202 1
> multiple-cnames <TT
d3204 1
a3204 3
><I
>yes_or_no</I
></TT
d3209 1
a3209 1
> notify <TT
d3211 6
a3216 4
><I
>yes_or_no</I
></TT
> | <TT
d3218 1
a3218 3
><I
>explicit</I
></TT
d3223 1
a3223 1
> recursion <TT
d3225 1
a3225 3
><I
>yes_or_no</I
></TT
d3230 1
a3230 1
> rfc2308-type1 <TT
d3232 1
a3232 3
><I
>yes_or_no</I
></TT
d3237 1
a3237 1
> use-id-pool <TT
d3239 4
a3242 3
><I
>yes_or_no</I
></TT
d3247 1
a3247 1
> maintain-ixfr-base <TT
d3249 1
a3249 3
><I
>yes_or_no</I
></TT
d3254 1
a3254 1
> forward ( <TT
d3256 2
a3257 4
><I
>only</I
></TT
> | <TT
d3259 1
a3259 3
><I
>first</I
></TT
d3264 1
a3264 1
> forwarders { <TT
d3266 1
a3266 3
><I
>ip_addr</I
></TT
d3269 1
a3269 1
>port <TT
d3271 1
a3271 3
><I
>ip_port</I
></TT
d3275 1
a3275 1
> <TT
d3277 1
a3277 3
><I
>ip_addr</I
></TT
d3280 1
a3280 1
>port <TT
d3282 1
a3282 3
><I
>ip_port</I
></TT
d3289 29
a3317 1
> check-names ( <TT
d3319 2
a3320 4
><I
>master</I
></TT
> | <TT
d3322 2
a3323 4
><I
>slave</I
></TT
> | <TT
d3325 2
a3326 4
><I
> response</I
></TT
> )( <TT
d3328 2
a3329 4
><I
>warn</I
></TT
> | <TT
d3331 2
a3332 4
><I
>fail</I
></TT
> | <TT
d3334 1
a3334 3
><I
>ignore</I
></TT
d3339 22
a3360 1
> allow-notify { <TT
d3362 1
a3362 3
><I
>address_match_list</I
></TT
d3367 1
a3367 1
> allow-query { <TT
d3369 1
a3369 3
><I
>address_match_list</I
></TT
d3374 1
a3374 1
> allow-transfer { <TT
d3376 1
a3376 3
><I
>address_match_list</I
></TT
d3381 1
a3381 1
> allow-recursion { <TT
d3383 1
a3383 3
><I
>address_match_list</I
></TT
d3388 1
a3388 1
> allow-v6-synthesis { <TT
d3390 1
a3390 3
><I
>address_match_list</I
></TT
d3395 1
a3395 1
> blackhole { <TT
d3397 1
a3397 3
><I
>address_match_list</I
></TT
d3404 1
a3404 1
> port <TT
d3406 1
a3406 3
><I
>ip_port</I
></TT
d3408 1
a3408 1
>] { <TT
d3410 1
a3410 3
><I
>address_match_list</I
></TT
d3417 1
a3417 1
> port <TT
d3419 1
a3419 3
><I
>ip_port</I
></TT
d3421 1
a3421 1
>] { <TT
d3423 1
a3423 3
><I
>address_match_list</I
></TT
d3430 1
a3430 1
> address ( <TT
d3432 2
a3433 4
><I
>ip_addr</I
></TT
> | <TT
d3435 1
a3435 3
><I
>*</I
></TT
d3439 1
a3439 1
> port ( <TT
d3441 2
a3442 4
><I
>ip_port</I
></TT
> | <TT
d3444 1
a3444 3
><I
>*</I
></TT
d3452 1
a3452 1
> address ( <TT
d3454 2
a3455 4
><I
>ip_addr</I
></TT
> | <TT
d3457 1
a3457 3
><I
>*</I
></TT
d3461 1
a3461 1
> port ( <TT
d3463 2
a3464 4
><I
>ip_port</I
></TT
> | <TT
d3466 1
a3466 3
><I
>*</I
></TT
d3472 1
a3472 1
> max-transfer-time-in <TT
d3474 1
a3474 3
><I
>number</I
></TT
d3479 1
a3479 1
> max-transfer-time-out <TT
d3481 1
a3481 3
><I
>number</I
></TT
d3486 1
a3486 1
> max-transfer-idle-in <TT
d3488 1
a3488 3
><I
>number</I
></TT
d3493 1
a3493 1
> max-transfer-idle-out <TT
d3495 1
a3495 3
><I
>number</I
></TT
d3500 1
a3500 1
> tcp-clients <TT
d3502 1
a3502 3
><I
>number</I
></TT
d3507 1
a3507 1
> recursive-clients <TT
d3509 1
a3509 3
><I
>number</I
></TT
d3514 1
a3514 1
> serial-query-rate <TT
d3516 1
a3516 3
><I
>number</I
></TT
d3521 1
a3521 1
> serial-queries <TT
d3523 1
a3523 3
><I
>number</I
></TT
d3528 1
a3528 1
> transfer-format <TT
d3530 1
a3530 3
><I
>( one-answer | many-answers )</I
></TT
d3535 1
a3535 1
> transfers-in  <TT
d3537 1
a3537 3
><I
>number</I
></TT
d3542 1
a3542 1
> transfers-out <TT
d3544 8
a3551 3
><I
>number</I
></TT
d3556 1
a3556 1
> transfers-per-ns <TT
d3558 1
a3558 3
><I
>number</I
></TT
d3563 33
a3595 1
> transfer-source (<TT
d3597 2
a3598 4
><I
>ip4_addr</I
></TT
> | <TT
d3600 1
a3600 1
>*</TT
d3603 1
a3603 1
>port <TT
d3605 1
a3605 3
><I
>ip_port</I
></TT
d3611 1
a3611 1
> transfer-source-v6 (<TT
d3613 2
a3614 4
><I
>ip6_addr</I
></TT
> | <TT
d3616 1
a3616 1
>*</TT
d3619 1
a3619 1
>port <TT
d3621 1
a3621 3
><I
>ip_port</I
></TT
d3627 8
a3634 1
> notify-source (<TT
d3636 2
a3637 4
><I
>ip4_addr</I
></TT
> | <TT
d3639 1
a3639 1
>*</TT
d3642 1
a3642 1
>port <TT
d3644 1
a3644 3
><I
>ip_port</I
></TT
d3650 1
a3650 1
> notify-source-v6 (<TT
d3652 2
a3653 4
><I
>ip6_addr</I
></TT
> | <TT
d3655 1
a3655 1
>*</TT
d3658 1
a3658 1
>port <TT
d3660 1
a3660 3
><I
>ip_port</I
></TT
d3666 1
a3666 1
> also-notify { <TT
d3668 1
a3668 3
><I
>ip_addr</I
></TT
d3671 1
a3671 1
>port <TT
d3673 1
a3673 3
><I
>ip_port</I
></TT
d3677 1
a3677 1
> <TT
d3679 1
a3679 3
><I
>ip_addr</I
></TT
d3682 1
a3682 1
>port <TT
d3684 1
a3684 3
><I
>ip_port</I
></TT
d3691 8
a3698 1
> max-ixfr-log-size <TT
d3700 1
a3700 3
><I
>number</I
></TT
d3705 1
a3705 1
> coresize <TT
d3707 1
a3707 3
><I
>size_spec</I
></TT
d3712 1
a3712 1
> datasize <TT
d3714 1
a3714 3
><I
>size_spec</I
></TT
d3719 1
a3719 1
> files <TT
d3721 1
a3721 3
><I
>size_spec</I
></TT
d3726 1
a3726 1
> stacksize <TT
d3728 1
a3728 3
><I
>size_spec</I
></TT
d3733 1
a3733 1
> cleaning-interval <TT
d3735 1
a3735 3
><I
>number</I
></TT
d3740 1
a3740 1
> heartbeat-interval <TT
d3742 1
a3742 3
><I
>number</I
></TT
d3747 1
a3747 1
> interface-interval <TT
d3749 1
a3749 3
><I
>number</I
></TT
d3754 1
a3754 1
> statistics-interval <TT
d3756 1
a3756 3
><I
>number</I
></TT
d3761 1
a3761 1
> topology { <TT
d3763 1
a3763 3
><I
>address_match_list</I
></TT
d3768 1
a3768 1
> sortlist { <TT
d3770 1
a3770 3
><I
>address_match_list</I
></TT
d3775 1
a3775 1
> rrset-order { <TT
d3777 1
a3777 3
><I
>order_spec</I
></TT
d3780 1
a3780 1
> <TT
d3782 1
a3782 3
><I
>order_spec</I
></TT
d3788 1
a3788 1
> lame-ttl <TT
d3790 1
a3790 3
><I
>number</I
></TT
d3795 1
a3795 1
> max-ncache-ttl <TT
d3797 1
a3797 3
><I
>number</I
></TT
d3802 1
a3802 1
> max-cache-ttl <TT
d3804 1
a3804 3
><I
>number</I
></TT
d3809 1
a3809 1
> sig-validity-interval <TT
d3811 1
a3811 3
><I
>number</I
></TT
d3816 1
a3816 1
> min-roots <TT
d3818 1
a3818 3
><I
>number</I
></TT
d3823 1
a3823 1
> use-ixfr <TT
d3825 1
a3825 3
><I
>yes_or_no</I
></TT
d3830 1
a3830 1
> provide-ixfr <TT
d3832 1
a3832 3
><I
>yes_or_no</I
></TT
d3837 1
a3837 1
> request-ixfr <TT
d3839 1
a3839 3
><I
>yes_or_no</I
></TT
d3844 1
a3844 1
> treat-cr-as-space <TT
d3846 1
a3846 3
><I
>yes_or_no</I
></TT
d3851 1
a3851 1
> min-refresh-time <TT
d3853 1
a3853 3
><I
>number</I
></TT
d3858 1
a3858 1
> max-refresh-time <TT
d3860 1
a3860 3
><I
>number</I
></TT
d3865 1
a3865 1
> min-retry-time <TT
d3867 1
a3867 3
><I
>number</I
></TT
d3872 1
a3872 1
> max-retry-time <TT
d3874 1
a3874 3
><I
>number</I
></TT
d3879 1
a3879 1
> port <TT
d3881 1
a3881 3
><I
>ip_port</I
></TT
d3886 1
a3886 1
> additional-from-auth <TT
d3888 1
a3888 3
><I
>yes_or_no</I
></TT
d3893 1
a3893 1
> additional-from-cache <TT
d3895 1
a3895 3
><I
>yes_or_no</I
></TT
d3900 1
a3900 1
> random-device <TT
d3902 1
a3902 3
><I
>path_name</I
></TT
d3907 1
a3907 1
> max-cache-size <TT
d3909 1
a3909 3
><I
>size_spec</I
></TT
d3914 1
a3914 1
> match-mapped-addresses <TT
d3916 21
a3936 3
><I
>yes_or_no</I
></TT
d3943 1
a3943 1
> exclude { <TT
d3945 1
a3945 4
><I
>namelist
</I
></TT
d3949 7
a3955 1

d3957 16
d3980 2
a3981 2
NAME="AEN2092"
>6.2.14. <B
d3991 1
a3991 1
to be used by <SPAN
d3993 1
a3993 1
>BIND</SPAN
d3995 1
a3995 3
once in a configuration file. If more than one occurrence is found,
the first occurrence determines the actual options used, and a warning
will be generated.  If there is no <B
a4008 18
>version</B
></DT
><DD
><P
>The version the server should report
via a query of name <TT
CLASS="filename"
>version.bind</TT
> in
class <B
CLASS="command"
>CHAOS</B
>.
The default is the real version number of this server.</P
></DD
><DT
><B
CLASS="command"
d4030 12
d4053 1
a4053 1
It was used in <SPAN
d4055 1
a4055 1
>BIND</SPAN
d4061 1
a4061 1
In <SPAN
d4063 1
a4063 1
>BIND</SPAN
d4087 1
a4087 1
key will be "<TT
d4089 1
a4089 1
>client specified part</TT
d4091 1
a4091 1
"<TT
d4093 1
a4093 1
>tkey-domain</TT
d4095 1
a4095 1
Otherwise, the name of the shared key will be "<TT
d4098 2
a4099 2
digits</TT
>" + "<TT
d4101 1
a4101 1
>tkey-domain</TT
a4155 13
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>Not yet implemented in <SPAN
CLASS="acronym"
>BIND</SPAN
> 9.</P
></BLOCKQUOTE
></DIV
d4170 11
a4180 1
nameserver.</P
d4201 1
a4201 1
>Section 6.2.14.15</A
d4245 12
d4261 1
a4261 1
>&#13;Turn on enforcment of delegation-only in TLDs and root zones with an optional
d4274 66
d4348 1
a4348 1
>6.2.14.1. Boolean Options</A
d4362 1
a4362 1
>If <TT
d4364 1
a4364 3
><B
>yes</B
></TT
d4370 1
a4370 1
authoritative. The default is <TT
d4372 1
a4372 3
><B
>no</B
></TT
d4374 1
a4374 1
a change from <SPAN
d4376 1
a4376 1
>BIND</SPAN
d4378 1
a4378 1
may need to set it to <TT
d4380 1
a4380 3
><B
>yes</B
></TT
d4390 1
a4390 1
>This option was used in <SPAN
d4392 1
a4392 1
>BIND</SPAN
d4394 1
a4394 1
for memory leaks on exit. <SPAN
d4396 1
a4396 1
>BIND</SPAN
d4407 1
a4407 1
>If <TT
d4409 1
a4409 3
><B
>yes</B
></TT
d4420 1
a4420 1
zone maintenance traffic. The default is <TT
d4422 1
a4422 3
><B
>no</B
></TT
d4444 11
a4454 3
request to all the slaves. This will trigger the zone serial number check
in the slave (providing it supports NOTIFY) allowing the slave to
verify the zone while the connection is active.</P
d4466 1
a4466 1
<TT
d4468 1
a4468 3
><B
>notify</B
></TT
d4470 1
a4470 1
<TT
d4472 1
a4472 3
><B
>notify-passive</B
></TT
d4474 1
a4474 1
suppresses the normal refresh queries, <TT
d4476 1
a4476 3
><B
>refresh</B
></TT
d4478 1
a4478 1
which suppresses normal refresh processing and send refresh queries 
d4482 2
a4483 2
> expires and
<TT
d4485 1
a4485 3
><B
>passive</B
></TT
d4488 33
a4520 2
></DD
><DT
d4523 4
a4526 3
>fake-iquery</B
></DT
><DD
d4528 136
a4663 1
>In <SPAN
d4665 4
a4668 4
>BIND</SPAN
> 8, this option was used to
enable simulating the obsolete DNS query type
IQUERY. <SPAN
d4670 1
a4670 1
>BIND</SPAN
d4682 1
a4682 1
In BIND 8, <TT
d4684 1
a4684 3
><B
>fetch-glue yes</B
></TT
d4694 18
d4717 1
a4717 1
in <SPAN
d4719 2
a4720 2
>BIND</SPAN
> 8, and is ignored by <SPAN
d4722 1
a4722 1
>BIND</SPAN
d4729 1
a4729 1
> <TT
d4731 1
a4731 3
><B
>yes</B
></TT
d4736 1
a4736 1
> <TT
d4738 1
a4738 3
><B
>yes</B
></TT
d4743 1
a4743 1
> <TT
d4745 1
a4745 3
><B
>no</B
></TT
d4757 1
a4757 1
statistics for every host that the nameserver interacts with.
d4775 1
a4775 1
 It was used in <SPAN
d4777 1
a4777 1
>BIND</SPAN
d4779 1
a4779 1
kept for Incremental Zone Transfer. <SPAN
d4781 1
a4781 1
>BIND</SPAN
d4787 1
a4787 1
> <TT
d4789 1
a4789 3
><B
>no</B
></TT
d4800 1
a4800 1
>If <TT
d4802 1
a4802 3
><B
>yes</B
></TT
d4807 1
a4807 1
The default is <TT
d4809 1
a4809 3
><B
>no</B
></TT
d4820 1
a4820 1
>This option was used in <SPAN
d4822 1
a4822 1
>BIND</SPAN
d4824 2
a4825 2
a domain name to allow multiple CNAME records in violation of the
DNS standards.  <SPAN
d4827 1
a4827 1
>BIND</SPAN
d4839 1
a4839 1
>If <TT
d4841 1
a4841 3
><B
>yes</B
></TT
d4845 2
a4846 2
HREF="Bv9ARM.ch03.html#notify"
>Section 3.3</A
d4856 1
a4856 1
>&#13;If <TT
d4858 1
a4858 3
><B
>explicit</B
></TT
d4864 1
a4864 1
If <TT
d4866 1
a4866 3
><B
>no</B
></TT
d4892 1
a4892 1
>If <TT
d4894 1
a4894 3
><B
>yes</B
></TT
d4899 1
a4899 1
referral response. The default is <TT
d4901 1
a4901 3
><B
>yes</B
></TT
d4905 1
a4905 1
>recursion no;</B
d4924 1
a4924 1
>Setting this to <TT
d4926 1
a4926 3
><B
>yes</B
></TT
d4929 1
a4929 1
answers. The default is <TT
d4931 1
a4931 3
><B
>no</B
></TT
d4940 1
a4940 1
>Not yet implemented in <SPAN
d4942 1
a4942 1
>BIND</SPAN
d4961 1
a4961 1
<SPAN
d4963 1
a4963 1
>BIND</SPAN
d4974 1
a4974 1
>If <TT
d4976 11
a4986 5
><B
>yes</B
></TT
>, the server will, by default, collect
statistical data on all zones in the server.  These statistics may be accessed
d4996 1
a4996 1
>Section 6.2.14.15</A
d5021 1
a5021 1
>Section 6.2.16</A
d5025 1
a5025 1
>Section 4.2</A
d5043 1
a5043 1
>Section 6.2.16</A
d5061 1
a5061 1
>Section 6.2.16</A
d5072 1
a5072 1
>This option was used in <SPAN
d5074 1
a5074 1
>BIND</SPAN
d5082 1
a5082 1
on an NT or DOS machine. In <SPAN
d5084 1
a5084 1
>BIND</SPAN
d5110 1
a5110 1
>&#13;When both of these options are set to <TT
d5112 1
a5112 3
><B
>yes</B
></TT
d5127 1
a5127 1
>&#13;For example, if a query asks for an MX record for host <TT
d5129 1
a5129 1
>foo.example.com</TT
d5131 1
a5131 1
and the record found is "<TT
d5133 1
a5133 1
>MX 10 mail.example.net</TT
d5135 1
a5135 1
records (A, A6, and AAAA) for <TT
d5137 1
a5137 1
>mail.example.net</TT
d5139 2
a5140 1
if known.  Setting these options to <B
d5143 2
a5144 1
> disables this behavior.
d5155 1
a5155 1
>recursion no;</B
d5191 1
a5191 1
>If <TT
d5193 1
a5193 3
><B
>yes</B
></TT
d5205 79
d5292 2
a5293 2
NAME="AEN2399"
>6.2.14.2. Forwarding</A
d5298 1
a5298 1
nameservers. It can also be used to allow queries by servers that
d5316 1
a5316 1
forwarders list is not empty. A value of <TT
d5318 1
a5318 1
>first</TT
d5322 1
a5322 1
the answer itself. If <TT
d5324 1
a5324 1
>only</TT
d5352 1
a5352 1
>Section 6.2.21</A
d5360 40
d5401 1
a5401 1
>6.2.14.3. Access Control</A
d5423 2
a5424 1
notify slaves of a zone change in addition to the zone masters.
d5448 1
a5448 1
ask ordinary questions. <B
d5479 1
a5479 1
>allow-v6-synthesis</B
d5483 11
a5493 5
>Specifies which hosts are to receive
synthetic responses to IPv6 queries as described in
<A
HREF="Bv9ARM.ch06.html#synthesis"
>Section 6.2.14.13</A
d5495 31
d5559 1
a5559 1
from these addresses will not be responded to. The default is <TT
d5561 1
a5561 3
><B
>none</B
></TT
d5572 2
a5573 2
NAME="AEN2464"
>6.2.14.4. Interfaces</A
d5584 1
a5584 1
an optional port, and an <TT
d5586 1
a5586 1
>address_match_list</TT
d5602 1
a5602 1
>will enable the nameserver on port 53 for the IP address
d5616 2
a5617 2
specify the ports on which the server will listen for incoming
queries sent using IPv6.</P
d5619 5
a5623 4
>The server does not bind a separate socket to each IPv6
interface address as it does for IPv4. Instead, it always
listens on the IPv6 wildcard address. Therefore, the only
values allowed for the <TT
d5625 3
a5627 3
>address_match_list</TT
>
argument to the <B
d5630 11
a5640 9
> statement are
<PRE
CLASS="programlisting"
>{ any; }</PRE
> and
<PRE
CLASS="programlisting"
>{ none;}</PRE
></P
d5645 2
a5646 2
> options can be
used to listen on multiple ports:</P
d5649 2
a5650 2
>listen-on-v6 port 53 { any; };
listen-on-v6 port 1234 { any; };
d5653 5
d5667 1
a5667 1
> statement is specified,
d5675 2
a5676 2
NAME="AEN2490"
>6.2.14.5. Query Address</A
d5680 1
a5680 1
query other nameservers. <B
d5689 1
a5689 1
 If <B
d5707 9
a5715 1
a random unprivileged port will be used. The defaults are</P
d5737 17
d5761 1
a5761 1
>6.2.14.6. Zone Transfers</A
d5764 1
a5764 1
><SPAN
d5766 1
a5766 1
>BIND</SPAN
d5820 1
a5820 1
(2 hours).</P
d5831 1
a5831 1
(1 hour).</P
d5842 1
a5842 1
(2 hours).</P
d5853 1
a5853 1
hour).</P
d5933 1
a5933 1
such as <SPAN
d5935 2
a5936 2
>BIND</SPAN
> 9, <SPAN
d5938 1
a5938 1
>BIND</SPAN
d5940 1
a5940 1
versions of <SPAN
d5942 1
a5942 1
>BIND</SPAN
d5966 1
a5966 1
that can be running concurrently. The default value is <TT
d5968 1
a5968 1
>10</TT
d5985 1
a5985 1
of the limit will be refused. The default value is <TT
d5987 1
a5987 1
>10</TT
d5998 2
a5999 2
that can be concurrently transferring from a given remote nameserver.
The default value is <TT
d6001 1
a6001 1
>2</TT
d6007 1
a6007 1
the load on the remote nameserver. <B
d6076 51
d6183 26
a6208 2
NAME="AEN2629"
>6.2.14.7. Operating System Resource Limits</A
d6255 1
a6255 1
is <TT
d6257 1
a6257 1
>default</TT
d6268 1
a6268 1
may use. The default is <TT
d6270 1
a6270 1
>default</TT
d6300 1
a6300 1
may have open concurrently. The default is <TT
d6302 1
a6302 1
>unlimited</TT
d6314 1
a6314 1
may use. The default is <TT
d6316 1
a6316 1
>default</TT
d6327 2
a6328 2
NAME="AEN2666"
>6.2.14.8. Server  Resource Limits</A
d6347 26
a6372 1
and ignored for BIND 8 compatibility.</P
d6383 1
a6383 1
<TT
d6385 1
a6385 1
>1000</TT
d6404 1
a6404 1
The default is <TT
d6406 1
a6406 1
>100</TT
d6421 1
a6421 1
view.  The default is <TT
d6423 1
a6423 1
>unlimited</TT
d6428 14
d6450 2
a6451 2
NAME="AEN2694"
>6.2.14.9. Periodic Task Intervals</A
d6470 1
a6470 1
The default is 60 minutes.
d6486 2
a6487 1
to 1 day (1440 minutes). If set to 0, no zone maintenance for these zones will occur.</P
d6501 5
a6505 3
is 60 minutes. If set to 0, interface scanning will only occur when
the configuration file is  loaded. After the scan, listeners will be
started on any new interfaces (provided they are allowed by the
d6509 2
a6510 2
> configuration). Listeners on interfaces
that have gone away will be cleaned up.</P
d6519 1
a6519 1
>Nameserver statistics will be logged
d6524 2
a6525 1
60. If set to 0, no statistics will be logged.</P
d6533 1
a6533 1
>Not yet implemented in <SPAN
d6535 1
a6535 1
>BIND</SPAN
d6549 1
a6549 1
>6.2.14.10. Topology</A
d6552 2
a6553 2
>All other things being equal, when the server chooses a nameserver
to query from a list of nameservers, it prefers the one that is
d6599 1
a6599 1
is not implemented in <SPAN
d6601 1
a6601 1
>BIND</SPAN
d6613 1
a6613 1
>6.2.14.11. The <B
d6629 1
a6629 1
>Section 6.2.14.12</A
d6636 1
a6636 1
configuring the nameservers, not all the clients.</P
d6652 1
a6652 1
>Section 6.2.14.10</A
d6720 1
a6720 1
to the behavior of the address sort in <SPAN
d6722 1
a6722 1
>BIND</SPAN
d6742 1
a6742 1
>6.2.14.12. RRset Ordering</A
d6758 1
a6758 1
>Section 6.2.14.11</A
d6770 1
a6770 1
> class <TT
d6772 1
a6772 3
><I
>class_name</I
></TT
d6776 1
a6776 1
> type <TT
d6778 1
a6778 3
><I
>type_name</I
></TT
d6782 1
a6782 1
> name <TT
d6784 1
a6784 3
><I
>"domain_name"</I
></TT
d6787 1
a6787 1
      order <TT
d6789 1
a6789 3
><I
>ordering</I
></TT
d6812 2
d6815 1
a6815 1
NAME="AEN2782"
a6816 2
><P
></P
a6823 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a6830 3
WIDTH="360"
ALIGN="LEFT"
VALIGN="MIDDLE"
a6837 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a6844 3
WIDTH="360"
ALIGN="LEFT"
VALIGN="MIDDLE"
a6850 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a6857 3
WIDTH="360"
ALIGN="LEFT"
VALIGN="MIDDLE"
d6879 1
a6879 1
have "<TT
d6881 1
a6881 1
>host.example.com</TT
d6901 1
a6901 1
is not yet implemented in <SPAN
d6903 1
a6903 1
>BIND</SPAN
d6905 2
a6906 90
BIND 9 currently supports only a "random-cyclic" ordering,
where the server randomly chooses a starting point within
the RRset and returns the records in order starting at
that point, wrapping around the end of the RRset if 
necessary.</P
></BLOCKQUOTE
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="synthesis"
>6.2.14.13. Synthetic IPv6 responses</A
></H3
><P
>Many existing stub resolvers support IPv6 DNS lookups as defined in
RFC1886, using AAAA records for forward lookups and "nibble labels" in
the <TT
CLASS="literal"
>IP6.INT</TT
> domain for reverse lookups, but do not support
RFC2874-style lookups (using A6 records and binary labels in the
<TT
CLASS="literal"
>IP6.ARPA</TT
> domain).</P
><P
>For those who wish to continue to use such stub resolvers rather than
switching to the BIND 9 lightweight resolver, BIND 9 provides a way
to automatically convert RFC1886-style lookups into
RFC2874-style lookups and return the results as "synthetic" AAAA and
PTR records.</P
><P
>This feature is disabled by default and can be enabled on a per-client
basis by adding a
<B
CLASS="command"
>allow-v6-synthesis { <TT
CLASS="replaceable"
><I
>address_match_list</I
></TT
> };</B
>
clause to the <B
CLASS="command"
>options</B
> or <B
CLASS="command"
>view</B
> statement.
When it is enabled, recursive
AAAA queries cause the server to first try an A6 lookup and if that
fails, an AAAA lookups.  No matter which one succeeds, the results are
returned as a set of synthetic AAAA records.  Similarly, recursive PTR
queries in <TT
CLASS="literal"
>IP6.INT</TT
> will cause a
lookup in <TT
CLASS="literal"
>IP6.ARPA</TT
> using binary
labels, and if that fails, another lookup in <TT
CLASS="literal"
>IP6.INT</TT
>.
The results are returned as a synthetic PTR record in
<TT
CLASS="literal"
>ip6.int</TT
>.</P
><P
>The synthetic records have a TTL of zero.  DNSSEC validation of
synthetic responses is not currently supported; therefore responses
containing synthetic RRs will not have the AD flag set.</P
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
><B
CLASS="command"
>allow-v6-synthesis</B
> is only performed for
clients that are supplied recursive service.</P
d6916 1
a6916 1
>6.2.14.14. Tuning</A
d6939 1
a6939 1
Default is <TT
d6941 1
a6941 1
>600</TT
d6943 1
a6943 1
<TT
d6945 1
a6945 1
>1800</TT
d6965 1
a6965 1
> is <TT
d6967 1
a6967 1
>10800</TT
d6998 1
a6998 1
is <TT
d7000 1
a7000 3
><B
>2</B
></TT
d7009 1
a7009 1
>Not yet implemented in <SPAN
d7011 1
a7011 1
>BIND</SPAN
d7027 1
a7027 1
>Section 4.1</A
d7029 1
a7029 1
will expire. The default is <TT
d7031 3
a7033 2
>30</TT
> days. The signature
d7061 2
a7062 2
refresh and retry time either per-zone, per-view or globally.
These options are valid for slave and stub zones, 
d7066 18
d7092 2
a7093 2
NAME="statsfile"
>6.2.14.15. The Statistics File</A
d7096 28
a7123 12
>The statistics file generated by <SPAN
CLASS="acronym"
>BIND</SPAN
> 9
is similar, but not identical, to that
generated by <SPAN
CLASS="acronym"
>BIND</SPAN
> 8.
</P
><P
>The statistics dump begins with the line <B
d7125 3
a7127 10
>+++ Statistics Dump
+++ (973798949)</B
>, where the number in parentheses is a standard
Unix-style timestamp, measured as seconds since January 1, 1970.  Following
that line are a series of lines containing a counter type, the value of the
counter, optionally a zone name, and optionally a view name.
The lines without view and zone listed are global statistics for the entire server.
Lines with a zone and view name for the given view and zone (the view name is
omitted for the default view).  The statistics dump ends
with the line <B
d7129 3
a7131 3
>--- Statistics Dump --- (973798949)</B
>, where the
number is identical to the number in the beginning line.</P
d7133 1
a7133 1
>The following statistics counters are maintained:</P
d7135 152
a7286 17
CLASS="informaltable"
><A
NAME="AEN2897"
></A
><P
></P
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
a7292 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d7296 2
a7297 2
is defined as query which returns a NOERROR response other than
a referral response.</P
a7301 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7308 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7315 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7322 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7329 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7336 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
a7343 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
d7347 1
a7347 1
>recursion</B
a7350 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d7352 2
a7353 2
>The number of queries which caused the server
to perform recursion in order to find the final answer.</P
a7357 3
WIDTH="110"
ALIGN="LEFT"
VALIGN="MIDDLE"
d7361 1
a7361 1
>failure</B
a7364 3
WIDTH="322"
ALIGN="LEFT"
VALIGN="MIDDLE"
d7366 2
a7367 2
>The number of queries which resulted in a
failure response other than those above.</P
d7411 1
a7411 1
>6.2.15. <B
d7418 1
a7418 1
>server <TT
d7420 1
a7420 3
><I
>ip_addr</I
></TT
d7424 1
a7424 1
> bogus <TT
d7426 1
a7426 3
><I
>yes_or_no</I
></TT
d7431 1
a7431 1
> provide-ixfr <TT
d7433 1
a7433 3
><I
>yes_or_no</I
></TT
d7438 1
a7438 1
> request-ixfr <TT
d7440 1
a7440 3
><I
>yes_or_no</I
></TT
d7445 1
a7445 1
> edns <TT
d7447 1
a7447 3
><I
>yes_or_no</I
></TT
d7452 1
a7452 1
> transfers <TT
d7454 1
a7454 3
><I
>number</I
></TT
d7459 1
a7459 1
> transfer-format <TT
d7461 1
a7461 3
><I
>( one-answer | many-answers )</I
></TT
d7466 1
a7466 1
> keys <TT
a7467 1
><I
d7474 1
a7474 2
>] }</I
></TT
d7477 32
d7518 1
a7518 1
>6.2.16. <B
d7528 1
a7528 1
to be associated with a remote nameserver.</P
d7582 1
a7582 1
to the remote server will be nonincremental. If not set, the value
d7642 1
a7642 1
more efficient, but is only known to be understood by <SPAN
d7644 2
a7645 2
>BIND</SPAN
> 9, <SPAN
d7647 1
a7647 1
>BIND</SPAN
d7649 1
a7649 1
8.x, and patched versions of <SPAN
d7651 1
a7651 1
>BIND</SPAN
d7686 2
a7687 1
> clause is used to identify a <B
d7690 1
a7690 2
> defined
by the <B
d7693 7
a7699 10
> statement, to be used for transaction
security when talking to the remote server. The <B
CLASS="command"
>key</B
> statement
must come before the <B
CLASS="command"
>server</B
> statement that references
it. When a request is sent to the remote server, a request signature
d7710 33
d7749 2
a7750 2
NAME="AEN3019"
>6.2.17. <B
d7758 1
a7758 1
    <TT
d7760 2
a7761 4
><I
>string</I
></TT
> <TT
d7763 2
a7764 4
><I
>number</I
></TT
> <TT
d7766 2
a7767 4
><I
>number</I
></TT
> <TT
d7769 2
a7770 4
><I
>number</I
></TT
> <TT
d7772 1
a7772 3
><I
>string</I
></TT
d7776 1
a7776 1
> <TT
d7778 2
a7779 4
><I
>string</I
></TT
> <TT
d7781 2
a7782 4
><I
>number</I
></TT
> <TT
d7784 2
a7785 4
><I
>number</I
></TT
> <TT
d7787 2
a7788 4
><I
>number</I
></TT
> <TT
d7790 1
a7790 3
><I
>string</I
></TT
d7804 2
a7805 2
NAME="AEN3035"
>6.2.18. <B
d7818 1
a7818 1
>Section 4.7</A
d7821 1
a7821 1
because it is the  DNS root zone or its parent zone is unsigned.
d7839 2
a7840 2
NAME="AEN3043"
>6.2.19. <B
d7847 1
a7847 1
>view <TT
d7849 3
a7851 4
><I
>view_name</I
></TT
> [<SPAN
d7853 1
a7853 1
><TT
d7855 1
a7855 3
><I
>class</I
></TT
d7858 1
a7858 1
      match-clients { <TT
d7860 1
a7860 3
><I
>address_match_list</I
></TT
d7862 1
a7862 1
      match-destinations { <TT
d7864 1
a7864 3
><I
>address_match_list</I
></TT
d7866 1
a7866 1
      match-recursive-only <TT
d7868 1
a7868 3
><I
>yes_or_no</I
></TT
d7872 1
a7872 1
> <TT
d7874 1
a7874 3
><I
>view_option</I
></TT
d7879 1
a7879 10
> zone-statistics <TT
CLASS="replaceable"
><I
>yes_or_no</I
></TT
> ; </SPAN
>]
      [<SPAN
CLASS="optional"
> <TT
d7881 1
a7881 3
><I
>zone_statement</I
></TT
d7892 2
a7893 2
NAME="AEN3059"
>6.2.20. <B
d7903 1
a7903 1
of <SPAN
d7905 1
a7905 1
>BIND</SPAN
d7916 1
a7916 1
<TT
d7918 1
a7918 1
>address_match_list</TT
d7924 1
a7924 1
the <TT
d7926 1
a7926 1
>address_match_list</TT
d7939 13
a7951 1
default to matching all addresses.  A view can also be specified
d7960 1
a7960 1
> statements is significant &#8212; 
d8011 1
a8011 1
in class IN, and any <B
d8016 5
a8020 1
this default view.  If any explicit <B
d8023 2
a8024 2
> statements
are present, all <B
d8027 2
a8028 2
> statements must occur inside
<B
d8041 1
a8041 1
               // This should match our internal networks.
d8043 2
a8044 1
               // Provide recursive service to internal clients only.
d8046 3
a8048 2
               // Provide a complete view of the example.com zone
               // including addresses of internal hosts.
d8054 1
d8056 1
d8058 2
a8059 1
               // Refuse recursive service to external clients.
d8061 3
a8063 2
               // Provide a restricted view of the example.com zone
               // containing only publicly accessible hosts.
d8077 1
a8077 1
>6.2.21. <B
d8085 1
a8085 1
>zone <TT
d8087 1
a8087 3
><I
>zone_name</I
></TT
d8090 1
a8090 1
><TT
d8092 1
a8092 3
><I
>class</I
></TT
d8100 1
a8100 1
> allow-notify { <TT
d8102 1
a8102 3
><I
>address_match_list</I
></TT
d8107 1
a8107 1
> allow-query { <TT
d8109 1
a8109 3
><I
>address_match_list</I
></TT
d8114 1
a8114 1
> allow-transfer { <TT
d8116 1
a8116 3
><I
>address_match_list</I
></TT
d8121 1
a8121 1
> allow-update { <TT
d8123 1
a8123 3
><I
>address_match_list</I
></TT
d8128 1
a8128 1
> update-policy { <TT
d8130 1
a8130 3
><I
>update_policy_rule</I
></TT
d8138 1
a8138 1
> allow-update-forwarding { <TT
d8140 1
a8140 3
><I
>address_match_list</I
></TT
d8145 1
a8145 1
> also-notify { <TT
d8147 1
a8147 3
><I
>ip_addr</I
></TT
d8150 1
a8150 1
>port <TT
d8152 1
a8152 3
><I
>ip_port</I
></TT
d8156 1
a8156 1
> <TT
d8158 1
a8158 3
><I
>ip_addr</I
></TT
d8161 1
a8161 1
>port <TT
d8163 1
a8163 3
><I
>ip_port</I
></TT
d8170 1
a8170 1
> check-names (<TT
d8172 2
a8173 2
>warn</TT
>|<TT
d8175 2
a8176 2
>fail</TT
>|<TT
d8178 1
a8178 1
>ignore</TT
d8183 1
a8183 1
> dialup <TT
d8185 1
a8185 3
><I
>dialup_option</I
></TT
d8190 1
a8190 1
> delegation-only <TT
d8192 1
a8192 3
><I
>yes_or_no</I
></TT
d8197 1
a8197 1
> file <TT
d8199 1
a8199 3
><I
>string</I
></TT
d8204 1
a8204 1
> forward (<TT
d8206 2
a8207 2
>only</TT
>|<TT
d8209 1
a8209 1
>first</TT
d8214 1
a8214 1
> forwarders { <TT
d8216 1
a8216 3
><I
>ip_addr</I
></TT
d8219 1
a8219 1
>port <TT
d8221 1
a8221 3
><I
>ip_port</I
></TT
d8225 1
a8225 1
> <TT
d8227 1
a8227 3
><I
>ip_addr</I
></TT
d8230 1
a8230 1
>port <TT
d8232 1
a8232 3
><I
>ip_port</I
></TT
d8239 1
a8239 1
> ixfr-base <TT
d8241 1
a8241 3
><I
>string</I
></TT
d8246 1
a8246 1
> ixfr-tmp-file <TT
d8248 1
a8248 3
><I
>string</I
></TT
d8253 1
a8253 1
> maintain-ixfr-base <TT
d8255 1
a8255 3
><I
>yes_or_no</I
></TT
d8262 1
a8262 1
>port <TT
d8264 1
a8264 3
><I
>ip_port</I
></TT
d8266 4
a8269 1
>] { <TT
d8271 1
a8271 3
><I
>ip_addr</I
></TT
d8274 1
a8274 1
>port <TT
d8276 1
a8276 3
><I
>ip_port</I
></TT
d8280 1
a8280 1
>key <TT
d8282 1
a8282 3
><I
>key</I
></TT
d8284 1
a8284 1
>]; [<SPAN
d8291 1
a8291 1
> max-ixfr-log-size <TT
d8293 1
a8293 3
><I
>number</I
></TT
d8298 1
a8298 1
> max-transfer-idle-in <TT
d8300 1
a8300 3
><I
>number</I
></TT
d8305 1
a8305 1
> max-transfer-idle-out <TT
d8307 1
a8307 3
><I
>number</I
></TT
d8312 1
a8312 1
> max-transfer-time-in <TT
d8314 1
a8314 3
><I
>number</I
></TT
d8319 1
a8319 1
> max-transfer-time-out <TT
d8321 1
a8321 3
><I
>number</I
></TT
d8326 1
a8326 1
> notify <TT
d8328 2
a8329 4
><I
>yes_or_no</I
></TT
> | <TT
d8331 1
a8331 3
><I
>explicit</I
></TT
d8336 1
a8336 1
> pubkey <TT
d8338 2
a8339 4
><I
>number</I
></TT
> <TT
d8341 2
a8342 4
><I
>number</I
></TT
> <TT
d8344 2
a8345 4
><I
>number</I
></TT
> <TT
d8347 1
a8347 3
><I
>string</I
></TT
d8352 33
a8384 1
> transfer-source (<TT
d8386 2
a8387 4
><I
>ip4_addr</I
></TT
> | <TT
d8389 1
a8389 1
>*</TT
d8392 1
a8392 1
>port <TT
d8394 1
a8394 3
><I
>ip_port</I
></TT
d8400 1
a8400 1
> transfer-source-v6 (<TT
d8402 2
a8403 4
><I
>ip6_addr</I
></TT
> | <TT
d8405 1
a8405 1
>*</TT
d8408 1
a8408 1
>port <TT
d8410 1
a8410 3
><I
>ip_port</I
></TT
d8416 1
a8416 1
> notify-source (<TT
d8418 9
a8426 4
><I
>ip4_addr</I
></TT
> | <TT
d8428 1
a8428 1
>*</TT
d8431 1
a8431 1
>port <TT
d8433 1
a8433 3
><I
>ip_port</I
></TT
d8439 1
a8439 1
> notify-source-v6 (<TT
d8441 2
a8442 4
><I
>ip6_addr</I
></TT
> | <TT
d8444 1
a8444 1
>*</TT
d8447 1
a8447 1
>port <TT
d8449 1
a8449 3
><I
>ip_port</I
></TT
d8455 8
a8462 1
> zone-statistics <TT
d8464 1
a8464 3
><I
>yes_or_no</I
></TT
d8469 1
a8469 1
> sig-validity-interval <TT
d8471 1
a8471 3
><I
>number</I
></TT
d8476 1
a8476 1
> database <TT
d8478 1
a8478 3
><I
>string</I
></TT
d8483 1
a8483 1
> min-refresh-time <TT
d8485 1
a8485 3
><I
>number</I
></TT
d8490 1
a8490 1
> max-refresh-time <TT
d8492 1
a8492 3
><I
>number</I
></TT
d8497 1
a8497 1
> min-retry-time <TT
d8499 1
a8499 3
><I
>number</I
></TT
d8504 1
a8504 1
> max-retry-time <TT
d8506 1
a8506 3
><I
>number</I
></TT
d8509 7
d8526 2
a8527 2
NAME="AEN3212"
>6.2.22. <B
d8537 2
a8538 2
NAME="AEN3215"
>6.2.22.1. Zone Types</A
d8542 2
d8545 1
a8545 1
NAME="AEN3217"
a8546 2
><P
></P
a8553 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8555 1
a8555 1
><TT
d8557 1
a8557 1
>master</TT
a8560 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
a8568 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8570 1
a8570 1
><TT
d8572 1
a8572 1
>slave</TT
a8575 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8583 1
d8595 1
a8595 1
a slave server for the zone <TT
d8597 1
a8597 1
>example.com</TT
d8608 2
a8609 1
behave very slowly if you put 100K files into a single directory.)</P
a8613 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8615 1
a8615 1
><TT
d8617 1
a8617 1
>stub</TT
a8620 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8625 1
a8625 1
they are a feature specific to the <SPAN
d8627 1
a8627 1
>BIND</SPAN
d8641 1
a8641 1
In <SPAN
d8643 1
a8643 1
>BIND</SPAN
d8647 1
a8647 1
only in the master server for the parent zone. <SPAN
d8649 1
a8649 1
>BIND</SPAN
d8652 1
a8652 1
way. Therefore, if a <SPAN
d8654 1
a8654 1
>BIND</SPAN
d8666 1
a8666 1
<TT
d8668 1
a8668 1
>10.in-addr.arpa</TT
a8676 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8678 1
a8678 1
><TT
d8680 1
a8680 1
>forward</TT
a8683 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8720 1
a8720 1
servers as set globally) you need to respecify the global forwarders.</P
a8725 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8727 1
a8727 1
><TT
d8729 1
a8729 1
>hint</TT
a8732 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8734 1
a8734 1
>The initial set of root nameservers is
d8736 2
a8737 2
the root hints to find a root nameserver and get the most recent
list of root nameservers. If no hint zone is specified for class
a8743 3
WIDTH="87"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8745 1
a8745 1
><TT
d8747 1
a8747 1
>delegation-only</TT
a8750 3
WIDTH="405"
ALIGN="LEFT"
VALIGN="MIDDLE"
d8754 1
a8754 1
is received without a explicit or implict delegation in the authority
d8759 1
a8759 1
><TT
d8761 1
a8761 1
>delegation-only</TT
d8777 2
a8778 2
NAME="AEN3280"
>6.2.22.2. Class</A
d8782 1
a8782 1
a class is not specified, class <TT
d8784 2
a8785 2
>IN</TT
> (for <TT
d8787 1
a8787 1
>Internet</TT
d8791 1
a8791 1
>The <TT
d8793 1
a8793 1
>hesiod</TT
d8798 1
a8798 1
<TT
d8800 1
a8800 1
>HS</TT
d8805 1
a8805 1
in the mid-1970s. Zone data for it can be specified with the <TT
d8807 1
a8807 1
>CHAOS</TT
d8815 2
a8816 2
NAME="AEN3290"
>6.2.22.3. Zone Options</A
d8836 1
a8836 1
>Section 6.2.14.3</A
d8852 1
a8852 1
>Section 6.2.14.3</A
d8868 1
a8868 1
>Section 6.2.14.3</A
d8880 7
a8886 1
updates from all hosts.</P
d8898 1
a8898 1
>Section 6.2.22.4</A
d8908 3
a8910 36
>Specifies which hosts are allowed to
submit Dynamic DNS updates to slave zones to be forwarded to the
master.  The default is <TT
CLASS="userinput"
><B
>{ none; }</B
></TT
>, which 
means that no update forwarding will be performed.  To enable
update forwarding, specify
<TT
CLASS="userinput"
><B
>allow-update-forwarding { any; };</B
></TT
>.
Specifying values other than <TT
CLASS="userinput"
><B
>{ none; }</B
></TT
> or
<TT
CLASS="userinput"
><B
>{ any; }</B
></TT
> is usually counterproductive, since
the responsibility for update access control should rest with the 
master server, not the slaves.</P
><P
>Note that enabling the update forwarding feature on a slave server
may expose master servers relying on insecure IP address based
access control to attacks; see <A
HREF="Bv9ARM.ch07.html#dynamic_update_security"
>Section 7.3</A
d8912 4
a8915 1
for more details.</P
d8929 1
a8929 1
<TT
d8931 1
a8931 1
>DNS NOTIFY</TT
d8933 1
a8933 1
for this zone is made up of all the listed nameservers (other than
d8957 3
a8959 7
>&#13;This option was used in BIND 8 to restrict the character set of
domain names in master files and/or DNS responses received from the
network.  BIND 9 does not restrict the character set of domain names
and does not implement the <B
CLASS="command"
>check-names</B
> option.
d8979 1
a8979 1
>The default is <TT
d8981 1
a8981 3
><B
>"rbt"</B
></TT
d9002 1
a9002 1
>Section 6.2.14.1</A
d9013 1
a9013 1
to <TT
d9015 1
a9015 3
><B
>yes</B
></TT
d9059 1
a9059 1
>Was used in <SPAN
d9061 1
a9061 1
>BIND</SPAN
d9064 1
a9064 1
<SPAN
d9066 1
a9066 1
>BIND</SPAN
d9081 1
a9081 1
>Was an undocumented option in <SPAN
d9083 1
a9083 1
>BIND</SPAN
d9085 1
a9085 1
Ignored in <SPAN
d9087 1
a9087 1
>BIND</SPAN
d9103 1
a9103 1
>Section 6.2.14.6</A
d9119 1
a9119 1
>Section 6.2.14.6</A
d9135 1
a9135 1
>Section 6.2.14.6</A
d9151 1
a9151 1
>Section 6.2.14.6</A
d9167 1
a9167 1
>Section 6.2.14.1</A
d9177 1
a9177 1
>In <SPAN
d9179 1
a9179 1
>BIND</SPAN
d9182 1
a9182 1
zones when they are loaded from disk. <SPAN
d9184 1
a9184 1
>BIND</SPAN
d9186 1
a9186 1
on loading and ignores the option.</P
d9195 1
a9195 1
>If <TT
d9197 1
a9197 3
><B
>yes</B
></TT
d9218 1
a9218 1
>Section 6.2.14.14</A
d9234 1
a9234 1
>Section 6.2.14.6</A
d9251 52
a9302 1
>Section 6.2.14.6</A
d9319 1
a9319 1
>Section 6.2.14.6</A
d9336 1
a9336 1
>Section 6.2.14.6</A
d9358 1
a9358 1
>Section 6.2.14.14</A
d9362 48
d9419 1
a9419 1
>6.2.22.4. Dynamic Update Policies</A
d9422 1
a9422 1
><SPAN
d9424 1
a9424 1
>BIND</SPAN
d9440 1
a9440 1
way as in previous versions of <SPAN
d9442 1
a9442 1
>BIND</SPAN
d9449 1
a9449 1
> clause is new in <SPAN
d9451 1
a9451 1
>BIND</SPAN
d9487 1
a9487 1
> ) <TT
d9489 2
a9490 4
><I
>identity</I
></TT
> <TT
d9492 2
a9493 4
><I
>nametype</I
></TT
> <TT
d9495 1
a9495 3
><I
>name</I
></TT
d9498 1
a9498 1
> <TT
d9500 1
a9500 3
><I
>types</I
></TT
d9509 2
a9510 1
name field, and the type is specified in the type field.</P
d9512 20
a9531 2
>The identity field specifies a name or a wildcard name.  The
nametype field has 4 values: <TT
d9533 2
a9534 2
>name</TT
>, <TT
d9536 3
a9538 2
>subdomain</TT
>, <TT
d9540 2
a9541 3
>wildcard</TT
>,
and <TT
d9543 2
a9544 2
>self</TT
>
d9548 2
d9551 1
a9551 1
NAME="AEN3530"
a9552 2
><P
></P
a9559 3
WIDTH="79"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9561 1
a9561 1
><TT
d9563 1
a9563 1
>name</TT
a9566 3
WIDTH="353"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9568 6
a9573 2
>Matches when the updated name is the
same as the name in the name field.</P
a9577 3
WIDTH="79"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9579 1
a9579 1
><TT
d9581 1
a9581 1
>subdomain</TT
a9584 3
WIDTH="353"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9586 6
a9591 2
>Matches when the updated name is a subdomain
of the name in the name field (which includes the name itself).</P
a9595 3
WIDTH="79"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9597 1
a9597 1
><TT
d9599 1
a9599 1
>wildcard</TT
a9602 3
WIDTH="353"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9604 6
a9609 2
>Matches when the updated name is a valid
expansion of the wildcard name in the name field.</P
a9613 3
WIDTH="79"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9615 1
a9615 1
><TT
d9617 1
a9617 1
>self</TT
a9620 3
WIDTH="353"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9622 26
a9647 2
>Matches when the updated name is the
same as the message signer. The name field is ignored.</P
d9656 7
a9662 1
>If no types are specified, the rule matches all types except
d9665 2
d9676 1
a9676 1
NAME="AEN3560"
d9697 1
a9697 1
NAME="AEN3565"
d9705 1
a9705 1
        need not be preserved by nameservers, resolvers, or other
d9710 1
a9710 1
>Section 6.2.14.11</A
d9713 1
a9713 1
>Section 6.2.14.12</A
d9719 2
d9722 1
a9722 1
NAME="AEN3571"
a9723 2
><P
></P
a9730 3
WIDTH="96"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9734 3
WIDTH="336"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9740 3
WIDTH="96"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9744 3
WIDTH="336"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9747 1
a9747 2
the type of the resource in this resource record. Types refer to
abstract resources.</P
a9751 3
WIDTH="96"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9755 3
WIDTH="336"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9764 3
WIDTH="96"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9768 3
WIDTH="336"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9775 3
WIDTH="96"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9779 3
WIDTH="336"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9781 2
a9782 2
>the type and sometimes class-dependent
data that describes the resource.</P
d9797 1
a9797 3
> of valid RRs
(some of these listed, although not obsolete, are experimental (x)
or historical (h) and no longer in general use):</P
d9800 2
d9803 1
a9803 1
NAME="AEN3603"
a9804 2
><P
></P
a9811 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9815 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9817 12
a9828 1
>a host address.</P
a9832 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9836 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9838 3
a9840 1
>an IPv6 address.</P
a9844 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9846 1
a9846 1
>AAAA</P
a9848 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9850 2
a9851 1
>Obsolete format of IPv6 address</P
a9855 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9857 1
a9857 1
>AFSDB</P
a9859 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9861 2
a9862 2
>(x) location of AFS database servers.
Experimental.</P
a9866 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9870 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9872 2
a9873 1
>holds a digital certificate.</P
a9877 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9881 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9883 2
a9884 1
>identifies the canonical name of an alias.</P
a9888 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9892 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9894 5
a9898 3
>for delegation of reverse addresses.
Replaces the domain name specified with another name to be looked
up. Described in RFC 2672.</P
a9902 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9906 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9908 1
a9908 1
>Specifies the global position. Superseded by LOC.</P
a9912 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9916 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9918 2
a9919 1
>identifies the CPU and OS used by a host.</P
a9923 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9927 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9929 2
a9930 2
>(x) representation of ISDN addresses.
Experimental.</P
a9934 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9938 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9941 1
a9941 1
DNS name.</P
a9945 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9949 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9952 1
a9952 1
DNS name.</P
a9956 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9960 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9962 1
a9962 1
>(x) for storing GPS info. See RFC 1876.
a9967 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9971 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9974 3
a9976 1
 See RFC 974 for details.</P
a9980 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9984 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9986 1
a9986 1
>name authority pointer.</P
a9990 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a9994 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d9996 2
a9997 1
>a network service access point.</P
a10001 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10005 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10007 2
a10008 2
>the authoritative nameserver for the
domain.</P
a10012 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10016 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10021 1
a10021 1
See RFC 2535 for details.</P
a10025 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10029 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10032 1
a10032 1
name space.</P
a10036 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10040 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10043 1
a10043 1
addresses.</P
a10047 163
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>RP</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>(x) information on persons responsible
for the domain. Experimental.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>RT</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>(x) route-through binding for hosts that
do not have their own direct wide area network addresses. Experimental.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>SIG</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>("signature") contains data authenticated
in the secure DNS. See RFC 2535 for details.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>SOA</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>identifies the start of a zone of authority.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>SRV</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>information about well known network
services (replaces WKS).</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>TXT</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>text records.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>WKS</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>(h) information about which well known
network services, such as SMTP, that a domain supports. Historical,
replaced by newer RR SRV.</P
></TD
></TR
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>X25</P
></TD
><TD
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
><P
>(x) representation of X.25 network addresses. Experimental.</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>The following <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>classes</I
></SPAN
> of resource records
are currently valid in the DNS:</P
><DIV
CLASS="informaltable"
><A
NAME="AEN3750"
></A
><P
></P
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10049 1
a10049 1
>IN</P
a10051 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10053 2
a10054 1
>the Internet system.</P
a10058 3
COLSPAN="2"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10060 7
a10066 5
>For information about other,
older classes of RRs, see <A
HREF="Bv9ARM.ch09.html#classes_of_resource_records"
>Section A.2.1</A
>.</P
d10069 2
a10070 2
></TBODY
></TABLE
d10072 3
a10074 2
></P
></DIV
d10076 4
a10079 20
><SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>RDATA</I
></SPAN
> is the type-dependent or class-dependent
data that describes the resource:</P
><DIV
CLASS="informaltable"
><A
NAME="AEN3766"
></A
><P
></P
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
a10081 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10083 1
a10083 1
>A</P
a10085 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10087 2
a10088 1
>for the IN class, a 32 bit IP address.</P
a10092 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10094 1
a10094 1
>A6</P
a10096 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10098 2
a10099 2
>maps a domain name to an IPv6 address,
with a provision for indirection for leading "prefix" bits.</P
a10103 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10105 1
a10105 1
>CNAME</P
a10107 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10109 1
a10109 1
>a domain name.</P
a10113 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10115 1
a10115 1
>DNAME</P
a10117 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10119 3
a10121 4
>provides alternate naming to an entire
subtree of the domain name space, rather than to a single node.
 It causes some suffix of a queried name to be substituted with
a name from the DNAME record's RDATA.</P
a10125 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10127 1
a10127 1
>MX</P
a10129 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10131 2
a10132 3
>a 16 bit preference value (lower is better)
followed by a host name willing to act as a mail exchange for the
owner domain.</P
d10135 26
a10162 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10164 1
a10164 1
>NS</P
a10166 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10168 1
a10168 1
>a fully qualified domain name.</P
a10172 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10174 1
a10174 1
>PTR</P
a10176 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10178 8
a10185 1
>a fully qualified domain name.</P
a10189 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10191 1
a10191 1
>SOA</P
a10193 3
WIDTH="348"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10195 5
a10199 1
>several fields.</P
d10209 1
a10209 1
part of the RR.  For example, many nameservers internally form tree
d10236 1
a10236 1
NAME="AEN3814"
d10242 1
a10242 1
stored in a nameserver or resolver.  In the examples provided in
d10265 2
d10268 1
a10268 1
NAME="AEN3821"
a10269 2
><P
></P
a10276 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10278 1
a10278 1
><TT
d10280 1
a10280 1
>ISI.EDU.</TT
a10283 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10285 1
a10285 1
><TT
d10287 1
a10287 1
>MX</TT
a10290 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10292 1
a10292 1
><TT
d10294 1
a10294 1
>10 VENERA.ISI.EDU.</TT
a10299 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10303 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10305 1
a10305 1
><TT
d10307 1
a10307 1
>MX</TT
a10310 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10312 1
a10312 1
><TT
d10314 1
a10314 1
>10 VAXA.ISI.EDU</TT
a10319 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10321 1
a10321 1
><TT
d10323 1
a10323 1
>VENERA.ISI.EDU</TT
a10326 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10328 1
a10328 1
><TT
d10330 1
a10330 1
>A</TT
a10333 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10335 1
a10335 1
><TT
d10337 1
a10337 1
>128.9.0.32</TT
a10342 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10346 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10348 1
a10348 1
><TT
d10350 1
a10350 1
>A</TT
a10353 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10355 1
a10355 1
><TT
d10357 1
a10357 1
>10.1.0.52</TT
a10362 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10364 1
a10364 1
><TT
d10366 1
a10366 1
>VAXA.ISI.EDU</TT
a10369 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10371 1
a10371 1
><TT
d10373 1
a10373 1
>A</TT
a10376 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10378 1
a10378 1
><TT
d10380 1
a10380 1
>10.2.0.27</TT
a10385 3
WIDTH="133"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10389 3
WIDTH="98"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10391 1
a10391 1
><TT
d10393 1
a10393 1
>A</TT
a10396 3
WIDTH="202"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10398 1
a10398 1
><TT
d10400 1
a10400 1
>128.9.0.33</TT
d10420 2
d10423 1
a10423 1
NAME="AEN3887"
a10424 2
><P
></P
a10431 3
WIDTH="143"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10433 1
a10433 1
><TT
d10435 1
a10435 1
>XX.LCS.MIT.EDU. IN</TT
a10438 3
WIDTH="102"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10440 1
a10440 1
><TT
d10442 1
a10442 1
>A</TT
a10445 3
WIDTH="198"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10447 1
a10447 1
><TT
d10449 1
a10449 1
>10.0.0.44</TT
a10454 3
WIDTH="143"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10456 1
a10456 1
><TT
d10458 1
a10458 1
>CH</TT
a10461 3
WIDTH="102"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10463 1
a10463 1
><TT
d10465 1
a10465 1
>A</TT
a10468 3
WIDTH="198"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10470 1
a10470 1
><TT
d10472 1
a10472 1
>MIT.EDU. 2420</TT
d10482 1
a10482 1
>This example shows two addresses for <TT
d10484 1
a10484 1
>XX.LCS.MIT.EDU</TT
d10494 1
a10494 1
NAME="AEN3915"
d10529 2
d10532 1
a10532 1
NAME="AEN3921"
a10533 2
><P
></P
a10540 3
WIDTH="164"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10542 1
a10542 1
><TT
d10544 1
a10544 1
>example.com.</TT
a10547 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10549 1
a10549 1
><TT
d10551 1
a10551 1
>IN</TT
a10554 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10556 1
a10556 1
><TT
d10558 1
a10558 1
>MX</TT
a10561 3
WIDTH="94"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10563 1
a10563 1
><TT
d10565 1
a10565 1
>10</TT
a10568 3
WIDTH="149"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10570 1
a10570 1
><TT
d10572 1
a10572 1
>mail.example.com.</TT
a10577 3
WIDTH="164"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10581 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10583 1
a10583 1
><TT
d10585 1
a10585 1
>IN</TT
a10588 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10590 1
a10590 1
><TT
d10592 1
a10592 1
>MX</TT
a10595 3
WIDTH="94"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10597 1
a10597 1
><TT
d10599 1
a10599 1
>10</TT
a10602 3
WIDTH="149"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10604 1
a10604 1
><TT
d10606 1
a10606 1
>mail2.example.com.</TT
a10611 3
WIDTH="164"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10615 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10617 1
a10617 1
><TT
d10619 1
a10619 1
>IN</TT
a10622 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10624 1
a10624 1
><TT
d10626 1
a10626 1
>MX</TT
a10629 3
WIDTH="94"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10631 1
a10631 1
><TT
d10633 1
a10633 1
>20</TT
a10636 3
WIDTH="149"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10638 1
a10638 1
><TT
d10640 1
a10640 1
>mail.backup.org.</TT
a10645 3
WIDTH="164"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10647 1
a10647 1
><TT
d10649 1
a10649 1
>mail.example.com.</TT
a10652 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10654 1
a10654 1
><TT
d10656 1
a10656 1
>IN</TT
a10659 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10661 1
a10661 1
><TT
d10663 1
a10663 1
>A</TT
a10666 3
WIDTH="94"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10668 1
a10668 1
><TT
d10670 1
a10670 1
>10.0.0.1</TT
a10673 3
WIDTH="149"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10679 3
WIDTH="164"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10681 1
a10681 1
><TT
d10683 1
a10683 1
>mail2.example.com.</TT
a10686 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10688 1
a10688 1
><TT
d10690 1
a10690 1
>IN</TT
a10693 3
WIDTH="43"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10695 1
a10695 1
><TT
d10697 1
a10697 1
>A</TT
a10700 3
WIDTH="94"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10702 1
a10702 1
><TT
d10704 1
a10704 1
>10.0.0.2</TT
a10707 3
WIDTH="149"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10720 1
a10720 1
>Mail delivery will be attempted to <TT
d10722 1
a10722 1
>mail.example.com</TT
d10724 1
a10724 1
<TT
d10726 1
a10726 1
>mail2.example.com</TT
d10728 1
a10728 1
any order), and if neither of those succeed, delivery to <TT
d10730 1
a10730 1
>mail.backup.org</TT
d10750 2
d10753 1
a10753 1
NAME="AEN4013"
a10754 2
><P
></P
a10761 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10765 3
WIDTH="420"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10776 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10780 3
WIDTH="420"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10788 3
WIDTH="72"
ALIGN="LEFT"
VALIGN="MIDDLE"
a10792 3
WIDTH="420"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10806 1
a10806 1
can be explicitly specified, for example, <TT
d10808 1
a10808 1
>1h30m</TT
d10816 1
a10816 1
NAME="AEN4036"
d10842 2
d10845 1
a10845 1
NAME="AEN4041"
a10846 2
><P
></P
a10853 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10855 1
a10855 1
><TT
d10857 1
a10857 1
>$ORIGIN</TT
a10860 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10862 1
a10862 1
><TT
d10864 1
a10864 1
>2.1.10.in-addr.arpa</TT
a10869 3
WIDTH="108"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10871 1
a10871 1
><TT
d10873 1
a10873 1
>3</TT
a10876 3
WIDTH="384"
ALIGN="LEFT"
VALIGN="MIDDLE"
d10878 1
a10878 1
><TT
d10880 1
a10880 1
>IN PTR foo.example.com.</TT
d10911 1
a10911 1
NAME="AEN4063"
d10936 1
a10936 1
NAME="AEN4070"
d10947 1
a10947 1
><TT
d10949 1
a10949 3
><I
>domain-name</I
></TT
d10952 1
a10952 1
> <TT
d10954 1
a10954 3
><I
>comment</I
></TT
d10966 1
a10966 1
> &#60;<TT
d10968 1
a10968 1
>zone-name</TT
d10983 1
a10983 1
><TT
d10986 1
a10986 1
WWW     CNAME   MAIN-SERVER</TT
d10992 1
a10992 1
><TT
d10994 1
a10994 1
>WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.</TT
d11002 1
a11002 1
NAME="AEN4090"
d11013 1
a11013 1
<TT
d11015 1
a11015 3
><I
>filename</I
></TT
d11018 1
a11018 1
>&#13;<TT
d11020 1
a11020 3
><I
>origin</I
></TT
d11024 1
a11024 1
> <TT
d11026 1
a11026 3
><I
>comment</I
></TT
d11078 1
a11078 1
NAME="AEN4110"
d11089 1
a11089 1
<TT
d11091 1
a11091 3
><I
>default-ttl</I
></TT
d11094 1
a11094 1
>&#13;<TT
d11096 1
a11096 3
><I
>comment</I
></TT
d11114 2
a11115 2
NAME="AEN4121"
>6.3.6. <SPAN
d11117 1
a11117 1
>BIND</SPAN
d11127 9
a11135 1
> <TT
d11137 5
a11141 4
><I
>range</I
></TT
> <TT
d11143 3
a11145 4
><I
>lhs</I
></TT
> <TT
d11147 2
a11148 4
><I
>type</I
></TT
> <TT
d11150 1
a11150 3
><I
>rhs</I
></TT
d11153 1
a11153 1
> <TT
d11155 1
a11155 3
><I
>comment</I
></TT
d11172 1
a11172 1
><TT
d11176 1
a11176 1
$GENERATE 1-127 $ CNAME $.0</TT
d11182 1
a11182 1
><TT
d11190 1
a11190 1
</TT
d11194 2
d11197 1
a11197 1
NAME="AEN4141"
a11198 2
><P
></P
a11205 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11212 3
WIDTH="408"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11220 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11227 3
WIDTH="408"
ALIGN="LEFT"
VALIGN="MIDDLE"
d11257 1
a11257 1
by modifiers which change the offset from the interator, field width and base. 
d11307 57
a11363 1
recognised a indicating a literal $ in the output.</P
a11367 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11374 3
WIDTH="408"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11381 3
WIDTH="84"
ALIGN="LEFT"
VALIGN="MIDDLE"
a11388 3
WIDTH="408"
ALIGN="LEFT"
VALIGN="MIDDLE"
d11403 1
a11403 1
> directive is a <SPAN
d11405 1
a11405 1
>BIND</SPAN
d11408 2
d11457 1
a11457 1
>The <SPAN
d11459 1
a11459 1
>BIND</SPAN
d11470 1
a11470 1
><SPAN
d11472 1
a11472 1
>BIND</SPAN
@


1.3
log
@sync with 9.2.2-P3; new zone type "delegation-only"
discussed with deraadt@@, millert@@ and todd@@
@
text
@d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN3586"
d151 1
a151 1
NAME="AEN1105"
d741 1
a741 1
NAME="AEN1267"
d772 1
a772 1
NAME="AEN1275"
d883 1
a883 1
NAME="AEN1304"
d902 1
a902 1
NAME="AEN1309"
d934 1
a934 1
NAME="AEN1318"
d1044 1
a1044 1
NAME="AEN1342"
d1272 1
a1272 1
NAME="AEN1411"
d1319 1
a1319 1
NAME="AEN1424"
d1437 1
a1437 1
NAME="AEN1458"
d1740 1
a1740 1
NAME="AEN1531"
d1760 1
a1760 1
NAME="AEN1536"
d1789 1
a1789 1
NAME="AEN1543"
d1823 1
a1823 1
NAME="AEN1550"
d1901 1
a1901 1
NAME="AEN1568"
d2061 1
a2061 1
NAME="AEN1608"
d2124 1
a2124 1
NAME="AEN1624"
d2638 1
a2638 1
NAME="AEN1748"
d3018 1
a3018 2
> in a stub or forward
zone declartation.
d3034 1
a3034 1
NAME="AEN1866"
d3131 1
a3131 1
NAME="AEN1890"
d3205 1
a3205 1
NAME="AEN1909"
d4186 14
d4208 1
a4208 1
NAME="AEN2134"
d4481 20
d5223 1
a5223 1
NAME="AEN2434"
d5427 1
a5427 1
NAME="AEN2499"
d5522 1
a5522 1
NAME="AEN2525"
d5954 1
a5954 1
NAME="AEN2664"
d6074 1
a6074 1
NAME="AEN2701"
d6158 1
a6158 1
NAME="AEN2729"
d6525 1
a6525 1
NAME="AEN2817"
d6656 1
a6656 1
>ip6.int</TT
d6661 1
a6661 1
>ip6.arpa</TT
d6694 1
a6694 1
>ip6.int</TT
d6698 1
a6698 1
>ip6.arpa</TT
d6702 1
a6702 1
>ip6.int</TT
d6929 1
a6929 1
NAME="AEN2932"
d7065 28
d7393 1
a7393 1
NAME="AEN3047"
d7468 1
a7468 1
NAME="AEN3063"
d7503 1
a7503 1
NAME="AEN3071"
d7578 1
a7578 1
NAME="AEN3087"
d7765 1
a7765 1
    type ( master | slave | hint | stub | forward /| delegation-only ) ;
d8238 1
a8238 1
NAME="AEN3240"
d8249 1
a8249 1
NAME="AEN3243"
d8255 1
a8255 1
NAME="AEN3245"
d8393 1
a8393 1
RFC2157 addressing may be configured with stub zones for
d8503 7
d8523 1
a8523 1
NAME="AEN3306"
d8561 1
a8561 1
NAME="AEN3316"
d8788 1
a8788 1
>The flag only applies to forward and stub zones.  If set
d9219 1
a9219 1
NAME="AEN3556"
d9326 1
a9326 1
NAME="AEN3586"
d9347 1
a9347 1
NAME="AEN3591"
d9370 1
a9370 1
NAME="AEN3597"
d9484 1
a9484 1
NAME="AEN3629"
d9978 1
a9978 1
NAME="AEN3776"
d10033 1
a10033 1
NAME="AEN3792"
d10210 1
a10210 1
NAME="AEN3840"
d10240 1
a10240 1
NAME="AEN3847"
d10449 1
a10449 1
NAME="AEN3913"
d10540 1
a10540 1
NAME="AEN3941"
d10576 1
a10576 1
NAME="AEN3947"
d10872 1
a10872 1
NAME="AEN4039"
d10955 1
a10955 1
NAME="AEN4062"
d10982 1
a10982 1
NAME="AEN4067"
d11062 1
a11062 1
NAME="AEN4089"
d11087 1
a11087 1
NAME="AEN4096"
d11157 1
a11157 1
NAME="AEN4116"
d11239 1
a11239 1
NAME="AEN4136"
d11279 1
a11279 1
NAME="AEN4147"
d11348 3
a11350 3
0.0.0.192.IN-ADDR.ARPA NS SERVER2.EXAMPLE.
1.0.0.192.IN-ADDR.ARPA CNAME 1.0.0.0.192.IN-ADDR.ARPA
2.0.0.192.IN-ADDR.ARPA CNAME 2.0.0.0.192.IN-ADDR.ARPA
d11352 2
a11353 2
127.0.0.192.IN-ADDR.ARPA CNAME 127.0.0.0.192.IN-ADDR.ARPA
.</TT
d11358 1
a11358 1
NAME="AEN4167"
d11608 1
a11608 1
>
@


1.2
log
@update to BIND 9.2.2-release. ok millert@@
@
text
@d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN3565"
d2997 26
d3035 1
a3035 1
NAME="AEN1859"
d3132 1
a3132 1
NAME="AEN1883"
d3206 1
a3206 1
NAME="AEN1902"
d4195 1
a4195 1
NAME="AEN2127"
d5190 1
a5190 1
NAME="AEN2427"
d5394 1
a5394 1
NAME="AEN2492"
d5489 1
a5489 1
NAME="AEN2518"
d5921 1
a5921 1
NAME="AEN2657"
d6041 1
a6041 1
NAME="AEN2694"
d6125 1
a6125 1
NAME="AEN2722"
d6492 1
a6492 1
NAME="AEN2810"
d6896 1
a6896 1
NAME="AEN2925"
d7332 1
a7332 1
NAME="AEN3040"
d7407 1
a7407 1
NAME="AEN3056"
d7442 1
a7442 1
NAME="AEN3064"
d7517 1
a7517 1
NAME="AEN3080"
d7704 1
a7704 1
    type ( master | slave | hint | stub | forward ) ;
d7819 9
d8177 1
a8177 1
NAME="AEN3231"
d8188 1
a8188 1
NAME="AEN3234"
d8194 1
a8194 1
NAME="AEN3236"
d8421 23
d8455 1
a8455 1
NAME="AEN3291"
d8493 1
a8493 1
NAME="AEN3301"
d8716 17
d9151 1
a9151 1
NAME="AEN3535"
d9258 1
a9258 1
NAME="AEN3565"
d9279 1
a9279 1
NAME="AEN3570"
d9302 1
a9302 1
NAME="AEN3576"
d9416 1
a9416 1
NAME="AEN3608"
d9910 1
a9910 1
NAME="AEN3755"
d9965 1
a9965 1
NAME="AEN3771"
d10142 1
a10142 1
NAME="AEN3819"
d10172 1
a10172 1
NAME="AEN3826"
d10381 1
a10381 1
NAME="AEN3892"
d10472 1
a10472 1
NAME="AEN3920"
d10508 1
a10508 1
NAME="AEN3926"
d10804 1
a10804 1
NAME="AEN4018"
d10887 1
a10887 1
NAME="AEN4041"
d10914 1
a10914 1
NAME="AEN4046"
d10994 1
a10994 1
NAME="AEN4068"
d11019 1
a11019 1
NAME="AEN4075"
d11089 1
a11089 1
NAME="AEN4095"
d11171 1
a11171 1
NAME="AEN4115"
d11211 1
a11211 1
NAME="AEN4126"
d11290 1
a11290 1
NAME="AEN4146"
@


1.1
log
@Initial revision
@
text
@d11335 1
a11335 1
>For compatability with earlier versions <B
d11465 1
a11465 1
>@


1.1.1.1
log
@ISC BIND version 9.2.2rc1
@
text
@@


1.1.1.2
log
@ISC BIND version 9.3.0. ok deraadt@@
@
text
@a0 1
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
d7 2
a8 1
CONTENT="Modular DocBook HTML Stylesheet Version 1.7"><LINK
d73 1
a73 2
></A
>Chapter 6. <ACRONYM
d75 3
a77 2
>BIND</ACRONYM
> 9 Configuration Reference</H1
d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN4015"
d103 1
a103 1
><ACRONYM
d105 2
a106 3
>BIND</ACRONYM
> 9 configuration is broadly similar
to <ACRONYM
d108 3
a110 3
>BIND</ACRONYM
> 8; however, there are a few new areas
of configuration, such as views. <ACRONYM
d112 1
a112 1
>BIND</ACRONYM
d114 1
a114 1
8 configuration files should work with few alterations in <ACRONYM
d116 1
a116 1
>BIND</ACRONYM
d120 1
a120 1
found in <ACRONYM
d122 1
a122 1
>BIND</ACRONYM
d125 1
a125 1
><ACRONYM
d127 1
a127 1
>BIND</ACRONYM
d143 1
a143 1
>Following is a list of elements used throughout the <ACRONYM
d145 1
a145 1
>BIND</ACRONYM
d150 3
a154 3
><A
NAME="AEN1076"
></A
d162 3
d166 1
a166 1
><VAR
d168 1
a168 1
>acl_name</VAR
d172 3
d176 1
a176 1
>The name of an <VAR
d178 1
a178 1
>address_match_list</VAR
d188 3
d192 1
a192 1
><VAR
d194 1
a194 1
>address_match_list</VAR
d198 3
d202 1
a202 1
>A list of one or more <VAR
d204 2
a205 3
>ip_addr</VAR
>, 
<VAR
d207 2
a208 2
>ip_prefix</VAR
>, <VAR
d210 2
a211 3
>key_id</VAR
>, 
or <VAR
d213 1
a213 1
>acl_name</VAR
d223 3
d227 1
a227 1
><VAR
d229 1
a229 1
>domain_name</VAR
d233 3
d238 1
a238 1
a DNS name, for example "<VAR
d240 1
a240 1
>my.test.domain</VAR
d246 3
d250 1
a250 1
><VAR
d252 1
a252 1
>dotted_decimal</VAR
d256 3
d260 2
a261 2
>One to four integers valued 0 through
255 separated by dots (`.'), such as <B
d264 1
a264 2
>, 
<B
d275 3
d279 1
a279 1
><VAR
d281 1
a281 1
>ip4_addr</VAR
d285 3
d290 1
a290 1
in <VAR
d292 1
a292 1
>dotted_decimal</VAR
d298 3
d302 1
a302 1
><VAR
d304 1
a304 1
>ip6_addr</VAR
d308 3
d314 2
a315 25
>2001:db8::1234</B
>.
IPv6 scoped addresses that have ambiguity on their scope zones must be
disambiguated by an appropriate zone ID with the percent character
(`%') as delimiter.
It is strongly recommended to use string zone names rather than
numeric identifiers, in order to be robust against system
configuration changes.
However, since there is no standard mapping for such names and
identifier values, currently only interface names as link identifiers
are supported, assuming one-to-one mapping between interfaces and links.
For example, a link-local address <B
CLASS="command"
>fe80::1</B
> on the
link attached to the interface <B
CLASS="command"
>ne0</B
>
can be specified as <B
CLASS="command"
>fe80::1%ne0</B
>.
Note that on most systems link-local addresses always have the
ambiguity, and need to be disambiguated.</P
d320 3
d324 1
a324 1
><VAR
d326 1
a326 1
>ip_addr</VAR
d330 3
d334 1
a334 1
>An <VAR
d336 2
a337 2
>ip4_addr</VAR
> or <VAR
d339 1
a339 1
>ip6_addr</VAR
d345 3
d349 1
a349 1
><VAR
d351 1
a351 1
>ip_port</VAR
d355 3
d359 1
a359 1
>An IP port <VAR
d361 1
a361 1
>number</VAR
d363 1
a363 1
<VAR
d365 1
a365 1
>number</VAR
d367 2
a368 2
below 1024 typically restricted to use by processes running as root.
In some cases an asterisk (`*') character can be used as a placeholder to
d374 3
d378 1
a378 1
><VAR
d380 1
a380 1
>ip_prefix</VAR
d384 3
d388 1
a388 1
>An IP network specified as an <VAR
d390 1
a390 1
>ip_addr</VAR
d393 1
a393 1
Trailing zeros in a <VAR
d395 1
a395 1
>ip_addr</VAR
d422 3
d426 1
a426 1
><VAR
d428 1
a428 1
>key_id</VAR
d432 3
d436 1
a436 1
>A <VAR
d438 1
a438 1
>domain_name</VAR
d445 3
d449 1
a449 1
><VAR
d451 1
a451 1
>key_list</VAR
d455 3
d459 1
a459 1
>A list of one or more <VAR
d461 1
a461 1
>key_id</VAR
d468 3
d472 1
a472 1
><VAR
d474 1
a474 1
>number</VAR
d478 3
d482 1
a482 1
>A non-negative 32 bit integer
d490 3
d494 1
a494 1
><VAR
d496 1
a496 1
>path_name</VAR
d500 3
d513 3
d517 1
a517 1
><VAR
d519 1
a519 1
>size_spec</VAR
d523 3
d527 1
a527 1
>A number, the word <KBD
d529 3
a531 1
>unlimited</KBD
d533 1
a533 1
or the word <KBD
d535 3
a537 1
>default</KBD
d540 1
a540 1
>&#13;An <VAR
d542 2
a543 2
>unlimited</VAR
> <VAR
d545 1
a545 1
>size_spec</VAR
d547 1
a547 1
use, or the maximum available amount. A <VAR
d549 1
a549 1
>default size_spec</VAR
d553 1
a553 1
>A <VAR
d555 1
a555 1
>number</VAR
d557 1
a557 1
optionally be followed by a scaling factor: <KBD
d559 4
a562 2
>K</KBD
> or <KBD
d564 3
a566 1
>k</KBD
d568 1
a568 1
kilobytes, <KBD
d570 4
a573 2
>M</KBD
> or <KBD
d575 3
a577 1
>m</KBD
d579 1
a579 1
megabytes, and <KBD
d581 4
a584 2
>G</KBD
> or <KBD
d586 3
a588 1
>g</KBD
d595 1
a595 1
Using <VAR
d597 1
a597 1
>unlimited</VAR
d604 3
d608 1
a608 1
><VAR
d610 1
a610 1
>yes_or_no</VAR
d614 3
d618 1
a618 1
>Either <KBD
d620 4
a623 2
>yes</KBD
> or <KBD
d625 3
a627 1
>no</KBD
d629 1
a629 1
The words <KBD
d631 4
a634 2
>true</KBD
> and <KBD
d636 3
a638 1
>false</KBD
d640 1
a640 1
also accepted, as are the numbers <KBD
d642 4
a645 2
>1</KBD
> and <KBD
d647 3
a649 1
>0</KBD
d655 3
d659 1
a659 1
><VAR
d661 1
a661 1
>dialup_option</VAR
d665 3
d669 1
a669 1
>One of <KBD
d671 3
a673 1
>yes</KBD
d675 1
a675 1
<KBD
d677 4
a680 2
>no</KBD
>, <KBD
d682 3
a684 1
>notify</KBD
d686 1
a686 1
<KBD
d688 4
a691 2
>notify-passive</KBD
>, <KBD
d693 3
a695 1
>refresh</KBD
d697 1
a697 1
<KBD
d699 3
a701 1
>passive</KBD
d703 1
a703 1
When used in a zone, <KBD
d705 3
a707 1
>notify-passive</KBD
d709 1
a709 1
<KBD
d711 4
a714 2
>refresh</KBD
>, and <KBD
d716 3
a718 1
>passive</KBD
d741 1
a741 1
NAME="AEN1241"
d746 1
a746 1
><VAR
d748 1
a748 1
>address_match_list</VAR
d754 1
a754 1
<VAR
d756 1
a756 1
>address_match_list_element</VAR
d772 1
a772 1
NAME="AEN1249"
d777 3
a779 2
control for various server operations. They are also used in
the <B
d781 2
a782 6
>listen-on</B
> and <B
CLASS="command"
>sortlist</B
>
statements. The elements
d793 1
a793 1
>an IP prefix (in `/' notation)</P
d797 1
a797 4
>a key ID, as defined by the <B
CLASS="command"
>key</B
> statement</P
d813 2
a814 2
>Elements can be negated with a leading exclamation mark (`!'),
and the match list names "any", "none", "localhost", and "localnets"
d826 1
a826 1
for access control, defining listen-on ports, or in a sortlist,
d845 1
a845 5
>, <B
CLASS="command"
>allow-update-forwarding</B
>,
and <B
d853 8
d870 1
a870 2
1.2.3.13 to the 1.2.3/24 element.
Using <B
d883 1
a883 1
NAME="AEN1280"
d887 1
a887 1
>The <ACRONYM
d889 1
a889 1
>BIND</ACRONYM
d891 1
a891 1
anywhere that white space may appear in a <ACRONYM
d893 1
a893 1
>BIND</ACRONYM
d895 2
a896 2
file. To appeal to programmers of all kinds, they can be written
in the C, C++, or shell/perl style.</P
d902 1
a902 1
NAME="AEN1285"
d908 1
a908 1
>/* This is a <ACRONYM
d910 1
a910 1
>BIND</ACRONYM
d915 1
a915 1
>// This is a <ACRONYM
d917 1
a917 1
>BIND</ACRONYM
d922 1
a922 1
># This is a <ACRONYM
d924 1
a924 1
>BIND</ACRONYM
d934 1
a934 1
NAME="AEN1294"
d939 1
a939 1
a <ACRONYM
d941 1
a941 1
>BIND</ACRONYM
d977 1
a977 1
with the character <VAR
d979 1
a979 1
>#</VAR
d991 1
a991 2
>
</P
d1011 4
a1014 4
>You cannot use the semicolon (`;') character
   to start a comment such as you would in a zone file. The
   semicolon indicates the end of a configuration
   statement.</P
d1031 1
a1031 1
>A <ACRONYM
d1033 1
a1033 1
>BIND</ACRONYM
d1037 1
a1037 1
    statements contain a block of sub-statements, which are also
d1043 3
a1047 3
><A
NAME="AEN1318"
></A
d1055 3
d1065 3
d1075 3
d1085 3
d1098 3
d1108 3
d1117 3
d1127 3
d1137 3
d1147 3
d1157 3
a1159 34
><P
><B
CLASS="command"
>lwres</B
></P
></TD
><TD
><P
>configures <B
CLASS="command"
>named</B
> to
also act as a light weight resolver daemon (<B
CLASS="command"
>lwresd</B
>).</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>masters</B
></P
></TD
><TD
><P
>defines a named masters list for
inclusion in stub and slave zone masters clauses.</P
></TD
></TR
><TR
><TD
d1167 3
d1177 3
d1187 3
d1197 3
d1207 3
d1216 3
d1226 3
d1235 3
d1245 3
d1272 1
a1272 1
NAME="AEN1401"
d1318 3
a1322 3
><A
NAME="AEN1414"
></A
d1330 3
d1340 3
d1349 3
d1359 3
d1368 3
d1378 3
d1382 1
a1382 1
>Matches the IPv4 and IPv6 addresses of all network
d1388 3
d1398 3
d1402 2
a1403 13
>Matches any host on an IPv4 or IPv6 network
for which the system has an interface.
Some systems do not provide a way to determine the prefix lengths of
local IPv6 addresses.
In such a case, <B
CLASS="command"
>localnets</B
> only matches the local
IPv6 addresses, just like <B
CLASS="command"
>localhost</B
>.
</P
d1411 20
d1437 1
a1437 1
NAME="AEN1445"
d1452 1
a1452 1
>] allow { <VAR
d1454 3
a1456 1
> address_match_list </VAR
d1458 1
a1458 1
                keys { <VAR
d1460 3
a1462 1
> key_list </VAR
d1487 2
a1488 2
      channels to be used by system administrators to control the
      operation of the name server. These control channels are
d1493 1
a1493 1
      and retrieve non-DNS results from a name server.</P
d1512 1
a1512 1
      of <VAR
d1514 1
a1514 1
>*</VAR
d1521 1
a1521 1
> of <VAR
d1523 1
a1523 1
>::</VAR
d1529 1
a1529 1
      using the loopback address (<VAR
d1531 1
a1531 1
>127.0.0.1</VAR
d1533 1
a1533 1
      or <VAR
d1535 1
a1535 1
>::1</VAR
a1539 10
>&#13;      If no port is specified, port 953
      is used.  "<VAR
CLASS="literal"
>*</VAR
>" cannot be used for
      <B
CLASS="command"
>ip_port</B
>.</P
><P
d1548 2
a1549 2
> clauses. Connections to the control
      channel are permitted based on the
d1553 1
a1553 2
>.  This is for simple
      IP address based filtering only; any <B
d1557 1
a1557 1
      elements of the <B
d1561 2
a1562 5
      ignored.
      </P
><P
>The primary authorization mechanism of the command
      channel is the <B
d1565 1
a1565 6
>, which contains
      a list of <B
CLASS="command"
>key_id</B
>s.
      Each <B
d1572 4
a1575 3
> is authorized to execute
      commands over the control channel.
      See <A
d1581 4
a1584 6
>Section 3.3.1.2</A
>) for information about
      configuring keys in <B
CLASS="command"
>rndc</B
>.</P
d1596 1
d1616 1
a1616 1
> (or whatever <VAR
d1618 1
a1618 1
>sysconfdir</VAR
d1620 1
a1620 1
was specified as when <ACRONYM
d1622 1
a1622 1
>BIND</ACRONYM
d1628 1
a1628 1
<KBD
d1630 3
a1632 1
>rndc-confgen -a</KBD
d1640 1
a1640 1
      ease the transition of systems from <ACRONYM
d1642 1
a1642 1
>BIND</ACRONYM
d1650 1
a1650 1
It makes it possible to use an existing <ACRONYM
d1652 1
a1652 1
>BIND</ACRONYM
d1654 1
a1654 1
configuration file in <ACRONYM
d1656 1
a1656 1
>BIND</ACRONYM
d1666 1
a1666 1
command <KBD
d1668 3
a1670 1
>rndc-confgen -a</KBD
d1680 1
a1680 1
      <ACRONYM
d1682 1
a1682 1
>BIND</ACRONYM
d1710 1
a1710 1
>The UNIX control channel type of <ACRONYM
d1712 1
a1712 1
>BIND</ACRONYM
d1714 1
a1714 1
      in <ACRONYM
d1716 1
a1716 1
>BIND</ACRONYM
d1719 1
a1719 1
      <ACRONYM
d1721 1
a1721 1
>BIND</ACRONYM
d1740 1
a1740 1
NAME="AEN1524"
d1748 1
a1748 1
>include <VAR
d1750 3
a1752 1
>filename</VAR
d1760 1
a1760 1
NAME="AEN1529"
d1771 1
a1771 1
      specified file at the point where the <B
d1782 1
a1782 1
      that are readable only by the name server.</P
d1789 1
a1789 1
NAME="AEN1536"
d1797 1
a1797 1
>key <VAR
d1799 3
a1801 1
>key_id</VAR
d1803 1
a1803 1
    algorithm <VAR
d1805 3
a1807 1
>string</VAR
d1809 1
a1809 1
    secret <VAR
d1811 3
a1813 1
>string</VAR
d1823 1
a1823 1
NAME="AEN1543"
d1834 1
a1834 1
secret key for use with TSIG (see <A
d1836 2
a1837 8
>Section 4.5</A
>)
or the command channel
(see <A
HREF="Bv9ARM.ch06.html#controls_statement_definition_and_usage"
>Section 6.2.4</A
>).
</P
d1863 1
a1863 1
>The <VAR
d1865 3
a1867 1
>key_id</VAR
d1870 1
a1870 5
be used in a <B
CLASS="command"
>server</B
>
statement to cause requests sent to that
d1875 1
a1875 1
>The <VAR
d1877 3
a1879 1
>algorithm_id</VAR
d1883 1
a1883 1
<VAR
d1885 1
a1885 1
>hmac-md5</VAR
d1887 1
a1887 1
<VAR
d1889 3
a1891 1
>secret_string</VAR
d1901 1
a1901 1
NAME="AEN1563"
d1916 1
a1916 1
> <VAR
d1918 3
a1920 1
>channel_name</VAR
d1925 1
a1925 1
> <VAR
d1927 3
a1929 1
>path name</VAR
d1934 1
a1934 1
> ( <VAR
d1936 4
a1939 2
>number</VAR
> | <VAR
d1941 1
a1941 1
>unlimited</VAR
d1946 1
a1946 1
> <VAR
d1948 3
a1950 1
>size spec</VAR
d1955 1
a1955 1
> <VAR
d1957 3
a1959 1
>syslog_facility</VAR
d1972 1
a1972 1
> (<VAR
d1974 2
a1975 2
>critical</VAR
> | <VAR
d1977 2
a1978 2
>error</VAR
> | <VAR
d1980 2
a1981 2
>warning</VAR
> | <VAR
d1983 1
a1983 1
>notice</VAR
d1985 1
a1985 1
                 <VAR
d1987 2
a1988 2
>info</VAR
> | <VAR
d1990 2
a1991 2
>debug</VAR
> [ <VAR
d1993 4
a1996 2
>level</VAR
> ] | <VAR
d1998 1
a1998 1
>dynamic</VAR
d2003 1
a2003 1
> <VAR
d2005 2
a2006 2
>yes</VAR
> or <VAR
d2008 1
a2008 1
>no</VAR
d2013 1
a2013 1
> <VAR
d2015 2
a2016 2
>yes</VAR
> or <VAR
d2018 1
a2018 1
>no</VAR
d2023 1
a2023 1
> <VAR
d2025 2
a2026 2
>yes</VAR
> or <VAR
d2028 1
a2028 1
>no</VAR
d2034 1
a2034 1
> <VAR
d2036 3
a2038 1
>category_name</VAR
d2040 1
a2040 1
     <VAR
d2042 4
a2045 2
>channel_name</VAR
> ; [ <VAR
d2047 3
a2049 1
>channel_nam</VAR
d2061 1
a2061 1
NAME="AEN1603"
d2072 1
a2072 1
variety of logging options for the name server. Its <B
d2095 2
a2096 2
     category default { default_syslog; default_debug; };
     category unmatched { null; };
d2100 1
a2100 1
>In <ACRONYM
d2102 1
a2102 1
>BIND</ACRONYM
d2104 1
a2104 1
the entire configuration file has been parsed.  In <ACRONYM
d2106 1
a2106 1
>BIND</ACRONYM
d2114 1
a2114 1
channels, or to standard error if the "<VAR
d2116 1
a2116 1
>-g</VAR
d2124 1
a2124 1
NAME="AEN1619"
d2207 1
a2207 1
>versions unlimited</B
d2250 1
a2250 1
>channel an_example_channel {
d2360 1
a2360 1
"priorities", except that they can also be used if you are writing
d2426 1
a2426 1
with the <VAR
d2428 1
a2428 1
>-d</VAR
d2444 1
a2444 1
>channel specific_debug_level {
d2456 1
a2456 1
server's global debug level to determine what messages to print.</P
d2493 1
a2493 1
><SAMP
d2495 1
a2495 1
>28-Feb-2000 15:05:32.863 general: notice: running</SAMP
d2510 1
a2510 1
>channel default_syslog {
d2517 1
a2517 1
channel default_debug {
d2528 2
a2529 2
channel default_stderr {
    stderr;                             // writes to stderr
d2534 1
a2534 1
channel null {
d2551 1
a2551 1
>For security reasons, when the "<VAR
d2553 1
a2553 1
>-u</VAR
d2568 1
a2568 1
to capture this output, you must run the server with the "<VAR
d2570 1
a2570 1
>-g</VAR
d2601 1
a2601 1
>category default { default_syslog; default_debug; };
d2609 1
a2609 1
>channel my_security_channel {
d2613 4
a2616 4
category security {
    my_security_channel;
    default_syslog;
    default_debug;
d2625 2
a2626 2
>category xfer-out { null; };
category notify { null; };
d2631 1
a2631 1
categories may be added in future <ACRONYM
d2633 1
a2633 1
>BIND</ACRONYM
d2637 3
a2641 3
><A
NAME="AEN1743"
></A
d2649 3
d2659 3
d2670 3
d2680 3
d2690 3
d2700 3
d2710 3
d2720 3
d2729 3
d2739 3
d2748 3
d2758 3
d2768 3
d2778 3
d2787 3
d2797 3
d2806 3
d2816 3
d2825 3
d2835 3
d2844 3
d2854 3
d2876 3
d2886 3
d2895 3
d2905 3
d2914 3
d2920 1
a2920 1
>update-security</B
d2924 3
d2928 1
a2928 7
>Approval and denial of update requests.</P
></TD
></TR
><TR
><TD
><P
><B
d2931 1
a2931 1
></P
a2932 35
><TD
><P
>Specify where queries should be logged to.</P
>
<P
>&#13;At startup, specifing the category <B
CLASS="command"
>queries</B
> will also
enable query logging unless <B
CLASS="command"
>querylog</B
> option has been
specified.
</P
>
<P
>&#13;The query log entry reports the client's IP address and port number.  The
query name, class and type.  It also reports whether the Recursion Desired
flag was set (+ if set, - if not set), EDNS was in use (E) or if the
query was signed (S).</P
>
<PRE
CLASS="programlisting"
><SAMP
CLASS="computeroutput"
>client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</SAMP
>
<SAMP
CLASS="computeroutput"
>client ::1#62537: query: www.example.net IN AAAA -SE</SAMP
>
</PRE
>
</TD
d2936 3
d2946 3
d2957 3
d2967 3
d2977 3
d2987 3
a2996 19
><TR
><TD
><P
><B
CLASS="command"
>delegation-only</B
></P
></TD
><TD
><P
>Delegation only.  Logs queries that have have
been forced to NXDOMAIN as the result of a delegation-only zone or
a <B
CLASS="command"
>delegation-only</B
> in a hint or stub zone declaration.
</P
></TD
></TR
d3009 1
a3009 1
NAME="AEN1873"
d3032 1
a3032 1
> listen-on { <VAR
d3034 3
a3036 1
>ip_addr</VAR
d3039 1
a3039 1
>port <VAR
d3041 3
a3043 1
>ip_port</VAR
d3047 1
a3047 1
> <VAR
d3049 3
a3051 1
>ip_addr</VAR
d3054 1
a3054 1
>port <VAR
d3056 3
a3058 1
>ip_port</VAR
d3065 1
a3065 1
> view <VAR
d3067 3
a3069 1
>view_name</VAR
d3074 1
a3074 1
> search { <VAR
d3076 3
a3078 1
>domain_name</VAR
d3081 1
a3081 1
> <VAR
d3083 3
a3085 1
>domain_name</VAR
d3091 1
a3091 1
> ndots <VAR
d3093 3
a3095 1
>number</VAR
d3106 1
a3106 1
NAME="AEN1897"
d3180 1
a3180 1
NAME="AEN1916"
a3182 67
>masters</B
> Statement Grammar</A
></H2
><PRE
CLASS="programlisting"
>&#13;<B
CLASS="command"
>masters</B
> <VAR
CLASS="replaceable"
>name</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] { ( <VAR
CLASS="replaceable"
>masters_list</VAR
> | <VAR
CLASS="replaceable"
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] [<SPAN
CLASS="optional"
>key <VAR
CLASS="replaceable"
>key</VAR
></SPAN
>] ) ; [<SPAN
CLASS="optional"
>...</SPAN
>] } ; 
</PRE
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1931"
>6.2.14. <B
CLASS="command"
>masters</B
> Statement Definition and Usage</A
></H2
><P
><B
CLASS="command"
>masters</B
> lists allow for a common set of masters
to be easily used by multiple stub and slave zones.</P
></DIV
><DIV
CLASS="sect2"
><H2
CLASS="sect2"
><A
NAME="AEN1936"
>6.2.15. <B
CLASS="command"
d3200 1
a3200 1
> version <VAR
d3202 3
a3204 1
>version_string</VAR
d3209 1
a3209 1
> hostname <VAR
d3211 3
a3213 1
>hostname_string</VAR
d3218 1
a3218 1
> server-id <VAR
d3220 3
a3222 1
>server_id_string</VAR
d3227 1
a3227 1
> directory <VAR
d3229 3
a3231 1
>path_name</VAR
d3236 1
a3236 1
> key-directory <VAR
d3238 4
a3241 6
>path_name</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> named-xfer <VAR
d3243 3
a3245 1
>path_name</VAR
d3250 1
a3250 1
> tkey-domain <VAR
d3252 3
a3254 1
>domainname</VAR
d3259 1
a3259 1
> tkey-dhkey <VAR
d3261 3
a3263 4
>key_name</VAR
> <VAR
CLASS="replaceable"
>key_tag</VAR
d3268 1
a3268 1
> dump-file <VAR
d3270 3
a3272 1
>path_name</VAR
d3277 1
a3277 1
> memstatistics-file <VAR
d3279 3
a3281 1
>path_name</VAR
d3286 1
a3286 1
> pid-file <VAR
d3288 3
a3290 1
>path_name</VAR
d3295 1
a3295 1
> statistics-file <VAR
d3297 3
a3299 1
>path_name</VAR
d3304 1
a3304 1
> zone-statistics <VAR
d3306 3
a3308 1
>yes_or_no</VAR
d3313 1
a3313 1
> auth-nxdomain <VAR
d3315 3
a3317 1
>yes_or_no</VAR
d3322 1
a3322 1
> deallocate-on-exit <VAR
d3324 3
a3326 1
>yes_or_no</VAR
d3331 1
a3331 1
> dialup <VAR
d3333 3
a3335 1
>dialup_option</VAR
d3340 1
a3340 1
> fake-iquery <VAR
d3342 3
a3344 1
>yes_or_no</VAR
d3349 1
a3349 1
> fetch-glue <VAR
d3351 3
a3353 1
>yes_or_no</VAR
d3358 1
a3358 1
> flush-zones-on-shutdown <VAR
d3360 3
a3362 1
>yes_or_no</VAR
d3367 1
a3367 1
> has-old-clients <VAR
d3369 3
a3371 1
>yes_or_no</VAR
d3376 1
a3376 1
> host-statistics <VAR
d3378 4
a3381 6
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> minimal-responses <VAR
d3383 3
a3385 1
>yes_or_no</VAR
d3390 1
a3390 1
> multiple-cnames <VAR
d3392 3
a3394 1
>yes_or_no</VAR
d3399 1
a3399 1
> notify <VAR
d3401 3
a3403 4
>yes_or_no</VAR
> | <VAR
CLASS="replaceable"
>explicit</VAR
d3408 1
a3408 1
> recursion <VAR
d3410 3
a3412 1
>yes_or_no</VAR
d3417 1
a3417 1
> rfc2308-type1 <VAR
d3419 3
a3421 1
>yes_or_no</VAR
d3426 1
a3426 1
> use-id-pool <VAR
d3428 4
a3431 6
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> maintain-ixfr-base <VAR
d3433 3
a3435 35
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-enable <VAR
CLASS="replaceable"
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-lookaside <VAR
CLASS="replaceable"
>domain</VAR
> trust-anchor <VAR
CLASS="replaceable"
>domain</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> dnssec-must-be-secure <VAR
CLASS="replaceable"
>domain yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> forward ( <VAR
CLASS="replaceable"
>only</VAR
> | <VAR
CLASS="replaceable"
>first</VAR
d3440 1
a3440 1
> forwarders { <VAR
d3442 3
a3444 1
>ip_addr</VAR
d3447 1
a3447 1
>port <VAR
d3449 3
a3451 1
>ip_port</VAR
d3455 1
a3455 1
> <VAR
d3457 3
a3459 1
>ip_addr</VAR
d3462 1
a3462 1
>port <VAR
d3464 3
a3466 1
>ip_port</VAR
d3473 1
a3473 3
> dual-stack-servers [<SPAN
CLASS="optional"
>port <VAR
d3475 4
a3478 3
>ip_port</VAR
></SPAN
>] { ( <VAR
d3480 4
a3483 4
>domain_name</VAR
> [<SPAN
CLASS="optional"
>port <VAR
d3485 4
a3488 3
>ip_port</VAR
></SPAN
>] | <VAR
d3490 4
a3493 4
>ip_addr</VAR
> [<SPAN
CLASS="optional"
>port <VAR
d3495 4
a3498 7
>ip_port</VAR
></SPAN
>] ) ; ... }; </SPAN
>]
    [<SPAN
CLASS="optional"
> check-names ( <VAR
d3500 3
a3502 16
>master</VAR
> | <VAR
CLASS="replaceable"
>slave</VAR
> | <VAR
CLASS="replaceable"
> response</VAR
> )( <VAR
CLASS="replaceable"
>warn</VAR
> | <VAR
CLASS="replaceable"
>fail</VAR
> | <VAR
CLASS="replaceable"
>ignore</VAR
d3507 1
a3507 1
> allow-notify { <VAR
d3509 3
a3511 1
>address_match_list</VAR
d3516 1
a3516 1
> allow-query { <VAR
d3518 3
a3520 1
>address_match_list</VAR
d3525 1
a3525 1
> allow-transfer { <VAR
d3527 3
a3529 1
>address_match_list</VAR
d3534 1
a3534 1
> allow-recursion { <VAR
d3536 3
a3538 1
>address_match_list</VAR
d3543 1
a3543 1
> allow-update-forwarding { <VAR
d3545 3
a3547 1
>address_match_list</VAR
d3552 1
a3552 1
> allow-v6-synthesis { <VAR
d3554 3
a3556 22
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> blackhole { <VAR
CLASS="replaceable"
>address_match_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> avoid-v4-udp-ports { <VAR
CLASS="replaceable"
>port_list</VAR
> }; </SPAN
>]
    [<SPAN
CLASS="optional"
> avoid-v6-udp-ports { <VAR
CLASS="replaceable"
>port_list</VAR
d3563 1
a3563 1
> port <VAR
d3565 3
a3567 1
>ip_port</VAR
d3569 1
a3569 1
>] { <VAR
d3571 3
a3573 1
>address_match_list</VAR
d3580 1
a3580 1
> port <VAR
d3582 3
a3584 1
>ip_port</VAR
d3586 1
a3586 1
>] { <VAR
d3588 3
a3590 1
>address_match_list</VAR
d3597 1
a3597 1
> address ( <VAR
d3599 4
a3602 2
>ip_addr</VAR
> | <VAR
d3604 3
a3606 1
>*</VAR
d3610 1
a3610 1
> port ( <VAR
d3612 4
a3615 2
>ip_port</VAR
> | <VAR
d3617 3
a3619 1
>*</VAR
d3627 1
a3627 1
> address ( <VAR
d3629 4
a3632 2
>ip_addr</VAR
> | <VAR
d3634 3
a3636 1
>*</VAR
d3640 1
a3640 1
> port ( <VAR
d3642 4
a3645 2
>ip_port</VAR
> | <VAR
d3647 3
a3649 1
>*</VAR
d3655 1
a3655 1
> max-transfer-time-in <VAR
d3657 3
a3659 1
>number</VAR
d3664 1
a3664 1
> max-transfer-time-out <VAR
d3666 3
a3668 1
>number</VAR
d3673 1
a3673 1
> max-transfer-idle-in <VAR
d3675 3
a3677 1
>number</VAR
d3682 1
a3682 1
> max-transfer-idle-out <VAR
d3684 3
a3686 1
>number</VAR
d3691 1
a3691 1
> tcp-clients <VAR
d3693 3
a3695 1
>number</VAR
d3700 1
a3700 1
> recursive-clients <VAR
d3702 3
a3704 1
>number</VAR
d3709 1
a3709 1
> serial-query-rate <VAR
d3711 3
a3713 1
>number</VAR
d3718 1
a3718 1
> serial-queries <VAR
d3720 3
a3722 1
>number</VAR
d3727 1
a3727 1
> tcp-listen-queue <VAR
d3729 3
a3731 1
>number</VAR
d3736 1
a3736 1
> transfer-format <VAR
d3738 3
a3740 1
>( one-answer | many-answers )</VAR
d3745 1
a3745 1
> transfers-in  <VAR
d3747 3
a3749 1
>number</VAR
d3754 1
a3754 1
> transfers-out <VAR
d3756 3
a3758 1
>number</VAR
d3763 1
a3763 1
> transfers-per-ns <VAR
d3765 4
a3768 9
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
d3770 1
a3770 1
>*</CODE
d3773 1
a3773 1
>port <VAR
d3775 3
a3777 1
>ip_port</VAR
d3783 1
a3783 1
> transfer-source-v6 (<VAR
d3785 4
a3788 2
>ip6_addr</VAR
> | <CODE
d3790 1
a3790 1
>*</CODE
d3793 1
a3793 1
>port <VAR
d3795 3
a3797 1
>ip_port</VAR
d3803 1
a3803 1
> alt-transfer-source (<VAR
d3805 4
a3808 2
>ip4_addr</VAR
> | <CODE
d3810 1
a3810 1
>*</CODE
d3813 1
a3813 1
>port <VAR
d3815 3
a3817 1
>ip_port</VAR
d3823 1
a3823 1
> alt-transfer-source-v6 (<VAR
d3825 4
a3828 2
>ip6_addr</VAR
> | <CODE
d3830 1
a3830 1
>*</CODE
d3833 1
a3833 1
>port <VAR
d3835 3
a3837 1
>ip_port</VAR
d3843 1
a3843 1
> use-alt-transfer-source <VAR
d3845 3
a3847 40
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> also-notify { <VAR
CLASS="replaceable"
>ip_addr</VAR
d3850 1
a3850 1
>port <VAR
d3852 3
a3854 1
>ip_port</VAR
d3858 1
a3858 1
> <VAR
d3860 3
a3862 1
>ip_addr</VAR
d3865 1
a3865 1
>port <VAR
d3867 3
a3869 1
>ip_port</VAR
d3876 1
a3876 1
> max-ixfr-log-size <VAR
d3878 3
a3880 1
>number</VAR
d3885 1
a3885 1
> max-journal-size <VAR
d3887 3
a3889 8
>size_spec</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> coresize <VAR
CLASS="replaceable"
>size_spec</VAR
d3894 1
a3894 1
> datasize <VAR
d3896 3
a3898 1
>size_spec</VAR
d3903 1
a3903 1
> files <VAR
d3905 3
a3907 1
>size_spec</VAR
d3912 1
a3912 1
> stacksize <VAR
d3914 3
a3916 1
>size_spec</VAR
d3921 1
a3921 1
> cleaning-interval <VAR
d3923 3
a3925 1
>number</VAR
d3930 1
a3930 1
> heartbeat-interval <VAR
d3932 3
a3934 1
>number</VAR
d3939 1
a3939 1
> interface-interval <VAR
d3941 3
a3943 1
>number</VAR
d3948 1
a3948 1
> statistics-interval <VAR
d3950 3
a3952 1
>number</VAR
d3957 1
a3957 1
> topology { <VAR
d3959 3
a3961 1
>address_match_list</VAR
d3966 1
a3966 1
> sortlist { <VAR
d3968 3
a3970 1
>address_match_list</VAR
d3975 1
a3975 1
> rrset-order { <VAR
d3977 3
a3979 1
>order_spec</VAR
d3982 1
a3982 1
> <VAR
d3984 3
a3986 1
>order_spec</VAR
d3992 1
a3992 1
> lame-ttl <VAR
d3994 3
a3996 1
>number</VAR
d4001 1
a4001 1
> max-ncache-ttl <VAR
d4003 3
a4005 1
>number</VAR
d4010 1
a4010 1
> max-cache-ttl <VAR
d4012 3
a4014 1
>number</VAR
d4019 1
a4019 1
> sig-validity-interval <VAR
d4021 3
a4023 1
>number</VAR
d4028 1
a4028 1
> min-roots <VAR
d4030 3
a4032 1
>number</VAR
d4037 1
a4037 1
> use-ixfr <VAR
d4039 3
a4041 1
>yes_or_no</VAR
d4046 1
a4046 1
> provide-ixfr <VAR
d4048 3
a4050 1
>yes_or_no</VAR
d4055 1
a4055 1
> request-ixfr <VAR
d4057 3
a4059 1
>yes_or_no</VAR
d4064 1
a4064 1
> treat-cr-as-space <VAR
d4066 3
a4068 1
>yes_or_no</VAR
d4073 1
a4073 1
> min-refresh-time <VAR
d4075 3
a4077 1
>number</VAR
d4082 1
a4082 1
> max-refresh-time <VAR
d4084 3
a4086 1
>number</VAR
d4091 1
a4091 1
> min-retry-time <VAR
d4093 3
a4095 1
>number</VAR
d4100 1
a4100 1
> max-retry-time <VAR
d4102 3
a4104 1
>number</VAR
d4109 1
a4109 1
> port <VAR
d4111 3
a4113 1
>ip_port</VAR
d4118 1
a4118 1
> additional-from-auth <VAR
d4120 3
a4122 1
>yes_or_no</VAR
d4127 1
a4127 1
> additional-from-cache <VAR
d4129 3
a4131 1
>yes_or_no</VAR
d4136 1
a4136 1
> random-device <VAR
d4138 3
a4140 1
>path_name</VAR
d4145 1
a4145 1
> max-cache-size <VAR
d4147 3
a4149 1
>size_spec</VAR
d4154 1
a4154 1
> match-mapped-addresses <VAR
d4156 3
a4158 21
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> preferred-glue ( <VAR
CLASS="replaceable"
>A</VAR
> | <VAR
CLASS="replaceable"
>AAAA</VAR
> | <VAR
CLASS="replaceable"
>NONE</VAR
> ); </SPAN
>]
    [<SPAN
CLASS="optional"
> edns-udp-size <VAR
CLASS="replaceable"
>number</VAR
a4160 17
    [<SPAN
CLASS="optional"
> root-delegation-only [<SPAN
CLASS="optional"
> exclude { <VAR
CLASS="replaceable"
>namelist</VAR
> } </SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> querylog <VAR
CLASS="replaceable"
>yes_or_no</VAR
> ; </SPAN
>]
a4161 16
    [<SPAN
CLASS="optional"
> disable-algorithms <VAR
CLASS="replaceable"
>domain</VAR
> { <VAR
CLASS="replaceable"
>algorithm</VAR
>; [<SPAN
CLASS="optional"
> <VAR
CLASS="replaceable"
>algorithm</VAR
>; </SPAN
>] }; </SPAN
>]
d4169 2
a4170 2
NAME="options"
>6.2.16. <B
d4180 1
a4180 1
to be used by <ACRONYM
d4182 1
a4182 1
>BIND</ACRONYM
d4184 3
a4186 1
once in a configuration file. If there is no <B
d4200 18
a4238 12
>key-directory</B
></DT
><DD
><P
>When performing dynamic update of secure zones, the
directory where the public and private key files should be found,
if different than the current working directory.  The directory specified
must be an absolute path.</P
></DD
><DT
><B
CLASS="command"
d4250 1
a4250 1
It was used in <ACRONYM
d4252 1
a4252 1
>BIND</ACRONYM
d4258 1
a4258 1
In <ACRONYM
d4260 1
a4260 1
>BIND</ACRONYM
d4284 1
a4284 1
key will be "<VAR
d4286 1
a4286 1
>client specified part</VAR
d4288 1
a4288 1
"<VAR
d4290 1
a4290 1
>tkey-domain</VAR
d4292 1
a4292 1
Otherwise, the name of the shared key will be "<VAR
d4295 2
a4296 2
digits</VAR
>" + "<VAR
d4298 1
a4298 1
>tkey-domain</VAR
d4353 13
d4380 1
a4380 11
name server. Specifying <B
CLASS="command"
>pid-file none</B
> disables the
use of a PID file &#8212; no file will be written and any
existing one will be removed.  Note that <B
CLASS="command"
>none</B
>
is a keyword, not a file name, and therefore is not enclosed in
double quotes.</P
d4401 1
a4401 1
>Section 6.2.16.17</A
a4441 98
><DT
><B
CLASS="command"
>preferred-glue</B
></DT
><DD
><P
>&#13;If specified the listed type (A or AAAA) will be emitted before other glue
in the additional section of a query response.
The default is not to preference any type (NONE).
</P
></DD
><DT
><B
CLASS="command"
>root-delegation-only</B
></DT
><DD
><P
>&#13;Turn on enforcement of delegation-only in TLDs and root zones with an optional
exclude list.
</P
><P
>&#13;Note some TLDs are NOT delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
</P
><PRE
CLASS="programlisting"
>&#13;options {
	root-delegation-only exclude { "de"; "lv"; "us"; "museum"; };
};
</PRE
></DD
><DT
><B
CLASS="command"
>disable-algorithms</B
></DT
><DD
><P
>&#13;Disable the specified DNSSEC algorithms at and below the specified name.
Multiple <B
CLASS="command"
>disable-algorithms</B
> statements are allowed.
Only the most specific will be applied.
</P
></DD
><DT
><B
CLASS="command"
>dnssec-lookaside</B
></DT
><DD
><P
>&#13;When set <B
CLASS="command"
>dnssec-lookaside</B
> provides the
validator with an alternate method to validate DNSKEY records at the
top of a zone.  When a DNSKEY is at or below a domain specified by the
deepest <B
CLASS="command"
>dnssec-lookaside</B
>, and the normal dnssec validation
has left the key untrusted, the trust-anchor will be append to the key
name and a DLV record will be looked up to see if it can validate the
key.  If the DLV record validates a DNSKEY (similarly to the way a DS
record does) the DNSKEY RRset is deemed to be trusted.
</P
></DD
><DT
><B
CLASS="command"
>dnssec-must-be-secure</B
></DT
><DD
><P
>&#13;Specify heirachies which must / may not be secure (signed and validated).
If <KBD
CLASS="userinput"
>yes</KBD
> then named will only accept answers if they
are secure.
If <KBD
CLASS="userinput"
>no</KBD
> then normal dnssec validation applies
allowing for insecure answers to be accepted.
The specified domain must be under a <B
CLASS="command"
>trusted-key</B
> or
<B
CLASS="command"
>dnssec-lookaside</B
> must be active.
</P
></DD
d4450 1
a4450 1
>6.2.16.1. Boolean Options</A
d4464 1
a4464 1
>If <KBD
d4466 3
a4468 1
>yes</KBD
d4474 1
a4474 1
authoritative. The default is <KBD
d4476 3
a4478 1
>no</KBD
d4480 1
a4480 1
a change from <ACRONYM
d4482 1
a4482 1
>BIND</ACRONYM
d4484 1
a4484 1
may need to set it to <KBD
d4486 3
a4488 1
>yes</KBD
d4498 1
a4498 1
>This option was used in <ACRONYM
d4500 1
a4500 1
>BIND</ACRONYM
d4502 1
a4502 1
for memory leaks on exit. <ACRONYM
d4504 1
a4504 1
>BIND</ACRONYM
d4515 1
a4515 1
>If <KBD
d4517 3
a4519 1
>yes</KBD
d4530 1
a4530 1
zone maintenance traffic. The default is <KBD
d4532 3
a4534 1
>no</KBD
d4556 3
a4558 11
request to all the slaves (default). This should trigger the zone serial
number check in the slave (providing it supports NOTIFY) allowing the slave
to verify the zone while the connection is active.
The set of servers to which NOTIFY is sent can be controlled by
<B
CLASS="command"
>notify</B
> and <B
CLASS="command"
>also-notify</B
>.</P
d4570 1
a4570 1
<KBD
d4572 3
a4574 1
>notify</KBD
d4576 1
a4576 1
<KBD
d4578 3
a4580 1
>notify-passive</KBD
d4582 1
a4582 1
suppresses the normal refresh queries, <KBD
d4584 3
a4586 1
>refresh</KBD
d4588 1
a4588 1
which suppresses normal refresh processing and sends refresh queries 
d4592 2
a4593 2
> expires, and
<KBD
d4595 3
a4597 1
>passive</KBD
d4600 6
a4605 173
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN2390"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
><TR
><TD
><P
>dialup mode</P
></TD
><TD
><P
>normal refresh</P
></TD
><TD
><P
>heart-beat refresh</P
></TD
><TD
><P
>heart-beat notify</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>no</B
> (default)</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>yes</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>yes</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>notify</B
></P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>refresh</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>passive</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>notify-passive</B
></P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>no</P
></TD
><TD
><P
>yes</P
></TD
></TR
></TBODY
></TABLE
><P
></P
></DIV
><P
>Note that normal NOTIFY processing is not affected by
<B
CLASS="command"
>dialup</B
>.</P
></DD
><DT
><B
CLASS="command"
>fake-iquery</B
></DT
d4608 1
a4608 1
>In <ACRONYM
d4610 4
a4613 4
>BIND</ACRONYM
> 8, this option
enabled simulating the obsolete DNS query type
IQUERY. <ACRONYM
d4615 1
a4615 1
>BIND</ACRONYM
d4627 1
a4627 1
In BIND 8, <KBD
d4629 3
a4631 1
>fetch-glue yes</KBD
a4640 18
>flush-zones-on-shutdown</B
></DT
><DD
><P
>When the nameserver exits due receiving SIGTERM,
flush / do not flush any pending zone writes.  The default is
<B
CLASS="command"
>flush-zones-on-shutdown</B
> <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
d4646 1
a4646 1
in <ACRONYM
d4648 2
a4649 2
>BIND</ACRONYM
> 8, and is ignored by <ACRONYM
d4651 1
a4651 1
>BIND</ACRONYM
d4658 1
a4658 1
> <KBD
d4660 3
a4662 1
>yes</KBD
d4667 1
a4667 1
> <KBD
d4669 3
a4671 1
>yes</KBD
d4676 1
a4676 1
> <KBD
d4678 3
a4680 1
>no</KBD
d4692 1
a4692 1
statistics for every host that the name server interacts with.
d4710 1
a4710 1
 It was used in <ACRONYM
d4712 1
a4712 1
>BIND</ACRONYM
d4714 1
a4714 1
kept for Incremental Zone Transfer. <ACRONYM
d4716 1
a4716 1
>BIND</ACRONYM
d4722 1
a4722 1
> <KBD
d4724 3
a4726 1
>no</KBD
d4737 1
a4737 1
>If <KBD
d4739 3
a4741 1
>yes</KBD
d4746 1
a4746 1
The default is <KBD
d4748 3
a4750 1
>no</KBD
d4761 1
a4761 1
>This option was used in <ACRONYM
d4763 1
a4763 1
>BIND</ACRONYM
d4765 2
a4766 2
a domain name to have multiple CNAME records in violation of the
DNS standards.  <ACRONYM
d4768 1
a4768 1
>BIND</ACRONYM
d4780 1
a4780 1
>If <KBD
d4782 3
a4784 1
>yes</KBD
d4788 2
a4789 2
HREF="Bv9ARM.ch04.html#notify"
>Section 4.1</A
d4799 1
a4799 1
>&#13;If <KBD
d4801 3
a4803 1
>explicit</KBD
d4809 1
a4809 1
If <KBD
d4811 3
a4813 1
>no</KBD
d4839 1
a4839 1
>If <KBD
d4841 3
a4843 1
>yes</KBD
d4848 1
a4848 1
referral response. The default is <KBD
d4850 3
a4852 1
>yes</KBD
d4856 1
a4856 1
>recursion no</B
d4875 1
a4875 1
>Setting this to <KBD
d4877 3
a4879 1
>yes</KBD
d4882 1
a4882 1
answers. The default is <KBD
d4884 3
a4886 1
>no</KBD
d4895 1
a4895 1
>Not yet implemented in <ACRONYM
d4897 1
a4897 1
>BIND</ACRONYM
d4916 1
a4916 1
<ACRONYM
d4918 1
a4918 1
>BIND</ACRONYM
d4929 1
a4929 1
>If <KBD
d4931 5
a4935 11
>yes</KBD
>, the server will collect
statistical data on all zones (unless specifically turned off
on a per-zone basis by specifying <B
CLASS="command"
>zone-statistics no</B
>
in the <B
CLASS="command"
>zone</B
> statement).  These statistics may be accessed
d4945 1
a4945 1
>Section 6.2.16.17</A
d4970 1
a4970 1
>Section 6.2.18</A
d4974 1
a4974 1
>Section 4.3</A
d4992 1
a4992 1
>Section 6.2.18</A
d5010 1
a5010 1
>Section 6.2.18</A
d5021 1
a5021 1
>This option was used in <ACRONYM
d5023 1
a5023 1
>BIND</ACRONYM
d5031 1
a5031 1
on an NT or DOS machine. In <ACRONYM
d5033 1
a5033 1
>BIND</ACRONYM
d5059 1
a5059 1
>&#13;When both of these options are set to <KBD
d5061 3
a5063 1
>yes</KBD
d5078 1
a5078 1
>&#13;For example, if a query asks for an MX record for host <VAR
d5080 1
a5080 1
>foo.example.com</VAR
d5082 1
a5082 1
and the record found is "<VAR
d5084 1
a5084 1
>MX 10 mail.example.net</VAR
d5086 1
a5086 1
records (A and AAAA) for <VAR
d5088 1
a5088 1
>mail.example.net</VAR
d5090 1
a5090 2
if known, even though they are not in the example.com zone.
Setting these options to <B
d5093 1
a5093 2
> disables this behavior and makes
the server only search for additional data in the zone it answers from.
d5104 1
a5104 1
>recursion no</B
d5140 1
a5140 1
>If <KBD
d5142 3
a5144 1
>yes</KBD
a5155 79
><DT
><B
CLASS="command"
>ixfr-from-differences</B
></DT
><DD
><P
>&#13;When 'yes' and the server loads a new version of a master
zone from its zone file or receives a new version of a slave
file by a non-incremental zone transfer, it will compare
the new version to the previous one and calculate a set
of differences.  The differences are then logged in the
zone's journal file such that the changes can be transmitted
to downstream slaves as an incremental zone transfer.
</P
><P
>&#13;By allowing incremental zone transfers to be used for
non-dynamic zones, this option saves bandwidth at the
expense of increased CPU and memory consumption at the master.
In particular, if the new version of a zone is completely
different from the previous one, the set of differences
will be of a size comparable to the combined size of the
old and new zone version, and the server will need to
temporarily allocate memory to hold this complete
difference set.
</P
></DD
><DT
><B
CLASS="command"
>multi-master</B
></DT
><DD
><P
>&#13;This should be set when you have multiple masters for a zone and the
addresses refer to different machines.  If 'yes' named will not log
when the serial number on the master is less than what named currently
has.  The default is <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>dnssec-enable</B
></DT
><DD
><P
>&#13;Enable DNSSEC support in named.  Unless set to <KBD
CLASS="userinput"
>yes</KBD
>
named behaves as if it does not support DNSSEC.
The default is <KBD
CLASS="userinput"
>no</KBD
>.
</P
></DD
><DT
><B
CLASS="command"
>querylog</B
></DT
><DD
><P
>&#13;Specify whether query logging should be started when named start.
If <B
CLASS="command"
>querylog</B
> is not specified then the query logging
is determined by the presence of the logging category <B
CLASS="command"
>queries</B
>.
</P
></DD
d5164 2
a5165 2
NAME="AEN2669"
>6.2.16.2. Forwarding</A
d5170 1
a5170 1
name servers. It can also be used to allow queries by servers that
d5188 1
a5188 1
forwarders list is not empty. A value of <VAR
d5190 1
a5190 1
>first</VAR
d5194 1
a5194 1
the answer itself. If <VAR
d5196 1
a5196 1
>only</VAR
d5224 1
a5224 1
>Section 6.2.23</A
d5232 2
a5233 2
NAME="AEN2688"
>6.2.16.3. Dual-stack Servers</A
d5236 6
a5241 46
>Dual-stack servers are used as servers of last resort to work around
problems in reachability due the lack of support for either IPv4 or IPv6
on the host machine.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>dual-stack-servers</B
></DT
><DD
><P
>Specifies host names / addresses of machines with access to
both IPv4 and IPv6 transports. If a hostname is used the server must be able
to resolve the name using only the transport it has.  If the machine is dual
stacked then the <B
CLASS="command"
>dual-stack-servers</B
> have no effect unless
access to a transport has been disabled on the command line
(e.g. <B
CLASS="command"
>named -4</B
>).</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="access_control"
>6.2.16.4. Access Control</A
></H3
><P
>Access to the server can be restricted based on the IP address
of the requesting system. See <A
HREF="Bv9ARM.ch06.html#address_match_lists"
>Section 6.1.1</A
> for
details on how to specify IP address lists.</P
d5255 1
a5255 2
notify this server, a slave, of zone changes in addition
to the zone masters.
d5279 1
a5279 1
ask ordinary DNS questions. <B
d5310 1
a5310 1
>allow-update-forwarding</B
d5314 5
a5318 11
>Specifies which hosts are allowed to
submit Dynamic DNS updates to slave zones to be forwarded to the
master.  The default is <KBD
CLASS="userinput"
>{ none; }</KBD
>, which 
means that no update forwarding will be performed.  To enable
update forwarding, specify
<KBD
CLASS="userinput"
>allow-update-forwarding { any; };</KBD
a5319 31
Specifying values other than <KBD
CLASS="userinput"
>{ none; }</KBD
> or
<KBD
CLASS="userinput"
>{ any; }</KBD
> is usually counterproductive, since
the responsibility for update access control should rest with the 
master server, not the slaves.</P
><P
>Note that enabling the update forwarding feature on a slave server
may expose master servers relying on insecure IP address based
access control to attacks; see <A
HREF="Bv9ARM.ch07.html#dynamic_update_security"
>Section 7.3</A
>
for more details.</P
></DD
><DT
><B
CLASS="command"
>allow-v6-synthesis</B
></DT
><DD
><P
>This option was introduced for the smooth transition from AAAA
to A6 and from "nibble labels" to binary labels.
However, since both A6 and binary labels were then deprecated,
this option was also deprecated.
It is now ignored with some warning messages.
d5353 1
a5353 1
from these addresses will not be responded to. The default is <KBD
d5355 3
a5357 1
>none</KBD
d5368 2
a5369 2
NAME="AEN2755"
>6.2.16.5. Interfaces</A
d5380 1
a5380 1
an optional port, and an <VAR
d5382 1
a5382 1
>address_match_list</VAR
d5398 1
a5398 1
>will enable the name server on port 53 for the IP address
d5412 2
a5413 2
specify the interfaces and the ports on which the server will listen
for incoming queries sent using IPv6.</P
d5415 4
a5418 5
>When <PRE
CLASS="programlisting"
>{ any; }</PRE
> is specified
as the <VAR
d5420 3
a5422 3
>address_match_list</VAR
> for the
<B
d5425 9
a5433 11
> option,
the server does not bind a separate socket to each IPv6 interface
address as it does for IPv4 if the operating system has enough API
support for IPv6 (specifically if it conforms to RFC 3493 and RFC 3542).
Instead, it listens on the IPv6 wildcard address.
If the system only has incomplete API support for IPv6, however,
the behavior is the same as that for IPv4.</P
><P
>A list of particular IPv6 addresses can also be specified, in which case
the server listens on a separate socket for each specified address,
regardless of whether the desired API is supported by the system.</P
d5438 2
a5439 2
> options can be used.
For example,</P
d5442 2
a5443 2
>listen-on-v6 { any; };
listen-on-v6 port 1234 { !2001:db8::/32; any; };
a5445 5
>will enable the name server on port 53 for any IPv6 addresses
(with a single wildcard socket),
and on port 1234 of IPv6 addresses that is not in the prefix
2001:db8::/32 (with separate sockets for each matched address.)</P
><P
d5455 1
a5455 1
> option is specified,
d5463 2
a5464 2
NAME="AEN2782"
>6.2.16.6. Query Address</A
d5468 1
a5468 1
query other name servers. <B
d5477 1
a5477 1
If <B
d5495 1
a5495 9
a random unprivileged port will be used, <B
CLASS="command"
>avoid-v4-udp-ports</B
>
and <B
CLASS="command"
>avoid-v6-udp-ports</B
> can be used to prevent named
from selecting certain ports. The defaults are</P
a5516 17
><DIV
CLASS="note"
><BLOCKQUOTE
CLASS="note"
><P
><B
>Note: </B
>See also <B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>notify-source</B
>.</P
></BLOCKQUOTE
></DIV
d5524 1
a5524 1
>6.2.16.7. Zone Transfers</A
d5527 1
a5527 1
><ACRONYM
d5529 1
a5529 1
>BIND</ACRONYM
d5583 1
a5583 1
(2 hours).  The maximum value is 28 days (40320 minutes).</P
d5594 1
a5594 1
(1 hour).  The maximum value is 28 days (40320 minutes).</P
d5605 1
a5605 1
(2 hours).  The maximum value is 28 days (40320 minutes).</P
d5616 1
a5616 1
hour).  The maximum value is 28 days (40320 minutes).</P
d5696 1
a5696 1
such as <ACRONYM
d5698 2
a5699 2
>BIND</ACRONYM
> 9, <ACRONYM
d5701 1
a5701 1
>BIND</ACRONYM
d5703 1
a5703 1
versions of <ACRONYM
d5705 1
a5705 1
>BIND</ACRONYM
d5729 1
a5729 1
that can be running concurrently. The default value is <VAR
d5731 1
a5731 1
>10</VAR
d5748 1
a5748 1
of the limit will be refused. The default value is <VAR
d5750 1
a5750 1
>10</VAR
d5761 2
a5762 2
that can be concurrently transferring from a given remote name server.
The default value is <VAR
d5764 1
a5764 1
>2</VAR
d5770 1
a5770 1
the load on the remote name server. <B
a5838 51
>alt-transfer-source</B
></DT
><DD
><P
>An alternate transfer source if the one listed in
<B
CLASS="command"
>transfer-source</B
> fails and
<B
CLASS="command"
>use-alt-transfer-source</B
> is set.</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source-v6</B
></DT
><DD
><P
>An alternate transfer source if the one listed in
<B
CLASS="command"
>transfer-source-v6</B
> fails and
<B
CLASS="command"
>use-alt-transfer-source</B
> is set.</P
></DD
><DT
><B
CLASS="command"
>use-alt-transfer-source</B
></DT
><DD
><P
>Use the alternate transfer sources or not.  If views are
specified this defaults to <B
CLASS="command"
>no</B
> otherwise it defaults to
<B
CLASS="command"
>yes</B
> (for BIND 8 compatibility).</P
></DD
><DT
><B
CLASS="command"
d5895 2
a5896 26
NAME="AEN2948"
>6.2.16.8. Bad UDP Port Lists</A
></H3
><P
>&#13;<B
CLASS="command"
>avoid-v4-udp-ports</B
> and <B
CLASS="command"
>avoid-v6-udp-ports</B
>
specify a list of IPv4 and IPv6 UDP ports that will not be used as system
assigned source ports for UDP sockets.  These lists prevent named
from choosing as its random source port a port that is blocked by
your firewall.  If a query went out with such a source port, the
answer would not get by the firewall and the name server would have
to query again.
</P
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="AEN2953"
>6.2.16.9. Operating System Resource Limits</A
d5943 1
a5943 1
is <VAR
d5945 1
a5945 1
>default</VAR
d5956 1
a5956 1
may use. The default is <VAR
d5958 1
a5958 1
>default</VAR
d5988 1
a5988 1
may have open concurrently. The default is <VAR
d5990 1
a5990 1
>unlimited</VAR
d6002 1
a6002 1
may use. The default is <VAR
d6004 1
a6004 1
>default</VAR
d6015 2
a6016 2
NAME="AEN2990"
>6.2.16.10. Server  Resource Limits</A
d6035 1
a6035 26
and ignored for BIND 8 compatibility.  The option
<B
CLASS="command"
>max-journal-size</B
> performs a similar
function in BIND 8.
</P
></DD
><DT
><B
CLASS="command"
>max-journal-size</B
></DT
><DD
><P
>Sets a maximum size for each journal file
(<A
HREF="Bv9ARM.ch04.html#journal"
>Section 4.2.1</A
>).  When the journal file approaches
the specified size, some of the oldest transactions in the journal
will be automatically removed.  The default is
<VAR
CLASS="literal"
>unlimited</VAR
>.</P
d6046 1
a6046 1
<VAR
d6048 1
a6048 1
>1000</VAR
d6067 1
a6067 1
The default is <VAR
d6069 1
a6069 1
>100</VAR
d6084 1
a6084 1
view.  The default is <VAR
d6086 1
a6086 1
>unlimited</VAR
a6090 14
><DT
><B
CLASS="command"
>tcp-listen-queue</B
></DT
><DD
><P
>The listen queue depth.  The default and minimum is 3.
If the kernel supports the accept filter "dataready" this also controls how
many TCP connections that will be queued in kernel space waiting for
some data before being passed to accept.  Values less than 3 will be
silently raised.
</P
></DD
d6099 2
a6100 2
NAME="AEN3031"
>6.2.16.11. Periodic Task Intervals</A
d6119 1
a6119 1
The default is 60 minutes.  The maximum value is 28 days (40320 minutes).
d6135 1
a6135 2
to 1 day (1440 minutes).  The maximum value is 28 days (40320 minutes).
If set to 0, no zone maintenance for these zones will occur.</P
d6149 3
a6151 5
is 60 minutes. The maximum value is 28 days (40320 minutes).
If set to 0, interface scanning will only occur when
the configuration file is  loaded. After the scan, the server will
begin listening for queries on any newly discovered
interfaces (provided they are allowed by the
d6155 2
a6156 2
> configuration), and will
stop listening on interfaces that have gone away.</P
d6165 1
a6165 1
>Name server statistics will be logged
d6170 1
a6170 2
60. The maximum value is 28 days (40320 minutes).
If set to 0, no statistics will be logged.</P
d6178 1
a6178 1
>Not yet implemented in <ACRONYM
d6180 1
a6180 1
>BIND</ACRONYM
d6194 1
a6194 1
>6.2.16.12. Topology</A
d6197 2
a6198 2
>All other things being equal, when the server chooses a name server
to query from a list of name servers, it prefers the one that is
d6244 1
a6244 1
is not implemented in <ACRONYM
d6246 1
a6246 1
>BIND</ACRONYM
d6258 1
a6258 1
>6.2.16.13. The <B
d6274 1
a6274 1
>Section 6.2.16.14</A
d6281 1
a6281 1
configuring the name servers, not all the clients.</P
d6297 1
a6297 1
>Section 6.2.16.12</A
d6365 1
a6365 1
to the behavior of the address sort in <ACRONYM
d6367 1
a6367 1
>BIND</ACRONYM
d6387 1
a6387 1
>6.2.16.14. RRset Ordering</A
d6403 1
a6403 1
>Section 6.2.16.13</A
d6415 1
a6415 1
> class <VAR
d6417 3
a6419 1
>class_name</VAR
d6423 1
a6423 1
> type <VAR
d6425 3
a6427 1
>type_name</VAR
d6431 1
a6431 1
> name <VAR
d6433 3
a6435 1
>"domain_name"</VAR
d6438 1
a6438 1
      order <VAR
d6440 3
a6442 1
>ordering</VAR
d6465 3
a6469 3
><A
NAME="AEN3119"
></A
d6477 3
d6487 3
d6497 3
d6507 3
d6516 3
d6526 3
d6550 1
a6550 1
have "<VAR
d6552 1
a6552 1
>host.example.com</VAR
d6572 1
a6572 1
is not yet fully implemented in <ACRONYM
d6574 1
a6574 1
>BIND</ACRONYM
d6576 90
a6665 2
BIND 9 currently does not support "fixed" ordering.
</P
d6675 1
a6675 1
>6.2.16.15. Tuning</A
d6698 1
a6698 1
Default is <VAR
d6700 1
a6700 1
>600</VAR
d6702 1
a6702 1
<VAR
d6704 1
a6704 1
>1800</VAR
d6724 1
a6724 1
> is <VAR
d6726 1
a6726 1
>10800</VAR
d6757 1
a6757 1
is <KBD
d6759 3
a6761 1
>2</KBD
d6770 1
a6770 1
>Not implemented in <ACRONYM
d6772 1
a6772 1
>BIND</ACRONYM
d6788 1
a6788 1
>Section 4.2</A
d6790 1
a6790 1
will expire. The default is <VAR
d6792 2
a6793 3
>30</VAR
> days.
The maximum value is 10 years (3660 days). The signature
d6821 2
a6822 2
refresh and retry time either per-zone, per-view, or globally.
These options are valid for slave and stub zones,
a6825 18
><DT
><B
CLASS="command"
>edns-udp-size</B
></DT
><DD
><P
>&#13;<B
CLASS="command"
>edns-udp-size</B
> sets the advertised EDNS UDP buffer
size.  Valid values are 512 to 4096 (values outside this range will be
silently adjusted).  The default value is 4096.  The usual reason for
setting edns-udp-size to a non default value it to get UDP answers to
pass through broken firewalls that block fragmented packets and/or
block UDP packets that are greater than 512 bytes.
</P
></DD
d6834 2
a6835 2
NAME="builtin"
>6.2.16.16. Built-in server information zones</A
d6838 12
a6849 7
>The server provides some helpful diagnostic information
through a number of built-in zones under the
pseudo-top-level-domain <VAR
CLASS="literal"
>bind</VAR
> in the
<B
d6851 4
a6854 156
>CHAOS</B
> class.  These zones are part of a
built-in view (see <A
HREF="Bv9ARM.ch06.html#view_statement_grammar"
>Section 6.2.21</A
>) of class
<B
CLASS="command"
>CHAOS</B
> which is separate from the default view of
class <B
CLASS="command"
>IN</B
>; therefore, any global server options
such as <B
CLASS="command"
>allow-query</B
> do not apply the these zones.
If you feel the need to disable these zones, use the options
below, or hide the built-in <B
CLASS="command"
>CHAOS</B
> view by
defining an explicit view of class <B
CLASS="command"
>CHAOS</B
>
that matches all clients.</P
><P
></P
><DIV
CLASS="variablelist"
><DL
><DT
><B
CLASS="command"
>version</B
></DT
><DD
><P
>The version the server should report
via a query of the name <VAR
CLASS="literal"
>version.bind</VAR
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
The default is the real version number of this server.
Specifying <B
CLASS="command"
>version none</B
>
disables processing of the queries.</P
></DD
><DT
><B
CLASS="command"
>hostname</B
></DT
><DD
><P
>The hostname the server should report via a query of
the name <TT
CLASS="filename"
>hostname.bind</TT
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
This defaults to the hostname of the machine hosting the name server as
found by gethostname().  The primary purpose of such queries is to
identify which of a group of anycast servers is actually
answering your queries.  Specifying <B
CLASS="command"
>hostname none;</B
>
disables processing of the queries.</P
></DD
><DT
><B
CLASS="command"
>server-id</B
></DT
><DD
><P
>The ID of the server should report via a query of
the name <TT
CLASS="filename"
>ID.SERVER</TT
>
with type <B
CLASS="command"
>TXT</B
>, class <B
CLASS="command"
>CHAOS</B
>.
The primary purpose of such queries is to
identify which of a group of anycast servers is actually
answering your queries.  Specifying <B
CLASS="command"
>server-id none;</B
>
disables processing of the queries.
Specifying <B
CLASS="command"
>server-id hostname;</B
> will cause named to
use the hostname as found by gethostname().
The default <B
CLASS="command"
>server-id</B
> is <B
CLASS="command"
>none</B
>.
</P
></DD
></DL
></DIV
></DIV
><DIV
CLASS="sect3"
><H3
CLASS="sect3"
><A
NAME="statsfile"
>6.2.16.17. The Statistics File</A
></H3
><P
>The statistics file generated by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 9
is similar, but not identical, to that
generated by <ACRONYM
CLASS="acronym"
>BIND</ACRONYM
> 8.
</P
><P
>The statistics dump begins with the line <B
CLASS="command"
>+++ Statistics Dump
+++ (973798949)</B
>, where the number in parentheses is a standard
Unix-style timestamp, measured as seconds since January 1, 1970.  Following
d6869 3
a6873 3
><A
NAME="AEN3263"
></A
d6881 3
d6891 3
d6897 2
a6898 2
is defined as query which returns a NOERROR response with at least
one answer RR.</P
d6903 3
d6913 3
d6923 3
d6933 3
d6943 3
d6953 3
d6963 3
d6969 1
a6969 1
>failure</B
d6973 3
d6977 2
a6978 2
>The number of queries which resulted in a
failure response other than those above.</P
d6983 3
d6989 1
a6989 1
>recursion</B
d6993 3
d6997 2
a6998 2
>The number of queries which caused the server
to perform recursion in order to find the final answer.</P
a7005 28
><P
>&#13;Each query received by the server will cause exactly one of
<B
CLASS="command"
>success</B
>,
<B
CLASS="command"
>referral</B
>,
<B
CLASS="command"
>nxrrset</B
>,
<B
CLASS="command"
>nxdomain</B
>, or
<B
CLASS="command"
>failure</B
>
to be incremented, and may additionally cause the
<B
CLASS="command"
>recursion</B
> counter to be incremented.
</P
d7014 1
a7014 1
>6.2.17. <B
d7021 1
a7021 1
>server <VAR
d7023 3
a7025 1
>ip_addr</VAR
d7029 1
a7029 1
> bogus <VAR
d7031 3
a7033 1
>yes_or_no</VAR
d7038 1
a7038 1
> provide-ixfr <VAR
d7040 3
a7042 1
>yes_or_no</VAR
d7047 1
a7047 1
> request-ixfr <VAR
d7049 3
a7051 1
>yes_or_no</VAR
d7056 1
a7056 1
> edns <VAR
d7058 3
a7060 1
>yes_or_no</VAR
d7065 1
a7065 1
> transfers <VAR
d7067 3
a7069 1
>number</VAR
d7074 1
a7074 1
> transfer-format <VAR
d7076 3
a7078 1
>( one-answer | many-answers )</VAR
d7083 1
a7083 1
> keys <VAR
d7085 1
d7092 2
a7093 1
>] }</VAR
a7095 32
    [<SPAN
CLASS="optional"
> transfer-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> transfer-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
d7105 1
a7105 1
>6.2.18. <B
d7115 1
a7115 1
to be associated with a remote name server.</P
d7169 1
a7169 1
to the remote server will be non-incremental. If not set, the value
d7229 1
a7229 1
more efficient, but is only known to be understood by <ACRONYM
d7231 2
a7232 2
>BIND</ACRONYM
> 9, <ACRONYM
d7234 1
a7234 1
>BIND</ACRONYM
d7236 1
a7236 1
8.x, and patched versions of <ACRONYM
d7238 1
a7238 1
>BIND</ACRONYM
d7273 1
a7273 2
> clause identifies a
<B
d7276 6
a7281 1
> defined by the <B
d7284 6
a7289 7
> statement,
to be used for transaction security (TSIG, <A
HREF="Bv9ARM.ch04.html#tsig"
>Section 4.5</A
>)
when talking to the remote server. 
When a request is sent to the remote server, a request signature
a7299 33
><P
>The <B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>transfer-source-v6</B
> clauses specify the IPv4 and IPv6 source
address to be used for zone transfer with the remote server, respectively.
For an IPv4 remote server, only <B
CLASS="command"
>transfer-source</B
> can
be specified.
Similarly, for an IPv6 remote server, only
<B
CLASS="command"
>transfer-source-v6</B
> can be specified.
Form more details, see the description of
<B
CLASS="command"
>transfer-source</B
> and
<B
CLASS="command"
>transfer-source-v6</B
> in
<A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>.</P
d7306 2
a7307 2
NAME="AEN3402"
>6.2.19. <B
d7315 1
a7315 1
    <VAR
d7317 4
a7320 2
>string</VAR
> <VAR
d7322 4
a7325 2
>number</VAR
> <VAR
d7327 4
a7330 2
>number</VAR
> <VAR
d7332 4
a7335 2
>number</VAR
> <VAR
d7337 3
a7339 1
>string</VAR
d7343 1
a7343 1
> <VAR
d7345 4
a7348 2
>string</VAR
> <VAR
d7350 4
a7353 2
>number</VAR
> <VAR
d7355 4
a7358 2
>number</VAR
> <VAR
d7360 4
a7363 2
>number</VAR
> <VAR
d7365 3
a7367 1
>string</VAR
d7381 2
a7382 2
NAME="AEN3418"
>6.2.20. <B
d7395 1
a7395 1
>Section 4.8</A
d7398 1
a7398 1
because it is the  DNS root zone or because its parent zone is unsigned.
d7416 2
a7417 2
NAME="view_statement_grammar"
>6.2.21. <B
d7424 1
a7424 1
>view <VAR
d7426 4
a7429 3
>view_name</VAR
> 
      [<SPAN
d7431 1
a7431 1
><VAR
d7433 3
a7435 1
>class</VAR
d7438 1
a7438 1
      match-clients { <VAR
d7440 3
a7442 1
>address_match_list</VAR
d7444 1
a7444 1
      match-destinations { <VAR
d7446 3
a7448 1
>address_match_list</VAR
d7450 1
a7450 1
      match-recursive-only <VAR
d7452 3
a7454 1
>yes_or_no</VAR
d7458 1
a7458 1
> <VAR
d7460 3
a7462 1
>view_option</VAR
d7467 10
a7476 1
> <VAR
d7478 3
a7480 1
>zone_statement</VAR
d7491 2
a7492 2
NAME="AEN3440"
>6.2.22. <B
d7502 1
a7502 1
of <ACRONYM
d7504 1
a7504 1
>BIND</ACRONYM
d7515 1
a7515 1
<VAR
d7517 1
a7517 1
>address_match_list</VAR
d7523 1
a7523 1
the <VAR
d7525 1
a7525 1
>address_match_list</VAR
d7538 2
a7539 2
default to matching all addresses.  In addition to checking IP addresses
<B
d7541 3
a7543 15
>match-clients</B
> and <B
CLASS="command"
>match-destinations</B
>
can also take <B
CLASS="command"
>keys</B
> which provide an mechanism for the
client to select the view.  A view can also be specified
as <B
CLASS="command"
>match-recursive-only</B
>, which means that only recursive
requests from matching clients will match that view.
d7547 1
a7547 1
> statements is significant &#8212;
d7598 1
a7598 1
in class IN. Any <B
d7603 1
a7603 5
this default view, and the <B
CLASS="command"
>options</B
> statement will
apply to the default view. If any explicit <B
d7606 2
a7607 2
>
statements are present, all <B
d7610 2
a7611 2
> statements must
occur inside <B
d7624 1
a7624 1
      // This should match our internal networks.
d7626 1
a7626 2

      // Provide recursive service to internal clients only.
d7628 2
a7629 3

      // Provide a complete view of the example.com zone
      // including addresses of internal hosts.
a7634 1

a7635 1
      // Match all clients not matched by the previous view.
d7637 1
a7637 2

      // Refuse recursive service to external clients.
d7639 2
a7640 3

      // Provide a restricted view of the example.com zone
      // containing only publicly accessible hosts.
d7654 1
a7654 1
>6.2.23. <B
d7662 1
a7662 1
>zone <VAR
d7664 3
a7666 1
>zone_name</VAR
d7669 1
a7669 1
><VAR
d7671 3
a7673 1
>class</VAR
d7678 1
a7678 1
    type ( master | slave | hint | stub | forward | delegation-only ) ;
d7681 1
a7681 1
> allow-notify { <VAR
d7683 3
a7685 1
>address_match_list</VAR
d7690 1
a7690 1
> allow-query { <VAR
d7692 3
a7694 1
>address_match_list</VAR
d7699 1
a7699 1
> allow-transfer { <VAR
d7701 3
a7703 1
>address_match_list</VAR
d7708 1
a7708 1
> allow-update { <VAR
d7710 3
a7712 1
>address_match_list</VAR
d7717 1
a7717 1
> update-policy { <VAR
d7719 3
a7721 1
>update_policy_rule</VAR
d7729 1
a7729 1
> allow-update-forwarding { <VAR
d7731 3
a7733 1
>address_match_list</VAR
d7738 1
a7738 1
> also-notify { <VAR
d7740 3
a7742 1
>ip_addr</VAR
d7745 1
a7745 1
>port <VAR
d7747 3
a7749 1
>ip_port</VAR
d7753 1
a7753 1
> <VAR
d7755 3
a7757 1
>ip_addr</VAR
d7760 1
a7760 1
>port <VAR
d7762 3
a7764 1
>ip_port</VAR
d7771 1
a7771 1
> check-names (<CODE
d7773 2
a7774 2
>warn</CODE
>|<CODE
d7776 2
a7777 2
>fail</CODE
>|<CODE
d7779 1
a7779 1
>ignore</CODE
d7784 1
a7784 1
> dialup <VAR
d7786 3
a7788 1
>dialup_option</VAR
d7793 1
a7793 1
> delegation-only <VAR
d7795 3
a7797 8
>yes_or_no</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> file <VAR
CLASS="replaceable"
>string</VAR
d7802 1
a7802 1
> forward (<CODE
d7804 2
a7805 2
>only</CODE
>|<CODE
d7807 1
a7807 1
>first</CODE
d7812 1
a7812 1
> forwarders { <VAR
d7814 3
a7816 1
>ip_addr</VAR
d7819 1
a7819 1
>port <VAR
d7821 3
a7823 1
>ip_port</VAR
d7827 1
a7827 1
> <VAR
d7829 3
a7831 1
>ip_addr</VAR
d7834 1
a7834 1
>port <VAR
d7836 3
a7838 1
>ip_port</VAR
d7845 1
a7845 1
> ixfr-base <VAR
d7847 3
a7849 1
>string</VAR
d7854 1
a7854 1
> ixfr-tmp-file <VAR
d7856 3
a7858 1
>string</VAR
d7863 1
a7863 1
> maintain-ixfr-base <VAR
d7865 3
a7867 1
>yes_or_no</VAR
d7874 1
a7874 1
>port <VAR
d7876 3
a7878 1
>ip_port</VAR
d7880 1
a7880 1
>] { ( <VAR
d7882 3
a7884 4
>masters_list</VAR
> | <VAR
CLASS="replaceable"
>ip_addr</VAR
d7887 1
a7887 1
>port <VAR
d7889 3
a7891 1
>ip_port</VAR
d7895 1
a7895 1
>key <VAR
d7897 3
a7899 1
>key</VAR
d7901 1
a7901 1
>] ) ; [<SPAN
d7908 1
a7908 1
> max-ixfr-log-size <VAR
d7910 3
a7912 1
>number</VAR
d7917 1
a7917 1
> max-transfer-idle-in <VAR
d7919 3
a7921 1
>number</VAR
d7926 1
a7926 1
> max-transfer-idle-out <VAR
d7928 3
a7930 1
>number</VAR
d7935 1
a7935 1
> max-transfer-time-in <VAR
d7937 3
a7939 1
>number</VAR
d7944 1
a7944 1
> max-transfer-time-out <VAR
d7946 3
a7948 1
>number</VAR
d7953 1
a7953 1
> notify <VAR
d7955 4
a7958 2
>yes_or_no</VAR
> | <VAR
d7960 3
a7962 1
>explicit</VAR
d7967 1
a7967 1
> pubkey <VAR
d7969 4
a7972 2
>number</VAR
> <VAR
d7974 4
a7977 2
>number</VAR
> <VAR
d7979 4
a7982 2
>number</VAR
> <VAR
d7984 3
a7986 1
>string</VAR
d7991 1
a7991 1
> transfer-source (<VAR
d7993 4
a7996 2
>ip4_addr</VAR
> | <CODE
d7998 1
a7998 1
>*</CODE
d8001 1
a8001 1
>port <VAR
d8003 3
a8005 1
>ip_port</VAR
d8011 1
a8011 1
> transfer-source-v6 (<VAR
d8013 4
a8016 2
>ip6_addr</VAR
> | <CODE
d8018 1
a8018 1
>*</CODE
d8021 1
a8021 1
>port <VAR
d8023 3
a8025 1
>ip_port</VAR
d8031 1
a8031 1
> alt-transfer-source (<VAR
d8033 4
a8036 2
>ip4_addr</VAR
> | <CODE
d8038 1
a8038 1
>*</CODE
d8041 1
a8041 1
>port <VAR
d8043 3
a8045 1
>ip_port</VAR
d8051 1
a8051 1
> alt-transfer-source-v6 (<VAR
d8053 4
a8056 2
>ip6_addr</VAR
> | <CODE
d8058 1
a8058 1
>*</CODE
d8061 1
a8061 1
>port <VAR
d8063 3
a8065 1
>ip_port</VAR
d8071 1
a8071 1
> use-alt-transfer-source <VAR
d8073 3
a8075 40
>yes_or_no</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source (<VAR
CLASS="replaceable"
>ip4_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> notify-source-v6 (<VAR
CLASS="replaceable"
>ip6_addr</VAR
> | <CODE
CLASS="constant"
>*</CODE
>) [<SPAN
CLASS="optional"
>port <VAR
CLASS="replaceable"
>ip_port</VAR
></SPAN
>] ; </SPAN
>]
    [<SPAN
CLASS="optional"
> zone-statistics <VAR
CLASS="replaceable"
>yes_or_no</VAR
d8080 1
a8080 1
> sig-validity-interval <VAR
d8082 3
a8084 1
>number</VAR
d8089 1
a8089 1
> database <VAR
d8091 3
a8093 1
>string</VAR
d8098 1
a8098 1
> min-refresh-time <VAR
d8100 3
a8102 1
>number</VAR
d8107 1
a8107 1
> max-refresh-time <VAR
d8109 3
a8111 1
>number</VAR
d8116 1
a8116 1
> min-retry-time <VAR
d8118 3
a8120 1
>number</VAR
d8125 1
a8125 1
> max-retry-time <VAR
d8127 3
a8129 8
>number</VAR
> ; </SPAN
>]
    [<SPAN
CLASS="optional"
> multi-master <VAR
CLASS="replaceable"
>yes_or_no</VAR
a8131 7
    [<SPAN
CLASS="optional"
> key-directory <VAR
CLASS="replaceable"
>path_name</VAR
>; </SPAN
>]
d8142 2
a8143 2
NAME="AEN3614"
>6.2.24. <B
d8153 2
a8154 2
NAME="AEN3617"
>6.2.24.1. Zone Types</A
d8158 3
a8162 3
><A
NAME="AEN3619"
></A
d8170 3
d8174 1
a8174 1
><VAR
d8176 1
a8176 1
>master</VAR
d8180 3
d8191 3
d8195 1
a8195 1
><VAR
d8197 1
a8197 1
>slave</VAR
d8201 3
a8210 1
Masters list elements can also be names of other masters lists.
d8222 1
a8222 1
a slave server for the zone <VAR
d8224 1
a8224 1
>example.com</VAR
d8235 1
a8235 2
behave very slowly if you put 100 000 files into
a single directory.)</P
d8240 3
d8244 1
a8244 1
><VAR
d8246 1
a8246 1
>stub</VAR
d8250 3
d8257 1
a8257 1
they are a feature specific to the <ACRONYM
d8259 1
a8259 1
>BIND</ACRONYM
d8273 1
a8273 1
In <ACRONYM
d8275 1
a8275 1
>BIND</ACRONYM
d8279 1
a8279 1
only in the master server for the parent zone. <ACRONYM
d8281 1
a8281 1
>BIND</ACRONYM
d8284 1
a8284 1
way. Therefore, if a <ACRONYM
d8286 1
a8286 1
>BIND</ACRONYM
d8297 2
a8298 2
RFC1981 addressing may be configured with stub zones for
<VAR
d8300 1
a8300 1
>10.in-addr.arpa</VAR
d8309 3
d8313 1
a8313 1
><VAR
d8315 1
a8315 1
>forward</VAR
d8319 3
d8358 1
a8358 1
servers as set globally) you need to re-specify the global forwarders.</P
d8364 3
d8368 1
a8368 1
><VAR
d8370 1
a8370 1
>hint</VAR
d8374 3
d8378 1
a8378 1
>The initial set of root name servers is
d8380 2
a8381 2
the root hints to find a root name server and get the most recent
list of root name servers. If no hint zone is specified for class
a8385 24
><TR
><TD
><P
><VAR
CLASS="varname"
>delegation-only</VAR
></P
></TD
><TD
><P
>This is used to enforce the delegation only
status of infrastructure zones (e.g. COM, NET, ORG).  Any answer that
is received without a explicit or implicit delegation in the authority
section will be treated as NXDOMAIN.  This does not apply to the zone
apex.  This SHOULD NOT be applied to leaf zones.</P
>
<P
><VAR
CLASS="varname"
>delegation-only</VAR
> has no effect on answers received
from forwarders.</P
></TD
></TR
d8397 2
a8398 2
NAME="AEN3682"
>6.2.24.2. Class</A
d8402 1
a8402 1
a class is not specified, class <VAR
d8404 2
a8405 2
>IN</VAR
> (for <VAR
d8407 1
a8407 1
>Internet</VAR
d8411 1
a8411 1
>The <VAR
d8413 1
a8413 1
>hesiod</VAR
d8418 1
a8418 1
<VAR
d8420 1
a8420 1
>HS</VAR
d8425 1
a8425 1
in the mid-1970s. Zone data for it can be specified with the <VAR
d8427 1
a8427 1
>CHAOS</VAR
d8435 2
a8436 2
NAME="AEN3692"
>6.2.24.3. Zone Options</A
d8456 1
a8456 1
>Section 6.2.16.4</A
d8472 1
a8472 1
>Section 6.2.16.4</A
d8488 1
a8488 1
>Section 6.2.16.4</A
d8500 1
a8500 7
updates from all hosts.  Note that allowing updates based
on the requestor's IP address is insecure; see
<A
HREF="Bv9ARM.ch07.html#dynamic_update_security"
>Section 7.3</A
> for details.
</P
d8512 1
a8512 1
>Section 6.2.24.4</A
d8522 36
a8557 3
>See the description of <B
CLASS="command"
>allow-update-forwarding</B
d8559 1
a8559 4
in <A
HREF="Bv9ARM.ch06.html#access_control"
>Section 6.2.16.4</A
>.</P
d8573 1
a8573 1
<VAR
d8575 1
a8575 1
>DNS NOTIFY</VAR
d8577 1
a8577 1
for this zone is made up of all the listed name servers (other than
d8601 7
a8607 3
>&#13;This option is used to restrict the character set and syntax of
certain domain names in master files and/or DNS responses received from the
network.
d8627 1
a8627 1
>The default is <KBD
d8629 3
a8631 1
>"rbt"</KBD
d8652 1
a8652 1
>Section 6.2.16.1</A
a8657 15
>delegation-only</B
></DT
><DD
><P
>The flag only applies to hint and stub zones.  If set
to <KBD
CLASS="userinput"
>yes</KBD
> then the zone will also be treated as if it
is also a delegation-only type zone.
</P
></DD
><DT
><B
CLASS="command"
d8694 1
a8694 1
>Was used in <ACRONYM
d8696 1
a8696 1
>BIND</ACRONYM
d8699 1
a8699 1
<ACRONYM
d8701 1
a8701 1
>BIND</ACRONYM
d8716 1
a8716 1
>Was an undocumented option in <ACRONYM
d8718 1
a8718 1
>BIND</ACRONYM
d8720 1
a8720 1
Ignored in <ACRONYM
d8722 1
a8722 1
>BIND</ACRONYM
d8738 1
a8738 1
>Section 6.2.16.7</A
d8754 1
a8754 1
>Section 6.2.16.7</A
d8770 1
a8770 1
>Section 6.2.16.7</A
d8786 1
a8786 1
>Section 6.2.16.7</A
d8802 1
a8802 1
>Section 6.2.16.1</A
d8812 1
a8812 1
>In <ACRONYM
d8814 1
a8814 1
>BIND</ACRONYM
d8817 1
a8817 1
zones when they are loaded from disk. <ACRONYM
d8819 1
a8819 1
>BIND</ACRONYM
d8821 1
a8821 1
on load and ignores the option.</P
d8830 1
a8830 1
>If <KBD
d8832 3
a8834 1
>yes</KBD
d8855 1
a8855 1
>Section 6.2.16.15</A
d8871 1
a8871 1
>Section 6.2.16.7</A
d8888 1
a8888 52
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>alt-transfer-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>alt-transfer-source-v6</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>alt-transfer-source-v6</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
>
</P
></DD
><DT
><B
CLASS="command"
>use-alt-transfer-source</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>use-alt-transfer-source</B
> in <A
HREF="Bv9ARM.ch06.html#zone_transfers"
>Section 6.2.16.7</A
d8905 1
a8905 1
>Section 6.2.16.7</A
d8922 1
a8922 1
>Section 6.2.16.7</A
d8944 1
a8944 1
>Section 6.2.16.15</A
a8947 48
><DT
><B
CLASS="command"
>ixfr-from-differences</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>ixfr-from-differences</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
><DT
><B
CLASS="command"
>key-directory</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>key-directory</B
> in <A
HREF="Bv9ARM.ch06.html#options"
>Section 6.2.16</A
></P
></DD
><DT
><B
CLASS="command"
>multi-master</B
></DT
><DD
><P
>See the description of
<B
CLASS="command"
>multi-master</B
> in <A
HREF="Bv9ARM.ch06.html#boolean_options"
>Section 6.2.16.1</A
>.</P
></DD
d8957 1
a8957 1
>6.2.24.4. Dynamic Update Policies</A
d8960 1
a8960 1
><ACRONYM
d8962 1
a8962 1
>BIND</ACRONYM
d8978 1
a8978 1
way as in previous versions of <ACRONYM
d8980 1
a8980 1
>BIND</ACRONYM
d8987 1
a8987 1
> clause is new in <ACRONYM
d8989 1
a8989 1
>BIND</ACRONYM
d9025 1
a9025 1
> ) <VAR
d9027 4
a9030 2
>identity</VAR
> <VAR
d9032 4
a9035 2
>nametype</VAR
> <VAR
d9037 3
a9039 1
>name</VAR
d9042 1
a9042 1
> <VAR
d9044 3
a9046 1
>types</VAR
d9055 1
a9055 2
name field in accordance with the nametype field, and the type matches
the types specified in the type field.</P
d9057 5
a9061 20
>The identity field specifies a name or a wildcard name.  Normally, this
is the name of the TSIG or SIG(0) key used to sign the update request.  When a
TKEY exchange has been used to create a shared secret, the identity of the
shared secret is the same as the identity of the key used to authenticate the
TKEY exchange.  When the <VAR
CLASS="replaceable"
>identity</VAR
> field specifies a
wildcard name, it is subject to DNS wildcard expansion, so the rule will apply
to multiple identities.  The <VAR
CLASS="replaceable"
>identity</VAR
> field must
contain a fully qualified domain name.</P
><P
>The <VAR
CLASS="replaceable"
>nametype</VAR
> field has 4 values:
<VAR
d9063 2
a9064 2
>name</VAR
>, <VAR
d9066 1
a9066 1
>subdomain</VAR
d9068 1
a9068 1
<VAR
d9070 2
a9071 5
>wildcard</VAR
>, and <VAR
CLASS="varname"
>self</VAR
>.
d9075 3
a9079 3
><A
NAME="AEN3974"
></A
d9087 3
d9091 1
a9091 1
><VAR
d9093 1
a9093 1
>name</VAR
d9097 3
d9101 2
a9102 6
>Exact-match semantics.  This rule matches when the
name being updated is identical to the contents of the
<VAR
CLASS="replaceable"
>name</VAR
> field.</P
d9107 3
d9111 1
a9111 1
><VAR
d9113 1
a9113 1
>subdomain</VAR
d9117 3
d9121 2
a9122 6
>This rule matches when the name being updated
is a subdomain of, or identical to, the contents of the
<VAR
CLASS="replaceable"
>name</VAR
> field.</P
d9127 3
d9131 1
a9131 1
><VAR
d9133 1
a9133 1
>wildcard</VAR
d9137 3
d9141 2
a9142 6
>The <VAR
CLASS="replaceable"
>name</VAR
> field is
subject to DNS wildcard expansion, and this rule matches when the name
being updated name is a valid expansion of the wildcard.</P
d9147 3
d9151 1
a9151 1
><VAR
d9153 1
a9153 1
>self</VAR
d9157 3
d9161 2
a9162 26
>This rule matches when the name being updated
matches the contents of the <VAR
CLASS="replaceable"
>identity</VAR
> field.
The <VAR
CLASS="replaceable"
>name</VAR
> field is ignored, but should be
the same as the <VAR
CLASS="replaceable"
>identity</VAR
> field.  The
<VAR
CLASS="varname"
>self</VAR
> nametype is most useful when allowing using
one key per name to update, where the key has the same name as the name
to be updated.  The <VAR
CLASS="replaceable"
>identity</VAR
> would be
specified as <CODE
CLASS="constant"
>*</CODE
> in this case.</P
d9171 1
a9171 7
>In all cases, the <VAR
CLASS="replaceable"
>name</VAR
> field must
specify a fully qualified domain name.</P
><P
>If no types are explicitly specified, this rule matches all types except
a9173 2
Note that when an attempt is made to delete all records associated with a
name, the rules are checked for each existing record type.
d9183 1
a9183 1
NAME="AEN4015"
d9204 1
a9204 1
NAME="AEN4020"
d9212 1
a9212 1
        need not be preserved by name servers, resolvers, or other
d9217 1
a9217 1
>Section 6.2.16.13</A
d9220 1
a9220 1
>Section 6.2.16.14</A
d9226 3
a9230 3
><A
NAME="AEN4026"
></A
d9238 3
d9245 3
d9254 3
d9261 3
d9266 2
a9267 1
the type of the resource record.</P
d9272 3
d9279 3
d9291 3
d9298 3
d9308 3
d9315 3
d9319 2
a9320 2
>the resource data.  The format of the
data is type (and sometimes class) specific.</P
d9335 3
a9337 1
> of valid RRs:</P
d9340 3
a9344 3
><A
NAME="AEN4058"
></A
d9352 3
d9359 3
d9363 1
a9363 2
>a host address.  In the IN class, this is a
32-bit IP address.  Described in RFC 1035.</P
d9368 3
d9372 1
a9372 1
>AAAA</P
d9375 3
d9379 1
a9379 1
>IPv6 address.  Described in RFC 1886.</P
d9384 3
d9388 1
a9388 1
>A6</P
d9391 3
d9395 1
a9395 3
>IPv6 address.  This can be a partial
address (a suffix) and an indirection to the name where the rest of the
address (the prefix) can be found.  Experimental.  Described in RFC 2874.</P
d9400 3
d9407 3
d9411 2
a9412 13
>location of AFS database servers.
Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
><P
>APL</P
></TD
><TD
><P
>address prefix list.  Experimental.
Described in RFC 3123.</P
d9417 3
d9424 3
d9428 1
a9428 2
>holds a digital certificate.
Described in RFC 2538.</P
d9433 3
d9440 3
d9444 1
a9444 2
>identifies the canonical name of an alias.
Described in RFC 1035.</P
d9449 3
d9456 3
d9460 3
a9462 5
>Replaces the domain name specified with
another name to be looked up, effectively aliasing an entire
subtree of the domain name space rather than a single record
as in the case of the CNAME RR.
Described in RFC 2672.</P
d9467 3
d9474 3
d9478 1
a9478 1
>Specifies the global position.  Superseded by LOC.</P
d9483 3
d9490 3
d9494 1
a9494 2
>identifies the CPU and OS used by a host.
Described in RFC 1035.</P
d9499 3
d9506 3
d9510 2
a9511 2
>representation of ISDN addresses.
Experimental.  Described in RFC 1183.</P
d9516 3
d9523 3
d9528 1
a9528 1
DNS name.  Described in RFC 2535.</P
d9533 3
d9540 3
d9545 1
a9545 1
DNS name.  Described in RFC 2230.</P
d9550 3
d9557 3
d9561 1
a9561 1
>for storing GPS info.  Described in RFC 1876.
d9567 3
d9574 3
d9579 1
a9579 3
a 16 bit preference value (lower is better)
followed by the host name of the mail exchange.
Described in RFC 974, RFC 1035.</P
d9584 3
d9591 3
d9595 1
a9595 1
>name authority pointer.  Described in RFC 2915.</P
d9600 3
d9607 3
d9611 1
a9611 2
>a network service access point.
Described in RFC 1706.</P
d9616 3
d9623 3
d9627 2
a9628 2
>the authoritative name server for the
domain.  Described in RFC 1035.</P
d9633 3
d9640 3
d9647 1
a9647 1
Described in RFC 2535.</P
d9652 3
d9659 3
d9664 1
a9664 1
name space.  Described in RFC 1035.</P
d9669 3
d9675 169
a9843 6
><TD
><P
>provides mappings between RFC 822 and X.400
addresses.  Described in RFC 2163.</P
></TD
></TR
d9846 3
d9850 1
a9850 1
>RP</P
d9853 3
d9857 1
a9857 2
>information on persons responsible
for the domain.  Experimental.  Described in RFC 1183.</P
d9862 3
d9866 5
a9870 1
>RT</P
d9872 3
a9874 1
><TD
d9876 2
a9877 7
>route-through binding for hosts that
do not have their own direct wide area network addresses.
Experimental.  Described in RFC 1183.</P
></TD
></TR
><TR
><TD
d9879 13
a9891 3
>SIG</P
></TD
><TD
d9893 6
a9898 4
>("signature") contains data authenticated
in the secure DNS.  Described in RFC 2535.</P
></TD
></TR
d9901 3
d9905 1
a9905 1
>SOA</P
d9908 3
d9912 1
a9912 2
>identifies the start of a zone of authority.
Described in RFC 1035.</P
d9917 3
d9921 1
a9921 1
>SRV</P
d9924 3
d9928 2
a9929 2
>information about well known network
services (replaces WKS).  Described in RFC 2782.</P
d9934 3
d9938 1
a9938 1
>TXT</P
d9941 3
d9945 1
a9945 1
>text records.  Described in RFC 1035.</P
d9950 3
d9954 1
a9954 1
>WKS</P
d9957 3
d9961 4
a9964 3
>information about which well known
network services, such as SMTP, that a domain supports. Historical.
</P
d9969 3
d9973 1
a9973 1
>X25</P
d9976 3
d9980 3
a9982 2
>representation of X.25 network addresses.
Experimental.  Described in RFC 1183.</P
a9984 26
></TBODY
></TABLE
><P
></P
></DIV
><P
>The following <SPAN
CLASS="emphasis"
><I
CLASS="emphasis"
>classes</I
></SPAN
> of resource records
are currently valid in the DNS:</P
><DIV
CLASS="informaltable"
><P
></P
><A
NAME="AEN4210"
></A
><TABLE
CELLPADDING="3"
BORDER="1"
CLASS="CALSTABLE"
><TBODY
d9987 3
d9991 1
a9991 1
>IN</P
d9994 3
d9998 1
a9998 1
>The Internet.</P
d10003 3
d10007 1
a10007 1
>CH</P
d10010 3
d10014 1
a10014 8
>&#13;CHAOSnet, a LAN protocol created at MIT in the mid-1970s.
Rarely used for its historical purpose, but reused for BIND's
built-in server information zones, e.g.,
<VAR
CLASS="literal"
>version.bind</VAR
>.
</P
d10019 3
d10023 1
a10023 1
>HS</P
d10026 3
d10030 1
a10030 5
>&#13;Hesiod, an information service
developed by MIT's Project Athena. It is used to share information
about various systems databases, such as users, groups, printers
and so on.
</P
d10040 1
a10040 1
part of the RR.  For example, many name servers internally form tree
d10067 1
a10067 1
NAME="AEN4234"
d10073 1
a10073 1
stored in a name server or resolver.  In the examples provided in
d10096 3
a10100 3
><A
NAME="AEN4241"
></A
d10108 3
d10112 1
a10112 1
><VAR
d10114 1
a10114 1
>ISI.EDU.</VAR
d10118 3
d10122 1
a10122 1
><VAR
d10124 1
a10124 1
>MX</VAR
d10128 3
d10132 1
a10132 1
><VAR
d10134 1
a10134 1
>10 VENERA.ISI.EDU.</VAR
d10140 3
d10147 3
d10151 1
a10151 1
><VAR
d10153 1
a10153 1
>MX</VAR
d10157 3
d10161 1
a10161 1
><VAR
d10163 1
a10163 1
>10 VAXA.ISI.EDU</VAR
d10169 3
d10173 1
a10173 1
><VAR
d10175 1
a10175 1
>VENERA.ISI.EDU</VAR
d10179 3
d10183 1
a10183 1
><VAR
d10185 1
a10185 1
>A</VAR
d10189 3
d10193 1
a10193 1
><VAR
d10195 1
a10195 1
>128.9.0.32</VAR
d10201 3
d10208 3
d10212 1
a10212 1
><VAR
d10214 1
a10214 1
>A</VAR
d10218 3
d10222 1
a10222 1
><VAR
d10224 1
a10224 1
>10.1.0.52</VAR
d10230 3
d10234 1
a10234 1
><VAR
d10236 1
a10236 1
>VAXA.ISI.EDU</VAR
d10240 3
d10244 1
a10244 1
><VAR
d10246 1
a10246 1
>A</VAR
d10250 3
d10254 1
a10254 1
><VAR
d10256 1
a10256 1
>10.2.0.27</VAR
d10262 3
d10269 3
d10273 1
a10273 1
><VAR
d10275 1
a10275 1
>A</VAR
d10279 3
d10283 1
a10283 1
><VAR
d10285 1
a10285 1
>128.9.0.33</VAR
d10305 3
a10309 3
><A
NAME="AEN4307"
></A
d10317 3
d10321 1
a10321 1
><VAR
d10323 1
a10323 1
>XX.LCS.MIT.EDU. IN</VAR
d10327 3
d10331 1
a10331 1
><VAR
d10333 1
a10333 1
>A</VAR
d10337 3
d10341 1
a10341 1
><VAR
d10343 1
a10343 1
>10.0.0.44</VAR
d10349 3
d10353 1
a10353 1
><VAR
d10355 1
a10355 1
>CH</VAR
d10359 3
d10363 1
a10363 1
><VAR
d10365 1
a10365 1
>A</VAR
d10369 3
d10373 1
a10373 1
><VAR
d10375 1
a10375 1
>MIT.EDU. 2420</VAR
d10385 1
a10385 1
>This example shows two addresses for <VAR
d10387 1
a10387 1
>XX.LCS.MIT.EDU</VAR
d10397 1
a10397 1
NAME="AEN4335"
d10432 3
a10436 3
><A
NAME="AEN4341"
></A
d10444 3
d10448 1
a10448 1
><VAR
d10450 1
a10450 1
>example.com.</VAR
d10454 3
d10458 1
a10458 1
><VAR
d10460 1
a10460 1
>IN</VAR
d10464 3
d10468 1
a10468 1
><VAR
d10470 1
a10470 1
>MX</VAR
d10474 3
d10478 1
a10478 1
><VAR
d10480 1
a10480 1
>10</VAR
d10484 3
d10488 1
a10488 1
><VAR
d10490 1
a10490 1
>mail.example.com.</VAR
d10496 3
d10503 3
d10507 1
a10507 1
><VAR
d10509 1
a10509 1
>IN</VAR
d10513 3
d10517 1
a10517 1
><VAR
d10519 1
a10519 1
>MX</VAR
d10523 3
d10527 1
a10527 1
><VAR
d10529 1
a10529 1
>10</VAR
d10533 3
d10537 1
a10537 1
><VAR
d10539 1
a10539 1
>mail2.example.com.</VAR
d10545 3
d10552 3
d10556 1
a10556 1
><VAR
d10558 1
a10558 1
>IN</VAR
d10562 3
d10566 1
a10566 1
><VAR
d10568 1
a10568 1
>MX</VAR
d10572 3
d10576 1
a10576 1
><VAR
d10578 1
a10578 1
>20</VAR
d10582 3
d10586 1
a10586 1
><VAR
d10588 1
a10588 1
>mail.backup.org.</VAR
d10594 3
d10598 1
a10598 1
><VAR
d10600 1
a10600 1
>mail.example.com.</VAR
d10604 3
d10608 1
a10608 1
><VAR
d10610 1
a10610 1
>IN</VAR
d10614 3
d10618 1
a10618 1
><VAR
d10620 1
a10620 1
>A</VAR
d10624 3
d10628 1
a10628 1
><VAR
d10630 1
a10630 1
>10.0.0.1</VAR
d10634 3
d10643 3
d10647 1
a10647 1
><VAR
d10649 1
a10649 1
>mail2.example.com.</VAR
d10653 3
d10657 1
a10657 1
><VAR
d10659 1
a10659 1
>IN</VAR
d10663 3
d10667 1
a10667 1
><VAR
d10669 1
a10669 1
>A</VAR
d10673 3
d10677 1
a10677 1
><VAR
d10679 1
a10679 1
>10.0.0.2</VAR
d10683 3
d10698 1
a10698 1
>Mail delivery will be attempted to <VAR
d10700 1
a10700 1
>mail.example.com</VAR
d10702 1
a10702 1
<VAR
d10704 1
a10704 1
>mail2.example.com</VAR
d10706 1
a10706 1
any order), and if neither of those succeed, delivery to <VAR
d10708 1
a10708 1
>mail.backup.org</VAR
d10728 3
a10732 3
><A
NAME="AEN4433"
></A
d10740 3
d10747 3
d10761 3
d10768 3
d10779 3
d10786 3
d10802 1
a10802 1
can be explicitly specified, for example, <VAR
d10804 1
a10804 1
>1h30m</VAR
d10812 1
a10812 1
NAME="AEN4456"
d10838 3
a10842 3
><A
NAME="AEN4461"
></A
d10850 3
d10854 1
a10854 1
><VAR
d10856 1
a10856 1
>$ORIGIN</VAR
d10860 3
d10864 1
a10864 1
><VAR
d10866 1
a10866 1
>2.1.10.in-addr.arpa</VAR
d10872 3
d10876 1
a10876 1
><VAR
d10878 1
a10878 1
>3</VAR
d10882 3
d10886 1
a10886 1
><VAR
d10888 1
a10888 1
>IN PTR foo.example.com.</VAR
d10919 1
a10919 1
NAME="AEN4483"
d10944 1
a10944 1
NAME="AEN4490"
d10955 1
a10955 1
><VAR
d10957 3
a10959 1
>domain-name</VAR
d10962 1
a10962 1
> <VAR
d10964 3
a10966 1
>comment</VAR
d10978 1
a10978 1
> &#60;<VAR
d10980 1
a10980 1
>zone-name</VAR
d10995 1
a10995 1
><VAR
d10998 1
a10998 1
WWW     CNAME   MAIN-SERVER</VAR
d11004 1
a11004 1
><VAR
d11006 1
a11006 1
>WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.</VAR
d11014 1
a11014 1
NAME="AEN4510"
d11025 1
a11025 1
<VAR
d11027 3
a11029 1
>filename</VAR
d11032 1
a11032 1
>&#13;<VAR
d11034 3
a11036 1
>origin</VAR
d11040 1
a11040 1
> <VAR
d11042 3
a11044 1
>comment</VAR
d11096 1
a11096 1
NAME="AEN4530"
d11107 1
a11107 1
<VAR
d11109 3
a11111 1
>default-ttl</VAR
d11114 1
a11114 1
>&#13;<VAR
d11116 3
a11118 1
>comment</VAR
d11136 2
a11137 2
NAME="AEN4541"
>6.3.6. <ACRONYM
d11139 1
a11139 1
>BIND</ACRONYM
d11149 1
a11149 1
> <VAR
d11151 4
a11154 2
>range</VAR
> <VAR
d11156 4
a11159 4
>lhs</VAR
> [<SPAN
CLASS="optional"
><VAR
d11161 4
a11164 5
>ttl</VAR
></SPAN
>] [<SPAN
CLASS="optional"
><VAR
d11166 3
a11168 8
>class</VAR
></SPAN
>] <VAR
CLASS="replaceable"
>type</VAR
> <VAR
CLASS="replaceable"
>rhs</VAR
d11171 1
a11171 1
> <VAR
d11173 3
a11175 1
>comment</VAR
d11192 1
a11192 1
><VAR
d11196 1
a11196 1
$GENERATE 1-127 $ CNAME $.0</VAR
d11202 1
a11202 1
><VAR
d11205 3
a11207 3
0.0.0.192.IN-ADDR.ARPA. NS SERVER2.EXAMPLE.
1.0.0.192.IN-ADDR.ARPA. CNAME 1.0.0.0.192.IN-ADDR.ARPA.
2.0.0.192.IN-ADDR.ARPA. CNAME 2.0.0.0.192.IN-ADDR.ARPA.
d11209 2
a11210 2
127.0.0.192.IN-ADDR.ARPA. CNAME 127.0.0.0.192.IN-ADDR.ARPA.
</VAR
d11214 3
a11218 3
><A
NAME="AEN4565"
></A
d11226 3
d11236 3
d11247 3
d11257 3
d11289 1
a11289 1
by modifiers which change the offset from the iterator, field width and base. 
d11335 1
a11335 1
>For compatibility with earlier versions <B
d11339 1
a11339 57
recognized a indicating a literal $ in the output.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>ttl</B
></P
></TD
><TD
><P
><B
CLASS="command"
>ttl</B
> specifies the
	  ttl of the generated records. If not specified this will be
	  inherited using the normal ttl inheritance rules.</P
>
	  <P
><B
CLASS="command"
>class</B
> and <B
CLASS="command"
>ttl</B
> can be
	  entered in either order.</P
></TD
></TR
><TR
><TD
><P
><B
CLASS="command"
>class</B
></P
></TD
><TD
><P
><B
CLASS="command"
>class</B
> specifies the
	  class of the generated records.  This must match the zone class if
	  it is specified.</P
>
	  <P
><B
CLASS="command"
>class</B
> and <B
CLASS="command"
>ttl</B
> can be
	  entered in either order.</P
d11344 3
d11354 3
d11364 3
d11374 3
d11391 1
a11391 1
> directive is a <ACRONYM
d11393 1
a11393 1
>BIND</ACRONYM
a11395 2
><P
>BIND 8 does not support the optional TTL and CLASS fields.</P
d11443 1
a11443 1
>The <ACRONYM
d11445 1
a11445 1
>BIND</ACRONYM
d11456 1
a11456 1
><ACRONYM
d11458 1
a11458 1
>BIND</ACRONYM
@


1.1.1.3
log
@ISC BIND release 9.3.1. ok deraadt@@
@
text
@d97 1
a97 1
HREF="Bv9ARM.ch06.html#AEN4050"
d154 1
a154 1
NAME="AEN1086"
d626 1
a626 1
NAME="AEN1251"
d657 1
a657 1
NAME="AEN1259"
d771 1
a771 1
NAME="AEN1290"
d790 1
a790 1
NAME="AEN1295"
d822 1
a822 1
NAME="AEN1304"
d935 1
a935 1
NAME="AEN1328"
d1135 1
a1135 1
NAME="AEN1411"
d1184 1
a1184 1
NAME="AEN1424"
d1267 1
a1267 1
NAME="AEN1455"
d1581 1
a1581 1
NAME="AEN1534"
d1599 1
a1599 1
NAME="AEN1539"
d1628 1
a1628 1
NAME="AEN1546"
d1656 1
a1656 1
NAME="AEN1553"
d1738 1
a1738 1
NAME="AEN1573"
d1880 1
a1880 1
NAME="AEN1613"
d1943 1
a1943 1
NAME="AEN1629"
d2459 1
a2459 1
NAME="AEN1753"
d2786 1
a2786 1
NAME="AEN1883"
d2867 1
a2867 1
NAME="AEN1907"
d2941 1
a2941 1
NAME="AEN1926"
d2990 1
a2990 1
NAME="AEN1941"
d3008 1
a3008 1
NAME="AEN1946"
a3177 7
> host-statistics-max <VAR
CLASS="replaceable"
>number</VAR
>; </SPAN
>]
    [<SPAN
CLASS="optional"
d3325 1
a3325 1
>response</VAR
d3956 1
a3972 1
};
d4493 1
a4493 1
NAME="AEN2402"
a5283 48
><DT
><B
CLASS="command"
>check-names</B
></DT
><DD
><P
>&#13;This option is used to restrict the character set and syntax of
certain domain names in master files and/or DNS responses received
from the network.  The default varies according to usage area.  For
<B
CLASS="command"
>master</B
> zones the default is <B
CLASS="command"
>fail</B
>.
For <B
CLASS="command"
>slave</B
> zones the default is <B
CLASS="command"
>warn</B
>.
For answer received from the network (<B
CLASS="command"
>response</B
>)
the default is <B
CLASS="command"
>ignore</B
>.
</P
><P
>The rules for legal hostnames / mail domains are derived from RFC 952
and RFC 821 as modified by RFC 1123.
</P
><P
><B
CLASS="command"
>check-names</B
> applies to the owner names of A, AAA and
MX records.  It also applies to the domain names in the RDATA of NS, SOA and MX
records.  It also applies to the RDATA of PTR records where the owner name
indicated that it is a reverse lookup of a hostname (the owner name ends in
IN-ADDR.ARPA, IP6.ARPA, IP6.INT).
</P
></DD
d5292 1
a5292 1
NAME="AEN2695"
d5360 1
a5360 1
NAME="AEN2714"
d5572 1
a5572 1
NAME="AEN2781"
d5675 1
a5675 1
NAME="AEN2808"
d6183 1
a6183 1
NAME="AEN2974"
d6207 1
a6207 1
NAME="AEN2979"
d6327 1
a6327 1
NAME="AEN3016"
a6376 12
>host-statistics-max</B
></DT
><DD
><P
>In BIND 8, specifies the maximum number of host statistic
entries to be kept.
Not implemented in BIND 9.
</P
></DD
><DT
><B
CLASS="command"
d6450 1
a6450 1
NAME="AEN3062"
d6815 1
a6815 1
NAME="AEN3150"
d7277 1
a7277 1
NAME="AEN3294"
d7749 1
a7749 1
NAME="AEN3433"
d7804 1
a7804 1
NAME="AEN3449"
d7892 1
a7892 1
NAME="AEN3471"
d8526 1
a8526 1
NAME="AEN3645"
d8537 1
a8537 1
NAME="AEN3648"
d8545 1
a8545 1
NAME="AEN3650"
d8777 1
a8777 1
NAME="AEN3713"
d8815 1
a8815 1
NAME="AEN3723"
d8959 1
a8959 14
network.  The default varies according to zone type.  For <B
CLASS="command"
>master</B
> zones the default is <B
CLASS="command"
>fail</B
>.  For <B
CLASS="command"
>slave</B
>
zones the default is <B
CLASS="command"
>warn</B
>.
d9551 1
a9551 1
NAME="AEN4009"
d9676 1
a9676 1
NAME="AEN4050"
d9697 1
a9697 1
NAME="AEN4055"
d9722 1
a9722 1
NAME="AEN4061"
d9803 1
a9803 1
NAME="AEN4093"
d10154 1
a10154 1
NAME="AEN4245"
d10236 1
a10236 1
NAME="AEN4269"
d10268 1
a10268 1
NAME="AEN4276"
d10423 1
a10423 1
NAME="AEN4342"
d10494 1
a10494 1
NAME="AEN4370"
d10532 1
a10532 1
NAME="AEN4376"
d10753 1
a10753 1
NAME="AEN4468"
d10816 1
a10816 1
NAME="AEN4491"
d10845 1
a10845 1
NAME="AEN4496"
d10911 1
a10911 1
NAME="AEN4518"
d10936 1
a10936 1
NAME="AEN4525"
d11002 1
a11002 1
NAME="AEN4545"
d11078 1
a11078 1
NAME="AEN4565"
d11114 1
a11114 1
NAME="AEN4576"
d11197 1
a11197 1
NAME="AEN4600"
@


1.1.1.4
log
@ISC BIND release 9.3.2
@
text
@d1 118
a118 97
<!--
 - Copyright (C) 2004, 2005 Internet Systems Consortium, Inc. ("ISC")
 - Copyright (C) 2000-2003 Internet Software Consortium.
 - 
 - Permission to use, copy, modify, and distribute this software for any
 - purpose with or without fee is hereby granted, provided that the above
 - copyright notice and this permission notice appear in all copies.
 - 
 - THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
 - REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 - AND FITNESS. IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
 - INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 - LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
 - OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 - PERFORMANCE OF THIS SOFTWARE.
-->
<!-- $ISC: Bv9ARM.ch06.html,v 1.56.2.12.2.30 2005/10/13 02:34:00 marka Exp $ -->
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=ISO-8859-1">
<title>Chapter 6. BIND 9 Configuration Reference</title>
<meta name="generator" content="DocBook XSL Stylesheets V1.69.1">
<link rel="start" href="Bv9ARM.html" title="BIND 9 Administrator Reference Manual">
<link rel="up" href="Bv9ARM.html" title="BIND 9 Administrator Reference Manual">
<link rel="prev" href="Bv9ARM.ch05.html" title="Chapter 5. The BIND 9 Lightweight Resolver">
<link rel="next" href="Bv9ARM.ch07.html" title="Chapter 7. BIND 9 Security Considerations">
</head>
<body bgcolor="white" text="black" link="#0000FF" vlink="#840084" alink="#0000FF">
<div class="navheader">
<table width="100%" summary="Navigation header">
<tr><th colspan="3" align="center">Chapter 6. <span class="acronym">BIND</span> 9 Configuration Reference</th></tr>
<tr>
<td width="20%" align="left">
<a accesskey="p" href="Bv9ARM.ch05.html">Prev</a> </td>
<th width="60%" align="center"> </th>
<td width="20%" align="right"> <a accesskey="n" href="Bv9ARM.ch07.html">Next</a>
</td>
</tr>
</table>
<hr>
</div>
<div class="chapter" lang="en">
<div class="titlepage"><div><div><h2 class="title">
<a name="Bv9ARM.ch06"></a>Chapter 6. <span class="acronym">BIND</span> 9 Configuration Reference</h2></div></div></div>
<div class="toc">
<p><b>Table of Contents</b></p>
<dl>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#configuration_file_elements">Configuration File Elements</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#address_match_lists">Address Match Lists</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2551817">Comment Syntax</a></span></dt>
</dl></dd>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#Configuration_File_Grammar">Configuration File Grammar</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552302"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#acl"><span><strong class="command">acl</strong></span> Statement Definition and
Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552471"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage"><span><strong class="command">controls</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552808"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552823"><span><strong class="command">include</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552845"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2552867"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2553006"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2553269"><span><strong class="command">logging</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554474"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554547"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554610"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554653"><span><strong class="command">masters</strong></span> Statement Definition and Usage </a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2554668"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#options"><span><strong class="command">options</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_grammar"><span><strong class="command">server</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_definition_and_usage"><span><strong class="command">server</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562233"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562281"><span><strong class="command">trusted-keys</strong></span> Statement Definition
and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#view_statement_grammar"><span><strong class="command">view</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2562349"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#zone_statement_grammar"><span><strong class="command">zone</strong></span>
Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2563022"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
</dl></dd>
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2564557">Zone File</a></span></dt>
<dd><dl>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#types_of_resource_records_and_when_to_use_them">Types of Resource Records and When to Use Them</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2565990">Discussion of MX Records</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#Setting_TTLs">Setting TTLs</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566487">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566593">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2566761"><span class="acronym">BIND</span> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
</dl></dd>
</dl>
</div>
<p><span class="acronym">BIND</span> 9 configuration is broadly similar
to <span class="acronym">BIND</span> 8; however, there are a few new areas
of configuration, such as views. <span class="acronym">BIND</span>
8 configuration files should work with few alterations in <span class="acronym">BIND</span>
d121 9
a129 2
found in <span class="acronym">BIND</span> 9.</p>
<p><span class="acronym">BIND</span> 4 configuration files can be converted to the new format
d131 153
a283 43
<code class="filename">contrib/named-bootconf/named-bootconf.sh</code>.</p>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="configuration_file_elements"></a>Configuration File Elements</h2></div></div></div>
<p>Following is a list of elements used throughout the <span class="acronym">BIND</span> configuration
file documentation:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="varname">acl_name</code></p></td>
<td><p>The name of an <code class="varname">address_match_list</code> as
defined by the <span><strong class="command">acl</strong></span> statement.</p></td>
</tr>
<tr>
<td><p><code class="varname">address_match_list</code></p></td>
<td><p>A list of one or more <code class="varname">ip_addr</code>, 
<code class="varname">ip_prefix</code>, <code class="varname">key_id</code>, 
or <code class="varname">acl_name</code> elements, see
<a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a>.</p></td>
</tr>
<tr>
<td><p><code class="varname">domain_name</code></p></td>
<td><p>A quoted string which will be used as
a DNS name, for example "<code class="literal">my.test.domain</code>".</p></td>
</tr>
<tr>
<td><p><code class="varname">dotted_decimal</code></p></td>
<td><p>One to four integers valued 0 through
255 separated by dots (`.'), such as <span><strong class="command">123</strong></span>, 
<span><strong class="command">45.67</strong></span> or <span><strong class="command">89.123.45.67</strong></span>.</p></td>
</tr>
<tr>
<td><p><code class="varname">ip4_addr</code></p></td>
<td><p>An IPv4 address with exactly four elements
in <code class="varname">dotted_decimal</code> notation.</p></td>
</tr>
<tr>
<td><p><code class="varname">ip6_addr</code></p></td>
<td><p>An IPv6 address, such as <span><strong class="command">2001:db8::1234</strong></span>.
d293 12
a304 3
For example, a link-local address <span><strong class="command">fe80::1</strong></span> on the
link attached to the interface <span><strong class="command">ne0</strong></span>
can be specified as <span><strong class="command">fe80::1%ne0</strong></span>.
d306 40
a345 10
ambiguity, and need to be disambiguated.</p></td>
</tr>
<tr>
<td><p><code class="varname">ip_addr</code></p></td>
<td><p>An <code class="varname">ip4_addr</code> or <code class="varname">ip6_addr</code>.</p></td>
</tr>
<tr>
<td><p><code class="varname">ip_port</code></p></td>
<td><p>An IP port <code class="varname">number</code>.
<code class="varname">number</code> is limited to 0 through 65535, with values
d348 17
a364 5
select a random high-numbered port.</p></td>
</tr>
<tr>
<td><p><code class="varname">ip_prefix</code></p></td>
<td><p>An IP network specified as an <code class="varname">ip_addr</code>,
d366 72
a437 18
Trailing zeros in a <code class="varname">ip_addr</code> may omitted.
For example, <span><strong class="command">127/8</strong></span> is the network <span><strong class="command">127.0.0.0</strong></span> with
netmask <span><strong class="command">255.0.0.0</strong></span> and <span><strong class="command">1.2.3.0/28</strong></span> is
network <span><strong class="command">1.2.3.0</strong></span> with netmask <span><strong class="command">255.255.255.240</strong></span>.</p></td>
</tr>
<tr>
<td><p><code class="varname">key_id</code></p></td>
<td><p>A <code class="varname">domain_name</code> representing
the name of a shared key, to be used for transaction security.</p></td>
</tr>
<tr>
<td><p><code class="varname">key_list</code></p></td>
<td><p>A list of one or more <code class="varname">key_id</code>s,
separated by semicolons and ending with a semicolon.</p></td>
</tr>
<tr>
<td><p><code class="varname">number</code></p></td>
<td><p>A non-negative 32 bit integer
d440 81
a520 22
be limited by the context in which it is used.</p></td>
</tr>
<tr>
<td><p><code class="varname">path_name</code></p></td>
<td><p>A quoted string which will be used as
a pathname, such as <code class="filename">zones/master/my.test.domain</code>.</p></td>
</tr>
<tr>
<td><p><code class="varname">size_spec</code></p></td>
<td>
<p>A number, the word <strong class="userinput"><code>unlimited</code></strong>,
or the word <strong class="userinput"><code>default</code></strong>.</p>
<p>
An <code class="varname">unlimited</code> <code class="varname">size_spec</code> requests unlimited
use, or the maximum available amount. A <code class="varname">default size_spec</code> uses
the limit that was in force when the server was started.</p>
<p>A <code class="varname">number</code> can
optionally be followed by a scaling factor: <strong class="userinput"><code>K</code></strong> or <strong class="userinput"><code>k</code></strong> for
kilobytes, <strong class="userinput"><code>M</code></strong> or <strong class="userinput"><code>m</code></strong> for
megabytes, and <strong class="userinput"><code>G</code></strong> or <strong class="userinput"><code>g</code></strong> for gigabytes,
which scale by 1024, 1024*1024, and 1024*1024*1024 respectively.</p>
<p>The value must be representable as a 64-bit unsigned integer
d522 127
a648 31
Using <code class="varname">unlimited</code> is the best way
to safely set a really large number.</p>
</td>
</tr>
<tr>
<td><p><code class="varname">yes_or_no</code></p></td>
<td><p>Either <strong class="userinput"><code>yes</code></strong> or <strong class="userinput"><code>no</code></strong>.
The words <strong class="userinput"><code>true</code></strong> and <strong class="userinput"><code>false</code></strong> are
also accepted, as are the numbers <strong class="userinput"><code>1</code></strong> and <strong class="userinput"><code>0</code></strong>.</p></td>
</tr>
<tr>
<td><p><code class="varname">dialup_option</code></p></td>
<td><p>One of <strong class="userinput"><code>yes</code></strong>,
<strong class="userinput"><code>no</code></strong>, <strong class="userinput"><code>notify</code></strong>,
<strong class="userinput"><code>notify-passive</code></strong>, <strong class="userinput"><code>refresh</code></strong> or
<strong class="userinput"><code>passive</code></strong>.
When used in a zone, <strong class="userinput"><code>notify-passive</code></strong>,
<strong class="userinput"><code>refresh</code></strong>, and <strong class="userinput"><code>passive</code></strong>
are restricted to slave and stub zones.</p></td>
</tr>
</tbody>
</table></div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="address_match_lists"></a>Address Match Lists</h3></div></div></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2551560"></a>Syntax</h4></div></div></div>
<pre class="programlisting"><code class="varname">address_match_list</code> = address_match_list_element ;
  [<span class="optional"> address_match_list_element; ... </span>]
<code class="varname">address_match_list_element</code> = [<span class="optional"> ! </span>] (ip_address [<span class="optional">/length</span>] |
d650 12
a661 6
</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2551587"></a>Definition and Usage</h4></div></div></div>
<p>Address match lists are primarily used to determine access
d663 7
a669 1
the <span><strong class="command">listen-on</strong></span> and <span><strong class="command">sortlist</strong></span>
d671 34
a704 10
which constitute an address match list can be any of the following:</p>
<div class="itemizedlist"><ul type="disc">
<li>an IP address (IPv4 or IPv6)</li>
<li>an IP prefix (in `/' notation)</li>
<li>a key ID, as defined by the <span><strong class="command">key</strong></span> statement</li>
<li>the name of an address match list defined with
the <span><strong class="command">acl</strong></span> statement</li>
<li>a nested address match list enclosed in braces</li>
</ul></div>
<p>Elements can be negated with a leading exclamation mark (`!'),
d707 3
a709 2
the description of the acl statement.</p>
<p>The addition of the key clause made the name of this syntactic
d712 3
a714 2
the term "address match list" is still used throughout the documentation.</p>
<p>When a given IP address or prefix is compared to an address
d718 3
a720 2
and whether the element was negated.</p>
<p>When used as an access control list, a non-negated match allows
d722 22
a743 4
access is denied. The clauses <span><strong class="command">allow-notify</strong></span>,
<span><strong class="command">allow-query</strong></span>, <span><strong class="command">allow-transfer</strong></span>,
<span><strong class="command">allow-update</strong></span>, <span><strong class="command">allow-update-forwarding</strong></span>,
and <span><strong class="command">blackhole</strong></span> all
d746 3
a748 2
which do not match the list.</p>
<p>Because of the first-match aspect of the algorithm, an element
d752 4
a755 1
<span><strong class="command">1.2.3/24; ! 1.2.3.13;</strong></span> the 1.2.3.13 element is
d758 4
a761 1
Using <span><strong class="command">! 1.2.3.13; 1.2.3/24</strong></span> fixes
d763 20
a782 8
other 1.2.3.* hosts fall through.</p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2551817"></a>Comment Syntax</h3></div></div></div>
<p>The <span class="acronym">BIND</span> 9 comment syntax allows for comments to appear
anywhere that white space may appear in a <span class="acronym">BIND</span> configuration
d784 49
a832 20
in the C, C++, or shell/perl style.</p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2551832"></a>Syntax</h4></div></div></div>
<pre class="programlisting">/* This is a <span class="acronym">BIND</span> comment as in C */</pre>
<p>
</p>
<pre class="programlisting">// This is a <span class="acronym">BIND</span> comment as in C++</pre>
<p>
</p>
<pre class="programlisting"># This is a <span class="acronym">BIND</span> comment as in common UNIX shells and perl</pre>
<p>
      </p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2551861"></a>Definition and Usage</h4></div></div></div>
<p>Comments may appear anywhere that whitespace may appear in
a <span class="acronym">BIND</span> configuration file.</p>
<p>C-style comments start with the two characters /* (slash,
d835 8
a842 4
a portion of a line or to span multiple lines.</p>
<p>C-style comments cannot be nested. For example, the following
is not valid because the entire comment ends with the first */:</p>
<pre class="programlisting">/* This is the start of a comment.
d846 4
a849 2
</pre>
<p>C++-style comments start with the two characters // (slash,
d852 7
a858 3
comment span multiple lines, each line must use the // pair.</p>
<p>For example:</p>
<pre class="programlisting">// This is the start of a comment.  The next line
d861 15
a875 6
</pre>
<p>Shell-style (or perl-style, if you prefer) comments start
with the character <code class="literal">#</code> (number sign) and continue to the end of the
physical line, as in C++ comments.</p>
<p>For example:</p>
<pre class="programlisting"># This is the start of a comment.  The next line
d878 23
a900 6
</pre>
<p>
</p>
<div class="warning" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Warning</h3>
<p>You cannot use the semicolon (`;') character
d903 21
a923 9
   statement.</p>
</div>
</div>
</div>
</div>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="Configuration_File_Grammar"></a>Configuration File Grammar</h2></div></div></div>
<p>A <span class="acronym">BIND</span> 9 configuration consists of statements and comments.
d927 220
a1146 73
    terminated with a semicolon.</p>
<p>The following statements are supported:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">acl</strong></span></p></td>
<td><p>defines a named IP address
matching list, for access control and other uses.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">controls</strong></span></p></td>
<td><p>declares control channels to be used
by the <span><strong class="command">rndc</strong></span> utility.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">include</strong></span></p></td>
<td><p>includes a file.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">key</strong></span></p></td>
<td><p>specifies key information for use in
authentication and authorization using TSIG.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">logging</strong></span></p></td>
<td><p>specifies what the server logs, and where
the log messages are sent.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">lwres</strong></span></p></td>
<td><p>configures <span><strong class="command">named</strong></span> to
also act as a light weight resolver daemon (<span><strong class="command">lwresd</strong></span>).</p></td>
</tr>
<tr>
<td><p><span><strong class="command">masters</strong></span></p></td>
<td><p>defines a named masters list for
inclusion in stub and slave zone masters clauses.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">options</strong></span></p></td>
<td><p>controls global server configuration
options and sets defaults for other statements.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">server</strong></span></p></td>
<td><p>sets certain configuration options on
a per-server basis.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">trusted-keys</strong></span></p></td>
<td><p>defines trusted DNSSEC keys.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">view</strong></span></p></td>
<td><p>defines a view.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">zone</strong></span></p></td>
<td><p>defines a zone.</p></td>
</tr>
</tbody>
</table></div>
<p>The <span><strong class="command">logging</strong></span> and
    <span><strong class="command">options</strong></span> statements may only occur once per
    configuration.</p>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552302"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">acl</strong></span> acl-name { 
d1149 19
a1167 7
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="acl"></a><span><strong class="command">acl</strong></span> Statement Definition and
Usage</h3></div></div></div>
<p>The <span><strong class="command">acl</strong></span> statement assigns a symbolic
d1169 73
a1241 27
      use of address match lists: Access Control Lists (ACLs).</p>
<p>Note that an address match list's name must be defined
      with <span><strong class="command">acl</strong></span> before it can be used elsewhere; no
      forward references are allowed.</p>
<p>The following ACLs are built-in:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">any</strong></span></p></td>
<td><p>Matches all hosts.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">none</strong></span></p></td>
<td><p>Matches no hosts.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">localhost</strong></span></p></td>
<td><p>Matches the IPv4 and IPv6 addresses of all network
interfaces on the system.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">localnets</strong></span></p></td>
<td><p>Matches any host on an IPv4 or IPv6 network
d1245 68
a1312 21
In such a case, <span><strong class="command">localnets</strong></span> only matches the local
IPv6 addresses, just like <span><strong class="command">localhost</strong></span>.
</p></td>
</tr>
</tbody>
</table></div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552471"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">controls</strong></span> {
   inet ( ip_addr | * ) [<span class="optional"> port ip_port </span>] allow { <em class="replaceable"><code> address_match_list </code></em> }
                keys { <em class="replaceable"><code> key_list </code></em> };
   [<span class="optional"> inet ...; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="controls_statement_definition_and_usage"></a><span><strong class="command">controls</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">controls</strong></span> statement declares control
d1315 10
a1324 3
      used by the <span><strong class="command">rndc</strong></span> utility to send commands to
      and retrieve non-DNS results from a name server.</p>
<p>An <span><strong class="command">inet</strong></span> control channel is a TCP
d1326 16
a1341 4
      <span><strong class="command">ip_port</strong></span> on the specified
      <span><strong class="command">ip_addr</strong></span>, which can be an IPv4 or IPv6
      address.  An <span><strong class="command">ip_addr</strong></span>
      of <code class="literal">*</code> is interpreted as the IPv4 wildcard
d1344 19
a1362 4
      use an <span><strong class="command">ip_addr</strong></span> of <code class="literal">::</code>.
      If you will only use <span><strong class="command">rndc</strong></span> on the local host,
      using the loopback address (<code class="literal">127.0.0.1</code>
      or <code class="literal">::1</code>) is recommended for maximum
d1364 21
a1384 8
      </p>
<p>
      If no port is specified, port 953
      is used.  "<code class="literal">*</code>" cannot be used for
      <span><strong class="command">ip_port</strong></span>.</p>
<p>The ability to issue commands over the control channel is
      restricted by the <span><strong class="command">allow</strong></span> and
      <span><strong class="command">keys</strong></span> clauses. Connections to the control
d1386 12
a1397 3
      <span><strong class="command">address_match_list</strong></span>.  This is for simple
      IP address based filtering only; any <span><strong class="command">key_id</strong></span>
      elements of the <span><strong class="command">address_match_list</strong></span> are
d1399 19
a1417 6
      </p>
<p>The primary authorization mechanism of the command
      channel is the <span><strong class="command">key_list</strong></span>, which contains
      a list of <span><strong class="command">key_id</strong></span>s.
      Each <span><strong class="command">key_id</strong></span> in
      the <span><strong class="command">key_list</strong></span> is authorized to execute
d1419 21
a1439 6
      See <a href="Bv9ARM.ch03.html#rndc">Remote Name Daemon Control application</a> in
      <a href="Bv9ARM.ch03.html#admin_tools" title="Administrative Tools">the section called &#8220;Administrative Tools&#8221;</a>) for information about
      configuring keys in <span><strong class="command">rndc</strong></span>.</p>
<p>
If no <span><strong class="command">controls</strong></span> statement is present,
<span><strong class="command">named</strong></span> will set up a default
d1442 45
a1486 11
In this case, and also when the <span><strong class="command">controls</strong></span> statement
is present but does not have a <span><strong class="command">keys</strong></span> clause,
<span><strong class="command">named</strong></span> will attempt to load the command channel key
from the file <code class="filename">rndc.key</code> in
<code class="filename">/etc</code> (or whatever <code class="varname">sysconfdir</code>
was specified as when <span class="acronym">BIND</span> was built).
To create a <code class="filename">rndc.key</code> file, run
<strong class="userinput"><code>rndc-confgen -a</code></strong>.
</p>
<p>The <code class="filename">rndc.key</code> feature was created to
      ease the transition of systems from <span class="acronym">BIND</span> 8,
d1488 4
a1491 1
      and thus did not have a <span><strong class="command">keys</strong></span> clause.
d1493 20
a1512 5
It makes it possible to use an existing <span class="acronym">BIND</span> 8
configuration file in <span class="acronym">BIND</span> 9 unchanged,
and still have <span><strong class="command">rndc</strong></span> work the same way
<span><strong class="command">ndc</strong></span> worked in BIND 8, simply by executing the
command <strong class="userinput"><code>rndc-confgen -a</code></strong> after BIND 9 is
d1514 6
a1519 3
</p>
<p>
      Since the <code class="filename">rndc.key</code> feature
d1521 4
a1524 1
      <span class="acronym">BIND</span> 8 configuration files, this feature does not
d1527 8
a1534 2
      <code class="filename">rndc.conf</code> with your own key if you wish to change
      those things.  The <code class="filename">rndc.key</code> file also has its
d1536 4
a1539 1
      <span><strong class="command">named</strong></span> is running as) can access it.  If you
d1541 18
a1558 5
      <span><strong class="command">rndc</strong></span> commands then you need to create an
      <code class="filename">rndc.conf</code> and make it group readable by a group
      that contains the users who should have access.</p>
<p>The UNIX control channel type of <span class="acronym">BIND</span> 8 is not supported
      in <span class="acronym">BIND</span> 9, and is not expected to be added in future
d1560 58
a1617 18
      <span class="acronym">BIND</span> 8 configuration file, it is ignored
      and a warning is logged.</p>
<p>
To disable the command channel, use an empty <span><strong class="command">controls</strong></span>
statement: <span><strong class="command">controls { };</strong></span>.
</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552808"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">include <em class="replaceable"><code>filename</code></em>;</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552823"></a><span><strong class="command">include</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">include</strong></span> statement inserts the
      specified file at the point where the <span><strong class="command">include</strong></span>
      statement is encountered. The <span><strong class="command">include</strong></span>
d1621 50
a1670 16
      that are readable only by the name server.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552845"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">key <em class="replaceable"><code>key_id</code></em> {
    algorithm <em class="replaceable"><code>string</code></em>;
    secret <em class="replaceable"><code>string</code></em>;
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2552867"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">key</strong></span> statement defines a shared
secret key for use with TSIG (see <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
d1672 18
a1689 6
(see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and Usage&#8221;</a>).
</p>
<p>
The <span><strong class="command">key</strong></span> statement can occur at the top level
of the configuration file or inside a <span><strong class="command">view</strong></span> 
statement.  Keys defined in top-level <span><strong class="command">key</strong></span>
d1691 8
a1698 2
a <span><strong class="command">controls</strong></span> statement
(see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and Usage&#8221;</a>)
d1700 6
a1705 2
</p>
<p>The <em class="replaceable"><code>key_id</code></em>, also known as the
d1707 4
a1710 1
be used in a <span><strong class="command">server</strong></span>
d1714 6
a1719 2
matching this name, algorithm, and secret.</p>
<p>The <em class="replaceable"><code>algorithm_id</code></em> is a string
d1722 8
a1729 2
<code class="literal">hmac-md5</code>.  The
<em class="replaceable"><code>secret_string</code></em> is the secret to be
d1731 124
a1854 18
string.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2553006"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">logging</strong></span> {
   [ <span><strong class="command">channel</strong></span> <em class="replaceable"><code>channel_name</code></em> {
     ( <span><strong class="command">file</strong></span> <em class="replaceable"><code>path name</code></em>
         [ <span><strong class="command">versions</strong></span> ( <em class="replaceable"><code>number</code></em> | <code class="literal">unlimited</code> ) ]
         [ <span><strong class="command">size</strong></span> <em class="replaceable"><code>size spec</code></em> ]
       | <span><strong class="command">syslog</strong></span> <em class="replaceable"><code>syslog_facility</code></em>
       | <span><strong class="command">stderr</strong></span>
       | <span><strong class="command">null</strong></span> );
     [ <span><strong class="command">severity</strong></span> (<code class="option">critical</code> | <code class="option">error</code> | <code class="option">warning</code> | <code class="option">notice</code> |
                 <code class="option">info</code> | <code class="option">debug</code> [ <em class="replaceable"><code>level</code></em> ] | <code class="option">dynamic</code> ); ]
     [ <span><strong class="command">print-category</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
     [ <span><strong class="command">print-severity</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
     [ <span><strong class="command">print-time</strong></span> <code class="option">yes</code> or <code class="option">no</code>; ]
d1856 14
a1869 2
   [ <span><strong class="command">category</strong></span> <em class="replaceable"><code>category_name</code></em> {
     <em class="replaceable"><code>channel_name</code></em> ; [ <em class="replaceable"><code>channel_nam</code></em>e ; ... ]
d1873 22
a1894 7
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2553269"></a><span><strong class="command">logging</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">logging</strong></span> statement configures a wide
variety of logging options for the name server. Its <span><strong class="command">channel</strong></span> phrase
d1896 18
a1913 6
a name that can then be used with the <span><strong class="command">category</strong></span> phrase
to select how various classes of messages are logged.</p>
<p>Only one <span><strong class="command">logging</strong></span> statement is used to define
as many channels and categories as are wanted. If there is no <span><strong class="command">logging</strong></span> statement,
the logging configuration will be:</p>
<pre class="programlisting">logging {
d1917 14
a1930 4
</pre>
<p>In <span class="acronym">BIND</span> 9, the logging configuration is only established when
the entire configuration file has been parsed.  In <span class="acronym">BIND</span> 8, it was
established as soon as the <span><strong class="command">logging</strong></span> statement
d1933 27
a1959 8
channels, or to standard error if the "<code class="option">-g</code>" option
was specified.</p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2553321"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
<p>All log output goes to one or more <span class="emphasis"><em>channels</em></span>;
you can make as many of them as you want.</p>
<p>Every channel definition must include a destination clause that
d1964 14
a1977 4
<span><strong class="command">info</strong></span>), and whether to include a
<span><strong class="command">named</strong></span>-generated time stamp, the category name
and/or severity level (the default is not to include any).</p>
<p>The <span><strong class="command">null</strong></span> destination clause 
d1979 6
a1984 2
in that case, other options for the channel are meaningless.</p>
<p>The <span><strong class="command">file</strong></span> destination clause directs the channel
d1987 10
a1996 3
of the file will be saved each time the file is opened.</p>
<p>If you use the <span><strong class="command">versions</strong></span> log file option, then
<span><strong class="command">named</strong></span> will retain that many backup versions of the file by
d1998 30
a2027 6
of the file <code class="filename">lamers.log</code> then just before it is opened
<code class="filename">lamers.log.1</code> is renamed to
<code class="filename">lamers.log.2</code>, <code class="filename">lamers.log.0</code> is renamed
to <code class="filename">lamers.log.1</code>, and <code class="filename">lamers.log</code> is
renamed to <code class="filename">lamers.log.0</code>.
You can say <span><strong class="command">versions unlimited</strong></span> to not limit
d2029 4
a2032 1
If a <span><strong class="command">size</strong></span> option is associated with the log file,
d2035 14
a2048 4
log file is simply appended.</p>
<p>The <span><strong class="command">size</strong></span> option for files is used to limit log
growth. If the file ever exceeds the size, then <span><strong class="command">named</strong></span> will
stop writing to the file unless it has a <span><strong class="command">versions</strong></span> option
d2051 4
a2054 1
<span><strong class="command">versions</strong></span> option, no more data will be written to the log
d2057 13
a2069 4
file.</p>
<p>Example usage of the <span><strong class="command">size</strong></span> and
<span><strong class="command">versions</strong></span> options:</p>
<pre class="programlisting">channel an_example_channel {
d2074 6
a2079 2
</pre>
<p>The <span><strong class="command">syslog</strong></span> destination clause directs the
d2081 72
a2152 9
syslog facility as described in the <span><strong class="command">syslog</strong></span> man
page. Known facilities are <span><strong class="command">kern</strong></span>, <span><strong class="command">user</strong></span>,
<span><strong class="command">mail</strong></span>, <span><strong class="command">daemon</strong></span>, <span><strong class="command">auth</strong></span>,
<span><strong class="command">syslog</strong></span>, <span><strong class="command">lpr</strong></span>, <span><strong class="command">news</strong></span>,
<span><strong class="command">uucp</strong></span>, <span><strong class="command">cron</strong></span>, <span><strong class="command">authpriv</strong></span>,
<span><strong class="command">ftp</strong></span>, <span><strong class="command">local0</strong></span>, <span><strong class="command">local1</strong></span>,
<span><strong class="command">local2</strong></span>, <span><strong class="command">local3</strong></span>, <span><strong class="command">local4</strong></span>,
<span><strong class="command">local5</strong></span>, <span><strong class="command">local6</strong></span> and
<span><strong class="command">local7</strong></span>, however not all facilities are supported on
d2154 25
a2178 6
How <span><strong class="command">syslog</strong></span> will handle messages sent to
this facility is described in the <span><strong class="command">syslog.conf</strong></span> man
page. If you have a system which uses a very old version of <span><strong class="command">syslog</strong></span> that
only uses two arguments to the <span><strong class="command">openlog()</strong></span> function,
then this clause is silently ignored.</p>
<p>The <span><strong class="command">severity</strong></span> clause works like <span><strong class="command">syslog</strong></span>'s
d2180 4
a2183 1
straight to a file rather than using <span><strong class="command">syslog</strong></span>.
d2186 9
a2194 2
will be accepted.</p>
<p>If you are using <span><strong class="command">syslog</strong></span>, then the <span><strong class="command">syslog.conf</strong></span> priorities
d2196 38
a2233 7
defining a channel facility and severity as <span><strong class="command">daemon</strong></span> and <span><strong class="command">debug</strong></span> but
only logging <span><strong class="command">daemon.warning</strong></span> via <span><strong class="command">syslog.conf</strong></span> will
cause messages of severity <span><strong class="command">info</strong></span> and <span><strong class="command">notice</strong></span> to
be dropped. If the situation were reversed, with <span><strong class="command">named</strong></span> writing
messages of only <span><strong class="command">warning</strong></span> or higher, then <span><strong class="command">syslogd</strong></span> would
print all messages it received from the channel.</p>
<p>The <span><strong class="command">stderr</strong></span> destination clause directs the
d2236 3
a2238 2
when debugging a configuration.</p>
<p>The server can supply extensive debugging information when
d2241 12
a2252 3
level is set either by starting the <span><strong class="command">named</strong></span> server
with the <code class="option">-d</code> flag followed by a positive integer,
or by running <span><strong class="command">rndc trace</strong></span>.
d2254 5
a2258 2
can be set to zero, and debugging mode turned off, by running <span><strong class="command">ndc
notrace</strong></span>. All debugging messages in the server have a debug
d2260 4
a2263 2
that specify a specific debug severity, for example:</p>
<pre class="programlisting">channel specific_debug_level {
d2267 3
a2269 2
</pre>
<p>will get debugging output of level 3 or less any time the
d2271 34
a2304 9
level. Channels with <span><strong class="command">dynamic</strong></span> severity use the
server's global debug level to determine what messages to print.</p>
<p>If <span><strong class="command">print-time</strong></span> has been turned on, then
the date and time will be logged. <span><strong class="command">print-time</strong></span> may
be specified for a <span><strong class="command">syslog</strong></span> channel, but is usually
pointless since <span><strong class="command">syslog</strong></span> also prints the date and
time. If <span><strong class="command">print-category</strong></span> is requested, then the
category of the message will be logged as well. Finally, if <span><strong class="command">print-severity</strong></span> is
on, then the severity level of the message will be logged. The <span><strong class="command">print-</strong></span> options may
d2306 24
a2329 8
order: time, category, severity. Here is an example where all three <span><strong class="command">print-</strong></span> options
are on:</p>
<p><code class="computeroutput">28-Feb-2000 15:05:32.863 general: notice: running</code></p>
<p>There are four predefined channels that are used for
<span><strong class="command">named</strong></span>'s default logging as follows. How they are
used is described in <a href="Bv9ARM.ch06.html#the_category_phrase" title="The category Phrase">the section called &#8220;The <span><strong class="command">category</strong></span> Phrase&#8221;</a>.
</p>
<pre class="programlisting">channel default_syslog {
d2357 6
a2362 2
</pre>
<p>The <span><strong class="command">default_debug</strong></span> channel has the special
d2364 22
a2385 6
nonzero.  It normally writes to a file <code class="filename">named.run</code>
in the server's working directory.</p>
<p>For security reasons, when the "<code class="option">-u</code>"
command line option is used, the <code class="filename">named.run</code> file
is created only after <span><strong class="command">named</strong></span> has changed to the
new UID, and any debug output generated while <span><strong class="command">named</strong></span> is
d2387 7
a2393 3
to capture this output, you must run the server with the "<code class="option">-g</code>"
option and redirect standard error to a file.</p>
<p>Once a channel is defined, it cannot be redefined. Thus you
d2395 15
a2409 6
the default logging by pointing categories at channels you have defined.</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="the_category_phrase"></a>The <span><strong class="command">category</strong></span> Phrase</h4></div></div></div>
<p>There are many categories, so you can send the logs you want
d2412 4
a2415 1
in that category will be sent to the <span><strong class="command">default</strong></span> category
d2417 7
a2423 4
"default default" is used:</p>
<pre class="programlisting">category default { default_syslog; default_debug; };
</pre>
<p>As an example, let's say you want to log security events to
d2425 4
a2428 2
specify the following:</p>
<pre class="programlisting">channel my_security_channel {
d2436 9
a2444 3
};</pre>
<p>To discard all messages in a category, specify the <span><strong class="command">null</strong></span> channel:</p>
<pre class="programlisting">category xfer-out { null; };
d2446 3
a2448 2
</pre>
<p>Following are the available categories and brief descriptions
d2450 27
a2476 10
categories may be added in future <span class="acronym">BIND</span> releases.</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">default</strong></span></p></td>
<td><p>The default category defines the logging
d2478 142
a2619 46
defined.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">general</strong></span></p></td>
<td><p>The catch-all. Many things still aren't
classified into categories, and they all end up here.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">database</strong></span></p></td>
<td><p>Messages relating to the databases used
internally by the name server to store zone and cache data.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">security</strong></span></p></td>
<td><p>Approval and denial of requests.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">config</strong></span></p></td>
<td><p>Configuration file parsing and processing.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">resolver</strong></span></p></td>
<td><p>DNS resolution, such as the recursive
lookups performed on behalf of clients by a caching name server.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">xfer-in</strong></span></p></td>
<td><p>Zone transfers the server is receiving.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">xfer-out</strong></span></p></td>
<td><p>Zone transfers the server is sending.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">notify</strong></span></p></td>
<td><p>The NOTIFY protocol.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">client</strong></span></p></td>
<td><p>Processing of client requests.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">unmatched</strong></span></p></td>
<td><p>Messages that named was unable to determine the
class of or for which there was no matching <span><strong class="command">view</strong></span>.
A one line summary is also logged to the <span><strong class="command">client</strong></span> category.
d2621 66
a2686 21
the <span><strong class="command">null</strong></span> channel.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">network</strong></span></p></td>
<td><p>Network operations.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">update</strong></span></p></td>
<td><p>Dynamic updates.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">update-security</strong></span></p></td>
<td><p>Approval and denial of update requests.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">queries</strong></span></p></td>
<td>
<p>Specify where queries should be logged to.</p>
<p>
At startup, specifing the category <span><strong class="command">queries</strong></span> will also
enable query logging unless <span><strong class="command">querylog</strong></span> option has been
d2688 4
a2691 3
</p>
<p>
The query log entry reports the client's IP address and port number.  The
d2694 27
a2720 10
query was signed (S).</p>
<p><code class="computeroutput">client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</code>
</p>
<p><code class="computeroutput">client ::1#62537: query: www.example.net IN AAAA -SE</code>
</p>
</td>
</tr>
<tr>
<td><p><span><strong class="command">dispatch</strong></span></p></td>
<td><p>Dispatching of incoming packets to the
d2722 28
a2749 10
</p></td>
</tr>
<tr>
<td><p><span><strong class="command">dnssec</strong></span></p></td>
<td><p>DNSSEC and TSIG protocol processing.
</p></td>
</tr>
<tr>
<td><p><span><strong class="command">lame-servers</strong></span></p></td>
<td><p>Lame servers.  These are misconfigurations
d2752 14
a2765 5
</p></td>
</tr>
<tr>
<td><p><span><strong class="command">delegation-only</strong></span></p></td>
<td><p>Delegation only.  Logs queries that have have
d2767 111
a2877 24
a <span><strong class="command">delegation-only</strong></span> in a hint or stub zone declaration.
</p></td>
</tr>
</tbody>
</table></div>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2554474"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
<p> This is the grammar of the <span><strong class="command">lwres</strong></span>
statement in the <code class="filename">named.conf</code> file:</p>
<pre class="programlisting"><span><strong class="command">lwres</strong></span> {
    [<span class="optional"> listen-on { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> view <em class="replaceable"><code>view_name</code></em>; </span>]
    [<span class="optional"> search { <em class="replaceable"><code>domain_name</code></em> ; [<span class="optional"> <em class="replaceable"><code>domain_name</code></em> ; ... </span>] }; </span>]
    [<span class="optional"> ndots <em class="replaceable"><code>number</code></em>; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2554547"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">lwres</strong></span> statement configures the name
d2879 14
a2892 4
<a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.  There may be be multiple
<span><strong class="command">lwres</strong></span> statements configuring
lightweight resolver servers with different properties.</p>
<p>The <span><strong class="command">listen-on</strong></span> statement specifies a list of
d2896 6
a2901 2
port 921.</p>
<p>The <span><strong class="command">view</strong></span> statement binds this instance of a
d2905 28
a2932 8
used, and if there is no default view, an error is triggered.</p>
<p>The <span><strong class="command">search</strong></span> statement is equivalent to the
<span><strong class="command">search</strong></span> statement in
<code class="filename">/etc/resolv.conf</code>.  It provides a list of domains
which are appended to relative names in queries.</p>
<p>The <span><strong class="command">ndots</strong></span> statement is equivalent to the
<span><strong class="command">ndots</strong></span> statement in
<code class="filename">/etc/resolv.conf</code>.  It indicates the minimum
d2934 1072
a4005 137
exact match lookup before search path elements are appended.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2554610"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">
<span><strong class="command">masters</strong></span> <em class="replaceable"><code>name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; 
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2554653"></a><span><strong class="command">masters</strong></span> Statement Definition and Usage </h3></div></div></div>
<p><span><strong class="command">masters</strong></span> lists allow for a common set of masters
to be easily used by multiple stub and slave zones.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2554668"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
<p>This is the grammar of the <span><strong class="command">options</strong></span>
statement in the <code class="filename">named.conf</code> file:</p>
<pre class="programlisting">options {
    [<span class="optional"> version <em class="replaceable"><code>version_string</code></em>; </span>]
    [<span class="optional"> hostname <em class="replaceable"><code>hostname_string</code></em>; </span>]
    [<span class="optional"> server-id <em class="replaceable"><code>server_id_string</code></em>; </span>]
    [<span class="optional"> directory <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> named-xfer <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> tkey-domain <em class="replaceable"><code>domainname</code></em>; </span>]
    [<span class="optional"> tkey-dhkey <em class="replaceable"><code>key_name</code></em> <em class="replaceable"><code>key_tag</code></em>; </span>]
    [<span class="optional"> dump-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> memstatistics-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> pid-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> statistics-file <em class="replaceable"><code>path_name</code></em>; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> auth-nxdomain <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> deallocate-on-exit <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em>; </span>]
    [<span class="optional"> fake-iquery <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> fetch-glue <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> flush-zones-on-shutdown <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> has-old-clients <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> host-statistics <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> host-statistics-max <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> minimal-responses <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> multiple-cnames <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em>; </span>]
    [<span class="optional"> recursion <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> rfc2308-type1 <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> use-id-pool <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-enable <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> dnssec-lookaside <em class="replaceable"><code>domain</code></em> trust-anchor <em class="replaceable"><code>domain</code></em>; </span>]
    [<span class="optional"> dnssec-must-be-secure <em class="replaceable"><code>domain yes_or_no</code></em>; </span>]
    [<span class="optional"> forward ( <em class="replaceable"><code>only</code></em> | <em class="replaceable"><code>first</code></em> ); </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> dual-stack-servers [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>domain_name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ) ; ... }; </span>]
    [<span class="optional"> check-names ( <em class="replaceable"><code>master</code></em> | <em class="replaceable"><code>slave</code></em> | <em class="replaceable"><code>response</code></em> )( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-recursion { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-v6-synthesis { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> blackhole { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> avoid-v4-udp-ports { <em class="replaceable"><code>port_list</code></em> }; </span>]
    [<span class="optional"> avoid-v6-udp-ports { <em class="replaceable"><code>port_list</code></em> }; </span>]
    [<span class="optional"> listen-on [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em> </span>] { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> listen-on-v6 [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em> </span>] { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> query-source [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
    [<span class="optional"> query-source-v6 [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> tcp-clients <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> recursive-clients <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> serial-query-rate <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> serial-queries <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> tcp-listen-queue <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfer-format <em class="replaceable"><code>( one-answer | many-answers )</code></em>; </span>]
    [<span class="optional"> transfers-in  <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfers-out <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfers-per-ns <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-journal-size <em class="replaceable"><code>size_spec</code></em>; </span>]
    [<span class="optional"> coresize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> datasize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> files <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> stacksize <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> cleaning-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> heartbeat-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> interface-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> statistics-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> topology { <em class="replaceable"><code>address_match_list</code></em> }</span>];
    [<span class="optional"> sortlist { <em class="replaceable"><code>address_match_list</code></em> }</span>];
    [<span class="optional"> rrset-order { <em class="replaceable"><code>order_spec</code></em> ; [<span class="optional"> <em class="replaceable"><code>order_spec</code></em> ; ... </span>] </span>] };
    [<span class="optional"> lame-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-ncache-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-cache-ttl <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-roots <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> use-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> provide-ixfr <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> request-ixfr <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> treat-cr-as-space <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> port <em class="replaceable"><code>ip_port</code></em>; </span>]
    [<span class="optional"> additional-from-auth <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> additional-from-cache <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> random-device <em class="replaceable"><code>path_name</code></em> ; </span>]
    [<span class="optional"> max-cache-size <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> match-mapped-addresses <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> preferred-glue ( <em class="replaceable"><code>A</code></em> | <em class="replaceable"><code>AAAA</code></em> | <em class="replaceable"><code>NONE</code></em> ); </span>]
    [<span class="optional"> edns-udp-size <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> root-delegation-only [<span class="optional"> exclude { <em class="replaceable"><code>namelist</code></em> } </span>] ; </span>]
    [<span class="optional"> querylog <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> disable-algorithms <em class="replaceable"><code>domain</code></em> { <em class="replaceable"><code>algorithm</code></em>; [<span class="optional"> <em class="replaceable"><code>algorithm</code></em>; </span>] }; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="options"></a><span><strong class="command">options</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">options</strong></span> statement sets up global options
to be used by <span class="acronym">BIND</span>. This statement may appear only
once in a configuration file. If there is no <span><strong class="command">options</strong></span>
d4007 14
a4020 4
be used.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">directory</strong></span></span></dt>
<dd><p>The working directory of the server.
d4023 4
a4026 1
output files (e.g. <code class="filename">named.run</code>) is this directory.
d4028 14
a4041 4
to `<code class="filename">.</code>', the directory from which the server
was started. The directory specified should be an absolute path.</p></dd>
<dt><span class="term"><span><strong class="command">key-directory</strong></span></span></dt>
<dd><p>When performing dynamic update of secure zones, the
d4044 49
a4092 11
must be an absolute path.</p></dd>
<dt><span class="term"><span><strong class="command">named-xfer</strong></span></span></dt>
<dd><p><span class="emphasis"><em>This option is obsolete.</em></span>
It was used in <span class="acronym">BIND</span> 8 to
specify the pathname to the <span><strong class="command">named-xfer</strong></span> program.
In <span class="acronym">BIND</span> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
needed; its functionality is built into the name server.</p></dd>
<dt><span class="term"><span><strong class="command">tkey-domain</strong></span></span></dt>
<dd><p>The domain appended to the names of all
shared keys generated with <span><strong class="command">TKEY</strong></span>. When a client
requests a <span><strong class="command">TKEY</strong></span> exchange, it may or may not specify
d4094 30
a4123 8
key will be "<code class="varname">client specified part</code>" + 
"<code class="varname">tkey-domain</code>".
Otherwise, the name of the shared key will be "<code class="varname">random hex
digits</code>" + "<code class="varname">tkey-domain</code>". In most cases,
the <span><strong class="command">domainname</strong></span> should be the server's domain
name.</p></dd>
<dt><span class="term"><span><strong class="command">tkey-dhkey</strong></span></span></dt>
<dd><p>The Diffie-Hellman key used by the server
d4125 4
a4128 1
of <span><strong class="command">TKEY</strong></span>. The server must be able to load the
d4130 10
a4139 3
most cases, the keyname should be the server's host name.</p></dd>
<dt><span class="term"><span><strong class="command">dump-file</strong></span></span></dt>
<dd><p>The pathname of the file the server dumps
d4141 17
a4157 4
<span><strong class="command">rndc dumpdb</strong></span>.
If not specified, the default is <code class="filename">named_dump.db</code>.</p></dd>
<dt><span class="term"><span><strong class="command">memstatistics-file</strong></span></span></dt>
<dd><p>The pathname of the file the server writes memory
d4159 17
a4175 4
the default is <code class="filename">named.memstats</code>.</p></dd>
<dt><span class="term"><span><strong class="command">pid-file</strong></span></span></dt>
<dd><p>The pathname of the file the server writes its process ID
in. If not specified, the default is <code class="filename">/var/run/named.pid</code>.
d4177 4
a4180 1
name server. Specifying <span><strong class="command">pid-file none</strong></span> disables the
d4182 4
a4185 1
existing one will be removed.  Note that <span><strong class="command">none</strong></span>
d4187 18
a4204 5
double quotes.</p></dd>
<dt><span class="term"><span><strong class="command">statistics-file</strong></span></span></dt>
<dd><p>The pathname of the file the server appends statistics
to when instructed to do so using <span><strong class="command">rndc stats</strong></span>.
If not specified, the default is <code class="filename">named.stats</code> in the
d4206 13
a4218 4
in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a></p></dd>
<dt><span class="term"><span><strong class="command">port</strong></span></span></dt>
<dd><p>
The UDP/TCP port number the server uses for 
d4223 10
a4232 4
</p></dd>
<dt><span class="term"><span><strong class="command">random-device</strong></span></span></dt>
<dd><p>
The source of entropy to be used by the server.  Entropy is primarily needed
d4237 4
a4240 1
<code class="filename">/dev/random</code>
d4242 4
a4245 1
<span><strong class="command">random-device</strong></span> option takes effect during
d4247 10
a4256 4
is ignored on subsequent reloads.</p></dd>
<dt><span class="term"><span><strong class="command">preferred-glue</strong></span></span></dt>
<dd><p>
If specified the listed type (A or AAAA) will be emitted before other glue
d4259 10
a4268 5
</p></dd>
<dt><span class="term"><span><strong class="command">root-delegation-only</strong></span></span></dt>
<dd>
<p>
Turn on enforcement of delegation-only in TLDs and root zones with an optional
d4270 7
a4276 6
</p>
<p>
Note some TLDs are NOT delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
</p>
<pre class="programlisting">
options {
d4279 14
a4292 6
</pre>
</dd>
<dt><span class="term"><span><strong class="command">disable-algorithms</strong></span></span></dt>
<dd><p>
Disable the specified DNSSEC algorithms at and below the specified name.
Multiple <span><strong class="command">disable-algorithms</strong></span> statements are allowed.
d4294 13
a4306 4
</p></dd>
<dt><span class="term"><span><strong class="command">dnssec-lookaside</strong></span></span></dt>
<dd><p>
When set <span><strong class="command">dnssec-lookaside</strong></span> provides the
d4309 4
a4312 1
deepest <span><strong class="command">dnssec-lookaside</strong></span>, and the normal dnssec validation
d4317 14
a4330 5
</p></dd>
<dt><span class="term"><span><strong class="command">dnssec-must-be-secure</strong></span></span></dt>
<dd><p>
Specify heirarchies which must / may not be secure (signed and validated).
If <strong class="userinput"><code>yes</code></strong> then named will only accept answers if they
d4332 4
a4335 1
If <strong class="userinput"><code>no</code></strong> then normal dnssec validation applies
d4337 39
a4375 10
The specified domain must be under a <span><strong class="command">trusted-key</strong></span> or
<span><strong class="command">dnssec-lookaside</strong></span> must be active.
</p></dd>
</dl></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="boolean_options"></a>Boolean Options</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">auth-nxdomain</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then the <span><strong class="command">AA</strong></span> bit
d4377 41
a4417 10
authoritative. The default is <strong class="userinput"><code>no</code></strong>; this is
a change from <span class="acronym">BIND</span> 8. If you are using very old DNS software, you
may need to set it to <strong class="userinput"><code>yes</code></strong>.</p></dd>
<dt><span class="term"><span><strong class="command">deallocate-on-exit</strong></span></span></dt>
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to enable checking
for memory leaks on exit. <span class="acronym">BIND</span> 9 ignores the option and always performs
the checks.</p></dd>
<dt><span class="term"><span><strong class="command">dialup</strong></span></span></dt>
<dd>
<p>If <strong class="userinput"><code>yes</code></strong>, then the
d4422 4
a4425 1
happens in a short interval, once every <span><strong class="command">heartbeat-interval</strong></span> and
d4427 24
a4450 7
zone maintenance traffic. The default is <strong class="userinput"><code>no</code></strong>.</p>
<p>The <span><strong class="command">dialup</strong></span> option
may also be specified in the <span><strong class="command">view</strong></span> and 
<span><strong class="command">zone</strong></span> statements,
in which case it overrides the global <span><strong class="command">dialup</strong></span>
option.</p>
<p>If the zone is a master zone then the server will send out a NOTIFY 
d4455 9
a4463 2
<span><strong class="command">notify</strong></span> and <span><strong class="command">also-notify</strong></span>.</p>
<p>If the
d4466 19
a4484 6
<span><strong class="command">heartbeat-interval</strong></span> expires in addition to sending
NOTIFY requests.</p>
<p>Finer control can be achieved by using
<strong class="userinput"><code>notify</code></strong> which only sends NOTIFY messages,
<strong class="userinput"><code>notify-passive</code></strong> which sends NOTIFY messages and
suppresses the normal refresh queries, <strong class="userinput"><code>refresh</code></strong>
d4486 188
a4673 60
when the <span><strong class="command">heartbeat-interval</strong></span> expires, and
<strong class="userinput"><code>passive</code></strong> which just disables normal refresh
processing.</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p>dialup mode</p></td>
<td><p>normal refresh</p></td>
<td><p>heart-beat refresh</p></td>
<td><p>heart-beat notify</p></td>
</tr>
<tr>
<td><p><span><strong class="command">no</strong></span> (default)</p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
<td><p>no</p></td>
</tr>
<tr>
<td><p><span><strong class="command">yes</strong></span></p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
<td><p>yes</p></td>
</tr>
<tr>
<td><p><span><strong class="command">notify</strong></span></p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
</tr>
<tr>
<td><p><span><strong class="command">refresh</strong></span></p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
<td><p>no</p></td>
</tr>
<tr>
<td><p><span><strong class="command">passive</strong></span></p></td>
<td><p>no</p></td>
<td><p>no</p></td>
<td><p>no</p></td>
</tr>
<tr>
<td><p><span><strong class="command">notify-passive</strong></span></p></td>
<td><p>no</p></td>
<td><p>no</p></td>
<td><p>yes</p></td>
</tr>
</tbody>
</table></div>
<p>Note that normal NOTIFY processing is not affected by
<span><strong class="command">dialup</strong></span>.</p>
</dd>
<dt><span class="term"><span><strong class="command">fake-iquery</strong></span></span></dt>
<dd><p>In <span class="acronym">BIND</span> 8, this option
d4675 18
a4692 5
IQUERY. <span class="acronym">BIND</span> 9 never does IQUERY simulation.
</p></dd>
<dt><span class="term"><span><strong class="command">fetch-glue</strong></span></span></dt>
<dd><p>This option is obsolete.
In BIND 8, <strong class="userinput"><code>fetch-glue yes</code></strong>
d4696 10
a4705 3
and BIND 9 never does it.</p></dd>
<dt><span class="term"><span><strong class="command">flush-zones-on-shutdown</strong></span></span></dt>
<dd><p>When the nameserver exits due receiving SIGTERM,
d4707 24
a4730 5
<span><strong class="command">flush-zones-on-shutdown</strong></span> <strong class="userinput"><code>no</code></strong>.
</p></dd>
<dt><span class="term"><span><strong class="command">has-old-clients</strong></span></span></dt>
<dd><p>This option was incorrectly implemented
in <span class="acronym">BIND</span> 8, and is ignored by <span class="acronym">BIND</span> 9.
d4733 31
a4763 6
<span><strong class="command">has-old-clients</strong></span> <strong class="userinput"><code>yes</code></strong>, specify
the two separate options <span><strong class="command">auth-nxdomain</strong></span> <strong class="userinput"><code>yes</code></strong>
and <span><strong class="command">rfc2308-type1</strong></span> <strong class="userinput"><code>no</code></strong> instead.
</p></dd>
<dt><span class="term"><span><strong class="command">host-statistics</strong></span></span></dt>
<dd><p>In BIND 8, this enables keeping of
d4766 24
a4789 5
</p></dd>
<dt><span class="term"><span><strong class="command">maintain-ixfr-base</strong></span></span></dt>
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
 It was used in <span class="acronym">BIND</span> 8 to determine whether a transaction log was
kept for Incremental Zone Transfer. <span class="acronym">BIND</span> 9 maintains a transaction
d4791 20
a4810 4
transfers, use <span><strong class="command">provide-ixfr</strong></span> <strong class="userinput"><code>no</code></strong>.
</p></dd>
<dt><span class="term"><span><strong class="command">minimal-responses</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then when generating
d4814 17
a4830 4
The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
<dt><span class="term"><span><strong class="command">multiple-cnames</strong></span></span></dt>
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to allow
d4832 4
a4835 1
DNS standards.  <span class="acronym">BIND</span> 9.2 always strictly
d4837 13
a4849 4
</p></dd>
<dt><span class="term"><span><strong class="command">notify</strong></span></span></dt>
<dd>
<p>If <strong class="userinput"><code>yes</code></strong> (the default),
d4851 4
a4854 1
changes, see <a href="Bv9ARM.ch04.html#notify" title="Notify">the section called &#8220;Notify&#8221;</a>.  The messages are sent to the
d4857 32
a4888 11
<span><strong class="command">also-notify</strong></span> option.
</p>
<p>
If <strong class="userinput"><code>explicit</code></strong>, notifies are sent only to
servers explicitly listed using <span><strong class="command">also-notify</strong></span>.
If <strong class="userinput"><code>no</code></strong>, no notifies are sent.
</p>
<p>
The <span><strong class="command">notify</strong></span> option may also be
specified in the <span><strong class="command">zone</strong></span> statement,
in which case it overrides the <span><strong class="command">options notify</strong></span> statement.
d4890 13
a4902 4
to crash.</p>
</dd>
<dt><span class="term"><span><strong class="command">recursion</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, and a
d4906 8
a4913 2
referral response. The default is <strong class="userinput"><code>yes</code></strong>.
Note that setting <span><strong class="command">recursion no</strong></span> does not prevent
d4918 17
a4934 5
See also <span><strong class="command">fetch-glue</strong></span> above.
</p></dd>
<dt><span class="term"><span><strong class="command">rfc2308-type1</strong></span></span></dt>
<dd>
<p>Setting this to <strong class="userinput"><code>yes</code></strong> will
d4936 49
a4984 12
answers. The default is <strong class="userinput"><code>no</code></strong>.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>Not yet implemented in <span class="acronym">BIND</span> 9.</p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">use-id-pool</strong></span></span></dt>
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
<span class="acronym">BIND</span> 9 always allocates query IDs from a pool.
</p></dd>
<dt><span class="term"><span><strong class="command">zone-statistics</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, the server will collect
d4986 35
a5020 7
on a per-zone basis by specifying <span><strong class="command">zone-statistics no</strong></span>
in the <span><strong class="command">zone</strong></span> statement).  These statistics may be accessed
using <span><strong class="command">rndc stats</strong></span>, which will dump them to the file listed
in the <span><strong class="command">statistics-file</strong></span>.  See also <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
</p></dd>
<dt><span class="term"><span><strong class="command">use-ixfr</strong></span></span></dt>
<dd><p><span class="emphasis"><em>This option is obsolete</em></span>.
d5022 65
a5086 19
the information on the <span><strong class="command">provide-ixfr</strong></span> option
in <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>. See also
<a href="Bv9ARM.ch04.html#incremental_zone_transfers" title="Incremental Zone Transfers (IXFR)">the section called &#8220;Incremental Zone Transfers (IXFR)&#8221;</a>.
</p></dd>
<dt><span class="term"><span><strong class="command">provide-ixfr</strong></span></span></dt>
<dd><p>
See the description of
<span><strong class="command">provide-ixfr</strong></span> in
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">request-ixfr</strong></span></span></dt>
<dd><p>
See the description of
<span><strong class="command">request-ixfr</strong></span> in
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">treat-cr-as-space</strong></span></span></dt>
<dd><p>This option was used in <span class="acronym">BIND</span> 8 to make
the server treat carriage return ("<span><strong class="command">\r</strong></span>") characters the same way
d5089 24
a5112 9
on an NT or DOS machine. In <span class="acronym">BIND</span> 9, both UNIX "<span><strong class="command">\n</strong></span>"
and NT/DOS "<span><strong class="command">\r\n</strong></span>" newlines are always accepted,
and the option is ignored.</p></dd>
<dt>
<span class="term"><span><strong class="command">additional-from-auth</strong></span>, </span><span class="term"><span><strong class="command">additional-from-cache</strong></span></span>
</dt>
<dd>
<p>
These options control the behavior of an authoritative server when
d5115 6
a5120 3
</p>
<p>
When both of these options are set to <strong class="userinput"><code>yes</code></strong> 
d5132 14
a5145 5
</p>
<p>
For example, if a query asks for an MX record for host <code class="literal">foo.example.com</code>,
and the record found is "<code class="literal">MX 10 mail.example.net</code>", normally the address
records (A and AAAA) for <code class="literal">mail.example.net</code> will be provided as well,
d5147 4
a5150 1
Setting these options to <span><strong class="command">no</strong></span> disables this behavior and makes
d5152 3
a5154 3
</p>
<p>
These options are intended for use in authoritative-only 
d5156 8
a5163 2
them to <span><strong class="command">no</strong></span> without also specifying
<span><strong class="command">recursion no</strong></span> will cause the server to
d5165 6
a5170 3
</p>
<p>
Specifying <span><strong class="command">additional-from-cache no</strong></span> actually
d5175 3
a5177 3
</p>
<p>
When a name server is non-recursively queried for a name that is not
d5182 4
a5185 1
referrals when <span><strong class="command">additional-from-cache no</strong></span>
d5189 13
a5201 4
</p>
</dd>
<dt><span class="term"><span><strong class="command">match-mapped-addresses</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, then an
d5210 10
a5219 5
</p></dd>
<dt><span class="term"><span><strong class="command">ixfr-from-differences</strong></span></span></dt>
<dd>
<p>
When 'yes' and the server loads a new version of a master
d5226 3
a5228 3
</p>
<p>
By allowing incremental zone transfers to be used for
d5237 10
a5246 5
</p>
</dd>
<dt><span class="term"><span><strong class="command">multi-master</strong></span></span></dt>
<dd><p>
This should be set when you have multiple masters for a zone and the
d5249 17
a5265 5
has.  The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
<dt><span class="term"><span><strong class="command">dnssec-enable</strong></span></span></dt>
<dd><p>
Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>
d5267 32
a5298 12
The default is <strong class="userinput"><code>no</code></strong>.
</p></dd>
<dt><span class="term"><span><strong class="command">querylog</strong></span></span></dt>
<dd><p>
Specify whether query logging should be started when named start.
If <span><strong class="command">querylog</strong></span> is not specified then the query logging
is determined by the presence of the logging category <span><strong class="command">queries</strong></span>.
</p></dd>
<dt><span class="term"><span><strong class="command">check-names</strong></span></span></dt>
<dd>
<p>
This option is used to restrict the character set and syntax of
d5301 25
a5325 6
<span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.
For <span><strong class="command">slave</strong></span> zones the default is <span><strong class="command">warn</strong></span>.
For answer received from the network (<span><strong class="command">response</strong></span>)
the default is <span><strong class="command">ignore</strong></span>.
</p>
<p>The rules for legal hostnames / mail domains are derived from RFC 952
d5327 6
a5332 2
</p>
<p><span><strong class="command">check-names</strong></span> applies to the owner names of A, AAA and
d5337 15
a5351 8
</p>
</dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2557350"></a>Forwarding</h4></div></div></div>
<p>The forwarding facility can be used to create a large site-wide
d5357 18
a5374 5
its cache.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">forward</strong></span></span></dt>
<dd><p>This option is only meaningful if the
forwarders list is not empty. A value of <code class="varname">first</code>,
d5377 4
a5380 1
the answer itself. If <code class="varname">only</code> is specified, the
d5382 10
a5391 3
</p></dd>
<dt><span class="term"><span><strong class="command">forwarders</strong></span></span></dt>
<dd><p>Specifies the IP addresses to be used
d5393 6
a5398 3
</p></dd>
</dl></div>
<p>Forwarding can also be configured on a per-domain basis, allowing
d5401 19
a5419 9
or have a different <span><strong class="command">forward only/first</strong></span> behavior,
or not forward at all, see <a href="Bv9ARM.ch06.html#zone_statement_grammar" title="zone
Statement Grammar">the section called &#8220;<span><strong class="command">zone</strong></span>
Statement Grammar&#8221;</a>.</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2557400"></a>Dual-stack Servers</h4></div></div></div>
<p>Dual-stack servers are used as servers of last resort to work around
d5421 14
a5434 4
on the host machine.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">dual-stack-servers</strong></span></span></dt>
<dd><p>Specifies host names / addresses of machines with access to
d5437 4
a5440 1
stacked then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
d5442 36
a5477 12
(e.g. <span><strong class="command">named -4</strong></span>).</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="access_control"></a>Access Control</h4></div></div></div>
<p>Access to the server can be restricted based on the IP address
of the requesting system. See <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a> for
details on how to specify IP address lists.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">allow-notify</strong></span></span></dt>
<dd><p>Specifies which hosts are allowed to
d5480 12
a5491 3
<span><strong class="command">allow-notify</strong></span> may also be specified in the
<span><strong class="command">zone</strong></span> statement, in which case it overrides the
<span><strong class="command">options allow-notify</strong></span> statement.  It is only meaningful
d5493 32
a5524 9
only from a zone's master.</p></dd>
<dt><span class="term"><span><strong class="command">allow-query</strong></span></span></dt>
<dd><p>Specifies which hosts are allowed to
ask ordinary DNS questions. <span><strong class="command">allow-query</strong></span> may also
be specified in the <span><strong class="command">zone</strong></span> statement, in which
case it overrides the <span><strong class="command">options allow-query</strong></span> statement. If
not specified, the default is to allow queries from all hosts.</p></dd>
<dt><span class="term"><span><strong class="command">allow-recursion</strong></span></span></dt>
<dd><p>Specifies which hosts are allowed to
d5529 10
a5538 4
</p></dd>
<dt><span class="term"><span><strong class="command">allow-update-forwarding</strong></span></span></dt>
<dd>
<p>Specifies which hosts are allowed to
d5540 4
a5543 1
master.  The default is <strong class="userinput"><code>{ none; }</code></strong>, which 
d5546 12
a5557 3
<strong class="userinput"><code>allow-update-forwarding { any; };</code></strong>.
Specifying values other than <strong class="userinput"><code>{ none; }</code></strong> or
<strong class="userinput"><code>{ any; }</code></strong> is usually counterproductive, since
d5559 3
a5561 2
master server, not the slaves.</p>
<p>Note that enabling the update forwarding feature on a slave server
d5563 14
a5576 5
access control to attacks; see <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a>
for more details.</p>
</dd>
<dt><span class="term"><span><strong class="command">allow-v6-synthesis</strong></span></span></dt>
<dd><p>This option was introduced for the smooth transition from AAAA
d5581 32
a5612 9
</p></dd>
<dt><span class="term"><span><strong class="command">allow-transfer</strong></span></span></dt>
<dd><p>Specifies which hosts are allowed to
receive zone transfers from the server. <span><strong class="command">allow-transfer</strong></span> may
also be specified in the <span><strong class="command">zone</strong></span> statement, in which
case it overrides the <span><strong class="command">options allow-transfer</strong></span> statement.
If not specified, the default is to allow transfers to all hosts.</p></dd>
<dt><span class="term"><span><strong class="command">blackhole</strong></span></span></dt>
<dd><p>Specifies a list of addresses that the
d5614 29
a5642 9
from these addresses will not be responded to. The default is <strong class="userinput"><code>none</code></strong>.</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2557716"></a>Interfaces</h4></div></div></div>
<p>The interfaces and ports that the server will answer queries
from may be specified using the <span><strong class="command">listen-on</strong></span> option. <span><strong class="command">listen-on</strong></span> takes
an optional port, and an <code class="varname">address_match_list</code>.
d5644 10
a5653 4
match list. If a port is not specified, port 53 will be used.</p>
<p>Multiple <span><strong class="command">listen-on</strong></span> statements are allowed.
For example,</p>
<pre class="programlisting">listen-on { 5.6.7.8; };
d5655 3
a5657 2
</pre>
<p>will enable the name server on port 53 for the IP address
d5659 12
a5670 4
1.2 that is not 1.2.3.4.</p>
<p>If no <span><strong class="command">listen-on</strong></span> is specified, the
server will listen on port 53 on all interfaces.</p>
<p>The <span><strong class="command">listen-on-v6</strong></span> option is used to
d5672 14
a5685 6
for incoming queries sent using IPv6.</p>
<p>When </p>
<pre class="programlisting">{ any; }</pre>
<p> is specified
as the <code class="varname">address_match_list</code> for the
<span><strong class="command">listen-on-v6</strong></span> option,
d5691 3
a5693 2
the behavior is the same as that for IPv4.</p>
<p>A list of particular IPv6 addresses can also be specified, in which case
d5695 10
a5704 4
regardless of whether the desired API is supported by the system.</p>
<p>Multiple <span><strong class="command">listen-on-v6</strong></span> options can be used.
For example,</p>
<pre class="programlisting">listen-on-v6 { any; };
d5706 3
a5708 2
</pre>
<p>will enable the name server on port 53 for any IPv6 addresses
d5711 28
a5738 12
2001:db8::/32 (with separate sockets for each matched address.)</p>
<p>To make the server not listen on any IPv6 address, use</p>
<pre class="programlisting">listen-on-v6 { none; };
</pre>
<p>If no <span><strong class="command">listen-on-v6</strong></span> option is specified,
the server will not listen on any IPv6 address.</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2557804"></a>Query Address</h4></div></div></div>
<p>If the server doesn't know the answer to a question, it will
query other name servers. <span><strong class="command">query-source</strong></span> specifies
d5740 34
a5773 8
IPv6, there is a separate <span><strong class="command">query-source-v6</strong></span> option.
If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
a wildcard IP address (<span><strong class="command">INADDR_ANY</strong></span>) will be used.
If <span><strong class="command">port</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
a random unprivileged port will be used, <span><strong class="command">avoid-v4-udp-ports</strong></span>
and <span><strong class="command">avoid-v6-udp-ports</strong></span> can be used to prevent named
from selecting certain ports. The defaults are</p>
<pre class="programlisting">query-source address * port *;
d5775 12
a5786 4
</pre>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>The address specified in the <span><strong class="command">query-source</strong></span> option
d5789 34
a5822 12
unprivileged port.</p>
</div>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>See also <span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">notify-source</strong></span>.</p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="zone_transfers"></a>Zone Transfers</h4></div></div></div>
<p><span class="acronym">BIND</span> has mechanisms in place to facilitate zone transfers
d5824 14
a5837 4
system. The following options apply to zone transfers.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">also-notify</strong></span></span></dt>
<dd><p>Defines a global list of IP addresses of name servers
d5841 22
a5862 4
quickly converge on stealth servers. If an <span><strong class="command">also-notify</strong></span> list
is given in a <span><strong class="command">zone</strong></span> statement, it will override
the <span><strong class="command">options also-notify</strong></span> statement. When a <span><strong class="command">zone notify</strong></span> statement
is set to <span><strong class="command">no</strong></span>, the IP addresses in the global <span><strong class="command">also-notify</strong></span> list will
d5864 10
a5873 3
list (no global notification list).</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-in</strong></span></span></dt>
<dd><p>Inbound zone transfers running longer than
d5875 10
a5884 3
(2 hours).  The maximum value is 28 days (40320 minutes).</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-in</strong></span></span></dt>
<dd><p>Inbound zone transfers making no progress
d5886 10
a5895 3
(1 hour).  The maximum value is 28 days (40320 minutes).</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-out</strong></span></span></dt>
<dd><p>Outbound zone transfers running longer than
d5897 10
a5906 3
(2 hours).  The maximum value is 28 days (40320 minutes).</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-out</strong></span></span></dt>
<dd><p>Outbound zone transfers making no progress
d5908 10
a5917 3
hour).  The maximum value is 28 days (40320 minutes).</p></dd>
<dt><span class="term"><span><strong class="command">serial-query-rate</strong></span></span></dt>
<dd><p>Slave servers will periodically query master servers
d5921 4
a5924 1
sent.  The value of the <span><strong class="command">serial-query-rate</strong></span> option,
d5927 13
a5939 3
</p></dd>
<dt><span class="term"><span><strong class="command">serial-queries</strong></span></span></dt>
<dd><p>In BIND 8, the <span><strong class="command">serial-queries</strong></span> option
d5943 4
a5946 1
serial queries and ignores the <span><strong class="command">serial-queries</strong></span> option.
d5948 25
a5972 7
as defined using the <span><strong class="command">serial-query-rate</strong></span> option.
</p></dd>
<dt><span class="term"><span><strong class="command">transfer-format</strong></span></span></dt>
<dd><p>
Zone transfers can be sent using two different formats,
<span><strong class="command">one-answer</strong></span> and <span><strong class="command">many-answers</strong></span>.
The <span><strong class="command">transfer-format</strong></span> option is used
d5974 4
a5977 1
<span><strong class="command">one-answer</strong></span> uses one DNS message per
d5979 8
a5986 2
<span><strong class="command">many-answers</strong></span> packs as many resource records as
possible into a message. <span><strong class="command">many-answers</strong></span> is more
d5988 18
a6005 3
such as <span class="acronym">BIND</span> 9, <span class="acronym">BIND</span> 8.x and patched
versions of <span class="acronym">BIND</span> 4.9.5. The default is
<span><strong class="command">many-answers</strong></span>. <span><strong class="command">transfer-format</strong></span>
d6007 32
a6038 9
<span><strong class="command">server</strong></span> statement.
</p></dd>
<dt><span class="term"><span><strong class="command">transfers-in</strong></span></span></dt>
<dd><p>The maximum number of inbound zone transfers
that can be running concurrently. The default value is <code class="literal">10</code>.
Increasing <span><strong class="command">transfers-in</strong></span> may speed up the convergence
of slave zones, but it also may increase the load on the local system.</p></dd>
<dt><span class="term"><span><strong class="command">transfers-out</strong></span></span></dt>
<dd><p>The maximum number of outbound zone transfers
d6040 13
a6052 3
of the limit will be refused. The default value is <code class="literal">10</code>.</p></dd>
<dt><span class="term"><span><strong class="command">transfers-per-ns</strong></span></span></dt>
<dd><p>The maximum number of inbound zone transfers
d6054 7
a6060 1
The default value is <code class="literal">2</code>. Increasing <span><strong class="command">transfers-per-ns</strong></span> may
d6062 24
a6085 5
the load on the remote name server. <span><strong class="command">transfers-per-ns</strong></span> may
be overridden on a per-server basis by using the <span><strong class="command">transfers</strong></span> phrase
of the <span><strong class="command">server</strong></span> statement.</p></dd>
<dt><span class="term"><span><strong class="command">transfer-source</strong></span></span></dt>
<dd><p><span><strong class="command">transfer-source</strong></span> determines
d6092 4
a6095 1
in the remote end's <span><strong class="command">allow-transfer</strong></span> option for
d6097 4
a6100 1
sets the <span><strong class="command">transfer-source</strong></span> for all zones, but can
d6102 88
a6189 34
<span><strong class="command">transfer-source</strong></span> statement within the
<span><strong class="command">view</strong></span> or <span><strong class="command">zone</strong></span> block
in the configuration file.</p></dd>
<dt><span class="term"><span><strong class="command">transfer-source-v6</strong></span></span></dt>
<dd><p>The same as <span><strong class="command">transfer-source</strong></span>,
except zone transfers are performed using IPv6.</p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source</strong></span></span></dt>
<dd>
<p>
		  An alternate transfer source if the one listed in
		  <span><strong class="command">transfer-source</strong></span> fails and
		  <span><strong class="command">use-alt-transfer-source</strong></span> is
		  set.
		</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
		  If you do not wish the alternate transfer source
		  to be used you should set
		  <span><strong class="command">use-alt-transfer-source</strong></span>
		  appropriately and you should not depend upon
		  getting a answer back to the first refresh
		  query.
		</div>
</dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source-v6</strong></span></span></dt>
<dd><p>An alternate transfer source if the one listed in
<span><strong class="command">transfer-source-v6</strong></span> fails and
<span><strong class="command">use-alt-transfer-source</strong></span> is set.</p></dd>
<dt><span class="term"><span><strong class="command">use-alt-transfer-source</strong></span></span></dt>
<dd><p>Use the alternate transfer sources or not.  If views are
specified this defaults to <span><strong class="command">no</strong></span> otherwise it defaults to
<span><strong class="command">yes</strong></span> (for BIND 8 compatibility).</p></dd>
<dt><span class="term"><span><strong class="command">notify-source</strong></span></span></dt>
<dd><p><span><strong class="command">notify-source</strong></span> determines
d6192 12
a6203 3
This address must appear in the slave server's <span><strong class="command">masters</strong></span>
zone clause or in an <span><strong class="command">allow-notify</strong></span> clause.
This statement sets the <span><strong class="command">notify-source</strong></span> for all zones,
d6205 44
a6248 12
<span><strong class="command">notify-source</strong></span> statement within the <span><strong class="command">zone</strong></span>
or <span><strong class="command">view</strong></span> block in the configuration file.</p></dd>
<dt><span class="term"><span><strong class="command">notify-source-v6</strong></span></span></dt>
<dd><p>Like <span><strong class="command">notify-source</strong></span>,
but applies to notify messages sent to IPv6 addresses.</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2558398"></a>Bad UDP Port Lists</h4></div></div></div>
<p>
<span><strong class="command">avoid-v4-udp-ports</strong></span> and <span><strong class="command">avoid-v6-udp-ports</strong></span>
d6255 12
a6266 6
</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2558414"></a>Operating System Resource Limits</h4></div></div></div>
<p>The server's usage of many system resources can be limited.
d6268 16
a6283 4
example, <span><strong class="command">1G</strong></span> can be used instead of
<span><strong class="command">1073741824</strong></span> to specify a limit of one
gigabyte. <span><strong class="command">unlimited</strong></span> requests unlimited use, or the
maximum available amount. <span><strong class="command">default</strong></span> uses the limit
d6285 9
a6293 2
<span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.</p>
<p>The following options set operating system resource limits for
d6296 31
a6326 8
unsupported limit is used.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">coresize</strong></span></span></dt>
<dd><p>The maximum size of a core dump. The default
is <code class="literal">default</code>.</p></dd>
<dt><span class="term"><span><strong class="command">datasize</strong></span></span></dt>
<dd><p>The maximum amount of data memory the server
may use. The default is <code class="literal">default</code>.
d6336 8
a6343 2
<span><strong class="command">max-cache-size</strong></span> and 
<span><strong class="command">recursive-clients</strong></span>
d6345 42
a6386 14
</p></dd>
<dt><span class="term"><span><strong class="command">files</strong></span></span></dt>
<dd><p>The maximum number of files the server
may have open concurrently. The default is <code class="literal">unlimited</code>.
</p></dd>
<dt><span class="term"><span><strong class="command">stacksize</strong></span></span></dt>
<dd><p>The maximum amount of stack memory the server
may use. The default is <code class="literal">default</code>.</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2558584"></a>Server  Resource Limits</h4></div></div></div>
<p>The following options set limits on the server's
d6388 14
a6401 4
server rather than the operating system.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">max-ixfr-log-size</strong></span></span></dt>
<dd><p>This option is obsolete; it is accepted
d6403 4
a6406 1
<span><strong class="command">max-journal-size</strong></span> performs a similar
d6408 14
a6421 4
</p></dd>
<dt><span class="term"><span><strong class="command">max-journal-size</strong></span></span></dt>
<dd><p>Sets a maximum size for each journal file
(<a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file approaches
d6424 13
a6436 3
<code class="literal">unlimited</code>.</p></dd>
<dt><span class="term"><span><strong class="command">host-statistics-max</strong></span></span></dt>
<dd><p>In BIND 8, specifies the maximum number of host statistic
d6439 10
a6448 3
</p></dd>
<dt><span class="term"><span><strong class="command">recursive-clients</strong></span></span></dt>
<dd><p>The maximum number of simultaneous recursive lookups
d6450 4
a6453 1
<code class="literal">1000</code>.  Because each recursing client uses a fair
d6455 4
a6458 1
<span><strong class="command">recursive-clients</strong></span> option may have to be decreased
d6460 10
a6469 3
</p></dd>
<dt><span class="term"><span><strong class="command">tcp-clients</strong></span></span></dt>
<dd><p>The maximum number of simultaneous client TCP
d6471 13
a6483 3
The default is <code class="literal">100</code>.</p></dd>
<dt><span class="term"><span><strong class="command">max-cache-size</strong></span></span></dt>
<dd><p>The maximum amount of memory to use for the
d6488 4
a6491 1
view.  The default is <code class="literal">unlimited</code>, meaning that 
d6493 10
a6502 3
</p></dd>
<dt><span class="term"><span><strong class="command">tcp-listen-queue</strong></span></span></dt>
<dd><p>The listen queue depth.  The default and minimum is 3.
d6507 30
a6536 10
</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2558765"></a>Periodic Task Intervals</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">cleaning-interval</strong></span></span></dt>
<dd><p>The server will remove expired resource records
from the cache every <span><strong class="command">cleaning-interval</strong></span> minutes.
d6538 14
a6551 4
If set to 0, no  periodic cleaning will occur.</p></dd>
<dt><span class="term"><span><strong class="command">heartbeat-interval</strong></span></span></dt>
<dd><p>The server will perform zone maintenance tasks
for all zones marked as <span><strong class="command">dialup</strong></span> whenever this
d6554 14
a6567 4
If set to 0, no zone maintenance for these zones will occur.</p></dd>
<dt><span class="term"><span><strong class="command">interface-interval</strong></span></span></dt>
<dd><p>The server will scan the network interface list
every <span><strong class="command">interface-interval</strong></span> minutes. The default
d6573 18
a6590 6
<span><strong class="command">listen-on</strong></span> configuration), and will
stop listening on interfaces that have gone away.</p></dd>
<dt><span class="term"><span><strong class="command">statistics-interval</strong></span></span></dt>
<dd>
<p>Name server statistics will be logged
every <span><strong class="command">statistics-interval</strong></span> minutes. The default is 
d6592 28
a6619 12
If set to 0, no statistics will be logged.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>Not yet implemented in <span class="acronym">BIND</span>9.</p>
</div>
</dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="topology"></a>Topology</h4></div></div></div>
<p>All other things being equal, when the server chooses a name server
d6621 8
a6628 2
topologically closest to itself. The <span><strong class="command">topology</strong></span> statement
takes an <span><strong class="command">address_match_list</strong></span> and interprets it
d6636 4
a6639 2
For example,</p>
<pre class="programlisting">topology {
d6643 3
a6645 2
};</pre>
<p>will prefer servers on network 10 the most, followed by hosts
d6648 39
a6686 15
is preferred least of all.</p>
<p>The default topology is</p>
<pre class="programlisting">    topology { localhost; localnets; };
</pre>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>The <span><strong class="command">topology</strong></span> option
is not implemented in <span class="acronym">BIND</span> 9.
</p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="the_sortlist_statement"></a>The <span><strong class="command">sortlist</strong></span> Statement</h4></div></div></div>
<p>The response to a DNS query may consist of multiple resource
d6690 8
a6697 2
(but see the <span><strong class="command">rrset-order</strong></span>
statement in <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>).
d6703 26
a6728 7
configuring the name servers, not all the clients.</p>
<p>The <span><strong class="command">sortlist</strong></span> statement (see below) takes
an <span><strong class="command">address_match_list</strong></span> and interprets it even
more specifically than the <span><strong class="command">topology</strong></span> statement
does (<a href="Bv9ARM.ch06.html#topology" title="Topology">the section called &#8220;Topology&#8221;</a>).
Each top level statement in the <span><strong class="command">sortlist</strong></span> must
itself be an explicit <span><strong class="command">address_match_list</strong></span> with
d6730 4
a6733 1
an IP prefix, an ACL name or a nested <span><strong class="command">address_match_list</strong></span>)
d6735 3
a6737 2
the query until a match is found.</p>
<p>Once the source address of the query has been matched, if
d6742 8
a6749 2
treated the same as the <span><strong class="command">address_match_list</strong></span> in
a <span><strong class="command">topology</strong></span> statement. Each top level element
d6751 3
a6753 2
distance is moved to the beginning of the response.</p>
<p>In the following example, any queries received from any of
d6764 4
a6767 2
their directly connected networks.</p>
<pre class="programlisting">sortlist {
d6783 3
a6785 2
};</pre>
<p>The following example will give reasonable behavior for the
d6787 4
a6790 1
to the behavior of the address sort in <span class="acronym">BIND</span> 4.9.x. Responses sent
d6794 4
a6797 2
to other queries will not be sorted.</p>
<pre class="programlisting">sortlist {
d6801 12
a6812 6
</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="rrset_ordering"></a>RRset Ordering</h4></div></div></div>
<p>When multiple records are returned in an answer it may be
d6814 4
a6817 1
The <span><strong class="command">rrset-order</strong></span> statement permits configuration
d6819 121
a6939 35
See also the <span><strong class="command">sortlist</strong></span> statement,
<a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a>.
</p>
<p>An <span><strong class="command">order_spec</strong></span> is defined as follows:</p>
<pre class="programlisting">[<span class="optional"> class <em class="replaceable"><code>class_name</code></em> </span>][<span class="optional"> type <em class="replaceable"><code>type_name</code></em> </span>][<span class="optional"> name <em class="replaceable"><code>"domain_name"</code></em></span>]
      order <em class="replaceable"><code>ordering</code></em>
</pre>
<p>If no class is specified, the default is <span><strong class="command">ANY</strong></span>.
If no type is specified, the default is <span><strong class="command">ANY</strong></span>.
If no name is specified, the default is "<span><strong class="command">*</strong></span>".</p>
<p>The legal values for <span><strong class="command">ordering</strong></span> are:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">fixed</strong></span></p></td>
<td><p>Records are returned in the order they
are defined in the zone file.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">random</strong></span></p></td>
<td><p>Records are returned in some random order.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">cyclic</strong></span></p></td>
<td><p>Records are returned in a round-robin
order.</p></td>
</tr>
</tbody>
</table></div>
<p>For example:</p>
<pre class="programlisting">rrset-order {
d6943 29
a6971 10
</pre>
<p>will cause any responses for type A records in class IN that
have "<code class="literal">host.example.com</code>" as a suffix, to always be returned
in random order. All other records are returned in cyclic order.</p>
<p>If multiple <span><strong class="command">rrset-order</strong></span> statements appear,
they are not combined &#8212; the last one applies.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>The <span><strong class="command">rrset-order</strong></span> statement
is not yet fully implemented in <span class="acronym">BIND</span> 9.
d6973 25
a6997 9
</p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="tuning"></a>Tuning</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">lame-ttl</strong></span></span></dt>
<dd><p>Sets the number of seconds to cache a
d6999 28
a7026 6
<span class="bold"><strong>NOT</strong></span> recommended.)
Default is <code class="literal">600</code> (10 minutes). Maximum value is 
<code class="literal">1800</code> (30 minutes).</p></dd>
<dt><span class="term"><span><strong class="command">max-ncache-ttl</strong></span></span></dt>
<dd><p>To reduce network traffic and increase performance
the server stores negative answers. <span><strong class="command">max-ncache-ttl</strong></span> is
d7029 24
a7052 5
<span><strong class="command">max-ncache-ttl</strong></span> is <code class="literal">10800</code> seconds (3 hours).
<span><strong class="command">max-ncache-ttl</strong></span> cannot exceed 7 days and will
be silently truncated to 7 days if set to a greater value.</p></dd>
<dt><span class="term"><span><strong class="command">max-cache-ttl</strong></span></span></dt>
<dd><p><span><strong class="command">max-cache-ttl</strong></span> sets
d7054 10
a7063 4
answers. The default is one week (7 days).</p></dd>
<dt><span class="term"><span><strong class="command">min-roots</strong></span></span></dt>
<dd>
<p>The minimum number of root servers that
d7065 26
a7090 8
is <strong class="userinput"><code>2</code></strong>.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>Not implemented in <span class="acronym">BIND</span>9.</p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">sig-validity-interval</strong></span></span></dt>
<dd><p>Specifies the number of days into the
d7092 8
a7099 2
of dynamic updates (<a href="Bv9ARM.ch04.html#dynamic_update" title="Dynamic Update">the section called &#8220;Dynamic Update&#8221;</a>)
will expire. The default is <code class="literal">30</code> days.
d7102 19
a7120 7
to allow for a limited amount of clock skew.</p></dd>
<dt>
<span class="term"><span><strong class="command">min-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">max-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">min-retry-time</strong></span>, </span><span class="term"><span><strong class="command">max-retry-time</strong></span></span>
</dt>
<dd>
<p>
These options control the server's behavior on refreshing a zone
d7125 3
a7127 3
</p>
<p>
These options allow the administrator to set a minimum and maximum
d7131 13
a7143 5
</p>
</dd>
<dt><span class="term"><span><strong class="command">edns-udp-size</strong></span></span></dt>
<dd><p>
<span><strong class="command">edns-udp-size</strong></span> sets the advertised EDNS UDP buffer
d7149 15
a7163 7
</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="builtin"></a>Built-in server information zones</h4></div></div></div>
<p>The server provides some helpful diagnostic information
d7165 24
a7188 6
pseudo-top-level-domain <code class="literal">bind</code> in the
<span><strong class="command">CHAOS</strong></span> class.  These zones are part of a
built-in view (see <a href="Bv9ARM.ch06.html#view_statement_grammar" title="view Statement Grammar">the section called &#8220;<span><strong class="command">view</strong></span> Statement Grammar&#8221;</a>) of class
<span><strong class="command">CHAOS</strong></span> which is separate from the default view of
class <span><strong class="command">IN</strong></span>; therefore, any global server options
such as <span><strong class="command">allow-query</strong></span> do not apply the these zones.
d7190 33
a7222 8
below, or hide the built-in <span><strong class="command">CHAOS</strong></span> view by
defining an explicit view of class <span><strong class="command">CHAOS</strong></span>
that matches all clients.</p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">version</strong></span></span></dt>
<dd><p>The version the server should report
via a query of the name <code class="literal">version.bind</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
d7224 25
a7248 6
Specifying <span><strong class="command">version none</strong></span>
disables processing of the queries.</p></dd>
<dt><span class="term"><span><strong class="command">hostname</strong></span></span></dt>
<dd><p>The hostname the server should report via a query of
the name <code class="filename">hostname.bind</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
d7252 25
a7276 6
answering your queries.  Specifying <span><strong class="command">hostname none;</strong></span>
disables processing of the queries.</p></dd>
<dt><span class="term"><span><strong class="command">server-id</strong></span></span></dt>
<dd><p>The ID of the server should report via a query of
the name <code class="filename">ID.SERVER</code>
with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
d7279 4
a7282 1
answering your queries.  Specifying <span><strong class="command">server-id none;</strong></span>
d7284 4
a7287 1
Specifying <span><strong class="command">server-id hostname;</strong></span> will cause named to
d7289 25
a7313 8
The default <span><strong class="command">server-id</strong></span> is <span><strong class="command">none</strong></span>.
</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="statsfile"></a>The Statistics File</h4></div></div></div>
<p>The statistics file generated by <span class="acronym">BIND</span> 9
d7315 11
a7325 4
generated by <span class="acronym">BIND</span> 8.
</p>
<p>The statistics dump begins with the line <span><strong class="command">+++ Statistics Dump
+++ (973798949)</strong></span>, where the number in parentheses is a standard
d7332 30
a7361 12
with the line <span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>, where the
number is identical to the number in the beginning line.</p>
<p>The following statistics counters are maintained:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">success</strong></span></p></td>
<td><p>The number of
d7364 100
a7463 36
one answer RR.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">referral</strong></span></p></td>
<td><p>The number of queries which resulted
in referral responses.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">nxrrset</strong></span></p></td>
<td><p>The number of queries which resulted in
NOERROR responses with no data.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">nxdomain</strong></span></p></td>
<td><p>The number
of queries which resulted in NXDOMAIN responses.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">failure</strong></span></p></td>
<td><p>The number of queries which resulted in a
failure response other than those above.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">recursion</strong></span></p></td>
<td><p>The number of queries which caused the server
to perform recursion in order to find the final answer.</p></td>
</tr>
</tbody>
</table></div>
<p>
Each query received by the server will cause exactly one of
<span><strong class="command">success</strong></span>,
<span><strong class="command">referral</strong></span>,
<span><strong class="command">nxrrset</strong></span>,
<span><strong class="command">nxdomain</strong></span>, or
<span><strong class="command">failure</strong></span>
d7465 148
a7612 30
<span><strong class="command">recursion</strong></span> counter to be incremented.
</p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="server_statement_grammar"></a><span><strong class="command">server</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">server <em class="replaceable"><code>ip_addr</code></em> {
    [<span class="optional"> bogus <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> provide-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> request-ixfr <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> edns <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> transfers <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> transfer-format <em class="replaceable"><code>( one-answer | many-answers )</code></em> ; ]</span>]
    [<span class="optional"> keys <em class="replaceable"><code>{ string ; [<span class="optional"> string ; [<span class="optional">...</span>]</span>] }</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="server_statement_definition_and_usage"></a><span><strong class="command">server</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">server</strong></span> statement defines characteristics
to be associated with a remote name server.</p>
<p>
The <span><strong class="command">server</strong></span> statement can occur at the top level of the
configuration file or inside a <span><strong class="command">view</strong></span> statement.  
If a <span><strong class="command">view</strong></span> statement contains
one or more <span><strong class="command">server</strong></span> statements, only those
d7614 8
a7621 2
If a view contains no <span><strong class="command">server</strong></span> statements,
any top-level <span><strong class="command">server</strong></span> statements are used as
d7623 3
a7625 2
</p>
<p>If you discover that a remote server is giving out bad data,
d7627 12
a7638 2
value of <span><strong class="command">bogus</strong></span> is <span><strong class="command">no</strong></span>.</p>
<p>The <span><strong class="command">provide-ixfr</strong></span> clause determines whether
d7641 8
a7648 2
If set to <span><strong class="command">yes</strong></span>, incremental transfer will be provided
whenever possible. If set to <span><strong class="command">no</strong></span>, all transfers
d7650 10
a7659 3
of the <span><strong class="command">provide-ixfr</strong></span> option in the view or
global options block is used as a default.</p>
<p>The <span><strong class="command">request-ixfr</strong></span> clause determines whether
d7662 7
a7668 3
value of the <span><strong class="command">request-ixfr</strong></span> option in the view or
global options block is used as a default.</p>
<p>IXFR requests to servers that do not support IXFR will automatically
d7671 12
a7682 3
of <span><strong class="command">yes</strong></span> should always work.
The purpose of the <span><strong class="command">provide-ixfr</strong></span> and
<span><strong class="command">request-ixfr</strong></span> clauses is
d7685 6
a7690 2
is buggy and crashes or corrupts data when IXFR is used.</p>
<p>The <span><strong class="command">edns</strong></span> clause determines whether the local server
d7692 48
a7739 10
default is <span><strong class="command">yes</strong></span>.</p>
<p>The server supports two zone transfer methods. The first, <span><strong class="command">one-answer</strong></span>,
uses one DNS message per resource record transferred. <span><strong class="command">many-answers</strong></span> packs
as many resource records as possible into a message. <span><strong class="command">many-answers</strong></span> is
more efficient, but is only known to be understood by <span class="acronym">BIND</span> 9, <span class="acronym">BIND</span>
8.x, and patched versions of <span class="acronym">BIND</span> 4.9.5. You can specify which method
to use for a server with the <span><strong class="command">transfer-format</strong></span> option.
If <span><strong class="command">transfer-format</strong></span> is not specified, the <span><strong class="command">transfer-format</strong></span> specified
by the <span><strong class="command">options</strong></span> statement will be used.</p>
<p><span><strong class="command">transfers</strong></span> is used to limit the number of
d7741 24
a7764 5
no <span><strong class="command">transfers</strong></span> clause is specified, the limit is
set according to the <span><strong class="command">transfers-per-ns</strong></span> option.</p>
<p>The <span><strong class="command">keys</strong></span> clause identifies a
<span><strong class="command">key_id</strong></span> defined by the <span><strong class="command">key</strong></span> statement,
to be used for transaction security (TSIG, <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
d7769 6
a7774 2
to be signed by this key.</p>
<p>Although the grammar of the <span><strong class="command">keys</strong></span> clause
d7776 10
a7785 3
supported.</p>
<p>The <span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">transfer-source-v6</strong></span> clauses specify the IPv4 and IPv6 source
d7787 4
a7790 1
For an IPv4 remote server, only <span><strong class="command">transfer-source</strong></span> can
d7793 4
a7796 1
<span><strong class="command">transfer-source-v6</strong></span> can be specified.
d7798 89
a7886 19
<span><strong class="command">transfer-source</strong></span> and
<span><strong class="command">transfer-source-v6</strong></span> in
<a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2562233"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">trusted-keys {
    <em class="replaceable"><code>string</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ;
    [<span class="optional"> <em class="replaceable"><code>string</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; [<span class="optional">...</span>]</span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2562281"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
and Usage</h3></div></div></div>
<p>The <span><strong class="command">trusted-keys</strong></span> statement defines DNSSEC
security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the public key for a non-authoritative
d7891 6
a7896 2
DNSSEC validation on all DNS data in subdomains of a security root.</p>
<p>The <span><strong class="command">trusted-keys</strong></span> statement can contain
d7899 75
a7973 20
key data.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="view_statement_grammar"></a><span><strong class="command">view</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting">view <em class="replaceable"><code>view_name</code></em> 
      [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
      match-clients { <em class="replaceable"><code>address_match_list</code></em> } ;
      match-destinations { <em class="replaceable"><code>address_match_list</code></em> } ;
      match-recursive-only <em class="replaceable"><code>yes_or_no</code></em> ;
      [<span class="optional"> <em class="replaceable"><code>view_option</code></em>; ...</span>]
      [<span class="optional"> <em class="replaceable"><code>zone_statement</code></em>; ...</span>]
};
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2562349"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>The <span><strong class="command">view</strong></span> statement is a powerful new feature
of <span class="acronym">BIND</span> 9 that lets a name server answer a DNS query differently
d7975 6
a7980 2
split DNS setups without having to run multiple servers.</p>
<p>Each <span><strong class="command">view</strong></span> statement defines a view of the
d7983 23
a8005 5
<code class="varname">address_match_list</code> of the view's
<span><strong class="command">match-clients</strong></span> clause and its destination IP address matches
the <code class="varname">address_match_list</code> of the view's
<span><strong class="command">match-destinations</strong></span> clause.  If not specified, both
<span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
d8007 11
a8017 2
<span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
can also take <span><strong class="command">keys</strong></span> which provide an mechanism for the
d8019 4
a8022 1
as <span><strong class="command">match-recursive-only</strong></span>, which means that only recursive
d8024 4
a8027 1
The order of the <span><strong class="command">view</strong></span> statements is significant &#8212;
d8029 13
a8041 3
<span><strong class="command">view</strong></span> that it matches.</p>
<p>Zones defined within a <span><strong class="command">view</strong></span> statement will
be only be accessible to clients that match the <span><strong class="command">view</strong></span>.
d8044 10
a8053 3
and "external" clients in a split DNS setup.</p>
<p>Many of the options given in the <span><strong class="command">options</strong></span> statement
can also be used within a <span><strong class="command">view</strong></span> statement, and then
d8055 4
a8058 1
value is given, the value in the <span><strong class="command">options</strong></span> statement
d8060 10
a8069 3
in the <span><strong class="command">view</strong></span> statement; these view-specific defaults
take precedence over those in the <span><strong class="command">options</strong></span> statement.</p>
<p>Views are class specific.  If no class is given, class IN
d8071 6
a8076 2
since only the IN class has compiled-in default hints.</p>
<p>If there are no <span><strong class="command">view</strong></span> statements in the config
d8078 4
a8081 1
in class IN. Any <span><strong class="command">zone</strong></span> statements specified on
d8083 25
a8107 7
this default view, and the <span><strong class="command">options</strong></span> statement will
apply to the default view. If any explicit <span><strong class="command">view</strong></span>
statements are present, all <span><strong class="command">zone</strong></span> statements must
occur inside <span><strong class="command">view</strong></span> statements.</p>
<p>Here is an example of a typical split DNS setup implemented
using <span><strong class="command">view</strong></span> statements.</p>
<pre class="programlisting">view "internal" {
d8136 28
a8163 7
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="zone_statement_grammar"></a><span><strong class="command">zone</strong></span>
Statement Grammar</h3></div></div></div>
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] [<span class="optional">{ 
d8165 418
a8582 40
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> update-policy { <em class="replaceable"><code>update_policy_rule</code></em> [<span class="optional">...</span>] } ; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> ixfr-base <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> ixfr-tmp-file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> multi-master <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
d8584 46
a8629 18
}</span>];
</pre>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2563022"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2563029"></a>Zone Types</h4></div></div></div>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="varname">master</code></p></td>
<td><p>The server has a master copy of the data
d8631 18
a8648 6
it.</p></td>
</tr>
<tr>
<td><p><code class="varname">slave</code></p></td>
<td><p>A slave zone is a replica of a master
zone. The <span><strong class="command">masters</strong></span> list specifies one or more IP addresses
d8662 4
a8665 1
a slave server for the zone <code class="literal">example.com</code> might place
d8667 7
a8673 1
<code class="filename">ex/example.com</code> where <code class="filename">ex/</code> is
d8676 14
a8689 6
a single directory.)</p></td>
</tr>
<tr>
<td><p><code class="varname">stub</code></p></td>
<td>
<p>A stub zone is similar to a slave zone,
d8692 6
a8697 2
they are a feature specific to the <span class="acronym">BIND</span> implementation.
</p>
d8699 2
a8700 1
<p>Stub zones can be used to eliminate the need for glue NS record
d8702 4
a8705 1
a set of name server addresses in <code class="filename">named.conf</code>.
d8708 4
a8711 1
In <span class="acronym">BIND</span> 4/8, zone transfers of a parent zone
d8714 4
a8717 1
only in the master server for the parent zone. <span class="acronym">BIND</span>
d8719 4
a8722 1
way. Therefore, if a <span class="acronym">BIND</span> 9 master serving a parent
d8725 2
a8726 1
configured.</p>
d8728 2
a8729 1
<p>Stub zones can also be used as a way of forcing the resolution
d8733 4
a8736 1
<code class="literal">10.in-addr.arpa</code>
d8738 29
a8766 9
servers for that domain.</p>
</td>
</tr>
<tr>
<td><p><code class="varname">forward</code></p></td>
<td>
<p>A "forward zone" is a way to configure
forwarding on a per-domain basis.  A <span><strong class="command">zone</strong></span> statement
of type <span><strong class="command">forward</strong></span> can contain a <span><strong class="command">forward</strong></span> and/or <span><strong class="command">forwarders</strong></span> statement,
d8768 8
a8775 2
name. If no <span><strong class="command">forwarders</strong></span> statement is present or
an empty list for <span><strong class="command">forwarders</strong></span> is given, then no
d8777 4
a8780 1
any forwarders in the <span><strong class="command">options</strong></span> statement. Thus
d8782 4
a8785 1
global <span><strong class="command">forward</strong></span> option (that is, "forward first
d8787 15
a8801 6
servers as set globally) you need to re-specify the global forwarders.</p>
</td>
</tr>
<tr>
<td><p><code class="varname">hint</code></p></td>
<td><p>The initial set of root name servers is
d8806 14
a8819 6
Classes other than IN have no built-in defaults hints.</p></td>
</tr>
<tr>
<td><p><code class="varname">delegation-only</code></p></td>
<td>
<p>This is used to enforce the delegation only
d8823 39
a8861 15
apex.  This SHOULD NOT be applied to leaf zones.</p>
<p><code class="varname">delegation-only</code> has no effect on answers received
from forwarders.</p>
</td>
</tr>
</tbody>
</table></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2563267"></a>Class</h4></div></div></div>
<p>The zone's name may optionally be followed by a class. If
a class is not specified, class <code class="literal">IN</code> (for <code class="varname">Internet</code>),
is assumed. This is correct for the vast majority of cases.</p>
<p>The <code class="literal">hesiod</code> class is
d8865 81
a8945 20
<code class="literal">HS</code> is
a synonym for hesiod.</p>
<p>Another MIT development is CHAOSnet, a LAN protocol created
in the mid-1970s. Zone data for it can be specified with the <code class="literal">CHAOS</code> class.</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2563434"></a>Zone Options</h4></div></div></div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">allow-notify</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a></p></dd>
<dt><span class="term"><span><strong class="command">allow-query</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a></p></dd>
<dt><span class="term"><span><strong class="command">allow-transfer</strong></span></span></dt>
<dd><p>See the description of <span><strong class="command">allow-transfer</strong></span>
in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">allow-update</strong></span></span></dt>
<dd><p>Specifies which hosts are allowed to
d8949 46
a8994 10
<a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a> for details.
</p></dd>
<dt><span class="term"><span><strong class="command">update-policy</strong></span></span></dt>
<dd><p>Specifies a "Simple Secure Update" policy. See
<a href="Bv9ARM.ch06.html#dynamic_update_policies" title="Dynamic Update Policies">the section called &#8220;Dynamic Update Policies&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">allow-update-forwarding</strong></span></span></dt>
<dd><p>See the description of <span><strong class="command">allow-update-forwarding</strong></span>
in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">also-notify</strong></span></span></dt>
<dd><p>Only meaningful if <span><strong class="command">notify</strong></span> is
d8996 4
a8999 1
<code class="literal">DNS NOTIFY</code> message
d9002 8
a9009 2
with <span><strong class="command">also-notify</strong></span>. A port may be specified
with each <span><strong class="command">also-notify</strong></span> address to send the notify
d9011 14
a9024 5
<span><strong class="command">also-notify</strong></span> is not meaningful for stub zones.
The default is the empty list.</p></dd>
<dt><span class="term"><span><strong class="command">check-names</strong></span></span></dt>
<dd><p>
This option is used to restrict the character set and syntax of
d9026 28
a9053 7
network.  The default varies according to zone type.  For <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.  For <span><strong class="command">slave</strong></span>
zones the default is <span><strong class="command">warn</strong></span>.
</p></dd>
<dt><span class="term"><span><strong class="command">database</strong></span></span></dt>
<dd>
<p>Specify the type of database to be used for storing the
zone data.  The string following the <span><strong class="command">database</strong></span> keyword
d9057 9
a9065 4
to the database type.</p>
<p>The default is <strong class="userinput"><code>"rbt"</code></strong>, BIND 9's native in-memory
red-black-tree database.  This database does not take arguments.</p>
<p>Other values are possible if additional database drivers
d9067 30
a9096 8
with the distribution but none are linked in by default.</p>
</dd>
<dt><span class="term"><span><strong class="command">dialup</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">dialup</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">delegation-only</strong></span></span></dt>
<dd><p>The flag only applies to hint and stub zones.  If set
to <strong class="userinput"><code>yes</code></strong> then the zone will also be treated as if it
d9098 45
a9142 12
</p></dd>
<dt><span class="term"><span><strong class="command">forward</strong></span></span></dt>
<dd><p>Only meaningful if the zone has a forwarders
list. The <span><strong class="command">only</strong></span> value causes the lookup to fail
after trying the forwarders and getting no answer, while <span><strong class="command">first</strong></span> would
allow a normal lookup to be tried.</p></dd>
<dt><span class="term"><span><strong class="command">forwarders</strong></span></span></dt>
<dd><p>Used to override the list of global forwarders.
If it is not specified in a zone of type <span><strong class="command">forward</strong></span>,
no forwarding is done for the zone; the global options are not used.</p></dd>
<dt><span class="term"><span><strong class="command">ixfr-base</strong></span></span></dt>
<dd><p>Was used in <span class="acronym">BIND</span> 8 to specify the name
d9144 117
a9260 23
<span class="acronym">BIND</span> 9 ignores the option and constructs the name of the journal
file by appending "<code class="filename">.jnl</code>" to the name of the
zone file.</p></dd>
<dt><span class="term"><span><strong class="command">ixfr-tmp-file</strong></span></span></dt>
<dd><p>Was an undocumented option in <span class="acronym">BIND</span> 8.
Ignored in <span class="acronym">BIND</span> 9.</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-in</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">max-transfer-time-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-in</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">max-transfer-idle-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-time-out</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">max-transfer-time-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">max-transfer-idle-out</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">max-transfer-idle-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">notify</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">notify</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">pubkey</strong></span></span></dt>
<dd><p>In <span class="acronym">BIND</span> 8, this option was intended for specifying
d9262 17
a9278 4
zones when they are loaded from disk. <span class="acronym">BIND</span> 9 does not verify signatures
on load and ignores the option.</p></dd>
<dt><span class="term"><span><strong class="command">zone-statistics</strong></span></span></dt>
<dd><p>If <strong class="userinput"><code>yes</code></strong>, the server will keep statistical
d9280 226
a9505 53
<span><strong class="command">statistics-file</strong></span> defined in the server options.</p></dd>
<dt><span class="term"><span><strong class="command">sig-validity-interval</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">sig-validity-interval</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">transfer-source</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">transfer-source-v6</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">alt-transfer-source-v6</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">use-alt-transfer-source</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">notify-source</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">notify-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>
</p></dd>
<dt><span class="term"><span><strong class="command">notify-source-v6</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">notify-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
</p></dd>
<dt>
<span class="term"><span><strong class="command">min-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">max-refresh-time</strong></span>, </span><span class="term"><span><strong class="command">min-retry-time</strong></span>, </span><span class="term"><span><strong class="command">max-retry-time</strong></span></span>
</dt>
<dd><p>
See the description in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
</p></dd>
<dt><span class="term"><span><strong class="command">ixfr-from-differences</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">ixfr-from-differences</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
<dt><span class="term"><span><strong class="command">key-directory</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and Usage&#8221;</a></p></dd>
<dt><span class="term"><span><strong class="command">multi-master</strong></span></span></dt>
<dd><p>See the description of
<span><strong class="command">multi-master</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.</p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="dynamic_update_policies"></a>Dynamic Update Policies</h4></div></div></div>
<p><span class="acronym">BIND</span> 9 supports two alternative methods of granting clients
d9507 26
a9532 6
configured by the <span><strong class="command">allow-update</strong></span> and
<span><strong class="command">update-policy</strong></span> option, respectively.</p>
<p>The <span><strong class="command">allow-update</strong></span> clause works the same
way as in previous versions of <span class="acronym">BIND</span>. It grants given clients the
permission to update any record of any name in the zone.</p>
<p>The <span><strong class="command">update-policy</strong></span> clause is new in <span class="acronym">BIND</span>
d9538 48
a9585 11
be determined.</p>
<p>Rules are specified in the <span><strong class="command">update-policy</strong></span> zone
option, and are only meaningful for master zones.  When the <span><strong class="command">update-policy</strong></span> statement
is present, it is a configuration error for the <span><strong class="command">allow-update</strong></span> statement
to be present.  The <span><strong class="command">update-policy</strong></span> statement only
examines the signer of a message; the source address is not relevant.</p>
<p>This is how a rule definition looks:</p>
<pre class="programlisting">
( <span><strong class="command">grant</strong></span> | <span><strong class="command">deny</strong></span> ) <em class="replaceable"><code>identity</code></em> <em class="replaceable"><code>nametype</code></em> <em class="replaceable"><code>name</code></em> [<span class="optional"> <em class="replaceable"><code>types</code></em> </span>]
</pre>
<p>Each rule grants or denies privileges.  Once a message has
d9590 3
a9592 2
the types specified in the type field.</p>
<p>The identity field specifies a name or a wildcard name.  Normally, this
d9596 4
a9599 1
TKEY exchange.  When the <em class="replaceable"><code>identity</code></em> field specifies a
d9601 48
a9648 15
to multiple identities.  The <em class="replaceable"><code>identity</code></em> field must
contain a fully qualified domain name.</p>
<p>The <em class="replaceable"><code>nametype</code></em> field has 4 values:
<code class="varname">name</code>, <code class="varname">subdomain</code>,
<code class="varname">wildcard</code>, and <code class="varname">self</code>.
</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="varname">name</code></p></td>
<td><p>Exact-match semantics.  This rule matches when the
d9650 17
a9666 5
<em class="replaceable"><code>name</code></em> field.</p></td>
</tr>
<tr>
<td><p><code class="varname">subdomain</code></p></td>
<td><p>This rule matches when the name being updated
d9668 20
a9687 5
<em class="replaceable"><code>name</code></em> field.</p></td>
</tr>
<tr>
<td><p><code class="varname">wildcard</code></p></td>
<td><p>The <em class="replaceable"><code>name</code></em> field is
d9689 30
a9718 9
being updated name is a valid expansion of the wildcard.</p></td>
</tr>
<tr>
<td><p><code class="varname">self</code></p></td>
<td><p>This rule matches when the name being updated
matches the contents of the <em class="replaceable"><code>identity</code></em> field.
The <em class="replaceable"><code>name</code></em> field is ignored, but should be
the same as the <em class="replaceable"><code>identity</code></em> field.  The
<code class="varname">self</code> nametype is most useful when allowing using
d9720 23
a9742 8
to be updated.  The <em class="replaceable"><code>identity</code></em> would be
specified as <code class="constant">*</code> in this case.</p></td>
</tr>
</tbody>
</table></div>
<p>In all cases, the <em class="replaceable"><code>name</code></em> field must
specify a fully qualified domain name.</p>
<p>If no types are explicitly specified, this rule matches all types except
d9747 22
a9768 11
</p>
</div>
</div>
</div>
<div class="sect1" lang="en">
<div class="titlepage"><div><div><h2 class="title" style="clear: both">
<a name="id2564557"></a>Zone File</h2></div></div></div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="types_of_resource_records_and_when_to_use_them"></a>Types of Resource Records and When to Use Them</h3></div></div></div>
<p>This section, largely borrowed from RFC 1034, describes the
d9771 11
a9781 5
and implemented in the DNS. These are also included.</p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2564576"></a>Resource Records</h4></div></div></div>
<p>A domain name identifies a node.  Each node has a set of
d9788 50
a9837 20
        that a particular nearby server be tried first. See <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a> and <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>.</p>
<p>The components of a Resource Record are:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p>owner name</p></td>
<td><p>the domain name where the RR is found.</p></td>
</tr>
<tr>
<td><p>type</p></td>
<td><p>an encoded 16 bit value that specifies
the type of the resource record.</p></td>
</tr>
<tr>
<td><p>TTL</p></td>
<td><p>the time to live of the RR. This field
d9840 79
a9918 33
be cached before it should be discarded.</p></td>
</tr>
<tr>
<td><p>class</p></td>
<td><p>an encoded 16 bit value that identifies
a protocol family or instance of a protocol.</p></td>
</tr>
<tr>
<td><p>RDATA</p></td>
<td><p>the resource data.  The format of the
data is type (and sometimes class) specific.</p></td>
</tr>
</tbody>
</table></div>
<p>The following are <span class="emphasis"><em>types</em></span> of valid RRs:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p>A</p></td>
<td><p>a host address.  In the IN class, this is a
32-bit IP address.  Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>AAAA</p></td>
<td><p>IPv6 address.  Described in RFC 1886.</p></td>
</tr>
<tr>
<td><p>A6</p></td>
<td><p>IPv6 address.  This can be a partial
d9920 55
a9974 25
address (the prefix) can be found.  Experimental.  Described in RFC 2874.</p></td>
</tr>
<tr>
<td><p>AFSDB</p></td>
<td><p>location of AFS database servers.
Experimental.  Described in RFC 1183.</p></td>
</tr>
<tr>
<td><p>APL</p></td>
<td><p>address prefix list.  Experimental.
Described in RFC 3123.</p></td>
</tr>
<tr>
<td><p>CERT</p></td>
<td><p>holds a digital certificate.
Described in RFC 2538.</p></td>
</tr>
<tr>
<td><p>CNAME</p></td>
<td><p>identifies the canonical name of an alias.
Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>DNAME</p></td>
<td><p>Replaces the domain name specified with
d9978 76
a10053 34
Described in RFC 2672.</p></td>
</tr>
<tr>
<td><p>GPOS</p></td>
<td><p>Specifies the global position.  Superseded by LOC.</p></td>
</tr>
<tr>
<td><p>HINFO</p></td>
<td><p>identifies the CPU and OS used by a host.
Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>ISDN</p></td>
<td><p>representation of ISDN addresses.
Experimental.  Described in RFC 1183.</p></td>
</tr>
<tr>
<td><p>KEY</p></td>
<td><p>stores a public key associated with a
DNS name.  Described in RFC 2535.</p></td>
</tr>
<tr>
<td><p>KX</p></td>
<td><p>identifies a key exchanger for this
DNS name.  Described in RFC 2230.</p></td>
</tr>
<tr>
<td><p>LOC</p></td>
<td><p>for storing GPS info.  Described in RFC 1876.
Experimental.</p></td>
</tr>
<tr>
<td><p>MX</p></td>
<td><p>identifies a mail exchange for the domain.
d10056 43
a10098 19
Described in RFC 974, RFC 1035.</p></td>
</tr>
<tr>
<td><p>NAPTR</p></td>
<td><p>name authority pointer.  Described in RFC 2915.</p></td>
</tr>
<tr>
<td><p>NSAP</p></td>
<td><p>a network service access point.
Described in RFC 1706.</p></td>
</tr>
<tr>
<td><p>NS</p></td>
<td><p>the authoritative name server for the
domain.  Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>NXT</p></td>
<td><p>used in DNSSEC to securely indicate that
d10101 44
a10144 20
Described in RFC 2535.</p></td>
</tr>
<tr>
<td><p>PTR</p></td>
<td><p>a pointer to another part of the domain
name space.  Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>PX</p></td>
<td><p>provides mappings between RFC 822 and X.400
addresses.  Described in RFC 2163.</p></td>
</tr>
<tr>
<td><p>RP</p></td>
<td><p>information on persons responsible
for the domain.  Experimental.  Described in RFC 1183.</p></td>
</tr>
<tr>
<td><p>RT</p></td>
<td><p>route-through binding for hosts that
d10146 54
a10199 24
Experimental.  Described in RFC 1183.</p></td>
</tr>
<tr>
<td><p>SIG</p></td>
<td><p>("signature") contains data authenticated
in the secure DNS.  Described in RFC 2535.</p></td>
</tr>
<tr>
<td><p>SOA</p></td>
<td><p>identifies the start of a zone of authority.
Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>SRV</p></td>
<td><p>information about well known network
services (replaces WKS).  Described in RFC 2782.</p></td>
</tr>
<tr>
<td><p>TXT</p></td>
<td><p>text records.  Described in RFC 1035.</p></td>
</tr>
<tr>
<td><p>WKS</p></td>
<td><p>information about which well known
d10201 58
a10258 25
</p></td>
</tr>
<tr>
<td><p>X25</p></td>
<td><p>representation of X.25 network addresses.
Experimental.  Described in RFC 1183.</p></td>
</tr>
</tbody>
</table></div>
<p>The following <span class="emphasis"><em>classes</em></span> of resource records
are currently valid in the DNS:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p>IN</p></td>
<td><p>The Internet.</p></td>
</tr>
<tr>
<td><p>CH</p></td>
<td><p>
CHAOSnet, a LAN protocol created at MIT in the mid-1970s.
d10261 15
a10275 7
<code class="literal">version.bind</code>.
</p></td>
</tr>
<tr>
<td><p>HS</p></td>
<td><p>
Hesiod, an information service
d10279 10
a10288 5
</p></td>
</tr>
</tbody>
</table></div>
<p>The owner name is often implicit, rather than forming an integral
d10293 3
a10295 2
fits the needs of the resource being described.</p>
<p>The meaning of the TTL field is a time limit on how long an
d10305 3
a10307 2
the change.</p>
<p>The data in the RDATA section of RRs is carried as a combination
d10309 12
a10320 6
used as "pointers" to other data in the DNS.</p>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2565564"></a>Textual expression of RRs</h4></div></div></div>
<p>RRs are represented in binary form in the packets of the DNS
d10326 3
a10328 2
using parentheses.</p>
<p>The start of the line gives the owner of the RR.  If a line
d10330 3
a10332 2
that of the previous RR.  Blank lines are often included for readability.</p>
<p>Following the owner, we list the TTL, type, and class of the
d10337 154
a10490 44
are often omitted from examples in the interests of clarity.</p>
<p>The resource data or RDATA section of the RR are given using
knowledge of the typical representation for the data.</p>
<p>For example, we might show the RRs carried in a message as:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="literal">ISI.EDU.</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10 VENERA.ISI.EDU.</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10 VAXA.ISI.EDU</code></p></td>
</tr>
<tr>
<td><p><code class="literal">VENERA.ISI.EDU</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">128.9.0.32</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.1.0.52</code></p></td>
</tr>
<tr>
<td><p><code class="literal">VAXA.ISI.EDU</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.2.0.27</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">128.9.0.33</code></p></td>
</tr>
</tbody>
</table></div>
<p>The MX RRs have an RDATA section which consists of a 16 bit
d10492 87
a10578 31
IP address format to contain a 32 bit internet address.</p>
<p>This example shows six RRs, with two RRs at each of three
domain names.</p>
<p>Similarly we might see:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="literal">XX.LCS.MIT.EDU. IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.44</code></p></td>
</tr>
<tr>
<td><p><code class="literal">CH</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">MIT.EDU. 2420</code></p></td>
</tr>
</tbody>
</table></div>
<p>This example shows two addresses for <code class="literal">XX.LCS.MIT.EDU</code>,
each of a different class.</p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2565990"></a>Discussion of MX Records</h3></div></div></div>
<p>As described above, domain servers store information as a
d10584 3
a10586 2
determine when the RR is relevant.</p>
<p>MX records are used to control delivery of email. The data
d10594 10
a10603 3
name given is the machine to which the mail will be delivered. It <span class="emphasis"><em>must</em></span> have
an associated A record &#8212; CNAME is not sufficient.</p>
<p>For a given domain, if there is both a CNAME record and an
d10606 218
a10823 57
pointed to by the CNAME.</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
<col>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="literal">example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10</code></p></td>
<td><p><code class="literal">mail.example.com.</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">10</code></p></td>
<td><p><code class="literal">mail2.example.com.</code></p></td>
</tr>
<tr>
<td><p></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">MX</code></p></td>
<td><p><code class="literal">20</code></p></td>
<td><p><code class="literal">mail.backup.org.</code></p></td>
</tr>
<tr>
<td><p><code class="literal">mail.example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.1</code></p></td>
<td><p></p></td>
</tr>
<tr>
<td><p><code class="literal">mail2.example.com.</code></p></td>
<td><p><code class="literal">IN</code></p></td>
<td><p><code class="literal">A</code></p></td>
<td><p><code class="literal">10.0.0.2</code></p></td>
<td><p></p></td>
</tr>
</tbody>
</table></div>
<p>For example:</p>
<p>Mail delivery will be attempted to <code class="literal">mail.example.com</code> and
<code class="literal">mail2.example.com</code> (in
any order), and if neither of those succeed, delivery to <code class="literal">mail.backup.org</code> will
be attempted.</p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="Setting_TTLs"></a>Setting TTLs</h3></div></div></div>
<p>The time to live of the RR field is a 32 bit integer represented
d10827 21
a10847 11
used in a zone file.</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p>SOA</p></td>
<td>
<p>The last field in the SOA is the negative
d10849 14
a10862 8
(NXDOMAIN) responses from you.</p>
<p>The maximum time for
negative caching is 3 hours (3h).</p>
</td>
</tr>
<tr>
<td><p>$TTL</p></td>
<td><p>The $TTL directive at the top of the
d10864 11
a10874 5
a specific TTL set.</p></td>
</tr>
<tr>
<td><p>RR TTLs</p></td>
<td><p>Each RR can have a TTL as the second
d10876 32
a10907 12
the it.</p></td>
</tr>
</tbody>
</table></div>
<p>All of these TTLs default to units of seconds, though units
can be explicitly specified, for example, <code class="literal">1h30m</code>. </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2566487"></a>Inverse Mapping in IPv4</h3></div></div></div>
<p>Reverse name resolution (that is, translation from IP address
to name) is achieved by means of the <span class="emphasis"><em>in-addr.arpa</em></span> domain
d10916 64
a10979 20
in the [<span class="optional">example.com</span>] domain:</p>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><code class="literal">$ORIGIN</code></p></td>
<td><p><code class="literal">2.1.10.in-addr.arpa</code></p></td>
</tr>
<tr>
<td><p><code class="literal">3</code></p></td>
<td><p><code class="literal">IN PTR foo.example.com.</code></p></td>
</tr>
</tbody>
</table></div>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>The <span><strong class="command">$ORIGIN</strong></span> lines in the examples
d10982 14
a10995 7
that the example is relative to the listed origin.</p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2566593"></a>Other Zone File Directives</h3></div></div></div>
<p>The Master File Format was initially defined in RFC 1035 and
d10998 44
a11041 9
class.</p>
<p>Master File Directives include <span><strong class="command">$ORIGIN</strong></span>, <span><strong class="command">$INCLUDE</strong></span>,
and <span><strong class="command">$TTL.</strong></span></p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2566612"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$ORIGIN
</strong></span><em class="replaceable"><code>domain-name</code></em> [<span class="optional"> <em class="replaceable"><code>comment</code></em></span>]</p>
<p><span><strong class="command">$ORIGIN</strong></span> sets the domain name that will
d11043 99
a11141 25
in there is an implicit <span><strong class="command">$ORIGIN</strong></span> &lt;<code class="varname">zone-name</code>&gt;<span><strong class="command">.</strong></span> The
current <span><strong class="command">$ORIGIN</strong></span> is appended to the domain specified
in the <span><strong class="command">$ORIGIN</strong></span> argument if it is not absolute.</p>
<pre class="programlisting">$ORIGIN example.com.
WWW     CNAME   MAIN-SERVER</pre>
<p>is equivalent to</p>
<pre class="programlisting">WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.</pre>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2566667"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$INCLUDE</strong></span>
<em class="replaceable"><code>filename</code></em> [<span class="optional">
<em class="replaceable"><code>origin</code></em> </span>] [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]</p>
<p>Read and process the file <code class="filename">filename</code> as
if it were included into the file at this point.  If <span><strong class="command">origin</strong></span> is
specified the file is processed with <span><strong class="command">$ORIGIN</strong></span> set
to that value, otherwise the current <span><strong class="command">$ORIGIN</strong></span> is
used.</p>
<p>The origin and the current domain name
revert to the values they had prior to the <span><strong class="command">$INCLUDE</strong></span> once
the file has been read.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
d11143 4
a11146 1
an <span><strong class="command">$INCLUDE</strong></span>, but it is silent on whether the current
d11149 98
a11246 20
</p>
</div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2566730"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
<p>Syntax: <span><strong class="command">$TTL</strong></span>
<em class="replaceable"><code>default-ttl</code></em> [<span class="optional">
<em class="replaceable"><code>comment</code></em> </span>]</p>
<p>Set the default Time To Live (TTL) for subsequent records
with undefined TTLs. Valid TTLs are of the range 0-2147483647 seconds.</p>
<p><span><strong class="command">$TTL</strong></span> is defined in RFC 2308.</p>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="id2566761"></a><span class="acronym">BIND</span> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
<p>Syntax: <span><strong class="command">$GENERATE</strong></span> <em class="replaceable"><code>range</code></em> <em class="replaceable"><code>lhs</code></em> [<span class="optional"><em class="replaceable"><code>ttl</code></em></span>] [<span class="optional"><em class="replaceable"><code>class</code></em></span>] <em class="replaceable"><code>type</code></em> <em class="replaceable"><code>rhs</code></em> [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]</p>
<p><span><strong class="command">$GENERATE</strong></span> is used to create a series of
resource records that only differ from each other by an iterator. <span><strong class="command">$GENERATE</strong></span> can
d11249 6
a11254 2
delegation.</p>
<pre class="programlisting">$ORIGIN 0.0.192.IN-ADDR.ARPA.
d11256 9
a11264 3
$GENERATE 1-127 $ CNAME $.0</pre>
<p>is equivalent to</p>
<pre class="programlisting">0.0.0.192.IN-ADDR.ARPA NS SERVER1.EXAMPLE.
d11270 25
a11294 10
</pre>
<div class="informaltable"><table border="1">
<colgroup>
<col>
<col>
</colgroup>
<tbody>
<tr>
<td><p><span><strong class="command">range</strong></span></p></td>
<td><p>This can be one of two forms: start-stop
d11296 25
a11320 8
        1. All of start, stop and step must be positive.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">lhs</strong></span></p></td>
<td>
<p><span><strong class="command">lhs</strong></span> describes the
owner name of the resource records to be created.      Any single <span><strong class="command">$</strong></span> symbols
within the <span><strong class="command">lhs</strong></span> side are replaced by the iterator
d11322 15
a11336 3
To get a $ in the output you need to escape the <span><strong class="command">$</strong></span>
using a backslash <span><strong class="command">\</strong></span>,
e.g. <span><strong class="command">\$</strong></span>. The <span><strong class="command">$</strong></span> may optionally be followed
d11338 15
a11352 3
Modifiers are introduced by a <span><strong class="command">{</strong></span> immediately following the
<span><strong class="command">$</strong></span> as <span><strong class="command">${offset[,width[,base]]}</strong></span>.
e.g. <span><strong class="command">${-20,3,d}</strong></span> which subtracts 20 from the current value,
d11354 50
a11403 14
output forms are decimal (<span><strong class="command">d</strong></span>), octal (<span><strong class="command">o</strong></span>)
and hexadecimal (<span><strong class="command">x</strong></span> or <span><strong class="command">X</strong></span> for uppercase).
The default modifier is <span><strong class="command">${0,0,d}</strong></span>.
If the <span><strong class="command">lhs</strong></span> is not
absolute, the current <span><strong class="command">$ORIGIN</strong></span> is appended to
the name.</p>
<p>For compatibility with earlier versions <span><strong class="command">$$</strong></span> is still
recognized a indicating a literal $ in the output.</p>
</td>
</tr>
<tr>
<td><p><span><strong class="command">ttl</strong></span></p></td>
<td>
<p><span><strong class="command">ttl</strong></span> specifies the
d11405 27
a11431 9
	  inherited using the normal ttl inheritance rules.</p>
	  <p><span><strong class="command">class</strong></span> and <span><strong class="command">ttl</strong></span> can be
	  entered in either order.</p>
</td>
</tr>
<tr>
<td><p><span><strong class="command">class</strong></span></p></td>
<td>
<p><span><strong class="command">class</strong></span> specifies the
d11433 127
a11559 42
	  it is specified.</p>
	  <p><span><strong class="command">class</strong></span> and <span><strong class="command">ttl</strong></span> can be
	  entered in either order.</p>
</td>
</tr>
<tr>
<td><p><span><strong class="command">type</strong></span></p></td>
<td><p>At present the only supported types are
PTR, CNAME, DNAME, A, AAAA and NS.</p></td>
</tr>
<tr>
<td><p><span><strong class="command">rhs</strong></span></p></td>
<td><p>rhs is a domain name. It is processed
similarly to lhs.</p></td>
</tr>
</tbody>
</table></div>
<p>The <span><strong class="command">$GENERATE</strong></span> directive is a <span class="acronym">BIND</span> extension
and not part of the standard zone file format.</p>
<p>BIND 8 does not support the optional TTL and CLASS fields.</p>
</div>
</div>
</div>
<div class="navfooter">
<hr>
<table width="100%" summary="Navigation footer">
<tr>
<td width="40%" align="left">
<a accesskey="p" href="Bv9ARM.ch05.html">Prev</a> </td>
<td width="20%" align="center"> </td>
<td width="40%" align="right"> <a accesskey="n" href="Bv9ARM.ch07.html">Next</a>
</td>
</tr>
<tr>
<td width="40%" align="left" valign="top">Chapter 5. The <span class="acronym">BIND</span> 9 Lightweight Resolver </td>
<td width="20%" align="center"><a accesskey="h" href="Bv9ARM.html">Home</a></td>
<td width="40%" align="right" valign="top"> Chapter 7. <span class="acronym">BIND</span> 9 Security Considerations</td>
</tr>
</table>
</div>
</body>
</html>
@


1.1.1.5
log
@ISC BIND release 9.3.3
@
text
@d2 1
a2 1
 - Copyright (C) 2004-2006 Internet Systems Consortium, Inc. ("ISC")
d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.56.2.12.2.43 2006/11/15 04:33:41 marka Exp $ -->
d22 1
a22 1
<meta name="generator" content="DocBook XSL Stylesheets V1.70.1">
d31 1
a31 1
<tr><th colspan="3" align="center">Chapter 6. <acronym class="acronym">BIND</acronym> 9 Configuration Reference</th></tr>
d44 1
a44 1
<a name="Bv9ARM.ch06"></a>Chapter 6. <acronym class="acronym">BIND</acronym> 9 Configuration Reference</h2></div></div></div>
d51 1
a51 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2575672">Comment Syntax</a></span></dt>
d55 1
a55 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576157"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
d58 1
a58 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576326"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
d60 11
a70 11
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576672"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576686"><span><strong class="command">include</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576709"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576730"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576870"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2577064"><span><strong class="command">logging</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578270"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578343"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578406"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578518"><span><strong class="command">masters</strong></span> Statement Definition and Usage </a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2578533"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
d74 3
a76 3
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586290"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586338"><span><strong class="command">trusted-keys</strong></span> Statement Definition
	    and Usage</a></span></dt>
d78 1
a78 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586420"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
d81 1
a81 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2587635"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
d83 1
a83 1
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2589173">Zone File</a></span></dt>
d86 1
a86 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2590605">Discussion of MX Records</a></span></dt>
d88 3
a90 3
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591102">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591208">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591377"><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
d94 4
a97 4
<p><acronym class="acronym">BIND</acronym> 9 configuration is broadly similar
to <acronym class="acronym">BIND</acronym> 8; however, there are a few new areas
of configuration, such as views. <acronym class="acronym">BIND</acronym>
8 configuration files should work with few alterations in <acronym class="acronym">BIND</acronym>
d100 2
a101 2
found in <acronym class="acronym">BIND</acronym> 9.</p>
<p><acronym class="acronym">BIND</acronym> 4 configuration files can be converted to the new format
d107 1
a107 1
<p>Following is a list of elements used throughout the <acronym class="acronym">BIND</acronym> configuration
d170 1
a170 1
In some cases, an asterisk (`*') character can be used as a placeholder to
d194 1
a194 1
<td><p>A non-negative 32-bit integer
d247 1
a247 1
<a name="id2575552"></a>Syntax</h4></div></div></div>
d256 1
a256 1
<a name="id2575578"></a>Definition and Usage</h4></div></div></div>
d306 3
a308 3
<a name="id2575672"></a>Comment Syntax</h3></div></div></div>
<p>The <acronym class="acronym">BIND</acronym> 9 comment syntax allows for comments to appear
anywhere that white space may appear in a <acronym class="acronym">BIND</acronym> configuration
d313 2
a314 2
<a name="id2575687"></a>Syntax</h4></div></div></div>
<pre class="programlisting">/* This is a <acronym class="acronym">BIND</acronym> comment as in C */</pre>
d317 1
a317 1
<pre class="programlisting">// This is a <acronym class="acronym">BIND</acronym> comment as in C++</pre>
d320 1
a320 1
<pre class="programlisting"># This is a <acronym class="acronym">BIND</acronym> comment as in common UNIX shells and perl</pre>
d326 3
a328 3
<a name="id2575716"></a>Definition and Usage</h4></div></div></div>
<p>Comments may appear anywhere that white space may appear in
a <acronym class="acronym">BIND</acronym> configuration file.</p>
d372 1
a372 1
<p>A <acronym class="acronym">BIND</acronym> 9 configuration consists of statements and comments.
d411 1
a411 1
also act as a light-weight resolver daemon (<span><strong class="command">lwresd</strong></span>).</p></td>
d447 1
a447 1
<a name="id2576157"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
d498 1
a498 1
<a name="id2576326"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
d519 1
a519 1
      of <code class="literal">*</code> (asterisk) is interpreted as the IPv4 wildcard
d530 1
a530 1
      is used.  The asterisk "<code class="literal">*</code>" cannot be used for
d560 1
a560 1
was specified as when <acronym class="acronym">BIND</acronym> was built).
d565 1
a565 1
      ease the transition of systems from <acronym class="acronym">BIND</acronym> 8,
d569 2
a570 2
It makes it possible to use an existing <acronym class="acronym">BIND</acronym> 8
configuration file in <acronym class="acronym">BIND</acronym> 9 unchanged,
d579 1
a579 1
      <acronym class="acronym">BIND</acronym> 8 configuration files, this feature does not
d587 2
a588 2
      <span><strong class="command">rndc</strong></span> commands, then you need to create a
      <code class="filename">rndc.conf</code> file and make it group readable by a group
d590 4
a593 5
<p>The UNIX control channel type of <acronym class="acronym">BIND</acronym> 8 is not supported
      in <acronym class="acronym">BIND</acronym> 9.0, <acronym class="acronym">BIND</acronym> 9.1,
      <acronym class="acronym">BIND</acronym> 9.2 and <acronym class="acronym">BIND</acronym> 9.3.
      If it is present in the controls statement from a
      <acronym class="acronym">BIND</acronym> 8 configuration file, it is ignored
d602 1
a602 1
<a name="id2576672"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
d607 1
a607 1
<a name="id2576686"></a><span><strong class="command">include</strong></span> Statement Definition and Usage</h3></div></div></div>
d618 1
a618 1
<a name="id2576709"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
d627 1
a627 1
<a name="id2576730"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
d659 1
a659 1
<a name="id2576870"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
d683 1
a683 1
<a name="id2577064"></a><span><strong class="command">logging</strong></span> Statement Definition and Usage</h3></div></div></div>
d697 2
a698 2
<p>In <acronym class="acronym">BIND</acronym> 9, the logging configuration is only established when
the entire configuration file has been parsed.  In <acronym class="acronym">BIND</acronym> 8, it was
d706 1
a706 1
<a name="id2577116"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
d726 2
a727 2
renaming them when opening.  For example, if you choose to keep three old versions
of the file <code class="filename">lamers.log</code>, then just before it is opened
d797 1
a797 1
can be set to zero, and debugging mode turned off, by running <span><strong class="command">rndc
d856 1
a856 1
nonzero.  It normally writes to a file called <code class="filename">named.run</code>
d898 1
a898 1
categories may be added in future <acronym class="acronym">BIND</acronym> releases.</p>
d975 1
a975 1
At startup, specifying the category <span><strong class="command">queries</strong></span> will also
d980 1
a980 1
The query log entry reports the client's IP address and port number, and the
d1021 1
a1021 1
<a name="id2578270"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
d1034 1
a1034 1
<a name="id2578343"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
d1036 2
a1037 2
server to also act as a lightweight resolver server. (See
<a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.)  There may be be multiple
d1062 1
a1062 1
<a name="id2578406"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
d1069 1
a1069 1
<a name="id2578518"></a><span><strong class="command">masters</strong></span> Statement Definition and Usage </h3></div></div></div>
d1075 1
a1075 1
<a name="id2578533"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
a1086 1
    [<span class="optional"> cache-file <em class="replaceable"><code>path_name</code></em>; </span>]
d1193 1
a1193 1
to be used by <acronym class="acronym">BIND</acronym>. This statement may appear only
d1213 1
a1213 1
It was used in <acronym class="acronym">BIND</acronym> 8 to
d1215 1
a1215 1
In <acronym class="acronym">BIND</acronym> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
a1233 4
<dt><span class="term"><span><strong class="command">cache-file</strong></span></span></dt>
<dd><p>
		This is for testing only.  Do not use.
              </p></dd>
d1257 1
a1257 1
in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.</p></dd>
d1280 1
a1280 1
If specified, the listed type (A or AAAA) will be emitted before other glue
d1282 1
a1282 1
The default is not to prefer any type (NONE).
d1287 2
a1288 2
Turn on enforcement of delegation-only in TLDs (top level domains)
and root zones with an optional exclude list.
d1291 1
a1291 1
Note some TLDs are not delegation only (e.g. "DE", "LV", "US" and "MUSEUM").
d1307 1
a1307 1
When set, <span><strong class="command">dnssec-lookaside</strong></span> provides the
d1318 2
a1319 2
Specify heirarchies which must be or may not be secure (signed and validated).
If <strong class="userinput"><code>yes</code></strong>, then named will only accept answers if they
d1321 1
a1321 1
If <strong class="userinput"><code>no</code></strong>, then normal dnssec validation applies
d1335 1
a1335 1
a change from <acronym class="acronym">BIND</acronym> 8. If you are using very old DNS software, you
d1338 2
a1339 2
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to enable checking
for memory leaks on exit. <acronym class="acronym">BIND</acronym> 9 ignores the option and always performs
d1345 1
a1345 1
a dial-on-demand dialup link, which can be brought up by traffic
d1356 1
a1356 1
<p>If the zone is a master zone, then the server will send out a NOTIFY 
d1431 1
a1431 1
<dd><p>In <acronym class="acronym">BIND</acronym> 8, this option
d1433 1
a1433 1
IQUERY. <acronym class="acronym">BIND</acronym> 9 never does IQUERY simulation.
d1444 1
a1444 1
flush or do not flush any pending zone writes.  The default is
d1449 1
a1449 1
in <acronym class="acronym">BIND</acronym> 8, and is ignored by <acronym class="acronym">BIND</acronym> 9.
d1463 2
a1464 2
 It was used in <acronym class="acronym">BIND</acronym> 8 to determine whether a transaction log was
kept for Incremental Zone Transfer. <acronym class="acronym">BIND</acronym> 9 maintains a transaction
d1476 1
a1476 1
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to allow
d1478 1
a1478 1
DNS standards.  <acronym class="acronym">BIND</acronym> 9.2 always strictly
d1522 1
a1522 1
<p>Not yet implemented in <acronym class="acronym">BIND</acronym> 9.</p>
d1527 1
a1527 1
<acronym class="acronym">BIND</acronym> 9 always allocates query IDs from a pool.
d1548 1
a1548 1
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>.
d1554 1
a1554 1
<a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and Usage&#8221;</a>.
d1557 1
a1557 1
<dd><p>This option was used in <acronym class="acronym">BIND</acronym> 8 to make
d1561 1
a1561 1
on an NT or DOS machine. In <acronym class="acronym">BIND</acronym> 9, both UNIX "<span><strong class="command">\n</strong></span>"
d1635 1
a1635 1
When  <strong class="userinput"><code>yes</code></strong> and the server loads a new version of a master
d1658 1
a1658 1
addresses refer to different machines.  If <strong class="userinput"><code>yes</code></strong>, named will not log
d1664 1
a1664 1
Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>,
d1670 2
a1671 2
Specify whether query logging should be started when named starts.
If <span><strong class="command">querylog</strong></span> is not specified, then the query logging
d1682 1
a1682 1
For answers received from the network (<span><strong class="command">response</strong></span>)
d1685 1
a1685 1
<p>The rules for legal hostnames and mail domains are derived from RFC 952
d1699 1
a1699 1
<a name="id2581312"></a>Forwarding</h4></div></div></div>
d1711 2
a1712 2
the default, causes the server to query the forwarders first &#8212; and
if that doesn't answer the question, the server will then look for
d1731 1
a1731 1
<a name="id2581362"></a>Dual-stack Servers</h4></div></div></div>
d1737 2
a1738 2
<dd><p>Specifies host names or addresses of machines with access to
both IPv4 and IPv6 transports. If a hostname is used, the server must be able
d1740 1
a1740 1
stacked, then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
d1812 1
a1812 1
<a name="id2581677"></a>Interfaces</h4></div></div></div>
d1862 1
a1862 1
<a name="id2581834"></a>Query Address</h4></div></div></div>
d1867 1
a1867 1
If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> (asterisk) or is omitted,
d1870 3
a1872 3
a random unprivileged port will be used. The <span><strong class="command">avoid-v4-udp-ports</strong></span>
and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used to prevent named
from selecting certain ports. The defaults are:</p>
a1887 7
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
	    Solaris 2.5.1 and earlier does not support setting the source
	    address for TCP sockets.
	  </p>
</div>
d1892 1
a1892 1
<p><acronym class="acronym">BIND</acronym> has mechanisms in place to facilitate zone transfers
d1952 2
a1953 3
such as <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym> 8.x and patched
versions of <acronym class="acronym">BIND</acronym> 4.9.5. The <span><strong class="command">many-answers</strong></span>
format is also supported by recent Microsoft Windows nameservers. The default is
d2004 1
a2004 1
		  to be used, you should set
d2020 1
a2020 2
<dd>
<p><span><strong class="command">notify-source</strong></span> determines
d2026 1
a2026 1
but can be overridden on a per-zone or per-view basis by including a
d2028 1
a2028 9
or <span><strong class="command">view</strong></span> block in the configuration file.</p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                   Solaris 2.5.1 and earlier does not support setting the
                   source address for TCP sockets.
                 </p>
</div>
</dd>
d2036 1
a2036 1
<a name="id2582444"></a>Bad UDP Port Lists</h4></div></div></div>
d2049 1
a2049 1
<a name="id2570036"></a>Operating System Resource Limits</h4></div></div></div>
d2056 2
a2057 2
that was in force when the server was started. See the description
of <span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.</p>
d2093 1
a2093 1
<a name="id2570205"></a>Server  Resource Limits</h4></div></div></div>
d2106 1
a2106 1
(see <a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file approaches
d2111 1
a2111 1
<dd><p>In BIND 8, specifies the maximum number of host statistics
d2147 1
a2147 1
<a name="id2584723"></a>Periodic Task Intervals</h4></div></div></div>
d2153 1
a2153 1
If set to 0, no periodic cleaning will occur.</p></dd>
d2178 1
a2178 1
<p>Not yet implemented in <acronym class="acronym">BIND</acronym>9.</p>
d2213 1
a2213 1
is not implemented in <acronym class="acronym">BIND</acronym> 9.
d2229 1
a2229 1
When a client is using a local server, the sorting can be performed
d2282 1
a2282 1
to the behavior of the address sort in <acronym class="acronym">BIND</acronym> 4.9.x. Responses sent
d2309 1
a2309 1
If no name is specified, the default is "<span><strong class="command">*</strong></span>" (asterisk).</p>
d2347 1
a2347 1
is not yet fully implemented in <acronym class="acronym">BIND</acronym> 9.
d2360 1
a2360 1
The default is <code class="literal">600</code> (10 minutes) and the maximum value is 
d2363 1
a2363 1
<dd><p>To reduce network traffic and increase performance,
d2371 1
a2371 1
<dd><p>Sets
d2377 1
a2377 1
is required for a request for the root servers to be accepted. The default
d2381 1
a2381 1
<p>Not implemented in <acronym class="acronym">BIND</acronym> 9.</p>
d2413 1
a2413 1
size in bytes.  Valid values are 512 to 4096 bytes (values outside this range will be
d2415 1
a2415 1
setting edns-udp-size to a non-default value it to get UDP answers to
d2449 1
a2449 1
found by the gethostname() function.  The primary purpose of such queries is to
d2462 1
a2462 1
use the hostname as found by the gethostname() function.
d2470 1
a2470 1
<p>The statistics file generated by <acronym class="acronym">BIND</acronym> 9
d2472 1
a2472 1
generated by <acronym class="acronym">BIND</acronym> 8.
d2474 2
a2475 5
<p>The statistics dump begins with a line, like:</p>
<p>
 <span><strong class="command">+++ Statistics Dump +++ (973798949)</strong></span>
 </p>
<p>The numberr in parentheses is a standard
d2481 3
a2483 9
omitted for the default view).
</p>
<p>
The statistics dump ends with the line where the
number is identical to the number in the beginning line; for example:
</p>
<p>
<span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>
</p>
d2599 2
a2600 2
more efficient, but is only known to be understood by <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
8.x, and patched versions of <acronym class="acronym">BIND</acronym> 4.9.5. You can specify which method
d2626 1
a2626 1
For more details, see the description of
d2633 1
a2633 1
<a name="id2586290"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
d2642 13
a2654 27
<a name="id2586338"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
	    and Usage</h3></div></div></div>
<p>
	    The <span><strong class="command">trusted-keys</strong></span> statement defines
	    DNSSEC security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the
	    public key for a non-authoritative zone is known, but
	    cannot be securely obtained through DNS, either because
	    it is the DNS root zone or because its parent zone is
	    unsigned.  Once a key has been configured as a trusted
	    key, it is treated as if it had been validated and
	    proven secure. The resolver attempts DNSSEC validation
	    on all DNS data in subdomains of a security root.
  	  </p>
<p>
	    All keys (and corresponding zones) listed in
	    <span><strong class="command">trusted-keys</strong></span> are deemed to exist regardless
	    of what parent zones say.  Similarly for all keys listed in
	    <span><strong class="command">trusted-keys</strong></span> only those keys are
	    used to validate the DNSKEY RRset.  The parent's DS RRset
	    will not be used.
  	  </p>
<p>
	    The <span><strong class="command">trusted-keys</strong></span> statement can contain
	    multiple key entries, each consisting of the key's
	    domain name, flags, protocol, algorithm, and the Base-64
	    representation of the key data.
	  </p>
d2671 1
a2671 1
<a name="id2586420"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
d2673 1
a2673 1
of <acronym class="acronym">BIND</acronym> 9 that lets a name server answer a DNS query differently
d2717 1
a2717 1
using <span><strong class="command">view</strong></span> statements:</p>
d2753 3
a2755 2
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type master;
a2759 31
    [<span class="optional"> also-notify { <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> ixfr-base <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> ixfr-tmp-file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> maintain-ixfr-base <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> max-ixfr-log-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-idle-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-out <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> sig-validity-interval <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> key-directory <em class="replaceable"><code>path_name</code></em>; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type slave;
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
d2764 1
a2786 34
    [<span class="optional"> database <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> min-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-refresh-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> min-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-retry-time <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> multi-master <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type hint;
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; // Not Implemented. </span>]
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type stub;
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> } ; </span>]
    [<span class="optional"> check-names (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> dialup <em class="replaceable"><code>dialup_option</code></em> ; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> file <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] } ; </span>]
    [<span class="optional"> max-transfer-idle-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-transfer-time-in <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> pubkey <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>number</code></em> <em class="replaceable"><code>string</code></em> ; </span>]
    [<span class="optional"> transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> alt-transfer-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> use-alt-transfer-source <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> zone-statistics <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
d2794 1
a2794 8
};

zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type forward;
    [<span class="optional"> forward (<code class="constant">only</code>|<code class="constant">first</code>) ; </span>]
    [<span class="optional"> forwarders { [<span class="optional"> <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; ... </span>] }; </span>]
    [<span class="optional"> delegation-only <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
};
d2796 1
a2796 3
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] { 
    type delegation-only;
};
d2801 1
a2801 1
<a name="id2587635"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
d2804 1
a2804 1
<a name="id2587641"></a>Zone Types</h4></div></div></div>
d2830 1
a2830 1
recommended, since it often speeds server startup and eliminates
d2833 1
a2833 1
use a two-level naming scheme for zone file names. For example,
d2847 1
a2847 1
they are a feature specific to the <acronym class="acronym">BIND</acronym> implementation.
d2855 1
a2855 1
In <acronym class="acronym">BIND</acronym> 4/8, zone transfers of a parent zone
d2858 1
a2858 1
only in the master server for the parent zone. <acronym class="acronym">BIND</acronym>
d2860 1
a2860 1
way. Therefore, if a <acronym class="acronym">BIND</acronym> 9 master serving a parent
d2868 1
a2868 1
RFC1918 addressing may be configured with stub zones for
d2886 2
a2887 2
global <span><strong class="command">forward</strong></span> option (that is, "forward first"
to, then "forward only", or vice versa, but want to use the same
d2903 1
a2903 1
<p>This is used to enforce the delegation-only
d2905 1
a2905 1
is received without an explicit or implicit delegation in the authority
d2907 1
a2907 1
apex.  This should not be applied to leaf zones.</p>
d2917 1
a2917 1
<a name="id2588084"></a>Class</h4></div></div></div>
d2932 1
a2932 1
<a name="id2588115"></a>Zone Options</h4></div></div></div>
d2936 1
a2936 1
<span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d2939 1
a2939 1
<span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.</p></dd>
d2993 1
a2993 1
to <strong class="userinput"><code>yes</code></strong>, then the zone will also be treated as if it
d3004 1
a3004 1
no forwarding is done for the zone and the global options are not used.</p></dd>
d3006 1
a3006 1
<dd><p>Was used in <acronym class="acronym">BIND</acronym> 8 to specify the name
d3008 1
a3008 1
<acronym class="acronym">BIND</acronym> 9 ignores the option and constructs the name of the journal
d3012 2
a3013 2
<dd><p>Was an undocumented option in <acronym class="acronym">BIND</acronym> 8.
Ignored in <acronym class="acronym">BIND</acronym> 9.</p></dd>
d3030 1
a3030 1
<dd><p>In <acronym class="acronym">BIND</acronym> 8, this option was intended for specifying
d3032 1
a3032 1
zones when they are loaded from disk. <acronym class="acronym">BIND</acronym> 9 does not verify signatures
d3043 1
a3043 1
<span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
d3047 1
a3047 1
<span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
d3051 1
a3051 1
<span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
d3055 1
a3055 1
<span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
d3059 1
a3059 1
<span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
d3080 1
a3080 1
<span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and Usage&#8221;</a>.</p></dd>
d3089 1
a3089 1
<p><acronym class="acronym">BIND</acronym> 9 supports two alternative methods of granting clients
d3094 1
a3094 1
way as in previous versions of <acronym class="acronym">BIND</acronym>. It grants given clients the
d3096 1
a3096 1
<p>The <span><strong class="command">update-policy</strong></span> clause is new in <acronym class="acronym">BIND</acronym>
d3180 1
a3180 1
<a name="id2589173"></a>Zone File</h2></div></div></div>
d3190 1
a3190 1
<a name="id2589191"></a>Resource Records</h4></div></div></div>
d3212 1
a3212 1
<td><p>an encoded 16-bit value that specifies
d3217 2
a3218 2
<td><p>the time-to-live of the RR. This field
is a 32-bit integer in units of seconds, and is primarily used by
d3224 1
a3224 1
<td><p>an encoded 16-bit value that identifies
d3316 1
a3316 1
A 16-bit preference value (lower is better)
d3449 1
a3449 1
<a name="id2590180"></a>Textual expression of RRs</h4></div></div></div>
d3508 1
a3508 1
<p>The MX RRs have an RDATA section which consists of a 16-bit
d3510 2
a3511 2
IP address format to contain a 32-bit internet address.</p>
<p>The above example shows six RRs, with two RRs at each of three
d3539 1
a3539 1
<a name="id2590605"></a>Discussion of MX Records</h3></div></div></div>
d3616 1
a3616 1
<p>The time-to-live of the RR field is a 32-bit integer represented
d3656 1
a3656 1
<a name="id2591102"></a>Inverse Mapping in IPv4</h3></div></div></div>
d3694 1
a3694 1
<a name="id2591208"></a>Other Zone File Directives</h3></div></div></div>
d3703 1
a3703 1
<a name="id2591227"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
d3718 1
a3718 1
<a name="id2591283"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
d3742 1
a3742 1
<a name="id2591346"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
d3753 1
a3753 1
<a name="id2591377"></a><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
d3780 1
a3780 1
or start-stop/step. If the first form is used, then step is set to
d3787 1
a3787 2
owner name of the resource records to be created. Any single
<span><strong class="command">$</strong></span> (dollar sign) symbols
d3796 2
a3797 2
For example, <span><strong class="command">${-20,3,d}</strong></span> which subtracts 20 from the current value,
prints the result as a decimal in a zero-padded field of width 3.  Available
d3804 2
a3805 2
<p>For compatibility with earlier versions, <span><strong class="command">$$</strong></span> is still
recognized as indicating a literal $ in the output.</p>
d3811 1
a3811 1
<p>Specifies the
d3821 1
a3821 1
<p>Specifies the
d3835 1
a3835 1
<td><p>A domain name. It is processed
d3840 1
a3840 1
<p>The <span><strong class="command">$GENERATE</strong></span> directive is a <acronym class="acronym">BIND</acronym> extension
d3857 1
a3857 1
<td width="40%" align="left" valign="top">Chapter 5. The <acronym class="acronym">BIND</acronym> 9 Lightweight Resolver </td>
d3859 1
a3859 1
<td width="40%" align="right" valign="top"> Chapter 7. <acronym class="acronym">BIND</acronym> 9 Security Considerations</td>
@


1.1.1.6
log
@ISC BIND release 9.4.2
@
text
@d2 1
a2 1
 - Copyright (C) 2004-2007 Internet Systems Consortium, Inc. ("ISC")
d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.82.18.73 2007/10/31 01:35:58 marka Exp $ -->
d22 1
a22 1
<meta name="generator" content="DocBook XSL Stylesheets V1.71.1">
d51 1
a51 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2573480">Comment Syntax</a></span></dt>
d55 1
a55 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574092"><span><strong class="command">acl</strong></span> Statement Grammar</a></span></dt>
d57 15
a71 20
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574282"><span><strong class="command">controls</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage"><span><strong class="command">controls</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574711"><span><strong class="command">include</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574726"><span><strong class="command">include</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574749"><span><strong class="command">key</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574771"><span><strong class="command">key</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2574930"><span><strong class="command">logging</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2575056"><span><strong class="command">logging</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576406"><span><strong class="command">lwres</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576480"><span><strong class="command">lwres</strong></span> Statement Definition and Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576544"><span><strong class="command">masters</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576587"><span><strong class="command">masters</strong></span> Statement Definition and
          Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2576602"><span><strong class="command">options</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#options"><span><strong class="command">options</strong></span> Statement Definition and
          Usage</a></span></dt>
d73 4
a76 5
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#server_statement_definition_and_usage"><span><strong class="command">server</strong></span> Statement Definition and
            Usage</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585361"><span><strong class="command">trusted-keys</strong></span> Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585410"><span><strong class="command">trusted-keys</strong></span> Statement Definition
            and Usage</a></span></dt>
d78 1
a78 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2585490"><span><strong class="command">view</strong></span> Statement Definition and Usage</a></span></dt>
d80 2
a81 2
            Statement Grammar</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2586798"><span><strong class="command">zone</strong></span> Statement Definition and Usage</a></span></dt>
d83 1
a83 1
<dt><span class="sect1"><a href="Bv9ARM.ch06.html#id2589080">Zone File</a></span></dt>
d86 1
a86 1
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591101">Discussion of MX Records</a></span></dt>
d88 3
a90 4
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591653">Inverse Mapping in IPv4</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2591848">Other Zone File Directives</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#id2592173"><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</a></span></dt>
<dt><span class="sect2"><a href="Bv9ARM.ch06.html#zonefile_format">Additional File Formats</a></span></dt>
d94 10
a103 16
<p>
      <acronym class="acronym">BIND</acronym> 9 configuration is broadly similar
      to <acronym class="acronym">BIND</acronym> 8; however, there are a few new
      areas
      of configuration, such as views. <acronym class="acronym">BIND</acronym>
      8 configuration files should work with few alterations in <acronym class="acronym">BIND</acronym>
      9, although more complex configurations should be reviewed to check
      if they can be more efficiently implemented using the new features
      found in <acronym class="acronym">BIND</acronym> 9.
    </p>
<p>
      <acronym class="acronym">BIND</acronym> 4 configuration files can be
      converted to the new format
      using the shell script
      <code class="filename">contrib/named-bootconf/named-bootconf.sh</code>.
    </p>
d107 2
a108 4
<p>
        Following is a list of elements used throughout the <acronym class="acronym">BIND</acronym> configuration
        file documentation:
      </p>
d116 3
a118 11
<td>
                <p>
                  <code class="varname">acl_name</code>
                </p>
              </td>
<td>
                <p>
                  The name of an <code class="varname">address_match_list</code> as
                  defined by the <span><strong class="command">acl</strong></span> statement.
                </p>
              </td>
d121 5
a125 14
<td>
                <p>
                  <code class="varname">address_match_list</code>
                </p>
              </td>
<td>
                <p>
                  A list of one or more
                  <code class="varname">ip_addr</code>,
                  <code class="varname">ip_prefix</code>, <code class="varname">key_id</code>,
                  or <code class="varname">acl_name</code> elements, see
                  <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a>.
                </p>
              </td>
d128 3
a130 14
<td>
                <p>
                  <code class="varname">masters_list</code>
                </p>
              </td>
<td>
                <p>
                  A named list of one or more <code class="varname">ip_addr</code>
                  with optional <code class="varname">key_id</code> and/or
                  <code class="varname">ip_port</code>.
                  A <code class="varname">masters_list</code> may include other
                  <code class="varname">masters_lists</code>.
                </p>
              </td>
d133 4
a136 11
<td>
                <p>
                  <code class="varname">domain_name</code>
                </p>
              </td>
<td>
                <p>
                  A quoted string which will be used as
                  a DNS name, for example "<code class="literal">my.test.domain</code>".
                </p>
              </td>
d139 3
a141 12
<td>
                <p>
                  <code class="varname">dotted_decimal</code>
                </p>
              </td>
<td>
                <p>
                  One to four integers valued 0 through
                  255 separated by dots (`.'), such as <span><strong class="command">123</strong></span>,
                  <span><strong class="command">45.67</strong></span> or <span><strong class="command">89.123.45.67</strong></span>.
                </p>
              </td>
d144 16
a159 11
<td>
                <p>
                  <code class="varname">ip4_addr</code>
                </p>
              </td>
<td>
                <p>
                  An IPv4 address with exactly four elements
                  in <code class="varname">dotted_decimal</code> notation.
                </p>
              </td>
d162 2
a163 31
<td>
                <p>
                  <code class="varname">ip6_addr</code>
                </p>
              </td>
<td>
                <p>
                  An IPv6 address, such as <span><strong class="command">2001:db8::1234</strong></span>.
                  IPv6 scoped addresses that have ambiguity on their scope
                  zones must be
                  disambiguated by an appropriate zone ID with the percent
                  character
                  (`%') as delimiter.
                  It is strongly recommended to use string zone names rather
                  than
                  numeric identifiers, in order to be robust against system
                  configuration changes.
                  However, since there is no standard mapping for such names
                  and
                  identifier values, currently only interface names as link
                  identifiers
                  are supported, assuming one-to-one mapping between
                  interfaces and links.
                  For example, a link-local address <span><strong class="command">fe80::1</strong></span> on the
                  link attached to the interface <span><strong class="command">ne0</strong></span>
                  can be specified as <span><strong class="command">fe80::1%ne0</strong></span>.
                  Note that on most systems link-local addresses always have
                  the
                  ambiguity, and need to be disambiguated.
                </p>
              </td>
d166 6
a171 10
<td>
                <p>
                  <code class="varname">ip_addr</code>
                </p>
              </td>
<td>
                <p>
                  An <code class="varname">ip4_addr</code> or <code class="varname">ip6_addr</code>.
                </p>
              </td>
d174 7
a180 17
<td>
                <p>
                  <code class="varname">ip_port</code>
                </p>
              </td>
<td>
                <p>
                  An IP port <code class="varname">number</code>.
                  The <code class="varname">number</code> is limited to 0
                  through 65535, with values
                  below 1024 typically restricted to use by processes running
                  as root.
                  In some cases, an asterisk (`*') character can be used as a
                  placeholder to
                  select a random high-numbered port.
                </p>
              </td>
d183 3
a185 18
<td>
                <p>
                  <code class="varname">ip_prefix</code>
                </p>
              </td>
<td>
                <p>
                  An IP network specified as an <code class="varname">ip_addr</code>,
                  followed by a slash (`/') and then the number of bits in the
                  netmask.
                  Trailing zeros in a <code class="varname">ip_addr</code>
                  may omitted.
                  For example, <span><strong class="command">127/8</strong></span> is the
                  network <span><strong class="command">127.0.0.0</strong></span> with
                  netmask <span><strong class="command">255.0.0.0</strong></span> and <span><strong class="command">1.2.3.0/28</strong></span> is
                  network <span><strong class="command">1.2.3.0</strong></span> with netmask <span><strong class="command">255.255.255.240</strong></span>.
                </p>
              </td>
d188 3
a190 12
<td>
                <p>
                  <code class="varname">key_id</code>
                </p>
              </td>
<td>
                <p>
                  A <code class="varname">domain_name</code> representing
                  the name of a shared key, to be used for transaction
                  security.
                </p>
              </td>
d193 5
a197 12
<td>
                <p>
                  <code class="varname">key_list</code>
                </p>
              </td>
<td>
                <p>
                  A list of one or more
                  <code class="varname">key_id</code>s,
                  separated by semicolons and ending with a semicolon.
                </p>
              </td>
d200 3
a202 13
<td>
                <p>
                  <code class="varname">number</code>
                </p>
              </td>
<td>
                <p>
                  A non-negative 32-bit integer
                  (i.e., a number between 0 and 4294967295, inclusive).
                  Its acceptable value might further
                  be limited by the context in which it is used.
                </p>
              </td>
d205 1
d207 16
a222 46
                <p>
                  <code class="varname">path_name</code>
                </p>
              </td>
<td>
                <p>
                  A quoted string which will be used as
                  a pathname, such as <code class="filename">zones/master/my.test.domain</code>.
                </p>
              </td>
</tr>
<tr>
<td>
                <p>
                  <code class="varname">size_spec</code>
                </p>
              </td>
<td>
                <p>
                  A number, the word <strong class="userinput"><code>unlimited</code></strong>,
                  or the word <strong class="userinput"><code>default</code></strong>.
                </p>
                <p>
                  An <code class="varname">unlimited</code> <code class="varname">size_spec</code> requests unlimited
                  use, or the maximum available amount. A <code class="varname">default size_spec</code> uses
                  the limit that was in force when the server was started.
                </p>
                <p>
                  A <code class="varname">number</code> can optionally be
                  followed by a scaling factor:
                  <strong class="userinput"><code>K</code></strong> or <strong class="userinput"><code>k</code></strong>
                  for kilobytes,
                  <strong class="userinput"><code>M</code></strong> or <strong class="userinput"><code>m</code></strong>
                  for megabytes, and
                  <strong class="userinput"><code>G</code></strong> or <strong class="userinput"><code>g</code></strong> for gigabytes,
                  which scale by 1024, 1024*1024, and 1024*1024*1024
                  respectively.
                </p>
                <p>
                  The value must be representable as a 64-bit unsigned integer
                  (0 to 18446744073709551615, inclusive).
                  Using <code class="varname">unlimited</code> is the best
                  way
                  to safely set a really large number.
                </p>
              </td>
d225 4
a228 13
<td>
                <p>
                  <code class="varname">yes_or_no</code>
                </p>
              </td>
<td>
                <p>
                  Either <strong class="userinput"><code>yes</code></strong> or <strong class="userinput"><code>no</code></strong>.
                  The words <strong class="userinput"><code>true</code></strong> and <strong class="userinput"><code>false</code></strong> are
                  also accepted, as are the numbers <strong class="userinput"><code>1</code></strong>
                  and <strong class="userinput"><code>0</code></strong>.
                </p>
              </td>
d231 8
a238 16
<td>
                <p>
                  <code class="varname">dialup_option</code>
                </p>
              </td>
<td>
                <p>
                  One of <strong class="userinput"><code>yes</code></strong>,
                  <strong class="userinput"><code>no</code></strong>, <strong class="userinput"><code>notify</code></strong>,
                  <strong class="userinput"><code>notify-passive</code></strong>, <strong class="userinput"><code>refresh</code></strong> or
                  <strong class="userinput"><code>passive</code></strong>.
                  When used in a zone, <strong class="userinput"><code>notify-passive</code></strong>,
                  <strong class="userinput"><code>refresh</code></strong>, and <strong class="userinput"><code>passive</code></strong>
                  are restricted to slave and stub zones.
                </p>
              </td>
d247 1
a247 1
<a name="id2573277"></a>Syntax</h4></div></div></div>
d256 6
a261 9
<a name="id2573305"></a>Definition and Usage</h4></div></div></div>
<p>
            Address match lists are primarily used to determine access
            control for various server operations. They are also used in
            the <span><strong class="command">listen-on</strong></span> and <span><strong class="command">sortlist</strong></span>
            statements. The elements
            which constitute an address match list can be any of the
            following:
          </p>
d265 1
a265 4
<li>
                a key ID, as defined by the <span><strong class="command">key</strong></span>
                statement
              </li>
d267 1
a267 2
                the <span><strong class="command">acl</strong></span> statement
              </li>
d270 32
a301 53
<p>
            Elements can be negated with a leading exclamation mark (`!'),
            and the match list names "any", "none", "localhost", and
            "localnets"
            are predefined. More information on those names can be found in
            the description of the acl statement.
          </p>
<p>
            The addition of the key clause made the name of this syntactic
            element something of a misnomer, since security keys can be used
            to validate access without regard to a host or network address.
            Nonetheless,
            the term "address match list" is still used throughout the
            documentation.
          </p>
<p>
            When a given IP address or prefix is compared to an address
            match list, the list is traversed in order until an element
            matches.
            The interpretation of a match depends on whether the list is being
            used
            for access control, defining listen-on ports, or in a sortlist,
            and whether the element was negated.
          </p>
<p>
            When used as an access control list, a non-negated match
            allows access and a negated match denies access. If
            there is no match, access is denied. The clauses
            <span><strong class="command">allow-notify</strong></span>,
            <span><strong class="command">allow-query</strong></span>,
            <span><strong class="command">allow-query-cache</strong></span>,
            <span><strong class="command">allow-transfer</strong></span>,
            <span><strong class="command">allow-update</strong></span>,
            <span><strong class="command">allow-update-forwarding</strong></span>, and
            <span><strong class="command">blackhole</strong></span> all use address match
            lists.  Similarly, the listen-on option will cause the
            server to not accept queries on any of the machine's
            addresses which do not match the list.
          </p>
<p>
            Because of the first-match aspect of the algorithm, an element
            that defines a subset of another element in the list should come
            before the broader element, regardless of whether either is
            negated. For
            example, in
            <span><strong class="command">1.2.3/24; ! 1.2.3.13;</strong></span> the 1.2.3.13
            element is
            completely useless because the algorithm will match any lookup for
            1.2.3.13 to the 1.2.3/24 element.
            Using <span><strong class="command">! 1.2.3.13; 1.2.3/24</strong></span> fixes
            that problem by having 1.2.3.13 blocked by the negation but all
            other 1.2.3.* hosts fall through.
          </p>
d306 5
a310 8
<a name="id2573480"></a>Comment Syntax</h3></div></div></div>
<p>
          The <acronym class="acronym">BIND</acronym> 9 comment syntax allows for
          comments to appear
          anywhere that whitespace may appear in a <acronym class="acronym">BIND</acronym> configuration
          file. To appeal to programmers of all kinds, they can be written
          in the C, C++, or shell/perl style.
        </p>
d313 1
a313 3
<a name="id2573495"></a>Syntax</h4></div></div></div>
<p>
            </p>
d316 1
a316 1
            </p>
d319 1
a319 1
            </p>
d322 1
a322 1
          </p>
d326 9
a334 18
<a name="id2573525"></a>Definition and Usage</h4></div></div></div>
<p>
            Comments may appear anywhere that whitespace may appear in
            a <acronym class="acronym">BIND</acronym> configuration file.
          </p>
<p>
            C-style comments start with the two characters /* (slash,
            star) and end with */ (star, slash). Because they are completely
            delimited with these characters, they can be used to comment only
            a portion of a line or to span multiple lines.
          </p>
<p>
            C-style comments cannot be nested. For example, the following
            is not valid because the entire comment ends with the first */:
          </p>
<p>

</p>
d340 5
a344 15
<p>

          </p>
<p>
            C++-style comments start with the two characters // (slash,
            slash) and continue to the end of the physical line. They cannot
            be continued across multiple physical lines; to have one logical
            comment span multiple lines, each line must use the // pair.
          </p>
<p>
            For example:
          </p>
<p>

</p>
d349 4
a352 15
<p>

          </p>
<p>
            Shell-style (or perl-style, if you prefer) comments start
            with the character <code class="literal">#</code> (number sign)
            and continue to the end of the
            physical line, as in C++ comments.
          </p>
<p>
            For example:
          </p>
<p>

</p>
d358 1
a358 2

          </p>
d361 4
a364 6
<p>
              You cannot use the semicolon (`;') character
              to start a comment such as you would in a zone file. The
              semicolon indicates the end of a configuration
              statement.
            </p>
d372 6
a377 11
<p>
        A <acronym class="acronym">BIND</acronym> 9 configuration consists of
        statements and comments.
        Statements end with a semicolon. Statements and comments are the
        only elements that can appear without enclosing braces. Many
        statements contain a block of sub-statements, which are also
        terminated with a semicolon.
      </p>
<p>
        The following statements are supported:
      </p>
d385 3
a387 9
<td>
                <p><span><strong class="command">acl</strong></span></p>
              </td>
<td>
                <p>
                  defines a named IP address
                  matching list, for access control and other uses.
                </p>
              </td>
d390 3
a392 9
<td>
                <p><span><strong class="command">controls</strong></span></p>
              </td>
<td>
                <p>
                  declares control channels to be used
                  by the <span><strong class="command">rndc</strong></span> utility.
                </p>
              </td>
d395 2
a396 8
<td>
                <p><span><strong class="command">include</strong></span></p>
              </td>
<td>
                <p>
                  includes a file.
                </p>
              </td>
d399 3
a401 9
<td>
                <p><span><strong class="command">key</strong></span></p>
              </td>
<td>
                <p>
                  specifies key information for use in
                  authentication and authorization using TSIG.
                </p>
              </td>
d404 3
a406 9
<td>
                <p><span><strong class="command">logging</strong></span></p>
              </td>
<td>
                <p>
                  specifies what the server logs, and where
                  the log messages are sent.
                </p>
              </td>
d409 3
a411 9
<td>
                <p><span><strong class="command">lwres</strong></span></p>
              </td>
<td>
                <p>
                  configures <span><strong class="command">named</strong></span> to
                  also act as a light-weight resolver daemon (<span><strong class="command">lwresd</strong></span>).
                </p>
              </td>
d414 3
a416 9
<td>
                <p><span><strong class="command">masters</strong></span></p>
              </td>
<td>
                <p>
                  defines a named masters list for
                  inclusion in stub and slave zone masters clauses.
                </p>
              </td>
d419 3
a421 9
<td>
                <p><span><strong class="command">options</strong></span></p>
              </td>
<td>
                <p>
                  controls global server configuration
                  options and sets defaults for other statements.
                </p>
              </td>
d424 3
a426 9
<td>
                <p><span><strong class="command">server</strong></span></p>
              </td>
<td>
                <p>
                  sets certain configuration options on
                  a per-server basis.
                </p>
              </td>
d429 2
a430 8
<td>
                <p><span><strong class="command">trusted-keys</strong></span></p>
              </td>
<td>
                <p>
                  defines trusted DNSSEC keys.
                </p>
              </td>
d433 2
a434 8
<td>
                <p><span><strong class="command">view</strong></span></p>
              </td>
<td>
                <p>
                  defines a view.
                </p>
              </td>
d437 2
a438 8
<td>
                <p><span><strong class="command">zone</strong></span></p>
              </td>
<td>
                <p>
                  defines a zone.
                </p>
              </td>
d442 3
a444 6
<p>
        The <span><strong class="command">logging</strong></span> and
        <span><strong class="command">options</strong></span> statements may only occur once
        per
        configuration.
      </p>
d447 3
a449 3
<a name="id2574092"></a><span><strong class="command">acl</strong></span> Statement Grammar</h3></div></div></div>
<pre class="programlisting"><span><strong class="command">acl</strong></span> acl-name {
    address_match_list
d456 8
a463 15
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">acl</strong></span> statement assigns a symbolic
          name to an address match list. It gets its name from a primary
          use of address match lists: Access Control Lists (ACLs).
        </p>
<p>
          Note that an address match list's name must be defined
          with <span><strong class="command">acl</strong></span> before it can be used
          elsewhere; no
          forward references are allowed.
        </p>
<p>
          The following ACLs are built-in:
        </p>
d471 2
a472 8
<td>
                  <p><span><strong class="command">any</strong></span></p>
                </td>
<td>
                  <p>
                    Matches all hosts.
                  </p>
                </td>
d475 2
a476 8
<td>
                  <p><span><strong class="command">none</strong></span></p>
                </td>
<td>
                  <p>
                    Matches no hosts.
                  </p>
                </td>
d479 3
a481 9
<td>
                  <p><span><strong class="command">localhost</strong></span></p>
                </td>
<td>
                  <p>
                    Matches the IPv4 and IPv6 addresses of all network
                    interfaces on the system.
                  </p>
                </td>
d484 8
a491 15
<td>
                  <p><span><strong class="command">localnets</strong></span></p>
                </td>
<td>
                  <p>
                    Matches any host on an IPv4 or IPv6 network
                    for which the system has an interface.
                    Some systems do not provide a way to determine the prefix
                    lengths of
                    local IPv6 addresses.
                    In such a case, <span><strong class="command">localnets</strong></span>
                    only matches the local
                    IPv6 addresses, just like <span><strong class="command">localhost</strong></span>.
                  </p>
                </td>
d498 1
a498 1
<a name="id2574282"></a><span><strong class="command">controls</strong></span> Statement Grammar</h3></div></div></div>
d500 3
a502 5
   [ inet ( ip_addr | * ) [ port ip_port ] allow { <em class="replaceable"><code> address_match_list </code></em> }
                keys { <em class="replaceable"><code>key_list</code></em> }; ]
   [ inet ...; ]
   [ unix <em class="replaceable"><code>path</code></em> perm <em class="replaceable"><code>number</code></em> owner <em class="replaceable"><code>number</code></em> group <em class="replaceable"><code>number</code></em> keys { <em class="replaceable"><code>key_list</code></em> }; ]
   [ unix ...; ]
d508 20
a527 2
<a name="controls_statement_definition_and_usage"></a><span><strong class="command">controls</strong></span> Statement Definition and
          Usage</h3></div></div></div>
d529 47
a575 6
          The <span><strong class="command">controls</strong></span> statement declares control
          channels to be used by system administrators to control the
          operation of the name server. These control channels are
          used by the <span><strong class="command">rndc</strong></span> utility to send
          commands to and retrieve non-DNS results from a name server.
        </p>
d577 19
a595 12
          An <span><strong class="command">inet</strong></span> control channel is a TCP socket
          listening at the specified <span><strong class="command">ip_port</strong></span> on the
          specified <span><strong class="command">ip_addr</strong></span>, which can be an IPv4 or IPv6
          address.  An <span><strong class="command">ip_addr</strong></span> of <code class="literal">*</code> (asterisk) is
          interpreted as the IPv4 wildcard address; connections will be
          accepted on any of the system's IPv4 addresses.
          To listen on the IPv6 wildcard address,
          use an <span><strong class="command">ip_addr</strong></span> of <code class="literal">::</code>.
          If you will only use <span><strong class="command">rndc</strong></span> on the local host,
          using the loopback address (<code class="literal">127.0.0.1</code>
          or <code class="literal">::1</code>) is recommended for maximum security.
        </p>
d597 3
a599 84
          If no port is specified, port 953 is used. The asterisk
          "<code class="literal">*</code>" cannot be used for <span><strong class="command">ip_port</strong></span>.
        </p>
<p>
          The ability to issue commands over the control channel is
          restricted by the <span><strong class="command">allow</strong></span> and
          <span><strong class="command">keys</strong></span> clauses.
          Connections to the control channel are permitted based on the
          <span><strong class="command">address_match_list</strong></span>.  This is for simple
          IP address based filtering only; any <span><strong class="command">key_id</strong></span>
          elements of the <span><strong class="command">address_match_list</strong></span>
          are ignored.
        </p>
<p>
          A <span><strong class="command">unix</strong></span> control channel is a UNIX domain
          socket listening at the specified path in the file system.
          Access to the socket is specified by the <span><strong class="command">perm</strong></span>,
          <span><strong class="command">owner</strong></span> and <span><strong class="command">group</strong></span> clauses.
          Note on some platforms (SunOS and Solaris) the permissions
          (<span><strong class="command">perm</strong></span>) are applied to the parent directory
          as the permissions on the socket itself are ignored.
        </p>
<p>
          The primary authorization mechanism of the command
          channel is the <span><strong class="command">key_list</strong></span>, which
          contains a list of <span><strong class="command">key_id</strong></span>s.
          Each <span><strong class="command">key_id</strong></span> in the <span><strong class="command">key_list</strong></span>
          is authorized to execute commands over the control channel.
          See <a href="Bv9ARM.ch03.html#rndc">Remote Name Daemon Control application</a> in <a href="Bv9ARM.ch03.html#admin_tools" title="Administrative Tools">the section called &#8220;Administrative Tools&#8221;</a>)
          for information about configuring keys in <span><strong class="command">rndc</strong></span>.
        </p>
<p>
          If no <span><strong class="command">controls</strong></span> statement is present,
          <span><strong class="command">named</strong></span> will set up a default
          control channel listening on the loopback address 127.0.0.1
          and its IPv6 counterpart ::1.
          In this case, and also when the <span><strong class="command">controls</strong></span> statement
          is present but does not have a <span><strong class="command">keys</strong></span> clause,
          <span><strong class="command">named</strong></span> will attempt to load the command channel key
          from the file <code class="filename">rndc.key</code> in
          <code class="filename">/etc</code> (or whatever <code class="varname">sysconfdir</code>
          was specified as when <acronym class="acronym">BIND</acronym> was built).
          To create a <code class="filename">rndc.key</code> file, run
          <strong class="userinput"><code>rndc-confgen -a</code></strong>.
        </p>
<p>
          The <code class="filename">rndc.key</code> feature was created to
          ease the transition of systems from <acronym class="acronym">BIND</acronym> 8,
          which did not have digital signatures on its command channel
          messages and thus did not have a <span><strong class="command">keys</strong></span> clause.

          It makes it possible to use an existing <acronym class="acronym">BIND</acronym> 8
          configuration file in <acronym class="acronym">BIND</acronym> 9 unchanged,
          and still have <span><strong class="command">rndc</strong></span> work the same way
          <span><strong class="command">ndc</strong></span> worked in BIND 8, simply by executing the
          command <strong class="userinput"><code>rndc-confgen -a</code></strong> after BIND 9 is
          installed.
        </p>
<p>
          Since the <code class="filename">rndc.key</code> feature
          is only intended to allow the backward-compatible usage of
          <acronym class="acronym">BIND</acronym> 8 configuration files, this
          feature does not
          have a high degree of configurability.  You cannot easily change
          the key name or the size of the secret, so you should make a
          <code class="filename">rndc.conf</code> with your own key if you
          wish to change
          those things.  The <code class="filename">rndc.key</code> file
          also has its
          permissions set such that only the owner of the file (the user that
          <span><strong class="command">named</strong></span> is running as) can access it.
          If you
          desire greater flexibility in allowing other users to access
          <span><strong class="command">rndc</strong></span> commands, then you need to create
          a
          <code class="filename">rndc.conf</code> file and make it group
          readable by a group
          that contains the users who should have access.
        </p>
<p>
          To disable the command channel, use an empty
          <span><strong class="command">controls</strong></span> statement:
          <span><strong class="command">controls { };</strong></span>.
        </p>
d603 1
a603 1
<a name="id2574711"></a><span><strong class="command">include</strong></span> Statement Grammar</h3></div></div></div>
d608 8
a615 12
<a name="id2574726"></a><span><strong class="command">include</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">include</strong></span> statement inserts the
          specified file at the point where the <span><strong class="command">include</strong></span>
          statement is encountered. The <span><strong class="command">include</strong></span>
                statement facilitates the administration of configuration
          files
          by permitting the reading or writing of some things but not
          others. For example, the statement could include private keys
          that are readable only by the name server.
        </p>
d619 1
a619 1
<a name="id2574749"></a><span><strong class="command">key</strong></span> Statement Grammar</h3></div></div></div>
d628 6
a633 1
<a name="id2574771"></a><span><strong class="command">key</strong></span> Statement Definition and Usage</h3></div></div></div>
d635 22
a656 42
          The <span><strong class="command">key</strong></span> statement defines a shared
          secret key for use with TSIG (see <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
          or the command channel
          (see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and
          Usage&#8221;</a>).
        </p>
<p>
          The <span><strong class="command">key</strong></span> statement can occur at the
          top level
          of the configuration file or inside a <span><strong class="command">view</strong></span>
          statement.  Keys defined in top-level <span><strong class="command">key</strong></span>
          statements can be used in all views.  Keys intended for use in
          a <span><strong class="command">controls</strong></span> statement
          (see <a href="Bv9ARM.ch06.html#controls_statement_definition_and_usage" title="controls Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">controls</strong></span> Statement Definition and
          Usage&#8221;</a>)
          must be defined at the top level.
        </p>
<p>
          The <em class="replaceable"><code>key_id</code></em>, also known as the
          key name, is a domain name uniquely identifying the key. It can
          be used in a <span><strong class="command">server</strong></span>
          statement to cause requests sent to that
          server to be signed with this key, or in address match lists to
          verify that incoming requests have been signed with a key
          matching this name, algorithm, and secret.
        </p>
<p>
          The <em class="replaceable"><code>algorithm_id</code></em> is a string
          that specifies a security/authentication algorithm.  Named
          supports <code class="literal">hmac-md5</code>,
          <code class="literal">hmac-sha1</code>, <code class="literal">hmac-sha224</code>,
          <code class="literal">hmac-sha256</code>, <code class="literal">hmac-sha384</code>
          and <code class="literal">hmac-sha512</code> TSIG authentication.
          Truncated hashes are supported by appending the minimum
          number of required bits preceded by a dash, e.g.
          <code class="literal">hmac-sha1-80</code>.  The
          <em class="replaceable"><code>secret_string</code></em> is the secret
          to be used by the algorithm, and is treated as a base-64
          encoded string.
        </p>
d660 1
a660 1
<a name="id2574930"></a><span><strong class="command">logging</strong></span> Statement Grammar</h3></div></div></div>
d664 1
a664 1
         [ <span><strong class="command">versions</strong></span> ( <em class="replaceable"><code>number</code></em> | <span><strong class="command">unlimited</strong></span> ) ]
d676 1
a676 1
     <em class="replaceable"><code>channel_name</code></em> ; [ <em class="replaceable"><code>channel_name</code></em> ; ... ]
d684 9
a692 16
<a name="id2575056"></a><span><strong class="command">logging</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">logging</strong></span> statement configures a
          wide
          variety of logging options for the name server. Its <span><strong class="command">channel</strong></span> phrase
          associates output methods, format options and severity levels with
          a name that can then be used with the <span><strong class="command">category</strong></span> phrase
          to select how various classes of messages are logged.
        </p>
<p>
          Only one <span><strong class="command">logging</strong></span> statement is used to
          define
          as many channels and categories as are wanted. If there is no <span><strong class="command">logging</strong></span> statement,
          the logging configuration will be:
        </p>
d698 52
a749 85
<p>
          In <acronym class="acronym">BIND</acronym> 9, the logging configuration
          is only established when
          the entire configuration file has been parsed.  In <acronym class="acronym">BIND</acronym> 8, it was
          established as soon as the <span><strong class="command">logging</strong></span>
          statement
          was parsed. When the server is starting up, all logging messages
          regarding syntax errors in the configuration file go to the default
          channels, or to standard error if the "<code class="option">-g</code>" option
          was specified.
        </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2575108"></a>The <span><strong class="command">channel</strong></span> Phrase</h4></div></div></div>
<p>
            All log output goes to one or more <span class="emphasis"><em>channels</em></span>;
            you can make as many of them as you want.
          </p>
<p>
            Every channel definition must include a destination clause that
            says whether messages selected for the channel go to a file, to a
            particular syslog facility, to the standard error stream, or are
            discarded. It can optionally also limit the message severity level
            that will be accepted by the channel (the default is
            <span><strong class="command">info</strong></span>), and whether to include a
            <span><strong class="command">named</strong></span>-generated time stamp, the
            category name
            and/or severity level (the default is not to include any).
          </p>
<p>
            The <span><strong class="command">null</strong></span> destination clause
            causes all messages sent to the channel to be discarded;
            in that case, other options for the channel are meaningless.
          </p>
<p>
            The <span><strong class="command">file</strong></span> destination clause directs
            the channel
            to a disk file.  It can include limitations
            both on how large the file is allowed to become, and how many
            versions
            of the file will be saved each time the file is opened.
          </p>
<p>
            If you use the <span><strong class="command">versions</strong></span> log file
            option, then
            <span><strong class="command">named</strong></span> will retain that many backup
            versions of the file by
            renaming them when opening.  For example, if you choose to keep
            three old versions
            of the file <code class="filename">lamers.log</code>, then just
            before it is opened
            <code class="filename">lamers.log.1</code> is renamed to
            <code class="filename">lamers.log.2</code>, <code class="filename">lamers.log.0</code> is renamed
            to <code class="filename">lamers.log.1</code>, and <code class="filename">lamers.log</code> is
            renamed to <code class="filename">lamers.log.0</code>.
            You can say <span><strong class="command">versions unlimited</strong></span> to
            not limit
            the number of versions.
            If a <span><strong class="command">size</strong></span> option is associated with
            the log file,
            then renaming is only done when the file being opened exceeds the
            indicated size.  No backup versions are kept by default; any
            existing
            log file is simply appended.
          </p>
<p>
            The <span><strong class="command">size</strong></span> option for files is used
            to limit log
            growth. If the file ever exceeds the size, then <span><strong class="command">named</strong></span> will
            stop writing to the file unless it has a <span><strong class="command">versions</strong></span> option
            associated with it.  If backup versions are kept, the files are
            rolled as
            described above and a new one begun.  If there is no
            <span><strong class="command">versions</strong></span> option, no more data will
            be written to the log
            until some out-of-band mechanism removes or truncates the log to
            less than the
            maximum size.  The default behavior is not to limit the size of
            the
            file.
          </p>
<p>
            Example usage of the <span><strong class="command">size</strong></span> and
            <span><strong class="command">versions</strong></span> options:
          </p>
d756 43
a798 62
<p>
            The <span><strong class="command">syslog</strong></span> destination clause
            directs the
            channel to the system log.  Its argument is a
            syslog facility as described in the <span><strong class="command">syslog</strong></span> man
            page. Known facilities are <span><strong class="command">kern</strong></span>, <span><strong class="command">user</strong></span>,
            <span><strong class="command">mail</strong></span>, <span><strong class="command">daemon</strong></span>, <span><strong class="command">auth</strong></span>,
            <span><strong class="command">syslog</strong></span>, <span><strong class="command">lpr</strong></span>, <span><strong class="command">news</strong></span>,
            <span><strong class="command">uucp</strong></span>, <span><strong class="command">cron</strong></span>, <span><strong class="command">authpriv</strong></span>,
            <span><strong class="command">ftp</strong></span>, <span><strong class="command">local0</strong></span>, <span><strong class="command">local1</strong></span>,
            <span><strong class="command">local2</strong></span>, <span><strong class="command">local3</strong></span>, <span><strong class="command">local4</strong></span>,
            <span><strong class="command">local5</strong></span>, <span><strong class="command">local6</strong></span> and
            <span><strong class="command">local7</strong></span>, however not all facilities
            are supported on
            all operating systems.
            How <span><strong class="command">syslog</strong></span> will handle messages
            sent to
            this facility is described in the <span><strong class="command">syslog.conf</strong></span> man
            page. If you have a system which uses a very old version of <span><strong class="command">syslog</strong></span> that
            only uses two arguments to the <span><strong class="command">openlog()</strong></span> function,
            then this clause is silently ignored.
          </p>
<p>
            The <span><strong class="command">severity</strong></span> clause works like <span><strong class="command">syslog</strong></span>'s
            "priorities", except that they can also be used if you are writing
            straight to a file rather than using <span><strong class="command">syslog</strong></span>.
            Messages which are not at least of the severity level given will
            not be selected for the channel; messages of higher severity
            levels
            will be accepted.
          </p>
<p>
            If you are using <span><strong class="command">syslog</strong></span>, then the <span><strong class="command">syslog.conf</strong></span> priorities
            will also determine what eventually passes through. For example,
            defining a channel facility and severity as <span><strong class="command">daemon</strong></span> and <span><strong class="command">debug</strong></span> but
            only logging <span><strong class="command">daemon.warning</strong></span> via <span><strong class="command">syslog.conf</strong></span> will
            cause messages of severity <span><strong class="command">info</strong></span> and
            <span><strong class="command">notice</strong></span> to
            be dropped. If the situation were reversed, with <span><strong class="command">named</strong></span> writing
            messages of only <span><strong class="command">warning</strong></span> or higher,
            then <span><strong class="command">syslogd</strong></span> would
            print all messages it received from the channel.
          </p>
<p>
            The <span><strong class="command">stderr</strong></span> destination clause
            directs the
            channel to the server's standard error stream.  This is intended
            for
            use when the server is running as a foreground process, for
            example
            when debugging a configuration.
          </p>
<p>
            The server can supply extensive debugging information when
            it is in debugging mode. If the server's global debug level is
            greater
            than zero, then debugging mode will be active. The global debug
            level is set either by starting the <span><strong class="command">named</strong></span> server
            with the <code class="option">-d</code> flag followed by a positive integer,
            or by running <span><strong class="command">rndc trace</strong></span>.
            The global debug level
            can be set to zero, and debugging mode turned off, by running <span><strong class="command">rndc
d800 2
a801 3
            level, and higher debug levels give more detailed output. Channels
            that specify a specific debug severity, for example:
          </p>
d807 19
a825 34
<p>
            will get debugging output of level 3 or less any time the
            server is in debugging mode, regardless of the global debugging
            level. Channels with <span><strong class="command">dynamic</strong></span>
            severity use the
            server's global debug level to determine what messages to print.
          </p>
<p>
            If <span><strong class="command">print-time</strong></span> has been turned on,
            then
            the date and time will be logged. <span><strong class="command">print-time</strong></span> may
            be specified for a <span><strong class="command">syslog</strong></span> channel,
            but is usually
            pointless since <span><strong class="command">syslog</strong></span> also prints
            the date and
            time. If <span><strong class="command">print-category</strong></span> is
            requested, then the
            category of the message will be logged as well. Finally, if <span><strong class="command">print-severity</strong></span> is
            on, then the severity level of the message will be logged. The <span><strong class="command">print-</strong></span> options may
            be used in any combination, and will always be printed in the
            following
            order: time, category, severity. Here is an example where all
            three <span><strong class="command">print-</strong></span> options
            are on:
          </p>
<p>
            <code class="computeroutput">28-Feb-2000 15:05:32.863 general: notice: running</code>
          </p>
<p>
            There are four predefined channels that are used for
            <span><strong class="command">named</strong></span>'s default logging as follows.
            How they are
            used is described in <a href="Bv9ARM.ch06.html#the_category_phrase" title="The category Phrase">the section called &#8220;The <span><strong class="command">category</strong></span> Phrase&#8221;</a>.
          </p>
d855 14
a868 24
<p>
            The <span><strong class="command">default_debug</strong></span> channel has the
            special
            property that it only produces output when the server's debug
            level is
            nonzero.  It normally writes to a file called <code class="filename">named.run</code>
            in the server's working directory.
          </p>
<p>
            For security reasons, when the "<code class="option">-u</code>"
            command line option is used, the <code class="filename">named.run</code> file
            is created only after <span><strong class="command">named</strong></span> has
            changed to the
            new UID, and any debug output generated while <span><strong class="command">named</strong></span> is
            starting up and still running as root is discarded.  If you need
            to capture this output, you must run the server with the "<code class="option">-g</code>"
            option and redirect standard error to a file.
          </p>
<p>
            Once a channel is defined, it cannot be redefined. Thus you
            cannot alter the built-in channels directly, but you can modify
            the default logging by pointing categories at channels you have
            defined.
          </p>
d873 6
a878 9
<p>
            There are many categories, so you can send the logs you want
            to see wherever you want, without seeing logs you don't want. If
            you don't specify a list of channels for a category, then log
            messages
            in that category will be sent to the <span><strong class="command">default</strong></span> category
            instead. If you don't specify a default category, the following
            "default default" is used:
          </p>
d881 3
a883 5
<p>
            As an example, let's say you want to log security events to
            a file, but you also want keep the default logging behavior. You'd
            specify the following:
          </p>
d893 1
a893 3
<p>
            To discard all messages in a category, specify the <span><strong class="command">null</strong></span> channel:
          </p>
d897 3
a899 5
<p>
            Following are the available categories and brief descriptions
            of the types of log information they contain. More
            categories may be added in future <acronym class="acronym">BIND</acronym> releases.
          </p>
d907 4
a910 11
<td>
                    <p><span><strong class="command">default</strong></span></p>
                  </td>
<td>
                    <p>
                      The default category defines the logging
                      options for those categories where no specific
                      configuration has been
                      defined.
                    </p>
                  </td>
d913 3
a915 9
<td>
                    <p><span><strong class="command">general</strong></span></p>
                  </td>
<td>
                    <p>
                      The catch-all. Many things still aren't
                      classified into categories, and they all end up here.
                    </p>
                  </td>
d918 3
a920 10
<td>
                    <p><span><strong class="command">database</strong></span></p>
                  </td>
<td>
                    <p>
                      Messages relating to the databases used
                      internally by the name server to store zone and cache
                      data.
                    </p>
                  </td>
d923 2
a924 8
<td>
                    <p><span><strong class="command">security</strong></span></p>
                  </td>
<td>
                    <p>
                      Approval and denial of requests.
                    </p>
                  </td>
d927 2
a928 8
<td>
                    <p><span><strong class="command">config</strong></span></p>
                  </td>
<td>
                    <p>
                      Configuration file parsing and processing.
                    </p>
                  </td>
d931 3
a933 10
<td>
                    <p><span><strong class="command">resolver</strong></span></p>
                  </td>
<td>
                    <p>
                      DNS resolution, such as the recursive
                      lookups performed on behalf of clients by a caching name
                      server.
                    </p>
                  </td>
d936 2
a937 8
<td>
                    <p><span><strong class="command">xfer-in</strong></span></p>
                  </td>
<td>
                    <p>
                      Zone transfers the server is receiving.
                    </p>
                  </td>
d940 2
a941 8
<td>
                    <p><span><strong class="command">xfer-out</strong></span></p>
                  </td>
<td>
                    <p>
                      Zone transfers the server is sending.
                    </p>
                  </td>
d944 2
a945 8
<td>
                    <p><span><strong class="command">notify</strong></span></p>
                  </td>
<td>
                    <p>
                      The NOTIFY protocol.
                    </p>
                  </td>
d948 2
a949 8
<td>
                    <p><span><strong class="command">client</strong></span></p>
                  </td>
<td>
                    <p>
                      Processing of client requests.
                    </p>
                  </td>
d952 6
a957 13
<td>
                    <p><span><strong class="command">unmatched</strong></span></p>
                  </td>
<td>
                    <p>
                      Messages that named was unable to determine the
                      class of or for which there was no matching <span><strong class="command">view</strong></span>.
                      A one line summary is also logged to the <span><strong class="command">client</strong></span> category.
                      This category is best sent to a file or stderr, by
                      default it is sent to
                      the <span><strong class="command">null</strong></span> channel.
                    </p>
                  </td>
d960 2
a961 8
<td>
                    <p><span><strong class="command">network</strong></span></p>
                  </td>
<td>
                    <p>
                      Network operations.
                    </p>
                  </td>
d964 2
a965 8
<td>
                    <p><span><strong class="command">update</strong></span></p>
                  </td>
<td>
                    <p>
                      Dynamic updates.
                    </p>
                  </td>
d968 2
a969 8
<td>
                    <p><span><strong class="command">update-security</strong></span></p>
                  </td>
<td>
                    <p>
                      Approval and denial of update requests.
                    </p>
                  </td>
d972 1
d974 16
a989 27
                    <p><span><strong class="command">queries</strong></span></p>
                  </td>
<td>
                    <p>
                      Specify where queries should be logged to.
                    </p>
                    <p>
                      At startup, specifying the category <span><strong class="command">queries</strong></span> will also
                      enable query logging unless <span><strong class="command">querylog</strong></span> option has been
                      specified.
                    </p>
                    <p>
                      The query log entry reports the client's IP address and
                      port number, and the
                      query name, class and type.  It also reports whether the
                      Recursion Desired
                      flag was set (+ if set, - if not set), EDNS was in use
                      (E) or if the
                      query was signed (S).
                    </p>
                    <p>
                      <code class="computeroutput">client 127.0.0.1#62536: query: www.example.com IN AAAA +SE</code>
                    </p>
                    <p>
                      <code class="computeroutput">client ::1#62537: query: www.example.net IN AAAA -SE</code>
                    </p>
                  </td>
d992 4
a995 9
<td>
                    <p><span><strong class="command">dispatch</strong></span></p>
                  </td>
<td>
                    <p>
                      Dispatching of incoming packets to the
                      server modules where they are to be processed.
                    </p>
                  </td>
d998 3
a1000 8
<td>
                    <p><span><strong class="command">dnssec</strong></span></p>
                  </td>
<td>
                    <p>
                      DNSSEC and TSIG protocol processing.
                    </p>
                  </td>
d1003 5
a1007 11
<td>
                    <p><span><strong class="command">lame-servers</strong></span></p>
                  </td>
<td>
                    <p>
                      Lame servers.  These are misconfigurations
                      in remote servers, discovered by BIND 9 when trying to
                      query
                      those servers during resolution.
                    </p>
                  </td>
d1010 5
a1014 12
<td>
                    <p><span><strong class="command">delegation-only</strong></span></p>
                  </td>
<td>
                    <p>
                      Delegation only.  Logs queries that have have
                      been forced to NXDOMAIN as the result of a
                      delegation-only zone or
                      a <span><strong class="command">delegation-only</strong></span> in a
                      hint or stub zone declaration.
                    </p>
                  </td>
d1022 3
a1024 5
<a name="id2576406"></a><span><strong class="command">lwres</strong></span> Statement Grammar</h3></div></div></div>
<p>
           This is the grammar of the <span><strong class="command">lwres</strong></span>
          statement in the <code class="filename">named.conf</code> file:
        </p>
d1035 25
a1059 48
<a name="id2576480"></a><span><strong class="command">lwres</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>
          The <span><strong class="command">lwres</strong></span> statement configures the
          name
          server to also act as a lightweight resolver server. (See
          <a href="Bv9ARM.ch05.html#lwresd" title="Running a Resolver Daemon">the section called &#8220;Running a Resolver Daemon&#8221;</a>.)  There may be multiple
          <span><strong class="command">lwres</strong></span> statements configuring
          lightweight resolver servers with different properties.
        </p>
<p>
          The <span><strong class="command">listen-on</strong></span> statement specifies a
          list of
          addresses (and ports) that this instance of a lightweight resolver
          daemon
          should accept requests on.  If no port is specified, port 921 is
          used.
          If this statement is omitted, requests will be accepted on
          127.0.0.1,
          port 921.
        </p>
<p>
          The <span><strong class="command">view</strong></span> statement binds this
          instance of a
          lightweight resolver daemon to a view in the DNS namespace, so that
          the
          response will be constructed in the same manner as a normal DNS
          query
          matching this view.  If this statement is omitted, the default view
          is
          used, and if there is no default view, an error is triggered.
        </p>
<p>
          The <span><strong class="command">search</strong></span> statement is equivalent to
          the
          <span><strong class="command">search</strong></span> statement in
          <code class="filename">/etc/resolv.conf</code>.  It provides a
          list of domains
          which are appended to relative names in queries.
        </p>
<p>
          The <span><strong class="command">ndots</strong></span> statement is equivalent to
          the
          <span><strong class="command">ndots</strong></span> statement in
          <code class="filename">/etc/resolv.conf</code>.  It indicates the
          minimum
          number of dots in a relative domain name that should result in an
          exact match lookup before search path elements are appended.
        </p>
d1063 1
a1063 1
<a name="id2576544"></a><span><strong class="command">masters</strong></span> Statement Grammar</h3></div></div></div>
d1065 1
a1065 1
<span><strong class="command">masters</strong></span> <em class="replaceable"><code>name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] };
d1070 3
a1072 6
<a name="id2576587"></a><span><strong class="command">masters</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p><span><strong class="command">masters</strong></span>
          lists allow for a common set of masters to be easily used by
          multiple stub and slave zones.
        </p>
d1076 3
a1078 5
<a name="id2576602"></a><span><strong class="command">options</strong></span> Statement Grammar</h3></div></div></div>
<p>
          This is the grammar of the <span><strong class="command">options</strong></span>
          statement in the <code class="filename">named.conf</code> file:
        </p>
a1091 1
    [<span class="optional"> recursing-file <em class="replaceable"><code>path_name</code></em>; </span>]
d1105 1
a1105 1
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em>; </span>]
a1110 1
    [<span class="optional"> dnssec-validation <em class="replaceable"><code>yes_or_no</code></em>; </span>]
a1112 1
    [<span class="optional"> dnssec-accept-expired <em class="replaceable"><code>yes_or_no</code></em>; </span>]
d1115 2
a1116 12
    [<span class="optional"> dual-stack-servers [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] {
        ( <em class="replaceable"><code>domain_name</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] |
          <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ) ; 
        ... }; </span>]
    [<span class="optional"> check-names ( <em class="replaceable"><code>master</code></em> | <em class="replaceable"><code>slave</code></em> | <em class="replaceable"><code>response</code></em> )
        ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-mx ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-wildcard <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-integrity <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-mx-cname ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-srv-cname ( <em class="replaceable"><code>warn</code></em> | <em class="replaceable"><code>fail</code></em> | <em class="replaceable"><code>ignore</code></em> ); </span>]
    [<span class="optional"> check-sibling <em class="replaceable"><code>yes_or_no</code></em>; </span>]
a1118 1
    [<span class="optional"> allow-query-cache { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
a1120 1
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
a1121 1
    [<span class="optional"> update-check-ksk <em class="replaceable"><code>yes_or_no</code></em>; </span>]
d1128 2
a1129 8
    [<span class="optional"> query-source ( ( <em class="replaceable"><code>ip4_addr</code></em> | <em class="replaceable"><code>*</code></em> )
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] |
        [<span class="optional"> address ( <em class="replaceable"><code>ip4_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] ) ; </span>]
    [<span class="optional"> query-source-v6 ( ( <em class="replaceable"><code>ip6_addr</code></em> | <em class="replaceable"><code>*</code></em> )
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] | 
        [<span class="optional"> address ( <em class="replaceable"><code>ip6_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] 
        [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] ) ; </span>]
a1147 1
    [<span class="optional"> notify-delay <em class="replaceable"><code>seconds</code></em> ; </span>]
a1184 1
    [<span class="optional"> max-udp-size <em class="replaceable"><code>number</code></em>; </span>]
a1187 12
    [<span class="optional"> acache-enable <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> acache-cleaning-interval <em class="replaceable"><code>number</code></em>; </span>]
    [<span class="optional"> max-acache-size <em class="replaceable"><code>size_spec</code></em> ; </span>]
    [<span class="optional"> clients-per-query <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-clients-per-query <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> empty-server <em class="replaceable"><code>name</code></em> ; </span>]
    [<span class="optional"> empty-contact <em class="replaceable"><code>name</code></em> ; </span>]
    [<span class="optional"> empty-zones-enable <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> disable-empty-zone <em class="replaceable"><code>zone_name</code></em> ; </span>]
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
    [<span class="optional"> zero-no-soa-ttl-cache <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
d1193 6
a1198 11
<a name="options"></a><span><strong class="command">options</strong></span> Statement Definition and
          Usage</h3></div></div></div>
<p>
          The <span><strong class="command">options</strong></span> statement sets up global
          options
          to be used by <acronym class="acronym">BIND</acronym>. This statement
          may appear only
          once in a configuration file. If there is no <span><strong class="command">options</strong></span>
          statement, an options block with each option set to its default will
          be used.
        </p>
d1201 7
a1207 14
<dd><p>
                The working directory of the server.
                Any non-absolute pathnames in the configuration file will be
                taken
                as relative to this directory. The default location for most
                server
                output files (e.g. <code class="filename">named.run</code>)
                is this directory.
                If a directory is not specified, the working directory
                defaults to `<code class="filename">.</code>', the directory from
                which the server
                was started. The directory specified should be an absolute
                path.
              </p></dd>
d1209 4
a1212 8
<dd><p>
                When performing dynamic update of secure zones, the
                directory where the public and private key files should be
                found,
                if different than the current working directory.  The
                directory specified
                must be an absolute path.
              </p></dd>
d1214 5
a1218 7
<dd><p>
                <span class="emphasis"><em>This option is obsolete.</em></span>
                It was used in <acronym class="acronym">BIND</acronym> 8 to
                specify the pathname to the <span><strong class="command">named-xfer</strong></span> program.
                In <acronym class="acronym">BIND</acronym> 9, no separate <span><strong class="command">named-xfer</strong></span> program is
                needed; its functionality is built into the name server.
              </p></dd>
d1220 7
a1226 11
<dd><p>
                The domain appended to the names of all
                shared keys generated with
                <span><strong class="command">TKEY</strong></span>. When a client
                requests a <span><strong class="command">TKEY</strong></span> exchange, it
                may or may not specify
                the desired name for the key. If present, the name of the
                shared
                key will be "<code class="varname">client specified part</code>" +
                "<code class="varname">tkey-domain</code>".
                Otherwise, the name of the shared key will be "<code class="varname">random hex
d1228 2
a1229 4
                the <span><strong class="command">domainname</strong></span> should be the
                server's domain
                name.
              </p></dd>
d1231 5
a1235 10
<dd><p>
                The Diffie-Hellman key used by the server
                to generate shared keys with clients using the Diffie-Hellman
                mode
                of <span><strong class="command">TKEY</strong></span>. The server must be
                able to load the
                public and private keys from files in the working directory.
                In
                most cases, the keyname should be the server's host name.
              </p></dd>
d1238 1
a1238 1
                This is for testing only.  Do not use.
d1241 4
a1244 6
<dd><p>
                The pathname of the file the server dumps
                the database to when instructed to do so with
                <span><strong class="command">rndc dumpdb</strong></span>.
                If not specified, the default is <code class="filename">named_dump.db</code>.
              </p></dd>
d1246 3
a1248 14
<dd>
<p>
                The pathname of the file the server writes memory
                usage statistics to on exit.  If specified the
                statistics will be written to the file on exit.
              </p>
<p>
                In <acronym class="acronym">BIND</acronym> 9.5 and later this will
                default to <code class="filename">named.memstats</code>.
                <acronym class="acronym">BIND</acronym> 9.5 will also introduce
                <span><strong class="command">memstatistics</strong></span> to control the
                writing.
              </p>
</dd>
d1250 8
a1257 19
<dd><p>
                The pathname of the file the server writes its process ID
                in. If not specified, the default is <code class="filename">/var/run/named.pid</code>.
                The pid-file is used by programs that want to send signals to
                the running
                name server. Specifying <span><strong class="command">pid-file none</strong></span> disables the
                use of a PID file &#8212; no file will be written and any
                existing one will be removed.  Note that <span><strong class="command">none</strong></span>
                is a keyword, not a filename, and therefore is not enclosed
                in
                double quotes.
              </p></dd>
<dt><span class="term"><span><strong class="command">recursing-file</strong></span></span></dt>
<dd><p>
                The pathname of the file the server dumps
                the queries that are currently recursing when instructed
                to do so with <span><strong class="command">rndc recursing</strong></span>.
                If not specified, the default is <code class="filename">named.recursing</code>.
              </p></dd>
d1259 5
a1263 8
<dd><p>
                The pathname of the file the server appends statistics
                to when instructed to do so using <span><strong class="command">rndc stats</strong></span>.
                If not specified, the default is <code class="filename">named.stats</code> in the
                server's current directory.  The format of the file is
                described
                in <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
              </p></dd>
d1266 6
a1271 8
                The UDP/TCP port number the server uses for
                receiving and sending DNS protocol traffic.
                The default is 53.  This option is mainly intended for server
                testing;
                a server using a port other than 53 will not be able to
                communicate with
                the global DNS.
              </p></dd>
d1274 10
a1283 17
                The source of entropy to be used by the server.  Entropy is
                primarily needed
                for DNSSEC operations, such as TKEY transactions and dynamic
                update of signed
                zones.  This options specifies the device (or file) from which
                to read
                entropy.  If this is a file, operations requiring entropy will
                fail when the
                file has been exhausted.  If not specified, the default value
                is
                <code class="filename">/dev/random</code>
                (or equivalent) when present, and none otherwise.  The
                <span><strong class="command">random-device</strong></span> option takes
                effect during
                the initial configuration load at server startup time and
                is ignored on subsequent reloads.
              </p></dd>
d1286 4
a1289 5
                If specified, the listed type (A or AAAA) will be emitted
                before other glue
                in the additional section of a query response.
                The default is not to prefer any type (NONE).
              </p></dd>
d1293 3
a1295 4
                Turn on enforcement of delegation-only in TLDs (top level domains) and root zones
                with an optional
                exclude list.
              </p>
d1297 2
a1298 3
                Note some TLDs are not delegation only (e.g. "DE", "LV", "US"
                and "MUSEUM").
              </p>
d1301 1
a1301 1
        root-delegation-only exclude { "de"; "lv"; "us"; "museum"; };
d1307 4
a1310 6
                Disable the specified DNSSEC algorithms at and below the
                specified name.
                Multiple <span><strong class="command">disable-algorithms</strong></span>
                statements are allowed.
                Only the most specific will be applied.
              </p></dd>
d1313 9
a1321 16
                When set, <span><strong class="command">dnssec-lookaside</strong></span>
                provides the
                validator with an alternate method to validate DNSKEY records
                at the
                top of a zone.  When a DNSKEY is at or below a domain
                specified by the
                deepest <span><strong class="command">dnssec-lookaside</strong></span>, and
                the normal dnssec validation
                has left the key untrusted, the trust-anchor will be append to
                the key
                name and a DLV record will be looked up to see if it can
                validate the
                key.  If the DLV record validates a DNSKEY (similarly to the
                way a DS
                record does) the DNSKEY RRset is deemed to be trusted.
              </p></dd>
d1324 8
a1331 12
                Specify hierarchies which must be or may not be secure (signed and
                validated).
                If <strong class="userinput"><code>yes</code></strong>, then named will only accept
                answers if they
                are secure.
                If <strong class="userinput"><code>no</code></strong>, then normal dnssec validation
                applies
                allowing for insecure answers to be accepted.
                The specified domain must be under a <span><strong class="command">trusted-key</strong></span> or
                <span><strong class="command">dnssec-lookaside</strong></span> must be
                active.
              </p></dd>
d1338 5
a1342 10
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then the <span><strong class="command">AA</strong></span> bit
                  is always set on NXDOMAIN responses, even if the server is
                  not actually
                  authoritative. The default is <strong class="userinput"><code>no</code></strong>;
                  this is
                  a change from <acronym class="acronym">BIND</acronym> 8. If you
                  are using very old DNS software, you
                  may need to set it to <strong class="userinput"><code>yes</code></strong>.
                </p></dd>
d1344 3
a1346 6
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym>
                  8 to enable checking
                  for memory leaks on exit. <acronym class="acronym">BIND</acronym> 9 ignores the option and always performs
                  the checks.
                </p></dd>
d1349 32
a1380 59
<p>
                  If <strong class="userinput"><code>yes</code></strong>, then the
                  server treats all zones as if they are doing zone transfers
                  across
                  a dial-on-demand dialup link, which can be brought up by
                  traffic
                  originating from this server. This has different effects
                  according
                  to zone type and concentrates the zone maintenance so that
                  it all
                  happens in a short interval, once every <span><strong class="command">heartbeat-interval</strong></span> and
                  hopefully during the one call. It also suppresses some of
                  the normal
                  zone maintenance traffic. The default is <strong class="userinput"><code>no</code></strong>.
                </p>
<p>
                  The <span><strong class="command">dialup</strong></span> option
                  may also be specified in the <span><strong class="command">view</strong></span> and
                  <span><strong class="command">zone</strong></span> statements,
                  in which case it overrides the global <span><strong class="command">dialup</strong></span>
                  option.
                </p>
<p>
                  If the zone is a master zone, then the server will send out a
                  NOTIFY
                  request to all the slaves (default). This should trigger the
                  zone serial
                  number check in the slave (providing it supports NOTIFY)
                  allowing the slave
                  to verify the zone while the connection is active.
                  The set of servers to which NOTIFY is sent can be controlled
                  by
                  <span><strong class="command">notify</strong></span> and <span><strong class="command">also-notify</strong></span>.
                </p>
<p>
                  If the
                  zone is a slave or stub zone, then the server will suppress
                  the regular
                  "zone up to date" (refresh) queries and only perform them
                  when the
                  <span><strong class="command">heartbeat-interval</strong></span> expires in
                  addition to sending
                  NOTIFY requests.
                </p>
<p>
                  Finer control can be achieved by using
                  <strong class="userinput"><code>notify</code></strong> which only sends NOTIFY
                  messages,
                  <strong class="userinput"><code>notify-passive</code></strong> which sends NOTIFY
                  messages and
                  suppresses the normal refresh queries, <strong class="userinput"><code>refresh</code></strong>
                  which suppresses normal refresh processing and sends refresh
                  queries
                  when the <span><strong class="command">heartbeat-interval</strong></span>
                  expires, and
                  <strong class="userinput"><code>passive</code></strong> which just disables normal
                  refresh
                  processing.
                </p>
d1390 10
a1399 40
<td>
                          <p>
                            dialup mode
                          </p>
                        </td>
<td>
                          <p>
                            normal refresh
                          </p>
                        </td>
<td>
                          <p>
                            heart-beat refresh
                          </p>
                        </td>
<td>
                          <p>
                            heart-beat notify
                          </p>
                        </td>
</tr>
<tr>
<td>
                          <p><span><strong class="command">no</strong></span> (default)</p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
d1402 4
a1405 18
<td>
                          <p><span><strong class="command">yes</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
d1408 4
a1411 18
<td>
                          <p><span><strong class="command">notify</strong></span></p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
d1414 4
a1417 18
<td>
                          <p><span><strong class="command">refresh</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
d1420 4
a1423 18
<td>
                          <p><span><strong class="command">passive</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
d1426 4
a1429 18
<td>
                          <p><span><strong class="command">notify-passive</strong></span></p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            no
                          </p>
                        </td>
<td>
                          <p>
                            yes
                          </p>
                        </td>
d1433 2
a1434 4
<p>
                  Note that normal NOTIFY processing is not affected by
                  <span><strong class="command">dialup</strong></span>.
                </p>
d1437 4
a1440 6
<dd><p>
                  In <acronym class="acronym">BIND</acronym> 8, this option
                  enabled simulating the obsolete DNS query type
                  IQUERY. <acronym class="acronym">BIND</acronym> 9 never does
                  IQUERY simulation.
                </p></dd>
d1442 6
a1447 10
<dd><p>
                  This option is obsolete.
                  In BIND 8, <strong class="userinput"><code>fetch-glue yes</code></strong>
                  caused the server to attempt to fetch glue resource records
                  it
                  didn't have when constructing the additional
                  data section of a response.  This is now considered a bad
                  idea
                  and BIND 9 never does it.
                </p></dd>
d1449 4
a1452 6
<dd><p>
                  When the nameserver exits due receiving SIGTERM,
                  flush or do not flush any pending zone writes.  The default
                  is
                  <span><strong class="command">flush-zones-on-shutdown</strong></span> <strong class="userinput"><code>no</code></strong>.
                </p></dd>
d1454 8
a1461 9
<dd><p>
                  This option was incorrectly implemented
                  in <acronym class="acronym">BIND</acronym> 8, and is ignored by <acronym class="acronym">BIND</acronym> 9.
                  To achieve the intended effect
                  of
                  <span><strong class="command">has-old-clients</strong></span> <strong class="userinput"><code>yes</code></strong>, specify
                  the two separate options <span><strong class="command">auth-nxdomain</strong></span> <strong class="userinput"><code>yes</code></strong>
                  and <span><strong class="command">rfc2308-type1</strong></span> <strong class="userinput"><code>no</code></strong> instead.
                </p></dd>
d1463 4
a1466 6
<dd><p>
                  In BIND 8, this enables keeping of
                  statistics for every host that the name server interacts
                  with.
                  Not implemented in BIND 9.
                </p></dd>
d1468 6
a1473 9
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  It was used in <acronym class="acronym">BIND</acronym> 8 to
                  determine whether a transaction log was
                  kept for Incremental Zone Transfer. <acronym class="acronym">BIND</acronym> 9 maintains a transaction
                  log whenever possible.  If you need to disable outgoing
                  incremental zone
                  transfers, use <span><strong class="command">provide-ixfr</strong></span> <strong class="userinput"><code>no</code></strong>.
                </p></dd>
d1475 6
a1480 8
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then when generating
                  responses the server will only add records to the authority
                  and additional data sections when they are required (e.g.
                  delegations, negative responses).  This may improve the
                  performance of the server.
                  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
d1482 5
a1486 7
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym> 8 to allow
                  a domain name to have multiple CNAME records in violation of
                  the DNS standards.  <acronym class="acronym">BIND</acronym> 9.2 onwards
                  always strictly enforces the CNAME rules both in master
                  files and dynamic updates.
                </p></dd>
d1489 7
d1497 4
a1500 19
                  If <strong class="userinput"><code>yes</code></strong> (the default),
                  DNS NOTIFY messages are sent when a zone the server is
                  authoritative for
                  changes, see <a href="Bv9ARM.ch04.html#notify" title="Notify">the section called &#8220;Notify&#8221;</a>.  The messages are
                  sent to the
                  servers listed in the zone's NS records (except the master
                  server identified
                  in the SOA MNAME field), and to any servers listed in the
                  <span><strong class="command">also-notify</strong></span> option.
                </p>
<p>
                  If <strong class="userinput"><code>master-only</code></strong>, notifies are only
                  sent
                  for master zones.
                  If <strong class="userinput"><code>explicit</code></strong>, notifies are sent only
                  to
                  servers explicitly listed using <span><strong class="command">also-notify</strong></span>.
                  If <strong class="userinput"><code>no</code></strong>, no notifies are sent.
                </p>
d1502 5
a1506 8
                  The <span><strong class="command">notify</strong></span> option may also be
                  specified in the <span><strong class="command">zone</strong></span>
                  statement,
                  in which case it overrides the <span><strong class="command">options notify</strong></span> statement.
                  It would only be necessary to turn off this option if it
                  caused slaves
                  to crash.
                </p>
d1509 12
a1520 18
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, and a
                  DNS query requests recursion, then the server will attempt
                  to do
                  all the work required to answer the query. If recursion is
                  off
                  and the server does not already know the answer, it will
                  return a
                  referral response. The default is
                  <strong class="userinput"><code>yes</code></strong>.
                  Note that setting <span><strong class="command">recursion no</strong></span> does not prevent
                  clients from getting data from the server's cache; it only
                  prevents new data from being cached as an effect of client
                  queries.
                  Caching may still occur as an effect the server's internal
                  operation, such as NOTIFY address lookups.
                  See also <span><strong class="command">fetch-glue</strong></span> above.
                </p></dd>
d1523 3
a1525 6
<p>
                  Setting this to <strong class="userinput"><code>yes</code></strong> will
                  cause the server to send NS records along with the SOA
                  record for negative
                  answers. The default is <strong class="userinput"><code>no</code></strong>.
                </p>
d1528 1
a1528 4
<p>
                    Not yet implemented in <acronym class="acronym">BIND</acronym>
                    9.
                  </p>
d1532 3
a1534 5
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  <acronym class="acronym">BIND</acronym> 9 always allocates query
                  IDs from a pool.
                </p></dd>
d1536 7
a1542 12
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, the server will collect
                  statistical data on all zones (unless specifically turned
                  off
                  on a per-zone basis by specifying <span><strong class="command">zone-statistics no</strong></span>
                  in the <span><strong class="command">zone</strong></span> statement).
                  These statistics may be accessed
                  using <span><strong class="command">rndc stats</strong></span>, which will
                  dump them to the file listed
                  in the <span><strong class="command">statistics-file</strong></span>.  See
                  also <a href="Bv9ARM.ch06.html#statsfile" title="The Statistics File">the section called &#8220;The Statistics File&#8221;</a>.
                </p></dd>
d1544 6
a1549 11
<dd><p>
                  <span class="emphasis"><em>This option is obsolete</em></span>.
                  If you need to disable IXFR to a particular server or
                  servers, see
                  the information on the <span><strong class="command">provide-ixfr</strong></span> option
                  in <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                  See also
                  <a href="Bv9ARM.ch04.html#incremental_zone_transfers" title="Incremental Zone Transfers (IXFR)">the section called &#8220;Incremental Zone Transfers (IXFR)&#8221;</a>.
                </p></dd>
d1552 4
a1555 6
                  See the description of
                  <span><strong class="command">provide-ixfr</strong></span> in
                  <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                </p></dd>
d1558 4
a1561 6
                  See the description of
                  <span><strong class="command">request-ixfr</strong></span> in
                  <a href="Bv9ARM.ch06.html#server_statement_definition_and_usage" title="server Statement Definition and
            Usage">the section called &#8220;<span><strong class="command">server</strong></span> Statement Definition and
            Usage&#8221;</a>.
                </p></dd>
d1563 7
a1569 12
<dd><p>
                  This option was used in <acronym class="acronym">BIND</acronym>
                  8 to make
                  the server treat carriage return ("<span><strong class="command">\r</strong></span>") characters the same way
                  as a space or tab character,
                  to facilitate loading of zone files on a UNIX system that
                  were generated
                  on an NT or DOS machine. In <acronym class="acronym">BIND</acronym> 9, both UNIX "<span><strong class="command">\n</strong></span>"
                  and NT/DOS "<span><strong class="command">\r\n</strong></span>" newlines
                  are always accepted,
                  and the option is ignored.
                </p></dd>
d1575 4
a1578 6
                  These options control the behavior of an authoritative
                  server when
                  answering queries which have additional data, or when
                  following CNAME
                  and DNAME chains.
                </p>
d1580 13
a1592 19
                  When both of these options are set to <strong class="userinput"><code>yes</code></strong>
                  (the default) and a
                  query is being answered from authoritative data (a zone
                  configured into the server), the additional data section of
                  the
                  reply will be filled in using data from other authoritative
                  zones
                  and from the cache.  In some situations this is undesirable,
                  such
                  as when there is concern over the correctness of the cache,
                  or
                  in servers where slave zones may be added and modified by
                  untrusted third parties.  Also, avoiding
                  the search for this additional data will speed up server
                  operations
                  at the possible expense of additional queries to resolve
                  what would
                  otherwise be provided in the additional section.
                </p>
d1594 7
a1600 9
                  For example, if a query asks for an MX record for host <code class="literal">foo.example.com</code>,
                  and the record found is "<code class="literal">MX 10 mail.example.net</code>", normally the address
                  records (A and AAAA) for <code class="literal">mail.example.net</code> will be provided as well,
                  if known, even though they are not in the example.com zone.
                  Setting these options to <span><strong class="command">no</strong></span>
                  disables this behavior and makes
                  the server only search for additional data in the zone it
                  answers from.
                </p>
d1602 6
a1607 8
                  These options are intended for use in authoritative-only
                  servers, or in authoritative-only views.  Attempts to set
                  them to <span><strong class="command">no</strong></span> without also
                  specifying
                  <span><strong class="command">recursion no</strong></span> will cause the
                  server to
                  ignore the options and log a warning message.
                </p>
d1609 6
a1614 9
                  Specifying <span><strong class="command">additional-from-cache no</strong></span> actually
                  disables the use of the cache not only for additional data
                  lookups
                  but also when looking up the answer.  This is usually the
                  desired
                  behavior in an authoritative-only server where the
                  correctness of
                  the cached data is an issue.
                </p>
d1616 10
a1625 17
                  When a name server is non-recursively queried for a name
                  that is not
                  below the apex of any served zone, it normally answers with
                  an
                  "upwards referral" to the root servers or the servers of
                  some other
                  known parent of the query name.  Since the data in an
                  upwards referral
                  comes from the cache, the server will not be able to provide
                  upwards
                  referrals when <span><strong class="command">additional-from-cache no</strong></span>
                  has been specified.  Instead, it will respond to such
                  queries
                  with REFUSED.  This should not cause any problems since
                  upwards referrals are not required for the resolution
                  process.
                </p>
d1628 10
a1637 12
<dd><p>
                  If <strong class="userinput"><code>yes</code></strong>, then an
                  IPv4-mapped IPv6 address will match any address match
                  list entries that match the corresponding IPv4 address.
                  Enabling this option is sometimes useful on IPv6-enabled
                  Linux
                  systems, to work around a kernel quirk that causes IPv4
                  TCP connections such as zone transfers to be accepted
                  on an IPv6 socket using mapped addresses, causing
                  address match lists designed for IPv4 to fail to match.
                  The use of this option for any other purpose is discouraged.
                </p></dd>
d1641 8
a1648 8
                  When <strong class="userinput"><code>yes</code></strong> and the server loads a new version of a master
                  zone from its zone file or receives a new version of a slave
                  file by a non-incremental zone transfer, it will compare
                  the new version to the previous one and calculate a set
                  of differences.  The differences are then logged in the
                  zone's journal file such that the changes can be transmitted
                  to downstream slaves as an incremental zone transfer.
                </p>
d1650 10
a1659 19
                  By allowing incremental zone transfers to be used for
                  non-dynamic zones, this option saves bandwidth at the
                  expense of increased CPU and memory consumption at the
                  master.
                  In particular, if the new version of a zone is completely
                  different from the previous one, the set of differences
                  will be of a size comparable to the combined size of the
                  old and new zone version, and the server will need to
                  temporarily allocate memory to hold this complete
                  difference set.
                </p>
<p><span><strong class="command">ixfr-from-differences</strong></span>
                  also accepts <span><strong class="command">master</strong></span> and
                  <span><strong class="command">slave</strong></span> at the view and options
                  levels which causes
                  <span><strong class="command">ixfr-from-differences</strong></span> to apply to
                  all <span><strong class="command">master</strong></span> or
                  <span><strong class="command">slave</strong></span> zones respectively.
                </p>
d1663 5
a1667 8
                  This should be set when you have multiple masters for a zone
                  and the
                  addresses refer to different machines.  If <strong class="userinput"><code>yes</code></strong>, named will
                  not log
                  when the serial number on the master is less than what named
                  currently
                  has.  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
d1670 4
a1673 17
                  Enable DNSSEC support in named.  Unless set to <strong class="userinput"><code>yes</code></strong>,
                  named behaves as if it does not support DNSSEC.
                  The default is <strong class="userinput"><code>yes</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-validation</strong></span></span></dt>
<dd><p>
                  Enable DNSSEC validation in named.
                  Note <span><strong class="command">dnssec-enable</strong></span> also needs to be
                  set to <strong class="userinput"><code>yes</code></strong> to be effective.
                  The default is <strong class="userinput"><code>no</code></strong>.
                </p></dd>
<dt><span class="term"><span><strong class="command">dnssec-accept-expired</strong></span></span></dt>
<dd><p>
                  Accept expired signatures when verifying DNSSEC signatures.
                  The default is <strong class="userinput"><code>no</code></strong>.
                  Setting this option to "yes" leaves named vulnerable to replay attacks.
                </p></dd>
d1676 4
a1679 6
                  Specify whether query logging should be started when named
                  starts.
                  If <span><strong class="command">querylog</strong></span> is not specified,
                  then the query logging
                  is determined by the presence of the logging category <span><strong class="command">queries</strong></span>.
                </p></dd>
d1683 17
a1699 24
                  This option is used to restrict the character set and syntax
                  of
                  certain domain names in master files and/or DNS responses
                  received
                  from the network.  The default varies according to usage
                  area.  For
                  <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.
                  For <span><strong class="command">slave</strong></span> zones the default
                  is <span><strong class="command">warn</strong></span>.
                  For answers received from the network (<span><strong class="command">response</strong></span>)
                  the default is <span><strong class="command">ignore</strong></span>.
                </p>
<p>
                  The rules for legal hostnames and mail domains are derived
                  from RFC 952 and RFC 821 as modified by RFC 1123.
                </p>
<p><span><strong class="command">check-names</strong></span>
                  applies to the owner names of A, AAA and MX records.
                  It also applies to the domain names in the RDATA of NS, SOA
                  and MX records.
                  It also applies to the RDATA of PTR records where the owner
                  name indicated that it is a reverse lookup of a hostname
                  (the owner name ends in IN-ADDR.ARPA, IP6.ARPA, or IP6.INT).
                </p>
a1700 70
<dt><span class="term"><span><strong class="command">check-mx</strong></span></span></dt>
<dd><p>
                  Check whether the MX record appears to refer to a IP address.
                  The default is to <span><strong class="command">warn</strong></span>.  Other possible
                  values are <span><strong class="command">fail</strong></span> and
                  <span><strong class="command">ignore</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-wildcard</strong></span></span></dt>
<dd><p>
                  This option is used to check for non-terminal wildcards.
                  The use of non-terminal wildcards is almost always as a
                  result of a failure
                  to understand the wildcard matching algorithm (RFC 1034).
                  This option
                  affects master zones.  The default (<span><strong class="command">yes</strong></span>) is to check
                  for non-terminal wildcards and issue a warning.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-integrity</strong></span></span></dt>
<dd><p>
                  Perform post load zone integrity checks on master
                  zones.  This checks that MX and SRV records refer
                  to address (A or AAAA) records and that glue
                  address records exist for delegated zones.  For
                  MX and SRV records only in-zone hostnames are
                  checked (for out-of-zone hostnames use named-checkzone).
                  For NS records only names below top of zone are
                  checked (for out-of-zone names and glue consistency
                  checks use named-checkzone).  The default is
                  <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-mx-cname</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">check-integrity</strong></span> is set then
                  fail, warn or ignore MX records that refer
                  to CNAMES.  The default is to <span><strong class="command">warn</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-srv-cname</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">check-integrity</strong></span> is set then
                  fail, warn or ignore SRV records that refer
                  to CNAMES.  The default is to <span><strong class="command">warn</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">check-sibling</strong></span></span></dt>
<dd><p>
                  When performing integrity checks, also check that
                  sibling glue exists.  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl</strong></span></span></dt>
<dd><p>
                  When returning authoritative negative responses to
                  SOA queries set the TTL of the SOA recored returned in
                  the authority section to zero.
                  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl-cache</strong></span></span></dt>
<dd><p>
                  When caching a negative response to a SOA query
                  set the TTL to zero.
                  The default is <span><strong class="command">no</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">update-check-ksk</strong></span></span></dt>
<dd><p>
                  When regenerating the RRSIGs following a UPDATE
                  request to a secure zone, check the KSK flag on
                  the DNSKEY RR to determine if this key should be
                  used to generate the RRSIG.  This flag is ignored
                  if there are not DNSKEY RRs both with and without
                  a KSK.
                  The default is <span><strong class="command">yes</strong></span>.
                </p></dd>
d1705 8
a1712 11
<a name="id2580536"></a>Forwarding</h4></div></div></div>
<p>
            The forwarding facility can be used to create a large site-wide
            cache on a few servers, reducing traffic over links to external
            name servers. It can also be used to allow queries by servers that
            do not have direct access to the Internet, but wish to look up
            exterior
            names anyway. Forwarding occurs only on those queries for which
            the server is not authoritative and does not have the answer in
            its cache.
          </p>
d1715 7
a1721 11
<dd><p>
                  This option is only meaningful if the
                  forwarders list is not empty. A value of <code class="varname">first</code>,
                  the default, causes the server to query the forwarders
                  first &#8212; and
                  if that doesn't answer the question, the server will then
                  look for
                  the answer itself. If <code class="varname">only</code> is
                  specified, the
                  server will only query the forwarders.
                </p></dd>
d1723 3
a1725 5
<dd><p>
                  Specifies the IP addresses to be used
                  for forwarding. The default is the empty list (no
                  forwarding).
                </p></dd>
d1727 7
a1733 10
<p>
            Forwarding can also be configured on a per-domain basis, allowing
            for the global forwarding options to be overridden in a variety
            of ways. You can set particular domains to use different
            forwarders,
            or have a different <span><strong class="command">forward only/first</strong></span> behavior,
            or not forward at all, see <a href="Bv9ARM.ch06.html#zone_statement_grammar" title="zone
            Statement Grammar">the section called &#8220;<span><strong class="command">zone</strong></span>
            Statement Grammar&#8221;</a>.
          </p>
d1737 4
a1740 8
<a name="id2580595"></a>Dual-stack Servers</h4></div></div></div>
<p>
            Dual-stack servers are used as servers of last resort to work
            around
            problems in reachability due the lack of support for either IPv4
            or IPv6
            on the host machine.
          </p>
d1743 6
a1748 10
<dd><p>
                  Specifies host names or addresses of machines with access to
                  both IPv4 and IPv6 transports. If a hostname is used, the
                  server must be able
                  to resolve the name using only the transport it has.  If the
                  machine is dual
                  stacked, then the <span><strong class="command">dual-stack-servers</strong></span> have no effect unless
                  access to a transport has been disabled on the command line
                  (e.g. <span><strong class="command">named -4</strong></span>).
                </p></dd>
d1754 3
a1756 5
<p>
            Access to the server can be restricted based on the IP address
            of the requesting system. See <a href="Bv9ARM.ch06.html#address_match_lists" title="Address Match Lists">the section called &#8220;Address Match Lists&#8221;</a> for
            details on how to specify IP address lists.
          </p>
d1759 8
a1766 14
<dd><p>
                  Specifies which hosts are allowed to
                  notify this server, a slave, of zone changes in addition
                  to the zone masters.
                  <span><strong class="command">allow-notify</strong></span> may also be
                  specified in the
                  <span><strong class="command">zone</strong></span> statement, in which case
                  it overrides the
                  <span><strong class="command">options allow-notify</strong></span>
                  statement.  It is only meaningful
                  for a slave zone.  If not specified, the default is to
                  process notify messages
                  only from a zone's master.
                </p></dd>
d1768 5
a1772 28
<dd>
<p>
                  Specifies which hosts are allowed to ask ordinary
                  DNS questions. <span><strong class="command">allow-query</strong></span> may
                  also be specified in the <span><strong class="command">zone</strong></span>
                  statement, in which case it overrides the
                  <span><strong class="command">options allow-query</strong></span> statement.
                  If not specified, the default is to allow queries
                  from all hosts.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    <span><strong class="command">allow-query-cache</strong></span> is now
                    used to specify access to the cache.
                  </p>
</div>
</dd>
<dt><span class="term"><span><strong class="command">allow-query-cache</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to get answers
                  from the cache.  If <span><strong class="command">allow-query-cache</strong></span>
                  is not set then <span><strong class="command">allow-recursion</strong></span>
                  is used if set, otherwise <span><strong class="command">allow-query</strong></span>
                  is used if set, otherwise the default
                  (<span><strong class="command">localnets;</strong></span>
                  <span><strong class="command">localhost;</strong></span>) is used.
                </p></dd>
d1774 6
a1779 19
<dd><p>
                  Specifies which hosts are allowed to make recursive
                  queries through this server. If
                  <span><strong class="command">allow-recursion</strong></span> is not set
                  then <span><strong class="command">allow-query-cache</strong></span> is
                  used if set, otherwise <span><strong class="command">allow-query</strong></span>
                  is used if set, otherwise the default
                  (<span><strong class="command">localnets;</strong></span>
                  <span><strong class="command">localhost;</strong></span>) is used.
                </p></dd>
<dt><span class="term"><span><strong class="command">allow-update</strong></span></span></dt>
<dd><p>
                  Specifies which hosts are allowed to
                  submit Dynamic DNS updates for master zones. The default is
                  to deny
                  updates from all hosts.  Note that allowing updates based
                  on the requestor's IP address is insecure; see
                  <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a> for details.
                </p></dd>
d1782 14
a1795 25
<p>
                  Specifies which hosts are allowed to
                  submit Dynamic DNS updates to slave zones to be forwarded to
                  the
                  master.  The default is <strong class="userinput"><code>{ none; }</code></strong>,
                  which
                  means that no update forwarding will be performed.  To
                  enable
                  update forwarding, specify
                  <strong class="userinput"><code>allow-update-forwarding { any; };</code></strong>.
                  Specifying values other than <strong class="userinput"><code>{ none; }</code></strong> or
                  <strong class="userinput"><code>{ any; }</code></strong> is usually
                  counterproductive, since
                  the responsibility for update access control should rest
                  with the
                  master server, not the slaves.
                </p>
<p>
                  Note that enabling the update forwarding feature on a slave
                  server
                  may expose master servers relying on insecure IP address
                  based
                  access control to attacks; see <a href="Bv9ARM.ch07.html#dynamic_update_security" title="Dynamic Update Security">the section called &#8220;Dynamic Update Security&#8221;</a>
                  for more details.
                </p>
d1798 6
a1803 9
<dd><p>
                  This option was introduced for the smooth transition from
                  AAAA
                  to A6 and from "nibble labels" to binary labels.
                  However, since both A6 and binary labels were then
                  deprecated,
                  this option was also deprecated.
                  It is now ignored with some warning messages.
                </p></dd>
d1805 5
a1809 9
<dd><p>
                  Specifies which hosts are allowed to
                  receive zone transfers from the server. <span><strong class="command">allow-transfer</strong></span> may
                  also be specified in the <span><strong class="command">zone</strong></span>
                  statement, in which
                  case it overrides the <span><strong class="command">options allow-transfer</strong></span> statement.
                  If not specified, the default is to allow transfers to all
                  hosts.
                </p></dd>
d1811 3
a1813 7
<dd><p>
                  Specifies a list of addresses that the
                  server will not accept queries from or use to resolve a
                  query. Queries
                  from these addresses will not be responded to. The default
                  is <strong class="userinput"><code>none</code></strong>.
                </p></dd>
d1818 8
a1825 13
<a name="id2581153"></a>Interfaces</h4></div></div></div>
<p>
            The interfaces and ports that the server will answer queries
            from may be specified using the <span><strong class="command">listen-on</strong></span> option. <span><strong class="command">listen-on</strong></span> takes
            an optional port, and an <code class="varname">address_match_list</code>.
            The server will listen on all interfaces allowed by the address
            match list. If a port is not specified, port 53 will be used.
          </p>
<p>
            Multiple <span><strong class="command">listen-on</strong></span> statements are
            allowed.
            For example,
          </p>
d1829 9
a1837 17
<p>
            will enable the name server on port 53 for the IP address
            5.6.7.8, and on port 1234 of an address on the machine in net
            1.2 that is not 1.2.3.4.
          </p>
<p>
            If no <span><strong class="command">listen-on</strong></span> is specified, the
            server will listen on port 53 on all interfaces.
          </p>
<p>
            The <span><strong class="command">listen-on-v6</strong></span> option is used to
            specify the interfaces and the ports on which the server will
            listen
            for incoming queries sent using IPv6.
          </p>
<p>
            When </p>
d1839 14
a1852 24
<p> is
            specified
            as the <code class="varname">address_match_list</code> for the
            <span><strong class="command">listen-on-v6</strong></span> option,
            the server does not bind a separate socket to each IPv6 interface
            address as it does for IPv4 if the operating system has enough API
            support for IPv6 (specifically if it conforms to RFC 3493 and RFC
            3542).
            Instead, it listens on the IPv6 wildcard address.
            If the system only has incomplete API support for IPv6, however,
            the behavior is the same as that for IPv4.
          </p>
<p>
            A list of particular IPv6 addresses can also be specified, in
            which case
            the server listens on a separate socket for each specified
            address,
            regardless of whether the desired API is supported by the system.
          </p>
<p>
            Multiple <span><strong class="command">listen-on-v6</strong></span> options can
            be used.
            For example,
          </p>
d1856 5
a1860 9
<p>
            will enable the name server on port 53 for any IPv6 addresses
            (with a single wildcard socket),
            and on port 1234 of IPv6 addresses that is not in the prefix
            2001:db8::/32 (with separate sockets for each matched address.)
          </p>
<p>
            To make the server not listen on any IPv6 address, use
          </p>
d1863 2
a1864 5
<p>
            If no <span><strong class="command">listen-on-v6</strong></span> option is
            specified,
            the server will not listen on any IPv6 address.
          </p>
d1868 11
a1878 15
<a name="id2581241"></a>Query Address</h4></div></div></div>
<p>
            If the server doesn't know the answer to a question, it will
            query other name servers. <span><strong class="command">query-source</strong></span> specifies
            the address and port used for such queries. For queries sent over
            IPv6, there is a separate <span><strong class="command">query-source-v6</strong></span> option.
            If <span><strong class="command">address</strong></span> is <span><strong class="command">*</strong></span> (asterisk) or is omitted,
            a wildcard IP address (<span><strong class="command">INADDR_ANY</strong></span>)
            will be used.
            If <span><strong class="command">port</strong></span> is <span><strong class="command">*</strong></span> or is omitted,
            a random unprivileged port will be used. The <span><strong class="command">avoid-v4-udp-ports</strong></span>
            and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used
            to prevent named
            from selecting certain ports. The defaults are:
          </p>
d1884 4
a1887 7
<p>
              The address specified in the <span><strong class="command">query-source</strong></span> option
              is used for both UDP and TCP queries, but the port applies only
              to
              UDP queries.  TCP queries always use a random
              unprivileged port.
            </p>
d1891 2
a1892 4
<p>
              Solaris 2.5.1 and earlier does not support setting the source
              address for TCP sockets.
            </p>
d1897 3
a1899 3
              See also <span><strong class="command">transfer-source</strong></span> and
              <span><strong class="command">notify-source</strong></span>.
            </p>
d1905 3
a1907 6
<p>
            <acronym class="acronym">BIND</acronym> has mechanisms in place to
            facilitate zone transfers
            and set limits on the amount of load that transfers place on the
            system. The following options apply to zone transfers.
          </p>
d1910 10
a1919 19
<dd><p>
                  Defines a global list of IP addresses of name servers
                  that are also sent NOTIFY messages whenever a fresh copy of
                  the
                  zone is loaded, in addition to the servers listed in the
                  zone's NS records.
                  This helps to ensure that copies of the zones will
                  quickly converge on stealth servers. If an <span><strong class="command">also-notify</strong></span> list
                  is given in a <span><strong class="command">zone</strong></span> statement,
                  it will override
                  the <span><strong class="command">options also-notify</strong></span>
                  statement. When a <span><strong class="command">zone notify</strong></span>
                  statement
                  is set to <span><strong class="command">no</strong></span>, the IP
                  addresses in the global <span><strong class="command">also-notify</strong></span> list will
                  not be sent NOTIFY messages for that zone. The default is
                  the empty
                  list (no global notification list).
                </p></dd>
d1921 3
a1923 6
<dd><p>
                  Inbound zone transfers running longer than
                  this many minutes will be terminated. The default is 120
                  minutes
                  (2 hours).  The maximum value is 28 days (40320 minutes).
                </p></dd>
d1925 3
a1927 6
<dd><p>
                  Inbound zone transfers making no progress
                  in this many minutes will be terminated. The default is 60
                  minutes
                  (1 hour).  The maximum value is 28 days (40320 minutes).
                </p></dd>
d1929 3
a1931 6
<dd><p>
                  Outbound zone transfers running longer than
                  this many minutes will be terminated. The default is 120
                  minutes
                  (2 hours).  The maximum value is 28 days (40320 minutes).
                </p></dd>
d1933 3
a1935 6
<dd><p>
                  Outbound zone transfers making no progress
                  in this many minutes will be terminated.  The default is 60
                  minutes (1
                  hour).  The maximum value is 28 days (40320 minutes).
                </p></dd>
d1937 8
a1944 13
<dd><p>
                  Slave servers will periodically query master servers
                  to find out if zone serial numbers have changed. Each such
                  query uses
                  a minute amount of the slave server's network bandwidth.  To
                  limit the
                  amount of bandwidth used, BIND 9 limits the rate at which
                  queries are
                  sent.  The value of the <span><strong class="command">serial-query-rate</strong></span> option,
                  an integer, is the maximum number of queries sent per
                  second.
                  The default is 20.
                </p></dd>
d1946 8
a1953 10
<dd><p>
                  In BIND 8, the <span><strong class="command">serial-queries</strong></span>
                  option
                  set the maximum number of concurrent serial number queries
                  allowed to be outstanding at any given time.
                  BIND 9 does not limit the number of outstanding
                  serial queries and ignores the <span><strong class="command">serial-queries</strong></span> option.
                  Instead, it limits the rate at which the queries are sent
                  as defined using the <span><strong class="command">serial-query-rate</strong></span> option.
                </p></dd>
d1956 16
a1971 20
                  Zone transfers can be sent using two different formats,
                  <span><strong class="command">one-answer</strong></span> and
                  <span><strong class="command">many-answers</strong></span>.
                  The <span><strong class="command">transfer-format</strong></span> option is used
                  on the master server to determine which format it sends.
                  <span><strong class="command">one-answer</strong></span> uses one DNS message per
                  resource record transferred.
                  <span><strong class="command">many-answers</strong></span> packs as many resource
                  records as possible into a message.
                  <span><strong class="command">many-answers</strong></span> is more efficient, but is
                  only supported by relatively new slave servers,
                  such as <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
                  8.x and <acronym class="acronym">BIND</acronym> 4.9.5 onwards.
                  The <span><strong class="command">many-answers</strong></span> format is also supported by
                  recent Microsoft Windows nameservers.
                  The default is <span><strong class="command">many-answers</strong></span>.
                  <span><strong class="command">transfer-format</strong></span> may be overridden on a
                  per-server basis by using the <span><strong class="command">server</strong></span>
                  statement.
                </p></dd>
d1973 4
a1976 8
<dd><p>
                  The maximum number of inbound zone transfers
                  that can be running concurrently. The default value is <code class="literal">10</code>.
                  Increasing <span><strong class="command">transfers-in</strong></span> may
                  speed up the convergence
                  of slave zones, but it also may increase the load on the
                  local system.
                </p></dd>
d1978 3
a1980 6
<dd><p>
                  The maximum number of outbound zone transfers
                  that can be running concurrently. Zone transfer requests in
                  excess
                  of the limit will be refused. The default value is <code class="literal">10</code>.
                </p></dd>
d1982 7
a1988 13
<dd><p>
                  The maximum number of inbound zone transfers
                  that can be concurrently transferring from a given remote
                  name server.
                  The default value is <code class="literal">2</code>.
                  Increasing <span><strong class="command">transfers-per-ns</strong></span>
                  may
                  speed up the convergence of slave zones, but it also may
                  increase
                  the load on the remote name server. <span><strong class="command">transfers-per-ns</strong></span> may
                  be overridden on a per-server basis by using the <span><strong class="command">transfers</strong></span> phrase
                  of the <span><strong class="command">server</strong></span> statement.
                </p></dd>
d1990 14
a2003 30
<dd>
<p><span><strong class="command">transfer-source</strong></span>
                  determines which local address will be bound to IPv4
                  TCP connections used to fetch zones transferred
                  inbound by the server.  It also determines the
                  source IPv4 address, and optionally the UDP port,
                  used for the refresh queries and forwarded dynamic
                  updates.  If not set, it defaults to a system
                  controlled value which will usually be the address
                  of the interface "closest to" the remote end. This
                  address must appear in the remote end's
                  <span><strong class="command">allow-transfer</strong></span> option for the
                  zone being transferred, if one is specified. This
                  statement sets the
                  <span><strong class="command">transfer-source</strong></span> for all zones,
                  but can be overridden on a per-view or per-zone
                  basis by including a
                  <span><strong class="command">transfer-source</strong></span> statement within
                  the <span><strong class="command">view</strong></span> or
                  <span><strong class="command">zone</strong></span> block in the configuration
                  file.
                </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
<p>
                    Solaris 2.5.1 and earlier does not support setting the
                    source address for TCP sockets.
                  </p>
</div>
</dd>
d2005 2
a2006 4
<dd><p>
                  The same as <span><strong class="command">transfer-source</strong></span>,
                  except zone transfers are performed using IPv6.
                </p></dd>
d2010 5
a2014 5
                  An alternate transfer source if the one listed in
                  <span><strong class="command">transfer-source</strong></span> fails and
                  <span><strong class="command">use-alt-transfer-source</strong></span> is
                  set.
                </p>
d2017 7
a2023 7
                  If you do not wish the alternate transfer source
                  to be used, you should set
                  <span><strong class="command">use-alt-transfer-source</strong></span>
                  appropriately and you should not depend upon
                  getting a answer back to the first refresh
                  query.
                </div>
d2026 3
a2028 6
<dd><p>
                  An alternate transfer source if the one listed in
                  <span><strong class="command">transfer-source-v6</strong></span> fails and
                  <span><strong class="command">use-alt-transfer-source</strong></span> is
                  set.
                </p></dd>
d2030 3
a2032 7
<dd><p>
                  Use the alternate transfer sources or not.  If views are
                  specified this defaults to <span><strong class="command">no</strong></span>
                  otherwise it defaults to
                  <span><strong class="command">yes</strong></span> (for BIND 8
                  compatibility).
                </p></dd>
d2035 9
a2043 14
<p><span><strong class="command">notify-source</strong></span>
                  determines which local source address, and
                  optionally UDP port, will be used to send NOTIFY
                  messages.  This address must appear in the slave
                  server's <span><strong class="command">masters</strong></span> zone clause or
                  in an <span><strong class="command">allow-notify</strong></span> clause.  This
                  statement sets the <span><strong class="command">notify-source</strong></span>
                  for all zones, but can be overridden on a per-zone or
                  per-view basis by including a
                  <span><strong class="command">notify-source</strong></span> statement within
                  the <span><strong class="command">zone</strong></span> or
                  <span><strong class="command">view</strong></span> block in the configuration
                  file.
                </p>
d2047 3
a2049 3
                    Solaris 2.5.1 and earlier does not support setting the
                    source address for TCP sockets.
                  </p>
d2053 2
a2054 4
<dd><p>
                  Like <span><strong class="command">notify-source</strong></span>,
                  but applies to notify messages sent to IPv6 addresses.
                </p></dd>
d2059 10
a2068 11
<a name="id2581988"></a>Bad UDP Port Lists</h4></div></div></div>
<p><span><strong class="command">avoid-v4-udp-ports</strong></span>
            and <span><strong class="command">avoid-v6-udp-ports</strong></span> specify a list
            of IPv4 and IPv6 UDP ports that will not be used as system
            assigned source ports for UDP sockets.  These lists
            prevent named from choosing as its random source port a
            port that is blocked by your firewall.  If a query went
            out with such a source port, the answer would not get by
            the firewall and the name server would have to query
            again.
          </p>
d2072 13
a2084 22
<a name="id2582003"></a>Operating System Resource Limits</h4></div></div></div>
<p>
            The server's usage of many system resources can be limited.
            Scaled values are allowed when specifying resource limits.  For
            example, <span><strong class="command">1G</strong></span> can be used instead of
            <span><strong class="command">1073741824</strong></span> to specify a limit of
            one
            gigabyte. <span><strong class="command">unlimited</strong></span> requests
            unlimited use, or the
            maximum available amount. <span><strong class="command">default</strong></span>
            uses the limit
            that was in force when the server was started. See the description
            of <span><strong class="command">size_spec</strong></span> in <a href="Bv9ARM.ch06.html#configuration_file_elements" title="Configuration File Elements">the section called &#8220;Configuration File Elements&#8221;</a>.
          </p>
<p>
            The following options set operating system resource limits for
            the name server process.  Some operating systems don't support
            some or
            any of the limits. On such systems, a warning will be issued if
            the
            unsupported limit is used.
          </p>
d2087 2
a2088 4
<dd><p>
                  The maximum size of a core dump. The default
                  is <code class="literal">default</code>.
                </p></dd>
d2090 15
a2104 16
<dd><p>
                  The maximum amount of data memory the server
                  may use. The default is <code class="literal">default</code>.
                  This is a hard limit on server memory usage.
                  If the server attempts to allocate memory in excess of this
                  limit, the allocation will fail, which may in turn leave
                  the server unable to perform DNS service.  Therefore,
                  this option is rarely useful as a way of limiting the
                  amount of memory used by the server, but it can be used
                  to raise an operating system data size limit that is
                  too small by default.  If you wish to limit the amount
                  of memory used by the server, use the
                  <span><strong class="command">max-cache-size</strong></span> and
                  <span><strong class="command">recursive-clients</strong></span>
                  options instead.
                </p></dd>
d2106 3
a2108 4
<dd><p>
                  The maximum number of files the server
                  may have open concurrently. The default is <code class="literal">unlimited</code>.
                </p></dd>
d2110 2
a2111 4
<dd><p>
                  The maximum amount of stack memory the server
                  may use. The default is <code class="literal">default</code>.
                </p></dd>
d2116 4
a2119 6
<a name="id2582186"></a>Server  Resource Limits</h4></div></div></div>
<p>
            The following options set limits on the server's
            resource consumption that are enforced internally by the
            server rather than the operating system.
          </p>
d2122 5
a2126 6
<dd><p>
                  This option is obsolete; it is accepted
                  and ignored for BIND 8 compatibility.  The option
                  <span><strong class="command">max-journal-size</strong></span> performs a
                  similar function in BIND 9.
                </p></dd>
d2128 5
a2132 9
<dd><p>
                  Sets a maximum size for each journal file
                  (see <a href="Bv9ARM.ch04.html#journal" title="The journal file">the section called &#8220;The journal file&#8221;</a>).  When the journal file
                  approaches
                  the specified size, some of the oldest transactions in the
                  journal
                  will be automatically removed.  The default is
                  <code class="literal">unlimited</code>.
                </p></dd>
d2134 4
a2137 5
<dd><p>
                  In BIND 8, specifies the maximum number of host statistics
                  entries to be kept.
                  Not implemented in BIND 9.
                </p></dd>
d2139 7
a2145 12
<dd><p>
                  The maximum number of simultaneous recursive lookups
                  the server will perform on behalf of clients.  The default
                  is
                  <code class="literal">1000</code>.  Because each recursing
                  client uses a fair
                  bit of memory, on the order of 20 kilobytes, the value of
                  the
                  <span><strong class="command">recursive-clients</strong></span> option may
                  have to be decreased
                  on hosts with limited memory.
                </p></dd>
d2147 3
a2149 5
<dd><p>
                  The maximum number of simultaneous client TCP
                  connections that the server will accept.
                  The default is <code class="literal">100</code>.
                </p></dd>
d2151 8
a2158 13
<dd><p>
                  The maximum amount of memory to use for the
                  server's cache, in bytes.  When the amount of data in the
                  cache
                  reaches this limit, the server will cause records to expire
                  prematurely so that the limit is not exceeded.  In a server
                  with
                  multiple views, the limit applies separately to the cache of
                  each
                  view.  The default is <code class="literal">unlimited</code>, meaning that
                  records are purged from the cache only when their TTLs
                  expire.
                </p></dd>
d2160 6
a2165 10
<dd><p>
                  The listen queue depth.  The default and minimum is 3.
                  If the kernel supports the accept filter "dataready" this
                  also controls how
                  many TCP connections that will be queued in kernel space
                  waiting for
                  some data before being passed to accept.  Values less than 3
                  will be
                  silently raised.
                </p></dd>
d2170 1
a2170 1
<a name="id2582320"></a>Periodic Task Intervals</h4></div></div></div>
d2173 4
a2176 7
<dd><p>
                  The server will remove expired resource records
                  from the cache every <span><strong class="command">cleaning-interval</strong></span> minutes.
                  The default is 60 minutes.  The maximum value is 28 days
                  (40320 minutes).
                  If set to 0, no periodic cleaning will occur.
                </p></dd>
d2178 5
a2182 9
<dd><p>
                  The server will perform zone maintenance tasks
                  for all zones marked as <span><strong class="command">dialup</strong></span> whenever this
                  interval expires. The default is 60 minutes. Reasonable
                  values are up
                  to 1 day (1440 minutes).  The maximum value is 28 days
                  (40320 minutes).
                  If set to 0, no zone maintenance for these zones will occur.
                </p></dd>
d2184 9
a2192 14
<dd><p>
                  The server will scan the network interface list
                  every <span><strong class="command">interface-interval</strong></span>
                  minutes. The default
                  is 60 minutes. The maximum value is 28 days (40320 minutes).
                  If set to 0, interface scanning will only occur when
                  the configuration file is  loaded. After the scan, the
                  server will
                  begin listening for queries on any newly discovered
                  interfaces (provided they are allowed by the
                  <span><strong class="command">listen-on</strong></span> configuration), and
                  will
                  stop listening on interfaces that have gone away.
                </p></dd>
d2195 4
a2198 7
<p>
                  Name server statistics will be logged
                  every <span><strong class="command">statistics-interval</strong></span>
                  minutes. The default is
                  60. The maximum value is 28 days (40320 minutes).
                  If set to 0, no statistics will be logged.
                  </p>
d2201 1
a2201 4
<p>
                    Not yet implemented in
                    <acronym class="acronym">BIND</acronym> 9.
                  </p>
d2209 12
a2220 17
<p>
            All other things being equal, when the server chooses a name
            server
            to query from a list of name servers, it prefers the one that is
            topologically closest to itself. The <span><strong class="command">topology</strong></span> statement
            takes an <span><strong class="command">address_match_list</strong></span> and
            interprets it
            in a special way. Each top-level list element is assigned a
            distance.
            Non-negated elements get a distance based on their position in the
            list, where the closer the match is to the start of the list, the
            shorter the distance is between it and the server. A negated match
            will be assigned the maximum distance from the server. If there
            is no match, the address will get a distance which is further than
            any non-negated list element, and closer than any negated element.
            For example,
          </p>
d2226 5
a2230 9
<p>
            will prefer servers on network 10 the most, followed by hosts
            on network 1.2.0.0 (netmask 255.255.0.0) and network 3, with the
            exception of hosts on network 1.2.3 (netmask 255.255.255.0), which
            is preferred least of all.
          </p>
<p>
            The default topology is
          </p>
d2235 3
a2237 4
<p>
              The <span><strong class="command">topology</strong></span> option
              is not implemented in <acronym class="acronym">BIND</acronym> 9.
            </p>
d2243 43
a2285 65
<p>
            The response to a DNS query may consist of multiple resource
            records (RRs) forming a resource records set (RRset).
            The name server will normally return the
            RRs within the RRset in an indeterminate order
            (but see the <span><strong class="command">rrset-order</strong></span>
            statement in <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>).
            The client resolver code should rearrange the RRs as appropriate,
            that is, using any addresses on the local net in preference to
            other addresses.
            However, not all resolvers can do this or are correctly
            configured.
            When a client is using a local server, the sorting can be performed
            in the server, based on the client's address. This only requires
            configuring the name servers, not all the clients.
          </p>
<p>
            The <span><strong class="command">sortlist</strong></span> statement (see below)
            takes
            an <span><strong class="command">address_match_list</strong></span> and
            interprets it even
            more specifically than the <span><strong class="command">topology</strong></span>
            statement
            does (<a href="Bv9ARM.ch06.html#topology" title="Topology">the section called &#8220;Topology&#8221;</a>).
            Each top level statement in the <span><strong class="command">sortlist</strong></span> must
            itself be an explicit <span><strong class="command">address_match_list</strong></span> with
            one or two elements. The first element (which may be an IP
            address,
            an IP prefix, an ACL name or a nested <span><strong class="command">address_match_list</strong></span>)
            of each top level list is checked against the source address of
            the query until a match is found.
          </p>
<p>
            Once the source address of the query has been matched, if
            the top level statement contains only one element, the actual
            primitive
            element that matched the source address is used to select the
            address
            in the response to move to the beginning of the response. If the
            statement is a list of two elements, then the second element is
            treated the same as the <span><strong class="command">address_match_list</strong></span> in
            a <span><strong class="command">topology</strong></span> statement. Each top
            level element
            is assigned a distance and the address in the response with the
            minimum
            distance is moved to the beginning of the response.
          </p>
<p>
            In the following example, any queries received from any of
            the addresses of the host itself will get responses preferring
            addresses
            on any of the locally connected networks. Next most preferred are
            addresses
            on the 192.168.1/24 network, and after that either the
            192.168.2/24
            or
            192.168.3/24 network with no preference shown between these two
            networks. Queries received from a host on the 192.168.1/24 network
            will prefer other addresses on that network to the 192.168.2/24
            and
            192.168.3/24 networks. Queries received from a host on the
            192.168.4/24
            or the 192.168.5/24 network will only prefer other addresses on
            their directly connected networks.
          </p>
d2303 7
a2309 12
<p>
            The following example will give reasonable behavior for the
            local host and hosts on directly connected networks. It is similar
            to the behavior of the address sort in <acronym class="acronym">BIND</acronym> 4.9.x. Responses sent
            to queries from the local host will favor any of the directly
            connected
            networks. Responses sent to queries from any other hosts on a
            directly
            connected network will prefer addresses on that same network.
            Responses
            to other queries will not be sorted.
          </p>
d2319 15
a2333 28
<p>
            When multiple records are returned in an answer it may be
            useful to configure the order of the records placed into the
            response.
            The <span><strong class="command">rrset-order</strong></span> statement permits
            configuration
            of the ordering of the records in a multiple record response.
            See also the <span><strong class="command">sortlist</strong></span> statement,
            <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a>.
          </p>
<p>
            An <span><strong class="command">order_spec</strong></span> is defined as
            follows:
          </p>
<p>
            [<span class="optional">class <em class="replaceable"><code>class_name</code></em></span>]
            [<span class="optional">type <em class="replaceable"><code>type_name</code></em></span>]
            [<span class="optional">name <em class="replaceable"><code>"domain_name"</code></em></span>]
            order <em class="replaceable"><code>ordering</code></em>
          </p>
<p>
            If no class is specified, the default is <span><strong class="command">ANY</strong></span>.
            If no type is specified, the default is <span><strong class="command">ANY</strong></span>.
            If no name is specified, the default is "<span><strong class="command">*</strong></span>" (asterisk).
          </p>
<p>
            The legal values for <span><strong class="command">ordering</strong></span> are:
          </p>
d2341 3
a2343 9
<td>
                    <p><span><strong class="command">fixed</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in the order they
                      are defined in the zone file.
                    </p>
                  </td>
d2346 2
a2347 8
<td>
                    <p><span><strong class="command">random</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in some random order.
                    </p>
                  </td>
d2350 3
a2352 9
<td>
                    <p><span><strong class="command">cyclic</strong></span></p>
                  </td>
<td>
                    <p>
                      Records are returned in a round-robin
                      order.
                    </p>
                  </td>
d2356 1
a2356 3
<p>
            For example:
          </p>
d2362 5
a2366 11
<p>
            will cause any responses for type A records in class IN that
            have "<code class="literal">host.example.com</code>" as a
            suffix, to always be returned
            in random order. All other records are returned in cyclic order.
          </p>
<p>
            If multiple <span><strong class="command">rrset-order</strong></span> statements
            appear,
            they are not combined &#8212; the last one applies.
          </p>
d2369 4
a2372 5
<p>
              The <span><strong class="command">rrset-order</strong></span> statement
              is not yet fully implemented in <acronym class="acronym">BIND</acronym> 9.
              BIND 9 currently does not fully support "fixed" ordering.
            </p>
d2380 5
a2384 8
<dd><p>
                  Sets the number of seconds to cache a
                  lame server indication. 0 disables caching. (This is
                  <span class="bold"><strong>NOT</strong></span> recommended.)
                  The default is <code class="literal">600</code> (10 minutes) and the
                  maximum value is
                  <code class="literal">1800</code> (30 minutes).
                </p></dd>
d2386 7
a2392 11
<dd><p>
                  To reduce network traffic and increase performance,
                  the server stores negative answers. <span><strong class="command">max-ncache-ttl</strong></span> is
                  used to set a maximum retention time for these answers in
                  the server
                  in seconds. The default
                  <span><strong class="command">max-ncache-ttl</strong></span> is <code class="literal">10800</code> seconds (3 hours).
                  <span><strong class="command">max-ncache-ttl</strong></span> cannot exceed
                  7 days and will
                  be silently truncated to 7 days if set to a greater value.
                </p></dd>
d2394 3
a2396 5
<dd><p>
                  Sets the maximum time for which the server will
                  cache ordinary (positive) answers. The default is
                  one week (7 days).
                </p></dd>
d2399 3
a2401 6
<p>
                  The minimum number of root servers that
                  is required for a request for the root servers to be
                  accepted. The default
                  is <strong class="userinput"><code>2</code></strong>.
                </p>
d2404 1
a2404 3
<p>
                    Not implemented in <acronym class="acronym">BIND</acronym> 9.
                  </p>
d2408 7
a2414 11
<dd><p>
                  Specifies the number of days into the
                  future when DNSSEC signatures automatically generated as a
                  result
                  of dynamic updates (<a href="Bv9ARM.ch04.html#dynamic_update" title="Dynamic Update">the section called &#8220;Dynamic Update&#8221;</a>)
                  will expire. The default is <code class="literal">30</code> days.
                  The maximum value is 10 years (3660 days). The signature
                  inception time is unconditionally set to one hour before the
                  current time
                  to allow for a limited amount of clock skew.
                </p></dd>
d2420 6
a2425 9
                  These options control the server's behavior on refreshing a
                  zone
                  (querying for SOA changes) or retrying failed transfers.
                  Usually the SOA values for the zone are used, but these
                  values
                  are set by the master, giving slave server administrators
                  little
                  control over their contents.
                </p>
d2427 5
a2431 8
                  These options allow the administrator to set a minimum and
                  maximum
                  refresh and retry time either per-zone, per-view, or
                  globally.
                  These options are valid for slave and stub zones,
                  and clamp the SOA refresh and retry times to the specified
                  values.
                </p>
d2435 7
a2441 85
                  Sets the advertised EDNS UDP buffer size in bytes.  Valid
                  values are 512 to 4096 (values outside this range
                  will be silently adjusted).  The default value is
                  4096.  The usual reason for setting edns-udp-size to
                  a non-default value is to get UDP answers to pass
                  through broken firewalls that block fragmented
                  packets and/or block UDP packets that are greater
                  than 512 bytes.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-udp-size</strong></span></span></dt>
<dd><p>
                  Sets the maximum EDNS UDP message size named will
                  send in bytes.  Valid values are 512 to 4096 (values outside
                  this range will be silently adjusted).  The default
                  value is 4096.  The usual reason for setting
                  max-udp-size to a non-default value is to get UDP
                  answers to pass through broken firewalls that
                  block fragmented packets and/or block UDP packets
                  that are greater than 512 bytes.
                  This is independent of the advertised receive
                  buffer (<span><strong class="command">edns-udp-size</strong></span>).
                </p></dd>
<dt><span class="term"><span><strong class="command">masterfile-format</strong></span></span></dt>
<dd><p>Specifies
                  the file format of zone files (see
                  <a href="Bv9ARM.ch06.html#zonefile_format" title="Additional File Formats">the section called &#8220;Additional File Formats&#8221;</a>).
                  The default value is <code class="constant">text</code>, which is the
                  standard textual representation.  Files in other formats
                  than <code class="constant">text</code> are typically expected
                  to be generated by the <span><strong class="command">named-compilezone</strong></span> tool.
                  Note that when a zone file in a different format than
                  <code class="constant">text</code> is loaded, <span><strong class="command">named</strong></span>
                  may omit some of the checks which would be performed for a
                  file in the <code class="constant">text</code> format.  In particular,
                  <span><strong class="command">check-names</strong></span> checks do not apply
                  for the <code class="constant">raw</code> format.  This means
                  a zone file in the <code class="constant">raw</code> format
                  must be generated with the same check level as that
                  specified in the <span><strong class="command">named</strong></span> configuration
                  file.  This statement sets the
                  <span><strong class="command">masterfile-format</strong></span> for all zones,
                  but can be overridden on a per-zone or per-view basis
                  by including a <span><strong class="command">masterfile-format</strong></span>
                  statement within the <span><strong class="command">zone</strong></span> or
                  <span><strong class="command">view</strong></span> block in the configuration
                  file.
                </p></dd>
<dt>
<span class="term"><span><strong class="command">clients-per-query</strong></span>, </span><span class="term"><span><strong class="command">max-clients-per-query</strong></span></span>
</dt>
<dd>
<p>These set the
                  initial value (minimum) and maximum number of recursive
                  simultanious clients for any given query
                  (&lt;qname,qtype,qclass&gt;) that the server will accept
                  before dropping additional clients.  named will attempt to
                  self tune this value and changes will be logged.  The
                  default values are 10 and 100.
                </p>
<p>
                  This value should reflect how many queries come in for
                  a given name in the time it takes to resolve that name.
                  If the number of queries exceed this value, named will
                  assume that it is dealing with a non-responsive zone
                  and will drop additional queries.  If it gets a response
                  after dropping queries, it will raise the estimate.  The
                  estimate will then be lowered in 20 minutes if it has
                  remained unchanged.
                </p>
<p>
                  If <span><strong class="command">clients-per-query</strong></span> is set to zero,
                  then there is no limit on the number of clients per query
                  and no queries will be dropped.
                </p>
<p>
                  If <span><strong class="command">max-clients-per-query</strong></span> is set to zero,
                  then there is no upper bound other than imposed by
                  <span><strong class="command">recursive-clients</strong></span>.
                </p>
</dd>
<dt><span class="term"><span><strong class="command">notify-delay</strong></span></span></dt>
<dd><p>
                  The delay, in seconds, between sending sets of notify
                  messages for a zone.  The default is zero.
                </p></dd>
d2447 12
a2458 20
<p>
            The server provides some helpful diagnostic information
            through a number of built-in zones under the
            pseudo-top-level-domain <code class="literal">bind</code> in the
            <span><strong class="command">CHAOS</strong></span> class.  These zones are part
            of a
            built-in view (see <a href="Bv9ARM.ch06.html#view_statement_grammar" title="view Statement Grammar">the section called &#8220;<span><strong class="command">view</strong></span> Statement Grammar&#8221;</a>) of
            class
            <span><strong class="command">CHAOS</strong></span> which is separate from the
            default view of
            class <span><strong class="command">IN</strong></span>; therefore, any global
            server options
            such as <span><strong class="command">allow-query</strong></span> do not apply
            the these zones.
            If you feel the need to disable these zones, use the options
            below, or hide the built-in <span><strong class="command">CHAOS</strong></span>
            view by
            defining an explicit view of class <span><strong class="command">CHAOS</strong></span>
            that matches all clients.
          </p>
d2461 6
a2466 8
<dd><p>
                  The version the server should report
                  via a query of the name <code class="literal">version.bind</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  The default is the real version number of this server.
                  Specifying <span><strong class="command">version none</strong></span>
                  disables processing of the queries.
                </p></dd>
d2468 8
a2475 12
<dd><p>
                  The hostname the server should report via a query of
                  the name <code class="filename">hostname.bind</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  This defaults to the hostname of the machine hosting the
                  name server as
                  found by the gethostname() function.  The primary purpose of such queries
                  is to
                  identify which of a group of anycast servers is actually
                  answering your queries.  Specifying <span><strong class="command">hostname none;</strong></span>
                  disables processing of the queries.
                </p></dd>
d2477 11
a2487 12
<dd><p>
                  The ID of the server should report via a query of
                  the name <code class="filename">ID.SERVER</code>
                  with type <span><strong class="command">TXT</strong></span>, class <span><strong class="command">CHAOS</strong></span>.
                  The primary purpose of such queries is to
                  identify which of a group of anycast servers is actually
                  answering your queries.  Specifying <span><strong class="command">server-id none;</strong></span>
                  disables processing of the queries.
                  Specifying <span><strong class="command">server-id hostname;</strong></span> will cause named to
                  use the hostname as found by the gethostname() function.
                  The default <span><strong class="command">server-id</strong></span> is <span><strong class="command">none</strong></span>.
                </p></dd>
d2492 6
a2497 1
<a name="empty"></a>Built-in Empty Zones</h4></div></div></div>
d2499 10
a2508 10
            Named has some built-in empty zones (SOA and NS records only).
            These are for zones that should normally be answered locally
            and which queries should not be sent to the Internet's root
            servers.  The official servers which cover these namespaces
            return NXDOMAIN responses to these queries.  In particular,
            these cover the reverse namespace for addresses from RFC 1918 and
            RFC 3330.  They also include the reverse namespace for IPv6 local
            address (locally assigned), IPv6 link local addresses, the IPv6
            loopback address and the IPv6 unknown addresss.
          </p>
d2510 3
a2512 37
            Named will attempt to determine if a built in zone already exists
            or is active (covered by a forward-only forwarding declaration)
            and will not not create a empty zone in that case.
          </p>
<p>
            The current list of empty zones is:
            </p>
<div class="itemizedlist"><ul type="disc">
<li>10.IN-ADDR.ARPA</li>
<li>127.IN-ADDR.ARPA</li>
<li>254.169.IN-ADDR.ARPA</li>
<li>16.172.IN-ADDR.ARPA</li>
<li>17.172.IN-ADDR.ARPA</li>
<li>18.172.IN-ADDR.ARPA</li>
<li>19.172.IN-ADDR.ARPA</li>
<li>20.172.IN-ADDR.ARPA</li>
<li>21.172.IN-ADDR.ARPA</li>
<li>22.172.IN-ADDR.ARPA</li>
<li>23.172.IN-ADDR.ARPA</li>
<li>24.172.IN-ADDR.ARPA</li>
<li>25.172.IN-ADDR.ARPA</li>
<li>26.172.IN-ADDR.ARPA</li>
<li>27.172.IN-ADDR.ARPA</li>
<li>28.172.IN-ADDR.ARPA</li>
<li>29.172.IN-ADDR.ARPA</li>
<li>30.172.IN-ADDR.ARPA</li>
<li>31.172.IN-ADDR.ARPA</li>
<li>168.192.IN-ADDR.ARPA</li>
<li>2.0.192.IN-ADDR.ARPA</li>
<li>0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.IP6.ARPA</li>
<li>1.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.0.IP6.ARPA</li>
<li>D.F.IP6.ARPA</li>
<li>8.E.F.IP6.ARPA</li>
<li>9.E.F.IP6.ARPA</li>
<li>A.E.F.IP6.ARPA</li>
<li>B.E.F.IP6.ARPA</li>
</ul></div>
d2514 1
a2514 7
          </p>
<p>
            Empty zones are settable at the view level and only apply to
            views of class IN.  Disabled empty zones are only inherited
            from options if there are no disabled empty zones specified
            at the view level.  To override the options list of disabled
            zones, you can disable the root zone at the view level, for example:
d2516 1
a2516 83
<pre class="programlisting">
            disable-empty-zone ".";
</pre>
<p>
          </p>
<p>
            If you are using the address ranges covered here, you should
            already have reverse zones covering the addresses you use.
            In practice this appears to not be the case with many queries
            being made to the infrastructure servers for names in these
            spaces.  So many in fact that sacrificial servers were needed
            to be deployed to channel the query load away from the
            infrastructure servers.
          </p>
<div class="note" style="margin-left: 0.5in; margin-right: 0.5in;">
<h3 class="title">Note</h3>
            The real parent servers for these zones should disable all
            empty zone under the parent zone they serve.  For the real
            root servers, this is all built in empty zones.  This will
            enable them to return referrals to deeper in the tree.
          </div>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">empty-server</strong></span></span></dt>
<dd><p>
                  Specify what server name will appear in the returned
                  SOA record for empty zones.  If none is specified, then
                  the zone's name will be used.
                </p></dd>
<dt><span class="term"><span><strong class="command">empty-contact</strong></span></span></dt>
<dd><p>
                  Specify what contact name will appear in the returned
                  SOA record for empty zones.  If none is specified, then
                  "." will be used.
                </p></dd>
<dt><span class="term"><span><strong class="command">empty-zones-enable</strong></span></span></dt>
<dd><p>
                  Enable or disable all empty zones.  By default they
                  are enabled.
                </p></dd>
<dt><span class="term"><span><strong class="command">disable-empty-zone</strong></span></span></dt>
<dd><p>
                  Disable individual empty zones.  By default none are
                  disabled.  This option can be specified multiple times.
                </p></dd>
</dl></div>
</div>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="statsfile"></a>The Statistics File</h4></div></div></div>
<p>
            The statistics file generated by <acronym class="acronym">BIND</acronym> 9
            is similar, but not identical, to that
            generated by <acronym class="acronym">BIND</acronym> 8.
          </p>
<p>
            The statistics dump begins with a line, like:
          </p>
<p>
            <span><strong class="command">+++ Statistics Dump +++ (973798949)</strong></span>
          </p>
<p>
            The number in parentheses is a standard
            Unix-style timestamp, measured as seconds since January 1, 1970.
            Following
            that line are a series of lines containing a counter type, the
            value of the
            counter, optionally a zone name, and optionally a view name.
            The lines without view and zone listed are global statistics for
            the entire server.
            Lines with a zone and view name for the given view and zone (the
            view name is
            omitted for the default view).
          </p>
<p>
            The statistics dump ends with the line where the
            number is identical to the number in the beginning line; for example:
          </p>
<p>
            <span><strong class="command">--- Statistics Dump --- (973798949)</strong></span>
          </p>
<p>
            The following statistics counters are maintained:
          </p>
d2524 5
a2528 35
<td>
                    <p><span><strong class="command">success</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of
                      successful queries made to the server or zone.  A
                      successful query
                      is defined as query which returns a NOERROR response
                      with at least
                      one answer RR.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">referral</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted
                      in referral responses.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">nxrrset</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted in
                      NOERROR responses with no data.
                    </p>
                  </td>
d2531 3
a2533 9
<td>
                    <p><span><strong class="command">nxdomain</strong></span></p>
                  </td>
<td>
                    <p>
                      The number
                      of queries which resulted in NXDOMAIN responses.
                    </p>
                  </td>
d2536 3
a2538 9
<td>
                    <p><span><strong class="command">failure</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which resulted in a
                      failure response other than those above.
                    </p>
                  </td>
d2541 3
a2543 9
<td>
                    <p><span><strong class="command">recursion</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which caused the server
                      to perform recursion in order to find the final answer.
                    </p>
                  </td>
d2546 3
a2548 11
<td>
                    <p><span><strong class="command">duplicate</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries which the server attempted to
                      recurse but discover a existing query with the same
                      IP address, port, query id, name, type and class
                      already being processed.
                    </p>
                  </td>
d2551 3
a2553 11
<td>
                    <p><span><strong class="command">dropped</strong></span></p>
                  </td>
<td>
                    <p>
                      The number of queries for which the server
                      discovered a excessive number of existing
                      recursive queries for the same name, type and
                      class and were subsequently dropped.
                    </p>
                  </td>
d2558 10
a2567 10
            Each query received by the server will cause exactly one of
            <span><strong class="command">success</strong></span>,
            <span><strong class="command">referral</strong></span>,
            <span><strong class="command">nxrrset</strong></span>,
            <span><strong class="command">nxdomain</strong></span>, or
            <span><strong class="command">failure</strong></span>
            to be incremented, and may additionally cause the
            <span><strong class="command">recursion</strong></span> counter to be
            incremented.
          </p>
d2569 2
a2570 97
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="acache"></a>Additional Section Caching</h4></div></div></div>
<p>
            The additional section cache, also called <span><strong class="command">acache</strong></span>,
            is an internal cache to improve the response performance of BIND 9.
            When additional section caching is enabled, BIND 9 will
            cache an internal short-cut to the additional section content for
            each answer RR.
            Note that <span><strong class="command">acache</strong></span> is an internal caching
            mechanism of BIND 9, and is not related to the DNS caching
            server function.
          </p>
<p>
            Additional section caching does not change the
            response content (except the RRsets ordering of the additional
            section, see below), but can improve the response performance
            significantly.
            It is particularly effective when BIND 9 acts as an authoritative
            server for a zone that has many delegations with many glue RRs.
          </p>
<p>
            In order to obtain the maximum performance improvement
            from additional section caching, setting
            <span><strong class="command">additional-from-cache</strong></span>
            to <span><strong class="command">no</strong></span> is recommended, since the current
            implementation of <span><strong class="command">acache</strong></span>
            does not short-cut of additional section information from the
            DNS cache data.
          </p>
<p>
            One obvious disadvantage of <span><strong class="command">acache</strong></span> is
            that it requires much more
            memory for the internal cached data.
            Thus, if the response performance does not matter and memory
            consumption is much more critical, the
            <span><strong class="command">acache</strong></span> mechanism can be
            disabled by setting <span><strong class="command">acache-enable</strong></span> to
            <span><strong class="command">no</strong></span>.
            It is also possible to specify the upper limit of memory
            consumption
            for acache by using <span><strong class="command">max-acache-size</strong></span>.
          </p>
<p>
            Additional section caching also has a minor effect on the
            RRset ordering in the additional section.
            Without <span><strong class="command">acache</strong></span>,
            <span><strong class="command">cyclic</strong></span> order is effective for the additional
            section as well as the answer and authority sections.
            However, additional section caching fixes the ordering when it
            first caches an RRset for the additional section, and the same
            ordering will be kept in succeeding responses, regardless of the
            setting of <span><strong class="command">rrset-order</strong></span>.
            The effect of this should be minor, however, since an
            RRset in the additional section
            typically only contains a small number of RRs (and in many cases
            it only contains a single RR), in which case the
            ordering does not matter much.
          </p>
<p>
            The following is a summary of options related to
            <span><strong class="command">acache</strong></span>.
          </p>
<div class="variablelist"><dl>
<dt><span class="term"><span><strong class="command">acache-enable</strong></span></span></dt>
<dd><p>
                  If <span><strong class="command">yes</strong></span>, additional section caching is
                  enabled.  The default value is <span><strong class="command">no</strong></span>.
                </p></dd>
<dt><span class="term"><span><strong class="command">acache-cleaning-interval</strong></span></span></dt>
<dd><p>
                  The server will remove stale cache entries, based on an LRU
                  based
                  algorithm, every <span><strong class="command">acache-cleaning-interval</strong></span> minutes.
                  The default is 60 minutes.
                  If set to 0, no periodic cleaning will occur.
                </p></dd>
<dt><span class="term"><span><strong class="command">max-acache-size</strong></span></span></dt>
<dd><p>
                  The maximum amount of memory in bytes to use for the server's acache.
                  When the amount of data in the acache reaches this limit,
                  the server
                  will clean more aggressively so that the limit is not
                  exceeded.
                  In a server with multiple views, the limit applies
                  separately to the
                  acache of each view.
                  The default is <code class="literal">unlimited</code>,
                  meaning that
                  entries are purged from the acache only at the
                  periodic cleaning time.
                </p></dd>
</dl></div>
</div>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
d2572 1
a2572 1
<pre class="programlisting">server <em class="replaceable"><code>ip_addr[/prefixlen]</code></em> {
a2576 2
    [<span class="optional"> edns-udp-size <em class="replaceable"><code>number</code></em> ; </span>]
    [<span class="optional"> max-udp-size <em class="replaceable"><code>number</code></em> ; </span>]
a2581 4
    [<span class="optional"> notify-source (<em class="replaceable"><code>ip4_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> notify-source-v6 (<em class="replaceable"><code>ip6_addr</code></em> | <code class="constant">*</code>) [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] ; </span>]
    [<span class="optional"> query-source [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
    [<span class="optional"> query-source-v6 [<span class="optional"> address ( <em class="replaceable"><code>ip_addr</code></em> | <em class="replaceable"><code>*</code></em> ) </span>] [<span class="optional"> port ( <em class="replaceable"><code>ip_port</code></em> | <em class="replaceable"><code>*</code></em> ) </span>]; </span>]
d2587 75
a2661 166
<a name="server_statement_definition_and_usage"></a><span><strong class="command">server</strong></span> Statement Definition and
            Usage</h3></div></div></div>
<p>
            The <span><strong class="command">server</strong></span> statement defines
            characteristics
            to be associated with a remote name server.  If a prefix length is
            specified, then a range of servers is covered.  Only the most
            specific
            server clause applies regardless of the order in
            <code class="filename">named.conf</code>.
          </p>
<p>
            The <span><strong class="command">server</strong></span> statement can occur at
            the top level of the
            configuration file or inside a <span><strong class="command">view</strong></span>
            statement.
            If a <span><strong class="command">view</strong></span> statement contains
            one or more <span><strong class="command">server</strong></span> statements, only
            those
            apply to the view and any top-level ones are ignored.
            If a view contains no <span><strong class="command">server</strong></span>
            statements,
            any top-level <span><strong class="command">server</strong></span> statements are
            used as
            defaults.
          </p>
<p>
            If you discover that a remote server is giving out bad data,
            marking it as bogus will prevent further queries to it. The
            default
            value of <span><strong class="command">bogus</strong></span> is <span><strong class="command">no</strong></span>.
          </p>
<p>
            The <span><strong class="command">provide-ixfr</strong></span> clause determines
            whether
            the local server, acting as master, will respond with an
            incremental
            zone transfer when the given remote server, a slave, requests it.
            If set to <span><strong class="command">yes</strong></span>, incremental transfer
            will be provided
            whenever possible. If set to <span><strong class="command">no</strong></span>,
            all transfers
            to the remote server will be non-incremental. If not set, the
            value
            of the <span><strong class="command">provide-ixfr</strong></span> option in the
            view or
            global options block is used as a default.
          </p>
<p>
            The <span><strong class="command">request-ixfr</strong></span> clause determines
            whether
            the local server, acting as a slave, will request incremental zone
            transfers from the given remote server, a master. If not set, the
            value of the <span><strong class="command">request-ixfr</strong></span> option in
            the view or
            global options block is used as a default.
          </p>
<p>
            IXFR requests to servers that do not support IXFR will
            automatically
            fall back to AXFR.  Therefore, there is no need to manually list
            which servers support IXFR and which ones do not; the global
            default
            of <span><strong class="command">yes</strong></span> should always work.
            The purpose of the <span><strong class="command">provide-ixfr</strong></span> and
            <span><strong class="command">request-ixfr</strong></span> clauses is
            to make it possible to disable the use of IXFR even when both
            master
            and slave claim to support it, for example if one of the servers
            is buggy and crashes or corrupts data when IXFR is used.
          </p>
<p>
            The <span><strong class="command">edns</strong></span> clause determines whether
            the local server will attempt to use EDNS when communicating
            with the remote server.  The default is <span><strong class="command">yes</strong></span>.
          </p>
<p>
            The <span><strong class="command">edns-udp-size</strong></span> option sets the EDNS UDP size
            that is advertised by named when querying the remote server.
            Valid values are 512 to 4096 bytes (values outside this range will be
            silently adjusted).  This option is useful when you wish to
            advertises a different value to this server than the value you
            advertise globally, for example, when there is a firewall at the
            remote site that is blocking large replies.
          </p>
<p>
            The <span><strong class="command">max-udp-size</strong></span> option sets the
            maximum EDNS UDP message size named will send.  Valid
            values are 512 to 4096 bytes (values outside this range will
            be silently adjusted).  This option is useful when you
            know that there is a firewall that is blocking large
            replies from named.
          </p>
<p>
            The server supports two zone transfer methods. The first, <span><strong class="command">one-answer</strong></span>,
            uses one DNS message per resource record transferred. <span><strong class="command">many-answers</strong></span> packs
            as many resource records as possible into a message. <span><strong class="command">many-answers</strong></span> is
            more efficient, but is only known to be understood by <acronym class="acronym">BIND</acronym> 9, <acronym class="acronym">BIND</acronym>
            8.x, and patched versions of <acronym class="acronym">BIND</acronym>
            4.9.5. You can specify which method
            to use for a server with the <span><strong class="command">transfer-format</strong></span> option.
            If <span><strong class="command">transfer-format</strong></span> is not
            specified, the <span><strong class="command">transfer-format</strong></span>
            specified
            by the <span><strong class="command">options</strong></span> statement will be
            used.
          </p>
<p><span><strong class="command">transfers</strong></span>
            is used to limit the number of concurrent inbound zone
            transfers from the specified server. If no
            <span><strong class="command">transfers</strong></span> clause is specified, the
            limit is set according to the
            <span><strong class="command">transfers-per-ns</strong></span> option.
          </p>
<p>
            The <span><strong class="command">keys</strong></span> clause identifies a
            <span><strong class="command">key_id</strong></span> defined by the <span><strong class="command">key</strong></span> statement,
            to be used for transaction security (TSIG, <a href="Bv9ARM.ch04.html#tsig" title="TSIG">the section called &#8220;TSIG&#8221;</a>)
            when talking to the remote server.
            When a request is sent to the remote server, a request signature
            will be generated using the key specified here and appended to the
            message. A request originating from the remote server is not
            required
            to be signed by this key.
          </p>
<p>
            Although the grammar of the <span><strong class="command">keys</strong></span>
            clause
            allows for multiple keys, only a single key per server is
            currently
            supported.
          </p>
<p>
            The <span><strong class="command">transfer-source</strong></span> and
            <span><strong class="command">transfer-source-v6</strong></span> clauses specify
            the IPv4 and IPv6 source
            address to be used for zone transfer with the remote server,
            respectively.
            For an IPv4 remote server, only <span><strong class="command">transfer-source</strong></span> can
            be specified.
            Similarly, for an IPv6 remote server, only
            <span><strong class="command">transfer-source-v6</strong></span> can be
            specified.
            For more details, see the description of
            <span><strong class="command">transfer-source</strong></span> and
            <span><strong class="command">transfer-source-v6</strong></span> in
            <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
          </p>
<p>
            The <span><strong class="command">notify-source</strong></span> and
            <span><strong class="command">notify-source-v6</strong></span> clauses specify the
            IPv4 and IPv6 source address to be used for notify
            messages sent to remote servers, respectively.  For an
            IPv4 remote server, only <span><strong class="command">notify-source</strong></span>
            can be specified.  Similarly, for an IPv6 remote server,
            only <span><strong class="command">notify-source-v6</strong></span> can be specified.
          </p>
<p>
            The <span><strong class="command">query-source</strong></span> and
            <span><strong class="command">query-source-v6</strong></span> clauses specify the
            IPv4 and IPv6 source address to be used for queries
            sent to remote servers, respectively.  For an IPv4
            remote server, only <span><strong class="command">query-source</strong></span> can
            be specified.  Similarly, for an IPv6 remote server,
            only <span><strong class="command">query-source-v6</strong></span> can be specified.
          </p>
d2665 1
a2665 1
<a name="id2585361"></a><span><strong class="command">trusted-keys</strong></span> Statement Grammar</h3></div></div></div>
d2674 2
a2675 2
<a name="id2585410"></a><span><strong class="command">trusted-keys</strong></span> Statement Definition
            and Usage</h3></div></div></div>
d2677 24
a2700 24
            The <span><strong class="command">trusted-keys</strong></span> statement defines
            DNSSEC security roots. DNSSEC is described in <a href="Bv9ARM.ch04.html#DNSSEC" title="DNSSEC">the section called &#8220;DNSSEC&#8221;</a>. A security root is defined when the
            public key for a non-authoritative zone is known, but
            cannot be securely obtained through DNS, either because
            it is the DNS root zone or because its parent zone is
            unsigned.  Once a key has been configured as a trusted
            key, it is treated as if it had been validated and
            proven secure. The resolver attempts DNSSEC validation
            on all DNS data in subdomains of a security root.
          </p>
<p>
            All keys (and corresponding zones) listed in
            <span><strong class="command">trusted-keys</strong></span> are deemed to exist regardless
            of what parent zones say.  Similarly for all keys listed in
            <span><strong class="command">trusted-keys</strong></span> only those keys are
            used to validate the DNSKEY RRset.  The parent's DS RRset
            will not be used.
          </p>
<p>
            The <span><strong class="command">trusted-keys</strong></span> statement can contain
            multiple key entries, each consisting of the key's
            domain name, flags, protocol, algorithm, and the Base-64
            representation of the key data.
          </p>
d2705 1
a2705 1
<pre class="programlisting">view <em class="replaceable"><code>view_name</code></em>
d2707 2
a2708 2
      match-clients { <em class="replaceable"><code>address_match_list</code></em> };
      match-destinations { <em class="replaceable"><code>address_match_list</code></em> };
d2717 47
a2763 85
<a name="id2585490"></a><span><strong class="command">view</strong></span> Statement Definition and Usage</h3></div></div></div>
<p>
            The <span><strong class="command">view</strong></span> statement is a powerful
            feature
            of <acronym class="acronym">BIND</acronym> 9 that lets a name server
            answer a DNS query differently
            depending on who is asking. It is particularly useful for
            implementing
            split DNS setups without having to run multiple servers.
          </p>
<p>
            Each <span><strong class="command">view</strong></span> statement defines a view
            of the
            DNS namespace that will be seen by a subset of clients.  A client
            matches
            a view if its source IP address matches the
            <code class="varname">address_match_list</code> of the view's
            <span><strong class="command">match-clients</strong></span> clause and its
            destination IP address matches
            the <code class="varname">address_match_list</code> of the
            view's
            <span><strong class="command">match-destinations</strong></span> clause.  If not
            specified, both
            <span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
            default to matching all addresses.  In addition to checking IP
            addresses
            <span><strong class="command">match-clients</strong></span> and <span><strong class="command">match-destinations</strong></span>
            can also take <span><strong class="command">keys</strong></span> which provide an
            mechanism for the
            client to select the view.  A view can also be specified
            as <span><strong class="command">match-recursive-only</strong></span>, which
            means that only recursive
            requests from matching clients will match that view.
            The order of the <span><strong class="command">view</strong></span> statements is
            significant &#8212;
            a client request will be resolved in the context of the first
            <span><strong class="command">view</strong></span> that it matches.
          </p>
<p>
            Zones defined within a <span><strong class="command">view</strong></span>
            statement will
            be only be accessible to clients that match the <span><strong class="command">view</strong></span>.
            By defining a zone of the same name in multiple views, different
            zone data can be given to different clients, for example,
            "internal"
            and "external" clients in a split DNS setup.
          </p>
<p>
            Many of the options given in the <span><strong class="command">options</strong></span> statement
            can also be used within a <span><strong class="command">view</strong></span>
            statement, and then
            apply only when resolving queries with that view.  When no
            view-specific
            value is given, the value in the <span><strong class="command">options</strong></span> statement
            is used as a default.  Also, zone options can have default values
            specified
            in the <span><strong class="command">view</strong></span> statement; these
            view-specific defaults
            take precedence over those in the <span><strong class="command">options</strong></span> statement.
          </p>
<p>
            Views are class specific.  If no class is given, class IN
            is assumed.  Note that all non-IN views must contain a hint zone,
            since only the IN class has compiled-in default hints.
          </p>
<p>
            If there are no <span><strong class="command">view</strong></span> statements in
            the config
            file, a default view that matches any client is automatically
            created
            in class IN. Any <span><strong class="command">zone</strong></span> statements
            specified on
            the top level of the configuration file are considered to be part
            of
            this default view, and the <span><strong class="command">options</strong></span>
            statement will
            apply to the default view. If any explicit <span><strong class="command">view</strong></span>
            statements are present, all <span><strong class="command">zone</strong></span>
            statements must
            occur inside <span><strong class="command">view</strong></span> statements.
          </p>
<p>
            Here is an example of a typical split DNS setup implemented
            using <span><strong class="command">view</strong></span> statements:
          </p>
d2798 2
a2799 2
            Statement Grammar</h3></div></div></div>
<pre class="programlisting">zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
d2801 4
a2804 4
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> update-policy { <em class="replaceable"><code>update_policy_rule</code></em> [<span class="optional">...</span>] }; </span>]
a2806 3
    [<span class="optional"> check-mx (<code class="constant">warn</code>|<code class="constant">fail</code>|<code class="constant">ignore</code>) ; </span>]
    [<span class="optional"> check-wildcard <em class="replaceable"><code>yes_or_no</code></em>; </span>]
    [<span class="optional"> check-integrity <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
a2808 2
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> journal <em class="replaceable"><code>string</code></em> ; </span>]
d2817 1
a2817 2
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em> ; </span>]
    [<span class="optional"> notify-delay <em class="replaceable"><code>seconds</code></em> ; </span>]
a2828 1
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
d2831 1
a2831 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
d2833 4
a2836 5
    [<span class="optional"> allow-notify { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-transfer { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> allow-update-forwarding { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
    [<span class="optional"> update-check-ksk <em class="replaceable"><code>yes_or_no</code></em>; </span>]
a2840 2
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
    [<span class="optional"> journal <em class="replaceable"><code>string</code></em> ; </span>]
d2846 1
a2846 1
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] }; </span>]
d2852 1
a2852 1
    [<span class="optional"> notify <em class="replaceable"><code>yes_or_no</code></em> | <em class="replaceable"><code>explicit</code></em> | <em class="replaceable"><code>master-only</code></em> ; </span>]
a2867 1
    [<span class="optional"> zero-no-soa-ttl <em class="replaceable"><code>yes_or_no</code></em> ; </span>]
d2870 1
a2870 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
d2872 1
a2872 1
    file <em class="replaceable"><code>string</code></em> ;
d2877 1
a2877 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
d2879 1
a2879 1
    [<span class="optional"> allow-query { <em class="replaceable"><code>address_match_list</code></em> }; </span>]
a2883 1
    [<span class="optional"> masterfile-format (<code class="constant">text</code>|<code class="constant">raw</code>) ; </span>]
d2886 1
a2886 1
    [<span class="optional"> masters [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] { ( <em class="replaceable"><code>masters_list</code></em> | <em class="replaceable"><code>ip_addr</code></em> [<span class="optional">port <em class="replaceable"><code>ip_port</code></em></span>] [<span class="optional">key <em class="replaceable"><code>key</code></em></span>] ) ; [<span class="optional">...</span>] }; </span>]
d2896 1
d2905 1
a2905 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
d2912 1
a2912 1
zone <em class="replaceable"><code>zone_name</code></em> [<span class="optional"><em class="replaceable"><code>class</code></em></span>] {
a2914 1

d2919 1
a2919 1
<a name="id2586798"></a><span><strong class="command">zone</strong></span> Statement Definition and Usage</h3></div></div></div>
d2922 1
a2922 1
<a name="id2586806"></a>Zone Types</h4></div></div></div>
d2930 37
a2966 75
<td>
                      <p>
                        <code class="varname">master</code>
                      </p>
                    </td>
<td>
                      <p>
                        The server has a master copy of the data
                        for the zone and will be able to provide authoritative
                        answers for
                        it.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">slave</code>
                      </p>
                    </td>
<td>
                      <p>
                        A slave zone is a replica of a master
                        zone. The <span><strong class="command">masters</strong></span> list
                        specifies one or more IP addresses
                        of master servers that the slave contacts to update
                        its copy of the zone.
                        Masters list elements can also be names of other
                        masters lists.
                        By default, transfers are made from port 53 on the
                        servers; this can
                        be changed for all servers by specifying a port number
                        before the
                        list of IP addresses, or on a per-server basis after
                        the IP address.
                        Authentication to the master can also be done with
                        per-server TSIG keys.
                        If a file is specified, then the
                        replica will be written to this file whenever the zone
                        is changed,
                        and reloaded from this file on a server restart. Use
                        of a file is
                        recommended, since it often speeds server startup and
                        eliminates
                        a needless waste of bandwidth. Note that for large
                        numbers (in the
                        tens or hundreds of thousands) of zones per server, it
                        is best to
                        use a two-level naming scheme for zone filenames. For
                        example,
                        a slave server for the zone <code class="literal">example.com</code> might place
                        the zone contents into a file called
                        <code class="filename">ex/example.com</code> where <code class="filename">ex/</code> is
                        just the first two letters of the zone name. (Most
                        operating systems
                        behave very slowly if you put 100 000 files into
                        a single directory.)
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">stub</code>
                      </p>
                    </td>
<td>
                      <p>
                        A stub zone is similar to a slave zone,
                        except that it replicates only the NS records of a
                        master zone instead
                        of the entire zone. Stub zones are not a standard part
                        of the DNS;
                        they are a feature specific to the <acronym class="acronym">BIND</acronym> implementation.
                      </p>
d2968 23
a2990 41
                      <p>
                        Stub zones can be used to eliminate the need for glue
                        NS record
                        in a parent zone at the expense of maintaining a stub
                        zone entry and
                        a set of name server addresses in <code class="filename">named.conf</code>.
                        This usage is not recommended for new configurations,
                        and BIND 9
                        supports it only in a limited way.
                        In <acronym class="acronym">BIND</acronym> 4/8, zone
                        transfers of a parent zone
                        included the NS records from stub children of that
                        zone. This meant
                        that, in some cases, users could get away with
                        configuring child stubs
                        only in the master server for the parent zone. <acronym class="acronym">BIND</acronym>
                        9 never mixes together zone data from different zones
                        in this
                        way. Therefore, if a <acronym class="acronym">BIND</acronym> 9 master serving a parent
                        zone has child stub zones configured, all the slave
                        servers for the
                        parent zone also need to have the same child stub
                        zones
                        configured.
                      </p>

                      <p>
                        Stub zones can also be used as a way of forcing the
                        resolution
                        of a given domain to use a particular set of
                        authoritative servers.
                        For example, the caching name servers on a private
                        network using
                        RFC1918 addressing may be configured with stub zones
                        for
                        <code class="literal">10.in-addr.arpa</code>
                        to use a set of internal name servers as the
                        authoritative
                        servers for that domain.
                      </p>
                    </td>
d2993 1
d2995 13
a3007 30
                      <p>
                        <code class="varname">forward</code>
                      </p>
                    </td>
<td>
                      <p>
                        A "forward zone" is a way to configure
                        forwarding on a per-domain basis.  A <span><strong class="command">zone</strong></span> statement
                        of type <span><strong class="command">forward</strong></span> can
                        contain a <span><strong class="command">forward</strong></span>
                        and/or <span><strong class="command">forwarders</strong></span>
                        statement,
                        which will apply to queries within the domain given by
                        the zone
                        name. If no <span><strong class="command">forwarders</strong></span>
                        statement is present or
                        an empty list for <span><strong class="command">forwarders</strong></span> is given, then no
                        forwarding will be done for the domain, canceling the
                        effects of
                        any forwarders in the <span><strong class="command">options</strong></span> statement. Thus
                        if you want to use this type of zone to change the
                        behavior of the
                        global <span><strong class="command">forward</strong></span> option
                        (that is, "forward first"
                        to, then "forward only", or vice versa, but want to
                        use the same
                        servers as set globally) you need to re-specify the
                        global forwarders.
                      </p>
                    </td>
d3010 19
a3028 43
<td>
                      <p>
                        <code class="varname">hint</code>
                      </p>
                    </td>
<td>
                      <p>
                        The initial set of root name servers is
                        specified using a "hint zone". When the server starts
                        up, it uses
                        the root hints to find a root name server and get the
                        most recent
                        list of root name servers. If no hint zone is
                        specified for class
                        IN, the server uses a compiled-in default set of root
                        servers hints.
                        Classes other than IN have no built-in defaults hints.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">delegation-only</code>
                      </p>
                    </td>
<td>
                      <p>
                        This is used to enforce the delegation-only
                        status of infrastructure zones (e.g. COM, NET, ORG).
                        Any answer that
                        is received without an explicit or implicit delegation
                        in the authority
                        section will be treated as NXDOMAIN.  This does not
                        apply to the zone
                        apex.  This should not be applied to leaf zones.
                      </p>
                      <p>
                        <code class="varname">delegation-only</code> has no
                        effect on answers received
                        from forwarders.
                      </p>
                    </td>
d3035 12
a3046 19
<a name="id2587362"></a>Class</h4></div></div></div>
<p>
              The zone's name may optionally be followed by a class. If
              a class is not specified, class <code class="literal">IN</code> (for <code class="varname">Internet</code>),
              is assumed. This is correct for the vast majority of cases.
            </p>
<p>
              The <code class="literal">hesiod</code> class is
              named for an information service from MIT's Project Athena. It
              is
              used to share information about various systems databases, such
              as users, groups, printers and so on. The keyword
              <code class="literal">HS</code> is
              a synonym for hesiod.
            </p>
<p>
              Another MIT development is Chaosnet, a LAN protocol created
              in the mid-1970s. Zone data for it can be specified with the <code class="literal">CHAOS</code> class.
            </p>
d3050 1
a3050 1
<a name="id2587395"></a>Zone Options</h4></div></div></div>
d3053 2
a3054 4
<dd><p>
                    See the description of
                    <span><strong class="command">allow-notify</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
d3056 2
a3057 4
<dd><p>
                    See the description of
                    <span><strong class="command">allow-query</strong></span> in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
d3059 2
a3060 4
<dd><p>
                    See the description of <span><strong class="command">allow-transfer</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
d3062 6
a3067 4
<dd><p>
                    See the description of <span><strong class="command">allow-update</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
d3069 2
a3070 4
<dd><p>
                    Specifies a "Simple Secure Update" policy. See
                    <a href="Bv9ARM.ch06.html#dynamic_update_policies" title="Dynamic Update Policies">the section called &#8220;Dynamic Update Policies&#8221;</a>.
                  </p></dd>
d3072 2
a3073 4
<dd><p>
                    See the description of <span><strong class="command">allow-update-forwarding</strong></span>
                    in <a href="Bv9ARM.ch06.html#access_control" title="Access Control">the section called &#8220;Access Control&#8221;</a>.
                  </p></dd>
d3075 10
a3084 19
<dd><p>
                    Only meaningful if <span><strong class="command">notify</strong></span>
                    is
                    active for this zone. The set of machines that will
                    receive a
                    <code class="literal">DNS NOTIFY</code> message
                    for this zone is made up of all the listed name servers
                    (other than
                    the primary master) for the zone plus any IP addresses
                    specified
                    with <span><strong class="command">also-notify</strong></span>. A port
                    may be specified
                    with each <span><strong class="command">also-notify</strong></span>
                    address to send the notify
                    messages to a port other than the default of 53.
                    <span><strong class="command">also-notify</strong></span> is not
                    meaningful for stub zones.
                    The default is the empty list.
                  </p></dd>
d3087 5
a3091 37
                    This option is used to restrict the character set and
                    syntax of
                    certain domain names in master files and/or DNS responses
                    received from the
                    network.  The default varies according to zone type.  For <span><strong class="command">master</strong></span> zones the default is <span><strong class="command">fail</strong></span>.  For <span><strong class="command">slave</strong></span>
                    zones the default is <span><strong class="command">warn</strong></span>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-mx</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-mx</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-wildcard</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-wildcard</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-integrity</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-integrity</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">check-sibling</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">check-sibling</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">zero-no-soa-ttl</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">zero-no-soa-ttl</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">update-check-ksk</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">update-check-ksk</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
d3094 11
a3104 23
<p>
                    Specify the type of database to be used for storing the
                    zone data.  The string following the <span><strong class="command">database</strong></span> keyword
                    is interpreted as a list of whitespace-delimited words.
                    The first word
                    identifies the database type, and any subsequent words are
                    passed
                    as arguments to the database to be interpreted in a way
                    specific
                    to the database type.
                  </p>
<p>
                    The default is <strong class="userinput"><code>"rbt"</code></strong>, BIND 9's
                    native in-memory
                    red-black-tree database.  This database does not take
                    arguments.
                  </p>
<p>
                    Other values are possible if additional database drivers
                    have been linked into the server.  Some sample drivers are
                    included
                    with the distribution but none are linked in by default.
                  </p>
d3107 2
a3108 4
<dd><p>
                    See the description of
                    <span><strong class="command">dialup</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
d3110 4
a3113 6
<dd><p>
                    The flag only applies to hint and stub zones.  If set
                    to <strong class="userinput"><code>yes</code></strong>, then the zone will also be
                    treated as if it
                    is also a delegation-only type zone.
                  </p></dd>
d3115 4
a3118 7
<dd><p>
                    Only meaningful if the zone has a forwarders
                    list. The <span><strong class="command">only</strong></span> value causes
                    the lookup to fail
                    after trying the forwarders and getting no answer, while <span><strong class="command">first</strong></span> would
                    allow a normal lookup to be tried.
                  </p></dd>
d3120 3
a3122 6
<dd><p>
                    Used to override the list of global forwarders.
                    If it is not specified in a zone of type <span><strong class="command">forward</strong></span>,
                    no forwarding is done for the zone and the global options are
                    not used.
                  </p></dd>
d3124 5
a3128 11
<dd><p>
                    Was used in <acronym class="acronym">BIND</acronym> 8 to
                    specify the name
                    of the transaction log (journal) file for dynamic update
                    and IXFR.
                    <acronym class="acronym">BIND</acronym> 9 ignores the option
                    and constructs the name of the journal
                    file by appending "<code class="filename">.jnl</code>"
                    to the name of the
                    zone file.
                  </p></dd>
d3130 2
a3131 10
<dd><p>
                    Was an undocumented option in <acronym class="acronym">BIND</acronym> 8.
                    Ignored in <acronym class="acronym">BIND</acronym> 9.
                  </p></dd>
<dt><span class="term"><span><strong class="command">journal</strong></span></span></dt>
<dd><p>
                    Allow the default journal's filename to be overridden.
                    The default is the zone's filename with "<code class="filename">.jnl</code>" appended.
                    This is applicable to <span><strong class="command">master</strong></span> and <span><strong class="command">slave</strong></span> zones.
                  </p></dd>
d3133 2
a3134 4
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-time-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3136 2
a3137 4
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-idle-in</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3139 2
a3140 4
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-time-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3142 2
a3143 4
<dd><p>
                    See the description of
                    <span><strong class="command">max-transfer-idle-out</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3145 2
a3146 9
<dd><p>
                    See the description of
                    <span><strong class="command">notify</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">notify-delay</strong></span></span></dt>
<dd><p>
                    See the description of
                    <span><strong class="command">notify-delay</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
d3148 4
a3151 8
<dd><p>
                    In <acronym class="acronym">BIND</acronym> 8, this option was
                    intended for specifying
                    a public zone key for verification of signatures in DNSSEC
                    signed
                    zones when they are loaded from disk. <acronym class="acronym">BIND</acronym> 9 does not verify signatures
                    on load and ignores the option.
                  </p></dd>
d3153 3
a3155 7
<dd><p>
                    If <strong class="userinput"><code>yes</code></strong>, the server will keep
                    statistical
                    information for this zone, which can be dumped to the
                    <span><strong class="command">statistics-file</strong></span> defined in
                    the server options.
                  </p></dd>
d3157 2
a3158 4
<dd><p>
                    See the description of
                    <span><strong class="command">sig-validity-interval</strong></span> in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
d3160 3
a3162 4
<dd><p>
                    See the description of
                    <span><strong class="command">transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3164 3
a3166 4
<dd><p>
                    See the description of
                    <span><strong class="command">transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3168 3
a3170 4
<dd><p>
                    See the description of
                    <span><strong class="command">alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3172 3
a3174 4
<dd><p>
                    See the description of
                    <span><strong class="command">alt-transfer-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3176 3
a3178 4
<dd><p>
                    See the description of
                    <span><strong class="command">use-alt-transfer-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3180 3
a3182 4
<dd><p>
                    See the description of
                    <span><strong class="command">notify-source</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3184 3
a3186 4
<dd><p>
                    See the description of
                    <span><strong class="command">notify-source-v6</strong></span> in <a href="Bv9ARM.ch06.html#zone_transfers" title="Zone Transfers">the section called &#8220;Zone Transfers&#8221;</a>.
                  </p></dd>
d3191 2
a3192 2
                    See the description in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
d3194 2
a3195 4
<dd><p>
                    See the description of
                    <span><strong class="command">ixfr-from-differences</strong></span> in <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
d3197 2
a3198 6
<dd><p>
                    See the description of
                    <span><strong class="command">key-directory</strong></span> in <a href="Bv9ARM.ch06.html#options" title="options Statement Definition and
          Usage">the section called &#8220;<span><strong class="command">options</strong></span> Statement Definition and
          Usage&#8221;</a>.
                  </p></dd>
d3200 2
a3201 9
<dd><p>
                    See the description of <span><strong class="command">multi-master</strong></span> in
                    <a href="Bv9ARM.ch06.html#boolean_options" title="Boolean Options">the section called &#8220;Boolean Options&#8221;</a>.
                  </p></dd>
<dt><span class="term"><span><strong class="command">masterfile-format</strong></span></span></dt>
<dd><p>
                    See the description of <span><strong class="command">masterfile-format</strong></span>
                    in <a href="Bv9ARM.ch06.html#tuning" title="Tuning">the section called &#8220;Tuning&#8221;</a>.
                  </p></dd>
d3207 20
a3226 41
<p>
              <acronym class="acronym">BIND</acronym> 9 supports two alternative
              methods of granting clients
              the right to perform dynamic updates to a zone,
              configured by the <span><strong class="command">allow-update</strong></span>
              and
              <span><strong class="command">update-policy</strong></span> option,
              respectively.
            </p>
<p>
              The <span><strong class="command">allow-update</strong></span> clause works the
              same
              way as in previous versions of <acronym class="acronym">BIND</acronym>. It grants given clients the
              permission to update any record of any name in the zone.
            </p>
<p>
              The <span><strong class="command">update-policy</strong></span> clause is new
              in <acronym class="acronym">BIND</acronym>
              9 and allows more fine-grained control over what updates are
              allowed.
              A set of rules is specified, where each rule either grants or
              denies
              permissions for one or more names to be updated by one or more
              identities.
              If the dynamic update request message is signed (that is, it
              includes
              either a TSIG or SIG(0) record), the identity of the signer can
              be determined.
            </p>
<p>
              Rules are specified in the <span><strong class="command">update-policy</strong></span> zone
              option, and are only meaningful for master zones.  When the <span><strong class="command">update-policy</strong></span> statement
              is present, it is a configuration error for the <span><strong class="command">allow-update</strong></span> statement
              to be present.  The <span><strong class="command">update-policy</strong></span>
              statement only
              examines the signer of a message; the source address is not
              relevant.
            </p>
<p>
              This is how a rule definition looks:
            </p>
d3230 18
a3247 32
<p>
              Each rule grants or denies privileges.  Once a message has
              successfully matched a rule, the operation is immediately
              granted
              or denied and no further rules are examined.  A rule is matched
              when the signer matches the identity field, the name matches the
              name field in accordance with the nametype field, and the type
              matches
              the types specified in the type field.
            </p>
<p>
              The identity field specifies a name or a wildcard name.
              Normally, this
              is the name of the TSIG or SIG(0) key used to sign the update
              request.  When a
              TKEY exchange has been used to create a shared secret, the
              identity of the
              shared secret is the same as the identity of the key used to
              authenticate the
              TKEY exchange.  When the <em class="replaceable"><code>identity</code></em> field specifies a
              wildcard name, it is subject to DNS wildcard expansion, so the
              rule will apply
              to multiple identities.  The <em class="replaceable"><code>identity</code></em> field must
              contain a fully-qualified domain name.
            </p>
<p>
              The <em class="replaceable"><code>nametype</code></em> field has 6
              values:
              <code class="varname">name</code>, <code class="varname">subdomain</code>,
              <code class="varname">wildcard</code>, <code class="varname">self</code>,
               <code class="varname">selfsub</code>, and <code class="varname">selfwild</code>.
            </p>
d3255 27
a3281 95
<td>
                      <p>
                        <code class="varname">name</code>
                      </p>
                    </td>
<td>
                      <p>
                        Exact-match semantics.  This rule matches
                        when the name being updated is identical
                        to the contents of the
                        <em class="replaceable"><code>name</code></em> field.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">subdomain</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule matches when the name being updated
                        is a subdomain of, or identical to, the
                        contents of the <em class="replaceable"><code>name</code></em>
                        field.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">wildcard</code>
                      </p>
                    </td>
<td>
                      <p>
                        The <em class="replaceable"><code>name</code></em> field
                        is subject to DNS wildcard expansion, and
                        this rule matches when the name being updated
                        name is a valid expansion of the wildcard.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">self</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule matches when the name being updated
                        matches the contents of the
                        <em class="replaceable"><code>identity</code></em> field.
                        The <em class="replaceable"><code>name</code></em> field
                        is ignored, but should be the same as the
                        <em class="replaceable"><code>identity</code></em> field.
                        The <code class="varname">self</code> nametype is
                        most useful when allowing using one key per
                        name to update, where the key has the same
                        name as the name to be updated.  The
                        <em class="replaceable"><code>identity</code></em> would
                        be specified as <code class="constant">*</code> (an asterisk) in
                        this case.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">selfsub</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule is similar to <code class="varname">self</code>
                        except that subdomains of <code class="varname">self</code>
                        can also be updated.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        <code class="varname">selfwild</code>
                      </p>
                    </td>
<td>
                      <p>
                        This rule is similar to <code class="varname">self</code>
                        except that only subdomains of
                        <code class="varname">self</code> can be updated.
                      </p>
                    </td>
d3285 8
a3292 15
<p>
              In all cases, the <em class="replaceable"><code>name</code></em>
              field must
              specify a fully-qualified domain name.
            </p>
<p>
              If no types are explicitly specified, this rule matches all
              types except
              RRSIG, NS, SOA, and NSEC. Types may be specified by name, including
              "ANY" (ANY matches all types except NSEC, which can never be
              updated).
              Note that when an attempt is made to delete all records
              associated with a
              name, the rules are checked for each existing record type.
            </p>
d3298 1
a3298 1
<a name="id2589080"></a>Zone File</h2></div></div></div>
d3302 16
a3317 23
<p>
            This section, largely borrowed from RFC 1034, describes the
            concept of a Resource Record (RR) and explains when each is used.
            Since the publication of RFC 1034, several new RRs have been
            identified
            and implemented in the DNS. These are also included.
          </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2589098"></a>Resource Records</h4></div></div></div>
<p>
              A domain name identifies a node.  Each node has a set of
              resource information, which may be empty.  The set of resource
              information associated with a particular name is composed of
              separate RRs. The order of RRs in a set is not significant and
              need not be preserved by name servers, resolvers, or other
              parts of the DNS. However, sorting of multiple RRs is
              permitted for optimization purposes, for example, to specify
              that a particular nearby server be tried first. See <a href="Bv9ARM.ch06.html#the_sortlist_statement" title="The sortlist Statement">the section called &#8220;The <span><strong class="command">sortlist</strong></span> Statement&#8221;</a> and <a href="Bv9ARM.ch06.html#rrset_ordering" title="RRset Ordering">the section called &#8220;RRset Ordering&#8221;</a>.
            </p>
<p>
              The components of a Resource Record are:
            </p>
d3325 2
a3326 10
<td>
                      <p>
                        owner name
                      </p>
                    </td>
<td>
                      <p>
                        The domain name where the RR is found.
                      </p>
                    </td>
d3329 3
a3331 11
<td>
                      <p>
                        type
                      </p>
                    </td>
<td>
                      <p>
                        An encoded 16-bit value that specifies
                        the type of the resource record.
                      </p>
                    </td>
d3334 5
a3338 15
<td>
                      <p>
                        TTL
                      </p>
                    </td>
<td>
                      <p>
                        The time-to-live of the RR. This field
                        is a 32-bit integer in units of seconds, and is
                        primarily used by
                        resolvers when they cache RRs. The TTL describes how
                        long a RR can
                        be cached before it should be discarded.
                      </p>
                    </td>
d3341 3
a3343 11
<td>
                      <p>
                        class
                      </p>
                    </td>
<td>
                      <p>
                        An encoded 16-bit value that identifies
                        a protocol family or instance of a protocol.
                      </p>
                    </td>
d3346 3
a3348 11
<td>
                      <p>
                        RDATA
                      </p>
                    </td>
<td>
                      <p>
                        The resource data.  The format of the
                        data is type (and sometimes class) specific.
                      </p>
                    </td>
d3352 1
a3352 3
<p>
              The following are <span class="emphasis"><em>types</em></span> of valid RRs:
            </p>
d3360 3
a3362 11
<td>
                      <p>
                        A
                      </p>
                    </td>
<td>
                      <p>
                        A host address.  In the IN class, this is a
                        32-bit IP address.  Described in RFC 1035.
                      </p>
                    </td>
d3365 2
a3366 10
<td>
                      <p>
                        AAAA
                      </p>
                    </td>
<td>
                      <p>
                        IPv6 address.  Described in RFC 1886.
                      </p>
                    </td>
d3369 4
a3372 14
<td>
                      <p>
                        A6
                      </p>
                    </td>
<td>
                      <p>
                        IPv6 address.  This can be a partial
                        address (a suffix) and an indirection to the name
                        where the rest of the
                        address (the prefix) can be found.  Experimental.
                        Described in RFC 2874.
                      </p>
                    </td>
d3375 3
a3377 11
<td>
                      <p>
                        AFSDB
                      </p>
                    </td>
<td>
                      <p>
                        Location of AFS database servers.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
d3380 3
a3382 11
<td>
                      <p>
                        APL
                      </p>
                    </td>
<td>
                      <p>
                        Address prefix list.  Experimental.
                        Described in RFC 3123.
                      </p>
                    </td>
d3385 3
a3387 11
<td>
                      <p>
                        CERT
                      </p>
                    </td>
<td>
                      <p>
                        Holds a digital certificate.
                        Described in RFC 2538.
                      </p>
                    </td>
d3390 3
a3392 11
<td>
                      <p>
                        CNAME
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the canonical name of an alias.
                        Described in RFC 1035.
                      </p>
                    </td>
d3395 6
a3400 16
<td>
                      <p>
                        DNAME
                      </p>
                    </td>
<td>
                      <p>
                        Replaces the domain name specified with
                        another name to be looked up, effectively aliasing an
                        entire
                        subtree of the domain name space rather than a single
                        record
                        as in the case of the CNAME RR.
                        Described in RFC 2672.
                      </p>
                    </td>
d3403 2
a3404 11
<td>
                      <p>
                        DNSKEY
                      </p>
                    </td>
<td>
                      <p>
                        Stores a public key associated with a signed
                        DNS zone.  Described in RFC 4034.
                      </p>
                    </td>
d3407 3
a3409 11
<td>
                      <p>
                        DS
                      </p>
                    </td>
<td>
                      <p>
                        Stores the hash of a public key associated with a
                        signed DNS zone.  Described in RFC 4034.
                      </p>
                    </td>
d3412 3
a3414 10
<td>
                      <p>
                        GPOS
                      </p>
                    </td>
<td>
                      <p>
                        Specifies the global position.  Superseded by LOC.
                      </p>
                    </td>
d3417 3
a3419 11
<td>
                      <p>
                        HINFO
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the CPU and OS used by a host.
                        Described in RFC 1035.
                      </p>
                    </td>
d3422 3
a3424 11
<td>
                      <p>
                        ISDN
                      </p>
                    </td>
<td>
                      <p>
                        Representation of ISDN addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
d3427 3
a3429 13
<td>
                      <p>
                        KEY
                      </p>
                    </td>
<td>
                      <p>
                        Stores a public key associated with a
                        DNS name.  Used in original DNSSEC; replaced
                        by DNSKEY in DNSSECbis, but still used with
                        SIG(0).  Described in RFCs 2535 and 2931.
                      </p>
                    </td>
d3432 5
a3436 11
<td>
                      <p>
                        KX
                      </p>
                    </td>
<td>
                      <p>
                        Identifies a key exchanger for this
                        DNS name.  Described in RFC 2230.
                      </p>
                    </td>
d3439 2
a3440 11
<td>
                      <p>
                        LOC
                      </p>
                    </td>
<td>
                      <p>
                        For storing GPS info.  Described in RFC 1876.
                        Experimental.
                      </p>
                    </td>
d3443 3
a3445 13
<td>
                      <p>
                        MX
                      </p>
                    </td>
<td>
                      <p>
                        Identifies a mail exchange for the domain with
                        a 16-bit preference value (lower is better)
                        followed by the host name of the mail exchange.
                        Described in RFC 974, RFC 1035.
                      </p>
                    </td>
d3448 3
a3450 10
<td>
                      <p>
                        NAPTR
                      </p>
                    </td>
<td>
                      <p>
                        Name authority pointer.  Described in RFC 2915.
                      </p>
                    </td>
d3453 5
a3457 11
<td>
                      <p>
                        NSAP
                      </p>
                    </td>
<td>
                      <p>
                        A network service access point.
                        Described in RFC 1706.
                      </p>
                    </td>
d3460 3
a3462 11
<td>
                      <p>
                        NS
                      </p>
                    </td>
<td>
                      <p>
                        The authoritative name server for the
                        domain.  Described in RFC 1035.
                      </p>
                    </td>
d3465 3
a3467 15
<td>
                      <p>
                        NSEC
                      </p>
                    </td>
<td>
                      <p>
                        Used in DNSSECbis to securely indicate that
                        RRs with an owner name in a certain name interval do
                        not exist in
                        a zone and indicate what RR types are present for an
                        existing name.
                        Described in RFC 4034.
                      </p>
                    </td>
d3470 3
a3472 17
<td>
                      <p>
                        NXT
                      </p>
                    </td>
<td>
                      <p>
                        Used in DNSSEC to securely indicate that
                        RRs with an owner name in a certain name interval do
                        not exist in
                        a zone and indicate what RR types are present for an
                        existing name.
                        Used in original DNSSEC; replaced by NSEC in
                        DNSSECbis.
                        Described in RFC 2535.
                      </p>
                    </td>
d3475 4
a3478 11
<td>
                      <p>
                        PTR
                      </p>
                    </td>
<td>
                      <p>
                        A pointer to another part of the domain
                        name space.  Described in RFC 1035.
                      </p>
                    </td>
d3481 3
a3483 52
<td>
                      <p>
                        PX
                      </p>
                    </td>
<td>
                      <p>
                        Provides mappings between RFC 822 and X.400
                        addresses.  Described in RFC 2163.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RP
                      </p>
                    </td>
<td>
                      <p>
                        Information on persons responsible
                        for the domain.  Experimental.  Described in RFC 1183.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RRSIG
                      </p>
                    </td>
<td>
                      <p>
                        Contains DNSSECbis signature data.  Described
                        in RFC 4034.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        RT
                      </p>
                    </td>
<td>
                      <p>
                        Route-through binding for hosts that
                        do not have their own direct wide area network
                        addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
d3486 3
a3488 13
<td>
                      <p>
                        SIG
                      </p>
                    </td>
<td>
                      <p>
                        Contains DNSSEC signature data.  Used in
                        original DNSSEC; replaced by RRSIG in
                        DNSSECbis, but still used for SIG(0).
                        Described in RFCs 2535 and 2931.
                      </p>
                    </td>
d3491 3
a3493 11
<td>
                      <p>
                        SOA
                      </p>
                    </td>
<td>
                      <p>
                        Identifies the start of a zone of authority.
                        Described in RFC 1035.
                      </p>
                    </td>
d3496 2
a3497 11
<td>
                      <p>
                        SRV
                      </p>
                    </td>
<td>
                      <p>
                        Information about well known network
                        services (replaces WKS).  Described in RFC 2782.
                      </p>
                    </td>
d3500 4
a3503 10
<td>
                      <p>
                        TXT
                      </p>
                    </td>
<td>
                      <p>
                        Text records.  Described in RFC 1035.
                      </p>
                    </td>
d3506 3
a3508 25
<td>
                      <p>
                        WKS
                      </p>
                    </td>
<td>
                      <p>
                        Information about which well known
                        network services, such as SMTP, that a domain
                        supports. Historical.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        X25
                      </p>
                    </td>
<td>
                      <p>
                        Representation of X.25 network addresses.
                        Experimental.  Described in RFC 1183.
                      </p>
                    </td>
d3512 2
a3513 4
<p>
              The following <span class="emphasis"><em>classes</em></span> of resource records
              are currently valid in the DNS:
            </p>
d3521 2
a3522 27
<td>
                      <p>
                        IN
                      </p>
                    </td>
<td>
                      <p>
                        The Internet.
                      </p>
                    </td>
</tr>
<tr>
<td>
                      <p>
                        CH
                      </p>
                    </td>
<td>
                      <p>
                        Chaosnet, a LAN protocol created at MIT in the
                        mid-1970s.
                        Rarely used for its historical purpose, but reused for
                        BIND's
                        built-in server information zones, e.g.,
                        <code class="literal">version.bind</code>.
                      </p>
                    </td>
d3525 16
a3540 15
<td>
                      <p>
                        HS
                      </p>
                    </td>
<td>
                      <p>
                        Hesiod, an information service
                        developed by MIT's Project Athena. It is used to share
                        information
                        about various systems databases, such as users,
                        groups, printers
                        and so on.
                      </p>
                    </td>
d3544 20
a3563 37
<p>
              The owner name is often implicit, rather than forming an
              integral
              part of the RR.  For example, many name servers internally form
              tree
              or hash structures for the name space, and chain RRs off nodes.
              The remaining RR parts are the fixed header (type, class, TTL)
              which is consistent for all RRs, and a variable part (RDATA)
              that
              fits the needs of the resource being described.
            </p>
<p>
              The meaning of the TTL field is a time limit on how long an
              RR can be kept in a cache.  This limit does not apply to
              authoritative
              data in zones; it is also timed out, but by the refreshing
              policies
              for the zone.  The TTL is assigned by the administrator for the
              zone where the data originates.  While short TTLs can be used to
              minimize caching, and a zero TTL prohibits caching, the
              realities
              of Internet performance suggest that these times should be on
              the
              order of days for the typical host.  If a change can be
              anticipated,
              the TTL can be reduced prior to the change to minimize
              inconsistency
              during the change, and then increased back to its former value
              following
              the change.
            </p>
<p>
              The data in the RDATA section of RRs is carried as a combination
              of binary strings and domain names.  The domain names are
              frequently
              used as "pointers" to other data in the DNS.
            </p>
d3567 20
a3586 38
<a name="id2590513"></a>Textual expression of RRs</h4></div></div></div>
<p>
              RRs are represented in binary form in the packets of the DNS
              protocol, and are usually represented in highly encoded form
              when
              stored in a name server or resolver.  In the examples provided
              in
              RFC 1034, a style similar to that used in master files was
              employed
              in order to show the contents of RRs.  In this format, most RRs
              are shown on a single line, although continuation lines are
              possible
              using parentheses.
            </p>
<p>
              The start of the line gives the owner of the RR.  If a line
              begins with a blank, then the owner is assumed to be the same as
              that of the previous RR.  Blank lines are often included for
              readability.
            </p>
<p>
              Following the owner, we list the TTL, type, and class of the
              RR.  Class and type use the mnemonics defined above, and TTL is
              an integer before the type field.  In order to avoid ambiguity
              in
              parsing, type and class mnemonics are disjoint, TTLs are
              integers,
              and the type mnemonic is always last. The IN class and TTL
              values
              are often omitted from examples in the interests of clarity.
            </p>
<p>
              The resource data or RDATA section of the RR are given using
              knowledge of the typical representation for the data.
            </p>
<p>
              For example, we might show the RRs carried in a message as:
            </p>
d3595 3
a3597 15
<td>
                      <p>
                        <code class="literal">ISI.EDU.</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">MX</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10 VENERA.ISI.EDU.</code>
                      </p>
                    </td>
d3600 3
a3602 13
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">MX</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10 VAXA.ISI.EDU</code>
                      </p>
                    </td>
d3605 3
a3607 15
<td>
                      <p>
                        <code class="literal">VENERA.ISI.EDU</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">128.9.0.32</code>
                      </p>
                    </td>
d3610 3
a3612 13
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.1.0.52</code>
                      </p>
                    </td>
d3615 3
a3617 15
<td>
                      <p>
                        <code class="literal">VAXA.ISI.EDU</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.2.0.27</code>
                      </p>
                    </td>
d3620 3
a3622 13
<td>
                      <p></p>
                    </td>
<td>
                      <p>
                        <code class="literal">A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">128.9.0.33</code>
                      </p>
                    </td>
d3626 6
a3631 13
<p>
              The MX RRs have an RDATA section which consists of a 16-bit
              number followed by a domain name.  The address RRs use a
              standard
              IP address format to contain a 32-bit internet address.
            </p>
<p>
              The above example shows six RRs, with two RRs at each of three
              domain names.
            </p>
<p>
              Similarly we might see:
            </p>
d3640 3
a3642 15
<td>
                      <p>
                        <code class="literal">XX.LCS.MIT.EDU.</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">IN A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">10.0.0.44</code>
                      </p>
                    </td>
d3645 3
a3647 11
<td> </td>
<td>
                      <p>
                        <code class="literal">CH A</code>
                      </p>
                    </td>
<td>
                      <p>
                        <code class="literal">MIT.EDU. 2420</code>
                      </p>
                    </td>
d3651 2
a3652 4
<p>
              This example shows two addresses for
              <code class="literal">XX.LCS.MIT.EDU</code>, each of a different class.
            </p>
d3657 22
a3678 38
<a name="id2591101"></a>Discussion of MX Records</h3></div></div></div>
<p>
            As described above, domain servers store information as a
            series of resource records, each of which contains a particular
            piece of information about a given domain name (which is usually,
            but not always, a host). The simplest way to think of a RR is as
            a typed pair of data, a domain name matched with a relevant datum,
            and stored with some additional type information to help systems
            determine when the RR is relevant.
          </p>
<p>
            MX records are used to control delivery of email. The data
            specified in the record is a priority and a domain name. The
            priority
            controls the order in which email delivery is attempted, with the
            lowest number first. If two priorities are the same, a server is
            chosen randomly. If no servers at a given priority are responding,
            the mail transport agent will fall back to the next largest
            priority.
            Priority numbers do not have any absolute meaning &#8212; they are
            relevant
            only respective to other MX records for that domain name. The
            domain
            name given is the machine to which the mail will be delivered.
            It <span class="emphasis"><em>must</em></span> have an associated address record
            (A or AAAA) &#8212; CNAME is not sufficient.
          </p>
<p>
            For a given domain, if there is both a CNAME record and an
            MX record, the MX record is in error, and will be ignored.
            Instead,
            the mail will be delivered to the server specified in the MX
            record
            pointed to by the CNAME.
          </p>
<p>
            For example:
          </p>
d3689 33
a3721 125
<td>
                    <p>
                      <code class="literal">example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail.example.com.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p></p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail2.example.com.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p></p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">MX</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">20</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">mail.backup.org.</code>
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      <code class="literal">mail.example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">A</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10.0.0.1</code>
                    </p>
                  </td>
<td>
                    <p></p>
                  </td>
</tr>
<tr>
<td>
                    <p>
                      <code class="literal">mail2.example.com.</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">A</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">10.0.0.2</code>
                    </p>
                  </td>
<td>
                    <p></p>
                  </td>
d3725 5
a3729 6
<p>
            Mail delivery will be attempted to <code class="literal">mail.example.com</code> and
            <code class="literal">mail2.example.com</code> (in
            any order), and if neither of those succeed, delivery to <code class="literal">mail.backup.org</code> will
            be attempted.
          </p>
d3734 5
a3738 8
<p>
            The time-to-live of the RR field is a 32-bit integer represented
            in units of seconds, and is primarily used by resolvers when they
            cache RRs. The TTL describes how long a RR can be cached before it
            should be discarded. The following three types of TTL are
            currently
            used in a zone file.
          </p>
d3746 1
d3748 6
a3753 16
                    <p>
                      SOA
                    </p>
                  </td>
<td>
                    <p>
                      The last field in the SOA is the negative
                      caching TTL. This controls how long other servers will
                      cache no-such-domain
                      (NXDOMAIN) responses from you.
                    </p>
                    <p>
                      The maximum time for
                      negative caching is 3 hours (3h).
                    </p>
                  </td>
d3756 4
a3759 13
<td>
                    <p>
                      $TTL
                    </p>
                  </td>
<td>
                    <p>
                      The $TTL directive at the top of the
                      zone file (before the SOA) gives a default TTL for every
                      RR without
                      a specific TTL set.
                    </p>
                  </td>
d3762 4
a3765 13
<td>
                    <p>
                      RR TTLs
                    </p>
                  </td>
<td>
                    <p>
                      Each RR can have a TTL as the second
                      field in the RR, which will control how long other
                      servers can cache
                      the it.
                    </p>
                  </td>
d3769 2
a3770 4
<p>
            All of these TTLs default to units of seconds, though units
            can be explicitly specified, for example, <code class="literal">1h30m</code>.
          </p>
d3774 12
a3785 16
<a name="id2591653"></a>Inverse Mapping in IPv4</h3></div></div></div>
<p>
            Reverse name resolution (that is, translation from IP address
            to name) is achieved by means of the <span class="emphasis"><em>in-addr.arpa</em></span> domain
            and PTR records. Entries in the in-addr.arpa domain are made in
            least-to-most significant order, read left to right. This is the
            opposite order to the way IP addresses are usually written. Thus,
            a machine with an IP address of 10.1.2.3 would have a
            corresponding
            in-addr.arpa name of
            3.2.1.10.in-addr.arpa. This name should have a PTR resource record
            whose data field is the name of the machine or, optionally,
            multiple
            PTR records if the machine has more than one name. For example,
            in the [<span class="optional">example.com</span>] domain:
          </p>
d3793 2
a3794 10
<td>
                    <p>
                      <code class="literal">$ORIGIN</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">2.1.10.in-addr.arpa</code>
                    </p>
                  </td>
d3797 2
a3798 10
<td>
                    <p>
                      <code class="literal">3</code>
                    </p>
                  </td>
<td>
                    <p>
                      <code class="literal">IN PTR foo.example.com.</code>
                    </p>
                  </td>
d3804 4
a3807 7
<p>
              The <span><strong class="command">$ORIGIN</strong></span> lines in the examples
              are for providing context to the examples only &#8212; they do not
              necessarily
              appear in the actual usage. They are only used here to indicate
              that the example is relative to the listed origin.
            </p>
d3812 21
a3832 40
<a name="id2591848"></a>Other Zone File Directives</h3></div></div></div>
<p>
            The Master File Format was initially defined in RFC 1035 and
            has subsequently been extended. While the Master File Format
            itself
            is class independent all records in a Master File must be of the
            same
            class.
          </p>
<p>
            Master File Directives include <span><strong class="command">$ORIGIN</strong></span>, <span><strong class="command">$INCLUDE</strong></span>,
            and <span><strong class="command">$TTL.</strong></span>
          </p>
<div class="sect3" lang="en">
<div class="titlepage"><div><div><h4 class="title">
<a name="id2591870"></a>The <span><strong class="command">$ORIGIN</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$ORIGIN</strong></span>
              <em class="replaceable"><code>domain-name</code></em>
              [<span class="optional"><em class="replaceable"><code>comment</code></em></span>]
            </p>
<p><span><strong class="command">$ORIGIN</strong></span>
              sets the domain name that will be appended to any
              unqualified records. When a zone is first read in there
              is an implicit <span><strong class="command">$ORIGIN</strong></span>
              &lt;<code class="varname">zone-name</code>&gt;<span><strong class="command">.</strong></span>
              The current <span><strong class="command">$ORIGIN</strong></span> is appended to
              the domain specified in the <span><strong class="command">$ORIGIN</strong></span>
              argument if it is not absolute.
            </p>
<pre class="programlisting">
$ORIGIN example.com.
WWW     CNAME   MAIN-SERVER
</pre>
<p>
              is equivalent to
            </p>
<pre class="programlisting">
WWW.EXAMPLE.COM. CNAME MAIN-SERVER.EXAMPLE.COM.
</pre>
d3836 12
a3847 20
<a name="id2592000"></a>The <span><strong class="command">$INCLUDE</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$INCLUDE</strong></span>
              <em class="replaceable"><code>filename</code></em>
              [<span class="optional">
<em class="replaceable"><code>origin</code></em> </span>]
              [<span class="optional"> <em class="replaceable"><code>comment</code></em> </span>]
            </p>
<p>
              Read and process the file <code class="filename">filename</code> as
              if it were included into the file at this point.  If <span><strong class="command">origin</strong></span> is
              specified the file is processed with <span><strong class="command">$ORIGIN</strong></span> set
              to that value, otherwise the current <span><strong class="command">$ORIGIN</strong></span> is
              used.
            </p>
<p>
              The origin and the current domain name
              revert to the values they had prior to the <span><strong class="command">$INCLUDE</strong></span> once
              the file has been read.
            </p>
d3851 5
a3855 9
                RFC 1035 specifies that the current origin should be restored
                after
                an <span><strong class="command">$INCLUDE</strong></span>, but it is silent
                on whether the current
                domain name should also be restored.  BIND 9 restores both of
                them.
                This could be construed as a deviation from RFC 1035, a
                feature, or both.
              </p>
d3860 7
a3866 15
<a name="id2592069"></a>The <span><strong class="command">$TTL</strong></span> Directive</h4></div></div></div>
<p>
              Syntax: <span><strong class="command">$TTL</strong></span>
              <em class="replaceable"><code>default-ttl</code></em>
              [<span class="optional">
<em class="replaceable"><code>comment</code></em> </span>]
            </p>
<p>
              Set the default Time To Live (TTL) for subsequent records
              with undefined TTLs. Valid TTLs are of the range 0-2147483647
              seconds.
            </p>
<p><span><strong class="command">$TTL</strong></span>
               is defined in RFC 2308.
            </p>
d3871 7
a3877 19
<a name="id2592173"></a><acronym class="acronym">BIND</acronym> Master File Extension: the  <span><strong class="command">$GENERATE</strong></span> Directive</h3></div></div></div>
<p>
            Syntax: <span><strong class="command">$GENERATE</strong></span>
            <em class="replaceable"><code>range</code></em>
            <em class="replaceable"><code>lhs</code></em>
            [<span class="optional"><em class="replaceable"><code>ttl</code></em></span>]
            [<span class="optional"><em class="replaceable"><code>class</code></em></span>]
            <em class="replaceable"><code>type</code></em>
            <em class="replaceable"><code>rhs</code></em>
            [<span class="optional"><em class="replaceable"><code>comment</code></em></span>]
          </p>
<p><span><strong class="command">$GENERATE</strong></span>
            is used to create a series of resource records that only
            differ from each other by an
            iterator. <span><strong class="command">$GENERATE</strong></span> can be used to
            easily generate the sets of records required to support
            sub /24 reverse delegations described in RFC 2317:
            Classless IN-ADDR.ARPA delegation.
          </p>
d3881 1
a3881 3
<p>
            is equivalent to
          </p>
d3896 30
a3925 11
<td>
                    <p><span><strong class="command">range</strong></span></p>
                  </td>
<td>
                    <p>
                      This can be one of two forms: start-stop
                      or start-stop/step. If the first form is used, then step
                      is set to
                      1. All of start, stop and step must be positive.
                    </p>
                  </td>
d3928 1
d3930 6
a3935 42
                    <p><span><strong class="command">lhs</strong></span></p>
                  </td>
<td>
                    <p>This
                      describes the owner name of the resource records
                      to be created.  Any single <span><strong class="command">$</strong></span>
                      (dollar sign)
                      symbols within the <span><strong class="command">lhs</strong></span> side
                      are replaced by the iterator value.

                      To get a $ in the output, you need to escape the
                      <span><strong class="command">$</strong></span> using a backslash
                      <span><strong class="command">\</strong></span>,
                      e.g. <span><strong class="command">\$</strong></span>. The
                      <span><strong class="command">$</strong></span> may optionally be followed
                      by modifiers which change the offset from the
                      iterator, field width and base.

                      Modifiers are introduced by a
                      <span><strong class="command">{</strong></span> (left brace) immediately following the
                      <span><strong class="command">$</strong></span> as
                      <span><strong class="command">${offset[,width[,base]]}</strong></span>.
                      For example, <span><strong class="command">${-20,3,d}</strong></span>
                      subtracts 20 from the current value, prints the
                      result as a decimal in a zero-padded field of
                      width 3.

                      Available output forms are decimal
                      (<span><strong class="command">d</strong></span>), octal
                      (<span><strong class="command">o</strong></span>) and hexadecimal
                      (<span><strong class="command">x</strong></span> or <span><strong class="command">X</strong></span>
                      for uppercase).  The default modifier is
                      <span><strong class="command">${0,0,d}</strong></span>.  If the
                      <span><strong class="command">lhs</strong></span> is not absolute, the
                      current <span><strong class="command">$ORIGIN</strong></span> is appended
                      to the name.
                    </p>
                    <p>
                      For compatibility with earlier versions, <span><strong class="command">$$</strong></span> is still
                      recognized as indicating a literal $ in the output.
                    </p>
                  </td>
d3938 1
d3940 6
a3945 29
                    <p><span><strong class="command">ttl</strong></span></p>
                  </td>
<td>
                    <p>
                      Specifies the time-to-live of the generated records. If
                      not specified this will be inherited using the
                      normal ttl inheritance rules.
                    </p>
                    <p><span><strong class="command">class</strong></span>
                      and <span><strong class="command">ttl</strong></span> can be
                      entered in either order.
                    </p>
                  </td>
</tr>
<tr>
<td>
                    <p><span><strong class="command">class</strong></span></p>
                  </td>
<td>
                    <p>
                      Specifies the class of the generated records.
                      This must match the zone class if it is
                      specified.
                    </p>
                    <p><span><strong class="command">class</strong></span>
                      and <span><strong class="command">ttl</strong></span> can be
                      entered in either order.
                    </p>
                  </td>
d3948 3
a3950 9
<td>
                    <p><span><strong class="command">type</strong></span></p>
                  </td>
<td>
                    <p>
                      At present the only supported types are
                      PTR, CNAME, DNAME, A, AAAA and NS.
                    </p>
                  </td>
d3953 3
a3955 9
<td>
                    <p><span><strong class="command">rhs</strong></span></p>
                  </td>
<td>
                    <p>
                      <span><strong class="command">rhs</strong></span> is a domain name. It is processed
                      similarly to lhs.
                    </p>
                  </td>
d3959 3
a3961 49
<p>
            The <span><strong class="command">$GENERATE</strong></span> directive is a <acronym class="acronym">BIND</acronym> extension
            and not part of the standard zone file format.
          </p>
<p>
            BIND 8 does not support the optional TTL and CLASS fields.
          </p>
</div>
<div class="sect2" lang="en">
<div class="titlepage"><div><div><h3 class="title">
<a name="zonefile_format"></a>Additional File Formats</h3></div></div></div>
<p>
            In addition to the standard textual format, BIND 9
            supports the ability to read or dump to zone files in
            other formats.  The <code class="constant">raw</code> format is
            currently available as an additional format.  It is a
            binary format representing BIND 9's internal data
            structure directly, thereby remarkably improving the
            loading time.
          </p>
<p>
            For a primary server, a zone file in the
            <code class="constant">raw</code> format is expected to be
            generated from a textual zone file by the
            <span><strong class="command">named-compilezone</strong></span> command.  For a
            secondary server or for a dynamic zone, it is automatically
            generated (if this format is specified by the
            <span><strong class="command">masterfile-format</strong></span> option) when
            <span><strong class="command">named</strong></span> dumps the zone contents after
            zone transfer or when applying prior updates.
          </p>
<p>
            If a zone file in a binary format needs manual modification,
            it first must be converted to a textual form by the
            <span><strong class="command">named-compilezone</strong></span> command.  All
            necessary modification should go to the text file, which
            should then be converted to the binary form by the
            <span><strong class="command">named-compilezone</strong></span> command again.
          </p>
<p>
             Although the <code class="constant">raw</code> format uses the
             network byte order and avoids architecture-dependent
             data alignment so that it is as much portable as
             possible, it is primarily expected to be used inside
             the same single system.  In order to export a zone
             file in the <code class="constant">raw</code> format or make a
             portable backup of the file, it is recommended to
             convert the file to the standard textual representation.
          </p>
@


1.1.1.7
log
@ISC BIND release 9.4.2-P1
@
text
@d17 1
a17 1
<!-- $ISC: Bv9ARM.ch06.html,v 1.82.18.73.8.1 2008/05/27 22:07:34 each Exp $ -->
d3081 4
a3084 12
	    a random unprivileged port number is picked up and will be
            used for each query.
	    It is generally strongly discouraged to
	    specify a particular port for the
	    <span><strong class="command">query-source</strong></span> or
	    <span><strong class="command">query-source-v6</strong></span>
	    options; it implicitly disables the use of randomized port numbers
	    and leads to insecure operation.
	    The <span><strong class="command">avoid-v4-udp-ports</strong></span>
	    and <span><strong class="command">avoid-v6-udp-ports</strong></span> options can be used
	    to prevent named
	    from selecting certain ports. The defaults are:
@


