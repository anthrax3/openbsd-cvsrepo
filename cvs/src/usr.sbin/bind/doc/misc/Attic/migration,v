head	1.6;
access;
symbols
	OPENBSD_5_6:1.5.0.30
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.28
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.24
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.22
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.20
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.18
	OPENBSD_5_0:1.5.0.16
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.14
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.12
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.8
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.10
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.6
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.4
	OPENBSD_4_4_BASE:1.5
	BIND_9_4_2_P1:1.1.1.4
	OPENBSD_4_3:1.5.0.2
	OPENBSD_4_3_BASE:1.5
	BIND_9_4_2:1.1.1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	BIND_9_3_4:1.1.1.3
	BIND_9_3_3:1.1.1.3
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	BIND_9_3_2:1.1.1.3
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	BIND_9_3_1:1.1.1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	BIND_9_3_0:1.1.1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	BIND_9_2_2_RC1:1.1.1.1
	ISC:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.08.25.07.08.34;	author brad;	state dead;
branches;
next	1.5;
commitid	zKogyOACFMOV70QE;

1.5
date	2007.12.09.13.39.43;	author jakob;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.22.16.52.39;	author jakob;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.28.17.14.05;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2003.11.18.14.14.06;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.20.21.06.54;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.20.21.06.54;	author jakob;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.09.28.16.34.33;	author jakob;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.03.22.16.37.29;	author jakob;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2007.12.09.12.33.47;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Start removing unused documentation and the server and related binaries source
code.
@
text
@Copyright (C) 2004, 2007  Internet Systems Consortium, Inc. ("ISC")
Copyright (C) 2000, 2001, 2003  Internet Software Consortium.
See COPYRIGHT in the source root or http://isc.org/copyright.html for terms.

                   BIND 8 to BIND 9 Migration Notes

BIND 9 is designed to be mostly upwards compatible with BIND 8, but
there is still a number of caveats you should be aware of when
upgrading an existing BIND 8 installation to use BIND 9.


1. Configuration File Compatibility

1.1. Unimplemented Options and Changed Defaults

BIND 9 supports most, but not all of the named.conf options of BIND 8.
For a complete list of implemented options, see doc/misc/options.

If your named.conf file uses an unimplemented option, named will log a
warning message.  A message is also logged about each option whose
default has changed unless the option is set explicitly in named.conf.

The default of the "transfer-format" option has changed from
"one-answer" to "many-answers".  If you have slave servers that do not
understand the many-answers zone transfer format (e.g., BIND 4.9.5 or
older) you need to explicitly specify "transfer-format one-answer;" in
either the options block or a server statement.

1.2. Handling of Configuration File Errors

In BIND 9, named refuses to start if it detects an error in
named.conf.  Earlier versions would start despite errors, causing the
server to run with a partial configuration.  Errors detected during
subsequent reloads do not cause the server to exit.

Errors in master files do not cause the server to exit, but they
do cause the zone not to load.

1.3. Logging

The set of logging categories in BIND 9 is different from that
in BIND 8.  If you have customised your logging on a per-category
basis, you need to modify your logging statement to use the
new categories.

Another difference is that the "logging" statement only takes effect
after the entire named.conf file has been read.  This means that when
the server starts up, any messages about errors in the configuration
file are always logged to the default destination (syslog) when the
server first starts up, regardless of the contents of the "logging"
statement.  In BIND 8, the new logging configuration took effect
immediately after the "logging" statement was read.

1.4. Notify messages and Refresh queries

The source address and port for these is now controlled by
"notify-source" and "transfer-source", respectively, rather that
query-source as in BIND 8.

1.5. Multiple Classes.

Multiple classes have to be put into explicit views for each class.


2. Zone File Compatibility

2.1. Strict RFC1035 Interpretation of TTLs in Zone Files

BIND 9 strictly complies with the RFC1035 and RFC2308 rules regarding
omitted TTLs in zone files.  Omitted TTLs are replaced by the value
specified with the $TTL directive, or by the previous explicit TTL if
there is no $TTL directive.

If there is no $TTL directive and the first RR in the file does not
have an explicit TTL field, the zone file is illegal according to
RFC1035 since the TTL of the first RR is undefined.  Unfortunately,
BIND 4 and many versions of BIND 8 accept such files without warning
and use the value of the SOA MINTTL field as a default for missing TTL
values.

BIND 9.0 and 9.1 completely refused to load such files.  BIND 9.2
emulates the nonstandard BIND 4/8 SOA MINTTL behaviour and loads the
files anyway (provided the SOA is the first record in the file), but
will issue the warning message "no TTL specified; using SOA MINTTL
instead".

To avoid problems, we recommend that you use a $TTL directive in each
zone file.

2.2. Periods in SOA Serial Numbers Deprecated

Some versions of BIND allow SOA serial numbers with an embedded
period, like "3.002", and convert them into integers in a rather
unintuitive way.  This feature is not supported by BIND 9; serial
numbers must be integers.

2.3. Handling of Unbalanced Quotes

TXT records with unbalanced quotes, like 'host TXT "foo', were not
treated as errors in some versions of BIND.  If your zone files
contain such records, you will get potentially confusing error
messages like "unexpected end of file" because BIND 9 will interpret
everything up to the next quote character as a literal string.

2.4. Handling of Line Breaks

Some versions of BIND accept RRs containing line breaks that are not
properly quoted with parentheses, like the following SOA:

	@@	IN SOA	ns.example. hostmaster.example.
			( 1 3600 1800 1814400 3600 )

This is not legal master file syntax and will be treated as an error
by BIND 9.  The fix is to move the opening parenthesis to the first
line.

2.5. Unimplemented BIND 8 Extensions

$GENERATE: The "$$" construct for getting a literal $ into a domain
name is deprecated.  Use \$ instead.

2.6. TXT records are no longer automatically split.

Some versions of BIND accepted strings in TXT RDATA consisting of more
than 255 characters and silently split them to be able to encode the
strings in a protocol conformant way. You may now see errors like this
        dns_rdata_fromtext: local.db:119: ran out of space
if you have TXT RRs with too longs strings. Make sure to split the
string in the zone data file at or before a single one reaches 255
characters.

3. Interoperability Impact of New Protocol Features

3.1. EDNS0

BIND 9 uses EDNS0 (RFC2671) to advertise its receive buffer size.  It
also sets DO EDNS flag bit in queries to indicate that it wishes to
receive DNSSEC responses.

Most older servers that do not support EDNS0, including prior versions
of BIND, will send a FORMERR or NOTIMP response to these queries.
When this happens, BIND 9 will automatically retry the query without
EDNS0.

Unfortunately, there exists at least one non-BIND name server
implementation that silently ignores these queries instead of sending
an error response.  Resolving names in zones where all or most
authoritative servers use this server will be very slow or fail
completely.  We have contacted the manufacturer of the name server in
case, and they are working on a solution.

When BIND 9 communicates with a server that does support EDNS0, such as
another BIND 9 server, responses of up to 4096 bytes may be
transmitted as a single UDP datagram which is subject to fragmentation
at the IP level.  If a firewall incorrectly drops IP fragments, it can
cause resolution to slow down dramatically or fail.

3.2. Zone Transfers

Outgoing zone transfers now use the "many-answers" format by default.
This format is not understood by certain old versions of BIND 4.  
You can work around this problem using the option "transfer-format
one-answer;", but since these old versions all have known security
problems, the correct fix is to upgrade the slave servers.

Zone transfers to Windows 2000 DNS servers sometimes fail due to a
bug in the Windows 2000 DNS server where DNS messages larger than
16K are not handled properly.  Obtain the latest service pack for
Windows 2000 from Microsoft to address this issue.  In the meantime,
the problem can be worked around by setting "transfer-format one-answer;".
http://support.microsoft.com/default.aspx?scid=kb;en-us;297936

4. Unrestricted Character Set

		BIND 9.2 only

BIND 9 does not restrict the character set of domain names - it is
fully 8-bit clean in accordance with RFC2181 section 11.

It is strongly recommended that hostnames published in the DNS follow
the RFC952 rules, but BIND 9 will not enforce this restriction.

Historically, some applications have suffered from security flaws
where data originating from the network, such as names returned by
gethostbyaddr(), are used with insufficient checking and may cause a
breach of security when containing unexpected characters; see
<http://www.cert.org/advisories/CA-96.04.corrupt_info_from_servers.html>
for details.  Some earlier versions of BIND attempt to protect these
flawed applications from attack by discarding data containing
characters deemed inappropriate in host names or mail addresses, under
the control of the "check-names" option in named.conf and/or "options
no-check-names" in resolv.conf.  BIND 9 provides no such protection;
if applications with these flaws are still being used, they should
be upgraded.

	BIND 9.3 onwards implements check-names.

5. Server Administration Tools

5.1 Ndc Replaced by Rndc

The "ndc" program has been replaced by "rndc", which is capable of
remote operation.  Unlike ndc, rndc requires a configuration file.
The easiest way to generate a configuration file is to run
"rndc-confgen -a"; see the man pages for rndc(8), rndc-confgen(8),
and rndc.conf(5) for details.

5.2. Nsupdate Differences

The BIND 8 implementation of nsupdate had an undocumented feature
where an update request would be broken down into multiple requests
based upon the discovered zones that contained the records.  This
behaviour has not been implemented in BIND 9.  Each update request
must pertain to a single zone, but it is still possible to do multiple
updates in a single invocation of nsupdate by terminating each update
with an empty line or a "send" command.


6. No Information Leakage between Zones

BIND 9 stores the authoritative data for each zone in a separate data
structure, as recommended in RFC1035 and as required by DNSSEC and
IXFR.  When a BIND 9 server is authoritative for both a child zone and
its parent, it will have two distinct sets of NS records at the
delegation point: the authoritative NS records at the child's apex,
and a set of glue NS records in the parent.

BIND 8 was unable to properly distinguish between these two sets of NS
records and would "leak" the child's NS records into the parent,
effectively causing the parent zone to be silently modified: responses
and zone transfers from the parent contained the child's NS records
rather than the glue configured into the parent (if any).  In the case
of children of type "stub", this behaviour was documented as a feature,
allowing the glue NS records to be omitted from the parent
configuration.

Sites that were relying on this BIND 8 behaviour need to add any
omitted glue NS records, and any necessary glue A records, to the
parent zone.

Although stub zones can no longer be used as a mechanism for injecting
NS records into their parent zones, they are still useful as a way of
directing queries for a given domain to a particular set of name
servers.


7. Umask not Modified

The BIND 8 named unconditionally sets the umask to 022.  BIND 9 does
not; the umask inherited from the parent process remains in effect.
This may cause files created by named, such as journal files, to be
created with different file permissions than they did in BIND 8.  If
necessary, the umask should be set explicitly in the script used to
start the named process.


$ISC: migration,v 1.45.18.2 2007/09/07 06:34:21 marka Exp $
@


1.5
log
@resolve conflicts
@
text
@@


1.4
log
@resolve conflicts
@
text
@d1 1
a1 1
Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
d137 2
a138 3
also sets an EDNS flag bit in queries to indicate that it wishes to
receive DNSSEC responses; this flag bit usage is not yet standardised,
but we hope it will be.
d175 2
d196 1
d257 1
a257 1
$ISC: migration,v 1.37.2.3.2.3 2004/11/22 22:33:09 marka Exp $
@


1.3
log
@resolve conflicts
@
text
@d122 9
d255 1
a255 1
$ISC: migration,v 1.37.2.3.2.2 2004/03/06 13:16:19 marka Exp $
@


1.2
log
@update to BIND v9.2.3. ok todd@@
@
text
@d1 1
d246 1
a246 1
$ISC: migration,v 1.37.2.4 2003/09/02 02:20:15 marka Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
Copyright (C) 2000, 2001  Internet Software Consortium.
d41 1
a41 1
in BIND 8.  If you have customized your logging on a per-category
d53 1
a53 1
1.4. Notify messages and Refesh queries
d81 1
a81 1
emulates the nonstandard BIND 4/8 SOA MINTTL behavior and loads the
d84 1
a84 1
instad".
d128 1
a128 1
receive DNSSEC responses; this flag bit usage is not yet standardized,
d157 6
a162 7
Zone transfers to Windows 2000 DNS servers sometimes fail due to a bug
in the Windows 2000 DNS server where DNS messages larger than 16K are
not handled properly.  There will be a hot fix available from
Microsoft to address this issue.  In the meantime, the problem can
be worked around by setting "transfer-format one-answer;".
[As of May 4 2001 the hotfix was still being prepared]

d221 1
a221 1
of children of type "stub", this behavior was documented as a feature,
d225 1
a225 1
Sites that were relying on this BIND 8 behavior need to add any
d245 1
a245 1
$ISC: migration,v 1.37.2.1 2001/09/21 17:49:58 gson Exp $
@


1.1.1.1
log
@ISC BIND version 9.2.2rc1
@
text
@@


1.1.1.2
log
@ISC BIND version 9.3.0. ok deraadt@@
@
text
@d1 1
a1 2
Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
Copyright (C) 2000, 2001, 2003  Internet Software Consortium.
d41 1
a41 1
in BIND 8.  If you have customised your logging on a per-category
d53 1
a53 1
1.4. Notify messages and Refresh queries
d81 1
a81 1
emulates the nonstandard BIND 4/8 SOA MINTTL behaviour and loads the
d84 1
a84 1
instead".
d128 1
a128 1
receive DNSSEC responses; this flag bit usage is not yet standardised,
d157 7
a163 6
Zone transfers to Windows 2000 DNS servers sometimes fail due to a
bug in the Windows 2000 DNS server where DNS messages larger than
16K are not handled properly.  Obtain the latest service pack for
Windows 2000 from Microsoft to address this issue.  In the meantime,
the problem can be worked around by setting "transfer-format one-answer;".
http://support.microsoft.com/default.aspx?scid=kb;en-us;297936
d222 1
a222 1
of children of type "stub", this behaviour was documented as a feature,
d226 1
a226 1
Sites that were relying on this BIND 8 behaviour need to add any
d246 1
a246 1
$ISC: migration,v 1.37.2.3.2.2 2004/03/06 13:16:19 marka Exp $
@


1.1.1.3
log
@ISC BIND release 9.3.1. ok deraadt@@
@
text
@a121 9
2.6. TXT records are no longer automatically split.

Some versions of BIND accepted strings in TXT RDATA consisting of more
than 255 characters and silently split them to be able to encode the
strings in a protocol conformant way. You may now see errors like this
        dns_rdata_fromtext: local.db:119: ran out of space
if you have TXT RRs with too longs strings. Make sure to split the
string in the zone data file at or before a single one reaches 255
characters.
d246 1
a246 1
$ISC: migration,v 1.37.2.3.2.3 2004/11/22 22:33:09 marka Exp $
@


1.1.1.4
log
@ISC BIND release 9.4.2
@
text
@d1 1
a1 1
Copyright (C) 2004, 2007  Internet Systems Consortium, Inc. ("ISC")
d137 3
a139 2
also sets DO EDNS flag bit in queries to indicate that it wishes to
receive DNSSEC responses.
a175 2
		BIND 9.2 only

a194 1
	BIND 9.3 onwards implements check-names.
d255 1
a255 1
$ISC: migration,v 1.45.18.2 2007/09/07 06:34:21 marka Exp $
@


