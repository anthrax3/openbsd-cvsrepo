head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.4
	OPENBSD_6_1:1.1.1.4.0.40
	OPENBSD_6_1_BASE:1.1.1.4
	OPENBSD_6_0:1.1.1.4.0.36
	OPENBSD_6_0_BASE:1.1.1.4
	OPENBSD_5_9:1.1.1.4.0.32
	OPENBSD_5_9_BASE:1.1.1.4
	OPENBSD_5_8:1.1.1.4.0.34
	OPENBSD_5_8_BASE:1.1.1.4
	OPENBSD_5_7:1.1.1.4.0.26
	OPENBSD_5_7_BASE:1.1.1.4
	OPENBSD_5_6:1.1.1.4.0.30
	OPENBSD_5_6_BASE:1.1.1.4
	OPENBSD_5_5:1.1.1.4.0.28
	OPENBSD_5_5_BASE:1.1.1.4
	OPENBSD_5_4:1.1.1.4.0.24
	OPENBSD_5_4_BASE:1.1.1.4
	OPENBSD_5_3:1.1.1.4.0.22
	OPENBSD_5_3_BASE:1.1.1.4
	OPENBSD_5_2:1.1.1.4.0.20
	OPENBSD_5_2_BASE:1.1.1.4
	OPENBSD_5_1_BASE:1.1.1.4
	OPENBSD_5_1:1.1.1.4.0.18
	OPENBSD_5_0:1.1.1.4.0.16
	OPENBSD_5_0_BASE:1.1.1.4
	OPENBSD_4_9:1.1.1.4.0.14
	OPENBSD_4_9_BASE:1.1.1.4
	OPENBSD_4_8:1.1.1.4.0.12
	OPENBSD_4_8_BASE:1.1.1.4
	OPENBSD_4_7:1.1.1.4.0.8
	OPENBSD_4_7_BASE:1.1.1.4
	OPENBSD_4_6:1.1.1.4.0.10
	OPENBSD_4_6_BASE:1.1.1.4
	OPENBSD_4_5:1.1.1.4.0.6
	OPENBSD_4_5_BASE:1.1.1.4
	OPENBSD_4_4:1.1.1.4.0.4
	OPENBSD_4_4_BASE:1.1.1.4
	BIND_9_4_2_P1:1.1.1.4
	OPENBSD_4_3:1.1.1.4.0.2
	OPENBSD_4_3_BASE:1.1.1.4
	BIND_9_4_2:1.1.1.4
	OPENBSD_4_2:1.1.1.3.0.6
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.4
	OPENBSD_4_1_BASE:1.1.1.3
	BIND_9_3_4:1.1.1.3
	BIND_9_3_3:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.2
	OPENBSD_4_0_BASE:1.1.1.3
	BIND_9_3_2:1.1.1.3
	OPENBSD_3_9:1.1.1.2.0.6
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.4
	OPENBSD_3_8_BASE:1.1.1.2
	BIND_9_3_1:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.2
	OPENBSD_3_7_BASE:1.1.1.2
	BIND_9_3_0:1.1.1.2
	OPENBSD_3_6:1.1.1.1.0.8
	OPENBSD_3_6_BASE:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.6
	OPENBSD_3_5_BASE:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.4
	OPENBSD_3_4_BASE:1.1.1.1
	OPENBSD_3_3:1.1.1.1.0.2
	OPENBSD_3_3_BASE:1.1.1.1
	BIND_9_2_2_RC1:1.1.1.1
	ISC:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2003.01.20.21.07.52;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.20.21.07.52;	author jakob;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.09.28.16.36.07;	author jakob;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.04.05.16.44.34;	author jakob;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2007.12.09.12.33.59;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.1
log
@Initial revision
@
text
@<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook V4.1//EN">
<!--
 - Copyright (C) 2001  Internet Software Consortium.
 -
 - Permission to use, copy, modify, and distribute this software for any
 - purpose with or without fee is hereby granted, provided that the above
 - copyright notice and this permission notice appear in all copies.
 -
 - THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
 - DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
 - IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
 - INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
 - INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 - FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 - NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 - WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
-->

<!-- $ISC: lwres_getrrsetbyname.docbook,v 1.3 2001/07/02 21:28:56 gson Exp $ -->

<refentry>
<refentryinfo>


<date>Oct 18, 2000</date>
</refentryinfo>
<refmeta>
<refentrytitle>lwres_getrrsetbyname</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>BIND9</refmiscinfo>
</refmeta>
<refnamediv>
<refname>lwres_getrrsetbyname</refname>
<refname>lwres_freerrset</refname>
<refpurpose>retrieve DNS records</refpurpose>
</refnamediv>
<refsynopsisdiv>
<funcsynopsis>
<funcsynopsisinfo>#include &lt;lwres/netdb.h&gt;</funcsynopsisinfo>
<funcprototype>
<funcdef>
int
<function>lwres_getrrsetbyname</function></funcdef>
<paramdef>const char *hostname</paramdef>
<paramdef>unsigned int rdclass</paramdef>
<paramdef>unsigned int rdtype</paramdef>
<paramdef>unsigned int flags</paramdef>
<paramdef>struct rrsetinfo **res</paramdef>
</funcprototype>
<funcprototype>
<funcdef>
void
<function>lwres_freerrset</function></funcdef>
<paramdef>struct rrsetinfo *rrset</paramdef>
</funcprototype>
</funcsynopsis>

<para>
The following structures are used:
<programlisting>
struct  rdatainfo {
        unsigned int            rdi_length;     /* length of data */
        unsigned char           *rdi_data;      /* record data */
};

struct  rrsetinfo {
        unsigned int            rri_flags;      /* RRSET_VALIDATED... */
        unsigned int            rri_rdclass;    /* class number */
        unsigned int            rri_rdtype;     /* RR type number */
        unsigned int            rri_ttl;        /* time to live */
        unsigned int            rri_nrdatas;    /* size of rdatas array */
        unsigned int            rri_nsigs;      /* size of sigs array */
        char                    *rri_name;      /* canonical name */
        struct rdatainfo        *rri_rdatas;    /* individual records */
        struct rdatainfo        *rri_sigs;      /* individual signatures */
};
</programlisting>
</para>
</refsynopsisdiv>

<refsect1>
<title>DESCRIPTION</title>
<para>
<function>lwres_getrrsetbyname()</function>
gets a set of resource records associated with a
<parameter>hostname</parameter>,

<parameter>class</parameter>,

and
<parameter>type</parameter>.

<parameter>hostname</parameter>
is
a pointer a to null-terminated string.  The
<parameter>flags</parameter>
field is currently unused and must be zero.
</para>
<para>
After a successful call to
<function>lwres_getrrsetbyname()</function>,

<parameter>*res</parameter>
is a pointer to an
<type>rrsetinfo</type>
structure, containing a list of one or more
<type>rdatainfo</type>
structures containing resource records and potentially another list of
<type>rdatainfo</type>
structures containing SIG resource records
associated with those records.
The members
<constant>rri_rdclass</constant>
and
<constant>rri_rdtype</constant>
are copied from the parameters.
<constant>rri_ttl</constant>
and
<constant>rri_name</constant>
are properties of the obtained rrset.
The resource records contained in
<constant>rri_rdatas</constant>
and
<constant>rri_sigs</constant>
are in uncompressed DNS wire format.
Properties of the rdataset are represented in the
<constant>rri_flags</constant>
bitfield.  If the RRSET_VALIDATED bit is set, the data has been DNSSEC
validated and the signatures verified.  
</para>
<para>
All of the information returned by
<function>lwres_getrrsetbyname()</function>
is dynamically allocated: the
<constant>rrsetinfo</constant>
and
<constant>rdatainfo</constant>
structures,
and the canonical host name strings pointed to by the
<constant>rrsetinfo</constant>structure.

Memory allocated for the dynamically allocated structures created by
a successful call to
<function>lwres_getrrsetbyname()</function>
is released by
<function>lwres_freerrset()</function>.

<parameter>rrset</parameter>
is a pointer to a
<type>struct rrset</type>
created by a call to
<function>lwres_getrrsetbyname()</function>.

</para>
<para>
</para>
</refsect1>
<refsect1>
<title>RETURN VALUES</title>
<para>
<function>lwres_getrrsetbyname()</function>
returns zero on success, and one of the following error
codes if an error occurred:
<variablelist>

<varlistentry><term><constant>ERRSET_NONAME</constant></term>
<listitem><para>
the name does not exist
</para></listitem></varlistentry>

<varlistentry><term><constant>ERRSET_NODATA</constant></term>
<listitem><para>
the name exists, but does not have data of the desired type
</para></listitem></varlistentry>

<varlistentry><term><constant>ERRSET_NOMEMORY</constant></term>
<listitem><para>
memory could not be allocated
</para></listitem></varlistentry>

<varlistentry><term><constant>ERRSET_INVAL</constant></term>
<listitem><para>
a parameter is invalid
</para></listitem></varlistentry>

<varlistentry><term><constant>ERRSET_FAIL</constant></term>
<listitem><para>
other failure
</para></listitem></varlistentry>

<varlistentry><term><constant></constant></term>
<listitem><para>
</para></listitem></varlistentry>

</variablelist>

</para>
</refsect1>
<refsect1>
<title>SEE ALSO</title>
<para>
<citerefentry>
<refentrytitle>lwres</refentrytitle><manvolnum>3</manvolnum>
</citerefentry>.
</para>

</refsect1>
</refentry>
@


1.1.1.1
log
@ISC BIND version 9.2.2rc1
@
text
@@


1.1.1.2
log
@ISC BIND version 9.3.0. ok deraadt@@
@
text
@a2 1
 - Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
d9 8
a16 7
 - THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
 - REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 - AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
 - INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
 - LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
 - OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
 - PERFORMANCE OF THIS SOFTWARE.
d19 1
a19 1
<!-- $ISC: lwres_getrrsetbyname.docbook,v 1.3.206.1 2004/03/06 08:15:40 marka Exp $ -->
@


1.1.1.3
log
@ISC BIND release 9.3.2
@
text
@d1 1
a1 3
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.0//EN"
               "http://www.oasis-open.org/docbook/xml/4.0/docbookx.dtd"
	       [<!ENTITY mdash "&#8212;">]>
d3 2
a4 2
 - Copyright (C) 2004, 2005  Internet Systems Consortium, Inc. ("ISC")
 - Copyright (C) 2000, 2001  Internet Software Consortium.
d19 1
a19 1
<!-- $ISC: lwres_getrrsetbyname.docbook,v 1.3.206.3 2005/05/12 21:36:15 sra Exp $ -->
a31 14

  <docinfo>
    <copyright>
      <year>2004</year>
      <year>2005</year>
      <holder>Internet Systems Consortium, Inc. ("ISC")</holder>
    </copyright>
    <copyright>
      <year>2000</year>
      <year>2001</year>
      <holder>Internet Software Consortium.</holder>
    </copyright>
  </docinfo>

@


1.1.1.4
log
@ISC BIND release 9.4.2
@
text
@d1 2
a2 2
<!DOCTYPE book PUBLIC "-//OASIS//DTD DocBook XML V4.2//EN"
               "http://www.oasis-open.org/docbook/xml/4.2/docbookx.dtd"
d5 1
a5 1
 - Copyright (C) 2004, 2005, 2007  Internet Systems Consortium, Inc. ("ISC")
d8 1
a8 1
 - Permission to use, copy, modify, and/or distribute this software for any
d21 2
a22 1
<!-- $ISC: lwres_getrrsetbyname.docbook,v 1.4.18.6 2007/08/28 07:20:06 tbox Exp $ -->
d24 2
d27 7
a33 9
  <refentryinfo>
    <date>Oct 18, 2000</date>
  </refentryinfo>

  <refmeta>
    <refentrytitle>lwres_getrrsetbyname</refentrytitle>
    <manvolnum>3</manvolnum>
    <refmiscinfo>BIND9</refmiscinfo>
  </refmeta>
a38 1
      <year>2007</year>
d48 7
a54 7
  <refnamediv>
    <refname>lwres_getrrsetbyname</refname>
    <refname>lwres_freerrset</refname>
    <refpurpose>retrieve DNS records</refpurpose>
  </refnamediv>
  <refsynopsisdiv>
    <funcsynopsis>
d57 1
a57 1
        <funcdef>
d60 6
a65 6
        <paramdef>const char *<parameter>hostname</parameter></paramdef>
        <paramdef>unsigned int <parameter>rdclass</parameter></paramdef>
        <paramdef>unsigned int <parameter>rdtype</parameter></paramdef>
        <paramdef>unsigned int <parameter>flags</parameter></paramdef>
        <paramdef>struct rrsetinfo **<parameter>res</parameter></paramdef>
        </funcprototype>
d67 1
a67 1
        <funcdef>
d70 2
a71 2
        <paramdef>struct rrsetinfo *<parameter>rrset</parameter></paramdef>
      </funcprototype>
d74 3
a76 4
    <para>
      The following structures are used:
    </para>
    <para><programlisting>
d81 1
a81 3
</programlisting>
    </para>
    <para><programlisting>
d94 128
a221 2
    </para>
  </refsynopsisdiv>
d223 2
a224 124
  <refsect1>
    <title>DESCRIPTION</title>
    <para><function>lwres_getrrsetbyname()</function>
      gets a set of resource records associated with a
      <parameter>hostname</parameter>, <parameter>class</parameter>,
      and <parameter>type</parameter>.
      <parameter>hostname</parameter> is a pointer a to
      null-terminated string.  The <parameter>flags</parameter> field
      is currently unused and must be zero.
    </para>
    <para>
      After a successful call to
      <function>lwres_getrrsetbyname()</function>,
      <parameter>*res</parameter> is a pointer to an
      <type>rrsetinfo</type> structure, containing a list of one or
      more <type>rdatainfo</type> structures containing resource
      records and potentially another list of <type>rdatainfo</type>
      structures containing SIG resource records associated with those
      records.  The members <constant>rri_rdclass</constant> and
      <constant>rri_rdtype</constant> are copied from the parameters.
      <constant>rri_ttl</constant> and <constant>rri_name</constant>
      are properties of the obtained rrset.  The resource records
      contained in <constant>rri_rdatas</constant> and
      <constant>rri_sigs</constant> are in uncompressed DNS wire
      format.  Properties of the rdataset are represented in the
      <constant>rri_flags</constant> bitfield.  If the RRSET_VALIDATED
      bit is set, the data has been DNSSEC validated and the
      signatures verified.
    </para>
    <para>
      All of the information returned by
      <function>lwres_getrrsetbyname()</function> is dynamically
      allocated: the <constant>rrsetinfo</constant> and
      <constant>rdatainfo</constant> structures, and the canonical
      host name strings pointed to by the
      <constant>rrsetinfo</constant>structure.

      Memory allocated for the dynamically allocated structures
      created by a successful call to
      <function>lwres_getrrsetbyname()</function> is released by
      <function>lwres_freerrset()</function>.

      <parameter>rrset</parameter> is a pointer to a <type>struct
      rrset</type> created by a call to
      <function>lwres_getrrsetbyname()</function>.
    </para>
    <para></para>
  </refsect1>
  <refsect1>
    <title>RETURN VALUES</title>
    <para><function>lwres_getrrsetbyname()</function>
      returns zero on success, and one of the following error codes if
      an error occurred:
      <variablelist>

        <varlistentry>
          <term><constant>ERRSET_NONAME</constant></term>
          <listitem>
            <para>
              the name does not exist
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>ERRSET_NODATA</constant></term>
          <listitem>
            <para>
              the name exists, but does not have data of the desired type
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>ERRSET_NOMEMORY</constant></term>
          <listitem>
            <para>
              memory could not be allocated
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>ERRSET_INVAL</constant></term>
          <listitem>
            <para>
              a parameter is invalid
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant>ERRSET_FAIL</constant></term>
          <listitem>
            <para>
              other failure
            </para>
          </listitem>
        </varlistentry>

        <varlistentry>
          <term><constant/></term>
          <listitem>
            <para></para>
          </listitem>
        </varlistentry>

      </variablelist>

    </para>
  </refsect1>
  <refsect1>
    <title>SEE ALSO</title>
    <para><citerefentry>
        <refentrytitle>lwres</refentrytitle><manvolnum>3</manvolnum>
      </citerefentry>.
    </para>

  </refsect1>
</refentry><!--
 - Local variables:
 - mode: sgml
 - End:
-->
@


