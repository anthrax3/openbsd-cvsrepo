head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.12
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.8
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.4
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.28
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.26
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.22
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.20
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.18
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.16
	OPENBSD_5_0:1.16.0.14
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.12
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.10
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.6
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.8
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	BIND_9_4_2_P1:1.1.1.6
	OPENBSD_4_3:1.15.0.2
	OPENBSD_4_3_BASE:1.15
	BIND_9_4_2:1.1.1.6
	OPENBSD_4_2:1.14.0.4
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	BIND_9_3_4:1.1.1.5
	BIND_9_3_3:1.1.1.5
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	BIND_9_3_2:1.1.1.4
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	BIND_9_3_1:1.1.1.3
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	BIND_9_3_0:1.1.1.2
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	BIND_9_2_2_RC1:1.1.1.1
	ISC:1.1.1;
locks; strict;
comment	@# @;


1.17
date	2014.08.22.19.28.25;	author brad;	state Exp;
branches;
next	1.16;
commitid	eIy6NAbs2GuY0Q0f;

1.16
date	2008.08.04.16.34.20;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2007.12.09.13.37.00;	author jakob;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.28.08.46.06;	author jakob;	state Exp;
branches;
next	1.13;

1.13
date	2007.01.10.19.07.58;	author jakob;	state Exp;
branches;
next	1.12;

1.12
date	2006.04.05.17.34.36;	author jakob;	state Exp;
branches;
next	1.11;

1.11
date	2005.05.16.06.31.35;	author jakob;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.22.16.52.38;	author jakob;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.28.17.14.02;	author jakob;	state Exp;
branches;
next	1.8;

1.8
date	2004.02.08.21.38.24;	author pvalchev;	state Exp;
branches;
next	1.7;

1.7
date	2003.11.18.14.14.04;	author jakob;	state Exp;
branches;
next	1.6;

1.6
date	2003.11.16.12.16.51;	author jakob;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.10.05.55.24;	author jakob;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.05.09.18.31;	author jakob;	state Exp;
branches;
next	1.3;

1.3
date	2003.01.20.21.34.14;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2003.01.20.21.33.31;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2003.01.20.21.05.58;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.01.20.21.05.58;	author jakob;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.09.28.16.32.34;	author jakob;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.03.22.16.36.02;	author jakob;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2006.04.05.16.41.49;	author jakob;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2007.01.10.18.18.08;	author jakob;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2007.12.09.12.32.22;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Strip the BIND code down to just building and installing dig, host and nslookup.
@
text
@# Copyright (C) 2004-2008  Internet Systems Consortium, Inc. ("ISC")
# Copyright (C) 1998-2003  Internet Software Consortium.
#
# Permission to use, copy, modify, and/or distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

dnl
AC_DIVERT_PUSH(1)dnl
esyscmd([sed "s/^/# /" COPYRIGHT])dnl
AC_DIVERT_POP()dnl

AC_REVISION($Revision: 1.16 $)

AC_INIT(lib/dns/name.c)
AC_PREREQ(2.59)

AC_CONFIG_HEADER(config.h)
AC_CONFIG_SUBDIRS(lib/bind)

AC_CANONICAL_HOST

AC_PROG_MAKE_SET
AC_PROG_RANLIB
AC_PROG_INSTALL
AC_PROG_LN_S

AC_SUBST(STD_CINCLUDES)
AC_SUBST(STD_CDEFINES)
AC_SUBST(STD_CWARNINGS)
AC_SUBST(CCOPT)

#
# Make very sure that these are the first files processed by
# config.status, since we use the processed output as the input for
# AC_SUBST_FILE() subsitutions in other files.
#
AC_CONFIG_FILES([make/rules make/includes])

AC_PATH_PROG(AR, ar)
ARFLAGS="cruv"
AC_SUBST(AR)
AC_SUBST(ARFLAGS)

# The POSIX ln(1) program.  Non-POSIX systems may substitute
# "copy" or something.
LN=ln
AC_SUBST(LN)

case "$AR" in
	"")
		AC_MSG_ERROR([
ar program not found.  Please fix your PATH to include the directory in
which ar resides, or set AR in the environment with the full path to ar.
])

		;;
esac

#
# Etags.
#
AC_PATH_PROGS(ETAGS, etags emacs-etags)

#
# Some systems, e.g. RH7, have the Exuberant Ctags etags instead of
# GNU emacs etags, and it requires the -L flag.
#
if test "X$ETAGS" != "X"; then
	AC_MSG_CHECKING(for Exuberant Ctags etags)
	if $ETAGS --version 2>&1 | grep 'Exuberant Ctags' >/dev/null 2>&1; then
		AC_MSG_RESULT(yes)
		ETAGS="$ETAGS -L"
	else
		AC_MSG_RESULT(no)
	fi
fi
AC_SUBST(ETAGS)

#
# Perl is optional; it is used only by some of the system test scripts.
#
AC_PATH_PROGS(PERL, perl5 perl)
AC_SUBST(PERL)

#
# Special processing of paths depending on whether --prefix,
# --sysconfdir or --localstatedir arguments were given.  What's
# desired is some compatibility with the way previous versions
# of BIND built; they defaulted to /usr/local for most parts of
# the installation, but named.boot/named.conf was in /etc
# and named.pid was in /var/run.
#
# So ... if none of --prefix, --sysconfdir or --localstatedir are
# specified, set things up that way.  If --prefix is given, use
# it for sysconfdir and localstatedir the way configure normally
# would.  To change the prefix for everything but leave named.conf
# in /etc or named.pid in /var/run, then do this the usual configure way:
# ./configure --prefix=/somewhere --sysconfdir=/etc
# ./configure --prefix=/somewhere --localstatedir=/var
#
# To put named.conf and named.pid in /usr/local with everything else,
# set the prefix explicitly to /usr/local even though that's the default:
# ./configure --prefix=/usr/local
#
case "$prefix" in
        NONE)
                case "$sysconfdir" in
                        '${prefix}/etc')
                                sysconfdir=/etc
                                ;;
                esac
                case "$localstatedir" in
                        '${prefix}/var')
                                localstatedir=/var
                                ;;
                esac
                ;;
esac

#
# Make sure INSTALL uses an absolute path, else it will be wrong in all
# Makefiles, since they use make/rules.in and INSTALL will be adjusted by
# configure based on the location of the file where it is substituted.
# Since in BIND9 INSTALL is only substituted into make/rules.in, an immediate
# subdirectory of install-sh, This relative path will be wrong for all
# directories more than one level down from install-sh.
#
case "$INSTALL" in
	/*)
                ;;
        *)
                #
                # Not all systems have dirname.
                #
                changequote({, })
                ac_dir="`echo $INSTALL | sed 's%/[^/]*$%%'`"
                changequote([, ])

                ac_prog="`echo $INSTALL | sed 's%.*/%%'`"
                test "$ac_dir" = "$ac_prog" && ac_dir=.
                test -d "$ac_dir" && ac_dir="`(cd \"$ac_dir\" && pwd)`"
                INSTALL="$ac_dir/$ac_prog"
                ;;
esac

#
# On these hosts, we really want to use cc, not gcc, even if it is
# found.  The gcc that these systems have will not correctly handle
# pthreads.
#
# However, if the user sets $CC to be something, let that override
# our change.
#
if test "X$CC" = "X" ; then
	case "$host" in
		*-dec-osf*)
			CC="cc"
			;;
		*-solaris*)
                        # Use Sun's cc if it is available, but watch
                        # out for /usr/ucb/cc; it will never be the right
                        # compiler to use.
                        #
                        # If setting CC here fails, the AC_PROG_CC done
                        # below might still find gcc.
			IFS="${IFS=	}"; ac_save_ifs="$IFS"; IFS=":"
			for ac_dir in $PATH; do
				test -z "$ac_dir" && ac_dir=.
				case "$ac_dir" in
				/usr/ucb)
					# exclude
					;;
				*)
					if test -f "$ac_dir/cc"; then
						CC="$ac_dir/cc"
						break
					fi
					;;
				esac
			done
			IFS="$ac_save_ifs"
			;;
		*-hp-hpux*)
			CC="cc"
			;;
		mips-sgi-irix*)
			CC="cc"
			;;
	esac
fi

AC_PROG_CC

#
# gcc's optimiser is broken at -02 for ultrasparc
#
if test "$ac_env_CFLAGS_set" != set -a "X$GCC" = "Xyes"; then
	case "$host" in
	sparc-*)
		CCFLAGS="-g -O1"
		;;
	esac
fi

#
# OS dependent CC flags
#
case "$host" in
	# OSF 5.0: recv/send are only avaliable with -D_POSIX_PII_SOCKET or
	# -D_XOPEN_SOURCE_EXTENDED.
	*-dec-osf*)
		STD_CDEFINES="$STD_CDEFINES -D_POSIX_PII_SOCKET"
		CPPFLAGS="$CPPFLAGS -D_POSIX_PII_SOCKET"
		;;
	#HP-UX: need -D_XOPEN_SOURCE_EXTENDED and -lxnet for CMSG macros
	*-hp-hpux*)
		STD_CDEFINES="$STD_CDEFINES -D_XOPEN_SOURCE_EXTENDED"
		CPPFLAGS="$CPPFLAGS -D_XOPEN_SOURCE_EXTENDED"
		LIBS="-lxnet $LIBS"
		;;
	# Solaris: need -D_XPG4_2 and -D__EXTENSIONS__ for CMSG macros
	*-solaris*)
		STD_CDEFINES="$STD_CDEFINES -D_XPG4_2 -D__EXTENSIONS__"
		CPPFLAGS="$CPPFLAGS -D_XPG4_2 -D__EXTENSIONS__"
		;;
esac

AC_HEADER_STDC

AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/sockio.h sys/select.h sys/param.h sys/sysctl.h net/if6.h,,,
[$ac_includes_default
#ifdef HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
])

AC_C_CONST
AC_C_INLINE
AC_CHECK_FUNC(sysctlbyname, AC_DEFINE(HAVE_SYSCTLBYNAME))

#
# UnixWare 7.1.1 with the feature supplement to the UDK compiler
# is reported to not support "static inline" (RT #1212).
#
AC_MSG_CHECKING(for static inline breakage)
AC_TRY_COMPILE(, [
		foo1();
	}

	static inline int foo1() {
		return 0;
	}

	static inline int foo2() {
		return foo1();
	],
	[AC_MSG_RESULT(no)],
	[AC_MSG_RESULT(yes)
         AC_DEFINE(inline, )])

AC_TYPE_SIZE_T
AC_CHECK_TYPE(ssize_t, int)
AC_CHECK_TYPE(uintptr_t,unsigned long)
AC_CHECK_TYPE(socklen_t,
[AC_DEFINE(ISC_SOCKADDR_LEN_T, socklen_t)],
[
AC_TRY_COMPILE(
[
#include <sys/types.h>
#include <sys/socket.h>
int getsockname(int, struct sockaddr *, size_t *);
],[],
[AC_DEFINE(ISC_SOCKADDR_LEN_T, size_t)],
[AC_DEFINE(ISC_SOCKADDR_LEN_T, int)])
],
[
#include <sys/types.h>
#include <sys/socket.h>
])
AC_SUBST(ISC_SOCKADDR_LEN_T)
AC_HEADER_TIME
AC_MSG_CHECKING(for long long)
AC_TRY_COMPILE([],[long long i = 0; return (0);],
	[AC_MSG_RESULT(yes)
		ISC_PLATFORM_HAVELONGLONG="#define ISC_PLATFORM_HAVELONGLONG 1"],
	[AC_MSG_RESULT(no)
		ISC_PLATFORM_HAVELONGLONG="#undef ISC_PLATFORM_HAVELONGLONG"])
AC_SUBST(ISC_PLATFORM_HAVELONGLONG)

#
# check if we have lifconf
#
AC_MSG_CHECKING(for struct lifconf)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <net/if.h>
],
[
struct lifconf lifconf;
lifconf.lifc_len = 0;
]
,
	[AC_MSG_RESULT(yes)
		ISC_PLATFORM_HAVELIFCONF="#define ISC_PLATFORM_HAVELIFCONF 1"],
	[AC_MSG_RESULT(no)
		ISC_PLATFORM_HAVELIFCONF="#undef ISC_PLATFORM_HAVELIFCONF"])
AC_SUBST(ISC_PLATFORM_HAVELIFCONF)


#
# check if we need to #include sys/select.h explicitly
#
case $ac_cv_header_unistd_h in
yes)
AC_MSG_CHECKING(if unistd.h or sys/types.h defines fd_set)
AC_TRY_COMPILE([
#include <sys/types.h> /* Ultrix */
#include <unistd.h>],
[fd_set read_set; return (0);],
	[AC_MSG_RESULT(yes)
	 ISC_PLATFORM_NEEDSYSSELECTH="#undef ISC_PLATFORM_NEEDSYSSELECTH"
	 LWRES_PLATFORM_NEEDSYSSELECTH="#undef LWRES_PLATFORM_NEEDSYSSELECTH"],
	[AC_MSG_RESULT(no)
	case $ac_cv_header_sys_select_h in
	yes)
         ISC_PLATFORM_NEEDSYSSELECTH="#define ISC_PLATFORM_NEEDSYSSELECTH 1"
	 LWRES_PLATFORM_NEEDSYSSELECTH="#define LWRES_PLATFORM_NEEDSYSSELECTH 1"
		;;
	no)
		AC_MSG_ERROR([need either working unistd.h or sys/select.h])
		;;
	esac
	])
	;;
no)
	case $ac_cv_header_sys_select_h in
	yes)
             ISC_PLATFORM_NEEDSYSSELECTH="#define ISC_PLATFORM_NEEDSYSSELECTH 1"
	     LWRES_PLATFORM_NEEDSYSSELECTH="#define LWRES_PLATFORM_NEEDSYSSELECTH 1"
		;;
	no)
		AC_MSG_ERROR([need either unistd.h or sys/select.h])
		;;
	esac
	;;
esac
AC_SUBST(ISC_PLATFORM_NEEDSYSSELECTH)
AC_SUBST(LWRES_PLATFORM_NEEDSYSSELECTH)

#
# Find the machine's endian flavor.
#
AC_C_BIGENDIAN


#
# was --with-openssl specified?
#
OPENSSL_WARNING=
AC_MSG_CHECKING(for OpenSSL library)
AC_ARG_WITH(openssl,
[  --with-openssl[=PATH]   Build with OpenSSL [yes|no|path].
                          (Required for DNSSEC)],
    use_openssl="$withval", use_openssl="auto")

openssldirs="/usr /usr/local /usr/local/ssl /usr/pkg /usr/sfw"
if test "$use_openssl" = "auto"
then
	for d in $openssldirs
	do
		if test -f $d/include/openssl/opensslv.h
		then
			use_openssl=$d
			break
		fi
	done
fi
case "$use_openssl" in
	no)
		AC_MSG_RESULT(no)
		DST_OPENSSL_INC=""
		USE_OPENSSL=""
		;;
	auto)
		DST_OPENSSL_INC=""
		USE_OPENSSL=""
		AC_MSG_RESULT(not found)
		;;
	*)
		if test "$use_openssl" = "yes"
		then
		    	# User did not specify a path - guess it
			for d in $openssldirs
			do
				if test -f $d/include/openssl/opensslv.h
				then
				 	use_openssl=$d
					break
				fi
			done
			if test "$use_openssl" = "yes"
			then
			    	AC_MSG_RESULT(not found)
				AC_MSG_ERROR(
[OpenSSL was not found in any of $openssldirs; use --with-openssl=/path])
			fi
		fi
		USE_OPENSSL='-DOPENSSL'
		if test "$use_openssl" = "/usr"
		then
			DST_OPENSSL_INC=""
			DNS_OPENSSL_LIBS="-lcrypto"
		else
			DST_OPENSSL_INC="-I$use_openssl/include"
			case $host in
			*-solaris*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -R$use_openssl/lib -lcrypto"
				;;
			*-hp-hpux*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -Wl,+b: -lcrypto"
				;;
			*-apple-darwin*)
				#
				# Apple's ld seaches for serially for dynamic
				# then static libraries.  This means you can't
				# use -L to override dynamic system libraries
				# with static ones when linking.  Instead
				# we specify a absolute path.
				#
				if test -f "$use_openssl/lib/libcrypto.dylib"
				then
					DNS_OPENSSL_LIBS="-L$use_openssl/lib -lcrypto"
				else
					DNS_OPENSSL_LIBS="$use_openssl/lib/libcrypto.a"
				fi
				;;
			*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -lcrypto"
				;;
			esac
		fi
		AC_MSG_RESULT(using openssl from $use_openssl/lib and $use_openssl/include)

		saved_cflags="$CFLAGS"
		saved_libs="$LIBS"
		CFLAGS="$CFLAGS $DST_OPENSSL_INC"
		LIBS="$LIBS $DNS_OPENSSL_LIBS"
		AC_MSG_CHECKING(whether linking with OpenSSL works)
		AC_TRY_RUN([
#include <openssl/err.h>
int main() {
	ERR_clear_error();
	return (0);
}
],
	        [AC_MSG_RESULT(yes)],
		[AC_MSG_RESULT(no)
		 AC_MSG_ERROR(Could not run test program using OpenSSL from
$use_openssl/lib and $use_openssl/include.
Please check the argument to --with-openssl and your
shared library configuration (e.g., LD_LIBRARY_PATH).)],
		[AC_MSG_RESULT(assuming it does work on target platform)])

		AC_MSG_CHECKING(whether linking with OpenSSL requires -ldl)
		AC_TRY_LINK([
#include <openssl/err.h>],
[ DSO_METHOD_dlfcn(); ],
		[AC_MSG_RESULT(no)],
		[LIBS="$LIBS -ldl"
		AC_TRY_LINK([
#include <openssl/err.h>
],[ DSO_METHOD_dlfcn(); ],
		[AC_MSG_RESULT(yes)
		DNS_OPENSSL_LIBS="$DNS_OPENSSL_LIBS -ldl"
		],
		 [AC_MSG_RESULT(unknown)
		 AC_MSG_ERROR(OpenSSL has unsupported dynamic loading)],
		[AC_MSG_RESULT(assuming it does work on target platform)])
		],
		[AC_MSG_RESULT(assuming it does work on target platform)]
		)
		 
AC_ARG_ENABLE(openssl-version-check,
[AC_HELP_STRING([--enable-openssl-version-check],
        [Check OpenSSL Version @@<:@@default=yes@@:>@@])])
case "$enable_openssl_version_check" in
yes|'')
		AC_MSG_CHECKING(OpenSSL library version)
		AC_TRY_RUN([
#include <stdio.h>
#include <openssl/opensslv.h>
int main() {
        if ((OPENSSL_VERSION_NUMBER >= 0x009070cfL &&
	     OPENSSL_VERSION_NUMBER < 0x00908000L) ||
	     OPENSSL_VERSION_NUMBER >= 0x0090804fL)
                return (0);
	printf("\n\nFound   OPENSSL_VERSION_NUMBER %#010x\n",
		OPENSSL_VERSION_NUMBER);
	printf("Require OPENSSL_VERSION_NUMBER 0x009070cf or greater (0.9.7l)\n"
	       "Require OPENSSL_VERSION_NUMBER 0x0090804f or greater (0.9.8d)\n\n");
        return (1);
}
		],
	        [AC_MSG_RESULT(ok)],
		[AC_MSG_RESULT(not compatible)
                 OPENSSL_WARNING=yes
		],
		[AC_MSG_RESULT(assuming target platform has compatible version)])
;;
no)
	AC_MSG_RESULT(Skipped OpenSSL version check)
;;
esac

		AC_MSG_CHECKING(for OpenSSL DSA support)
		if test -f $use_openssl/include/openssl/dsa.h
		then
			AC_DEFINE(HAVE_OPENSSL_DSA)
			AC_MSG_RESULT(yes)
		else
			AC_MSG_RESULT(no)
		fi
		CFLAGS="$saved_cflags"
		LIBS="$saved_libs"
		;;
esac

#
# This would include the system openssl path (and linker options to use
# it as needed) if it is found.
#

AC_SUBST(USE_OPENSSL)
AC_SUBST(DST_OPENSSL_INC)
DNS_CRYPTO_LIBS="$DNS_CRYPTO_LIBS $DNS_OPENSSL_LIBS"

#
# was --with-gssapi specified?
#
#AC_MSG_CHECKING(for GSSAPI library)
#AC_ARG_WITH(gssapi,
#[  --with-gssapi=PATH   Specify path for system-supplied GSSAPI],
#    use_gssapi="$withval", use_gssapi="no")
#
#case "$use_gssapi" in
#	no)
#		USE_GSSAPI=''
#		DST_GSSAPI_INC=''
#		DNS_GSSAPI_LIBS=''
#		AC_MSG_RESULT(not specified)
#		;;
#	yes)
#		AC_MSG_ERROR([--with-gssapi must specify a path])
#		;;
#	*)
#		USE_GSSAPI='-DGSSAPI'
#		DST_GSSAPI_INC="-I$use_gssapi/include"
#		DNS_GSSAPI_LIBS="-L$use_gssapi/lib -lgssapi_krb5"
#		AC_MSG_RESULT(using gssapi from $use_gssapi/lib and $use_gssapi/include)
#		;;
#esac

USE_GSSAPI=''
DST_GSSAPI_INC=''
DNS_GSSAPI_LIBS=''

AC_SUBST(USE_GSSAPI)
AC_SUBST(DST_GSSAPI_INC)
DNS_CRYPTO_LIBS="$DNS_CRYPTO_LIBS $DNS_GSSAPI_LIBS"

#
# Applications linking with libdns also need to link with these libraries.
#

AC_SUBST(DNS_CRYPTO_LIBS)

#
# was --with-randomdev specified?
#
AC_MSG_CHECKING(for random device)
AC_ARG_WITH(randomdev,
[  --with-randomdev=PATH Specify path for random device],
    use_randomdev="$withval", use_randomdev="unspec")

case "$use_randomdev" in
	unspec)
		case "$host" in
			*-openbsd*)
				devrandom=/dev/arandom
				;;
			*)
				devrandom=/dev/random
				;;
		esac
		AC_MSG_RESULT($devrandom)
		AC_CHECK_FILE($devrandom,
			      AC_DEFINE_UNQUOTED(PATH_RANDOMDEV,
						 "$devrandom"),)
		;;
	yes)
		AC_MSG_ERROR([--with-randomdev must specify a path])
		;;
	no)
		AC_MSG_RESULT(disabled)
		;;
	*)
		AC_DEFINE_UNQUOTED(PATH_RANDOMDEV, "$use_randomdev")
		AC_MSG_RESULT(using "$use_randomdev")
		;;
esac

#
# Do we have arc4random() ?
#
AC_CHECK_FUNC(arc4random, AC_DEFINE(HAVE_ARC4RANDOM))

sinclude(config.threads.in)dnl

if $use_threads
then
	if test "X$GCC" = "Xyes"; then
		case "$host" in
		*-freebsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-openbsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			LIBS="$LIBS -lthread"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		esac
	else
		case $host in
		*-dec-osf*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			CC="$CC -mt"
			CCOPT="$CCOPT -mt"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-sco-sysv*uw*|*-*-sysv*UnixWare*)
			CC="$CC -Kthread"
			CCOPT="$CCOPT -Kthread"
			;;
		*-*-sysv*OpenUNIX*)
			CC="$CC -Kpthread"
			CCOPT="$CCOPT -Kpthread"
			;;
		esac
	fi
	ALWAYS_DEFINES="-D_REENTRANT"
	ISC_PLATFORM_USETHREADS="#define ISC_PLATFORM_USETHREADS 1"
	thread_dir=pthreads
	#
	# We'd like to use sigwait() too
	#
	AC_CHECK_FUNC(sigwait,
		      AC_DEFINE(HAVE_SIGWAIT),
		      AC_CHECK_LIB(c, sigwait,
		      AC_DEFINE(HAVE_SIGWAIT),
		      AC_CHECK_LIB(pthread, sigwait,
				   AC_DEFINE(HAVE_SIGWAIT),
				   AC_CHECK_LIB(pthread, _Psigwait,
					        AC_DEFINE(HAVE_SIGWAIT),))))

	AC_CHECK_FUNC(pthread_attr_getstacksize,
		      AC_DEFINE(HAVE_PTHREAD_ATTR_GETSTACKSIZE),)

	AC_CHECK_FUNC(pthread_attr_setstacksize,
		      AC_DEFINE(HAVE_PTHREAD_ATTR_SETSTACKSIZE),)

	#
	# Additional OS-specific issues related to pthreads and sigwait.
	#
	case "$host" in
		#
		# One more place to look for sigwait.
		#
		*-freebsd*)
			AC_CHECK_LIB(c_r, sigwait, AC_DEFINE(HAVE_SIGWAIT),)
			case $host in
			*-freebsd5.[[012]]|*-freebsd5.[[012]].*);;
			*-freebsd5.[[3456789]]|*-freebsd5.[[3456789]].*)
				AC_DEFINE(NEED_PTHREAD_SCOPE_SYSTEM)
				;;
			*-freebsd6.*)
				AC_DEFINE(NEED_PTHREAD_SCOPE_SYSTEM)
				;;
			esac
			;;
		#
		# BSDI 3.0 through 4.0.1 needs pthread_init() to be
		# called before certain pthreads calls.	 This is deprecated
		# in BSD/OS 4.1.
		#
		*-bsdi3.*|*-bsdi4.0*)
			AC_DEFINE(NEED_PTHREAD_INIT)
			;;
		#
		# LinuxThreads requires some changes to the way we
		# deal with signals.
		#
		*-linux*)
			AC_DEFINE(HAVE_LINUXTHREADS)
			;;
		#
		# Ensure the right sigwait() semantics on Solaris and make
		# sure we call pthread_setconcurrency.
		#
		*-solaris*)
			AC_DEFINE(_POSIX_PTHREAD_SEMANTICS)
			AC_CHECK_FUNC(pthread_setconcurrency,
				      AC_DEFINE(CALL_PTHREAD_SETCONCURRENCY))
			;;
		#
		# UnixWare does things its own way.
		#
		*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
			AC_DEFINE(HAVE_UNIXWARE_SIGWAIT)
			;;
	esac

	#
	# Look for sysconf to allow detection of the number of processors.
	#
	AC_CHECK_FUNC(sysconf, AC_DEFINE(HAVE_SYSCONF),)

else
	ISC_PLATFORM_USETHREADS="#undef ISC_PLATFORM_USETHREADS"
	thread_dir=nothreads
	ALWAYS_DEFINES=""
fi

AC_SUBST(ALWAYS_DEFINES)
AC_SUBST(ISC_PLATFORM_USETHREADS)
ISC_THREAD_DIR=$thread_dir
AC_SUBST(ISC_THREAD_DIR)

#
# In solaris 10, SMF can manage named service
#
AC_CHECK_LIB(scf, smf_enable_instance)

#
# flockfile is usually provided by pthreads, but we may want to use it
# even if compiled with --disable-threads.  getc_unlocked might also not
# be defined.
#
AC_CHECK_FUNC(flockfile, AC_DEFINE(HAVE_FLOCKFILE),)
AC_CHECK_FUNC(getc_unlocked, AC_DEFINE(HAVE_GETCUNLOCKED),)

# 
# Indicate what the final decision was regarding threads.
#
AC_MSG_CHECKING(whether to build with threads)
if $use_threads; then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)
fi

# 
# End of pthreads stuff.
#

#
# Large File
#
AC_ARG_ENABLE(largefile, [  --enable-largefile	  64-bit file support],
	      want_largefile="yes", want_largefile="no")
case $want_largefile in
	yes)
		ALWAYS_DEFINES="$ALWAYS_DEFINES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
		;;
	*)
		;;
esac

#
# Additional compiler settings.
#
MKDEPCC="$CC"
MKDEPCFLAGS="-M"
IRIX_DNSSEC_WARNINGS_HACK=""

if test "X$GCC" = "Xyes"; then
	AC_MSG_CHECKING(if "$CC" supports -fno-strict-aliasing)
	SAVE_CFLAGS=$CFLAGS
	CFLAGS=-fno-strict-aliasing
	AC_TRY_COMPILE(,, [FNOSTRICTALIASING=yes],[FNOSTRICTALIASING=no])
	CFLAGS=$SAVE_CFLAGS
	if test "$FNOSTRICTALIASING" = "yes"; then
		AC_MSG_RESULT(yes)
	STD_CWARNINGS="$STD_CWARNINGS -W -Wall -Wmissing-prototypes -Wcast-qual -Wwrite-strings -Wformat -Wpointer-arith -fno-strict-aliasing"
	else
		AC_MSG_RESULT(no)
	STD_CWARNINGS="$STD_CWARNINGS -W -Wall -Wmissing-prototypes -Wcast-qual -Wwrite-strings -Wformat -Wpointer-arith"
	fi
	case "$host" in
	*-hp-hpux*)
		LDFLAGS="-Wl,+vnocompatwarnings $LDFLAGS"
		;;
	esac
else
	case $host in
	*-dec-osf*)
		CC="$CC -std"
		CCOPT="$CCOPT -std"
		MKDEPCC="$CC"
		;;
	*-hp-hpux*)
		CC="$CC -Ae -z"
		# The version of the C compiler that constantly warns about
                # 'const' as well as alignment issues is unfortunately not
                # able to be discerned via the version of the operating
                # system, nor does cc have a version flag.
		case "`$CC +W 123 2>&1`" in
		*Unknown?option*)
			STD_CWARNINGS="+w1"
			;;
		*)
			# Turn off the pointlessly noisy warnings.
			STD_CWARNINGS="+w1 +W 474,530,2193,2236"
			;;
		esac
		CCOPT="$CCOPT -Ae -z"
		LDFLAGS="-Wl,+vnocompatwarnings $LDFLAGS"
		MKDEPPROG='cc -Ae -E -Wp,-M >/dev/null 2>>$TMP'
		;;
	*-sgi-irix*)
		STD_CWARNINGS="-fullwarn -woff 1209"
		#
		# Silence more than 250 instances of
		#   "prototyped function redeclared without prototype"
		# and 11 instances of
		#   "variable ... was set but never used"
		# from lib/dns/sec/openssl.
		#
		IRIX_DNSSEC_WARNINGS_HACK="-woff 1692,1552"
		;;
	*-solaris*)
		MKDEPCFLAGS="-xM"
		;;
	*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
                # UnixWare
		CC="$CC -w"
		;;
	esac
fi

AC_SUBST(MKDEPCC)
AC_SUBST(MKDEPCFLAGS)
AC_SUBST(MKDEPPROG)
AC_SUBST(IRIX_DNSSEC_WARNINGS_HACK)

#
# NLS
#
AC_CHECK_FUNC(catgets, AC_DEFINE(HAVE_CATGETS),)

#
# -lxnet buys us one big porting headache...  standards, gotta love 'em.
#
# AC_CHECK_LIB(xnet, socket, ,
#    AC_CHECK_LIB(socket, socket)
#    AC_CHECK_LIB(nsl, inet_ntoa)
# )
#
# Use this for now, instead:
#
case "$host" in
	mips-sgi-irix*)
		;;
	*)
		AC_CHECK_LIB(socket, socket)
		AC_CHECK_LIB(nsl, inet_ntoa)
		;;
esac

#
# Purify support
#
AC_MSG_CHECKING(whether to use purify)
AC_ARG_WITH(purify,
	[  --with-purify[=PATH]	use Rational purify],
	use_purify="$withval", use_purify="no")

case "$use_purify" in
	no)
		;;
	yes)
		AC_PATH_PROG(purify_path, purify, purify)
		;;
	*)
		purify_path="$use_purify"
		;;
esac

case "$use_purify" in
	no)
		AC_MSG_RESULT(no)
		PURIFY=""
		;;
	*)
		if test -f $purify_path || test $purify_path = purify; then
			AC_MSG_RESULT($purify_path)
			PURIFYFLAGS="`echo $PURIFYOPTIONS`"
			PURIFY="$purify_path $PURIFYFLAGS"
		else
			AC_MSG_ERROR([$purify_path not found.

Please choose the proper path with the following command:

    configure --with-purify=PATH
])
		fi
		;;
esac

AC_SUBST(PURIFY)

#
# GNU libtool support
#
AC_ARG_WITH(libtool,
	    [  --with-libtool	use GNU libtool (following indented options supported)],
	    use_libtool="$withval", use_libtool="no")

case $use_libtool in
	yes)
		AM_PROG_LIBTOOL
		O=lo
		A=la
		LIBTOOL_MKDEP_SED='s;\.o;\.lo;'
		LIBTOOL_MODE_COMPILE='--mode=compile'
		LIBTOOL_MODE_INSTALL='--mode=install'
		LIBTOOL_MODE_LINK='--mode=link'
		case "$host" in
		*) LIBTOOL_ALLOW_UNDEFINED= ;;
		esac
		case "$host" in
		*-ibm-aix*) LIBTOOL_IN_MAIN="-Wl,-bI:T_testlist.imp" ;;
		*) LIBTOOL_IN_MAIN= ;;
		esac;
		;;
	*)
		O=o
		A=a
		LIBTOOL=
		AC_SUBST(LIBTOOL)
		LIBTOOL_MKDEP_SED=
		LIBTOOL_MODE_COMPILE=
		LIBTOOL_MODE_INSTALL=
		LIBTOOL_MODE_LINK=
		LIBTOOL_ALLOW_UNDEFINED=
		LIBTOOL_IN_MAIN=
		;;
esac

#
# File name extension for static archive files, for those few places
# where they are treated differently from dynamic ones.
#
SA=a

AC_SUBST(O)
AC_SUBST(A)
AC_SUBST(SA)
AC_SUBST(LIBTOOL_MKDEP_SED)
AC_SUBST(LIBTOOL_MODE_COMPILE)
AC_SUBST(LIBTOOL_MODE_INSTALL)
AC_SUBST(LIBTOOL_MODE_LINK)
AC_SUBST(LIBTOOL_ALLOW_UNDEFINED)
AC_SUBST(LIBTOOL_IN_MAIN)

#
# build libbind?
#
AC_ARG_ENABLE(libbind,
	[  --enable-libbind		build libbind [default=no]])

case "$enable_libbind" in
	yes)
		LIBBIND=lib/bind
		AC_SUBST(LIBBIND)
		;;
	no|'')
		;;
esac


#
# Here begins a very long section to determine the system's networking
# capabilities.  The order of the tests is signficant.
#

#
# IPv6
#
AC_ARG_ENABLE(ipv6,
	[  --enable-ipv6		use IPv6 [default=autodetect]])

case "$enable_ipv6" in
	yes|''|autodetect)
		AC_DEFINE(WANT_IPV6)
		;;
	no)
		;;
esac

#
# We do the IPv6 compilation checking after libtool so that we can put
# the right suffix on the files.
#
AC_MSG_CHECKING(for IPv6 structures)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>],
[struct sockaddr_in6 sin6; return (0);],
	[AC_MSG_RESULT(yes)
	 found_ipv6=yes],
	[AC_MSG_RESULT(no)
	 found_ipv6=no])

#
# See whether IPv6 support is provided via a Kame add-on.
# This is done before other IPv6 linking tests to LIBS is properly set.
#
AC_MSG_CHECKING(for Kame IPv6 support)
AC_ARG_WITH(kame,
	[  --with-kame[=PATH]	use Kame IPv6 [default path /usr/local/v6]],
	use_kame="$withval", use_kame="no")

case "$use_kame" in
	no)
		;;
	yes)
		kame_path=/usr/local/v6
		;;
	*)
		kame_path="$use_kame"
		;;
esac

case "$use_kame" in
	no)
		AC_MSG_RESULT(no)
		;;
	*)
		if test -f $kame_path/lib/libinet6.a; then
			AC_MSG_RESULT($kame_path/lib/libinet6.a)
			LIBS="-L$kame_path/lib -linet6 $LIBS"
		else
			AC_MSG_ERROR([$kame_path/lib/libinet6.a not found.

Please choose the proper path with the following command:

    configure --with-kame=PATH
])
		fi
		;;
esac

#
# Whether netinet6/in6.h is needed has to be defined in isc/platform.h.
# Including it on Kame-using platforms is very bad, though, because
# Kame uses #error against direct inclusion.   So include it on only
# the platform that is otherwise broken without it -- BSD/OS 4.0 through 4.1.
# This is done before the in6_pktinfo check because that's what
# netinet6/in6.h is needed for.
#
changequote({, })
case "$host" in
*-bsdi4.[01]*)
	ISC_PLATFORM_NEEDNETINET6IN6H="#define ISC_PLATFORM_NEEDNETINET6IN6H 1"
	LWRES_PLATFORM_NEEDNETINET6IN6H="#define LWRES_PLATFORM_NEEDNETINET6IN6H 1"
	isc_netinet6in6_hack="#include <netinet6/in6.h>"
	;;
*)
	ISC_PLATFORM_NEEDNETINET6IN6H="#undef ISC_PLATFORM_NEEDNETINET6IN6H"
	LWRES_PLATFORM_NEEDNETINET6IN6H="#undef LWRES_PLATFORM_NEEDNETINET6IN6H"
	isc_netinet6in6_hack=""
	;;
esac
changequote([, ])

#
# This is similar to the netinet6/in6.h issue.
#
case "$host" in
*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
        # UnixWare
	ISC_PLATFORM_NEEDNETINETIN6H="#define ISC_PLATFORM_NEEDNETINETIN6H 1"
	LWRES_PLATFORM_NEEDNETINETIN6H="#define LWRES_PLATFORM_NEEDNETINETIN6H 1"
        ISC_PLATFORM_FIXIN6ISADDR="#define ISC_PLATFORM_FIXIN6ISADDR 1"
	isc_netinetin6_hack="#include <netinet/in6.h>"
	;;
*)
	ISC_PLATFORM_NEEDNETINETIN6H="#undef ISC_PLATFORM_NEEDNETINETIN6H"
	LWRES_PLATFORM_NEEDNETINETIN6H="#undef LWRES_PLATFORM_NEEDNETINETIN6H"
        ISC_PLATFORM_FIXIN6ISADDR="#undef ISC_PLATFORM_FIXIN6ISADDR"
	isc_netinetin6_hack=""
	;;
esac

#
# Now delve deeper into the suitability of the IPv6 support.
#
case "$found_ipv6" in
	yes)
		ISC_PLATFORM_HAVEIPV6="#define ISC_PLATFORM_HAVEIPV6 1"
		LWRES_PLATFORM_HAVEIPV6="#define LWRES_PLATFORM_HAVEIPV6 1"

		AC_MSG_CHECKING(for in6_addr)
		AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
$isc_netinetin6_hack
$isc_netinet6in6_hack
],
[struct in6_addr in6; return (0);],
		[AC_MSG_RESULT(yes)
		 ISC_PLATFORM_HAVEINADDR6="#undef ISC_PLATFORM_HAVEINADDR6"
		 LWRES_PLATFORM_HAVEINADDR6="#undef LWRES_PLATFORM_HAVEINADDR6"
		 isc_in_addr6_hack=""],
		[AC_MSG_RESULT(no)
		 ISC_PLATFORM_HAVEINADDR6="#define ISC_PLATFORM_HAVEINADDR6 1"
		 LWRES_PLATFORM_HAVEINADDR6="#define LWRES_PLATFORM_HAVEINADDR6 1"
		 isc_in_addr6_hack="#define in6_addr in_addr6"])

		AC_MSG_CHECKING(for in6addr_any)
		AC_TRY_LINK([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
$isc_netinetin6_hack
$isc_netinet6in6_hack
$isc_in_addr6_hack
],
		[struct in6_addr in6; in6 = in6addr_any; return (in6.s6_addr[0]);],
			[AC_MSG_RESULT(yes)
			 ISC_PLATFORM_NEEDIN6ADDRANY="#undef ISC_PLATFORM_NEEDIN6ADDRANY"
			 LWRES_PLATFORM_NEEDIN6ADDRANY="#undef LWRES_PLATFORM_NEEDIN6ADDRANY"],
			[AC_MSG_RESULT(no)
			 ISC_PLATFORM_NEEDIN6ADDRANY="#define ISC_PLATFORM_NEEDIN6ADDRANY 1"
			 LWRES_PLATFORM_NEEDIN6ADDRANY="#define LWRES_PLATFORM_NEEDIN6ADDRANY 1"])

		AC_MSG_CHECKING(for in6addr_loopback)
		AC_TRY_LINK([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
$isc_netinetin6_hack
$isc_netinet6in6_hack
$isc_in_addr6_hack
],
		[struct in6_addr in6; in6 = in6addr_loopback; return (in6.s6_addr[0]);],
			[AC_MSG_RESULT(yes)
			 ISC_PLATFORM_NEEDIN6ADDRLOOPBACK="#undef ISC_PLATFORM_NEEDIN6ADDRLOOPBACK"
			 LWRES_PLATFORM_NEEDIN6ADDRLOOPBACK="#undef LWRES_PLATFORM_NEEDIN6ADDRLOOPBACK"],
			[AC_MSG_RESULT(no)
			 ISC_PLATFORM_NEEDIN6ADDRLOOPBACK="#define ISC_PLATFORM_NEEDIN6ADDRLOOPBACK 1"
			 LWRES_PLATFORM_NEEDIN6ADDRLOOPBACK="#define LWRES_PLATFORM_NEEDIN6ADDRLOOPBACK 1"])

		AC_MSG_CHECKING(for sin6_scope_id in struct sockaddr_in6)
		AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
$isc_netinetin6_hack
$isc_netinet6in6_hack
],
		[struct sockaddr_in6 xyzzy; xyzzy.sin6_scope_id = 0; return (0);],
			[AC_MSG_RESULT(yes)
			 ISC_PLATFORM_HAVESCOPEID="#define ISC_PLATFORM_HAVESCOPEID 1"
			 result="#define LWRES_HAVE_SIN6_SCOPE_ID 1"],
			[AC_MSG_RESULT(no)
			 ISC_PLATFORM_HAVESCOPEID="#undef ISC_PLATFORM_HAVESCOPEID"
			 result="#undef LWRES_HAVE_SIN6_SCOPE_ID"])
		LWRES_HAVE_SIN6_SCOPE_ID="$result"

		AC_MSG_CHECKING(for in6_pktinfo)
		AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
$isc_netinetin6_hack
$isc_netinet6in6_hack
],
		[struct in6_pktinfo xyzzy; return (0);],
			[AC_MSG_RESULT(yes)
			 ISC_PLATFORM_HAVEIN6PKTINFO="#define ISC_PLATFORM_HAVEIN6PKTINFO 1"],
			[AC_MSG_RESULT(no -- disabling runtime ipv6 support)
			 ISC_PLATFORM_HAVEIN6PKTINFO="#undef ISC_PLATFORM_HAVEIN6PKTINFO"])
		;;
	no)
		ISC_PLATFORM_HAVEIPV6="#undef ISC_PLATFORM_HAVEIPV6"
		LWRES_PLATFORM_HAVEIPV6="#undef LWRES_PLATFORM_HAVEIPV6"
		ISC_PLATFORM_NEEDIN6ADDRANY="#undef ISC_PLATFORM_NEEDIN6ADDRANY"
		LWRES_PLATFORM_NEEDIN6ADDRANY="#undef LWRES_PLATFORM_NEEDIN6ADDRANY"
		ISC_PLATFORM_HAVEIN6PKTINFO="#undef ISC_PLATFORM_HAVEIN6PKTINFO"
		LWRES_HAVE_SIN6_SCOPE_ID="#define LWRES_HAVE_SIN6_SCOPE_ID 1"
		ISC_PLATFORM_HAVESCOPEID="#define ISC_PLATFORM_HAVESCOPEID 1"
		ISC_IPV6_H="ipv6.h"
		ISC_IPV6_O="ipv6.$O"
		ISC_ISCIPV6_O="unix/ipv6.$O"
		ISC_IPV6_C="ipv6.c"
		;;
esac

AC_SUBST(ISC_PLATFORM_HAVEIPV6)
AC_SUBST(LWRES_PLATFORM_HAVEIPV6)
AC_SUBST(ISC_PLATFORM_NEEDNETINETIN6H)
AC_SUBST(LWRES_PLATFORM_NEEDNETINETIN6H)
AC_SUBST(ISC_PLATFORM_NEEDNETINET6IN6H)
AC_SUBST(LWRES_PLATFORM_NEEDNETINET6IN6H)
AC_SUBST(ISC_PLATFORM_HAVEINADDR6)
AC_SUBST(LWRES_PLATFORM_HAVEINADDR6)
AC_SUBST(ISC_PLATFORM_NEEDIN6ADDRANY)
AC_SUBST(LWRES_PLATFORM_NEEDIN6ADDRANY)
AC_SUBST(ISC_PLATFORM_NEEDIN6ADDRLOOPBACK)
AC_SUBST(LWRES_PLATFORM_NEEDIN6ADDRLOOPBACK)
AC_SUBST(ISC_PLATFORM_HAVEIN6PKTINFO)
AC_SUBST(ISC_PLATFORM_FIXIN6ISADDR)
AC_SUBST(ISC_IPV6_H)
AC_SUBST(ISC_IPV6_O)
AC_SUBST(ISC_ISCIPV6_O)
AC_SUBST(ISC_IPV6_C)
AC_SUBST(LWRES_HAVE_SIN6_SCOPE_ID)
AC_SUBST(ISC_PLATFORM_HAVESCOPEID)

AC_MSG_CHECKING([for struct if_laddrreq])
AC_TRY_LINK([
#include <sys/types.h>
#include <net/if6.h>
],[ struct if_laddrreq a; ],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_HAVEIF_LADDRREQ="#define ISC_PLATFORM_HAVEIF_LADDRREQ 1"],
	[AC_MSG_RESULT(no)
	ISC_PLATFORM_HAVEIF_LADDRREQ="#undef ISC_PLATFORM_HAVEIF_LADDRREQ"])
AC_SUBST(ISC_PLATFORM_HAVEIF_LADDRREQ)

AC_MSG_CHECKING([for struct if_laddrconf])
AC_TRY_LINK([
#include <sys/types.h>
#include <net/if6.h>
],[ struct if_laddrconf a; ],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_HAVEIF_LADDRCONF="#define ISC_PLATFORM_HAVEIF_LADDRCONF 1"],
	[AC_MSG_RESULT(no)
	ISC_PLATFORM_HAVEIF_LADDRCONF="#undef ISC_PLATFORM_HAVEIF_LADDRCONF"])
AC_SUBST(ISC_PLATFORM_HAVEIF_LADDRCONF)

#
# Check for network functions that are often missing.  We do this
# after the libtool checking, so we can put the right suffix on
# the files.  It also needs to come after checking for a Kame add-on,
# which provides some (all?) of the desired functions.
#

AC_MSG_CHECKING([for inet_ntop with IPv6 support])
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
main() {
char a[16],b[64]; return(inet_ntop(AF_INET6, a, b, sizeof(b)) == (char*)0);}],
        [AC_MSG_RESULT(yes)
        ISC_PLATFORM_NEEDNTOP="#undef ISC_PLATFORM_NEEDNTOP"],

        [AC_MSG_RESULT(no)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_ntop.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_ntop.c"
        ISC_PLATFORM_NEEDNTOP="#define ISC_PLATFORM_NEEDNTOP 1"],
        [AC_MSG_RESULT(assuming inet_ntop needed)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_ntop.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_ntop.c"
        ISC_PLATFORM_NEEDNTOP="#define ISC_PLATFORM_NEEDNTOP 1"])


# On NetBSD 1.4.2 and maybe others, inet_pton() incorrectly accepts
# addresses with less than four octets, like "1.2.3".  Also leading
# zeros should also be rejected.

AC_MSG_CHECKING([for working inet_pton with IPv6 support])
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
main() { char a[16]; return (inet_pton(AF_INET, "1.2.3", a) == 1 ? 1 :
			     inet_pton(AF_INET, "1.2.3.04", a) == 1 ? 1 : 
			     (inet_pton(AF_INET6, "::1.2.3.4", a) != 1)); }],
        [AC_MSG_RESULT(yes)
        ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"],
        [AC_MSG_RESULT(no)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_pton.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_pton.c"
        ISC_PLATFORM_NEEDPTON="#define ISC_PLATFORM_NEEDPTON 1"],
	[AC_MSG_RESULT(assuming target platform has working inet_pton)
	ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"],
        [AC_MSG_RESULT(assuming inet_pton needed)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_pton.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_pton.c"
        ISC_PLATFORM_NEEDPTON="#define ISC_PLATFORM_NEEDPTON 1"],
        [AC_MSG_RESULT(assuming target platform has working inet_pton)
        ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"])

AC_MSG_CHECKING([for inet_aton])
AC_TRY_LINK([
#include <sys/types.h>
#include <netinet/in.h>
#include <arpa/inet.h>],
        [struct in_addr in; inet_aton(0, &in); return (0);],
        [AC_MSG_RESULT(yes)
        ISC_PLATFORM_NEEDATON="#undef ISC_PLATFORM_NEEDATON"],

        [AC_MSG_RESULT(no)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_aton.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_aton.c"
        ISC_PLATFORM_NEEDATON="#define ISC_PLATFORM_NEEDATON 1"])

AC_SUBST(ISC_PLATFORM_NEEDNTOP)
AC_SUBST(ISC_PLATFORM_NEEDPTON)
AC_SUBST(ISC_PLATFORM_NEEDATON)

#
# Look for a 4.4BSD-style sa_len member in struct sockaddr.
#
case "$host" in
	*-dec-osf*)
		# Turn on 4.4BSD style sa_len support.
		AC_DEFINE(_SOCKADDR_LEN)
		;;
esac

AC_MSG_CHECKING(for sa_len in struct sockaddr)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>],
[struct sockaddr sa; sa.sa_len = 0; return (0);],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_HAVESALEN="#define ISC_PLATFORM_HAVESALEN 1"
	LWRES_PLATFORM_HAVESALEN="#define LWRES_PLATFORM_HAVESALEN 1"],
	[AC_MSG_RESULT(no)
	ISC_PLATFORM_HAVESALEN="#undef ISC_PLATFORM_HAVESALEN"
	LWRES_PLATFORM_HAVESALEN="#undef LWRES_PLATFORM_HAVESALEN"])
AC_SUBST(ISC_PLATFORM_HAVESALEN)
AC_SUBST(LWRES_PLATFORM_HAVESALEN)

#
# Look for a 4.4BSD or 4.3BSD struct msghdr
#
AC_MSG_CHECKING(for struct msghdr flavor)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>],
[struct msghdr msg; msg.msg_flags = 0; return (0);],
	[AC_MSG_RESULT(4.4BSD)
	ISC_PLATFORM_MSGHDRFLAVOR="#define ISC_NET_BSD44MSGHDR 1"],
	[AC_MSG_RESULT(4.3BSD)
	ISC_PLATFORM_MSGHDRFLAVOR="#define ISC_NET_BSD43MSGHDR 1"])
AC_SUBST(ISC_PLATFORM_MSGHDRFLAVOR)

#
# Look for in_port_t.
#
AC_MSG_CHECKING(for type in_port_t)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <netinet/in.h>],
[in_port_t port = 25; return (0);],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_NEEDPORTT="#undef ISC_PLATFORM_NEEDPORTT"],
        [AC_MSG_RESULT(no)
	ISC_PLATFORM_NEEDPORTT="#define ISC_PLATFORM_NEEDPORTT 1"])
AC_SUBST(ISC_PLATFORM_NEEDPORTT)

#
# Check for addrinfo
#
AC_MSG_CHECKING(for struct addrinfo)
AC_TRY_COMPILE([
#include <netdb.h>],
[struct addrinfo a; return (0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_NEEDADDRINFO="#undef ISC_LWRES_NEEDADDRINFO"
	AC_DEFINE(HAVE_ADDRINFO)],
	[AC_MSG_RESULT(no)
	ISC_LWRES_NEEDADDRINFO="#define ISC_LWRES_NEEDADDRINFO 1"])
AC_SUBST(ISC_LWRES_NEEDADDRINFO)

#
# Check for rrsetinfo
#
AC_MSG_CHECKING(for struct rrsetinfo)
AC_TRY_COMPILE([
#include <netdb.h>],
[struct rrsetinfo r; return (0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_NEEDRRSETINFO="#undef ISC_LWRES_NEEDRRSETINFO"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_NEEDRRSETINFO="#define ISC_LWRES_NEEDRRSETINFO 1"])
AC_SUBST(ISC_LWRES_NEEDRRSETINFO)

AC_MSG_CHECKING(for int sethostent)
AC_TRY_COMPILE([
#include <netdb.h>],
[int i = sethostent(0); return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_SETHOSTENTINT="#define ISC_LWRES_SETHOSTENTINT 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_SETHOSTENTINT="#undef ISC_LWRES_SETHOSTENTINT"])
AC_SUBST(ISC_LWRES_SETHOSTENTINT)

AC_MSG_CHECKING(for int endhostent)
AC_TRY_COMPILE([
#include <netdb.h>],
[int i = endhostent(); return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_ENDHOSTENTINT="#define ISC_LWRES_ENDHOSTENTINT 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_ENDHOSTENTINT="#undef ISC_LWRES_ENDHOSTENTINT"])
AC_SUBST(ISC_LWRES_ENDHOSTENTINT)

AC_MSG_CHECKING(for getnetbyaddr(in_addr_t, ...))
AC_TRY_COMPILE([
#include <netdb.h>
struct netent *getnetbyaddr(in_addr_t, int);],
[],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_GETNETBYADDRINADDR="#define ISC_LWRES_GETNETBYADDRINADDR 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_GETNETBYADDRINADDR="#undef ISC_LWRES_GETNETBYADDRINADDR"])
AC_SUBST(ISC_LWRES_GETNETBYADDRINADDR)

AC_MSG_CHECKING(for int setnetent)
AC_TRY_COMPILE([
#include <netdb.h>],
[int i = setnetent(0); return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_SETNETENTINT="#define ISC_LWRES_SETNETENTINT 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_SETNETENTINT="#undef ISC_LWRES_SETNETENTINT"])
AC_SUBST(ISC_LWRES_SETNETENTINT)

AC_MSG_CHECKING(for int endnetent)
AC_TRY_COMPILE([
#include <netdb.h>],
[int i = endnetent(); return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_ENDNETENTINT="#define ISC_LWRES_ENDNETENTINT 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_ENDNETENTINT="#undef ISC_LWRES_ENDNETENTINT"])
AC_SUBST(ISC_LWRES_ENDNETENTINT)

AC_MSG_CHECKING(for gethostbyaddr(const void *, size_t, ...))
AC_TRY_COMPILE([
#include <netdb.h>
struct hostent *gethostbyaddr(const void *, size_t, int);],
[return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_GETHOSTBYADDRVOID="#define ISC_LWRES_GETHOSTBYADDRVOID 1"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_GETHOSTBYADDRVOID="#undef ISC_LWRES_GETHOSTBYADDRVOID"])
AC_SUBST(ISC_LWRES_GETHOSTBYADDRVOID)

AC_MSG_CHECKING(for h_errno in netdb.h)
AC_TRY_COMPILE([
#include <netdb.h>],
[h_errno = 1; return(0);],
	[AC_MSG_RESULT(yes)
	ISC_LWRES_NEEDHERRNO="#undef ISC_LWRES_NEEDHERRNO"],
	[AC_MSG_RESULT(no)
	ISC_LWRES_NEEDHERRNO="#define ISC_LWRES_NEEDHERRNO 1"])
AC_SUBST(ISC_LWRES_NEEDHERRNO)

AC_CHECK_FUNC(getipnodebyname,
        [ISC_LWRES_GETIPNODEPROTO="#undef ISC_LWRES_GETIPNODEPROTO"],
        [ISC_LWRES_GETIPNODEPROTO="#define ISC_LWRES_GETIPNODEPROTO 1"])
AC_CHECK_FUNC(getnameinfo,
        [ISC_LWRES_GETNAMEINFOPROTO="#undef ISC_LWRES_GETNAMEINFOPROTO"],
        [ISC_LWRES_GETNAMEINFOPROTO="#define ISC_LWRES_GETNAMEINFOPROTO 1"])
AC_CHECK_FUNC(getaddrinfo,
        [ISC_LWRES_GETADDRINFOPROTO="#undef ISC_LWRES_GETADDRINFOPROTO"
	AC_DEFINE(HAVE_GETADDRINFO)],
        [ISC_LWRES_GETADDRINFOPROTO="#define ISC_LWRES_GETADDRINFOPROTO 1"])
AC_CHECK_FUNC(gai_strerror, AC_DEFINE(HAVE_GAISTRERROR))
AC_SUBST(ISC_LWRES_GETIPNODEPROTO)
AC_SUBST(ISC_LWRES_GETADDRINFOPROTO)
AC_SUBST(ISC_LWRES_GETNAMEINFOPROTO)

AC_ARG_ENABLE(getifaddrs,
[  --enable-getifaddrs    Enable the use of getifaddrs() [[yes|no|glibc]].
             glibc: Use getifaddrs() in glibc if you know it supports IPv6.],
    want_getifaddrs="$enableval",  want_getifaddrs="yes")

case $want_getifaddrs in
yes|glibc)
#
# Do we have getifaddrs() ?
#
case $host in
*-linux*)
	# Some recent versions of glibc support getifaddrs() which does not
	# provide AF_INET6 addresses while the function provided by the USAGI
	# project handles the AF_INET6 case correctly.  We need to avoid
	# using the former but prefer the latter unless overridden by
	# --enable-getifaddrs=glibc.
	if test $want_getifaddrs = glibc
	then
		AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
	else
		save_LIBS="$LIBS"
		LIBS="-L/usr/local/v6/lib $LIBS"
		AC_CHECK_LIB(inet6, getifaddrs,
			LIBS="$LIBS -linet6"
			AC_DEFINE(HAVE_GETIFADDRS),
			LIBS=${save_LIBS})
	fi
	;;
*)
	AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
	;;
esac
;;
no)
;;
esac

#
# Look for a sysctl call to get the list of network interfaces.
#
case $ac_cv_header_sys_sysctl_h in
yes)
AC_MSG_CHECKING(for interface list sysctl)
AC_EGREP_CPP(found_rt_iflist, [
#include <sys/param.h>
#include <sys/sysctl.h>
#include <sys/socket.h>
#ifdef NET_RT_IFLIST
found_rt_iflist
#endif
],
	[AC_MSG_RESULT(yes)
	 AC_DEFINE(HAVE_IFLIST_SYSCTL)],
	[AC_MSG_RESULT(no)])
;;
esac

#
# Check for some other useful functions that are not ever-present.
#

# We test for strsep() using AC_TRY_LINK instead of AC_CHECK_FUNC
# because AIX 4.3.3 with patches for bos.adt.include to version 4.3.3.77
# reportedly defines strsep() without declaring it in <string.h> when
# -D_LINUX_SOURCE_COMPAT is not defined [RT #2190], and
# AC_CHECK_FUNC() incorrectly succeeds because it declares
# the function itself.
AC_MSG_CHECKING(for correctly declared strsep())
AC_TRY_LINK([#include <string.h>], [char *sp; char *foo = strsep(&sp, ".");],
	[AC_MSG_RESULT(yes); ISC_PLATFORM_NEEDSTRSEP="#undef ISC_PLATFORM_NEEDSTRSEP"],
	[AC_MSG_RESULT(no); ISC_PLATFORM_NEEDSTRSEP="#define ISC_PLATFORM_NEEDSTRSEP 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRSEP)

AC_CHECK_FUNC(memmove,
	[ISC_PLATFORM_NEEDMEMMOVE="#undef ISC_PLATFORM_NEEDMEMMOVE"],
	[ISC_PLATFORM_NEEDMEMMOVE="#define ISC_PLATFORM_NEEDMEMMOVE 1"])
AC_SUBST(ISC_PLATFORM_NEEDMEMMOVE)

AC_CHECK_FUNC(strtoul,
	[ISC_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"
	 LWRES_PLATFORM_NEEDSTRTOUL="#undef LWRES_PLATFORM_NEEDSTRTOUL"
	 GENRANDOMLIB=""],
	[ISC_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"
	 LWRES_PLATFORM_NEEDSTRTOUL="#define LWRES_PLATFORM_NEEDSTRTOUL 1"
	 GENRANDOMLIB='${ISCLIBS}'])
AC_SUBST(ISC_PLATFORM_NEEDSTRTOUL)
AC_SUBST(LWRES_PLATFORM_NEEDSTRTOUL)
AC_SUBST(GENRANDOMLIB)

AC_CHECK_FUNC(strlcpy,
	[ISC_PLATFORM_NEEDSTRLCPY="#undef ISC_PLATFORM_NEEDSTRLCPY"],
	[ISC_PLATFORM_NEEDSTRLCPY="#define ISC_PLATFORM_NEEDSTRLCPY 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRLCPY)

AC_CHECK_FUNC(strlcat,
	[ISC_PLATFORM_NEEDSTRLCAT="#undef ISC_PLATFORM_NEEDSTRLCAT"],
	[ISC_PLATFORM_NEEDSTRLCAT="#define ISC_PLATFORM_NEEDSTRLCAT 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRLCAT)

ISC_PRINT_OBJS=
ISC_PRINT_SRCS=
AC_MSG_CHECKING(sprintf)
AC_TRY_COMPILE([
#include <stdio.h>
],
[ char buf[2]; return(*sprintf(buf,"x"));],
[
ISC_PRINT_OBJS="print.$O"
ISC_PRINT_SRCS="print.c"
ISC_PLATFORM_NEEDSPRINTF="#define ISC_PLATFORM_NEEDSPRINTF"
LWRES_PLATFORM_NEEDSPRINTF="#define LWRES_PLATFORM_NEEDSPRINTF"
],
[ISC_PLATFORM_NEEDSPRINTF="#undef ISC_PLATFORM_NEEDSPRINTF"
 LWRES_PLATFORM_NEEDSPRINTF="#undef LWRES_PLATFORM_NEEDSPRINTF"]
)
AC_SUBST(ISC_PLATFORM_NEEDSPRINTF)
AC_SUBST(LWRES_PLATFORM_NEEDSPRINTF)

AC_CHECK_FUNC(vsnprintf,
	[ISC_PLATFORM_NEEDVSNPRINTF="#undef ISC_PLATFORM_NEEDVSNPRINTF"
	 LWRES_PLATFORM_NEEDVSNPRINTF="#undef LWRES_PLATFORM_NEEDVSNPRINTF"],
	[ISC_PRINT_OBJS="print.$O"
	 ISC_PRINT_SRCS="print.c"
	 ISC_PLATFORM_NEEDVSNPRINTF="#define ISC_PLATFORM_NEEDVSNPRINTF 1"
	 LWRES_PLATFORM_NEEDVSNPRINTF="#define LWRES_PLATFORM_NEEDVSNPRINTF 1"])
AC_SUBST(ISC_PLATFORM_NEEDVSNPRINTF)
AC_SUBST(LWRES_PLATFORM_NEEDVSNPRINTF)
ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS $ISC_PRINT_OBJS"
ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS $ISC_PRINT_SRCS"

AC_CHECK_FUNC(strerror, AC_DEFINE(HAVE_STRERROR))

AC_SUBST(ISC_EXTRA_OBJS)
AC_SUBST(ISC_EXTRA_SRCS)

# Determine the printf format characters to use when printing
# values of type isc_int64_t. This will normally be "ll", but where
# the compiler treats "long long" as a alias for "long" and printf
# doesn't know about "long long" use "l".  Hopefully the sprintf
# will produce a inconsistant result in the later case.  If the compiler
# fails due to seeing "%lld" we fall back to "l".
#
# Digital Unix 4.0 (gcc?) (long long) is 64 bits as is its long. It uses
# %ld even for (long long)/
#
# Win32 uses "%I64d", but that's defined elsewhere since we don't use
# configure on Win32.
#
AC_MSG_CHECKING(printf format modifier for 64-bit integers)
AC_TRY_RUN([
#include <stdio.h>
main() {
	long long int j = 0;
	char buf[100];
	buf[0] = 0;
	sprintf(buf, "%lld", j);
	exit((sizeof(long long int) != sizeof(long int))? 0 :
	     (strcmp(buf, "0") != 0));
} 
],
	[AC_MSG_RESULT(ll)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "ll"'],
	[AC_MSG_RESULT(l)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "l"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "l"'],
	[AC_MSG_RESULT(assuming target platform uses ll)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "ll"'])
AC_SUBST(ISC_PLATFORM_QUADFORMAT)
AC_SUBST(LWRES_PLATFORM_QUADFORMAT)

#
# Security Stuff
#
AC_CHECK_FUNC(chroot, AC_DEFINE(HAVE_CHROOT))
AC_ARG_ENABLE(linux-caps,
	[  --disable-linux-caps	disable linux capabilities])
case "$enable_linux_caps" in
	yes|'')
		AC_CHECK_HEADERS(linux/capability.h)
		;;
	no)
		;;
esac
AC_CHECK_HEADERS(sys/prctl.h)

AC_CHECK_HEADERS(sys/un.h,
ISC_PLATFORM_HAVESYSUNH="#define ISC_PLATFORM_HAVESYSUNH 1"
,
ISC_PLATFORM_HAVESYSUNH="#undef ISC_PLATFORM_HAVESYSUNH"
)
AC_SUBST(ISC_PLATFORM_HAVESYSUNH)

case "$host" in
*-solaris*)
	AC_DEFINE(NEED_SECURE_DIRECTORY, 1,
		  [Define if connect does not honour the permission on the UNIX domain socket.])
	;;
*-sunos*)
	AC_DEFINE(NEED_SECURE_DIRECTORY, 1,
		  [Define if connect does not honour the permission on the UNIX domain socket.])
	;;
esac

#
# Time Zone Stuff
#
AC_CHECK_FUNC(tzset, AC_DEFINE(HAVE_TZSET))

AC_MSG_CHECKING(for optarg decarartion)
AC_TRY_COMPILE([
#include <unistd.h>
],
[optarg = 0;],
[AC_MSG_RESULT(yes)],
[AC_MSG_RESULT(no)
GEN_NEED_OPTARG="-DNEED_OPTARG=1"
AC_DEFINE(NEED_OPTARG, 1, [Defined if extern char *optarg is not declared.])])

#
# BSD/OS, and perhaps some others, don't define rlim_t.
#
AC_MSG_CHECKING(for type rlim_t)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>],
[rlim_t rl = 19671212; return (0);],
[AC_MSG_RESULT(yes)
 ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE rlim_t"],
[AC_MSG_RESULT(no)

AC_MSG_CHECKING(type of rlim_cur)
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
main() { struct rlimit r; exit(!(sizeof(r.rlim_cur) == sizeof(int)));}],
[AC_MSG_RESULT(int)
ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE int"],
[
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
main() { struct rlimit r; exit(!(sizeof(r.rlim_cur) == sizeof(long int)));}],
[AC_MSG_RESULT(long int)
ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE long int"],
[
AC_TRY_RUN([
#include <sys/types.h>
#include <sys/time.h>
#include <sys/resource.h>
main() { struct rlimit r; exit((!sizeof(r.rlim_cur) == sizeof(long long int)));}],
[AC_MSG_RESULT(long long int)
ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE long long int"],
[AC_MSG_ERROR([unable to determine sizeof rlim_cur])
],[AC_MSG_ERROR(this cannot happen)])
],[AC_MSG_ERROR(this cannot happen)])
],[
ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE long long int"
AC_MSG_RESULT(cannot determine type of rlim_cur when cross compiling - assuming long long int)])
])
AC_SUBST(ISC_PLATFORM_RLIMITTYPE)

#
# Compaq TruCluster requires more code for handling cluster IP aliases
#
case "$host" in
	*-dec-osf*)
		AC_CHECK_LIB(clua, clua_getaliasaddress, LIBS="-lclua $LIBS")
		AC_CHECK_FUNC(clua_getaliasaddress,
				AC_DEFINE(HAVE_TRUCLUSTER, 1,
					[Define if running under Compaq TruCluster]))
		;;
	*)
		;;
esac

#
# Some hosts need msg_namelen to match the size of the socket structure.
# Some hosts don't set msg_namelen appropriately on return from recvmsg().
#
case $host in
*os2*|*hp-mpeix*)
	AC_DEFINE(BROKEN_RECVMSG, 1,
		  [Define if recvmsg() does not meet all of the BSD socket API specifications.])
	;;
esac

#
# Microsoft has their own way of handling shared libraries that requires
# additional qualifiers on extern variables.  Unix systems don't need it.
#
AC_SUBST(ISC_PLATFORM_USEDECLSPEC)
ISC_PLATFORM_USEDECLSPEC="#undef ISC_PLATFORM_USEDECLSPEC"
AC_SUBST(LWRES_PLATFORM_USEDECLSPEC)
LWRES_PLATFORM_USEDECLSPEC="#undef LWRES_PLATFORM_USEDECLSPEC"

#
# Random remaining OS-specific issues involving compiler warnings.
# XXXDCL print messages to indicate some compensation is being done?
#
AC_SUBST(ISC_PLATFORM_BRACEPTHREADONCEINIT)
ISC_PLATFORM_BRACEPTHREADONCEINIT="#undef ISC_PLATFORM_BRACEPTHREADONCEINIT"

case "$host" in
	*-aix5.[[123]].*)
		hack_shutup_pthreadonceinit=yes
		;;
	*-bsdi3.1*)
		hack_shutup_sputaux=yes
		;;
	*-bsdi4.0*)
		hack_shutup_sigwait=yes
		hack_shutup_sputaux=yes
		;;
	[*-bsdi4.[12]*])
		hack_shutup_stdargcast=yes
		;;
	[*-solaris2.[89]])
		hack_shutup_pthreadonceinit=yes
		;;
	*-solaris2.1[0-9])
		hack_shutup_pthreadonceinit=yes
		;;
esac

case "$hack_shutup_pthreadonceinit" in
	yes)
		#
		# Shut up PTHREAD_ONCE_INIT unbraced initializer warnings.
		#
		ISC_PLATFORM_BRACEPTHREADONCEINIT="#define ISC_PLATFORM_BRACEPTHREADONCEINIT 1"
		;;
esac

case "$hack_shutup_sigwait" in
	yes)
		#
		# Shut up a -Wmissing-prototypes warning for sigwait().
		#
		AC_DEFINE(SHUTUP_SIGWAIT)
		;;
esac

case "$hack_shutup_sputaux" in
	yes)
		#
		# Shut up a -Wmissing-prototypes warning from <stdio.h>.
		#
		AC_DEFINE(SHUTUP_SPUTAUX)
		;;
esac

case "$hack_shutup_stdargcast" in
	yes)
		#
		# Shut up a -Wcast-qual warning from va_start().
		#
		AC_DEFINE(SHUTUP_STDARG_CAST)
		;;
esac

AC_CHECK_HEADERS(strings.h,
  ISC_PLATFORM_HAVESTRINGSH="#define ISC_PLATFORM_HAVESTRINGSH 1"
,
  ISC_PLATFORM_HAVESTRINGSH="#undef ISC_PLATFORM_HAVESTRINGSH"
)
AC_SUBST(ISC_PLATFORM_HAVESTRINGSH)

#
# Check for if_nametoindex() for IPv6 scoped addresses support
#
AC_CHECK_FUNC(if_nametoindex, ac_cv_have_if_nametoindex=yes,
		ac_cv_have_if_nametoindex=no)
case $ac_cv_have_if_nametoindex in
no)
	case "$host" in
  	*-hp-hpux*)
  		AC_CHECK_LIB(ipv6, if_nametoindex,
				ac_cv_have_if_nametoindex=yes
				LIBS="-lipv6 $LIBS",)
  	;;
	esac
esac
case $ac_cv_have_if_nametoindex in
yes)
	ISC_PLATFORM_HAVEIFNAMETOINDEX="#define ISC_PLATFORM_HAVEIFNAMETOINDEX 1"
	;;
*)
	ISC_PLATFORM_HAVEIFNAMETOINDEX="#undef ISC_PLATFORM_HAVEIFNAMETOINDEX"
	;;
esac
AC_SUBST(ISC_PLATFORM_HAVEIFNAMETOINDEX)

#
# Machine architecture dependent features
#
AC_ARG_ENABLE(atomic,
	[  --enable-atomic	enable machine specific atomic operations
                        [[default=autodetect]]],
			enable_atomic="$enableval",
			enable_atomic="autodetect")
case "$enable_atomic" in
	yes|''|autodetect)
		use_atomic=yes
		;;
	no)
		use_atomic=no
		arch=noatomic
		;;
esac

ISC_PLATFORM_USEOSFASM="#undef ISC_PLATFORM_USEOSFASM"
if test "$use_atomic" = "yes"; then
	AC_MSG_CHECKING([architecture type for atomic operations])
	have_atomic=yes		# set default
	case "$host" in
	[i[3456]86-*])
		# XXX: some old x86 architectures actually do not support
		#      (some of) these operations.  Do we need stricter checks?
AC_TRY_RUN([
main() {
	exit((sizeof(void *) == 8) ? 0 : 1);
}
],
		[arch=x86_64],
		[arch=x86_32],
	        [arch=x86_32])
	;;
	x86_64-*)
		arch=x86_64
	;;
	alpha*-*)
		arch=alpha
	;;
	powerpc-*)
		arch=powerpc
	;;
	mips-*|mipsel-*|mips64-*|mips64el-*)
		arch=mips
	;;
	ia64-*)
		arch=ia64
	;;
	*)
		have_atomic=no
		arch=noatomic
	;;
	esac
	AC_MSG_RESULT($arch)
fi

if test "$have_atomic" = "yes"; then
	AC_MSG_CHECKING([compiler support for inline assembly code])

	compiler=generic
	# Check whether the compiler supports the assembly syntax we provide.
	if test "X$GCC" = "Xyes"; then
		# GCC's ASM extension always works
		compiler=gcc
		if test $arch = "x86_64"; then
			# We can share the same code for gcc with x86_32
			arch=x86_32
		fi
		if test $arch = "powerpc"; then
			#
			# The MacOS (and maybe others) uses "r0" for register
			# zero. Under linux/ibm it is "0" for register 0.
			# Probe to see if we have a MacOS style assembler.
			#
			AC_MSG_CHECKING([Checking for MacOS style assembler syntax])
			AC_TRY_COMPILE(, [
			__asm__ volatile ("li r0, 0x0\n"::);
			], [
			AC_MSG_RESULT(yes)
			compiler="mac"
			ISC_PLATFORM_USEMACASM="#define ISC_PLATFORM_USEMACASM 1"
			], [AC_MSG_RESULT(no)])
		fi
	else
		case "$host" in
		alpha*-dec-osf*)
			# Tru64 compiler has its own syntax for inline 
			# assembly.
			AC_TRY_COMPILE(, [
#ifndef __DECC
#error "unexpected compiler"
#endif
				return (0);],
				[compiler=osf],)
		;;
		powerpc-ibm-aix*)
			compiler=aix
		;;
		esac
	fi
	case "$compiler" in
	gcc)
		ISC_PLATFORM_USEGCCASM="#define ISC_PLATFORM_USEGCCASM 1"
		;;
	osf)
		ISC_PLATFORM_USEOSFASM="#define ISC_PLATFORM_USEOSFASM 1"
		;;
	aix)
		;;
	mac)
		;;
	*)
		# See if the generic __asm function works.  If not,
		# we need to disable the atomic operations.
		AC_TRY_LINK(, [
					__asm("nop")
				],
		[compiler="standard"
		ISC_PLATFORM_USESTDASM="#define ISC_PLATFORM_USESTDASM 1"],
		[compiler="not supported (atomic operations disabled)"
		have_atomic=no
		arch=noatomic ]);
		;;
	esac

	AC_MSG_RESULT($compiler)
fi

if test "$have_atomic" = "yes"; then
	ISC_PLATFORM_HAVEXADD="#define ISC_PLATFORM_HAVEXADD 1"
	ISC_PLATFORM_HAVECMPXCHG="#define ISC_PLATFORM_HAVECMPXCHG 1"
	ISC_PLATFORM_HAVEATOMICSTORE="#define ISC_PLATFORM_HAVEATOMICSTORE 1"
else
	ISC_PLATFORM_HAVEXADD="#undef ISC_PLATFORM_HAVEXADD"
	ISC_PLATFORM_HAVECMPXCHG="#undef ISC_PLATFORM_HAVECMPXCHG"
	ISC_PLATFORM_HAVEATOMICSTORE="#undef ISC_PLATFORM_HAVEATOMICSTORE"
fi

AC_SUBST(ISC_PLATFORM_HAVEXADD)
AC_SUBST(ISC_PLATFORM_HAVECMPXCHG)
AC_SUBST(ISC_PLATFORM_HAVEATOMICSTORE)

AC_SUBST(ISC_PLATFORM_USEGCCASM)
AC_SUBST(ISC_PLATFORM_USEOSFASM)
AC_SUBST(ISC_PLATFORM_USESTDASM)
AC_SUBST(ISC_PLATFORM_USEMACASM)

ISC_ARCH_DIR=$arch
AC_SUBST(ISC_ARCH_DIR)

#
#  The following sets up how non-blocking i/o is established.
#  Sunos, cygwin and solaris 2.x (x<5) require special handling.
#
case "$host" in
*-sunos*) AC_DEFINE(PORT_NONBLOCK, O_NDELAY);;
*-cygwin*) AC_DEFINE(PORT_NONBLOCK, O_NDELAY);;
*-solaris2.[[01234]])
	AC_DEFINE(PORT_NONBLOCK, O_NONBLOCK)
	AC_DEFINE(USE_FIONBIO_IOCTL, 1,
		  [Defined if you need to use ioctl(FIONBIO) instead a fcntl call to make non-blocking.])
	;;
*) AC_DEFINE(PORT_NONBLOCK, O_NONBLOCK,
	     [Sets which flag to pass to open/fcntl to make non-blocking (O_NDELAY/O_NONBLOCK).])
	;;
esac
#
# Solaris 2.5.1 and earlier cannot bind() then connect() a TCP socket.
# This prevents the source address being set.
#
case "$host" in
*-solaris2.[[012345]]|*-solaris2.5.1)
	AC_DEFINE(BROKEN_TCP_BIND_BEFORE_CONNECT, 1,
		  [Define if you cannot bind() before connect() for TCP sockets.])
	;;
esac
#
# The following sections deal with tools used for formatting
# the documentation.  They are all optional, unless you are
# a developer editing the documentation source.
#

#
# Look for TeX.
#

AC_PATH_PROGS(LATEX, latex, latex)
AC_SUBST(LATEX)

AC_PATH_PROGS(PDFLATEX, pdflatex, pdflatex)
AC_SUBST(PDFLATEX)

#
# Look for w3m
#

AC_PATH_PROGS(W3M, w3m, w3m)
AC_SUBST(W3M)

#
# Look for xsltproc (libxslt)
#

AC_PATH_PROG(XSLTPROC, xsltproc, xsltproc)
AC_SUBST(XSLTPROC)

#
# Look for xmllint (libxml2)
#

AC_PATH_PROG(XMLLINT, xmllint, xmllint)
AC_SUBST(XMLLINT)

#
# Subroutine for searching for an ordinary file (e.g., a stylesheet)
# in a number of directories:
#
#   NOM_PATH_FILE(VARIABLE, FILENAME, DIRECTORIES)
#
# If the file FILENAME is found in one of the DIRECTORIES, the shell
# variable VARIABLE is defined to its absolute pathname.  Otherwise, 
# it is set to FILENAME, with no directory prefix (that's not terribly
# useful, but looks less confusing in substitutions than leaving it
# empty).  The variable VARIABLE will be substituted into output files.
# 

AC_DEFUN(NOM_PATH_FILE, [
$1=""
AC_MSG_CHECKING(for $2)
for d in $3
do
	f=$d/$2
	if test -f $f
	then
		$1=$f
		AC_MSG_RESULT($f)
		break
	fi
done
if test "X[$]$1" = "X"
then
	AC_MSG_RESULT("not found");
	$1=$2
fi
AC_SUBST($1)
])

#
# Look for Docbook-XSL stylesheets.  Location probably varies by
# system.  Guessing where it might be found, based on where SGML stuff
# lives on some systems.  FreeBSD is the only one I'm sure of at the
# moment.
#

docbook_xsl_trees="/usr/pkg/share/xsl /usr/local/share/xsl /usr/share/xsl"

#
# Look for stylesheets we need.
#

NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_HTML, docbook/html/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_XHTML, docbook/xhtml/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_MAN, docbook/manpages/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNK_HTML, docbook/html/chunk.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNK_XHTML, docbook/xhtml/chunk.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNKTOC_HTML, docbook/html/chunktoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNKTOC_XHTML, docbook/xhtml/chunktoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_MAKETOC_HTML, docbook/html/maketoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_MAKETOC_XHTML, docbook/xhtml/maketoc.xsl, $docbook_xsl_trees)

#
# Same dance for db2latex
#
# No idea where this lives except on FreeBSD.
#

db2latex_xsl_trees="/usr/local/share"

#
# Look for stylesheets we need.
#

NOM_PATH_FILE(XSLT_DB2LATEX_STYLE, db2latex/xsl/docbook.xsl, $db2latex_xsl_trees)

#
# Look for "admonition" image directory.  Can't use NOM_PATH_FILE()
# because it's a directory, so just do the same things, inline.
#

AC_MSG_CHECKING(for db2latex/xsl/figures)
for d in $db2latex_xsl_trees
do
	dd=$d/db2latex/xsl/figures
	if test -d $dd
	then
		XSLT_DB2LATEX_ADMONITIONS=$dd
		AC_MSG_RESULT($dd)
		break
	fi
done
if test "X$XSLT_DB2LATEX_ADMONITIONS" = "X"
then
	AC_MSG_RESULT(not found)
	XSLT_DB2LATEX_ADMONITIONS=db2latex/xsl/figures
fi
AC_SUBST(XSLT_DB2LATEX_ADMONITIONS)

#
# IDN support
#
AC_ARG_WITH(idn,
	[  --with-idn[=MPREFIX]   enable IDN support using idnkit [default PREFIX]],
	use_idn="$withval", use_idn="no")
case "$use_idn" in
yes)
	if test X$prefix = XNONE ; then
		idn_path=/usr/local
	else
		idn_path=$prefix
	fi
	;;
no)
	;;
*)
	idn_path="$use_idn"
	;;
esac

iconvinc=
iconvlib=
AC_ARG_WITH(libiconv,
	[  --with-libiconv[=IPREFIX]   GNU libiconv are in IPREFIX [default PREFIX]],
	use_libiconv="$withval", use_libiconv="no")
case "$use_libiconv" in
yes)
	if test X$prefix = XNONE ; then
		iconvlib="-L/usr/local/lib -R/usr/local/lib -liconv"
	else
		iconvlib="-L$prefix/lib -R$prefix/lib -liconv"
	fi
	;;
no)
	iconvlib=
	;;
*)
	iconvlib="-L$use_libiconv/lib -R$use_libiconv/lib -liconv"
	;;
esac

AC_ARG_WITH(iconv,
	[  --with-iconv[=LIBSPEC]   specify iconv library [default -liconv]],
	iconvlib="$withval")
case "$iconvlib" in
no)
	iconvlib=
	;;
yes)
	iconvlib=-liconv
	;;
esac

AC_ARG_WITH(idnlib,
	[  --with-idnlib=ARG    specify libidnkit],
	idnlib="$withval", idnlib="no")
if test "$idnlib" = yes; then
	AC_MSG_ERROR([You must specify ARG for --with-idnlib.])
fi

IDNLIBS=
if test "$use_idn" != no; then
	AC_DEFINE(WITH_IDN, 1, [define if idnkit support is to be included.])
	STD_CINCLUDES="$STD_CINCLUDES -I$idn_path/include"
	if test "$idnlib" != no; then
		IDNLIBS="$idnlib $iconvlib"
	else
		IDNLIBS="-L$idn_path/lib -lidnkit $iconvlib"
	fi
fi
AC_SUBST(IDNLIBS)

AC_CHECK_HEADERS(locale.h)
AC_CHECK_FUNCS(setlocale)

#
# Substitutions
#
AC_SUBST(BIND9_TOP_BUILDDIR)
BIND9_TOP_BUILDDIR=`pwd`

AC_SUBST(BIND9_ISC_BUILDINCLUDE)
AC_SUBST(BIND9_ISCCC_BUILDINCLUDE)
AC_SUBST(BIND9_ISCCFG_BUILDINCLUDE)
AC_SUBST(BIND9_DNS_BUILDINCLUDE)
AC_SUBST(BIND9_LWRES_BUILDINCLUDE)
AC_SUBST(BIND9_BIND9_BUILDINCLUDE)
if test "X$srcdir" != "X"; then
	BIND9_ISC_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/isc/include"
	BIND9_ISCCC_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/isccc/include"
	BIND9_ISCCFG_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/isccfg/include"
	BIND9_DNS_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/dns/include"
	BIND9_LWRES_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/lwres/include"
	BIND9_BIND9_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/bind9/include"
else
	BIND9_ISC_BUILDINCLUDE=""
	BIND9_ISCCC_BUILDINCLUDE=""
	BIND9_ISCCFG_BUILDINCLUDE=""
	BIND9_DNS_BUILDINCLUDE=""
	BIND9_LWRES_BUILDINCLUDE=""
	BIND9_BIND9_BUILDINCLUDE=""
fi

AC_SUBST_FILE(BIND9_MAKE_INCLUDES)
BIND9_MAKE_INCLUDES=$BIND9_TOP_BUILDDIR/make/includes

AC_SUBST_FILE(BIND9_MAKE_RULES)
BIND9_MAKE_RULES=$BIND9_TOP_BUILDDIR/make/rules

. $srcdir/version
BIND9_VERSION="VERSION=${MAJORVER}.${MINORVER}.${PATCHVER}${RELEASETYPE}${RELEASEVER}"
AC_SUBST(BIND9_VERSION)

AC_SUBST_FILE(LIBISC_API)
LIBISC_API=$srcdir/lib/isc/api

AC_SUBST_FILE(LIBISCCC_API)
LIBISCCC_API=$srcdir/lib/isccc/api

AC_SUBST_FILE(LIBISCCFG_API)
LIBISCCFG_API=$srcdir/lib/isccfg/api

AC_SUBST_FILE(LIBDNS_API)
LIBDNS_API=$srcdir/lib/dns/api

AC_SUBST_FILE(LIBBIND9_API)
LIBBIND9_API=$srcdir/lib/bind9/api

AC_SUBST_FILE(LIBLWRES_API)
LIBLWRES_API=$srcdir/lib/lwres/api

#
# Configure any DLZ drivers.
#
# If config.dlz.in selects one or more DLZ drivers, it will set
# USE_DLZ to a non-empty value, which will be our clue to
# enable the DLZ core functions.
#
# This section has to come after the libtool stuff because it needs to
# know how to name the driver object files.
#

USE_DLZ=""
DLZ_DRIVER_INCLUDES=""
DLZ_DRIVER_LIBS=""
DLZ_DRIVER_SRCS=""
DLZ_DRIVER_OBJS=""

sinclude(contrib/dlz/config.dlz.in)

AC_MSG_CHECKING(for DLZ)

if test -n "$USE_DLZ"
then
	AC_MSG_RESULT(yes)
	USE_DLZ="-DDLZ $USE_DLZ"
	DLZ_DRIVER_RULES=contrib/dlz/drivers/rules
	AC_CONFIG_FILES([$DLZ_DRIVER_RULES])
else
	AC_MSG_RESULT(no)
	DLZ_DRIVER_RULES=/dev/null
fi

AC_SUBST(USE_DLZ)
AC_SUBST(DLZ_DRIVER_INCLUDES)
AC_SUBST(DLZ_DRIVER_LIBS)
AC_SUBST(DLZ_DRIVER_SRCS)
AC_SUBST(DLZ_DRIVER_OBJS)
AC_SUBST_FILE(DLZ_DRIVER_RULES)

if test "$cross_compiling" = "yes"; then
	if test -z "$BUILD_CC"; then
		AC_ERROR([BUILD_CC not set])
	fi
	BUILD_CFLAGS="$BUILD_CFLAGS"
	BUILD_CPPFLAGS="$BUILD_CPPFLAGS"
	BUILD_LDFLAGS="$BUILD_LDFLAGS"
	BUILD_LIBS="$BUILD_LIBS"
else
	BUILD_CC="$CC" 
	BUILD_CFLAGS="$CFLAGS" 
	BUILD_CPPFLAGS="$CPPFLAGS $GEN_NEED_OPTARG"
	BUILD_LDFLAGS="$LDFLAGS"
	BUILD_LIBS="$LIBS"
fi

AC_SUBST(BUILD_CC)
AC_SUBST(BUILD_CFLAGS)
AC_SUBST(BUILD_CPPFLAGS)
AC_SUBST(BUILD_LDFLAGS)
AC_SUBST(BUILD_LIBS)

#
# Commands to run at the end of config.status.
# Don't just put these into configure, it won't work right if somebody
# runs config.status directly (which autoconf allows).
#

AC_CONFIG_COMMANDS(
	[chmod],
	[chmod a+x isc-config.sh])

#
# Files to configure.  These are listed here because we used to
# specify them as arguments to AC_OUTPUT.  It's (now) ok to move these
# elsewhere if there's a good reason for doing so.
#

AC_CONFIG_FILES([
	Makefile
	make/Makefile
	make/mkdep
	lib/Makefile
	lib/isc/Makefile
	lib/isc/include/Makefile
	lib/isc/include/isc/Makefile
	lib/isc/include/isc/platform.h
	lib/isc/unix/Makefile
	lib/isc/unix/include/Makefile
	lib/isc/unix/include/isc/Makefile
	lib/isc/nls/Makefile
	lib/isc/$thread_dir/Makefile
	lib/isc/$thread_dir/include/Makefile
	lib/isc/$thread_dir/include/isc/Makefile
	lib/isc/$arch/Makefile
	lib/isc/$arch/include/Makefile
	lib/isc/$arch/include/isc/Makefile
	lib/isccc/Makefile
	lib/isccc/include/Makefile
	lib/isccc/include/isccc/Makefile
	lib/isccfg/Makefile
	lib/isccfg/include/Makefile
	lib/isccfg/include/isccfg/Makefile
	lib/dns/Makefile
	lib/dns/include/Makefile
	lib/dns/include/dns/Makefile
	lib/dns/include/dst/Makefile
	lib/bind9/Makefile
	lib/bind9/include/Makefile
	lib/bind9/include/bind9/Makefile
	lib/lwres/Makefile
	lib/lwres/include/Makefile
	lib/lwres/include/lwres/Makefile
	lib/lwres/include/lwres/netdb.h
	lib/lwres/include/lwres/platform.h
	lib/lwres/man/Makefile
	lib/lwres/unix/Makefile
	lib/lwres/unix/include/Makefile
	lib/lwres/unix/include/lwres/Makefile
	bin/Makefile
	bin/dig/Makefile
	isc-config.sh
])

#
# Do it
#

AC_OUTPUT

if test "X$OPENSSL_WARNING" != "X"; then
cat << \EOF
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING                                                                 WARNING
WARNING         Your OpenSSL crypto library may be vulnerable to        WARNING
WARNING         one or more of the the following known security         WARNING
WARNING         flaws:                                                  WARNING
WARNING                                                                 WARNING
WARNING         CAN-2002-0659, CAN-2006-4339, CVE-2006-2937 and         WARNING
WARNING         CVE-2006-2940.                                          WARNING
WARNING                                                                 WARNING
WARNING         It is recommended that you upgrade to OpenSSL           WARNING
WARNING         version 0.9.8d/0.9.7l (or greater).                     WARNING
WARNING                                                                 WARNING
WARNING         You can disable this warning by specifying:             WARNING
WARNING                                                                 WARNING
WARNING               --disable-openssl-version-check          	        WARNING
WARNING                                                                 WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
EOF
fi

# Tell Emacs to edit this file in shell mode.
# Local Variables:
# mode: sh
# End:
@


1.16
log
@Update to BIND 9.4.2-P2 and adapt our dynamic select changes.  OK deraadt@@
@
text
@d21 1
a21 1
AC_REVISION($Revision: 1.15 $)
a2474 5
	bin/check/Makefile
	bin/named/Makefile
	bin/named/unix/Makefile
	bin/rndc/Makefile
	bin/rndc/unix/Makefile
a2475 5
	bin/nsupdate/Makefile
	bin/dnssec/Makefile
	doc/Makefile
	doc/arm/Makefile
	doc/misc/Makefile
a2476 5
	doc/xsl/Makefile
	doc/xsl/isc-docbook-chunk.xsl
	doc/xsl/isc-docbook-html.xsl
	doc/xsl/isc-docbook-latex.xsl
	doc/xsl/isc-manpage.xsl
@


1.15
log
@resolve conflicts
@
text
@d1 1
a1 1
# Copyright (C) 2004-2007  Internet Systems Consortium, Inc. ("ISC")
d21 1
a21 1
AC_REVISION($Revision: 1.14 $)
d1842 1
a1842 1
	*-solaris2.10)
@


1.14
log
@remove bogus warning regarding OpenSSL
@
text
@d1 1
a1 1
# Copyright (C) 2004-2006  Internet Systems Consortium, Inc. ("ISC")
d4 1
a4 1
# Permission to use, copy, modify, and distribute this software for any
d21 1
a21 1
AC_REVISION($Revision: 1.13 $)
d24 1
a24 1
AC_PREREQ(2.13)
d34 1
d41 7
d365 1
d432 15
a492 10
		AC_CHECK_FUNC(DH_generate_parameters,
			      AC_DEFINE(HAVE_DH_GENERATE_PARAMETERS, 1,
					[Define if libcrypto has DH_generate_parameters]))
		AC_CHECK_FUNC(RSA_generate_key,
			      AC_DEFINE(HAVE_RSA_GENERATE_KEY, 1,
					[Define if libcrypto has RSA_generate_key]))
		AC_CHECK_FUNC(DSA_generate_parameters,
			      AC_DEFINE(HAVE_DSA_GENERATE_PARAMETERS, 1,
					[Define if libcrypto has DSA_generate_parameters]))

d1012 1
d1705 18
d1883 7
d1916 152
d2110 7
d2182 4
d2225 76
d2356 39
d2417 17
a2433 3
AC_OUTPUT(
	make/rules
	make/includes
d2449 3
d2486 1
a2487 1
	isc-config.sh
d2492 7
a2498 2
)
chmod a+x isc-config.sh
d2500 1
a2500 1
if 0; then
@


1.13
log
@resolve conflicts and regen configure script
@
text
@d21 1
a21 1
AC_REVISION($Revision: 1.12 $)
d2160 1
a2160 1
if test "X$OPENSSL_WARNING" != "X"; then
@


1.12
log
@resolve conflicts
@
text
@d1 1
a1 1
# Copyright (C) 2004, 2005  Internet Systems Consortium, Inc. ("ISC")
d21 1
a21 1
AC_REVISION($Revision: 1.11 $)
d360 1
d367 1
a367 1
openssldirs="/usr /usr/local /usr/local/ssl /usr/pkg"
d420 3
d469 15
a483 6
#
#	OpenSSLDie is new with CERT CS-2002-23.  If we see it we have may
#	have a patched library otherwise check that we are greater than
#	the fixed versions
#
		AC_CHECK_FUNC(OpenSSLDie,
d489 3
a491 1
        if (OPENSSL_VERSION_NUMBER >= 0x0090581fL)
d495 2
a496 1
	printf("Require OPENSSL_VERSION_NUMBER 0x0090581f or greater\n\n");
d499 1
a499 1
],
d502 2
a503 1
		 AC_MSG_ERROR(you need OpenSSL 0.9.5a or newer)],
d505 6
a510 22
		,
	        AC_MSG_RESULT(did not find fixes for CERT CA-2002-23)
		AC_MSG_CHECKING(OpenSSL library version)
		AC_TRY_RUN([
#include <stdio.h>
#include <openssl/opensslv.h>
int main() {
        if ((OPENSSL_VERSION_NUMBER >= 0x0090605fL &&
	     OPENSSL_VERSION_NUMBER < 0x009070000L) ||
	     OPENSSL_VERSION_NUMBER >= 0x00907003L)
                return (0);
	printf("\n\nFound   OPENSSL_VERSION_NUMBER %#010x\n",
		OPENSSL_VERSION_NUMBER);
	printf("Require OPENSSL_VERSION_NUMBER 0x0090605f or greater (0.9.6e)\n"
	       "Require OPENSSL_VERSION_NUMBER 0x00907003 or greater (0.9.7-beta2)\n\n");
        return (1);
}
],
	        [AC_MSG_RESULT(ok)],
		[AC_MSG_RESULT(not compatible)
		 AC_MSG_ERROR(you need OpenSSL 0.9.6e/0.9.7-beta2 (or newer): CERT CA-2002-23)],
		[AC_MSG_RESULT(assuming target platform has compatible version)]))
d617 44
d664 8
a671 7
	AC_CHECK_LIB(c, sigwait,
		     AC_DEFINE(HAVE_SIGWAIT),
		     AC_CHECK_LIB(pthread, sigwait,
				  AC_DEFINE(HAVE_SIGWAIT),
				  AC_CHECK_LIB(pthread, _Psigwait,
					       AC_DEFINE(HAVE_SIGWAIT),))
	)
a734 44
	if test "X$GCC" = "Xyes"; then
		case "$host" in
		*-freebsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-openbsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			LIBS="$LIBS -lthread"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		esac
	else
		case $host in
		*-dec-osf*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			CC="$CC -mt"
			CCOPT="$CCOPT -mt"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-sco-sysv*uw*|*-*-sysv*UnixWare*)
			CC="$CC -Kthread"
			CCOPT="$CCOPT -Kthread"
			;;
		*-*-sysv*OpenUNIX*)
			CC="$CC -Kpthread"
			CCOPT="$CCOPT -Kpthread"
			;;
		esac
	fi
	ALWAYS_DEFINES="-D_REENTRANT"
	ISC_PLATFORM_USETHREADS="#define ISC_PLATFORM_USETHREADS 1"
	thread_dir=pthreads
d794 12
a805 1
	STD_CWARNINGS="$STD_CWARNINGS -W -Wall -Wmissing-prototypes -Wcast-qual -Wwrite-strings -Wformat"
d1583 1
a1583 1
	 LWRES_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"
d1586 2
a1587 2
	 LWRES_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"
	 "GENRANDOMLIB=${ISCLIBS}"])
d1702 1
d1766 11
d1793 1
a1793 1
	*-aix5.1.*)
d1809 3
d1892 10
d2077 22
d2159 24
@


1.11
log
@remove tests
@
text
@d1 1
a1 1
# Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
d21 1
a21 1
AC_REVISION($Revision: 1.10 $)
d264 1
d612 1
a612 152
#
# Begin pthreads checking.
#
# First, decide whether to use multithreading or not.
#
# Enable multithreading by default on systems where it is known
# to work well, and where debugging of multithreaded programs
# is supported.
#

AC_MSG_CHECKING(whether to build with thread support)

case $host in
*-dec-osf*)
	use_threads=true ;;
[*-solaris2.[0-6]])
	# Thread signals are broken on Solaris 2.6; they are sometimes
	# delivered to the wrong thread.
	use_threads=false ;;
*-solaris*)
	use_threads=true ;;
*-ibm-aix*)
	use_threads=true ;;
*-hp-hpux10*)
	use_threads=false ;;
*-hp-hpux11*)
	use_threads=true ;;
*-sgi-irix*)
	use_threads=true ;;
*-sco-sysv*uw*|*-*-sysv*UnixWare*)
        # UnixWare
	use_threads=false ;;
*-*-sysv*OpenUNIX*)
        # UnixWare
	use_threads=true ;;
*-netbsd*)
	if test -r /usr/lib/libpthread.so ; then
	    use_threads=true
	else
	    # Socket I/O optimizations introduced in 9.2 expose a
	    # bug in unproven-pthreads; see PR #12650
	    use_threads=false
	fi
	;;
*-openbsd*)
	# OpenBSD users have reported that named dumps core on
	# startup when built with threads.
	use_threads=false ;;
*-freebsd*)
	use_threads=false ;;
*-bsdi[234]*)
	# Thread signals do not work reliably on some versions of BSD/OS.
	use_threads=false ;;
*-bsdi5*)
	use_threads=true ;;
*-linux*)
   	# Threads are disabled on Linux by default because most
	# Linux kernels produce unusable core dumps from multithreaded
	# programs, and because of limitations in setuid().
	use_threads=false ;;	
*)
	use_threads=false ;;
esac

AC_ARG_ENABLE(threads,
	[  --enable-threads	enable multithreading])
case "$enable_threads" in
	yes)
		use_threads=true
		;;
	no)
		use_threads=false
		;;
	'')
		# Use system-dependent default
		;;
	*)
	    	AC_MSG_ERROR([--enable-threads takes yes or no])
		;;
esac

if $use_threads
then
	AC_MSG_RESULT(yes)
else
	AC_MSG_RESULT(no)	
fi

if $use_threads
then
	#
	# Search for / configure pthreads in a system-dependent fashion.
	#
	case "$host" in
	  *-netbsd*)
		# NetBSD has multiple pthreads implementations.	 The
		# recommended one to use is "unproven-pthreads".  The
		# older "mit-pthreads" may also work on some NetBSD
		# versions.  The PTL2 thread library does not
		# currently work with bind9, but can be chosen with
		# the --with-ptl2 option for those who wish to
		# experiment with it.
		CC="gcc"
		AC_MSG_CHECKING(which NetBSD thread library to use)

		AC_ARG_WITH(ptl2,
[  --with-ptl2		on NetBSD, use the ptl2 thread library (experimental)],
		    use_ptl2="$withval", use_ptl2="no")

		: ${LOCALBASE:=/usr/pkg}

		if test "X$use_ptl2" = "Xyes"
		then
			AC_MSG_RESULT(PTL2)
			AC_MSG_WARN(
[linking with PTL2 is highly experimental and not expected to work])
			CC=ptlgcc
		else
			if test -r /usr/lib/libpthread.so
			then
				AC_MSG_RESULT(native)
				LIBS="-lpthread $LIBS"
			else
				if test ! -d $LOCALBASE/pthreads
				then
					AC_MSG_RESULT(none)
					AC_MSG_ERROR("could not find thread libraries")
				fi

				if $use_threads
				then
					AC_MSG_RESULT(mit-pthreads/unproven-pthreads)
					pkg="$LOCALBASE/pthreads"
					lib1="-L$pkg/lib -Wl,-R$pkg/lib"
					lib2="-lpthread -lm -lgcc -lpthread"
					LIBS="$lib1 $lib2 $LIBS"
					CPPFLAGS="$CPPFLAGS -I$pkg/include"
					STD_CINCLUDES="$STD_CINCLUDES -I$pkg/include"
				fi
			fi
		fi
		;;
		*)
			AC_CHECK_LIB(pthread, pthread_create,,
				AC_CHECK_LIB(pthread, __pthread_create,,
				AC_CHECK_LIB(pthread, __pthread_create_system,,
				AC_CHECK_LIB(c_r, pthread_create,,
				AC_CHECK_LIB(c, pthread_create,,
				AC_MSG_ERROR("could not find thread libraries"))))))
		;;
	esac
fi
d643 5
a647 1
			*-freebsd5.3|*-freebsd5.3.*)
a740 1

d795 1
a795 1
		LDFLAGS="-Wl,+vnocompatwarnings $LDFALGS"
d817 1
a817 1
			STD_CWARNINGS="+w1 +W 474,530"
d821 1
a821 1
		LDFLAGS="-Wl,+vnocompatwarnings $LDFALGS"
d1270 4
d1297 7
a1303 1
	ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"])
d1569 6
a1574 2
	[ISC_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"],
	[ISC_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"])
d1576 2
d1632 3
d1651 2
a1652 1
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'],
d1654 2
a1655 1
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "l"'],
d1657 2
a1658 1
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'])
d1660 1
d1682 9
d1731 3
a1733 1
],[AC_MSG_ERROR(cannot determine type of rlim_cur when cross compiling - define rlim_t)])
d1848 16
d1869 9
a1877 2
# Directory trees where SGML files are commonly found.
sgmltrees="/usr/pkg/share/sgml /usr/local/share/sgml /usr/share/sgml"
d1880 1
a1880 1
# Look for openjade.  Plain jade is no longer supported.
d1883 2
a1884 2
AC_PATH_PROGS(OPENJADE, openjade, openjade)
AC_SUBST(OPENJADE)
d1887 1
a1887 1
# Look for TeX.
d1890 2
a1891 5
AC_PATH_PROGS(JADETEX, jadetex, jadetex)
AC_SUBST(JADETEX)

AC_PATH_PROGS(PDFJADETEX, pdfjadetex, pdfjadetex)
AC_SUBST(PDFJADETEX)
d1928 8
a1935 2
# Look for the SGML catalog.
# Its location varies, so far we have seen:
d1937 1
a1937 4
# 	NetBSD 	/usr/pkg/share/sgml/docbook/catalog
# 	FreeBSD	/usr/local/share/sgml/docbook/catalog
#	Linux	/usr/local/share/dsssl/docbook/catalog
#		/usr/share/sgml/docbook/dsssl-stylesheets/catalog
a1938 10
catalogpath=""
for d in $sgmltrees 
do
	catalogpath="$catalogpath $d"
	for s in docbook/dsssl-stylesheets
	do
		catalogpath="$catalogpath $d/$s"
	done
done
NOM_PATH_FILE(SGMLCATALOG, catalog, $catalogpath)
d1940 6
d1947 1
a1947 8
# Look for the HTML stylesheet html/docbook.dsl, used for
# formatting man pages in HTML.  Its location varies,
# so far we have seen:
#
# 	NetBSD 	/usr/pkg/share/sgml/docbook/dsssl/modular/
# 	FreeBSD	/usr/local/share/sgml/docbook/dsssl/modular/
#	Linux	/usr/local/share/dsssl/docbook/
#		/usr/share/sgml/docbook/dsssl-stylesheets/
d1949 1
a1949 1
# Ditto for the print stylesheet print/docbook.dsl.
d1952 1
a1952 10
stylepath=""
for d in $sgmltrees 
do
	for s in docbook/dsssl/modular dsssl/docbook docbook/dsssl-stylesheets
	do
		stylepath="$stylepath $d/$s"
	done
done
NOM_PATH_FILE(HTMLSTYLE, html/docbook.dsl, $stylepath)
NOM_PATH_FILE(PRINTSTYLE, print/docbook.dsl, $stylepath)
d1955 1
a1955 7
# Look for XML declarations.
# Its location varies, so far we have seen:
#
# 	NetBSD 	/usr/pkg/share/sgml/docbook/dsssl/modular/dtds/decls/
# 	FreeBSD	/usr/local/share/sgml/docbook/dsssl/modular/dtds/decls/
#	Linux	/usr/local/share/dsssl/docbook/dtds/decls/
#		/usr/share/sgml/docbook/dsssl-stylesheets/dtds/decls/
d1958 1
a1958 9
xmlpath=""
for d in $sgmltrees 
do
	for s in docbook/dsssl/modular dsssl/docbook docbook/dsssl-stylesheets
	do
		xmlpath="$xmlpath $d/$s"
	done
done
NOM_PATH_FILE(XMLDCL, dtds/decls/xml.dcl, $xmlpath)
d1961 2
a1962 1
# Look for docbook2man-spec.pl
d1965 17
a1981 1
NOM_PATH_FILE(DOCBOOK2MANSPEC, docbook2X/docbook2man-spec.pl, $sgmltrees)
a2089 3
	doc/arm/nominum-docbook-html.dsl
	doc/arm/nominum-docbook-print.dsl
	doc/arm/validate.sh
d2091 1
a2091 1
	docutil/docbook2man-wrapper.sh
d2093 4
@


1.10
log
@resolve conflicts
@
text
@a2185 3
	lib/tests/Makefile
	lib/tests/include/Makefile
	lib/tests/include/tests/Makefile
a2193 16
	bin/tests/Makefile
	bin/tests/names/Makefile
	bin/tests/master/Makefile
	bin/tests/rbt/Makefile
	bin/tests/db/Makefile
	bin/tests/tasks/Makefile
	bin/tests/timers/Makefile
	bin/tests/dst/Makefile
	bin/tests/mem/Makefile
	bin/tests/net/Makefile
	bin/tests/sockaddr/Makefile
	bin/tests/system/Makefile
	bin/tests/system/conf.sh
	bin/tests/system/lwresd/Makefile
	bin/tests/system/tkey/Makefile
	bin/tests/headerdep_test.sh
@


1.9
log
@resolve conflicts
@
text
@d264 17
d365 12
d383 5
d389 1
a389 1
		if test "$use_openssl" = "yes" -o "$use_openssl" = "auto"
a391 1
			openssldirs="/usr /usr/local /usr/local/ssl /usr/pkg"
a404 6
			elif test "$use_openssl" = "auto"
			then
				DST_OPENSSL_INC=""
				USE_OPENSSL=""
				AC_MSG_RESULT(not found)
				break
d792 5
d940 5
d968 1
a968 1
		LIBS="-Wl,+vnocompatwarnings $LIBS"
d1079 7
d1096 2
d1114 2
d1643 1
a1643 1
	if test $use_getifaddrs = glibc
d1881 3
d2173 1
a2173 4
	lib/dns/sec/Makefile
	lib/dns/sec/dst/Makefile
	lib/dns/sec/dst/include/Makefile
	lib/dns/sec/dst/include/dst/Makefile
@


1.8
log
@no matter what size "long long" is, the printf format is always %lld.  ok jakob
@
text
@d1 1
d8 12
a19 8
# THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
# DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
# INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
# FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
# NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
# WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d21 1
a21 1
AC_REVISION($Revision: 1.7 $)
d195 34
d231 6
a236 1
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/sockio.h sys/select.h sys/sysctl.h)
d274 21
d346 1
a346 1
    use_openssl="$withval", use_openssl="no")
d355 1
a355 1
		if test "$use_openssl" = "yes"
d372 6
d381 15
a395 2
		DST_OPENSSL_INC="-I$use_openssl/include"
		DNS_OPENSSL_LIBS="-L$use_openssl/lib -lcrypto"
d482 8
d500 1
d502 1
a502 2
AC_SUBST(DNS_OPENSSL_LIBS)
AC_SUBST(USE_OPENSSL)
d536 7
a542 1
AC_SUBST(DNS_GSSAPI_LIBS)
d613 1
a613 1
*-sco-sysv*uw*)
d616 3
d620 8
a627 3
	# Socket I/O optimizations introduced in 9.2 expose a
	# bug in unproven-pthreads; see PR #12650
	use_threads=false ;;
d702 1
a702 1
			if test ! -d $LOCALBASE/pthreads
d704 8
a711 3
				AC_MSG_RESULT(none)
				AC_MSG_ERROR("could not find thread libraries")
			fi
d713 10
a722 9
			if $use_threads
			then
				AC_MSG_RESULT(mit-pthreads/unproven-pthreads)
				pkg="$LOCALBASE/pthreads"
				lib1="-L$pkg/lib -Wl,-R$pkg/lib"
				lib2="-lpthread -lm -lgcc -lpthread"
				LIBS="$lib1 $lib2 $LIBS"
				CPPFLAGS="$CPPFLAGS -I$pkg/include"
				STD_CINCLUDES="$STD_CINCLUDES -I$pkg/include"
d793 1
a793 1
		*-sco-sysv*uw*)
d834 1
a834 1
		*-sco-sysv*uw*)
d838 4
d860 5
d887 13
d948 1
a948 1
	*-sco-sysv*uw*)
d1039 3
d1049 3
d1065 3
d1184 1
a1184 1
*-sco-sysv*uw*)
d1269 1
d1272 1
d1297 1
d1324 23
d1578 38
d1652 10
d1672 19
d1692 6
a1697 4
	[ISC_PLATFORM_NEEDVSNPRINTF="#undef ISC_PLATFORM_NEEDVSNPRINTF"],
	[ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS print.$O"
	 ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS print.c"
	 ISC_PLATFORM_NEEDVSNPRINTF="#define ISC_PLATFORM_NEEDVSNPRINTF 1"])
d1699 3
d1708 9
d1718 18
a1735 2
# All platforms use %lld for "long long", regardless of its size.
ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'
d1803 14
d1840 1
a1840 1
	[*-bsdi4[12]*])
d1885 25
d1916 1
a1916 1
sgmltrees="/usr/pkg/share/sgml /usr/local/share/sgml"
d1969 19
a1987 1
NOM_PATH_FILE(SGMLCATALOG, catalog, $sgmltrees)
d1994 2
a1995 2
# 	NetBSD 	/usr/pkg/share/docbook/dsssl/modular/
# 	FreeBSD	/usr/local/share/docbook/dsssl/modular/
d1997 1
d2005 1
a2005 1
	for s in docbook/dsssl/modular dsssl/docbook
d2014 7
a2020 1
# Look for XML declarations
d2023 9
a2031 1
NOM_PATH_FILE(XMLDCL, docbook/dsssl/modular/dtds/decls/xml.dcl, $sgmltrees)
d2050 1
d2057 1
d2064 1
d2067 2
a2068 2
AC_SUBST_FILE(BIND9_INCLUDES)
BIND9_INCLUDES=$BIND9_TOP_BUILDDIR/make/includes
d2089 3
d2126 3
@


1.7
log
@update to BIND v9.2.3. ok todd@@
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.6 $)
d1468 2
a1469 14
# Determine the printf format characters to use when printing
# values of type isc_int64_t.  We make the assumption that platforms
# where a "long long" is the same size as a "long" (e.g., Alpha/OSF1)
# want "%ld" and everyone else can use "%lld".  Win32 uses "%I64d",
# but that's defined elsewhere since we don't use configure on Win32.
#
AC_MSG_CHECKING(printf format modifier for 64-bit integers)
AC_TRY_RUN([main() { exit(!(sizeof(long long int) == sizeof(long int))); }],
	[AC_MSG_RESULT(l)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "l"'],
	[AC_MSG_RESULT(ll)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'],
	[AC_MSG_RESULT(assuming target platform uses ll)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'])
@


1.6
log
@remove win32 references
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.5 $)
d458 1
a458 1
				devrandom=/dev/srandom
d528 2
a529 2
*-bsdi*)
	# Thread signals do not appear to work reliably on BSDI.
d531 2
d641 3
d1412 2
d1426 2
@


1.5
log
@provide strlcat() and strlcpy() for platform without them. although
this is not needed in OpenBSD, we'll keep the code here to stay in sync.
license change for strlcat/strlcpy ok millert@@.
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.4 $)
a1793 3
	lib/lwres/win32/Makefile
	lib/lwres/win32/include/Makefile
	lib/lwres/win32/include/lwres/Makefile
@


1.4
log
@update to BIND 9.2.2-release. ok millert@@
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.3 $)
d1434 11
a1450 1
AC_SUBST(ISC_PLATFORM_NEEDSTRSEP)
d1452 1
@


1.3
log
@test for tzset()
@
text
@d1 1
a1 1
# Copyright (C) 1998-2002  Internet Software Consortium.
d16 1
a16 1
AC_REVISION($Revision: 1.2 $)
d84 1
a84 1
# desired is some compatability with the way previous versions
@


1.2
log
@test for arc4random()
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.1.1.1 $)
d1478 5
@


1.1
log
@Initial revision
@
text
@d16 1
a16 1
AC_REVISION($Revision: 1.294.2.16 $)
d480 5
@


1.1.1.1
log
@ISC BIND version 9.2.2rc1
@
text
@@


1.1.1.2
log
@ISC BIND version 9.3.0. ok deraadt@@
@
text
@d1 1
a1 2
# Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
# Copyright (C) 1998-2003  Internet Software Consortium.
d7 8
a14 12
# THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
# REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
# AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
# INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
# LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
# OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
# PERFORMANCE OF THIS SOFTWARE.

dnl
AC_DIVERT_PUSH(1)dnl
esyscmd([sed "s/^/# /" COPYRIGHT])dnl
AC_DIVERT_POP()dnl
d16 1
a16 1
AC_REVISION($Revision: 1.294.2.23.2.30 $)
d84 1
a84 1
# desired is some compatibility with the way previous versions
a189 34
#
# gcc's optimiser is broken at -02 for ultrasparc
#
if test "$ac_env_CFLAGS_set" != set -a "X$GCC" = "Xyes"; then
	case "$host" in
	sparc-*)
		CCFLAGS="-g -O1"
		;;
	esac
fi

#
# OS dependent CC flags
#
case "$host" in
	# OSF 5.0: recv/send are only avaliable with -D_POSIX_PII_SOCKET or
	# -D_XOPEN_SOURCE_EXTENDED.
	*-dec-osf*)
		STD_CDEFINES="$STD_CDEFINES -D_POSIX_PII_SOCKET"
		CPPFLAGS="$CPPFLAGS -D_POSIX_PII_SOCKET"
		;;
	#HP-UX: need -D_XOPEN_SOURCE_EXTENDED and -lxnet for CMSG macros
	*-hp-hpux*)
		STD_CDEFINES="$STD_CDEFINES -D_XOPEN_SOURCE_EXTENDED"
		CPPFLAGS="$CPPFLAGS -D_XOPEN_SOURCE_EXTENDED"
		LIBS="-lxnet $LIBS"
		;;
	# Solaris: need -D_XPG4_2 and -D__EXTENSIONS__ for CMSG macros
	*-solaris*)
		STD_CDEFINES="$STD_CDEFINES -D_XPG4_2 -D__EXTENSIONS__"
		CPPFLAGS="$CPPFLAGS -D_XPG4_2 -D__EXTENSIONS__"
		;;
esac

d192 1
a192 6
AC_CHECK_HEADERS(fcntl.h sys/time.h unistd.h sys/sockio.h sys/select.h sys/param.h sys/sysctl.h net/if6.h,,,
[$ac_includes_default
#ifdef HAVE_SYS_PARAM_H
# include <sys/param.h>
#endif
])
a229 21
# check if we have lifconf
#
AC_MSG_CHECKING(for struct lifconf)
AC_TRY_COMPILE([
#include <sys/types.h>
#include <sys/socket.h>
#include <net/if.h>
],
[
struct lifconf lifconf;
lifconf.lifc_len = 0;
]
,
	[AC_MSG_RESULT(yes)
		ISC_PLATFORM_HAVELIFCONF="#define ISC_PLATFORM_HAVELIFCONF 1"],
	[AC_MSG_RESULT(no)
		ISC_PLATFORM_HAVELIFCONF="#undef ISC_PLATFORM_HAVELIFCONF"])
AC_SUBST(ISC_PLATFORM_HAVELIFCONF)


#
d281 1
a281 1
    use_openssl="$withval", use_openssl="auto")
d290 1
a290 1
		if test "$use_openssl" = "yes" -o "$use_openssl" = "auto"
a306 6
			elif test "$use_openssl" = "auto"
			then
				DST_OPENSSL_INC=""
				USE_OPENSSL=""
				AC_MSG_RESULT(not found)
				break
d310 2
a311 15
		if test "$use_openssl" = "/usr"
		then
			DST_OPENSSL_INC=""
			DNS_OPENSSL_LIBS="-lcrypto"
		else
			DST_OPENSSL_INC="-I$use_openssl/include"
			case $host in
			*-solaris*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -R$use_openssl/lib -lcrypto"
				;;
			*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -lcrypto"
				;;
			esac
		fi
a397 8
		AC_MSG_CHECKING(for OpenSSL DSA support)
		if test -f $use_openssl/include/openssl/dsa.h
		then
			AC_DEFINE(HAVE_OPENSSL_DSA)
			AC_MSG_RESULT(yes)
		else
			AC_MSG_RESULT(no)
		fi
d408 2
a410 2
AC_SUBST(DST_OPENSSL_INC)
DNS_CRYPTO_LIBS="$DNS_CRYPTO_LIBS $DNS_OPENSSL_LIBS"
d444 1
a444 7
DNS_CRYPTO_LIBS="$DNS_CRYPTO_LIBS $DNS_GSSAPI_LIBS"

#
# Applications linking with libdns also need to link with these libraries.
#

AC_SUBST(DNS_CRYPTO_LIBS)
d458 1
a458 1
				devrandom=/dev/arandom
a481 5
# Do we have arc4random() ?
#
AC_CHECK_FUNC(arc4random, AC_DEFINE(HAVE_ARC4RANDOM))

#
d510 1
a510 1
*-sco-sysv*uw*|*-*-sysv*UnixWare*)
a512 3
*-*-sysv*OpenUNIX*)
        # UnixWare
	use_threads=true ;;
d514 3
a516 8
	if test -r /usr/lib/libpthread.so ; then
	    use_threads=true
	else
	    # Socket I/O optimizations introduced in 9.2 expose a
	    # bug in unproven-pthreads; see PR #12650
	    use_threads=false
	fi
	;;
d523 2
a524 2
*-bsdi[234]*)
	# Thread signals do not work reliably on some versions of BSD/OS.
a525 2
*-bsdi5*)
	use_threads=true ;;
d589 1
a589 1
			if test -r /usr/lib/libpthread.so
d591 3
a593 8
				AC_MSG_RESULT(native)
				LIBS="-lpthread $LIBS"
			else
				if test ! -d $LOCALBASE/pthreads
				then
					AC_MSG_RESULT(none)
					AC_MSG_ERROR("could not find thread libraries")
				fi
d595 9
a603 10
				if $use_threads
				then
					AC_MSG_RESULT(mit-pthreads/unproven-pthreads)
					pkg="$LOCALBASE/pthreads"
					lib1="-L$pkg/lib -Wl,-R$pkg/lib"
					lib2="-lpthread -lm -lgcc -lpthread"
					LIBS="$lib1 $lib2 $LIBS"
					CPPFLAGS="$CPPFLAGS -I$pkg/include"
					STD_CINCLUDES="$STD_CINCLUDES -I$pkg/include"
				fi
a633 3
	AC_CHECK_FUNC(pthread_attr_setstacksize,
		      AC_DEFINE(HAVE_PTHREAD_ATTR_SETSTACKSIZE),)

d671 1
a671 1
		*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
d712 1
a712 1
		*-sco-sysv*uw*|*-*-sysv*UnixWare*)
a715 4
		*-*-sysv*OpenUNIX*)
			CC="$CC -Kpthread"
			CCOPT="$CCOPT -Kpthread"
			;;
a733 5
# In solaris 10, SMF can manage named service
#
AC_CHECK_LIB(scf, smf_enable_instance)

#
a755 13
# Large File
#
AC_ARG_ENABLE(largefile, [  --enable-largefile	  64-bit file support],
	      want_largefile="yes", want_largefile="no")
case $want_largefile in
	yes)
		ALWAYS_DEFINES="$ALWAYS_DEFINES -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"
		;;
	*)
		;;
esac

#
d804 1
a804 1
	*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
a894 3
		LIBTOOL_MODE_COMPILE='--mode=compile'
		LIBTOOL_MODE_INSTALL='--mode=install'
		LIBTOOL_MODE_LINK='--mode=link'
a901 3
		LIBTOOL_MODE_COMPILE=
		LIBTOOL_MODE_INSTALL=
		LIBTOOL_MODE_LINK=
a914 3
AC_SUBST(LIBTOOL_MODE_COMPILE)
AC_SUBST(LIBTOOL_MODE_INSTALL)
AC_SUBST(LIBTOOL_MODE_LINK)
d1031 1
a1031 1
*-sco-sysv*uw*|*-*-sysv*UnixWare*|*-*-sysv*OpenUNIX*)
a1115 1
			 ISC_PLATFORM_HAVESCOPEID="#define ISC_PLATFORM_HAVESCOPEID 1"
a1117 1
			 ISC_PLATFORM_HAVESCOPEID="#undef ISC_PLATFORM_HAVESCOPEID"
a1141 1
		ISC_PLATFORM_HAVESCOPEID="#define ISC_PLATFORM_HAVESCOPEID 1"
a1167 23
AC_SUBST(ISC_PLATFORM_HAVESCOPEID)

AC_MSG_CHECKING([for struct if_laddrreq])
AC_TRY_LINK([
#include <sys/types.h>
#include <net/if6.h>
],[ struct if_laddrreq a; ],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_HAVEIF_LADDRREQ="#define ISC_PLATFORM_HAVEIF_LADDRREQ 1"],
	[AC_MSG_RESULT(no)
	ISC_PLATFORM_HAVEIF_LADDRREQ="#undef ISC_PLATFORM_HAVEIF_LADDRREQ"])
AC_SUBST(ISC_PLATFORM_HAVEIF_LADDRREQ)

AC_MSG_CHECKING([for struct if_laddrconf])
AC_TRY_LINK([
#include <sys/types.h>
#include <net/if6.h>
],[ struct if_laddrconf a; ],
	[AC_MSG_RESULT(yes)
	ISC_PLATFORM_HAVEIF_LADDRCONF="#define ISC_PLATFORM_HAVEIF_LADDRCONF 1"],
	[AC_MSG_RESULT(no)
	ISC_PLATFORM_HAVEIF_LADDRCONF="#undef ISC_PLATFORM_HAVEIF_LADDRCONF"])
AC_SUBST(ISC_PLATFORM_HAVEIF_LADDRCONF)
a1398 38
AC_ARG_ENABLE(getifaddrs,
[  --enable-getifaddrs    Enable the use of getifaddrs() [[yes|no|glibc]].
             glibc: Use getifaddrs() in glibc if you know it supports IPv6.],
    want_getifaddrs="$enableval",  want_getifaddrs="yes")

case $want_getifaddrs in
yes|glibc)
#
# Do we have getifaddrs() ?
#
case $host in
*-linux*)
	# Some recent versions of glibc support getifaddrs() which does not
	# provide AF_INET6 addresses while the function provided by the USAGI
	# project handles the AF_INET6 case correctly.  We need to avoid
	# using the former but prefer the latter unless overridden by
	# --enable-getifaddrs=glibc.
	if test $use_getifaddrs = glibc
	then
		AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
	else
		save_LIBS="$LIBS"
		LIBS="-L/usr/local/v6/lib $LIBS"
		AC_CHECK_LIB(inet6, getifaddrs,
			LIBS="$LIBS -linet6"
			AC_DEFINE(HAVE_GETIFADDRS),
			LIBS=${save_LIBS})
	fi
	;;
*)
	AC_CHECK_FUNC(getifaddrs, AC_DEFINE(HAVE_GETIFADDRS))
	;;
esac
;;
no)
;;
esac

a1401 2
case $ac_cv_header_sys_sysctl_h in
yes)
a1413 2
;;
esac
a1428 40
AC_SUBST(ISC_PLATFORM_NEEDSTRSEP)

AC_CHECK_FUNC(memmove,
	[ISC_PLATFORM_NEEDMEMMOVE="#undef ISC_PLATFORM_NEEDMEMMOVE"],
	[ISC_PLATFORM_NEEDMEMMOVE="#define ISC_PLATFORM_NEEDMEMMOVE 1"])
AC_SUBST(ISC_PLATFORM_NEEDMEMMOVE)

AC_CHECK_FUNC(strtoul,
	[ISC_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"],
	[ISC_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRTOUL)

AC_CHECK_FUNC(strlcpy,
	[ISC_PLATFORM_NEEDSTRLCPY="#undef ISC_PLATFORM_NEEDSTRLCPY"],
	[ISC_PLATFORM_NEEDSTRLCPY="#define ISC_PLATFORM_NEEDSTRLCPY 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRLCPY)

AC_CHECK_FUNC(strlcat,
	[ISC_PLATFORM_NEEDSTRLCAT="#undef ISC_PLATFORM_NEEDSTRLCAT"],
	[ISC_PLATFORM_NEEDSTRLCAT="#define ISC_PLATFORM_NEEDSTRLCAT 1"])
AC_SUBST(ISC_PLATFORM_NEEDSTRLCAT)

ISC_PRINT_OBJS=
ISC_PRINT_SRCS=
AC_MSG_CHECKING(sprintf)
AC_TRY_COMPILE([
#include <stdio.h>
],
[ char buf[2]; return(*sprintf(buf,"x"));],
[
ISC_PRINT_OBJS="print.$O"
ISC_PRINT_SRCS="print.c"
ISC_PLATFORM_NEEDSPRINTF="#define ISC_PLATFORM_NEEDSPRINTF"
LWRES_PLATFORM_NEEDSPRINTF="#define LWRES_PLATFORM_NEEDSPRINTF"
],
[ISC_PLATFORM_NEEDSPRINTF="#undef ISC_PLATFORM_NEEDSPRINTF"
 LWRES_PLATFORM_NEEDSPRINTF="#undef LWRES_PLATFORM_NEEDSPRINTF"]
)
AC_SUBST(ISC_PLATFORM_NEEDSPRINTF)
AC_SUBST(LWRES_PLATFORM_NEEDSPRINTF)
d1431 5
a1435 6
	[ISC_PLATFORM_NEEDVSNPRINTF="#undef ISC_PLATFORM_NEEDVSNPRINTF"
	 LWRES_PLATFORM_NEEDVSNPRINTF="#undef LWRES_PLATFORM_NEEDVSNPRINTF"],
	[ISC_PRINT_OBJS="print.$O"
	 ISC_PRINT_SRCS="print.c"
	 ISC_PLATFORM_NEEDVSNPRINTF="#define ISC_PLATFORM_NEEDVSNPRINTF 1"
	 LWRES_PLATFORM_NEEDVSNPRINTF="#define LWRES_PLATFORM_NEEDVSNPRINTF 1"])
a1436 4
AC_SUBST(LWRES_PLATFORM_NEEDVSNPRINTF)
ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS $ISC_PRINT_OBJS"
ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS $ISC_PRINT_SRCS"

d1442 1
d1444 4
a1447 8
# values of type isc_int64_t. This will normally be "ll", but where
# the compiler treats "long long" as a alias for "long" and printf
# doesn't know about "long long" use "l".  Hopefully the sprintf
# will produce a inconsistant result in the later case.  If the compiler
# fails due to seeing "%lld" we fall back to "l".
#
# Win32 uses "%I64d", but that's defined elsewhere since we don't use
# configure on Win32.
d1450 3
a1452 11
AC_TRY_RUN([
#include <stdio.h>
main() {
	long long int j = 0;
	char buf[100];
	buf[0] = 0;
	sprintf(buf, "%lld", j);
	exit((sizeof(long long int) != sizeof(long int))? 0 :
	     (strcmp(buf, "0") != 0));
} 
],
a1454 2
	[AC_MSG_RESULT(l)
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "l"'],
a1474 5
# Time Zone Stuff
#
AC_CHECK_FUNC(tzset, AC_DEFINE(HAVE_TZSET))

#
a1518 14
# Compaq TruCluster requires more code for handling cluster IP aliases
#
case "$host" in
	*-dec-osf*)
		AC_CHECK_LIB(clua, clua_getaliasaddress, LIBS="-lclua $LIBS")
		AC_CHECK_FUNC(clua_getaliasaddress,
				AC_DEFINE(HAVE_TRUCLUSTER, 1,
					[Define if running under Compaq TruCluster]))
		;;
	*)
		;;
esac

#
d1542 1
a1542 1
	[*-bsdi4.[12]*])
a1586 25
# Check for if_nametoindex() for IPv6 scoped addresses support
#
AC_CHECK_FUNC(if_nametoindex, ac_cv_have_if_nametoindex=yes,
		ac_cv_have_if_nametoindex=no)
case $ac_cv_have_if_nametoindex in
no)
	case "$host" in
  	*-hp-hpux*)
  		AC_CHECK_LIB(ipv6, if_nametoindex,
				ac_cv_have_if_nametoindex=yes
				LIBS="-lipv6 $LIBS",)
  	;;
	esac
esac
case $ac_cv_have_if_nametoindex in
yes)
	ISC_PLATFORM_HAVEIFNAMETOINDEX="#define ISC_PLATFORM_HAVEIFNAMETOINDEX 1"
	;;
*)
	ISC_PLATFORM_HAVEIFNAMETOINDEX="#undef ISC_PLATFORM_HAVEIFNAMETOINDEX"
	;;
esac
AC_SUBST(ISC_PLATFORM_HAVEIFNAMETOINDEX)

#
d1593 1
a1593 1
sgmltrees="/usr/pkg/share/sgml /usr/local/share/sgml /usr/share/sgml"
d1646 1
a1646 19
#
# Look for the SGML catalog.
# Its location varies, so far we have seen:
#
# 	NetBSD 	/usr/pkg/share/sgml/docbook/catalog
# 	FreeBSD	/usr/local/share/sgml/docbook/catalog
#	Linux	/usr/local/share/dsssl/docbook/catalog
#		/usr/share/sgml/docbook/dsssl-stylesheets/catalog
#
catalogpath=""
for d in $sgmltrees 
do
	catalogpath="$catalogpath $d"
	for s in docbook/dsssl-stylesheets
	do
		catalogpath="$catalogpath $d/$s"
	done
done
NOM_PATH_FILE(SGMLCATALOG, catalog, $catalogpath)
d1653 2
a1654 2
# 	NetBSD 	/usr/pkg/share/sgml/docbook/dsssl/modular/
# 	FreeBSD	/usr/local/share/sgml/docbook/dsssl/modular/
a1655 1
#		/usr/share/sgml/docbook/dsssl-stylesheets/
d1663 1
a1663 1
	for s in docbook/dsssl/modular dsssl/docbook docbook/dsssl-stylesheets
d1672 1
a1672 7
# Look for XML declarations.
# Its location varies, so far we have seen:
#
# 	NetBSD 	/usr/pkg/share/sgml/docbook/dsssl/modular/dtds/decls/
# 	FreeBSD	/usr/local/share/sgml/docbook/dsssl/modular/dtds/decls/
#	Linux	/usr/local/share/dsssl/docbook/dtds/decls/
#		/usr/share/sgml/docbook/dsssl-stylesheets/dtds/decls/
d1675 1
a1675 9
xmlpath=""
for d in $sgmltrees 
do
	for s in docbook/dsssl/modular dsssl/docbook docbook/dsssl-stylesheets
	do
		xmlpath="$xmlpath $d/$s"
	done
done
NOM_PATH_FILE(XMLDCL, dtds/decls/xml.dcl, $xmlpath)
a1693 1
AC_SUBST(BIND9_BIND9_BUILDINCLUDE)
a1699 1
	BIND9_BIND9_BUILDINCLUDE="-I${BIND9_TOP_BUILDDIR}/lib/bind9/include"
a1705 1
	BIND9_BIND9_BUILDINCLUDE=""
d1708 2
a1709 2
AC_SUBST_FILE(BIND9_MAKE_INCLUDES)
BIND9_MAKE_INCLUDES=$BIND9_TOP_BUILDDIR/make/includes
a1729 3
AC_SUBST_FILE(LIBBIND9_API)
LIBBIND9_API=$srcdir/lib/bind9/api

a1763 3
	lib/bind9/Makefile
	lib/bind9/include/Makefile
	lib/bind9/include/bind9/Makefile
d1773 3
@


1.1.1.3
log
@ISC BIND release 9.3.1. ok deraadt@@
@
text
@d21 1
a21 1
AC_REVISION($Revision: 1.294.2.23.2.39 $)
a263 17
AC_CHECK_TYPE(socklen_t,
[AC_DEFINE(ISC_SOCKADDR_LEN_T, socklen_t)],
[
AC_TRY_COMPILE(
[
#include <sys/types.h>
#include <sys/socket.h>
int getsockname(int, struct sockaddr *, size_t *);
],[],
[AC_DEFINE(ISC_SOCKADDR_LEN_T, size_t)],
[AC_DEFINE(ISC_SOCKADDR_LEN_T, int)])
],
[
#include <sys/types.h>
#include <sys/socket.h>
])
AC_SUBST(ISC_SOCKADDR_LEN_T)
a347 12
openssldirs="/usr /usr/local /usr/local/ssl /usr/pkg"
if test "$use_openssl" = "auto"
then
	for d in $openssldirs
	do
		if test -f $d/include/openssl/opensslv.h
		then
			use_openssl=$d
			break
		fi
	done
fi
a353 5
	auto)
		DST_OPENSSL_INC=""
		USE_OPENSSL=""
		AC_MSG_RESULT(not found)
		;;
d355 1
a355 1
		if test "$use_openssl" = "yes"
d358 1
d372 6
a764 5
			case $host in
			*-freebsd5.3|*-freebsd5.3.*)
				AC_DEFINE(NEED_PTHREAD_SCOPE_SYSTEM)
				;;
			esac
a907 5
	case "$host" in
	*-hp-hpux*)
		LDFLAGS="-Wl,+vnocompatwarnings $LDFALGS"
		;;
	esac
d931 1
a931 1
		LDFLAGS="-Wl,+vnocompatwarnings $LDFALGS"
a1041 7
		case "$host" in
		*) LIBTOOL_ALLOW_UNDEFINED= ;;
		esac
		case "$host" in
		*-ibm-aix*) LIBTOOL_IN_MAIN="-Wl,-bI:T_testlist.imp" ;;
		*) LIBTOOL_IN_MAIN= ;;
		esac;
a1051 2
		LIBTOOL_ALLOW_UNDEFINED=
		LIBTOOL_IN_MAIN=
a1067 2
AC_SUBST(LIBTOOL_ALLOW_UNDEFINED)
AC_SUBST(LIBTOOL_IN_MAIN)
d1595 1
a1595 1
	if test $want_getifaddrs = glibc
a1832 3
	*-aix5.1.*)
		hack_shutup_pthreadonceinit=yes
		;;
d2122 4
a2125 1
	lib/dns/include/dst/Makefile
@


1.1.1.4
log
@ISC BIND release 9.3.2
@
text
@d1 1
a1 1
# Copyright (C) 2004, 2005  Internet Systems Consortium, Inc. ("ISC")
d21 1
a21 1
AC_REVISION($Revision: 1.294.2.23.2.51 $)
a263 1
AC_CHECK_TYPE(uintptr_t,unsigned long)
d611 152
a762 1
sinclude(config.threads.in)dnl
d793 1
a793 5
			*-freebsd5.[[012]]|*-freebsd5.[[012]].*);;
			*-freebsd5.[[3456789]]|*-freebsd5.[[3456789]].*)
				AC_DEFINE(NEED_PTHREAD_SCOPE_SYSTEM)
				;;
			*-freebsd6.*)
d887 1
d942 1
a942 1
		LDFLAGS="-Wl,+vnocompatwarnings $LDFLAGS"
d964 1
a964 1
			STD_CWARNINGS="+w1 +W 474,530,2193,2236"
d968 1
a968 1
		LDFLAGS="-Wl,+vnocompatwarnings $LDFLAGS"
a1416 4
        ISC_PLATFORM_NEEDNTOP="#define ISC_PLATFORM_NEEDNTOP 1"],
        [AC_MSG_RESULT(assuming inet_ntop needed)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_ntop.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_ntop.c"
d1440 1
a1440 7
	ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"],
        [AC_MSG_RESULT(assuming inet_pton needed)
        ISC_EXTRA_OBJS="$ISC_EXTRA_OBJS inet_pton.$O"
        ISC_EXTRA_SRCS="$ISC_EXTRA_SRCS inet_pton.c"
        ISC_PLATFORM_NEEDPTON="#define ISC_PLATFORM_NEEDPTON 1"],
        [AC_MSG_RESULT(assuming target platform has working inet_pton)
        ISC_PLATFORM_NEEDPTON="#undef ISC_PLATFORM_NEEDPTON"])
d1706 2
a1707 6
	[ISC_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"
	 LWRES_PLATFORM_NEEDSTRTOUL="#undef ISC_PLATFORM_NEEDSTRTOUL"
	 GENRANDOMLIB=""],
	[ISC_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"
	 LWRES_PLATFORM_NEEDSTRTOUL="#define ISC_PLATFORM_NEEDSTRTOUL 1"
	 "GENRANDOMLIB=${ISCLIBS}"])
a1708 2
AC_SUBST(LWRES_PLATFORM_NEEDSTRTOUL)
AC_SUBST(GENRANDOMLIB)
a1762 3
# Digital Unix 4.0 (gcc?) (long long) is 64 bits as is its long. It uses
# %ld even for (long long)/
#
d1779 1
a1779 2
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "ll"'],
d1781 1
a1781 2
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "l"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "l"'],
d1783 1
a1783 2
	ISC_PLATFORM_QUADFORMAT='#define ISC_PLATFORM_QUADFORMAT "ll"'
	LWRES_PLATFORM_QUADFORMAT='#define LWRES_PLATFORM_QUADFORMAT "ll"'])
a1784 1
AC_SUBST(LWRES_PLATFORM_QUADFORMAT)
a1805 9
AC_MSG_CHECKING(for optarg decarartion)
AC_TRY_COMPILE([
#include <unistd.h>
],
[optarg = 0;],
[AC_MSG_RESULT(yes)],
[AC_MSG_RESULT(no)
AC_DEFINE(NEED_OPTARG, 1, [Defined if extern char *optarg is not declared.])])

d1846 1
a1846 3
],[
ISC_PLATFORM_RLIMITTYPE="#define ISC_PLATFORM_RLIMITTYPE long long int"
AC_MSG_RESULT(cannot determine type of rlim_cur when cross compiling - assuming long long int)])
a1960 16
#  The following sets up how non-blocking i/o is established.
#  Sunos, cygwin and solaris 2.x (x<5) require special handling.
#
case "$host" in
*-sunos*) AC_DEFINE(PORT_NONBLOCK, O_NDELAY);;
*-cygwin*) AC_DEFINE(PORT_NONBLOCK, O_NDELAY);;
*-solaris2.[[01234]])
	AC_DEFINE(PORT_NONBLOCK, O_NONBLOCK)
	AC_DEFINE(USE_FIONBIO_IOCTL, 1,
		  [Defined if you need to use ioctl(FIONBIO) instead a fcntl call to make non-blocking.])
	;;
*) AC_DEFINE(PORT_NONBLOCK, O_NONBLOCK,
	     [Sets which flag to pass to open/fcntl to make non-blocking (O_NDELAY/O_NONBLOCK).])
	;;
esac
#
d1966 3
d1970 1
a1970 1
# Look for TeX.
d1973 2
a1974 5
AC_PATH_PROGS(LATEX, latex, latex)
AC_SUBST(LATEX)

AC_PATH_PROGS(PDFLATEX, pdflatex, pdflatex)
AC_SUBST(PDFLATEX)
d1977 1
a1977 1
# Look for xsltproc (libxslt)
d1980 2
a1981 6
AC_PATH_PROG(XSLTPROC, xsltproc, xsltproc)
AC_SUBST(XSLTPROC)

#
# Look for xmllint (libxml2)
#
d1983 2
a1984 2
AC_PATH_PROG(XMLLINT, xmllint, xmllint)
AC_SUBST(XMLLINT)
d2021 7
a2027 4
# Look for Docbook-XSL stylesheets.  Location probably varies by
# system.  Guessing where it might be found, based on where SGML stuff
# lives on some systems.  FreeBSD is the only one I'm sure of at the
# moment.
d2029 10
a2038 2

docbook_xsl_trees="/usr/pkg/share/xsl /usr/local/share/xsl /usr/share/xsl"
d2041 3
a2043 1
# Look for stylesheets we need.
d2045 4
a2048 9

NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_HTML, docbook/html/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_XHTML, docbook/xhtml/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_STYLE_MAN, docbook/manpages/docbook.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNK_HTML, docbook/html/chunk.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNK_XHTML, docbook/xhtml/chunk.xsl, $docbook_xsl_trees)

#
# Same dance for db2latex
d2050 1
a2050 1
# No idea where this lives except on FreeBSD.
d2053 10
a2062 1
db2latex_xsl_trees="/usr/local/share"
d2065 7
a2071 1
# Look for stylesheets we need.
d2074 9
a2082 1
NOM_PATH_FILE(XSLT_DB2LATEX_STYLE, db2latex/xsl/docbook.xsl, $db2latex_xsl_trees)
d2085 1
a2085 2
# Look for "admonition" image directory.  Can't use NOM_PATH_FILE()
# because it's a directory, so just do the same things, inline.
d2088 1
a2088 17
AC_MSG_CHECKING(for db2latex/xsl/figures)
for d in $db2latex_xsl_trees
do
	dd=$d/db2latex/xsl/figures
	if test -d $dd
	then
		XSLT_DB2LATEX_ADMONITIONS=$dd
		AC_MSG_RESULT($dd)
		break
	fi
done
if test "X$XSLT_DB2LATEX_ADMONITIONS" = "X"
then
	AC_MSG_RESULT(not found)
	XSLT_DB2LATEX_ADMONITIONS=db2latex/xsl/figures
fi
AC_SUBST(XSLT_DB2LATEX_ADMONITIONS)
d2216 3
d2220 1
a2220 1
	doc/xsl/Makefile
a2221 4
	doc/xsl/isc-docbook-chunk.xsl
	doc/xsl/isc-docbook-html.xsl
	doc/xsl/isc-docbook-latex.xsl
	doc/xsl/isc-manpage.xsl
@


1.1.1.5
log
@ISC BIND release 9.3.3
@
text
@d1 1
a1 1
# Copyright (C) 2004-2006  Internet Systems Consortium, Inc. ("ISC")
d21 1
a21 1
AC_REVISION($Revision: 1.294.2.23.2.73 $)
a359 1
OPENSSL_WARNING=
d366 1
a366 1
openssldirs="/usr /usr/local /usr/local/ssl /usr/pkg /usr/sfw"
a418 3
			*-hp-hpux*)
				DNS_OPENSSL_LIBS="-L$use_openssl/lib -Wl,+b: -lcrypto"
				;;
d465 6
a470 15
		AC_CHECK_FUNC(DH_generate_parameters,
			      AC_DEFINE(HAVE_DH_GENERATE_PARAMETERS, 1,
					[Define if libcrypto has DH_generate_parameters]))
		AC_CHECK_FUNC(RSA_generate_key,
			      AC_DEFINE(HAVE_RSA_GENERATE_KEY, 1,
					[Define if libcrypto has RSA_generate_key]))
		AC_CHECK_FUNC(DSA_generate_parameters,
			      AC_DEFINE(HAVE_DSA_GENERATE_PARAMETERS, 1,
					[Define if libcrypto has DSA_generate_parameters]))

AC_ARG_ENABLE(openssl-version-check,
[AC_HELP_STRING([--enable-openssl-version-check],
        [Check OpenSSL Version @@<:@@default=yes@@:>@@])])
case "$enable_openssl_version_check" in
yes|'')
d476 1
a476 3
        if ((OPENSSL_VERSION_NUMBER >= 0x009070cfL &&
	     OPENSSL_VERSION_NUMBER < 0x00908000L) ||
	     OPENSSL_VERSION_NUMBER >= 0x0090804fL)
d480 1
a480 2
	printf("Require OPENSSL_VERSION_NUMBER 0x009070cf or greater (0.9.7l)\n"
	       "Require OPENSSL_VERSION_NUMBER 0x0090804f or greater (0.9.8d)\n\n");
d483 1
a483 1
		],
d486 1
a486 2
                 OPENSSL_WARNING=yes
		],
d488 22
a509 6
;;
no)
	AC_MSG_RESULT(Skipped OpenSSL version check)
;;
esac

a615 44
	if test "X$GCC" = "Xyes"; then
		case "$host" in
		*-freebsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-openbsd*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			LIBS="$LIBS -lthread"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		esac
	else
		case $host in
		*-dec-osf*)
			CC="$CC -pthread"
			CCOPT="$CCOPT -pthread"
			;;
		*-solaris*)
			CC="$CC -mt"
			CCOPT="$CCOPT -mt"
			;;
		*-ibm-aix*)
			STD_CDEFINES="$STD_CDEFINES -D_THREAD_SAFE"
			;;
		*-sco-sysv*uw*|*-*-sysv*UnixWare*)
			CC="$CC -Kthread"
			CCOPT="$CCOPT -Kthread"
			;;
		*-*-sysv*OpenUNIX*)
			CC="$CC -Kpthread"
			CCOPT="$CCOPT -Kpthread"
			;;
		esac
	fi
	ALWAYS_DEFINES="-D_REENTRANT"
	ISC_PLATFORM_USETHREADS="#define ISC_PLATFORM_USETHREADS 1"
	thread_dir=pthreads
d619 7
a625 8
	AC_CHECK_FUNC(sigwait,
		      AC_DEFINE(HAVE_SIGWAIT),
		      AC_CHECK_LIB(c, sigwait,
		      AC_DEFINE(HAVE_SIGWAIT),
		      AC_CHECK_LIB(pthread, sigwait,
				   AC_DEFINE(HAVE_SIGWAIT),
				   AC_CHECK_LIB(pthread, _Psigwait,
					        AC_DEFINE(HAVE_SIGWAIT),))))
d689 44
d792 1
a792 12
	AC_MSG_CHECKING(if "$CC" supports -fno-strict-aliasing)
	SAVE_CFLAGS=$CFLAGS
	CFLAGS=-fno-strict-aliasing
	AC_TRY_COMPILE(,, [FNOSTRICTALIASING=yes],[FNOSTRICTALIASING=no])
	CFLAGS=$SAVE_CFLAGS
	if test "$FNOSTRICTALIASING" = "yes"; then
		AC_MSG_RESULT(yes)
	STD_CWARNINGS="$STD_CWARNINGS -W -Wall -Wmissing-prototypes -Wcast-qual -Wwrite-strings -Wformat -Wpointer-arith -fno-strict-aliasing"
	else
		AC_MSG_RESULT(no)
	STD_CWARNINGS="$STD_CWARNINGS -W -Wall -Wmissing-prototypes -Wcast-qual -Wwrite-strings -Wformat -Wpointer-arith"
	fi
d1570 1
a1570 1
	 LWRES_PLATFORM_NEEDSTRTOUL="#undef LWRES_PLATFORM_NEEDSTRTOUL"
d1573 2
a1574 2
	 LWRES_PLATFORM_NEEDSTRTOUL="#define LWRES_PLATFORM_NEEDSTRTOUL 1"
	 GENRANDOMLIB='${ISCLIBS}'])
a1688 1
GEN_NEED_OPTARG="-DNEED_OPTARG=1"
a1751 11
# Some hosts need msg_namelen to match the size of the socket structure.
# Some hosts don't set msg_namelen appropriately on return from recvmsg().
#
case $host in
*os2*|*hp-mpeix*)
	AC_DEFINE(BROKEN_RECVMSG, 1,
		  [Define if recvmsg() does not meet all of the BSD socket API specifications.])
	;;
esac

#
d1768 1
a1768 1
	*-aix5.[[123]].*)
a1783 3
	*-solaris2.10)
		hack_shutup_pthreadonceinit=yes
		;;
a1863 10
# Solaris 2.5.1 and earlier cannot bind() then connect() a TCP socket.
# This prevents the source address being set.
#
case "$host" in
*-solaris2.[[012345]]|*-solaris2.5.1)
	AC_DEFINE(BROKEN_TCP_BIND_BEFORE_CONNECT, 1,
		  [Define if you cannot bind() before connect() for TCP sockets.])
	;;
esac
#
a2038 22
if test "$cross_compiling" = "yes"; then
	if test -z "$BUILD_CC"; then
		AC_ERROR([BUILD_CC not set])
	fi
	BUILD_CFLAGS="$BUILD_CFLAGS"
	BUILD_CPPFLAGS="$BUILD_CPPFLAGS"
	BUILD_LDFLAGS="$BUILD_LDFLAGS"
	BUILD_LIBS="$BUILD_LIBS"
else
	BUILD_CC="$CC" 
	BUILD_CFLAGS="$CFLAGS" 
	BUILD_CPPFLAGS="$CPPFLAGS $GEN_NEED_OPTARG"
	BUILD_LDFLAGS="$LDFLAGS"
	BUILD_LIBS="$LIBS"
fi

AC_SUBST(BUILD_CC)
AC_SUBST(BUILD_CFLAGS)
AC_SUBST(BUILD_CPPFLAGS)
AC_SUBST(BUILD_LDFLAGS)
AC_SUBST(BUILD_LIBS)

a2117 24

if test "X$OPENSSL_WARNING" != "X"; then
cat << \EOF
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING                                                                 WARNING
WARNING         Your OpenSSL crypto library may be vulnerable to        WARNING
WARNING         one or more of the the following known security         WARNING
WARNING         flaws:                                                  WARNING
WARNING                                                                 WARNING
WARNING         CAN-2002-0659, CAN-2006-4339, CVE-2006-2937 and         WARNING
WARNING         CVE-2006-2940.                                          WARNING
WARNING                                                                 WARNING
WARNING         It is recommended that you upgrade to OpenSSL           WARNING
WARNING         version 0.9.8d/0.9.7l (or greater).                     WARNING
WARNING                                                                 WARNING
WARNING         You can disable this warning by specifying:             WARNING
WARNING                                                                 WARNING
WARNING               --disable-openssl-version-check          	        WARNING
WARNING                                                                 WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING WARNING
EOF
fi
@


1.1.1.6
log
@ISC BIND release 9.4.2
@
text
@d1 1
a1 1
# Copyright (C) 2004-2007  Internet Systems Consortium, Inc. ("ISC")
d4 1
a4 1
# Permission to use, copy, modify, and/or distribute this software for any
d21 1
a21 1
AC_REVISION($Revision: 1.355.18.71 $)
d24 1
a24 1
AC_PREREQ(2.59)
a33 1
AC_PROG_LN_S
a39 7
#
# Make very sure that these are the first files processed by
# config.status, since we use the processed output as the input for
# AC_SUBST_FILE() subsitutions in other files.
#
AC_CONFIG_FILES([make/rules make/includes])

a356 1

a422 15
			*-apple-darwin*)
				#
				# Apple's ld seaches for serially for dynamic
				# then static libraries.  This means you can't
				# use -L to override dynamic system libraries
				# with static ones when linking.  Instead
				# we specify a absolute path.
				#
				if test -f "$use_openssl/lib/libcrypto.dylib"
				then
					DNS_OPENSSL_LIBS="-L$use_openssl/lib -lcrypto"
				else
					DNS_OPENSSL_LIBS="$use_openssl/lib/libcrypto.a"
				fi
				;;
d469 10
a997 1

a1689 18
AC_CHECK_HEADERS(sys/un.h,
ISC_PLATFORM_HAVESYSUNH="#define ISC_PLATFORM_HAVESYSUNH 1"
,
ISC_PLATFORM_HAVESYSUNH="#undef ISC_PLATFORM_HAVESYSUNH"
)
AC_SUBST(ISC_PLATFORM_HAVESYSUNH)

case "$host" in
*-solaris*)
	AC_DEFINE(NEED_SECURE_DIRECTORY, 1,
		  [Define if connect does not honour the permission on the UNIX domain socket.])
	;;
*-sunos*)
	AC_DEFINE(NEED_SECURE_DIRECTORY, 1,
		  [Define if connect does not honour the permission on the UNIX domain socket.])
	;;
esac

a1849 7
AC_CHECK_HEADERS(strings.h,
  ISC_PLATFORM_HAVESTRINGSH="#define ISC_PLATFORM_HAVESTRINGSH 1"
,
  ISC_PLATFORM_HAVESTRINGSH="#undef ISC_PLATFORM_HAVESTRINGSH"
)
AC_SUBST(ISC_PLATFORM_HAVESTRINGSH)

a1875 152
# Machine architecture dependent features
#
AC_ARG_ENABLE(atomic,
	[  --enable-atomic	enable machine specific atomic operations
                        [[default=autodetect]]],
			enable_atomic="$enableval",
			enable_atomic="autodetect")
case "$enable_atomic" in
	yes|''|autodetect)
		use_atomic=yes
		;;
	no)
		use_atomic=no
		arch=noatomic
		;;
esac

ISC_PLATFORM_USEOSFASM="#undef ISC_PLATFORM_USEOSFASM"
if test "$use_atomic" = "yes"; then
	AC_MSG_CHECKING([architecture type for atomic operations])
	have_atomic=yes		# set default
	case "$host" in
	[i[3456]86-*])
		# XXX: some old x86 architectures actually do not support
		#      (some of) these operations.  Do we need stricter checks?
AC_TRY_RUN([
main() {
	exit((sizeof(void *) == 8) ? 0 : 1);
}
],
		[arch=x86_64],
		[arch=x86_32],
	        [arch=x86_32])
	;;
	x86_64-*)
		arch=x86_64
	;;
	alpha*-*)
		arch=alpha
	;;
	powerpc-*)
		arch=powerpc
	;;
	mips-*|mipsel-*|mips64-*|mips64el-*)
		arch=mips
	;;
	ia64-*)
		arch=ia64
	;;
	*)
		have_atomic=no
		arch=noatomic
	;;
	esac
	AC_MSG_RESULT($arch)
fi

if test "$have_atomic" = "yes"; then
	AC_MSG_CHECKING([compiler support for inline assembly code])

	compiler=generic
	# Check whether the compiler supports the assembly syntax we provide.
	if test "X$GCC" = "Xyes"; then
		# GCC's ASM extension always works
		compiler=gcc
		if test $arch = "x86_64"; then
			# We can share the same code for gcc with x86_32
			arch=x86_32
		fi
		if test $arch = "powerpc"; then
			#
			# The MacOS (and maybe others) uses "r0" for register
			# zero. Under linux/ibm it is "0" for register 0.
			# Probe to see if we have a MacOS style assembler.
			#
			AC_MSG_CHECKING([Checking for MacOS style assembler syntax])
			AC_TRY_COMPILE(, [
			__asm__ volatile ("li r0, 0x0\n"::);
			], [
			AC_MSG_RESULT(yes)
			compiler="mac"
			ISC_PLATFORM_USEMACASM="#define ISC_PLATFORM_USEMACASM 1"
			], [AC_MSG_RESULT(no)])
		fi
	else
		case "$host" in
		alpha*-dec-osf*)
			# Tru64 compiler has its own syntax for inline 
			# assembly.
			AC_TRY_COMPILE(, [
#ifndef __DECC
#error "unexpected compiler"
#endif
				return (0);],
				[compiler=osf],)
		;;
		powerpc-ibm-aix*)
			compiler=aix
		;;
		esac
	fi
	case "$compiler" in
	gcc)
		ISC_PLATFORM_USEGCCASM="#define ISC_PLATFORM_USEGCCASM 1"
		;;
	osf)
		ISC_PLATFORM_USEOSFASM="#define ISC_PLATFORM_USEOSFASM 1"
		;;
	aix)
		;;
	mac)
		;;
	*)
		# See if the generic __asm function works.  If not,
		# we need to disable the atomic operations.
		AC_TRY_LINK(, [
					__asm("nop")
				],
		[compiler="standard"
		ISC_PLATFORM_USESTDASM="#define ISC_PLATFORM_USESTDASM 1"],
		[compiler="not supported (atomic operations disabled)"
		have_atomic=no
		arch=noatomic ]);
		;;
	esac

	AC_MSG_RESULT($compiler)
fi

if test "$have_atomic" = "yes"; then
	ISC_PLATFORM_HAVEXADD="#define ISC_PLATFORM_HAVEXADD 1"
	ISC_PLATFORM_HAVECMPXCHG="#define ISC_PLATFORM_HAVECMPXCHG 1"
	ISC_PLATFORM_HAVEATOMICSTORE="#define ISC_PLATFORM_HAVEATOMICSTORE 1"
else
	ISC_PLATFORM_HAVEXADD="#undef ISC_PLATFORM_HAVEXADD"
	ISC_PLATFORM_HAVECMPXCHG="#undef ISC_PLATFORM_HAVECMPXCHG"
	ISC_PLATFORM_HAVEATOMICSTORE="#undef ISC_PLATFORM_HAVEATOMICSTORE"
fi

AC_SUBST(ISC_PLATFORM_HAVEXADD)
AC_SUBST(ISC_PLATFORM_HAVECMPXCHG)
AC_SUBST(ISC_PLATFORM_HAVEATOMICSTORE)

AC_SUBST(ISC_PLATFORM_USEGCCASM)
AC_SUBST(ISC_PLATFORM_USEOSFASM)
AC_SUBST(ISC_PLATFORM_USESTDASM)
AC_SUBST(ISC_PLATFORM_USEMACASM)

ISC_ARCH_DIR=$arch
AC_SUBST(ISC_ARCH_DIR)

#
a1917 7
# Look for w3m
#

AC_PATH_PROGS(W3M, w3m, w3m)
AC_SUBST(W3M)

#
a1982 4
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNKTOC_HTML, docbook/html/chunktoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_CHUNKTOC_XHTML, docbook/xhtml/chunktoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_MAKETOC_HTML, docbook/html/maketoc.xsl, $docbook_xsl_trees)
NOM_PATH_FILE(XSLT_DOCBOOK_MAKETOC_XHTML, docbook/xhtml/maketoc.xsl, $docbook_xsl_trees)
a2021 76
# IDN support
#
AC_ARG_WITH(idn,
	[  --with-idn[=MPREFIX]   enable IDN support using idnkit [default PREFIX]],
	use_idn="$withval", use_idn="no")
case "$use_idn" in
yes)
	if test X$prefix = XNONE ; then
		idn_path=/usr/local
	else
		idn_path=$prefix
	fi
	;;
no)
	;;
*)
	idn_path="$use_idn"
	;;
esac

iconvinc=
iconvlib=
AC_ARG_WITH(libiconv,
	[  --with-libiconv[=IPREFIX]   GNU libiconv are in IPREFIX [default PREFIX]],
	use_libiconv="$withval", use_libiconv="no")
case "$use_libiconv" in
yes)
	if test X$prefix = XNONE ; then
		iconvlib="-L/usr/local/lib -R/usr/local/lib -liconv"
	else
		iconvlib="-L$prefix/lib -R$prefix/lib -liconv"
	fi
	;;
no)
	iconvlib=
	;;
*)
	iconvlib="-L$use_libiconv/lib -R$use_libiconv/lib -liconv"
	;;
esac

AC_ARG_WITH(iconv,
	[  --with-iconv[=LIBSPEC]   specify iconv library [default -liconv]],
	iconvlib="$withval")
case "$iconvlib" in
no)
	iconvlib=
	;;
yes)
	iconvlib=-liconv
	;;
esac

AC_ARG_WITH(idnlib,
	[  --with-idnlib=ARG    specify libidnkit],
	idnlib="$withval", idnlib="no")
if test "$idnlib" = yes; then
	AC_MSG_ERROR([You must specify ARG for --with-idnlib.])
fi

IDNLIBS=
if test "$use_idn" != no; then
	AC_DEFINE(WITH_IDN, 1, [define if idnkit support is to be included.])
	STD_CINCLUDES="$STD_CINCLUDES -I$idn_path/include"
	if test "$idnlib" != no; then
		IDNLIBS="$idnlib $iconvlib"
	else
		IDNLIBS="-L$idn_path/lib -lidnkit $iconvlib"
	fi
fi
AC_SUBST(IDNLIBS)

AC_CHECK_HEADERS(locale.h)
AC_CHECK_FUNCS(setlocale)

#
a2076 39
#
# Configure any DLZ drivers.
#
# If config.dlz.in selects one or more DLZ drivers, it will set
# USE_DLZ to a non-empty value, which will be our clue to
# enable the DLZ core functions.
#
# This section has to come after the libtool stuff because it needs to
# know how to name the driver object files.
#

USE_DLZ=""
DLZ_DRIVER_INCLUDES=""
DLZ_DRIVER_LIBS=""
DLZ_DRIVER_SRCS=""
DLZ_DRIVER_OBJS=""

sinclude(contrib/dlz/config.dlz.in)

AC_MSG_CHECKING(for DLZ)

if test -n "$USE_DLZ"
then
	AC_MSG_RESULT(yes)
	USE_DLZ="-DDLZ $USE_DLZ"
	DLZ_DRIVER_RULES=contrib/dlz/drivers/rules
	AC_CONFIG_FILES([$DLZ_DRIVER_RULES])
else
	AC_MSG_RESULT(no)
	DLZ_DRIVER_RULES=/dev/null
fi

AC_SUBST(USE_DLZ)
AC_SUBST(DLZ_DRIVER_INCLUDES)
AC_SUBST(DLZ_DRIVER_LIBS)
AC_SUBST(DLZ_DRIVER_SRCS)
AC_SUBST(DLZ_DRIVER_OBJS)
AC_SUBST_FILE(DLZ_DRIVER_RULES)

d2099 3
a2101 17
#
# Commands to run at the end of config.status.
# Don't just put these into configure, it won't work right if somebody
# runs config.status directly (which autoconf allows).
#

AC_CONFIG_COMMANDS(
	[chmod],
	[chmod a+x isc-config.sh])

#
# Files to configure.  These are listed here because we used to
# specify them as arguments to AC_OUTPUT.  It's (now) ok to move these
# elsewhere if there's a good reason for doing so.
#

AC_CONFIG_FILES([
a2116 3
	lib/isc/$arch/Makefile
	lib/isc/$arch/include/Makefile
	lib/isc/$arch/include/isc/Makefile
d2170 1
a2171 1
	doc/xsl/Makefile
d2176 2
a2177 7
])

#
# Do it
#

AC_OUTPUT
@


