head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.2
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15;
locks; strict;
comment	@.\" @;


1.19
date	2017.08.22.13.32.50;	author ajacoutot;	state Exp;
branches;
next	1.18;
commitid	MXtLTX7op4UX4Flo;

1.18
date	2017.05.09.12.23.04;	author ajacoutot;	state Exp;
branches;
next	1.17;
commitid	OjgUz03YoaEbYhjP;

1.17
date	2017.05.05.08.07.36;	author ajacoutot;	state Exp;
branches;
next	1.16;
commitid	T8jO3kw3ttawXhe6;

1.16
date	2017.04.08.20.36.50;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	TMjVDoDElX5unV3J;

1.15
date	2017.02.07.17.58.43;	author jmc;	state Exp;
branches;
next	1.14;
commitid	def6fVSgCU5WqMIE;

1.14
date	2017.02.07.08.58.47;	author ajacoutot;	state Exp;
branches;
next	1.13;
commitid	qg78hlYil1VLF7e1;

1.13
date	2016.12.08.09.47.37;	author ajacoutot;	state Exp;
branches;
next	1.12;
commitid	5yhVCU8MXmVm9GUP;

1.12
date	2016.11.30.12.58.28;	author ajacoutot;	state Exp;
branches;
next	1.11;
commitid	wkS4a5Hu5l0bHxEH;

1.11
date	2016.11.29.09.00.05;	author ajacoutot;	state Exp;
branches;
next	1.10;
commitid	P5zuyteJKf2YC07U;

1.10
date	2016.11.16.14.54.26;	author ajacoutot;	state Exp;
branches;
next	1.9;
commitid	S07AC7qVMNjl2NNq;

1.9
date	2016.11.15.16.29.03;	author ajacoutot;	state Exp;
branches;
next	1.8;
commitid	tgmZu6LqXceKiP5v;

1.8
date	2016.11.10.16.14.47;	author ajacoutot;	state Exp;
branches;
next	1.7;
commitid	0q9lq1oOTCqcczHX;

1.7
date	2016.11.08.15.36.50;	author ajacoutot;	state Exp;
branches;
next	1.6;
commitid	Wf6b6DmFs19nBjwC;

1.6
date	2016.11.03.16.12.23;	author ajacoutot;	state Exp;
branches;
next	1.5;
commitid	CDkT0tOnQnsgR1ex;

1.5
date	2016.09.10.16.07.33;	author ajacoutot;	state Exp;
branches;
next	1.4;
commitid	KAblsU0Djt7bTJ9b;

1.4
date	2016.09.07.16.17.12;	author ajacoutot;	state Exp;
branches;
next	1.3;
commitid	Ho24OG4OvYmWubnA;

1.3
date	2016.09.07.15.19.33;	author ajacoutot;	state Exp;
branches;
next	1.2;
commitid	nm7rZP8I3lAOhOo7;

1.2
date	2016.09.05.11.26.18;	author ajacoutot;	state Exp;
branches;
next	1.1;
commitid	Rn5PdkOH4f4LfLG0;

1.1
date	2016.09.05.11.04.45;	author ajacoutot;	state Exp;
branches;
next	;
commitid	cAZqvnQoXzHyIThf;


desc
@@


1.19
log
@Add support for KARL:
- only extract the according /usr/share/compile/GENERIC{,.MP}
- if a "kernel" patch was properly installed (or rolled back), run
  /usr/libexec/reorder_kernel _once_ just before exiting
- don't backup /bsd anymore, reorder_kernel already does it for us
- drop 2 now unused functions: install_kernel() and sp_cleanup()

While it appears to work fine after some quick testing, it should still be
considered WIP.
@
text
@.\"	$OpenBSD: syspatch.8,v 1.18 2017/05/09 12:23:04 ajacoutot Exp $
.\"
.\" Copyright (c) 2016 Antoine Jacoutot <ajacoutot@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: May 9 2017 $
.Dt SYSPATCH 8
.Os
.Sh NAME
.Nm syspatch
.Nd manage base system binary patches
.Sh SYNOPSIS
.Nm syspatch
.Op Fl c | l | R | r
.Sh DESCRIPTION
.Nm
is a utility to fetch, verify, install and revert
.Ox
binary patches.
.Pp
When run without any options,
.Nm syspatch
will apply
.Em all
missing patches, creating a rollback tarball containing the files it is about
to replace, then extracting and installing all files contained in the syspatch
tarball.
Patches are cumulative and as such it is not possible to install only a subset
of them.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl c
List available patches; suitable for
.Xr cron 8 .
.It Fl l
List installed patches.
.It Fl R
Revert all patches.
.It Fl r
Revert the most recently installed patch.
.El
.Sh FILES
.Bl -tag -width "/etc/installurl" -compact
.It Pa /etc/installurl
.Ox
mirror top-level URL for fetching patches.
.It Pa /var/syspatch/*
Directories containing the rollback tarball and original signed
.Xr diff 1
of installed patches.
.El
.Sh SEE ALSO
.Xr signify 1 ,
.Xr installurl 5 ,
.Xr release 8
.Sh HISTORY
.Nm
first appeared in
.Ox 6.1 .
.Sh AUTHORS
.Nm
was written by
.An Antoine Jacoutot Aq Mt ajacoutot@@openbsd.org .
.Sh CAVEATS
.Nm
is designed to work solely on official
.Ox
releases.
@


1.18
log
@Document that patches are cumulative and as such it is not possible to install
only a subset of them.

with input from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.17 2017/05/05 08:07:36 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: May 5 2017 $
d36 3
a38 3
missing patches by saving the original release kernel if needed, creating a
rollback tarball containing the files it is about to replace, then extracting
and installing all files contained in the syspatch tarball.
d55 1
a55 5
.Bl -tag -width "/bsd.syspatch${OSrev}" -compact
.It Pa /bsd.syspatch${OSrev}
Backup of the original
.Pa /bsd
release kernel.
@


1.17
log
@Add a `-R' switch that reverts all patches.

prodded by deraadt@@
knobs sorting input jmc@@
ok sthen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.16 2017/04/08 20:36:50 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: April 8 2017 $
d39 2
@


1.16
log
@use .Em for emphasis, not .Pa
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.15 2017/02/07 17:58:43 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: February 7 2017 $
d25 1
a25 1
.Op Fl c | l | r
d47 2
@


1.15
log
@Ox on its own line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.14 2017/02/07 08:58:47 ajacoutot Exp $
d35 1
a35 1
.Pa all
@


1.14
log
@Add installurl to FILES and SEE ALSO.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.13 2016/12/08 09:47:37 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: December 8 2016 $
d57 2
a58 1
.Ox mirror top-level URL for fetching patches.
@


1.13
log
@Make it possible to install patches even if we don't have all sets installed
(e.g. no x sets); in this case, syspatch will skip the patch *but* it will still
be listed as available. This will allow applying the patch in case sets are
installed later on.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.12 2016/11/30 12:58:28 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 30 2016 $
d56 2
d65 1
@


1.12
log
@Change the hierarchy under /var/syspatch/ so that the output of installed or
missing patches matches the official names.
e.g.
$ doas syspatch -c
015_libssl

Add a bit more output on what we are doing.
Tighten a few checks and rename some vars.

People playing with syspatch on 6.0 should update syspatch.sh asap from current
as I will soon remove the temporary quirks glue.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.11 2016/11/29 09:00:05 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 29 2016 $
d34 5
a38 3
will apply all missing patches by saving the original release kernel if needed,
creating a rollback tarball containing the files it is about to replace,
then extracting and installing all files contained in the syspatch tarball.
d74 3
a76 2
only works on official releases and will always sync and apply all patches
regardless of the installed sets.
@


1.11
log
@Document the fact that *for now* syspatch only works on official releases and
will always sync and apply all patches regardless of the installed sets.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.10 2016/11/16 14:54:26 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 16 2016 $
d49 1
a49 1
.Bl -tag -width "/var/syspatch/${OSREV}/*.tgz" -compact
d54 4
a57 4
.It Pa /var/syspatch/${OSREV}/*.sig
Information on installed patches.
.It Pa /var/syspatch/${OSREV}/*.tgz
Rollback tarballs for reverting patches.
@


1.10
log
@/bsd.rollbackXX -> bsd.syspatchXX to make it more obvious where it comes from
and less prone to conflict.
Simplify ls_installed while here.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.9 2016/11/15 16:29:03 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 15 2016 $
d70 4
@


1.9
log
@Small wording tweak and a couple of fixes from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.8 2016/11/10 16:14:47 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 10 2016 $
d50 1
a50 1
.It Pa /bsd.rollback${OSrev}
@


1.8
log
@Extend documentation a bit. It'll probably need some adjustments soon.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.7 2016/11/08 15:36:50 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 8 2016 $
d32 1
a32 1
When run without any option,
d41 1
a41 1
List available patches, suitable for
d51 1
a51 1
Backup of the
@


1.7
log
@Simplify.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.6 2016/11/03 16:12:23 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: November 3 2016 $
d32 6
d41 2
a42 1
List available patches.
d47 11
@


1.6
log
@rollback -> revert where it makes sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.5 2016/09/10 16:07:33 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: September 10 2016 $
d39 1
a39 1
Remove the most recently installed patch (revert).
@


1.5
log
@apply_patches should not take any arguments.
Few tweaks while here.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.4 2016/09/07 16:17:12 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: September 7 2016 $
d28 1
a28 1
is a utility to fetch, verify, install and rollback
d39 1
a39 1
Remove the most recently installed patch (rollback).
@


1.4
log
@Minimal man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.3 2016/09/07 15:19:33 ajacoutot Exp $
d39 1
a39 1
Remove the most recently installed patch.
@


1.3
log
@syspatch goal is not to act as a package manager but to sync the system to the
corresponding stable. So prevent rollbacking a specific binpatch but instead
always rollback the latest one. It's the only way we can know the system is
consistent.

discussed with halex@@ jasper@@ robert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.2 2016/09/05 11:26:18 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: September 5 2016 $
d22 1
a22 1
.Nd manage binary patches
d27 14
a40 1
notyet
@


1.2
log
@No need to install the /var/syspatch/$REL directory, the binpatch does it for us.
Put /var/syspatch into a variable, it's used more than 10 times.

prodded by robert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syspatch.8,v 1.1 2016/09/05 11:04:45 ajacoutot Exp $
d25 1
a25 1
.Op Fl c | l | r Ar patchname
@


1.1
log
@Welcome syspatch(8), a binary patch management utility for the base system.

This is currently a POC, maybe it will become something, maybe not.
Therefore it will not be hooked to the build before we are happy with it.

Workflow would be something like:
- fetch and verify signed tarballs containing the patched binaries from a mirror
- create a rollback tarball of the files we are about to replace
- extract and install the patched files

*** BIG FAT RED DISCLAIMER ***
This is very much WIP, it does *NOT* work, don't bikeshed, don't use it!

"get it in" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcctl.8,v 1.33 2016/06/19 10:54:20 ajacoutot Exp $
d17 1
a17 1
.Dd $Mdocdate: June 19 2016 $
d29 1
@

