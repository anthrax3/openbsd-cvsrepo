head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.6
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6;
locks; strict;
comment	@ * @;


1.6
date	2016.12.17.16.43.30;	author krw;	state Exp;
branches;
next	1.5;
commitid	cZyPF7xZPLHgCusf;

1.5
date	2016.10.26.07.53.47;	author natano;	state Exp;
branches;
next	1.4;
commitid	u5FhgAQMMhudj2OK;

1.4
date	2016.10.23.10.58.45;	author natano;	state Exp;
branches;
next	1.3;
commitid	T3osOWoN5dYWSDvo;

1.3
date	2016.10.23.10.22.21;	author natano;	state Exp;
branches;
next	1.2;
commitid	rHhaLNWxkoYu4Pqx;

1.2
date	2016.10.22.20.50.21;	author natano;	state Exp;
branches;
next	1.1;
commitid	b3iX6C5k7F7cn7lZ;

1.1
date	2016.10.18.17.05.30;	author natano;	state Exp;
branches;
next	;
commitid	jXVdtbSbKUWYjDfE;


desc
@@


1.6
log
@While here nuke some more annoying whitespace nits.
@
text
@/*	$OpenBSD: mkfs_msdos.h,v 1.5 2016/10/26 07:53:47 natano Exp $	*/
/*	$NetBSD: mkfs_msdos.h,v 1.3 2015/10/16 17:38:17 christos Exp $	*/

/*-
 * Copyright (c) 2013 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by Christos Zoulas.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>

#define ALLOPTS \
AOPT(uint16_t, backup_sector, 1) \
AOPT(uint32_t, block_size, 1) \
AOPT(char *, bootstrap, -1) \
AOPT(uint16_t, bytes_per_sector, 1) \
AOPT(off_t, create_size, 0) \
AOPT(uint16_t, directory_entries, 1) \
AOPT(uint16_t, drive_heads, 1) \
AOPT(uint8_t,  fat_type, 12) \
AOPT(char *, floppy, -1) \
AOPT(uint32_t, hidden_sectors, 0) \
AOPT(uint16_t, info_sector, 1) \
AOPT(uint8_t, media_descriptor, 0) \
AOPT(uint8_t, num_FAT, 1) \
AOPT(char *, OEM_string, -1) \
AOPT(off_t, offset, 0) \
AOPT(uint16_t, reserved_sectors, 1) \
AOPT(uint8_t, sectors_per_cluster, 1) \
AOPT(uint32_t, sectors_per_fat, 1) \
AOPT(uint16_t, sectors_per_track, 1) \
AOPT(uint32_t, size, 1) \
AOPT(uint32_t, volume_id, 0) \
AOPT(char *, volume_label, -1)

struct msdos_options {
#define AOPT(_type, _name, _min) _type _name;
ALLOPTS
#undef AOPT
	uint32_t volume_id_set:1;
	uint32_t media_descriptor_set:1;
	uint32_t hidden_sectors_set:1;
};

int mkfs_msdos(const char *, const char *, const struct msdos_options *);
@


1.5
log
@Remove FS-specific option descriptions from the source code. We have a
manual for that. While there document the isolevel option and remove
some dysfunctional cd9660 options.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfs_msdos.h,v 1.4 2016/10/23 10:58:45 natano Exp $	*/
d62 1
a62 1
#undef AOPT	
@


1.4
log
@Remove the msdos no_create option.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfs_msdos.h,v 1.3 2016/10/23 10:22:21 natano Exp $	*/
d36 22
a57 22
AOPT(uint16_t, backup_sector, 1, "Backup sector") \
AOPT(uint32_t, block_size, 1, "Block size") \
AOPT(char *, bootstrap, -1, "Bootstrap file") \
AOPT(uint16_t, bytes_per_sector, 1, "Bytes per sector") \
AOPT(off_t, create_size, 0, "Create file") \
AOPT(uint16_t, directory_entries, 1, "Directory entries") \
AOPT(uint16_t, drive_heads, 1, "Drive heads") \
AOPT(uint8_t,  fat_type, 12, "FAT type (12, 16, or 32)") \
AOPT(char *, floppy, -1, "Standard format floppies (160,180,320,360,640,720,1200,1232,1440,2880)") \
AOPT(uint32_t, hidden_sectors, 0, "Hidden sectors") \
AOPT(uint16_t, info_sector, 1, "Info sector") \
AOPT(uint8_t, media_descriptor, 0, "Media descriptor") \
AOPT(uint8_t, num_FAT, 1, "Number of FATs") \
AOPT(char *, OEM_string, -1, "OEM string") \
AOPT(off_t, offset, 0, "Offset in device") \
AOPT(uint16_t, reserved_sectors, 1, "Reserved sectors") \
AOPT(uint8_t, sectors_per_cluster, 1, "Sectors per cluster") \
AOPT(uint32_t, sectors_per_fat, 1, "Sectors per FAT") \
AOPT(uint16_t, sectors_per_track, 1, "Sectors per track") \
AOPT(uint32_t, size, 1, "File System size") \
AOPT(uint32_t, volume_id, 0, "Volume ID") \
AOPT(char *, volume_label, -1, "Volume Label")
d60 1
a60 1
#define AOPT(_type, _name, _min, _desc) _type _name;
@


1.3
log
@Remove short option names for -o.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfs_msdos.h,v 1.2 2016/10/22 20:50:21 natano Exp $	*/
a47 1
AOPT(int, no_create, -2, "Don't create filesystem, print params only") \
@


1.2
log
@-#include <stdbool.h>
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfs_msdos.h,v 1.1 2016/10/18 17:05:30 natano Exp $	*/
d36 23
a58 23
AOPT('@@', off_t, offset, 0, "Offset in device") \
AOPT('B', char *, bootstrap, -1, "Bootstrap file") \
AOPT('C', off_t, create_size, 0, "Create file") \
AOPT('F', uint8_t,  fat_type, 12, "FAT type (12, 16, or 32)") \
AOPT('I', uint32_t, volume_id, 0, "Volume ID") \
AOPT('L', char *, volume_label, -1, "Volume Label") \
AOPT('N', int, no_create, -2, "Don't create filesystem, print params only") \
AOPT('O', char *, OEM_string, -1, "OEM string") \
AOPT('S', uint16_t, bytes_per_sector, 1, "Bytes per sector") \
AOPT('a', uint32_t, sectors_per_fat, 1, "Sectors per FAT") \
AOPT('b', uint32_t, block_size, 1, "Block size") \
AOPT('c', uint8_t, sectors_per_cluster, 1, "Sectors per cluster") \
AOPT('e', uint16_t, directory_entries, 1, "Directory entries") \
AOPT('f', char *, floppy, -1, "Standard format floppies (160,180,320,360,640,720,1200,1232,1440,2880)") \
AOPT('h', uint16_t, drive_heads, 1, "Drive heads") \
AOPT('i', uint16_t, info_sector, 1, "Info sector") \
AOPT('k', uint16_t, backup_sector, 1, "Backup sector") \
AOPT('m', uint8_t, media_descriptor, 0, "Media descriptor") \
AOPT('n', uint8_t, num_FAT, 1, "Number of FATs") \
AOPT('o', uint32_t, hidden_sectors, 0, "Hidden sectors") \
AOPT('r', uint16_t, reserved_sectors, 1, "Reserved sectors") \
AOPT('s', uint32_t, size, 1, "File System size") \
AOPT('u', uint16_t, sectors_per_track, 1, "Sectors per track")
d61 1
a61 1
#define AOPT(_opt, _type, _name, _min, _desc) _type _name;
@


1.1
log
@Merge fs/msdosfs/ and newfs_msdos/ into msdos/.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkfs_msdos.h,v 1.2 2016/10/16 20:26:56 natano Exp $	*/
d34 1
a34 1
#include <stdbool.h>
d42 1
a42 1
AOPT('N', bool, no_create, -2, "Don't create filesystem, print params only") \
@

