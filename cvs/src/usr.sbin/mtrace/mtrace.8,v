head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.12
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.8
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.4
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.18
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.16
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.12
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.10
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.8
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.6
	OPENBSD_5_0:1.17.0.4
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.16.0.2
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.8.0.8
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.6
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.18
date	2014.09.08.01.27.55;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	cPoapLAXYNe1fcgV;

1.17
date	2010.09.19.21.59.23;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2010.03.26.19.30.40;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.20.26;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.19.21.51.10;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.02.18.21.16.03;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.14.13.32.11;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.12.12.59.51;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.36.54;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.04.16.17.42.53;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.29.11.22.02;	author ho;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.22.16.51.12;	author ho;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.22.15.18.18;	author ho;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.22.11.15.30;	author ho;	state Exp;
branches;
next	1.4;

1.4
date	99.09.23.04.12.11;	author alex;	state Exp;
branches;
next	1.3;

1.3
date	99.06.05.22.17.31;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.01.46.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.48;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.48;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@obvious cases of missing .An;
found with the new mandoc(1) MANDOCERR_AN_MISSING warning;
no text changes
@
text
@.\"	$OpenBSD: mtrace.8,v 1.17 2010/09/19 21:59:23 jmc Exp $
.\"	$NetBSD: mtrace.8,v 1.4 1995/12/10 10:57:11 mycroft Exp $
.\"
.\" Copyright (c) 1993, 1998-2001.
.\" The University of Southern California/Information Sciences Institute.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the project nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" Other copyrights might apply to parts of this software and are so
.\" noted when applicable.
.\"
.\" This manual page (but not the software) was derived from the
.\" manual page for the traceroute program which bears the following
.\" copyright notice:
.\"
.\" Copyright (c) 1988 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Van Jacobson.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 19 2010 $
.Dt MTRACE 8
.Os
.Sh NAME
.Nm mtrace
.Nd print multicast path from a source to a receiver
.Sh SYNOPSIS
.Nm mtrace
.Op Fl lMnpsv
.Op Fl g Ar gateway
.Op Fl i Ar if_addr
.Op Fl m Ar max_hops
.Op Fl q Ar nqueries
.Op Fl r Ar host
.Op Fl S Ar stat_int
.Op Fl t Ar ttl
.Op Fl w Ar waittime
.Ar source
.Op Ar receiver
.Op Ar group
.Sh DESCRIPTION
Assessing problems in the distribution of IP multicast traffic
can be difficult.
.Nm
utilizes a tracing feature implemented in multicast routers
.Pf ( Nm mrouted
version 3.3 and later) that is
accessed via an extension to the IGMP protocol.
A trace query is passed hop-by-hop along the reverse path from the
.Ar receiver
to the
.Ar source ,
collecting hop addresses, packet counts, and routing error conditions
along the path, and then the response is returned to the requestor.
.Pp
The only required parameter is the
.Ar source
host name or address.
The default
.Ar receiver
is the host running mtrace, and the default
.Ar group
is "MBone Audio" (224.2.0.1), which is sufficient if packet loss
statistics for a particular multicast group are not needed.
These two optional parameters may be specified to test the path to some other
receiver in a particular group, subject to some constraints as
detailed below.
The two parameters can be distinguished because the
.Ar receiver
is a unicast address and the
.Ar group
is a multicast address.
.Pp
The options are as follows:
.Bl -tag -width addr_xy
.It Fl g Ar gateway
Send the trace query via unicast directly to the multicast router
.Ar gateway
rather than multicasting the query.
This must be the last-hop router on the path from the intended
.Ar source
to the
.Ar receiver .
.Em NOTE: Read the BUGS section below.
.It Fl i Ar if_addr
Use
.Ar if_addr
as the local interface address (on a multi-homed host) for sending the
trace query and as the default for the
.Ar receiver
and the response destination.
.It Fl l
Loop indefinitely printing packet rate and loss statistics for the
multicast path every 10 seconds (see
.Fl S Ar stat_int ) .
.It Fl M
Always send the response using multicast rather than attempting
unicast first.
.It Fl m Ar max_hops
Set to
the maximum number of hops that will be traced from the
.Ar receiver
back toward the
.Ar source .
The default is 32 hops (infinity for the DVMRP routing protocol).
.It Fl n
Print hop addresses numerically rather than symbolically and numerically
(saves a nameserver address-to-name lookup for each router found on the
path).
.It Fl p
Listen passively for multicast responses from traces initiated by others.
This works best when run on a multicast router.
.It Fl q Ar nqueries
Set the maximum number of query attempts for any hop to
.Ar nqueries .
The default is 3.
.It Fl r Ar host
Send the trace response to
.Ar host
rather than to the host on which
.Nm
is being run, or to a multicast address other than the one registered
for this purpose (224.0.1.32).
.It Fl S Ar stat_int
Change the interval between statistics gathering traces to
.Ar stat_int
seconds (default 10 seconds).
.It Fl s
Print a short form output including only the multicast path and not
the packet rate and loss statistics.
.It Fl t Ar ttl
Set the
.Ar ttl
(time-to-live, or number of hops) for multicast trace queries and
responses.
The default is 64, except for local queries to the
"all routers" multicast group which use ttl 1.
.It Fl v
Verbose mode; show hop times on the initial trace and statistics display.
.It Fl w Ar waittime
Set the time to wait for a trace response to
.Ar waittime
seconds (default 3 seconds).
.El
.Ss How \&It Works
The technique used by the
.Nm traceroute
tool to trace unicast network paths will not work for IP multicast
because ICMP responses are specifically forbidden for multicast traffic.
Instead, a tracing feature has been built into the multicast routers.
This technique has the advantage that additional information about
packet rates and losses can be accumulated while the number of packets
sent is minimized.
.Pp
Since multicast uses
reverse path forwarding, the trace is run backwards from the
.Ar receiver
to the
.Ar source .
A trace query packet is sent to the last
hop multicast router (the leaf router for the desired
.Ar receiver
address).
The last hop router builds a trace response packet, fills in
a report for its hop, and forwards the trace packet using unicast to
the router it believes is the previous hop for packets originating
from the specified
.Ar source .
Each router along the path adds its report and forwards the packet.
When the trace response packet reaches the first hop router (the router
that is directly connected to the source's net), that router sends the
completed response to the response destination address specified in
the trace query.
.Pp
If some multicast router along the path does not implement the
multicast traceroute feature or if there is some outage, then no
response will be returned.
To solve this problem, the trace query includes a maximum hop count field
to limit the number of hops traced before the response is returned.
That allows a partial path to be traced.
.Pp
The reports inserted by each router contain not only the address of
the hop, but also the ttl required to forward and some flags to indicate
routing errors, plus counts of the total number of packets on the
incoming and outgoing interfaces and those forwarded for the specified
.Ar group .
Taking differences in these counts for two traces separated in time
and comparing the output packet counts from one hop with the input
packet counts of the next hop allows the calculation of packet rate
and packet loss statistics for each hop to isolate congestion
problems.
.Ss Finding the Last-Hop Router
The trace query must be sent to the multicast router which is the
last hop on the path from the
.Ar source
to the
.Ar receiver .
If the
.Ar receiver
is on the local subnet (as determined using the subnet
mask), then the default method is to multicast the trace query to
all-routers.mcast.net (224.0.0.2) with a ttl of 1.
Otherwise, the trace query is multicast to the
.Ar group
address since the last hop router will be a member of that group if
the
.Ar receiver
is.
Therefore it is necessary to specify a
.Ar group
that the intended
.Ar receiver
is joined.
This multicast is sent with a default ttl of 64, which may not be sufficient
for all cases (changed with the
.Fl t
option).
If the last hop router is known, it may also be addressed directly
using the
.Fl g
option).
Alternatively, if it is desired to trace a group that the
.Ar receiver
has not joined, but it is known that the last-hop router is a
member of another group, the
.Fl g
option may also be used to specify a different multicast address for the
trace query.
.Pp
When tracing from a multihomed host or router, the default
.Ar receiver
address may not be the desired interface for the path from the
.Ar source .
In that case, the desired interface should be specified explicitly as
the
.Ar receiver .
.Ss Directing the Response
By default,
.Nm
first attempts to trace the full reverse path, unless the number of
hops to trace is explicitly set with the
.Fl m
option.
If there is no response within a 3 second timeout interval
(changed with the
.Fl m
option), a "*" is printed and the probing switches to hop-by-hop mode.
Trace queries are issued starting with a maximum hop count of one and
increasing by one until the full path is traced or no response is
received.
At each hop, multiple probes are sent (default is three, changed with
.Fl q
option).
The first half of the attempts (default is one) are made with
the unicast address of the host running
.Nm
as the destination for the response.
Since the unicast route may be blocked, the remainder of attempts request
that the response be multicast to mtrace.mcast.net (224.0.1.32) with the
ttl set to 32 more than what's needed to pass the thresholds seen so far
along the path to the
.Ar receiver .
For the last quarter of the attempts (default is
one), the ttl is increased by another 32 each time up to a maximum of 192.
Alternatively, the ttl may be set explicitly with the
.Fl t
option and/or the initial unicast attempts can be forced to use
multicast instead with the
.Fl m
option.
For each attempt, if no response is received within the timeout,
a "*" is printed.
After the specified number of attempts have failed,
.Nm
will try to query the next hop router with a DVMRP_ASK_NEIGHBORS2
request (as used by the
.Nm mrinfo
program) to see what kind of router it is.
.Sh EXAMPLES
The output of
.Nm
is in two sections.
The first section is a short listing of the hops in the order they are
queried, that is, in the reverse of the order from the
.Ar source
to the
.Ar receiver .
For each hop, a line is printed showing the hop number (counted
negatively to indicate that this is the reverse path); the multicast
routing protocol (DVMRP, MOSPF, PIM, etc.); the threshold required to
forward data (to the previous hop in the listing as indicated by the
up-arrow character); and the cumulative delay for the query to reach
that hop (valid only if the clocks are synchronized).
This first section ends with a line showing the round-trip time which measures
the interval from when the query is issued until the response is
received, both derived from the local system clock.
A sample use and output might be:
.Bd -literal
oak.isi.edu 80# mtrace -l caraway.lcs.mit.edu 224.2.0.3
Mtrace from 18.26.0.170 to 128.9.160.100 via group 224.2.0.3
Querying full reverse path...
  0  oak.isi.edu (128.9.160.100)
 -1  cub.isi.edu (128.9.160.153)  DVMRP  thresh^ 1  3 ms
 -2  la.dart.net (140.173.128.1)  DVMRP  thresh^ 1  14 ms
 -3  dc.dart.net (140.173.64.1)  DVMRP  thresh^ 1  50 ms
 -4  bbn.dart.net (140.173.32.1)  DVMRP  thresh^ 1  63 ms
 -5  mit.dart.net (140.173.48.2)  DVMRP  thresh^ 1  71 ms
 -6  caraway.lcs.mit.edu (18.26.0.170)
Round trip time 124 ms
.Ed
.Pp
The second section provides a pictorial view of the path in the
forward direction with data flow indicated by arrows pointing downward
and the query path indicated by arrows pointing upward.
For each hop, both the entry and exit addresses of the router are shown if
different, along with the initial ttl required on the packet in order
to be forwarded at this hop and the propagation delay across the hop
assuming that the routers at both ends have synchronized clocks.
The right half of this section is composed of several columns of
statistics in two groups.
Within each group, the columns are the number of packets lost, the number
of packets sent, the percentage lost, and the average packet rate at each hop.
These statistics are calculated from differences between traces and from
hop to hop as explained above.
The first group shows the statistics for all traffic flowing out the interface
at one hop and in the interface at the next hop.
The second group shows the statistics only for traffic forwarded
from the specified
.Ar source
to the specified
.Ar group .
.Pp
These statistics are shown on one or two lines for each hop.
Without any options, this second section of the output is printed only once,
approximately 10 seconds after the initial trace.
One line is shown for each hop showing the statistics over that 10-second
period.
If the
.Fl l
option is given, the second section is repeated every 10 seconds and
two lines are shown for each hop.
The first line shows the statistics for the last 10 seconds, and the second
line shows the cumulative statistics over the period since the initial trace,
which is 101 seconds in the example below.
The second section of the output is omitted if the
.Fl s .
option is set.
.Bd -literal
Waiting to accumulate statistics... Results after 101 seconds:

  Source       Response Dest  Packet Statistics For  Only For Traffic
18.26.0.170    128.9.160.100  All Multicast Traffic  From 18.26.0.170
     |       __/ rtt  125 ms  Lost/Sent = Pct  Rate    To 224.2.0.3
     v      /    hop   65 ms  ---------------------  ------------------
18.26.0.144
140.173.48.2   mit.dart.net
     |     ^     ttl    1      0/6    = --%   0 pps   0/2  = --%  0 pps
     v     |     hop    8 ms   1/52   =  2%   0 pps   0/18 =  0%  0 pps
140.173.48.1
140.173.32.1   bbn.dart.net
     |     ^     ttl    2      0/6    = --%   0 pps   0/2  = --%  0 pps
     v     |     hop   12 ms   1/52   =  2%   0 pps   0/18 =  0%  0 pps
140.173.32.2
140.173.64.1   dc.dart.net
     |     ^     ttl    3      0/271  =  0%  27 pps   0/2  = --%  0 pps
     v     |     hop   34 ms  -1/2652 =  0%  26 pps   0/18 =  0%  0 pps
140.173.64.2
140.173.128.1  la.dart.net
     |     ^     ttl    4     -2/831  =  0%  83 pps   0/2  = --%  0 pps
     v     |     hop   11 ms  -3/8072 =  0%  79 pps   0/18 =  0%  0 pps
140.173.128.2
128.9.160.153  cub.isi.edu
     |      \e__  ttl    5        833         83 pps     2         0 pps
     v         \e hop   -8 ms     8075        79 pps     18        0 pps
128.9.160.100  128.9.160.100
  Receiver     Query Source
.Ed
.Pp
Because the packet counts may be changing as the trace query is
propagating, there may be small errors (off by 1 or 2) in these
statistics.
However, those errors should not accumulate, so the cumulative statistics
line should increase in accuracy as a new trace is run every 10 seconds.
There are two sources of larger errors,
both of which show up as negative losses:
.Bl -bullet -offset abcd
.It
If the input to a node is from a multi-access network with more than
one other node attached, then the input count will be (close to) the
sum of the output counts from all the attached nodes, but the output
count from the previous hop on the traced path will be only part of
that.
Hence the output count minus the input count will be negative.
.It
In release 3.3 of the DVMRP multicast forwarding software for SunOS
and other systems, a multicast packet generated on a router will be
counted as having come in an interface even though it did not.
This creates the negative loss that can be seen in the example above.
.El
.Pp
Note that these negative losses may mask positive losses.
.Pp
In the example, there is also one negative hop time.
This simply indicates a lack of synchronization between the system clocks
across that hop.
This example also illustrates how the percentage loss is
shown as two dashes when the number of packets sent is less than 10
because the percentage would not be statistically valid.
.Pp
A second example shows a trace to a
.Ar receiver
that is not local; the query is sent to the last-hop router with the
.Fl g
option.
In this example, the trace of the full reverse path resulted
in no response because there was a node running an old version of
.Nm mrouted
that did not implement the multicast traceroute function, so
.Nm
switched to hop-by-hop mode.
The "Route pruned" error code indicates that traffic for group 224.2.143.24
would not be forwarded.
.Bd -literal
oak.isi.edu 108# mtrace -g 140.173.48.2 204.62.246.73 \e
                           butter.lcs.mit.edu 224.2.143.24
Mtrace from 204.62.246.73 to 18.26.0.151 via group 224.2.143.24
Querying full reverse path... * switching to hop-by-hop:
  0  butter.lcs.mit.edu (18.26.0.151)
 -1  jam.lcs.mit.edu (18.26.0.144)  DVMRP  thresh^ 1  33 ms  Route pruned
 -2  bbn.dart.net (140.173.48.1)  DVMRP  thresh^ 1  36 ms
 -3  dc.dart.net (140.173.32.2)  DVMRP  thresh^ 1  44 ms
 -4  darpa.dart.net (140.173.240.2)  DVMRP  thresh^ 16  47 ms
 -5  * * * noc.hpc.org (192.187.8.2) [mrouted 2.2] didn't respond
Round trip time 95 ms
.Ed
.Sh SEE ALSO
.Xr map-mbone 8 ,
.Xr mrinfo 8 ,
.Xr mrouted 8 ,
.Xr traceroute 8
.Sh AUTHORS
.An -nosplit
Implemented by
.An Steve Casner
based on an initial prototype written by
.An Ajit Thyagarajan .
The multicast traceroute mechanism was designed by
.An Van Jacobson
with help from
.An Steve Casner ,
.An Steve Deering ,
.An Dino Farinacci ,
and
.An Deb Agrawal ;
it was implemented in
.Nm mrouted
by
.An Ajit Thyagarajan
and
.An Bill Fenner .
The option syntax and the output format of
.Nm
are modeled after the unicast
.Xr traceroute 8
program written by
.An Van Jacobson .
.Sh BUGS
Versions 3.3 and 3.5 of
.Nm mrouted
will crash if a trace query is received via a
unicast packet and
.Nm mrouted
has no route for the
.Ar source
address.
Therefore, do not use the
.Fl g
option unless the target
.Nm mrouted
has been verified to be 3.4 or newer than 3.5.
@


1.17
log
@more wacky macro fixing;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.16 2010/03/26 19:30:40 jmc Exp $
d69 1
a69 1
.Dd $Mdocdate: March 26 2010 $
d490 5
a494 2
Implemented by Steve Casner based on an initial prototype written by
Ajit Thyagarajan.
d496 8
a503 2
Van Jacobson with help from Steve Casner, Steve Deering, Dino
Farinacci, and Deb Agrawal; it was implemented in
d505 4
a508 1
by Ajit Thyagarajan and Bill Fenner.
d512 3
a514 2
.Nm traceroute
program written by Van Jacobson.
@


1.16
log
@dispense with some wacky escape sequences;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.15 2007/05/31 19:20:26 jmc Exp $
d69 1
a69 1
.Dd $Mdocdate: May 31 2007 $
d243 1
a243 1
.Ae source
d333 1
a333 1
.Ae source
d335 1
a335 1
.Ae receiver .
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.14 2007/02/19 21:51:10 jmc Exp $
d69 1
a69 1
.Dd $Mdocdate$
d421 2
a422 2
     |      \\__  ttl    5        833         83 pps     2         0 pps
     v         \\ hop   -8 ms     8075        79 pps     18        0 pps
@


1.14
log
@put -n in the right place; from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.13 2007/02/18 21:16:03 jmc Exp $
d69 1
a69 1
.Dd May 8, 1995
@


1.13
log
@tidy up synopsis and usage; from Igor Sobrado
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.12 2003/07/14 13:32:11 jmc Exp $
d154 4
a164 4
.It Fl n
Print hop addresses numerically rather than symbolically and numerically
(saves a nameserver address-to-name lookup for each router found on the
path).
@


1.12
log
@- escape "It" so groff doesn't try to expand it
- macro cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.11 2003/06/12 12:59:51 jmc Exp $
d77 1
a77 1
.Bk -words
a79 2
.Op Fl l
.Op Fl M
a80 2
.Op Fl n
.Op Fl p
d82 1
a82 2
.Op Fl r Ar resp_dest
.Op Fl s
a84 1
.Op Fl v
a88 1
.Ek
d124 1
a124 1
.It Fl g Ar gwy
d126 1
a126 1
.Ar gwy
d133 1
a133 1
.It Fl i Ar addr
d135 1
a135 1
.Ar addr
d147 1
a147 1
.It Fl m Ar n
a148 1
.Ar n
d154 7
a164 7
.It Fl q Ar n
Set the maximum number of query attempts for any hop to
.Ar n .
The default is 3.
.It Fl p
Listen passively for multicast responses from traces initiated by others.
This works best when run on a multicast router.
d172 4
a178 4
.It Fl S Ar n
Change the interval between statistics gathering traces to
.Ar n
seconds (default 10 seconds).
d188 1
a188 1
.It Fl w Ar n
d190 1
a190 1
.Ar n
@


1.11
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.10 2003/06/02 23:36:54 millert Exp $
d101 1
a101 1
.Nm ( mrouted
a129 1
.Pp
d201 1
a201 1
.Ss How It Works
a353 1
.Pp
a403 1
.Pp
a478 1
.Pp
d480 1
a480 1
oak.isi.edu 108# mtrace -g 140.173.48.2 204.62.246.73 \\
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.9 2003/04/16 17:42:53 deraadt Exp $
d77 1
d95 1
d103 2
a104 2
accessed via an extension to the IGMP protocol.  A trace query is
passed hop-by-hop along the reverse path from the
d113 2
a114 1
host name or address.  The default
d119 2
a120 2
statistics for a particular multicast group are not needed.  These two
optional parameters may be specified to test the path to some other
d122 2
a123 1
detailed below.  The two parameters can be distinguished because the
d151 1
a151 1
.Fl S Ar stat_int Ns ).
d172 2
a173 2
Listen passively for multicast responses from traces initiated by
others.  This works best when run on a multicast router.
d192 2
a193 1
responses.  The default is 64, except for local queries to the 
d220 2
a221 1
address).  The last hop router builds a trace response packet, fills in
d234 4
a237 4
response will be returned.  To solve this problem, the trace query
includes a maximum hop count field to limit the number of hops traced
before the response is returned.  That allows a partial path to be
traced.
d255 1
a255 1
If the 
d259 2
a260 2
all-routers.mcast.net (224.0.0.2) with a ttl of 1.  Otherwise, the
trace query is multicast to the
d263 10
a272 9
the 
.Ar receiver 
is.  Therefore it is necessary to specify a 
.Ar group 
that the intended 
.Ar receiver 
is joined.  This multicast is sent with a
default ttl of 64, which may not be sufficient for all cases (changed
with the
d278 2
a279 1
option).  Alternatively, if it is desired to trace a group that the
d287 1
a287 1
When tracing from a multihomed host or router, the default 
d289 1
a289 1
address may not be the desired interface for the path from the 
d300 2
a301 1
option.  If there is no response within a 3 second timeout interval
d307 2
a308 2
received.  At each hop, multiple probes are sent (default is three,
changed with
d310 2
a311 1
option).  The first half of the attempts (default is one) are made with
d314 5
a318 5
as the destination for the response.  Since the unicast route may be
blocked, the remainder of attempts request that the response be
multicast to mtrace.mcast.net (224.0.1.32) with the ttl set to 32 more
than what's needed to pass the thresholds seen so far along the path
to the 
d321 2
a322 2
one), the ttl is increased by another 32 each time up to a maximum of
192.  Alternatively, the ttl may be set explicitly with the
d327 4
a330 3
option.  For each attempt, if no response is received within the
timeout, a "*" is printed.  After the specified number of attempts
have failed,
d339 3
a341 3
is in two sections.  The first section is a short listing of the hops
in the order they are queried, that is, in the reverse of the order
from the
d350 2
a351 2
that hop (valid only if the clocks are synchronized).  This first
section ends with a line showing the round-trip time which measures
d353 2
a354 2
received, both derived from the local system clock.  A sample use and
output might be:
d372 2
a373 2
and the query path indicated by arrows pointing upward.  For each hop,
both the entry and exit addresses of the router are shown if
d376 10
a385 9
assuming that the routers at both ends have synchronized clocks.  The
right half of this section is composed of several columns of
statistics in two groups.  Within each group, the columns are the
number of packets lost, the number of packets sent, the percentage
lost, and the average packet rate at each hop.  These statistics are
calculated from differences between traces and from hop to hop as
explained above.  The first group shows the statistics for all traffic
flowing out the interface at one hop and in the interface at the next
hop.  The second group shows the statistics only for traffic forwarded
d391 6
a396 5
These statistics are shown on one or two lines for each hop.  Without
any options, this second section of the output is printed only once,
approximately 10 seconds after the initial trace.  One line is shown
for each hop showing the statistics over that 10-second period.  If
the
d399 6
a404 6
two lines are shown for each hop.  The first line shows the statistics
for the last 10 seconds, and the second line shows the cumulative
statistics over the period since the initial trace, which is 101
seconds in the example below.  The second section of the output is
omitted if the
.Fl s.
d440 5
a444 4
statistics.  However, those errors should not accumulate, so the
cumulative statistics line should increase in accuracy as a new trace
is run every 10 seconds.  There are two sources of larger errors, both
of which show up as negative losses:
d451 2
a452 1
that.  Hence the output count minus the input count will be negative.
d456 2
a457 2
counted as having come in an interface even though it did not.  This
creates the negative loss that can be seen in the example above.
d462 4
a465 3
In the example, there is also one negative hop time.  This simply
indicates a lack of synchronization between the system clocks across
that hop.  This example also illustrates how the percentage loss is
d469 1
a469 1
A second example shows a trace to a 
d473 2
a474 1
option.  In this example, the trace of the full reverse path resulted
d479 3
a481 2
switched to hop-by-hop mode.  The "Route pruned" error code
indicates that traffic for group 224.2.143.24 would not be forwarded.
d503 2
a504 1
Ajit Thyagarajan.  The multicast traceroute mechanism was designed by
d508 2
a509 2
by Ajit Thyagarajan and Bill Fenner.  The option syntax and the output
format of
d522 2
a523 1
address.  Therefore, do not use the
@


1.9
log
@update USC copyright, fixes "without fee" misplaced modifier
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.8 2001/05/29 11:22:02 ho Exp $
d53 1
a53 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"     This product includes software developed by the University of
.\"     California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@Wrong section header ordering. Pointed out by <mpech@@prosoft.org.lv>
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.7 2001/05/22 16:51:12 ho Exp $
d4 2
a5 1
.\" Copyright (c) 1995 by the University of Southern California
d8 23
a30 17
.\" Permission to use, copy, modify, and distribute this software and its
.\" documentation in source and binary forms for non-commercial purposes
.\" and without fee is hereby granted, provided that the above copyright
.\" notice appear in all copies and that both the copyright notice and
.\" this permission notice appear in supporting documentation, and that
.\" any documentation, advertising materials, and other materials related
.\" to such distribution and use acknowledge that the software was
.\" developed by the University of Southern California, Information
.\" Sciences Institute.  The name of the University may not be used to
.\" endorse or promote products derived from this software without
.\" specific prior written permission.
.\"
.\" THE UNIVERSITY OF SOUTHERN CALIFORNIA makes no representations about
.\" the suitability of this software for any purpose.  THIS SOFTWARE IS
.\" PROVIDED "AS IS" AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d41 31
@


1.7
log
@More fixes. From <mpech@@prosoft.org.lv>
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.6 2001/05/22 15:18:18 ho Exp $
d449 12
a473 12
.Sh AUTHORS
Implemented by Steve Casner based on an initial prototype written by
Ajit Thyagarajan.  The multicast traceroute mechanism was designed by
Van Jacobson with help from Steve Casner, Steve Deering, Dino
Farinacci, and Deb Agrawal; it was implemented in
.Nm mrouted
by Ajit Thyagarajan and Bill Fenner.  The option syntax and the output
format of
.Nm
are modeled after the unicast
.Nm traceroute
program written by Van Jacobson.
@


1.6
log
@Some fixes. From <mpech@@prosoft.org.lv>
@
text
@d1 1
a1 1
.\"	$OpenBSD: mtrace.8,v 1.5 2001/05/22 11:15:30 ho Exp $
d127 1
a127 1
(saves a nameserver address-to-name lo okup for each router found on the
d293 1
a293 1
.Nm mtrace
d310 1
a310 1
.PP
@


1.5
log
@mdoc-ify. Add $OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d36 1
a36 1
.Dt mtrace 8
d445 2
a447 2
.Xr mrinfo 8 ,
.Xr map-mbone 8 ,
@


1.4
log
@Typo fixes.
@
text
@d1 1
d35 26
a60 50
.TH MTRACE 8 "May 8, 1995"
.UC 6
.SH NAME
mtrace \- print multicast path from a source to a receiver
.SH SYNOPSIS
.B mtrace
[
.B \-g
.I gateway
] [
.B \-i
.I if_addr
] [
.B \-l
] [
.B \-M
] [
.B \-m
.I max_hops
] [
.B \-n
] [
.B \-p
] [
.B \-q
.I nqueries
] [
.B \-r
.I resp_dest
] [
.B \-s
] [
.B \-S
.I stat_int
] [
.B \-t
.I ttl
] [
.B \-v
] [
.B \-w
.I waittime
]
.I source
[
.I receiver
] [
.I group
]
.SH DESCRIPTION
d63 1
a63 1
.B mtrace
d65 1
a65 1
.RB ( mrouted
d69 1
a69 1
.I receiver
d71 1
a71 1
.IR source ,
d74 1
a74 1
.PP
d76 1
a76 1
.I source
d78 1
a78 1
.I receiver
d80 1
a80 1
.I group
d86 1
a86 1
.I receiver
d88 1
a88 1
.I group
d90 5
a94 6
.PP
NOTE: For Solaris 2.4/2.5, if the multicast interface is not the default
interface, the -i option must be used to set the local address.
.SH OPTIONS
.TP 8 8
.BI \-g\  gwy
d96 1
a96 1
.I gwy
d99 1
a99 1
.I source
d101 3
a103 19
.IR receiver .
.RS 8
.TP 12 12
.I CAUTION!!
Versions 3.3 and 3.5 of
.B mrouted
will crash if a trace query is received via a
unicast packet and
.B mrouted
has no route for the
.I source
address.  Therefore, do not use the
.B \-g
option unless the target
.B mrouted
has been verified to be 3.4 or newer than 3.5.
.RE
.TP 8 8
.BI \-i\  addr
d105 1
a105 1
.I addr
d108 1
a108 1
.I receiver
d110 1
a110 2
.TP 8 8
.B \-l
d113 2
a114 4
.B \-S
.IR stat_int ).
.TP 8 8
.B \-M
d117 1
a117 2
.TP 8 8
.BI \-m\  n
d119 1
a119 1
.I n
d121 1
a121 1
.I receiver
d123 1
a123 1
.IR source .
d125 1
a125 2
.TP 8 8
.B \-n
d127 1
a127 1
(saves a nameserver address-to-name lookup for each router found on the
d129 1
a129 2
.TP 8 8
.BI \-q\  n
d131 1
a131 1
.IR n .
d133 1
a133 2
.TP 8 8
.B \-p
d136 1
a136 2
.TP 8 8
.BI \-r\  host
d138 1
a138 1
.I host
d140 1
a140 1
.B mtrace
d143 1
a143 2
.TP 8 8
.B \-s
d146 1
a146 2
.TP 8 8
.BI \-S\  n
d148 1
a148 1
.I n
d150 1
a150 2
.TP 8 8
.BI \-t\  ttl
d152 1
a152 1
.I ttl
d154 3
a156 4
responses.  The default is 64, except for local queries to the "all
routers" multicast group which use ttl 1.
.TP 8 8
.B \-v
d158 1
a158 2
.TP 8 8
.BI \-w\  n
d160 1
a160 1
.I n
d162 2
a163 2
.SH USAGE
.SS How It Works
d165 1
a165 1
.B traceroute
d172 1
a172 1
.PP
d175 1
a175 1
.I receiver
d177 1
a177 1
.IR source .
d180 1
a180 1
.I receiver
d185 1
a185 1
.IR source .
d191 1
a191 1
.PP
d198 1
a198 1
.PP
d203 1
a203 1
.IR group .
d209 1
a209 1
.SS Finding the Last-Hop Router
d212 1
a212 1
.I source
d214 4
a217 2
.IR receiver .
If the receiver is on the local subnet (as determined using the subnet
d221 1
a221 1
.I group
d223 7
a229 2
the receiver is.  Therefore it is necessary to specify a group that
the intended receiver has joined.  This multicast is sent with a
d232 1
a232 1
.B \-t
d236 1
a236 1
.B \-g
d238 2
a239 1
receiver has not joined, but it is known that the last-hop router is a
d241 1
a241 1
.B \-g
d244 5
a248 3
.PP
When tracing from a multihomed host or router, the default receiver
address may not be the desired interface for the path from the source.
d251 2
a252 2
.IR receiver .
.SS Directing the Response
d254 1
a254 1
.B mtrace
d257 1
a257 1
.B \-m
d260 1
a260 1
.B \-w
d266 1
a266 1
.B \-q
d269 1
a269 1
.B mtrace
d274 3
a276 1
to the receiver.  For the last quarter of the attempts (default is
d279 1
a279 1
.B \-t
d282 1
a282 1
.B \-M
d286 1
a286 1
.B mtrace
d289 1
a289 1
.B mrinfo
d291 1
a291 1
.SH EXAMPLES
d293 1
a293 1
.B mtrace
d297 1
a297 1
.I source
d299 1
a299 1
.IR receiver .
d311 1
a311 2
.nf
.ft C
d323 2
a324 2
.fi
.PP
d341 1
a341 1
.I source
d343 2
a344 2
.IR group .
.PP
d350 1
a350 1
.B \-l
d357 1
a357 1
.B \-s
d359 2
a360 11
.ie t \{\
.ft C
.  ie \w'i'<>\w'm' \{\" looks like this is not proper Courier font
(If this example is not properly columned with a fixed-width font, get
.B groff
and try again.)
.  \}
.\}
.PP
.ft C
.nf
d389 2
a390 2
.fi
.PP
d397 2
a398 5
.LP
.RS
.PD 0
.TP 3
\(bu
d404 1
a404 2
.TP 3
\(bu
d409 2
a410 3
.PD
.RE
.LP
d412 1
a412 1
.PP
d418 5
a422 4
.PP
A second example shows a trace to a receiver that is not local; the
query is sent to the last-hop router with the
.B \-g
d425 1
a425 1
.B mrouted
d427 2
a428 2
.B mtrace
switched to hop-by-hop mode.  The \*(lqRoute pruned\*(rq error code
d430 2
a431 3
.PP
.nf
.ft C
d443 20
a462 2
.fi
.SH AUTHOR
d467 1
a467 1
.B mrouted
d470 1
a470 1
.B mtrace
d472 1
a472 1
.B traceroute
a473 5
.SH SEE ALSO
.BR mrouted (8) ,
.BR mrinfo (8) ,
.BR map-mbone (8) ,
.BR traceroute (8)
@


1.3
log
@remove trailing whitespace, some Nm cleanup
@
text
@d319 1
a319 1
192.  Alternatively, the ttl may be set explicity with the
@


1.2
log
@from netbsd; update to mrouted 3.8
@
text
@d153 1
a153 1
multicast path every 10 seconds (see 
d356 1
a356 1
Querying full reverse path... 
d358 5
a362 5
 -1  cub.isi.edu (128.9.160.153)  DVMRP  thresh^ 1  3 ms  
 -2  la.dart.net (140.173.128.1)  DVMRP  thresh^ 1  14 ms  
 -3  dc.dart.net (140.173.64.1)  DVMRP  thresh^ 1  50 ms  
 -4  bbn.dart.net (140.173.32.1)  DVMRP  thresh^ 1  63 ms  
 -5  mit.dart.net (140.173.48.2)  DVMRP  thresh^ 1  71 ms  
d418 2
a419 2
18.26.0.144    
140.173.48.2   mit.dart.net          
d422 1
a422 1
140.173.48.1   
d426 2
a427 2
140.173.32.2   
140.173.64.1   dc.dart.net 
d430 1
a430 1
140.173.64.2   
d434 1
a434 1
140.173.128.2  
d494 2
a495 2
 -2  bbn.dart.net (140.173.48.1)  DVMRP  thresh^ 1  36 ms  
 -3  dc.dart.net (140.173.32.2)  DVMRP  thresh^ 1  44 ms  
d511 1
a511 1
program written by Van Jacobson. 
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: mtrace.8,v 1.3 1995/10/04 03:47:54 thorpej Exp $
d66 3
d72 2
d113 3
d129 1
a129 1
Version 3.3 of
d140 1
a140 1
has been verified to be newer than 3.3.
d153 3
a155 1
multicast path every 10 seconds.
d182 1
a182 1
others (not implemented yet).
d196 5
d208 3
d513 3
a515 3
.BR mrouted (8),
.BR mrinfo (8),
.BR map-mbone (8),
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
