head	1.14;
access;
symbols
	OPENBSD_6_0:1.14.0.4
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.13.0.18
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.10
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.14
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.12
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.8
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.6
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.4
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.20
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.18
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.16
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.14
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.12
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.10
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.09.25.03.17.02;	author guenther;	state Exp;
branches;
next	1.13;
commitid	4nW24uRiNzUemWPe;

1.13
date	2011.10.02.22.20.49;	author edd;	state Exp;
branches;
next	1.12;

1.12
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2008.08.12.09.44.26;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.04.18.30.05;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.26.17.00.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.28.04.55.07;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.21.19.03;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.05.00.26.56;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.14.06.51.42;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.05.10.11.23;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.25.05.42.12;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.30.16.06.34;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.10.04.20.00.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@exec.c provided indirection for multiple exec formats.  ELF-only now, so...
@
text
@/*	$OpenBSD: exec_elf.c,v 1.13 2011/10/02 22:20:49 edd Exp $ */

/*
 * Copyright (c) 1999 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/exec.h>
#include <sys/exec_elf.h>

#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <nlist.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "ukc.h"
#include "config.h"
#include "exec.h"

caddr_t		ptr, rest, pre;
Elf_Ehdr	elf_ex;
Elf_Phdr	*elf_phdr;
Elf_Shdr	*elf_shdr;
char		*elf_total;
char		*elf_shstrtab;
off_t		elf_size;

caddr_t
adjust(caddr_t x)
{
	int i;
	Elf_Shdr *s;
	unsigned long y = 0;

	s = elf_shdr;

	for (i = 0; i < elf_ex.e_shnum; i++) {
		if (s[i].sh_addr == 0)
			continue;
		if (((unsigned long)x >= s[i].sh_addr) &&
		    ((unsigned long)x < (s[i].sh_addr+s[i].sh_size))) {
			y = (unsigned long)&elf_total[(unsigned long)x -
			    s[i].sh_addr + s[i].sh_offset];
			break;
		}
	}

	return((caddr_t)y);
}

caddr_t
readjust(caddr_t x)
{
	int i;
	Elf_Shdr *s;
	unsigned long y = 0;

	s = elf_shdr;

	for (i = 0; i < elf_ex.e_shnum; i++) {
		if (s[i].sh_addr == 0)
			continue;
		if (((x - elf_total) >= s[i].sh_offset) &&
		    ((x - elf_total) <= (s[i].sh_offset + s[i].sh_size)))
			y = (unsigned long)x - (unsigned long)elf_total +
			    (unsigned long)s[i].sh_addr - s[i].sh_offset;
	}

	return((caddr_t)y);
}

void
loadkernel(char *file)
{
	int fd;

	if ((fd = open(file, O_RDONLY | O_EXLOCK, 0)) < 0)
		err(1, "%s", file);

	if (read(fd, (char *)&elf_ex, sizeof(elf_ex)) != sizeof(elf_ex))
		errx(1, "can't read elf header");

	if (!IS_ELF(elf_ex))
		errx(1, "bad elf magic");

	elf_size = lseek(fd, (off_t)0, SEEK_END);
	(void)lseek(fd, (off_t)0, SEEK_SET);
	elf_total = emalloc((size_t)elf_size);

	if (read(fd, elf_total, (size_t)elf_size) != elf_size)
		errx(1, "can't read elf kernel");

	if (elf_ex.e_phoff > (size_t)elf_size)
		errx(1, "incorrect ELF header or truncated file");
	if (elf_ex.e_shoff > (size_t)elf_size)
		errx(1, "incorrect ELF header or truncated file");

	elf_phdr = (Elf_Phdr *)&elf_total[elf_ex.e_phoff];
	elf_shdr = (Elf_Shdr *)&elf_total[elf_ex.e_shoff];

	if ((char *)&elf_shdr[elf_ex.e_shstrndx] +
	    sizeof(elf_shdr[elf_ex.e_shstrndx]) >= elf_total + (size_t)elf_size)
		errx(1, "incorrect ELF header or truncated file");

	if ((char *)&elf_shdr[elf_ex.e_shstrndx].sh_offset +
	    sizeof(elf_shdr[elf_ex.e_shstrndx].sh_offset) >=
	    elf_total + (size_t)elf_size)
		errx(1, "incorrect ELF header or truncated file");

	elf_shstrtab = &elf_total[elf_shdr[elf_ex.e_shstrndx].sh_offset];

	close(fd);
}

void
savekernel(char *outfile)
{
	int fd;

	if ((fd = open(outfile, O_WRONLY | O_CREAT | O_TRUNC, 0755)) < 0)
		err(1, "%s", outfile);

	if (write(fd, elf_total, (size_t)elf_size) != elf_size)
		errx(1, "can't write file %s", outfile);

	close(fd);
}
@


1.13
log
@Fix some minor things in config(8):
 * As haesbaert suggests, correctly order include files.
 * Found some old style function defs. Updated.
 * Found a prototype inside a function. Moved.

OK nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.12 2009/10/27 23:59:51 deraadt Exp $ */
d41 1
a50 6
caddr_t		elf_adjust(caddr_t);
caddr_t		elf_readjust(caddr_t);
int		elf_check(char *);
void		elf_loadkernel(char *);
void		elf_savekernel(char *);

d52 1
a52 1
elf_adjust(caddr_t x)
d75 1
a75 1
elf_readjust(caddr_t x)
a94 20
int
elf_check(char *file)
{
	int fd, ret = 1;

	if ((fd = open(file, O_RDONLY | O_EXLOCK, 0)) < 0)
		return (0);

	if (read(fd, (char *)&elf_ex, sizeof(elf_ex)) != sizeof(elf_ex))
		ret = 0;

	if (ret) {
		if (!IS_ELF(elf_ex))
			ret = 0;
	}

	close(fd);
	return (ret);
}

d96 1
a96 1
elf_loadkernel(char *file)
d139 1
a139 1
elf_savekernel(char *outfile)
@


1.12
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.11 2008/08/12 09:44:26 otto Exp $ */
d27 4
d35 1
a36 1
#include <stdio.h>
a37 3
#include <sys/exec.h>
#include <sys/exec_elf.h>
#include <sys/types.h>
@


1.11
log
@basic bounds check on elf header info. avoid crashes on i.e.e truncated
kernels; noted by jasper@@ ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.10 2004/01/04 18:30:05 deraadt Exp $ */
a25 4

#ifndef LINT
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.10 2004/01/04 18:30:05 deraadt Exp $";
#endif
@


1.10
log
@knf and lint
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.9 2003/09/26 17:00:27 deraadt Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.9 2003/09/26 17:00:27 deraadt Exp $";
d144 5
d151 9
@


1.9
log
@use emalloc
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.8 2003/06/28 04:55:07 deraadt Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.8 2003/06/28 04:55:07 deraadt Exp $";
a126 2
	Elf_Phdr *p;
	Elf_Shdr *s;
d137 3
a139 3
	elf_size = lseek(fd, 0L, SEEK_END);
	(void)lseek(fd, 0L, SEEK_SET);
	elf_total = emalloc(elf_size);
d141 1
a141 1
	if (read(fd, elf_total, elf_size) != elf_size)
a146 3
	p = elf_phdr;
	s = elf_shdr;

d160 1
a160 1
	if (write(fd, elf_total, elf_size) != elf_size)
@


1.8
log
@ansi & prototype cleanup.  tested in mkr on most arch's.  ok dhartmei
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.7 2003/06/02 21:19:03 maja Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.7 2003/06/02 21:19:03 maja Exp $";
d43 1
d141 1
a141 1
	elf_total = malloc(elf_size);
@


1.7
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.6 2002/08/05 00:26:56 art Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.6 2002/08/05 00:26:56 art Exp $";
d52 6
d59 1
a59 2
elf_adjust(x)
	caddr_t x;
d82 1
a82 2
elf_readjust(x)
	caddr_t x;
d103 1
a103 2
elf_check(file)
	char *file;
d123 1
a123 2
elf_loadkernel(file)
	char *file;
d157 1
a157 3
elf_savekernel(outfile)

	char *outfile;
@


1.6
log
@Make readjust work correctly.
This allows config -e on sparc with elf.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.5 2002/03/14 06:51:42 mpech Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.5 2002/03/14 06:51:42 mpech Exp $";
@


1.5
log
@Remove \n from err/errx/warn/warnx().

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.4 2001/12/05 10:11:23 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.4 2001/12/05 10:11:23 deraadt Exp $";
d96 2
a97 1
			y = x - elf_total + s[i].sh_addr;
@


1.4
log
@more free KNF from maja, though this was hard to do
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.3 2001/01/25 05:42:12 art Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.3 2001/01/25 05:42:12 art Exp $";
d138 1
a138 1
		errx(1, "bad elf magic\n");
@


1.3
log
@Make this elf-size independent.
config -e works on my alpha.
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.2 2000/09/30 16:06:34 aaron Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.2 2000/09/30 16:06:34 aaron Exp $";
d49 1
a49 1
caddr_t		ptr,rest,pre;
d57 1
a57 1
caddr_t 
d64 1
a64 1
	
d73 1
a73 2
						     s[i].sh_addr +
						     s[i].sh_offset]; 
d106 1
a106 1
	int fd,ret = 1;
d110 1
a110 1
	  
d133 1
a133 1
	  
d136 1
a136 1
	
d139 1
a139 1
	
d152 1
a152 1
	
d154 1
a154 1
	
@


1.2
log
@Some format string problems that were missed during initial audit; deraadt@@ and
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_elf.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_elf.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $";
d50 3
a52 3
Elf32_Ehdr	elf_ex;
Elf32_Phdr	*elf_phdr;
Elf32_Shdr	*elf_shdr;
d62 1
a62 1
	Elf32_Shdr *s;
d87 1
a87 1
	Elf32_Shdr *s;
d129 2
a130 2
	Elf32_Phdr *p;
	Elf32_Shdr *s;
d148 2
a149 2
	elf_phdr = (Elf32_Phdr *)&elf_total[elf_ex.e_phoff];
	elf_shdr = (Elf32_Shdr *)&elf_total[elf_ex.e_shoff];
@


1.1
log
@config -e support; ukc from maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD$";
d133 1
a133 1
		err(1, file, errno);
d167 1
a167 1
		err(1, outfile, errno);
@

