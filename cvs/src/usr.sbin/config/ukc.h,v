head	1.14;
access;
symbols
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.26
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.18
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.28
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.24
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.22
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.20
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.18
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2017.09.27.15.14.52;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	l9afTFePGBozxTKI;

1.13
date	2015.09.21.14.45.14;	author guenther;	state Exp;
branches;
next	1.12;
commitid	gCISBV4IZwfk20hM;

1.12
date	2009.12.10.22.07.19;	author kettenis;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.25.21.10.12;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.21.19.03;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.23.13.30.24;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.17.23.01.19;	author maja;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.28.01;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.05.10.11.23;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.12.12.03.03;	author heko;	state Exp;
branches;
next	1.4;

1.4
date	2001.02.04.20.42.12;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.24.20.12.27;	author art;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.08.23.23.37;	author d;	state Exp;
branches;
next	1.1;

1.1
date	99.10.04.20.00.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@config -e's adds new devices to an extra locator array, which is accounted
using a variable which started at 0 and hence got planted in .bss.
Refactor that variable to begin at the maximum and decrease, such that it
lands in .data instead.
ok jsg
@
text
@/*	$OpenBSD: ukc.h,v 1.13 2015/09/21 14:45:14 guenther Exp $ */

/*
 * Copyright (c) 1999-2001 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#ifndef _UKC_H
#define _UKC_H

#define P_LOCNAMES	0
#define S_LOCNAMP	1
#define SA_CFROOTS	2
#define I_CFROOTS_SIZE	3
#define I_PV_SIZE	4
#define SA_PV		5
#define P_CFDATA	6
#define P_KERNEL_TEXT	7
#define P_VERSION	8
#define IA_EXTRALOC	9
#define I_REXTRALOC	10
#define I_TEXTRALOC	11
#define	I_HISTLEN	12
#define	CA_HISTORY	13
#define TZ_TZ		14
#define P_PDEVNAMES	15
#define I_PDEVSIZE	16
#define S_PDEVINIT	17
#define I_NMBCLUSTERS	18
#define I_BUFCACHEPCT	19
#define I_NKMEMPG	20
#define NLENTRIES	21

#ifdef UKC_MAIN
struct nlist nl[] = {
	{ "_locnames" },
	{ "_locnamp" },
	{ "_cfroots" },
	{ "_cfroots_size" },
	{ "_pv_size" },
	{ "_pv" },
	{ "_cfdata" },
	{ "_kernel_text" },
	{ "_version" },
	{ "_extraloc" },
	{ "_rextraloc" },
	{ "_textraloc" },
	{ "_userconf_histlen" },
	{ "_userconf_history" },
	{ "_tz" },
	{ "_pdevnames" },
	{ "_pdevnames_size" },
	{ "_pdevinit" },
	{ "_nmbclust" },
	{ "_bufcachepercent" },
	{ "_nkmempages" },
	{ NULL },
};
struct nlist knl[] = {
	{ "_locnames" },
	{ "_locnamp" },
	{ "_cfroots" },
	{ "_cfroots_size" },
	{ "_pv_size" },
	{ "_pv" },
	{ "_cfdata" },
	{ "_kernel_text" },
	{ "_version" },
	{ "_extraloc" },
	{ "_rextraloc" },
	{ "_textraloc" },
	{ "_userconf_histlen" },
	{ "_userconf_history" },
	{ "_tz" },
	{ "_pdevnames" },
	{ "_pdevnames_size" },
	{ "_pdevinit" },
	{ "_nmbclust" },
	{ "_bufcachepercent" },
	{ "_nkmempages" },
	{ NULL },
};
int	maxdev = 0;
int	totdev = 0;
int	maxpseudo = 0;
int	maxlocnames = 0;
int	base = 16;
int	cnt = -1;
int	lines = 18;
int	oldkernel = 0;
int	nopdev = 0;
#else
extern struct nlist nl[];
extern int maxdev;
extern int totdev;
extern int maxpseudo;
extern int maxlocnames;
extern int base;
extern int cnt;
extern int lines;
extern int oldkernel;
extern int nopdev;
#endif

struct cfdata   *get_cfdata(int);
short	        *get_locnamp(int);

int	more(void);
void	pdev(short);
int	number(const char *, int *);
int	device(char *, int *, short *, short *);
int	attr(char *, int *);
void	modify(char *, int *);
void	change(int);
void	disable(int);
void	enable(int);
void	show(void);
void	common_attr_val(short, int *, char);
void	show_attr(char *);
void	common_dev(char *, int, short, short, char);
void	common_attr(char *, int, char);
void	add_read(char *, char, char *, int, int *);
void	add(char *, int, short, short);

int	config(void);
void	process_history(int, char *);

#define UC_CHANGE 'c'
#define UC_DISABLE 'd'
#define UC_ENABLE 'e'
#define UC_FIND 'f'
#define UC_SHOW 's'

#endif /* _UTIL_H */


@


1.13
log
@Make UKC handle device locators as longs

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.12 2009/12/10 22:07:19 kettenis Exp $ */
d40 2
a41 2
#define I_NEXTRALOC	10
#define I_UEXTRALOC	11
d65 2
a66 2
	{ "_nextraloc" },
	{ "_uextraloc" },
d89 2
a90 2
	{ "_nextraloc" },
	{ "_uextraloc" },
@


1.12
log
@Now that the old SysV SHM size limits global variables are gone, remove
support for setting them from config(8).
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.11 2003/06/25 21:10:12 deraadt Exp $ */
a125 4
caddr_t	        *get_locnames(int);
int	        *get_extraloc(int);
char	        *get_pdevnames(int);
struct pdevinit *get_pdevinit(int);
a127 2
void	pnum(int);
void	pdevnam(short);
@


1.11
log
@protos
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.10 2003/06/02 21:19:03 maja Exp $ */
d51 1
a51 3
#define I_SHMSEG	21
#define I_SHMMAXPGS	22
#define NLENTRIES	23
a75 2
	{ "_shmseg" },
	{ "_shmmaxpgs" },
a99 2
	{ "_shmseg" },
	{ "_shmmaxpgs" },
@


1.10
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.9 2002/03/23 13:30:24 espie Exp $ */
d137 1
a137 1
int	more();
d156 1
a156 1
int	config();
@


1.9
log
@small cleanups:
ansi prototypes,
help formating,
common code to handle integer parameters.

Let SystemV shm parameters be settable.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.8 2002/02/17 23:01:19 maja Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.8
log
@Patch from Daniel Lucq <daniel@@lucq.org>

The patch allows you to change the value of NMBCLUSTERS, BUFCACHEPERCENT
and NKMEMPAGES using the config command, instead of recompiling the kernel.

This is the userland part of the patch. I have compiled it on i386, sparc64,
alpha and macppc. -moj ok art@@ maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.7 2002/02/16 21:28:01 millert Exp $ */
d56 3
a58 1
#define NLENTRIES	21
d83 2
d109 2
d146 1
a146 1
int	number(char *, int *);
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.6 2001/12/05 10:11:23 deraadt Exp $ */
d53 4
a56 1
#define NLENTRIES	18
d78 3
d102 3
@


1.6
log
@more free KNF from maja, though this was hard to do
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.5 2001/08/12 12:03:03 heko Exp $ */
d120 25
a144 25
struct cfdata   *get_cfdata __P((int));
short	        *get_locnamp __P((int));
caddr_t	        *get_locnames __P((int));
int	        *get_extraloc __P((int));
char	        *get_pdevnames __P((int));
struct pdevinit *get_pdevinit __P((int));

int	more __P(());
void	pnum __P((int));
void	pdevnam __P((short));
void	pdev __P((short));
int	number __P((char *, int *));
int	device __P((char *, int *, short *, short *));
int	attr __P((char *, int *));
void	modify __P((char *, int *));
void	change __P((int));
void	disable __P((int));
void	enable __P((int));
void	show __P((void));
void	common_attr_val __P((short, int *, char));
void	show_attr __P((char *));
void	common_dev __P((char *, int, short, short, char));
void	common_attr __P((char *, int, char));
void	add_read __P((char *, char, char *, int, int *));
void	add __P((char *, int, short, short));
d146 2
a147 2
int	config __P(());
void	process_history __P((int, char *));
@


1.5
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.4 2001/02/04 20:42:12 maja Exp $ */
d124 1
a124 1
caddr_t	        *get_pdevnames __P((int));
@


1.4
log
@Add support for pseudo devices. This is done by adding more information
in ioconf.c. The only thing that can be done with pseudo devices is
changing the number of created units. -moj ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.3 2001/01/24 20:12:27 art Exp $ */
d155 1
a155 1
#endif _UTIL_H
@


1.3
log
@NULL-terminate the nlist
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.2 2000/01/08 23:23:37 d Exp $ */
d4 1
a4 1
 * Copyright (c) 1999 Mats O Jansson.  All rights reserved.
d50 4
a53 1
#define NLENTRIES	15
d72 3
d93 3
d100 1
d106 1
d111 1
d117 1
d120 6
a125 4
struct cfdata *get_cfdata __P((int));
short	      *get_locnamp __P((int));
caddr_t	      *get_locnames __P((int));
int	      *get_extraloc __P((int));
d156 1
@


1.2
log
@Allow UKC to change tz with 'timezone' command.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.h,v 1.1 1999/10/04 20:00:52 deraadt Exp $ */
d69 1
d87 1
@


1.1
log
@config -e support; ukc from maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d49 2
a50 1
#define NLENTRIES	14
d68 1
d85 1
@

