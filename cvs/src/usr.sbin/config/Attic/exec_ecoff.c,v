head	1.12;
access;
symbols
	OPENBSD_5_4:1.11.0.8
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.6
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.4
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.2
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.12
date	2013.10.13.20.17.51;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2011.10.02.22.20.49;	author edd;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.09.26.17.00.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.28.04.55.07;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.21.19.03;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.14.06.51.42;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.05.10.11.23;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.29.00.30.33;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.09.30.16.06.34;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.10.05.18.14.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.10.04.20.00.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@remote bits for a.out and ecoff
ok guenther
@
text
@/*	$OpenBSD: exec_ecoff.c,v 1.11 2011/10/02 22:20:49 edd Exp $ */

/*
 * Copyright (c) 1999 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/exec.h>
#include <sys/exec_ecoff.h>

#include <err.h>
#include <errno.h>
#include <fcntl.h>
#include <nlist.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "config.h"
#include "ukc.h"

caddr_t		ecoff_p, ecoff_r, ecoff_b;
int		ecoff_psz = 0, ecoff_rsz = 0, ecoff_bsz = 0;
struct ecoff_exechdr	ecoff_ex;

caddr_t
ecoff_adjust(caddr_t x)
{
	unsigned long y;

	y = (unsigned long)x - nl[P_KERNEL_TEXT].n_value + (unsigned long)ecoff_p;

	return((caddr_t)y);
}

caddr_t
ecoff_readjust(caddr_t x)
{
	unsigned long y;

	y = (unsigned long)x - (unsigned long)ecoff_p + nl[P_KERNEL_TEXT].n_value;

	return((caddr_t)y);
}

int
ecoff_check(char *file)
{
	int fd, ret = 1;

	if ((fd = open(file, O_RDONLY | O_EXLOCK, 0)) < 0)
		return (0);

	if (read(fd,(char *)&ecoff_ex, sizeof(ecoff_ex)) != sizeof(ecoff_ex))
		ret = 0;

	if (ret) {
		if (ECOFF_BADMAG(&ecoff_ex))
			ret = 0;
	}

	close(fd);
	return (ret);
}

void
ecoff_loadkernel(char *file)
{
	int fd;
	off_t beg, cur, end;

	if ((fd = open(file, O_RDONLY | O_EXLOCK, 0)) < 0)
		err(1, "%s", file);

	if (read(fd, (char *)&ecoff_ex, sizeof(ecoff_ex)) != sizeof(ecoff_ex))
		errx(1, "can't read ecoff header");

	if (ECOFF_BADMAG(&ecoff_ex))
		errx(1, "bad ecoff magic");

	ecoff_psz = ecoff_ex.a.tsize + ecoff_ex.a.dsize;
	beg = lseek(fd, ECOFF_TXTOFF(&ecoff_ex), SEEK_SET);

	ecoff_bsz = (int)beg;
	ecoff_b = emalloc(ecoff_bsz);

	ecoff_p = emalloc(ecoff_psz);

	if (read(fd, ecoff_p, ecoff_psz) != ecoff_psz)
		errx(1, "can't read ecoff text and data");

	cur = lseek(fd, (off_t)0, SEEK_CUR);
	end = lseek(fd, (off_t)0, SEEK_END);
	(void)lseek(fd, (off_t)0, SEEK_SET);
	if (read(fd, ecoff_b, ecoff_bsz) != ecoff_bsz)
		errx(1, "can't read begining of file %s", file);
	(void)lseek(fd, cur, SEEK_SET);

	ecoff_rsz = (int)(end - cur);

	ecoff_r = emalloc(ecoff_rsz);

	if (read(fd, ecoff_r, ecoff_rsz) != ecoff_rsz)
		errx(1, "can't read rest of file %s", file);

	close(fd);
}

void
ecoff_savekernel(char *outfile)
{
	int fd;

	if ((fd = open(outfile, O_WRONLY | O_CREAT | O_TRUNC, 0755)) < 0)
		err(1, "%s", outfile);

	if (write(fd, ecoff_b, ecoff_bsz) != ecoff_bsz)
		errx(1, "can't write beginning of file %s",outfile);

	if (write(fd, ecoff_p, ecoff_psz) != ecoff_psz)
		errx(1, "can't write ecoff text and data");

	if (write(fd, ecoff_r, ecoff_rsz) != ecoff_rsz)
		errx(1, "can't write rest of file %s", outfile);

	close(fd);
}
@


1.11
log
@Fix some minor things in config(8):
 * As haesbaert suggests, correctly order include files.
 * Found some old style function defs. Updated.
 * Found a prototype inside a function. Moved.

OK nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.10 2009/10/27 23:59:51 deraadt Exp $ */
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.9 2003/09/26 17:00:27 deraadt Exp $ */
d27 4
d35 1
a36 1
#include <stdio.h>
a37 3
#include <sys/exec.h>
#include <sys/exec_ecoff.h>
#include <sys/types.h>
@


1.9
log
@use emalloc
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.8 2003/06/28 04:55:07 deraadt Exp $ */
a25 4

#ifndef LINT
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.8 2003/06/28 04:55:07 deraadt Exp $";
#endif
@


1.8
log
@ansi & prototype cleanup.  tested in mkr on most arch's.  ok dhartmei
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.7 2003/06/02 21:19:03 maja Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.7 2003/06/02 21:19:03 maja Exp $";
d42 1
d108 1
a108 1
	ecoff_b = malloc(ecoff_bsz);
d110 1
a110 1
	ecoff_p = malloc(ecoff_psz);
d124 1
a124 1
	ecoff_r = malloc(ecoff_rsz);
@


1.7
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.6 2002/03/14 06:51:42 mpech Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.6 2002/03/14 06:51:42 mpech Exp $";
d49 1
a49 2
ecoff_adjust(x)
	caddr_t x;
d59 1
a59 2
ecoff_readjust(x)
	caddr_t x;
d69 1
a69 2
ecoff_check(file)
	char *file;
d89 1
a89 2
ecoff_loadkernel(file)
	char *file;
d132 1
a132 2
ecoff_savekernel(outfile)
	char *outfile;
@


1.6
log
@Remove \n from err/errx/warn/warnx().

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.5 2001/12/05 10:11:23 deraadt Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.5 2001/12/05 10:11:23 deraadt Exp $";
@


1.5
log
@more free KNF from maja, though this was hard to do
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.4 2000/10/29 00:30:33 aaron Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.4 2000/10/29 00:30:33 aaron Exp $";
d110 1
a110 1
		errx(1, "bad ecoff magic\n");
@


1.4
log
@Eek, typo in my last commit; noticed by huynh.29@@osu.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.3 2000/09/30 16:06:34 aaron Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.3 2000/09/30 16:06:34 aaron Exp $";
d49 1
a49 1
caddr_t		ecoff_p,ecoff_r,ecoff_b;
d53 1
a53 1
caddr_t 
d79 1
a79 1
	int fd,ret = 1;
d83 1
a83 1
	  
d101 1
a101 1
	off_t beg,cur,end;
d105 1
a105 1
	  
d108 1
a108 1
	
d111 1
a111 1
	
d114 1
a114 1
  
d119 1
a119 1
	
d136 1
a136 1
	
@


1.3
log
@Some format string problems that were missed during initial audit; deraadt@@ and
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.2 1999/10/05 18:14:44 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.2 1999/10/05 18:14:44 deraadt Exp $";
d104 1
a104 1
		err(1, "%s" file);
@


1.2
log
@compile
@
text
@d1 1
a1 1
/*	$OpenBSD: exec_ecoff.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: exec_ecoff.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $";
d104 1
a104 1
		err(1, file, errno);
d147 1
a147 1
		err(1, outfile, errno);
@


1.1
log
@config -e support; ukc from maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD$";
d87 1
a87 1
	if (ret)
@

