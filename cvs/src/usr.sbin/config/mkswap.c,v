head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.2
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.4
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.15.0.8
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.4
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.6
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.4
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.34
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.32
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.30
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.26
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.28
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.24
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.22
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.20
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.18
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.16
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.14
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.12
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.10
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.7.0.20
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.18
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.10.16.17.50.00;	author tb;	state Exp;
branches;
next	1.15;
commitid	9USjn6ChymyvzYCb;

1.15
date	2015.01.16.06.40.16;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	Uu5nFG3wCl0LACBb;

1.14
date	2013.04.19.15.03.02;	author florian;	state Exp;
branches;
next	1.13;

1.13
date	2011.10.02.22.20.50;	author edd;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.28.04.55.07;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.36.52;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.29.09.45.39;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.14.16.44.24;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.28.01;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.11.12.08.37.58;	author niklas;	state Exp;
branches;
next	1.6;

1.6
date	96.11.10.07.57.25;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.11.06.01.38.56;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.10.23.22.37.57;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.04.21.23.40.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.15.55.10;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.34;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Use the err(3) family of functions more consistently.

ok jca, improvements and ok millert, natano
@
text
@/*	$OpenBSD: mkswap.c,v 1.15 2015/01/16 06:40:16 deraadt Exp $	*/
/*	$NetBSD: mkswap.c,v 1.5 1996/08/31 20:58:27 mycroft Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * All advertising materials mentioning features or use of this software
 * must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Lawrence Berkeley Laboratories.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)mkswap.c	8.1 (Berkeley) 6/6/93
 */

#include <sys/param.h>	/* NODEV */

#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "config.h"
#include "sem.h"

static int mkoneswap(struct config *);

/*
 * Make the various swap*.c files.  Nothing to do for generic swap.
 */
int
mkswap(void)
{
	struct config *cf;

	for (cf = allcf; cf != NULL; cf = cf->cf_next)
		if (cf->cf_root != NULL && mkoneswap(cf))
			return (1);
	return (0);
}

static char *
mkdevstr(dev_t d)
{
	static char buf[32];

	if (d == NODEV)
		(void)snprintf(buf, sizeof buf, "NODEV");
	else
		(void)snprintf(buf, sizeof buf, "makedev(%d, %d)",
		    major(d), minor(d));
	return buf;
}

static int
mkoneswap(struct config *cf)
{
	char fname[200], *mountroot;
	struct nvlist *nv;
	FILE *fp;

	(void)snprintf(fname, sizeof fname, "swap%s.c", cf->cf_name);
	if ((fp = fopen(fname, "w")) == NULL) {
		warn("cannot write %s", fname);
		return (1);
	}
	if (fputs("\
#include <sys/param.h>\n\
#include <sys/conf.h>\n\
#include <sys/systm.h>\n\n", fp) < 0)
		goto wrerror;
	nv = cf->cf_root;
	if (fprintf(fp, "dev_t\trootdev = %s;\t/* %s */\n",
	    mkdevstr(nv->nv_int), nv->nv_str) < 0)
		goto wrerror;
	nv = cf->cf_dump;
	if (fprintf(fp, "dev_t\tdumpdev = %s;\t/* %s */\n",
	    mkdevstr(nv->nv_int), nv->nv_str) < 0)
		goto wrerror;
	if (fputs("\nstruct\tswdevt swdevt[] = {\n", fp) < 0)
		goto wrerror;
	for (nv = cf->cf_swap; nv != NULL; nv = nv->nv_next)
		if (fprintf(fp, "\t{ %s,\t0 },\t/* %s */\n",
		    mkdevstr(nv->nv_int), nv->nv_str) < 0)
			goto wrerror;
	if (fputs("\t{ NODEV, 0 }\n};\n\n", fp) < 0)
		goto wrerror;
	mountroot =
	    cf->cf_root->nv_str == s_nfs ? "nfs_mountroot" : "dk_mountroot";
	if (fprintf(fp, "int (*mountroot)(void) = %s;\n", mountroot) < 0)
		goto wrerror;

	if (fclose(fp)) {
		fp = NULL;
		goto wrerror;
	}
	return (0);
wrerror:
	warn("error writing %s", fname);
	if (fp != NULL)
		(void)fclose(fp);
	/* (void)unlink(fname); */
	return (1);
}
@


1.15
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.14 2013/04/19 15:03:02 florian Exp $	*/
d46 1
d93 1
a93 2
		(void)fprintf(stderr, "config: cannot write %s: %s\n",
		    fname, strerror(errno));
d128 1
a128 2
	(void)fprintf(stderr, "config: error writing %s: %s\n",
	    fname, strerror(errno));
@


1.14
log
@sw_vp is now in struct nfs_diskless.
input/ok deraadt@@, ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.13 2011/10/02 22:20:50 edd Exp $	*/
d44 1
a44 1
#include <sys/param.h>
@


1.13
log
@Fix some minor things in config(8):
 * As haesbaert suggests, correctly order include files.
 * Found some old style function defs. Updated.
 * Found a prototype inside a function. Moved.

OK nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.12 2003/06/28 04:55:07 deraadt Exp $	*/
d112 1
a112 1
		if (fprintf(fp, "\t{ %s,\t0,\t0 },\t/* %s */\n",
d115 1
a115 1
	if (fputs("\t{ NODEV, 0, 0 }\n};\n\n", fp) < 0)
@


1.12
log
@ansi & prototype cleanup.  tested in mkr on most arch's.  ok dhartmei
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.11 2003/06/02 23:36:52 millert Exp $	*/
d45 1
d50 1
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.10 2002/05/29 09:45:39 deraadt Exp $	*/
d58 1
a58 1
mkswap()
d69 1
a69 2
mkdevstr(d)
dev_t d;
d82 1
a82 2
mkoneswap(cf)
	struct config *cf;
d84 1
a86 2
	char fname[200];
	char *mountroot;
@


1.10
log
@more snprintf
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.9 2002/03/14 16:44:24 mpech Exp $	*/
d25 1
a25 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@kill more registers.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.8 2002/02/16 21:28:01 millert Exp $	*/
d79 1
a79 1
		(void)sprintf(buf, "NODEV");
d81 2
a82 1
		(void)sprintf(buf, "makedev(%d, %d)", major(d), minor(d));
d95 1
a95 1
	(void)sprintf(fname, "swap%s.c", cf->cf_name);
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.7 1996/11/12 08:37:58 niklas Exp $	*/
d64 1
a64 1
	register struct config *cf;
d87 1
a87 1
	register struct config *cf;
d89 2
a90 2
	register struct nvlist *nv;
	register FILE *fp;
@


1.7
log
@*mountroot protos is in systm.h now
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.6 1996/11/10 07:57:25 downsj Exp $	*/
d56 1
a56 1
static int mkoneswap __P((struct config *));
d123 1
a123 1
	if (fprintf(fp, "int (*mountroot) __P((void)) = %s;\n", mountroot) < 0)
@


1.6
log
@Fix the fucking typo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.5 1996/11/06 01:38:56 deraadt Exp $	*/
d102 2
a103 1
#include <sys/conf.h>\n\n", fp) < 0)
a122 2
	if (fprintf(fp, "extern int %s __P((void));\n", mountroot) < 0)
		goto wrerror;
@


1.5
log
@use dk_mountroot
@
text
@d1 1
a1 1
/*	$OpenBSD: mkswap.c,v 1.3 1996/04/21 23:40:20 deraadt Exp $	*/
d122 1
a122 1
	if (fprintf(fp, "extern int %s __P((void *));\n", mountroot) < 0)
@


1.4
log
@Merge of NetBSD 961020.  Includes flexible build/source dir specs
@
text
@d121 1
a121 1
	    cf->cf_root->nv_str == s_nfs ? "nfs_mountroot" : "ffs_mountroot";
d124 1
a124 1
	if (fprintf(fp, "int (*mountroot) __P((void *)) = %s;\n", mountroot) < 0)
@


1.3
log
@sync to netbsd 960418
@
text
@d1 2
a2 2
/*	$OpenBSD: mkswap.c,v 1.2 1996/03/25 15:55:10 niklas Exp $	*/
/*	$NetBSD: mkswap.c,v 1.4 1996/03/17 20:36:25 christos Exp $	*/
d91 1
a91 2
	register char *fname;
	char buf[200];
d94 1
a94 2
	(void)sprintf(buf, "swap%s.c", cf->cf_name);
	fname = path(buf);
a130 1
	free(fname);
a137 1
	free(fname);
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 2
/*	$OpenBSD$	*/
/*	$NetBSD: mkswap.c,v 1.2 1996/03/03 17:28:29 thorpej Exp $	*/
d4 1
a4 1
/* 
d124 1
a124 1
	if (fprintf(fp, "extern int %s();\n", mountroot) < 0)
d126 1
a126 1
	if (fprintf(fp, "int (*mountroot)() = %s;\n", mountroot) < 0)
@


1.1
log
@Initial revision
@
text
@d1 3
a45 1
 *	$Id: mkswap.c,v 1.1 1995/04/28 06:55:17 cgd Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
