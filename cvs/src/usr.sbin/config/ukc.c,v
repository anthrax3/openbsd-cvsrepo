head	1.22;
access;
symbols
	OPENBSD_6_1:1.22.0.4
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.20.0.4
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.18.0.10
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.14
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.12
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.8
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.6
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.4
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.2
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.22
date	2016.10.19.16.39.02;	author tb;	state Exp;
branches;
next	1.21;
commitid	xwAJxEpS1umPTY2J;

1.21
date	2016.10.16.17.50.00;	author tb;	state Exp;
branches;
next	1.20;
commitid	9USjn6ChymyvzYCb;

1.20
date	2015.10.12.04.43.30;	author deraadt;	state Exp;
branches;
next	1.19;
commitid	w1JtNRWmzptzB1Tf;

1.19
date	2015.04.23.05.58.14;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	0xhLnYDKaIe7gymL;

1.18
date	2011.10.02.22.20.50;	author edd;	state Exp;
branches;
next	1.17;

1.17
date	2011.10.02.10.10.30;	author edd;	state Exp;
branches;
next	1.16;

1.16
date	2009.12.10.22.07.19;	author kettenis;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2007.06.28.00.52.37;	author ray;	state Exp;
branches;
next	1.13;

1.13
date	2004.06.08.20.59.29;	author mcbride;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.04.00.47.01;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.28.04.55.07;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.21.19.03;	author maja;	state Exp;
branches;
next	1.9;

1.9
date	2002.03.23.13.30.24;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.17.23.01.19;	author maja;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.28.01;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.05.10.11.23;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2001.02.04.20.42.12;	author maja;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.31.22.41.32;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.06.14.06.16;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	99.10.16.13.13.27;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.10.04.20.00.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@There used to be disabled code that used /dev/tty to determine the
terminal size. That code was removed a while ago, and now there is
no longer any reason to open /dev/tty right before exiting init().

ok natano
@
text
@/*	$OpenBSD: ukc.c,v 1.21 2016/10/16 17:50:00 tb Exp $ */

/*
 * Copyright (c) 1999-2001 Mats O Jansson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/device.h>

#include <err.h>
#include <fcntl.h>
#include <kvm.h>
#include <limits.h>
#include <nlist.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#define UKC_MAIN
#include "ukc.h"
#include "exec.h"

void		init(void);
__dead void	usage(void);

int	ukc_mod_kernel = 0;

static void
check_int(int idx, const char *name)
{
	if (nl[idx].n_type == 0)
		printf("WARNING this kernel doesn't support modification "
		    "of %s.\n", name);
}

int
ukc(char *file, char *outfile, int uflag, int force)
{
	int i;
	kvm_t *kd;
	char errbuf[_POSIX2_LINE_MAX];
	int histlen = 0, ok = 1;
	char history[1024], kversion[1024];

	if (file == NULL) {
		warnx("no file specified");
		usage();
	}

	loadkernel(file);

	if (nlist(file, nl) == -1)
		errx(1, "nlist: %s", file);

	if (uflag) {
		if ((kd = kvm_openfiles(NULL,NULL,NULL,O_RDONLY, errbuf)) == 0)
			errx(1, "kvm_openfiles: %s", errbuf);

		if (kvm_nlist(kd, knl) == -1)
			errx(1, "kvm_nlist: %s", kvm_geterr(kd));

		i = 0;
		while (i < NLENTRIES) {
			if (nl[i].n_type != knl[i].n_type ||
			    nl[i].n_desc != knl[i].n_desc ||
			    nl[i].n_value != knl[i].n_value)
				ok = 0;
			i++;
		}

		if (knl[I_HISTLEN].n_type != 0 && ok) {
			if (kvm_read(kd, knl[I_HISTLEN].n_value, &histlen,
			    sizeof(histlen)) != sizeof(histlen))
				warnx("cannot read %s: %s",
				    knl[I_HISTLEN].n_name,
				    kvm_geterr(kd));
		}
		if (knl[CA_HISTORY].n_type != 0 && ok) {
			if (kvm_read(kd, knl[CA_HISTORY].n_value, history,
			    sizeof(history)) != sizeof(history))
				warnx("cannot read %s: %s",
				    knl[CA_HISTORY].n_name,
				    kvm_geterr(kd));
		}
		if (knl[P_VERSION].n_type != 0 && ok) {
			if (kvm_read(kd, knl[P_VERSION].n_value, kversion,
			    sizeof(kversion)) != sizeof(kversion))
				warnx("cannot read %s: %s",
				    knl[P_VERSION].n_name,
				    kvm_geterr(kd));
		}
	}

	if (force == 0 && outfile == NULL)
		printf("WARNING no output file specified\n");

	if (nl[IA_EXTRALOC].n_type == 0 || nl[I_NEXTRALOC].n_type == 0 ||
	    nl[I_UEXTRALOC].n_type == 0 || nl[I_HISTLEN].n_type == 0 ||
	    nl[CA_HISTORY].n_type == 0) {
		printf("\
WARNING this kernel doesn't contain all information needed!\n\
WARNING the commands add and change might not work.\n");
		oldkernel = 1;
	}

	if (nl[P_PDEVNAMES].n_type == 0 ||
	    nl[I_PDEVSIZE].n_type == 0 ||
	    nl[S_PDEVINIT].n_type == 0) {
		printf("\
WARNING this kernel doesn't support pseudo devices.\n");
		nopdev = 1;
	}

	check_int(I_BUFCACHEPCT, "BUFCACHEPERCENT");
	check_int(I_NKMEMPG, "NKMEMPAGES");

	init();

	if (uflag) {
		if (ok) {
			if (strcmp(adjust((caddr_t)nl[P_VERSION].n_value),
			    kversion) != 0)
				ok = 1;
		}
		if (!ok) {
			printf("WARNING kernel mismatch. -u ignored.\n");
			printf("WARNING the running kernel version:\n");
			printf("%s", kversion);
		} else
			process_history(histlen, history);
	}

	printf("%s", adjust((caddr_t)nl[P_VERSION].n_value));

	if (config()) {
		if (force == 0 && outfile == NULL) {
			fprintf(stderr, "not forced\n");
			return (1);
		}
		if (outfile == NULL)
			outfile = file;
		if (ukc_mod_kernel == 0) {
			fprintf(stderr, "Kernel not modified\n");
			return (1);
		} else {
			printf ("Saving modified kernel.\n");
			savekernel(outfile);
		}
	}
	return(0);
}

void
init(void)
{
	int i = 0;
	struct cfdata *cd;
	short	*ln;
	int	*p;

	if ((cd = get_cfdata(0)) == NULL)	/* get first item */
		errx(1, "failed to get first cfdata");

	while (cd->cf_attach != 0) {
		maxdev = i;
		totdev = i;

		ln = get_locnamp(cd->cf_locnames);
		while (*ln != -1) {
			if (*ln > maxlocnames)
				maxlocnames = *ln;
			ln++;
		}
		i++;
		cd++;
	}

	while (cd->cf_attach == 0) {
		totdev = i;
		i++;
		cd++;
	}

	totdev = totdev - 1;

	if (nopdev == 0) {
		p = (int *)adjust((caddr_t)nl[I_PDEVSIZE].n_value);
		maxpseudo = *p;
	}
}
@


1.21
log
@Use the err(3) family of functions more consistently.

ok jca, improvements and ok millert, natano
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.20 2015/10/12 04:43:30 deraadt Exp $ */
d177 1
a177 1
	int i = 0, fd;
a210 3

	if ((fd = open("/dev/tty", O_RDWR)) < 0)
		fd = 2;
@


1.20
log
@does not need ioctl.h
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.19 2015/04/23 05:58:14 deraadt Exp $ */
d44 2
a45 2
void	init(void);
void	usage(void);
a59 1
	extern char *__progname;
d67 1
a67 1
		fprintf(stderr, "%s: no file specified\n", __progname);
@


1.19
log
@delete a NOTDEF of unused code
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.18 2011/10/02 22:20:50 edd Exp $ */
a28 1
#include <sys/ioctl.h>
@


1.18
log
@Fix some minor things in config(8):
 * As haesbaert suggests, correctly order include files.
 * Found some old style function defs. Updated.
 * Found a prototype inside a function. Moved.

OK nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.17 2011/10/02 10:10:30 edd Exp $ */
a182 3
#ifdef NOTDEF
	struct winsize w;
#endif
a215 21

#ifdef NOTDEF
	if (ioctl(fd, TIOCGWINSZ, &w) == 0)
		printf("row %d col %d\n", w.ws_row, w.ws_col);

	if ((s = getenv("LINES")) != NULL)
		sc_height = atoi(s);
	else
		sc_height = tgetnum("li");

	if (sc_height <= 0)
		sc_height = 24;

	if ((s = getenv("COLUMNS")) != NULL)
		sc_width = atoi(s);
	else
		sc_width = tgetnum("co");

	if (sc_width <= 0)
		sc_width = 80;
#endif
@


1.17
log
@When using `config -e`:
 * Don't print a NULL pointer if binary loaded is not a kernel.
 * Don't segfault of binary loaded is not a kernel.
 * Report non-existent kernel via a preliminary stat().
 * Make a warning look like the rest.

OK haesbaert@@, nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.16 2009/12/10 22:07:19 kettenis Exp $ */
d32 1
a33 1
#include <fcntl.h>
@


1.16
log
@Now that the old SysV SHM size limits global variables are gone, remove
support for setting them from config(8).
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.15 2009/10/27 23:59:51 deraadt Exp $ */
a116 2
	printf("%s", adjust((caddr_t)nl[P_VERSION].n_value));

d118 1
a118 1
		printf("warning: no output file specified\n");
d156 2
d187 3
a189 1
	cd = get_cfdata(0);			/* get first item */
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.14 2007/06/28 00:52:37 ray Exp $ */
a140 2
	check_int(I_SHMSEG, "SHMSEG");
	check_int(I_SHMMAXPGS, "SHMMAXPGS");
@


1.14
log
@Add check for nlist failure to prevent a segfault.
Remove ret variable, which is only set but not never checked.
return (1) instead of exit(1) for consistency.

Original diff from Rainer Giedat.

OK millert, maja, and otto.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.13 2004/06/08 20:59:29 mcbride Exp $ */
a25 4

#ifndef LINT
static char rcsid[] = "$OpenBSD: ukc.c,v 1.13 2004/06/08 20:59:29 mcbride Exp $";
#endif
@


1.13
log
@Remove 'nmbuclust' setting of NMBCLUSTERS. They don't exist anymore.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.12 2004/01/04 00:47:01 deraadt Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.12 2004/01/04 00:47:01 deraadt Exp $";
d66 1
a66 1
	int ret, i;
d79 2
a80 1
	ret = nlist(file, nl);
d86 1
a86 1
		if ((ret = kvm_nlist(kd, knl)) == -1)
d167 1
a167 1
			exit(1);
d173 1
a173 1
			exit(1);
@


1.12
log
@Wall and spacing, I am hunting bugs
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.11 2003/06/28 04:55:07 deraadt Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.11 2003/06/28 04:55:07 deraadt Exp $";
a141 1
	check_int(I_NMBCLUSTERS, "NMCLUSTERS");
@


1.11
log
@ansi & prototype cleanup.  tested in mkr on most arch's.  ok dhartmei
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.10 2003/06/02 21:19:03 maja Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.10 2003/06/02 21:19:03 maja Exp $";
d231 1
a231 1
 		sc_height = tgetnum("li");
d239 1
a239 1
 		sc_width = tgetnum("co");
d241 2
a242 2
 	if (sc_width <= 0)
  		sc_width = 80;
@


1.10
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.9 2002/03/23 13:30:24 espie Exp $ */
d28 1
a28 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.9 2002/03/23 13:30:24 espie Exp $";
d63 1
a63 5
ukc(file, outfile, uflag, force)
	char *file;
	char *outfile;
	int uflag;
	int force;
d183 1
a183 1
init()
@


1.9
log
@small cleanups:
ansi prototypes,
help formating,
common code to handle integer parameters.

Let SystemV shm parameters be settable.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.8 2002/02/17 23:01:19 maja Exp $ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d28 1
a28 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.8 2002/02/17 23:01:19 maja Exp $";
@


1.8
log
@Patch from Daniel Lucq <daniel@@lucq.org>

The patch allows you to change the value of NMBCLUSTERS, BUFCACHEPERCENT
and NKMEMPAGES using the config command, instead of recompiling the kernel.

This is the userland part of the patch. I have compiled it on i386, sparc64,
alpha and macppc. -moj ok art@@ maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.7 2002/02/16 21:28:01 millert Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.7 2002/02/16 21:28:01 millert Exp $";
d59 8
d151 5
a155 11
	if (nl[I_NMBCLUSTERS].n_type == 0)
		printf("\
WARNING this kernel doesn't support modification of NMCLUSTERS.\n");

	if (nl[I_BUFCACHEPCT].n_type == 0)
		printf("\
WARNING this kernel doesn't support modification of BUFCACHEPERCENT.\n");

	if (nl[I_NKMEMPG].n_type == 0)
		printf("\
WARNING this kernel doesn't support modification of NKMEMPAGES.\n");
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.6 2001/12/05 10:11:23 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.6 2001/12/05 10:11:23 deraadt Exp $";
d142 12
@


1.6
log
@more free KNF from maja, though this was hard to do
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.5 2001/02/04 20:42:12 maja Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.5 2001/02/04 20:42:12 maja Exp $";
d54 2
a55 2
void	init __P((void));
void	usage __P((void));
@


1.5
log
@Add support for pseudo devices. This is done by adding more information
in ioconf.c. The only thing that can be done with pseudo devices is
changing the number of created units. -moj ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.4 2001/01/31 22:41:32 maja Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.4 2001/01/31 22:41:32 maja Exp $";
d72 1
a72 1
	
d79 1
a79 1
	
d81 1
a81 1
	
a82 1
		
d85 1
a85 1
	  
d88 1
a88 1
		
d91 3
a93 3
			if ((nl[i].n_type != knl[i].n_type) ||
			    (nl[i].n_desc != knl[i].n_desc) ||
			    (nl[i].n_value != knl[i].n_value))
d98 1
a98 1
		if ((knl[I_HISTLEN].n_type != 0) && ok) {
d100 1
a100 1
				     sizeof(histlen)) != sizeof(histlen))
d102 2
a103 2
				      knl[I_HISTLEN].n_name,
				      kvm_geterr(kd));
d105 1
a105 1
		if ((knl[CA_HISTORY].n_type != 0) && ok) {
d107 1
a107 1
				     sizeof(history)) != sizeof(history))
d109 2
a110 2
				      knl[CA_HISTORY].n_name,
				      kvm_geterr(kd));
d112 1
a112 1
		if ((knl[P_VERSION].n_type != 0) && ok) {
d114 1
a114 1
				     sizeof(kversion)) != sizeof(kversion))
d116 2
a117 2
				      knl[P_VERSION].n_name,
				      kvm_geterr(kd));
d119 1
a119 1
	}	
d126 3
a128 5
	if ((nl[IA_EXTRALOC].n_type == 0) ||
	    (nl[I_NEXTRALOC].n_type == 0) ||
	    (nl[I_UEXTRALOC].n_type == 0) ||
	    (nl[I_HISTLEN].n_type == 0) ||
	    (nl[CA_HISTORY].n_type == 0)) {
d134 4
a137 4
	
	if ((nl[P_PDEVNAMES].n_type == 0) ||
	    (nl[I_PDEVSIZE].n_type == 0) ||
	    (nl[S_PDEVINIT].n_type == 0)) {
d144 1
a144 1
	
d148 1
a148 1
				   kversion) != 0)
d154 3
a156 4
			printf("%s",kversion);
		} else {
			process_history(histlen,history);
		}
a173 1

d180 1
a180 1
	int i = 0,fd;
d189 1
a189 2

	while(cd->cf_attach != 0) {
d203 1
a203 1
	while(cd->cf_attach == 0) {
d220 2
a221 3
	if (ioctl(fd, TIOCGWINSZ, &w) == 0) {
		printf("row %d col %d\n",w.ws_row,w.ws_col);
	}
@


1.4
log
@Dont write kernel if nothing has changed. ok @@deraadt. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.3 2000/12/06 14:06:16 ho Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.3 2000/12/06 14:06:16 ho Exp $";
a126 2
	init();
	
d138 10
d188 1
d216 5
@


1.3
log
@Add a 'saving modified kernel' message. (deraadt@@ ok)
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.2 1999/10/16 13:13:27 aaron Exp $ */
d4 1
a4 1
 * Copyright (c) 1999 Mats O Jansson.  All rights reserved.
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.2 1999/10/16 13:13:27 aaron Exp $";
d57 2
d162 7
a168 2
		printf ("Saving modified kernel.\n");
		savekernel(outfile);
@


1.2
log
@Fix typo.
@
text
@d1 1
a1 1
/*	$OpenBSD: ukc.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD: ukc.c,v 1.1 1999/10/04 20:00:51 deraadt Exp $";
d160 1
@


1.1
log
@config -e support; ukc from maja@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 1
static char rcsid[] = "$OpenBSD$";
d123 1
a123 1
		printf("warning: not output file specified\n");
@

