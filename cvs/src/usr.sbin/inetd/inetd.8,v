head	1.40;
access;
symbols
	OPENBSD_6_0:1.40.0.4
	OPENBSD_6_0_BASE:1.40
	OPENBSD_5_9:1.40.0.2
	OPENBSD_5_9_BASE:1.40
	OPENBSD_5_8:1.37.0.6
	OPENBSD_5_8_BASE:1.37
	OPENBSD_5_7:1.37.0.2
	OPENBSD_5_7_BASE:1.37
	OPENBSD_5_6:1.36.0.4
	OPENBSD_5_6_BASE:1.36
	OPENBSD_5_5:1.35.0.10
	OPENBSD_5_5_BASE:1.35
	OPENBSD_5_4:1.35.0.6
	OPENBSD_5_4_BASE:1.35
	OPENBSD_5_3:1.35.0.4
	OPENBSD_5_3_BASE:1.35
	OPENBSD_5_2:1.35.0.2
	OPENBSD_5_2_BASE:1.35
	OPENBSD_5_1_BASE:1.34
	OPENBSD_5_1:1.34.0.10
	OPENBSD_5_0:1.34.0.8
	OPENBSD_5_0_BASE:1.34
	OPENBSD_4_9:1.34.0.6
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.34.0.4
	OPENBSD_4_8_BASE:1.34
	OPENBSD_4_7:1.34.0.2
	OPENBSD_4_7_BASE:1.34
	OPENBSD_4_6:1.33.0.8
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.4
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.2
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.32.0.2
	OPENBSD_4_3_BASE:1.32
	OPENBSD_4_2:1.30.0.2
	OPENBSD_4_2_BASE:1.30
	OPENBSD_4_1:1.29.0.8
	OPENBSD_4_1_BASE:1.29
	OPENBSD_4_0:1.29.0.6
	OPENBSD_4_0_BASE:1.29
	OPENBSD_3_9:1.29.0.4
	OPENBSD_3_9_BASE:1.29
	OPENBSD_3_8:1.29.0.2
	OPENBSD_3_8_BASE:1.29
	OPENBSD_3_7:1.27.0.4
	OPENBSD_3_7_BASE:1.27
	OPENBSD_3_6:1.27.0.2
	OPENBSD_3_6_BASE:1.27
	OPENBSD_3_5:1.25.0.4
	OPENBSD_3_5_BASE:1.25
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.22.0.2
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.20.0.2
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.19.0.4
	OPENBSD_3_1_BASE:1.19
	OPENBSD_3_0:1.19.0.2
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9_BASE:1.18
	OPENBSD_2_9:1.18.0.2
	OPENBSD_2_8:1.17.0.2
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.15.0.2
	OPENBSD_2_7_BASE:1.15
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.40
date	2015.11.14.01.22.04;	author jmc;	state Exp;
branches;
next	1.39;
commitid	43FTw5NSiQSTnl49;

1.39
date	2015.10.18.15.28.03;	author deraadt;	state Exp;
branches;
next	1.38;
commitid	uz0QQGwk7qRK0HsF;

1.38
date	2015.09.10.15.16.44;	author schwarze;	state Exp;
branches;
next	1.37;
commitid	yPhLfPulVSum2r0H;

1.37
date	2014.10.13.01.56.44;	author dlg;	state Exp;
branches;
next	1.36;
commitid	fBfrP2zdVON7ZuMm;

1.36
date	2014.04.18.22.04.54;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2012.03.06.01.25.47;	author dlg;	state Exp;
branches;
next	1.34;

1.34
date	2009.12.29.10.25.43;	author sobrado;	state Exp;
branches;
next	1.33;

1.33
date	2008.06.28.10.54.45;	author sobrado;	state Exp;
branches;
next	1.32;

1.32
date	2008.01.06.16.04.34;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2008.01.06.13.49.42;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2007.05.31.19.20.25;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2005.06.02.07.56.22;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2005.06.02.07.51.37;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2004.06.30.07.58.12;	author otto;	state Exp;
branches;
next	1.26;

1.26
date	2004.04.24.21.40.35;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.06.12.12.59.50;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.02.23.36.53;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.04.08.01.26.21;	author david;	state Exp;
branches;
next	1.22;

1.22
date	2003.02.03.17.46.56;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.01.18.23.40.58;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2002.05.06.22.24.58;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2001.08.22.17.44.27;	author beck;	state Exp;
branches;
next	1.18;

1.18
date	2001.01.29.11.38.32;	author deraadt;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.23.14.44.09;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.06.14.16.06.07;	author itojun;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.15.02.15.18;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.12.21.47.53;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.19.17.57.05;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.12.08.13.21.17;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	99.09.23.04.12.10;	author alex;	state Exp;
branches;
next	1.10;

1.10
date	99.06.05.22.17.01;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.11.33;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	98.12.04.07.52.02;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.11.08.00.21.30;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	97.11.14.03.46.00;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.06.26.06.27.27;	author denny;	state Exp;
branches;
next	1.4;

1.4
date	97.06.18.03.01.42;	author denny;	state Exp;
branches;
next	1.3;

1.3
date	97.05.30.07.56.08;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.01.13.20.45.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.36;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.36;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.40
log
@these files document their config files too: adjust NAME accordingly;
ok schwarze
@
text
@.\"	$OpenBSD: inetd.8,v 1.39 2015/10/18 15:28:03 deraadt Exp $
.\" Copyright (c) 1985, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @@(#)inetd.8	6.7 (Berkeley) 3/16/91
.\"
.Dd $Mdocdate: October 18 2015 $
.Dt INETD 8
.Os
.Sh NAME
.Nm inetd ,
.Nm inetd.conf
.Nd internet super-server
.Sh SYNOPSIS
.Nm inetd
.Op Fl d
.Op Fl R Ar rate
.Op Ar configuration_file
.Sh DESCRIPTION
.Nm inetd
should be run at boot time by
.Pa /etc/rc
(see
.Xr rc 8 ) .
It then listens for connections on certain internet sockets.
When a connection is found on one
of its sockets, it decides what service the socket
corresponds to, and invokes a program to service the request.
After the program is
finished, it continues to listen on the socket (except in some cases which
will be described below).
Essentially,
.Nm inetd
allows running one daemon to invoke several others,
reducing load on the system.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d
Turns on debugging.
.It Fl R Ar rate
Specify the maximum number of times a service can be invoked
in one minute; the default is 256.
If a service exceeds this limit,
.Nm
will log the problem
and stop servicing requests for the specific service for ten minutes.
See also the wait/nowait configuration fields below.
.El
.Pp
Upon execution,
.Nm inetd
reads its configuration information from a configuration
file which, by default, is
.Pa /etc/inetd.conf .
There must be an entry for each field of the configuration
file, with entries for each field separated by a tab or
a space.
Comments are denoted by a
.Dq #
at the beginning
of a line.
The fields of the configuration file are as follows:
.Bd -unfilled -offset indent
service name
socket type
protocol
wait/nowait[.max]
user[.group] or user[:group]
server program
server program arguments
.Ed
.Pp
To specify a Sun-RPC
based service, the entry would contain these fields.
.Bd -unfilled -offset indent
service name/version
socket type
rpc/protocol
wait/nowait[.max]
user[.group] or user[:group]
server program
server program arguments
.Ed
.Pp
For internet services, the first field of the line may also have a host
address specifier prefixed to it, separated from the service name by a
colon.
If this is done, the string before the colon in the first field
indicates what local address
.Nm
should use when listening for that service.
Multiple local addresses
can be specified on the same line, separated by commas.
Numeric IP
addresses in dotted-quad notation can be used as well as symbolic
hostnames.
Symbolic hostnames are looked up using
.Fn getaddrinfo .
If a hostname has multiple address mappings, inetd creates a socket
to listen on each address.
.Pp
The single character
.Dq \&*
indicates
.Dv INADDR_ANY ,
meaning
.Dq all local addresses .
To avoid repeating an address that occurs frequently, a line with a
host address specifier and colon, but no further fields, causes the
host address specifier to be remembered and used for all further lines
with no explicit host specifier (until another such line or the end of
the file).
A line
.Dl *:
is implicitly provided at the top of the file; thus, traditional
configuration files (which have no host address specifiers) will be
interpreted in the traditional manner, with all services listened for
on all local addresses.
If the protocol is
.Dq unix ,
this value is ignored.
.Pp
The
.Em service name
entry is the name of a valid service in
the file
.Pa /etc/services .
For
.Dq internal
services (discussed below), the service
name
.Em must
be the official name of the service (that is, the first entry in
.Pa /etc/services ) .
When used to specify a Sun-RPC
based service, this field is a valid RPC service name in
the file
.Pa /etc/rpc .
The part on the right of the
.Dq /
is the RPC version number.
This can simply be a single numeric argument or a range of versions.
A range is bounded by the low version to the high version -
.Dq rusers/1-3 .
For
.Ux Ns -domain
sockets this field specifies the path name of the socket.
.Pp
The
.Em socket type
should be one of
.Dq stream ,
.Dq dgram ,
.Dq raw ,
.Dq rdm ,
or
.Dq seqpacket ,
depending on whether the socket is a stream, datagram, raw,
reliably delivered message, or sequenced packet socket.
.Pp
The
.Em protocol
must be a valid protocol as given in
.Pa /etc/protocols .
Examples might be
.Dq tcp
or
.Dq udp .
RPC based services are specified with the
.Dq rpc/tcp
or
.Dq rpc/udp
service type.
.Dq tcp
and
.Dq udp
will be recognized as
.Dq TCP or UDP over default IP version .
This is currently IPv4, but in the future it will be IPv6.
If you need to specify IPv4 or IPv6 explicitly, use something like
.Dq tcp4
or
.Dq udp6 .
A
.Em protocol
of
.Dq unix
is used to specify a socket in the
.Ux Ns -domain .
.Pp
The
.Em wait/nowait
entry is used to tell
.Nm
if it should wait for the server program to return,
or continue processing connections on the socket.
If a datagram server connects
to its peer, freeing the socket so
.Nm inetd
can receive further messages on the socket, it is said to be
a
.Dq multi-threaded
server, and should use the
.Dq nowait
entry.
For datagram servers which process all incoming datagrams
on a socket and eventually time out, the server is said to be
.Dq single-threaded
and should use a
.Dq wait
entry.
.Xr comsat 8
.Pq Xr biff 1
and
.Xr talkd 8
are both examples of the latter type of
datagram server.
The optional
.Dq max
suffix (separated from
.Dq wait
or
.Dq nowait
by a dot) specifies the maximum number of times a service can be invoked
in one minute; the default is 256.
If a service exceeds this limit,
.Nm
will log the problem
and stop servicing requests for the specific service for ten minutes.
See also the
.Fl R
option above.
.Pp
Stream servers are usually marked as
.Dq nowait
but if a single server process is to handle multiple connections, it may be
marked as
.Dq wait .
The master socket will then be passed as fd 0 to the server, which will then
need to accept the incoming connection.
The server should eventually time
out and exit when no more connections are active.
.Nm
will continue to
listen on the master socket for connections, so the server should not close
it when it exits.
.Pp
The
.Em user
entry should contain the user name of the user as whom the server
should run.
This allows for servers to be given less permission
than root.
An optional group name can be specified by appending a dot to
the user name followed by the group name.
This allows for servers to run with
a different (primary) group ID than specified in the password file.
If a group
is specified and user is not root, the supplementary groups associated with
that user will still be set.
.Pp
The
.Em server program
entry should contain the pathname of the program which is to be
executed by
.Nm inetd
when a request is found on its socket.
If
.Nm inetd
provides this service internally, this entry should
be
.Dq internal .
.Pp
The
.Em server program arguments
should be just as arguments
normally are, starting with argv[0], which is the name of
the program.
If the service is provided internally, the word
.Dq internal
should take the place of this entry.
.Pp
.Nm inetd
provides several
.Dq trivial
services internally by use of routines within itself.
These services are
.Dq echo ,
.Dq discard ,
.Dq chargen
(character generator),
.Dq daytime
(human readable time), and
.Dq time
(machine readable time,
in the form of the number of seconds since midnight, January
1, 1900).
All of these services are TCP based.
For details of these services, consult the appropriate
.Tn RFC
from the Network Information Center.
.Pp
.Nm inetd
rereads its configuration file when it receives a hangup signal,
.Dv SIGHUP .
Services may be added, deleted or modified when the configuration file
is reread.
.Ss IPv6 TCP/UDP behavior
If you wish to run a server for IPv4 and IPv6 traffic,
you'll need to run two separate processes for the same server program,
specified as two separate lines in
.Pa inetd.conf ,
for
.Dq tcp4
and
.Dq tcp6 .
.Pp
Under various combinations of IPv4/v6 daemon settings,
.Nm
will behave as follows:
.Bl -bullet -compact
.It
If you have only one server on
.Dq tcp4 ,
IPv4 traffic will be routed to the server.
IPv6 traffic will not be accepted.
.It
If you have two servers on
.Dq tcp4
and
.Dq tcp6 ,
IPv4 traffic will be routed to the server on
.Dq tcp4 ,
and IPv6 traffic will go to server on
.Dq tcp6 .
.It
If you have only one server on
.Dq tcp6 ,
only IPv6 traffic will be routed to the server.
.El
.Sh SEE ALSO
.Xr comsat 8 ,
.Xr fingerd 8 ,
.Xr ftp-proxy 8 ,
.Xr ftpd 8 ,
.Xr identd 8 ,
.Xr talkd 8
.Sh HISTORY
The
.Nm
command appeared in
.Bx 4.3 .
Support for Sun-RPC
based services is modelled after that
provided by SunOS 4.1.
IPv6 support was added by the KAME project in 1999.
.Sh BUGS
Host address specifiers, while they make conceptual sense for RPC
services, do not work entirely correctly.
This is largely because the
portmapper interface does not provide a way to register different ports
for the same service on different local addresses.
Provided you never
have more than one entry for a given RPC service, everything should
work correctly.
(Note that default host address specifiers do apply to
RPC lines with no explicit specifier.)
@


1.39
log
@actually, it uses getaddrinfo
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.38 2015/09/10 15:16:44 schwarze Exp $
d31 1
a31 1
.Dd $Mdocdate: September 10 2015 $
d35 2
a36 1
.Nm inetd
@


1.38
log
@reduce .Nd to one line and kill .Tn while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.37 2014/10/13 01:56:44 dlg Exp $
d31 1
a31 1
.Dd $Mdocdate: October 13 2014 $
d122 1
a122 1
.Fn gethostbyname .
@


1.37
log
@jmc@@ told me i broke the documentation. inetd doesnt write a pidfile so
we shouldnt say it does.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.36 2014/04/18 22:04:54 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: April 18 2014 $
d36 1
a36 2
.Nd internet
.Dq super-server
@


1.36
log
@remove references to rshd;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.35 2012/03/06 01:25:47 dlg Exp $
d31 1
a31 1
.Dd $Mdocdate: March 6 2012 $
a332 4
.Nm inetd
creates a file
.Em /var/run/inetd.pid
that contains its process identifier.
@


1.35
log
@clean up some newly created lies now that tftpd doesnt run out of inetd.

poke by deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.34 2009/12/29 10:25:43 sobrado Exp $
d31 1
a31 1
.Dd $Mdocdate: December 29 2009 $
a375 1
.Xr rshd 8 ,
@


1.34
log
@replace a few remaining UNIX terms with .Ux macros; this diff
completes the changes from Oct 22.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.33 2008/06/28 10:54:45 sobrado Exp $
d31 1
a31 1
.Dd $Mdocdate: June 28 2008 $
a242 9
.Xr tftpd 8
is an exception; it is a datagram server that establishes pseudo-connections.
It must be listed as
.Dq wait
in order to avoid a race;
the server reads the first packet, creates a new socket,
and then forks and exits to allow
.Nm inetd
to check for new service requests to spawn new servers.
d377 1
a377 2
.Xr talkd 8 ,
.Xr tftpd 8
@


1.33
log
@add an underscore to argument name.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.32 2008/01/06 16:04:34 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: January 6 2008 $
d171 2
a172 2
.Ux
domain sockets this field specifies the path name of the socket.
d214 1
a214 2
.Ux
domain.
@


1.32
log
@remove out of date/irrelevant section of BUGS dealing with ip6;
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.31 2008/01/06 13:49:42 jmc Exp $
d42 1
a42 1
.Op Ar configuration file
@


1.31
log
@- document what happens when a service exceeds its max spawn rate. this is
based on a diff from reed@@netbsd, but i chose a different fix
- whilst here, make the descriptions of -R and .max more consistent

ok sthen sobrado(in part, at least)
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.30 2007/05/31 19:20:25 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
a408 6
.Pp
.Dq rpc
or
.Dq tcpmux
on IPv6 is not tested enough.
Kerberos support on IPv6 is not tested.
@


1.30
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.29 2005/06/02 07:56:22 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate$
d68 5
d259 9
a267 7
by a dot) specifies the maximum number of server instances that may be
spawned from
.Nm inetd
within an interval of 60 seconds.
When omitted,
.Dq max
defaults to 256.
@


1.29
log
@fix some displays;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.28 2005/06/02 07:51:37 jmc Exp $
d31 1
a31 1
.Dd March 16, 1991
@


1.28
log
@remove references to telnetd(8);
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.27 2004/06/30 07:58:12 otto Exp $
d83 1
a83 2
.Pp
.Bd -unfilled -offset indent -compact
d95 1
a95 2
.Pp
.Bd -unfilled -offset indent -compact
@


1.27
log
@Unbreak unix domain sockets and properly detect and report truncation
of the socket path name. Based on a diff from Juan Vera, with changes
by me and millert@@.  ok millert@@ djm@@; man page ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.26 2004/04/24 21:40:35 millert Exp $
a382 1
.Xr telnetd 8 ,
@


1.26
log
@Don't return NULL in getconfigent() when an unresolvable hostname
or unsupported address family is specified.  This simplifies the
hostname/address lookup loops and gets rid of the skip label.
Found by mpech@@.  OK deraadt@@ and otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inetd.8,v 1.25 2003/06/12 12:59:50 jmc Exp $
d141 3
d167 3
@


1.25
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d195 1
a195 1
It is currently IPv4, but in the future it will be IPv6.
d200 7
d387 1
a387 1
IPv6 support and IPsec hack was made by KAME project, in 1999.
@


1.24
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a29 1
.\"	$Id: inetd.8,v 1.23 2003/04/08 01:26:21 david Exp $
d332 1
a332 1
specified as two separate lines in 
a361 17
.Sh BUGS
Host address specifiers, while they make conceptual sense for RPC
services, do not work entirely correctly.
This is largely because the
portmapper interface does not provide a way to register different ports
for the same service on different local addresses.
Provided you never
have more than one entry for a given RPC service, everything should
work correctly.
(Note that default host address specifiers do apply to
RPC lines with no explicit specifier.)
.Pp
.Dq rpc
or
.Dq tcpmux
on IPv6 is not tested enough.
Kerberos support on IPv6 is not tested.
d365 1
a366 1
.Xr ftp-proxy 8 ,
d381 17
@


1.23
log
@identd has been nowait for 5 years now
reported by Brad Ely <elyb328@@apk.net>
ok tedu@@
@
text
@d12 1
a12 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
d29 1
a29 1
.\"	$Id: inetd.8,v 1.22 2003/02/03 17:46:56 jmc Exp $
@


1.22
log
@typos;
ipsecadm(8): examples ho@@
	     help and ok markus@@
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.21 2003/01/18 23:40:58 deraadt Exp $
a267 2
.Xr identd 8
is usually the only stream server marked as wait.
@


1.21
log
@more typos; jmc@@prioris.mini.pw.edu.pl
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.20 2002/05/06 22:24:58 millert Exp $
a85 1
There must be an entry for each field.
d147 1
a147 1
.Em service-name
d170 1
a170 1
.Em socket-type
d286 1
a286 1
.Em server-program
d345 1
a345 1
Under various combination of IPv4/v6 daemon settings,
@


1.20
log
@Kill rlogind and rexecd Xr's and add Xr's for things we actually use.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.19 2001/08/22 17:44:27 beck Exp $
d338 2
a339 2
you'll need to run two separate process for the same server program,
specified as two separate lines on 
d402 1
a402 1
based services is modeled after that
@


1.19
log
@ftp-proxy
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.18 2001/01/29 11:38:32 deraadt Exp $
d391 1
a391 2
.Xr rexecd 8 ,
.Xr rlogind 8 ,
d393 1
@


1.18
log
@max actually defaults to 256, not 40
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.17 2000/10/23 14:44:09 aaron Exp $
d390 1
@


1.17
log
@Use the standard option descriptions introduction.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.16 2000/06/14 16:06:07 itojun Exp $
d254 1
a254 1
defaults to 40.
@


1.16
log
@clarify tcp4/tcp6 interaction.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.15 2000/04/15 02:15:18 aaron Exp $
d65 1
a65 2
The option available for
.Nm inetd:
@


1.15
log
@Mostly punctuation fixes.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.14 2000/04/12 21:47:53 aaron Exp $
d338 3
a340 10
If you run servers for IPv4 and IPv6 traffic, you'll need to specify
.Dq tcp4
and
.Dq tcp6
properly on the
.Pa inetd.conf
lines.
For safety reasons the author recommends you to run
two separate process for the same server program,
specified as two separate lines on
d343 1
a343 1
.Dq tcp6
d345 1
a345 2
.Dq tcp4 .
For detailed description please read on.
d347 1
a347 47
The behavior of
.Dv AF_INET6
socket is documented in RFC2553.
Basically, it says as follows:
.Bl -bullet -compact
.It
Specific bind on
.Dv AF_INET6
socket
.Po
.Xr bind 2
with address specified
.Pc
should accept IPv6 traffic to that address only.
.It
If you perform wildcard bind
on
.Dv AF_INET6
socket
.Po
.Xr bind 2
to IPv6 address
.Li ::
.Pc ,
and there is no wildcard bind
.Dv AF_INET
socket on that TCP/UDP port, IPv6 traffic as well as IPv4 traffic
should be routed to that
.Dv AF_INET6
socket.
IPv4 traffic should be seen as if it came from IPv6 address like
.Li ::ffff:10.1.1.1 .
This is called IPv4 mapped address.
.It
If there are both wildcard bind
.Dv AF_INET
socket and wildcard bind
.Dv AF_INET6
socket on one TCP/UDP port, they should behave separately.
IPv4 traffic should be routed to
.Dv AF_INET
socket and IPv6 should be routed to
.Dv AF_INET6
socket.
.El
.Pp
Because of this,
d349 1
a349 1
will behave as follows.
d368 1
a368 1
Both IPv4 and IPv6 traffic will be routed to the server.
a369 14
.Pp
The author do not recommend the third option on the above bullets.
RFC2553 does not define the constraint between the order of
.Xr bind 2 ,
nor how IPv4 TCP/UDP port number and IPv6 TCP/UDP port number
relate each other
.Po
should they be integrated or separated
.Pc .
Implemented behavior is very different across kernel to kernel.
Many of the servers do not properly handle IPv4 mapped address.
Therefore, it is unwise to rely too much upon the behavior of
.Dv AF_INET6
wildcard bind socket.
@


1.14
log
@Trailing whitespace begone!
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.13 2000/03/19 17:57:05 aaron Exp $
d416 1
a416 1
.Dq tcp4,
@


1.13
log
@Remove hard sentence breaks. Add $OpenBSD$ tags where appropriate. Some other
cleanup along the way.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.12 1999/12/08 13:21:17 itojun Exp $
d347 1
a347 1
specified as two separate lines on 
d355 1
a355 1
The behavior of 
@


1.12
log
@IPv6/v4 inetd(8) from KAME.  now you can test ftp over IPv6.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.11 1999/09/23 04:12:10 alex Exp $
d53 2
a54 2
It then listens for connections on certain
internet sockets.  When a connection is found on one
d59 2
a60 1
will be described below).  Essentially,
d82 2
a83 1
a space.  Comments are denoted by a
d86 3
a88 2
of a line.  There must be an entry for each field.  The
fields of the configuration file are as follows:
d115 2
a116 1
colon.  If this is done, the string before the colon in the first field
d119 4
a122 2
should use when listening for that service. Multiple local addresses
can be specified on the same line, separated by commas. Numeric IP
d124 2
a125 1
hostnames. Symbolic hostnames are looked up using
d140 2
a141 1
the file).  A line
d166 2
a167 2
is the RPC version number. This
can simply be a single numeric argument or a range of versions.
d221 2
a222 1
entry.  For datagram servers which process all incoming datagrams
d252 2
a253 1
within an interval of 60 seconds. When omitted,
d263 2
a264 1
need to accept the incoming connection.  The server should eventually time
d276 8
a283 4
should run.  This allows for servers to be given less permission
than root. An optional group name can be specified by appending a dot to
the user name followed by the group name. This allows for servers to run with
a different (primary) group ID than specified in the password file. If a group
d292 2
a293 1
when a request is found on its socket.  If
d303 2
a304 2
the program.  If the service is provided internally, the
word
d311 2
a312 2
services internally by use of
routines within itself.  These services are
d322 3
a324 2
1, 1900).  All of these services are TCP based.  For
details of these services, consult the appropriate
d440 2
a441 1
services, do not work entirely correctly.  This is largely because the
d443 2
a444 1
for the same service on different local addresses.  Provided you never
d446 2
a447 1
work correctly.  (Note that default host address specifiers do apply to
@


1.11
log
@Typo fixes.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.10 1999/06/05 22:17:01 aaron Exp $
d188 10
d320 101
d429 6
d452 1
@


1.10
log
@remove trailing whitespace, some Nm cleanup
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.9 1999/05/23 14:11:33 aaron Exp $
d113 1
a113 1
indiciates what local address
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.8 1998/12/04 07:52:02 deraadt Exp $
d151 1
a151 1
.Pa /etc/services ) . 
d155 2
a156 2
.Pa /etc/rpc . 
The part on the right of the 
d160 1
a160 1
A range is bounded by the low version to the high version - 
d183 1
a183 1
RPC based services are specified with the 
d185 2
a186 2
or 
.Dq rpc/udp 
d248 1
a248 1
it when it exits. 
@


1.8
log
@support user.group or user:group, per chown(8)
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.7 1998/11/08 00:21:30 aaron Exp $
d37 1
a37 1
.Os BSD 4.3
@


1.7
log
@usr.sbin/ man page repairs, a-i
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.6 1997/11/14 03:46:00 deraadt Exp $
d92 1
a92 1
user[.group]
d105 1
a105 1
user[.group]
@


1.6
log
@clone freebsd "-R rate"; default to 256 invocations/minute
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.5 1997/06/26 06:27:27 denny Exp $
d48 1
a48 1
.Nm Inetd
d81 3
a83 1
a space.  Comments are denoted by a ``#'' at the beginning
d97 1
a97 2
To specify an 
.Em Sun-RPC 
d110 1
a110 1
For Internet services, the first field of the line may also have a host
d118 2
a119 1
hostnames. Symbolic hostnames are looked up using gethostbyname().
d128 1
a128 1
.Sq all local addresses .
d152 1
a152 2
When used to specify a
.Em Sun-RPC
d183 1
a183 1
Rpc based services are specified with the 
d209 1
a209 1
.Xr Comsat 8
d215 1
a215 1
.Xr Tftpd 8
d258 1
a258 1
a different (primary) group id than specified in the password file. If a group
d282 1
a282 1
.Nm Inetd
d296 1
a296 1
1, 1900).  All of these services are tcp based.  For
d301 1
a301 1
.Nm Inetd
d306 1
a306 1
.Nm Inetd
d332 1
a332 2
Support for
.Em Sun-RPC 
d334 1
a334 2
provided by
.Em Sun-OS 4.1 .
@


1.5
log
@Document inetd's allowing mutliple comma-separated hostnames in inetd.conf.
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.1 1997/06/26 01:40:52 denny Exp denny $
d45 1
d69 3
@


1.4
log
@Document inetd.conf's per-interface binding (new verbage from der Mouse's netbsd mods).
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.1 1997/06/17 02:46:53 denny Exp denny $
d110 8
a117 1
should use when listening for that service, or the single character
d119 1
a119 1
to indicate
@


1.3
log
@wait wrks on tcp; rickb@@iaw.on.ca
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.2 1997/01/13 20:45:28 deraadt Exp $
d105 22
d186 1
a186 1
can received further messages on the socket, it is said to be
d298 8
@


1.2
log
@correct; kleink@@layla.inka.de
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.1.1.1 1995/10/18 08:47:36 deraadt Exp $
a127 1

a153 1

d157 5
a161 4
entry is applicable to datagram sockets only (other sockets should
have a
.Dq nowait
entry in this space).  If a datagram server connects
d202 15
@


1.1
log
@Initial revision
@
text
@d33 1
a33 1
.\"	$Id: inetd.8,v 1.5 1994/01/14 16:22:39 jtc Exp $
d49 1
a49 1
.Pa /etc/rc.local
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
