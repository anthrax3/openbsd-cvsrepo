head	1.7;
access;
symbols
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2017.09.17.23.07.56;	author pd;	state Exp;
branches;
next	1.6;
commitid	Xnc1WMFlTrz6iFz2;

1.6
date	2017.07.06.06.19.15;	author mlarkin;	state Exp;
branches;
next	1.5;
commitid	wUgnL4TOS2LKO70d;

1.5
date	2017.03.25.15.47.37;	author mlarkin;	state Exp;
branches;
next	1.4;
commitid	EGo7WkcHTulgDXQx;

1.4
date	2017.01.13.14.50.56;	author reyk;	state Exp;
branches;
next	1.3;
commitid	O6Az38HSBXh6vWTC;

1.3
date	2016.10.12.06.56.54;	author mlarkin;	state Exp;
branches;
next	1.2;
commitid	d9eAYZoqV2dTESpL;

1.2
date	2015.11.22.21.51.32;	author reyk;	state Exp;
branches;
next	1.1;
commitid	nvO8KnrtEKRaTvXw;

1.1
date	2015.11.22.20.20.32;	author mlarkin;	state Exp;
branches;
next	;
commitid	O5Ay1ZamHQn9lamK;


desc
@@


1.7
log
@vmd: send/recv pci config space instead of recreating pci devices on receive

ok mlarkin@@
@
text
@/*	$OpenBSD: pci.h,v 1.6 2017/07/06 06:19:15 mlarkin Exp $	*/

/*
 * Copyright (c) 2015 Mike Larkin <mlarkin@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define PCI_MODE1_ENABLE	0x80000000UL
#define PCI_MODE1_ADDRESS_REG	0x0cf8
#define PCI_MODE1_DATA_REG	0x0cfc
#define PCI_CONFIG_MAX_DEV	32
#define PCI_MAX_BARS		6

#define PCI_BAR_TYPE_IO		0x0
#define PCI_BAR_TYPE_MMIO	0x1

#define PCI_MAX_PIC_IRQS	10

typedef int (*pci_cs_fn_t)(int dir, uint8_t reg, uint32_t *data);
typedef int (*pci_iobar_fn_t)(int dir, uint16_t reg, uint32_t *data, uint8_t *,
    void *, uint8_t);
typedef int (*pci_mmiobar_fn_t)(int dir, uint32_t ofs, uint32_t *data);

union pci_dev {
	uint32_t pd_cfg_space[PCI_CONFIG_SPACE_SIZE / 4];

	struct {
		uint16_t pd_vid;
		uint16_t pd_did;
		uint16_t pd_cmd;
		uint16_t pd_status;
		uint8_t pd_rev;
		uint8_t pd_prog_if;
		uint8_t pd_subclass;
		uint8_t pd_class;
		uint8_t pd_cache_size;
		uint8_t pd_lat_timer;
		uint8_t pd_header_type;
		uint8_t pd_bist;
		uint32_t pd_bar[PCI_MAX_BARS];
		uint32_t pd_cardbus_cis;
		uint16_t pd_subsys_vid;
		uint16_t pd_subsys_id;
		uint32_t pd_exp_rom_addr;
		uint8_t pd_cap;
		uint32_t pd_reserved0 : 24;
		uint32_t pd_reserved1;
		uint8_t pd_irq;
		uint8_t pd_int;
		uint8_t pd_min_grant;
		uint8_t pd_max_grant;

		uint8_t pd_bar_ct;
		pci_cs_fn_t pd_csfunc;

		uint8_t pd_bartype[PCI_MAX_BARS];
		uint32_t pd_barsize[PCI_MAX_BARS];
		void *pd_barfunc[PCI_MAX_BARS];
		void *pd_bar_cookie[PCI_MAX_BARS];
	} __packed;
};

struct pci {
	uint8_t pci_dev_ct;
	uint64_t pci_next_mmio_bar;
	uint64_t pci_next_io_bar;
	uint8_t pci_next_pic_irq;
	uint32_t pci_addr_reg;
	uint32_t pci_data_reg;

	union pci_dev pci_devices[PCI_CONFIG_MAX_DEV];
};

void pci_handle_address_reg(struct vm_run_params *);
void pci_handle_data_reg(struct vm_run_params *);
uint8_t pci_handle_io(struct vm_run_params *);
void pci_init(void);
int pci_add_device(uint8_t *, uint16_t, uint16_t, uint8_t, uint8_t, uint16_t,
    uint16_t, uint8_t, pci_cs_fn_t);
int pci_add_bar(uint8_t, uint32_t, void *, void *);
int pci_set_bar_fn(uint8_t, uint8_t, void *, void *);
uint8_t pci_get_dev_irq(uint8_t);
int pci_dump(int);
int pci_restore(int);
@


1.6
log
@vmd: increase the max number of disks from 2 to 4. Requires kernel rebuild
as a struct passed to vmm has changed size.

ok deraadt, pd
@
text
@d1 1
a1 1
/*	$OpenBSD: pci.h,v 1.5 2017/03/25 15:47:37 mlarkin Exp $	*/
d92 1
d94 2
@


1.5
log
@Implement some missing functionality and clean up some code in vmd
pci emulation.

ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: pci.h,v 1.4 2017/01/13 14:50:56 reyk Exp $	*/
d28 1
a28 1
#define PCI_MAX_PIC_IRQS	8
@


1.4
log
@Add host side of vmmci(4) to vmd(8).

It currently uses the device to request graceful shutdown of a VM on
"vmctl stop myvm" but will be extended for reboot and a other edge cases.

OK mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pci.h,v 1.3 2016/10/12 06:56:54 mlarkin Exp $	*/
d32 1
a32 1
    void *);
@


1.3
log
@
Allow 4 vio(4) interfaces in each VM. Also fix a bad interrupt assignment that
caused IRQ9 to be shared between the second disk device and the vio(4)s,
which caused poor network performance.

ok reyk, stefan
@
text
@d1 1
a1 1
/*	$OpenBSD: pci.h,v 1.2 2015/11/22 21:51:32 reyk Exp $	*/
d28 1
a28 1
#define PCI_MAX_PIC_IRQS	7
@


1.2
log
@Add $ Ids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 1
a28 1
#define PCI_MAX_PIC_IRQS	5
d92 1
@


1.1
log
@
vmd(8) - virtual machine daemon.

There is still a lot to be done, and fixed, in these userland components
but I have received enough "it works, commit it" emails that it's time
to finish those things in tree.

discussed with many, tested by many.
@
text
@d1 2
@

