head	1.10;
access;
symbols
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.4
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.2
	OPENBSD_4_0_BASE:1.2;
locks; strict;
comment	@.\" @;


1.10
date	2015.07.27.17.28.39;	author sobrado;	state Exp;
branches;
next	1.9;
commitid	a73SHFfjDK7MTyGx;

1.9
date	2013.08.14.06.32.37;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2012.09.26.16.19.45;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.22.15.02.12;	author sobrado;	state Exp;
branches;
next	1.6;

1.6
date	2009.10.22.12.35.53;	author sobrado;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.28.07.46.41;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.28.05.39.19;	author norby;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.31.19.20.23;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2006.06.01.17.31.09;	author martin;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.01.14.12.20;	author norby;	state Exp;
branches;
next	;


desc
@@


1.10
log
@use file system path (.Pa) semantic markup macros where appropriate.

ok jmc@@
@
text
@.\"	$OpenBSD: dvmrpd.8,v 1.9 2013/08/14 06:32:37 jmc Exp $
.\"
.\" Copyright (c) 2004, 2005, 2006 Esben Norby <norby@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: August 14 2013 $
.Dt DVMRPD 8
.Os
.Sh NAME
.Nm dvmrpd
.Nd Distance Vector Multicast Routing Protocol daemon
.Sh SYNOPSIS
.Nm
.Op Fl dnv
.Op Fl f Ar file
.Sh DESCRIPTION
.Nm
is the Distance Vector Multicast Routing Protocol
.Pq DVMRP
daemon, which manages multicast routing tables.
This implementation supports DVMRP version 3.255,
thus it is only capable of maintaining IPv4 multicast routing tables.
.Pp
DVMRP uses a distance vector routing algorithm to build
reverse path multicast delivery trees.
A flood and prune approach is used to determine which branches in
the network have multicast listeners.
The usual drawbacks of a distance vector route protocol applies to DVMRP:
slow convergence and scalability issues.
.Pp
DVMRP routers communicate via the multicast group 224.0.0.4
All DVMRP Routers.
IP protocol number 2
.Pq IGMP
is used, furthermore DVMRP packets omit the use of TCP and UDP.
.Pp
It is possible to interconnect multicast networks with the use of tunnels.
Tunnels can traverse routers and networks not supporting multicast.
.Nm
does not support tunneling as described in RFC 1075,
since it has been abandoned.
.Nm
can tunnel multicast traffic using generic solutions such as
.Xr gre 4 .
.Pp
DVMRP is used for handling multicast routing exclusively.
It is not required that a unicast routing protocol is used in
conjunction with DVMRP.
.Pp
.Nm
is usually started at boot time, and can be enabled by
setting the following in
.Pa /etc/rc.conf.local :
.Pp
.Dl dvmrpd_flags=\&"\&"
.Pp
See
.Xr rc 8
and
.Xr rc.conf 8
for more information on the boot process
and enabling daemons.
.Pp
A running
.Nm
can be controlled with the
.Xr dvmrpctl 8
utility.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl d
Do not daemonize.
If this option is specified,
.Nm
will run in the foreground and log to
.Em stderr .
.It Fl f Ar file
Specify an alternative configuration file.
.It Fl n
Configtest mode.
Only check the configuration file for validity.
.It Fl v
Produce more verbose output.
.El
.Sh FILES
.Bl -tag -width "/var/run/dvmrpd.sockXX" -compact
.It Pa /etc/dvmrpd.conf
Default
.Nm
configuration file.
.It Pa /var/run/dvmrpd.sock
.Ux Ns -domain
socket used for communication with
.Xr dvmrpctl 8 .
.El
.Sh SEE ALSO
.Xr dvmrpd.conf 5 ,
.Xr dvmrpctl 8
.Sh STANDARDS
.Rs
.%D August 2000
.%R draft-ietf-idmr-dvmrp-v3-11
.%T DVMRP Version 3
.Re
.Sh HISTORY
The
.Nm
program first appeared in
.Ox 4.0 .
@


1.9
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.8 2012/09/26 16:19:45 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2012 $
d99 1
a99 1
.It /etc/dvmrpd.conf
d103 1
a103 1
.It /var/run/dvmrpd.sock
@


1.8
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.7 2009/10/22 15:02:12 sobrado Exp $
d17 1
a17 1
.Dd $Mdocdate: October 22 2009 $
d22 1
a22 1
.Nd "Distance Vector Multicast Routing Protocol daemon"
@


1.7
log
@write UNIX-domain in a more consistent way; while here, replace a
few remaining ".Tn UNIX" macros with ".Ux" ones.

pointed out by ratchov@@, thanks!

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.6 2009/10/22 12:35:53 sobrado Exp $
d111 1
a112 2
.%R "draft-ietf-idmr-dvmrp-v3-11"
.%T "DVMRP Version 3"
d114 2
@


1.6
log
@use the UNIX-related macros (.At and .Ux) where appropriate.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.5 2008/04/28 07:46:41 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 28 2008 $
d104 2
a105 2
.Ux
domain socket used for communication with
@


1.5
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.4 2008/04/28 05:39:19 norby Exp $
d104 2
a105 1
Unix-domain socket used for communication with
@


1.4
log
@Improve the dvmrpd(8) manpage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.3 2007/05/31 19:20:23 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 10 2008 $
d31 3
a33 3
daemon which manages multicast routing tables.
This implementation supports DVMRP version 3.255, thus it is
only capable of maintaining IPv4 multicast routing tables.
d35 1
a35 1
DVMRP is using a distance vector routing algorithm to build
d39 2
a40 2
The usual drawbacks of a distance-vector route protocol applies
to DVMRP, slow convergence and scalability issues.
d43 2
a44 1
All DVMRP Routers. The IP protocol number 2
d51 1
a51 2
does not support tunneling as described in
RFC 1075
d54 1
a54 1
can tunnel multicast traffic using generic solutions, e.g.
@


1.3
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.2 2006/06/01 17:31:09 martin Exp $
d17 1
a17 1
.Dd $Mdocdate$
d32 42
a73 1
Its main purpose is keeping multicast routing tables in sync.
@


1.2
log
@slightly better english
@
text
@d1 1
a1 1
.\"	$OpenBSD: dvmrpd.8,v 1.1 2006/06/01 14:12:20 norby Exp $
d17 1
a17 1
.Dd February 27, 2006
@


1.1
log
@Welcome dvmrpd
started by Esben Norby some time ago by using the imsg/three process framework
of ospfd.
Right now it is not particularly useful, major parts are still missing but is
imported to allow more people to work on it.

Status:

The IGMP part is mostly complete, allowing clients to join and leave groups.
Election the IGMP querier of a network is also functional, only thing missing is
some corner cases when going from non-querier to querier.

About half of the DVMRP is functional, probes and route reports are functional.

Multicast streams can be detected and the MFC can be manipulated.
The RIB is not complete but operational.

Not yet connected to the builds.

OK claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d29 1
a29 1
is an Distance Vector Multicast Routing Protocol
d32 1
a32 1
Its main purpose is to keep multicast routing tables in sync.
@

