head	1.2;
access;
symbols
	OPENBSD_6_2:1.2.0.36
	OPENBSD_6_2_BASE:1.2
	OPENBSD_6_1:1.2.0.34
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.30
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.26
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.28
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.12
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.10
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.8
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.6
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.4
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.2
	OPENBSD_4_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2009.03.06.18.39.13;	author michele;	state Exp;
branches;
next	1.1;

1.1
date	2006.06.01.14.12.20;	author norby;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Make RDE aware of multicast group members per interface. This is needed to
make unicast routing decisions.

ok claudio@@
@
text
@/*	$OpenBSD: igmp.h,v 1.1 2006/06/01 14:12:20 norby Exp $ */

/*
 * Copyright (c) 2005, 2006 Esben Norby <norby@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/* IGMP protocol definitions */

#ifndef _IGMP_H_
#define _IGMP_H_

/* misc */
#define AllSystems				"224.0.0.1"
#define AllRouters				"224.0.0.2"
#define AllIGMPv3Routers			"224.0.0.22"

#define DEFAULT_ROBUSTNESS			2
#define MIN_ROBUSTNESS				1
#define MAX_ROBUSTNESS				4

#define DEFAULT_QUERY_INTERVAL			125
#define MIN_QUERY_INTERVAL			1
#define MAX_QUERY_INTERVAL			65535

/* must be less than QUERY_INTERVAL */
#define DEFAULT_QUERY_RESP_INTERVAL		100		/* 10 seconds */
#define MIN_QUERY_RESP_INTERVAL			1
#define MAX_QUERY_RESP_INTERVAL			65535

#define DEFAULT_STARTUP_QUERY_INTERVAL		DEFAULT_QUERY_INTERVAL / 4
#define MIN_STARTUP_QUERY_INTERVAL		MIN_QUERY_INTERVAL
#define MAX_STARTUP_QUERY_INTERVAL		MAX_QUERY_INTERVAL

#define DEFAULT_STARTUP_QUERY_CNT		DEFAULT_ROBUSTNESS
#define MIN_STARTUP_QUERY_CNT			MIN_ROBUSTNESS	/* XXX */
#define MAX_STARTUP_QUERY_CNT			MAX_ROBUSTNESS	/* XXX */

#define DEFAULT_LAST_MEMBER_QUERY_INTERVAL	10		/* 1 second */
#define MIN_LAST_MEMBER_QUERY_INTERVAL		1
#define MAX_LAST_MEMBER_QUERY_INTERVAL		65535

#define DEFAULT_LAST_MEMBER_QUERY_CNT		DEFAULT_ROBUSTNESS
#define MIN_LAST_MEMBER_QUERY_CNT		1
#define MAX_LAST_MEMBER_QUERY_CNT		255

/* IGMP packet types */
#define PKT_TYPE_MEMBER_QUERY			0x11
#define PKT_TYPE_MEMBER_REPORTv1		0x12
#define PKT_TYPE_MEMBER_REPORTv2		0x16
#define PKT_TYPE_LEAVE_GROUPv2			0x17
#define PKT_TYPE_MEMBER_REPORTv3		0x22

#define DEFAULT_IGMP_VERSION			2
#define MIN_IGMP_VERSION			1
#define MAX_IGMP_VERSION			2

/* IGMP header */
struct igmp_hdr {
	u_int8_t		type;
	u_int8_t		max_resp_time;
	u_int16_t		chksum;
	u_int32_t		grp_addr;
};

/* group states */
#define	GRP_STA_NO_MEMB_PRSNT	0x01
#define	GRP_STA_MEMB_PRSNT	0x02
#define GRP_STA_V1_MEMB_PRSNT	0x04
#define	GRP_STA_CHECK_MEMB	0x08
#define	GRP_STA_ANY		0x0e

/* group events */
enum group_event {
	GRP_EVT_V2_REPORT_RCVD,
	GRP_EVT_V1_REPORT_RCVD,
	GRP_EVT_LEAVE_RCVD,
	GRP_EVT_TMR_EXPIRED,
	GRP_EVT_RETRANS_TMR_EXP,
	GRP_EVT_V1_HOST_TMR_EXP,
	GRP_EVT_REPORT_RCVD,
	GRP_EVT_QUERY_RCVD,
	GRP_EVT_NOTHING
};

/* group actions */
enum group_action {
	GRP_ACT_END,
	GRP_ACT_START_TMR,
	GRP_ACT_START_TMR_ALL,
	GRP_ACT_START_RETRANS_TMR,
	GRP_ACT_START_V1_HOST_TMR,
	GRP_ACT_SEND_GRP_QUERY,
	GRP_ACT_ADD_GROUP,
	GRP_ACT_DEL_GROUP,
	GRP_ACT_CLR_RETRANS_TMR,
	GRP_ACT_NOTHING
};

#endif /* _IGMP_H_ */
@


1.1
log
@Welcome dvmrpd
started by Esben Norby some time ago by using the imsg/three process framework
of ospfd.
Right now it is not particularly useful, major parts are still missing but is
imported to allow more people to work on it.

Status:

The IGMP part is mostly complete, allowing clients to join and leave groups.
Election the IGMP querier of a network is also functional, only thing missing is
some corner cases when going from non-querier to querier.

About half of the DVMRP is functional, probes and route reports are functional.

Multicast streams can be detected and the MFC can be manipulated.
The RIB is not complete but operational.

Not yet connected to the builds.

OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d105 2
a106 2
	GRP_ACT_ADD_ROUTE,
	GRP_ACT_DEL_ROUTE,
@

