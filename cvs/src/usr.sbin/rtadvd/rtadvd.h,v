head	1.29;
access;
symbols
	OPENBSD_6_2:1.29.0.2
	OPENBSD_6_2_BASE:1.29
	OPENBSD_6_1:1.29.0.4
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.17.0.10
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.6
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.13.0.4
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.16
	OPENBSD_5_0:1.11.0.14
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.12
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.10
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.6
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.8
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.4
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.9.0.24
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.22
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.20
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.18
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.16
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.14
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.12
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.10
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.8
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_8:1.5.0.2
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	kame_19991211:1.1.1.1
	KAME:1.1.1;
locks; strict;
comment	@ * @;


1.29
date	2016.09.25.13.54.39;	author florian;	state Exp;
branches;
next	1.28;
commitid	7zkEamfTqSFskBzT;

1.28
date	2016.09.25.13.54.00;	author florian;	state Exp;
branches;
next	1.27;
commitid	1P1y3rRstlLGdta4;

1.27
date	2016.08.20.15.05.52;	author jca;	state Exp;
branches;
next	1.26;
commitid	QJdAKfUo7TDJSjqU;

1.26
date	2016.08.02.17.00.09;	author jca;	state Exp;
branches;
next	1.25;
commitid	LwUwsYotrzF8sP65;

1.25
date	2016.06.29.14.19.38;	author jca;	state Exp;
branches;
next	1.24;
commitid	UKZNj8xE8arS6lgt;

1.24
date	2016.03.01.12.51.34;	author jca;	state Exp;
branches;
next	1.23;
commitid	jQculq46Q1JM9tgT;

1.23
date	2016.02.26.12.34.30;	author jca;	state Exp;
branches;
next	1.22;
commitid	3Gy1tnlSeCn27qqI;

1.22
date	2016.02.26.12.31.48;	author jca;	state Exp;
branches;
next	1.21;
commitid	97QqZOQOAOQrxev4;

1.21
date	2016.02.09.00.39.13;	author jca;	state Exp;
branches;
next	1.20;
commitid	56O7SdKp4bWnIxx6;

1.20
date	2016.02.08.23.19.00;	author jca;	state Exp;
branches;
next	1.19;
commitid	731eoDfUV7AoJwjq;

1.19
date	2016.02.08.23.15.37;	author jca;	state Exp;
branches;
next	1.18;
commitid	e0hXBsxU32N38fYG;

1.18
date	2015.11.30.21.04.15;	author jca;	state Exp;
branches;
next	1.17;
commitid	XavdVwnfFMdt5V1A;

1.17
date	2014.01.07.14.58.40;	author gsoares;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.01.01.30.54;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2013.05.08.06.30.25;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.30.12.29.04;	author florian;	state Exp;
branches;
next	1.13;

1.13
date	2012.07.11.10.40.47;	author phessler;	state Exp;
branches;
next	1.12;

1.12
date	2012.07.08.10.46.00;	author phessler;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.09.22.53.24;	author rainer;	state Exp;
branches;
next	1.10;

1.10
date	2008.04.23.10.17.50;	author pyr;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.29.14.34.05;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.21.23.29.46;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.28.08;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.15.11.06.30;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2000.07.06.10.14.48;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.05.23.11.23.23;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.13.06.16.11;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	99.12.11.10.33.29;	author itojun;	state Exp;
branches;
next	1.1;

1.1
date	99.12.11.10.23.24;	author itojun;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.12.11.10.23.24;	author itojun;	state Exp;
branches;
next	;


desc
@@


1.29
log
@consistently use MAX_ prefix
OK jca
@
text
@/*	$OpenBSD: rtadvd.h,v 1.28 2016/09/25 13:54:00 florian Exp $	*/
/*	$KAME: rtadvd.h,v 1.20 2002/05/29 10:13:10 itojun Exp $	*/

/*
 * Copyright (C) 1998 WIDE Project.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the project nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE PROJECT AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE PROJECT OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#define RTADVD_USER     "_rtadvd"

#define ALLNODES "ff02::1"
#define ALLROUTERS_LINK "ff02::2"

/* protocol constants and default values */
#define DEF_MAXRTRADVINTERVAL 600
#define DEF_ADVLINKMTU 0
#define DEF_ADVREACHABLETIME 0
#define DEF_ADVRETRANSTIMER 0
#define DEF_ADVCURHOPLIMIT 64
#define DEF_ADVVALIDLIFETIME 2592000
#define DEF_ADVPREFERREDLIFETIME 604800

#define MAX_ROUTERLIFETIME 9000
#define MIN_MAXINTERVAL 4
#define MAX_MAXINTERVAL 1800
#define MIN_MININTERVAL	3
#define MAX_REACHABLETIME 3600000

#define MAX_INITIAL_RTR_ADVERT_INTERVAL  16
#define MAX_INITIAL_RTR_ADVERTISEMENTS    3
#define MAX_FINAL_RTR_ADVERTISEMENTS      3
#define MIN_DELAY_BETWEEN_RAS             3
#define MAX_RA_DELAY_TIME                 500000 /* usec */

#define PREFIX_FROM_KERNEL 1
#define PREFIX_FROM_CONFIG 2
#define PREFIX_FROM_DYNAMIC 3

struct rtadvd_timer {
	struct event ev;
	struct timeval tm;
};

struct prefix {
	TAILQ_ENTRY(prefix) entry;

	u_int32_t validlifetime; /* AdvValidLifetime */
	time_t	vltimeexpire;	/* expiration of vltime; decrement case only */
	u_int32_t preflifetime;	/* AdvPreferredLifetime */
	time_t	pltimeexpire;	/* expiration of pltime; decrement case only */
	u_int onlinkflg;	/* bool: AdvOnLinkFlag */
	u_int autoconfflg;	/* bool: AdvAutonomousFlag */
	int prefixlen;
	int origin;		/* from kernel or config */
	struct in6_addr prefix;
};

struct rtinfo {
	TAILQ_ENTRY(rtinfo) entry;

	uint32_t lifetime;
	int rtpref;
	int prefixlen;
	struct in6_addr prefix;
};

/*
 * `struct rdnss` may contain an arbitrary number of `servers` and `struct
 * dnssldom` will contain a variable-sized `domain`. Space required for these
 * elements will be dynamically allocated. We do not use flexible array members
 * here because this breaks compile on some architectures using gcc2. Instead,
 * we just have an array with a single (unused) element.
 */

struct rdnss {
	TAILQ_ENTRY(rdnss) entry;

	u_int32_t lifetime;
	int servercnt;
	struct in6_addr servers[1];
};

struct dnssldom {
	TAILQ_ENTRY(dnssldom) entry;

	u_int32_t length;
	char domain[1];
};

struct dnssl {
	TAILQ_ENTRY(dnssl) entry;

	u_int32_t lifetime;
	TAILQ_HEAD(dnssldomlist, dnssldom) dnssldoms;
};

struct	rainfo {
	/* pointer for list */
	SLIST_ENTRY(rainfo) entry;

	/* timer related parameters */
	struct rtadvd_timer timer;
	unsigned int initcounter; /* counter for the first few advertisements */
	struct timeval lastsent; /* timestamp when the latest RA was sent */
	unsigned int waiting;	/* number of RS waiting for RA */

	/* interface information */
	int	ifindex;
	int	advlinkopt;	/* bool: whether include link-layer addr opt */
	struct sockaddr_dl *sdl;
	char	ifname[IF_NAMESIZE];
	int	phymtu;		/* mtu of the physical interface */

	/* Router configuration variables */
	u_short lifetime;	/* AdvDefaultLifetime */
	u_int	maxinterval;	/* MaxRtrAdvInterval */
	u_int	mininterval;	/* MinRtrAdvInterval */
	int 	managedflg;	/* AdvManagedFlag */
	int	otherflg;	/* AdvOtherConfigFlag */
	int	rtpref;		/* router preference */
	u_int32_t linkmtu;	/* AdvLinkMTU */
	u_int32_t reachabletime; /* AdvReachableTime */
	u_int32_t retranstimer;	/* AdvRetransTimer */
	u_int	hoplimit;	/* AdvCurHopLimit */
	TAILQ_HEAD(prefixlist, prefix) prefixes; /* AdvPrefixList(link head) */
	int	pfxs;		/* number of prefixes */
	TAILQ_HEAD(rtinfolist, rtinfo) rtinfos;
	TAILQ_HEAD(rdnsslist, rdnss) rdnsss; /* advertised recursive dns servers */
	TAILQ_HEAD(dnssllist, dnssl) dnssls;
	long	clockskew;	/* used for consistency check of lifetimes */


	/* actual RA packet data and its length */
	size_t ra_datalen;
	u_char *ra_data;

	/* statistics */
	uint64_t raoutput;	/* number of RAs sent */
	uint64_t rainput;	/* number of RAs received */
	uint64_t rainconsistent; /* number of RAs inconsistent with ours */
	uint64_t rsinput;	/* number of RSs received */
};
SLIST_HEAD(ralist, rainfo);

void ra_timer_update(struct rainfo *);

struct prefix *find_prefix(struct rainfo *, struct in6_addr *, int);
@


1.28
log
@Interval calculations are perfectly fine with ints.
OK jca@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.27 2016/08/20 15:05:52 jca Exp $	*/
d47 1
a47 1
#define MAXROUTERLIFETIME 9000
d51 1
a51 1
#define MAXREACHABLETIME 3600000
@


1.27
log
@Move counters from u_quad_t to uint64_t.

Printing is already done with %llu/(unsigned long long) casts.
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.26 2016/08/02 17:00:09 jca Exp $	*/
a46 1
/* XXX int-to-double comparison for INTERVAL items */
d48 1
a48 1
#define MIN_MAXINTERVAL 4.0
d50 1
a50 1
#define MIN_MININTERVAL	3.0
@


1.26
log
@Move to libevent; ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.25 2016/06/29 14:19:38 jca Exp $	*/
d163 4
a166 4
	u_quad_t raoutput;	/* number of RAs sent */
	u_quad_t rainput;	/* number of RAs received */
	u_quad_t rainconsistent; /* number of RAs inconsistent with ours */
	u_quad_t rsinput;	/* number of RSs received */
@


1.25
log
@Spring cleanup

- pointless casts, kill caddr_t or replace it with char *
- signed counters
- simplify if_getmtu, only one method is needed and SIOCGIFMTU is the
  cheapest
- we no longer have drivers for IFT_FDDI
- hide details of iflist management
- if (dflag) log_debug -> log_debug
- dead code and comments
- etc etc

Input from and ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.24 2016/03/01 12:51:34 jca Exp $	*/
d64 5
d127 1
a127 1
	struct rtadvd_timer *timer;
d170 1
a170 2
void ra_timeout(void *);
void ra_timer_update(void *, struct timeval *);
@


1.24
log
@Kill unused #defines

No functional change
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.23 2016/02/26 12:34:30 jca Exp $	*/
d123 1
a123 1
	int initcounter; /* counter for the first few advertisements */
d125 1
a125 1
	int waiting;		/* number of RS waiting for RA */
a167 1
struct rainfo *if_indextorainfo(int);
@


1.23
log
@GC remnants of the Router Renumbering code; ok florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.21 2016/02/09 00:39:13 jca Exp $	*/
a36 3
#define ALLROUTERS_SITE "ff05::2"
#define ANY "::"
#define RTSOLLEN 8
@


1.22
log
@Kill some useless members of struct rainfo; ok florian@@
@
text
@a170 1
int prefix_match(struct in6_addr *, int, struct in6_addr *, int);
a172 2

extern struct in6_addr in6a_site_allrouters;
@


1.21
log
@Kill code to send unicast packets which never got enabled.

and get rid of pointless memory allocations.

ok bluhm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.20 2016/02/08 23:19:00 jca Exp $	*/
a150 1
	int     rtinfocnt;
a151 1
	int	rdnsscnt;	/* number of rdnss entries */
a152 1
	int	dnsslcnt;
@


1.20
log
@Kill trailing whitespace.
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.19 2016/02/08 23:15:37 jca Exp $	*/
a119 5
struct soliciter {
	SLIST_ENTRY(soliciter) entry;
	struct sockaddr_in6 addr;
};

a167 3

	/* info about soliciter */
	SLIST_HEAD(, soliciter) soliciters; /* recent solicitation source */
@


1.19
log
@typos
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.18 2015/11/30 21:04:15 jca Exp $	*/
d7 1
a7 1
 * 
d19 1
a19 1
 * 
@


1.18
log
@Kill Mobile IPv6 references.  Also spotted by florian@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.17 2014/01/07 14:58:40 gsoares Exp $	*/
d77 1
a77 1
	int origin;		/* from kernel or cofig */
d161 1
a161 1
	long	clockskew;	/* used for consisitency check of lifetimes */
d175 1
a175 1
	SLIST_HEAD(, soliciter) soliciters; /* recent solication source */
@


1.17
log
@use IF_NAMESIZE as size of buffer for interface name

OK mpi@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.16 2013/06/01 01:30:54 brad Exp $	*/
d50 1
a50 3
/*XXX int-to-double comparison for INTERVAL items */
#define mobileip6 0

d52 1
a52 1
#define MIN_MAXINTERVAL (mobileip6 ? 1.5 : 4.0)
d54 1
a54 1
#define MIN_MININTERVAL	(mobileip6 ? 0.05 : 3.0)
a55 2

#undef miobileip6
@


1.16
log
@Add support for advertising route information (RFC 4191).

From FreeBSD via UMEZAWA Takeshi

ok bluhm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.15 2013/05/08 06:30:25 brad Exp $	*/
d143 1
a143 1
	char	ifname[16];
@


1.15
log
@Reduce size of some unused arrays.

From Stephane A. Sezer

ok bluhm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.14 2013/04/30 12:29:04 florian Exp $	*/
d85 9
d159 2
@


1.14
log
@move variables to type time_t; fix format strings

test/ok sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.13 2012/07/11 10:40:47 phessler Exp $	*/
d85 8
d98 1
a98 1
	struct in6_addr servers[100];
d105 1
a105 1
	char domain[100];
@


1.13
log
@Unbreak the tree for gcc2 arches.
Instead of having no limit for some arrays, limit them to the number of
acceptable options.

pointed out by miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.12 2012/07/08 10:46:00 phessler Exp $	*/
d75 1
a75 1
	long	vltimeexpire;	/* expiration of vltime; decrement case only */
d77 1
a77 1
	long	pltimeexpire;	/* expiration of pltime; decrement case only */
@


1.12
log
@Add support for advertising dns servers and search paths in router
advertisements, according to RFC 6106.

original diff from Stephane A. Sezer on tech@@, many thanks!

OK phessler@@, todd@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.11 2008/06/09 22:53:24 rainer Exp $	*/
d90 1
a90 1
	struct in6_addr servers[];
d97 1
a97 1
	char domain[];
@


1.11
log
@drop root privileges in rtadvd to _rtadvd

ok deraadt@@, reyk@@, pyr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.10 2008/04/23 10:17:50 pyr Exp $	*/
d85 21
d142 4
@


1.10
log
@Replace handrolled lists with SLISTs or TAILQs.
Timers remain and will be handled later.
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.9 2002/05/29 14:34:05 itojun Exp $	*/
d32 2
@


1.9
log
@KNF, strlcpy, cleanups from kame
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.8 2002/05/21 23:29:46 itojun Exp $	*/
d70 1
a70 2
	struct prefix *next;	/* forward link */
	struct prefix *prev;	/* previous link */
d85 1
a85 1
	struct soliciter *next;
d91 1
a91 1
	struct	rainfo *next;
d117 1
a117 1
	struct prefix prefix;	/* AdvPrefixList(link head) */
d133 1
a133 1
	struct soliciter *soliciter;	/* recent solication source */
d135 1
@


1.8
log
@minor KNF.  plug a memory leak on reconfig.
@
text
@d1 2
a2 2
/*	$OpenBSD: rtadvd.h,v 1.7 2002/02/16 21:28:08 millert Exp $	*/
/*	$KAME: rtadvd.h,v 1.19 2001/12/20 02:09:37 k-sugyou Exp $	*/
a48 1
#ifndef MIP6
a49 1
#endif
a56 1
#ifndef MIP6
a57 1
#endif
a78 3
#ifdef MIP6
	u_int routeraddr;	/* bool: RouterAddress */
#endif
d84 1
d113 1
a113 3
#ifdef MIP6
	int	haflg;		/* HAFlag */
#endif
a121 4
#ifdef MIP6
	u_short	hapref;		/* Home Agent Preference */
	u_short	hatime;		/* Home Agent Lifetime */
#endif
a144 3
#ifdef MIP6
extern int mobileip6;
#endif
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 2
a2 2
/*	$OpenBSD: rtadvd.h,v 1.6 2001/01/15 11:06:30 itojun Exp $	*/
/*	$KAME: rtadvd.h,v 1.14 2000/11/11 06:57:22 jinmei Exp $	*/
d56 1
a56 1
#define MIN_MININTERVAL	(mobileip6 ? 0.5 : 3)
d154 1
@


1.6
log
@sync with latest kame tree.
- reduce chances for signal handler rae condition
- decrease chances for misconfiguration
- feedbacks from router renumbering protocol bakeoff
- cleanups related to mtu handling
@
text
@d1 1
a1 1
/*	$OpenBSD: rtadvd.h,v 1.5 2000/07/06 10:14:48 itojun Exp $	*/
d149 2
a150 2
void ra_timeout __P((void *));
void ra_timer_update __P((void *, struct timeval *));
d152 2
a153 2
int prefix_match __P((struct in6_addr *, int, struct in6_addr *, int));
struct rainfo *if_indextorainfo __P((int));
@


1.5
log
@sync with router renumber struct decl change.
more logs.  make it very sure to close temporary socket.
@
text
@d1 2
a2 2
/*	$OpenBSD: rtadvd.h,v 1.4 2000/05/23 11:23:23 itojun Exp $	*/
/*	$KAME: rtadvd.h,v 1.9 2000/06/22 20:16:13 itojun Exp $	*/
d34 2
a35 1
#define ALLROUTERS "ff02::2"
d78 1
d80 1
d128 1
d152 4
@


1.4
log
@sync with latest kame.
- weaken logging priority for /etc/resolv.conf open failure
- gather stats, emit stats by SIGUSR1
- use SIOCGIFMTU to get interface MTU (just a matter of #ifdef)
From: "Todd T. Fries" <todd@@fries.net>
@
text
@d1 2
a2 2
/*	$OpenBSD: rtadvd.h,v 1.3 2000/03/13 06:16:11 itojun Exp $	*/
/*	$KAME: rtadvd.h,v 1.8 2000/05/16 13:34:14 itojun Exp $	*/
d88 5
d140 3
@


1.3
log
@bring in latest rtadvd source from kame.
this fixes unclosed file descriptor in router renumbering case.
@
text
@d1 2
a2 1
/*	$OpenBSD: rtadvd.h,v 1.2 1999/12/11 10:33:29 itojun Exp $	*/
d68 4
d83 2
a84 1
	int	prefixlen;
d95 1
a95 1
	struct timeval lastsent; /* timestamp when the lates RA was sent */
d129 6
@


1.2
log
@enable rtadvd in usr.sbin/Makefile.
rcsid police on usr.sbin/rtadvd.
add sample config into etc/rtadvd.conf.
add files into distrib/sets/list.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d46 5
d52 1
a52 1
#define MIN_MAXINTERVAL 4
d54 1
a54 1
#define MIN_MININTERVAL 3
d57 4
d75 3
d105 3
d115 5
d127 4
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@router advertisement daemon, from KAME
@
text
@@
