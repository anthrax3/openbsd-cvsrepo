head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.6.0.28
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.24
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.7
date	2016.08.27.04.21.08;	author guenther;	state Exp;
branches;
next	1.6;
commitid	5Bg26nDF24JkfeXC;

1.6
date	2009.11.11.23.05.28;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.08.15.31.01;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.26.19.19.51;	author ho;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.22.12.14.16;	author ho;	state Exp;
branches;
next	1.2;

1.2
date	2005.03.30.18.56.19;	author ho;	state Exp;
branches;
next	1.1;

1.1
date	2005.03.30.18.44.49;	author ho;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Pull in <sys/select.h> for fd_set

ok deraadt@@
@
text
@/*	$OpenBSD: log.c,v 1.6 2009/11/11 23:05:28 deraadt Exp $	*/

/*
 * Copyright (c) 2005 Håkan Olsson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * This code was written under funding by Multicom Security AB.
 */

#include <sys/types.h>
#include <sys/select.h>
#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#include <stdlib.h>
#include <syslog.h>
#include <errno.h>
#include <time.h>

#include "sasyncd.h"

static char logbuf[2048];

void
log_init(char *pname)
{
	tzset();
	openlog(pname, LOG_CONS | LOG_PID, LOG_DAEMON);
}

static void
log_output(char *msg)
{
	if (cfgstate.debug)
		fprintf(stderr, "%s\n", msg);
	else
		syslog(LOG_CRIT, "%s", msg);
}

void
log_err(const char *fmt, ...)
{
	extern char	*__progname;
	int		off = 0;
	va_list		ap;

	if (cfgstate.debug) {
		snprintf(logbuf, sizeof logbuf, "%s: ", __progname);
		off = strlen(logbuf);
	}

	va_start(ap, fmt);
	(void)vsnprintf(logbuf + off, sizeof logbuf - off, fmt, ap);
	va_end(ap);

	strlcat(logbuf, ": ", sizeof logbuf);
	strlcat(logbuf, strerror(errno), sizeof logbuf);

	log_output(logbuf);
	return;
}

void
log_msg(int minlevel, const char *fmt, ...)
{
	va_list ap;

	if (cfgstate.verboselevel < minlevel)
		return;

	va_start(ap, fmt);
	(void)vsnprintf(logbuf, sizeof logbuf, fmt, ap);
	va_end(ap);

	log_output(logbuf);
	return;
}
@


1.6
log
@spacing
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.5 2007/01/08 15:31:01 markus Exp $	*/
d33 1
@


1.5
log
@allow shared key specification in hex (0x01234...); ok ho
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.4 2005/05/26 19:19:51 ho Exp $	*/
d85 1
a85 1
log_msg (int minlevel, const char *fmt, ...)
@


1.4
log
@add a 'flushmode' to control how the master handles FLUSH to slaves. tweak some loglevels.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.3 2005/05/22 12:14:16 ho Exp $	*/
d49 1
a49 1
	openlog(pname, LOG_CONS, LOG_DAEMON);
@


1.3
log
@style nits
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.2 2005/03/30 18:56:19 ho Exp $	*/
a30 1

@


1.2
log
@Fix some stuff noted by Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: log.c,v 1.1 2005/03/30 18:44:49 ho Exp $	*/
d65 3
a67 2
	va_list ap;
	int off = 0;
d79 1
a79 1
	strlcat(logbuf, strerror (errno), sizeof logbuf);
@


1.1
log
@Move sasyncd(8), for IPsec SA synchronization, in-tree. Work in progress.
deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d59 1
a59 1
		syslog(LOG_CRIT, msg);
@

