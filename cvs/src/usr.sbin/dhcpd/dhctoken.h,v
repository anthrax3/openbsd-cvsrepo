head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.4
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.7.0.16
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.12
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.8
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.10
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.8
date	2017.04.24.14.58.36;	author krw;	state Exp;
branches;
next	1.7;
commitid	VdvDIyV6oHLS1zmq;

1.7
date	2013.12.05.22.31.35;	author krw;	state Exp;
branches
	1.7.16.1;
next	1.6;

1.6
date	2009.09.01.08.42.31;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2006.12.18.19.05.01;	author stevesk;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.17.18.03.33;	author stevesk;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.18.19.18.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.14.01.09.52;	author henning;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.13.23.41.48;	author henning;	state Exp;
branches;
next	;

1.7.16.1
date	2017.05.03.02.22.01;	author jsg;	state Exp;
branches;
next	;
commitid	Lc14KH1vjpo2vkRP;


desc
@@


1.8
log
@Add 'echo-client-id' statment, so that RFC 6842 behaviour can be
turned off for those clients and networks that find it impossible to
move past RFC 2131. Modelled on the same statement in recent ISC
versions, though we default to 'on' (a.k.a. RFC 6842) rather that
'off' (a.k.a. RFC 2131).

Problems reported by Bastien Durel (Xerox Phaser 6022 printer) and
Bryan Vyhmeister (Hon Hai Precision router) via misc@@. Thanks!
@
text
@/*	$OpenBSD: dhctoken.h,v 1.7 2013/12/05 22:31:35 krw Exp $	*/

/* Tokens for config file lexer and parser. */

/*
 * Copyright (c) 1995, 1996, 1997, 1998, 1999
 * The Internet Software Consortium.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of The Internet Software Consortium nor the names
 *    of its contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
 * CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
 * CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
 * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
 * OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * This software has been written for the Internet Software Consortium
 * by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
 * Enterprises.  To learn more about the Internet Software Consortium,
 * see ``http://www.vix.com/isc''.  To learn more about Vixie
 * Enterprises, see ``http://www.vix.com''.
 */

#define TOK_FIRST_TOKEN	TOK_HOST
#define TOK_HOST			256
#define TOK_HARDWARE			257
#define TOK_FILENAME			258
#define TOK_FIXED_ADDR			259
#define TOK_OPTION			260
#define TOK_ETHERNET			261
#define TOK_STRING			262
#define TOK_NUMBER			263
#define TOK_NUMBER_OR_NAME		264
#define TOK_NAME			265
#define TOK_TIMESTAMP			266
#define TOK_STARTS			267
#define TOK_ENDS			268
#define TOK_UID				269
#define TOK_CLASS			270
#define TOK_LEASE			271
#define TOK_RANGE			272
#define TOK_SUBNET			278
#define TOK_NETMASK			279
#define TOK_DEFAULT_LEASE_TIME		280
#define TOK_MAX_LEASE_TIME		281
#define TOK_VENDOR_CLASS		282
#define TOK_USER_CLASS			283
#define TOK_SHARED_NETWORK		284
#define TOK_SERVER_NAME			285
#define TOK_DYNAMIC_BOOTP		286
#define TOK_SERVER_IDENTIFIER		287
#define TOK_DYNAMIC_BOOTP_LEASE_CUTOFF	288
#define TOK_DYNAMIC_BOOTP_LEASE_LENGTH	289
#define TOK_BOOT_UNKNOWN_CLIENTS	290
#define TOK_NEXT_SERVER			291
#define TOK_GROUP			293
#define TOK_GET_LEASE_HOSTNAMES		295
#define TOK_USE_HOST_DECL_NAMES		296
#define TOK_SEND			297
#define TOK_TIMEOUT			301
#define TOK_UNKNOWN_CLIENTS		309
#define	TOK_ALLOW			310
#define TOK_BOOTP			311
#define TOK_DENY			312
#define TOK_BOOTING			313
#define TOK_ABANDONED			319
#define TOK_DOMAIN			323
#define TOK_HOSTNAME			328
#define TOK_CLIENT_HOSTNAME		329
#define TOK_USE_LEASE_ADDR_FOR_DEFAULT_ROUTE	332
#define TOK_AUTHORITATIVE		333
#define TOK_TOKEN_NOT			334
#define TOK_ALWAYS_REPLY_RFC1048	335
#define TOK_IPSEC_TUNNEL		336
#define TOK_ECHO_CLIENT_ID		337

#define is_identifier(x)	((x) >= TOK_FIRST_TOKEN &&	\
				 (x) != TOK_STRING &&	\
				 (x) != TOK_NUMBER &&	\
				 (x) != EOF)
@


1.7
log
@Stop pretending we still support FDDI or token ring hardware types.

idea ok deraadt@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.6 2009/09/01 08:42:31 reyk Exp $	*/
d94 1
@


1.7.16.1
log
@OpenBSD 6.1 errata 001, May 2, 2017

dhcpd(8) unconditionally echoed client identifier. Add parameter
"echo-client-id" to allow this behaviour to be turned off.
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.7 2013/12/05 22:31:35 krw Exp $	*/
a93 1
#define TOK_ECHO_CLIENT_ID		337
@


1.6
log
@Echo back the Relay Agent Information option if present (RFC 3046).
Also add support for the "ipsec-tunnel" hardware type as described in
RFC 3456.

ok henning@@ krw@@ (but needs more testing from others)
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.5 2006/12/18 19:05:01 stevesk Exp $	*/
a74 1
#define TOK_TOKEN_RING			292
a88 1
#define TOK_FDDI			331
@


1.5
log
@align, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.4 2006/12/17 18:03:33 stevesk Exp $	*/
d95 1
@


1.4
log
@remove one-lease-per-client parameter which was never implemented (it
doesn't do anything and is not documented); ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.3 2006/04/18 19:18:32 deraadt Exp $	*/
d44 51
a94 51
#define TOK_HOST	256
#define TOK_HARDWARE	257
#define TOK_FILENAME	258
#define TOK_FIXED_ADDR	259
#define TOK_OPTION		260
#define TOK_ETHERNET	261
#define TOK_STRING		262
#define TOK_NUMBER		263
#define TOK_NUMBER_OR_NAME	264
#define TOK_NAME		265
#define TOK_TIMESTAMP	266
#define TOK_STARTS		267
#define TOK_ENDS		268
#define TOK_UID		269
#define TOK_CLASS		270
#define TOK_LEASE		271
#define TOK_RANGE		272
#define TOK_SUBNET		278
#define TOK_NETMASK		279
#define TOK_DEFAULT_LEASE_TIME 280
#define TOK_MAX_LEASE_TIME	281
#define TOK_VENDOR_CLASS	282
#define TOK_USER_CLASS	283
#define TOK_SHARED_NETWORK	284
#define TOK_SERVER_NAME	285
#define TOK_DYNAMIC_BOOTP	286
#define TOK_SERVER_IDENTIFIER 287
#define TOK_DYNAMIC_BOOTP_LEASE_CUTOFF 288
#define TOK_DYNAMIC_BOOTP_LEASE_LENGTH 289
#define TOK_BOOT_UNKNOWN_CLIENTS 290
#define TOK_NEXT_SERVER	291
#define TOK_TOKEN_RING	292
#define TOK_GROUP		293
#define TOK_GET_LEASE_HOSTNAMES 295
#define TOK_USE_HOST_DECL_NAMES 296
#define TOK_SEND		297
#define TOK_TIMEOUT		301
#define TOK_UNKNOWN_CLIENTS	309
#define	TOK_ALLOW		310
#define TOK_BOOTP		311
#define TOK_DENY		312
#define TOK_BOOTING		313
#define TOK_ABANDONED	319
#define TOK_DOMAIN		323
#define TOK_HOSTNAME	328
#define TOK_CLIENT_HOSTNAME	329
#define TOK_FDDI		331
#define TOK_USE_LEASE_ADDR_FOR_DEFAULT_ROUTE 332
#define TOK_AUTHORITATIVE	333
#define TOK_TOKEN_NOT	334
#define TOK_ALWAYS_REPLY_RFC1048 335
@


1.3
log
@cleanup keyword lookup for the lexer, and remove keywords not valid in
either dhclient or dhcpd context; tested by many
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.2 2004/04/14 01:09:52 henning Exp $	*/
a76 1
#define TOK_ONE_LEASE_PER_CLIENT 294
@


1.2
log
@fold in 10liners and clean up other .hs a bit
@
text
@d1 1
a1 1
/*	$OpenBSD: dhctoken.h,v 1.2 2004/02/04 12:16:56 henning Exp $	*/
d43 53
a95 7
#define SEMI ';'
#define DOT '.'
#define COLON ':'
#define COMMA ','
#define SLASH '/'
#define LBRACE '{'
#define RBRACE '}'
d97 3
a99 85
#define FIRST_TOKEN	HOST
#define HOST		256
#define HARDWARE	257
#define FILENAME	258
#define FIXED_ADDR	259
#define OPTION		260
#define ETHERNET	261
#define STRING		262
#define NUMBER		263
#define NUMBER_OR_NAME	264
#define NAME		265
#define TIMESTAMP	266
#define STARTS		267
#define ENDS		268
#define UID		269
#define CLASS		270
#define LEASE		271
#define RANGE		272
#define PACKET		273
#define CIADDR		274
#define YIADDR		275
#define SIADDR		276
#define GIADDR		277
#define SUBNET		278
#define NETMASK		279
#define DEFAULT_LEASE_TIME 280
#define MAX_LEASE_TIME	281
#define VENDOR_CLASS	282
#define USER_CLASS	283
#define SHARED_NETWORK	284
#define SERVER_NAME	285
#define DYNAMIC_BOOTP	286
#define SERVER_IDENTIFIER 287
#define DYNAMIC_BOOTP_LEASE_CUTOFF 288
#define DYNAMIC_BOOTP_LEASE_LENGTH 289
#define BOOT_UNKNOWN_CLIENTS 290
#define NEXT_SERVER	291
#define TOKEN_RING	292
#define GROUP		293
#define ONE_LEASE_PER_CLIENT 294
#define GET_LEASE_HOSTNAMES 295
#define USE_HOST_DECL_NAMES 296
#define SEND		297
#define CLIENT_IDENTIFIER 298
#define REQUEST		299
#define REQUIRE		300
#define TIMEOUT		301
#define RETRY		302
#define SELECT_TIMEOUT	303
#define SCRIPT		304
#define INTERFACE	305
#define RENEW		306
#define	REBIND		307
#define EXPIRE		308
#define UNKNOWN_CLIENTS	309
#define	ALLOW		310
#define BOOTP		311
#define DENY		312
#define BOOTING		313
#define DEFAULT		314
#define MEDIA		315
#define MEDIUM		316
#define ALIAS		317
#define REBOOT		318
#define ABANDONED	319
#define	BACKOFF_CUTOFF	320
#define	INITIAL_INTERVAL 321
#define NAMESERVER	322
#define	DOMAIN		323
#define SEARCH		324
#define SUPERSEDE	325
#define APPEND		326
#define PREPEND		327
#define HOSTNAME	328
#define CLIENT_HOSTNAME	329
#define REJECT		330
#define FDDI		331
#define USE_LEASE_ADDR_FOR_DEFAULT_ROUTE 332
#define AUTHORITATIVE	333
#define TOKEN_NOT	334
#define ALWAYS_REPLY_RFC1048 335

#define is_identifier(x)	((x) >= FIRST_TOKEN &&	\
				 (x) != STRING &&	\
				 (x) != NUMBER &&	\
@


1.1
log
@may the whacking begin
@
text
@d1 1
a1 1
/* dhctoken.h
d3 1
a3 1
   Tokens for config file lexer and parser. */
@

