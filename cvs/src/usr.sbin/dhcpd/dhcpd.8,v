head	1.29;
access;
symbols
	OPENBSD_6_2:1.29.0.4
	OPENBSD_6_2_BASE:1.29
	OPENBSD_6_1:1.28.0.4
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.27.0.6
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.4
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.18.0.10
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.8
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.6
	OPENBSD_5_0:1.18.0.4
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.16.0.8
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6;
locks; strict;
comment	@.\" @;


1.29
date	2017.08.29.08.20.18;	author jmc;	state Exp;
branches;
next	1.28;
commitid	7av3JtCz6PSlqRsL;

1.28
date	2017.02.15.19.36.24;	author krw;	state Exp;
branches;
next	1.27;
commitid	qoet1rRM6Rzp1k4R;

1.27
date	2015.03.13.19.58.41;	author jmc;	state Exp;
branches;
next	1.26;
commitid	OcwhWBKGs3Yn7EeA;

1.26
date	2014.11.22.18.15.41;	author deraadt;	state Exp;
branches;
next	1.25;
commitid	3NByYuO1tptMzbXx;

1.25
date	2014.07.11.13.53.47;	author jmc;	state Exp;
branches;
next	1.24;
commitid	9f1XMnamvcMY1CP7;

1.24
date	2014.07.11.09.44.42;	author yasuoka;	state Exp;
branches;
next	1.23;
commitid	qfy3sSgH44h10gs8;

1.23
date	2014.07.11.09.42.27;	author yasuoka;	state Exp;
branches;
next	1.22;
commitid	7SRccEu66mJK3N60;

1.22
date	2014.01.03.16.21.58;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2013.07.16.11.13.33;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2013.07.14.19.44.38;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2013.07.11.15.15.46;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2010.10.08.15.43.45;	author sobrado;	state Exp;
branches;
next	1.17;

1.17
date	2009.09.14.10.24.27;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2008.05.07.12.19.20;	author beck;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.20.23;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.17.13.32.15;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.08.09.11.05.31;	author stevesk;	state Exp;
branches;
next	1.12;

1.12
date	2006.06.14.20.19.20;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2006.06.14.14.58.51;	author ckuethe;	state Exp;
branches;
next	1.10;

1.10
date	2006.05.31.09.05.42;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2006.05.31.02.43.15;	author ckuethe;	state Exp;
branches;
next	1.8;

1.8
date	2005.09.30.20.34.26;	author jaredy;	state Exp;
branches;
next	1.7;

1.7
date	2004.10.31.10.43.38;	author canacar;	state Exp;
branches;
next	1.6;

1.6
date	2004.08.23.19.38.20;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2004.04.20.03.58.14;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2004.04.20.03.46.19;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2004.04.20.00.27.57;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.15.08.34.20;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2004.04.13.23.41.48;	author henning;	state Exp;
branches;
next	;


desc
@@


1.29
log
@do not claim that this is isc dhcpd (but retain credit);
issue pointed out by miod

ok krw miod
@
text
@.\"	$OpenBSD: dhcpd.8,v 1.28 2017/02/15 19:36:24 krw Exp $
.\"
.\" Copyright (c) 1995, 1996 The Internet Software Consortium.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of The Internet Software Consortium nor the names
.\"    of its contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE INTERNET SOFTWARE CONSORTIUM AND
.\" CONTRIBUTORS ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE INTERNET SOFTWARE CONSORTIUM OR
.\" CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
.\" LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF
.\" USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
.\" ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
.\" OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT
.\" OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" This software has been written for the Internet Software Consortium
.\" by Ted Lemon <mellon@@fugue.com> in cooperation with Vixie
.\" Enterprises.  To learn more about the Internet Software Consortium,
.\" see ``http://www.isc.org/''.  To learn more about Vixie
.\" Enterprises, see ``http://www.vix.com''.
.\"
.Dd $Mdocdate: February 15 2017 $
.Dt DHCPD 8
.Os
.Sh NAME
.Nm dhcpd
.Nd Dynamic Host Configuration Protocol (DHCP) server
.Sh SYNOPSIS
.Nm dhcpd
.Bk -words
.Op Fl dfn
.Op Fl A Ar abandoned_ip_table
.Op Fl C Ar changed_ip_table
.Op Fl c Ar config-file
.Op Fl L Ar leased_ip_table
.Op Fl l Ar lease-file
.Op Fl u Ns Op Ar bind_address
.Op Fl Y Ar synctarget
.Op Fl y Ar synclisten
.Op Ar if0 Op Ar ... ifN
.Ek
.Sh DESCRIPTION
.Nm
implements the Dynamic Host Configuration Protocol (DHCP) and the
Internet Bootstrap Protocol (BOOTP).
DHCP allows hosts on a TCP/IP network to request and be assigned IP addresses,
and also to discover information about the network to which they are attached.
BOOTP provides similar functionality, with certain restrictions.
.Pp
The DHCP protocol allows a host which is unknown to the network
administrator to be automatically assigned a new IP address out of a
pool of IP addresses for its network.
In order for this to work, the network administrator allocates address pools
in each subnet and enters them into the
.Xr dhcpd.conf 5
file.
.Pp
On startup,
.Nm
reads the
.Pa dhcpd.conf
file and stores a list of available addresses on each subnet in memory.
When a client requests an address using the DHCP protocol,
.Nm
allocates an address for it.
Each client is assigned a lease, which expires after an amount of time
chosen by the administrator (by default, one day).
When a leased IP address is assigned to a new hardware address,
.Nm
may delete the leased IP from certain
.Xr pf 4
tables.
Before leases expire, the clients to which leases are assigned are expected
to renew them in order to continue to use the addresses.
Once a lease has expired, the client to which that lease was assigned is no
longer permitted to use the leased IP address.
.Pp
In order to keep track of leases across system reboots and server restarts,
.Nm
keeps a list of leases it has assigned in the
.Xr dhcpd.leases 5
file.
Before
.Nm
grants a lease to a host, it records the lease in this file and makes sure
that the contents of the file are flushed to disk.
This ensures that even in the event of a system crash,
.Nm
will not forget about a lease that it has assigned.
On startup, after reading the
.Pa dhcpd.conf
file,
.Nm
reads the
.Pa dhcpd.leases
file to refresh its memory about what leases have been assigned.
.Pp
BOOTP support is also provided by this server.
Unlike DHCP, the BOOTP protocol does not provide a protocol for recovering
dynamically-assigned addresses once they are no longer needed.
It is still possible to dynamically assign addresses to BOOTP clients, but
some administrative process for reclaiming addresses is required.
By default, leases are granted to BOOTP clients in perpetuity, although
the network administrator may set an earlier cutoff date or a shorter
lease length for BOOTP leases if that makes sense.
.Pp
BOOTP clients may also be served in the old standard way, which is
simply to provide a declaration in the
.Pa dhcpd.conf
file for each BOOTP client, permanently assigning an address to each client.
.Pp
Whenever changes are made to the
.Pa dhcpd.conf
file,
.Nm
must be restarted.
Because the DHCP server database is not as lightweight as a BOOTP database,
.Nm
does not automatically restart itself when it sees a change to the
.Pa dhcpd.conf
file.
.Pp
DHCP traffic always bypasses IPsec.
Otherwise there could be situations when a server has an IPsec SA for the
client and sends replies over that,
which a newly booted client would not be able to grasp.
.Sh COMMAND LINE
The names of the network interfaces on which
.Nm
should listen for broadcasts may be specified on the command line.
This should be done on systems where
.Nm
is unable to identify non-broadcast interfaces,
but should not be required on other systems.
If no interface names are specified on the command line,
and the
.Fl u
option is not given,
.Nm
will identify all network interfaces which are up, eliminating non-broadcast
interfaces if possible, and listen for DHCP broadcasts on each interface.
.Pp
The options are as follows:
.Bl -tag -width Ds
.It Fl A Ar abandoned_ip_table
When an address is abandoned for some reason, add it to the
.Xr pf 4
table named
.Ar abandoned_ip_table .
This can be used to defend against machines "camping" on an address
without obtaining a lease.
When an address is properly leased,
.Nm
will remove the address from this table.
.It Fl C Ar changed_ip_table
When an address is leased to a different hardware address, delete it from the
.Xr pf 4
table named
.Ar changed_ip_table .
This feature complements the overload table in a stateful
.Xr pf 4
rule.
If a host appears to be misbehaving, it can be quarantined by using the
overload feature.
When the address is leased to a different machine,
.Nm
can remove the address from the overload table, thus allowing a well-behaved
machine to reuse the address.
.It Fl c Ar config-file
Use an alternate configuration file,
.Ar config-file .
Because of the importance of using the same lease database at all times when
running
.Nm
in production, this option should be used
.Em only
for testing database files in a non-production environment.
.It Fl d
Do not daemonize.
If this option is specified,
.Nm
will run in the foreground and log to
.Em stderr .
.It Fl f
An alias for
.Fl d .
.It Fl L Ar leased_ip_table
When an address is leased
.Nm
will insert it into the
.Xr pf 4
table named
.Ar leased_ip_table .
Addresses are removed from the table when the lease expires.
Combined with the table of abandoned addresses, this can help enforce a
requirement to use DHCP on a network, or can place DHCP users in a different
class of service.
Users are cautioned against placing much trust in Ethernet or IP addresses;
.Xr ifconfig 8
can be used to trivially change the interface's address, and on a busy DHCP
network, IP addresses will likely be quickly recycled.
.It Fl l Ar lease-file
Use an alternate lease file,
.Ar lease-file .
Because of the importance of using the same lease database at all times when
running
.Nm
in production, this option should be used
.Em only
for testing lease files in a non-production environment.
.It Fl n
Only test configuration, do not run
.Nm .
.It Fl u Ns Op Ar bind_address
Use a UDP socket instead of BPF for receiving and sending packets.
Only
.Dv DHCPINFORM
messages can be handled on this socket;
other messages are discarded.
With this option,
.Nm
can answer
.Dv DHCPINFORM
from clients on non Ethernet interfaces
such as
.Xr tun 4
or
.Xr pppx 4 .
If
.Ar bind_address
is specified,
.Nm
will bind to that address; otherwise
the limited broadcast address (255.255.255.255) is used as the default.
.It Fl Y Ar synctarget
Add target
.Ar synctarget
to receive synchronisation messages.
.Ar synctarget
can be either an IPv4 address for unicast messages
or a network interface name followed optionally by a colon and a numeric TTL
value for multicast messages to the group 224.0.1.240.
If the multicast TTL is not specified, a default value of 1 is used.
This option can be specified multiple times.
See also
.Sx SYNCHRONISATION
below.
.It Fl y Ar synclisten
Listen on
.Ar synclisten
for incoming synchronisation messages.
The format for
.Ar synclisten
is the same as for
.Ar synctarget ,
above.
This option can be specified only once.
See also
.Sx SYNCHRONISATION
below.
.El
.Sh CONFIGURATION
The syntax of the
.Xr dhcpd.conf 5
file is discussed separately.
This section should be used as an overview of the configuration process,
and the
.Xr dhcpd.conf 5
documentation should be consulted for detailed reference information.
.Bl -tag -width 3n
.It Subnets
.Nm
needs to know the subnet numbers and netmasks of all subnets for
which it will be providing service.
In addition, in order to dynamically allocate addresses, it must be assigned
one or more ranges of addresses on each subnet which it can in turn assign
to client hosts as they boot.
Thus, a very simple configuration providing DHCP support might look like this:
.Bd -literal -offset indent
subnet 239.252.197.0 netmask 255.255.255.0 {
  range 239.252.197.10 239.252.197.250;
}
.Ed
.Pp
Multiple address ranges may be specified like this:
.Bd -literal -offset indent
subnet 239.252.197.0 netmask 255.255.255.0 {
  range 239.252.197.10 239.252.197.107;
  range 239.252.197.113 239.252.197.250;
}
.Ed
.Pp
If a subnet will only be provided with BOOTP service and no dynamic
address assignment, the range clause can be left out entirely, but the
subnet statement must appear.
.It Lease Lengths
DHCP leases can be assigned almost any length from zero seconds to infinity.
What lease length makes sense for any given subnet, or for any given
installation, will vary depending on the kinds of hosts being served.
.Pp
For example, in an office environment where systems are added from
time to time and removed from time to time, but move relatively
infrequently, it might make sense to allow lease times of a month or more.
In a final test environment on a manufacturing floor, it may make more sense
to assign a maximum lease length of 30 minutes \- enough time to go through a
simple test procedure on a network appliance before packaging it up for
delivery.
.Pp
It is possible to specify two lease lengths: the default length that
will be assigned if a client doesn't ask for any particular lease
length, and a maximum lease length.
These are specified as clauses to the subnet command:
.Bd -literal -offset indent
subnet 239.252.197.0 netmask 255.255.255.0 {
  range 239.252.197.10 239.252.197.107;
  default-lease-time 600;
  max-lease-time 7200;
}
.Ed
.Pp
This particular subnet declaration specifies a default lease time of
600 seconds (ten minutes), and a maximum lease time of 7200 seconds
(two hours).
Other common values would be 86400 (one day), 604800 (one week)
and 2592000 (30 days).
.Pp
Each subnet need not have the same lease \- in the case of an office
environment and a manufacturing environment served by the same DHCP
server, it might make sense to have widely disparate values for
default and maximum lease times on each subnet.
.It BOOTP Support
Each BOOTP client must be explicitly declared in the
.Xr dhcpd.conf 5
file.
A very basic client declaration will specify the client network interface's
hardware address and the IP address to assign to that client.
If the client needs to be able to load a boot file from the server,
that file's name must be specified.
A simple BOOTP client declaration might look like this:
.Bd -literal -offset indent
host haagen {
  hardware ethernet 08:00:2b:4c:59:23;
  fixed-address 239.252.197.9;
  filename "haagen.boot";
}
.Ed
.It Options
DHCP (and also BOOTP with Vendor Extensions) provides a mechanism
whereby the server can provide the client with information about how
to configure its network interface (e.g., subnet mask), and also how
the client can access various network services (e.g., DNS, IP routers,
and so on).
.Pp
These options can be specified on a per-subnet basis and, for BOOTP
clients, also on a per-client basis.
In the event that a BOOTP client declaration specifies options that are
also specified in its subnet declaration, the options specified in the
client declaration take precedence.
A reasonably complete DHCP configuration might look something like this:
.Bd -literal -offset indent
subnet 239.252.197.0 netmask 255.255.255.0 {
  range 239.252.197.10 239.252.197.250;
  default-lease-time 600;
  max-lease-time 7200;
  option subnet-mask 255.255.255.0;
  option broadcast-address 239.252.197.255;
  option routers 239.252.197.1;
  option domain-name-servers 239.252.197.2, 239.252.197.3;
  option domain-name "isc.org";
}
.Ed
.Pp
A BOOTP host on that subnet that needs to be in a different domain and
use a different name server might be declared as follows:
.Bd -literal -offset indent
host haagen {
  hardware ethernet 08:00:2b:4c:59:23;
  fixed-address 239.252.197.9;
  filename "haagen.boot";
  option domain-name-servers 192.5.5.1;
  option domain-name "vix.com";
}
.Ed
.El
.Pp
A more complete description of the
.Pa dhcpd.conf
file syntax is provided in
.Xr dhcpd.conf 5 .
.Sh SYNCHRONISATION
.Nm
supports realtime synchronisation of the lease allocations to
a number of
.Nm
daemons running on multiple machines,
using the
.Fl Y
and
.Fl y
options.
.Pp
The following example will accept incoming multicast and unicast
synchronisation messages, and send outgoing multicast messages through
the network interface
.Ar em0 :
.Bd -literal -offset indent
# /usr/sbin/dhcpd -y em0 -Y em0
.Ed
.Pp
The second example will increase the multicast TTL to a value of 2,
add the unicast targets
.Ar foo.somewhere.org
and
.Ar bar.somewhere.org ,
and accept incoming unicast messages sent to
.Ar example.somewhere.org
only.
.Bd -literal -offset indent
# /usr/sbin/dhcpd -y example.somewhere.org -Y em0:2 \e
	-Y foo.somewhere.org -Y bar.somewhere.org
.Ed
.Pp
If the file
.Pa /var/db/dhcpd.key
exists,
.Nm
will calculate the message-digest fingerprint (checksum) for the file
and use it as a shared key to authenticate the synchronisation messages.
The file itself can contain any data.
For example, to create a secure random key:
.Bd -literal -offset indent
# dd if=/dev/random of=/var/db/dhcpd.key bs=2048 count=1
.Ed
.Pp
The file needs to be copied to all hosts
sending or receiving synchronisation messages.
.Pp
All hosts using synchronisation must use the same configuration in the
.Pa /etc/dhcpd.conf
file.
.Sh FILES
.Bl -tag -width "/var/db/dhcpd.leases~  " -compact
.It Pa /etc/dhcpd.conf
DHCPD configuration file.
.It Pa /var/db/dhcpd.leases
DHCPD lease file.
.El
.Sh SEE ALSO
.Xr pf 4 ,
.Xr dhcpd.conf 5 ,
.Xr dhcpd.leases 5 ,
.Xr dhclient 8 ,
.Xr dhcrelay 8 ,
.Xr pxeboot 8
.Sh STANDARDS
.Rs
.%A R. Droms
.%D October 1993
.%R RFC 1534
.%T Interoperation Between DHCP and BOOTP
.Re
.Pp
.Rs
.%A R. Droms
.%D March 1997
.%R RFC 2131
.%T Dynamic Host Configuration Protocol
.Re
.Pp
.Rs
.%A S. Alexander
.%A R. Droms
.%D March 1997
.%R RFC 2132
.%T DHCP Options and BOOTP Vendor Extensions
.Re
.Pp
.Rs
.%A T. Lemon
.%A S. Cheshire
.%D November 2002
.%R RFC 3396
.%T Encoding Long Options in the Dynamic Host Configuration Protocol (DHCPv4)
.Re
.Pp
.Rs
.%A T. Lemon
.%A S. Cheshire
.%A B. Volz
.%D December 2002
.%R RFC 3442
.%T The Classless Static Route Option for Dynamic Host Configuration Protocol (DHCP) version 4
.Re
.Sh AUTHORS
.An -nosplit
.Nm
is based on software from the Internet Software Consortium,
written by
.An Ted Lemon Aq Mt mellon@@vix.com
under a contract with Vixie Labs.
The current implementation was reworked for
.Ox
by
.An Henning Brauer Aq Mt henning@@openbsd.org .
.Sh BUGS
We realize that it would be nice if one could send a
.Dv SIGHUP
to the server and have it reload the database.
This is not technically impossible, but it would require a great deal of work,
our resources are extremely limited, and they can be better spent elsewhere.
So please don't complain about this on the mailing list unless you're prepared
to fund a project to implement this feature, or prepared to do it yourself.
@


1.28
log
@Adopt the common verbiage other log.[ch] daemons use to describe '-d'.

Point out that dhcpd(8) -f is an alias for -d.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.27 2015/03/13 19:58:41 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: March 13 2015 $
d60 1
a60 2
The Internet Software Consortium DHCP Server,
.Nm dhcpd ,
d514 2
a515 1
was written by
d518 3
a520 2
.Pp
The current implementation was reworked by
@


1.27
log
@remove the first comma from constructs like ", and," and ", or,": you can use
"and" and "or" to join sentence clauses, and you can use commas, but both hinders
reading;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.26 2014/11/22 18:15:41 deraadt Exp $
d39 1
a39 1
.Dd $Mdocdate: November 22 2014 $
d197 2
a198 1
Force
d200 2
a201 12
to log to
.Ar stderr .
This can be useful for debugging, and also at sites where a complete log of
all dhcp activity must be kept, but
.Xr syslogd 8
is not reliable or otherwise cannot be used.
Normally,
.Nm
will log all output using the
.Xr syslog 3
function with the log facility set to
.Dv LOG_DAEMON .
d203 2
a204 7
Run
.Nm
as a foreground process, rather than allowing it to run as a daemon in the
background.
This is useful when running
.Nm
under a debugger, or when running it out of inittab on System V systems.
@


1.26
log
@/dev/random has created the same effect as /dev/arandom (and /dev/urandom)
for quite some time.  Mop up the last few, by using /dev/random where we
actually want it, or not even mentioning arandom where it is irrelevant.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.25 2014/07/11 13:53:47 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: July 11 2014 $
d386 1
a386 1
These options can be specified on a per-subnet basis, and, for BOOTP
@


1.25
log
@tweak previous;
ok krw yasuoka
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.24 2014/07/11 09:44:42 yasuoka Exp $
d464 1
a464 1
# dd if=/dev/arandom of=/var/db/dhcpd.key bs=2048 count=1
@


1.24
log
@Fix typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.23 2014/07/11 09:42:27 yasuoka Exp $
a48 1
.Op Fl u Ns Op Ar bind_address
d54 1
d153 2
a154 1
If any interface name and
d156 1
a156 1
is not specified on the command line,
d247 5
a251 3
Use an UDP socket instead of BPF for receiving and sending packets.
Only DHCPINFORM messages can be handled on this socket, other messages are
discarded.
d254 4
a257 2
can answer DHCPINFORM from the clients on non ethernet interfaces
(eg.
d260 1
a260 2
.Xr pppx 4
.Ns ) .
d265 2
a266 2
will bind that address, otherwise
the limited broadcast address (255.255.255.255) is used as default.
@


1.23
log
@Add -u option to bind UDP port as a socket to answer DHCPINFORM from
the clients on non ethernet interfaces (eg. tun(4) or pppx(4)).

input krw
ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.22 2014/01/03 16:21:58 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: January 3 2014 $
d251 1
a251 1
can answer DHCPINFORM from the clients on on non ethernet interfaces
@


1.22
log
@consistent Nd lines for the various dhcp bits; help/ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.21 2013/07/16 11:13:33 schwarze Exp $
d39 1
a39 1
.Dd $Mdocdate: July 16 2013 $
d49 1
d153 3
a155 1
If no interface names are specified on the command line,
d245 18
@


1.21
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.20 2013/07/14 19:44:38 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: July 14 2013 $
d44 1
a44 1
.Nd Dynamic Host Configuration Protocol server
@


1.20
log
@merge the relevant bits of dhcp(8) into dhclient(8) and dhcpd(8),
removing traces of dhcp(8)... i'm about to remove that file, since
it's essentially useless. holding off for a little, in case my commit
is greeted with howls.

help/ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.19 2013/07/11 15:15:46 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: July 11 2013 $
d505 1
a505 1
.An Ted Lemon Aq mellon@@vix.com
d509 1
a509 1
.An Henning Brauer Aq henning@@openbsd.org .
@


1.19
log
@update (or add) STANDARDS;
help/ok krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.18 2010/10/08 15:43:45 sobrado Exp $
d39 1
a39 1
.Dd $Mdocdate: October 8 2010 $
d450 1
a450 1
.It /etc/dhcpd.conf
d452 1
a452 1
.It /var/db/dhcpd.leases
a459 1
.Xr dhcp 8 ,
@


1.18
log
@use the right capitalization in the Nd strings.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.17 2009/09/14 10:24:27 schwarze Exp $
d39 1
a39 1
.Dd $Mdocdate: September 14 2009 $
d463 39
@


1.17
log
@fix typo;  ok jmc@@
also reported upstream to dhcp dash bugs at isc dot org
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.16 2008/05/07 12:19:20 beck Exp $
d39 1
a39 1
.Dd $Mdocdate: May 7 2008 $
d44 1
a44 1
.Nd Dynamic Host Configuration Protocol Server
@


1.16
log
@Add synchronisation support for dhcpd - this allows for two dhcpd's
with the same configuration to be run on the same net and they will
keep their lease files/state in synch, and therefore allowing you to
run redundant dhcpd's. Synchronization code stolen from spamd, uses
an hmac key in /var/db/dhcpd.key if it exists.
ok krw@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.15 2007/05/31 19:20:23 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate: May 31 2007 $
d310 1
a310 1
infrequently, it might make sense to allow lease times of a month of more.
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.14 2007/02/17 13:32:15 jmc Exp $
d39 1
a39 1
.Dd $Mdocdate$
d54 2
d242 26
d397 51
@


1.14
log
@no code for -p, so remove from man page and usage();
confirmed by ckuethe;
spotted by Mark Lumsden
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.13 2006/08/09 11:05:31 stevesk Exp $
d39 1
a39 1
.Dd January 1, 1995
@


1.13
log
@typo in example config; ok henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.12 2006/06/14 20:19:20 jmc Exp $
a53 1
.Op Fl p Ar pf-device
a239 5
.It Fl p Ar pf-device
Use an alternate
.Xr pf 4
device,
.Ar pf-device .
@


1.12
log
@sort options;
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.11 2006/06/14 14:58:51 ckuethe Exp $
d348 2
a349 1
  default-lease-time 600 max-lease-time 7200;
@


1.11
log
@This diff allows dhcpd to put active leases into a pf table. Dhcpd will then
periodically - based on the length of the shortest lease time - walk across
all leases searching for expired leases which are then removed from the pf
table.

ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.10 2006/05/31 09:05:42 jmc Exp $
d51 1
a52 1
.Op Fl c Ar config-file
a181 15
.It Fl L Ar leased_ip_table
When an address is leased
.Nm
will insert it into the
.Xr pf 4
table named
.Ar leased_ip_table .
Addresses are removed from the table when the lease expires.
Combined with the table of abandoned addresses, this can help enforce a
requirement to use DHCP on a network, or can place DHCP users in a different
class of service.
Users are cautioned against placing much trust in Ethernet or IP addresses;
.Xr ifconfig 8
can be used to trivially change the interface's address, and on a busy DHCP
network, IP addresses will likely be quickly recycled.
d214 15
@


1.10
log
@- tidy up SYNOPSIS
- sort options
- +.Xr pf 4 ,
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.9 2006/05/31 02:43:15 ckuethe Exp $
d51 1
d182 11
@


1.9
log
@This diff makes dhcpd able to manipulate pf tables on certain lease events.

dhcpd is now able to place abandoned addresses into a table (to offer some
protection against machines camping on an address) and remove them from the
table if they are properly leased.

When dhcpd assigns an IP to a new hardware address, it can remove that
address from a table. This is for use with the overload table in pf; newly
arrived machines will not be punished for the actions of a machine that
went away.

beck@@ and krw@@ liked previous versions of this, henning@@ final ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.8 2005/09/30 20:34:26 jaredy Exp $
d47 1
d49 2
a53 2
.Op Fl A Ar abandoned_ip_table
.Op Fl C Ar changed_ip_table
d55 1
d157 28
a225 31
.It Fl p Ar pf-device
Use an alternate pf device,
.Ar pf-device .
.It Fl A Ar abandoned_ip_table
When an address is abandoned for some reason, add it to the
.Xr pf 4
table named
.Ar abandoned_ip_table .
This can be used to defend against machines "camping" on an address
without obtaining a lease.
When an address is properly leased,
.Nm
will remove the address from this table.
.It Fl C Ar changed_ip_table
When an address is leased to a different hardware address, delete it from the
.Xr pf 4
table named
.Ar changed_ip_table .
This feature complements the overload table in a stateful
.Xr pf 4
rule.
If a host appears to be misbehaving, it can be quarantined by using the
overload feature.
When the address is leased to a different machine,
.Nm
can remove the address from the overload table, thus allowing a well-behaved
machine to reuse the address.
Users are cautioned against placing much trust in ethernet or IP addresses;
.Xr ifconfig 8
can be used to trivially change the interface's address, and on a busy DHCP
network, IP addresses will likely be quickly recycled.
d229 5
d370 1
@


1.8
log
@deploy .An -nosplit; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.7 2004/10/31 10:43:38 canacar Exp $
d50 3
d81 5
d196 31
@


1.7
log
@change the undocumented -t flag to -n used for configuration testing
and document it. cleanup some unused/unneeded variables while there.
idea & ok henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.6 2004/08/23 19:38:20 pvalchev Exp $
d334 1
@


1.6
log
@update bootp example "filename" location to reflect tftp default of
chrooting to /tftpboot (thus "filename foo" searches there); ok henning
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.5 2004/04/20 03:58:14 henning Exp $
d47 1
a47 1
.Op Fl df
d188 3
@


1.5
log
@there are lies, damn lies, and isc dhcpd manpages
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.4 2004/04/20 03:46:19 henning Exp $
d271 1
a271 1
  filename "/tftpboot/haagen.boot";
d305 1
a305 1
  filename "/tftpboot/haagen.boot";
@


1.4
log
@remove lies about the leases file and its handling
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.3 2004/04/20 00:27:57 henning Exp $
a121 8
To restart
.Nm dhcpd ,
send a
.Dv SIGTERM
(signal 15) to the process ID contained in
.Pa /var/run/dhcpd.pid ,
and then re-invoke
.Nm dhcpd .
a321 2
.It /var/run/dhcpd.pid
DHCPD PID.
@


1.3
log
@don't allow the port to be changed here either
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.2 2004/04/15 08:34:20 jmc Exp $
a102 18
New leases are appended to the end of the
.Pa dhcpd.leases
file.
In order to prevent the file from becoming arbitrarily large,
from time to time
.Nm
creates a new
.Pa dhcpd.leases
file from its in-core lease database.
Once this file has been written to disk, the old file is renamed
.Pa dhcpd.leases~ ,
and the new file is renamed
.Pa dhcpd.leases .
If the system crashes in the middle of this process, whichever
.Pa dhcpd.leases
file remains will contain all the lease information, so there is no need for
a special crash recovery process.
.Pp
d329 1
a329 3
Current DHCPD lease file.
.It /var/db/dhcpd.leases~
Backup DHCPD lease file.
@


1.2
log
@- trim/update AUTHORS
- standard options list and correct SYNOPSIS for dhcpd(8)
- sync usage()

ok henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.1 2004/04/13 23:41:48 henning Exp $
a49 1
.Op Fl p Ar port
a213 19
.It Fl p Ar port
Tell
.Nm
to listen on a port other than the standard (port 67).
It should be followed by the UDP port number on which
.Nm
should listen.
This is mostly useful for debugging purposes.
The server will transmit responses to clients at a
port number that is one greater than the one specified \- i.e., if you
specify
.Fl p
67, then the server will listen on port 67 and transmit to port 68.
Datagrams that must go through relay agents are sent to the port
number specified with the
.Fl p
flag.
If you wish to use alternate port numbers, you must configure
any relay agents you are using to use the same alternate port numbers.
@


1.1
log
@may the whacking begin
@
text
@d1 1
a1 1
.\"	$OpenBSD: dhcpd.8,v 1.18 2004/04/03 10:26:15 jmc Exp $
d47 3
a50 6
.Op Fl f
.Op Fl d
.Op Fl q
.Op Fl cf Ar config-file
.Op Fl lf Ar lease-file
.Bk -words
a51 1
.Ek
d60 1
a60 1
.Sh OPERATION
d143 3
a145 1
send a SIGTERM (signal 15) to the process ID contained in
d172 32
a203 1
If
d205 14
a218 3
should listen on a port other than the standard (port 67), the
.Fl p
flag may used.
d223 1
a223 3
If the
.Fl p
flag is specified, the server will transmit responses to clients at a
d234 1
a234 44
.Pp
To run
.Nm
as a foreground process, rather than allowing it to run as a daemon in the
background, the
.Fl f
flag should be specified.
This is useful when running
.Nm
under a debugger, or when running it out of inittab on System V systems.
.Pp
To have
.Nm
log to
.Ar stderr ,
the
.Fl d
flag should be specified.
This can be useful for debugging, and also at sites where a complete log of
all dhcp activity must be kept, but
.Xr syslogd 8
is not reliable or otherwise cannot be used.
Normally,
.Nm
will log all output using the
.Xr syslog 3
function with the log facility set to LOG_DAEMON.
.Pp
.Nm
can be made to use an alternate configuration file with the
.Fl cf
flag, or an alternate lease file with the
.Fl lf
flag.
Because of the importance of using the same lease database at all times when
running
.Nm
in production, these options should be used
.Em only
for testing lease files or database files in a non-production environment.
.Pp
To avoid printing out the entire copyright message on start-up, the
.Fl q
flag should be specified.
d385 3
a387 3
Funding for this project was provided by the Internet Software Corporation.
Information about the Internet Software Consortium can be found at
.Pa http://www.isc.org/ .
d389 3
a391 2
We realize that it would be nice if one could send a SIGHUP to the server
and have it reload the database.
@

