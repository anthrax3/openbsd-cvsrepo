head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.20
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.18
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	OPENBSD_5_0:1.3.0.14
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.12
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.10
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.6
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.8
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.4
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2016.10.04.22.47.51;	author krw;	state Exp;
branches;
next	1.4;
commitid	PTCmBSXhdCRLXLlF;

1.4
date	2013.04.13.18.08.47;	author krw;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.08.14.15.40;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2008.05.08.05.38.26;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2008.05.07.12.19.20;	author beck;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Zap stray whitespace.
@
text
@/*	$OpenBSD: sync.h,v 1.4 2013/04/13 18:08:47 krw Exp $	*/

/*
 * Copyright (c) 2008, Bob Beck <beck@@openbsd.org>
 * Copyright (c) 2006, 2007 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _DHCPD_SYNC
#define _DHCPD_SYNC

/*
 * dhcpd(8) synchronisation protocol.
 *
 * This protocol has been designed for realtime synchronisation between
 * multiple machines running dhcpd(8), running the same config.
 * It is a simple Type-Length-Value based protocol, it allows easy
 * extension with future subtypes and bulk transfers by sending multiple
 * entries at once. The unencrypted messages will be authenticated using
 * HMAC-SHA1.
 *
 */

#define DHCP_SYNC_VERSION	1
#define DHCP_SYNC_MCASTADDR	"224.0.1.240"	/* XXX choose valid address */
#define DHCP_SYNC_MCASTTTL	IP_DEFAULT_MULTICAST_TTL
#define DHCP_SYNC_HMAC_LEN	20	/* SHA1 */
#define DHCP_SYNC_MAXSIZE	1408
#define DHCP_SYNC_KEY		"/var/db/dhcpd.key"

#define DHCP_ALIGNBYTES		(15)
#define DHCP_ALIGN(p)		(((u_int)(p) + DHCP_ALIGNBYTES) &~ DHCP_ALIGNBYTES)

struct dhcp_synchdr {
	u_int8_t	sh_version;
	u_int8_t	sh_af;
	u_int16_t	sh_length;
	u_int32_t	sh_counter;
	u_int8_t	sh_hmac[DHCP_SYNC_HMAC_LEN];
	u_int8_t	sh_pad[4];
} __packed;

struct dhcp_synctlv_hdr {
	u_int16_t	st_type;
	u_int16_t	st_length;
} __packed;

struct dhcp_synctlv_lease {
	u_int16_t	lv_type;
	u_int16_t	lv_length;
	u_int32_t	lv_starts, lv_ends, lv_timestamp;
	struct iaddr	lv_ip_addr;
	struct hardware	lv_hardware_addr;
} __packed;

#define DHCP_SYNC_END		0x0000
#define DHCP_SYNC_LEASE		0x0001

extern int	 syncfd;
extern int	 sync_init(const char *, const char *, u_short);
extern int	 sync_addhost(const char *, u_short);
extern void	 sync_recv(void);
extern void	 sync_lease(struct lease *);
#endif /* _DHCPD_SYNC */
@


1.4
log
@Give struct dhcp_synctlv_lease fields a prefix (lv_) as the fields
in other structs have. Reduces potential for confusion with fields
of same name but different types in leases. Use consistent variable
name. No change to executable.
@
text
@d1 1
a1 1
/*	$OpenBSD: sync.h,v 1.3 2008/05/08 14:15:40 deraadt Exp $	*/
d27 1
a27 1
 * multiple machines running dhcpd(8), running the same config. 
d31 1
a31 1
 * HMAC-SHA1. 
@


1.3
log
@Insert pad blocks after sub-messages to keep the structures aligned to
16 byte boundaries for maximum portability (somewhat similar to CMSG's)
ok beck
@
text
@d1 1
a1 1
/*	$OpenBSD: sync.h,v 1.2 2008/05/08 05:38:26 beck Exp $	*/
d60 5
a64 5
	u_int16_t	type;
	u_int16_t	length;
	u_int32_t	starts, ends, timestamp;
	struct iaddr	ip_addr;
	struct hardware	hardware_addr;
@


1.2
log
@don't break dhcpd when not using synch mechanisms..
@
text
@d1 1
a1 1
/*	$OpenBSD: sync.h,v 1.1 2008/05/07 12:19:20 beck Exp $	*/
d42 3
d51 1
a51 1
	u_int16_t	sh_pad[2];
@


1.1
log
@Add synchronisation support for dhcpd - this allows for two dhcpd's
with the same configuration to be run on the same net and they will
keep their lease files/state in synch, and therefore allowing you to
run redundant dhcpd's. Synchronization code stolen from spamd, uses
an hmac key in /var/db/dhcpd.key if it exists.
ok krw@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sync.h,v 1.1 2007/03/04 03:19:41 beck Exp $	*/
d67 1
@

