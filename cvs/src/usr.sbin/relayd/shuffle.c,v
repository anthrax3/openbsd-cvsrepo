head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.2.0.24
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.22
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.18
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.16
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.14
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.12
	OPENBSD_5_0:1.2.0.10
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.8
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.6
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.1.0.4
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.2
	OPENBSD_4_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.01.22.17.42.09;	author reyk;	state Exp;
branches;
next	1.3;
commitid	puppem00jmzmdm4f;

1.3
date	2014.12.21.00.54.49;	author guenther;	state Exp;
branches;
next	1.2;
commitid	XnjIOhurXdX5o1V9;

1.2
date	2009.06.09.16.26.03;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.09.17.16.51;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Clean up the relayd headers with help of include-what-you-use and some
manual review.  Based on common practice, relayd.h now includes the
necessary headers for itself.

OK benno@@
@
text
@/*	$OpenBSD: shuffle.c,v 1.3 2014/12/21 00:54:49 guenther Exp $	*/

/*
 * Portions Copyright (C) 2008 Theo de Raadt
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM
 * DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL
 * INTERNET SOFTWARE CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT,
 * INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING
 * FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT,
 * NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION
 * WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/* based on: bind/lib/isc/shuffle.c,v 1.4 2008/07/09 17:07:32 reyk Exp $ */

#include <sys/types.h>

#include <stdlib.h>
#include <assert.h>

#include "relayd.h"

#define VALID_SHUFFLE(x)	(x != NULL)

void
shuffle_init(struct shuffle *shuffle)
{
	int i, i2;

	assert(VALID_SHUFFLE(shuffle));

	shuffle->isindex = 0;
	/* Initialize using a Knuth shuffle */
	for (i = 0; i < 65536; ++i) {
		i2 = arc4random_uniform(i + 1);
		shuffle->id_shuffle[i] = shuffle->id_shuffle[i2];
		shuffle->id_shuffle[i2] = i;
	}
}

u_int16_t
shuffle_generate16(struct shuffle *shuffle)
{
	u_int32_t si;
	u_int16_t r;
	int i, i2;

	assert(VALID_SHUFFLE(shuffle));

	do {
		si = arc4random();
		i = shuffle->isindex & 0xFFFF;
		i2 = (shuffle->isindex - (si & 0x7FFF)) & 0xFFFF;
		r = shuffle->id_shuffle[i];
		shuffle->id_shuffle[i] = shuffle->id_shuffle[i2];
		shuffle->id_shuffle[i2] = r;
		shuffle->isindex++;
	} while (r == 0);

	return (r);
}
@


1.3
log
@Stop pulling in <arpa/inet.h> or <arpa/nameser.h> when unnecessary.
*Do* pull it in when in_{port,addr}_h is needed and <netinet/in.h> isn't.

ok reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: shuffle.c,v 1.2 2009/06/09 16:26:03 deraadt Exp $	*/
a22 4
#include <sys/socket.h>

#include <netinet/in.h>
#include <net/if.h>
a24 2
#include <string.h>
#include <event.h>
a25 2

#include <openssl/ssl.h>
@


1.2
log
@missing header file; bring things into scope
@
text
@d1 1
a1 1
/*	$OpenBSD: shuffle.c,v 1.1 2008/07/09 17:16:51 reyk Exp $	*/
a26 1
#include <arpa/inet.h>
@


1.1
log
@Use OpenBSD's knuth shuffle algorithm of random values from bind to
produce the DNS request ids instead of a simple per-request
arc4random().  This ensure randomness but also satisfies the
non-repeating property we need.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d25 1
@

