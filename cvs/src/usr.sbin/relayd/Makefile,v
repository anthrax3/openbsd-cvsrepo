head	1.32;
access;
symbols
	OPENBSD_6_2_BASE:1.32
	OPENBSD_6_1:1.30.0.4
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.29.0.4
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.6
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.27.0.4
	OPENBSD_5_6_BASE:1.27
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.23.0.4
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.2
	OPENBSD_5_3_BASE:1.23
	OPENBSD_5_2:1.22.0.6
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.4
	OPENBSD_5_0:1.22.0.2
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.20.0.4
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.2
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.8
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.4
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.17.0.2
	OPENBSD_4_3_BASE:1.17;
locks; strict;
comment	@# @;


1.32
date	2017.07.03.22.21.47;	author espie;	state Exp;
branches;
next	1.31;
commitid	SoYT2zMcub5xTPqC;

1.31
date	2017.05.27.08.33.25;	author claudio;	state Exp;
branches;
next	1.30;
commitid	mLnU8nnW1ZLoAWRU;

1.30
date	2016.09.28.15.03.03;	author reyk;	state Exp;
branches;
next	1.29;
commitid	VIpAbX0hAeq0oB4f;

1.29
date	2015.11.21.12.37.42;	author reyk;	state Exp;
branches;
next	1.28;
commitid	F0WFvnPckRXIJkcu;

1.28
date	2015.01.22.09.26.05;	author reyk;	state Exp;
branches;
next	1.27;
commitid	o3hdD3oPPo4ygHrW;

1.27
date	2014.04.21.14.57.17;	author reyk;	state Exp;
branches;
next	1.26;

1.26
date	2014.04.18.13.55.26;	author reyk;	state Exp;
branches;
next	1.25;

1.25
date	2014.04.14.12.58.04;	author blambert;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.18.05.54.51;	author martynas;	state Exp;
branches;
next	1.23;

1.23
date	2012.09.20.12.30.20;	author reyk;	state Exp;
branches;
next	1.22;

1.22
date	2011.05.19.08.56.49;	author reyk;	state Exp;
branches;
next	1.21;

1.21
date	2011.05.09.12.08.47;	author reyk;	state Exp;
branches;
next	1.20;

1.20
date	2010.05.26.16.44.32;	author nicm;	state Exp;
branches;
next	1.19;

1.19
date	2009.08.13.13.51.21;	author reyk;	state Exp;
branches;
next	1.18;

1.18
date	2008.07.09.17.16.51;	author reyk;	state Exp;
branches;
next	1.17;

1.17
date	2008.02.11.10.42.50;	author reyk;	state Exp;
branches;
next	1.16;

1.16
date	2007.12.07.17.17.00;	author reyk;	state Exp;
branches;
next	1.15;

1.15
date	2007.11.26.09.38.25;	author reyk;	state Exp;
branches;
next	1.14;

1.14
date	2007.09.25.08.24.26;	author pyr;	state Exp;
branches;
next	1.13;

1.13
date	2007.09.10.11.59.22;	author reyk;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.29.17.12.04;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2007.02.26.19.35.43;	author reyk;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.25.18.15.37;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2007.02.23.00.28.06;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2007.02.22.03.32.39;	author reyk;	state Exp;
branches;
next	1.7;

1.7
date	2007.02.03.20.24.21;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2007.01.30.15.11.51;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2007.01.29.14.23.31;	author pyr;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.09.02.32.58;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.09.00.45.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2007.01.08.13.37.26;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.16.11.45.07;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.32
log
@no need to generate y.tab.h if nothing uses it, set YFLAGS to nothing
instead of CLEANFILES += y.tab.h

okay millert@@
@
text
@#	$OpenBSD: Makefile,v 1.31 2017/05/27 08:33:25 claudio Exp $

PROG=		relayd
SRCS=		parse.y
SRCS+=		agentx.c ca.c carp.c check_icmp.c check_script.c \
		check_tcp.c check_tls.c config.c control.c hce.c log.c \
		name2id.c pfe.c pfe_filter.c pfe_route.c proc.c \
		relay.c relay_http.c relay_udp.c relayd.c \
		shuffle.c snmp.c ssl.c util.c
MAN=		relayd.8 relayd.conf.5

LDADD=		-levent -ltls -lssl -lcrypto -lutil
DPADD=		${LIBEVENT} ${LIBSSL} ${LIBCRYPTO} ${LIBUTIL}
CFLAGS+=	-Wall -I${.CURDIR} -I${.CURDIR}/../snmpd
CFLAGS+=	-Wstrict-prototypes -Wmissing-prototypes
CFLAGS+=	-Wmissing-declarations
CFLAGS+=	-Wshadow -Wpointer-arith
CFLAGS+=	-Wsign-compare -Wcast-qual
YFLAGS=

.include <bsd.prog.mk>
@


1.31
log
@Migrate relayd to use libtls for TLS. Still does the TLS privsep via the
engine but at least we can use a sane API for new features.
Going in now so it is possible to work with this in tree.
General agreement at d2k17.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2016/09/28 15:03:03 reyk Exp $
d19 1
a19 1
CLEANFILES+=	y.tab.h
@


1.30
log
@Add -Wcast-qual and cast away one false positive where we use a const
u_char * variable for an iovec from within the libcrypto engine callback.

OK millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2015/11/21 12:37:42 reyk Exp $
d6 2
a7 2
		check_tcp.c config.c control.c hce.c log.c name2id.c \
		pfe.c pfe_filter.c pfe_route.c proc.c \
d12 1
a12 1
LDADD=		-levent -lssl -lcrypto -lutil
@


1.29
log
@Move local logging functions from log.c to new file util.c (that is
also shared with relayctl).  This allows us to unify common log.c with
other daemons.  It also clarifies the Copyright: log.c is by Henning,
relayd's additions were from me.  No functional or code changes, but
it will make future updates easier.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2015/01/22 09:26:05 reyk Exp $
d18 1
a18 1
CFLAGS+=	-Wsign-compare
@


1.28
log
@LibreSSL now supports loading of CA certificates from memory, replace
the internal and long-serving ssl_ctx_load_verify_memory() function
with a call to the SSL_CTX_load_verify_mem() API function.  The
ssl_privsep.c file with hacks for using OpenSSL in privsep'ed
processes can now go away; portable versions of smtpd and relayd
should start depending on LibreSSL or they have to carry ssl_privsep.c
in openbsd-compat to work with legacy OpenSSL.  No functional change.

Based on previous discussions with gilles@@ bluhm@@ and many others
OK bluhm@@ (as part of the libcrypto/libssl/libtls diff)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2014/04/21 14:57:17 reyk Exp $
d9 1
a9 1
		shuffle.c snmp.c ssl.c
@


1.27
log
@The OpenSSL engine passes a "const u_char *" to the callback but
relayd's RSA privsep engine uses an iovec that expects a non-cast
"void *".  Cast it and disable the -Wcast-qual warning because I don't
want to copy the data and I didn't find a better way to implement it.

ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2014/04/18 13:55:26 reyk Exp $
d9 1
a9 1
		shuffle.c snmp.c ssl.c ssl_privsep.c
@


1.26
log
@Introduce privsep for private keys:

- Move RSA private keys to a new separate process instead of copying
them to the relays.  A custom RSA engine is used by the SSL/TLS code
of the relay processes to send RSA private key encryption/decryption
(also used for sign/verify) requests to the new "ca" processes instead
of operating on the private key directly.

- Each relay process gets its own related ca process.  Setting
"prefork 5" in the config file will spawn 10 processes (5 relay, 5
ca).  This diff also reduces the default number of relay processes
from 5 to 3 which should be suitable in most installations without a
very heavy load.

- Don't keep text versions of the keys in memory, parse them once and
keep the binary representation.  This might still be the case in
OpenSSL's internals but will be fixed in the library.

This diff doesn't prevent something like "heartbleed" but adds an
additional mitigation to prevent leakage of the private keys from the
processes doing SSL/TLS.

With feedback from many
ok benno@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2014/04/14 12:58:04 blambert Exp $
d17 1
a17 1
CFLAGS+=	-Wshadow -Wpointer-arith -Wcast-qual
@


1.25
log
@Adapt relayd to use AgentX protocol to send traps

ok reyk@@ benno@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2014/01/18 05:54:51 martynas Exp $
d4 6
a9 5
SRCS=		parse.y log.c control.c ssl.c ssl_privsep.c \
		relayd.c pfe.c pfe_filter.c pfe_route.c hce.c relay.c \
		relay_http.c relay_udp.c carp.c check_icmp.c check_tcp.c \
		check_script.c name2id.c snmp.c shuffle.c proc.c config.c \
		agentx.c
@


1.24
log
@Remove -Wbounded:  it is now the compiler default.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2012/09/20 12:30:20 reyk Exp $
d7 2
a8 1
		check_script.c name2id.c snmp.c shuffle.c proc.c config.c
@


1.23
log
@Move the HTTP code into an extra file to make future changes easier to
follow.  No functional changes, only one function got renamed.

ok benno@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2011/05/19 08:56:49 reyk Exp $
d16 1
a16 1
CFLAGS+=	-Wsign-compare -Wbounded
@


1.22
log
@Fix reload support in relayd(8) by reimplementing large parts of the
daemon infrastructure. The previous design made it fairly hard to
reload the complex data structures, especially relays and protocols.
One of the reasons was that the privsep'd relayd processes had two
ways of getting their configuration: 1) from memory after forking from
the parent process and 2) and (partially) via imsgs after reload.  The
new implementation first forks the privsep'd children before the
parents loads the configuration and sends it via imsgs to them; so it
is only like 2) before.  It is based on an approach that I first
implemented for iked(8) and I also fixed many bugs in the code.

Thanks to many testers including dlg@@ sthen@@ phessler@@
ok pyr@@ dlg@@ sthen@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2011/05/09 12:08:47 reyk Exp $
d6 2
a7 2
		relay_udp.c carp.c check_icmp.c check_tcp.c check_script.c \
		name2id.c snmp.c shuffle.c proc.c config.c
@


1.21
log
@Reorganize the relayd code to use the proc.c privsep API/commodity
functions that are based on work for iked and smtpd.  This simplifies
the setup of privsep processes and moves some redundant and repeated
code to a single place - which is always good from a quality and
security point of view.  The relayd version of proc.c is different to
the current version in iked because it uses 1:N communications between
processes, eg. a single parent process is talking to many forked relay
children while iked only needs 1:1 communications.

ok sthen@@ pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2010/05/26 16:44:32 nicm Exp $
d7 1
a7 1
		name2id.c snmp.c shuffle.c proc.c
@


1.20
log
@Move imsg into libutil and add a man page.

Minor bump for libutil.

Previous versions of this diff and man page looked at by various people.

"you should just commit" deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2009/08/13 13:51:21 reyk Exp $
d7 1
a7 1
		name2id.c snmp.c shuffle.c
@


1.19
log
@add new 'router' functionality to dynamically add or remove routes
based on health check results, using the existing table syntax.  this
allows to maintain multiple (uplink) gateways to implement link
balancing or WAN link failover if no routing protocol or other
keepalive method is available.  works fine with or without
net.inet.ip.multipath enabled.

ok pyr@@, jmc@@ for manpages
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2008/02/11 10:42:50 reyk Exp $
d4 1
a4 1
SRCS=		parse.y log.c control.c buffer.c imsg.c ssl.c ssl_privsep.c \
d10 2
a11 2
LDADD=		-levent -lssl -lcrypto
DPADD=		${LIBEVENT} ${LIBSSL} ${LIBCRYPTO}
@


1.18
log
@Use OpenBSD's knuth shuffle algorithm of random values from bind to
produce the DNS request ids instead of a simple per-request
arc4random().  This ensure randomness but also satisfies the
non-repeating property we need.

ok deraadt@@
@
text
@d5 3
a7 3
		relayd.c pfe.c pfe_filter.c hce.c relay.c relay_udp.c \
		carp.c check_icmp.c check_tcp.c check_script.c name2id.c \
		snmp.c shuffle.c
@


1.17
log
@Marry relayd with snmpd using new "send trap" option: Request to send
a SNMP trap when the state of a host changes.  relayd(8) will try to
(re-)connect to snmpd(8) and request it to send a trap to the
registered trap receivers, see snmpd.conf(5) for more information
about the configuration.

ok pyr@@ thib@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2007/12/07 17:17:00 reyk Exp $
d7 1
a7 1
		snmp.c
@


1.16
log
@hoststated gets renamed to relayd.  easier to type, and actually says
what the daemon does - it is a relayer that pays attention to the status
of pools of hosts; not a status checkers that happens to do some relaying
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2007/11/26 09:38:25 reyk Exp $
d6 2
a7 1
		carp.c check_icmp.c check_tcp.c check_script.c name2id.c
d12 1
a12 1
CFLAGS+=	-Wall -I${.CURDIR}
@


1.15
log
@allow to add labels to protocol actions, they will be printed in http
error pages and can be used to refer to additional information.

ok pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2007/09/25 08:24:26 pyr Exp $
d3 1
a3 1
PROG=		hoststated
d5 1
a5 1
		hoststated.c pfe.c pfe_filter.c hce.c relay.c relay_udp.c \
d7 1
a7 1
MAN=		hoststated.8 hoststated.conf.5
@


1.14
log
@Introduce two new functions to be able to load certificates while
already chrooted and with privileges dropped.
This is the very first step in being able to reload a
layer 7 configuration.

not ok reyk who's away but should be glad to see this in.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2007/09/10 11:59:22 reyk Exp $
d6 1
a6 1
		carp.c check_icmp.c check_tcp.c check_script.c
@


1.13
log
@add support for relaying DNS traffic (with a little bit of packet
header randomization). this adds an infrastructure to support
UDP-based protocols.

ok gilles@@, tested by some
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2007/05/29 17:12:04 reyk Exp $
d4 3
a6 3
SRCS=		parse.y log.c control.c buffer.c imsg.c hoststated.c \
		ssl.c pfe.c pfe_filter.c hce.c relay.c relay_udp.c carp.c \
		check_icmp.c check_tcp.c check_script.c
@


1.12
log
@add a new check method which allows to run external scripts/programs
for custom evaluations.

pyr agrees to put it in now but to do some improvements of the timeout
handling later.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2007/02/26 19:35:43 reyk Exp $
d4 2
a5 2
SRCS=		parse.y log.c control.c buffer.c imsg.c hoststated.c	\
		ssl.c pfe.c pfe_filter.c hce.c relay.c carp.c 		\
@


1.11
log
@re-enable the -W flags except -Werror which behaves differently with
different gcc versions (it previously broke the tree on sparc with gcc
2.95 when compiling sys/hash.h).

-Werror removal suggested by deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2007/02/25 18:15:37 deraadt Exp $
d5 2
a6 2
		ssl.c pfe.c pfe_filter.c hce.c				\
		check_icmp.c check_tcp.c relay.c carp.c
@


1.10
log
@delete -W flags that reyk uses to break the tree
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2007/02/23 00:28:06 deraadt Exp $
d11 5
a15 5
CFLAGS+=	-Wall -Werror -I${.CURDIR}
#CFLAGS+=	-Wstrict-prototypes -Wmissing-prototypes
#CFLAGS+=	-Wmissing-declarations
#CFLAGS+=	-Wshadow -Wpointer-arith -Wcast-qual
#CFLAGS+=	-Wsign-compare -Wbounded
@


1.9
log
@knf
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2007/02/22 03:32:39 reyk Exp $
d12 4
a15 4
CFLAGS+=	-Wstrict-prototypes -Wmissing-prototypes
CFLAGS+=	-Wmissing-declarations
CFLAGS+=	-Wshadow -Wpointer-arith -Wcast-qual
CFLAGS+=	-Wsign-compare -Wbounded
@


1.8
log
@Add layer 7 functionality to hoststated used for layer 7
loadbalancing, SSL acceleration, general-purpose TCP relaying, and
transparent proxying.

see hoststated.conf(5) and my upcoming article on undeadly.org for
details.

ok to commit deraadt@@ pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2007/02/03 20:24:21 reyk Exp $
d4 2
a5 2
SRCS=		parse.y log.c control.c buffer.c imsg.c hoststated.c 	\
		ssl.c pfe.c pfe_filter.c hce.c 				\
d10 1
a10 1
DPADD=		${LIBEVENT} ${LIBSSL} ${LIBCRYPTO} 
@


1.7
log
@merge tcp-based checks into one file, no functional changes

ok pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2007/01/30 15:11:51 reyk Exp $
d6 1
a6 1
		check_icmp.c check_tcp.c
@


1.6
log
@this diff changes "-lcrypto -lssl" to "-lssl -lcrypto" to let it
compile on vax. on some architectures the order of the libraries
matters for the linker.

ok pyr@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2007/01/29 14:23:31 pyr Exp $
d6 1
a6 1
		check_icmp.c check_tcp.c check_http.c check_send_expect.c
@


1.5
log
@Add SSL support to hoststated.
with help and OK reyk@@
with help and advice by claudio@@ and Srebrenko Sehic
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2007/01/09 02:32:58 reyk Exp $
d9 2
a10 2
LDADD=		-levent -lcrypto -lssl
DPADD=		${LIBEVENT} ${LIBCRYPTO} ${LIBSSL}
@


1.4
log
@unbreak
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2007/01/09 00:45:32 deraadt Exp $
d5 1
a5 1
		pfe.c pfe_filter.c hce.c 				\
d9 2
a10 2
LDADD=		-levent
DPADD=		${LIBEVENT}
@


1.3
log
@adapt to rename
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2007/01/08 13:37:26 reyk Exp $
d7 1
a7 1
MAN=		hostated.8 hostated.conf.5
@


1.2
log
@add a generic send/expect check using regular expression (see
regex(3)).  this allows to define additional checks for other TCP
protocols.

From Pierre-Yves Ritschard (pyr at spootnik dot org)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2006/12/16 11:45:07 reyk Exp $
d3 2
a4 2
PROG=		hostated
SRCS=		parse.y log.c control.c buffer.c imsg.c hostated.c 	\
@


1.1
log
@Import hostated, the host status daemon.  This daemon will monitor
remote hosts and dynamically alter pf(4) tables and redirection rules
for active server load balancing.  The daemon has been written by
Pierre-Yves Ritschard (pyr at spootnik.org) and was formerly known as
"slbd".

The daemon is fully functional but it still needs some work and
cleanup so we don't link it to the build yet.  Some TODOs are a
partial rewrite of the check_* routines (use libevent whenever we
can), improvement of the manpages, and general knf and cleanup.

ok deraadt@@ claudio@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 3
a6 2
SRCS=		parse.y log.c control.c buffer.c imsg.c hostated.c \
		pfe.c pfe_filter.c hce.c check_icmp.c check_tcp.c check_http.c
@

