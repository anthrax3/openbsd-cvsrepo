head	1.178;
access;
symbols
	OPENBSD_6_1:1.176.0.4
	OPENBSD_6_1_BASE:1.176
	OPENBSD_6_0:1.168.0.4
	OPENBSD_6_0_BASE:1.168
	OPENBSD_5_9:1.168.0.2
	OPENBSD_5_9_BASE:1.168
	OPENBSD_5_8:1.164.0.4
	OPENBSD_5_8_BASE:1.164
	OPENBSD_5_7:1.160.0.2
	OPENBSD_5_7_BASE:1.160
	OPENBSD_5_6:1.147.0.4
	OPENBSD_5_6_BASE:1.147
	OPENBSD_5_5:1.139.0.4
	OPENBSD_5_5_BASE:1.139
	OPENBSD_5_4:1.137.0.2
	OPENBSD_5_4_BASE:1.137
	OPENBSD_5_3:1.132.0.2
	OPENBSD_5_3_BASE:1.132
	OPENBSD_5_2:1.128.0.2
	OPENBSD_5_2_BASE:1.128
	OPENBSD_5_1_BASE:1.125
	OPENBSD_5_1:1.125.0.2
	OPENBSD_5_0:1.124.0.2
	OPENBSD_5_0_BASE:1.124
	OPENBSD_4_9:1.116.0.2
	OPENBSD_4_9_BASE:1.116
	OPENBSD_4_8:1.114.0.2
	OPENBSD_4_8_BASE:1.114
	OPENBSD_4_7:1.112.0.2
	OPENBSD_4_7_BASE:1.112
	OPENBSD_4_6:1.107.0.4
	OPENBSD_4_6_BASE:1.107
	OPENBSD_4_5:1.100.0.2
	OPENBSD_4_5_BASE:1.100
	OPENBSD_4_4:1.92.0.2
	OPENBSD_4_4_BASE:1.92
	OPENBSD_4_3:1.80.0.2
	OPENBSD_4_3_BASE:1.80;
locks; strict;
comment	@.\" @;


1.178
date	2017.07.11.13.00.59;	author bluhm;	state Exp;
branches;
next	1.177;
commitid	jKHwzaP1HlSyi3tE;

1.177
date	2017.04.19.10.48.57;	author jmc;	state Exp;
branches;
next	1.176;
commitid	FTg4XyOpAiZmZX4Z;

1.176
date	2017.03.25.23.14.04;	author claudio;	state Exp;
branches;
next	1.175;
commitid	AgGMsq8CVcgic1Fm;

1.175
date	2017.02.27.22.25.58;	author benno;	state Exp;
branches;
next	1.174;
commitid	uV55MtprKrVw6EFg;

1.174
date	2017.02.02.08.24.16;	author reyk;	state Exp;
branches;
next	1.173;
commitid	L4E1ZRoEzVaurCmz;

1.173
date	2016.09.03.18.28.45;	author jmc;	state Exp;
branches;
next	1.172;
commitid	XLYJGtGo2T6PVFRc;

1.172
date	2016.09.01.10.49.48;	author claudio;	state Exp;
branches;
next	1.171;
commitid	kVeSpNYKmzM2uO33;

1.171
date	2016.08.18.14.12.51;	author jmc;	state Exp;
branches;
next	1.170;
commitid	PsUsAJIEElquHR4n;

1.170
date	2016.07.29.10.09.27;	author reyk;	state Exp;
branches;
next	1.169;
commitid	cXyFVrZtyIYivR44;

1.169
date	2016.07.29.10.00.12;	author reyk;	state Exp;
branches;
next	1.168;
commitid	ns1VHKheNdQL2F8X;

1.168
date	2015.11.06.18.06.29;	author bentley;	state Exp;
branches;
next	1.167;
commitid	xkdJGE8bIi22fMHu;

1.167
date	2015.10.27.12.27.54;	author benno;	state Exp;
branches;
next	1.166;
commitid	uWeuMfQD1ylwAreq;

1.166
date	2015.10.24.11.37.17;	author benno;	state Exp;
branches;
next	1.165;
commitid	J8JPBpGVXkB7JJZv;

1.165
date	2015.08.10.20.45.35;	author sthen;	state Exp;
branches;
next	1.164;
commitid	x0IV1ieU6WXWeHWB;

1.164
date	2015.07.24.15.25.08;	author jmc;	state Exp;
branches;
next	1.163;
commitid	kNCphWSOOHMqvYJM;

1.163
date	2015.05.15.20.40.26;	author reyk;	state Exp;
branches;
next	1.162;
commitid	EeiYLFwGfclkAqTn;

1.162
date	2015.05.15.19.26.37;	author jmc;	state Exp;
branches;
next	1.161;
commitid	KCx6eYTfe4wmfzNS;

1.161
date	2015.03.09.17.20.38;	author reyk;	state Exp;
branches;
next	1.160;
commitid	ccJcSsJHpwbYBS0r;

1.160
date	2015.01.13.09.24.20;	author reyk;	state Exp;
branches;
next	1.159;
commitid	P0wyoMLA4lz5rdAI;

1.159
date	2015.01.02.18.28.23;	author sobrado;	state Exp;
branches;
next	1.158;
commitid	innObbNMMMNV9cDY;

1.158
date	2014.12.27.16.09.51;	author jmc;	state Exp;
branches;
next	1.157;
commitid	9ACOlaJlURN516HI;

1.157
date	2014.12.26.22.55.02;	author benno;	state Exp;
branches;
next	1.156;
commitid	OX6iuA6f1Loq4T0s;

1.156
date	2014.12.23.13.18.23;	author reyk;	state Exp;
branches;
next	1.155;
commitid	Nz43jWMMtbJ5k60b;

1.155
date	2014.12.18.21.26.09;	author jmc;	state Exp;
branches;
next	1.154;
commitid	7BM43wppQHZ2jqPR;

1.154
date	2014.12.18.20.55.01;	author reyk;	state Exp;
branches;
next	1.153;
commitid	nThpdXmyvXqmRQ4C;

1.153
date	2014.12.12.10.05.09;	author reyk;	state Exp;
branches;
next	1.152;
commitid	J8g0vRzthwLCqf68;

1.152
date	2014.11.07.13.48.06;	author jsing;	state Exp;
branches;
next	1.151;
commitid	QL46KAhcJy2F2EDf;

1.151
date	2014.10.21.02.29.54;	author lteo;	state Exp;
branches;
next	1.150;
commitid	Euz8DHNYVwlyP7mO;

1.150
date	2014.10.15.11.06.16;	author reyk;	state Exp;
branches;
next	1.149;
commitid	VpFBc7l3plkkPKxy;

1.149
date	2014.09.05.10.19.26;	author blambert;	state Exp;
branches;
next	1.148;
commitid	Qc13eOLjGetIgjBs;

1.148
date	2014.08.29.09.03.36;	author blambert;	state Exp;
branches;
next	1.147;
commitid	YgQqK1UkUhNBtyeV;

1.147
date	2014.07.11.16.59.38;	author reyk;	state Exp;
branches;
next	1.146;
commitid	For422J6VfsgvmL6;

1.146
date	2014.07.09.19.17.08;	author jmc;	state Exp;
branches;
next	1.145;
commitid	awqM6CwPvBcl5k8e;

1.145
date	2014.07.09.17.01.30;	author reyk;	state Exp;
branches;
next	1.144;
commitid	4LjHA5jCvEkogqzI;

1.144
date	2014.07.09.16.42.05;	author reyk;	state Exp;
branches;
next	1.143;
commitid	YhQvyAop4vC3AmzJ;

1.143
date	2014.06.25.11.05.15;	author reyk;	state Exp;
branches;
next	1.142;
commitid	QSckC3KrSjGNpjr5;

1.142
date	2014.04.18.13.55.26;	author reyk;	state Exp;
branches;
next	1.141;

1.141
date	2014.04.14.15.24.25;	author jmc;	state Exp;
branches;
next	1.140;

1.140
date	2014.04.14.12.58.04;	author blambert;	state Exp;
branches;
next	1.139;

1.139
date	2013.09.09.17.57.44;	author reyk;	state Exp;
branches;
next	1.138;

1.138
date	2013.09.07.11.33.29;	author reyk;	state Exp;
branches;
next	1.137;

1.137
date	2013.07.16.11.13.34;	author schwarze;	state Exp;
branches;
next	1.136;

1.136
date	2013.07.04.15.05.41;	author jmc;	state Exp;
branches;
next	1.135;

1.135
date	2013.06.29.09.08.41;	author jmc;	state Exp;
branches;
next	1.134;

1.134
date	2013.05.30.20.17.12;	author reyk;	state Exp;
branches;
next	1.133;

1.133
date	2013.04.27.16.39.30;	author benno;	state Exp;
branches;
next	1.132;

1.132
date	2012.11.29.01.01.53;	author bluhm;	state Exp;
branches;
next	1.131;

1.131
date	2012.10.19.16.49.50;	author reyk;	state Exp;
branches;
next	1.130;

1.130
date	2012.10.03.08.33.31;	author reyk;	state Exp;
branches;
next	1.129;

1.129
date	2012.08.24.20.13.03;	author jmc;	state Exp;
branches;
next	1.128;

1.128
date	2012.05.05.17.24.41;	author benno;	state Exp;
branches;
next	1.127;

1.127
date	2012.04.24.14.56.09;	author jmc;	state Exp;
branches;
next	1.126;

1.126
date	2012.03.24.14.48.18;	author sthen;	state Exp;
branches;
next	1.125;

1.125
date	2012.01.20.12.16.41;	author camield;	state Exp;
branches;
next	1.124;

1.124
date	2011.06.24.14.42.36;	author jmc;	state Exp;
branches;
next	1.123;

1.123
date	2011.06.23.20.35.22;	author sthen;	state Exp;
branches;
next	1.122;

1.122
date	2011.05.23.10.44.59;	author reyk;	state Exp;
branches;
next	1.121;

1.121
date	2011.05.05.10.20.24;	author phessler;	state Exp;
branches;
next	1.120;

1.120
date	2011.04.30.07.52.33;	author sthen;	state Exp;
branches;
next	1.119;

1.119
date	2011.04.12.12.37.22;	author reyk;	state Exp;
branches;
next	1.118;

1.118
date	2011.04.07.14.57.45;	author jmc;	state Exp;
branches;
next	1.117;

1.117
date	2011.04.07.13.22.29;	author reyk;	state Exp;
branches;
next	1.116;

1.116
date	2010.10.26.15.26.58;	author jmc;	state Exp;
branches;
next	1.115;

1.115
date	2010.10.26.15.04.37;	author reyk;	state Exp;
branches;
next	1.114;

1.114
date	2010.08.01.22.18.35;	author sthen;	state Exp;
branches;
next	1.113;

1.113
date	2010.05.18.15.09.34;	author sobrado;	state Exp;
branches;
next	1.112;

1.112
date	2009.09.01.13.43.36;	author reyk;	state Exp;
branches;
next	1.111;

1.111
date	2009.08.27.11.15.20;	author jmc;	state Exp;
branches;
next	1.110;

1.110
date	2009.08.27.09.26.53;	author reyk;	state Exp;
branches;
next	1.109;

1.109
date	2009.08.13.13.51.21;	author reyk;	state Exp;
branches;
next	1.108;

1.108
date	2009.08.07.11.10.23;	author reyk;	state Exp;
branches;
next	1.107;

1.107
date	2009.06.02.20.22.30;	author jmc;	state Exp;
branches;
next	1.106;

1.106
date	2009.06.02.17.10.22;	author pyr;	state Exp;
branches;
next	1.105;

1.105
date	2009.06.02.17.05.57;	author jj;	state Exp;
branches;
next	1.104;

1.104
date	2009.04.24.14.20.24;	author reyk;	state Exp;
branches;
next	1.103;

1.103
date	2009.04.16.20.13.13;	author sobrado;	state Exp;
branches;
next	1.102;

1.102
date	2009.04.02.14.30.51;	author reyk;	state Exp;
branches;
next	1.101;

1.101
date	2009.04.01.14.56.38;	author reyk;	state Exp;
branches;
next	1.100;

1.100
date	2009.02.16.19.46.12;	author jmc;	state Exp;
branches;
next	1.99;

1.99
date	2008.12.05.16.37.56;	author reyk;	state Exp;
branches;
next	1.98;

1.98
date	2008.11.09.12.34.47;	author tobias;	state Exp;
branches;
next	1.97;

1.97
date	2008.10.05.20.37.52;	author jmc;	state Exp;
branches;
next	1.96;

1.96
date	2008.09.29.15.06.52;	author reyk;	state Exp;
branches;
next	1.95;

1.95
date	2008.09.29.14.53.35;	author reyk;	state Exp;
branches;
next	1.94;

1.94
date	2008.09.29.09.58.51;	author reyk;	state Exp;
branches;
next	1.93;

1.93
date	2008.08.08.22.49.33;	author reyk;	state Exp;
branches;
next	1.92;

1.92
date	2008.07.25.12.29.33;	author jmc;	state Exp;
branches;
next	1.91;

1.91
date	2008.07.22.23.17.37;	author reyk;	state Exp;
branches;
next	1.90;

1.90
date	2008.07.19.16.35.50;	author jmc;	state Exp;
branches;
next	1.89;

1.89
date	2008.07.19.10.52.32;	author reyk;	state Exp;
branches;
next	1.88;

1.88
date	2008.06.11.18.21.20;	author reyk;	state Exp;
branches;
next	1.87;

1.87
date	2008.06.11.07.28.02;	author jmc;	state Exp;
branches;
next	1.86;

1.86
date	2008.06.10.23.12.36;	author reyk;	state Exp;
branches;
next	1.85;

1.85
date	2008.06.10.22.02.28;	author reyk;	state Exp;
branches;
next	1.84;

1.84
date	2008.05.07.01.49.29;	author reyk;	state Exp;
branches;
next	1.83;

1.83
date	2008.05.06.16.23.52;	author jmc;	state Exp;
branches;
next	1.82;

1.82
date	2008.05.06.12.58.00;	author reyk;	state Exp;
branches;
next	1.81;

1.81
date	2008.05.06.12.24.12;	author reyk;	state Exp;
branches;
next	1.80;

1.80
date	2008.03.03.23.15.55;	author jmc;	state Exp;
branches;
next	1.79;

1.79
date	2008.03.03.16.58.41;	author reyk;	state Exp;
branches;
next	1.78;

1.78
date	2008.02.11.13.59.57;	author jmc;	state Exp;
branches;
next	1.77;

1.77
date	2008.02.11.10.42.50;	author reyk;	state Exp;
branches;
next	1.76;

1.76
date	2007.12.12.14.55.12;	author jmc;	state Exp;
branches;
next	1.75;

1.75
date	2007.12.09.09.52.12;	author jmc;	state Exp;
branches;
next	1.74;

1.74
date	2007.12.08.18.00.13;	author pyr;	state Exp;
branches;
next	1.73;

1.73
date	2007.12.08.17.14.26;	author reyk;	state Exp;
branches;
next	1.72;

1.72
date	2007.12.08.17.07.09;	author reyk;	state Exp;
branches;
next	1.71;

1.71
date	2007.12.07.17.28.05;	author reyk;	state Exp;
branches;
next	1.70;

1.70
date	2007.12.07.17.19.42;	author deraadt;	state Exp;
branches;
next	1.69;

1.69
date	2007.11.26.09.38.25;	author reyk;	state Exp;
branches;
next	1.68;

1.68
date	2007.11.25.20.02.02;	author reyk;	state Exp;
branches;
next	1.67;

1.67
date	2007.11.24.19.00.44;	author jmc;	state Exp;
branches;
next	1.66;

1.66
date	2007.11.24.16.13.50;	author reyk;	state Exp;
branches;
next	1.65;

1.65
date	2007.11.23.09.45.33;	author reyk;	state Exp;
branches;
next	1.64;

1.64
date	2007.11.23.09.39.42;	author reyk;	state Exp;
branches;
next	1.63;

1.63
date	2007.11.22.10.09.53;	author reyk;	state Exp;
branches;
next	1.62;

1.62
date	2007.11.21.20.24.28;	author reyk;	state Exp;
branches;
next	1.61;

1.61
date	2007.11.21.14.25.44;	author jmc;	state Exp;
branches;
next	1.60;

1.60
date	2007.11.21.14.12.04;	author reyk;	state Exp;
branches;
next	1.59;

1.59
date	2007.11.21.13.04.42;	author reyk;	state Exp;
branches;
next	1.58;

1.58
date	2007.11.21.10.19.34;	author pyr;	state Exp;
branches;
next	1.57;

1.57
date	2007.11.20.18.24.32;	author jmc;	state Exp;
branches;
next	1.56;

1.56
date	2007.11.20.15.54.55;	author reyk;	state Exp;
branches;
next	1.55;

1.55
date	2007.11.20.15.44.21;	author pyr;	state Exp;
branches;
next	1.54;

1.54
date	2007.10.22.15.45.40;	author jmc;	state Exp;
branches;
next	1.53;

1.53
date	2007.10.22.12.18.15;	author reyk;	state Exp;
branches;
next	1.52;

1.52
date	2007.09.28.13.29.56;	author pyr;	state Exp;
branches;
next	1.51;

1.51
date	2007.09.28.07.20.46;	author jmc;	state Exp;
branches;
next	1.50;

1.50
date	2007.09.28.01.11.58;	author pascoe;	state Exp;
branches;
next	1.49;

1.49
date	2007.09.10.11.59.22;	author reyk;	state Exp;
branches;
next	1.48;

1.48
date	2007.09.05.09.15.10;	author reyk;	state Exp;
branches;
next	1.47;

1.47
date	2007.09.04.14.15.05;	author pyr;	state Exp;
branches;
next	1.46;

1.46
date	2007.07.24.17.51.33;	author pyr;	state Exp;
branches;
next	1.45;

1.45
date	2007.05.31.19.20.24;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2007.05.29.17.12.04;	author reyk;	state Exp;
branches;
next	1.43;

1.43
date	2007.05.27.19.21.15;	author reyk;	state Exp;
branches;
next	1.42;

1.42
date	2007.04.12.14.45.45;	author reyk;	state Exp;
branches;
next	1.41;

1.41
date	2007.04.10.21.45.11;	author reyk;	state Exp;
branches;
next	1.40;

1.40
date	2007.03.21.00.08.08;	author reyk;	state Exp;
branches;
next	1.39;

1.39
date	2007.03.13.12.04.52;	author reyk;	state Exp;
branches;
next	1.38;

1.38
date	2007.03.12.12.21.09;	author reyk;	state Exp;
branches;
next	1.37;

1.37
date	2007.03.06.19.26.46;	author reyk;	state Exp;
branches;
next	1.36;

1.36
date	2007.02.27.18.04.51;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2007.02.27.13.38.58;	author reyk;	state Exp;
branches;
next	1.34;

1.34
date	2007.02.27.08.39.00;	author reyk;	state Exp;
branches;
next	1.33;

1.33
date	2007.02.27.08.02.33;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2007.02.26.20.48.48;	author pyr;	state Exp;
branches;
next	1.31;

1.31
date	2007.02.26.19.25.25;	author reyk;	state Exp;
branches;
next	1.30;

1.30
date	2007.02.26.13.41.52;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2007.02.26.13.03.30;	author pyr;	state Exp;
branches;
next	1.28;

1.28
date	2007.02.26.11.59.48;	author reyk;	state Exp;
branches;
next	1.27;

1.27
date	2007.02.25.09.04.59;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2007.02.24.16.14.02;	author reyk;	state Exp;
branches;
next	1.25;

1.25
date	2007.02.24.15.48.54;	author reyk;	state Exp;
branches;
next	1.24;

1.24
date	2007.02.24.00.22.32;	author reyk;	state Exp;
branches;
next	1.23;

1.23
date	2007.02.23.14.54.44;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2007.02.22.09.34.06;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2007.02.22.09.20.01;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2007.02.22.04.13.06;	author reyk;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.22.04.06.18;	author reyk;	state Exp;
branches;
next	1.18;

1.18
date	2007.02.22.03.32.39;	author reyk;	state Exp;
branches;
next	1.17;

1.17
date	2007.02.07.15.17.46;	author reyk;	state Exp;
branches;
next	1.16;

1.16
date	2007.01.29.18.38.15;	author pyr;	state Exp;
branches;
next	1.15;

1.15
date	2007.01.29.14.23.31;	author pyr;	state Exp;
branches;
next	1.14;

1.14
date	2007.01.10.13.42.19;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.01.09.13.50.11;	author pyr;	state Exp;
branches;
next	1.12;

1.12
date	2007.01.08.20.46.18;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2007.01.08.17.52.27;	author reyk;	state Exp;
branches;
next	1.10;

1.10
date	2007.01.08.17.05.48;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2007.01.08.13.37.26;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2007.01.03.09.42.30;	author reyk;	state Exp;
branches;
next	1.7;

1.7
date	2006.12.25.19.07.34;	author reyk;	state Exp;
branches;
next	1.6;

1.6
date	2006.12.25.18.12.14;	author reyk;	state Exp;
branches;
next	1.5;

1.5
date	2006.12.19.14.39.30;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2006.12.18.19.48.04;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.16.12.42.14;	author reyk;	state Exp;
branches;
next	1.2;

1.2
date	2006.12.16.11.52.51;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.16.11.45.07;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.178
log
@The config option is called "no splice", the parser rejects "nosplice".
@
text
@.\"	$OpenBSD: relayd.conf.5,v 1.177 2017/04/19 10:48:57 jmc Exp $
.\"
.\" Copyright (c) 2006 - 2016 Reyk Floeter <reyk@@openbsd.org>
.\" Copyright (c) 2006, 2007 Pierre-Yves Ritschard <pyr@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: April 19 2017 $
.Dt RELAYD.CONF 5
.Os
.Sh NAME
.Nm relayd.conf
.Nd relay daemon configuration file
.Sh DESCRIPTION
.Nm
is the configuration file for the relay daemon,
.Xr relayd 8 .
.Sh SECTIONS
.Nm
is divided into seven main sections:
.Bl -tag -width xxxx
.It Sy Macros
User-defined variables may be defined and used later, simplifying the
configuration file.
.It Sy Global Configuration
Global settings for
.Xr relayd 8 .
Do note that the config file allows global settings to be added after
defining tables in the config file, but those tables will use the
built-in defaults instead of the global settings below them.
.It Sy Tables
Table definitions describe a list of hosts,
in a similar fashion to
.Xr pf 4
tables.
They are used for relay, redirection, and router target selection with
the described options and health checking on the host they contain.
.It Sy Redirections
Redirections are translated to
.Xr pf 4
rdr-to rules for stateful forwarding to a target host from a
health-checked table on layer 3.
.It Sy Relays
Relays allow application layer load balancing, TLS acceleration, and
general purpose TCP proxying on layer 7.
.It Sy Protocols
Protocols are predefined settings and filter rules for relays.
.It Sy Routers
Routers are used to insert routes with health-checked gateways for
(WAN) link balancing.
.El
.Pp
Within the sections,
a host
.Ar address
can be specified by IPv4 address, IPv6 address, interface name,
interface group, or DNS hostname.
If the address is an interface name,
.Xr relayd 8
will look up the first IPv4 address and any other IPv4 and IPv6
addresses of the specified network interface.
A
.Ar port
can be specified by number or name.
The port name to number mappings are found in the file
.Pa /etc/services ;
see
.Xr services 5
for details.
.Pp
The current line can be extended over multiple lines using a backslash
.Pq Sq \e .
Comments can be put anywhere in the file using a hash mark
.Pq Sq # ,
and extend to the end of the current line.
Care should be taken when commenting out multi-line text:
the comment is effective until the end of the entire block.
.Pp
Argument names not beginning with a letter, digit, or underscore
must be quoted.
.Pp
Additional configuration files can be included with the
.Ic include
keyword, for example:
.Bd -literal -offset indent
include "/etc/relayd.conf.local"
.Ed
.Sh MACROS
Macros can be defined that will later be expanded in context.
Macro names must start with a letter, digit, or underscore,
and may contain any of those characters.
Macro names may not be reserved words (for example,
.Ic table ,
.Ic relay ,
or
.Ic timeout ) .
Macros are not expanded inside quotes.
.Pp
For example:
.Bd -literal -offset indent
www1="10.0.0.1"
www2="10.0.0.2"
table <webhosts> {
	$www1
	$www2
}
.Ed
.Sh GLOBAL CONFIGURATION
Here are the settings that can be set globally:
.Bl -tag -width Ds
.It Ic interval Ar number
Set the interval in seconds at which the hosts will be checked.
The default interval is 10 seconds.
.It Xo
.Ic log
.Pq Ic updates Ns | Ns Ic all
.Xc
Log state notifications after completed host checks.
Either only log the
.Ic updates
to new states or log
.Ic all
state notifications, even if the state didn't change.
The host state can be
.Dq up
(the health check completed successfully),
.Dq down
(the host is down or didn't match the check criteria),
or
.Dq unknown
(the host is disabled or has not been checked yet).
.It Ic prefork Ar number
When using relays, run the specified number of processes to handle
relayed connections.
This increases the performance and prevents delays when connecting
to a relay.
.Xr relayd 8
runs 3 relay processes by default and every process will handle
all configured relays.
.It Ic snmp Oo Ic trap Oc Op Qq Ar path
Send an SNMP trap when the state of a host changes.
.Xr relayd 8
will try to connect to
.Xr snmpd 8
over the AgentX SNMP socket specified by
.Ar path
and request it send a trap to the registered trap receivers.
If
.Ar path
is not specified, a default path of
.Pa /var/run/agentx.sock
will be used.
See
.Xr snmpd.conf 5
for more information about SNMP configuration.
.It Ic timeout Ar number
Set the global timeout in milliseconds for checks.
This can be overridden by the timeout value in the table definitions.
The default timeout is 200 milliseconds and it must not exceed the
global interval.
Please note that the default value is optimized for checks within the
same collision domain \(en use a higher timeout, such as 1000 milliseconds,
for checks of hosts in other subnets.
If this option is to be set, it should be placed before overrides in tables.
.El
.Sh TABLES
Tables are used to group a set of hosts as the target for redirections
or relays; they will be mapped to a
.Xr pf 4
table for redirections.
Tables may be defined with the following attribute:
.Bl -tag -width disable
.It Ic disable
Start the table disabled \(en no hosts will be checked in this table.
The table can be later enabled through
.Xr relayctl 8 .
.El
.Pp
Each table must contain at least one host
.Ar address ;
multiple hosts are separated by newline, comma, or whitespace.
Host entries may be defined with the following attributes:
.Bl -tag -width retry
.It Ic ip ttl Ar number
Change the default time-to-live value in the IP headers for host checks.
.It Ic parent Ar number
The optional parent option inherits the state from a parent
host with the specified identifier.
The check will be skipped for this host and copied from the parent host.
This can be used to prevent multiple checks on hosts with multiple IP
addresses for the same service.
The host identifiers are sequentially assigned to the configured hosts
starting with 1; it can be shown with the
.Xr relayctl 8
.Ic show summary
commands.
.It Ic priority Ar number
Change the route priority used when adding a route.
If not specified, the kernel will set a priority of 8
.Pq Dv RTP_STATIC .
In ordinary use, a fallback route should be added statically with a very
high (e.g. 52) priority.
Unused in all other modes.
.It Ic retry Ar number
The optional retry option adds a tolerance for failed host checks;
the check will be retried for
.Ar number
more times before setting the host state to down.
If this table is used by a relay, it will also specify the number of
retries for outgoing connection attempts.
.El
.Pp
For example:
.Bd -literal -offset indent
table <service> { 192.168.1.1, 192.168.1.2, 192.168.2.3 }
table <fallback> disable { 10.1.5.1 retry 2 }

redirect "www" {
	listen on www.example.com port 80
	forward to <service> check http "/" code 200
	forward to <fallback> check http "/" code 200
}
.Ed
.Pp
Tables are used by
.Ic forward to
directives in redirections or relays with a set of general options,
health-checking rules, and timings;
see the
.Sx REDIRECTIONS
and
.Sx RELAYS
sections for more information about the forward context.
Table specific configuration directives are described below.
Multiple options can be appended to
.Ic forward to
directives, separated by whitespaces.
.Pp
The following options will configure the health-checking method for
the table, and is mandatory for redirections:
.Bl -tag -width Ds
.It Xo
.Ic check http Ar path
.Op Ic host Ar hostname
.Ic code Ar number
.Xc
For each host in the table, verify that retrieving the URL
.Ar path
gives the HTTP return code
.Ar number .
If
.Ar hostname
is specified, it is used as the
.Dq Host:
header to query a specific hostname at the target host.
To validate the HTTP return code, use this shell command:
.Bd -literal -offset indent
$ echo -n "HEAD <path> HTTP/1.0\er\en\er\en" | \e
	nc <host> <port> | head -n1
.Ed
.Pp
This prints the status header including the actual return code:
.Bd -literal -offset indent
HTTP/1.1 200 OK
.Ed
.It Xo
.Ic check https Ar path
.Op Ic host Ar hostname
.Ic code Ar number
.Xc
This has the same effect as above but wraps the HTTP request in TLS.
.It Xo
.Ic check http Ar path
.Op Ic host Ar hostname
.Ic digest Ar string
.Xc
For each host in the table, verify that retrieving the URL
.Ar path
produces non-binary content whose message digest matches the defined string.
The algorithm used is determined by the string length of the
.Ar digest
argument, either SHA1 (40 characters) or MD5 (32 characters).
If
.Ar hostname
is specified, it is used as the
.Dq Host:
header to query a specific hostname at the target host.
The digest does not take the HTTP headers into account.
Do not specify a binary object (such as a graphic) as the target of the
request, as
.Nm
expects the data returned to be a string.
To compute the digest, use this simple command:
.Bd -literal -offset indent
$ ftp -o - http://host[:port]/path | sha1
.Ed
.Pp
This gives a digest that can be used as-is in a digest statement:
.Bd -literal -offset indent
a9993e36476816aba3e25717850c26c9cd0d89d
.Ed
.It Xo
.Ic check https Ar path
.Op Ic host Ar hostname
.Ic digest Ar string
.Xc
This has the same effect as above but wraps the HTTP request in TLS.
.It Ic check icmp
Ping hosts in this table to determine whether they are up or not.
This method will automatically use ICMP or ICMPV6 depending on the
address family of each host.
.It Ic check script Ar path
Execute an external program to check the host state.
The program will be executed for each host by specifying the hostname
on the command line:
.Bd -literal -offset indent
/usr/local/bin/checkload.pl front-www1.private.example.com
.Ed
.Pp
.Xr relayd 8
expects a positive return value on success and zero on failure.
Note that the script will be executed with the privileges of the
.Qq _relayd
user and terminated after
.Ar timeout
milliseconds.
.It Xo
.Ic check send
.Ar data
.Ic expect
.Ar pattern
.Op Ic tls
.Xc
For each host in the table, a TCP connection is established on the
port specified, then
.Ar data
is sent.
Incoming data is then read and is expected to match against
.Ar pattern
using shell globbing rules.
If
.Ar data
is an empty string or
.Ic nothing
then nothing is sent on the connection and data is immediately
read.
This can be useful with protocols that output a banner like
SMTP, NNTP, and FTP.
If the
.Ic tls
keyword is present,
the transaction will occur in a TLS tunnel.
.It Ic check tcp
Use a simple TCP connect to check that hosts are up.
.It Ic check tls
Perform a complete TLS handshake with each host to check their availability.
.El
.Pp
The following general table options are available:
.Bl -tag -width Ds
.It Ic demote Ar group
Enable the per-table
.Xr carp 4
demotion option.
This will increment the carp demotion counter for the
specified interface group if all hosts in the table are down.
For more information on interface groups,
see the
.Ic group
keyword in
.Xr ifconfig 8 .
.It Ic interval Ar number
Override the global interval and specify one for this table.
It must be a multiple of the global interval.
.It Ic timeout Ar number
Set the timeout in milliseconds for each host that is checked using
TCP as the transport.
This will override the global timeout, which is 200 milliseconds by default.
.El
.Pp
The following options will set the scheduling algorithm to select a
host from the specified table:
.Bl -tag -width Ds
.It Ic mode hash Op Ar key
Balances the outgoing connections across the active hosts based on the
.Ar key ,
IP address and port of the relay.
Additional input can be fed into the
hash by looking at HTTP headers and GET variables;
see the
.Sx PROTOCOLS
section below.
This mode is only supported by relays.
.It Ic mode least-states
Forward each outgoing connection to the active host with the least
active
.Xr pf 4
states.
This mode is only supported by redirections.
.It Ic mode loadbalance Op Ar key
Balances the outgoing connections across the active hosts based on the
.Ar key ,
the source IP address of the client, and the IP address and port of the relay.
This mode is only supported by relays.
.It Ic mode random
Distributes the outgoing connections randomly through all active hosts.
This mode is supported by redirections and relays.
.It Ic mode roundrobin
Distributes the outgoing connections using a round-robin scheduler
through all active hosts.
This is the default mode and will be used if no option has been specified.
This mode is supported by redirections and relays.
.It Ic mode source-hash Op Ar key
Balances the outgoing connections across the active hosts based on the
.Ar key
and the source IP address of the client.
This mode is supported by redirections and relays.
.El
.Pp
The optional
.Ar key
argument can be specified for the
.Ic hash ,
.Ic loadbalance ,
and
.Ic source-hash
modes as either a hex value with a leading
.Ql 0x
or as a string.
If omitted,
.Xr relayd 8
generates a random key when the configuration is loaded.
.Sh REDIRECTIONS
Redirections represent a
.Xr pf 4
rdr-to rule.
They are used for stateful redirections to the hosts in the specified
tables.
.Xr pf 4
rewrites the target IP addresses and ports of the incoming
connections, operating on layer 3.
The configuration directives that are valid in the
.Ic redirect
context are described below:
.Bl -tag -width Ds
.It Ic disable
The redirection is initially disabled.
It can be later enabled through
.Xr relayctl 8 .
.It Xo
.Ic forward to
.Pf < Ar table Ns >
.Op Ic port Ar number
.Ar options ...
.Xc
Specify the tables of target hosts to be used; see the
.Sx TABLES
section above for information about table options.
If the
.Ic port
option is not specified, the first port from the
.Ic listen on
directive will be used.
This directive can be specified twice \(en the second entry will be used
as the backup table if all hosts in the main table are down.
At least one entry for the main table is mandatory.
.It Xo
.Ic listen on Ar address
.Op ip-proto
.Ic port Ar port
.Op Ic interface Ar name
.Xc
Specify an
.Ar address
and a
.Ar port
to listen on.
.Xr pf 4
will redirect incoming connections for the specified target to the
hosts in the main or backup table.
The
.Ar port
argument can optionally specify a port range instead of a single port;
the format is
.Ar min-port : Ns Ar max-port .
The optional argument
.Ar ip-proto
can be used to specify an IP protocol like
.Cm tcp
or
.Cm udp ;
it defaults to
.Cm tcp .
The rule can be optionally restricted to a given interface name.
.It Xo
.Op Ic match
.Ic pftag Ar name
.Xc
Automatically tag packets passing through the
.Xr pf 4
rdr-to rule with the name supplied.
This allows simpler filter rules.
The optional
.Ic match
keyword will change the default rule action from
.Ql pass in quick
to
.Ql match in
to allow further evaluation in the pf ruleset using the
.Cm tagged Ar name
rule option.
.It Xo
.Ic route to
.Pf < Ar table Ns >
.Op Ic port Ar number
.Ar options ...
.Xc
Like the
.Ic forward to
directive, but directly routes the packets to the target host without
modifying the target address using a
.Xr pf 4
route-to rule.
This can be used for
.Dq direct server return
to force the target host to respond via a different gateway.
Note that hosts have to accept sessions for the same address as
the gateway, which is typically done by configuring a loopback
interface on the host with this address.
.It Ic session timeout Ar seconds
Specify the inactivity timeout in seconds for established redirections.
The default timeout is 600 seconds (10 minutes).
The maximum is 2147483647 seconds (68 years).
.It Ic sticky-address
This has the same effect as specifying sticky-address
for an rdr-to rule in
.Xr pf.conf 5 .
It will ensure that multiple connections from the same source are
mapped to the same redirection address.
.El
.Sh RELAYS
Relays will forward traffic between a client and a target server.
In contrast to redirections and IP forwarding in the network stack, a
relay will accept incoming connections from remote clients as a
server, open an outgoing connection to a target host, and forward
any traffic between the target host and the remote client,
operating on layer 7.
A relay is also called an application layer gateway or layer 7 proxy.
.Pp
The main purpose of a relay is to provide advanced load balancing
functionality based on specified protocol characteristics, such as
HTTP headers, to provide TLS acceleration and to allow
basic handling of the underlying application protocol.
.Pp
The
.Ic relay
configuration directives are described below:
.Bl -tag -width Ds
.It Ic disable
Start the relay but immediately close any accepted connections.
.It Xo
.Op Ic transparent
.Ic forward
.Op Ic with tls
.Ic to
.Ar address
.Op Ic port Ar port
.Ar options ...
.Xc
Specify the address and port of the target host to connect to.
If the
.Ic port
option is not specified, the port from the
.Ic listen on
directive will be used.
Use the
.Ic transparent
keyword to enable fully-transparent mode; the source address of the
client will be retained in this case.
.Pp
The
.Ic with tls
directive enables client-side TLS mode to connect to the remote host.
Verification of server certificates can be enabled by setting the
.Ic ca file
option in the protocol section.
.Pp
The following options may be specified for forward directives:
.Bl -tag -width Ds
.It Ic inet
If the requested destination is an IPv6 address,
.Xr relayd 8
will forward the connection to an IPv4 address which is determined by
the last 4 octets of the original IPv6 destination.
For example, if the original IPv6 destination address is
2001:db8:7395:ffff::a01:101, the session is relayed to the IPv4
address 10.1.1.1 (a01:101).
.It Ic inet6 Ar address-prefix
If the requested destination is an IPv4 address,
.Xr relayd 8
will forward the connection to an IPv6 address which is determined by
setting the last 4 octets of the specified IPv6
.Ar address-prefix
to the 4 octets of the original IPv4 destination.
For example, if the original IPv4 destination address is 10.1.1.1 and
the specified address prefix is 2001:db8:7395:ffff::, the session is
relayed to the IPv6 address 2001:db8:7395:ffff::a01:101.
.It Ic retry Ar number
The optional host
.Ic retry
option will be used as a tolerance for failed
host connections; the connection will be retried for
.Ar number
more times.
.El
.It Xo
.Ic forward to
.Pf < Ar table Ns >
.Op Ic port Ar port
.Ar options ...
.Xc
Like the previous directive, but connect to a host from the specified
table; see the
.Sx TABLES
section above for information about table options.
This directive can be specified multiple times \(en subsequent entries
will be used as the backup table if all hosts in the previous table
are down.
At least one entry for the main table is mandatory.
As above, use the
.Ic with tls
directive to enable client-side TLS mode when connecting to the remote host.
.It Xo
.Ic forward to
.Ic destination
.Ar options ...
.Xc
When redirecting connections with a divert-to rule in
.Xr pf.conf 5
to a relay listening on localhost, this directive will
look up the real destination address of the intended target host,
allowing the relay to be run as a transparent proxy.
If an additional
.Ic forward to
directive to a specified address or table is present,
it will be used as a backup if the lookup failed.
As above, use the
.Ic with tls
directive to enable client-side TLS mode when connecting to the remote host.
.It Xo
.Ic forward to
.Ic nat lookup
.Ar options ...
.Xc
Like the previous directive, but for redirections with rdr-to in
.Xr pf.conf 5 .
.It Xo
.Ic listen on Ar address Ic port Ar port
.Op Ic tls
.Xc
Specify the address and port for the relay to listen on.
The relay will accept incoming connections to the specified address.
.Pp
If the
.Ic tls
keyword is present, the relay will accept connections using the
encrypted TLS protocol.
The relay will attempt to look up a private key in
.Pa /etc/ssl/private/address:port.key
and a public certificate in
.Pa /etc/ssl/address:port.crt ,
where
.Ar address
is the specified IP address and
.Ar port
is the specified port that the relay listens on.
If these files are not present, the relay will continue to look in
.Pa /etc/ssl/private/address.key
and
.Pa /etc/ssl/address.crt .
See
.Xr ssl 8
for details about SSL/TLS server certificates.
.It Ic protocol Ar name
Use the specified protocol definition for the relay.
The generic TCP protocol options will be used by default;
see the
.Sx PROTOCOLS
section below.
.It Ic session timeout Ar seconds
Specify the inactivity timeout in seconds for accepted sessions.
The default timeout is 600 seconds (10 minutes).
The maximum is 2147483647 seconds (68 years).
.El
.Sh TLS RELAYS
In addition to plain TCP,
.Xr relayd 8
supports the Transport Layer Security (TLS) cryptographic protocol for
authenticated and encrypted relays.
TLS is the successor of the original Secure Sockets Layer (SSL) protocol,
but the term SSL is sometimes still used in modern TLS-based applications.
.Xr relayd 8
can operate as a TLS client or server to offer a variety of options
for different use cases related to TLS.
.Bl -tag -width Ds
.It Ic TLS client
When configuring the relay
.Ic forward
statements with the
.Ic with tls
directive,
.Xr relayd 8
will enable client-side TLS to connect to the remote host.
This is commonly used for TLS tunneling and transparent encapsulation
of plain TCP connections.
See the
.Ic forward to
description in the
.Sx RELAYS
section for more details.
.It Ic TLS server
When specifying the
.Ic tls
keyword in the relay
.Ic listen
statements,
.Xr relayd 8
will accept connections from clients as a TLS server.
This mode is also known as
.Dq SSL/TLS acceleration .
See the
.Ic listen on
description in the
.Sx RELAYS
section for more details.
.It Ic TLS client and server
When combining both modes, TLS server and client,
.Xr relayd 8
can filter TLS connections as a man-in-the-middle.
This combined mode is also called
.Dq TLS inspection .
The configuration requires additional X.509 certificate settings;
see the
.Ic ca key
description in the
.Sx PROTOCOLS
section for more details.
.El
.Pp
When configured for
.Dq TLS inspection
mode,
.Xr relayd 8
will listen for incoming connections which have been diverted to the
local socket by PF.
Before accepting and negotiating the incoming TLS connection as a
server, it will look up the original destination address on the
diverted socket, and pre-connect to the target server as a TLS client
to obtain the remote TLS certificate.
It will update or patch the obtained TLS certificate by replacing the
included public key with its local server key because it doesn't have
the private key of the remote server certificate.
It also updates the X.509 issuer name to the local CA subject name and
signs the certificate with its local CA key.
This way it keeps all the other X.509 attributes that are already
present in the server certificate, including the "green bar" extended
validation attributes.
Now it finally accepts the TLS connection from the diverted client
using the updated certificate and continues to handle the connection
and to connect to the remote server.
.Sh PROTOCOLS
Protocols are templates defining settings and rules for relays.
They allow setting generic TCP options, TLS settings, and rules
for the selected application layer protocol.
.Pp
The protocol directive is available for a number of different
application layer protocols.
There is no generic handler for UDP-based protocols because it is a
stateless datagram-based protocol which has to look into the
application layer protocol to find any possible state information.
.Bl -tag -width Ds
.It Ic dns protocol
(UDP)
Domain Name System (DNS) protocol.
The requested IDs in the DNS header will be used to match the state.
.Xr relayd 8
replaces these IDs with random values to compensate for
predictable values generated by some hosts.
.It Ic http protocol
Handle the HyperText Transfer Protocol
(HTTP, or "HTTPS" if encapsulated in a TLS tunnel).
.It Xo
.Op Ic tcp
.Ic protocol
.Xc
Generic handler for TCP-based protocols.
This is the default.
.El
.Pp
The available configuration directives are described below:
.Bl -tag -width Ds
.It Xo
.Pq Ic block Ns | Ns Ic pass Ns | Ns Ic match
.Op Ar rule
.Xc
Specify one or more rules to filter connections based on their
network or application layer headers;
see the
.Sx FILTER RULES
section for more details.
.It Ic return error Op Ar option
Return an error response to the client if an internal operation or the
forward connection to the client failed.
By default, the connection will be silently dropped.
The effect of this option depends on the protocol: HTTP will send an
error header and page to the client before closing the connection.
Additional valid options are:
.Bl -tag -width Ds
.It Ic style Ar string
Specify a Cascading Style Sheet (CSS) to be used for the returned
HTTP error pages, for example:
.Bd -literal -offset indent
body { background: #a00000; color: white; }
.Ed
.El
.It Ic tcp Ar option
Enable or disable the specified TCP/IP options; see
.Xr tcp 4
and
.Xr ip 4
for more information about the options.
Valid options are:
.Bl -tag -width Ds
.It Ic backlog Ar number
Set the maximum length the queue of pending connections may grow to.
The backlog option is 10 by default and is limited by the
.Ic kern.somaxconn
.Xr sysctl 8
variable.
.It Ic ip minttl Ar number
This option for the underlying IP connection may be used to discard packets
with a TTL lower than the specified value.
This can be used to implement the
Generalized TTL Security Mechanism (GTSM)
according to RFC 5082.
.It Ic ip ttl Ar number
Change the default time-to-live value in the IP headers.
.It Ic nodelay
Enable the TCP NODELAY option for this connection.
This is recommended to avoid delays in the relayed data stream,
e.g. for SSH connections.
The default is
.Ic no nodelay .
.It Ic no splice
Disable socket splicing for zero-copy data transfer.
The default is to enable socket splicing.
.It Ic sack
Use selective acknowledgements for this connection.
The default is
.Ic no sack .
.It Ic socket buffer Ar number
Set the socket-level buffer size for input and output for this
connection.
This will affect the TCP window size.
.El
.It Ic tls Ar option
Set the TLS options and session settings.
This is only used if TLS is enabled in the relay.
Valid options are:
.Bl -tag -width Ds
.It Ic ca cert Ar path
Specify a CA certificate for TLS inspection.
For more information, see the
.Ic ca key
option below.
.It Ic ca file Ar path
This option enables CA verification in TLS client mode.
The daemon will load the CA (Certificate Authority) certificates from
the specified path to verify the server certificates.
.Ox
provides a default CA bundle in
.Pa /etc/ssl/cert.pem .
.It Ic ca key Ar path Ic password Ar password
Specify a CA key for TLS inspection.
The
.Ar password
argument will specify the password to decrypt the CA key
(typically an RSA key).
This option will enable TLS inspection if the following conditions
are true:
.Pp
.Bl -bullet -compact -offset indent
.It
TLS server mode is enabled by the
.Ic listen
directive:
.Ic listen on ... tls .
.It
TLS client mode and divert lookups are enabled by the
.Ic forward
directive:
.Ic forward with tls to destination .
.It
The
.Ic ca cert
option is specified.
.It
The
.Ic ca key
option is specified.
.El
.It Ic ciphers Ar string
Set the string defining the TLS cipher suite.
If not specified, the default value
.Ql HIGH:!aNULL
will be used (strong crypto cipher suites without anonymous DH).
See the CIPHERS section of
.Xr openssl 1
for information about SSL/TLS cipher suites and preference lists.
.It Ic client-renegotiation
Allow client-initiated renegotiation.
To mitigate a potential DoS risk,
the default is
.Ic no client-renegotiation .
.It Ic ecdh Op Ic curve Ar name
Set a named curve to use when generating EC keys for ECDHE-based
cipher suites with Perfect Forward Secrecy (PFS).
If the curve
.Ar name
is not specified, the default curve
.Cm prime256v1
will be used.
ECDHE is enabled by default,
but can be disabled using
.Ic no ecdh .
.It Ic edh Op Ic params Ar maximum
Enable EDH-based cipher suites with Perfect Forward Secrecy (PFS) for
older clients that do not support ECDHE.
If the
.Ar maximum
length of the DH params for EDH is not specified, the default value of
1024 bits will be used.
Other possible values are numbers between 1024 and 8192, including
1024, 1536, 2048, 4096, or 8192.
Values higher than 1024 bits can cause incompatibilities with older
TLS clients.
The default is
.Ic no edh .
.It Ic no cipher-server-preference
Prefer the client's cipher list over the server's preferences when
choosing a cipher for the connection.
The default is to prefer the server's cipher list.
.It Ic no session tickets
Disable TLS session tickets.
.Xr relayd 8
supports stateless TLS session tickets (RFC 5077) to implement TLS session
resumption.
The default is to enable session tickets.
.It Ic no tlsv1.2
Disable the TLSv1.2 protocol.
The default is to enable TLSv1.2.
.It Ic sslv3
Enable the SSLv3 protocol.
The default is
.Ic no sslv3 .
.It Ic tlsv1
Enable all TLSv1 protocols.
This is an alias that includes
.Ic tlsv1.0 ,
.Ic tlsv1.1 ,
and
.Ic tlsv1.2 .
The default is
.Ic no tlsv1 .
.It Ic tlsv1.0
Enable the TLSv1.0 protocol.
The default is
.Ic no tlsv1.0 .
.It Ic tlsv1.1
Enable the TLSv1.1 protocol.
The default is
.Ic no tlsv1.1 .
.El
.El
.Sh FILTER RULES
Relays have the ability to filter connections based
on their network or application layer headers.
Filter rules apply options to connections based on the specified
filter parameters.
.Pp
For each connection that is processed by a relay, the filter rules are
evaluated in sequential order, from first to last.
For
.Ic block
and
.Ic pass ,
the last matching rule decides what action is taken;
if no rule matches the connection, the default action is to establish
the connection without any additional action.
For
.Ic match ,
rules are evaluated every time they match;
the pass/block state of a connection remains unchanged.
.Pp
The filter action may be one of the following:
.Bl -tag -width Ds
.It Ic block
The connection is blocked.
If a
.Ic block
rule matches a new connection attempt, it will not be established.
.Ic block
rules can also trigger for existing connections after evaluating
application layer parameters;
any connection of the relay session will be instantly dropped.
.It Ic match
The connection is matched.
This action does not alter the connection state, but allows
additional parameters to the connection.
.It Ic pass
The connection is passed;
.Xr relayd 8
will continue to process the relay session normally.
.El
.Pp
These filter parameters can be used in the rules:
.Bl -tag -width Ds
.It Ic request No or Ic response
A relay session always consists of two connections:
the
.Ic request ,
a client initiating a new connection to a server via the relay,
and the
.Ic response ,
the server accepting the connection.
Depending on the protocol,
an established session can be purely request/response-based (like
HTTP), exchange data in a bidirectional way (like arbitrary TCP
sessions), or just contain a single datagram and an optional response
(like UDP-based protocols).
But the client always
.Em requests
to communicate with a remote peer; the server.
.It Ic quick
If a connection is matched by a rule with the
.Ic quick
option set,
the rule is considered to be the last matching rule and any further
evaluation is skipped.
.It Ic inet No or Ic inet6
Only match connections with the specified address family,
either of type IPv4 or IPv6.
.It Ic forward to Pf < Ar table Ns >
Forward the request to a server in the specified table.
With this option, requests can be passed to specific backend servers.
A corresponding
.Ic forward to
declaration in the
.Sx RELAYS
section is required.
.It Ic label Ar string
The label will be printed as part of the error message if the
.Ic return error
option is set and may contain HTML tags, for example:
.Bd -literal -offset indent
block request url digest 5c1e03f58f8ce0b457474ffb371fd1ef \e
	label "<a href='http://example.com/adv.pl?id=7359'>\e
	Advisory provided by example.com</a>"
.Ed
.It Ic no Ar parameter
Reset a sticky parameter that was previously set by a matching rule.
The
.Ar parameter
is a keyword that can be either
.Ic label
or
.Ic tag .
.It Ic tag Ar string
Add a "sticky" tag to connections matching this filter rule.
Tags can be used to filter the connection by further rules using the
.Ic tagged
option.
Only one tag is assigned per connection;
the tag will be replaced if the connection is already tagged.
.It Ic tagged Ar string
Match the connection if it is already tagged with a given tag by a
previous rule.
.El
.Pp
The following parameters are available when using the
.Ic http
protocol:
.Bl -tag -width Ds
.It Ic method Ar name
Match the HTTP request method.
The method is specified by
.Ar name
and can be either
.Ic ACL ,
.Ic BASELINE-CONTROL ,
.Ic CHECKIN ,
.Ic CHECKOUT ,
.Ic CONNECT ,
.Ic COPY ,
.Ic DELETE ,
.Ic GET ,
.Ic HEAD ,
.Ic LABEL ,
.Ic LOCK ,
.Ic MERGE ,
.Ic MKACTIVITY ,
.Ic MKCOL ,
.Ic MKREDIRECTREF ,
.Ic MKWORKSPACE ,
.Ic MOVE ,
.Ic OPTIONS ,
.Ic ORDERPATCH ,
.Ic PATCH ,
.Ic POST ,
.Ic PROPFIND ,
.Ic PROPPATCH ,
.Ic PUT ,
.Ic REPORT ,
.Ic SEARCH ,
.Ic TRACE ,
.Ic UNCHECKOUT ,
.Ic UNLOCK ,
.Ic UPDATE ,
.Ic UPDATEREDIRECTREF ,
or
.Ic VERSION-CONTROL .
.It Xo
.Ar type Ar option
.Oo Oo Ic digest Oc
.Pq Ar key Ns | Ns Ic file Ar path
.Oo Ic value Ar value Oc Oc
.Xc
Match a specified HTTP header entity and an optional
.Ic key
and
.Ic value .
An
.Ic option
can be specified to modify the matched entity or to trigger an event.
The entity is extracted from the HTTP request or response header and
can be either of
.Ar type
.Ic cookie ,
.Ic header ,
.Ic path ,
.Ic query ,
or
.Ic url .
.Pp
Instead of a single
.Ar key ,
multiple keys can be loaded from a
.Ic file
specified by
.Ar path
that contains one key per line.
Lines will be stripped at the first whitespace or newline character
and any empty lines or lines beginning with a hash mark
.Pq Ql #
will be ignored.
.Pp
If the
.Ic digest
keyword is specified,
compare the message digest of the key against the defined string.
The algorithm used is determined by the string length of the
.Ar key
argument, either SHA1 (40 characters) or MD5 (32 characters).
To compute the digest,
for example for a
.Ic url ,
use this simple command:
.Bd -literal -offset indent
$ echo -n "example.com/path/?args" | sha1
.Ed
.El
.Pp
.Bq Ar type
may be one of:
.Bl -tag -width Ds
.It Ic cookie Ar option Oo Ar key Oo Ic value Ar value Oc Oc
Look up the entity as a value in the Cookie header.
This type is only available with the direction
.Ic request .
.It Ic header Ar option Oo Ar key Oo Ic value Ar value Oc Oc
Look up the entity in the application protocol headers, like HTTP
headers in
.Ic http
mode.
.It Ic path Ar option Oo Ar key Oo Ic value Ar value Oc Oc
Look up the entity as a value in the URL path when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request .
The
.Ar key
will match the path of the requested URL without the hostname
and query and the value will match the complete query,
for example:
.Bd -literal -offset indent
block path "/index.html"
block path "/cgi-bin/t.cgi" value "foo=bar*"
.Ed
.It Ic query Ar option Oo Ar key Oo Ic value Ar value Oc Oc
Look up the entity as a query variable in the URL when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request ,
for example:
.Bd -literal -offset indent
# Will match /cgi-bin/example.pl?foo=bar&ok=yes
pass request query "foo" value "bar"
.Ed
.It Ic url Ar option Oo Oo Ic digest Oc Ar key Oo Ic value Ar value Oc Oc
Look up the entity as a URL suffix/prefix expression consisting of a
canonicalized hostname without port or suffix and a path name or
prefix when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request ,
for example:
.Bd -literal -offset indent
block url "example.com/index.html"
block url "example.com/test.cgi?val=1"
.Ed
.Pp
.Xr relayd 8
will match the full URL and different possible suffix/prefix
combinations by stripping subdomains and path components (up to 5
levels), and the query string.
For example, the following
lookups will be done for
http://www.example.com:81/1/2/3/4/5.html?query=yes:
.Bd -literal -offset indent
www.example.com/1/2/3/4/5.html?query=yes
www.example.com/1/2/3/4/5.html
www.example.com/
www.example.com/1/
www.example.com/1/2/
www.example.com/1/2/3/
example.com/1/2/3/4/5.html?query=yes
example.com/1/2/3/4/5.html
example.com/
example.com/1/
example.com/1/2/
example.com/1/2/3/
.Ed
.El
.Pp
.Bq Ar option
may be one of:
.Bl -tag -width Ds
.It Ic append
Append the specified
.Ar value
to a protocol entity with the selected
.Ar key
name.
If it does not exist, it will be created with the new value.
.Pp
The value string may contain predefined macros that will be expanded
at runtime:
.Pp
.Bl -tag -width $SERVER_ADDR -offset indent -compact
.It Ic $REMOTE_ADDR
The IP address of the connected client.
.It Ic $REMOTE_PORT
The TCP source port of the connected client.
.It Ic $SERVER_ADDR
The configured IP address of the relay.
.It Ic $SERVER_PORT
The configured TCP server port of the relay.
.It Ic $SERVER_NAME
The server software name of
.Xr relayd 8 .
.It Ic $TIMEOUT
The configured session timeout of the relay.
.El
.It Ic hash
Feed the
.Ar value
of the selected entity into the load balancing hash to select the
target host.
See the
.Ic table
keyword in the
.Sx RELAYS
section above.
.It Ic log
Log the
.Ar key
name and the
.Ar value
of the entity.
.It Ic remove
Remove the entity with the selected
.Ar key
name.
.It Ic set
Like the
.Ic append
directive above, but change the contents of the specified entity.
If
.Ar key
does not exist in the request, it will be created with the new
.Ar value .
.Pp
The
.Ar value
string
may contain predefined macros that will be expanded at runtime,
as detailed for the
.Ic append
directive above.
.El
.Sh ROUTERS
Routers represent routing table entries in the kernel forwarding
database, see
.Xr route 4 ,
and a table of associated gateways.
They are used to dynamically insert or remove routes with gateways
based on their availability and health-check results.
A router can include multiple network statements and a single forward
statement with a table of one or more gateways.
All entries in a single router directive must match the same address
family, either IPv4 or IPv6.
.Pp
The kernel supports multipath routing when multiple gateways exist to
the same destination address.
The multipath routing behaviour can be changed globally using the
.Xr sysctl 8
variables
.Va net.inet.ip.multipath
and
.Va net.inet6.ip6.multipath .
With the default setting of 0,
the first route selected will be used for subsequent packets to that
destination regardless of source.
Setting it to 1 will enable load balancing based on the packet source
address across gateways; multiple routes with the same priority are
used equally.
The kernel will also check the link state of the related network
interface and try a different route if it is not active.
.Pp
The configuration directives that are valid in the
.Ic routers
context are described below:
.Bl -tag -width Ds
.It Xo
.Ic forward to
.Pf < Ar table Ns >
.Ic port Ar number
.Ar options ...
.Xc
Specify the table of target gateways to be used; see the
.Sx TABLES
section above for information about table options.
This entry is mandatory and must be specified once.
.It Xo
.Ic route
.Ar address Ns Li / Ns Ar prefix
.Xc
Specify the network address and prefix length of a route destination
that is reachable via the active gateways.
This entry must be specified at least once in a router directive.
.It Ic rtable Ar id
Add the routes to the kernel routing table with the specified
.Ar id .
.It Ic rtlabel Ar label
Add the routes with the specified
.Ar label
to the kernel routing table.
.El
.Sh FILES
.Bl -tag -width Ds -compact
.It Pa /etc/relayd.conf
.Xr relayd 8
configuration file.
.Pp
.It Pa /etc/services
Service name database.
.Pp
.It Pa /etc/ssl/address.crt
.It Pa /etc/ssl/address:port.crt
.It Pa /etc/ssl/private/address.key
.It Pa /etc/ssl/private/address:port.key
Location of the relay TLS server certificates, where
.Ar address
is the configured IP address
and
.Ar port
is the configured port number of the relay.
.Pp
.It Pa /etc/ssl/cert.pem
Default location of the CA bundle that can be used with
.Xr relayd 8 .
.El
.Sh EXAMPLES
This configuration file would create a redirection service
.Dq www
which load balances four hosts
and falls back to one host containing a
.Dq sorry page :
.Bd -literal -offset indent
www1=front-www1.private.example.com
www2=front-www2.private.example.com
www3=front-www3.private.example.com
www4=front-www4.private.example.com

interval 5

table <phphosts> { $www1, $www2, $www3, $www4 }
table <sorryhost> disable { sorryhost.private.example.com }

redirect "www" {
	listen on www.example.com port 8080 interface trunk0
	listen on www6.example.com port 80 interface trunk0

	pftag REDIRECTED

	forward to <phphosts> port 8080 timeout 300 \e
		check http "/" digest "630aa3c2f..."
	forward to <sorryhost> port 8080 timeout 300 check icmp
}
.Ed
.Pp
It is possible to specify multiple listen directives with different IP
protocols in a single redirection configuration:
.Bd -literal -offset indent
redirect "dns" {
	listen on dns.example.com tcp port 53
	listen on dns.example.com udp port 53

	forward to <dnshosts> port 53 check tcp
}
.Ed
.Pp
The following configuration would add a relay to forward
secure HTTPS connections to a pool of HTTP webservers
using the
.Ic loadbalance
mode (TLS acceleration and layer 7 load balancing).
The HTTP protocol definition will add two HTTP headers containing
address information of the client and the server, set the
.Dq Keep-Alive
header value to the configured session timeout,
and include the
.Dq sessid
variable in the hash to calculate the target host:
.Bd -literal -offset indent
http protocol "https" {
	match header set "X-Forwarded-For" \e
		value "$REMOTE_ADDR"
	match header set "X-Forwarded-By" \e
		value "$SERVER_ADDR:$SERVER_PORT"
	match header set "Keep-Alive" value "$TIMEOUT"

	match query hash "sessid"
	match hash "sessid"

	pass
	block path "/cgi-bin/index.cgi" value "*command=*"

	tls { no tlsv1.0, ciphers "HIGH" }
}

relay "tlsaccel" {
	listen on www.example.com port 443 tls
	protocol "https"
	forward to <phphosts> port 8080 mode loadbalance check tcp
}
.Ed
.Pp
The second relay example will accept incoming connections to port
2222 and forward them to a remote SSH server.
The TCP
.Ic nodelay
option will allow a
.Dq smooth
SSH session without delays between keystrokes or displayed output on
the terminal:
.Bd -literal -offset indent
protocol "myssh" {
	tcp { nodelay, socket buffer 65536 }
}

relay "sshforward" {
	listen on www.example.com port 2222
	protocol "myssh"
	forward to shell.example.com port 22
}
.Ed
.Pp
The following relay example will configure
.Dq TLS inspection
as described in the
.Sx TLS RELAYS
section.
To start, first generate a new local CA key and certificate:
.Bd -literal -offset indent
# openssl req -x509 -days 365 -newkey rsa:2048 \e
	-keyout /etc/ssl/private/ca.key -out /etc/ssl/ca.crt
.Ed
.Pp
A TLS server key and self-signed cert for 127.0.0.1 are also required;
see
.Ic listen on
in the
.Sx RELAYS
section for more details about certificate locations.
Configure the packet filter with a matching divert rule in
.Xr pf.conf 5 :
.Bd -literal -offset indent
# Divert incoming HTTPS traffic to relayd
pass in on vlan1 inet proto tcp to port 443 \e
	divert-to localhost port 8443
.Ed
.Pp
And finally configure the TLS inspection in
.Nm :
.Bd -literal -offset indent
http protocol httpfilter {
	return error

	pass
	match label "Prohibited!"
	block url "social.network.example.com/"

	# New configuration directives for SSL/TLS Interception
	tls ca key "/etc/ssl/private/ca.key" password "password123"
	tls ca cert "/etc/ssl/ca.crt"
}

relay tlsinspect {
	listen on 127.0.0.1 port 8443 tls
	protocol httpfilter
	forward with tls to destination
}
.Ed
.Pp
The next simple router configuration example can be used to run
redundant, health-checked WAN links:
.Bd -literal -offset indent
table <gateways> { $gw1 ip ttl 1, $gw2 ip ttl 1 }
router "uplinks" {
	route 0.0.0.0/0
	forward to <gateways> check icmp
}
.Ed
.Sh SEE ALSO
.Xr relayctl 8 ,
.Xr relayd 8 ,
.Xr snmpd 8 ,
.Xr ssl 8
.Sh HISTORY
The
.Nm
file format, formerly known as
.Ic hoststated.conf ,
first appeared in
.Ox 4.1 .
It was renamed to
.Nm
in
.Ox 4.3 .
.Sh AUTHORS
.An -nosplit
The
.Xr relayd 8
program was written by
.An Pierre-Yves Ritschard Aq Mt pyr@@openbsd.org
and
.An Reyk Floeter Aq Mt reyk@@openbsd.org .
.Sh CAVEATS
.Xr relayd 8
verification of TLS server certificates is based on a static CA bundle
and
.Xr relayd 8
currently does not support CRLs (Certificate Revocation Lists).
@


1.177
log
@better example; from hiltjo posthuma
ok sthen
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.176 2017/03/25 23:14:04 claudio Exp $
d18 1
a18 1
.Dd $Mdocdate: March 25 2017 $
d864 1
a864 1
.It Ic nosplice
@


1.176
log
@X-Forwarded-By should be the server $SERVER_ADDR instead of the client
$REMOTE_ADDR.
Noticed and diff provided by Hiltjo Posthuma (hiltjo at codemadness dot org)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.175 2017/02/27 22:25:58 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: February 27 2017 $
d1470 1
a1470 1
	match header append "X-Forwarded-For" \e
d1472 1
a1472 1
	match header append "X-Forwarded-By" \e
@


1.175
log
@update an example in the relayd.conf manpage, that was not converted
to the new syntax 2 years ago. Found by Michael W. Lucas, thanks!
ok tb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.174 2017/02/02 08:24:16 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: February 2 2017 $
d1473 1
a1473 1
		value "$REMOTE_ADDR:$SERVER_PORT"
@


1.174
log
@Disable client-initiated TLS renegotiation by default.

It is rarely needed and imposes a light DoS risk.  LibreSSL's libssl
allows to turn it off with a simple SSL_OP_NO_CLIENT_RENEGOTIATION
option instead of the complicated implementation that was used before.
It now turns it off completely instead of allowing one initial
client-initiated renegotiation.

It can still be enabled with "tls client-renegotiation".

ok benno@@ beck@@ jsing@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.173 2016/09/03 18:28:45 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 3 2016 $
d1229 1
a1229 1
request query expect "bar" from "foo"
@


1.173
log
@partial rewrite of the tcp/tls option parts: the trouble was
with options which accepted a "no" prefix, it was difficult to
see what was enabled and what was disabled;

ok reyk (claudio ok'd an earlier version of the diff too)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.172 2016/09/01 10:49:48 claudio Exp $
d18 1
a18 1
.Dd $Mdocdate: September 1 2016 $
d930 5
a962 4
.It Ic no client-renegotiation
Disallow client-initiated renegotiation,
to mitigate a potential DoS risk.
The default is to allow client-initiated renegotiation.
@


1.172
log
@Switch from the not really working session cache (because of the multiprocess
nature of relayd) to tls session tickets to do TLS session resumption.
TLS session tickets do not need to store SSL session data in the server but
instead send an encrypted ticket to the clients that allows to resume the
session. This is mostly stateless (apart from the encryption keys).
relayd now ensures that all relay processes use the same key to encrypt
the tickets. Keys are rotated every 2h and there is a primary and backup key.
The tls session timeout is set to 2h to hint to the clients how long the
session tickets is supposed to be alive.
Input and OK benno@@, reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.171 2016/08/18 14:12:51 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 18 2016 $
d506 17
a549 17
.It Xo
.Op Ic match
.Ic pftag Ar name
.Xc
Automatically tag packets passing through the
.Xr pf 4
rdr-to rule with the name supplied.
This allows simpler filter rules.
The optional
.Ic match
keyword will change the default rule action from
.Ql pass in quick
to
.Ql match in
to allow further evaluation in the pf ruleset using the
.Cm tagged Ar name
rule option.
a599 7
.It Ic retry Ar number
The optional host
.Ic retry
option will be used as a tolerance for failed
host connections; the connection will be retried for
.Ar number
more times.
d618 7
d858 1
a858 4
.It Xo
.Op Ic no
.Ic nodelay
.Xc
d862 6
a867 4
.It Xo
.Op Ic no
.Ic sack
.Xc
d869 2
a874 6
.It Xo
.Op Ic no
.Ic splice
.Xc
Use socket splicing for zero-copy data transfer.
This option is enabled by default.
a929 8
.It Oo Ic no Oc Ic cipher-server-preference
Prefer the server's cipher list over the client's preferences when
choosing a cipher for the connection;
enabled by default.
.It Oo Ic no Oc Ic client-renegotiation
Allow client-initiated renegotiation;
enabled by default.
Disable to mitigate a potential DoS risk.
d938 3
a940 3
ECDHE is enabled by default.
.It Ic no ecdh
Disable ECDHE support.
d952 12
a963 8
.It Ic no edh
Disable EDH support.
This is the default.
.It Xo
.Op Ic no
.Ic session tickets
.Xc
Disable TLS session tickets; enabled by default.
d967 9
a975 10
.It Xo
.Op Ic no
.Ic sslv3
.Xc
Enable the SSLv3 protocol;
disabled by default.
.It Xo
.Op Ic no
.Ic tlsv1
.Xc
d982 10
a991 18
.It Xo
.Op Ic no
.Ic tlsv1.0
.Xc
Enable the TLSv1.0 protocol;
disabled by default.
.It Xo
.Op Ic no
.Ic tlsv1.1
.Xc
Enable the TLSv1.1 protocol;
disabled by default.
.It Xo
.Op Ic no
.Ic tlsv1.2
.Xc
Disable the TLSv1.2 protocol;
enabled by default.
d1062 8
a1069 2
.\" XXX .It Ic from
.\" XXX .It Ic to
a1096 8
.It Ic forward to Pf < Ar table Ns >
Forward the request to a server in the specified table.
With this option, requests can be passed to specific backend servers.
A corresponding
.Ic forward to
declaration in the
.Sx RELAYS
section is required.
d1593 1
a1593 1
Verification of TLS server certificates is based on a static CA bundle
@


1.171
log
@word fix, from remi locherer; ok reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.170 2016/07/29 10:09:27 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: July 29 2016 $
d968 8
a975 8
.It Ic session cache Ar value
Set the maximum size of the TLS session cache.
If the
.Ar value
is zero, the default size defined by the TLS library will be used.
A positive number will set the maximum size in bytes and the keyword
.Ic disable
will disable the TLS session cache.
@


1.170
log
@Bump copyright in files that I touched last.
(btw. hostated-hoststated-relayd's 10th birthday is on Dec 16.)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.169 2016/07/29 10:00:12 reyk Exp $
d169 1
a169 1
The default interval is 200 milliseconds and it must not exceed the
@


1.169
log
@Add support for common WebDAV methods;  from httpd.

Found and tested by Michael Lechtermann
OK benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.168 2015/11/06 18:06:29 bentley Exp $
d3 1
a3 1
.\" Copyright (c) 2006 - 2015 Reyk Floeter <reyk@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: November 6 2015 $
@


1.168
log
@relayd.conf(5) macro cleanup.

- use <> instead of \*(Lt and \*(Gt
- use <> instead of Aq (Aq is not the same as <> in a UTF-8 locale)
- replace Ar usage when appropriate
- mark up RTP_STATIC with Dv

with input from jmc@@ schwarze@@, ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.167 2015/10/27 12:27:54 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: October 27 2015 $
d1128 4
d1137 1
d1139 2
d1142 2
d1146 1
d1152 2
d1155 4
d1160 1
a1160 1
.Ic UNLOCK .
@


1.167
log
@change cipher-server-preference to be on by default. It can be disabled with
 no cipher-server-preference
this makes more clients select ciphers with pfs.
requested and ok by reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.166 2015/10/24 11:37:17 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: October 24 2015 $
d113 1
a113 1
table \*(Ltwebhosts\*(Gt {
d135 1
a135 1
.Ar up
d137 1
a137 1
.Ar down
d140 1
a140 1
.Ar unknown
d161 1
a161 1
.Ar /var/run/agentx.sock
d209 2
a210 1
If not specified, the kernel will set a priority of 8 (RTP_STATIC).
d225 2
a226 2
table \*(Ltservice\*(Gt { 192.168.1.1, 192.168.1.2, 192.168.2.3 }
table \*(Ltfallback\*(Gt disable { 10.1.5.1 retry 2 }
d230 2
a231 2
	forward to \*(Ltservice\*(Gt check http "/" code 200
	forward to \*(Ltfallback\*(Gt check http "/" code 200
d438 1
a438 1
.Ar 0x
d462 1
a462 1
.Aq Ar table
d499 1
a499 1
.Ar tcp
d501 1
a501 1
.Ar udp ;
d503 1
a503 1
.Ar tcp .
d507 1
a507 1
.Aq Ar table
d544 1
a544 1
.Ar pass in quick
d546 1
a546 1
.Ar match in
d548 1
a548 1
.Ar tagged name
d628 1
a628 1
.Aq Ar table
d854 1
a854 1
.Ar Generalized TTL Security Mechanism (GTSM)
d930 1
a930 1
.Ar HIGH:!aNULL
d949 1
a949 1
.Ar prime256v1
d960 1
a960 2
.Ar 1024
bits will be used.
d962 1
a962 6
.Ar 1024 ,
.Ar 1536 ,
.Ar 2048 ,
.Ar 4096 ,
or
.Ar 8192 .
d1021 1
a1021 1
.Ar block
d1023 1
a1023 1
.Ar pass ,
d1028 1
a1028 1
.Ar match ,
d1069 1
a1069 1
.Ar requests
d1088 2
a1089 2
	label "\*(Lta href='http://example.com/adv.pl?id=7359'\*(Gt\e
	Advisory provided by example.com\*(Lt/a\*(Gt"
d1109 1
a1109 1
.It Ic forward to Aq Ar table
d1123 1
a1123 1
.It Ic method Ar NAME
d1176 3
a1178 2
and any empty lines or lines beginning with a hash mark (`#') will be
ignored.
d1254 1
a1254 1
.Ar http://www.example.com:81/1/2/3/4/5.html?query=yes :
d1372 1
a1372 1
.Aq Ar table
d1433 2
a1434 2
table \*(Ltphphosts\*(Gt { $www1, $www2, $www3, $www4 }
table \*(Ltsorryhost\*(Gt disable { sorryhost.private.example.com }
d1442 1
a1442 1
	forward to \*(Ltphphosts\*(Gt port 8080 timeout 300 \e
d1444 1
a1444 1
	forward to \*(Ltsorryhost\*(Gt port 8080 timeout 300 check icmp
d1455 1
a1455 1
	forward to \*(Ltdnshosts\*(Gt port 53 check tcp
d1491 1
a1491 1
	forward to \*(Ltphphosts\*(Gt port 8080 mode loadbalance check tcp
d1565 1
a1565 1
table \*(Ltgateways\*(Gt { $gw1 ip ttl 1, $gw2 ip ttl 1 }
d1568 1
a1568 1
	forward to \*(Ltgateways\*(Gt check icmp
@


1.166
log
@clarify where "with tls" can be used.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.165 2015/08/10 20:45:35 sthen Exp $
d18 1
a18 1
.Dd $Mdocdate: August 10 2015 $
d937 1
a937 1
disabled by default.
@


1.165
log
@typo, decl*e*ration; from Larry Hynes
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.164 2015/07/24 15:25:08 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 24 2015 $
d639 3
d656 3
@


1.164
log
@an TLS -> a TLS; from thanos tsouanas
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.163 2015/05/15 20:40:26 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: May 15 2015 $
d1113 1
a1113 1
decleration in the
@


1.163
log
@Fix kill'n'yank error:  the port is mandatory in relay listen on statements.

Pointed out by Alex Greif

OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.162 2015/05/15 19:26:37 jmc Exp $
d361 1
a361 1
the transaction will occur in an TLS tunnel.
d706 1
a706 1
can operate as an TLS client or server to offer a variety of options
d731 1
a731 1
will accept connections from clients as an TLS server.
d761 1
a761 1
diverted socket, and pre-connect to the target server as an TLS client
d794 1
a794 1
(HTTP, or "HTTPS" if encapsulated in an TLS tunnel).
d1524 1
a1524 1
An TLS server key and self-signed cert for 127.0.0.1 are also required;
@


1.162
log
@client/server mox ip;
from trondd
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.161 2015/03/09 17:20:38 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: March 9 2015 $
d661 1
a661 2
.Ic listen on Ar address
.Op Ic port Ar port
a665 5
If the
.Ic port
option is not specified, the port from the
.Ic listen on
directive will be used.
@


1.161
log
@Make relayd TLSv1.2-only by default.

OK krw@@ benno@@

Based on revision 1.66 of usr.sbin/httpd/parse.y:
Make httpd TLSv1.2-only by default.  Some older browsers, like IE 10,
will be incompatible with this change.  We do this early in the
release cycle, so there is a good chance to get more experience with
the impact of it and the upcoming restricted cipher modes.

OK jsing@@ deraadt@@ benno@@ bmercer@@ krw@@ florian@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.160 2015/01/13 09:24:20 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: January 13 2015 $
d908 1
a908 1
TLS client mode is enabled by the
d913 1
a913 1
TLS server mode and divert lookups are enabled by the
@


1.160
log
@bump copyright year
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.159 2015/01/02 18:28:23 sobrado Exp $
d18 1
a18 1
.Dd $Mdocdate: January 2 2015 $
d991 1
a991 2
Disable the TLSv1 protocols;
enabled by default.
d1001 2
a1002 2
Disable the TLSv1.0 protocol;
enabled by default.
d1007 2
a1008 2
Disable the TLSv1.1 protocol;
enabled by default.
@


1.159
log
@PFS stands for Perfect Forward Secrecy.

ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.158 2014/12/27 16:09:51 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 2006 - 2014 Reyk Floeter <reyk@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: December 27 2014 $
@


1.158
log
@zap trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.157 2014/12/26 22:55:02 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: December 26 2014 $
d944 1
a944 1
cipher suites with Perfect Forward Security (PFS).
d954 1
a954 1
Enable EDH-based cipher suites with Perfect Forward Security (PFS) for
@


1.157
log
@Document forward to in protocols.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.156 2014/12/23 13:18:23 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: December 23 2014 $
d1116 1
a1116 1
Forward the request to a server in the specified table. 
@


1.156
log
@pf now supports source-hash and random with tables so we can allow it
in redirections.  Thanks for help and input from jsg and yasuoka who
reminded me to dig out and update these old diffs for pf and relayd.

ok jsg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.155 2014/12/18 21:26:09 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: December 18 2014 $
d1115 8
@


1.155
log
@an hex -> a hex;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.154 2014/12/18 20:55:01 reyk Exp $
d416 1
a416 1
This mode is only supported by relays.
d426 1
a426 1
This mode is only supported by relays.
@


1.154
log
@Update relayd to use siphash instead of sys/hash.  The source-hash,
loadbalance and hash modes use a random key by default that can be
forced to be a static key with a new configuration argument.

With input from Max Fillinger.

ok tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.153 2014/12/12 10:05:09 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: December 12 2014 $
d436 1
a436 1
modes as either an hex value with a leading
@


1.153
log
@Change the keyword "ssl" to "tls" to reflect reality since we
effectively disabled support for the SSL protocols.  SSL remains a
common term describing SSL/TLS, there is some controvery about this
change, and the name really doesn't matter, but I feel confident about
it now.

(btw., sthen@@ pointed out some historical context:
http://tim.dierks.org/2014/05/security-standards-and-name-changes-in.html)

OK benno@@, with input from tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.152 2014/11/07 13:48:06 jsing Exp $
d18 1
a18 1
.Dd $Mdocdate: November 7 2014 $
d393 1
a393 1
.It Ic mode hash
d395 2
a396 2
hashed name of the relay, the hashed name of the table, and the IP
address and port of the relay.
d409 1
a409 1
.It Ic mode loadbalance
d411 2
a412 2
hashed name of the relay, the hashed name of the table, the source IP
address of the client, and the IP address and port of the relay.
d422 1
a422 1
.It Ic mode source-hash
d424 1
a424 1
hashed name of the redirection or relay, the hashed name of the table,
d428 14
@


1.152
log
@Remove the sslv2 option since LibreSSL has no SSLv2 support (however retain
SSL_OP_NO_SSLv2 in case you happen to be running relayd on another platform
with another SSL library). Also fix the SSLv3 handling so that 'no sslv3'
actually works as intended.

ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.151 2014/10/21 02:29:54 lteo Exp $
d18 1
a18 1
.Dd $Mdocdate: October 21 2014 $
d54 1
a54 1
Relays allow application layer load balancing, SSL acceleration, and
d280 1
a280 1
This has the same effect as above but wraps the HTTP request in SSL.
d316 1
a316 1
This has the same effect as above but wraps the HTTP request in SSL.
d341 1
a341 1
.Op Ic ssl
d359 1
a359 1
.Ic ssl
d361 1
a361 3
the transaction will occur in an SSL tunnel.
.It Ic check ssl
Perform a complete SSL handshake with each host to check their availability.
d364 2
d547 1
a547 1
HTTP headers, to provide SSL acceleration and to allow
d559 1
a559 1
.Op Ic with ssl
d577 2
a578 2
.Ic with ssl
directive enables client-side SSL mode to connect to the remote host.
d649 1
a649 1
.Op Ic ssl
d660 1
a660 1
.Ic ssl
d662 1
a662 1
encrypted SSL protocol.
d678 1
a678 1
for details about SSL server certificates.
d690 1
a690 1
.Sh SSL RELAYS
d693 4
a696 5
supports the Secure Sockets Layer (SSL) and Transport Layer Security
(TLS) cryptographic protocols for authenticated and encrypted relays.
TLS is the successor of the original SSL protocol but the term SSL can
refer to either of the protocols in
.Nm .
d698 2
a699 2
can operate as an SSL client or server to offer a variety of options
for different use cases related to SSL.
d701 1
a701 1
.It Ic SSL client
d705 1
a705 1
.Ic with ssl
d708 2
a709 2
will enable client-side SSL to connect to the remote host.
This is commonly used for SSL tunneling and transparent encapsulation
d716 1
a716 1
.It Ic SSL server
d718 1
a718 1
.Ic ssl
d723 1
a723 1
will accept connections from clients as an SSL server.
d725 1
a725 1
.Dq SSL acceleration .
d731 2
a732 2
.It Ic SSL client and server
When combining both modes, SSL server and client,
d734 1
a734 1
can filter SSL connections as a man-in-the-middle.
d736 1
a736 1
.Dq SSL inspection .
d746 1
a746 1
.Dq SSL inspection
d751 1
a751 1
Before accepting and negotiating the incoming SSL connection as a
d753 3
a755 3
diverted socket, and pre-connect to the target server as an SSL client
to obtain the remote SSL certificate.
It will update or patch the obtained SSL certificate by replacing the
d763 1
a763 1
Now it finally accepts the SSL connection from the diverted client
d768 1
a768 1
They allow setting generic TCP options, SSL settings, and rules
d786 1
a786 1
(HTTP, or "HTTPS" if encapsulated in an SSL tunnel).
d821 48
a868 3
.It Ic ssl Ar option
Set the SSL options and session settings.
This is only used if SSL is enabled in the relay.
d872 1
a872 1
Specify a CA certificate for SSL inspection.
d877 1
a877 1
This option enables CA verification in SSL client mode.
d884 1
a884 1
Specify a CA key for SSL inspection.
d889 1
a889 1
This option will enable SSL inspection if the following conditions
d894 1
a894 1
SSL client mode is enabled by the
d897 1
a897 1
.Ic listen on ... ssl .
d899 1
a899 1
SSL server mode and divert lookups are enabled by the
d902 1
a902 1
.Ic forward with ssl to destination .
d913 1
a913 1
Set the string defining the SSL cipher suite.
d919 1
a919 1
for information about SSL cipher suites and preference lists.
d955 1
a955 1
SSL clients.
d960 1
a960 1
Set the maximum size of the SSL session cache.
d963 1
a963 1
is zero, the default size defined by the SSL library will be used.
d966 1
a966 1
will disable the SSL session cache.
a1002 45
.It Ic tcp Ar option
Enable or disable the specified TCP/IP options; see
.Xr tcp 4
and
.Xr ip 4
for more information about the options.
Valid options are:
.Bl -tag -width Ds
.It Ic backlog Ar number
Set the maximum length the queue of pending connections may grow to.
The backlog option is 10 by default and is limited by the
.Ic kern.somaxconn
.Xr sysctl 8
variable.
.It Ic ip minttl Ar number
This option for the underlying IP connection may be used to discard packets
with a TTL lower than the specified value.
This can be used to implement the
.Ar Generalized TTL Security Mechanism (GTSM)
according to RFC 5082.
.It Ic ip ttl Ar number
Change the default time-to-live value in the IP headers.
.It Xo
.Op Ic no
.Ic nodelay
.Xc
Enable the TCP NODELAY option for this connection.
This is recommended to avoid delays in the relayed data stream,
e.g. for SSH connections.
.It Xo
.Op Ic no
.Ic sack
.Xc
Use selective acknowledgements for this connection.
.It Ic socket buffer Ar number
Set the socket-level buffer size for input and output for this
connection.
This will affect the TCP window size.
.It Xo
.Op Ic no
.Ic splice
.Xc
Use socket splicing for zero-copy data transfer.
This option is enabled by default.
.El
d1391 1
a1391 1
Location of the relay SSL server certificates, where
d1446 1
a1446 1
mode (SSL acceleration and layer 7 load balancing).
d1455 1
a1455 1
http protocol "http_ssl" {
d1468 1
a1468 1
	ssl { no tlsv1.0, ciphers "HIGH" }
d1471 3
a1473 3
relay "sslaccel" {
	listen on www.example.com port 443 ssl
	protocol "http_ssl"
d1499 1
a1499 1
.Dq SSL inspection
d1501 1
a1501 1
.Sx SSL RELAYS
d1509 1
a1509 1
An SSL server key and self-signed cert for 127.0.0.1 are also required;
d1523 1
a1523 1
And finally configure the SSL inspection in
d1533 3
a1535 3
	# New configuration directives for SSL Interception
	ssl ca key "/etc/ssl/private/ca.key" password "password123"
	ssl ca cert "/etc/ssl/ca.crt"
d1538 2
a1539 2
relay sslinspect {
	listen on 127.0.0.1 port 8443 ssl
d1541 1
a1541 1
	forward with ssl to destination
d1580 1
a1580 1
Verification of SSL server certificates is based on a static CA bundle
@


1.151
log
@Remove SSLv2 and SSLv3 references from the example relayd.conf and the
relevant example snippet in the relayd.conf(5) man page.

Change the default SSL protocols in the example file/man page to
"no tlsv1.0" (suggested by sthen@@), which will enable the TLSv1.1
and TLSv1.2 protocols only.

feedback/ok jsing@@ reyk@@ sthen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.150 2014/10/15 11:06:16 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: October 15 2014 $
a922 6
.It Xo
.Op Ic no
.Ic sslv2
.Xc
Enable the SSLv2 protocol;
disabled by default.
@


1.150
log
@Disable SSLv3 by default.

OK sthen@@ jsing@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.149 2014/09/05 10:19:26 blambert Exp $
d18 1
a18 1
.Dd $Mdocdate: September 5 2014 $
d1475 1
a1475 1
	ssl { sslv2, ciphers "MEDIUM:HIGH" }
@


1.149
log
@revert previous; was based on a work-in-progress, as well
as being an incomplete and therefore incorrect adaptation

apologies to anybody who got bitten by this mistake

ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.148 2014/08/29 09:03:36 blambert Exp $
d18 1
a18 1
.Dd $Mdocdate: July 11 2014 $
d933 7
a939 1
Disable the SSLv3 protocol;
d941 5
d948 13
a960 1
.Ic tlsv1
d962 1
a962 1
Disable the TLSv1/SSLv3.1 protocol;
@


1.148
log
@Implement consistent host hashing for relayd, based on
work done by andre@@

Re-add a randomized hash seed (which had apparently
gotten inadvertently removed in the past).

Allows for multiple relayd instances to be configured
to forward traffic to the same host, falling back to
the random seed when not explicitly configured to do so.

ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.147 2014/07/11 16:59:38 reyk Exp $
d393 1
a393 1
.It Ic mode hash Op Ic seed Ar string
d409 1
a409 1
.It Ic mode loadbalance Op Ic seed Ar string
d422 1
a422 1
.It Ic mode source-hash Op Ic seed Ar string
a427 12
.Pp
For the
.Ic hash ,
.Ic loadbalance ,
and
.Ic source-hash
modes, a random 32-bit hash seed is chosen during configuration.
In order to facilitate consistent hashing between instances of
.Xr relayd 8
operating on multiple hosts, an explicit
.Ic seed
string may be specified.
@


1.147
log
@Add support for EDH to provide perfect forward secrecy for older SSL
clients.  Additionally, add options for disallowing client-initiated
renegotiations and to prefer the server's cipher list over the
client's preferences.

This work is based on a diff by Markus Gebert at hostpoint.ch, and was
discussed with jsing@@ resulting in a few different defaults.

ok benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.146 2014/07/09 19:17:08 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 9 2014 $
d393 1
a393 1
.It Ic mode hash
d409 1
a409 1
.It Ic mode loadbalance
d422 1
a422 1
.It Ic mode source-hash
d428 12
@


1.146
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.145 2014/07/09 17:01:30 reyk Exp $
d876 9
a884 1
.It Ic ecdh curve Ar name
d886 4
a889 4
cipher suites with Perfect Forward Security (PFS), or
.Ar none
to disable ECDHE support.
If not specified, the default curve
d892 23
@


1.145
log
@The "tag" keyword in redirections has been renamed to "pftag".
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.144 2014/07/09 16:42:05 reyk Exp $
d802 1
a802 1
Specify one ore more rules to filter connections based on their
d958 1
a958 1
Relays have the ability have the ability to filter connections based
d990 1
a990 1
This action does not alter the connection state, but allows to apply
d1013 1
a1013 1
But the client always 
d1106 1
a1106 1
.Ar key,
d1124 1
a1124 1
for example for an
d1248 1
a1248 1
.Ar key 
@


1.144
log
@Replace the protocol directives for HTTP with a new generic filtering
language.  The grammar is inspired by pf and allows to write versatile
last-matching filter rules in protocol sections starting with the
"pass", "block" or "match" keywords.  This work was started almost two
years ago and replaces large parts of relayd(8)'s HTTP and filtering
code.  The initial version reimplements and extends HTTP filtering,
but will be improved to support generic TCP and other protocols later.

With some testing, feedback, and help from benno@@ and andre@@.

OK benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.143 2014/06/25 11:05:15 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: June 25 2014 $
d520 1
a520 1
.Ic tag Ar name
d1376 1
a1376 1
	tag REDIRECTED
@


1.143
log
@sync copyright to reality according to my last changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.142 2014/04/18 13:55:26 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: April 18 2014 $
d57 1
a57 1
Protocols are predefined protocol handlers and settings for relays.
d768 3
a770 3
Protocols are templates defining actions and settings for relays.
They allow setting generic TCP options, SSL settings, and actions
specific to the selected application layer protocol.
d799 2
a800 5
.Op Ar direction
.Op Ar type
.Ar action
.Op Ic marked Ar id
.Op Ic log
d802 5
a806 270
Define an action for the selected entity.
The optional
.Ic log
keyword will log the entity name and the value and
the optional
.Ic marked
keyword requires that the session has been marked with a given
identifier in order to execute the action.
The actions are dependent on the underlying application
.Ic protocol .
.El
.Pp
.Bq Ar direction
may be one of:
.Bl -tag -width Ds
.It Ic request
Handle the data stream from the client to the relay, like HTTP
requests.
This is the default if the
.Ar direction
directive is omitted.
.It Ic response
Handle the data stream from the target host to the relay, like
HTTP server replies.
.El
.Pp
.Bq Ar type
may be one of:
.Bl -tag -width Ds
.It Ic cookie
Look up the entity as a value in the Cookie header when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request .
.It Ic header
Look up the entity in the application protocol headers, like HTTP
headers in
.Ic http
mode.
.It Ic path
Look up the entity as a value in the URL path when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request .
The
.Ar key
will match the path of the requested URL without the hostname
and query and the value will match the complete query,
for example:
.Bd -literal -offset indent
request path filter "/index.html"
request path filter "foo=bar*" from "/cgi-bin/t.cgi"
.Ed
.It Ic query
Look up the entity as a query variable in the URL when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request ,
for example:
.Bd -literal -offset indent
# Will match /cgi-bin/example.pl?foo=bar&ok=yes
request query expect "bar" from "foo"
.Ed
.It Ic url
Look up the entity as a URL suffix/prefix expression consisting of a
canonicalized hostname without port or suffix and a path name or
prefix when using the
.Ic http
protocol.
This type is only available with the direction
.Ic request ,
for example:
.Bd -literal -offset indent
request url filter "example.com/index.html"
request url filter "example.com/test.cgi?val=1"
.Ed
.Pp
.Xr relayd 8
will match the full URL and different possible suffix/prefix
combinations by stripping subdomains and path components (up to 5
levels), and the query string.
For example, the following
lookups will be done for
.Ar http://www.example.com:81/1/2/3/4/5.html?query=yes :
.Bd -literal -offset indent
www.example.com/1/2/3/4/5.html?query=yes
www.example.com/1/2/3/4/5.html
www.example.com/
www.example.com/1/
www.example.com/1/2/
www.example.com/1/2/3/
example.com/1/2/3/4/5.html?query=yes
example.com/1/2/3/4/5.html
example.com/
example.com/1/
example.com/1/2/
example.com/1/2/3/
.Ed
.El
.Pp
.Bq Ar action
may be one of:
.Bl -tag -width Ds
.It Ic append Ar value Ic to Ar key
Append the specified value to a protocol entity with the selected name.
When using the
.Ic http
protocol,
.Ic key
will indicate a specified HTTP header.
If
.Ar key
does not exist in the request, it will be created with the value
set to
.Ar value .
.Pp
The
.Ar value
string
may contain predefined macros that will be expanded at runtime:
.Pp
.Bl -tag -width $SERVER_ADDR -offset indent -compact
.It Ic $REMOTE_ADDR
The IP address of the connected client.
.It Ic $REMOTE_PORT
The TCP source port of the connected client.
.It Ic $SERVER_ADDR
The configured IP address of the relay.
.It Ic $SERVER_PORT
The configured TCP server port of the relay.
.It Ic $SERVER_NAME
The server software name of
.Xr relayd 8 .
.It Ic $TIMEOUT
The configured session timeout of the relay.
.El
.It Ic change Ar key Ic to Ar value
Like the
.Ic append
directive above, but change the contents of the specified entity.
If
.Ar key
does not exist in the request, it will be created with the value
set to
.Ar value .
.Pp
The
.Ar value
string
may contain predefined macros that will be expanded at runtime,
as detailed for the
.Ic append
directive above.
.It Ic expect Ar value Ic from Ar key
Expect an entity
.Ar key
and match against
.Ar value
using shell globbing rules.
If the entity is not present or the value doesn't match, the connection
will be dropped.
.It Xo
.Ic expect
.Op Ic digest
.Ar key
.Xc
Expect an entity
.Ar key
with any possible value.
This is the short form of
.Ic expect Ar * Ic from Ar key .
.Pp
If the
.Ic digest
keyword is specified,
compare the message digest of the entity against the defined string.
The algorithm used is determined by the string length of the
.Ar key
argument, either SHA1 (40 characters) or MD5 (32 characters).
To compute the digest, use this simple command:
.Bd -literal -offset indent
$ echo -n "example.com/path/?args" | sha1
.Ed
.It Ic expect file Ar path
Like the directive above, but load the non-digest keys from an
external file with the specified
.Ar path
containing one key per line.
Lines will be stripped at the first whitespace or newline character.
Any empty lines or lines beginning with a hash mark
.Pq Sq #
will be ignored.
.It Ic filter Ar value Ic from Ar key
Like the
.Ic expect Ar .. Ic from
directive above, but drop any connections with the specified entity
.Ar key
and a matching
.Ar value .
.It Xo
.Ic filter
.Op Ic digest
.Ar key
.Xc
Like the
.Ic expect
directive above, but drop any connections with the specified entity
.Ar key
and any possible value.
This is the short form of
.Ic filter Ar * Ic from Ar key .
.It Ic filter file Ar path
Like the directive above, but load the non-digest keys from
.Ar path .
See
.Ic expect file Ar path
for more information.
.It Ic hash Ar key
Feed the value of the selected entity into the load balancing hash to
select the target host.
See the
.Ic table
keyword in the
.Sx RELAYS
section above.
.It Ic log Ar key
Log the name and the value of the entity.
.It Ic log file Ar path
Like the directive above, but load the keys from
.Ar path .
See
.Ic expect file Ar path
for more information.
.It Xo
.Ic mark
.Op Ar value Ic from
.Ar key Ic with Ar id
.Xc
Mark the session with the specified identifier (a positive number
between 1 and 65535) if the specified condition matches.
Note that the
.Ic mark
action does not accept the
.Ic marked
option (see above).
.It Ic label Ar string
Add a label to subsequently added actions.
The label will be printed as part of the error message if the
.Ic return error
option is set and may contain HTML tags, for example:
.Bd -literal -offset indent
label "\*(Lta href='http://example.com/advisory.pl?id=7359'\*(Gt\e
	Advisory provided by example.com\*(Lt/a\*(Gt"
url filter digest 5c1e03f58f8ce0b457474ffb371fd1ef
url filter digest 80c1a7b8337462093ef8359c57b4d56a
no label
.Ed
.It Ic no label
Do not set a label for subsequently added actions; this is the default.
.It Ic remove Ar key
Remove the entity with the selected name.
.It Ic remove file Ar path
Like the directive above, but load the keys from
.Ar path .
See
.Ic expect file Ar path
for more information.
d957 316
d1409 11
a1419 6
	header append "$REMOTE_ADDR" to "X-Forwarded-For"
	header append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
	header change "Keep-Alive" to "$TIMEOUT"
	query hash "sessid"
	cookie hash "sessid"
	path filter "*command=*" from "/cgi-bin/index.cgi"
d1482 3
a1484 2
	label "Prohibited!"
	request url filter "social.network.example.com/"
@


1.142
log
@Introduce privsep for private keys:

- Move RSA private keys to a new separate process instead of copying
them to the relays.  A custom RSA engine is used by the SSL/TLS code
of the relay processes to send RSA private key encryption/decryption
(also used for sign/verify) requests to the new "ca" processes instead
of operating on the private key directly.

- Each relay process gets its own related ca process.  Setting
"prefork 5" in the config file will spawn 10 processes (5 relay, 5
ca).  This diff also reduces the default number of relay processes
from 5 to 3 which should be suitable in most installations without a
very heavy load.

- Don't keep text versions of the keys in memory, parse them once and
keep the binary representation.  This might still be the case in
OpenSSL's internals but will be fixed in the library.

This diff doesn't prevent something like "heartbleed" but adds an
additional mitigation to prevent leakage of the private keys from the
processes doing SSL/TLS.

With feedback from many
ok benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.141 2014/04/14 15:24:25 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 2006, 2007 Reyk Floeter <reyk@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: April 14 2014 $
@


1.141
log
@macro fixes for previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.140 2014/04/14 12:58:04 blambert Exp $
d148 1
a148 1
runs 5 relay processes by default and every process will handle
@


1.140
log
@Adapt relayd to use AgentX protocol to send traps

ok reyk@@ benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.139 2013/09/09 17:57:44 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: September 9 2013 $
d150 1
a150 1
.It Xo Ic snmp Oo Ic trap Oc Ic Oo Qo Ar path Qc Oc
@


1.139
log
@Add support for ECDHE (Elliptic curve Diffie-Hellman) to enable
TLS/SSL Perfect Forward Secrecy (PFS).

ok djm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.138 2013/09/07 11:33:29 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: September 7 2013 $
d150 1
a150 1
.It Ic send trap
d155 9
a163 2
and request it send a trap to the registered trap receivers;
see
d165 1
a165 1
for more information about the configuration.
@


1.138
log
@update man page with the new default HIGH:!aNULL
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.137 2013/07/16 11:13:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 16 2013 $
d1137 8
@


1.137
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.136 2013/07/04 15:05:41 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 4 2013 $
d1132 1
a1132 1
.Ar HIGH:!ADH
@


1.136
log
@have FILES format a bit better;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.135 2013/06/29 09:08:41 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: June 29 2013 $
d1459 1
a1459 1
.An Pierre-Yves Ritschard Aq pyr@@openbsd.org
d1461 1
a1461 1
.An Reyk Floeter Aq reyk@@openbsd.org .
@


1.135
log
@do not use Sx for sections outwith the page;
man4 still to go...
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.134 2013/05/30 20:17:12 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: May 30 2013 $
d1269 1
a1269 1
.Bl -tag -width "/etc/ssl/private/address.keyXX" -compact
d1287 1
@


1.134
log
@Support SSL inspection, the ability to transparently filter in SSL/TLS
connections (eg. HTTPS) by using a local CA that is accepted by the
clients.  See the "SSL RELAYS" and "EXAMPLES" sections in the
relayd.conf(5) manpage for more details.

ok benno@@, manpage bits jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.133 2013/04/27 16:39:30 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: April 27 2013 $
d1134 1
a1134 3
See the
.Sx CIPHERS
section of
@


1.133
log
@time_t 64bit fixes for relayd and relayctl:
- fix statistics
- set INT_MAX limit on session timeouts
- make sure we dont use to large session timeouts in pf redirects and
  openssl

tested with old and new time_t

ok florian@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.132 2012/11/29 01:01:53 bluhm Exp $
d18 1
a18 1
.Dd $Mdocdate: November 29 2012 $
d683 77
d1088 5
d1100 29
d1381 46
@


1.132
log
@Fix white spaces in relayd.  No binary diff.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.131 2012/10/19 16:49:50 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: October 19 2012 $
d504 1
d681 1
@


1.131
log
@Support additional scheduling algorithms in the load balancer:
least-states, random, source-hash.  least-states is currently only
supported for redirections and the other ones are currently only
supported by relays.

ok benno@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.130 2012/10/03 08:33:31 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: October 3 2012 $
d1261 1
a1261 1
        tcp { nodelay, socket buffer 65536 }
d1265 1
a1265 1
        listen on www.example.com port 2222
@


1.130
log
@Support more than one relay backup table.  Instead of duplicating the
code for main and backup table all over the place, turn the relay
tables into a list attached to the relay.  This improves the code and
allows some other tricks with multiple tables later.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.129 2012/08/24 20:13:03 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 24 2012 $
d388 1
a388 1
hashed name of the relay, the hashed name of the table and the IP
d396 6
d404 5
a408 2
hashed name of the relay, the hashed name of the table, the IP
address and port of the relay and the IP address of the client.
d415 5
@


1.129
log
@- rfc 5082 replaces rfc 3682; ok claudio
- flesh out SEE ALSO in bgpd.8
- fix a formatting warning in relayd.conf.5
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.128 2012/05/05 17:24:41 benno Exp $
d18 1
a18 1
.Dd $Mdocdate: May 5 2012 $
d599 3
a601 2
This directive can be specified twice \(en the second entry will be used
as the backup table if all hosts in the main table are down.
@


1.128
log
@better description of input to mode hash/loadbalance
ok sthen@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.127 2012/04/24 14:56:09 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 24 2012 $
d180 1
a181 1
.El
d1057 1
a1057 1
according to RFC 3682.
@


1.127
log
@take a stab at documenting when arguments need quoted, and valid macro
characters;

prompted by a diff from robert peichaer org

thanks gilles and henning for feedback
ok deraadt zinke
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.126 2012/03/24 14:48:18 sthen Exp $
d18 1
a18 1
.Dd $Mdocdate: March 24 2012 $
d388 5
a392 3
hashed name of the table.
Additional input can be fed into the hash by looking at HTTP
headers and GET variables; see the
d398 2
a399 2
hashed name of the table, the source and destination addresses,
and the corresponding ports.
@


1.126
log
@Allow relayd to use a separate SSL certificate for each port
(/etc/ssl/host:port.crt, /etc/ssl/private/host:port.key).
ok benno@@, todd@@ likes it too, doc tweak suggested by jmc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.125 2012/01/20 12:16:41 camield Exp $
d18 1
a18 1
.Dd $Mdocdate: January 20 2012 $
d89 3
d100 2
a101 2
Macro names must start with a letter, and may contain letters, digits,
and underscores.
@


1.125
log
@Remove global carp demote option.  It is currently broken, but also flawed
by design.

ok henning pyr
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.124 2011/06/24 14:42:36 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: June 24 2011 $
d635 2
a636 2
The relay will look up a private key in
.Pa /etc/ssl/private/address.key
d638 1
a638 1
.Pa /etc/ssl/address.crt ,
d641 7
a647 1
is the specified IP address of the relay to listen on.
d1147 1
d1149 1
d1152 4
a1155 1
is the configured IP address of the relay.
@


1.124
log
@seven main sections here, not six; from Nils Anspach

in the long term, i guess we should avoid documenting the number of
sections, since it's meaningless and is always in danger of going
out of date...
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.123 2011/06/23 20:35:22 sthen Exp $
d18 1
a18 1
.Dd $Mdocdate: June 23 2011 $
a117 11
.It Ic demote Ar group
Enable the global
.Xr carp 4
demotion option, resetting the carp demotion counter for the
specified interface group to zero on startup and to 128 on shutdown of
the daemon.
For more information on interface groups,
see the
.Ic group
keyword in
.Xr ifconfig 8 .
@


1.123
log
@Use a common text explaining how the various configuration parsers using
the standard OpenBSD-style parse.y handle continuing lines with backslashes,
paying particular attention to how comments are handled (which can cause
nasty side-effects if you're not expecting it).

Most wording from jmc@@, with suggestions from fgsch@@, marc@@, Richard Toohey,
patrick keshishian and Florian Obser, ok jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.122 2011/05/23 10:44:59 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: May 23 2011 $
d30 1
a30 1
is divided into six main sections:
@


1.122
log
@Support interface groups in address specifications for tables or
directives like "listen on egress".

Based on gilles@@' code for smtpd and an idea from Mikolaj Kucharski.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.121 2011/05/05 10:20:24 phessler Exp $
d18 1
a18 1
.Dd $Mdocdate: May 5 2011 $
d81 2
d86 2
@


1.121
log
@Allow a user to specify the route priority

OK reyk@@ claudio@@ sthen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.120 2011/04/30 07:52:33 sthen Exp $
d18 1
a18 1
.Dd $Mdocdate: April 30 2011 $
d67 1
a67 1
or DNS hostname.
d186 2
a187 1
Each table must contain at least one host;
@


1.120
log
@no need to escape |, pointed out by jmc@@
"it's worth killing, if just to stop it being copied all over the place"
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.119 2011/04/12 12:37:22 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: April 12 2011 $
d203 6
@


1.119
log
@update flags and printing of flags in debug mode, handle splicing flag.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.118 2011/04/07 14:57:45 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 7 2011 $
d130 1
a130 1
.Pq Ic updates Ns \&| Ns Ic all
@


1.118
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.117 2011/04/07 13:22:29 reyk Exp $
d1065 6
@


1.117
log
@Add support for divert-to which provides some benefits over rdr-to.

ok mikeb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.116 2010/10/26 15:26:58 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: October 26 2010 $
d602 1
a602 1
When redirecting connections with an divert-to rule in
@


1.116
log
@no need for .Pp before lists;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.115 2010/10/26 15:04:37 reyk Exp $
d599 1
a599 1
.Ic nat lookup
d602 1
a602 1
When redirecting connections with an rdr-to rule in
d610 8
a617 1
it will be used as a backup if the NAT lookup failed.
@


1.115
log
@redirects are loaded as "pass in quick ... rdr-to" pf rules by default. In
some cases it is desired to load the rules as "match in" without "quick"
to allow additional filtering or applying additional rule/state options,
eg. to add an overload table for DOS mitigation.  Add the optional "match"
keyword for the redirect "tag" option to change the pf rule type accordingly.

ok jsg@@ mikeb@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.114 2010/08/01 22:18:35 sthen Exp $
d18 1
a18 1
.Dd $Mdocdate: August 1 2010 $
a556 1
.Pp
@


1.114
log
@Allow fallback tables for relays, not just redirections.
Seems reasonable to jsg, ok phessler, no response from reyk or pyr
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.113 2010/05/18 15:09:34 sobrado Exp $
d18 1
a18 1
.Dd $Mdocdate: May 18 2010 $
d491 4
a494 1
.It Ic tag Ar name
d499 9
@


1.113
log
@use the right capitalization for "HyperText Transfer Protocol (HTTP)"
and "server".

fixes for bgplg(8) and relayd.conf(5) suggested by jmc@@, good catch!

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.112 2009/09/01 13:43:36 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: September 1 2009 $
d583 3
@


1.112
log
@sync with new pf

ok henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.111 2009/08/27 11:15:20 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 27 2009 $
d653 1
a653 1
Handle the Hypertext Transfer Protocol
@


1.111
log
@lookup(n.) -> look up(v.)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.110 2009/08/27 09:26:53 reyk Exp $
d51 1
a51 1
rdr rules for stateful forwarding to a target host from a
d405 1
a405 1
rdr rule.
d463 1
a463 1
The rdr rule can be optionally restricted to a given interface name.
d473 3
a475 1
modifying the target address.
d487 1
a487 1
for an rdr rule in
d494 1
a494 1
rdr rule with the name supplied.
d588 1
a588 3
When redirecting connections with an
.Ar rdr
rule in
@


1.110
log
@allow to specify interface names as addresses, for example "listen on
em0".  the implementation will lookup the first IPv4 address of an
interface before any other IPv4 and IPv6 addresses.

ok gilles@@ (i got inspired by smtpd)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.109 2009/08/13 13:51:21 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: August 13 2009 $
d70 1
a70 1
will lookup the first IPv4 address and any other IPv4 and IPv6
@


1.109
log
@add new 'router' functionality to dynamically add or remove routes
based on health check results, using the existing table syntax.  this
allows to maintain multiple (uplink) gateways to implement link
balancing or WAN link failover if no routing protocol or other
keepalive method is available.  works fine with or without
net.inet.ip.multipath enabled.

ok pyr@@, jmc@@ for manpages
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.108 2009/08/07 11:10:23 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: August 7 2009 $
d66 6
a71 1
can be specified by IPv4 address, IPv6 address, or DNS hostname.
@


1.108
log
@allow to modify the IP TTL value for host checks.  this can be used to
check if the host is only n hops away and not re-routed over a longer
path.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.107 2009/06/02 20:22:30 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: June 2 2009 $
d46 2
a47 2
They are used for relay and redirection target selection with the
described options and health checking on the host they contain.
d58 3
d1041 58
d1205 10
@


1.107
log
@- minor tweaks
- remove unneccessary -compact from a list
- remove unneccessary Xo/Xc before it gets copied all over the place
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.106 2009/06/02 17:10:22 pyr Exp $
d182 2
a183 7
.It Ic retry Ar number
The optional retry option adds a tolerance for failed host checks;
the check will be retried for
.Ar number
more times before setting the host state to down.
If this table is used by a relay, it will also specify the number of
retries for outgoing connection attempts.
d195 7
d1018 1
a1018 1
.It Ic ip ttl
@


1.106
log
@make it clear that setting the global timeout late will mess things up.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.105 2009/06/02 17:05:57 jj Exp $
d38 1
a38 1
Do note that the config file allows you to add global settings after
d105 1
a105 2
.Pp
.Bl -tag -width Ds -compact
d117 1
a117 4
.Pp
.It Xo
.Ic interval Ar number
.Xc
a119 1
.Pp
a137 1
.Pp
a145 1
.Pp
d155 1
a155 4
.Pp
.It Xo
.Ic timeout Ar number
.Xc
d163 1
a163 1
If this option is to be set, it should be before overrides in tables.
@


1.105
log
@note that order is important in the file regarding global options at this time. ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.104 2009/04/24 14:20:24 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: April 24 2009 $
d173 1
@


1.104
log
@Allow UDP and/or TCP redirections instead of just TCP.

Thanks to Marek Grzybowski for feedback and testing.

ok jmc@@ (manpage bits)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.103 2009/04/16 20:13:13 sobrado Exp $
d18 1
a18 1
.Dd $Mdocdate: April 16 2009 $
d38 3
@


1.103
log
@fix a few more typos found by spell(1); rectify a double "with" pointed out
by jmc@@ while looking at this diff.

ok jmc@@, reyk@@ (for the hostapd part)
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.102 2009/04/02 14:30:51 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: April 2 2009 $
d433 3
a435 1
.Ic listen on Ar address Ic port Ar port
d451 8
d1061 1
a1061 1
This configuration file would create a service
d1086 11
@


1.102
log
@add support to specify a ca file (eg. /etc/ssl/cert.pem) to verify ssl
server certificates when connecting as an SSL client from relays.  it
works so far, but needs more testing and is currently lacking support
for certificate revocation (like CRL or OCSP).  the file ssl_privsep.c
is extended to implement more code that should be in openssl to allow
loading the ca from chroot...
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.101 2009/04/01 14:56:38 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: April 1 2009 $
d309 1
a309 1
The program will be executed for each host by specifing the hostname
d376 1
a376 1
The following options will set the scheduling algoritm to select a
d929 1
a929 1
Return an error reponse to the client if an internal operation or the
@


1.101
log
@Add support for client-side SSL connections from relays.  relayd can
now sit between two SSL connections (Oitm - OpenBSD-in-the-middle),
accept SSL connections and forward to TCP, accept TCP connections and
forward to SSL, and do TCP to TCP of course.

This was tested by some people a while ago.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.100 2009/02/16 19:46:12 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: February 16 2009 $
d524 3
a526 3
Note that
.Xr relayd 8
will not verify the remote SSL certificate.
d948 7
d1046 3
d1155 4
a1158 2
does not support verification of server certificates when connecting
to a remote host using the SSL protocol.
@


1.100
log
@relayd complains about a table called "backup", so change it to
fallback, as used in /etc/relayd.conf;

from Patrik Lundin
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.99 2008/12/05 16:37:56 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: December 5 2008 $
d503 3
a505 1
.Ic forward to
d521 7
d1143 4
@


1.99
log
@change the way relayd reports check results: instead of logging an
arbitrary string in debugging mode, it will store an error code
(HCE_*) for each host.  the error code can be translated to a string
(in log.c) for debugging but it will also be passed to relayctl via
the control socket.

from a user point of view, this will print a human-readable error
message in the "relayctl show hosts" output if a host is down because
the check failed.  the relayctl(8) manpage includes detailed
explanations of the error messages including mitigations for the
most-common problems.

ok jmc@@ (manpages)
ok phessler@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.98 2008/11/09 12:34:47 tobias Exp $
d18 1
a18 1
.Dd $Mdocdate: November 9 2008 $
d211 1
a211 1
table \*(Ltbackup\*(Gt disable { 10.1.5.1 retry 2 }
d216 1
a216 1
	forward to \*(Ltbackup\*(Gt check http "/" code 200
@


1.98
log
@typo fixed (overriden -> overridden)

ok espie, jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.97 2008/10/05 20:37:52 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: October 5 2008 $
d251 10
d293 1
a293 2
This gives a digest
that can be used as-is in a digest statement:
@


1.97
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.96 2008/09/29 15:06:52 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: September 29 2008 $
d164 1
a164 1
This can be overriden by the timeout value in the table definitions.
@


1.96
log
@Change parsing of comments in external rule files.  The hash mark may
appear in URLs (eg. /index.html#anchor), so only allow full-line
comments indicated by a hash mark # at the beginning of a line.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.95 2008/09/29 14:53:35 reyk Exp $
d437 1
a437 1
argument can optionally specify a port range instead of a single port,
d439 1
a439 1
.Ar min-port Ic : Ar max-port .
@


1.95
log
@allow to load expect, filter, log, and remove keys from external files
just containing on key per line.  this allows easier use of URL
white/blacklists from external sources.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.94 2008/09/29 09:58:51 reyk Exp $
d831 2
a832 2
Empty lines will be ingnored and lines will be stripped at any
whitespaces, newline characters, or hash marks
d834 1
a834 1
indicating a comment.
@


1.94
log
@allow to listen on a port range for redirections.  this fixes
stickyness with web applications that cannot do the clustering on
their own and require stickyness with HTTP to HTTPS migration.  this
is required in many cases; it is a true fact that we cannot always fix
the backend application in the real world.

Tested and requested by many
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.83 2008/05/06 16:23:52 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 8 2008 $
d826 9
d854 6
d870 6
d904 6
@


1.93
log
@add a variable $SERVER_NAME which is "OpenBSD relayd" by default.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.92 2008/07/25 12:29:33 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 25 2008 $
d417 1
a417 1
option is not specified, the port from the
d435 5
@


1.92
log
@doc fix; from David Higgs
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.91 2008/07/22 23:17:37 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: July 22 2008 $
d768 3
@


1.91
log
@Add dynamic IPv6-to-IPv4 and IPv4-to-IPv6 translation inspired by
faithd(8) by doing a similar mapping of IPv4/6 addresses with
relayd(8) and pf(4) redirections without the need of the faith(4)
interface.  The trick works in both directions, it can accept IPv6
connections and relay them to IPv4 hosts by extracting the last 4
octets from the IPv6 destination (like faithd(8)), and it can accept
IPv4 connections and relay them to IPv6 hosts by prepending the 4
octets of the original IPv4 destination to a configured IPv6 prefix.
An access list is not needed because the classification is done in
pf.conf(5).  It helps to get more faith in relayd.

manpage bits ok jmc@@
yes, sounds good todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.90 2008/07/19 16:35:50 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: July 19 2008 $
d661 1
a661 1
.Bq Ar action
@


1.90
log
@minor wording tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.89 2008/07/19 10:52:32 reyk Exp $
d492 1
a492 1
.Op Ic retry Ar number
a499 1
.Pp
d505 7
a511 1
The optional host retry option will be used as a tolerance for failed
d515 19
d547 1
a547 1
.Op Ic retry Ar number
@


1.89
log
@If the new 'parent' keyword is specified for a host in a table,
inherit the state from another host with the specified Id; no
additional check will be for the inheriting host.  This helps in
scenarios with lots of IP aliases that all point to the same service
on the same host (like web hosting with many SSL domains).

discussed with pyr, tested in different setups
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.88 2008/06/11 18:21:20 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: June 11 2008 $
d196 1
a196 1
The optional parent option allows to inherit the state from a parent
d202 1
a202 1
starting with 1; it can be figured out with the
@


1.88
log
@add support for "transparent" forwarding in relays: normally the l7
relay will connect to the target host with its own ip address, but
this mode will let it use the address of the client that is connecting
from the other side. for example, there is no need to add the
X-Forwarded-For HTTP headers for internal webservers in this mode
anymore since they magically see the remote client ip address in the
connection. it also allows to build fully-transparent ssl
encapsulation for tcp sessions and many other things...

based on an initial idea from dlg@@ and pascoe@@ (dlg's talk at opencon)
using the new BINDANY and divert-reply interfaces from markus@@ (since n2k8)

ok markus@@ pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.87 2008/06/11 07:28:02 jmc Exp $
d186 1
a186 1
Host entries may be defined with the following attribute:
d195 11
@


1.87
log
@tweak the "route to" text;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.86 2008/06/10 23:12:36 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: June 10 2008 $
d477 1
d489 5
@


1.86
log
@set the inactivity timeout of redirections to a shorter timeout of 600
seconds by default (pf's default is 86400s), they can be cranked with
the "session timeout" directive and it is consistent to relay session
timeouts. also remove the hack to modify the closing timeout because
pf's sloppy state handling is taking care about half connection
closing now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.85 2008/06/10 22:02:28 reyk Exp $
d433 1
a433 1
directive, but directly route the packets to the target host without
d438 2
a439 2
Note that the hosts have to accept sessions for the same address as
the gateway, this is typically done by configuring a loopback
@


1.85
log
@use sloppy pf state keeping for routed sessions (direct server return)
where we only see the client side of the TCP session; this removes the
timeout limitations that we had before. document "route to" in the
manpage since it is fully working now.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.84 2008/05/07 01:49:29 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: May 7 2008 $
d442 1
a442 2
Specify the timeout after closing in seconds for routed session
states.
d553 1
a553 1
Specify the timeout in seconds for accepted sessions.
@


1.84
log
@add an alternative "route to" mode to relayd redirections which maps
to pf route-to instead of the default rdr. it is a first steps towards
support for "direct server return" (dsr), an asynchronous mode where
the load balanced servers send the replies to a different gateway like
a l3 switch/router to handle higher amounts of return traffic.
because the state handling in pf isn't optimal for this case yet, it
just sees half of the TCP connection, the sessions are forced to time
out after fixed number of seconds.

discussed with many, thought about in the onsen
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.83 2008/05/06 16:23:52 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: May 6 2008 $
d425 20
a450 3
.It Ic session timeout Ar seconds
Specify the timeout in seconds for routed session states.
The default timeout is 600 seconds (10 minutes).
@


1.83
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.82 2008/05/06 12:58:00 reyk Exp $
d431 3
@


1.82
log
@the manpage mentioned "timeout" in relay sections, while the grammar
expected the keywords "forward timeout".  rename it to "session
timeout" and sync the documentation with reality.
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.81 2008/05/06 12:24:12 reyk Exp $
d264 3
a266 1
request, as relayd expects the data returned to be a string.
@


1.81
log
@the message digest http check does not work on binary content, add manpage
clarification.

From bsd at openbsd dot rutgers dot edu, closes pr5801

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.80 2008/03/03 23:15:55 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: March 3 2008 $
d531 1
a531 1
.It Ic timeout Ar seconds
@


1.80
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.79 2008/03/03 16:58:41 reyk Exp $
d253 1
a253 1
produces content whose message digest matches the defined string.
d263 2
@


1.79
log
@log a different notification message when the tcp check times out.
also adjust the documentation a little bit to decrease confusion about
the check timeout.

From pyr@@
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.78 2008/02/11 13:59:57 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: February 11 2008 $
d168 2
a169 2
same collision domain, use a higher timeout like 1000 milliseconds for
checks of hosts in other subnets.
@


1.78
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.77 2008/02/11 10:42:50 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: Febuary 11 2008 $
d167 3
@


1.77
log
@Marry relayd with snmpd using new "send trap" option: Request to send
a SNMP trap when the state of a host changes.  relayd(8) will try to
(re-)connect to snmpd(8) and request it to send a trap to the
registered trap receivers, see snmpd.conf(5) for more information
about the configuration.

ok pyr@@ thib@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.76 2007/12/12 14:55:12 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: December 12 2007 $
d151 1
a151 1
Request to send a SNMP trap when the state of a host changes.
d155 1
a155 1
and request it to send a trap to the registered trap receivers,
@


1.76
log
@various improvements for the relay pages; ok reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.75 2007/12/09 09:52:12 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: December 9 2007 $
d150 10
d1002 1
@


1.75
log
@- kill trailing whitespace
- kill useless .Pp
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.74 2007/12/08 18:00:13 pyr Exp $
d18 1
a18 1
.Dd $Mdocdate: December 8 2007 $
d23 1
a23 1
.Nd Relay daemon configuration file
d26 1
a26 1
is the configuration file for the Relay daemon,
d39 2
a40 1
Table definitions describe a list of hosts like
d46 1
a46 1
Redirections will be translated to
d60 1
a60 1
can be either specified by IPv4 address, IPv6 address, or DNS hostname.
d63 1
a63 1
can be either specified by number or by name.
d107 1
a107 1
demotion option, this will reset the carp demotion counter for the
d144 1
a144 1
This will increase the performance and prevents delays when connecting
d147 1
a147 1
will run 5 relay processes by default and every process will handle
d160 1
a160 1
or relays, they will be mapped to a
d171 2
a172 2
Each table must contain at least one host, multiple hosts are
separated by newline, comma, or whitespace.
d176 1
a176 1
The optional retry option adds a tolerance for failed host checks,
d184 1
a184 1
For example,
d196 1
a196 1
Tables are used by the
d199 1
a199 1
health-checking rules, and timings,
d205 2
a206 2
Table specific configuration directives are described below,
multiple options can be appended to the
d211 1
a211 1
the table, it is mandatory for redirections:
d226 1
a226 1
header to query a specific hostname at target host.
d248 1
a248 1
header to query a specific hostname at target host.
d252 1
a252 1
ftp -o - http://host[:port]/path | sha1
d256 1
a256 1
that can be used as is in a digest statement:
d270 15
d306 1
a306 1
SMTP, NNTP and FTP.
a310 15
.It Ic check script Ar path
Execute an external program to check the host state.
The program will be executed for each host by specifing the hostname
on the command line:
.Bd -literal -offset indent
/usr/local/bin/checkload.pl front-www1.private.example.com
.Ed
.Pp
.Xr relayd 8
expects a positive return value on success and zero on failure.
Note that the script will be executed with the privileges of the
.Qq _relayd
user and terminated after
.Ar timeout
milliseconds.
d342 1
a342 6
.It Ic mode roundrobin
Distributes the outgoing connections using a round-robin scheduler
through all active hosts.
This is the default mode and will be used if no option has been specified,
it is supported by redirections and relays.
.It Ic mode loadbalance
d344 1
a344 8
hashed name of the table, the source and destination addresses,
and the corresponding ports.
This mode is only supported by relays.
.It Ic mode hash
Like the
.Ic loadbalance
mode, but without including the source and destination addresses and
ports.
d350 10
d366 1
a366 1
tables,
d368 1
a368 1
will rewrite the target IP-addresses and ports of the incoming
d375 1
a375 1
Set the redirection initially disabled.
d382 1
a382 1
.Ar options...
d384 1
a384 1
Specify the tables of target hosts to be used, see the
d386 1
a386 1
section above for information about the table options.
d392 1
a392 1
This directive can be specified twice, the second entry will be used
d409 2
a410 2
This has the same effect than specifying sticky-address
for a rdr rule in
d431 1
a431 1
HTTP headers, to provide SSL acceleration functionality and to allow
d438 2
a439 27
.It Xo
.Ic listen on Ar address
.Op Ic port Ar port
.Op Ic ssl
.Xc
Specify the address and port for the relay to listen on.
The relay will accept incoming connections to the specified address.
If the
.Ic port
option is not specified, the port from the
.Ic listen on
directive will be used.
.Pp
If the
.Ic ssl
keyword is present, the relay will accept connections using the
encrypted SSL protocol.
The relay will look up a private key in
.Pa /etc/ssl/private/address.key
and a public certificate in
.Pa /etc/ssl/address.crt ,
where
.Ar address
is the specified IP address of the relay to listen on.
See
.Xr ssl 8
for details about SSL server certificates.
d461 1
a461 1
.Ar options...
d464 1
a464 1
table, see the
d466 1
a466 1
section above for information about the table options.
d483 27
a509 5
.It Ic timeout Ar seconds
Specify the timeout in seconds for accepted sessions.
The default timeout is 600 seconds (10 minutes).
.It Ic disable
Start the relay but immediately close any accepted connections.
d516 3
d526 4
a529 1
application layer protocols:
d531 7
d540 1
a540 1
(HTTP or "HTTPS" if encapsulated in a SSL tunnel).
a548 15
.Xr relayd 8
also supports relaying of UDP protocols.
There is no generic handler for UDP-based protocols because it is a
stateless datagram-based protocol which has to look into the
application layer protocol to find any possible state information.
The supported UDP protocols are:
.Bl -tag -width Ds
.It Ic dns protocol
Domain Name System (DNS) protocol.
The request IDs in the DNS header will be used to match the state.
.Xr relayd 8
will replace these IDs with random values to compensate for
predictable values generated by some hosts.
.El
.Pp
d566 1
a566 1
The actions are depending on the underlying application
d568 1
d570 2
a571 1
The following directions are allowed for the specified action:
d576 3
a578 1
This is the default if the direction directive is omitted.
d584 2
a585 1
The following entity types for the actions are available:
d661 2
a662 1
The following actions are available:
d676 18
d703 8
a710 2
.It Ic remove Ar key
Remove the entity with the selected name.
d739 1
a739 1
echo -n "example.com/path/?args" | sha1
a781 1
.El
d795 3
a797 1
Do not set a label for subsequently added actions, this is the default.
a812 39
.It Ic tcp Ar option
Enable or disable the specified TCP/IP options; see
.Xr tcp 4
and
.Xr ip 4
for more information about the options.
Valid options are:
.Bl -tag -width Ds
.It Ic backlog Ar number
Set the maximum length the queue of pending connections may grow to.
The backlog option is 10 by default and is limited by the
.Ic kern.somaxconn
.Xr sysctl 8
variable.
.It Ic ip minttl Ar number
This option for the underlying IP connection may be used to discard packets
with a TTL lower than the specified value.
This can be used to implement the
.Ar Generalized TTL Security Mechanism (GTSM)
according to RFC 3682.
.It Ic ip ttl
Change the default time-to-live value in the IP headers.
.It Xo
.Op Ic no
.Ic nodelay
.Xc
Enable the TCP NODELAY option for this connection.
This is recommended to avoid delays in the relayed data stream,
e.g. for SSH connections.
.It Xo
.Op Ic no
.Ic sack
.Xc
Use selective acknowledgements for this connection.
.It Ic socket buffer Ar number
Set the socket-level buffer size for input and output for this
connection.
This will affect the TCP window size.
.El
d855 38
a893 20
.Pp
The
.Ar value
strings of the
.Ic append
and
.Ic change
directives may contain predefined macros that will be expanded at runtime:
.Pp
.Bl -tag -width $SERVER_ADDR -offset indent -compact
.It Ic $REMOTE_ADDR
The IP address of the connected client.
.It Ic $REMOTE_PORT
The TCP source port of the connected client.
.It Ic $SERVER_ADDR
The configured IP address of the relay.
.It Ic $SERVER_PORT
The configured TCP server port of the relay.
.It Ic $TIMEOUT
The configured session timeout of the relay.
@


1.74
log
@forgotten service -> redirection
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.73 2007/12/08 17:14:26 reyk Exp $
d190 2
a191 2
	forward to \*(Ltservice\*(Gt check http "/" code 200 
	forward to \*(Ltbackup\*(Gt check http "/" code 200 
d533 1
a533 1
.Op Ic tcp 
a545 1
.Pp
@


1.73
log
@make the generic handler for TCP-based protocols the default (allows
to use "protocol foo" without defining a type).
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.72 2007/12/08 17:07:09 reyk Exp $
d376 1
a376 1
Set the service initially disabled.
@


1.72
log
@some changes to the relayd.conf configuration language and grammar.

the tables will look more like pf tables, it is easier to re-use
tables with different options, "services" will become "redirections"
(they refer to rdr pf rules), sync configuration directives of
redirect (l3, ex-service) relay (l7) sections (for example "virtual
host" will become "listen on"), all target definitions will start with
"forward to", etc. pp. (see relay.conf(5) and etc/relayd.conf)

discussed with pyr and deraadt
ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.71 2007/12/07 17:28:05 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: December 7 2007 $
d532 4
a535 1
.It Ic tcp protocol
d537 1
d976 1
a976 1
tcp protocol "myssh" {
@


1.71
log
@adjust the manpages to use "Relay daemon"
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.70 2007/12/07 17:19:42 deraadt Exp $
d39 1
a39 1
Table definitions describe the content of a
d41 5
a45 4
table and the method used for checking the health of the hosts
they contain.
.It Sy Services
Services will be translated to
d47 2
a48 1
rdr rules if their table or backup table have content.
d50 2
a51 2
Relays allow layer 7 load balancing, SSL acceleration, and
general purpose TCP proxying.
d85 1
a85 1
.Ic service ,
d94 3
a96 6
table webhosts {
	check tcp
	timeout 300
	real port 80
	host $www1
	host $www2
d158 53
a210 4
Tables are used to group a set of hosts that can be checked using the same
method.
Only one health-checking method can be used per table.
Table specific configuration directives are described below.
d314 4
a328 16
.It Ic disable
Start the table disabled \(en no hosts will be checked in this table.
The table can be later enabled through
.Xr relayctl 8 .
.It Xo
.Ic host Ar address
.Op Ic retry Ar number
.Xc
Add the host whose address is
.Ar address
to the list of hosts to be checked in this table.
Each table needs at least one host.
The optional retry option adds a tolerance for failed host checks,
the check will be retried for
.Ar number
more times before setting the host state to down.
a331 9
.It Ic real port Ar port
When using the TCP or HTTP checking methods, use this
.Ar port
to connect to hosts.
If this parameter is not specified,
.Xr relayd 8
will create a template table which inherits the port from the
referencing service or relay.
Main and backup tables need to have the same real port.
d337 27
a363 2
.Sh SERVICES
Services represent a
d366 9
a374 8
They are used to specify which addresses will be redirected
to the hosts in the specified tables.
The configuration directives that are valid in this context are described
below.
.Bl -tag -width Ds
.It Ic backup table Ar name
Specify the table to switch to when all hosts in the main table
are seen as down or disabled.
d379 30
a414 7
.It Xo
.Ic table Ar name Op Ic port Ar port
.Xc
Specify the main table to be used.
Optionally supply a port which will
override the real port specification in the table.
This is mandatory.
a419 12
.It Ic virtual host Ar address Ic port Ar port
Specify an
.Ar address
and a
.Ar port
that will be used to redirect requests
to the hosts in the main or backup table.
Optionally an interface name can be given as follows,
to specify which interface the rdr rule will be enabled on:
.Bd -literal -offset indent
interface ``ifname''
.Ed
d422 3
a424 3
Relays will forward TCP traffic between a client and a target server.
In contrast to IP forwarding and redirection in the network stack, a
relay will accept incoming TCP connections from remote clients as a
d426 3
a428 2
any traffic between the target host and the remote client.
A relay is also called an application layer or layer 7 proxy.
d435 3
a437 1
The relay configuration directives are described below.
d440 2
a441 1
.Ic listen on Ar address Ic port Ar port
d446 5
d467 3
a469 1
.Ic forward to Ar address Ic port Ar port
d473 5
a477 37
.It Xo
.Ic service Ar name
.Op Ic retry Ar number
.Xc
Use the first virtual IP address and port from the specified service
as the target host to connect to.
This is exclusive to the
.Ic forward to
and
.Ic table
directives.
.It Xo
.Ic table Ar name Ar mode
.Op Ic no check
.Xc
Get the target host from the specified table.
The following modes are available to select a host from the specified
table:
.Pp
.Bl -tag -width loadbalance -offset indent -compact
.It Ic roundrobin
Distributes the outgoing connections using a round-robin scheduler
through all active hosts.
.It Ic loadbalance
Balances the outgoing connections across the active hosts based on the
hashed name of the table, the source and destination addresses,
and the corresponding ports.
.It Ic hash
Like the
.Ic loadbalance
mode, but without including the source and destination addresses and
ports.
Additional input can be fed into the hash by looking at HTTP
headers and GET variables; see the
.Sx PROTOCOLS
section below.
.El
d483 8
a490 1
See the
d492 1
a492 1
section for details about host entries.
d494 1
d505 4
a508 7
If either the
.Ic forward to ,
.Ic service ,
or
.Ic table
directive is present, it will be used as a backup if the NAT lookup
failed.
d526 2
a527 1
The protocol configuration directives are described below.
d529 1
a529 6
.It Ic protocol Ar type
Enable special handling of the specified application layer protocol.
The supported TCP protocols are:
.Pp
.Bl -tag -width http -offset indent -compact
.It Ic http
d532 1
a532 1
.It Ic tcp
d543 2
a544 2
.Bl -tag -width http -offset indent -compact
.It Ic dns
d551 3
d762 2
a763 2
label "<a href='http://example.com/advisory.pl?id=7359'>\e
	Advisory provided by example.com</a>"
d917 2
a918 9
table phphosts {
	timeout 300
	real port 8080
	check http "/" digest "630aa3c2f..."
	host $www1
	host $www2
	host $www3
	host $www4
}
d920 3
a922 7
table sorryhost {
	check icmp
	disable
	timeout 300
	real port 8080
	host sorryhost.private.example.com
}
d924 1
a924 3
service www {
	virtual host www.example.com port 8080 interface trunk0
	virtual host www6.example.com port 80 interface trunk0
d926 3
a928 3
	tag RELAYD
	table phphosts
	backup table sorryhost
d936 1
a936 1
protocol (SSL acceleration and layer 7 load balancing).
d945 1
a945 2
protocol http_ssl {
	protocol http
d956 4
a959 4
relay sslaccel {
        listen on www.example.com port 443 ssl
        protocol http_ssl
        table phphosts loadbalance
d972 1
a972 1
protocol myssh {
d976 1
a976 2
relay sshforward {
	protocol myssh
d978 1
d989 3
a991 1
file format first appeared in
d993 4
@


1.70
log
@partial update of the man pages to new relayd name
@
text
@d1 1
a1 1
.\"	$OpenBSD: relayd.conf.5,v 1.69 2007/11/26 09:38:25 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: November 26 2007 $
d26 1
a26 1
is the configuration file for the Host Status Daemon,
@


1.69
log
@allow to add labels to protocol actions, they will be printed in http
error pages and can be used to refer to additional information.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.68 2007/11/25 20:02:02 reyk Exp $
d18 2
a19 2
.Dd $Mdocdate: November 25 2007 $
.Dt HOSTSTATED.CONF 5
d22 2
a23 2
.Nm hoststated.conf
.Nd Host Status daemon configuration file
d27 1
a27 1
.Xr hoststated 8 .
d37 1
a37 1
.Xr hoststated 8 .
d75 1
a75 1
include "/etc/hoststated.conf.local"
d146 1
a146 1
.Xr hoststated 8
d255 1
a255 1
.Xr hoststated 8
d258 1
a258 1
.Qq _hoststated
d280 1
a280 1
.Xr hoststatectl 8 .
d301 1
a301 1
.Xr hoststated 8
d325 1
a325 1
.Xr hoststatectl 8 .
d492 1
a492 1
.Xr hoststated 8
d503 1
a503 1
.Xr hoststated 8
d589 1
a589 1
.Xr hoststated 8
d843 2
a844 2
.It Pa /etc/hoststated.conf
.Xr hoststated 8
d892 1
a892 1
	tag HOSTSTATED
d950 2
a951 2
.Xr hoststatectl 8 ,
.Xr hoststated 8 ,
d961 1
a961 1
.Xr hoststated 8
@


1.68
log
@"canonicalized hostname" instead of just "hostname" for the url action
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.67 2007/11/24 19:00:44 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: November 24 2007 $
d709 14
@


1.67
log
@new sentence, new line;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.66 2007/11/24 16:13:50 reyk Exp $
d577 2
a578 1
hostname without port or suffix and a path name or prefix when using the
@


1.66
log
@extend the url lookup algorithm to match the full URL and different
possible suffix/prefix combinations by stripping subdomains, path
components, and the query args.

ok and tested by gilles@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.65 2007/11/23 09:45:33 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: November 23 2007 $
d591 2
a592 1
levels), and the query string. For example, the following
@


1.65
log
@- use either "host name" or "hostname", i decided to use "hostname" everywhere
- a URL instead of an URL (a "you-are-el")

suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.64 2007/11/23 09:39:42 reyk Exp $
d577 1
a577 1
hostname or suffix and a path name or prefix when using the
d586 21
@


1.64
log
@re-implement the "mark" action and document it in the manpage:
it is possible to attach a mark to a session based on matching an
entity (header, url, cookie, ...) and add conditional action for this
mark. it works a bit like the tag/tagged keywords in pf, but i decided
to pick a different name to avoid confusion.

ok pyr@@ gilles@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.63 2007/11/22 10:09:53 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: November 22 2007 $
d57 1
a57 1
can be either specified by IPv4 address, IPv6 address, or DNS host name.
d249 1
a249 1
The program will be executed for each host by specifing the host name
d576 2
a577 2
Look up the entity as an URL suffix/prefix expression consisting of a
host name or suffix and a path name or prefix when using the
@


1.63
log
@add (new) "url" protocol action, this can be used to match/filter URL
suffix/prefix expressions like "example.com/index.html?args". a digest
mode allows to match against anonymized SHA1/MD5 digests of
suffix/prefix expressions.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.62 2007/11/21 20:24:28 reyk Exp $
d18 1
a18 1
.Dd $Mdocdate: November 21 2007 $
d511 1
d517 5
a521 1
keyword will log the entity name and the value.
d673 12
@


1.62
log
@extend action grammar with "filter value" and "expect value" as a
short form for "filter * from value" or "expect * from value".
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.61 2007/11/21 14:25:44 jmc Exp $
d556 1
a556 1
request path filter "*" from "/index.html"
d570 12
d619 1
d627 12
d648 1
@


1.61
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.60 2007/11/21 14:12:04 reyk Exp $
d598 5
a602 1
Expect an entity with the specified value.
d605 9
d616 10
d628 4
a631 1
and value.
d836 1
a836 1
	url hash "sessid"
@


1.60
log
@rename the "url" filter action to "query" to use the correct term.
please update your hoststated.conf configurations. also add more
examples to the manpage.

alright pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.59 2007/11/21 13:04:42 reyk Exp $
d191 2
a192 2
produces a content whose message digest matches the defined string.
The used algorithm is determined by the string length of the
d194 1
a194 1
argument, it is either SHA1 (40 characters) or MD5 (32 characters).
@


1.59
log
@allow the http digest type to be either SHA1 or MD5 determined by the
digest string length; it is compatible to any existing SHA1-only
configurations.

ok pyr@@ gilles@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.58 2007/11/21 10:19:34 pyr Exp $
d550 11
a560 2
.It Ic url
Look up the entity as a GET variable in the URL when using the
d564 6
a569 1
.Ic request .
@


1.58
log
@document the fact that port can be specified in table statements inside
service sections.
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.57 2007/11/20 18:24:32 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: November 20 2007 $
d191 4
a194 2
produces a content whose SHA1 digest is
.Ar digest .
@


1.57
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.56 2007/11/20 15:54:55 reyk Exp $
d330 3
a332 1
.It Ic table Ar name
d334 2
@


1.56
log
@it may be desirable to send a HTTP error page with error code and a
meaningful message if a HTTP/HTTPS relay closes the connection for
some reason. for example, a "403 Forbidden" if the request was
rejected by a filter. this will be enabled with the "return error"
option and is disabled by default, the standard behaviour is to
silently drop the connection; the browser may display an empty page in
this case. the look+feel of the HTTP error page can be customized with
a CSS style sheet, but we do not intend to allow customization of the
error page contents (hoststated is not a webserver!).

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.55 2007/11/20 15:44:21 pyr Exp $
d601 1
a601 1
The effect of this option depends on the protocol, HTTP will send a
@


1.55
log
@Allow overriding the global interval in a table.
Table specific intervals must be multiples of the global interval.
help and ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.54 2007/10/22 15:45:40 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: October 22 2007 $
d596 15
@


1.54
log
@add missing .Ed;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.53 2007/10/22 12:18:15 reyk Exp $
d291 3
@


1.53
log
@add support for the include directive to the configuration file parser,
based on the existing hostapd/pfctl code.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.52 2007/09/28 13:29:56 pyr Exp $
d18 1
a18 1
.Dd $Mdocdate: September 28 2007 $
d76 1
@


1.52
log
@Correct my mail address.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.51 2007/09/28 07:20:46 jmc Exp $
d66 10
@


1.51
log
@"require to +inf." is not a good verb pattern, so reword;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.50 2007/09/28 01:11:58 pascoe Exp $
d4 1
a4 1
.\" Copyright (c) 2006, 2007 Pierre-Yves Ritschard <pyr@@spootnik.org>
d18 1
a18 1
.Dd $Mdocdate: September 5 2007 $
@


1.50
log
@Add missing "s" to https check description.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.48 2007/09/05 09:15:10 reyk Exp $
d475 1
a475 1
stateless datagram-based protocol which requires to look into the
@


1.49
log
@add support for relaying DNS traffic (with a little bit of packet
header randomization). this adds an infrastructure to support
UDP-based protocols.

ok gilles@@, tested by some
@
text
@d199 1
a199 1
.Ic check http Ar path
@


1.48
log
@add my copyright because i added a lot.

ok pyr@@ (who is the first copyright holder)
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.47 2007/09/04 14:15:05 pyr Exp $
d18 1
a18 1
.Dd $Mdocdate: September 4 2007 $
d462 1
a462 1
The supported protocols are:
d470 16
@


1.47
log
@Add the ability to specify a host header when using http(s) check methods.
Prodded by me, done by Gille Chehade <veins@@evilkittens.org>

ok reyk, jmc for the manpage bits.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.46 2007/07/24 17:51:33 pyr Exp $
d3 2
a4 1
.\" Copyright (c) 2006 Pierre-Yves Ritschard <pyr@@spootnik.org>
d18 1
a18 1
.Dd $Mdocdate$
@


1.46
log
@Quote digest otherwise it won't be parsed as a string.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.45 2007/05/31 19:20:24 jmc Exp $
d152 5
a156 1
.It Ic check http Ar path Ic code Ar number
d161 10
a170 1
.It Ic check https Ar path Ic code Ar number
d172 5
a176 1
.It Ic check http Ar path Ic digest Ar string
d181 5
d197 5
a201 1
.It Ic check https Ar path Ic digest Ar string
@


1.45
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.44 2007/05/29 17:12:04 reyk Exp $
d675 1
a675 1
	check http "/" digest 630aa3c2f...
@


1.44
log
@add a new check method which allows to run external scripts/programs
for custom evaluations.

pyr agrees to put it in now but to do some improvements of the timeout
handling later.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.43 2007/05/27 19:21:15 reyk Exp $
d17 1
a17 1
.Dd November 1, 2006
@


1.43
log
@allow to specify table templates in the configuration file and to
inherit them from multiple services or relays. this is useful if you
want to use a table with the same list of hosts but different ports as
specified in the relay or service section.

this makes mcbride more happy
ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.42 2007/04/12 14:45:45 reyk Exp $
d207 15
@


1.42
log
@add a new relay 'path' action to filter the URL path and arguments.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.41 2007/04/10 21:45:11 reyk Exp $
d242 4
a245 1
This parameter is mandatory.
@


1.41
log
@sort entity types
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.40 2007/03/21 00:08:08 reyk Exp $
d463 6
d702 1
@


1.40
log
@in addition to the host retry option in tables, add support for the
optional connection "retry" to the forward to, service, and nat lookup
options. for example, "nat lookup retry 3" is useful when running
hoststated as a transparent proxy when connecting to unreliable
frontend/backend servers.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.39 2007/03/13 12:04:52 reyk Exp $
d452 6
a464 6
.Ic http
protocol.
This type is only available with the direction
.Ic request .
.It Ic cookie
Look up the entity as a value in the Cookie header when using the
@


1.39
log
@allow to specify the IP_TTL and IP_MINTTL options for the relays to
support the Generalized TTL Security Mechanism (GTSM) according to RFC
3682. this is especially useful with inbound connections and a fixed
distance to the backend servers.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.38 2007/03/12 12:21:09 reyk Exp $
d328 4
a331 1
.It Ic forward to Ar address Ic port Ar port
d333 4
a336 1
.It Ic service Ar name
d378 4
a381 1
.It Ic nat lookup
@


1.38
log
@hoststated.conf is not a program.

thanks to Sebastian Reitenbach, closes pr 5409
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.37 2007/03/06 19:26:46 reyk Exp $
d508 1
a508 1
Enable or disable the specified TCP option; see
d510 3
a512 1
for details about TCP options.
d521 8
@


1.37
log
@add support for handling simple HTTP cookies (no per-path/domain
cookies yet), for example: cookie hash "JSESSIONID"

tested by some people
ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.36 2007/02/27 18:04:51 jmc Exp $
d714 1
a714 1
program first appeared in
d719 1
a719 1
.Nm
@


1.36
log
@replys -> replies;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.35 2007/02/27 13:38:58 reyk Exp $
d454 6
d676 1
@


1.35
log
@in addition to actions on request headers, allow to define relay
actions on response headers (the reply sent by backend HTTP servers).
the default and slightly faster relay streaming mode will be used if
no actions are defined.

for example:
response change "Server" to "OpenBSD-hoststated/4.1"

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.34 2007/02/27 08:39:00 reyk Exp $
d438 1
a438 1
HTTP server replys.
@


1.34
log
@manpage clarification for the "change" and "append" relay actions.

from Tamas TEVESZ
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.33 2007/02/27 08:02:33 jmc Exp $
d418 1
d430 11
d452 2
@


1.33
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.32 2007/02/26 20:48:48 pyr Exp $
d451 5
d460 5
@


1.32
log
@kill the ``use ssl'' directive for consistency across parser directives.
another heads up for testers: you need to change configuration files.
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.31 2007/02/26 19:25:25 reyk Exp $
a174 1
If
d203 1
a203 1
If this directive is postpended with
d205 1
d214 2
a215 1
demotion option, this will increment the carp demotion counter for the
@


1.31
log
@sync the documentation with the latest change to require a 'header'
keyword for default relay actions.

ok pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.30 2007/02/26 13:41:52 jmc Exp $
a156 3
If
.Ic use ssl
is specified, HTTPS will be used to contact the host.
d158 1
a158 2
This has the same effect as above but also implies
.Ic use ssl .
a175 2
.Ic use ssl
is specified, HTTPS will be used to contact the host.
d177 1
a177 2
This has the same effect as above but also implies
.Ic use ssl .
d182 7
a188 1
.It Ic check send Ar data Ic expect Ar pattern
d204 3
a206 3
If
.Ic use ssl
is specified, the data will be sent and/or received inside an SSL tunnel.
d208 1
a208 4
This has the same effect as
.Ic check tcp
but also implies
.Ic use ssl .
a210 3
If
.Ic use ssl
is specified, a complete SSL handshake will also be performed.
a246 2
.It Ic use ssl
If the table uses a TCP check, wrap it in SSL.
@


1.30
log
@grammar;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.29 2007/02/26 13:03:30 pyr Exp $
d426 1
d431 1
a431 1
The
d434 12
a445 4
The optional
.Ic url
keyword will look up the entity as a GET variable in the URL instead
of an HTTP header value when using the
d448 3
d465 1
a465 4
.It Xo
.Op Ic url
.Ic expect Ar value Ic from Ar key
.Xc
d469 1
a469 10
The
.Ic url
keyword will expect the value as a GET variable in the URL instead
of an HTTP header value when using the
.Ic http
protocol.
.It Xo
.Op Ic url
.Ic filter Ar value Ic from Ar key
.Xc
d474 1
a474 4
.It Xo
.Op Ic url
.Ic hash Ar key
.Xc
d482 1
a482 4
.It Xo
.Op Ic url
.Ic log Ar key
.Xc
d649 4
a652 4
        protocol http
        append "$REMOTE_ADDR" to "X-Forwarded-For"
        append "$SERVER_ADDR:$SERVER_PORT" to "X-Forwarded-By"
        change "Keep-Alive" to "$TIMEOUT"
@


1.29
log
@Change the ``virtual ip'' directive to ``virtual host''.
You will need to update your configuration files accordingly.
"just do it", reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.28 2007/02/26 11:59:48 reyk Exp $
d374 1
a374 1
host connections, the connection will be retried for
d376 2
a377 2
more times,
see the
@


1.28
log
@re-use the retry value from table host entries for inbound relay
connections. the relay will retry to connect to the hosts for the
specified number of times. this sounds bad, but is a useful
"workaround" for unreliable backend servers...
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.27 2007/02/25 09:04:59 jmc Exp $
d287 1
a287 1
.It Ic virtual ip Ar address Ic port Ar port
d632 2
a633 2
	virtual ip www.example.com port 8080 interface trunk0
	virtual ip www6.example.com port 80 interface trunk0
@


1.27
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.26 2007/02/24 16:14:02 reyk Exp $
d372 8
@


1.26
log
@disable anonymous DH by default (cipher suite HIGH:!ADH instead of HIGH).
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.25 2007/02/24 15:48:54 reyk Exp $
a430 1
.Pp
d519 1
a519 1
If not specified, the default value 
d539 1
a539 1
Enable the SSLv2 protocol,
d545 1
a545 1
Disable the SSLv3 protocol,
d551 1
a551 1
Disable the TLSv1/SSLv3.1 protocol,
@


1.25
log
@disable SSLv2 and use "HIGH" crypto cipher suites by default.

suggested by dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.24 2007/02/24 00:22:32 reyk Exp $
d521 2
a522 2
.Ar HIGH
to force strong crypto cipher suites will be used.
@


1.24
log
@- allow to specify the SSL cipher suite and the SSL protocols
  (as required by the PCI DSS)
- increase the default listen backlog to 10, allow to modify the
  backlog as a per-protocol tcp option to improve the performance
  on busy systems (to get less connection failures on heavy load)
- close the connection if SSL_accept returned an error
- instead of logging _new_ relay sessions to syslog, log the
  sessions in relay_close() after they have been _finished_.
  this will allow to collect some additional information
- add a new log keyword to log specified header/url entities (useful
  to track "bad guys" using many session ids or multiple user agents)
- some minor fixes, manpage bits, and bump the copyright (by some
  reason, i didn't realize that we already have 2007...).
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.23 2007/02/23 14:54:44 jmc Exp $
d520 3
a522 2
If not specified, the default suite defined by the SSL library will be
used.
d540 2
a541 1
Enable the SSLv2 protocol.
d546 2
a547 1
Enable the SSLv3 protocol.
d552 2
a553 1
Enable the TLSv1/SSLv3.1 protocol.
d654 1
a654 1
	ssl { no sslv2, ciphers "HIGH" }
@


1.23
log
@i.e. -> e.g.; ok reyk
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.22 2007/02/22 09:34:06 jmc Exp $
d417 16
d478 6
a483 6
The
.Ic url
keyword will look up the entity as a GET variable in the URL instead
of an HTTP header value when using the
.Ic http
protocol.
d490 6
d513 15
a527 1
.It Ic ssl session cache Ar value
d535 16
d649 2
d669 1
a669 1
protocol http_ssl {
d674 1
@


1.22
log
@put `check ssl' in the right place;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.21 2007/02/22 09:20:01 jmc Exp $
d480 1
a480 1
i.e. for SSH connections.
@


1.21
log
@various language/macro fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.20 2007/02/22 04:13:06 reyk Exp $
d208 5
a217 3
.It Ic check ssl
This has the same effect as above but also implies
.Ic use ssl .
@


1.20
log
@document the retry option before setting the state to down for hosts
in tables.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.19 2007/02/22 04:06:18 reyk Exp $
d47 2
a48 2
Relays allow layer 7 loadbalancing, SSL acceleration, and
general-purpose TCP proxying.
d306 1
a306 1
The main purpose of a relay is to provide advanced loadbalancing
d320 1
a320 1
If the 
d324 1
a324 1
The relay will lookup a private key in
d327 1
a327 2
.Pa /etc/ssl/address.crt
in this case, 
d354 1
a354 1
distributes the outgoing connections using a round-robin scheduler
d365 3
a367 3
Additional input can be feeded into the hash by looking at HTTP
headers and GET variables, see the
.Sx Protocols
d371 1
a371 1
When redirecting connections with a
d375 3
a377 3
to a relay listening on localhost, this directive will allow to
lookup the real destination address of the intended target host.
This allows to run the relay as a transparent proxy.
d392 1
a392 1
The generic TCP protocol options will be used by default,
d394 1
a394 1
.Sx Protocols
d399 1
a399 1
They allow to set generic TCP options, SSL settings, and actions
d438 1
a438 1
of a HTTP header value when using the
d453 1
a453 1
Feed the value of the selected entity into the loadbalancing hash to
d458 1
a458 1
.Sx Relays
d462 2
a463 2
keyword will lookup the entity as a GET variable in the URL instead
of a HTTP header value when using the
d467 1
a467 1
Enable or disable the specified TCP option, see
a470 1
.Pp
d478 1
a478 1
ie. for SSH connections.
d493 2
a494 3
is zero, the default size defined by the SSL library will be
used, a positive number will set the maximun size in bytes and the
keyword
d505 1
a505 1
directives may contain predefined macros that will be expanded on runtime:
d519 15
d580 1
a580 1
protocol (SSL acceleration and layer 7 loadbalancing).
d621 1
a621 13
.Sh FILES
.Bl -tag -width "/etc/hoststated.conf" -compact
.It Pa /etc/hoststated.conf
.Xr hoststated 8
configuration file
.It Pa /etc/services
Service name database
.It Pa /etc/ssl/private/address.key
.It Pa /etc/ssl/address.crt
Location of the relay SSL server certificates, where
.Ar address
is the configured IP address of the relay.
.El
d632 1
@


1.19
log
@document the new options to manipulate carp demotion counters.
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.18 2007/02/22 03:32:39 reyk Exp $
d230 4
a233 1
.It Ic host Ar address
d238 4
@


1.18
log
@Add layer 7 functionality to hoststated used for layer 7
loadbalancing, SSL acceleration, general-purpose TCP relaying, and
transparent proxying.

see hoststated.conf(5) and my upcoming article on undeadly.org for
details.

ok to commit deraadt@@ pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.17 2007/02/07 15:17:46 reyk Exp $
d92 12
d216 10
@


1.17
log
@add new "log (updates|all)" configuration option to log state
notifications after completed host checks.  either only log the
"updates" to new states or log "all" state notifications, even if the
state didn't change. the log messages will be reported to syslog or to
stderr if the daemon is running in foreground mode.

ok claudio@@ pyr@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.16 2007/01/29 18:38:15 pyr Exp $
d29 1
a29 1
is divided into four main sections:
d46 5
d117 9
d269 225
a493 1
.Sh EXAMPLE
d534 46
d587 5
d595 14
a608 1
.Xr hoststated 8
@


1.16
log
@manpage tweaks.
advised by and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.15 2007/01/29 14:23:31 pyr Exp $
d92 19
@


1.15
log
@Add SSL support to hoststated.
with help and OK reyk@@
with help and advice by claudio@@ and Srebrenko Sehic
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.14 2007/01/10 13:42:19 jmc Exp $
d116 1
a116 1
This has the same effect than above but also implies 
d138 1
a138 1
This has the same effect than above but also implies 
d162 1
a162 1
is specified, the data will be sent and/or received inside a SSL tunnel.
d169 1
a169 1
This has the same effect than above but also implies 
d191 1
a191 1
When the table uses a TCP check, wrap it into SSL.
@


1.14
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.13 2007/01/09 13:50:11 pyr Exp $
d112 6
d134 6
d160 3
d165 6
d190 2
@


1.13
log
@Finish renaming hostated to hoststated.
Note to testers: the user the daemon changes its id to is now _hoststated,
don't forget to update master.passwd.
ok reyk@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: hoststated.conf.5,v 1.12 2007/01/08 20:46:18 reyk Exp $
d56 1
a56 1
.Pa /etc/services,
d134 1
a134 1
port specified, then 
d137 1
a137 1
Incoming data is then read and is expected to match against 
@


1.12
log
@do NOT use the regexp interface. it is way to complicated, error-prone
and we don't know about all the possible security problems.

change the check send/expect code to use the fnmatch(3) interface
using shell globbing rules instead. this allows simple patterns like
"220 * ESMTP*" or "SSH-[12].??-*".

suggested by deraadt@@ and otto@@
ok Pierre-Yves Ritschard (pyr at spootnik dot org)
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.11 2007/01/08 17:52:27 reyk Exp $
d18 1
a18 1
.Dt HOSTATED.CONF 5
d21 1
a21 1
.Nm hostated.conf
d26 1
a26 1
.Xr hostated 8 .
d36 1
a36 1
.Xr hostated 8 .
d153 1
a153 1
.Xr hostatectl 8 .
d185 1
a185 1
.Xr hostatectl 8 .
d249 1
a249 1
	tag HOSTATED
d255 3
a257 3
.Bl -tag -width "/etc/hostated.conf" -compact
.It Pa /etc/hostated.conf
.Xr hostated 8
d263 2
a264 2
.Xr hostatectl 8 ,
.Xr hostated 8
@


1.11
log
@ports can be specified by number or by name
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.10 2007/01/08 17:05:48 reyk Exp $
d132 1
a132 1
.It Ic check send Ar data Ic expect Ar regexp
d138 2
a139 1
.Ar regexp.
a219 2
##
##
@


1.10
log
@timeouts must not exceed the global interval
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.9 2007/01/08 13:37:26 reyk Exp $
d47 13
d158 4
a161 3
.It Ic real port Ar number
When using the TCP or HTTP checking methods, use this port to connect
to hosts.
d199 6
a204 2
.It Ic virtual ip Ar address Ic port Ar number
Specify an address and a port that will be used to redirect requests
d260 2
@


1.9
log
@add a generic send/expect check using regular expression (see
regex(3)).  this allows to define additional checks for other TCP
protocols.

From Pierre-Yves Ritschard (pyr at spootnik dot org)
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.8 2007/01/03 09:42:30 reyk Exp $
d75 1
a75 1
.Ic timeout Ar number
d77 2
a78 3
Set the global timeout in milliseconds for checks.
This can be overriden by the timeout value in the table definitions
and is 200 milliseconds by default.
d81 1
a81 1
.Ic interval Ar number
d83 4
a86 2
Set the interval in seconds at which the hosts will be checked.
The default interval is 10 seconds.
@


1.8
log
@allow the sticky-address option for round-robin pools.

From Pierre-Yves Ritschard (pyr at spootnik dot org)
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.7 2006/12/25 19:07:34 reyk Exp $
d118 15
@


1.7
log
@the global timeout for checks is specified in milliseconds
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.6 2006/12/25 18:12:14 reyk Exp $
d155 6
@


1.6
log
@partial rewrite of the check_* routines to use libevent everywhere
instead of nested select() calls and to handle the non-blocking
sockets properly.

From Pierre-Yves Ritschard (pyr at spootnik dot org)
(with a little help by me)
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.5 2006/12/19 14:39:30 jmc Exp $
d77 1
a77 1
Set the global timeout for checks.
@


1.5
log
@sort the various commands; discussed w/ pyr
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.4 2006/12/18 19:48:04 jmc Exp $
d71 1
a71 1
Only one global setting can be set.
d75 7
d135 3
a137 2
Set the timeout in milliseconds for each host that is checked.
The default timeout is 200 milliseconds.
@


1.4
log
@some initial improvements for the hostated pages;
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.3 2006/12/16 12:42:14 reyk Exp $
a85 6
.It Ic check tcp
Use a simple TCP connect to check that hosts are up.
.It Ic check icmp
Ping hosts in this table to determine whether they are up or not.
This method will automatically use ICMP or ICMPV6 depending on the
address family of each host.
d107 15
a121 3
.It Ic timeout Ar number
Set the timeout in milliseconds for each host that is checked.
The default timeout is 200 milliseconds.
d127 3
a129 9
.It Ic host Ar address
Add the host whose address is
.Ar address
to the list of hosts to be checked in this table.
Each table needs at least one host.
.It Ic disable
Start the table disabled \(en no hosts will be checked in this table.
The table can be later enabled through
.Xr hostatectl 8 .
a139 11
.It Ic virtual ip Ar address Ic port Ar number
Specify an address and a port that will be used to redirect requests
to the hosts in the main or backup table.
Optionally an interface name can be given as follows,
to specify which interface the rdr rule will be enabled on:
.Bd -literal -offset indent
interface ``ifname''
.Ed
.It Ic table Ar name
Specify the main table to be used.
This is mandatory.
d147 3
d155 8
@


1.3
log
@knf, spacing

please note that some editors will replace tabs with multiple spaces
if you cut & paste code from other sections.  please try to keep the
tabs ;).
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.2 2006/12/16 11:52:51 reyk Exp $
d22 1
a22 1
.Nd Host Status daemon configuration file.
d24 3
a26 5
The
.Xr hostated 8
daemon maintains
.Xr pf 4
tables up to date.
a27 1
The
d29 1
a29 1
configuration file is divided into four main sections.
d87 1
a87 1
Use a simple tcp connect to check that hosts are up.
d89 2
a90 2
Ping hosts in this table to determine wether they are up or not.
This method will automatically use icmp or icmpv6 depending on the
d96 1
a96 1
.Ar number
d103 2
a104 2
To compute the digest you can use this simple command:
.Bd -literal -offset 2n
d108 3
a110 2
This will give you a digest of the form
.Bd -literal -offset 2n
a112 2
.Pp
that you can use as-is in your digest statement.
d117 1
a117 1
When using the tcp or http checking methods, use this port to connect
d127 1
a127 1
Start the table disabled, no hosts will be checked in this table.
d134 2
a135 1
rdr rule, they are used to specify which addresses will be redirected
d143 2
a144 1
Optionally an interface name can be specified like this.
a147 2
.Pp
to specify which interface the rdr rule will be enabled on.
d157 1
d162 1
a162 4
This allows for easier filter rules in your main
.Xr pf 4
configuration.
.Xr hostatectl 5 .
d165 5
a169 2
This configuration file would create a service 'www' which load-balances
4 hosts and falls back to 1 host containing a ``sorry page'':
d214 2
a215 2
.Xr hostated 8 ,
.Xr hostatectl 8 .
@


1.2
log
@new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD: hostated.conf.5,v 1.1 2006/12/16 11:45:07 reyk Exp $
d26 1
a26 1
daemon maintains 
d41 1
a41 1
Table definitions describe the content of a 
d138 1
a138 1
rdr rule, they are used to specify which addresses will be redirected 
d201 1
a201 1
service www { 
@


1.1
log
@Import hostated, the host status daemon.  This daemon will monitor
remote hosts and dynamically alter pf(4) tables and redirection rules
for active server load balancing.  The daemon has been written by
Pierre-Yves Ritschard (pyr at spootnik.org) and was formerly known as
"slbd".

The daemon is fully functional but it still needs some work and
cleanup so we don't link it to the build yet.  Some TODOs are a
partial rewrite of the check_* routines (use libevent whenever we
can), improvement of the manpages, and general knf and cleanup.

ok deraadt@@ claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d85 2
a86 1
method. Only one health-checking method can be used per table.
d104 3
a106 3
.Ar digest
. The digest does not take the HTTP headers into account. To compute the
digest you can use this simple command:
a108 1

d110 1
a113 1

d115 1
d122 3
a124 2
to hosts. This parameter is mandatory. Main and backup tables need
to have the same real port.
d145 2
a146 2
to the hosts in the main or backup table. 
Optionally an interface name can be specified like this
a148 1

d150 1
d153 2
a154 1
Specify the main table to be used. This is mandatory.
d159 2
a160 1
Set the service initially disabled. It can be later enabled through
d164 2
a165 2
rdr rule with the name supplied. This allows for easier filter rules
in your main
@

