head	1.16;
access;
symbols
	OPENBSD_6_2:1.16.0.12
	OPENBSD_6_2_BASE:1.16
	OPENBSD_6_1:1.16.0.10
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.6
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.4
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.16
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.14
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.10
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.8
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.6
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.4
	OPENBSD_5_0:1.14.0.2
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.9.0.10
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.6
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.4
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.2
	OPENBSD_4_3_BASE:1.9;
locks; strict;
comment	@ * @;


1.16
date	2015.06.11.18.49.09;	author reyk;	state Exp;
branches;
next	1.15;
commitid	r36j1ZCD0yPK3S9O;

1.15
date	2015.01.22.17.42.09;	author reyk;	state Exp;
branches;
next	1.14;
commitid	puppem00jmzmdm4f;

1.14
date	2011.05.19.08.56.49;	author reyk;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.04.21.31.04;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2010.01.11.06.40.14;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2009.11.13.20.09.54;	author jsg;	state Exp;
branches;
next	1.10;

1.10
date	2009.08.17.11.36.01;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2007.12.20.20.15.43;	author reyk;	state Exp;
branches;
next	1.8;

1.8
date	2007.12.08.20.36.36;	author pyr;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.19.12.08.55;	author pyr;	state Exp;
branches;
next	1.6;

1.6
date	2007.09.28.13.29.56;	author pyr;	state Exp;
branches;
next	1.5;

1.5
date	2007.09.07.08.33.31;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2007.02.22.03.32.40;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.01.20.03.38;	author pyr;	state Exp;
branches;
next	1.2;

1.2
date	2006.12.16.18.50.33;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2006.12.16.11.45.07;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Use "compliant" header guards by avoiding the reserved '_' namespace.

Pointed out by Markus Elfring

OK mikeb@@ millert@@
@
text
@/*	$OpenBSD: parser.h,v 1.15 2015/01/22 17:42:09 reyk Exp $	*/

/*
 * Copyright (c) 2006 Pierre-Yves Ritschard <pyr@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include "relayd.h"

#ifndef RELAYCTL_PARSER_H
#define RELAYCTL_PARSER_H

enum actions {
	NONE,
	SHOW_SUM,
	SHOW_HOSTS,
	SHOW_RDRS,
	SHOW_RELAYS,
	SHOW_SESSIONS,
	SHOW_ROUTERS,
	RDR_DISABLE,
	RDR_ENABLE,
	TABLE_DISABLE,
	TABLE_ENABLE,
	HOST_DISABLE,
	HOST_ENABLE,
	SHUTDOWN,
	POLL,
	LOAD,
	RELOAD,
	MONITOR,
	LOG_VERBOSE,
	LOG_BRIEF
};

struct parse_result {
	struct ctl_id	id;
	enum actions	action;
	char		*path;
};

struct parse_result	*parse(int, char *[]);

#endif /* RELAYCTL_PARSER_H */
@


1.15
log
@Clean up the relayd headers with help of include-what-you-use and some
manual review.  Based on common practice, relayd.h now includes the
necessary headers for itself.

OK benno@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.14 2011/05/19 08:56:49 reyk Exp $	*/
d21 3
d54 2
@


1.14
log
@Fix reload support in relayd(8) by reimplementing large parts of the
daemon infrastructure. The previous design made it fairly hard to
reload the complex data structures, especially relays and protocols.
One of the reasons was that the privsep'd relayd processes had two
ways of getting their configuration: 1) from memory after forking from
the parent process and 2) and (partially) via imsgs after reload.  The
new implementation first forks the privsep'd children before the
parents loads the configuration and sends it via imsgs to them; so it
is only like 2) before.  It is based on an approach that I first
implemented for iked(8) and I also fixed many bugs in the code.

Thanks to many testers including dlg@@ sthen@@ phessler@@
ok pyr@@ dlg@@ sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.13 2010/09/04 21:31:04 tedu Exp $	*/
d18 2
@


1.13
log
@move some things around to make intentions clear.  not really a functional
change.  ok claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.12 2010/01/11 06:40:14 jsg Exp $	*/
d35 1
d45 1
@


1.12
log
@add "log brief" and "log verbose" to change logging verbosity
like several other things in the tree.

ok reyk@@ looks fine claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.11 2009/11/13 20:09:54 jsg Exp $	*/
a46 2
const struct token      *match_token(const char *, const struct token *);
void                     show_valid_args(const struct token *);
@


1.11
log
@Don't use [] in function arguments when dealing with arrays
we don't know the size of, otherwise gcc >= 4 will error.

ok markus@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.10 2009/08/17 11:36:01 reyk Exp $	*/
d36 3
a38 1
	MONITOR
@


1.10
log
@also report routers and their host states in relayctl

ok pyr@@, jmc@@ for man bits
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.9 2007/12/20 20:15:43 reyk Exp $	*/
d45 2
a46 2
const struct token      *match_token(const char *, const struct token []);
void                     show_valid_args(const struct token []);
@


1.9
log
@implement statistics for redirections, like the existing statistics
for relays.  they can be viewed with the new "relayctl show redirects"
command.

(uses the previous change to pf_table.c to get the statistics)

looks good pyr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.8 2007/12/08 20:36:36 pyr Exp $	*/
d26 1
@


1.8
log
@Rename everything which reffered to services refer to rdr for internals
(for instance: rename struct service to struct rdr), refer to redirects
otherwise (hoststatectl output).
ok reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.7 2007/10/19 12:08:55 pyr Exp $	*/
d23 1
@


1.7
log
@Add the ability to schedule an immediate check through hoststatectl.
Especially useful when interval is rather long.
I was supposed to commit this before 4.2.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.6 2007/09/28 13:29:56 pyr Exp $	*/
d25 2
a26 2
	SERV_DISABLE,
	SERV_ENABLE,
@


1.6
log
@Correct my mail address.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.5 2007/09/07 08:33:31 reyk Exp $	*/
d32 1
@


1.5
log
@add a "show sessions" command to dump the complete list of running relay
sessions.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.4 2007/02/22 03:32:40 reyk Exp $	*/
d4 1
a4 1
 * Copyright (c) 2006 Pierre-Yves Ritschard <pyr@@spootnik.org>
@


1.4
log
@Add layer 7 functionality to hoststated used for layer 7
loadbalancing, SSL acceleration, general-purpose TCP relaying, and
transparent proxying.

see hoststated.conf(5) and my upcoming article on undeadly.org for
details.

ok to commit deraadt@@ pyr@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.3 2007/02/01 20:03:38 pyr Exp $	*/
d24 1
@


1.3
log
@add a monitor mode to hoststatectl to continuously report changes in
hoststated.
ok reyk@@, "looks nice and clean" niallo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.2 2006/12/16 18:50:33 reyk Exp $	*/
d22 2
@


1.2
log
@- allow to use host/service/table names instead of Ids in hostatectl.
- minor change of the "hostatectl show" command output
- increase the max service and tag names (max pf tag name size is 64 now!)

thanks to pyr who found a bug in my initial diff
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.1 2006/12/16 11:45:07 reyk Exp $	*/
d29 2
a30 1
	RELOAD
@


1.1
log
@Import hostated, the host status daemon.  This daemon will monitor
remote hosts and dynamically alter pf(4) tables and redirection rules
for active server load balancing.  The daemon has been written by
Pierre-Yves Ritschard (pyr at spootnik.org) and was formerly known as
"slbd".

The daemon is fully functional but it still needs some work and
cleanup so we don't link it to the build yet.  Some TODOs are a
partial rewrite of the check_* routines (use libevent whenever we
can), improvement of the manpages, and general knf and cleanup.

ok deraadt@@ claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
a33 1
	objid_t		id;
@

