head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.64
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.62
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.58
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.54
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.56
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.48
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.52
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.50
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.46
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.44
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.42
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.40
	OPENBSD_5_0:1.6.0.38
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.36
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.34
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.30
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.32
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.28
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.26
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.24
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.22
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.20
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.18
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.16
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.14
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.12
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.10
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.8
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.6
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.18
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2002.07.01.19.31.37;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.28.07;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.09.05.04.32.46;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.07.20.12.02.15;	author joshd;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.15.55.59;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.00;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.00;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@license update of CMU parts.  due to communication with wcw+@@andrew.cmu.edu,
pushed for by tygs@@netcologne.de.  Apparently we also now known how to talk
to the lawyers there, if we were so mad.  Note that a few other copyright
issues in pppd still remain, so this does not close this story.
@
text
@/*	$OpenBSD: upap.h,v 1.5 2002/02/16 21:28:07 millert Exp $	*/

/*
 * upap.h - User/Password Authentication Protocol definitions.
 *
 * Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. The name "Carnegie Mellon University" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For permission or any legal
 *    details, please contact
 *      Office of Technology Transfer
 *      Carnegie Mellon University
 *      5000 Forbes Avenue
 *      Pittsburgh, PA  15213-3890
 *      (412) 268-4387, fax: (412) 268-7395
 *      tech-transfer@@andrew.cmu.edu
 *
 * 4. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by Computing Services
 *     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
 *
 * CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
 * THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
 * FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
 * AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
 * OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

/*
 * Packet header = Code, id, length.
 */
#define UPAP_HEADERLEN	(sizeof (u_char) + sizeof (u_char) + sizeof (u_short))


/*
 * UPAP codes.
 */
#define UPAP_AUTHREQ	1	/* Authenticate-Request */
#define UPAP_AUTHACK	2	/* Authenticate-Ack */
#define UPAP_AUTHNAK	3	/* Authenticate-Nak */


/*
 * Each interface is described by upap structure.
 */
typedef struct upap_state {
    int us_unit;		/* Interface unit number */
    char *us_user;		/* User */
    int us_userlen;		/* User length */
    char *us_passwd;		/* Password */
    int us_passwdlen;		/* Password length */
    int us_clientstate;		/* Client state */
    int us_serverstate;		/* Server state */
    u_char us_id;		/* Current id */
    int us_timeouttime;		/* Timeout (seconds) for auth-req retrans. */
    int us_transmits;		/* Number of auth-reqs sent */
    int us_maxtransmits;	/* Maximum number of auth-reqs to send */
    int us_reqtimeout;		/* Time to wait for auth-req from peer */
} upap_state;


/*
 * Client states.
 */
#define UPAPCS_INITIAL	0	/* Connection down */
#define UPAPCS_CLOSED	1	/* Connection up, haven't requested auth */
#define UPAPCS_PENDING	2	/* Connection down, have requested auth */
#define UPAPCS_AUTHREQ	3	/* We've sent an Authenticate-Request */
#define UPAPCS_OPEN	4	/* We've received an Ack */
#define UPAPCS_BADAUTH	5	/* We've received a Nak */

/*
 * Server states.
 */
#define UPAPSS_INITIAL	0	/* Connection down */
#define UPAPSS_CLOSED	1	/* Connection up, haven't requested auth */
#define UPAPSS_PENDING	2	/* Connection down, have requested auth */
#define UPAPSS_LISTEN	3	/* Listening for an Authenticate */
#define UPAPSS_OPEN	4	/* We've sent an Ack */
#define UPAPSS_BADAUTH	5	/* We've sent a Nak */


/*
 * Timeouts.
 */
#define UPAP_DEFTIMEOUT	3	/* Timeout (seconds) for retransmitting req */
#define UPAP_DEFREQTIME	30	/* Time to wait for auth-req from peer */

extern upap_state upap[];

void upap_authwithpeer(int, char *, char *);
void upap_authpeer(int);

extern struct protent pap_protent;
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: upap.h,v 1.4 1997/09/05 04:32:46 millert Exp $	*/
d6 1
a6 2
 * Copyright (c) 1989 Carnegie Mellon University.
 * All rights reserved.
d8 3
a10 11
 * Redistribution and use in source and binary forms are permitted
 * provided that the above copyright notice and this paragraph are
 * duplicated in all such forms and that any documentation,
 * advertising materials, and other materials related to such
 * distribution and use acknowledge that the software was developed
 * by Carnegie Mellon University.  The name of the
 * University may not be used to endorse or promote products derived
 * from this software without specific prior written permission.
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED
 * WARRANTIES OF MERCHANTIBILITY AND FITNESS FOR A PARTICULAR PURPOSE.
d12 31
a42 1
 * Id: upap.h,v 1.6 1996/07/01 01:21:45 paulus Exp
@


1.4
log
@ppp 2.3.1
@
text
@d1 1
a1 1
/*	$OpenBSD: upap.h,v 1.3 1996/07/20 12:02:15 joshd Exp $	*/
d86 2
a87 2
void upap_authwithpeer __P((int, char *, char *));
void upap_authpeer __P((int));
@


1.3
log
@Update pppd to 2.3a4:
Add redo option error-reporting, add PAM, add microsoft compatibility
kludges, bzero stuff at important places, add one or two options
other generic enhancements.  From: Paul.Mackerras@@cs.anu.edu.au
@
text
@d1 1
a1 1
/*	$OpenBSD: upap.h,v 1.2 1996/03/25 15:55:59 niklas Exp $	*/
d20 2
a82 1

@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a84 1
void upap_init __P((int));
a86 6
void upap_lowerup __P((int));
void upap_lowerdown __P((int));
void upap_input __P((int, u_char *, int));
void upap_protrej __P((int));
int  upap_printpkt __P((u_char *, int,
			void (*) __P((void *, char *, ...)), void *));
@


1.1
log
@Initial revision
@
text
@d1 2
a19 2
 *
 * $Id: upap.h,v 1.5 1995/07/04 23:48:12 paulus Exp $
d94 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
