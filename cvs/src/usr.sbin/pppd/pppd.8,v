head	1.46;
access;
symbols
	OPENBSD_6_1:1.46.0.8
	OPENBSD_6_1_BASE:1.46
	OPENBSD_6_0:1.46.0.4
	OPENBSD_6_0_BASE:1.46
	OPENBSD_5_9:1.46.0.2
	OPENBSD_5_9_BASE:1.46
	OPENBSD_5_8:1.44.0.4
	OPENBSD_5_8_BASE:1.44
	OPENBSD_5_7:1.43.0.2
	OPENBSD_5_7_BASE:1.43
	OPENBSD_5_6:1.43.0.4
	OPENBSD_5_6_BASE:1.43
	OPENBSD_5_5:1.42.0.4
	OPENBSD_5_5_BASE:1.42
	OPENBSD_5_4:1.41.0.2
	OPENBSD_5_4_BASE:1.41
	OPENBSD_5_3:1.39.0.2
	OPENBSD_5_3_BASE:1.39
	OPENBSD_5_2:1.38.0.8
	OPENBSD_5_2_BASE:1.38
	OPENBSD_5_1_BASE:1.38
	OPENBSD_5_1:1.38.0.6
	OPENBSD_5_0:1.38.0.4
	OPENBSD_5_0_BASE:1.38
	OPENBSD_4_9:1.38.0.2
	OPENBSD_4_9_BASE:1.38
	OPENBSD_4_8:1.36.0.2
	OPENBSD_4_8_BASE:1.36
	OPENBSD_4_7:1.35.0.4
	OPENBSD_4_7_BASE:1.35
	OPENBSD_4_6:1.35.0.6
	OPENBSD_4_6_BASE:1.35
	OPENBSD_4_5:1.35.0.2
	OPENBSD_4_5_BASE:1.35
	OPENBSD_4_4:1.34.0.2
	OPENBSD_4_4_BASE:1.34
	OPENBSD_4_3:1.33.0.4
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.31.0.2
	OPENBSD_4_1_BASE:1.31
	OPENBSD_4_0:1.30.0.8
	OPENBSD_4_0_BASE:1.30
	OPENBSD_3_9:1.30.0.6
	OPENBSD_3_9_BASE:1.30
	OPENBSD_3_8:1.30.0.4
	OPENBSD_3_8_BASE:1.30
	OPENBSD_3_7:1.30.0.2
	OPENBSD_3_7_BASE:1.30
	OPENBSD_3_6:1.29.0.6
	OPENBSD_3_6_BASE:1.29
	OPENBSD_3_5:1.29.0.4
	OPENBSD_3_5_BASE:1.29
	OPENBSD_3_4:1.29.0.2
	OPENBSD_3_4_BASE:1.29
	OPENBSD_3_3:1.26.0.2
	OPENBSD_3_3_BASE:1.26
	OPENBSD_3_2:1.22.0.2
	OPENBSD_3_2_BASE:1.22
	OPENBSD_3_1:1.21.0.10
	OPENBSD_3_1_BASE:1.21
	OPENBSD_3_0:1.21.0.8
	OPENBSD_3_0_BASE:1.21
	OPENBSD_2_9_BASE:1.21
	OPENBSD_2_9:1.21.0.6
	OPENBSD_2_8:1.21.0.4
	OPENBSD_2_8_BASE:1.21
	OPENBSD_2_7:1.21.0.2
	OPENBSD_2_7_BASE:1.21
	OPENBSD_2_6:1.19.0.2
	OPENBSD_2_6_BASE:1.19
	OPENBSD_2_5:1.15.0.4
	OPENBSD_2_5_BASE:1.15
	OPENBSD_2_4:1.15.0.2
	OPENBSD_2_4_BASE:1.15
	OPENBSD_2_3:1.13.0.2
	OPENBSD_2_3_BASE:1.13
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.46
date	2015.10.28.10.02.59;	author jmc;	state Exp;
branches;
next	1.45;
commitid	USd86MPuZqx3gQD7;

1.45
date	2015.09.14.20.06.59;	author schwarze;	state Exp;
branches;
next	1.44;
commitid	r87YNrjEWwl7OkJ0;

1.44
date	2015.07.27.17.28.39;	author sobrado;	state Exp;
branches;
next	1.43;
commitid	a73SHFfjDK7MTyGx;

1.43
date	2014.03.17.17.07.45;	author deraadt;	state Exp;
branches;
next	1.42;

1.42
date	2014.01.21.03.15.46;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2013.07.16.11.13.34;	author schwarze;	state Exp;
branches;
next	1.40;

1.40
date	2013.04.15.16.19.46;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2012.08.29.18.53.36;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2010.09.20.07.41.17;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2010.09.19.21.59.23;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2010.03.26.19.30.40;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2008.11.09.12.34.47;	author tobias;	state Exp;
branches;
next	1.34;

1.34
date	2008.05.07.12.16.32;	author claudio;	state Exp;
branches;
next	1.33;

1.33
date	2007.06.04.14.59.45;	author henning;	state Exp;
branches;
next	1.32;

1.32
date	2007.05.31.19.20.28;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2006.11.12.15.13.24;	author stevesk;	state Exp;
branches;
next	1.30;

1.30
date	2005.01.31.09.50.29;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2003.09.02.18.56.36;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2003.06.13.09.50.32;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.11.08.51.21;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.03.16.16.20.05;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2003.02.18.07.51.09;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.02.09.07.26.45;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2003.01.23.14.31.19;	author avsm;	state Exp;
branches;
next	1.22;

1.22
date	2002.05.19.20.47.52;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.15.11.46.00;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.03.14.21.31.38;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	99.09.23.04.12.11;	author alex;	state Exp;
branches;
next	1.18;

1.18
date	99.07.20.12.31.25;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	99.07.03.19.04.21;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	99.06.05.22.17.55;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	98.06.15.17.56.17;	author mickey;	state Exp;
branches;
next	1.14;

1.14
date	98.05.08.04.52.31;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	98.01.17.20.30.27;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	97.11.17.18.15.14;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.11.13.23.55.31;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.10.25.05.09.58;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.09.02.20.08.37;	author angelos;	state Exp;
branches;
next	1.8;

1.8
date	96.12.23.13.22.47;	author mickey;	state Exp;
branches;
next	1.7;

1.7
date	96.10.08.01.21.04;	author michaels;	state Exp;
branches;
next	1.6;

1.6
date	96.10.08.01.20.59;	author michaels;	state Exp;
branches;
next	1.5;

1.5
date	96.06.16.14.35.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.04.21.23.41.26;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.03.25.15.55.54;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	96.02.22.00.12.46;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.46
log
@pid removal; from jan stary
@
text
@.\" $OpenBSD: pppd.8,v 1.45 2015/09/14 20:06:59 schwarze Exp $
.\" Id: pppd.8,v 1.27 1998/03/31 04:31:08 paulus Exp $
.\"
.\" Copyright (c) 1993-2003 Paul Mackerras <paulus@@samba.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THIS SOFTWARE IS PROVIDED "AS IS" AND THE AUTHORS DISCLAIM ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: September 14 2015 $
.Dt PPPD 8
.Os
.Sh NAME
.Nm pppd
.Nd Point-to-Point Protocol daemon
.Sh SYNOPSIS
.Nm pppd
.Op Ar tty_name
.Op Ar speed
.Op Ar options
.Sh DESCRIPTION
PPP is the protocol used for establishing internet links over dial-up
modems, DSL connections, and many other types of point-to-point links.
The
.Nm
daemon works together with the kernel
.Xr ppp 4
driver to establish and maintain a PPP link with another system
(called the
.Em peer )
and to negotiate Internet Protocol (IP) addresses for each end of the link.
.Nm
can also authenticate the peer and/or supply authentication information
to the peer.
PPP can be used with other network protocols besides IP, but such use
is becoming increasingly rare.
.Sh FREQUENTLY USED OPTIONS
.Bl -tag -width Ds
.It Ar tty_name
Use the serial port called
.Ar ttyname
to communicate with the peer.
The string
.Dq /dev/
is prepended to
.Ar ttyname
to form the name of the device to open.
If no device name is given, or if the name of the terminal
connected to the standard input is given,
.Nm
will use that terminal, and will not fork to put itself in the background.
This option is privileged if the
.Cm noauth
option is used.
.It Ar speed
An option that is a decimal number is taken as the desired baud rate
for the serial device.
On systems such as
.Bx 4.4
and
.Ox ,
any speed can be specified.
Other systems (e.g., Linux, SunOS) only support the commonly used
baud-rates.
.It Cm active-filter Ar filter-expression
Specifies a packet filter to be applied to data packets to determine
which packets are to be regarded as link activity, and therefore reset
the idle timer, or cause the link to be brought up in demand-dialling
mode.
This option is useful in conjunction with the
.Cm idle
option if there are packets being sent or received regularly over the link
(for example, routing information packets)
which would otherwise prevent the link from ever appearing to be idle.
The
.Ar filter-expression
syntax is as described for
.Xr tcpdump 8 ,
except that qualifiers which are inappropriate for a PPP link, such as
.Ar ether
and
.Ar arp ,
are not permitted.
Generally the filter expression should be enclosed in single quotes to
prevent whitespace in the expression from being interpreted by the shell.
.It Cm asyncmap Ar map
This option sets the Async-Control-Character-Map (ACCM) for this end
of the link.
The ACCM is a set of 32 bits, one for each of the ASCII control characters
with values from 0 to 31, where a 1 bit indicates that the corresponding
control character should not be used in PPP packets sent to this system.
The map is encoded as a hexadecimal number (without a leading 0x) where the
least significant bit (00000001) represents character 0 and the
most significant bit (80000000) represents character 31.
.Nm
will ask the peer to send these characters as a 2-byte escape sequence.
If multiple
.Cm asyncmap
options are given, the values are ORed together.
If no
.Cm asyncmap
option is given, no async character map will be negotiated for the receive
direction; the peer should then escape
.Em all
control characters.
To escape transmitted characters, use the
.Cm escape
option.
.It Cm auth
Require the peer to authenticate itself before allowing network
packets to be sent or received.
.It Cm call Ar name
Read options from the file
.Pa /etc/ppp/peers/name .
This file may contain privileged options, such as
.Cm noauth ,
even if
.Nm
is not being run by root.
The
.Ar name
string may not begin with
.Qq /
or include
.Qq ..
as a pathname component.
The format of the options file is described below.
.It Cm connect Ar script
Usually there is something which needs to be done to prepare the link
before the PPP protocol can be started; for instance, with a dial-up
modem, commands need to be sent to the modem to dial the appropriate
phone number.
This option specifies an command for
.Nm
to execute (by passing it to a shell) before attempting to start PPP
negotiation.
The
.Xr chat 8
program is often useful here, as it provides a way to send arbitrary strings
to a modem and respond to received characters.
This option is privileged if the
.Cm noauth
option is used.
.It Cm crtscts
Specifies that
.Nm
should set the serial port to use hardware flow control using the RTS and CTS
signals in the RS-232 interface.
If neither the
.Cm crtscts
nor the
.Cm nocrtscts
option is given, the hardware flow control setting for the serial port
is left unchanged.
.It Cm defaultroute
Add a default route to the system routing tables, using the peer as
the gateway, when IPCP negotiation is successfully completed.
This entry is removed when the PPP connection is broken.
This option is privileged if the
.Cm nodefaultroute
option has been specified.
.It Cm disconnect Ar script
Execute the command specified by
.Ar script ,
by passing it to a shell,
after
.Nm
has terminated the link.
This command could, for example, issue commands to the modem to cause it
to hang up if hardware modem control signals were not available.
The disconnect script is not run if the modem has already hung up.
This option is privileged if the
.Cm noauth
option is used.
.It Cm escape Ar xx,yy,...
Specifies that certain characters should be escaped on transmission
(regardless of whether the peer requests them to be escaped with its
async control character map).
The characters to be escaped are specified as a list of hex numbers
separated by commas.
Note that almost any character can be specified for the
.Cm escape
option, unlike the
.Cm asyncmap
option which only allows control characters to be specified.
The characters which may not be escaped are those with hex values
0x20 \- 0x3f or 0x5e.
.It Cm file Ar name
Read options from file
.Ar name
(the format is described below).
The file must be readable by the user who has invoked
.Nm pppd .
.It Cm lock
Specifies that
.Nm
should create a UUCP-style lock file for the
serial device to ensure exclusive access to the device.
.It Cm mru Ar n
Set the MRU (Maximum Receive Unit) value to
.Ar n .
.Nm
will ask the peer to send packets of no more than
.Ar n
bytes.
The value of
.Ar n
must be between 128 and 16384; the default is 1500.
A value of 296 works well on very slow links
(40 bytes for TCP/IP header + 256 bytes of data).
Note that for the IPv6 protocol, the MRU must be at least 1280.
.It Cm mtu Ar n
Set the MTU (Maximum Transmit Unit) value to
.Ar n .
Unless the peer requests a smaller value via MRU negotiation,
.Nm
will request that the kernel networking code send data packets of no more than
.Ar n
bytes through the PPP network interface.
Note that for the IPv6 protocol, the MTU must be at least 1280.
.It Cm passive
Enables the
.Qq passive
option in the LCP.
With this option,
.Nm
will attempt to initiate a connection; if no reply is received from the peer,
.Nm
will then just wait passively for a valid LCP packet from the peer,
instead of exiting, as it would without this option.
.El
.Sh OPTIONS
.Bl -tag -width Ds
.It Xo
.Oo Ar local_IP_address Oc : Ns
.Op Ar remote_IP_address
.Xc
Set the local and/or remote interface IP addresses.
Either one may be omitted.
The IP addresses can be specified with a host name or in
decimal dot notation (e.g., 150.234.56.78).
The default local address is the (first) IP address of the system (unless the
.Cm noipdefault
option is given).
The remote address will be obtained from the peer
if not specified in any option.
Thus, in simple cases, this option is not required.
If a local and/or remote IP address is specified with this option,
.Nm
will not accept a different value from the peer in the IPCP negotiation,
unless the
.Cm ipcp-accept-local
and/or
.Cm ipcp-accept-remote
options are given, respectively.
.It Cm bsdcomp Ar nr,nt
Request that the peer compress packets that it sends, using the
BSD-Compress scheme, with a maximum code size of
.Ar nr
bits, and agree to compress packets sent to the peer with
a maximum code size of
.Ar nt
bits.
If
.Ar nt
is not specified, it defaults to the value given for
.Ar nr .
Values in the range 9 to 15 may be used for
.Ar nr
and
.Ar nt ;
larger values give better compression but
consume more kernel memory for compression dictionaries.
Alternatively, a value of 0 for
.Ar nr
or
.Ar nt
disables compression in the corresponding direction.
.Cm nobsdcomp
or
.Cm bsdcomp 0
disables BSD-Compress compression entirely.
.It Cm chap-interval Ar n
If this option is given,
.Nm
will rechallenge the peer every
.Ar n
seconds.
.It Cm chap-max-challenge Ar n
Set the maximum number of CHAP challenge transmissions to
.Ar n
(default 10).
.It Cm chap-restart Ar n
Set the CHAP restart interval (retransmission timeout for challenges) to
.Ar n
seconds (default 3).
.It Cm debug
Enables connection debugging facilities.
If this option is given,
.Nm
will log the contents of all control packets sent or received in a
readable form.
The packets are logged through
.Xr syslogd 8
with facility
.Ar daemon
and level
.Ar debug .
This information can be directed to a file by setting up
.Pa /etc/syslog.conf
appropriately (see
.Xr syslog.conf 5 ) .
.It Cm default-asyncmap
Disable asyncmap negotiation, forcing all control characters to be
escaped for both the transmit and the receive direction.
.It Cm default-mru
Disable MRU (Maximum Receive Unit) negotiation.
With this option,
.Nm
will use the default MRU value of 1500 bytes for both the
transmit and receive direction.
.It Cm deflate Ar nr,nt
Request that the peer compress packets that it sends, using the
Deflate scheme, with a maximum window size of
.Ar 2**nr
bytes, and agree to compress packets sent to the peer with
a maximum window size of
.Ar 2**nt
bytes.
If
.Ar nt
is not specified, it defaults to the value given for
.Ar nr .
Values in the range 8 to 15 may be used for
.Ar nr
and
.Ar nt ;
larger values give better compression but consume more kernel memory
for compression dictionaries.
Alternatively, a value of 0 for
.Ar nr
or
.Ar nt
disables compression in the corresponding direction.
Use
.Cm nodeflate
or
.Cm deflate 0
to disable Deflate compression entirely.
(Note:
.Nm
requests Deflate compression in preference to BSD-Compress if the peer
can do either.)
.It Cm demand
Initiate the link only on demand, i.e., when data traffic is present.
With this option, the remote IP address must be specified by the user
on the command line or in an options file.
.Nm
will initially configure the interface and enable it for IP traffic without
connecting to the peer.
When traffic is available,
.Nm
will connect to the peer and perform negotiation, authentication, etc.
When this is completed,
.Nm
will commence passing data packets (i.e., IP packets) across the link.
.Pp
The
.Cm demand
option implies the
.Cm persist
option.
If this behaviour is not desired, use the
.Cm nopersist
option after the
.Cm demand
option.
The
.Cm idle
and
.Cm holdoff
options are also useful in conjunction with the
.Cm demand
option.
.It Cm domain Ar d
Append the domain name
.Ar d
to the local host name for authentication purposes.
For example, if
.Xr gethostname 3
returns the name porsche, but the fully qualified domain name is
porsche.Quotron.COM, you could specify
.Cm domain Quotron.COM .
.Nm
would then use the name
.Ar porsche.Quotron.COM
for looking up secrets in the secrets file, and as the default name to
send to the peer when authenticating itself to the peer.
This option is privileged.
.It Cm holdoff Ar n
Specifies how many seconds to wait before re-initiating the link after
it terminates.
This option only has any effect if the
.Cm persist
or
.Cm demand
option is used.
The holdoff period is not applied if the link was terminated
because it was idle.
.It Cm idle Ar n
Specifies that
.Nm
should disconnect if the link is idle for
.Ar n
seconds.
The link is idle when no data packets (i.e., IP packets) are
being sent or received.
Note: it is not advisable to use this option with the
.Cm persist
option without the
.Cm demand
option.
If the
.Cm active-filter
option is given, data packets which are rejected by the specified
activity filter also count as the link being idle.
.It Cm ipcp-accept-local
With this option,
.Nm
will accept the peer's idea of our local IP address,
even if the local IP address was specified in an option.
.It Cm ipcp-accept-remote
With this option,
.Nm
will accept the peer's idea of its (remote) IP address,
even if the remote IP address was specified in an option.
.It Cm ipcp-max-configure Ar n
Set the maximum number of IPCP configure-request transmissions to
.Ar n
(default 10).
.It Cm ipcp-max-failure Ar n
Set the maximum number of IPCP configure-NAKs returned before starting
to send configure-Rejects to
.Ar n
(default 10).
.It Cm ipcp-max-terminate Ar n
Set the maximum number of IPCP terminate-request transmissions to
.Ar n
(default 3).
.It Cm ipcp-restart Ar n
Set the IPCP restart interval (retransmission timeout) to
.Ar n
seconds (default 3).
.It Cm ipparam Ar string
Provides an extra parameter to the ip-up and ip-down scripts.
If this option is given, the
.Ar string
supplied is given as the 6th parameter to those scripts.
.It Cm kdebug Ar n
Enable debugging code in the kernel-level PPP driver.
The argument
.Ar n
is a number which is the sum of the following values:
1 to enable general debug messages,
2 to request that the contents of received packets be printed,
and 4 to request that the contents of transmitted packets be printed.
On most systems, messages printed by the kernel are logged by
.Xr syslogd 8
to a file as directed in the
.Pa /etc/syslog.conf
configuration file.
.It Cm lcp-echo-failure Ar n
If this option is given,
.Nm
will presume the peer to be dead if
.Ar n
LCP echo-requests are sent without receiving a valid LCP echo-reply.
If this happens,
.Nm
will terminate the connection.
Use of this option requires a non-zero value for the
.Cm lcp-echo-interval
parameter.
This option can be used to enable
.Nm
to terminate after the physical connection has been broken
(e.g., the modem has hung up) in situations where no hardware modem
control lines are available.
.It Cm lcp-echo-interval Ar n
If this option is given,
.Nm
will send an LCP echo-request frame to the peer every
.Ar n
seconds.
Normally the peer should respond to the echo-request by sending an echo-reply.
This option can be used with the
.Cm lcp-echo-failure
option to detect that the peer is no longer connected.
.It Cm lcp-max-configure Ar n
Set the maximum number of LCP configure-request transmissions to
.Ar n
(default 10).
.It Cm lcp-max-failure Ar n
Set the maximum number of LCP configure-NAKs returned before starting
to send configure-Rejects to
.Ar n
(default 10).
.It Cm lcp-max-terminate Ar n
Set the maximum number of LCP terminate-request transmissions to
.Ar n
(default 3).
.It Cm lcp-restart Ar n
Set the LCP restart interval (retransmission timeout) to
.Ar n
seconds (default 3).
.It Cm local
Don't use the modem control lines.
With this option,
.Nm
will ignore the state of the CD (Carrier Detect) signal from the modem
and will not change the state of the DTR (Data Terminal Ready) signal.
.It Cm login
Use the system password database for authenticating the peer using
PAP, and record the user in the system wtmp file.
Note that the peer must have an entry in the
.Pa /etc/ppp/pap-secrets
file as well as the system password database to be allowed access.
.It Cm maxconnect Ar n
Terminate the connection when it has been available for network
traffic for
.Ar n
seconds (i.e.,
.Ar n
seconds after the first network control protocol comes up).
.It Cm modem
Use the modem control lines.
This option is the default.
With this option,
.Nm
will wait for the CD (Carrier Detect) signal from the
modem to be asserted when opening the serial device (unless a connect
script is specified), and it will drop the DTR (Data Terminal Ready)
signal briefly when the connection is terminated and before executing
the connect script.
On Ultrix, this option implies hardware flow control, as for the
.Cm crtscts
option.
.It Cm modem_chat
Use the modem control lines during the chat script.
The default is to ignore the state of the CD (Carrier Detect) signal
from the modem during the chat script.
If you are using a
.Xr cua 4
device (as opposed to a
.Xr tty 4
device)
you should set this option.
You should not use this option with a dialback setup as it will cause
the chat script to exit when carrier drops.
.It Cm ms-dns Op Ar addr
If
.Nm
is acting as a server for Microsoft Windows clients, this option allows
.Nm
to supply one or two DNS (Domain Name Server) addresses to the clients.
The first instance of this option specifies the primary DNS address;
the second instance (if given) specifies the secondary DNS address.
(This option was present in some older versions of
.Nm
under the name
.Cm dns-addr . )
.It Cm ms-wins Op Ar addr
If
.Nm
is acting as a server for Microsoft Windows or
.Qq Samba
clients,
this option allows
.Nm
to supply one or two WINS (Windows Internet Name Services) server addresses
to the clients.
The first instance of this option specifies the primary WINS address;
the second instance (if given) specifies the secondary WINS address.
.It Cm name Ar name
Set the name of the local system for authentication purposes to
.Ar name .
This is a privileged option.
With this option,
.Nm
will use lines in the secrets files which have
.Ar name
as the second field when looking for a secret to use
in authenticating the peer.
In addition, unless overridden with the
.Cm user
option,
.Ar name
will be used as the name to send to the peer when authenticating the
local system to the peer.
(Note that
.Nm
does not append the domain name to
.Ar name . )
.It Cm netmask Ar n
Set the interface netmask to
.Ar n ,
a 32-bit netmask in
.Dq decimal dot
notation (e.g. 255.255.255.0).
If this option is given, the value specified is ORed with the default netmask.
The default netmask is chosen based on the negotiated remote IP address;
it is the appropriate network mask for the class of the remote IP address,
ORed with the netmasks for any non point-to-point network interfaces in the
system which are on the same network.
(Note: on some platforms,
.Nm
will always use 255.255.255.255 for the netmask, if that is the only
appropriate value for a point-to-point interface.)
.It Cm noaccomp
Disable Address/Control compression in both directions (send and receive).
.It Cm noauth
Do not require the peer to authenticate itself.
This option is privileged if the
.Cm auth
option is specified in
.Pa /etc/ppp/options .
.It Cm nobsdcomp
Disables BSD-Compress compression;
.Nm
will not request or agree to compress packets using the BSD-Compress scheme.
.It Cm noccp
Disable CCP (Compression Control Protocol) negotiation.
This option should only be required if the peer is buggy and gets confused by
requests from
.Nm
for CCP negotiation.
.It Cm nocrtscts
Disable hardware flow control (i.e., RTS/CTS) on the serial port.
If neither the
.Cm crtscts
nor the
.Cm nocrtscts
option is given, the hardware flow control setting for the serial port
is left unchanged.
.It Cm nodefaultroute
Disable the
.Cm defaultroute
option.
The system administrator who wishes to prevent users from creating
default routes with
.Nm
can do so by placing this option in the
.Pa /etc/ppp/options
file.
.It Cm nodeflate
Disables Deflate compression;
.Nm
will not request or agree to compress packets using the Deflate scheme.
.It Cm nodetach
Don't detach from the controlling terminal.
Without this option, if a serial device other than the terminal
on the standard input is specified,
.Nm
will fork to become a background process.
.It Cm noip
Disable IPCP negotiation and IP communication.
This option should only be required if the peer is buggy and gets confused
by requests from
.Nm
for IPCP negotiation.
.It Cm noipdefault
Disables the default behaviour when no local IP address is specified,
which is to determine (if possible) the local IP address from the hostname.
With this option, the peer will have to supply the local IP
address during IPCP negotiation (unless it was specified explicitly
on the command line or in an options file).
.It Cm nomagic
Disable magic number negotiation.
With this option,
.Nm
cannot detect a looped-back line.
This option should only be needed if the peer is buggy.
.It Cm nopcomp
Disable protocol field compression negotiation in both the receive and
the transmit direction.
.It Cm nopersist
Exit once a connection has been made and terminated.
This is the default unless the
.Cm persist
or
.Cm demand
option has been specified.
.It Cm nopredictor1
Do not accept or agree to Predictor-1 compression.
.It Cm noproxyarp
Disable the
.Cm proxyarp
option.
The system administrator who wishes to prevent users from creating
proxy ARP entries with
.Nm
can do so by placing this option in the
.Pa /etc/ppp/options
file.
.It Cm novj
Disable Van Jacobson style TCP/IP header compression in both the
transmit and the receive direction.
.It Cm novjccomp
Disable the connection-ID compression option in Van Jacobson style
TCP/IP header compression.
With this option,
.Nm
will not omit the connection-ID byte from Van Jacobson compressed
TCP/IP headers, nor ask the peer to do so.
.It Cm papcrypt
Indicates that all secrets in the
.Pa /etc/ppp/pap-secrets
file which are used for checking the identity of the peer are encrypted,
and thus
.Nm
should not accept a password which, before encryption,
is identical to the secret from the
.Pa /etc/ppp/pap-secrets
file.
.It Cm pap-max-authreq Ar n
Set the maximum number of PAP authenticate-request transmissions to
.Ar n
(default 10).
.It Cm pap-restart Ar n
Set the PAP restart interval (retransmission timeout) to
.Ar n
seconds (default 3).
.It Cm pap-timeout Ar n
Set the maximum time that
.Nm
will wait for the peer to authenticate itself with PAP to
.Ar n
seconds (0 means no limit).
.It Cm pass-filter Ar filter-expression
Specifies a packet filter to apply to data packets being sent or
received to determine which packets should be allowed to pass.
Packets which are rejected by the filter are silently discarded.
This option can be used to prevent specific network protocols
using up link bandwidth, or to provide a basic firewall capability.
The
.Ar filter-expression
syntax is as described for
.Xr tcpdump 8 ,
except that qualifiers which are inappropriate for a PPP link, such as
.Ar ether
and
.Ar arp ,
are not permitted.
Generally the filter expression should be enclosed in single quotes to prevent
whitespace in the expression from being interpreted by the shell.
Note that it is possible to apply different constraints to incoming and
outgoing packets using the
.Cm inbound
and
.Cm outbound
qualifiers.
.It Cm persist
Do not exit after a connection is terminated; instead try to reopen
the connection.
.It Cm predictor1
Request that the peer compress frames that it sends using Predictor-1
compression, and agree to compress transmitted frames with Predictor-1
if requested.
This option has no effect unless the kernel driver supports Predictor-1
compression.
.It Cm proxyarp
Add an entry to this system's ARP (Address Resolution Protocol) table
with the IP address of the peer and the Ethernet address of this system.
This will have the effect of making the peer appear to other
systems to be on the local Ethernet.
.It Cm remotename Ar name
Set the assumed name of the remote system for authentication purposes to
.Ar name .
.It Cm refuse-chap
With this option,
.Nm
will not agree to authenticate itself to the peer using CHAP.
.It Cm refuse-pap
With this option,
.Nm
will not agree to authenticate itself to the peer using PAP.
.It Cm require-chap
Require the peer to authenticate itself using CHAP
(Challenge Handshake Authentication Protocol) authentication.
.It Cm require-pap
Require the peer to authenticate itself using PAP
(Password Authentication Protocol) authentication.
.It Cm silent
With this option,
.Nm
will not transmit LCP packets to initiate a connection until a valid LCP
packet is received from the peer (as for the `passive' option with ancient
versions of
.Nm pppd ) .
.It Cm usehostname
Enforce the use of the hostname (with domain name appended, if given)
as the name of the local system for authentication purposes (overrides the
.Cm name
option).
.It Cm user Ar name
Sets the name used for authenticating the local system to the peer to
.Ar name .
.It Cm vj-max-slots Ar n
Sets the number of connection slots to be used by the Van Jacobson
TCP/IP header compression and decompression code to
.Ar n ,
which must be between 2 and 16, inclusive.
.It Cm welcome Ar script
Run the executable or shell command specified by
.Ar script
before initiating PPP negotiation, after the connect script (if any) has
completed.
This option is privileged if the
.Cm noauth
option is used.
.It Cm xonxoff
Use software flow control (i.e., XON/XOFF) to control the flow of data on
the serial port.
.El
.Sh OPTIONS FILES
Options can be taken from files as well as the command line.
.Nm
reads options from the files
.Pa /etc/ppp/options , ~/.ppprc
and
.Pf /etc/ppp/options. Ar ttyname
(in that order) before processing the options on the command line.
(In fact, the command-line options are scanned to find the terminal name
before the
.Pf options. Ar ttyname
file is read.)
In forming the name of the
.Pf options. Ar ttyname
file,
the initial /dev/ is removed from the terminal name, and any remaining
/ characters are replaced with dots.
.Pp
An options file is parsed into a series of words, delimited by whitespace.
Whitespace can be included in a word by enclosing the word in double-quotes (").
A backslash (\e) quotes the following character.
A hash (#) starts a comment, which continues until the end of the line.
There is no restriction on using the
.Cm file
or
.Cm call
options within an options file.
.Sh SECURITY
Users must be in group
.Qq network
to be able to use
.Nm pppd .
.Pp
.Nm
provides system administrators with sufficient access control that PPP
access to a server machine can be provided to legitimate users without
fear of compromising the security of the server or the network it's on.
In part this is provided by the
.Pa /etc/ppp/options file ,
where the administrator can place options to restrict the ways in which
.Nm
can be used, and in part by the PAP and CHAP secrets files, where the
administrator can restrict the set of IP addresses which individual
users may use.
.Pp
The normal way that
.Nm
should be set up is to have the
.Cm auth
option in the
.Pa /etc/ppp/options
file.
(This may become the default in later releases.)
If users wish to use
.Nm
to dial out to a peer which will refuse to authenticate itself
(such as an internet service provider), the system administrator should
create an options file under
.Pa /etc/ppp/peers
containing the
.Cm noauth
option, the name of the serial port to use, and the
.Cm connect
option (if required), plus any other appropriate options.
In this way,
.Nm
can be set up to allow non-privileged users to make unauthenticated
connections only to trusted peers.
.Pp
As indicated above, some security-sensitive options are privileged,
which means that they may not be used by an ordinary non-privileged
user running a setuid-root
.Nm pppd ,
either on the command line, in the user's
.Pa ~/.ppprc
file, or in an options file read using the
.Cm file
option.
Privileged options may be used in the
.Pa /etc/ppp/options
file or in an options file read using the
.Cm call
option.
If
.Nm
is being run by the root user, privileged options can be used without
restriction.
.Sh AUTHENTICATION
Authentication is the process whereby one peer convinces the other of
its identity.
This involves the first peer sending its name to the other,
together with some kind of secret information which could only
come from the genuine authorized user of that name.
In such an exchange, we will call the first peer the
.Qq client
and the other the
.Qq server .
The client has a name by which it identifies itself to the server,
and the server also has a name by which it identifies itself to the client.
Generally the genuine client shares some secret (or password) with the server,
and authenticates itself by proving that it knows that secret.
Very often, the names used for authentication correspond to the internet
hostnames of the peers, but this is not essential.
.Pp
At present,
.Nm
supports two authentication protocols:
the Password Authentication Protocol (PAP)
and the Challenge Handshake Authentication Protocol (CHAP).
PAP involves the client sending its name and a cleartext password
to the server to authenticate itself.
In contrast, the server initiates the CHAP authentication exchange by
sending a challenge to the client (the challenge packet includes the
server's name).
The client must respond with a response which includes its name
plus a hash value derived from the shared secret and the challenge,
in order to prove that it knows the secret.
.Pp
The PPP protocol, being symmetrical, allows both peers to require the
other to authenticate itself.
In that case, two separate and independent authentication exchanges
will occur.
The two exchanges could use different authentication protocols,
and in principle, different names could be used in the two exchanges.
.Pp
The default behaviour of
.Nm
is to agree to authenticate if requested, and to not require authentication
from the peer.
However,
.Nm
will not agree to authenticate itself with a particular protocol
if it has no secrets which could be used to do so.
.Pp
.Nm
stores secrets for use in authentication in secrets files
.Pf ( Pa /etc/ppp/pap-secrets
for PAP,
.Pa /etc/ppp/chap-secrets
for CHAP).
Both secrets files have the same format.
The secrets files can contain secrets for
.Nm
to use in authenticating itself to other systems, as well as secrets for
.Nm
to use when authenticating other systems to itself.
.Pp
Each line in a secrets file contains one secret.
Any following words on the same line are taken to be a list
of acceptable IP addresses for that client.
If there are only 3 words on the line, or if the first word is
.Qq \- ,
then all IP addresses are disallowed.
To allow any address, use
.Qq * .
A word starting with
.Qq \&!
indicates that the specified address is
.Em not
acceptable.
An address may be followed by
.Qq /
and a number
.Ar n ,
to indicate a whole subnet, i.e., all addresses which have the same value
in the most significant
.Ar n
bits.
Case is significant in the client and server names and in the secret.
.Pp
If the secret starts with an `@@', what follows is assumed to be the
name of a file from which to read the secret.
A
.Qq *
as the client or server name matches any name.
When selecting a secret,
.Nm
takes the best match, i.e., the match with the fewest wildcards.
.Pp
Thus a secrets file contains both secrets for use in authenticating
other hosts, plus secrets which we use for authenticating ourselves to
others.
When
.Nm
is authenticating the peer (checking the peer's identity), it chooses a
secret with the peer's name in the first field and the name of the local
system in the second field.
The name of the local system defaults to the hostname, with the domain
name appended if the
.Cm domain
option is used.
This default can be overridden with the
.Cm name
option, except when the
.Cm usehostname
option is used.
.Pp
When
.Nm
is choosing a secret to use in authenticating itself to the peer,
it first determines what name it is going to use to identify
itself to the peer.
This name can be specified by the user with the
.Cm user
option.
If this option is not used, the name defaults to the name of the local system,
determined as described in the previous paragraph.
Then
.Nm
looks for a secret with this name in the first field and the peer's name
in the second field.
.Nm
will know the name of the peer if CHAP authentication is being used, because
the peer will have sent it in the challenge packet.
However, if PAP is being used,
.Nm
will have to determine the peer's name from the options specified by the user.
The user can specify the peer's name directly with the
.Cm remotename
option.
Otherwise, if the remote IP address was specified by a name
(rather than in numeric form), that name will be used as the peer's name.
Failing that,
.Nm
will use the null string as the peer's name.
.Pp
When authenticating the peer with PAP, the supplied password is first
compared with the secret from the secrets file.
If the password doesn't match the secret, the password is encrypted using
.Xr crypt 3
and checked against the secret again.
Thus secrets for authenticating the peer can be stored in encrypted form
if desired.
If the
.Cm papcrypt
option is given, the first (unencrypted) comparison is omitted,
for better security.
.Pp
Furthermore, if the
.Cm login
option was specified, the username and password are also checked against
the system password database.
Thus, the system administrator can set up the pap-secrets file to allow PPP
access only to certain users, and to restrict the set of IP addresses
that each user can use.
Typically, when using the
.Cm login
option, the secret in
.Pa /etc/ppp/pap-secrets
would be
.Pq ,
which will match any password supplied by the peer.
This avoids the need to have the same secret in two places.
.Pp
Authentication must be satisfactorily completed before IPCP
(or any other Network Control Protocol) can be started.
If the peer is required to authenticate itself, and fails to do so,
.Nm
will terminate the link (by closing LCP).
If IPCP negotiates an unacceptable IP address for the remote host,
IPCP will be closed.
IP packets can only be sent or received when IPCP is open.
.Pp
In some cases it is desirable to allow some hosts which can't
authenticate themselves to connect and use one of a restricted set of
IP addresses, even when the local host generally requires authentication.
If the peer refuses to authenticate itself when requested,
.Nm
takes that as equivalent to authenticating with PAP
using the empty string for the username and password.
Thus, by adding a line to the pap-secrets file which specifies the empty
string for the client and password, it is possible to allow restricted
access to hosts which refuse to authenticate themselves.
.Sh ROUTING
When IPCP negotiation is completed successfully,
.Nm
will inform the kernel of the local and remote IP addresses for the PPP
interface.
This is sufficient to create a host route to the remote end of the
link, which will enable the peers to exchange IP packets.
Communication with other machines generally requires further
modification to routing tables and/or ARP
(Address Resolution Protocol) tables.
In most cases the
.Cm defaultroute
and/or
.Cm proxyarp
options are sufficient for this, but in some cases
further intervention is required.
The
.Pa /etc/ppp/ip-up
script can be used for this.
.Pp
Sometimes it is desirable to add a default route through the remote
host, as in the case of a machine whose only connection to the
Internet is through the PPP interface.
The
.Cm defaultroute
option causes
.Nm
to create such a default route when IPCP comes up, and
delete it when the link is terminated.
.Pp
In some cases it is desirable to use proxy ARP, for example on a
server machine connected to a LAN, in order to allow other hosts to
communicate with the remote host.
The
.Cm proxyarp
option causes
.Nm
to look for a network interface on the same subnet as the remote
host (an interface supporting broadcast and ARP, which is up and not a
point-to-point or loopback interface).
If found,
.Nm
creates a permanent, published ARP entry with the IP address of the remote host
and the hardware address of the network interface found.
.Pp
When the
.Cm demand
option is used, the interface IP addresses have
already been set at the point when IPCP comes up.
If
.Nm
has not been able to negotiate the same addresses that it used to configure
the interface (for example when the peer is an ISP that uses dynamic
IP address assignment),
.Nm
has to change the interface IP addresses to the negotiated addresses.
This may disrupt existing connections, and the use of demand dialling with
peers that do dynamic IP address assignment is not recommended.
.Sh SCRIPTS
.Nm
invokes scripts at various stages in its processing which can be
used to perform site-specific ancillary processing.
These scripts are usually shell scripts, but could be executable code files
instead.
.Nm
does not wait for the scripts to finish.
.\" The scripts are executed as root (with the real and effective user ID set to 0),
.\" so that they can do things such as update routing tables or run
.\" privileged daemons.
.\" Be careful that the contents of these scripts do not compromise your system's
.\" security.
.Nm
runs the scripts with standard input, output and error redirected to
.Pa /dev/null ,
and with an environment that is empty except for some environment variables
that give information about the link.
The environment variables that
.Nm
sets are:
.Bl -tag -width "PEERNAME"
.It Ev DEVICE
The name of the serial tty device being used.
.It Ev IFNAME
The name of the network interface being used.
.It Ev IPLOCAL
The IP address for the local end of the link.
This is only set when IPCP has come up.
.It Ev IPREMOTE
The IP address for the remote end of the link.
This is only set when IPCP has come up.
.It Ev PEERNAME
The authenticated name of the peer.
This is only set if the peer authenticates itself.
.It Ev SPEED
The baud rate of the tty device.
.It Ev UID
The real user ID of the user who invoked
.Nm pppd .
.El
.Pp
.Nm
invokes the following scripts, if they exist.
It is not an error if they don't exist.
.Bl -tag -width Ds
.It Pa /etc/ppp/auth-up
A program or script which is executed after the remote system
successfully authenticates itself.
It is executed with the parameters
.Pp
.Ar interface-name peer-name user-name tty-device speed
.Pp
Note that this script is not executed if the peer doesn't authenticate
itself, for example when the
.Cm noauth
option is used.
.It Pa /etc/ppp/auth-down
A program or script which is executed when the link goes down, if
.Pa /etc/ppp/auth-up
was previously executed.
It is executed in the same manner with the same parameters as
.Pa /etc/ppp/auth-up .
.It Pa /etc/ppp/ip-up
A program or script which is executed when the link is available for
sending and receiving IP packets (that is, IPCP has come up).
It is executed with the parameters
.Pp
.Ar interface-name tty-device speed local-IP-address remote-IP-address ipparam
.It Pa /etc/ppp/ip-down
A program or script which is executed when the link is no longer
available for sending and receiving IP packets.
This script can be used for undoing the effects of the
.Pa /etc/ppp/ip-up
script.
It is invoked in the same manner and with the same parameters as the ip-up
script.
.El
.Sh FILES
.Bl -tag -width Ds
.It Pa /etc/ppp/pap-secrets
Usernames, passwords and IP addresses for PAP authentication.
This file should be owned by root and not readable or writable by any other
user.
.Nm
will log a warning if this is not the case.
.It Pa /etc/ppp/chap-secrets
Names, secrets and IP addresses for CHAP authentication.
As for
.Pa /etc/ppp/pap-secrets ,
this file should be owned by root and not readable or writable
by any other user.
.Nm
will log a warning if this is not the case.
.It Pa /etc/ppp/options
System default options for
.Nm pppd ,
read before user default options or command-line options.
.It Pa ~/.ppprc
User default options, read before
.Pf /etc/ppp/options. Ar ttyname .
.It Pa /etc/ppp/options. Ns Ar ttyname
System default options for the serial port being used, read after
.Pa ~/.ppprc .
In forming the
.Ar ttyname
part of this filename, an initial /dev/ is stripped from the port name (if
present), and any slashes in the remaining part are converted to dots.
.It Pa /etc/ppp/peers
A directory containing options files which may contain privileged
options, even if
.Nm
was invoked by a user other than root.
The system administrator can create options files in this directory to
permit non-privileged users to dial out without requiring the peer to
authenticate, but only to certain trusted peers.
.El
.Sh EXAMPLES
The following examples assume that the
.Pa /etc/ppp/options
file contains the
.Cm auth
option (as in the default
.Pa /etc/ppp/options
file in the PPP distribution).
.Pp
Probably the most common use of
.Nm
is to dial out to an ISP.
This can be done with a command such as
.Pp
.Dl pppd call isp
.Pp
where the
.Pa /etc/ppp/peers/isp
file is set up by the system administrator to contain something like this:
.Bd -literal -offset indent
ttyS0 19200 crtscts
connect '/usr/sbin/chat -v -f /etc/ppp/chat-isp'
noauth
.Ed
.Pp
In this example, we are using chat to dial the ISP's modem and go
through any logon sequence required.
The
.Pa /etc/ppp/chat-isp
file contains the script used by chat; it could for example contain
something like this:
.Bd -literal -offset indent
ABORT "NO CARRIER"
ABORT "NO DIALTONE"
ABORT "ERROR"
ABORT "NO ANSWER"
ABORT "BUSY"
ABORT "Username/Password Incorrect"
"" "at"
OK "at&d0&c1"
OK "atdt2468135"
"name:" "^Umyuserid"
"word:" "\eqmypassword"
"ispts" "\eq^Uppp"
"~-^Uppp-~"
.Ed
.Pp
See the
.Xr chat 8
man page for details of chat scripts.
.Pp
.Nm
can also be used to provide a dial-in PPP service for users.
If the users already have login accounts, the simplest way to set up the
PPP service is to let the users log in to their accounts and run
.Nm
(installed setuid-root) with a command such as
.Pp
.Dl pppd proxyarp
.Pp
To allow a user to use the PPP facilities, you need to allocate an IP
address for that user's machine and create an entry in
.Pa /etc/ppp/pap-secrets
or
.Pa /etc/ppp/chap-secrets
(depending on which authentication method the PPP implementation on the
user's machine supports), so that the user's
machine can authenticate itself.
For example, if Joe has a machine called
.Qq joespc
which is to be allowed to dial in to the machine called
.Qq server
and use the IP address joespc.my.net, you would add an entry like this to
.Pa /etc/ppp/pap-secrets
or
.Pa /etc/ppp/chap-secrets :
.Pp
.Dl joespc	server	"joe's secret"	joespc.my.net
.Pp
Alternatively, you can create a username called (for example)
.Qq ppp ,
whose login shell is
.Nm
and whose home directory is
.Pa /etc/ppp .
Options to be used when
.Nm
is run this way can be put in
.Pa /etc/ppp/.ppprc .
.Pp
If your serial connection is any more complicated than a piece of
wire, you may need to arrange for some control characters to be escaped.
In particular, it is often useful to escape XON (^Q) and
XOFF (^S), using
.Cm asyncmap a0000 .
If the path includes a telnet, you probably should escape ^] as well
.Cm ( asyncmap 200a0000 ) .
If the path includes an rlogin, you will need to use the
.Cm escape ff
option on the end which is running the rlogin client, since many
rlogin implementations are not transparent; they will remove the
sequence (0xff, 0xff, 0x73, 0x73, followed by any 8 bytes) from the stream.
.Sh DIAGNOSTICS
Messages are sent to the
.Xr syslogd 8
daemon using facility
.Dv LOG_DAEMON .
(This can be overridden by recompiling
.Nm
with the macro
.Dv LOG_PPP
defined as the desired facility.)
See the
.Xr syslogd 8
documentation for details of where the syslog daemon will write the
messages.
On most systems, the syslog daemon uses the
.Pa /etc/syslog.conf
file to specify the destination(s) for syslog messages.
You may need to edit that file to suit.
.Pp
The
.Cm debug
option causes the contents of all control packets sent
or received to be logged, that is, all LCP, PAP, CHAP or IPCP packets.
This can be useful if the PPP negotiation does not succeed or if
authentication fails.
If debugging is enabled at compile time, the
.Cm debug
option also causes other debugging messages to be logged.
.Pp
Debugging can also be enabled or disabled by sending a SIGUSR1 signal
to the
.Nm
process.
This signal acts as a toggle.
.Sh SEE ALSO
.Xr cua 4 ,
.Xr ppp 4 ,
.Xr tty 4 ,
.Xr chat 8 ,
.Xr syslogd 8 ,
.Xr tcpdump 8
.Rs
.%A V. Jacobson
.%D February 1990
.%R RFC 1144
.%T Compressing TCP/IP Headers for Low-Speed Serial Links
.Re
.Rs
.%A R. Rivest
.%D April 1992
.%R RFC 1321
.%T The MD5 Message-Digest Algorithm
.Re
.Rs
.%A G. McGregor
.%D May 1992
.%R RFC 1332
.%T The PPP Internet Protocol Control Protocol (IPCP)
.Re
.Rs
.%A B. Lloyd
.%A W. Simpson
.%D October 1992
.%R RFC 1334
.%T PPP Authentication Protocols
.Re
.Rs
.%A W. Simpson
.%D July 1994
.%R RFC 1661
.%T The Point-to-Point Protocol (PPP)
.Re
.Rs
.%A W. Simpson
.%D July 1994
.%R RFC 1662
.%T PPP in HDLC-like Framing
.Re
.Rs
.%A W. Simpson
.%D August 1996
.%R RFC 1994
.%T PPP Challenge Handshake Authentication Protocol (CHAP)
.Re
.Sh NOTES
Some limited degree of control can be exercised over a running
.Nm
process by sending it a signal from the list below.
.Bl -tag -width Ds
.It SIGINT , SIGTERM
These signals cause
.Nm
to terminate the link (by closing LCP), restore the serial device settings,
and exit.
.It SIGHUP
This signal causes
.Nm
to terminate the link, restore the serial device settings,
and close the serial device.
If the
.Cm persist
or
.Cm demand
option has been specified,
.Nm
will try to reopen the serial device and start another connection
(after the holdoff period).
Otherwise
.Nm
will exit.
If this signal is received during the holdoff period, it causes
.Nm
to end the holdoff period immediately.
.It SIGUSR1
This signal toggles the state of the
.Cm debug
option.
.It SIGUSR2
This signal causes
.Nm
to renegotiate compression.
This can be useful to re-enable compression after it has been disabled
as a result of a fatal decompression error.
(Fatal decompression errors generally indicate a bug
in one or other implementation.)
.El
.Sh AUTHORS
.An Paul Mackerras Aq Mt Paul.Mackerras@@samba.org ,
based on earlier work by Drew Perkins, Brad Clements, Karl Fox, Greg Christy,
and Brad Parker.
.Sh BUGS
Scripts should be run as root,
but are not.
@


1.45
log
@Avoid .Ns right after .Pf, it's pointless.
In some cases, do additional cleanup in the immediate vicinity.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.44 2015/07/27 17:28:39 sobrado Exp $
d18 1
a18 1
.Dd $Mdocdate: July 27 2015 $
a1243 8
.It Pa /var/run/ppp Ns Ar n Ns .pid
.\" (BSD or Linux),
.\" /etc/ppp/ppp Ns Ar n Ns .pid
.\" (others)
Process-ID for
.Nm
process on PPP interface unit
.Ar n .
@


1.44
log
@use file system path (.Pa) semantic markup macros where appropriate.

ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.43 2014/03/17 17:07:45 deraadt Exp $
d18 1
a18 1
.Dd $Mdocdate: March 17 2014 $
d839 1
a839 1
.Pf /etc/ppp/options. Ns Ar ttyname
d843 1
a843 1
.Pf options. Ns Ar ttyname
d846 1
a846 1
.Pf options. Ns Ar ttyname
d969 1
a969 1
.Pf ( Ns Pa /etc/ppp/pap-secrets
d1272 1
a1272 1
.Pf /etc/ppp/options. Ns Ar ttyname .
d1385 1
a1385 1
.Pf ( Ns Cm asyncmap 200a0000 ) .
@


1.43
log
@the userland ppp(9) code goes awa.  Having too much ppp choice in the
tree results in one-true-ppp not coming into existance.  This code is
essentially un-audited and quite dangerous.
ok claudio sthen
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.42 2014/01/21 03:15:46 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: January 21 2014 $
d1244 1
a1244 1
.It /var/run/ppp Ns Ar n Ns .pid
d1252 1
a1252 1
.It /etc/ppp/pap-secrets
d1258 1
a1258 1
.It /etc/ppp/chap-secrets
d1266 1
a1266 1
.It /etc/ppp/options
d1270 1
a1270 1
.It ~/.ppprc
d1273 1
a1273 1
.It /etc/ppp/options. Ns Ar ttyname
d1280 1
a1280 1
.It /etc/ppp/peers
@


1.42
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.41 2013/07/16 11:13:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: July 16 2013 $
a1429 1
.Xr ppp 8 ,
@


1.41
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.40 2013/04/15 16:19:46 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: April 15 2013 $
d883 2
a884 1
.Pa /etc/ppp/options file .
@


1.40
log
@scripts should be run as root, but are not; add a BUGS entry to that
effect, and comment out the text that says they are run as root

isue pointed out by creamy
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.39 2012/08/29 18:53:36 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: August 29 2012 $
d1518 1
a1518 1
.An Paul Mackerras Aq Paul.Mackerras@@samba.org ,
@


1.39
log
@- document rfc 1994
- sections in conventional order
- some minor tweaking
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.38 2010/09/20 07:41:17 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 20 2010 $
d1171 5
a1175 5
The scripts are executed as root (with the real and effective user ID set to 0),
so that they can do things such as update routing tables or run
privileged daemons.
Be careful that the contents of these scripts do not compromise your system's
security.
d1521 3
@


1.38
log
@according to ingo, it isn;t a problem to have empty [BDS]q macros, so
revert that part of yesterday's diffs;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.37 2010/09/19 21:59:23 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: September 19 2010 $
a119 1
.Pp
d1163 125
a1423 125
.Sh SCRIPTS
.Nm
invokes scripts at various stages in its processing which can be
used to perform site-specific ancillary processing.
These scripts are usually shell scripts, but could be executable code files
instead.
.Nm
does not wait for the scripts to finish.
The scripts are executed as root (with the real and effective user ID set to 0),
so that they can do things such as update routing tables or run
privileged daemons.
Be careful that the contents of these scripts do not compromise your system's
security.
.Nm
runs the scripts with standard input, output and error redirected to
.Pa /dev/null ,
and with an environment that is empty except for some environment variables
that give information about the link.
The environment variables that
.Nm
sets are:
.Bl -tag -width "PEERNAME"
.It Ev DEVICE
The name of the serial tty device being used.
.It Ev IFNAME
The name of the network interface being used.
.It Ev IPLOCAL
The IP address for the local end of the link.
This is only set when IPCP has come up.
.It Ev IPREMOTE
The IP address for the remote end of the link.
This is only set when IPCP has come up.
.It Ev PEERNAME
The authenticated name of the peer.
This is only set if the peer authenticates itself.
.It Ev SPEED
The baud rate of the tty device.
.It Ev UID
The real user ID of the user who invoked
.Nm pppd .
.El
.Pp
.Nm
invokes the following scripts, if they exist.
It is not an error if they don't exist.
.Bl -tag -width Ds
.It Pa /etc/ppp/auth-up
A program or script which is executed after the remote system
successfully authenticates itself.
It is executed with the parameters
.Pp
.Ar interface-name peer-name user-name tty-device speed
.Pp
Note that this script is not executed if the peer doesn't authenticate
itself, for example when the
.Cm noauth
option is used.
.It Pa /etc/ppp/auth-down
A program or script which is executed when the link goes down, if
.Pa /etc/ppp/auth-up
was previously executed.
It is executed in the same manner with the same parameters as
.Pa /etc/ppp/auth-up .
.It Pa /etc/ppp/ip-up
A program or script which is executed when the link is available for
sending and receiving IP packets (that is, IPCP has come up).
It is executed with the parameters
.Pp
.Ar interface-name tty-device speed local-IP-address remote-IP-address ipparam
.It Pa /etc/ppp/ip-down
A program or script which is executed when the link is no longer
available for sending and receiving IP packets.
This script can be used for undoing the effects of the
.Pa /etc/ppp/ip-up
script.
It is invoked in the same manner and with the same parameters as the ip-up
script.
.El
.Sh FILES
.Bl -tag -width Ds
.It /var/run/ppp Ns Ar n Ns .pid
.\" (BSD or Linux),
.\" /etc/ppp/ppp Ns Ar n Ns .pid
.\" (others)
Process-ID for
.Nm
process on PPP interface unit
.Ar n .
.It /etc/ppp/pap-secrets
Usernames, passwords and IP addresses for PAP authentication.
This file should be owned by root and not readable or writable by any other
user.
.Nm
will log a warning if this is not the case.
.It /etc/ppp/chap-secrets
Names, secrets and IP addresses for CHAP authentication.
As for
.Pa /etc/ppp/pap-secrets ,
this file should be owned by root and not readable or writable
by any other user.
.Nm
will log a warning if this is not the case.
.It /etc/ppp/options
System default options for
.Nm pppd ,
read before user default options or command-line options.
.It ~/.ppprc
User default options, read before
.Pf /etc/ppp/options. Ns Ar ttyname .
.It /etc/ppp/options. Ns Ar ttyname
System default options for the serial port being used, read after
.Pa ~/.ppprc .
In forming the
.Ar ttyname
part of this filename, an initial /dev/ is stripped from the port name (if
present), and any slashes in the remaining part are converted to dots.
.It /etc/ppp/peers
A directory containing options files which may contain privileged
options, even if
.Nm
was invoked by a user other than root.
The system administrator can create options files in this directory to
permit non-privileged users to dial out without requiring the peer to
authenticate, but only to certain trusted peers.
.El
d1433 1
a1433 3
.%B RFC 1144
.%A Jacobson, V.
.%T Compressing TCP/IP headers for low-speed serial links
d1435 2
d1439 3
a1441 2
.%B RFC 1321
.%A Rivest, R.
a1442 1
.%D April 1992
d1445 1
a1445 3
.%B RFC 1332
.%A McGregor, G.
.%T PPP Internet Protocol Control Protocol (IPCP)
d1447 2
d1451 2
a1452 4
.%B RFC 1334
.%A Lloyd, B.
.%A Simpson, W.A.
.%T PPP authentication protocols
d1454 2
d1458 1
a1458 3
.%B RFC 1661
.%A Simpson, W.A.
.%T The Point\-to\-Point Protocol (PPP)
d1460 2
d1464 3
a1466 2
.%B RFC 1662
.%A Simpson, W.A.
d1468 6
a1473 1
.%D July 1994
@


1.37
log
@more wacky macro fixing;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.36 2010/03/26 19:30:40 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: March 26 2010 $
d1082 2
a1083 1
would be \(dq\(dq,
@


1.36
log
@dispense with some wacky escape sequences;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.35 2008/11/09 12:34:47 tobias Exp $
d18 1
a18 1
.Dd $Mdocdate: November 9 2008 $
d1082 1
a1082 2
would be
.Qq ,
@


1.35
log
@typo fixed (overriden -> overridden)

ok espie, jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.34 2008/05/07 12:16:32 claudio Exp $
d18 1
a18 1
.Dd $Mdocdate: May 7 2008 $
d854 1
a854 1
A backslash (\\) quotes the following character.
d1206 2
a1207 2
"word:" "\\qmypassword"
"ispts" "\\q^Uppp"
@


1.34
log
@Remove .Xr to routed and reword the sentence a bit to make more sense.
pppd can filter on network protocols not network daemons.
OK norby@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.33 2007/06/04 14:59:45 henning Exp $
d18 1
a18 1
.Dd $Mdocdate: June 4 2007 $
d1271 1
a1271 1
(This can be overriden by recompiling
@


1.33
log
@bye bye ipx
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.32 2007/05/31 19:20:28 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: May 31 2007 $
d752 1
a752 2
This option can be used to prevent specific network daemons (such as
.Xr routed 8 )
@


1.32
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.31 2006/11/12 15:13:24 stevesk Exp $
d18 1
a18 1
.Dd $Mdocdate$
a467 75
.It Cm ipx
Enable the IPXCP and IPX protocols.
This option is presently only supported under Linux,
and only if your kernel has been configured to include IPX support.
.It Cm ipx-network Ar n
Set the IPX network number in the IPXCP configure request frame to
.Ar n ,
a hexadecimal number (without a leading 0x).
There is no valid default.
If this option is not specified, the network number is obtained from the peer.
If the peer does not have the network number, the IPX protocol will not be
started.
.It Cm ipx-node Ar n Ns : Ns Ar m
Set the IPX node numbers.
The two node numbers are separated from each other with a colon character.
The first number
.Ar n
is the local node number.
The second number
.Ar m
is the peer's node number.
Each node number is a hexadecimal number, at most 10 digits long.
The node numbers on the ipx-network must be unique.
There is no valid default.
If this option is not specified then the node numbers are
obtained from the peer.
.It Cm ipx-router-name Op Ar string
Set the name of the router.
This is a string and is sent to the peer as information data.
.It Cm ipx-routing Ar n
Set the routing protocol to be received by this option.
More than one instance of
.Cm ipx-routing
may be specified.
The
.Sq Cm none
option (0) may be specified as the only instance of ipx-routing.
The values may be
.Ar 0
for NONE,
.Ar 2
for RIP/SAP, and
.Ar 4
for NLSP.
.It Cm ipxcp-accept-local
Accept the peer's NAK for the node number specified in the ipx-node option.
If a node number was specified, and non-zero, the default is
to insist that the value be used.
If you include this option then you will permit the peer to override
the entry of the node number.
.It Cm ipxcp-accept-network
Accept the peer's NAK for the network number specified in the
ipx-network option.
If a network number was specified, and non-zero,
the default is to insist that the value be used.
If you include this option then you will permit the peer to override
the entry of the node number.
.It Cm ipxcp-accept-remote
Use the peer's network number specified in the configure request frame.
If a node number was specified for the peer and this option was
not specified, the peer will be forced to use the value which you have
specified.
.It Cm ipxcp-max-configure Ar n
Set the maximum number of IPXCP configure request frames which the
system will send to
.Ar n .
The default is 10.
.It Cm ipxcp-max-failure Ar n
Set the maximum number of IPXCP NAK frames which the local system will
send before it rejects the options.
The default value is 3.
.It Cm ipxcp-max-terminate Ar n
Set the maximum number of IPXCP terminate request frames before the
local system considers that the peer is not listening to them.
The default value is 3.
a685 6
.It Cm noipx
Disable the IPXCP and IPX protocols.
This option should only be required if the peer is buggy and gets confused
by requests from
.Nm
for IPXCP negotiation.
a1376 31
script.
.It Pa /etc/ppp/ipx-up
A program or script which is executed when the link is available for
sending and receiving IPX packets (that is, IPXCP has come up).
It is executed with the parameters
.Pp
.Ar interface-name tty-device speed network-number local-IPX-node-address
.Ar remote-IPX-node-address local-IPX-routing-protocol
.Ar remote-IPX-routing-protocol local-IPX-router-name remote-IPX-router-name
.Ar ipparam pppd-pid
.Pp
The local-IPX-routing-protocol and remote-IPX-routing-protocol field
may be one of the following:
.Bl -tag -width "RIP NLSP"
.It NONE
to indicate that there is no routing protocol
.It RIP
to indicate that RIP/SAP should be used
.It NLSP
to indicate that Novell NLSP should be used
.It RIP NLSP
to indicate that both RIP/SAP and NLSP should be used
.El
.Pp
.It Pa /etc/ppp/ipx-down
A program or script which is executed when the link is no longer
available for sending and receiving IPX packets.
This script can be used for undoing the effects of the
.Pa /etc/ppp/ipx-up
script.
It is invoked in the same manner and with the same parameters as the ipx-up
@


1.31
log
@remove reference to PPP_FILTER:
- there is no PPP_FILTER kernel option
- pppd is compiled with -DPPP_FILTER by default
ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.30 2005/01/31 09:50:29 jmc Exp $
d18 1
a18 1
.Dd March 31, 1998
@


1.30
log
@add some references to SEE ALSO;
from alexey e. suslikov;

kill a .Pp while here;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.29 2003/09/02 18:56:36 jmc Exp $
a93 7
This option is currently only available under
.Ox ,
and then only if both the kernel and
.Nm
were compiled with
.Dv PPP_FILTER
defined.
a852 7
This option is currently only available under
.Ox ,
and then only if both the kernel and
.Nm
were compiled with
.Dv PPP_FILTER
defined.
@


1.29
log
@escape punctuation; (and a nit in openssl.1)
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.28 2003/06/13 09:50:32 jmc Exp $
a1290 1
.Pp
d1553 7
@


1.28
log
@license update from Paul Mackerras. This is now (c) Paul. Part of the
man page was rewritten to replace work originally from CMU.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.27 2003/06/11 08:51:21 jmc Exp $
d1085 1
a1085 1
.Qq !
@


1.27
log
@mdoc version of pppd(8);
sanity checked and help from pjantzen@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.26 2003/03/16 16:20:05 jmc Exp $
d4 1
a4 1
.\" Copyright (c) 1984-2000 Carnegie Mellon University. All rights reserved.
d6 3
a8 3
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
d10 7
a16 31
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. The name "Carnegie Mellon University" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For permission or any legal
.\"    details, please contact
.\"      Office of Technology Transfer
.\"      Carnegie Mellon University
.\"      5000 Forbes Avenue
.\"      Pittsburgh, PA  15213-3890
.\"      (412) 268-4387, fax: (412) 268-7395
.\"      tech-transfer@@andrew.cmu.edu
.\"
.\" 4. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by Computing Services
.\"     at Carnegie Mellon University (http://www.cmu.edu/computing/)."
.\"
.\" CARNEGIE MELLON UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO
.\" THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS, IN NO EVENT SHALL CARNEGIE MELLON UNIVERSITY BE LIABLE
.\" FOR ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN
.\" AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING
.\" OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d30 15
a44 12
The Point-to-Point Protocol (PPP) provides a method for transmitting
datagrams over serial point-to-point links.
PPP is composed of three parts: a method for encapsulating datagrams over
serial links, an extensible Link Control Protocol (LCP), and
a family of Network Control Protocols (NCP) for establishing
and configuring different network-layer protocols.
.Pp
The encapsulation scheme is provided by driver code in the kernel.
.Nm
provides the basic LCP, authentication support, and an NCP for
establishing and configuring the Internet Protocol (IP) (called the IP
Control Protocol, IPCP).
d48 3
a50 1
Communicate over the named device.
d52 6
a57 4
.Qq /dev/
is prepended, if necessary.
If no device name is given, or if the name of the terminal connected to the
standard input is given,
d64 2
a65 3
Set the baud rate to
.Ar speed
(a decimal number).
d71 2
a72 1
Other systems (e.g., SunOS) allow only a limited set of speeds.
d101 9
a109 5
.It Cm asyncmap Op Ar map
Set the async character map to
.Ar map .
This map describes which control characters cannot be successfully
received over the serial line.
a111 4
The argument is a 32-bit hex number with each bit representing a character
to escape.
Bit 0 (00000001) represents the character 0x00;
bit 31 (80000000) represents the character 0x1f or ^_.
d145 9
a153 4
Use the executable or shell command specified by
.Ar script
to set up the serial line.
This script would typically use the
d155 2
a156 1
program to dial the modem and start the remote PPP session.
d161 4
a164 2
Use hardware flow control (i.e., RTS/CTS) to control the flow of data
on the serial port.
d179 3
a181 2
Run the executable or shell command specified by
.Ar script
d185 1
a185 1
This script could, for example, issue commands to the modem to cause it
d222 4
a225 3
The minimum MRU value is 128.
The default MRU value is 1500.
A value of 296 is recommended for slow links
d227 1
d236 1
d699 2
a700 2
.Qq decimal dot
notation (e.g., 255.255.255.0).
d706 4
a1076 11
A given secret is specific to a particular combination of client and
server \- it can only be used by that client to authenticate itself
to that server.
Thus each line in a secrets file has at least 3 fields: the name of
the client, the name of the server, and the secret.
These fields may be followed by a list of the IP addresses that the
specified client may use when connecting to the specified server.
.Pp
A secrets file is parsed into words as for an options file, so the
client name, server name and secrets fields must each be one word,
with any embedded spaces or other special characters quoted or escaped.
d1373 5
a1377 1
In order to see the error and debug messages, you will need to edit your
d1379 2
a1380 1
file to direct the messages to the desired output device or file.
d1592 3
a1594 2
The following signals have the specified effect when sent to
.Nm pppd :
d1634 1
a1634 1
.An Paul Mackerras Aq Paul.Mackerras@@cs.anu.edu.au ,
@


1.26
log
@nuber -> number;

from NetBSD (Igor Sobrado)
@
text
@d1 1
a1 2
.\" $OpenBSD: pppd.8,v 1.25 2003/02/18 07:51:09 jmc Exp $
.\" manual page [] for pppd 2.3
d41 13
a53 20
.\" 
.\" SH section heading
.\" SS subsection heading
.\" LP paragraph
.\" IP indented paragraph
.\" TP hanging label
.TH PPPD 8
.SH NAME
pppd \- Point to Point Protocol daemon
.SH SYNOPSIS
.B pppd
[
.I tty_name
] [
.I speed
] [
.I options
]
.SH DESCRIPTION
.LP
d55 2
a56 2
datagrams over serial point-to-point links.  PPP
is composed of three parts: a method for encapsulating datagrams over
d60 1
a60 1
.LP
d62 2
a63 1
Pppd provides the basic LCP, authentication support, and an NCP for
d66 25
a90 16
.SH FREQUENTLY USED OPTIONS
.TP
.I <tty_name>
Communicate over the named device.  The string "/dev/" is prepended if
necessary.  If no device name is given, or if the name of the terminal
connected to the standard input is given, pppd
will use that terminal, and will not fork to put itself in the
background.  This option is privileged if the \fInoauth\fR option is
used.
.TP
.I <speed>
Set the baud rate to <speed> (a decimal number).  On systems such as
4.4BSD and OpenBSD, any speed can be specified.  Other systems
(e.g., SunOS) allow only a limited set of speeds.
.TP
.B active-filter \fIfilter-expression
d94 5
a98 3
mode.  This option is useful in conjunction with the
\fBidle\fR option if there are packets being sent or received
regularly over the link (for example, routing information packets)
d100 4
a103 1
The \fIfilter-expression\fR syntax is as described for tcpdump(1),
d105 37
a141 20
\fBether\fR and \fBarp\fR, are not permitted.  Generally the filter
expression should be enclosed in single-quotes to prevent whitespace
in the expression from being interpreted by the shell. This option
is currently only available under OpenBSD, and then only
if both the kernel and pppd were compiled with PPP_FILTER defined.
.TP
.B asyncmap \fI<map>
Set the async character map to <map>.  This map describes which
control characters cannot be successfully received over the serial
line.  Pppd will ask the peer to send these characters as a 2-byte
escape sequence.  The argument is a 32 bit hex number with each bit
representing a character to escape.  Bit 0 (00000001) represents the
character 0x00; bit 31 (80000000) represents the character 0x1f or ^_.
If multiple \fIasyncmap\fR options are given, the values are ORed
together.  If no \fIasyncmap\fR option is given, no async character
map will be negotiated for the receive direction; the peer should then
escape \fIall\fR control characters.  To escape transmitted
characters, use the \fIescape\fR option.
.TP
.B auth
d144 28
a171 15
.TP
.B call \fIname
Read options from the file /etc/ppp/peers/\fIname\fR.  This file may
contain privileged options, such as \fInoauth\fR, even if pppd
is not being run by root.  The \fIname\fR string may not begin with /
or include .. as a pathname component.  The format of the options file
is described below.
.TP
.B connect \fIscript
Use the executable or shell command specified by \fIscript\fR to set
up the serial line.  This script would typically use the chat(8)
program to dial the modem and start the remote ppp session.  This
option is privileged if the \fInoauth\fR option is used.
.TP
.B crtscts
d173 8
a180 5
on the serial port.  If neither the \fIcrtscts\fR nor the
\fInocrtscts\fR option is given, the hardware flow control setting
for the serial port is left unchanged.
.TP
.B defaultroute
d183 17
a199 12
This entry is removed when the PPP connection is broken.  This option
is privileged if the \fInodefaultroute\fR option has been specified.
.TP
.B disconnect \fIscript
Run the executable or shell command specified by \fIscript\fR after
pppd has terminated the link.  This script could, for example, issue
commands to the modem to cause it to hang up if hardware modem control
signals were not available.  The disconnect script is not run if the
modem has already hung up.  This option is privileged if the
\fInoauth\fR option is used.
.TP
.B escape \fIxx,yy,...
d202 20
a221 13
async control character map).  The characters to be escaped are
specified as a list of hex numbers separated by commas.  Note that
almost any character can be specified for the \fIescape\fR option,
unlike the \fIasyncmap\fR option which only allows control characters
to be specified.  The characters which may not be escaped are those
with hex values 0x20 - 0x3f or 0x5e.
.TP
.B file \fIname
Read options from file \fIname\fR (the format is described below).
The file must be readable by the user who has invoked pppd.
.TP
.B lock
Specifies that pppd should create a UUCP-style lock file for the
d223 55
a277 36
.TP
.B mru \fIn
Set the MRU [Maximum Receive Unit] value to \fIn\fR. Pppd
will ask the peer to send packets of no more than \fIn\fR bytes.  The
minimum MRU value is 128.  The default MRU value is 1500.  A value of
296 is recommended for slow links (40 bytes for TCP/IP header + 256
bytes of data).
.TP
.B mtu \fIn
Set the MTU [Maximum Transmit Unit] value to \fIn\fR.  Unless the
peer requests a smaller value via MRU negotiation, pppd will
request that the kernel networking code send data packets of no more
than \fIn\fR bytes through the PPP network interface.
.TP
.B passive
Enables the "passive" option in the LCP.  With this option, pppd will
attempt to initiate a connection; if no reply is received from the
peer, pppd will then just wait passively for a valid LCP packet from
the peer, instead of exiting, as it would without this option.
.SH OPTIONS
.TP
.I <local_IP_address>\fB:\fI<remote_IP_address>
Set the local and/or remote interface IP addresses.  Either one may be
omitted.  The IP addresses can be specified with a host name or in
decimal dot notation (e.g., 150.234.56.78).  The default local
address is the (first) IP address of the system (unless the
\fInoipdefault\fR
option is given).  The remote address will be obtained from the peer
if not specified in any option.  Thus, in simple cases, this option is
not required.  If a local and/or remote IP address is specified with
this option, pppd
will not accept a different value from the peer in the IPCP
negotiation, unless the \fIipcp-accept-local\fR and/or
\fIipcp-accept-remote\fR options are given, respectively.
.TP
.B bsdcomp \fInr,nt
d279 15
a293 5
BSD-Compress scheme, with a maximum code size of \fInr\fR bits, and
agree to compress packets sent to the peer with a maximum code size of
\fInt\fR bits.  If \fInt\fR is not specified, it defaults to the value
given for \fInr\fR.  Values in the range 9 to 15 may be used for
\fInr\fR and \fInt\fR; larger values give better compression but
d295 14
a308 6
Alternatively, a value of 0 for \fInr\fR or \fInt\fR disables
compression in the corresponding direction.  Use \fInobsdcomp\fR or
\fIbsdcomp 0\fR to disable BSD-Compress compression entirely.
.TP
.B chap-interval \fIn
If this option is given, pppd will rechallenge the peer every \fIn\fR
d310 3
a312 3
.TP
.B chap-max-challenge \fIn
Set the maximum number of CHAP challenge transmissions to \fIn\fR
d314 5
a318 6
.TP
.B chap-restart \fIn
Set the CHAP restart interval (retransmission timeout for challenges)
to \fIn\fR seconds (default 3).
.TP
.B debug
d320 15
a334 7
If this option is given, pppd will log the contents of all
control packets sent or received in a readable form.  The packets are
logged through syslog with facility \fIdaemon\fR and level
\fIdebug\fR.  This information can be directed to a file by setting up
/etc/syslog.conf appropriately (see syslog.conf(5)).
.TP
.B default-asyncmap
d337 5
a341 4
.TP
.B default-mru
Disable MRU [Maximum Receive Unit] negotiation.  With this option,
pppd will use the default MRU value of 1500 bytes for both the
d343 1
a343 2
.TP
.B deflate \fInr,nt
d345 28
a372 9
Deflate scheme, with a maximum window size of \fI2**nr\fR bytes, and
agree to compress packets sent to the peer with a maximum window size
of \fI2**nt\fR bytes.  If \fInt\fR is not specified, it defaults to
the value given for \fInr\fR.  Values in the range 8 to 15 may be used
for \fInr\fR and \fInt\fR; larger values give better compression but
consume more kernel memory for compression dictionaries.
Alternatively, a value of 0 for \fInr\fR or \fInt\fR disables
compression in the corresponding direction.  Use \fInodeflate\fR or
\fIdeflate 0\fR to disable Deflate compression entirely.  (Note: pppd
d375 1
a375 2
.TP
.B demand
d378 44
a421 22
on the command line or in an options file.  Pppd will initially
configure the interface and enable it for IP traffic without
connecting to the peer.  When traffic is available, pppd will
connect to the peer and perform negotiation, authentication, etc.
When this is completed, pppd will commence passing data packets
(i.e., IP packets) across the link.

The \fIdemand\fR option implies the \fIpersist\fR option.  If this
behaviour is not desired, use the \fInopersist\fR option after the
\fIdemand\fR option.  The \fIidle\fR and \fIholdoff\fR
options are also useful in conjunction with the \fIdemand\fR option.
.TP
.B domain \fId
Append the domain name \fId\fR to the local host name for authentication
purposes.  For example, if gethostname() returns the name porsche, but
the fully qualified domain name is porsche.Quotron.COM, you could
specify \fIdomain Quotron.COM\fR.  Pppd would then use the name
\fIporsche.Quotron.COM\fR for looking up secrets in the secrets file,
and as the default name to send to the peer when authenticating itself
to the peer.  This option is privileged.
.TP
.B holdoff \fIn
d423 23
a445 10
it terminates.  This option only has any effect if the \fIpersist\fR
or \fIdemand\fR option is used.  The holdoff period is not applied if
the link was terminated because it was idle.
.TP
.B idle \fIn
Specifies that pppd should disconnect if the link is idle for \fIn\fR
seconds.  The link is idle when no data packets (i.e., IP packets) are
being sent or received.  Note: it is not advisable to use this option
with the \fIpersist\fR option without the \fIdemand\fR option.
If the \fBactive-filter\fR
d448 11
a458 10
.TP
.B ipcp-accept-local
With this option, pppd will accept the peer's idea of our local IP
address, even if the local IP address was specified in an option.
.TP
.B ipcp-accept-remote
With this option, pppd will accept the peer's idea of its (remote) IP
address, even if the remote IP address was specified in an option.
.TP
.B ipcp-max-configure \fIn
d460 3
a462 3
\fIn\fR (default 10).
.TP
.B ipcp-max-failure \fIn
d464 4
a467 3
to send configure-Rejects instead to \fIn\fR (default 10).
.TP
.B ipcp-max-terminate \fIn
d469 5
a473 4
\fIn\fR (default 3).
.TP
.B ipcp-restart \fIn
Set the IPCP restart interval (retransmission timeout) to \fIn\fR
d475 10
a484 12
.TP
.B ipparam \fIstring
Provides an extra parameter to the ip-up and ip-down scripts.  If this
option is given, the \fIstring\fR supplied is given as the 6th
parameter to those scripts.
.TP
.B ipx
Enable the IPXCP and IPX protocols.  This option is presently only
supported under Linux, and only if your kernel has been configured to
include IPX support.
.TP
.B ipx-network \fIn
d486 19
a504 12
\fIn\fR, a hexadecimal number (without a leading 0x).  There is no
valid default.  If this option is not specified, the network number is
obtained from the peer.  If the peer does not have the network number,
the IPX protocol will not be started.
.TP
.B ipx-node \fIn\fB:\fIm
Set the IPX node numbers. The two node numbers are separated from each
other with a colon character. The first number \fIn\fR is the local
node number. The second number \fIm\fR is the peer's node number. Each
node number is a hexadecimal number, at most 10 digits long. The node
numbers on the ipx-network must be unique. There is no valid
default. If this option is not specified then the node numbers are
d506 25
a530 19
.TP
.B ipx-router-name \fI<string>
Set the name of the router. This is a string and is sent to the peer
as information data.
.TP
.B ipx-routing \fIn
Set the routing protocol to be received by this option. More than one
instance of \fIipx-routing\fR may be specified. The '\fInone\fR'
option (0) may be specified as the only instance of ipx-routing. The
values may be \fI0\fR for \fINONE\fR, \fI2\fR for \fIRIP/SAP\fR, and
\fI4\fR for \fINLSP\fR.
.TP
.B ipxcp-accept-local
Accept the peer's NAK for the node number specified in the ipx-node
option. If a node number was specified, and non-zero, the default is
to insist that the value be used. If you include this option then you
will permit the peer to override the entry of the node number.
.TP
.B ipxcp-accept-network
d532 8
a539 8
ipx-network option. If a network number was specified, and non-zero, the
default is to insist that the value be used. If you include this
option then you will permit the peer to override the entry of the node
number.
.TP
.B ipxcp-accept-remote
Use the peer's network number specified in the configure request
frame. If a node number was specified for the peer and this option was
d542 1
a542 2
.TP
.B ipxcp-max-configure \fIn
d544 4
a547 3
system will send to \fIn\fR. The default is 10.
.TP
.B ipxcp-max-failure \fIn
d549 3
a551 3
send before it rejects the options. The default value is 3.
.TP
.B ipxcp-max-terminate \fIn
d553 30
a582 19
local system considers that the peer is not listening to them. The
default value is 3.
.TP
.B kdebug \fIn
Enable debugging code in the kernel-level PPP driver.  The argument
\fIn\fR is a number which is the sum of the following values: 1 to
enable general debug messages, 2 to request that the contents of
received packets be printed, and 4 to request that the contents of
transmitted packets be printed.  On most systems, messages printed by
the kernel are logged by syslog(1) to a file as directed in the
/etc/syslog.conf configuration file.
.TP
.B lcp-echo-failure \fIn
If this option is given, pppd will presume the peer to be dead
if \fIn\fR LCP echo-requests are sent without receiving a valid LCP
echo-reply.  If this happens, pppd will terminate the
connection.  Use of this option requires a non-zero value for the
\fIlcp-echo-interval\fR parameter.  This option can be used to enable
pppd to terminate after the physical connection has been broken
d585 11
a595 9
.TP
.B lcp-echo-interval \fIn
If this option is given, pppd will send an LCP echo-request frame to
the peer every \fIn\fR seconds.  Normally the peer should respond to
the echo-request by sending an echo-reply.  This option can be used
with the \fIlcp-echo-failure\fR option to detect that the peer is no
longer connected.
.TP
.B lcp-max-configure \fIn
d597 3
a599 3
\fIn\fR (default 10).
.TP
.B lcp-max-failure \fIn
d601 4
a604 3
to send configure-Rejects instead to \fIn\fR (default 10).
.TP
.B lcp-max-terminate \fIn
d606 5
a610 4
\fIn\fR (default 3).
.TP
.B lcp-restart \fIn
Set the LCP restart interval (retransmission timeout) to \fIn\fR
d612 7
a618 7
.TP
.B local
Don't use the modem control lines.  With this option, pppd will ignore
the state of the CD (Carrier Detect) signal from the modem and will
not change the state of the DTR (Data Terminal Ready) signal.
.TP
.B login
d620 5
a624 5
PAP, and record the user in the system wtmp file.  Note that the peer
must have an entry in the /etc/ppp/pap-secrets file as well as the
system password database to be allowed access.
.TP
.B maxconnect \fIn
d626 11
a636 6
traffic for \fIn\fR seconds (i.e., \fIn\fR seconds after the first
network control protocol comes up).
.TP
.B modem
Use the modem control lines.  This option is the default.  With this
option, pppd will wait for the CD (Carrier Detect) signal from the
d640 41
a680 27
the connect script.  On Ultrix, this option implies hardware flow
control, as for the \fIcrtscts\fR option.
.TP
.B modem_chat
Use the modem control lines during the chat script.  The default is
to ignore the state of the CD (Carrier Detect) signal from the modem
during the chat script.  If you are using a cua device (as opposed to
a tty device) you should set this option.  You should not use
this option with a dialback setup as it will cause the chat script
to exit when carrier drops.
.TP
.B ms-dns \fI<addr>
If pppd is acting as a server for Microsoft Windows clients, this
option allows pppd to supply one or two DNS (Domain Name Server)
addresses to the clients.  The first instance of this option specifies
the primary DNS address; the second instance (if given) specifies the
secondary DNS address.  (This option was present in some older
versions of pppd under the name \fBdns-addr\fR.)
.TP
.B ms-wins \fI<addr>
If pppd is acting as a server for Microsoft Windows or "Samba"
clients, this option allows pppd to supply one or two WINS (Windows
Internet Name Services) server addresses to the clients.  The first
instance of this option specifies the primary WINS address; the second
instance (if given) specifies the secondary WINS address.
.TP
.B name \fIname
d682 12
a693 4
\fIname\fR.  This is a privileged option.  With this option, pppd will
use lines in the secrets files which have \fIname\fR as the second
field when looking for a secret to use in authenticating the peer.  In
addition, unless overridden with the \fIuser\fR option, \fIname\fR
d695 15
a709 10
local system to the peer.  (Note that pppd does not append the domain
name to \fIname\fR.)
.TP
.B netmask \fIn
Set the interface netmask to \fIn\fR, a 32 bit netmask in "decimal dot"
notation (e.g., 255.255.255.0).  If this option is given, the value
specified is ORed with the default netmask.  The default netmask is
chosen based on the negotiated remote IP address; it is the
appropriate network mask for the class of the remote IP address, ORed
with the netmasks for any non point-to-point network interfaces in the
d711 53
a763 44
.TP
.B noaccomp
Disable Address/Control compression in both directions (send and
receive).
.TP
.B noauth
Do not require the peer to authenticate itself.  This option is
privileged if the \fIauth\fR option is specified in /etc/ppp/options.
.TP
.B nobsdcomp
Disables BSD-Compress compression; \fBpppd\fR will not request or
agree to compress packets using the BSD-Compress scheme.
.TP
.B noccp
Disable CCP (Compression Control Protocol) negotiation.  This option
should only be required if the peer is buggy and gets confused by
requests from pppd for CCP negotiation.
.TP
.B nocrtscts
Disable hardware flow control (i.e., RTS/CTS) on the serial port.  If
neither the \fIcrtscts\fR nor the \fInocrtscts\fR option is given,
the hardware flow control setting for the serial port is left
unchanged.
.TP
.B nodefaultroute
Disable the \fIdefaultroute\fR option.  The system administrator who
wishes to prevent users from creating default routes with pppd
can do so by placing this option in the /etc/ppp/options file.
.TP
.B nodeflate
Disables Deflate compression; pppd will not request or agree to
compress packets using the Deflate scheme.
.TP
.B nodetach
Don't detach from the controlling terminal.  Without this option, if a
serial device other than the terminal on the standard input is
specified, pppd will fork to become a background process.
.TP
.B noip
Disable IPCP negotiation and IP communication.  This option should
only be required if the peer is buggy and gets confused by requests
from pppd for IPCP negotiation.
.TP
.B noipdefault
d765 2
a766 2
which is to determine (if possible) the local IP address from the
hostname.  With this option, the peer will have to supply the local IP
d769 5
a773 4
.TP
.B noipx
Disable the IPXCP and IPX protocols.  This option should only be
required if the peer is buggy and gets confused by requests from pppd
d775 7
a781 7
.TP
.B nomagic
Disable magic number negotiation.  With this option, pppd cannot
detect a looped-back line.  This option should only be needed if the
peer is buggy.
.TP
.B nopcomp
d784 8
a791 7
.TP
.B nopersist
Exit once a connection has been made and terminated.  This is the
default unless the \fIpersist\fR or \fIdemand\fR option has been
specified.
.TP
.B nopredictor1
d793 11
a803 7
.TP
.B noproxyarp
Disable the \fIproxyarp\fR option.  The system administrator who
wishes to prevent users from creating proxy ARP entries with pppd can
do so by placing this option in the /etc/ppp/options file.
.TP
.B novj
d806 1
a806 2
.TP
.B novjccomp
d808 16
a823 11
TCP/IP header compression.  With this option, pppd will not omit the
connection-ID byte from Van Jacobson compressed TCP/IP headers, nor
ask the peer to do so.
.TP
.B papcrypt
Indicates that all secrets in the /etc/ppp/pap-secrets file which are
used for checking the identity of the peer are encrypted, and thus
pppd should not accept a password which, before encryption, is
identical to the secret from the /etc/ppp/pap-secrets file.
.TP
.B pap-max-authreq \fIn
d825 5
a829 4
\fIn\fR (default 10).
.TP
.B pap-restart \fIn
Set the PAP restart interval (retransmission timeout) to \fIn\fR
d831 8
a838 7
.TP
.B pap-timeout \fIn
Set the maximum time that pppd will wait for the peer to authenticate
itself with PAP to \fIn\fR seconds (0 means no limit).
.TP
.B pass-filter \fIfilter-expression
Specifies a packet filter to applied to data packets being sent or
d840 8
a847 5
Packets which are rejected by the filter are silently discarded.  This
option can be used to prevent specific network daemons (such as
routed) using up link bandwidth, or to provide a basic firewall
capability.
The \fIfilter-expression\fR syntax is as described for tcpdump(1),
d849 20
a868 9
\fBether\fR and \fBarp\fR, are not permitted.  Generally the filter
expression should be enclosed in single-quotes to prevent whitespace
in the expression from being interpreted by the shell.  Note that it
is possible to apply different constraints to incoming and outgoing
packets using the \fBinbound\fR and \fBoutbound\fR qualifiers. This
option is currently only available under OpenBSD, and then only if both
the kernel and pppd were compiled with PPP_FILTER defined.
.TP
.B persist
d871 1
a871 2
.TP
.B predictor1
d874 7
a880 7
if requested.  This option has no effect unless the kernel driver
supports Predictor-1 compression.
.TP
.B proxyarp
Add an entry to this system's ARP [Address Resolution Protocol] table
with the IP address of the peer and the Ethernet address of this
system.  This will have the effect of making the peer appear to other
d882 25
a906 27
.TP
.B remotename \fIname
Set the assumed name of the remote system for authentication purposes
to \fIname\fR.
.TP
.B refuse-chap
With this option, pppd will not agree to authenticate itself to the
peer using CHAP.
.TP
.B refuse-pap
With this option, pppd will not agree to authenticate itself to the
peer using PAP.
.TP
.B require-chap
Require the peer to authenticate itself using CHAP [Challenge
Handshake Authentication Protocol] authentication.
.TP
.B require-pap
Require the peer to authenticate itself using PAP [Password
Authentication Protocol] authentication.
.TP
.B silent
With this option, pppd will not transmit LCP packets to initiate a
connection until a valid LCP packet is received from the peer (as for
the `passive' option with ancient versions of pppd).
.TP
.B usehostname
d908 4
a911 4
as the name of the local system for authentication purposes (overrides
the \fIname\fR option).
.TP
.B user \fIname
d913 2
a914 3
\fIname\fR.
.TP
.B vj-max-slots \fIn
d916 12
a927 10
TCP/IP header compression and decompression code to \fIn\fR, which
must be between 2 and 16 (inclusive).
.TP
.B welcome \fIscript
Run the executable or shell command specified by \fIscript\fR before
initiating PPP negotiation, after the connect script (if any) has
completed.  This option is privileged if the \fInoauth\fR option is
used.
.TP
.B xonxoff
d930 16
a945 7
.SH OPTIONS FILES
Options can be taken from files as well as the command line.  Pppd
reads options from the files /etc/ppp/options, ~/.ppprc and
/etc/ppp/options.\fIttyname\fR (in that order) before processing the
options on the command line.  (In fact, the command-line options are
scanned to find the terminal name before the options.\fIttyname\fR
file is read.)  In forming the name of the options.\fIttyname\fR file,
d948 9
a956 6
.PP
An options file is parsed into a series of words, delimited by
whitespace.  Whitespace can be included in a word by enclosing the
word in double-quotes (").  A backslash (\\) quotes the following character.
A hash (#) starts a comment, which continues until the end of the
line.  There is no restriction on using the \fIfile\fR or \fIcall\fR
d958 7
a964 5
.SH SECURITY
Users must be in group network to be able to use
.I pppd.
.LP
.I pppd
d967 6
a972 4
fear of compromising the security of the server or the network it's
on.  In part this is provided by the /etc/ppp/options file, where the
administrator can place options to restrict the ways in which pppd can
be used, and in part by the PAP and CHAP secrets files, where the
d975 24
a998 12
.PP
The normal way that pppd should be set up is to have the \fIauth\fR
option in the /etc/ppp/options file.  (This may become the default in
later releases.)  If users wish to use pppd to dial out to a peer
which will refuse to authenticate itself (such as an internet service
provider), the system administrator should create an options file
under /etc/ppp/peers containing the \fInoauth\fR option, the name of
the serial port to use, and the \fIconnect\fR option (if required),
plus any other appropriate options.  In this way, pppd can be set up
to allow non-privileged users to make unauthenticated connections only
to trusted peers.
.PP
d1001 15
a1015 5
user running a setuid-root pppd, either on the command line, in the
user's ~/.ppprc file, or in an options file read using the \fIfile\fR
option.  Privileged options may be used in /etc/ppp/options file or in
an options file read using the \fIcall\fR option.  If pppd is being
run by the root user, privileged options can be used without
d1017 1
a1017 1
.SH AUTHENTICATION
d1019 22
a1040 16
its identity.  This involves the first peer sending its name to the
other, together with some kind of secret information which could only
come from the genuine authorized user of that name.  In such an
exchange, we will call the first peer the "client" and the other the
"server".  The client has a name by which it identifies itself to the
server, and the server also has a name by which it identifies itself
to the client.  Generally the genuine client shares some secret (or
password) with the server, and authenticates itself by proving that it
knows that secret.  Very often, the names used for authentication
correspond to the internet hostnames of the peers, but this is not
essential.
.LP
At present, pppd supports two authentication protocols: the Password
Authentication Protocol (PAP) and the Challenge Handshake
Authentication Protocol (CHAP).  PAP involves the client sending its
name and a cleartext password to the server to authenticate itself.
d1043 5
a1047 4
server's name).  The client must respond with a response which
includes its name plus a hash value derived from the shared secret and
the challenge, in order to prove that it knows the secret.
.LP
d1049 13
a1061 8
other to authenticate itself.  In that case, two separate and
independent authentication exchanges will occur.  The two exchanges
could use different authentication protocols, and in principle,
different names could be used in the two exchanges.
.LP
The default behaviour of pppd is to agree to authenticate if
requested, and to not require authentication from the peer.  However,
pppd will not agree to authenticate itself with a particular protocol
d1063 18
a1080 11
.LP
Pppd stores secrets for use in authentication in secrets
files (/etc/ppp/pap-secrets for PAP, /etc/ppp/chap-secrets for CHAP).
Both secrets files have the same format.  The secrets files can
contain secrets for pppd to use in authenticating itself to other
systems, as well as secrets for pppd to use when authenticating other
systems to itself.
.LP
Each line in a secrets file contains one secret.  A given secret is
specific to a particular combination of client and server - it can
only be used by that client to authenticate itself to that server.
d1082 4
a1085 4
the client, the name of the server, and the secret.  These fields may
be followed by a list of the IP addresses that the specified client
may use when connecting to the specified server.
.LP
d1088 23
a1110 12
with any embedded spaces or other special characters quoted or
escaped.  Any following words on the same line are taken to be a list
of acceptable IP addresses for that client.  If there are only 3 words
on the line, or if the first word is "-", then all IP addresses are
disallowed.  To allow any address, use "*".
A word starting with "!" indicates that the
specified address is \fInot\fR acceptable.  An address may be followed
by "/" and a number \fIn\fR, to indicate a whole subnet, i.e., all
addresses which have the same value in the most significant \fIn\fR
bits.  Note that case is significant in the client and server names
and in the secret.
.LP
d1112 8
a1119 4
name of a file from which to read the secret.  A "*" as the client or
server name matches any name.  When selecting a secret, pppd takes the
best match, i.e., the match with the fewest wildcards.
.LP
d1122 45
a1166 24
others.  When pppd is authenticating the peer (checking the peer's
identity), it chooses a secret with the peer's name in the first
field and the name of the local system in the second field.  The
name of the local system defaults to the hostname, with the domain
name appended if the \fIdomain\fR option is used.  This default can be
overridden with the \fIname\fR option, except when the
\fIusehostname\fR option is used.
.LP
When pppd is choosing a secret to use in authenticating itself to the
peer, it first determines what name it is going to use to identify
itself to the peer.  This name can be specified by the user with the
\fIuser\fR option.  If this option is not used, the name defaults to
the name of the local system, determined as described in the previous
paragraph.  Then pppd looks for a secret with this name in the first
field and the peer's name in the second field.  Pppd will know the
name of the peer if CHAP authentication is being used, because the
peer will have sent it in the challenge packet.  However, if PAP is being
used, pppd will have to determine the peer's name from the options
specified by the user.  The user can specify the peer's name directly
with the \fIremotename\fR option.  Otherwise, if the remote IP address
was specified by a name (rather than in numeric form), that name will
be used as the peer's name.  Failing that, pppd will use the null
string as the peer's name.
.LP
d1168 16
a1183 10
compared with the secret from the secrets file.  If the password
doesn't match the secret, the password is encrypted using crypt() and
checked against the secret again.  Thus secrets for authenticating the
peer can be stored in encrypted form if desired.  If the
\fIpapcrypt\fR option is given, the first (unencrypted) comparison is
omitted, for better security.
.LP
Furthermore, if the \fIlogin\fR option was specified, the username and
password are also checked against the system password database.  Thus,
the system administrator can set up the pap-secrets file to allow PPP
d1185 19
a1203 12
that each user can use.  Typically, when using the \fIlogin\fR option,
the secret in /etc/ppp/pap-secrets would be "", which will match any
password supplied by the peer.  This avoids the need to have the same
secret in two places.
.LP
Authentication must be satisfactorily completed before IPCP (or any
other Network Control Protocol) can be started.  If the peer is
required to authenticate itself, and fails to do so, pppd will
terminated the link (by closing LCP).  If IPCP negotiates an
unacceptable IP address for the remote host, IPCP will be closed.  IP
packets can only be sent or received when IPCP is open.
.LP
d1206 13
a1218 11
IP addresses, even when the local host generally requires
authentication.  If the peer refuses to authenticate itself when
requested, pppd takes that as equivalent to authenticating with PAP
using the empty string for the username and password.  Thus, by adding
a line to the pap-secrets file which specifies the empty string for
the client and password, it is possible to allow restricted access to
hosts which refuse to authenticate themselves.
.SH ROUTING
.LP
When IPCP negotiation is completed successfully, pppd will inform the
kernel of the local and remote IP addresses for the ppp interface.
d1222 12
a1233 6
modification to routing tables and/or ARP (Address Resolution
Protocol) tables.  In most cases the \fIdefaultroute\fR and/or
\fIproxyarp\fR options are sufficient for this, but in some cases
further intervention is required.  The /etc/ppp/ip-up script can be
used for this.
.LP
d1236 6
a1241 2
Internet is through the ppp interface.  The \fIdefaultroute\fR option
causes pppd to create such a default route when IPCP comes up, and
d1243 1
a1243 1
.LP
d1246 6
a1251 2
communicate with the remote host.  The \fIproxyarp\fR option causes
pppd to look for a network interface on the same subnet as the remote
d1253 4
a1256 2
point-to-point or loopback interface).  If found, pppd creates a
permanent, published ARP entry with the IP address of the remote host
d1258 8
a1265 4
.LP
When the \fIdemand\fR option is used, the interface IP addresses have
already been set at the point when IPCP comes up.  If pppd has not
been able to negotiate the same addresses that it used to configure
d1267 25
a1291 18
IP address assignment), pppd has to change the interface IP addresses
to the negotiated addresses.  This may disrupt existing connections,
and the use of demand dialling with peers that do dynamic IP address
assignment is not recommended.
.SH EXAMPLES
.LP
The following examples assume that the /etc/ppp/options file contains
the \fIauth\fR option (as in the default /etc/ppp/options file in the
ppp distribution).
.LP
Probably the most common use of pppd is to dial out to an ISP.  This
can be done with a command such as
.IP
pppd call isp
.LP
where the /etc/ppp/peers/isp file is set up by the system
administrator to contain something like this:
.IP
a1292 1
.br
a1293 1
.br
d1295 2
a1296 1
.LP
d1298 4
a1301 2
through any logon sequence required.  The /etc/ppp/chat-isp file
contains the script used by chat; it could for example contain
d1303 2
a1304 1
.IP
a1305 1
.br
a1306 1
.br
a1307 1
.br
a1308 1
.br
a1309 1
.br
a1310 1
.br
a1311 1
.br
a1312 1
.br
a1313 1
.br
a1314 1
.br
a1315 1
.br
a1316 1
.br
d1318 11
a1328 6
.LP
See the chat(8) man page for details of chat scripts.
.LP
Pppd can also be used to provide a dial-in ppp service for users.  If
the users already have login accounts, the simplest way to set up the
ppp service is to let the users log in to their accounts and run pppd
d1330 3
a1332 3
.IP
pppd proxyarp
.LP
d1335 28
a1362 15
/etc/ppp/pap-secrets or /etc/ppp/chap-secrets (depending on which
authentication method the PPP implementation on the user's machine
supports), so that the user's
machine can authenticate itself.  For example, if Joe has a machine
called "joespc" which is to be allowed to dial in to the machine
called "server" and use the IP address joespc.my.net, you would add an
entry like this to /etc/ppp/pap-secrets or /etc/ppp/chap-secrets:
.IP
joespc	server	"joe's secret"	joespc.my.net
.LP
Alternatively, you can create a username called (for example) "ppp",
whose login shell is pppd and whose home directory is /etc/ppp.
Options to be used when pppd is run this way can be put in
/etc/ppp/.ppprc.
.LP
d1364 8
a1371 5
wire, you may need to arrange for some control characters to be
escaped.  In particular, it is often useful to escape XON (^Q) and
XOFF (^S), using \fIasyncmap a0000\fR.  If the path includes a telnet,
you probably should escape ^] as well (\fIasyncmap 200a0000\fR).  If
the path includes an rlogin, you will need to use the \fIescape ff\fR
d1374 18
a1391 11
sequence [0xff, 0xff, 0x73, 0x73, followed by any 8 bytes] from the
stream.
.SH DIAGNOSTICS
.LP
Messages are sent to the syslog daemon using facility LOG_DAEMON.
(This can be overriden by recompiling pppd with the macro
LOG_PPP defined as the desired facility.)  In order to see the error
and debug messages, you will need to edit your /etc/syslog.conf file
to direct the messages to the desired output device or file.
.LP
The \fIdebug\fR option causes the contents of all control packets sent
d1395 4
a1398 3
If debugging is enabled at compile time, the \fIdebug\fR option also
causes other debugging messages to be logged.
.LP
d1400 24
a1423 13
to the pppd process.  This signal acts as a toggle.
.SH SCRIPTS
Pppd invokes scripts at various stages in its processing which can be
used to perform site-specific ancillary processing.  These scripts are
usually shell scripts, but could be executable code files instead.
Pppd does not wait for the scripts to finish.  The scripts are
executed as root (with the real and effective user ID set to 0), so
that they can do things such as update routing tables or run
privileged daemons.  Be careful that the contents of these scripts do
not compromise your system's security.  Pppd runs the scripts with
standard input, output and error redirected to /dev/null, and with an
environment that is empty except for some environment variables that
give information about the link.  The environment variables that pppd
d1425 2
a1426 2
.TP
.B DEVICE
d1428 1
a1428 2
.TP
.B IFNAME
d1430 10
a1439 14
.TP
.B IPLOCAL
The IP address for the local end of the link.  This is only set when
IPCP has come up.
.TP
.B IPREMOTE
The IP address for the remote end of the link.  This is only set when
IPCP has come up.
.TP
.B PEERNAME
The authenticated name of the peer.  This is only set if the peer
authenticates itself.
.TP
.B SPEED
d1441 10
a1450 8
.TP
.B UID
The real user ID of the user who invoked pppd.
.P
Pppd invokes the following scripts, if they exist.  It is not an error
if they don't exist.
.TP
.B /etc/ppp/auth-up
d1452 5
a1456 4
successfully authenticates itself.  It is executed with the parameters
.IP
\fIinterface-name peer-name user-name tty-device speed\fR
.IP
d1458 4
a1461 3
itself, for example when the \fInoauth\fR option is used.
.TP
.B /etc/ppp/auth-down
d1463 5
a1467 4
/etc/ppp/auth-up was previously executed.  It is executed in the same
manner with the same parameters as /etc/ppp/auth-up.
.TP
.B /etc/ppp/ip-up
d1469 5
a1473 7
sending and receiving IP packets (that is, IPCP has come up).  It is
executed with the parameters
.IP
\fIinterface-name tty-device speed local-IP-address
remote-IP-address ipparam\fR
.TP
.B /etc/ppp/ip-down
d1475 5
a1479 3
available for sending and receiving IP packets.  This script can be
used for undoing the effects of the /etc/ppp/ip-up script.  It is
invoked in the same manner and with the same parameters as the ip-up
d1481 1
a1481 2
.TP
.B /etc/ppp/ipx-up
d1483 8
a1490 7
sending and receiving IPX packets (that is, IPXCP has come up).  It is
executed with the parameters
.IP
\fIinterface-name tty-device speed network-number local-IPX-node-address
remote-IPX-node-address local-IPX-routing-protocol remote-IPX-routing-protocol
local-IPX-router-name remote-IPX-router-name ipparam pppd-pid\fR
.IP
d1493 12
a1504 10
.IP
NONE      to indicate that there is no routing protocol
.br
RIP       to indicate that RIP/SAP should be used
.br
NLSP      to indicate that Novell NLSP should be used
.br
RIP NLSP  to indicate that both RIP/SAP and NLSP should be used
.TP
.B /etc/ppp/ipx-down
d1506 3
a1508 3
available for sending and receiving IPX packets.  This script can be
used for undoing the effects of the /etc/ppp/ipx-up script.  It is
invoked in the same manner and with the same parameters as the ipx-up
d1510 35
a1544 24
.SH FILES
.TP
.B /var/run/ppp\fIn\fB.pid \fR(BSD or Linux), \fB/etc/ppp/ppp\fIn\fB.pid \fR(others)
Process-ID for pppd process on ppp interface unit \fIn\fR.
.TP
.B /etc/ppp/pap-secrets
Usernames, passwords and IP addresses for PAP authentication.  This
file should be owned by root and not readable or writable by any other
user.  Pppd will log a warning if this is not the case.
.TP
.B /etc/ppp/chap-secrets
Names, secrets and IP addresses for CHAP authentication.  As for
/etc/ppp/pap-secrets, this file should be owned by root and not
readable or writable by any other user.  Pppd will log a warning if
this is not the case.
.TP
.B /etc/ppp/options
System default options for pppd, read before user default options or
command-line options.
.TP
.B ~/.ppprc
User default options, read before /etc/ppp/options.\fIttyname\fR.
.TP
.B /etc/ppp/options.\fIttyname
d1546 6
a1551 6
~/.ppprc.  In forming the \fIttyname\fR part of this
filename, an initial /dev/ is stripped from the port name (if
present), and any slashes in the remaining part are converted to
dots.
.TP
.B /etc/ppp/peers
d1553 4
a1556 2
options, even if pppd was invoked by a user other than root.  The
system administrator can create options files in this directory to
d1559 84
a1642 63
.SH SEE ALSO
.TP
.B RFC1144
Jacobson, V.
\fICompressing TCP/IP headers for low-speed serial links.\fR
February 1990.
.TP
.B RFC1321
Rivest, R.
.I The MD5 Message-Digest Algorithm.
April 1992.
.TP
.B RFC1332
McGregor, G.
.I PPP Internet Protocol Control Protocol (IPCP).
May 1992.
.TP
.B RFC1334
Lloyd, B.; Simpson, W.A.
.I PPP authentication protocols.
October 1992.
.TP
.B RFC1661
Simpson, W.A.
.I The Point\-to\-Point Protocol (PPP).
July 1994.
.TP
.B RFC1662
Simpson, W.A.
.I PPP in HDLC-like Framing.
July 1994.
.SH NOTES
The following signals have the specified effect when sent to pppd.
.TP
.B SIGINT, SIGTERM
These signals cause pppd to terminate the link (by closing LCP),
restore the serial device settings, and exit.
.TP
.B SIGHUP
This signal causes pppd to terminate the link, restore the serial
device settings, and close the serial device.  If the \fIpersist\fR or
\fIdemand\fR option has been specified, pppd will try to reopen the
serial device and start another connection (after the holdoff period).
Otherwise pppd will exit.  If this signal is received during the
holdoff period, it causes pppd to end the holdoff period immediately.
.TP
.B SIGUSR1
This signal toggles the state of the \fIdebug\fR option.
.TP
.B SIGUSR2
This signal causes pppd to renegotiate compression.  This can be
useful to re-enable compression after it has been disabled as a result
of a fatal decompression error.  (Fatal decompression errors generally
indicate a bug in one or other implementation.)

.SH AUTHORS
Paul Mackerras (Paul.Mackerras@@cs.anu.edu.au), based on earlier work by
Drew Perkins,
Brad Clements,
Karl Fox,
Greg Christy,
and
Brad Parker.
@


1.25
log
@copyrights added;

bootpef(8), pppd(8): Carnegie Mellon
map-mbone(8), mrinfo(8): Xerox
pdisk(8): Apple
awk(1): Lucent
sectok(3): University of Michigan
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.24 2003/02/09 07:26:45 jmc Exp $
d389 1
a389 1
Set the maximum nuber of IPXCP terminate request frames before the
@


1.24
log
@typos;
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.23 2003/01/23 14:31:19 avsm Exp $
d4 39
@


1.23
log
@'conjunction' typos
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.22 2002/05/19 20:47:52 deraadt Exp $
d509 2
a510 2
address during IPCP negotiation (unless it specified explicitly on the
command line or in an options file).
d747 1
a747 1
A secrets file is parsed into words as for a options file, so the
@


1.22
log
@make pppd only executable by group network
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.21 2000/04/15 11:46:00 aaron Exp $
d235 1
a235 1
options are also useful in conjuction with the \fIdemand\fR option.
@


1.21
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.20 2000/03/14 21:31:38 aaron Exp $
d665 3
@


1.20
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.19 1999/09/23 04:12:11 alex Exp $
d967 1
a967 1
executed as root (with the real and effective user-id set to 0), so
d998 1
a998 1
The real user-id of the user who invoked pppd.
@


1.19
log
@Typo fixes.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.18 1999/07/20 12:31:25 aaron Exp $
d47 1
a47 1
(e.g. SunOS) allow only a limited set of speeds.
d96 1
a96 1
Use hardware flow control (i.e. RTS/CTS) to control the flow of data
d156 1
a156 1
decimal dot notation (e.g. 150.234.56.78).  The default local
d223 1
a223 1
Initiate the link only on demand, i.e. when data traffic is present.
d254 1
a254 1
seconds.  The link is idle when no data packets (i.e. IP packets) are
d409 1
a409 1
traffic for \fIn\fR seconds (i.e. \fIn\fR seconds after the first
d456 1
a456 1
notation (e.g. 255.255.255.0).  If this option is given, the value
d481 1
a481 1
Disable hardware flow control (i.e. RTS/CTS) on the serial port.  If
d646 1
a646 1
Use software flow control (i.e. XON/XOFF) to control the flow of data on
d753 1
a753 1
by "/" and a number \fIn\fR, to indicate a whole subnet, i.e. all
d761 1
a761 1
best match, i.e.  the match with the fewest wildcards.
@


1.18
log
@It's not good to mix mdoc and old-style macros together; espie@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.17 1999/07/03 19:04:21 millert Exp $
d532 1
a532 1
Do not accept or agree to Predictor-1 comprssion.
@


1.17
log
@Add a note about modem_chat vs. dialback
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.16 1999/06/05 22:17:55 aaron Exp $
d46 1
a46 2
.Bx 4.4
and OpenBSD, any speed can be specified.  Other systems
@


1.16
log
@remove trailing whitespace, some Nm cleanup
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.15 1998/06/15 17:56:17 mickey Exp $
d426 3
a428 1
a tty device) you should set this option.
@


1.15
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.14 1998/05/08 04:52:31 millert Exp $
d145 1
a145 1
than \fIn\fR bytes through the PPP network interface. 
d597 1
a597 1
systems to be on the local ethernet.
d1038 1
a1038 1
local-IPX-router-name remote-IPX-router-name ipparam pppd-pid\fR 
@


1.14
log
@pppd 2.3.5
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.13 1998/01/17 20:30:27 millert Exp $
d46 2
a47 1
4.4BSD and OpenBSD, any speed can be specified.  Other systems
@


1.13
log
@ppp-2.3.3 + some -Wall
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.12 1997/11/17 18:15:14 millert Exp $
d3 1
a3 1
.\" Id: pppd.8,v 1.26 1997/04/30 05:56:22 paulus Exp $
d658 1
a658 1
word in quotes (").  A backslash (\\) quotes the following character.
d960 40
a999 4
.SH FILES
.TP
.B /var/run/ppp\fIn\fB.pid \fR(BSD or Linux), \fB/etc/ppp/ppp\fIn\fB.pid \fR(others)
Process-ID for pppd process on ppp interface unit \fIn\fR.
d1007 2
a1008 5
and with its standard input, output and error redirected to
/dev/null.  This program or script is executed with the real and
effective user-IDs set to root, and with an empty environment.  (Note
that this script is not executed if the peer doesn't authenticate
itself, for example when the \fInoauth\fR option is used.)
a1021 12
.IP
and with its standard input,
output and error streams redirected to /dev/null.
.IP
This program or script is executed with the real and effective
user-IDs set to root.  This is so that it can be used to manipulate
routes, run privileged daemons (e.g. \fIsendmail\fR), etc.  Be
careful that the contents of the /etc/ppp/ip-up and /etc/ppp/ip-down
scripts do not compromise your system's security.
.IP
This program or script is executed with an empty environment, so you
must either specify a PATH or use full pathnames.
d1028 1
a1028 1
script, and the same security considerations apply.
a1038 4
and with its standard input,
output and error streams redirected to /dev/null.
.br
.IP
a1048 8
.br
.IP
This program or script is executed with the real and effective
user-IDs set to root, and with an empty environment.  This is so
that it can be used to manipulate routes, run privileged daemons (e.g.
\fIripd\fR), etc.  Be careful that the contents of the /etc/ppp/ipx-up
and /etc/ppp/ipx-down scripts do not compromise your system's
security.
d1055 5
a1059 1
script, and the same security considerations apply.
@


1.12
log
@Mention SIGUSR1 in SIGNALS section.  Noted by Heiko W.Rupp <hwr@@pilhuhn.de>
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.11 1997/11/13 23:55:31 millert Exp $
d3 1
d31 3
a33 4
.B pppd
provides the basic LCP, authentication support, and an
NCP for establishing and configuring the Internet Protocol (IP)
(called the IP Control Protocol, IPCP).
d37 5
a41 6
Communicate over the named device.  The string "/dev/"
is prepended if necessary.  If no device name is given,
or if the name of the controlling terminal is given,
.I pppd
will use the controlling terminal, and will not fork to put itself in
the background. This option is privileged if the \fInoauth\fR option is
d49 16
d68 8
a75 12
line.
.I pppd
will ask the peer to send these characters as a 2-byte escape sequence.
The argument is a 32 bit hex number with each bit representing a character
to escape. 
Bit 0 (00000001) represents the character 0x00;
bit 31 (80000000) represents the character 0x1f or ^_.
If multiple \fBasyncmap\fR options are
given, the values are ORed together.
If no \fBasyncmap\fR option is given, no async character map will be
negotiated for the receive direction; the peer should then escape
\fIall\fR control characters. To escape transmitted
d89 2
a90 2
.B connect \fI<p>
Use the executable or shell command specified by \fI<p>\fR to set
d92 2
a93 2
program to dial the modem and start the remote ppp session. This
option is privileged if the \fBnoauth\fR option is used.
d97 2
a98 2
on the serial port.  If neither the \fBcrtscts\fR nor the
\fB\-crtscts\fR option is given, the hardware flow control setting
d105 1
a105 1
is privileged if the \fBnodefaultroute\fR option has been specified.
d109 5
a113 4
\fIpppd\fR has terminated the link.  This script could, for example,
issue commands to the modem to cause it to hang up if hardware modem
control signals were not available.  This option is privileged if the
\fBnoauth\fR option is used.
d120 2
a121 2
almost any character can be specified for the \fBescape\fR option,
unlike the \fBasyncmap\fR option which only allows control characters
d130 1
a130 1
Specifies that \fIpppd\fR should create a UUCP-style lock file for the
d133 3
a135 4
.B mru \fI<n>
Set the MRU [Maximum Receive Unit] value to <n> for negotiation.
.I pppd
will ask the peer to send packets of no more than <n> bytes.  The
d140 3
a142 3
.B mtu \fI<n>
Set the MTU [Maximum Transmit Unit] value to \fI<n>\fR.  Unless the
peer requests a smaller value via MRU negotiation, \fIpppd\fR will
d147 4
a150 7
Enables the "passive" option in the LCP.  With this option,
.I pppd
will attempt to initiate a connection; if no reply is received from
the peer,
.I pppd
will then just wait passively for a valid LCP packet from the peer
(instead of exiting, as it does without this option).
d162 1
a162 2
this option,
.I pppd
d164 2
a165 2
negotiation, unless the \fBipcp-accept-local\fR and/or
\fBipcp-accept-remote\fR options are given, respectively.
d176 2
a177 1
compression in the corresponding direction.
d179 3
a181 4
.B chap-interval \fI<n>
If this option is given,
.I pppd
will rechallenge the peer every <n> seconds.
d183 3
a185 3
.B chap-max-challenge \fI<n>
Set the maximum number of CHAP challenge transmissions to <n> (default
10).
d187 1
a187 1
.B chap-restart \fI<n>
d189 1
a189 1
to <n> seconds (default 3).
d192 2
a193 2
Increase debugging level (same as \fB\-d\fR).
If this option is given, \fIpppd\fR will log the contents of all
d210 5
a214 5
Deflate scheme, with a maximum window size of \fI2**nr\fR bits, and
agree to compress packets sent to the peer with a maximum window size of
\fI2**nt\fR bits.  If \fInt\fR is not specified, it defaults to the value
given for \fInr\fR.  Values in the range 8 to 15 may be used for
\fInr\fR and \fInt\fR; larger values give better compression but
d217 4
a220 3
compression in the corresponding direction.  (Note: \fBpppd\fR
requests Deflate compression in preference to BSD-Compress
if the peer can do either.)
d224 2
a225 2
With this option, the remote IP address must be specific by the user
on the command line or in an options file.  \fBpppd\fR will initially
d227 1
a227 1
connecting to the peer.  When traffic is available, \fBpppd\fR will
d229 12
a240 8
When this is completed, \fBpppd\fR will commence passing data packets
(i.e., IP packets) across the link.  The persist, idle and holdoff
options are often useful in conjuction with this option.
.TP
.B domain \fI<d>
Append the domain name <d> to the local host name for authentication
purposes.  For example, if gethostname() returns the name porsche, but the
fully qualified domain name is porsche.Quotron.COM, you could use the
d246 1
a246 1
.B holdoff \fI<n>
d248 10
a257 7
it terminates.  This option only has effect if the persist option is
used.
.TP
.B idle \fI<n>
Specifies that \fBpppd\fR should disconnect if it is idle for
\fI<n>\fR seconds.  The link is idle when no data packets (i.e. IP
packets) are being sent or received.  If the \fBactive-filter\fR
d262 2
a263 4
With this option,
.I pppd
will accept the peer's idea of our local IP address, even if the
local IP address was specified in an option.
d266 2
a267 4
With this option,
.I pppd
will accept the peer's idea of its (remote) IP address, even if the
remote IP address was specified in an option.
d269 3
a271 3
.B ipcp-max-configure \fI<n>
Set the maximum number of IPCP configure-request transmissions to <n>
(default 10).
d273 1
a273 1
.B ipcp-max-failure \fI<n>
d275 1
a275 1
to send configure-Rejects instead to <n> (default 10).
d277 7
a283 7
.B ipcp-max-terminate \fI<n>
Set the maximum number of IPCP terminate-request transmissions to <n>
(default 3).
.TP
.B ipcp-restart \fI<n>
Set the IPCP restart interval (retransmission timeout) to <n> seconds
(default 3).
d291 3
a293 3
Enable the IPXCP and IPX protocols.  Under Linux, this is the default
condition if your kernel supports IPX.  This option is presently only
supported under Linux and OpenBSD.
d295 1
a295 1
.B ipx-network \fI<n>
d297 1
a297 1
\fI<n>\fR, a hexadecimal number (without a leading 0x).  There is no
d302 1
a302 1
.B ipx-node \fI<n>\fB:\fI<m>
d304 2
a305 2
other with a colon character. The first number \fI<n>\fR is the local
node number. The second number \fI<m>\fR is the peer's node number. Each
d315 1
a315 1
.B ipx-routing \fI<n>
d341 1
a341 1
.B ipxcp-max-configure \fI<n>
d343 1
a343 1
system will send to \fI<n>\fR. The default is 10.
d345 1
a345 1
.B ipxcp-max-failure \fI<n>
d349 1
a349 1
.B ipxcp-max-terminate \fI<n>
d354 1
a354 1
.B kdebug \fI<n>
d356 1
a356 1
\fI<n>\fR is a number which is the sum of the following values: 1 to
d363 2
a364 2
.B lcp-echo-failure \fI<n>
If this option is given, \fIpppd\fR will presume the peer to be dead
d366 1
a366 1
echo-reply.  If this happens, \fIpppd\fR will terminate the
d369 1
a369 1
\fIpppd\fR to terminate after the physical connection has been broken
d373 10
a382 8
.B lcp-echo-interval \fI<n>
If this option is given, \fIpppd\fR will send an LCP echo-request
frame to the peer every \fIn\fR seconds.  Under Linux, the
echo-request is sent when no packets have been received from the peer
for \fIn\fR seconds.  Normally the peer should respond to the
echo-request by sending an echo-reply.  This option can be used with
the \fIlcp-echo-failure\fR option to detect that the peer is no longer
connected.
d384 1
a384 5
.B lcp-max-configure \fI<n>
Set the maximum number of LCP configure-request transmissions to <n>
(default 10).
.TP
.B lcp-max-failure \fI<n>
d386 1
a386 1
to send configure-Rejects instead to <n> (default 10).
d388 7
a394 7
.B lcp-max-terminate \fI<n>
Set the maximum number of LCP terminate-request transmissions to <n>
(default 3).
.TP
.B lcp-restart \fI<n>
Set the LCP restart interval (retransmission timeout) to <n> seconds
(default 3).
d397 3
a399 4
Don't use the modem control lines.  With this option,
.B pppd
will ignore the state of the CD (Carrier Detect) signal from the modem and
will not change the state of the DTR (Data Terminal Ready) signal.
d403 8
a410 1
PAP, and record the user in the system wtmp file.
d414 6
a419 9
option,
.B pppd
will wait for the CD (Carrier Detect) signal from the modem to be asserted
when opening the serial device
(unless a connect script is specified), and it will drop the DTR (Data
Terminal Ready) signal briefly when the connection is terminated and before
executing the connect script.
On Ultrix, this option implies hardware
flow control, as for the \fBcrtscts\fR option.  
d428 23
a450 9
If
.I pppd
is acting as a server for Microsoft Windows clients, this option
allows
.I pppd
to supply one or two DNS (Domain Name Server) addresses to the
clients.  The first instance of this option specifies the primary DNS
address; the second instance (if given) specifies the secondary DNS
address.
d452 2
a453 5
.B name \fI<n>
Set the name of the local system for authentication purposes to <n>.
.TP
.B netmask \fI<n>
Set the interface netmask to \fI<n>\fR, a 32 bit netmask in "decimal dot"
d467 1
a467 1
privileged if the \fBauth\fR option is specified in /etc/ppp/options.
d470 2
a471 3
Disables BSD-Compress compression;
.I pppd
will not request or agree to compress packets using the BSD-Compress scheme.
d476 1
a476 3
requests from
.I pppd
for CCP negotiation.
d480 1
a480 1
neither the \fBcrtscts\fR nor the \fB\nocrtscts\fR option is given,
d485 1
a485 1
Disable the \fBdefaultroute\fR option.  The system administrator who
d512 1
a512 2
required if the peer is buggy and gets confused by requests from
.I pppd
d533 1
a533 1
Disable the \fBproxyarp\fR option.  The system administrator who
d548 3
a550 3
Indicates that all secrets in the /etc/ppp/pap-secrets file which
are used for checking the identity of the peer are encrypted, and thus
pppd should not accept a password which (before encryption) is
d553 1
a553 1
.B pap-max-authreq \fI<n>
d555 1
a555 5
<n> (default 10).
.TP
.B pap-restart \fI<n>
Set the PAP restart interval (retransmission timeout) to <n> seconds
(default 3).
d557 24
a580 5
.B pap-timeout \fI<n>
Set the maximum time that
.I pppd
will wait for the peer to authenticate itself with PAP to
<n> seconds (0 means no limit).
d595 2
a596 1
system.
d598 1
a598 1
.B remotename \fI<n>
d600 1
a600 1
to <n>.
d612 1
a612 1
Handshake Authentication Protocol] authentication
d619 3
a621 5
With this option,
.I pppd
will not transmit LCP packets to initiate a connection until a valid
LCP packet is received from the peer (as for the `passive' option with
ancient versions of \fIpppd\fR).
d624 7
a630 8
Enforce the use of the hostname as the name of the local system for
authentication purposes (overrides the
.B name
option).
.TP
.B user \fI<u>
Set the user name to use for authenticating this machine with the peer
using PAP to <u>.
d640 1
a640 1
completed.  This option is privileged if the \fBnoauth\fR option is
d645 1
a645 2
the serial port.  This option is only implemented on Linux systems
at present.
d647 1
a647 2
Options can be taken from files as well as the command line.  
.I pppd
d649 2
a650 2
/etc/ppp/options.\fBttyname\fR (in that order) before processing the
option on the command line.  (In fact, the command-line options are
d660 1
a660 1
line. There is no restriction on using the \fBfile\fR or \fBcall\fR
d662 10
a671 9
.SH PRIVILEGED OPTIONS
As indicated above, some security-sensitive options are privileged,
which means that they may not be used by an ordinary non-privileged
user running a setuid-root pppd, either on the command line, in the
user's ~/.ppprc file, or in an options file read using the \fBfile\fR
option.  Privileged options may be used in /etc/ppp/options file or in
an options file read using the \fBcall\fR option.  If pppd is being
run by the root user, privileged options can be used without
restriction.
d673 1
a673 1
The normal way that pppd should be set up is to have the \fBauth\fR
d678 2
a679 2
under /etc/ppp/peers containing the \fBnoauth\fR option, the name of
the serial port to use, and the \fBconnect\fR option (if required),
d683 9
d693 33
a725 19
.I pppd
provides system administrators with sufficient access control that PPP
access to a server machine can be provided to legitimate users without
fear of compromising the security of the server or the network it's
on.  In part this is provided by the /etc/ppp/options file, where the
administrator can place options to require authentication whenever
.I pppd
is run, and in part by the PAP and CHAP secrets files, where the
administrator can restrict the set of IP addresses which individual
users may use.
.LP
The default behaviour of
.I pppd
is to agree to authenticate if requested, and to not
require authentication from the peer.  However, 
.I pppd
will not agree to
authenticate itself with a particular protocol if it has no secrets
which could be used to do so.
d727 1
a727 1
Authentication is based on secrets, which are selected from secrets
d729 26
a754 19
Both secrets files have the same format, and both can store secrets
for several combinations of server (authenticating peer) and client
(peer being authenticated).  Note that
.I pppd
can be both a server
and client, and that different protocols can be used in the two
directions if desired.
.LP
A secrets file is parsed into words as for a options file.  A secret
is specified by a line containing at least 3 words, in the order
client name, server name, secret.  Any following words on the same
line are taken to be a list of acceptable IP addresses for that
client.  If there are only 3 words on the line, it is assumed that any
IP address is OK; to disallow all IP addresses, use "-".  A word
starting with "!" indicates that the specified address is \fInot\fR
acceptable.  An address may be followed by "/" and a number \fIn\fR,
to indicate a whole subnet, i.e. all addresses which have the same
value in the most significant \fIn\fR bits.  Note that case is
significant in the client and server names and in the secret.
d758 2
a759 2
server name matches any name.  When selecting a secret, \fIpppd\fR takes the
best match, i.e. the match with the fewest wildcards.
d763 40
a802 66
others.  Which secret to use is chosen based on the names of the host
(the `local name') and its peer (the `remote name').  The local name
is set as follows:
.TP 3
if the \fBusehostname\fR option is given,
then the local name is the hostname of this machine
(with the domain appended, if given)
.TP 3
else if the \fBname\fR option is given,
then use the argument of the first \fBname\fR option seen
.TP 3
else if the local IP address is specified with a hostname,
then use that name
.TP 3
else use the hostname of this machine (with the domain appended, if given)
.LP
When authenticating ourselves using PAP, there is also a `username'
which is the local name by default, but can be set with the \fBuser\fR
option or the \fB+ua\fR option.
.LP
The remote name is set as follows:
.TP 3
if the \fBremotename\fR option is given,
then use the argument of the last \fBremotename\fR option seen
.TP 3
else if the remote IP address is specified with a hostname,
then use that host name
.TP 3
else the remote name is the null string "".
.LP
Secrets are selected from the PAP secrets file as follows:
.TP 2
*
For authenticating the peer, look for a secret with client ==
username specified in the PAP authenticate-request, and server ==
local name.
.TP 2
*
For authenticating ourselves to the peer, look for a secret with
client == our username, server == remote name.
.LP
When authenticating the peer with PAP, a secret of "" matches any
password supplied by the peer.  If the password doesn't match the
secret, the password is encrypted using crypt() and checked against
the secret again; thus secrets for authenticating the peer can be
stored in encrypted form.  If the \fBpapcrypt\fR option is given, the
first (unencrypted) comparison is omitted, for better security.
.LP
If the \fBlogin\fR option was specified, the
username and password are also checked against the system password
database.  Thus, the system administrator can set up the pap-secrets
file to allow PPP access only to certain users, and to restrict the
set of IP addresses that each user can use.  Typically, when using the
\fBlogin\fR option, the secret in /etc/ppp/pap-secrets would be "", to
avoid the need to have the same secret in two places.
.LP
Secrets are selected from the CHAP secrets file as follows:
.TP 2
*
For authenticating the peer, look for a secret with client == name
specified in the CHAP-Response message, and server == local name.
.TP 2
*
For authenticating ourselves to the peer, look for a secret with
client == local name, and server == name specified in the
CHAP-Challenge message.
d805 5
a809 4
other Network Control Protocol) can be started.  If authentication
fails, \fIpppd\fR will terminated the link (by closing LCP).  If IPCP
negotiates an unacceptable IP address for the remote host, IPCP will
be closed.  IP packets can only be sent or received when IPCP is open.
d815 5
a819 5
requested, \fIpppd\fR takes that as equivalent to authenticating with
PAP using the empty string for the username and password.  Thus, by
adding a line to the pap-secrets file which specifies the empty string
for the client and password, it is possible to allow restricted access
to hosts which refuse to authenticate themselves.
d822 16
a837 17
When IPCP negotiation is completed successfully,
.I pppd
will inform the kernel of the local and remote IP addresses for the
ppp interface.  This is sufficient to create a
host route to the remote end of the link, which will enable the peers
to exchange IP packets.  Communication with other machines generally
requires further modification to routing tables and/or ARP (Address
Resolution Protocol) tables.  In some cases this will be done
automatically through the actions of the \fIrouted\fR or \fIgated\fR
daemons, but in most cases some further intervention is required.
.LP
Sometimes it is desirable
to add a default route through the remote host, as in the case of a
machine whose only connection to the Internet is through the ppp
interface.  The \fBdefaultroute\fR option causes \fIpppd\fR to create such a
default route when IPCP comes up, and delete it when the link is
terminated.
d841 4
a844 4
communicate with the remote host.  The \fBproxyarp\fR option causes \fIpppd\fR
to look for a network interface on the same subnet as the remote host
(an interface supporting broadcast and ARP, which is up and not a
point-to-point or loopback interface).  If found, \fIpppd\fR creates a
d847 9
d858 6
a863 2
In the simplest case, you can connect the serial ports of two machines
and issue a command like
d865 1
a865 1
pppd /dev/ttya 9600 passive
d867 2
a868 4
to each machine, assuming there is no \fIgetty\fR running on the
serial ports.  If one machine has a \fIgetty\fR running, you can use
\fIkermit\fR or \fItip\fR on the other machine to log in to the first
machine and issue a command like
d870 5
a874 1
pppd passive
d876 4
a879 2
Then exit from the communications program (making sure the connection
isn't dropped), and issue a command like
d881 25
a905 1
pppd /dev/ttya 9600
d907 18
a924 3
The process of logging in to the other machine and starting \fIpppd\fR
can be automated by using the \fBconnect\fR option to run \fIchat\fR,
for example:
d926 1
a926 2
pppd /dev/ttya 38400 connect 'chat "" "" "login:" "username"
"Password:" "password" "% " "exec pppd passive"'
d928 4
a931 2
(Note however that running chat like this will leave the password
visible in the parameter list of pppd and chat.)
d936 7
a942 7
XOFF (^S), using \fBasyncmap a0000\fR.  If the path includes a telnet,
you probably should escape ^] as well (\fBasyncmap 200a0000\fR).
If the path includes an rlogin, you will need to use the \fBescape
ff\fR option on the end which is running the rlogin client, since many
rlogin implementations are not
transparent; they will remove the sequence [0xff, 0xff, 0x73, 0x73,
followed by any 8 bytes] from the stream.
d946 1
a946 1
(This can be overriden by recompiling \fIpppd\fR with the macro
d951 1
a951 1
The \fBdebug\fR option causes the contents of all control packets sent
d953 3
a955 2
This can be useful if the PPP negotiation does not succeed.
If debugging is enabled at compile time, the \fBdebug\fR option also
d958 2
a959 4
Debugging can also be enabled or disabled by sending a
SIGUSR1 to the
.I pppd
process.  This signal acts as a toggle.
d963 1
a963 1
Process-ID for \fIpppd\fR process on ppp interface unit \fIn\fR.
d988 1
a988 1
remote-IP-address\fR
d991 1
a991 1
output and error streams redirected to \fB/dev/null\fR.
d993 5
a997 7
This program or script is executed with the same real and effective
user-ID as \fIpppd\fR, that is, at least the effective user-ID and
possibly the real user-ID will be \fBroot\fR.  This is so that it can
be used to manipulate routes, run privileged daemons (e.g.
\fBsendmail\fR), etc.  Be careful that the contents of the
/etc/ppp/ip-up and /etc/ppp/ip-down scripts do not compromise your
system's security.
d999 2
a1000 3
This program or script is executed without an environment, so you
must either specify a PATH or use full pathnames (e.g. \fI/sbin/route\fR,
as opposed to \fIroute\fR).
d1006 2
a1007 3
invoked with the same parameters as the ip-up script, and the same
security considerations apply, since it is executed with the same
effective and real user-IDs as \fIpppd\fR.
d1016 1
a1016 1
local-IPX-router-name remote-IPX-router-name ipparam pppd-pid\fR
d1049 3
a1051 1
Usernames, passwords and IP addresses for PAP authentication.
d1054 4
a1057 1
Names, secrets and IP addresses for CHAP authentication.
d1060 2
a1061 3
System default options for
.I pppd,
read before user default options or command-line options.
d1064 1
a1064 1
User default options, read before command-line options.
d1068 1
a1068 1
command-line options.  In forming the \fIttyname\fR part of this
d1072 7
d1083 1
a1083 1
.I Compressing TCP/IP headers for low-speed serial links.
d1111 1
a1111 3
The following signals have the specified effect when sent to the
.I pppd
process.
d1114 1
a1114 1
These signals cause \fBpppd\fR to terminate the link (by closing LCP),
d1118 6
a1123 5
This signal causes \fBpppd\fR to terminate the link, restore the
serial device settings, and close the serial device.  If the
\fBpersist\fR option has been specified, \fBpppd\fR will try to reopen
the serial device and start another connection.  Otherwise \fBpppd\fR
will exit.
d1126 1
a1126 3
This signal causes
.B pppd
to toggle debugging on or off.
d1129 4
a1132 7
This signal causes
.B pppd
to renegotiate compression.  This can be useful to re-enable
compression after it has been disabled as a result of a fatal
decompression error.  With the BSD Compress scheme, fatal
decompression errors generally indicate a bug in one or other
implementation.
d1135 1
a1135 1
Paul Mackerras (paulus@@cs.anu.edu.au), based on earlier work by
@


1.11
log
@Add missing .TP
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.10 1997/10/25 05:09:58 millert Exp $
d1027 5
@


1.10
log
@Set CLOCAL for chat script by default.  Add new option "modem_chat"
to override the default for people using cua devices who want chat
to detect loss of carrier.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.9 1997/09/02 20:08:37 angelos Exp $
d408 1
@


1.9
log
@Clean up the manual a bit (add a few missing .TP directives).
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.8 1996/12/23 13:22:47 mickey Exp $
d408 5
@


1.8
log
@pppd 2.3b3 import. some minor buf oflow fixes and so.
try it out ppl, but i've got it running talking to cisco w/ all the AFs
enabled in kernel.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.7 1996/10/08 01:21:04 michaels Exp $
d451 1
d457 1
d521 1
@


1.7
log
@Attempt at cleanup.
@
text
@d1 2
a2 2
.\" $OpenBSD: pppd.8,v 1.3 1996/03/25 15:55:54 niklas Exp $
.\" manual page [] for pppd 2.0
d42 2
a43 1
the background.
d51 3
a53 3
Set the async character map to <map>.
This map describes which control characters cannot be successfully
received over the serial line.
d56 2
a57 2
The argument is a 32 bit hex number
with each bit representing a character to escape. 
d64 2
a65 1
\fIall\fR control characters.
d71 7
d79 4
a82 3
Use the executable or shell command specified by \fI<p>\fR to set up the
serial line.  This script would typically use the chat(8) program to
dial the modem and start the remote ppp session.
d87 2
a88 2
\fB\-crtscts\fR option is given, the hardware flow control setting for
the serial port is left unchanged.
d93 2
a94 1
This entry is removed when the PPP connection is broken.
d96 2
a97 2
.B disconnect \fI<p>
Run the executable or shell command specified by \fI<p>\fR after
d100 2
a101 1
control signals were not available.
d113 3
a115 2
.B file \fI<f>
Read options from file <f> (the format is described below).
a134 9
.B netmask \fI<n>
Set the interface netmask to <n>, a 32 bit netmask in "decimal dot"
notation (e.g. 255.255.255.0).  If this option is given, the value
specified is ORed with the default netmask.  The default netmask is
chosen based on the negotiated remote IP address; it is the
appropriate network mask for the class of the remote IP address, ORed
with the netmasks for any non point-to-point network interfaces in the
system which are on the same network.
.TP
a142 7
.TP
.B silent
With this option,
.I pppd
will not transmit LCP packets to initiate a connection until a valid
LCP packet is received from the peer (as for the `passive' option with
ancient versions of \fIpppd\fR).
d150 1
a150 1
.B noipdefault
d157 2
a158 35
negotiation, unless the
.B ipcp-accept-local
and/or
.B ipcp-accept-remote
options are given, respectively.
.TP
.B -ac
Disable Address/Control compression negotiation (use default, i.e.
address/control field compression disabled).
.TP
.B active-filter \fIfilter-expression
Specifies a packet filter to be applied to data packets to determine
which packets are to be regarded as link activity, and therefore reset
the idle timer, or cause the link to be brought up in demand-dialling
mode.  This option is useful in conjunction with the
\fBidle\fR option if there are packets being sent or received
regularly over the link (for example, routing information packets)
which would otherwise prevent the link from ever appearing to be idle.
The \fIfilter-expression\fR syntax is as described for tcpdump(1),
except that qualifiers which are inappropriate for a PPP link, such as
\fBether\fR and \fBarp\fR, are not permitted.  Generally the filter
expression should be enclosed in single-quotes to prevent whitespace
in the expression from being interpreted by the shell.
.TP
.B -all
Don't request or allow negotiation of any options for LCP and IPCP (use
default values).
.TP
.B -am
Disable asyncmap negotiation (use the default asyncmap, i.e. escape
all control characters).
.TP
.B -as \fI<n>
Same as
.B asyncmap \fI<n>
a170 18
.B \-bsdcomp
Disables BSD-Compress compression; \fBpppd\fR will not request or
agree to compress packets using the BSD-Compress scheme.
.TP
.B -ccp
Disable CCP (Compression Control Protocol) negotiation.  This option
should only be required if the peer is buggy and gets confused by
requests from
.I pppd
for CCP negotiation.
.TP
.B +chap
Require the peer to authenticate itself using CHAP [Challenge-Handshake
Authentication Protocol] authentication.
.TP
.B -chap
Don't agree to authenticate using CHAP.
.TP
a183 9
.B -crtscts
Disable hardware flow control (i.e. RTS/CTS) on the serial port.  If
neither the \fBcrtscts\fR nor the \fB\-crtscts\fR option is given,
the hardware flow control setting for the serial port is left
unchanged.
.TP
.B -d
Increase debugging level (same as the \fBdebug\fR option).
.TP
d192 8
a199 4
.B \-defaultroute
Disable the \fBdefaultroute\fR option.  The system administrator who
wishes to prevent users from creating default routes with \fIpppd\fR
can do so by placing this option in the /etc/ppp/options file.
a213 4
.B \-deflate
Disables Deflate compression; \fBpppd\fR will not request or agree to
compress packets using the Deflate scheme.
.TP
a224 17
.B -detach
Don't fork to become a background process (otherwise
.I pppd
will do so if a serial device other than its controlling terminal is
specified).
.TP
.B ms-dns \fI<addr>
If
.I pppd
is acting as a server for Microsoft Windows clients, this option
allows
.I pppd
to supply one or two DNS (Domain Name Server) addresses to the
clients.  The first instance of this option specifies the primary DNS
address; the second instance (if given) specifies the secondary DNS
address.
.TP
d228 5
a232 2
fully qualified domain name is porsche.Quotron.COM, you would use the
domain option to set the domain name to Quotron.COM.
a245 7
.B -ip
Disable IPCP negotiation and IP communication.  This option should
only be required if the peer is buggy and gets confused by requests
from
.I pppd
for IPCP negotiation.
.TP
d279 65
a343 1
.B kdebug \fIn
d345 1
a345 1
\fIn\fR is a number which is the sum of the following values: 1 to
d348 3
a350 1
transmitted packets be printed.
d409 5
a413 2
.B -mn
Disable magic number negotiation.  With this option,
d415 4
a418 5
cannot detect a looped-back line.
.TP
.B -mru
Disable MRU [Maximum Receive Unit] negotiation.  With this option,
\fIpppd\fR will use the default MRU value of 1500 bytes.
d423 52
d482 22
a503 4
.B -p
Same as the
.B passive
option.
d505 4
a508 2
.B +pap
Require the peer to authenticate itself using PAP.
d510 3
a512 2
.B -pap
Don't agree to authenticate using PAP.
d514 5
a538 18
.B pass-filter \fIfilter-expression
Specifies a packet filter to applied to data packets being sent or
received to determine which packets should be allowed to pass.
Packets which are rejected by the filter are silently discarded.  This
option can be used to provide protection against IP address spoofing
and other attacks.
The \fIfilter-expression\fR syntax is as described for tcpdump(1),
except that qualifiers which are inappropriate for a PPP link, such as
\fBether\fR and \fBarp\fR, are not permitted.  Generally the filter
expression should be enclosed in single-quotes to prevent whitespace
in the expression from being interpreted by the shell.  Note that it
is possible to apply different constraints to incoming and outgoing
packets using the \fBinbound\fR and \fBoutbound\fR qualifiers.
.TP
.B -pc
Disable protocol field compression negotiation (use default, i.e.
protocol field compression disabled).
.TP
d543 6
a553 6
.B \-proxyarp
Disable the \fBproxyarp\fR option.  The system administrator who
wishes to prevent users from creating proxy ARP entries with
\fIpppd\fR can do so by placing this option in the /etc/ppp/options
file.
.TP
d558 22
a579 7
.B +ua \fI<p>
Agree to authenticate using PAP [Password Authentication Protocol] if
requested by the peer, and
use the data in file <p> for the user and password to send to the
peer. The file contains the remote user name, followed by a newline,
followed by the remote password, followed by a newline.  This option
is obsolescent.
a590 10
.B -vj
Disable negotiation of Van Jacobson style TCP/IP header compression (use
default, i.e. no compression).
.TP
.B -vjccomp
Disable the connection-ID compression option in Van Jacobson style
TCP/IP header compression.  With this option, \fIpppd\fR will not omit
the connection-ID byte from Van Jacobson compressed TCP/IP headers,
nor ask the peer to do so.
.TP
d596 6
d609 34
a642 6
reads options from the files /etc/ppp/options and ~/.ppprc before
looking at the command line.  An options file is parsed into a series
of words, delimited by whitespace.  Whitespace can be included in a
word by enclosing the word in quotes (").  A backslash (\\) quotes the
following character.  A hash (#) starts a comment, which continues
until the end of the line.
d676 14
a689 8
client name, server name, secret.  Any following words on the same line are
taken to be a list of acceptable IP addresses for that client.  If
there are only 3 words on the line, it is assumed that any IP address
is OK; to disallow all IP addresses, use "-".  If the secret starts
with an `@@', what follows is assumed to be the name of a file from
which to read the secret.  A "*" as the client or server name matches
any name.  When selecting a secret, \fIpppd\fR takes the best match, i.e.
the match with the fewest wildcards.
d865 17
d912 39
@


1.6
log
@Attempt at cleanup.
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.5 1996/06/16 14:35:50 deraadt Exp $
@


1.5
log
@CHAP == Challenge-Handshake Authentication Protocol; netbsd pr#2446; johnam@@beta.datastorm.com
@
text
@d1 1
a1 1
.\" $OpenBSD: pppd.8,v 1.3 1996/03/25 15:55:54 niklas Exp $
d46 1
a46 1
4.4BSD and NetBSD, any speed can be specified.  Other systems
@


1.4
log
@sync to netbsd 960418
@
text
@d219 2
a220 2
Require the peer to authenticate itself using CHAP [Cryptographic
Handshake Authentication Protocol] authentication.
@


1.3
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
.\" $OpenBSD$
d210 7
@


1.2
log
@From NetBSD:
Be explicit about the fact that ip-up and ip-down are executed with
a null environment.  Closes PR #1866 by John M Vinopal.
@
text
@d1 1
a2 1
.\" $Id: pppd.8,v 1.1.1.1 1995/10/18 08:47:59 deraadt Exp $
d170 14
d208 2
a209 2
Disables compression; \fBpppd\fR will not request or agree to compress
packets using the BSD-Compress scheme.
d242 5
a246 6
If this
option is given, \fIpppd\fR will log the contents of all control
packets sent or received in a readable form.  The packets are logged
through syslog with facility \fIdaemon\fR and level \fIdebug\fR.  This
information can be directed to a file by setting up /etc/syslog.conf
appropriately (see syslog.conf(5)).
d253 28
d287 11
d304 12
d317 5
a321 3
Disable IP address negotiation.  If this option is used, the remote IP
address must be specified with an option on the command line or in an
options file.
d470 14
d816 4
a819 1
command-line options.
d825 1
a825 1
1990 February.
d830 1
a830 1
1992 April.
d835 1
a835 1
1992 May.
d840 1
a840 1
1992 October.
d842 1
a842 1
.B RFC1548
d845 1
a845 1
1993 December.
d847 1
a847 1
.B RFC1549
d849 2
a850 2
.I PPP in HDLC Framing.
1993 December
d877 1
d882 2
a883 2
Brad Parker,
Paul Mackerras (paulus@@cs.anu.edu.au).
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
.\" $Id: pppd.8,v 1.9 1995/08/17 12:04:01 paulus Exp $
d707 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
