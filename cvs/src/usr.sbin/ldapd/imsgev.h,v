head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.18
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.14
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.16
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.8
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.12
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.10
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.6
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.6
	OPENBSD_5_0:1.1.0.4
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.2
	OPENBSD_4_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2017.03.01.00.53.39;	author gsoares;	state Exp;
branches;
next	1.2;
commitid	kcUiJaJIfdfcQVcl;

1.2
date	2012.06.16.00.08.32;	author jmatthew;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.01.17.34.15;	author martinh;	state Exp;
branches;
next	;


desc
@@


1.3
log
@add missing rcsid
@
text
@/*	$OpenBSD$ */

/*
 * Copyright (c) 2009 Eric Faurot <eric@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef __IMSGEV_H__
#define __IMSGEV_H__

#include <event.h>
#include <imsg.h>

#define IMSG_LEN(m)	((m)->hdr.len - IMSG_HEADER_SIZE)

struct imsgev {
	struct imsgbuf	 ibuf;
	void		(*handler)(int, short, void *);
	struct event	 ev;
	void		*data;
	short		 events;
	int		 terminate;
	void		(*callback)(struct imsgev *, int, struct imsg *);
	void		(*needfd)(struct imsgev *);
};

#define IMSGEV_IMSG	0
#define IMSGEV_DONE	1
#define IMSGEV_EREAD	2
#define IMSGEV_EWRITE	3
#define IMSGEV_EIMSG	4

void imsgev_init(struct imsgev *, int, void *, void (*)(struct imsgev *,
    int, struct imsg *), void (*)(struct imsgev *));
int  imsgev_compose(struct imsgev *, u_int16_t, u_int32_t, u_int32_t, int,
    void *, u_int16_t);
void imsgev_close(struct imsgev *);
void imsgev_clear(struct imsgev *);

#endif /* __IMSGEV_H__ */
@


1.2
log
@Protect against fd exhaustion when reopening database files.  Only accept
client or control connections when there are at least 8 fds available,
and close a connection before calling imsg_read if it would be unable to
accept an fd from the parent process.

ok gilles@@
@
text
@d1 2
@


1.1
log
@Move generic imsg/libevent glue to a separate file.

with eric@@ at c2k10
@
text
@d33 1
d43 1
a43 1
    int, struct imsg *));
@

