head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.30
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.26
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.22
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.24
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.16
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.20
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.18
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.14
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.12
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.10
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	OPENBSD_5_0:1.6.0.6
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.4
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.2
	OPENBSD_4_8_BASE:1.6;
locks; strict;
comment	@ * @;


1.6
date	2010.07.02.01.43.00;	author martinh;	state Exp;
branches;
next	1.5;

1.5
date	2010.06.23.13.10.14;	author martinh;	state Exp;
branches;
next	1.4;

1.4
date	2010.06.13.06.55.33;	author martinh;	state Exp;
branches;
next	1.3;

1.3
date	2010.06.13.06.46.03;	author martinh;	state Exp;
branches;
next	1.2;

1.2
date	2010.06.11.05.29.22;	author martinh;	state Exp;
branches;
next	1.1;

1.1
date	2010.05.31.17.36.31;	author martinh;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add a BT_CURSOR_EXACT operation to btree_cursor_get. It behaves like
BT_CURSOR, but fails if the key is not found.
@
text
@/*	$OpenBSD: btree.h,v 1.5 2010/06/23 13:10:14 martinh Exp $ */

/*
 * Copyright (c) 2009, 2010 Martin Hedenfalk <martin@@bzero.se>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _btree_h_
#define _btree_h_

#include <openssl/sha.h>

struct mpage;
struct cursor;
struct btree_txn;

struct btval {
	void		*data;
	size_t		 size;
	int		 free_data;		/* true if data malloc'd */
	struct mpage	*mp;			/* ref'd memory page */
};

typedef int		 (*bt_cmp_func)(const struct btval *a,
					const struct btval *b);
typedef void		 (*bt_prefix_func)(const struct btval *a,
					   const struct btval *b,
					   struct btval *sep);

#define BT_NOOVERWRITE	 1

enum cursor_op {				/* cursor operations */
	BT_CURSOR,				/* position at given key */
	BT_CURSOR_EXACT,			/* position at key, or fail */
	BT_FIRST,
	BT_NEXT,
	BT_LAST,				/* not implemented */
	BT_PREV					/* not implemented */
};

/* return codes */
#define BT_FAIL		-1
#define BT_SUCCESS	 0

/* btree flags */
#define BT_NOSYNC		 0x02		/* don't fsync after commit */
#define BT_RDONLY		 0x04		/* read only */
#define BT_REVERSEKEY		 0x08		/* use reverse string keys */

struct btree_stat {
	unsigned long long int	 hits;		/* cache hits */
	unsigned long long int	 reads;		/* page reads */
	unsigned int		 max_cache;	/* max cached pages */
	unsigned int		 cache_size;	/* current cache size */
	unsigned int		 branch_pages;
	unsigned int		 leaf_pages;
	unsigned int		 overflow_pages;
	unsigned int		 revisions;
	unsigned int		 depth;
	unsigned long long int	 entries;
	unsigned int		 psize;
	time_t			 created_at;
};

struct btree		*btree_open_fd(int fd, unsigned int flags);
struct btree		*btree_open(const char *path, unsigned int flags,
			    mode_t mode);
void			 btree_close(struct btree *bt);
const struct btree_stat	*btree_stat(struct btree *bt);

struct btree_txn	*btree_txn_begin(struct btree *bt, int rdonly);
int			 btree_txn_commit(struct btree_txn *txn);
void			 btree_txn_abort(struct btree_txn *txn);

int			 btree_txn_get(struct btree *bt, struct btree_txn *txn,
			    struct btval *key, struct btval *data);
int			 btree_txn_put(struct btree *bt, struct btree_txn *txn,
			    struct btval *key, struct btval *data,
			    unsigned int flags);
int			 btree_txn_del(struct btree *bt, struct btree_txn *txn,
			    struct btval *key, struct btval *data);

#define btree_get(bt, key, data)	 \
			 btree_txn_get(bt, NULL, key, data)
#define btree_put(bt, key, data, flags)	 \
			 btree_txn_put(bt, NULL, key, data, flags)
#define btree_del(bt, key, data)	 \
			 btree_txn_del(bt, NULL, key, data)

void			 btree_set_cache_size(struct btree *bt,
			    unsigned int cache_size);
unsigned int		 btree_get_flags(struct btree *bt);
const char		*btree_get_path(struct btree *bt);

#define btree_cursor_open(bt)	 \
			 btree_txn_cursor_open(bt, NULL)
struct cursor		*btree_txn_cursor_open(struct btree *bt,
			    struct btree_txn *txn);
void			 btree_cursor_close(struct cursor *cursor);
int			 btree_cursor_get(struct cursor *cursor,
			    struct btval *key, struct btval *data,
			    enum cursor_op op);

int			 btree_sync(struct btree *bt);
int			 btree_compact(struct btree *bt);
int			 btree_revert(struct btree *bt);

int			 btree_cmp(struct btree *bt, const struct btval *a,
			     const struct btval *b);
void			 btval_reset(struct btval *btv);

#endif

@


1.5
log
@Set errno to appropriate values when returning failure in btree. Make btree
functions only return success or failure (-1 or NULL). Update callers to
check errno.
@
text
@d1 1
a1 1
/*	$OpenBSD: btree.h,v 1.4 2010/06/13 06:55:33 martinh Exp $ */
d45 1
@


1.4
log
@Don't expose typedefs of pgno_t and indx_t in the public header file, move
them to btree.c. Also don't use exact-width integer types in public btree api.
@
text
@d1 1
a1 1
/*	$OpenBSD: btree.h,v 1.3 2010/06/13 06:46:03 martinh Exp $ */
a53 3
#define BT_NOTFOUND	 1
#define BT_EXISTS	 2
#define BT_DEAD		 3			/* file has been replaced */
@


1.3
log
@Fix value clash in btree flags BT_FIXPADDING and BT_NOSYNC.
@
text
@d1 1
a1 1
/*	$OpenBSD: btree.h,v 1.2 2010/06/11 05:29:22 martinh Exp $ */
a22 1
#include <stdint.h>
a34 2
typedef uint32_t	 pgno_t;
typedef uint16_t	 indx_t;
d78 2
a79 2
struct btree		*btree_open_fd(int fd, uint32_t flags);
struct btree		*btree_open(const char *path, uint32_t flags,
@


1.2
log
@Append a "tombstone" meta page after a database has been compacted. This
allows other processes to pick up the change and re-open the file.
@
text
@d1 1
a1 1
/*	$OpenBSD: btree.h,v 1.1 2010/05/31 17:36:31 martinh Exp $ */
d62 3
a64 3
#define BT_NOSYNC		 0x01		/* don't fsync after commit */
#define BT_RDONLY		 0x08		/* read only */
#define BT_REVERSEKEY		 0x10		/* use reverse string keys */
@


1.1
log
@Initial import of ldapd, a small LDAP daemon. Work in progress.

ok deraadt@@ jacekm@@ gilles@@ back@@ henning@@ blambert@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d59 1
@

