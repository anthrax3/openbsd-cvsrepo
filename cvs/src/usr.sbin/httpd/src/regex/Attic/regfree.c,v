head	1.2;
access;
symbols
	OPENBSD_3_9:1.1.1.2.0.32
	OPENBSD_3_9_BASE:1.1.1.2
	OPENBSD_3_8:1.1.1.2.0.30
	OPENBSD_3_8_BASE:1.1.1.2
	OPENBSD_3_7:1.1.1.2.0.28
	OPENBSD_3_7_BASE:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.26
	OPENBSD_3_6_BASE:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.24
	OPENBSD_3_5_BASE:1.1.1.2
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.1.1.2.0.22
	OPENBSD_3_4_BASE:1.1.1.2
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.1.1.2.0.20
	OPENBSD_3_3_BASE:1.1.1.2
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.18
	OPENBSD_3_2_BASE:1.1.1.2
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.1.1.2.0.16
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.14
	OPENBSD_3_0_BASE:1.1.1.2
	OPENBSD_2_9_BASE:1.1.1.2
	OPENBSD_2_9:1.1.1.2.0.12
	OPENBSD_2_8:1.1.1.2.0.10
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.8
	OPENBSD_2_7_BASE:1.1.1.2
	OPENBSD_2_6:1.1.1.2.0.6
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2006.04.04.11.39.28;	author henning;	state dead;
branches;
next	1.1;

1.1
date	98.03.25.07.08.51;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.51;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.50;	author beck;	state Exp;
branches;
next	;


desc
@@


1.2
log
@nuke bundled regex lib, we have and always used the OpenBSD one of course
From: Daniel Ouellet <daniel@@presscom.net>
@
text
@#include <sys/types.h>
#include <stdio.h>
#include <stdlib.h>
#include <regex.h>

#include "utils.h"
#include "regex2.h"

/*
 - regfree - free everything
 = extern void regfree(regex_t *);
 */
void
regfree(preg)
regex_t *preg;
{
	register struct re_guts *g;

	if (preg->re_magic != MAGIC1)	/* oops */
		return;			/* nice to complain, but hard */

	g = preg->re_g;
	if (g == NULL || g->magic != MAGIC2)	/* oops again */
		return;
	preg->re_magic = 0;		/* mark it invalid */
	g->magic = 0;			/* mark it invalid */

	if (g->strip != NULL)
		free((char *)g->strip);
	if (g->sets != NULL)
		free((char *)g->sets);
	if (g->setbits != NULL)
		free((char *)g->setbits);
	if (g->must != NULL)
		free(g->must);
	free((char *)g);
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d4 1
a5 1
#include "hsregex.h"
d11 1
a11 1
 = API_EXPORT(void) regfree(regex_t *);
d13 1
a13 2
ap_private_extern
API_EXPORT(void)
@

