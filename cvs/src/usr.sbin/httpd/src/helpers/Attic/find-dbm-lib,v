head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.52
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.48
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.46
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.44
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.42
	OPENBSD_5_0:1.6.0.40
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.38
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.36
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.32
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.34
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.30
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.28
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.26
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.24
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.22
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.20
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.18
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.16
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.14
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.12
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.10
	OPENBSD_3_5_BASE:1.6
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.6.0.8
	OPENBSD_3_4_BASE:1.6
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.22.14.47.26;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2002.03.29.02.08.05;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.49;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.39;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.28.18.39.59;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.26;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.19.38;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.19.38;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.07.19.21.28.36;	author henning;	state Exp;
branches;
next	;


desc
@@


1.7
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@# Our config tool sucks... if this script decides to modify the
# LIBS variable it won't be used by any of the other TestCompiles.
# So unless we protect ourselves with the found_dbm variable
# we'd end up having to do the work twice... and we'd end up putting
# two -ldbm -ldbm into the LIBS variable.

if [ "x$found_dbm" = "x" ]; then
    if sh helpers/TestCompile func dbm_open; then
	found_dbm=1
    else
	found_dbm=0
	case "$PLAT" in
  	    *-linux*)
  		# many systems don't have -ldbm
  		DBM_LIB=""
		if ./helpers/TestCompile lib ndbm dbm_open; then
  		    DBM_LIB="-lndbm"
		    if ./helpers/TestCompile lib db1 dbm_open; then
			# Red Hat needs this; ndbm.h lives in db1
			CFLAGS="$CFLAGS -I/usr/include/db1"
		    fi
		elif ./helpers/TestCompile lib db1 dbm_open; then
		    # For Red Hat 7, if not handled by the ndbm case above
  		    DBM_LIB="-ldb1"
  		    CFLAGS="$CFLAGS -I/usr/include/db1"
                elif ./helpers/TestCompile lib gdbm dbm_open; then
                    DBM_LIB="-lgdbm"
                    CFLAGS="$CFLAGS -I/usr/include/gdbm"
		elif ./helpers/TestCompile lib dbm dbm_open; then
		    DBM_LIB="-ldbm"
		fi
  		if [ "x$DBM_LIB" != "x" ]; then
  		    LIBS="$LIBS $DBM_LIB"
  		    found_dbm=1
  		fi
  		;;
        *-cygwin*)
        # we use the shared DLL version of gdbm if available
        DBM_LIB=""
        if ./helpers/TestCompile lib gdbm dbm_open; then
            DBM_LIB="-lgdbm"
            LIBS="$LIBS $DBM_LIB"
            found_dbm=1
        fi
        ;;
	    *)
		if [ "x$DBM_LIB" != "x" ]; then
		    oldLIBS="$LIBS"
		    LIBS="$LIBS $DBM_LIB"
		    if sh helpers/TestCompile func dbm_open; then
			found_dbm=1
		    else
			found_dbm=0
			LIBS="$oldLIBS"
		    fi
		else
		    for dblib in dbm ndbm db
		    do
			DBM_LIB=""
			if sh helpers/TestCompile lib $dblib dbm_open; then
			    DBM_LIB="-l${dblib}"
			    LIBS="$LIBS $DBM_LIB"
			    found_dbm=1
			    break
			fi
		    done
		fi
		;;
	esac
	if [ "x$found_dbm" = "x1" ]; then
	    echo " + using $DBM_LIB for DBM support"
	fi
    fi
fi
@


1.6
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d13 3
a15 3
	    *-linux*)
		# many systems don't have -ldbm
		DBM_LIB=""
d17 1
a17 1
		    DBM_LIB="-lndbm"
d24 2
a25 2
		    DBM_LIB="-ldb1"
		    CFLAGS="$CFLAGS -I/usr/include/db1"
d32 5
a36 5
		if [ "x$DBM_LIB" != "x" ]; then
		    LIBS="$LIBS $DBM_LIB"
		    found_dbm=1
		fi
		;;
@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d16 1
a16 3
		if sh helpers/TestCompile lib dbm dbm_open; then
		    DBM_LIB="-ldbm"
		elif sh helpers/TestCompile lib ndbm dbm_open; then
d18 4
d23 1
a23 1
		    # For Red Hat 7
d26 5
d37 9
@


1.3
log
@Change Apache config tools to not assume certain files are executable,
and thus allow us to build from cvs trees checked out read only. - basically
ensure we call shell scripts by using ${SHELL} instead of ./.
from leonard@@csee.uq.edu.au

Building diffs of this (And some other stuff in Makefile.tmpl) to send
to slemko to see if apache will buy it back.
@
text
@d20 4
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d8 1
a8 1
    if ./helpers/TestCompile func dbm_open; then
d16 1
a16 1
		if ./helpers/TestCompile lib dbm dbm_open; then
d18 1
a18 1
		elif ./helpers/TestCompile lib ndbm dbm_open; then
d30 1
a30 1
		    if ./helpers/TestCompile func dbm_open; then
d40 1
a40 1
			if ./helpers/TestCompile lib $dblib dbm_open; then
@


1.1
log
@Initial revision
@
text
@d21 1
a21 1
		if [ "X$DBM_LIB" != "X" ]; then
d27 1
a27 1
		if [ "X$DBM_LIB" != "X" ]; then
d36 11
d50 1
a50 1
	if [ "X$found_dbm" = "X1" ]; then
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@


1.1.1.2
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d16 3
a18 1
		if ./helpers/TestCompile lib ndbm dbm_open; then
a19 13
		    if ./helpers/TestCompile lib db1 dbm_open; then
			# Red Hat needs this; ndbm.h lives in db1
			CFLAGS="$CFLAGS -I/usr/include/db1"
		    fi
		elif ./helpers/TestCompile lib db1 dbm_open; then
		    # For Red Hat 7, if not handled by the ndbm case above
		    DBM_LIB="-ldb1"
		    CFLAGS="$CFLAGS -I/usr/include/db1"
                elif ./helpers/TestCompile lib gdbm dbm_open; then
                    DBM_LIB="-lgdbm"
                    CFLAGS="$CFLAGS -I/usr/include/gdbm"
		elif ./helpers/TestCompile lib dbm dbm_open; then
		    DBM_LIB="-ldbm"
d21 1
a21 1
		if [ "x$DBM_LIB" != "x" ]; then
a25 9
        *-cygwin*)
        # we use the shared DLL version of gdbm if available
        DBM_LIB=""
        if ./helpers/TestCompile lib gdbm dbm_open; then
            DBM_LIB="-lgdbm"
            LIBS="$LIBS $DBM_LIB"
            found_dbm=1
        fi
        ;;
d27 1
a27 1
		if [ "x$DBM_LIB" != "x" ]; then
a35 11
		else
		    for dblib in dbm ndbm db
		    do
			DBM_LIB=""
			if ./helpers/TestCompile lib $dblib dbm_open; then
			    DBM_LIB="-l${dblib}"
			    LIBS="$LIBS $DBM_LIB"
			    found_dbm=1
			    break
			fi
		    done
d39 1
a39 1
	if [ "x$found_dbm" = "x1" ]; then
@

