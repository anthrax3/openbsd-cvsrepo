head	1.13;
access;
symbols
	OPENBSD_5_5:1.12.0.34
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.30
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.28
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.26
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.24
	OPENBSD_5_0:1.12.0.22
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.20
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.18
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.14
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.16
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.12
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.10
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.8
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.6
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.4
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.2
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.5
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.5
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.4
	apache_1_3_27:1.1.1.4
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.9.0.6
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.4
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.13
date	2014.04.22.14.47.26;	author henning;	state dead;
branches;
next	1.12;

1.12
date	2006.04.04.11.39.28;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2003.08.21.13.11.33;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2002.07.19.21.31.15;	author henning;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.22.17.53;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.25.18.29.36;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	99.09.29.06.29.20;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	99.03.01.04.28.28;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	99.03.01.01.05.38;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	98.10.01.17.47.57;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	98.10.01.17.36.22;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	98.04.08.04.28.02;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.43;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.43;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.36;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.28.28;	author henning;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.10.07.19.48.11;	author henning;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.08.21.12.53.37;	author henning;	state Exp;
branches;
next	;


desc
@@


1.13
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@
CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
LIBS=$(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)

OBJS= \
  modules.o \
  $(MODULES) \
  main/libmain.a \
  $(OSDIR)/libos.a \
  ap/libap.a

TYPE=
ALGO=
CRT=
KEY=
VIEW=

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $<

# Used to generate import library for OS/2
.SUFFIXES: .def
.def.a:
	emximp -o $@@ $<

all: @@@@Configuration@@@@ $(TARGET)

@@@@Configuration@@@@: Configuration.tmpl
	@@echo "++ File '@@@@Configuration@@@@' older than 'Configuration.tmpl',"
	@@echo "++ or still doesn't exist. Please consider copying 'Configuration.tmpl'"
	@@echo "++ to '@@@@Configuration@@@@', editing and rerunning 'Configure'."
	@@echo "++ If not, you will at least have to touch '@@@@Configuration@@@@'."
	@@false

$(TARGET): $(EXTRA_DEPS) $(SUBTARGET)

target_static: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(CC) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LIBS)

target_compile_only: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c

target_shared: $(SHCORE_IMPLIB) $(SHARED_CORE_EP) lib$(TARGET).$(SHLIB_SUFFIX_NAME)
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c \
	      ap/libap.a $(LIBS) $(SHCORE_IMPLIB)

lib$(TARGET).ep: lib$(TARGET).$(SHLIB_SUFFIX_NAME)
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o lib$(TARGET).ep -DSHARED_CORE_TIESTATIC main/http_main.c \
		  -L. -l$(TARGET) $(LIBS)

lib$(TARGET).$(SHLIB_SUFFIX_NAME): subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o lib$(TARGET).$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LD_SHCORE_DEF) $(LD_SHCORE_LIBS)
	@@if [ ".$(SHLIB_SUFFIX_LIST)" != . ]; then \
		rm -f lib$(TARGET).$(SHLIB_SUFFIX_NAME).*; \
		for suffix in $(SHLIB_SUFFIX_LIST) ""; do \
			[ ".$$suffix" = . ] && continue; \
		    echo "ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix"; \
		    ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix; \
		done; \
	fi

certificate:   
	@@./support/mkcert.sh \
		"$(MAKE)" "$(MFLAGS) $(MFLAGS_STATIC)" \
		"$(SSL_PROGRAM)" ./support \
		"$(TYPE)" "$(ALGO)" "$(CRT)" "$(KEY)" "$(VIEW)"
	@@cd ../conf/ssl.crt; $(MAKE) $(MFLAGS_STATIC) SSL_PROGRAM=$(SSL_PROGRAM) >/dev/null 2>&1

subdirs:
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		case ".$(OS)" in \
		  .OS390 | .TPF) ( cd $$i && $(MAKE) SDP='$(SDP)' OPTIM='$(OPTIM)') || exit 1;; \
		              *) ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)') || exit 1;; \
		esac; \
		echo "<=== $(SDP)$$i"; \
	done

support: support-dir

support-dir:
	@@echo "===> $(SDP)support"; \
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)' || exit 1; \
	echo "<=== $(SDP)support"

clean:
	-rm -f $(TARGET) lib$(TARGET).* *.o
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' OPTIM='$(OPTIM)' $@@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done

distclean:
	-rm -f $(TARGET) lib$(TARGET).* *.o
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done
	-rm -f include/ap_config_auto.h
	-rm -f modules.c
	-rm -f modules/Makefile
	-rm -f regex/Makefile
	-rm -f lib/Makefile
	-rm -f Makefile.config
	-rm -f Makefile

install:
	@@echo "++ Sorry, no installation procedure available at this level."
	@@echo "++ Go to the parent directory for an 'install' target."

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new
	for i in $(SUBDIRS); do \
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)' depend ) || exit 1; \
	done

#Dependencies

$(OBJS): Makefile subdirs

# DO NOT REMOVE
buildmark.o: buildmark.c include/ap_config.h include/ap_mmn.h \
 include/ap_config_auto.h $(OSDIR)/os.h include/ap_ctype.h \
 include/httpd.h include/ap_alloc.h include/buff.h \
 include/ap.h include/util_uri.h
modules.o: modules.c include/httpd.h include/ap_config.h \
 include/ap_mmn.h include/ap_config_auto.h $(OSDIR)/os.h \
 include/ap_ctype.h include/ap_alloc.h include/buff.h \
 include/ap.h include/util_uri.h include/http_config.h
@


1.12
log
@nuke bundled regex lib, we have and always used the OpenBSD one of course
From: Daniel Ouellet <daniel@@presscom.net>
@
text
@@


1.11
log
@merge
@
text
@d142 1
a142 1
 include/hsregex.h include/httpd.h include/ap_alloc.h include/buff.h \
d146 1
a146 1
 include/ap_ctype.h include/hsregex.h include/ap_alloc.h include/buff.h \
@


1.10
log
@merge
@
text
@d141 1
a141 1
 include/ap_config_auto.h os/unix/os.h include/ap_ctype.h \
d145 1
a145 1
 include/ap_mmn.h include/ap_config_auto.h os/unix/os.h \
@


1.9
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d80 2
a81 2
		  .OS390 | .TPF) ( cd $$i && $(MAKE) SDP='$(SDP)' ) || exit 1;; \
		              *) ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)') || exit 1;; \
d90 1
a90 1
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' || exit 1; \
d97 1
a97 1
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@@ ) || exit 1; \
d132 1
a132 1
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' depend ) || exit 1; \
@


1.8
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d142 1
a142 1
 include/hsregex.h include/httpd.h include/alloc.h include/buff.h \
d146 1
a146 1
 include/ap_ctype.h include/hsregex.h include/alloc.h include/buff.h \
@


1.7
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d79 4
a82 1
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)') || exit 1; \
d90 1
a90 1
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)'; \
@


1.6
log
@mod_ssl-2.2.3-1.3.4 (will require libssl-1.1 for https to work, but
mostly harmless otherwise).
@
text
@d14 2
a15 1
TYPE=test
d18 1
d23 5
d42 1
a42 1
	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(LIBS)
d47 1
a47 1
target_shared: lib$(TARGET).ep
d49 2
a50 1
	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c
d59 1
a59 1
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o lib$(TARGET).$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB)
d71 1
a71 1
		"$(MAKE)" "$(MFLAGS_STATIC)" \
d73 2
a74 2
		"$(TYPE)" "$(CRT)" "$(KEY)"
	@@cd ../conf/ssl.crt; $(MAKE) $(MFLAGS_STATIC) SSLEAY=$(SSL_PROGRAM) >/dev/null 2>&1
d109 1
@


1.5
log
@Apache 1.3.4 merge
@
text
@d14 4
d60 7
@


1.4
log
@Fix template (rong file before) and fix clean target for new dirs.
@
text
@d33 4
a36 1
target_shared: libhttpd.ep
d40 1
a40 1
libhttpd.ep: libhttpd.$(SHLIB_SUFFIX_NAME)
d42 2
a43 2
	      -o libhttpd.ep -DSHARED_CORE_TIESTATIC main/http_main.c \
		  -L. -lhttpd $(LIBS)
d45 1
a45 1
libhttpd.$(SHLIB_SUFFIX_NAME): subdirs modules.o
d47 1
a47 1
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o libhttpd.$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB)
d49 1
a49 1
		rm -f libhttpd.$(SHLIB_SUFFIX_NAME).*; \
d52 2
a53 2
		    echo "ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix"; \
		    ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix; \
d72 1
a72 1
	-rm -f $(TARGET) libhttpd.* *.o
d80 1
a80 1
	-rm -f $(TARGET) libhttpd.* *.o
@


1.3
log
@fix conflict.
simplify a bit
@
text
@a0 212
## ====================================================================
## Copyright (c) 1998 The Apache Group.  All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted provided that the following conditions
## are met:
##
## 1. Redistributions of source code must retain the above copyright
##    notice, this list of conditions and the following disclaimer.
##
## 2. Redistributions in binary form must reproduce the above copyright
##    notice, this list of conditions and the following disclaimer in
##    the documentation and/or other materials provided with the
##    distribution.
##
## 3. All advertising materials mentioning features or use of this
##    software must display the following acknowledgment:
##    "This product includes software developed by the Apache Group
##    for use in the Apache HTTP server project (http://www.apache.org/)."
##
## 4. The names "Apache Server" and "Apache Group" must not be used to
##    endorse or promote products derived from this software without
##    prior written permission. For written permission, please contact
##    apache@@apache.org.
##
## 5. Products derived from this software may not be called "Apache"
##    nor may "Apache" appear in their names without prior written
##    permission of the Apache Group.
##
## 6. Redistributions of any form whatsoever must retain the following
##    acknowledgment:
##    "This product includes software developed by the Apache Group
##    for use in the Apache HTTP server project (http://www.apache.org/)."
##
## THIS SOFTWARE IS PROVIDED BY THE APACHE GROUP ``AS IS'' AND ANY
## EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
## IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
## PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE APACHE GROUP OR
## ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
## SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
## NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
## LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
## HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
## STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
## OF THE POSSIBILITY OF SUCH DAMAGE.
## ====================================================================
##
## This software consists of voluntary contributions made by many
## individuals on behalf of the Apache Group and was originally based
## on public domain software written at the National Center for
## Supercomputing Applications, University of Illinois, Urbana-Champaign.
## For more information on the Apache Group and the Apache HTTP server
## project, please see <http://www.apache.org/>.
##

##
##  Makefile -- Apache Autoconf-style Interface (APACI)
##              top-level control Makefile for out-of-the-box
##              build and installation procedure.
##
##  Written by Ralf S. Engelschall <rse@@apache.org>
##

## ==================================================================
##                              Options
## ==================================================================

#   safe environment
SHELL           = /bin/sh

#   paths to the source tree parts
TOP             = @@TOP@@
SRC             = @@SRC@@
MKF             = @@MKF@@
AUX             = @@AUX@@

#   build tools
CP              = cp
LN              = ln
RM              = rm -f
TAR             = tar
MKDIR           = $(TOP)/$(AUX)/mkdir.sh
INSTALL         = $(TOP)/$(AUX)/install.sh -c
INSTALL_PROGRAM = $(INSTALL) -s -m 755
INSTALL_DSO     = $(INSTALL) -m 755
INSTALL_SCRIPT  = $(INSTALL) -m 755
INSTALL_DATA    = $(INSTALL) -m 644
PERL            = @@PERL@@

#   installation root 
#   (overrideable by package maintainers for
#   rolling packages without bristling the system)
root            =

#   installation paths
prefix          = @@prefix@@
exec_prefix     = @@exec_prefix@@
bindir          = @@bindir@@
sbindir         = @@sbindir@@
libexecdir      = @@libexecdir@@
mandir          = @@mandir@@
sysconfdir      = @@sysconfdir@@
datadir         = @@datadir@@
includedir      = @@includedir@@
localstatedir   = @@localstatedir@@
runtimedir      = @@runtimedir@@
logfiledir      = @@logfiledir@@
proxycachedir   = @@proxycachedir@@

libexecdir_relative   = @@libexecdir_relative@@

#   suexec details (optional)
suexec          = @@suexec@@
suexec_caller   = @@suexec_caller@@
suexec_userdir  = @@suexec_userdir@@
suexec_uidmin   = @@suexec_uidmin@@
suexec_gidmin   = @@suexec_gidmin@@
suexec_safepath = @@suexec_safepath@@

#   some substituted configuration parameters
conf_group       = @@conf_group@@
conf_port        = @@conf_port@@
conf_serveradmin = @@conf_serveradmin@@
conf_servername  = @@conf_servername@@

#   usage of src/support stuff
build-support     = @@build_support@@
install-support   = @@install_support@@
clean-support     = @@clean_support@@
distclean-support = @@distclean_support@@

#   forwarding arguments
MFWD = root=$(root)

## ==================================================================
##                              Targets
## ==================================================================

#   default target
all: build

## ------------------------------------------------------------------
##                           Build Target
## ------------------------------------------------------------------

#   build the package
build:
	@@echo "===> $(SRC)"
	@@$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) build-std $(build-support)
	@@touch $(TOP)/$(SRC)/.apaci.build.ok
	@@echo "<=== $(SRC)"

#   build the standard stuff
build-std:
	@@cd $(TOP)/$(SRC); $(MAKE) $(MFLAGS) SDP=$(SRC)/ all

#   build the additional support stuff
build-support:
	@@echo "===> $(SRC)/support"; \
	cd $(TOP)/$(SRC)/support; $(MAKE) $(MFLAGS) all; \
	if [ ".$(suexec)" = .1 ]; then \
	    $(MAKE) $(MFLAGS) \
		EXTRA_CFLAGS='\
			-DHTTPD_USER=\"$(suexec_caller)\" \
			-DUID_MIN=$(suexec_uidmin) \
			-DGID_MIN=$(suexec_gidmin) \
			-DUSERDIR_SUFFIX=\"$(suexec_userdir)\" \
			-DLOG_EXEC=\"$(logfiledir)/suexec_log\" \
			-DDOC_ROOT=\"$(datadir)/htdocs\" \
			-DSAFE_PATH=\"$(suexec_safepath)\" \
		' \
		suexec; \
	fi; \
	echo "<=== $(SRC)/support"

## ------------------------------------------------------------------
##                       Installation Targets
## ------------------------------------------------------------------

#   the install target for installing the complete Apache
#   package. This is implemented by running subtargets for the
#   separate parts of the installation process.
install:
	@@if [ ! -f $(TOP)/$(SRC)/.apaci.build.ok ]; then \
		$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) build; \
	else \
		:; \
	fi
	@@$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) \
		install-mktree install-programs $(install-support) \
		install-include install-data install-config
	-@@$(RM) $(SRC)/.apaci.install.tmp
	-@@$(RM) $(SRC)/.apaci.install.conf
	-@@if [ ".$(QUIET)" != .1 ]; then \
		echo "+--------------------------------------------------------+"; \
		echo "| You now have successfully built and installed the      |"; \
		echo "| Apache 1.3 HTTP server. To verify that Apache actually |"; \
		echo "| works correctly you now should first check the         |"; \
		echo "| (initially created or preserved) configuration files   |"; \
		echo "|                                                        |"; \
		echo "|   $(sysconfdir)/{httpd,access,srm}.conf"; \
		echo "|                                                        |"; \
		echo "| and then you should be able to immediately fire up     |"; \
		echo "| Apache the first time by running:                      |"; \
		echo "|                                                        |"; \
		echo "|   $(sbindir)/apachectl start"; \
		echo "|                                                        |"; \
		echo "| Thanks for using Apache.       The Apache Group        |"; \
		echo "|                                http://www.apache.org/  |"; \
		echo "+--------------------------------------------------------+"; \
	fi
d2 49
a50 55
#   the non-verbose variant for package maintainers
install-quiet:
	@@$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) QUIET=1 install

#   create the installation tree
install-mktree:
	@@echo "===> [mktree: Creating Apache installation tree]"
	$(MKDIR) $(root)$(bindir)
	$(MKDIR) $(root)$(sbindir)
	$(MKDIR) $(root)$(libexecdir)
	$(MKDIR) $(root)$(mandir)/man1
	$(MKDIR) $(root)$(mandir)/man8
	$(MKDIR) $(root)$(sysconfdir)
	$(MKDIR) $(root)$(datadir)/htdocs
	$(MKDIR) $(root)$(datadir)/icons
	$(MKDIR) $(root)$(datadir)/cgi-bin
	$(MKDIR) $(root)$(includedir)
	$(MKDIR) $(root)$(runtimedir)
	$(MKDIR) $(root)$(logfiledir)
	$(MKDIR) $(root)$(proxycachedir)
	@@echo "<=== [mktree]"

#   install the server program and optionally corresponding
#   shared object files.
install-programs:
	@@echo "===> [programs: Installing Apache httpd program and shared objects]"
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/httpd $(root)$(sbindir)/httpd
	-@@if [ ".`grep 'SUBTARGET=target_shared' $(TOP)/$(SRC)/Makefile`" != . ]; then \
		SHLIB_SUFFIX_NAME="`grep '^SHLIB_SUFFIX_NAME=' $(TOP)/$(SRC)/Makefile | sed -e 's:^.*=::'`"; \
		SHLIB_SUFFIX_LIST="`grep '^SHLIB_SUFFIX_LIST=' $(TOP)/$(SRC)/Makefile | sed -e 's:^.*=::'`"; \
		echo "$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep"; \
		$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.ep $(root)$(libexecdir)/libhttpd.ep; \
		echo "$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}"; \
		$(INSTALL_DSO) $(TOP)/$(SRC)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}; \
		if [ ".$${SHLIB_SUFFIX_LIST}" != . ]; then \
			echo "$(RM) $(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.*"; \
			$(RM) $(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.*; \
			for suffix in $${SHLIB_SUFFIX_LIST} ""; do \
				[ ".$${suffix}" = . ] && continue; \
				echo "$(LN) $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.$${suffix}"; \
				$(LN) $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME} $(root)$(libexecdir)/libhttpd.$${SHLIB_SUFFIX_NAME}.$${suffix}; \
			done; \
		fi; \
	fi
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/httpd.8 $(root)$(mandir)/man8/httpd.8
	-@@$(RM) $(SRC)/.apaci.install.conf; touch $(SRC)/.apaci.install.conf
	-@@if [ ".`grep '^[ 	]*SharedModule' $(TOP)/$(SRC)/Configuration.apaci`" != . ]; then \
		for mod in `egrep '^[ 	]*SharedModule' $(TOP)/$(SRC)/Configuration.apaci |\
	                sed -e 's/^[ 	]*SharedModule[ 	]*//'`; do \
			file=`echo $${mod} | sed -e 's;^.*/\([^/]*\);\1;'`; \
			echo "$(INSTALL_DSO) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}"; \
			$(INSTALL_DSO) $(TOP)/$(SRC)/$${mod} $(root)$(libexecdir)/$${file}; \
			name=`$(TOP)/$(AUX)/fmn.sh $(TOP)/$(SRC)/$${mod}`; \
			echo dummy | awk '{ printf("LoadModule %-18s %s\n", modname, modpath); }' \
			modname="$${name}" modpath="$(libexecdir_relative)$${file}" >>$(SRC)/.apaci.install.conf; \
a51 10
		echo "" >>$(SRC)/.apaci.install.conf; \
		echo "#  Reconstruction of the complete module list from all available modules" >>$(SRC)/.apaci.install.conf; \
		echo "#  (static and shared ones) to achieve correct module execution order." >>$(SRC)/.apaci.install.conf; \
		echo "#  [WHENEVER YOU CHANGE THE LOADMODULE SECTION ABOVE UPDATE THIS, TOO]" >>$(SRC)/.apaci.install.conf; \
		echo "ClearModuleList" >>$(SRC)/.apaci.install.conf; \
		egrep "^[ 	]*(Add|Shared)Module" $(SRC)/Configuration.apaci |\
		sed	-e 's:SharedModule:AddModule:' \
			-e 's:modules/[^/]*/::' \
			-e 's:[ 	]lib: mod_:' \
			-e 's:\.[soa]*$$:.c:' >>$(SRC)/.apaci.install.conf; \
a52 1
	@@echo "<=== [programs]"
d54 13
a66 45
#   install the support programs and scripts
install-support:
	@@echo "===> [support: Installing Apache support programs and scripts]"
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/ab $(root)$(sbindir)/ab
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/ab.1 $(root)$(mandir)/man1/ab.1
	@@echo "$(INSTALL_SCRIPT) $(TOP)/$(SRC)/support/apachectl[*] $(root)$(sbindir)/apachectl"; \
	sed -e 's;PIDFILE=.*;PIDFILE=$(runtimedir)/httpd.pid;' \
		-e 's;HTTPD=.*;HTTPD=$(sbindir)/httpd;' \
		< $(TOP)/$(SRC)/support/apachectl > $(TOP)/$(SRC)/.apaci.install.tmp && \
		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(sbindir)/apachectl
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/apachectl.1 $(root)$(mandir)/man1/apachectl.1
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/htpasswd $(root)$(bindir)/htpasswd
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/htpasswd.1 $(root)$(mandir)/man1/htpasswd.1
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/htdigest $(root)$(bindir)/htdigest
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/htdigest.1 $(root)$(mandir)/man1/htdigest.1
	@@echo "$(INSTALL_SCRIPT) $(TOP)/$(SRC)/support/dbmmanage[*] $(root)$(bindir)/dbmmanage"; \
	sed -e 's;^#!/.*;#!$(PERL);' \
		< $(TOP)/$(SRC)/support/dbmmanage > $(TOP)/$(SRC)/.apaci.install.tmp && \
		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(bindir)/dbmmanage
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/dbmmanage.1 $(root)$(mandir)/man1/dbmmanage.1
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/logresolve $(root)$(sbindir)/logresolve
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/logresolve.8 $(root)$(mandir)/man8/logresolve.8
	$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/rotatelogs $(root)$(sbindir)/rotatelogs
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/rotatelogs.8 $(root)$(mandir)/man8/rotatelogs.8
	@@echo "$(INSTALL_SCRIPT) $(TOP)/$(SRC)/support/apxs[*] $(root)$(sbindir)/apxs"; \
	sed -e 's;^#!/.*;#!$(PERL);' \
		-e 's;\@@prefix\@@;$(prefix);' \
		-e 's;\@@sbindir\@@;$(sbindir);' \
		-e 's;\@@libexecdir\@@;$(libexecdir);' \
		-e 's;\@@includedir\@@;$(includedir);' \
		-e 's;\@@sysconfdir\@@;$(sysconfdir);' \
		< $(TOP)/$(SRC)/support/apxs > $(TOP)/$(SRC)/.apaci.install.tmp && \
		$(INSTALL_SCRIPT) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(sbindir)/apxs
	$(INSTALL_DATA) $(TOP)/$(SRC)/support/apxs.8 $(root)$(mandir)/man8/apxs.8
	-@@if [ ".$(suexec)" = .1 ]; then \
	    echo "$(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/suexec $(root)$(sbindir)/suexec"; \
	    $(INSTALL_PROGRAM) $(TOP)/$(SRC)/support/suexec $(root)$(sbindir)/suexec; \
	    echo "chown root $(root)$(sbindir)/suexec"; \
	    chown root $(root)$(sbindir)/suexec; \
	    echo "chmod 4711 $(root)$(sbindir)/suexec"; \
	    chmod 4711 $(root)$(sbindir)/suexec; \
	    echo "$(INSTALL_DATA) $(TOP)/$(SRC)/support/suexec.8 $(root)$(mandir)/man8/suexec.8"; \
	    $(INSTALL_DATA) $(TOP)/$(SRC)/support/suexec.8 $(root)$(mandir)/man8/suexec.8; \
	fi
	@@echo "<=== [support]"
d68 6
a73 79
#   install the Apache C header files
install-include:
	@@echo "===> [include: Installing Apache C header files]"
	$(CP) $(TOP)/$(SRC)/include/*.h $(root)$(includedir)/
	@@osdir=`grep '^OSDIR=' $(TOP)/$(SRC)/Makefile.config | sed -e 's:^OSDIR=.*/os:os:'`; \
		echo "$(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/"; \
		$(CP) $(TOP)/$(SRC)/$${osdir}/os.h $(root)$(includedir)/
	chmod 644 $(root)$(includedir)/*.h
	@@echo "<=== [include]"

#   create an initial document root containing the Apache manual,
#   icons and distributed CGI scripts.
install-data:
	@@echo "===> [data: Installing initial data files]"
	-@@if [ -f $(root)$(datadir)/htdocs/index.html ]; then \
		echo "[PRESERVING EXISTING DATA SUBDIR: $(root)$(datadir)/htdocs/]"; \
	else \
		echo "Copying tree $(TOP)/htdocs/ -> $(root)$(datadir)/htdocs/"; \
		(cd $(TOP)/htdocs/ && $(TAR) cf - *) |\
		(cd $(root)$(datadir)/htdocs/ && $(TAR) xf -); \
		find $(root)$(datadir)/htdocs/ -type d -exec chmod a+rx {} \; ; \
		find $(root)$(datadir)/htdocs/ -type f -exec chmod a+r {} \; ; \
	fi
	-@@if [ -f $(root)$(datadir)/cgi-bin/printenv ]; then \
		echo "[PRESERVING EXISTING DATA SUBDIR: $(root)$(datadir)/cgi-bin/]"; \
	else \
		for script in printenv test-cgi; do \
			cat $(TOP)/cgi-bin/$${script} |\
			sed -e 's;^#!/.*perl;#!$(PERL);' \
        		> $(TOP)/$(SRC)/.apaci.install.tmp; \
			echo "$(INSTALL_DATA) $(TOP)/conf/$${script}[*] $(root)$(datadir)/cgi-bin/$${script}"; \
			$(INSTALL_DATA) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(datadir)/cgi-bin/$${script}; \
		done; \
	fi
	@@echo "Copying tree $(TOP)/icons/ -> $(root)$(datadir)/icons/"; \
	(cd $(TOP)/icons/ && $(TAR) cf - *) |\
	(cd $(root)$(datadir)/icons/ && $(TAR) xf -); \
	find $(root)$(datadir)/icons/ -type d -exec chmod a+rx {} \; ;\
	find $(root)$(datadir)/icons/ -type f -exec chmod a+r {} \;
	@@echo "<=== [data]"

#   create the initial configuration by providing default files
#   and initial config files while preserving existing ones.
install-config:
	@@echo "===> [config: Installing Apache configuration files]"
	-@@for conf in httpd.conf access.conf srm.conf; do \
		(echo "##"; \
		 echo "## $${conf} -- Apache HTTP server configuration file"; \
		 echo "##"; \
		 echo ""; \
		 cat $(TOP)/conf/$${conf}-dist ) |\
		 sed -e '/# LoadModule/r $(TOP)/$(SRC)/.apaci.install.conf' \
			-e 's;@@@@ServerRoot@@@@/htdocs;$(datadir)/htdocs;' \
			-e 's;@@@@ServerRoot@@@@/icons;$(datadir)/icons;' \
			-e 's;@@@@ServerRoot@@@@/cgi-bin;$(datadir)/cgi-bin;' \
			-e 's;@@@@ServerRoot@@@@/proxy;$(proxycachedir);' \
			-e 's;@@@@ServerRoot@@@@;$(prefix);' \
			-e 's;logs/accept.lock;$(runtimedir)/httpd.lock;' \
			-e 's;logs/apache_runtime_status;$(runtimedir)/httpd.scoreboard;' \
			-e 's;logs/httpd.pid;$(runtimedir)/httpd.pid;' \
			-e 's;logs/access_log;$(logfiledir)/access_log;' \
			-e 's;logs/error_log;$(logfiledir)/error_log;' \
			-e 's;logs/referer_log;$(logfiledir)/referer_log;' \
			-e 's;logs/agent_log;$(logfiledir)/agent_log;' \
			-e 's;conf/magic;$(sysconfdir)/magic;' \
			-e 's;conf/mime.types;$(sysconfdir)/mime.types;' \
			-e 's;Group #-1;Group $(conf_group);' \
			-e 's;Port 80;Port $(conf_port);' \
			-e 's;ServerAdmin you@@your.address;ServerAdmin $(conf_serveradmin);' \
			-e 's;ServerName new.host.name;ServerName $(conf_servername);' \
        	> $(TOP)/$(SRC)/.apaci.install.tmp && \
		echo "$(INSTALL_DATA) $(TOP)/conf/$${conf}-dist[*] $(root)$(sysconfdir)/$${conf}.default"; \
		$(INSTALL_DATA) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(sysconfdir)/$${conf}.default; \
		if [ ! -f "$(root)$(sysconfdir)/$${conf}" ]; then \
			echo "$(INSTALL_DATA) $(TOP)/conf/$${conf}-dist[*] $(root)$(sysconfdir)/$${conf}"; \
			$(INSTALL_DATA) $(TOP)/$(SRC)/.apaci.install.tmp $(root)$(sysconfdir)/$${conf}; \
		else \
			echo "[PRESERVING EXISTING CONFIG FILE: $(root)$(sysconfdir)/$${conf}]"; \
		fi; \
d75 7
a81 9
	-@@for conf in mime.types magic; do \
		echo "$(INSTALL_DATA) $(TOP)/conf/$${conf} $(root)$(sysconfdir)/$${conf}.default"; \
		$(INSTALL_DATA) $(TOP)/conf/$${conf} $(root)$(sysconfdir)/$${conf}.default; \
		if [ ! -f "$(root)$(sysconfdir)/$${conf}" ]; then \
			echo "$(INSTALL_DATA) $(TOP)/conf/$${conf} $(root)$(sysconfdir)/$${conf}"; \
			$(INSTALL_DATA) $(TOP)/conf/$${conf} $(root)$(sysconfdir)/$${conf}; \
		else \
			echo "[PRESERVING EXISTING CONFIG FILE: $(root)$(sysconfdir)/$${conf}]"; \
		fi; \
d83 6
a88 1
	@@echo "<=== [config]"
d90 3
d94 14
a107 3
## ------------------------------------------------------------------
##                       Cleanup Targets
## ------------------------------------------------------------------
d109 1
a109 31
#   cleanup the source tree by removing anything which was
#   created by the build target
clean:
	@@echo "===> $(SRC)"
	@@$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) clean-std $(clean-support)
	@@echo "<=== $(SRC)"
	@@$(RM) $(TOP)/$(SRC)/.apaci.build.ok

#   clean the standard stuff
clean-std:
	@@cd $(TOP)/$(SRC); $(MAKE) $(MFLAGS) SDP=$(SRC)/ clean

#   clean additional support stuff
clean-support:
	@@echo "===> $(SRC)/support"; \
	cd $(TOP)/$(SRC)/support; $(MAKE) $(MFLAGS) clean; \
	if [ ".$(suexec)" = .1 ]; then \
		echo "$(RM) suexec"; \
		$(RM) suexec; \
	fi; \
	echo "<=== $(SRC)/support"

#   cleanup the source tree by removing anything which was
#   created by the configure step and the build target.
#   When --shadow is used we just remove the complete shadow tree.
distclean:
	@@if [ ".$(SRC)" = .src ]; then \
		$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) distclean-normal; \
	else \
		$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) distclean-shadow; \
	fi
d111 1
a111 30
distclean-normal:
	@@echo "===> $(SRC)"
	@@$(MAKE) -f $(MKF) $(MFLAGS) $(MFWD) distclean-std $(distclean-support)
	@@echo "<=== $(SRC)"
	-$(RM) $(SRC)/Configuration.apaci
	-$(RM) $(SRC)/apaci
	@@$(RM) $(SRC)/.apaci.build.ok
	-$(RM) Makefile
	-$(RM) config.status

#   clean the standard stuff
distclean-std:
	@@cd $(TOP)/$(SRC); $(MAKE) $(MFLAGS) SDP=$(SRC)/ distclean

distclean-support:
	@@echo "===> $(SRC)/support"; \
	cd $(TOP)/$(SRC)/support; $(MAKE) $(MFLAGS) distclean; \
	if [ ".$(suexec)" = .1 ]; then \
	    echo "$(RM) suexec"; \
	    $(RM) suexec; \
	fi; \
	echo "<=== $(SRC)/support"

distclean-shadow:
	$(RM) -r $(SRC)
	$(RM) $(MKF)
	-@@if [ ".`ls $(TOP)/src.* 2>/dev/null`" = . ]; then \
		echo "$(RM) Makefile"; \
		$(RM) Makefile; \
	fi
d113 9
@


1.2
log
@Don't bitch if Configuration is older than Configuration.tmpl
@
text
@d1 424
a424 1
# Apache makefile template (well, suffix).
d426 62
a487 17
# This is combined with the information in the "Configuration" file
# by the configure script to make the actual Makefile.

CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
LIBS=$(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(EXTRA_INCLUDES)
LFLAGS=$(LFLAGS1) $(EXTRA_LFLAGS)

OBJS= alloc.o http_main.o http_core.o http_config.o http_request.o \
  http_log.o http_protocol.o rfc1413.o util.o util_script.o modules.o buff.o\
  md5c.o util_md5.o explain.o http_bprintf.o util_date.o util_snprintf.o\
  $(MODULES)

.c.o:
	$(CC) -c $(INCLUDES) $(CFLAGS) $(SPACER) $<

all: httpd
a488 135
httpd: $(REGLIB) $(OBJS)
	$(CC) $(LFLAGS)  -o httpd $(OBJS) $(REGLIB) $(LIBS)

regex/libregex.a:
	(cd regex; $(MAKE) lib CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)')

modules/last-built:
	(cd modules; \
	$(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)')

clean:
	rm -f httpd *.o core
	cd regex; $(MAKE) clean
	cd modules; $(MAKE) clean

dist.tar: 
	# Assure a semi-sensible configuration going out...
	cp Makefile.orig Makefile
	cp modules.c.orig modules.c
	tar cvf dist.tar README INSTALL CHANGES TODO API.html \
		Configuration Configure Makefile.tmpl Makefile *.h *.c

# Work around broken compilers
http_bprintf.o: http_bprintf.c
	$(CC) -c $(INCLUDES) $(CFLAGS) $(BROKEN_BPRINTF_FLAGS) http_bprintf.c

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && $(CC) -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && mv Makefile.tmpl Makefile.tmpl.bak \
	    && mv Makefile.new Makefile.tmpl

#Dependencies

$(OBJS): Makefile

# DO NOT REMOVE
alloc.o: alloc.c httpd.h conf.h alloc.h buff.h
buff.o: buff.c conf.h alloc.h buff.h
explain.o: explain.c explain.h
http_bprintf.o: http_bprintf.c conf.h alloc.h buff.h
http_config.o: http_config.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_log.h http_request.h \
 http_conf_globals.h explain.h
http_core.o: http_core.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_protocol.h http_conf_globals.h http_main.h \
 http_log.h rfc1413.h util_md5.h md5.h scoreboard.h
http_log.o: http_log.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_log.h
http_main.o: http_main.c httpd.h conf.h alloc.h buff.h http_main.h \
 http_log.h http_config.h http_protocol.h http_request.h \
 http_conf_globals.h http_core.h scoreboard.h explain.h
http_protocol.o: http_protocol.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_protocol.h http_main.h http_log.h \
 util_date.h
http_request.o: http_request.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_request.h http_core.h http_protocol.h http_log.h \
 http_main.h scoreboard.h
md5c.o: md5c.c md5.h
mod_access.o: mod_access.c httpd.h conf.h alloc.h buff.h http_core.h \
 http_config.h http_log.h http_request.h
mod_actions.o: mod_actions.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_request.h http_core.h http_protocol.h http_main.h \
 http_log.h util_script.h
mod_alias.o: mod_alias.c httpd.h conf.h alloc.h buff.h http_config.h
mod_asis.o: mod_asis.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_protocol.h http_log.h util_script.h http_main.h http_request.h
mod_auth.o: mod_auth.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_log.h http_protocol.h
mod_auth_anon.o: mod_auth_anon.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_log.h http_protocol.h
mod_auth_db.o: mod_auth_db.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_log.h http_protocol.h
mod_auth_dbm.o: mod_auth_dbm.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_log.h http_protocol.h
mod_auth_msql.o: mod_auth_msql.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h http_log.h http_protocol.h
mod_browser.o: mod_browser.c httpd.h conf.h alloc.h buff.h \
 http_config.h
mod_cern_meta.o: mod_cern_meta.c httpd.h conf.h alloc.h buff.h \
 http_config.h util_script.h http_log.h http_request.h
mod_cgi.o: mod_cgi.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_request.h http_core.h http_protocol.h http_main.h http_log.h \
 util_script.h http_conf_globals.h
mod_digest.o: mod_digest.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_log.h http_protocol.h util_md5.h md5.h
mod_dir.o: mod_dir.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_request.h http_protocol.h http_log.h http_main.h \
 util_script.h
mod_dld.o: mod_dld.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_conf_globals.h
mod_env.o: mod_env.c httpd.h conf.h alloc.h buff.h http_config.h
mod_expires.o: mod_expires.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_log.h
mod_headers.o: mod_headers.c httpd.h conf.h alloc.h buff.h \
 http_config.h
mod_imap.o: mod_imap.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_request.h http_core.h http_protocol.h http_main.h http_log.h \
 util_script.h
mod_include.o: mod_include.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_request.h http_core.h http_protocol.h http_log.h \
 http_main.h util_script.h
mod_info.o: mod_info.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_log.h http_main.h http_protocol.h util_script.h
mod_log_agent.o: mod_log_agent.c httpd.h conf.h alloc.h buff.h \
 http_config.h
mod_log_config.o: mod_log_config.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h
mod_log_referer.o: mod_log_referer.c httpd.h conf.h alloc.h buff.h \
 http_config.h
mod_mime.o: mod_mime.c httpd.h conf.h alloc.h buff.h http_config.h
mod_negotiation.o: mod_negotiation.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_request.h http_core.h http_log.h util_script.h
mod_rewrite.o: mod_rewrite.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_request.h http_core.h http_log.h mod_rewrite.h
mod_status.o: mod_status.c httpd.h conf.h alloc.h buff.h http_config.h \
 http_core.h http_protocol.h http_main.h util_script.h scoreboard.h \
 http_log.h
mod_userdir.o: mod_userdir.c httpd.h conf.h alloc.h buff.h \
 http_config.h
mod_usertrack.o: mod_usertrack.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_core.h
modules.o: modules.c httpd.h conf.h alloc.h buff.h http_config.h
rfc1413.o: rfc1413.c httpd.h conf.h alloc.h buff.h http_log.h \
 rfc1413.h
util.o: util.c httpd.h conf.h alloc.h buff.h http_conf_globals.h
util_date.o: util_date.c util_date.h
util_md5.o: util_md5.c httpd.h conf.h alloc.h buff.h util_md5.h md5.h
util_script.o: util_script.c httpd.h conf.h alloc.h buff.h \
 http_config.h http_conf_globals.h http_main.h http_log.h \
 http_protocol.h http_core.h http_request.h util_script.h
util_snprintf.o: util_snprintf.c conf.h
@


1.1
log
@Initial revision
@
text
@d19 1
a19 8
all: @@@@Configuration@@@@ httpd

@@@@Configuration@@@@: Configuration.tmpl
	@@echo "@@@@Configuration@@@@ older than Configuration.tmpl, or doesn't exist."
	@@echo "Consider copying Configuration.tmpl to @@@@Configuration@@@@, editing and rerunning"
	@@echo "Configure."
	@@echo "If not, you will at least have to touch @@@@Configuration@@@@."
	@@false
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d1 4
d8 2
a9 2
INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS)
d11 4
a14 6
OBJS= \
  modules.o \
  $(MODULES) \
  main/libmain.a \
  $(OSDIR)/libos.a \
  ap/libap.a
d17 1
a17 1
	$(CC) -c $(INCLUDES) $(CFLAGS) $<
d19 1
a19 1
all: @@@@Configuration@@@@ $(TARGET)
d22 4
a25 4
	@@echo "++ File '@@@@Configuration@@@@' older than 'Configuration.tmpl',"
	@@echo "++ or still doesn't exist. Please consider copying 'Configuration.tmpl'"
	@@echo "++ to '@@@@Configuration@@@@', editing and rerunning 'Configure'."
	@@echo "++ If not, you will at least have to touch '@@@@Configuration@@@@'."
d28 5
a32 1
$(TARGET): $(EXTRA_DEPS) $(SUBTARGET)
d34 3
a36 39
target_static: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(CC) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(LIBS)

target_shared: libhttpd.ep
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c

libhttpd.ep: libhttpd.$(SHLIB_SUFFIX_NAME)
	$(CC) $(INCLUDES) $(CFLAGS) $(LDFLAGS) $(LDFLAGS_SHLIB_EXPORT) \
	      -o libhttpd.ep -DSHARED_CORE_TIESTATIC main/http_main.c \
		  -L. -lhttpd $(LIBS)

libhttpd.$(SHLIB_SUFFIX_NAME): subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o libhttpd.$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB)
	@@if [ ".$(SHLIB_SUFFIX_LIST)" != . ]; then \
		rm -f libhttpd.$(SHLIB_SUFFIX_NAME).*; \
		for suffix in $(SHLIB_SUFFIX_LIST) ""; do \
			[ ".$$suffix" = . ] && continue; \
		    echo "ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix"; \
		    ln libhttpd.$(SHLIB_SUFFIX_NAME) libhttpd.$(SHLIB_SUFFIX_NAME).$$suffix; \
		done; \
	fi

subdirs:
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)') || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done

support: support-dir

support-dir:
	@@echo "===> $(SDP)support"; \
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)'; \
	echo "<=== $(SDP)support"
d39 14
a52 24
	-rm -f $(TARGET) libhttpd.* *.o
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done

distclean:
	-rm -f $(TARGET) libhttpd.* *.o
	@@for i in $(SUBDIRS); do \
		echo "===> $(SDP)$$i"; \
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' $@@ ) || exit 1; \
		echo "<=== $(SDP)$$i"; \
	done
	-rm -f include/ap_config_auto.h
	-rm -f modules.c
	-rm -f modules/Makefile
	-rm -f regex/Makefile
	-rm -f Makefile.config
	-rm -f Makefile

install:
	@@echo "++ Sorry, no installation procedure available at this level."
	@@echo "++ Go to the parent directory for an 'install' target."
d58 4
a61 10
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new
	for i in $(SUBDIRS); do \
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' depend ) || exit 1; \
	done
d65 1
a65 1
$(OBJS): Makefile subdirs
d68 95
a162 8
buildmark.o: buildmark.c include/ap_config.h include/ap_mmn.h \
 include/ap_config_auto.h os/unix/os.h include/ap_ctype.h \
 include/hsregex.h include/httpd.h include/alloc.h include/buff.h \
 include/ap.h include/util_uri.h
modules.o: modules.c include/httpd.h include/ap_config.h \
 include/ap_mmn.h include/ap_config_auto.h os/unix/os.h \
 include/ap_ctype.h include/hsregex.h include/alloc.h include/buff.h \
 include/ap.h include/util_uri.h include/http_config.h
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@a16 5
# Used to generate import library for OS/2
.SUFFIXES: .def
.def.a:
	emximp -o $@@ $<

d31 1
a31 4
	      -o $(TARGET) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LIBS)

target_compile_only: subdirs modules.o
	$(CC) -c $(INCLUDES) $(CFLAGS) buildmark.c
d33 1
a33 1
target_shared: $(SHCORE_IMPLIB) $(SHARED_CORE_EP) lib$(TARGET).$(SHLIB_SUFFIX_NAME)
d35 1
a35 2
	      -o $(TARGET) -DSHARED_CORE_BOOTSTRAP main/http_main.c \
	      ap/libap.a $(LIBS) $(SHCORE_IMPLIB)
d37 1
a37 1
lib$(TARGET).ep: lib$(TARGET).$(SHLIB_SUFFIX_NAME)
d39 2
a40 2
	      -o lib$(TARGET).ep -DSHARED_CORE_TIESTATIC main/http_main.c \
		  -L. -l$(TARGET) $(LIBS)
d42 1
a42 1
lib$(TARGET).$(SHLIB_SUFFIX_NAME): subdirs modules.o
d44 1
a44 1
	$(LD_SHLIB) $(LDFLAGS_SHLIB) -o lib$(TARGET).$(SHLIB_SUFFIX_NAME) buildmark.o $(OBJS) $(REGLIB) $(EXPATLIB) $(LD_SHCORE_DEF) $(LD_SHCORE_LIBS)
d46 1
a46 1
		rm -f lib$(TARGET).$(SHLIB_SUFFIX_NAME).*; \
d49 2
a50 2
		    echo "ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix"; \
		    ln lib$(TARGET).$(SHLIB_SUFFIX_NAME) lib$(TARGET).$(SHLIB_SUFFIX_NAME).$$suffix; \
d57 1
a57 4
		case ".$(OS)" in \
		  .OS390 | .TPF) ( cd $$i && $(MAKE) SDP='$(SDP)' OPTIM='$(OPTIM)') || exit 1;; \
		              *) ( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)') || exit 1;; \
		esac; \
d65 1
a65 1
	cd support; $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)' || exit 1; \
d69 1
a69 1
	-rm -f $(TARGET) lib$(TARGET).* *.o
d72 1
a72 1
		( cd $$i && $(MAKE) $(MFLAGS_STATIC) SDP='$(SDP)' OPTIM='$(OPTIM)' $@@ ) || exit 1; \
d77 1
a77 1
	-rm -f $(TARGET) lib$(TARGET).* *.o
a86 1
	-rm -f lib/Makefile
d106 1
a106 1
	    ( cd $$i && $(MAKE) CC='$(CC)' AUX_CFLAGS='$(CFLAGS)' RANLIB='$(RANLIB)' OPTIM='$(OPTIM)' depend ) || exit 1; \
d116 1
a116 1
 include/hsregex.h include/httpd.h include/ap_alloc.h include/buff.h \
d120 1
a120 1
 include/ap_ctype.h include/hsregex.h include/ap_alloc.h include/buff.h \
@


1.1.1.4
log
@import apache 1.3.27 and mod_ssl 2.8.11
@
text
@a13 6
TYPE=
ALGO=
CRT=
KEY=
VIEW=

a61 7

certificate:   
	@@./support/mkcert.sh \
		"$(MAKE)" "$(MFLAGS) $(MFLAGS_STATIC)" \
		"$(SSL_PROGRAM)" ./support \
		"$(TYPE)" "$(ALGO)" "$(CRT)" "$(KEY)" "$(VIEW)"
	@@cd ../conf/ssl.crt; $(MAKE) $(MFLAGS_STATIC) SSL_PROGRAM=$(SSL_PROGRAM) >/dev/null 2>&1
@


1.1.1.5
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@d141 1
a141 1
 include/ap_config_auto.h $(OSDIR)/os.h include/ap_ctype.h \
d145 1
a145 1
 include/ap_mmn.h include/ap_config_auto.h $(OSDIR)/os.h \
@


