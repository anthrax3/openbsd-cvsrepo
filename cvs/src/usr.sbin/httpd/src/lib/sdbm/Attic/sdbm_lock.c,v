head	1.6;
access;
symbols
	OPENBSD_3_9:1.5.0.6
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.4
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.6
date	2006.04.04.08.51.28;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2004.12.06.13.14.10;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2004.12.02.19.42.46;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2003.08.21.13.11.35;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2002.03.29.02.08.05;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.15.22.18.03;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.28.35;	author henning;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.21.12.53.39;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@rip out bundled dbm, we've always used our dbm
From: Daniel Ouellet <daniel@@presscom.net>
@
text
@/*
** File locking
**
** Snarfed from mod_rewrite.c. Munged up for our use.
*/

#include "ap_config.h"
#include "sdbm_tune.h"   /* include the prototypes */

    /* The locking support:
     * Try to determine whether we should use fcntl() or flock().
     * Would be better ap_config.h could provide this... :-(
     * Small monkey business to ensure that fcntl is preferred,
     * unless we specified USE_FLOCK_SERIALIZED_ACCEPT during compile.
     */
#define USE_FLOCK 1
#include <sys/file.h>

/* NOTE: this function blocks until it acquires the lock */
int sdbm_fd_lock(int fd, int readonly)
{
    int rc;

    while (   ((rc = flock(fd, readonly ? LOCK_SH : LOCK_EX)) < 0)
              && (errno == EINTR)               ) {
        continue;
    }
#ifdef USE_LOCKING
    /* ### this doesn't allow simultaneous reads! */
    /* ### this doesn't block forever */
    /* Lock the first byte */
    lseek(fd, 0, SEEK_SET);
    rc = _locking(fd, _LK_LOCK, 1);
#endif
#ifdef USE_SEM_LOCKING
	if ((locking_sem != 0) && (TimedWaitOnLocalSemaphore (locking_sem, 10000) != 0))
		rc = -1;
	else
		rc = 1;
#endif

    return rc;
}

int sdbm_fd_unlock(int fd)
{
    int rc;

    rc = flock(fd, LOCK_UN);
#ifdef USE_LOCKING
    lseek(fd, 0, SEEK_SET);
    rc = _locking(fd, _LK_UNLCK, 1);
#endif
#ifdef USE_SEM_LOCKING
	if (locking_sem)
		SignalLocalSemaphore (locking_sem);
	rc = 1;
#endif

    return rc;
}
@


1.5
log
@kill more dead code, mostly inside #ifdef SOMENONSENSEONSTUPIDOSES
joint work by Michael Knudsen <e@@molioner.dk> and Daniel Ouellet
<daniel@@presscom.net> with my input
no change in binaries
@
text
@@


1.4
log
@big time httpd cleanup
this diff removes a lot of #ifdef'd stuff that is irrelevant for us.
done by Daniel Ouellet after my advice.
tested by many, ok miod@@
@
text
@a15 4
#if defined(HAVE_FCNTL_SERIALIZED_ACCEPT) && !defined(USE_FLOCK_SERIALIZED_ACCEPT)
#define USE_FCNTL 1
#include <fcntl.h>
#elif defined(HAVE_FLOCK_SERIALIZED_ACCEPT)
a17 16
#endif
#if !defined(USE_FCNTL) && !defined(USE_FLOCK)
#define USE_FLOCK 1
#include <sys/file.h>
#ifndef LOCK_UN
#undef USE_FLOCK
#define USE_FCNTL 1
#include <fcntl.h>
#endif
#endif

#ifdef USE_FCNTL
/* ugly interface requires this structure to be "live" for a while */
static struct flock   lock_it;
static struct flock unlock_it;
#endif
a23 13
#ifdef USE_FCNTL
    lock_it.l_whence = SEEK_SET; /* from current point */
    lock_it.l_start  = 0;        /* -"- */
    lock_it.l_len    = 0;        /* until end of file */
    lock_it.l_type   = readonly ? F_RDLCK : F_WRLCK;  /* set lock type */
    lock_it.l_pid    = 0;        /* pid not actually interesting */

    while (   ((rc = fcntl(fd, F_SETLKW, &lock_it)) < 0)
              && (errno == EINTR)                               ) {
        continue;
    }
#endif
#ifdef USE_FLOCK
a27 1
#endif
a48 10
#ifdef USE_FCNTL
    unlock_it.l_whence = SEEK_SET; /* from current point */
    unlock_it.l_start  = 0;        /* -"- */
    unlock_it.l_len    = 0;        /* until end of file */
    unlock_it.l_type   = F_UNLCK;  /* unlock */
    unlock_it.l_pid    = 0;        /* pid not actually interesting */

    rc = fcntl(fd, F_SETLKW, &unlock_it);
#endif
#ifdef USE_FLOCK
a49 1
#endif
@


1.3
log
@merge
@
text
@a24 1
#if !defined(MPE) && !defined(WIN32) && !defined(NETWARE)
a25 1
#endif
a31 17
#ifdef AIX
#undef USE_FLOCK
#define USE_FCNTL 1
#include <fcntl.h>
#endif
#ifdef WIN32
#undef USE_FCNTL
#define USE_LOCKING
#include <sys/locking.h>
#endif
#ifdef NETWARE
#undef USE_FCNTL
#define USE_SEM_LOCKING
#include <nwsemaph.h>
LONG locking_sem = 0;
#endif

@


1.2
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@d8 1
@


1.1
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d12 2
d15 1
a15 1
#if defined(USE_FCNTL_SERIALIZED_ACCEPT)
d18 1
a18 2
#endif
#if defined(USE_FLOCK_SERIALIZED_ACCEPT)
d24 1
a24 1
#if !defined(MPE) && !defined(WIN32)
d43 6
d87 6
d116 5
@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@a11 2
     * Small monkey business to ensure that fcntl is preferred,
     * unless we specified USE_FLOCK_SERIALIZED_ACCEPT during compile.
d13 1
a13 1
#if defined(HAVE_FCNTL_SERIALIZED_ACCEPT) && !defined(USE_FLOCK_SERIALIZED_ACCEPT)
d16 2
a17 1
#elif defined(HAVE_FLOCK_SERIALIZED_ACCEPT)
d23 1
a23 1
#if !defined(MPE) && !defined(WIN32) && !defined(NETWARE)
a41 6
#ifdef NETWARE
#undef USE_FCNTL
#define USE_SEM_LOCKING
#include <nwsemaph.h>
LONG locking_sem = 0;
#endif
a79 6
#ifdef USE_SEM_LOCKING
	if ((locking_sem != 0) && (TimedWaitOnLocalSemaphore (locking_sem, 10000) != 0))
		rc = -1;
	else
		rc = 1;
#endif
a102 5
#endif
#ifdef USE_SEM_LOCKING
	if (locking_sem)
		SignalLocalSemaphore (locking_sem);
	rc = 1;
@


1.1.1.2
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@a7 1
#include "sdbm_tune.h"   /* include the prototypes */
@


