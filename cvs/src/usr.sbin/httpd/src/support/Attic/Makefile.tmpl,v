head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.34
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.30
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.28
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.26
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.24
	OPENBSD_5_0:1.9.0.22
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.20
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.18
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.14
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.6.0.6
	OPENBSD_3_3_BASE:1.6
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2014.04.22.14.47.27;	author henning;	state dead;
branches;
next	1.9;

1.9
date	2006.04.04.11.39.28;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2005.06.28.12.58.53;	author robert;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.07.16.26.44;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.29.02.08.07;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.25.18.30.18;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	99.09.29.06.30.06;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.03.01.04.29.11;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.01.07.15;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.19.51;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.19.51;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.07.19.21.29.21;	author henning;	state Exp;
branches;
next	;


desc
@@


1.10
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS) -DUSE_SETUSERCONTEXT
LIBS=-lm -lap -los $(EXTRA_LIBS) $(LIBS1)
INCLUDES=$(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)
LDFLAGS=$(LDFLAGS1) $(EXTRA_LDFLAGS) -L$(OSDIR) -L$(SRCDIR)/ap

TARGETS=htpasswd htdigest rotatelogs logresolve apxs checkgid

OBJS=htpasswd.o htdigest.o rotatelogs.o logresolve.o checkgid.o

.c.o: 
	$(CC) -c $(INCLUDES) $(CFLAGS) $<

all: $(TARGETS)

htpasswd: htpasswd.o
	$(CC) $(CFLAGS) -o htpasswd $(LDFLAGS) htpasswd.o $(LIBS)

htdigest: htdigest.o
	$(CC) $(CFLAGS) -o htdigest $(LDFLAGS) htdigest.o $(LIBS)

rotatelogs: rotatelogs.o
	$(CC) $(CFLAGS) -o rotatelogs $(LDFLAGS) rotatelogs.o $(LIBS)

logresolve: logresolve.o
	$(CC) $(CFLAGS) -o logresolve $(LDFLAGS) logresolve.o $(LIBS)

checkgid: checkgid.o
	$(CC) $(CFLAGS) -o checkgid $(LDFLAGS) checkgid.o $(LIBS)

apxs: apxs.pl Makefile
	sed <apxs.pl >apxs \
	    -e 's%@@TARGET@@%$(TARGET)%g' \
	    -e 's%@@CC@@%$(CC)%g' \
	    -e 's%@@CFLAGS@@%$(CFLAGS)%g' \
	    -e 's%@@CFLAGS_SHLIB@@%$(CFLAGS_SHLIB)%g' \
	    -e 's%@@LD_SHLIB@@%$(LD_SHLIB)%g' \
	    -e 's%@@LDFLAGS_MOD_SHLIB@@%$(LDFLAGS_MOD_SHLIB)%g' \
	    -e 's%@@LIBS_SHLIB@@%$(LIBS_SHLIB)%g' && chmod a+x apxs

suexec: suexec.o
	$(CC) $(CFLAGS) -o suexec $(LDFLAGS) suexec.o $(LIBS)

clean:
	rm -f $(TARGETS) *.o

distclean: clean
	-rm -f Makefile

# We really don't expect end users to use this rule.  It works only with
# gcc, and rebuilds Makefile.tmpl.  You have to re-run Configure after
# using it.
depend:
	cp Makefile.tmpl Makefile.tmpl.bak \
	    && sed -ne '1,/^# DO NOT REMOVE/p' Makefile.tmpl > Makefile.new \
	    && gcc -MM $(INCLUDES) $(CFLAGS) *.c >> Makefile.new \
	    && sed -e '1,$$s: $(INCDIR)/: $$(INCDIR)/:g' \
	           -e '1,$$s: $(OSDIR)/: $$(OSDIR)/:g' Makefile.new \
		> Makefile.tmpl \
	    && rm Makefile.new

#Dependencies

$(OBJS): Makefile

# DO NOT REMOVE
htdigest.o: htdigest.c $(INCDIR)/ap_config.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
 $(INCDIR)/ap_md5.h
htpasswd.o: htpasswd.c $(INCDIR)/ap_config.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h
logresolve.o: logresolve.c $(INCDIR)/ap_config.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h
rotatelogs.o: rotatelogs.c $(INCDIR)/ap_config.h \
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h
suexec.o: suexec.c $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
 $(OSDIR)/os.h $(INCDIR)/ap_ctype.h suexec.h
@


1.9
log
@nuke bundled regex lib, we have and always used the OpenBSD one of course
From: Daniel Ouellet <daniel@@presscom.net>
@
text
@@


1.8
log
@Remove 'ab' (apache benchmark) from the tree because
we don't install it, and 'ab' itself is buggy so that
it will give false results.

ok henning@@
@
text
@d68 1
a68 1
 $(INCDIR)/hsregex.h $(INCDIR)/ap_md5.h
d70 1
a70 2
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
 $(INCDIR)/hsregex.h
d72 1
a72 2
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
 $(INCDIR)/hsregex.h
d74 1
a74 2
 $(INCDIR)/ap_config_auto.h $(OSDIR)/os.h $(INCDIR)/ap_ctype.h \
 $(INCDIR)/hsregex.h
d76 1
a76 1
 $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h suexec.h
@


1.7
log
@use setusercontext(3) instead of initgroups/setuid/et al., making possible
to limit resources based on the user class the binary is run under.
while i'm here, use %u for gid_t and uid_t.
input and ok from millert and henning.
@
text
@a0 9

# To compile the (experimental) SSL support into 'ab' use 
# something like:
#
# SSLLOC=/usr/local
# CFLAGS=-DUSE_SSL $(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
# LIBS=-L$(SSLLOC)/lib -lssl -lcrypto -lm -lap -los $(EXTRA_LIBS) $(LIBS1)
# INCLUDES=-I$(SSLLOC)/include $(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)

d6 1
a6 1
TARGETS=htpasswd htdigest rotatelogs logresolve ab apxs checkgid
d8 1
a8 1
OBJS=htpasswd.o htdigest.o rotatelogs.o logresolve.o ab.o checkgid.o
a26 3
ab: ab.o
	$(CC) $(CFLAGS) -o ab $(LDFLAGS) ab.o $(LIBS)

a65 2
ab.o: ab.c $(INCDIR)/ap_config.h $(INCDIR)/ap_config_auto.h \
 $(OSDIR)/os.h $(INCDIR)/ap_ctype.h $(INCDIR)/hsregex.h
@


1.6
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@d10 1
a10 1
CFLAGS=$(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
@


1.5
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d2 8
d11 1
a11 1
LIBS=-lap -los $(EXTRA_LIBS) $(LIBS1)
d15 1
a15 1
TARGETS=htpasswd htdigest rotatelogs logresolve ab apxs
d17 1
a17 1
OBJS=htpasswd.o htdigest.o rotatelogs.o logresolve.o ab.o
d39 4
a42 1
apxs: apxs.pl
@


1.4
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d17 1
a17 1
	$(CC) $(CFLAGS) htpasswd.o -o htpasswd $(LDFLAGS) $(LIBS)
d20 1
a20 1
	$(CC) $(CFLAGS) htdigest.o -o htdigest $(LDFLAGS) $(LIBS)
d23 1
a23 1
	$(CC) $(CFLAGS) rotatelogs.o -o rotatelogs $(LDFLAGS) $(LIBS)
d26 1
a26 1
	$(CC) $(CFLAGS) logresolve.o -o logresolve $(LDFLAGS) $(LIBS)
d29 1
a29 1
	$(CC) $(CFLAGS) ab.o -o ab $(LDFLAGS) $(LIBS)
d42 1
a42 1
	$(CC) $(CFLAGS) suexec.o -o suexec $(LDFLAGS) $(LIBS)
@


1.3
log
@mod_ssl-2.2.3-1.3.4 (will require libssl-1.1 for https to work, but
mostly harmless otherwise).
@
text
@d3 1
a3 1
LIBS=-los -lap $(EXTRA_LIBS) $(LIBS1)
d38 1
a38 1
	    -e 's%@@LDFLAGS_SHLIB@@%$(LDFLAGS_SHLIB)%g' \
a43 6
ca-fix: ca-fix.c
	$(CC) $(INCLUDES) $(CFLAGS) $(SSL_CFLAGS) \
	      $(LDFLAGS) $(SSL_LDFLAGS) \
	      -o ca-fix ca-fix.c \
	      $(LIBS) $(SSL_LIBS)

d71 1
a71 1
 $(INCDIR)/hsregex.h ../main/md5c.c $(INCDIR)/ap_md5.h
@


1.2
log
@Apache 1.3.4 merge
@
text
@d44 6
@


1.1
log
@Initial revision
@
text
@d33 1
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@


1.1.1.2
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@a1 8
# To compile the (experimental) SSL support into 'ab' use 
# something like:
#
# SSLLOC=/usr/local
# CFLAGS=-DUSE_SSL $(OPTIM) $(CFLAGS1) $(EXTRA_CFLAGS)
# LIBS=-L$(SSLLOC)/lib -lssl -lcrypto -lm -lap -los $(EXTRA_LIBS) $(LIBS1)
# INCLUDES=-I$(SSLLOC)/include $(INCLUDES1) $(INCLUDES0) $(EXTRA_INCLUDES)

d3 1
a3 1
LIBS=-lm -lap -los $(EXTRA_LIBS) $(LIBS1)
d7 1
a7 1
TARGETS=htpasswd htdigest rotatelogs logresolve ab apxs checkgid
d9 1
a9 1
OBJS=htpasswd.o htdigest.o rotatelogs.o logresolve.o ab.o checkgid.o
d17 1
a17 1
	$(CC) $(CFLAGS) -o htpasswd $(LDFLAGS) htpasswd.o $(LIBS)
d20 1
a20 1
	$(CC) $(CFLAGS) -o htdigest $(LDFLAGS) htdigest.o $(LIBS)
d23 1
a23 1
	$(CC) $(CFLAGS) -o rotatelogs $(LDFLAGS) rotatelogs.o $(LIBS)
d26 1
a26 1
	$(CC) $(CFLAGS) -o logresolve $(LDFLAGS) logresolve.o $(LIBS)
d29 1
a29 4
	$(CC) $(CFLAGS) -o ab $(LDFLAGS) ab.o $(LIBS)

checkgid: checkgid.o
	$(CC) $(CFLAGS) -o checkgid $(LDFLAGS) checkgid.o $(LIBS)
d31 1
a31 1
apxs: apxs.pl Makefile
a32 1
	    -e 's%@@TARGET@@%$(TARGET)%g' \
d37 1
a37 1
	    -e 's%@@LDFLAGS_MOD_SHLIB@@%$(LDFLAGS_MOD_SHLIB)%g' \
d41 1
a41 1
	$(CC) $(CFLAGS) -o suexec $(LDFLAGS) suexec.o $(LIBS)
d70 1
a70 1
 $(INCDIR)/hsregex.h $(INCDIR)/ap_md5.h
@

