head	1.4;
access;
symbols
	OPENBSD_3_6:1.3.0.20
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.18
	OPENBSD_3_5_BASE:1.3
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.3.0.16
	OPENBSD_3_4_BASE:1.3
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.3.0.14
	OPENBSD_3_3_BASE:1.3
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.3.0.12
	OPENBSD_3_2_BASE:1.3
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.12.02.21.35.48;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2000.01.25.18.30.10;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.58;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.19.44;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.19.44;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.07.19.21.29.11;	author henning;	state Exp;
branches;
next	;


desc
@@


1.4
log
@king bula sez: in Attic/ you shall rot
@
text
@/*
 * This file will include OS specific functions which are not inlineable.
 * Any inlineable functions should be defined in os-inline.c instead.
 */

#include "os.h"
#define INCL_DOS
#include <os2.h>
#include <stdio.h>
#include <string.h>

static int rc=0;
static char errorstr[20];

void ap_os_dso_init(void)
{
}



ap_os_dso_handle_t ap_os_dso_load(const char *module_name)
{
    HMODULE handle;

    rc = DosLoadModule(errorstr, sizeof(errorstr), module_name, &handle);

    if (rc == 0)
        return handle;

    return 0;
}



void ap_os_dso_unload(ap_os_dso_handle_t handle)
{
    DosFreeModule(handle);
}



void *ap_os_dso_sym(ap_os_dso_handle_t handle, const char *funcname)
{
    PFN func;
    
    rc = DosQueryProcAddr( handle, 0, funcname, &func );
    
    if (rc == 0)
        return func;

    return NULL;
}



const char *ap_os_dso_error(void)
{
    static char message[200];
    strcpy(message, ap_os_error_message(rc));
    strcat(message, " for module ");
    strcat(message, errorstr);
    return message;
}
@


1.3
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d10 1
d13 1
a22 1
    char errorstr[200];
d58 5
a62 1
    return ap_os_error_message(rc);
@


1.1
log
@Initial revision
@
text
@d7 52
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@


1.1.1.2
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@a6 57
#define INCL_DOS
#include <os2.h>
#include <stdio.h>
#include <string.h>

static int rc=0;
static char errorstr[20];

void ap_os_dso_init(void)
{
}



ap_os_dso_handle_t ap_os_dso_load(const char *module_name)
{
    HMODULE handle;

    rc = DosLoadModule(errorstr, sizeof(errorstr), module_name, &handle);

    if (rc == 0)
        return handle;

    return 0;
}



void ap_os_dso_unload(ap_os_dso_handle_t handle)
{
    DosFreeModule(handle);
}



void *ap_os_dso_sym(ap_os_dso_handle_t handle, const char *funcname)
{
    PFN func;
    
    rc = DosQueryProcAddr( handle, 0, funcname, &func );
    
    if (rc == 0)
        return func;

    return NULL;
}



const char *ap_os_dso_error(void)
{
    static char message[200];
    strcpy(message, ap_os_error_message(rc));
    strcat(message, " for module ");
    strcat(message, errorstr);
    return message;
}
@

