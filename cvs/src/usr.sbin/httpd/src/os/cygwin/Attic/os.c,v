head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.0.12
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.10
	OPENBSD_3_5_BASE:1.1
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.1
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.12.02.21.35.47;	author henning;	state dead;
branches;
next	1.1;

1.1
date	2002.02.12.08.01.31;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.29.09;	author henning;	state Exp;
branches;
next	;


desc
@@


1.2
log
@king bula sez: in Attic/ you shall rot
@
text
@/*
 * This file will include OS specific functions which are not inlineable.
 * Any inlineable functions should be defined in os-inline.c instead.
 */

#include "ap_config.h"
#include "os.h"


/* some linkers complain unless there's at least one function in each
 * .o file... and extra prototype is for gcc -Wmissing-prototypes
 */
extern void ap_is_not_here(void);
void ap_is_not_here(void) {}

/*
 *  Abstraction layer for loading
 *  Apache modules under run-time via 
 *  dynamic shared object (DSO) mechanism
 */

void ap_os_dso_init(void)
{
}

void *ap_os_dso_load(const char *path)
{
    return dlopen(path, RTLD_NOW | RTLD_GLOBAL);
}

void ap_os_dso_unload(void *handle)
{
    dlclose(handle);

    return;
}

void *ap_os_dso_sym(void *handle, const char *symname)
{
    return dlsym(handle, symname);
}

const char *ap_os_dso_error(void)
{
    return dlerror();
}
@


1.1
log
@might as well have these. (more apache_1.3.23 merge)
@
text
@@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@@

