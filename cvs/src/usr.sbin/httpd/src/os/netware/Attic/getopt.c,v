head	1.2;
access;
symbols
	OPENBSD_3_6:1.1.0.20
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.18
	OPENBSD_3_5_BASE:1.1
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.1
	OPENBSD_3_4:1.1.0.16
	OPENBSD_3_4_BASE:1.1
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.1
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.12.02.21.35.48;	author henning;	state dead;
branches;
next	1.1;

1.1
date	2000.01.25.18.30.09;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.29.10;	author henning;	state Exp;
branches;
next	;


desc
@@


1.2
log
@king bula sez: in Attic/ you shall rot
@
text
@#include <stdio.h>
#include <string.h>
#include <assert.h>
#include <stdlib.h>

#define OPTERRCOLON (1)
#define OPTERRNF (2)
#define OPTERRARG (3)

char *optarg;
int optind = 1;
int opterr = 1;
int optopt;

static int
optiserr(int argc, char * const *argv, int oint, const char *optstr,
         int optchr, int err)
{
    if (opterr) {
        fprintf(stderr, "Error in argument %d, char %d: ", oint, optchr + 1);

        switch (err) {
        case OPTERRCOLON:
            fprintf(stderr, ": in flags\n");
            break;
        case OPTERRNF:
            fprintf(stderr, "option not found %c\n", argv[oint][optchr]);
            break;
        case OPTERRARG:
            fprintf(stderr, "no argument for option %c\n", argv[oint][optchr]);
            break;
        default:
            fprintf(stderr, "unknown\n");
            break;
        }
    }
    optopt = argv[oint][optchr];
    return('?');
}
    
int
getopt(int argc, char* const *argv, const char *optstr)
{
    static int optchr = 0;
    static int dash = 0; /* have already seen the - */

    char *cp;

    if (optind >= argc)
        return(EOF);

    if (!dash && (argv[optind][0] !=  '-'))
        return(EOF);

    if (!dash && (argv[optind][0] ==  '-') && !argv[optind][1]) {
        /*
         * use to specify stdin. Need to let pgm process this and
         * the following args
         */
        return(EOF);
    }

    if ((argv[optind][0] == '-') && (argv[optind][1] == '-')) {
        /* -- indicates end of args */
        optind++;
        return(EOF);
    }

    if (!dash) {
        assert((argv[optind][0] == '-') && argv[optind][1]);
        dash = 1;
        optchr = 1;
    }

    /* Check if the guy tries to do a -: kind of flag */
    assert(dash);
    if (argv[optind][optchr] == ':') {
        dash = 0;
        optind++;
        return(optiserr(argc, argv, optind-1, optstr, optchr, OPTERRCOLON));
    }

    if (!(cp = strchr(optstr, argv[optind][optchr]))) {
        int errind = optind;
        int errchr = optchr;

        if (!argv[optind][optchr+1]) {
            dash = 0;
            optind++;
        }
        else
            optchr++;
        return(optiserr(argc, argv, errind, optstr, errchr, OPTERRNF));
    }

    if (cp[1] == ':') {
        dash = 0;
        optind++;

        if(optind == argc)
            return(optiserr(argc, argv, optind-1, optstr, optchr, OPTERRARG));
        optarg = argv[optind++];
        return(*cp);
    } else {
        if (!argv[optind][optchr+1]) {
            dash = 0;
            optind++;
        }
        else
            optchr++;
        return(*cp);
    }
    assert(0);
    return(0);
}

#ifdef TESTGETOPT
int main(int argc, char **argv)
{
    int c;
    extern char *optarg;
    extern int optind;
    int aflg = 0;
    int bflg = 0;
    int errflg = 0;
    char *ofile = NULL;

    while ((c = getopt(argc, argv, "abo:")) != EOF)
        switch (c) {
        case 'a':
            if (bflg)
                errflg++;
            else
                aflg++;
            break;
        case 'b':
            if (aflg)
                errflg++;
            else
                bflg++;
            break;
        case 'o':
            ofile = optarg;
            (void)printf("ofile = %s\n", ofile);
            break;
        case '?':
            errflg++;
        }

    if (errflg) {
        (void)fprintf(stderr, "usage: cmd [-a|-b] [-o <filename>] files...\n");
        exit(2);
    }

    for ( ; optind < argc; optind++)
        (void)printf("%s\n", argv[optind]);

    return 0;
}

#endif /* TESTGETOPT */@


1.1
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@@

