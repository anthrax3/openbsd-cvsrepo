head	1.9;
access;
symbols
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.3
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.3
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2004.12.02.21.35.48;	author henning;	state dead;
branches;
next	1.8;

1.8
date	2003.08.21.13.11.38;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.07.20.23.06;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.19.21.31.16;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.29.02.08.07;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.52;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.25.18.30.14;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.30.00;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.03.01.01.16.09;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.29.12;	author henning;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.10.07.19.48.15;	author henning;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.08.21.12.53.44;	author henning;	state Exp;
branches;
next	;


desc
@@


1.9
log
@king bula sez: in Attic/ you shall rot
@
text
@#ifndef APACHE_OS_H
#define APACHE_OS_H

/*
 * This file is included in all Apache source code. It contains definitions
 * of facilities available on _this_ operating system (HAVE_* macros),
 * and prototypes of OS specific functions defined in os.c or os-inline.c
 */

#define PLATFORM "TPF"

/************************************************************************
 *  PJ26895 provides support for non_socket_select.
 *  You can determine if this apar is applied to your system by looking
 *  at i$pwbl.h.  If the function non_socket_select is defined,
 *  then add #define TPF_HAVE_NONSOCKET_SELECT
 *  else add #define TPF_NO_NONSOCKET_SELECT
 *
 *  One of these two #defines is required and must be added here in os.h
 *  before the following check.
 ************************************************************************/

#if !defined(TPF_HAVE_NONSOCKET_SELECT) && !defined(TPF_NO_NONSOCKET_SELECT)
   #error "You must define whether your system supports non_socket_select()"
   #error "See src/os/tpf/os.h for instructions"
#endif

#if defined(TPF_HAVE_NONSOCKET_SELECT) && defined(TPF_NO_NONSOCKET_SELECT)
   #error "TPF_HAVE_NONSOCKET_SELECT and TPF_NO_NONSOCKET_SELECT"
   #error "cannot both be defined"
   #error "See src/os/tpf/os.h for instructions"
#endif

/************************************************************************
 *  PJ27387 or PJ26188 provides support for tpf_sawnc.
 *  You can determine if this apar is applied to your system by looking at
 *  tpfapi.h or i$fsdd.h.  If the function tpf_sawnc is defined,
 *  then add #define TPF_HAVE_SAWNC
 *  else add #define TPF_NO_SAWNC
 *
 *  One of these two #defines is required and must be added here in os.h
 *  before the following check.
 ************************************************************************/

#if !defined(TPF_HAVE_SAWNC) && !defined(TPF_NO_SAWNC)
   #error "You must define whether your system supports tpf_sawnc()"
   #error "See src/os/tpf/os.h for instructions"
#endif

#if defined(TPF_HAVE_SAWNC) && defined(TPF_NO_SAWNC)
   #error "TPF_HAVE_SAWNC and TPF_NO_SAWNC"
   #error "cannot both be defined"
   #error "See src/os/tpf/os.h for instructions"
#endif

/* if the compiler defined errno then undefine it
   and pick up the correct definition from errno.h */
#if defined(errno) && !defined(__errnoh)
#undef errno
#include <errno.h>
#endif

/* If APAR PJ27277 (which shipped on PUT13) has been applied */
/* then we want to #define TPF_FORK_EXTENDED so Perl CGIs will work. */
/* Rather than hardcoding it we'll check for "environ" in stdlib.h, */
/* which was also added by PJ27277. */
#include <stdlib.h>
#if defined(environ) && !defined(TPF_FORK_EXTENDED)
#define TPF_FORK_EXTENDED
#endif

#include <sysapi.h>  
#include "ap_config.h"

#define WUNTRACED 0 /* TPF's waitpid() doesn't support WUNTRACED */

/* TPF_ACCEPT_SECS_TO_BLOCK is the number of seconds to block while
   waiting to accept a new request in the ap_accept/tpf_accept function */
#ifndef TPF_ACCEPT_SECS_TO_BLOCK
#define TPF_ACCEPT_SECS_TO_BLOCK 1
#endif

#ifdef HAVE_ISNAN
#undef HAVE_ISNAN
#endif

#ifdef HAVE_ISINF
#undef HAVE_ISINF
#endif

#if !defined(INLINE) && defined(USE_GNU_INLINE)
/* Compiler supports inline, so include the inlineable functions as
 * part of the header
 */
#define INLINE extern ap_inline
#include "os-inline.c"
#endif

#ifndef INLINE
/* Compiler does not support inline, so prototype the inlineable functions
 * as normal
 */
extern int ap_os_is_path_absolute(const char *f);
#endif

/* Other ap_os_ routines not used by this platform */

#define ap_os_is_filename_valid(f)          (1)
#define ap_os_kill(pid, sig)                kill(pid, sig)

#include <strings.h>
#ifndef __strings_h

#define FD_SETSIZE    2048 
 
typedef long fd_mask;

#define NBBY    8    /* number of bits in a byte */
#define NFDBITS (sizeof(fd_mask) * NBBY)
#define  howmany(x, y)  (((x)+((y)-1))/(y))

typedef struct fd_set { 
        fd_mask fds_bits [howmany(FD_SETSIZE, NFDBITS)];
} fd_set; 

#define FD_CLR(n, p)((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define FD_ISSET(n, p)((p)->fds_bits[(n)/NFDBITS] & (1 <<((n) % NFDBITS)))
#define  FD_ZERO(p)   memset((char *)(p), 0, sizeof(*(p)))
#endif
    
#ifdef FD_SET
#undef FD_SET
#define FD_SET(n, p) (0)
#endif

#define TPF_MUTEX_KEY_SIZE (sizeof(pid_t)*2+1)

/* TPF doesn't have, or need, tzset (it is used in mod_expires.c) */
#define tzset()
 
/* definitions for the file descriptor inheritance table */
#define TPF_FD_LIST_SIZE 4000

enum FILE_TYPE { PIPE_OUT = 1, PIPE_IN, PIPE_ERR };

typedef struct tpf_fd_item {
    int            fd;
    enum FILE_TYPE file_type;
    char           *fname;
}TPF_FD_ITEM;

typedef struct tpf_fd_list {
    void           *next_avail_byte;
    void           *last_avail_byte;
    unsigned int   nbr_of_items;
    TPF_FD_ITEM    first_item;
}TPF_FD_LIST;

#include <i$netd.h>
typedef struct apache_input {
    void                *scoreboard_heap;   /* scoreboard system heap address */
    int                 slot;               /* child number */
    int                 generation;         /* server generation number */
    int                 listeners[10];
    time_t              restart_time;
    TPF_FD_LIST         *tpf_fds;           /* fd inheritance table ptr */
    void                *shm_static_ptr;    /* shm ptr for static pages */
}APACHE_TPF_INPUT;

typedef union ebw_area {
    INETD_SERVER_INPUT parent;
    APACHE_TPF_INPUT   child;
}EBW_AREA;
 
extern void *tpf_shm_static_ptr;            /* mod_tpf_shm_static */
#define TPF_SHM_STATIC_SIZE 200000
#define MMAP_SEGMENT_SIZE 32767             /* writev can handle 32767 */
#define _SYS_UIO_H_                         /* writev */

typedef struct tpf_fork_child {
     char  *filename;
     enum { FORK_NAME = 1, FORK_FILE = 2 } prog_type;
     void  *subprocess_env;
}TPF_FORK_CHILD;

int tpf_accept(int sockfd, struct sockaddr *peer, int *paddrlen);
extern int tpf_child;

struct server_rec;
pid_t os_fork(struct server_rec *s, int slot);
void ap_tpf_zinet_checks(int standalone,
                         const char *servername,
                         struct server_rec *s);
int os_check_server(char *server);
void show_os_specific_compile_settings(void);
char *getpass(const char *prompt);
int killpg(pid_t pgrp, int sig);
extern char *ap_server_argv0;
#include <signal.h>
#ifndef SIGPIPE
#define SIGPIPE 14
#endif
#ifdef NSIG
#undef NSIG
#endif
void ap_tpf_save_argv(int argc, char **argv);

/* various #defines for ServerType/ZINET model checks: */

#define TPF_SERVERTYPE_MSG \
        "ServerType inetd is not supported on TPF" \
        " -- Apache startup aborted"

#ifdef INETD_IDCF_MODEL_DAEMON
#define TPF_STANDALONE_CONFLICT_MSG \
        "ServerType standalone requires ZINET model DAEMON or NOLISTEN" \
        " -- Apache startup aborted"
#define TPF_NOLISTEN_WARNING \
        "ZINET model DAEMON is preferred over model NOLISTEN"
#else
#define INETD_IDCF_MODEL_DAEMON -1
#define TPF_STANDALONE_CONFLICT_MSG \
        "ServerType standalone requires ZINET model NOLISTEN" \
        " -- Apache startup aborted"
#endif

#define TPF_UNABLE_TO_DETERMINE_ZINET_MODEL \
        "Unable to determine ZINET model: inetd_getServer(\"%s\") " \
        "call failed -- Apache startup aborted"

#endif /*! APACHE_OS_H*/
@


1.8
log
@merge
@
text
@@


1.7
log
@merge apache 1.3.27 and mod_ssl 2.8.11
@
text
@d75 8
a161 1
    int                 scoreboard_fd;      /* scoreboard file descriptor */
a198 1
extern int scoreboard_fd;
@


1.6
log
@merge
@
text
@d128 1
a128 1
#define  RESOURCE_KEY ((void*) 0xC1C2C1C3)
d222 2
a223 2
        "Unable to determine ZINET model: inetd_getServer call failed" \
        " -- Apache startup aborted"
@


1.5
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@d79 4
d200 1
@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d4 6
d12 44
d63 8
a70 5
/*
 * This file is included in all Apache source code. It contains definitions
 * of facilities available on _this_ operating system (HAVE_* macros),
 * and prototypes of OS specific functions defined in os.c or os-inline.c
 */
d72 1
d75 4
a98 5
/* Sorry if this is ugly, but the include order doesn't allow me
 * to use request_rec here... */
struct request_rec;
extern int ap_checkconv(struct request_rec *r);
 
d184 1
@


1.3
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d14 1
a14 1
 * This file in included in all Apache source code. It contains definitions
d127 3
d132 1
d142 24
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d6 3
a8 1
#ifdef errno
d10 1
d75 18
d95 1
a95 2
struct apache_input {
    INETD_SERVER_INPUT  inetd_server;
d102 13
a114 3
};

typedef struct apache_input APACHE_TPF_INPUT;
@


1.1
log
@Apache 1.3.4
@
text
@a22 3

INLINE int ap_os_is_path_absolute(const char *file);

d30 1
a30 1
extern int ap_os_is_path_absolute(const char *file);
d36 1
d43 2
a44 3
#ifdef FD_SETSIZE
#undef FD_SETSIZE 
#endif
d48 1
a48 15
#ifdef __FD_MASK
#undef __FD_MASK 
#endif

typedef long __FD_MASK;

#ifdef __NBBY
#undef __NBBY 
#endif

#define __NBBY    8    /* number of bits in a byte */

#ifdef __NFDBITS
#undef __NFDBITS 
#endif
d50 3
a52 1
#define __NFDBITS (sizeof(__FD_MASK) * __NBBY)
a53 4
#ifndef __howmany
#define  __howmany(x, y)  (((x)+((y)-1))/(y))
#endif 
 
d55 1
a55 1
        __FD_MASK fds_bits [__howmany(FD_SETSIZE, __NFDBITS)]; 
d58 2
a59 6
#define  FD_SET(n, p)((p)->fds_bits[(n)/__NFDBITS] |= (1 <<((n) % __NFDBITS)))

#define  FD_CLR(n, p)((p)->fds_bits[(n)/__NFDBITS] &= ~(1 << ((n) % __NFDBITS)))

#define  FD_ISSET(n, p)((p)->fds_bits[(n)/__NFDBITS] & (1 <<((n) % __NFDBITS)))

d61 1
d63 4
d68 1
a68 3
#define  SIGPIPE  13
#define  SIGQUIT  24
#define  SO_KEEPALIVE  0x0008
d73 35
a107 18
#include <stdarg.h>
#undef va_list
#undef va_start
#undef va_arg
#undef va_end

typedef char *va_list;

#define __va_promote(type) (((sizeof(type) + sizeof(int) - 1) \
                           / sizeof(int)) * sizeof(int))

#define va_start(ap, last) (ap = ((char *)&(last) + __va_promote(last)))

#define va_arg(ap, type) ((type *)(ap += sizeof(type) < sizeof(int) ? \
                         (abort(), 0) : sizeof(type)))[-1]

#define va_end(ap)

@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@a3 6
/*
 * This file is included in all Apache source code. It contains definitions
 * of facilities available on _this_ operating system (HAVE_* macros),
 * and prototypes of OS specific functions defined in os.c or os-inline.c
 */

d6 1
a6 47
/************************************************************************
 *  PJ26895 provides support for non_socket_select.
 *  You can determine if this apar is applied to your system by looking
 *  at i$pwbl.h.  If the function non_socket_select is defined,
 *  then add #define TPF_HAVE_NONSOCKET_SELECT
 *  else add #define TPF_NO_NONSOCKET_SELECT
 *
 *  One of these two #defines is required and must be added here in os.h
 *  before the following check.
 ************************************************************************/

#if !defined(TPF_HAVE_NONSOCKET_SELECT) && !defined(TPF_NO_NONSOCKET_SELECT)
   #error "You must define whether your system supports non_socket_select()"
   #error "See src/os/tpf/os.h for instructions"
#endif

#if defined(TPF_HAVE_NONSOCKET_SELECT) && defined(TPF_NO_NONSOCKET_SELECT)
   #error "TPF_HAVE_NONSOCKET_SELECT and TPF_NO_NONSOCKET_SELECT"
   #error "cannot both be defined"
   #error "See src/os/tpf/os.h for instructions"
#endif

/************************************************************************
 *  PJ27387 or PJ26188 provides support for tpf_sawnc.
 *  You can determine if this apar is applied to your system by looking at
 *  tpfapi.h or i$fsdd.h.  If the function tpf_sawnc is defined,
 *  then add #define TPF_HAVE_SAWNC
 *  else add #define TPF_NO_SAWNC
 *
 *  One of these two #defines is required and must be added here in os.h
 *  before the following check.
 ************************************************************************/

#if !defined(TPF_HAVE_SAWNC) && !defined(TPF_NO_SAWNC)
   #error "You must define whether your system supports tpf_sawnc()"
   #error "See src/os/tpf/os.h for instructions"
#endif

#if defined(TPF_HAVE_SAWNC) && defined(TPF_NO_SAWNC)
   #error "TPF_HAVE_SAWNC and TPF_NO_SAWNC"
   #error "cannot both be defined"
   #error "See src/os/tpf/os.h for instructions"
#endif

/* if the compiler defined errno then undefine it
   and pick up the correct definition from errno.h */
#if defined(errno) && !defined(__errnoh)
a7 1
#include <errno.h>
d10 5
a14 8
/* If APAR PJ27277 (which shipped on PUT13) has been applied */
/* then we want to #define TPF_FORK_EXTENDED so Perl CGIs will work. */
/* Rather than hardcoding it we'll check for "environ" in stdlib.h, */
/* which was also added by PJ27277. */
#include <stdlib.h>
#if defined(environ) && !defined(TPF_FORK_EXTENDED)
#define TPF_FORK_EXTENDED
#endif
a15 1
#include <sysapi.h>  
a17 8
#ifdef HAVE_ISNAN
#undef HAVE_ISNAN
#endif

#ifdef HAVE_ISINF
#undef HAVE_ISINF
#endif

d23 3
d33 1
a33 1
extern int ap_os_is_path_absolute(const char *f);
a38 1
#define ap_os_kill(pid, sig)                kill(pid, sig)
d40 8
a47 2
#include <strings.h>
#ifndef __strings_h
d51 3
a53 1
typedef long fd_mask;
d55 1
a55 3
#define NBBY    8    /* number of bits in a byte */
#define NFDBITS (sizeof(fd_mask) * NBBY)
#define  howmany(x, y)  (((x)+((y)-1))/(y))
d57 16
d74 1
a74 1
        fd_mask fds_bits [howmany(FD_SETSIZE, NFDBITS)];
d77 6
a82 2
#define FD_CLR(n, p)((p)->fds_bits[(n)/NFDBITS] &= ~(1 << ((n) % NFDBITS)))
#define FD_ISSET(n, p)((p)->fds_bits[(n)/NFDBITS] & (1 <<((n) % NFDBITS)))
a83 1
#endif
a84 4
#ifdef FD_SET
#undef FD_SET
#define FD_SET(n, p) (0)
#endif
d86 3
a88 1
#define  RESOURCE_KEY ((void*) 0xC1C2C1C3)
a91 3
 
/* definitions for the file descriptor inheritance table */
#define TPF_FD_LIST_SIZE 4000
d93 15
a107 1
enum FILE_TYPE { PIPE_OUT = 1, PIPE_IN, PIPE_ERR };
d109 1
a109 86
typedef struct tpf_fd_item {
    int            fd;
    enum FILE_TYPE file_type;
    char           *fname;
}TPF_FD_ITEM;

typedef struct tpf_fd_list {
    void           *next_avail_byte;
    void           *last_avail_byte;
    unsigned int   nbr_of_items;
    TPF_FD_ITEM    first_item;
}TPF_FD_LIST;

#include <i$netd.h>
typedef struct apache_input {
    void                *scoreboard_heap;   /* scoreboard system heap address */
    int                 scoreboard_fd;      /* scoreboard file descriptor */
    int                 slot;               /* child number */
    int                 generation;         /* server generation number */
    int                 listeners[10];
    time_t              restart_time;
    TPF_FD_LIST         *tpf_fds;           /* fd inheritance table ptr */
    void                *shm_static_ptr;    /* shm ptr for static pages */
}APACHE_TPF_INPUT;

typedef union ebw_area {
    INETD_SERVER_INPUT parent;
    APACHE_TPF_INPUT   child;
}EBW_AREA;
 
extern void *tpf_shm_static_ptr;            /* mod_tpf_shm_static */
#define TPF_SHM_STATIC_SIZE 200000
#define MMAP_SEGMENT_SIZE 32767             /* writev can handle 32767 */
#define _SYS_UIO_H_                         /* writev */

typedef struct tpf_fork_child {
     char  *filename;
     enum { FORK_NAME = 1, FORK_FILE = 2 } prog_type;
     void  *subprocess_env;
}TPF_FORK_CHILD;

int tpf_accept(int sockfd, struct sockaddr *peer, int *paddrlen);
extern int tpf_child;

struct server_rec;
pid_t os_fork(struct server_rec *s, int slot);
void ap_tpf_zinet_checks(int standalone,
                         const char *servername,
                         struct server_rec *s);
int os_check_server(char *server);
void show_os_specific_compile_settings(void);
char *getpass(const char *prompt);
int killpg(pid_t pgrp, int sig);
extern char *ap_server_argv0;
extern int scoreboard_fd;
#include <signal.h>
#ifndef SIGPIPE
#define SIGPIPE 14
#endif
#ifdef NSIG
#undef NSIG
#endif
void ap_tpf_save_argv(int argc, char **argv);

/* various #defines for ServerType/ZINET model checks: */

#define TPF_SERVERTYPE_MSG \
        "ServerType inetd is not supported on TPF" \
        " -- Apache startup aborted"

#ifdef INETD_IDCF_MODEL_DAEMON
#define TPF_STANDALONE_CONFLICT_MSG \
        "ServerType standalone requires ZINET model DAEMON or NOLISTEN" \
        " -- Apache startup aborted"
#define TPF_NOLISTEN_WARNING \
        "ZINET model DAEMON is preferred over model NOLISTEN"
#else
#define INETD_IDCF_MODEL_DAEMON -1
#define TPF_STANDALONE_CONFLICT_MSG \
        "ServerType standalone requires ZINET model NOLISTEN" \
        " -- Apache startup aborted"
#endif

#define TPF_UNABLE_TO_DETERMINE_ZINET_MODEL \
        "Unable to determine ZINET model: inetd_getServer call failed" \
        " -- Apache startup aborted"
@


1.1.1.2
log
@import apache 1.3.27 and mod_ssl 2.8.11
@
text
@d128 1
a128 1
#define TPF_MUTEX_KEY_SIZE (sizeof(pid_t)*2+1)
d222 2
a223 2
        "Unable to determine ZINET model: inetd_getServer(\"%s\") " \
        "call failed -- Apache startup aborted"
@


1.1.1.3
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@a74 8
#define WUNTRACED 0 /* TPF's waitpid() doesn't support WUNTRACED */

/* TPF_ACCEPT_SECS_TO_BLOCK is the number of seconds to block while
   waiting to accept a new request in the ap_accept/tpf_accept function */
#ifndef TPF_ACCEPT_SECS_TO_BLOCK
#define TPF_ACCEPT_SECS_TO_BLOCK 1
#endif

d154 1
d192 1
@


