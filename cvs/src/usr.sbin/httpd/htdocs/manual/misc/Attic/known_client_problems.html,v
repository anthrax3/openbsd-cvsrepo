head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.4
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2005.08.01.19.40.33;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.08.21.13.11.32;	author henning;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.01;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.36;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.36;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.15;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.28.06;	author henning;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.21.12.53.31;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache HTTP Server Project</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Known Problems in Clients</h1>

    <p>Over time the Apache Group has discovered or been notified
    of problems with various clients which we have had to work
    around, or explain. This document describes these problems and
    the workarounds available. It's not arranged in any particular
    order. Some familiarity with the standards is assumed, but not
    necessary.</p>

    <p>For brevity, <em>Navigator</em> will refer to Netscape's
    Navigator product (which in later versions was renamed
    "Communicator" and various other names), and <em>MSIE</em> will
    refer to Microsoft's Internet Explorer product. All trademarks
    and copyrights belong to their respective companies. We welcome
    input from the various client authors to correct
    inconsistencies in this paper, or to provide us with exact
    version numbers where things are broken/fixed.</p>

    <p>For reference, <a
    href="ftp://ds.internic.net/rfc/rfc1945.txt">RFC1945</a>
    defines HTTP/1.0, and <a
    href="ftp://ds.internic.net/rfc/rfc2068.txt">RFC2068</a>
    defines HTTP/1.1. Apache as of version 1.2 is an HTTP/1.1
    server (with an optional HTTP/1.0 proxy).</p>

    <p>Various of these workarounds are triggered by environment
    variables. The admin typically controls which are set, and for
    which clients, by using <a
    href="../mod/mod_setenvif.html">mod_setenvif</a>. Unless
    otherwise noted all of these workarounds exist in versions 1.2
    and later.</p>

    <h3><a id="trailing-crlf" name="trailing-crlf">Trailing CRLF on
    POSTs</a></h3>

    <p>This is a legacy issue. The CERN webserver required
    <code>POST</code> data to have an extra <code>CRLF</code>
    following it. Thus many clients send an extra <code>CRLF</code>
    that is not included in the <code>Content-Length</code> of the
    request. Apache works around this problem by eating any empty
    lines which appear before a request.</p>

    <h3><a id="broken-keepalive" name="broken-keepalive">Broken
    keepalive</a></h3>

    <p>Various clients have had broken implementations of
    <em>keepalive</em> (persistent connections). In particular the
    Windows versions of Navigator 2.0 get very confused when the
    server times out an idle connection. The workaround is present
    in the default config files:</p>

    <blockquote>
      <code>BrowserMatch Mozilla/2 nokeepalive</code>
    </blockquote>
    Note that this matches some earlier versions of MSIE, which
    began the practice of calling themselves <em>Mozilla</em> in
    their user-agent strings just like Navigator. 

    <p>MSIE 4.0b2, which claims to support HTTP/1.1, does not
    properly support keepalive when it is used on 301 or 302
    (redirect) responses. Unfortunately Apache's
    <code>nokeepalive</code> code prior to 1.2.2 would not work
    with HTTP/1.1 clients. You must apply <a
    href="http://www.apache.org/dist/httpd/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">
    this patch</a> to version 1.2.1. Then add this to your
    config:</p>

    <blockquote>
      <code>BrowserMatch "MSIE 4\.0b2;" nokeepalive</code>
    </blockquote>

    <h3><a id="force-response-1.0"
    name="force-response-1.0">Incorrect interpretation of
    <code>HTTP/1.1</code> in response</a></h3>

    <p>To quote from section 3.1 of RFC1945:</p>

    <blockquote>
      HTTP uses a "&lt;MAJOR&gt;.&lt;MINOR&gt;" numbering scheme to
      indicate versions of the protocol. The protocol versioning
      policy is intended to allow the sender to indicate the format
      of a message and its capacity for understanding further HTTP
      communication, rather than the features obtained via that
      communication.
    </blockquote>
    Since Apache is an HTTP/1.1 server, it indicates so as part of
    its response. Many client authors mistakenly treat this part of
    the response as an indication of the protocol that the response
    is in, and then refuse to accept the response. 

    <p>The first major indication of this problem was with AOL's
    proxy servers. When Apache 1.2 went into beta it was the first
    wide-spread HTTP/1.1 server. After some discussion, AOL fixed
    their proxies. In anticipation of similar problems, the
    <code>force-response-1.0</code> environment variable was added
    to Apache. When present Apache will indicate "HTTP/1.0" in
    response to an HTTP/1.0 client, but will not in any other way
    change the response.</p>

    <p>The pre-1.1 Java Development Kit (JDK) that is used in many
    clients (including Navigator 3.x and MSIE 3.x) exhibits this
    problem. As do some of the early pre-releases of the 1.1 JDK.
    We think it is fixed in the 1.1 JDK release. In any event the
    workaround:</p>

    <blockquote>
      <code>BrowserMatch Java/1.0 force-response-1.0<br />
       BrowserMatch JDK/1.0 force-response-1.0</code>
    </blockquote>

    <p>RealPlayer 4.0 from Progressive Networks also exhibits this
    problem. However they have fixed it in version 4.01 of the
    player, but version 4.01 uses the same <code>User-Agent</code>
    as version 4.0. The workaround is still:</p>

    <blockquote>
      <code>BrowserMatch "RealPlayer 4.0" force-response-1.0</code>
    </blockquote>

    <h3><a id="msie4.0b2" name="msie4.0b2">Requests use HTTP/1.1
    but responses must be in HTTP/1.0</a></h3>

    <p>MSIE 4.0b2 has this problem. Its Java VM makes requests in
    HTTP/1.1 format but the responses must be in HTTP/1.0 format
    (in particular, it does not understand <em>chunked</em>
    responses). The workaround is to fool Apache into believing the
    request came in HTTP/1.0 format.</p>

    <blockquote>
      <code>BrowserMatch "MSIE 4\.0b2;" downgrade-1.0
      force-response-1.0</code>
    </blockquote>
    This workaround is available in 1.2.2, and in a <a
    href="http://www.apache.org/dist/httpd/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">
    patch</a> against 1.2.1. 

    <h3><a id="257th-byte" name="257th-byte">Boundary problems with
    header parsing</a></h3>

    <p>All versions of Navigator from 2.0 through 4.0b2 (and
    possibly later) have a problem if the trailing CRLF of the
    response header starts at offset 256, 257 or 258 of the
    response. A BrowserMatch for this would match on nearly every
    hit, so the workaround is enabled automatically on all
    responses. The workaround implemented detects when this
    condition would occur in a response and adds extra padding to
    the header to push the trailing CRLF past offset 258 of the
    response.</p>

    <h3><a id="boundary-string" name="boundary-string">Multipart
    responses and Quoted Boundary Strings</a></h3>

    <p>On multipart responses some clients will not accept quotes
    (") around the boundary string. The MIME standard recommends
    that such quotes be used. But the clients were probably written
    based on one of the examples in RFC2068, which does not include
    quotes. Apache does not include quotes on its boundary strings
    to workaround this problem.</p>

    <h3><a id="byterange-requests"
    name="byterange-requests">Byterange requests</a></h3>

    <p>A byterange request is used when the client wishes to
    retrieve a portion of an object, not necessarily the entire
    object. There was a very old draft which included these
    byteranges in the URL. Old clients such as Navigator 2.0b1 and
    MSIE 3.0 for the MAC exhibit this behavior, and it will appear
    in the servers' access logs as (failed) attempts to retrieve a
    URL with a trailing ";xxx-yyy". Apache does not attempt to
    implement this at all.</p>

    <p>A subsequent draft of this standard defines a header
    <code>Request-Range</code>, and a response type
    <code>multipart/x-byteranges</code>. The HTTP/1.1 standard
    includes this draft with a few fixes, and it defines the header
    <code>Range</code> and type
    <code>multipart/byteranges</code>.</p>

    <p>Navigator (versions 2 and 3) sends both <code>Range</code>
    and <code>Request-Range</code> headers (with the same value),
    but does not accept a <code>multipart/byteranges</code>
    response. The response must be
    <code>multipart/x-byteranges</code>. As a workaround, if Apache
    receives a <code>Request-Range</code> header it considers it
    "higher priority" than a <code>Range</code> header and in
    response uses <code>multipart/x-byteranges</code>.</p>

    <p>The Adobe Acrobat Reader plugin makes extensive use of
    byteranges and prior to version 3.01 supports only the
    <code>multipart/x-byterange</code> response. Unfortunately
    there is no clue that it is the plugin making the request. If
    the plugin is used with Navigator, the above workaround works
    fine. But if the plugin is used with MSIE 3 (on Windows) the
    workaround won't work because MSIE 3 doesn't give the
    <code>Range-Request</code> clue that Navigator does. To
    workaround this, Apache special cases "MSIE 3" in the
    <code>User-Agent</code> and serves
    <code>multipart/x-byteranges</code>. Note that the necessity
    for this with MSIE 3 is actually due to the Acrobat plugin, not
    due to the browser.</p>

    <p>Netscape Communicator appears to not issue the non-standard
    <code>Request-Range</code> header. When an Acrobat plugin prior
    to version 3.01 is used with it, it will not properly
    understand byteranges. The user must upgrade their Acrobat
    reader to 3.01.</p>

    <h3><a id="cookie-merge"
    name="cookie-merge"><code>Set-Cookie</code> header is
    unmergeable</a></h3>

    <p>The HTTP specifications say that it is legal to merge
    headers with duplicate names into one (separated by commas).
    Some browsers that support Cookies don't like merged headers
    and prefer that each <code>Set-Cookie</code> header is sent
    separately. When parsing the headers returned by a CGI, Apache
    will explicitly avoid merging any <code>Set-Cookie</code>
    headers.</p>

    <h3><a id="gif89-expires"
    name="gif89-expires"><code>Expires</code> headers and GIF89A
    animations</a></h3>

    <p>Navigator versions 2 through 4 will erroneously re-request
    GIF89A animations on each loop of the animation if the first
    response included an <code>Expires</code> header. This happens
    regardless of how far in the future the expiry time is set.
    There is no workaround supplied with Apache, however there are
    hacks for <a
    href="http://arctic.org/~dean/patches/apache-1.2-gif89-expires-hack.patch">
    1.2</a> and for <a
    href="http://arctic.org/~dean/patches/apache-1.3-gif89-expires-hack.patch">
    1.3</a>.</p>

    <h3><a id="no-content-length"
    name="no-content-length"><code>POST</code> without
    <code>Content-Length</code></a></h3>

    <p>In certain situations Navigator 3.01 through 3.03 appear to
    incorrectly issue a POST without the request body. There is no
    known workaround. It has been fixed in Navigator 3.04,
    Netscapes provides some <a
    href="http://help.netscape.com/kb/client/971014-42.html">information</a>.
    There's also <a
    href="http://arctic.org/~dean/apache/no-content-length/">
    some information</a> about the actual problem.</p>

    <h3><a id="jdk-12-bugs" name="jdk-12-bugs">JDK 1.2 betas lose
    parts of responses.</a></h3>

    <p>The http client in the JDK1.2beta2 and beta3 will throw away
    the first part of the response body when both the headers and
    the first part of the body are sent in the same network packet
    AND keep-alive's are being used. If either condition is not met
    then it works fine.</p>

    <p>See also Bug-ID's 4124329 and 4125538 at the java developer
    connection.</p>

    <p>If you are seeing this bug yourself, you can add the
    following BrowserMatch directive to work around it:</p>

    <blockquote>
      <code>BrowserMatch "Java1\.2beta[23]" nokeepalive</code>
    </blockquote>

    <p>We don't advocate this though since bending over backwards
    for beta software is usually not a good idea; ideally it gets
    fixed, new betas or a final release comes out, and no one uses
    the broken old software anymore. In theory.</p>

    <h3><a id="content-type-persistence"
    name="content-type-persistence"><code>Content-Type</code>
    change is not noticed after reload</a></h3>

    <p>Navigator (all versions?) will cache the
    <code>content-type</code> for an object "forever". Using reload
    or shift-reload will not cause Navigator to notice a
    <code>content-type</code> change. The only work-around is for
    the user to flush their caches (memory and disk). By way of an
    example, some folks may be using an old <code>mime.types</code>
    file which does not map <code>.htm</code> to
    <code>text/html</code>, in this case Apache will default to
    sending <code>text/plain</code>. If the user requests the page
    and it is served as <code>text/plain</code>. After the admin
    fixes the server, the user will have to flush their caches
    before the object will be shown with the correct
    <code>text/html</code> type.</p>

    <h3><a id="msie-cookie-y2k" name="msie-cookie-y2k">MSIE Cookie
    problem with expiry date in the year 2000</a></h3>

    <p>MSIE versions 3.00 and 3.02 (without the Y2K patch) do not
    handle cookie expiry dates in the year 2000 properly. Years
    after 2000 and before 2000 work fine. This is fixed in IE4.01
    service pack 1, and in the Y2K patch for IE3.02. Users should
    avoid using expiry dates in the year 2000.</p>

    <h3><a id="lynx-negotiate-trans"
    name="lynx-negotiate-trans">Lynx incorrectly asking for
    transparent content negotiation</a></h3>

    <p>The Lynx browser versions 2.7 and 2.8 send a "negotiate:
    trans" header in their requests, which is an indication the
    browser supports transparent content negotiation (TCN). However
    the browser does not support TCN. As of version 1.3.4, Apache
    supports TCN, and this causes problems with these versions of
    Lynx. As a workaround future versions of Apache will ignore
    this header when sent by the Lynx client.</p>

    <h3><a id="ie40-vary" name="ie40-vary">MSIE 4.0 mishandles Vary
    response header</a></h3>

    <p>MSIE 4.0 does not handle a Vary header properly. The Vary
    header is generated by mod_rewrite in apache 1.3. The result is
    an error from MSIE saying it cannot download the requested
    file. There are more details in <a
    href="http://bugs.apache.org/index/full/4118">PR#4118</a>.</p>

    <p>A workaround is to add the following to your server's
    configuration files:</p>
<pre>
    BrowserMatch "MSIE 4\.0" force-no-vary
</pre>

    <p>(This workaround is only available with releases
    <strong>after</strong> 1.3.6 of the Apache Web server.)</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.5
log
@from tamas tevesz:
==> two more historic modules have gone away
@
text
@@


1.4
log
@merge
@
text
@d49 1
a49 1
    href="../mod/mod_browser.html">mod_browser</a>. Unless
@


1.3
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d250 1
a250 1
    href="http://www.arctic.org/~dgaudet/patches/apache-1.2-gif89-expires-hack.patch">
d252 1
a252 1
    href="http://www.arctic.org/~dgaudet/patches/apache-1.3-gif89-expires-hack.patch">
d265 1
a265 1
    href="http://www.arctic.org/~dgaudet/apache/no-content-length/">
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d1 342
a342 299
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache HTTP Server Project</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Known Problems in Clients</H1>

<P>Over time the Apache Group has discovered or been notified of problems
with various clients which we have had to work around, or explain.
This document describes these problems and the workarounds available.
It's not arranged in any particular order.  Some familiarity with the
standards is assumed, but not necessary.

<P>For brevity, <EM>Navigator</EM> will refer to Netscape's Navigator
product (which in later versions was renamed "Communicator" and
various other names), and <EM>MSIE</EM> will refer to Microsoft's
Internet Explorer product.  All trademarks and copyrights belong to
their respective companies.  We welcome input from the various client
authors to correct inconsistencies in this paper, or to provide us with
exact version numbers where things are broken/fixed.

<P>For reference,
<A HREF="ftp://ds.internic.net/rfc/rfc1945.txt">RFC1945</A>
defines HTTP/1.0, and
<A HREF="ftp://ds.internic.net/rfc/rfc2068.txt">RFC2068</A>
defines HTTP/1.1.  Apache as of version 1.2 is an HTTP/1.1 server (with an 
optional HTTP/1.0 proxy).

<P>Various of these workarounds are triggered by environment variables.
The admin typically controls which are set, and for which clients, by using 
<A HREF="../mod/mod_browser.html">mod_browser</A>.  Unless otherwise
noted all of these workarounds exist in versions 1.2 and later.

<H3><A NAME="trailing-crlf">Trailing CRLF on POSTs</A></H3>

<P>This is a legacy issue.  The CERN webserver required <CODE>POST</CODE>
data to have an extra <CODE>CRLF</CODE> following it.  Thus many
clients send an extra <CODE>CRLF</CODE> that
is not included in the <CODE>Content-Length</CODE> of the request.
Apache works around this problem by eating any empty lines which
appear before a request.

<H3><A NAME="broken-keepalive">Broken keepalive</A></H3>

<P>Various clients have had broken implementations of <EM>keepalive</EM>
(persistent connections).  In particular the Windows versions of
Navigator 2.0 get very confused when the server times out an
idle connection.  The workaround is present in the default config files:
<BLOCKQUOTE><CODE>
BrowserMatch Mozilla/2 nokeepalive
</CODE></BLOCKQUOTE>
Note that this matches some earlier versions of MSIE, which began the
practice of calling themselves <EM>Mozilla</EM> in their user-agent
strings just like Navigator.

<P>MSIE 4.0b2, which claims to support HTTP/1.1, does not properly
support keepalive when it is used on 301 or 302 (redirect)
responses.  Unfortunately Apache's <CODE>nokeepalive</CODE> code
prior to 1.2.2 would not work with HTTP/1.1 clients.  You must apply
<A
HREF="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch"
>this patch</A> to version 1.2.1.  Then add this to your config:
<BLOCKQUOTE><CODE>
BrowserMatch "MSIE 4\.0b2;" nokeepalive
</CODE></BLOCKQUOTE>

<H3><A NAME="force-response-1.0">Incorrect interpretation of
<CODE>HTTP/1.1</CODE> in response</A></H3>

<P>To quote from section 3.1 of RFC1945:
<BLOCKQUOTE>
HTTP uses a "&lt;MAJOR&gt;.&lt;MINOR&gt;" numbering scheme to indicate versions
of the protocol. The protocol versioning policy is intended to allow
the sender to indicate the format of a message and its capacity for
understanding further HTTP communication, rather than the features
obtained via that communication.
</BLOCKQUOTE>
Since Apache is an HTTP/1.1 server, it indicates so as part of its
response.  Many client authors mistakenly treat this part of the response
as an indication of the protocol that the response is in, and then refuse
to accept the response.

<P>The first major indication of this problem was with AOL's proxy servers.
When Apache 1.2 went into beta it was the first wide-spread HTTP/1.1
server.  After some discussion, AOL fixed their proxies.  In
anticipation of similar problems, the <CODE>force-response-1.0</CODE>
environment variable was added to Apache.  When present Apache will
indicate "HTTP/1.0" in response to an HTTP/1.0 client,
but will not in any other way change the response.

<P>The pre-1.1 Java Development Kit (JDK) that is used in many clients
(including Navigator 3.x and MSIE 3.x) exhibits this problem.  As do some
of the early pre-releases of the 1.1 JDK.  We think it is fixed in the
1.1 JDK release.  In any event the workaround:
<BLOCKQUOTE><CODE>
BrowserMatch Java/1.0 force-response-1.0 <BR>
BrowserMatch JDK/1.0 force-response-1.0 
</CODE></BLOCKQUOTE>

<P>RealPlayer 4.0 from Progressive Networks also exhibits this problem.
However they have fixed it in version 4.01 of the player, but version
4.01 uses the same <CODE>User-Agent</CODE> as version 4.0.  The
workaround is still:
<BLOCKQUOTE><CODE>
BrowserMatch "RealPlayer 4.0" force-response-1.0
</CODE></BLOCKQUOTE>

<H3><A NAME="msie4.0b2">Requests use HTTP/1.1 but responses must be
in HTTP/1.0</A></H3>

<P>MSIE 4.0b2 has this problem.  Its Java VM makes requests in HTTP/1.1
format but the responses must be in HTTP/1.0 format (in particular, it
does not understand <EM>chunked</EM> responses).  The workaround
is to fool Apache into believing the request came in HTTP/1.0 format.
<BLOCKQUOTE><CODE>
BrowserMatch "MSIE 4\.0b2;" downgrade-1.0 force-response-1.0
</CODE></BLOCKQUOTE>
This workaround is available in 1.2.2, and in a
<A
HREF="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch"
>patch</A> against 1.2.1.

<H3><A NAME="257th-byte">Boundary problems with header parsing</A></H3>

<P>All versions of Navigator from 2.0 through 4.0b2 (and possibly later)
have a problem if the trailing CRLF of the response header starts at
offset 256, 257 or 258 of the response.  A BrowserMatch for this would
match on nearly every hit, so the workaround is enabled automatically
on all responses.  The workaround implemented detects when this condition would
occur in a response and adds extra padding to the header to push the
trailing CRLF past offset 258 of the response.

<H3><A NAME="boundary-string">Multipart responses and Quoted Boundary
Strings</A></H3>

<P>On multipart responses some clients will not accept quotes (")
around the boundary string.  The MIME standard recommends that
such quotes be used.  But the clients were probably written based
on one of the examples in RFC2068, which does not include quotes.
Apache does not include quotes on its boundary strings to workaround
this problem.

<H3><A NAME="byterange-requests">Byterange requests</A></H3>

<P>A byterange request is used when the client wishes to retrieve a
portion of an object, not necessarily the entire object.  There
was a very old draft which included these byteranges in the URL.
Old clients such as Navigator 2.0b1 and MSIE 3.0 for the MAC
exhibit this behaviour, and
it will appear in the servers' access logs as (failed) attempts to
retrieve a URL with a trailing ";xxx-yyy".  Apache does not attempt
to implement this at all.

<P>A subsequent draft of this standard defines a header
<CODE>Request-Range</CODE>, and a response type
<CODE>multipart/x-byteranges</CODE>.  The HTTP/1.1 standard includes
this draft with a few fixes, and it defines the header
<CODE>Range</CODE> and type <CODE>multipart/byteranges</CODE>.

<P>Navigator (versions 2 and 3) sends both <CODE>Range</CODE> and
<CODE>Request-Range</CODE> headers (with the same value), but does not
accept a <CODE>multipart/byteranges</CODE> response.  The response must
be <CODE>multipart/x-byteranges</CODE>.  As a workaround, if Apache
receives a <CODE>Request-Range</CODE> header it considers it "higher
priority" than a <CODE>Range</CODE> header and in response uses
<CODE>multipart/x-byteranges</CODE>.

<P>The Adobe Acrobat Reader plugin makes extensive use of byteranges and
prior to version 3.01 supports only the <CODE>multipart/x-byterange</CODE>
response.  Unfortunately there is no clue that it is the plugin
making the request.  If the plugin is used with Navigator, the above
workaround works fine.  But if the plugin is used with MSIE 3 (on
Windows) the workaround won't work because MSIE 3 doesn't give the
<CODE>Range-Request</CODE> clue that Navigator does.  To workaround this,
Apache special cases "MSIE 3" in the <CODE>User-Agent</CODE> and serves
<CODE>multipart/x-byteranges</CODE>.  Note that the necessity for this
with MSIE 3 is actually due to the Acrobat plugin, not due to the browser.

<P>Netscape Communicator appears to not issue the non-standard
<CODE>Request-Range</CODE> header.  When an Acrobat plugin prior to
version 3.01 is used with it, it will not properly understand byteranges.
The user must upgrade their Acrobat reader to 3.01.

<H3><A NAME="cookie-merge"><CODE>Set-Cookie</CODE> header is
unmergeable</A></H3>

<P>The HTTP specifications say that it is legal to merge headers with
duplicate names into one (separated by commas).  Some browsers
that support Cookies don't like merged headers and prefer that each
<CODE>Set-Cookie</CODE> header is sent separately.  When parsing the
headers returned by a CGI, Apache will explicitly avoid merging any
<CODE>Set-Cookie</CODE> headers.

<H3><A NAME="gif89-expires"><CODE>Expires</CODE> headers and GIF89A
animations</A></H3>

<P>Navigator versions 2 through 4 will erroneously re-request
GIF89A animations on each loop of the animation if the first
response included an <CODE>Expires</CODE> header.  This happens
regardless of how far in the future the expiry time is set.  There
is no workaround supplied with Apache, however there are hacks for <A
HREF="http://www.arctic.org/~dgaudet/patches/apache-1.2-gif89-expires-hack.patch">1.2</A>
and for <A
HREF="http://www.arctic.org/~dgaudet/patches/apache-1.3-gif89-expires-hack.patch">1.3</A>.

<H3><A NAME="no-content-length"><CODE>POST</CODE> without
<CODE>Content-Length</CODE></A></H3>

<P>In certain situations Navigator 3.01 through 3.03 appear to incorrectly
issue a POST without the request body.  There is no
known workaround.  It has been fixed in Navigator 3.04, Netscapes
provides some
<A HREF="http://help.netscape.com/kb/client/971014-42.html">information</A>.
There's also
<A HREF="http://www.arctic.org/~dgaudet/apache/no-content-length/">
some information</A> about the actual problem.

<H3><A NAME="jdk-12-bugs">JDK 1.2 betas lose parts of responses.</A></H3>

<P>The http client in the JDK1.2beta2 and beta3 will throw away the first part of
the response body when both the headers and the first part of the body are sent
in the same network packet AND keep-alive's are being used. If either condition
is not met then it works fine.

<P>See also Bug-ID's 4124329 and 4125538 at the java developer connection.

<P>If you are seeing this bug yourself, you can add the following BrowserMatch
directive to work around it:

<BLOCKQUOTE><CODE>
BrowserMatch "Java1\.2beta[23]" nokeepalive
</CODE></BLOCKQUOTE>

<P>We don't advocate this though since bending over backwards for beta software
is usually not a good idea; ideally it gets fixed, new betas or a final release
comes out, and no one uses the broken old software anymore.  In theory.

<H3><A NAME="content-type-persistence"><CODE>Content-Type</CODE> change
is not noticed after reload</A></H3>

<P>Navigator (all versions?) will cache the <CODE>content-type</CODE>
for an object "forever".  Using reload or shift-reload will not cause
Navigator to notice a <CODE>content-type</CODE> change.  The only
work-around is for the user to flush their caches (memory and disk).  By
way of an example, some folks may be using an old <CODE>mime.types</CODE>
file which does not map <CODE>.htm</CODE> to <CODE>text/html</CODE>,
in this case Apache will default to sending <CODE>text/plain</CODE>.
If the user requests the page and it is served as <CODE>text/plain</CODE>.
After the admin fixes the server, the user will have to flush their caches
before the object will be shown with the correct <CODE>text/html</CODE>
type.

<h3><a name="msie-cookie-y2k">MSIE Cookie problem with expiry date in
the year 2000</a></h3>

<p>MSIE versions 3.00 and 3.02 (without the Y2K patch) do not handle
cookie expiry dates in the year 2000 properly.  Years after 2000 and
before 2000 work fine.  This is fixed in IE4.01 service pack 1, and in
the Y2K patch for IE3.02.  Users should avoid using expiry dates in the
year 2000.

<h3><a name="lynx-negotiate-trans">Lynx incorrectly asking for transparent
content negotiation</a></h3>

<p>The Lynx browser versions 2.7 and 2.8 send a "negotiate: trans" header
in their requests, which is an indication the browser supports transparent
content negotiation (TCN).  However the browser does not support TCN.
As of version 1.3.4, Apache supports TCN, and this causes problems with
these versions of Lynx.  As a workaround future versions of Apache will
ignore this header when sent by the Lynx client.

<h3><a name="ie40-vary">MSIE 4.0 mishandles Vary response header</a></h3>

<p>MSIE 4.0 does not handle a Vary header properly.  The Vary header is
generated by mod_rewrite in apache 1.3.  The result is an error from MSIE
saying it cannot download the requested file.  There are more details
in <a href="http://bugs.apache.org/index/full/4118">PR#4118</a>.
</P>
<P>
A workaround is to add the following to your server's configuration
files:
</P>
<PRE>
d344 1
a344 12
</PRE>
<P>
(This workaround is only available with releases <STRONG>after</STRONG>
1.3.6 of the Apache Web server.)
</P>


<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d346 7
a352 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
d354 2
a355 2
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d24 13
a36 12
<p>Over time the Apache Group has discovered or been notified of problems
with various clients which we have had to work around.  This document
describes these problems and the workarounds available.  It's not arranged
in any particular order.  Some familiarity with the standards is assumed,
but not necessary.

<p>For brevity, <i>Navigator</i> will refer to Netscape's Navigator
product, and <i>MSIE</i> will refer to Microsoft's Internet Explorer
product.  All trademarks and copyrights belong to their respective
companies.  We welcome input from the various client authors to correct
inconsistencies in this paper, or to provide us with exact version
numbers where things are broken/fixed.
d38 2
a39 2
<p>For reference,
<a href="ftp://ds.internic.net/rfc/rfc1945.txt">RFC1945</a>
d41 1
a41 1
<a href="ftp://ds.internic.net/rfc/rfc2068.txt">RFC2068</a>
d45 1
a45 1
<p>Various of these workarounds are triggered by environment variables.
d47 1
a47 1
<a href="../mod/mod_browser.html">mod_browser</a>.  Unless otherwise
d50 1
a50 1
<a name="trailing-crlf"><H3>Trailing CRLF on POSTs</H3></a>
d52 4
a55 4
<p>This is a legacy issue.  The CERN webserver required <code>POST</code>
data to have an extra <code>CRLF</code> following it.  Thus many
clients send an extra <code>CRLF</code> that
is not included in the <code>Content-Length</code> of the request.
d59 1
a59 1
<a name="broken-keepalive"><h3>Broken keepalive</h3></a>
d61 1
a61 1
<p>Various clients have had broken implementations of <i>keepalive</i>
d65 1
a65 1
<blockquote><code>
d67 1
a67 1
</code></blockquote>
d69 1
a69 1
practice of calling themselves <i>Mozilla</i> in their user-agent
d72 1
a72 1
<p>MSIE 4.0b2, which claims to support HTTP/1.1, does not properly
d74 1
a74 1
responses.  Unfortunately Apache's <code>nokeepalive</code> code
d76 4
a79 3
<a href="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">this
patch</a> to version 1.2.1.  Then add this to your config:
<blockquote><code>
d81 1
a81 1
</code></blockquote>
d83 2
a84 1
<a name="force-response-1.0"><h3>Incorrect interpretation of <code>HTTP/1.1</code> in response</h3></a>
d86 3
a88 3
<p>To quote from section 3.1 of RFC1945:
<blockquote>
HTTP uses a "<major>.<minor>" numbering scheme to indicate versions
d93 1
a93 1
</blockquote>
d99 1
a99 1
<p>The first major indication of this problem was with AOL's proxy servers.
d102 1
a102 1
anticipation of similar problems, the <code>force-response-1.0</code>
d107 1
a107 1
<p>The pre-1.1 Java Development Kit (JDK) that is used in many clients
d111 2
a112 2
<blockquote><code>
BrowserMatch Java1.0 force-response-1.0 <br>
d114 1
a114 1
</code></blockquote>
d116 1
a116 1
<p>RealPlayer 4.0 from Progressive Networks also exhibits this problem.
d118 1
a118 1
4.01 uses the same <code>User-Agent</code> as version 4.0.  The
d120 1
a120 1
<blockquote><code>
d122 1
a122 1
</code></blockquote>
d124 2
a125 1
<a name="msie4.0b2"><h3>Requests use HTTP/1.1 but responses must be in HTTP/1.0</h3></a>
d127 1
a127 1
<p>MSIE 4.0b2 has this problem.  Its Java VM makes requests in HTTP/1.1
d129 1
a129 1
does not understand <i>chunked</i> responses).  The workaround
d131 1
a131 1
<blockquote><code>
d133 1
a133 1
</code></blockquote>
d135 3
a137 2
<a href="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">patch
</a> against 1.2.1.
d139 1
a139 1
<a name="257th-byte"><h3>Boundary problems with header parsing</h3></a>
d141 1
a141 1
<p>All versions of Navigator from 2.0 through 4.0b2 (and possibly later)
d143 1
a143 1
the 256th or 257th byte of the response.  A BrowserMatch for this would
d145 3
a147 3
on all responses.  The workaround is to detect when this condition would
occur in a response and add extra padding to the header to push the
trailing CRLF past the 257th byte of the response.
d149 2
a150 1
<a name="boundary-string"><h3>Multipart responses and Quoted Boundary Strings</h3></a>
d152 1
a152 1
<p>On multipart responses some clients will not accept quotes (")
d159 1
a159 1
<a name="byterange-requests"><h3>Byterange requests</h3></a>
d161 1
a161 1
<p>A byterange request is used when the client wishes to retrieve a
d170 3
a172 3
<p>A subsequent draft of this standard defines a header
<code>Request-Range</code>, and a response type
<code>multipart/x-byteranges</code>.  The HTTP/1.1 standard includes
d174 1
a174 1
<code>Range</code> and type <code>multipart/byteranges</code>.
d176 7
a182 7
<p>Navigator (versions 2 and 3) sends both <code>Range</code> and
<code>Request-Range</code> headers (with the same value), but does not
accept a <code>multipart/byteranges</code> response.  The response must
be <code>multipart/x-byteranges</code>.  As a workaround, if Apache
receives a <code>Request-Range</code> header it considers it "higher
priority" than a <code>Range</code> header and in response uses
<code>multipart/x-byteranges</code>.
d184 2
a185 2
<p>The Adobe Acrobat Reader plugin makes extensive use of byteranges and
prior to version 3.01 supports only the <code>multipart/x-byterange</code>
d190 3
a192 3
<code>Range-Request</code> clue that Navigator does.  To workaround this,
Apache special cases "MSIE 3" in the <code>User-Agent</code> and serves
<code>multipart/x-byteranges</code>.  Note that the necessity for this
d195 2
a196 2
<p>Netscape Communicator appears to not issue the non-standard
<code>Request-Range</code> header.  When an Acrobat plugin prior to
d200 2
a201 1
<a name="cookie-merge"><h3><code>Set-Cookie</code> header is unmergeable</h3></a>
d203 2
a204 2
<p>The HTTP specifications say that it is legal to merge headers with
duplicate names into one (separated by semicolon).  Some browsers
d206 1
a206 1
<code>Set-Cookie</code> header is sent separately.  When parsing the
d208 99
a306 1
<code>Set-Cookie</code> headers.
d309 1
d311 1
a311 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d24 12
a35 13
<P>Over time the Apache Group has discovered or been notified of problems
with various clients which we have had to work around, or explain.
This document describes these problems and the workarounds available.
It's not arranged in any particular order.  Some familiarity with the
standards is assumed, but not necessary.

<P>For brevity, <EM>Navigator</EM> will refer to Netscape's Navigator
product (which in later versions was renamed "Communicator" and
various other names), and <EM>MSIE</EM> will refer to Microsoft's
Internet Explorer product.  All trademarks and copyrights belong to
their respective companies.  We welcome input from the various client
authors to correct inconsistencies in this paper, or to provide us with
exact version numbers where things are broken/fixed.
d37 2
a38 2
<P>For reference,
<A HREF="ftp://ds.internic.net/rfc/rfc1945.txt">RFC1945</A>
d40 1
a40 1
<A HREF="ftp://ds.internic.net/rfc/rfc2068.txt">RFC2068</A>
d44 1
a44 1
<P>Various of these workarounds are triggered by environment variables.
d46 1
a46 1
<A HREF="../mod/mod_browser.html">mod_browser</A>.  Unless otherwise
d49 1
a49 1
<H3><A NAME="trailing-crlf">Trailing CRLF on POSTs</A></H3>
d51 4
a54 4
<P>This is a legacy issue.  The CERN webserver required <CODE>POST</CODE>
data to have an extra <CODE>CRLF</CODE> following it.  Thus many
clients send an extra <CODE>CRLF</CODE> that
is not included in the <CODE>Content-Length</CODE> of the request.
d58 1
a58 1
<H3><A NAME="broken-keepalive">Broken keepalive</A></H3>
d60 1
a60 1
<P>Various clients have had broken implementations of <EM>keepalive</EM>
d64 1
a64 1
<BLOCKQUOTE><CODE>
d66 1
a66 1
</CODE></BLOCKQUOTE>
d68 1
a68 1
practice of calling themselves <EM>Mozilla</EM> in their user-agent
d71 1
a71 1
<P>MSIE 4.0b2, which claims to support HTTP/1.1, does not properly
d73 1
a73 1
responses.  Unfortunately Apache's <CODE>nokeepalive</CODE> code
d75 3
a77 4
<A
HREF="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch"
>this patch</A> to version 1.2.1.  Then add this to your config:
<BLOCKQUOTE><CODE>
d79 1
a79 1
</CODE></BLOCKQUOTE>
d81 1
a81 2
<H3><A NAME="force-response-1.0">Incorrect interpretation of
<CODE>HTTP/1.1</CODE> in response</A></H3>
d83 3
a85 3
<P>To quote from section 3.1 of RFC1945:
<BLOCKQUOTE>
HTTP uses a "&lt;MAJOR&gt;.&lt;MINOR&gt;" numbering scheme to indicate versions
d90 1
a90 1
</BLOCKQUOTE>
d96 1
a96 1
<P>The first major indication of this problem was with AOL's proxy servers.
d99 1
a99 1
anticipation of similar problems, the <CODE>force-response-1.0</CODE>
d104 1
a104 1
<P>The pre-1.1 Java Development Kit (JDK) that is used in many clients
d108 2
a109 2
<BLOCKQUOTE><CODE>
BrowserMatch Java/1.0 force-response-1.0 <BR>
d111 1
a111 1
</CODE></BLOCKQUOTE>
d113 1
a113 1
<P>RealPlayer 4.0 from Progressive Networks also exhibits this problem.
d115 1
a115 1
4.01 uses the same <CODE>User-Agent</CODE> as version 4.0.  The
d117 1
a117 1
<BLOCKQUOTE><CODE>
d119 1
a119 1
</CODE></BLOCKQUOTE>
d121 1
a121 2
<H3><A NAME="msie4.0b2">Requests use HTTP/1.1 but responses must be
in HTTP/1.0</A></H3>
d123 1
a123 1
<P>MSIE 4.0b2 has this problem.  Its Java VM makes requests in HTTP/1.1
d125 1
a125 1
does not understand <EM>chunked</EM> responses).  The workaround
d127 1
a127 1
<BLOCKQUOTE><CODE>
d129 1
a129 1
</CODE></BLOCKQUOTE>
d131 2
a132 3
<A
HREF="http://www.apache.org/dist/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch"
>patch</A> against 1.2.1.
d134 1
a134 1
<H3><A NAME="257th-byte">Boundary problems with header parsing</A></H3>
d136 1
a136 1
<P>All versions of Navigator from 2.0 through 4.0b2 (and possibly later)
d138 1
a138 1
offset 256, 257 or 258 of the response.  A BrowserMatch for this would
d140 3
a142 3
on all responses.  The workaround implemented detects when this condition would
occur in a response and adds extra padding to the header to push the
trailing CRLF past offset 258 of the response.
d144 1
a144 2
<H3><A NAME="boundary-string">Multipart responses and Quoted Boundary
Strings</A></H3>
d146 1
a146 1
<P>On multipart responses some clients will not accept quotes (")
d153 1
a153 1
<H3><A NAME="byterange-requests">Byterange requests</A></H3>
d155 1
a155 1
<P>A byterange request is used when the client wishes to retrieve a
d164 3
a166 3
<P>A subsequent draft of this standard defines a header
<CODE>Request-Range</CODE>, and a response type
<CODE>multipart/x-byteranges</CODE>.  The HTTP/1.1 standard includes
d168 1
a168 1
<CODE>Range</CODE> and type <CODE>multipart/byteranges</CODE>.
d170 7
a176 7
<P>Navigator (versions 2 and 3) sends both <CODE>Range</CODE> and
<CODE>Request-Range</CODE> headers (with the same value), but does not
accept a <CODE>multipart/byteranges</CODE> response.  The response must
be <CODE>multipart/x-byteranges</CODE>.  As a workaround, if Apache
receives a <CODE>Request-Range</CODE> header it considers it "higher
priority" than a <CODE>Range</CODE> header and in response uses
<CODE>multipart/x-byteranges</CODE>.
d178 2
a179 2
<P>The Adobe Acrobat Reader plugin makes extensive use of byteranges and
prior to version 3.01 supports only the <CODE>multipart/x-byterange</CODE>
d184 3
a186 3
<CODE>Range-Request</CODE> clue that Navigator does.  To workaround this,
Apache special cases "MSIE 3" in the <CODE>User-Agent</CODE> and serves
<CODE>multipart/x-byteranges</CODE>.  Note that the necessity for this
d189 2
a190 2
<P>Netscape Communicator appears to not issue the non-standard
<CODE>Request-Range</CODE> header.  When an Acrobat plugin prior to
d194 1
a194 2
<H3><A NAME="cookie-merge"><CODE>Set-Cookie</CODE> header is
unmergeable</A></H3>
d196 1
a196 1
<P>The HTTP specifications say that it is legal to merge headers with
d199 1
a199 1
<CODE>Set-Cookie</CODE> header is sent separately.  When parsing the
d201 1
a201 60
<CODE>Set-Cookie</CODE> headers.

<H3><A NAME="gif89-expires"><CODE>Expires</CODE> headers and GIF89A
animations</A></H3>

<P>Navigator versions 2 through 4 will erroneously re-request
GIF89A animations on each loop of the animation if the first
response included an <CODE>Expires</CODE> header.  This happens
regardless of how far in the future the expiry time is set.  There
is no workaround supplied with Apache, however there are hacks for <A
HREF="http://www.arctic.org/~dgaudet/patches/apache-1.2-gif89-expires-hack.patch">1.2</A>
and for <A
HREF="http://www.arctic.org/~dgaudet/patches/apache-1.3-gif89-expires-hack.patch">1.3</A>.

<H3><A NAME="no-content-length"><CODE>POST</CODE> without
<CODE>Content-Length</CODE></A></H3>

<P>In certain situations Navigator 3.01 through 3.03 appear to incorrectly
issue a POST without the request body.  There is no
known workaround.  It has been fixed in Navigator 3.04, Netscapes
provides some
<A HREF="http://help.netscape.com/kb/client/971014-42.html">information</A>.
There's also
<A HREF="http://www.arctic.org/~dgaudet/apache/no-content-length/">
some information</A> about the actual problem.

<H3><A NAME="jdk-12-bugs">JDK 1.2 betas lose parts of responses.</A></H3>

<P>The http client in the JDK1.2beta2 and beta3 will throw away the first part of
the response body when both the headers and the first part of the body are sent
in the same network packet AND keep-alive's are being used. If either condition
is not met then it works fine.

<P>See also Bug-ID's 4124329 and 4125538 at the java developer connection.

<P>If you are seeing this bug yourself, you can add the following BrowserMatch
directive to work around it:

<BLOCKQUOTE><CODE>
BrowserMatch "Java1\.2beta[23]" nokeepalive
</CODE></BLOCKQUOTE>

<P>We don't advocate this though since bending over backwards for beta software
is usually not a good idea; ideally it gets fixed, new betas or a final release
comes out, and no one uses the broken old software anymore.  In theory.

<H3><A NAME="content-type-persistence"><CODE>Content-Type</CODE> change
is not noticed after reload</A></H3>

<P>Navigator (all versions?) will cache the <CODE>content-type</CODE>
for an object "forever".  Using reload or shift-reload will not cause
Navigator to notice a <CODE>content-type</CODE> change.  The only
work-around is for the user to flush their caches (memory and disk).  By
way of an example, some folks may be using an old <CODE>mime.types</CODE>
file which does not map <CODE>.htm</CODE> to <CODE>text/html</CODE>,
in this case Apache will default to sending <CODE>text/plain</CODE>.
If the user requests the page and it is served as <CODE>text/plain</CODE>.
After the admin fixes the server, the user will have to flush their caches
before the object will be shown with the correct <CODE>text/html</CODE>
type.
a203 1

d205 1
a205 1
 Apache HTTP Server Version 1.3
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 273
a273 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d275 2
a276 349
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache HTTP Server Project</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Known Problems in Clients</h1>

    <p>Over time the Apache Group has discovered or been notified
    of problems with various clients which we have had to work
    around, or explain. This document describes these problems and
    the workarounds available. It's not arranged in any particular
    order. Some familiarity with the standards is assumed, but not
    necessary.</p>

    <p>For brevity, <em>Navigator</em> will refer to Netscape's
    Navigator product (which in later versions was renamed
    "Communicator" and various other names), and <em>MSIE</em> will
    refer to Microsoft's Internet Explorer product. All trademarks
    and copyrights belong to their respective companies. We welcome
    input from the various client authors to correct
    inconsistencies in this paper, or to provide us with exact
    version numbers where things are broken/fixed.</p>

    <p>For reference, <a
    href="ftp://ds.internic.net/rfc/rfc1945.txt">RFC1945</a>
    defines HTTP/1.0, and <a
    href="ftp://ds.internic.net/rfc/rfc2068.txt">RFC2068</a>
    defines HTTP/1.1. Apache as of version 1.2 is an HTTP/1.1
    server (with an optional HTTP/1.0 proxy).</p>

    <p>Various of these workarounds are triggered by environment
    variables. The admin typically controls which are set, and for
    which clients, by using <a
    href="../mod/mod_browser.html">mod_browser</a>. Unless
    otherwise noted all of these workarounds exist in versions 1.2
    and later.</p>

    <h3><a id="trailing-crlf" name="trailing-crlf">Trailing CRLF on
    POSTs</a></h3>

    <p>This is a legacy issue. The CERN webserver required
    <code>POST</code> data to have an extra <code>CRLF</code>
    following it. Thus many clients send an extra <code>CRLF</code>
    that is not included in the <code>Content-Length</code> of the
    request. Apache works around this problem by eating any empty
    lines which appear before a request.</p>

    <h3><a id="broken-keepalive" name="broken-keepalive">Broken
    keepalive</a></h3>

    <p>Various clients have had broken implementations of
    <em>keepalive</em> (persistent connections). In particular the
    Windows versions of Navigator 2.0 get very confused when the
    server times out an idle connection. The workaround is present
    in the default config files:</p>

    <blockquote>
      <code>BrowserMatch Mozilla/2 nokeepalive</code>
    </blockquote>
    Note that this matches some earlier versions of MSIE, which
    began the practice of calling themselves <em>Mozilla</em> in
    their user-agent strings just like Navigator. 

    <p>MSIE 4.0b2, which claims to support HTTP/1.1, does not
    properly support keepalive when it is used on 301 or 302
    (redirect) responses. Unfortunately Apache's
    <code>nokeepalive</code> code prior to 1.2.2 would not work
    with HTTP/1.1 clients. You must apply <a
    href="http://www.apache.org/dist/httpd/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">
    this patch</a> to version 1.2.1. Then add this to your
    config:</p>

    <blockquote>
      <code>BrowserMatch "MSIE 4\.0b2;" nokeepalive</code>
    </blockquote>

    <h3><a id="force-response-1.0"
    name="force-response-1.0">Incorrect interpretation of
    <code>HTTP/1.1</code> in response</a></h3>

    <p>To quote from section 3.1 of RFC1945:</p>

    <blockquote>
      HTTP uses a "&lt;MAJOR&gt;.&lt;MINOR&gt;" numbering scheme to
      indicate versions of the protocol. The protocol versioning
      policy is intended to allow the sender to indicate the format
      of a message and its capacity for understanding further HTTP
      communication, rather than the features obtained via that
      communication.
    </blockquote>
    Since Apache is an HTTP/1.1 server, it indicates so as part of
    its response. Many client authors mistakenly treat this part of
    the response as an indication of the protocol that the response
    is in, and then refuse to accept the response. 

    <p>The first major indication of this problem was with AOL's
    proxy servers. When Apache 1.2 went into beta it was the first
    wide-spread HTTP/1.1 server. After some discussion, AOL fixed
    their proxies. In anticipation of similar problems, the
    <code>force-response-1.0</code> environment variable was added
    to Apache. When present Apache will indicate "HTTP/1.0" in
    response to an HTTP/1.0 client, but will not in any other way
    change the response.</p>

    <p>The pre-1.1 Java Development Kit (JDK) that is used in many
    clients (including Navigator 3.x and MSIE 3.x) exhibits this
    problem. As do some of the early pre-releases of the 1.1 JDK.
    We think it is fixed in the 1.1 JDK release. In any event the
    workaround:</p>

    <blockquote>
      <code>BrowserMatch Java/1.0 force-response-1.0<br />
       BrowserMatch JDK/1.0 force-response-1.0</code>
    </blockquote>

    <p>RealPlayer 4.0 from Progressive Networks also exhibits this
    problem. However they have fixed it in version 4.01 of the
    player, but version 4.01 uses the same <code>User-Agent</code>
    as version 4.0. The workaround is still:</p>

    <blockquote>
      <code>BrowserMatch "RealPlayer 4.0" force-response-1.0</code>
    </blockquote>

    <h3><a id="msie4.0b2" name="msie4.0b2">Requests use HTTP/1.1
    but responses must be in HTTP/1.0</a></h3>

    <p>MSIE 4.0b2 has this problem. Its Java VM makes requests in
    HTTP/1.1 format but the responses must be in HTTP/1.0 format
    (in particular, it does not understand <em>chunked</em>
    responses). The workaround is to fool Apache into believing the
    request came in HTTP/1.0 format.</p>

    <blockquote>
      <code>BrowserMatch "MSIE 4\.0b2;" downgrade-1.0
      force-response-1.0</code>
    </blockquote>
    This workaround is available in 1.2.2, and in a <a
    href="http://www.apache.org/dist/httpd/patches/apply_to_1.2.1/msie_4_0b2_fixes.patch">
    patch</a> against 1.2.1. 

    <h3><a id="257th-byte" name="257th-byte">Boundary problems with
    header parsing</a></h3>

    <p>All versions of Navigator from 2.0 through 4.0b2 (and
    possibly later) have a problem if the trailing CRLF of the
    response header starts at offset 256, 257 or 258 of the
    response. A BrowserMatch for this would match on nearly every
    hit, so the workaround is enabled automatically on all
    responses. The workaround implemented detects when this
    condition would occur in a response and adds extra padding to
    the header to push the trailing CRLF past offset 258 of the
    response.</p>

    <h3><a id="boundary-string" name="boundary-string">Multipart
    responses and Quoted Boundary Strings</a></h3>

    <p>On multipart responses some clients will not accept quotes
    (") around the boundary string. The MIME standard recommends
    that such quotes be used. But the clients were probably written
    based on one of the examples in RFC2068, which does not include
    quotes. Apache does not include quotes on its boundary strings
    to workaround this problem.</p>

    <h3><a id="byterange-requests"
    name="byterange-requests">Byterange requests</a></h3>

    <p>A byterange request is used when the client wishes to
    retrieve a portion of an object, not necessarily the entire
    object. There was a very old draft which included these
    byteranges in the URL. Old clients such as Navigator 2.0b1 and
    MSIE 3.0 for the MAC exhibit this behavior, and it will appear
    in the servers' access logs as (failed) attempts to retrieve a
    URL with a trailing ";xxx-yyy". Apache does not attempt to
    implement this at all.</p>

    <p>A subsequent draft of this standard defines a header
    <code>Request-Range</code>, and a response type
    <code>multipart/x-byteranges</code>. The HTTP/1.1 standard
    includes this draft with a few fixes, and it defines the header
    <code>Range</code> and type
    <code>multipart/byteranges</code>.</p>

    <p>Navigator (versions 2 and 3) sends both <code>Range</code>
    and <code>Request-Range</code> headers (with the same value),
    but does not accept a <code>multipart/byteranges</code>
    response. The response must be
    <code>multipart/x-byteranges</code>. As a workaround, if Apache
    receives a <code>Request-Range</code> header it considers it
    "higher priority" than a <code>Range</code> header and in
    response uses <code>multipart/x-byteranges</code>.</p>

    <p>The Adobe Acrobat Reader plugin makes extensive use of
    byteranges and prior to version 3.01 supports only the
    <code>multipart/x-byterange</code> response. Unfortunately
    there is no clue that it is the plugin making the request. If
    the plugin is used with Navigator, the above workaround works
    fine. But if the plugin is used with MSIE 3 (on Windows) the
    workaround won't work because MSIE 3 doesn't give the
    <code>Range-Request</code> clue that Navigator does. To
    workaround this, Apache special cases "MSIE 3" in the
    <code>User-Agent</code> and serves
    <code>multipart/x-byteranges</code>. Note that the necessity
    for this with MSIE 3 is actually due to the Acrobat plugin, not
    due to the browser.</p>

    <p>Netscape Communicator appears to not issue the non-standard
    <code>Request-Range</code> header. When an Acrobat plugin prior
    to version 3.01 is used with it, it will not properly
    understand byteranges. The user must upgrade their Acrobat
    reader to 3.01.</p>

    <h3><a id="cookie-merge"
    name="cookie-merge"><code>Set-Cookie</code> header is
    unmergeable</a></h3>

    <p>The HTTP specifications say that it is legal to merge
    headers with duplicate names into one (separated by commas).
    Some browsers that support Cookies don't like merged headers
    and prefer that each <code>Set-Cookie</code> header is sent
    separately. When parsing the headers returned by a CGI, Apache
    will explicitly avoid merging any <code>Set-Cookie</code>
    headers.</p>

    <h3><a id="gif89-expires"
    name="gif89-expires"><code>Expires</code> headers and GIF89A
    animations</a></h3>

    <p>Navigator versions 2 through 4 will erroneously re-request
    GIF89A animations on each loop of the animation if the first
    response included an <code>Expires</code> header. This happens
    regardless of how far in the future the expiry time is set.
    There is no workaround supplied with Apache, however there are
    hacks for <a
    href="http://www.arctic.org/~dgaudet/patches/apache-1.2-gif89-expires-hack.patch">
    1.2</a> and for <a
    href="http://www.arctic.org/~dgaudet/patches/apache-1.3-gif89-expires-hack.patch">
    1.3</a>.</p>

    <h3><a id="no-content-length"
    name="no-content-length"><code>POST</code> without
    <code>Content-Length</code></a></h3>

    <p>In certain situations Navigator 3.01 through 3.03 appear to
    incorrectly issue a POST without the request body. There is no
    known workaround. It has been fixed in Navigator 3.04,
    Netscapes provides some <a
    href="http://help.netscape.com/kb/client/971014-42.html">information</a>.
    There's also <a
    href="http://www.arctic.org/~dgaudet/apache/no-content-length/">
    some information</a> about the actual problem.</p>

    <h3><a id="jdk-12-bugs" name="jdk-12-bugs">JDK 1.2 betas lose
    parts of responses.</a></h3>

    <p>The http client in the JDK1.2beta2 and beta3 will throw away
    the first part of the response body when both the headers and
    the first part of the body are sent in the same network packet
    AND keep-alive's are being used. If either condition is not met
    then it works fine.</p>

    <p>See also Bug-ID's 4124329 and 4125538 at the java developer
    connection.</p>

    <p>If you are seeing this bug yourself, you can add the
    following BrowserMatch directive to work around it:</p>

    <blockquote>
      <code>BrowserMatch "Java1\.2beta[23]" nokeepalive</code>
    </blockquote>

    <p>We don't advocate this though since bending over backwards
    for beta software is usually not a good idea; ideally it gets
    fixed, new betas or a final release comes out, and no one uses
    the broken old software anymore. In theory.</p>

    <h3><a id="content-type-persistence"
    name="content-type-persistence"><code>Content-Type</code>
    change is not noticed after reload</a></h3>

    <p>Navigator (all versions?) will cache the
    <code>content-type</code> for an object "forever". Using reload
    or shift-reload will not cause Navigator to notice a
    <code>content-type</code> change. The only work-around is for
    the user to flush their caches (memory and disk). By way of an
    example, some folks may be using an old <code>mime.types</code>
    file which does not map <code>.htm</code> to
    <code>text/html</code>, in this case Apache will default to
    sending <code>text/plain</code>. If the user requests the page
    and it is served as <code>text/plain</code>. After the admin
    fixes the server, the user will have to flush their caches
    before the object will be shown with the correct
    <code>text/html</code> type.</p>

    <h3><a id="msie-cookie-y2k" name="msie-cookie-y2k">MSIE Cookie
    problem with expiry date in the year 2000</a></h3>

    <p>MSIE versions 3.00 and 3.02 (without the Y2K patch) do not
    handle cookie expiry dates in the year 2000 properly. Years
    after 2000 and before 2000 work fine. This is fixed in IE4.01
    service pack 1, and in the Y2K patch for IE3.02. Users should
    avoid using expiry dates in the year 2000.</p>

    <h3><a id="lynx-negotiate-trans"
    name="lynx-negotiate-trans">Lynx incorrectly asking for
    transparent content negotiation</a></h3>

    <p>The Lynx browser versions 2.7 and 2.8 send a "negotiate:
    trans" header in their requests, which is an indication the
    browser supports transparent content negotiation (TCN). However
    the browser does not support TCN. As of version 1.3.4, Apache
    supports TCN, and this causes problems with these versions of
    Lynx. As a workaround future versions of Apache will ignore
    this header when sent by the Lynx client.</p>

    <h3><a id="ie40-vary" name="ie40-vary">MSIE 4.0 mishandles Vary
    response header</a></h3>

    <p>MSIE 4.0 does not handle a Vary header properly. The Vary
    header is generated by mod_rewrite in apache 1.3. The result is
    an error from MSIE saying it cannot download the requested
    file. There are more details in <a
    href="http://bugs.apache.org/index/full/4118">PR#4118</a>.</p>

    <p>A workaround is to add the following to your server's
    configuration files:</p>
<pre>
    BrowserMatch "MSIE 4\.0" force-no-vary
</pre>

    <p>(This workaround is only available with releases
    <strong>after</strong> 1.3.6 of the Apache Web server.)</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>
d278 2
a279 2
  </body>
</html>
@


1.1.1.4
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@d250 1
a250 1
    href="http://arctic.org/~dean/patches/apache-1.2-gif89-expires-hack.patch">
d252 1
a252 1
    href="http://arctic.org/~dean/patches/apache-1.3-gif89-expires-hack.patch">
d265 1
a265 1
    href="http://arctic.org/~dean/apache/no-content-length/">
@


