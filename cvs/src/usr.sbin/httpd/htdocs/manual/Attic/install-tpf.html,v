head	1.9;
access;
symbols
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.3
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.9
date	2005.07.27.20.54.44;	author jmc;	state dead;
branches;
next	1.8;

1.8
date	2003.11.17.18.57.04;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.21.13.11.31;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.19.21.31.14;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.46;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.22.17.21;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.25.18.29.21;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.28.58;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.03.01.01.15.25;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.27.18;	author henning;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.08.21.12.53.29;	author henning;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.11.17.17.03.13;	author henning;	state Exp;
branches;
next	;


desc
@@


1.9
log
@from tamas tevesz:

==> remove of a number of alien platforms
==> remove broken links in sitemap.html
==> remove unreferenced install_1_1.html
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">


  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>

    <title>Installing Apache on TPF</title>
  </head>

  <body>
    <center>
      <h2><a id="top" name="top"></a>Installing the Apache 1.3 HTTP
      Server on TPF</h2>
    </center>
    <hr />

    <center>
      [ <a href="#download">Download</a>
      | <a href="#compilation">Compilation</a>
      | <a href="#installation">Installation</a>
      | <a href="#visualage">VisualAge</a>&nbsp;]
    </center>
    <hr />

    <p>This document outlines the steps needed to install Apache
    onto a TPF system.</p>

    <p>You should first read <a
    href="readme-tpf.html">readme-tpf.html</a> for basic
    information on the port of Apache to TPF including required PUT
    level and supported modules.<br />
     &nbsp;<br />
     &nbsp;<br />
    </p>

    <center>
      <h2><a id="download" name="download"></a>Download</h2>
    </center>
    Releases of the Apache server are compressed into a "tarball"
    file which must be downloaded to your PC. Additionally the
    source code from the tarball will need to be copied onto an
    OS/390 UNIX System Services machine (later referred to simply
    as "OS/390 UNIX") for compiling. Here are all the details on
    how to get Apache and how to get it where it needs to be: 

    <ol>
      <li>Download the compressed Apache files (the "tarball") to
      your PC. The file name on the web site will be something like
      <tt>apache_1.3.<i>xx</i>.tar.Z</tt>.<br />
       <font color="#cc6600"><font size="+1">TIP:</font></font> Be
      sure to keep the <tt>.tar.Z</tt> extension when choosing the
      name of the PC file.&nbsp;<br />
       &nbsp;</li>

      <li>
        Decompress the tarball on your PC using WinZip or some
        other PC decompression tool.<br />
         <font color="#cc6600"><font size="+1">TIP:</font></font>
        If you are using WinZip verify that the <i>"TAR File Smart
        CR/LF Conversion"</i> option (under Options, Configuration)
        is NOT checked.<br />
         This is what you can expect if you use WinZip:&nbsp; 

        <ul>
          <li>open the tarball with WinZip (this can usually be
          done simply by double-clicking on the downloaded
          tarball)&nbsp;</li>

          <li>you will be told that the archive contains one file
          (such as apache_1.3.<i>xx</i>.tar) - allow WinZip to
          decompress it to a temporary folder&nbsp;</li>

          <li>extract the archived files onto your PC - you'll be
          using files from the&nbsp; <tt>conf, htdocs,</tt> and
          <tt>icons</tt> directories later in the install
          phase&nbsp;<br />
          <br />
          </li>
        </ul>
      </li>

      <li>FTP the tarball to your OS/390 UNIX machine using binary
      mode:&nbsp;

        <ul>
          <li>activate FTP in an MSDOS window:
          <b><tt>ftp&nbsp;<i>your.os390.unix.machine.com</i></tt></b>&nbsp;</li>

          <li>sign in&nbsp;</li>

          <li>set mode to binary: <b><tt>binary</tt></b>&nbsp;</li>

          <li>send the file to OS/390 UNIX:<br />
           <b><tt>&nbsp;&nbsp;&nbsp;send&nbsp;<i>c:\downloaded_filename</i>.tar.Z&nbsp;
          <i>os390_unix_filename</i>.tar.Z</tt></b></li>

          <li>exit FTP: <b><tt>bye</tt></b>&nbsp;</li>
        </ul>

        <p><font color="#cc6600"><font size="+1">TIP:</font></font>
        UNIX file names are case sensitive. If you use an NFS
        client to transfer files from your PC to OS/390 UNIX
        (instead of using FTP as described above) verify that the
        NFS drive will transfer the file names with upper/lower
        case preserved. &nbsp;</p>
      </li>

      <li>Decompress and extract the archived files necessary for compiling
      Apache:<br />
      <b><tt>pax&nbsp;-rvzkf&nbsp;<i>os390_unix_filename</i>.tar.Z&nbsp;-o&nbsp;from=ISO8859-1,to=IBM-1047&nbsp;"*/src"</tt></b><br />
       &nbsp;</li>

      <li><a id="delete-expat" name="delete-expat"></a>
        Remove unnecessary subdirectories: 
        <ul>
          <li><b><tt>cd&nbsp;apache_1.3.<em>xx</em>/src/lib</tt></b></li>
          <li><b><tt>rm&nbsp;-r&nbsp;expat-lite&nbsp;sdbm</tt></b></li>
          <li><b><tt>cd&nbsp;../os</tt></b></li>
          <li><b><tt>rm -fr bs2000 cygwin mpeix netware os2 os390 unix win32</tt></b></li>
          <li><b><tt>cd&nbsp;..</tt></b></li>
        </ul>
        &nbsp;
      </li>
    </ol>

    <center>
      <h2><a id="compilation"
      name="compilation"></a>Compilation</h2>
    </center>
    Apache supports the notion of "optional modules". However, the
    server has to know which modules are compiled into it. In order
    for those modules to be effective, it is necessary to generate
    a short bit of code (modules.c) which simply has a list of
    them. If you are using the <tt>Configure</tt> utility and
    <tt>make</tt>, modules.c and other necessary files will be
    created for you automatically. 

    <p>The provided instructions assume a c89 compiler and have
    been tested on an OS/390 UNIX machine running at version 2.6
    that contained both OS/390 UNIX and TPF C header files. If you
    are using a platform other that OS/390 UNIX you may need to
    modify src/os/tpf/TPFExport and src/Configure to match your
    environment.<br />
    <br />
     <font color="#cc6600"><font size="+1">TIP:</font></font>
    Editing files on your PC prior to moving them to OS/390 UNIX
    may result in the loss/addition of unprintable characters.
    Files of concern include shell scripts and src/Configuration.
    The most common problems are with tab characters and CR/LF
    characters. Most editors will handle the CR/LF problem
    correctly but none seem to handle tab characters. If you need
    to edit files prior to moving them to OS/390 UNIX, edit them in
    a UNIX editor such as vi or emacs.</p>

    <p>Note that OS/390 UNIX commands in this section are shown in
    <b><tt>bold</tt></b>, are case sensitive, and must be made from
    the "src" directory.</p>

    <ol>
      <li>Switch to the source code subdirectory:
      <b><tt>cd&nbsp;apache_1.3.<em>xx</em>/src</tt></b><br />
       &nbsp;</li>

      <li>Overlay src/Configuration with src/Configuration.tmpl:
      <b><tt>cp&nbsp;Configuration.tmpl&nbsp;Configuration</tt></b><br />
       &nbsp;</li>

      <li>Edit src/Configuration. It contains the list and settings
      of various "Rules" and an additional section at the bottom
      that determines which modules to compile:<br />
       &nbsp;

        <ul>
          <li>comment out (by preceding the line with a "#") lines
          corresponding to those modules you DO NOT wish to
          include
           &nbsp;</li>

          <li>uncomment (by removing the initial "#", if present)
          lines corresponding to those modules you wish to include
          or add new lines corresponding to any custom modules you
          have written (the <a href="readme-tpf.html">readme-tpf.html</a> document lists
          the modules that have been tested on TPF)&nbsp;</li>

          <li>if you did not delete the src/lib/expat-lite directory
          as noted in the <a href="#delete-expat">download instructions</a>,
          add "<tt>Rule&nbsp;EXPAT=no</tt>" to the src/Configuration file</li>

          <li>adjust the other rules, <tt>EXTRA_CFLAGS</tt>, <tt>EXTRA_LIBS</tt>, <tt>EXTRA_LDFLAGS</tt>,
          and <tt>EXTRA_INCLUDES</tt> settings if you feel so inclined</li>

        </ul>

        <p>The modules placed in the Apache distribution are the
        ones that have been tested and are used regularly by
        various members of the Apache development group. Additional
        modules contributed by members or third parties with
        specific needs or functions are available at <a
        href="http://modules.apache.org/">http://modules.apache.org/</a>.
        There are instructions on that page for linking these
        modules into the core Apache code.&nbsp;</p>
      </li>

      <li>
        Indicate whether the <tt>non_socket_select</tt> function is
        implemented on your system. 

        <p>If you are on a PUT12 or higher system, or have PJ26895
        installed, then you probably support
        <tt>non_socket_select</tt>.<br />
         You can verify this by looking for the
        <tt>non_socket_select</tt> prototype in your system header
        files (specifically <tt>i$pwbl.h</tt>).</p>

        <p>If your TPF system supports <tt>non_socket_select</tt>
        do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_NONSOCKET_SELECT</tt>"
          to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_NONSOCKET_SELECT</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Otherwise:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_NO_NONSOCKET_SELECT</tt>"
          to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_NO_NONSOCKET_SELECT</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Without <tt>non_socket_select</tt> CGI output is
        buffered and only sent to the browser when the CGI program
        finishes.</p>
      </li>

      <li>
        Indicate whether the <tt>tpf_sawnc</tt> function is
        implemented on your system. 

        <p>If you are on a PUT10 or higher system, or have
        PJ27387/PJ26188 installed, then you probably support
        <tt>tpf_sawnc</tt>.<br />
         You can verify this by looking for the <tt>tpf_sawnc</tt>
        prototype in your system header files (either
        <tt>tpfapi.h</tt> or <tt>i$fsdd.h</tt>).</p>

        <p>If your TPF system supports <tt>tpf_sawnc</tt> do
        <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_SAWNC</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_SAWNC</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Otherwise:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_NO_SAWNC</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_NO_SAWNC</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>The use of <tt>tpf_sawnc</tt> allows for a cleaner
        shutdown of Apache.</p>
      </li>


      <li><a id="syslog" name="syslog"></a>
        Indicate if you have the Syslog Daemon message logging facility.

        <p>If you are on a PUT13 or higher system, or have PJ27214 installed,
           you can use syslog for Apache's ErrorLog.<br />
           To have the option of using syslog you must do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;HAVE_SYSLOG</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DHAVE_SYSLOG</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>

        </ul>
        <br />

        <p>You also need to add "<tt>INCLUDE OBJLIB(CSYLOG40)</tt>" to your link JCL.</p>
        <p>See <em>TPF Transmission Control Protocol/Internet Protocol</em> for more information
           about the Syslog Daemon:
           <a href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

      <li>
        Indicate if you would like to use the TCP/IP network services database.
        (This only applies if you are using TCP/IP native stack.)

        <p>If you are on a PUT16 or higher system, or have PJ28195 installed,
           you can use the TCP/IP network services database.
           To do so, you must do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_NSD</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_NSD</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>

        </ul>
        <br />

        <p>See <em>TPF Transmission Control Protocol/Internet Protocol</em> for more information
           about the TCP/IP network services database:
           <a href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

      <li><a id="export" name="export"></a>
      Set the TPF environment variables:
      <b><tt>.&nbsp;os/tpf/TPFExport</tt></b>&nbsp;<br />
      <br />
       <font color="#cc6600"><font size="+1">TIP:</font></font> The
      initial period and blank on the command are required to
      ensure the environment variables exist beyond the scope of
      the shell script.<br />
      <br />
       This script will set the environment variables required to
      compile the programs for TPF. Verify that the export
      variables are valid for your installation, in particular, the
      system include file directories. The system include files
      must reside on your OS/390 UNIX system in the appropriate
      file structure similar to /usr/include and /usr/include/sys.
      DO NOT modify the <tt>TPF=YES</tt> export variable. If this
      is changed, the "Configure" script will not recognize
      TPF.&nbsp;<br />
       &nbsp;</li>

      <li><a id="run-configure" name="run-configure"></a>
        Run the "Configure" script:
        <b><tt>Configure</tt></b>&nbsp;<br />
         

        <p>This generates modules.c, include/ap_config_auto.h, and
        necessary Makefiles:</p>
<pre>
      Using config file: Configuration
      Creating Makefile
       + configured for TPF platform
       + setting C compiler to c89
       + setting C pre-processor to c89 -E
       + using "tr [a-z] [A-Z]" to uppercase
       + checking for system header files
       + adding selected modules
       + checking sizeof various data types
      Creating Makefile in support
      Creating Makefile in regex
      Creating Makefile in os/tpf
      Creating Makefile in ap
      Creating Makefile in main
      Creating Makefile in modules/standard
      $ _

</pre>
        If you want to maintain multiple configurations, you can
        say, <i>for example</i>,&nbsp;<br />
         <b><tt>Configure&nbsp;-file&nbsp;Configuration.2nd</tt></b>
        
<pre>
      Using config file: Configuration.2nd
      Creating Makefile
       + configured for &lt;whatever&gt; platform
       + setting C compiler to &lt;whatever&gt;
      et cetera
</pre>
        If you receive an error such as "<tt>Configure 146:
        FSUM7351 not found</tt>" the most likely explanation is
        that one or more of the <tt>make</tt> related files were
        edited on a non-UNIX platform, corrupting the end-of-line
        marks. Verify that lines ending with "\" in the flagged
        file do not have trailing spaces. Using the vi editor and
        the sample error above as an example...&nbsp; &nbsp; 
<pre>
     pull up the flagged file:       <b>vi Configure
</b>     turn on punctuation:            <b>:set list
</b>     go to the line in question:     <b>146G
</b>        or find a line with a "\":   <b>/\\</b>
</pre>

          The end of line should display as "<tt>\$</tt>". If it is
          displayed as "<tt>\&nbsp;$</tt>" (with a blank between \
          and $) then you should revert to the distributed version
          of the file and make the site-specific changes again
          using a UNIX compatible editor such as vi or emacs. Then
          try the Configure command again.&nbsp;
<pre>
     close the file:                 <b>:q</b>  (or <b>:quit!</b>)
</pre>
      </li>

      <li>
        Edit include/ap_config.h if you want to use the <tt>sigaction()</tt> function.<br />

        <p>The <tt>sigaction()</tt> function supersedes the <tt>signal()</tt> interface and should be used in preference.
        This function was implemented with APAR PJ26188 which shipped with PUT10.</p>
     
        <p>To use <tt>sigaction()</tt> remove <tt>#define NO_USE_SIGACTION</tt> in the TPF section of ap_config.h.</p>

        <p>The change will only take effect after Apache is (re)compiled.</p>

      </li>

      <li>
        Edit include/ap_config.h if you do <em>not</em> want the
        scoreboard kept in shared memory.<br />
         

        <p>The default behavior for Apache on all platforms
        <em>except</em> TPF is to use the file system for
        maintaining the scoreboard (which holds current Apache
        children status). The default behavior for Apache on TPF is
        to use shared memory. This reduces file activity for the
        parent Apache ECB and improves performance.</p>

        <p>If you are on a pre-PUT10 system, or for some reason
        you do not want to use shared memory for the scoreboard,
        you must remove &quot;<tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt>&quot; from the TPF
        section of ap_config.h</p>

        <p>The change will only take effect after Apache is
        (re)compiled.</p>

      </li>

      <li>
        Now compile the programs: <b><tt>make</tt></b><br />
         

        <p>Besides compiling, <tt>make</tt> also runs
        src/main/gen_test_char.c and src/main/gen_uri_delims.c in
        order to create src/main/test_char.h and
        src/main/uri_delims.h respectively</p>

        <ul>
          <li>
            The following compilation warning may or may not occur.
            It should be ignored:<br />
            <br />
              main/http_main.c:&nbsp;&nbsp;&nbsp;
              <tt>Infinite loop detected in function child_main.
              Program may not stop.</tt>
            <br />
          </li>

          <li>If during compilation you get a warning about a
          missing 'regex.h', set <tt>WANTHSREGEX=yes</tt> in the
          src/Configuration file and start back at the <a
          href="#run-configure"><tt><b>Configure</b></tt></a>
          step.<br />
           &nbsp;</li>

          <li>If you get a
          '<tt>Duplicate&nbsp;type&nbsp;specifier&nbsp;"long"&nbsp;ignored</tt>'
          error, add "<tt>-W&nbsp;0,langlvl(extended)</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport and
          start back at the <a
          href="#export"><tt><b>export</b></tt></a> step</li>
        </ul>
      </li>
    </ol>
    <a id="installation" name="installation"></a> 

    <center>
      <h2>Installation</h2>
    </center>

    <ol>
      <li>
        Link the compiled object files into a DLL. Sample link JCL
        has been included as src/os/tpf/samples/linkhttp.jcl. You
        will need to modify this JCL:<br />
         &nbsp; 
        <ul>
          <li>Change the IDs, data set names, and libraries for
          your particular site.&nbsp;</li>

          <li>Add/remove <tt>mod_<i>xxx</i>.o</tt> files so they
          correspond to the <tt>mod_<i>xxx</i>.o</tt> lines in your
          src/Configuration file.&nbsp;</li>
        </ul>
        <br />
         <font color="#cc6600"><font size="+1">TIP:</font></font>
        Do NOT include gen_test_char.o or gen_uri_delims.o in the
        link JCL since these files are only used during the
        <tt>make</tt> step.&nbsp;<br /><br />

        If you receive an "Unresolved references" error for "<tt>XML_ErrorString</tt>"
        you probably need to <a href="#delete-expat">remove the expat-lite directory</a>
        and start back at the "<a href="#run-configure">Run the Configure script" step</a><br /><br />

        If you receive an "unable to open" error  for <tt>lib/expat-lite/hashtable.o</tt>"
        you probably need to remove all of the expat-lite .o's from your link JCL<br />
         &nbsp;<br />

         <font color="#cc6600"><font size="+1">TIP:</font></font>
        Apache uses cinet6, which is part of the Internet Daemon (ZINET).
        Ensure that you link Apache with the proper version of cinet6 for your system.
        If&nbsp;you apply changes to cinet6 you should re-link Apache to prevent the
        <code>inetd_getServer</code> and/or <code>inetd_getServerStatus</code> functions
        from failing.<br /><br />

      </li>

      <li>Create a loadset. Sample loadset JCL has been included as
      src/os/tpf/samples/loadset.jcl. You will need to modify this
      JCL for your particular site.<br />
      <br />
       A JCL condition code of 4 is expected since the C load
      module will contain no link map data.<br />

       If you require a link map refer to the
       <a href="#visualage">instructions below</a> on
       creating one with VisualAge TPF.<br />
       &nbsp;</li>

      <li>Load (<tt>ZOLDR LOAD</tt>) and activate (<tt>ZOLDR
      ACT</tt>) the loadset on your test system.<br />
       &nbsp;</li>

      <li>Ensure that the program name you are using for Apache has
      <tt>RESTRICT</tt> and <tt>KEY0</tt> authorization.
      <b><tt>zdpat&nbsp;<i>chta</i>&nbsp;</tt>&nbsp;(</b>c-c) will
      display allocation information. You can use
      <b><tt>zapat&nbsp;<i>chta</i>&nbsp;restrict&nbsp;key0&nbsp;</tt></b>
      <tt>(<b>c-c</b>)</tt> to alter the authorization. Note
      that if the program name is unallocated, you must have the
      loadset for it activated or you will receive <tt>INVALID
      PROGRAM NAME</tt> from the <tt>zdpat/zapat</tt>
      entries.<br />
       &nbsp;</li>

      <li>
        Create the Apache run-time configuration file. The server
        requires a configuration file to initialize itself during
        activation. (Previously three configuration files were
        used.) Copy the distribution version,
        /conf/httpd.conf-dist, to /conf/httpd.conf and then edit
        the /conf/httpd.conf copy with your site specific
        information.&nbsp; 

        <p>At a minimum you must change every occurrence of
        "<tt>@@@@ServerRoot@@@@</tt>" to your document server root (for
        example "<tt>/usr/local/apache</tt>")</p>
      </li>

      <li>
        <p>General documentation for Apache is located at <a
        href="http://httpd.apache.org/docs/">http://httpd.apache.org/docs/</a>
        and in the HTML pages included with the distribution
        (tarball) under the <tt>/htdocs/manual</tt> directory.&nbsp;
        &nbsp;</p>
      </li>

      <li>
        On TPF activate your TCP/IP Offload (ZCLAW) or Native Stack communications device.

        <p>Refer to the <em>TPF TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>

      </li>

      <li>
        Using either TFTP or FTP, transfer the configuration file,
        icons, and web pages to your TPF system. A typical
        directory structure for Apache is as follows:
<pre><tt>     /usr/local/apache/conf
     /usr/local/apache/logs
     /usr/local/apache/icons
     /usr/local/apache/htdocs
</tt></pre>
        All gif, jpg, and zip files should be transferred as
        binary; the configuration file and html pages should be
        transferred as text.&nbsp;<br />
        <br />
         The logs directory must exist in order to avoid an
        <tt>fopen</tt> error while running Apache:<br />
        <br />
         
          If you're running a PUT10 or higher version of TPF make
          the directory using the <b><tt>zfile
          mkdir&nbsp;/usr/local/apache/logs</tt></b> command.<br />
          <br />
           If you're running TPF version PUT09 TFTP an empty file
          into the logs subdirectory to create it.&nbsp;<br />
          <br />

        Make sure Apache can write into the logs subdirectory by
        doing a <tt>zfile&nbsp;chmod</tt> on it with the
        appropriate permission settings. 

        <p>Refer to the TFTP and FTP sections of the <em>TPF
        TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

      <li>
        On TPF add Apache to the Internet Daemon's tables using
        ZINET entries, the common case:<br />
        <br />
         

        <ul>
          <li>For PUT11 and later use the DAEMON model for
          Apache: <tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-DAEMON&nbsp;USER-root</b></tt></li>

          <li>On pre-PUT11 systems use the NOLISTEN model
          instead: <tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-NOLISTEN</b></tt></li>
        </ul>
        <br />
         <font color="#cc6600" size="4">TIP:</font> Logic changes
        implemented with PUT11 cause ZINET to <i>not</i> restart
        NOLISTEN servers after <tt>ZOLDR&nbsp;ACT</tt> and
        <tt>ZOLDR&nbsp;DEACT</tt> entries. This means that Apache
        running as NOLISTEN on a PUT11 or later system will exit
        whenever any <tt>ZOLDR&nbsp;ACT</tt> or
        <tt>ZOLDR&nbsp;DEACT</tt> entry is made. Therefore at PUT11
        you should switch to the DAEMON model and ensure that you
        have APARs PJ25761 and PJ27363 applied.<br />
        <br />
         Refer to the Internet Daemon section of the <em>TPF
        TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.<br />
        <br />
      </li>

      <li>Start the server using the
      <b><tt>ZINET&nbsp;START&nbsp;S-APACHE</tt></b> command.<br />
      <br />
      </li>

      <li>Request a page from your browser:
      <tt><b>http://<i>xx.xx.xx.xx</i></b></tt>
      &nbsp;&nbsp;&nbsp;(where <i>xx.xx.xx.xx</i> is your IP
      address)</li>
    </ol>
    <a id="visualage" name="visualage"></a> 

    <center>
      <h2>Using VisualAge TPF</h2>
    </center>
    VisualAge TPF can be used to generate link maps for Apache:
    <ol>
    <li>Copy the sample <tt>linkhttp.dlm</tt> file from the <tt>src/os/tpf/samples</tt>
        directory to your Apache <tt>src</tt> directory on OS/390 UNIX.
    </li>
    <li>This sample file contains the components for the default
        configuration of Apache.  Add and delete components (such as modules)
        as necessary so it matches your configuration of Apache.
        Basically, it should match your link JCL with the "<tt>.../apache/src</tt>"
        portion of the filenames removed.
    </li>
    <li>Change items in angle brackets (&lt; &gt;) to also match your JCL.
        Be sure to remove the angle brackets as well.
    </li>
    <li>In VisualAge TPF create a container with your modified dlm file as its sole contents.
    </li>
    <li>Right click on the dlm file in your new container and choose "Build DLM".
    </li>
    </ol>

    <hr />
    <center>
      [ <a href="#top">top</a>
      | <a href="#download">Download</a>
      | <a href="#compilation">Compilation</a>
      | <a href="#installation">Installation</a>
      | <a href="#visualage">VisualAge</a>&nbsp;]
    </center>
  </body>
</html>

@


1.8
log
@merge apache 1.3.29 and mod_ssl 2.8.16
ok brad@@
@
text
@@


1.7
log
@merge
@
text
@d122 1
a122 1
          <li><b><tt>rm&nbsp;-r&nbsp;bs2000&nbsp;cygwin&nbsp;mpeix&nbsp;netware&nbsp;os2&nbsp;os390&nbsp;win32</tt></b></li>
d372 1
d466 2
a467 7
            The following two compilation warnings may or may not occur.
            They should be ignored:<br />
            <br />
              util_uri.c:&nbsp;&nbsp;&nbsp;<tt>Function argument
              assignment between types "unsigned char*" and "const
              unsigned char*" is not allowed.</tt>
            <br />
a472 2
            <br />

d595 2
a596 3
        directory structure for Apache is as follows:<br />
<pre>
<tt> /usr/local/apache/conf
d600 1
a600 2
</tt>
</pre>
a664 1

@


1.6
log
@merge
@
text
@d21 4
a24 4
      [ <a href="#download">Download</a>&nbsp; | <a
      href="#compilation">Compilation</a>&nbsp; | <a
      href="#installation">Installation</a>&nbsp; | <a
      href="#visualage">VisualAge</a> ]
d53 1
a53 1
       <font color="#FF0000"><font size="+1">TIP:</font></font> Be
d61 1
a61 1
         <font color="#FF0000"><font size="+1">TIP:</font></font>
d103 1
a103 1
        <p><font color="#FF0000"><font size="+1">TIP:</font></font>
d148 1
a148 1
     <font color="#FF0000"><font size="+1">TIP:</font></font>
d290 25
d343 1
a343 1
       <font color="#FF0000"><font size="+1">TIP:</font></font> The
d421 12
d442 10
a451 16
        parent Apache ECB and improves performance. If you are on a
        pre-PUT10 system you must change ap_config.h to use either
        system heap or the file system.</p>
        To use system heap for the scoreboard replace
        <tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt> with
        <tt>#define&nbsp;USE_TPF_SCOREBOARD</tt> in the TPF section
        of ap_config.h.<br />
        <br />
         If you prefer instead to use the file system, remove both
        <tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt> and
        <tt>#define&nbsp;USE_TPF_SCOREBOARD</tt> from the TPF
        section of ap_config.h<br />
        <br />
         The change will only take effect after Apache is
        (re)compiled.<br />
         &nbsp;
d465 2
a466 2
            The following compilation warning is expected and can
            be ignored:<br />
a467 2
             

d473 6
d484 1
a484 1
          href="#configure"><tt><b>Configure</b></tt></a>
d518 1
a518 1
         <font color="#FF0000"><font size="+1">TIP:</font></font>
a522 1

a526 1
  
d529 8
a536 1
         &nbsp;
d546 4
d648 1
a648 1
         <font color="red" size="4">TIP:</font> Logic changes
d673 1
d678 1
a678 1
      <h2>Compiling with VisualAge TPF</h2>
d680 19
a698 24
    It is not required that <tt>make</tt> be used to compile Apache
    for TPF: Individual programs may be compiled using IBM's
    VisualAge TPF product. This is particularly useful when
    compiling selected programs for the Debug Tool.&nbsp; 

    <p>The following VisualAge compile settings are required:</p>

    <ul>
      <li><i>"DEFINE - Define preprocessor macro name(s)"</i> must
      include <b><tt>TPF, CHARSET_EBCDIC, _POSIX_SOURCE,</tt></b>
      and <b><tt>USE_HSREGEX</tt></b>
       &nbsp;</li>

      <li><i>"LSEARCH - Path for user include files"</i> must
      include <b><tt>../src/include</tt></b> and
      <b><tt>../src/os/tpf</tt></b>
       &nbsp;</li>

      <li><i>"DLL - Generate DLL code"</i> must be checked
       &nbsp;</li>

      <li><i>"LONGNAME - Support long names"</i> must be checked
       &nbsp;</li>
    </ul>
d702 5
a706 5
      [ <a href="#top">top</a>&nbsp; | <a
      href="#download">Download</a>&nbsp; | <a
      href="#compilation">Compilation</a>&nbsp; | <a
      href="#installation">Installation</a>&nbsp; | <a
      href="#visualage">VisualAge</a> ]
@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d5 2
d8 1
a8 1
    <meta name="generator" content="HTML Tidy, see www.w3.org" />
d15 2
a16 2
      <h1><a id="top" name="top"></a>Installing the Apache 1.3 HTTP
      Server on TPF</h1>
d86 1
a86 1
      mode:&nbsp;</li>
a87 1
      <li style="list-style: none">
d112 1
a112 1
      Apache:
d116 1
a116 1
      <li>
a117 1

d119 5
a123 8
          <li>
          <b><tt>cd&nbsp;apache_1.3.<em>xx</em>/src/os</tt></b></li>

          <li>
          <b><tt>rm&nbsp;-r&nbsp;bs2000&nbsp;cygwin&nbsp;mpeix&nbsp;netware&nbsp;os2&nbsp;os390&nbsp;win32</tt></b></li>

          <li style="list-style: none"><b><tt><br />
          </tt></b></li>
d174 1
a174 1
       &nbsp;</li>
a175 1
      <li style="list-style: none">
d177 1
a177 6
          <li>Adjust the Rules and
          <tt>EXTRA_CFLAGS|LIBS|LDFLAGS|INCLUDES</tt> if you feel
          so inclined.<br />
           &nbsp;</li>

          <li>Comment out (by preceding the line with a "#") lines
d179 1
a179 1
          include.<br />
d182 1
a182 1
          <li>Uncomment (by removing the initial "#", if present)
d185 10
a194 3
          have written. The <a
          href="readme-tpf.html">readme-tpf.html</a> document lists
          the modules that have been tested on TPF.&nbsp;</li>
a230 2
        <br />
         
a243 2
        <br />
         
a272 2
        <br />
         
a284 2
        <br />
         
d290 3
a292 2
      <li style="list-style: none"><a id="export"
      name="export"></a></li>
d294 22
a315 1
      <li>Set the TPF environment variables:
d334 1
a334 1
      <li>
a354 1
      Creating Makefile in lib/expat-lite
a383 1
        <div style="margin-left: 2em">
a389 1
        </div>
a438 1
            <div style="margin-left: 2em">
d442 1
a442 1
            </div>
a473 1

d486 10
a495 1
        <tt>make</tt> step.&nbsp;<br />
d497 1
d514 1
a514 1
      <b><tt>zdpat&nbsp;<i>chta</i>&nbsp;</tt> &nbsp;(</b>c-c) will
d517 1
a517 1
      &nbsp;<tt>(<b>c-c</b>)</tt> to alter the authorization. Note
d538 1
a538 1
      <li style="list-style: none">
d542 1
a542 1
        (tarball) under the /htdocs/manual directory.&nbsp;
d547 1
a547 1
        On TPF activate ZCLAW 
d549 1
a549 2
        <p>Refer to the TCP/IP Offload Support section of the
        <em>TPF TCP/IP</em> publication for more information: <a
a551 2
        <p>Note: Apache does not currently work with Native
        Stack.</p>
a572 2

        <div style="margin-left: 2em">
d580 1
a580 1
        </div>
d598 1
a598 1
          Apache:<tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-DAEMON&nbsp;USER-root</b></tt></li>
d601 1
a601 1
          instead:<tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-NOLISTEN</b></tt></li>
d645 1
a645 1
      and <b><tt>USE_HSREGEX</tt></b><br />
d650 1
a650 1
      <b><tt>../src/os/tpf</tt></b><br />
d653 1
a653 1
      <li><i>"DLL - Generate DLL code"</i> must be checked<br />
d656 1
a656 2
      <li><i>"LONGNAME - Support long names"</i> must be
      checked<br />
d659 1
a660 1

@


1.4
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d1 329
a329 160
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Installing Apache on TPF</TITLE>
</HEAD>

<BODY>
<H1 ALIGN="center">
 <A NAME="top">Installing the Apache 1.3 HTTP Server on TPF</A>
</H1>
<HR>
<CENTER>[&nbsp;<A HREF="#download">Download</A>
   &nbsp;|&nbsp;<A HREF="#compilation">Compilation</A>
   &nbsp;|&nbsp;<A HREF="#installation">Installation</A>
   &nbsp;|&nbsp;<A HREF="#visualage">VisualAge</A>&nbsp;]
</CENTER>
<HR>
<BR>

<P>
This document outlines the steps needed to install Apache onto a TPF system.
</P>
<P>
You should first read
htdocs/manual/<A HREF="readme-tpf.html">readme-tpf.html</A>
for basic information on the port of Apache to TPF including required PUT level
and supported functions &amp; modules.
</P>
<H2 align=center><A NAME="download">Download</A></H2>
Releases of the Apache server are compressed into a "tarball" file and stored on the Apache web site.
You will need to choose a version and download the corresponding tarball to your PC.
Additionally the source code from the tarball will need to be copied onto an MVS OS/390 Open Edition machine 
(later referred to simply as "Open Edition") for compiling.
So here are all the details on how to get Apache and how to get it where it needs to be:
<ol>
   <li><A HREF="http://www.apache.org/dist/">Download</A>
       the gzipped Apache files (the "tarball") to your PC.
       The file name on the web site will be something like <i>apache_1.3.x.tar.gz</i>.
       <br><font color=red size=4>TIP: </font>Be sure to keep the <i>.tar.gz</i> extension
           when choosing the name of the PC file.
       <br><br>
   <li>Decompress the tarball on your PC using WinZip or some other PC decompression tool.
       <br><font color=red size=4>TIP: </font>If you are using WinZip verify that the
            <EM>"TAR File Smart CR/LF Conversion"</EM> option (under Options, Configuration) is NOT checked.<br>
            This is what you can expect if you use WinZip:
       <ul>
           <li>open the tarball with WinZip (this can usually be done simply by double-clicking
               on the downloaded tarball)
           <li>you will be told that the archive contains one file (such as <i>apache_1.3.x.tar</i>) -
               allow WinZip to decompress it to a temporary folder
           <li>extract the archived files onto your PC - 
               you'll be using files from the <tt>conf, htdocs,</tt> and <tt>icons</tt> directories later in the install phase
       </ul>
       <br>
   <li>FTP the tarball to your Open Edition machine using binary mode:
       <ul>
           <li>activate FTP in an MSDOS window: <tt><b>ftp <i>your.open.edition.machine.com</i></b></tt>
           <li>sign in
           <li>set mode to binary: <tt><b>binary</b></tt>
           <li>send the file to Open Edition:<br>
               <tt><b>&nbsp;&nbsp;&nbsp;send <i>c:\downloaded_filename.tar.gz open_edition_filename.tar.gz</i></b></tt>
           <li>exit FTP: <tt><b>bye</b></tt>
       </ul>
       <br><font color=red size=4>TIP: </font>
        Open Edition and UNIX file names are case sensitive.  If you use an NFS client to transfer files
        from your PC to Open Edition (instead of using FTP as described above) verify that the NFS drive will transfer the
        file names with upper/lower case preserved.<br>
       <br>
   <li>Decompress the gzipped file on Open Edition: <tt><b>gunzip <i>open_edition_filename.tar.gz</i></b></tt>
       <br>Note that the <i>.tar.gz</i> file will be replaced by the gunzipped <i>.tar</i> archive file.
       <br><br>
   <li>Extract the archived files necessary for compiling Apache:  
       <ul>
           <li><tt><b>pax -rvkf <i>open_edition_filename.tar</i> -o from=ISO8859-1,to=IBM-1047 "*/src"</b></tt><br>
               (any errors extracting files outside of the "src" directory can be ignored)
           <li>switch to the source code subdirectory of the newly extracted apache directory: <tt><b>cd <i>apache-1.3</i>/src</b></tt>
           <li>remove unnecessary subdirectories:
               <tt><b>rm -r os/bs2000 os/mpeix os/netware os/os2 os/os390 os/win32</b></tt>
       </ul>
</ol>
<br>
<H2 align=center><A NAME="compilation">Compilation</A></H2>
<P>
Apache supports the notion of "optional modules".  However,
the server has to know which modules are compiled into it.  In order for
those modules to be effective, it is necessary to generate a short bit of
code (modules.c) which simply has a list of them. If you are using the <tt>Configure</tt> utility
and <tt>make</tt>, modules.c and other necessary files will be created for you automatically.
</P>
<P>
The provided scripts assume a c89 compiler and have only been tested on an
Open Edition environment.  If you are using a platform other that
Open Edition you may need to modify src/os/tpf/TPFExport and src/Configure
to match your environment.
</P>
<font color=red size=4>TIP: </font>
Editing files on your PC prior to moving them to Open Edition may result
in the loss/addition of unprintable characters.  Files of concern include shell
scripts and src/Configuration.  The most common problems are with
tab characters and CR/LF characters.  Most editors will handle the CR/LF problem correctly
but none seem to handle tab characters.  If you need to edit files prior to moving them to Open Edition,
edit them in a UNIX editor such as vi or emacs.<br>
<P>
Note that Open Edition commands in this section are shown in
<TT><STRONG>bold</STRONG></TT>,
are case sensitive, and must be made from the "src" directory.
</P>
<OL>
<LI>Overlay src/Configuration with src/Configuration.tmpl:  
    <TT><STRONG>cp&nbsp;Configuration.tmpl&nbsp;Configuration</STRONG></TT>
    <BR><BR>
<LI>Edit src/Configuration.  It contains the list and settings
    of various "Rules" and an additional section at the bottom that determines
    which modules to compile:
    <BR><BR>
    <UL>
    <LI>Adjust the Rules and <TT>EXTRA_CFLAGS|LIBS|LDFLAGS|INCLUDES</TT>
        if you feel so inclined.
    <BR><BR>
    <LI>Comment out (by preceding the line with a "#") lines corresponding
        to those modules you do&nbsp;not wish to include.
    <BR><BR>
    <LI>Uncomment (by removing the initial "#", if present) lines
        corresponding to those optional modules you wish
        to include or add new lines corresponding to any custom modules
        you have written.
        The htdocs/manual/<A HREF="readme-tpf.html">readme-tpf.html</A>
        document lists the modules that have been tested on TPF.
    </UL>
    <br>The modules placed in the Apache distribution are the ones that have been
    tested and are used regularly by various members of the Apache development
    group.  Additional modules contributed by members or third parties with specific
    needs or functions are available at
    <A 
HREF="http://www.apache.org/dist/contrib/modules/">http://www.apache.org/dist/contrib/modules/</A>.
    There are instructions on that page for linking these modules into the core Apache
    code.
    <BR><BR>
<LI><A NAME="export"></A>Set the TPF environment variables:
    <TT><STRONG>.&nbsp;os/tpf/TPFExport</STRONG></TT>
    <BR>
    <br><font color=red size=4>TIP:</font>
    The initial period and blank on the command are required to ensure
    the environment variables exist beyond the scope of the shell script.
    <BR><BR>
    This script will set the environment variables required to compile the
    programs for TPF.  Verify that the export variables are valid for your
    installation, in particular, the system include file directories.  The
    system include files must reside on your Open Edition system in the
    appropriate file structure similar to /usr/include and /usr/include/sys.
    If your system header files contain line numbers in columns 72-80, you must truncate them.
    <BR><BR>
    Do&nbsp;not modify the <TT>TPF=YES</TT> export variable.  If this is
    changed, the "Configure" script will not recognize TPF.
    <BR><BR>
<LI><A NAME="configure"></A>Run the "Configure" script:
    <TT><STRONG>Configure</STRONG></TT>
    <BR>
    This generates modules.c, include/ap_config_auto.h, and necessary Makefiles:
      <PRE>
d346 7
a352 7
      </PRE>
    If you want to maintain multiple configurations, you can
    say, <EM>e.g.</EM>,
    <BR>
    <TT><STRONG>Configure -file Configuration.2nd</STRONG></TT>
    <BR>
      <PRE>
d358 269
a626 56
      </PRE>
    If you receive an error such as "<TT>Configure 146: FSUM7351 not found</TT>"
    the most likely explanation is that one or more of the <tt>make</tt> related
    files were edited on a non-UNIX platform, corrupting the end-of-line marks.
    Verify that lines ending with "\" in the flagged file do&nbsp;not have trailing
    spaces.  Using the vi editor and the sample error above as an example...
    <BR><BR><PRE>
            pull up the flagged file:       <STRONG>vi&nbsp;Configure</STRONG>
            turn on punctuation:            <STRONG>:set&nbsp;list</STRONG>
            go to the line in question:     <STRONG>146G</STRONG>
               or find a line with a "\":   <STRONG>/\\</STRONG></PRE>
    The end of line should display as "<TT>\$</TT>".  If it is displayed as
    "<TT>\ $</TT>" (with a blank between \ and $) then you should revert to the
    distributed version of the file and make the site-specific
    changes again using a UNIX compatible editor such as vi or emacs.
    Then try the Configure command again.
    <BR><PRE>            close the file:                 <STRONG>:q  </STRONG>(or <STRONG>:quit!</STRONG>)</PRE>

<LI>Edit include/ap_config.h if you would like the scoreboard kept in shared
    memory instead of file or system heap.<br>
    The default behavior for Apache on all platforms <i>except</i> TPF is to use the
    file system for maintaining the scoreboard (which holds current Apache children status).
    The default behavior for Apache on TPF is to use system heap.  Available with
    PUT10 is the use of shared memory for the scoreboard in place of the file system.
    This reduces file activity for the parent Apache ECB and improves performance.
    To activate shared memory, uncomment or <em>add</em> the directive
    <tt><b>#define&nbsp;USE_SHMGET_SCOREBOARD</b></tt>
    and comment out or <em>remove</em> the directive <tt><b>#define USE_TPF_SCOREBOARD</b></tt>
    both of which are in the TPF section in ap_config.h.
    This change will only take effect after Apache is (re)compiled.
    <br><br>
    If you prefer to use the file system instead of system heap or shared memory, ensure that both
    <tt>USE_TPF_SCOREBOARD</tt> and <tt>USE_SHMGET_SCOREBOARD</tt> are commented out or removed.
    This change will only take effect after Apache is (re)compiled.

<A NAME="daemon"></A><br>&nbsp;<br>
<LI>Determine if you will use the ZINET DAEMON model instead of the default NOLISTEN model.<br>
    The default behavior is to let Apache check the server status (active/inactive) with ZINET
    and shut itself down when appropriate.  This default behavior also includes checking the activation number.
    ZINET can now perform these functions instead of Apache by using the DAEMON model
    <i>(PUT12 with APARs PJ25761 &amp; PJ27363 required).</i>
    This model offers increased reliability and is preferred over the NOLISTEN model.
    If Apache goes down while running under the NOLISTEN model, ZINET will not reactivate it nor alert
    the operator.<br><br>
    To use the DAEMON model you must do the following:<br><br>
    <ul>
    <li>Modify the default behavior of Apache by uncommenting or adding the directive
        <code><b>#define&nbsp;USE_TPF_DAEMON</b></code> within the TPF section of include/ap_config.h.
        This change will only take effect after Apache is (re)compiled.<br><br>
    <li>Insert these four lines of code immediately prior to the <code>#endif</code> line in the
        <code>os_check_server</code> function in os/tpf/os.c (if they are not already there):<br><br><code><ul>
            #else<br>
            if (getppid() == 1) {<br>
                <ul>return 1;<br></ul>
            }<br><br></ul></code>
    </ul>
d628 1
a629 28
<LI>Now compile the programs: <TT><STRONG>make</STRONG></TT><BR>
    Besides compiling, <tt>make</tt> also runs main/gen_test_char.c and main/gen_uri_delims.c
    in order to create main/test_char.h and main/uri_delims.h respectively<BR><BR>

    If during compilation you get a warning about a missing 'regex.h', set
    <TT>WANTHSREGEX=yes</TT> in the src/Configuration file and start back at the
    <A HREF="#configure"><TT><STRONG>Configure</STRONG></TT></A> step.<br><br>

    If you get a <tt>'Duplicate&nbsp;type&nbsp;specifier&nbsp;"long"&nbsp;ignored'</tt> error,
    append the following line to the os/tpf/TPFExport file and start back at the
    <A HREF="#export"><TT><STRONG>export</STRONG></TT></A> step:<br><br>
    <ul><tt>export _C89_OPTIONS="-W 0,langlvl(extended)"</tt></ul><br>

    The following compilation warnings are expected and can be ignored:<br><br>
    <ul>
    <li>util_uri.c:&nbsp;&nbsp;&nbsp;<tt>Function argument assignment between types "unsigned char*" and "const unsigned char*" is not allowed.</tt>
    <li>mod_put.c:&nbsp;&nbsp;&nbsp;<tt>#include file "ap_vercompat.h" not found</tt>
    <li>mod_tpf_shm_static.c:&nbsp;&nbsp;&nbsp;<tt>#include file &lt;sys/mman.h&gt; not found</tt>
    <li>mod_usertrack.c:&nbsp;&nbsp;&nbsp;<tt>#include file &lt;sys/time.h&gt; not found</tt>

</OL>

<A NAME="installation">&nbsp;</A>
<H2 align=center>Installation</H2>
<OL>
<LI>Link the compiled object files into a DLL.
    Sample link JCL has been included as src/os/tpf/samples/linkdll.jcl.
    You will need to modify this JCL:
d631 16
a646 3
       <li>Change the IDs, data set names, and libraries for your particular site.
       <li>Add/remove <TT>mod_<EM>xxx</EM>.o</TT> files so they correspond to the
           <TT>mod_<EM>xxx</EM>.o</TT> lines in your src/Configuration file.
d648 11
a658 88
  <br><font color=red size=4>TIP:</font>
  Do not include gen_test_char.o or gen_uri_delims.o in the link JCL since these files are only
  used during the <tt>make</tt> step.
  <br><br>
<LI>Create a loadset.  Sample loadset JCL has been included as src/os/tpf/samples/loadset.jcl.
    You will need to modify this JCL for your particular site.
  <br><br>
    A JCL condition code of 4 is expected since the C load module will contain no link map data.
  <br><br>
<LI>Load (<tt>ZOLDR LOAD</tt>) and activate (<tt>ZOLDR ACT</tt>) the loadset on your test system.
  <br><br>
<LI>Ensure that the program name you are using for Apache has <tt>RESTRICT</tt> and <tt>KEY0</tt> authorization.
    <tt><b>zdpat <i>pppp</i>&nbsp;</b>(<b>c-c</b>)</tt> will display allocation information.
    You can use <tt><b>zapat&nbsp;<i>pppp</i>&nbsp;restrict&nbsp;key0&nbsp;</b>(<b>c-c</b>)</tt> to alter the
    authorization.
    Note that if the program name is unallocated, you must have the loadset for it activated or you will receive
    INVALID PROGRAM NAME from the <tt>zdpat/zapat</tt> entries.
   <br><br>
<LI>
  Apache requires a configuration file to initialize itself during activation.
  (Previously three configuration files were used.)
  Copy the distribution version, /conf/httpd.conf-dist, to /conf/httpd.conf and then
  edit the /conf/httpd.conf copy with your site specific information.
  <BR><BR>
  General documentation for Apache is located at
  <A HREF="http://www.apache.org/docs/">http://www.apache.org/docs/</A>
  and in the HTML pages included with the distribution (tarball) under the
  /htdocs/manual directory.
  <BR><BR>
<LI>On TPF activate ZCLAW and update INETD using ZINET entries, the common case:
    <BR><BR>
    <PRE>
    ZINET ADD S-TFTP PGM-CTFT PORT-69 PROTOCOL-UDP MODEL-NOWAIT

    ZINET ADD S-APACHE PGM-<EM>pppp</EM> MODEL-NOLISTEN
    or ZINET ADD S-APACHE PGM-<EM>pppp</EM> MODEL-DAEMON USER-root <A HREF="#daemon">(see notes above regarding the DAEMON model)</A></PRE>
  Please refer to <EM>IBM Transaction Processing Facility Transmission Control
  Protocol/Internet Protocol Version 4 Release 1</EM> for more information
  on ZCLAW, INETD, and TFTP.
  <BR><BR>
<LI>Prior to sending a request to your Apache server from a browser,
    TFTP the configuration file, log, icons and web pages to your TPF system.
    A typical directory structure for Apache is as follows:
<PRE>     /usr/local/apache/conf
     /usr/local/apache/logs
     /usr/local/apache/icons
     /usr/local/apache/htdocs</PRE>
    All gif, jpg, and zip files should be TFTP'd as binary; conf files and html pages should be TFTP'd as text.<br>
    <br>The logs directory must exist in order to avoid an <CODE>fopen</CODE> error while running Apache:<br><br>
    <ul>
    If you're running a PUT10 or higher version of TPF make the directory using the
    <tt><b>zfile mkdir /usr/local/apache/logs</b></tt> functional entry.
    <br><br>
    If you're running TPF version PUT09, TFTP an empty file into the logs subdirectory to create it.
    <br><br>
    Regardless of your TPF version, make sure Apache can write into the logs subdirectory by doing a
       <tt><b>zfile chmod</b></tt> on it with the appropriate permission settings.
    </ul><br>
<LI>Start the server using the <tt><b>ZINET START S-APACHE</b></tt> command.
</OL>
<A NAME="visualage">&nbsp;</A>
<H2 align=center>Compiling with VisualAge TPF</H2>
<P>
  It is not required that <tt>make</tt> be used to compile Apache for TPF:
  Individual programs may be compiled using IBM's VisualAge TPF product.
  This is particularly useful when compiling selected programs for the Debug Tool.
  <BR><BR>
  The following VisualAge compile settings are required:
</P>
  <UL>
  <LI><EM>"DEFINE - Define preprocessor macro name(s)"</EM> must include
     <TT><STRONG>TPF, CHARSET_EBCDIC, _POSIX_SOURCE,</STRONG></TT> and
     <TT><STRONG>USE_HSREGEX</STRONG></TT>
  <BR><BR>
  <LI><EM>"LSEARCH - Path for user include files"</EM> must include
     <TT><STRONG>../src/include</STRONG></TT> and <TT><STRONG>../src/os/tpf</STRONG></TT>
  <BR><BR>
  <LI><EM>"DLL - Generate DLL code"</EM> must be checked
  <BR><BR>
  <LI><EM>"LONGNAME - Support long names"</EM> must be checked
  </UL>
<HR>
<CENTER>[&nbsp;<A HREF="#top">top</A>
   &nbsp;|&nbsp;<A HREF="#download">Download</A>
   &nbsp;|&nbsp;<A HREF="#compilation">Compilation</A>
   &nbsp;|&nbsp;<A HREF="#installation">Installation</A>
   &nbsp;|&nbsp;<A HREF="#visualage">VisualAge</A>&nbsp;]
</CENTER>
a659 2
</BODY>
</HTML>
@


1.3
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d74 2
a75 1
           <li><tt><b>pax -rvkf <i>open_edition_filename.tar</i> -o from=ISO8859-1,to=IBM-1047 "*/src"</b></tt>
d121 1
a121 1
        to those modules you DO&nbsp;NOT wish to include.
d139 1
a139 1
<LI>Set the TPF environment variables:
d142 4
a145 2
    (The initial period and blank on the command are required to ensure
    the environment variables exist beyond the scope of the shell script.)
d151 3
a153 1
    DO&nbsp;NOT modify the <TT>TPF=YES</TT> export variable.  If this is
d156 1
a156 1
<LI>Run the "Configure" script:
d174 1
d181 1
a181 1
    <TT><STRONG>Configure -file Configuration.ai</STRONG></TT>
d184 1
a184 1
      Using config file: Configuration.ai
d225 1
a225 1
<LI>Edit include/ap_config.h if you plan on using the ZINET DAEMON model instead of the NOLISTEN model.<br>
d227 3
a229 2
    and shut itself down when appropriate.  The default behavior also includes checking Apache's activation number.
    Available with PUT11 (PJ25761) ZINET can perform these functions instead of Apache by using the DAEMON model.
d231 14
a244 6
    If Apache goes down while running under the NOLISTEN model ZINET will not reactivate it nor alert the operator.
    To use the DAEMON model you must modify the default behavior of Apache by uncommenting or adding the directive
    <tt><b>#define&nbsp;USE_TPF_DAEMON</b></tt> within the TPF section in ap_config.h.
    This directive is also recommend when starting Apache from the command line (APAR PJ26515).
    This change will only take effect after Apache is (re)compiled.
    <br><br>
d250 1
d253 14
a266 1
    <TT><STRONG>Configure</STRONG></TT> step.
d280 2
a281 2
  <br><font color=red size=4>TIP: </font>
  Do NOT include gen_test_char.o or gen_uri_delims.o in the link JCL since these files are only
d287 2
d327 3
a329 2
    All gif, jpg, and zip files should be TFTP'd as binary; conf files and html pages should be TFTP'd as text.
    <br>The logs directory must exist in order to avoid an <CODE>fopen</CODE> error while running Apache.
a331 1
    If you're running TPF version PUT09 TFTP an empty file into the logs subdirectory to create it.  
d333 5
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d12 1
a12 1
<CENTER>[&nbsp;<A HREF="#setup">Setup</A>
d29 52
a80 40

<H2 align=center><A NAME="setup">Setup</A></H2>
<P>
Due to the use of EBCDIC on MVS OS/390 Open Edition
(later referred to simply as
"Open Edition"), we've found that the most reliable
method for loading Apache onto your system is to unzip and tar the distribution
file on your PC, and then copy the extracted files to Open Edition
via an NFS client
capable of transferring the data in EBCDIC format.
</P>
<P>
Before moving the distribution to an
Open Edition environment, verify that the NFS drive will transfer the
filenames with upper/lower case preserved.
</P>
<P>
Since Open Edition is not the ultimate destination of the files,
the only required files and subdirectories that need to be moved to
Open Edition
are in /src.
</P>
<P>
<FONT COLOR=red><STRONG>WARNING</STRONG></FONT>:
If you are using a product such as WinZip on your PC, verify that
the <EM>"TAR File Smart CR/LF Conversion"</EM> option is NOT checked.
You can find this in WinZip under Options, Configuration.
This will save you lots of headaches later on.
</P>
<P>
<FONT COLOR=red><STRONG>WARNING</STRONG></FONT>:
Editing files on a PC before moving them to Open Edition may result
in the loss/addition of unprintable characters.  Files of concern include shell
scripts and src/Configuration.  The most common problems are with
tab characters
and CR/LF characters.  Most editors will handle the CR/LF problem correctly
but none seem to handle tab characters.  If you need to edit files, edit them
in a UNIX editor such as vi or emacs.
</P>

d86 2
a87 2
code ("modules.c") which simply has a list of them. If you are using the
make and Configure utility, "modules.c" will be created for you.
d95 7
d103 1
a103 1
Note that UNIX/Open Edition commands in this section are shown in
d115 1
a115 1
    <OL type=a>
a120 3
        At present the following modules MUST be commented out
        as they are not yet supported on TPF: mod_actions, mod_auth,
        mod_cgi, mod_env, mod_include, & mod_status.
d128 10
a137 2
    </OL>
    <BR>
a150 3
<LI>Remove the src/lib/expat-lite directory:
    <TT><STRONG>rm -r lib/expat-lite</STRONG></TT>
    <BR><BR>
d154 1
a154 1
    The output will look something like this...
d163 1
a164 2
      Creating Makefile in main
      Creating Makefile in ap
d167 2
a169 1
      Creating Makefile in modules/example
a171 2
    This generates modules.c and new versions of the Makefiles.
    <BR><BR>
a183 1

d185 1
a185 1
    the most likely explanation is that one or more of the make related
d199 32
a230 1
    <BR><PRE>            close the file:                 <STRONG>:q  </STRONG>(or 
a231 1
<STRONG>:quit!</STRONG>)</PRE>
d233 2
a234 9
    The modules placed in the Apache distribution are the ones that have been
    tested and are used regularly by various members of the Apache development
    group.  Additional modules contributed by members or third parties with specific
    needs or functions are available at
    <A 
HREF="http://www.apache.org/dist/contrib/modules/">http://www.apache.org/dist/contrib/modules/</A>.
    There are instructions on that page for linking these modules into the core Apache
    code.
    <BR><BR>
d243 24
a266 10
<LI>After compilation, you will have all the object files required to build an
  "httpd" loadset.  The next step is to link the object files and create a loadset to be
  stored in a PDS.  Sample JCL for linking and loadsets has been included in
  src/os/tpf/samples as "linkdll.jcl" and "loadset.jcl".  You can submit these jobs
  from CMS or directly from Open Edition if you have the proper authority.  After
  the jobs have completed, you can <TT>ZOLDR LOAD</TT> them to your TPF system.
  <BR><BR>
  NOTE: The <TT>mod_<EM>xxx</EM>.o</TT> files in the linkdll.jcl file must correspond to the
  <TT>mod_<EM>xxx</EM>.o</TT> lines in the src/Configuration file.
  <BR><BR>
d271 1
a271 3
  edit the /conf/httpd.conf copy with your site specific information.  If your system is pre-PUT09 you
  <font color=red><STRONG>must</STRONG></FONT> change <TT>ServerType</TT> from <TT>standalone</TT>
  to <TT>inetd</TT>.
d275 1
a275 1
  and in the HTML pages included with this distribution under the
d281 4
a284 3
    ZINET ADD S-TFTP   PGM-CTFT PORT-69 PROTOCOL-UDP MODEL-NOWAIT
    ZINET ADD S-APACHE PGM-<EM>pppp</EM> PROTOCOL-TCP MODEL-NOWAIT PORT-80  (if inetd mode)
    ZINET ADD S-APACHE PGM-<EM>pppp</EM> PROTOCOL-TCP MODEL-NOLISTEN        (if standalone mode)</PRE>
d296 7
a302 4
    The logs directory must exist in order to avoid an
    <CODE>fopen</CODE> error while running Apache.  TFTP an empty file into
    the logs subdirectory to create it.  All gif, jpg, and zip files should be
    TFTP'd as binary; conf files and html pages should be TFTP'd as text.
d307 1
a307 1
  It is not required that "make" be used to compile Apache for TPF:
d312 1
a324 1
</P>
d327 1
a327 1
   &nbsp;|&nbsp;<A HREF="#setup">Setup</A>
@


1.1
log
@Apache 1.3.4
@
text
@a55 2
Since you had to tar and unzip the file to read this document,
you need to re-tar and -unzip if the CR/LF option was checked.
d127 3
d216 1
a216 2
  edit the /conf/httpd.conf copy with your site specific information.  This first release
  of Apache for TPF only runs under the "inetd" model so you
d229 2
a230 1
    ZINET ADD S-APACHE PGM-<EM>pppp</EM> PORT-80 PROTOCOL-TCP MODEL-NOWAIT</PRE>
@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 133
a133 341
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">


  <head>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>

    <title>Installing Apache on TPF</title>
  </head>

  <body>
    <center>
      <h2><a id="top" name="top"></a>Installing the Apache 1.3 HTTP
      Server on TPF</h2>
    </center>
    <hr />

    <center>
      [ <a href="#download">Download</a>&nbsp; | <a
      href="#compilation">Compilation</a>&nbsp; | <a
      href="#installation">Installation</a>&nbsp; | <a
      href="#visualage">VisualAge</a> ]
    </center>
    <hr />

    <p>This document outlines the steps needed to install Apache
    onto a TPF system.</p>

    <p>You should first read <a
    href="readme-tpf.html">readme-tpf.html</a> for basic
    information on the port of Apache to TPF including required PUT
    level and supported modules.<br />
     &nbsp;<br />
     &nbsp;<br />
    </p>

    <center>
      <h2><a id="download" name="download"></a>Download</h2>
    </center>
    Releases of the Apache server are compressed into a "tarball"
    file which must be downloaded to your PC. Additionally the
    source code from the tarball will need to be copied onto an
    OS/390 UNIX System Services machine (later referred to simply
    as "OS/390 UNIX") for compiling. Here are all the details on
    how to get Apache and how to get it where it needs to be: 

    <ol>
      <li>Download the compressed Apache files (the "tarball") to
      your PC. The file name on the web site will be something like
      <tt>apache_1.3.<i>xx</i>.tar.Z</tt>.<br />
       <font color="#FF0000"><font size="+1">TIP:</font></font> Be
      sure to keep the <tt>.tar.Z</tt> extension when choosing the
      name of the PC file.&nbsp;<br />
       &nbsp;</li>

      <li>
        Decompress the tarball on your PC using WinZip or some
        other PC decompression tool.<br />
         <font color="#FF0000"><font size="+1">TIP:</font></font>
        If you are using WinZip verify that the <i>"TAR File Smart
        CR/LF Conversion"</i> option (under Options, Configuration)
        is NOT checked.<br />
         This is what you can expect if you use WinZip:&nbsp; 

        <ul>
          <li>open the tarball with WinZip (this can usually be
          done simply by double-clicking on the downloaded
          tarball)&nbsp;</li>

          <li>you will be told that the archive contains one file
          (such as apache_1.3.<i>xx</i>.tar) - allow WinZip to
          decompress it to a temporary folder&nbsp;</li>

          <li>extract the archived files onto your PC - you'll be
          using files from the&nbsp; <tt>conf, htdocs,</tt> and
          <tt>icons</tt> directories later in the install
          phase&nbsp;<br />
          <br />
          </li>
        </ul>
      </li>

      <li>FTP the tarball to your OS/390 UNIX machine using binary
      mode:&nbsp;

        <ul>
          <li>activate FTP in an MSDOS window:
          <b><tt>ftp&nbsp;<i>your.os390.unix.machine.com</i></tt></b>&nbsp;</li>

          <li>sign in&nbsp;</li>

          <li>set mode to binary: <b><tt>binary</tt></b>&nbsp;</li>

          <li>send the file to OS/390 UNIX:<br />
           <b><tt>&nbsp;&nbsp;&nbsp;send&nbsp;<i>c:\downloaded_filename</i>.tar.Z&nbsp;
          <i>os390_unix_filename</i>.tar.Z</tt></b></li>

          <li>exit FTP: <b><tt>bye</tt></b>&nbsp;</li>
        </ul>

        <p><font color="#FF0000"><font size="+1">TIP:</font></font>
        UNIX file names are case sensitive. If you use an NFS
        client to transfer files from your PC to OS/390 UNIX
        (instead of using FTP as described above) verify that the
        NFS drive will transfer the file names with upper/lower
        case preserved. &nbsp;</p>
      </li>

      <li>Decompress and extract the archived files necessary for compiling
      Apache:<br />
      <b><tt>pax&nbsp;-rvzkf&nbsp;<i>os390_unix_filename</i>.tar.Z&nbsp;-o&nbsp;from=ISO8859-1,to=IBM-1047&nbsp;"*/src"</tt></b><br />
       &nbsp;</li>

      <li><a id="delete-expat" name="delete-expat"></a>
        Remove unnecessary subdirectories: 
        <ul>
          <li><b><tt>cd&nbsp;apache_1.3.<em>xx</em>/src/lib</tt></b></li>
          <li><b><tt>rm&nbsp;-r&nbsp;expat-lite&nbsp;sdbm</tt></b></li>
          <li><b><tt>cd&nbsp;../os</tt></b></li>
          <li><b><tt>rm&nbsp;-r&nbsp;bs2000&nbsp;cygwin&nbsp;mpeix&nbsp;netware&nbsp;os2&nbsp;os390&nbsp;win32</tt></b></li>
          <li><b><tt>cd&nbsp;..</tt></b></li>
        </ul>
        &nbsp;
      </li>
    </ol>

    <center>
      <h2><a id="compilation"
      name="compilation"></a>Compilation</h2>
    </center>
    Apache supports the notion of "optional modules". However, the
    server has to know which modules are compiled into it. In order
    for those modules to be effective, it is necessary to generate
    a short bit of code (modules.c) which simply has a list of
    them. If you are using the <tt>Configure</tt> utility and
    <tt>make</tt>, modules.c and other necessary files will be
    created for you automatically. 

    <p>The provided instructions assume a c89 compiler and have
    been tested on an OS/390 UNIX machine running at version 2.6
    that contained both OS/390 UNIX and TPF C header files. If you
    are using a platform other that OS/390 UNIX you may need to
    modify src/os/tpf/TPFExport and src/Configure to match your
    environment.<br />
    <br />
     <font color="#FF0000"><font size="+1">TIP:</font></font>
    Editing files on your PC prior to moving them to OS/390 UNIX
    may result in the loss/addition of unprintable characters.
    Files of concern include shell scripts and src/Configuration.
    The most common problems are with tab characters and CR/LF
    characters. Most editors will handle the CR/LF problem
    correctly but none seem to handle tab characters. If you need
    to edit files prior to moving them to OS/390 UNIX, edit them in
    a UNIX editor such as vi or emacs.</p>

    <p>Note that OS/390 UNIX commands in this section are shown in
    <b><tt>bold</tt></b>, are case sensitive, and must be made from
    the "src" directory.</p>

    <ol>
      <li>Switch to the source code subdirectory:
      <b><tt>cd&nbsp;apache_1.3.<em>xx</em>/src</tt></b><br />
       &nbsp;</li>

      <li>Overlay src/Configuration with src/Configuration.tmpl:
      <b><tt>cp&nbsp;Configuration.tmpl&nbsp;Configuration</tt></b><br />
       &nbsp;</li>

      <li>Edit src/Configuration. It contains the list and settings
      of various "Rules" and an additional section at the bottom
      that determines which modules to compile:<br />
       &nbsp;

        <ul>
          <li>comment out (by preceding the line with a "#") lines
          corresponding to those modules you DO NOT wish to
          include
           &nbsp;</li>

          <li>uncomment (by removing the initial "#", if present)
          lines corresponding to those modules you wish to include
          or add new lines corresponding to any custom modules you
          have written (the <a href="readme-tpf.html">readme-tpf.html</a> document lists
          the modules that have been tested on TPF)&nbsp;</li>

          <li>if you did not delete the src/lib/expat-lite directory
          as noted in the <a href="#delete-expat">download instructions</a>,
          add "<tt>Rule&nbsp;EXPAT=no</tt>" to the src/Configuration file</li>

          <li>adjust the other rules, <tt>EXTRA_CFLAGS</tt>, <tt>EXTRA_LIBS</tt>, <tt>EXTRA_LDFLAGS</tt>,
          and <tt>EXTRA_INCLUDES</tt> settings if you feel so inclined</li>

        </ul>

        <p>The modules placed in the Apache distribution are the
        ones that have been tested and are used regularly by
        various members of the Apache development group. Additional
        modules contributed by members or third parties with
        specific needs or functions are available at <a
        href="http://modules.apache.org/">http://modules.apache.org/</a>.
        There are instructions on that page for linking these
        modules into the core Apache code.&nbsp;</p>
      </li>

      <li>
        Indicate whether the <tt>non_socket_select</tt> function is
        implemented on your system. 

        <p>If you are on a PUT12 or higher system, or have PJ26895
        installed, then you probably support
        <tt>non_socket_select</tt>.<br />
         You can verify this by looking for the
        <tt>non_socket_select</tt> prototype in your system header
        files (specifically <tt>i$pwbl.h</tt>).</p>

        <p>If your TPF system supports <tt>non_socket_select</tt>
        do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_NONSOCKET_SELECT</tt>"
          to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_NONSOCKET_SELECT</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Otherwise:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_NO_NONSOCKET_SELECT</tt>"
          to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_NO_NONSOCKET_SELECT</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Without <tt>non_socket_select</tt> CGI output is
        buffered and only sent to the browser when the CGI program
        finishes.</p>
      </li>

      <li>
        Indicate whether the <tt>tpf_sawnc</tt> function is
        implemented on your system. 

        <p>If you are on a PUT10 or higher system, or have
        PJ27387/PJ26188 installed, then you probably support
        <tt>tpf_sawnc</tt>.<br />
         You can verify this by looking for the <tt>tpf_sawnc</tt>
        prototype in your system header files (either
        <tt>tpfapi.h</tt> or <tt>i$fsdd.h</tt>).</p>

        <p>If your TPF system supports <tt>tpf_sawnc</tt> do
        <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_SAWNC</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_SAWNC</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>Otherwise:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_NO_SAWNC</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_NO_SAWNC</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>
        </ul>
        <br />

        <p>The use of <tt>tpf_sawnc</tt> allows for a cleaner
        shutdown of Apache.</p>
      </li>

      <li>
        Indicate if you would like to use the TCP/IP network services database.
        (This only applies if you are using TCP/IP native stack.)

        <p>If you are on a PUT16 or higher system, or have PJ28195 installed,
           you can use the TCP/IP network services database.
           To do so, you must do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;TPF_HAVE_NSD</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DTPF_HAVE_NSD</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>

        </ul>
        <br />

        <p>See <em>TPF Transmission Control Protocol/Internet Protocol</em> for more information
           about the TCP/IP network services database:
           <a href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

      <li><a id="export" name="export"></a>
      Set the TPF environment variables:
      <b><tt>.&nbsp;os/tpf/TPFExport</tt></b>&nbsp;<br />
      <br />
       <font color="#FF0000"><font size="+1">TIP:</font></font> The
      initial period and blank on the command are required to
      ensure the environment variables exist beyond the scope of
      the shell script.<br />
      <br />
       This script will set the environment variables required to
      compile the programs for TPF. Verify that the export
      variables are valid for your installation, in particular, the
      system include file directories. The system include files
      must reside on your OS/390 UNIX system in the appropriate
      file structure similar to /usr/include and /usr/include/sys.
      DO NOT modify the <tt>TPF=YES</tt> export variable. If this
      is changed, the "Configure" script will not recognize
      TPF.&nbsp;<br />
       &nbsp;</li>

      <li><a id="run-configure" name="run-configure"></a>
        Run the "Configure" script:
        <b><tt>Configure</tt></b>&nbsp;<br />
         

        <p>This generates modules.c, include/ap_config_auto.h, and
        necessary Makefiles:</p>
<pre>
a140 1
       + checking sizeof various data types
d142 2
a145 2
      Creating Makefile in ap
      Creating Makefile in main
d147 1
d149 10
a158 8

</pre>
        If you want to maintain multiple configurations, you can
        say, <i>for example</i>,&nbsp;<br />
         <b><tt>Configure&nbsp;-file&nbsp;Configuration.2nd</tt></b>
        
<pre>
      Using config file: Configuration.2nd
d163 1
a163 119
</pre>
        If you receive an error such as "<tt>Configure 146:
        FSUM7351 not found</tt>" the most likely explanation is
        that one or more of the <tt>make</tt> related files were
        edited on a non-UNIX platform, corrupting the end-of-line
        marks. Verify that lines ending with "\" in the flagged
        file do not have trailing spaces. Using the vi editor and
        the sample error above as an example...&nbsp; &nbsp; 
<pre>
     pull up the flagged file:       <b>vi Configure
</b>     turn on punctuation:            <b>:set list
</b>     go to the line in question:     <b>146G
</b>        or find a line with a "\":   <b>/\\</b>
</pre>

          The end of line should display as "<tt>\$</tt>". If it is
          displayed as "<tt>\&nbsp;$</tt>" (with a blank between \
          and $) then you should revert to the distributed version
          of the file and make the site-specific changes again
          using a UNIX compatible editor such as vi or emacs. Then
          try the Configure command again.&nbsp;
<pre>
     close the file:                 <b>:q</b>  (or <b>:quit!</b>)
</pre>
      </li>

      <li>
        Edit include/ap_config.h if you do <em>not</em> want the
        scoreboard kept in shared memory.<br />
         

        <p>The default behavior for Apache on all platforms
        <em>except</em> TPF is to use the file system for
        maintaining the scoreboard (which holds current Apache
        children status). The default behavior for Apache on TPF is
        to use shared memory. This reduces file activity for the
        parent Apache ECB and improves performance. If you are on a
        pre-PUT10 system you must change ap_config.h to use either
        system heap or the file system.</p>
        To use system heap for the scoreboard replace
        <tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt> with
        <tt>#define&nbsp;USE_TPF_SCOREBOARD</tt> in the TPF section
        of ap_config.h.<br />
        <br />
         If you prefer instead to use the file system, remove both
        <tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt> and
        <tt>#define&nbsp;USE_TPF_SCOREBOARD</tt> from the TPF
        section of ap_config.h<br />
        <br />
         The change will only take effect after Apache is
        (re)compiled.<br />
         &nbsp;
      </li>

      <li>
        Now compile the programs: <b><tt>make</tt></b><br />
         

        <p>Besides compiling, <tt>make</tt> also runs
        src/main/gen_test_char.c and src/main/gen_uri_delims.c in
        order to create src/main/test_char.h and
        src/main/uri_delims.h respectively</p>

        <ul>
          <li>
            The following compilation warning is expected and can
            be ignored:<br />
            <br />
             

              util_uri.c:&nbsp;&nbsp;&nbsp;<tt>Function argument
              assignment between types "unsigned char*" and "const
              unsigned char*" is not allowed.</tt>
            <br />
            <br />
          </li>

          <li>If during compilation you get a warning about a
          missing 'regex.h', set <tt>WANTHSREGEX=yes</tt> in the
          src/Configuration file and start back at the <a
          href="#configure"><tt><b>Configure</b></tt></a>
          step.<br />
           &nbsp;</li>

          <li>If you get a
          '<tt>Duplicate&nbsp;type&nbsp;specifier&nbsp;"long"&nbsp;ignored</tt>'
          error, add "<tt>-W&nbsp;0,langlvl(extended)</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport and
          start back at the <a
          href="#export"><tt><b>export</b></tt></a> step</li>
        </ul>
      </li>
    </ol>
    <a id="installation" name="installation"></a> 

    <center>
      <h2>Installation</h2>
    </center>

    <ol>
      <li>
        Link the compiled object files into a DLL. Sample link JCL
        has been included as src/os/tpf/samples/linkhttp.jcl. You
        will need to modify this JCL:<br />
         &nbsp; 
        <ul>
          <li>Change the IDs, data set names, and libraries for
          your particular site.&nbsp;</li>

          <li>Add/remove <tt>mod_<i>xxx</i>.o</tt> files so they
          correspond to the <tt>mod_<i>xxx</i>.o</tt> lines in your
          src/Configuration file.&nbsp;</li>
        </ul>
        <br />
         <font color="#FF0000"><font size="+1">TIP:</font></font>
        Do NOT include gen_test_char.o or gen_uri_delims.o in the
        link JCL since these files are only used during the
        <tt>make</tt> step.&nbsp;<br /><br />

d165 73
a237 71
        If you receive an "Unresolved references" error for "<tt>XML_ErrorString</tt>"
        you probably need to <a href="#delete-expat">remove the expat-lite directory</a>
        and start back at the "<a href="#run-configure">Run the Configure script" step</a><br /><br />

  
        If you receive an "unable to open" error  for <tt>lib/expat-lite/hashtable.o</tt>"
        you probably need to remove all of the expat-lite .o's from your link JCL<br />
         &nbsp;

      </li>

      <li>Create a loadset. Sample loadset JCL has been included as
      src/os/tpf/samples/loadset.jcl. You will need to modify this
      JCL for your particular site.<br />
      <br />
       A JCL condition code of 4 is expected since the C load
      module will contain no link map data.<br />
       &nbsp;</li>

      <li>Load (<tt>ZOLDR LOAD</tt>) and activate (<tt>ZOLDR
      ACT</tt>) the loadset on your test system.<br />
       &nbsp;</li>

      <li>Ensure that the program name you are using for Apache has
      <tt>RESTRICT</tt> and <tt>KEY0</tt> authorization.
      <b><tt>zdpat&nbsp;<i>chta</i>&nbsp;</tt>&nbsp;(</b>c-c) will
      display allocation information. You can use
      <b><tt>zapat&nbsp;<i>chta</i>&nbsp;restrict&nbsp;key0&nbsp;</tt></b>
      <tt>(<b>c-c</b>)</tt> to alter the authorization. Note
      that if the program name is unallocated, you must have the
      loadset for it activated or you will receive <tt>INVALID
      PROGRAM NAME</tt> from the <tt>zdpat/zapat</tt>
      entries.<br />
       &nbsp;</li>

      <li>
        Create the Apache run-time configuration file. The server
        requires a configuration file to initialize itself during
        activation. (Previously three configuration files were
        used.) Copy the distribution version,
        /conf/httpd.conf-dist, to /conf/httpd.conf and then edit
        the /conf/httpd.conf copy with your site specific
        information.&nbsp; 

        <p>At a minimum you must change every occurrence of
        "<tt>@@@@ServerRoot@@@@</tt>" to your document server root (for
        example "<tt>/usr/local/apache</tt>")</p>
      </li>

      <li>
        <p>General documentation for Apache is located at <a
        href="http://httpd.apache.org/docs/">http://httpd.apache.org/docs/</a>
        and in the HTML pages included with the distribution
        (tarball) under the <tt>/htdocs/manual</tt> directory.&nbsp;
        &nbsp;</p>
      </li>

      <li>
        On TPF activate your TCP/IP Offload (ZCLAW) or Native Stack communications device.

        <p>Refer to the <em>TPF TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>

      </li>

      <li>
        Using either TFTP or FTP, transfer the configuration file,
        icons, and web pages to your TPF system. A typical
        directory structure for Apache is as follows:<br />
<pre>
<tt> /usr/local/apache/conf
d240 34
a273 108
     /usr/local/apache/htdocs
</tt>
</pre>
        All gif, jpg, and zip files should be transferred as
        binary; the configuration file and html pages should be
        transferred as text.&nbsp;<br />
        <br />
         The logs directory must exist in order to avoid an
        <tt>fopen</tt> error while running Apache:<br />
        <br />
         
          If you're running a PUT10 or higher version of TPF make
          the directory using the <b><tt>zfile
          mkdir&nbsp;/usr/local/apache/logs</tt></b> command.<br />
          <br />
           If you're running TPF version PUT09 TFTP an empty file
          into the logs subdirectory to create it.&nbsp;<br />
          <br />

        Make sure Apache can write into the logs subdirectory by
        doing a <tt>zfile&nbsp;chmod</tt> on it with the
        appropriate permission settings. 

        <p>Refer to the TFTP and FTP sections of the <em>TPF
        TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

      <li>
        On TPF add Apache to the Internet Daemon's tables using
        ZINET entries, the common case:<br />
        <br />
         

        <ul>
          <li>For PUT11 and later use the DAEMON model for
          Apache: <tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-DAEMON&nbsp;USER-root</b></tt></li>

          <li>On pre-PUT11 systems use the NOLISTEN model
          instead: <tt><b>ZINET&nbsp;ADD&nbsp;S-APACHE&nbsp;PGM-<em>chta</em>&nbsp;MODEL-NOLISTEN</b></tt></li>
        </ul>
        <br />
         <font color="red" size="4">TIP:</font> Logic changes
        implemented with PUT11 cause ZINET to <i>not</i> restart
        NOLISTEN servers after <tt>ZOLDR&nbsp;ACT</tt> and
        <tt>ZOLDR&nbsp;DEACT</tt> entries. This means that Apache
        running as NOLISTEN on a PUT11 or later system will exit
        whenever any <tt>ZOLDR&nbsp;ACT</tt> or
        <tt>ZOLDR&nbsp;DEACT</tt> entry is made. Therefore at PUT11
        you should switch to the DAEMON model and ensure that you
        have APARs PJ25761 and PJ27363 applied.<br />
        <br />
         Refer to the Internet Daemon section of the <em>TPF
        TCP/IP</em> publication for more information: <a
        href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.<br />
        <br />
      </li>

      <li>Start the server using the
      <b><tt>ZINET&nbsp;START&nbsp;S-APACHE</tt></b> command.<br />
      <br />
      </li>

      <li>Request a page from your browser:
      <tt><b>http://<i>xx.xx.xx.xx</i></b></tt>
      &nbsp;&nbsp;&nbsp;(where <i>xx.xx.xx.xx</i> is your IP
      address)</li>
    </ol>
    <a id="visualage" name="visualage"></a> 

    <center>
      <h2>Compiling with VisualAge TPF</h2>
    </center>
    It is not required that <tt>make</tt> be used to compile Apache
    for TPF: Individual programs may be compiled using IBM's
    VisualAge TPF product. This is particularly useful when
    compiling selected programs for the Debug Tool.&nbsp; 

    <p>The following VisualAge compile settings are required:</p>

    <ul>
      <li><i>"DEFINE - Define preprocessor macro name(s)"</i> must
      include <b><tt>TPF, CHARSET_EBCDIC, _POSIX_SOURCE,</tt></b>
      and <b><tt>USE_HSREGEX</tt></b>
       &nbsp;</li>

      <li><i>"LSEARCH - Path for user include files"</i> must
      include <b><tt>../src/include</tt></b> and
      <b><tt>../src/os/tpf</tt></b>
       &nbsp;</li>

      <li><i>"DLL - Generate DLL code"</i> must be checked
       &nbsp;</li>

      <li><i>"LONGNAME - Support long names"</i> must be checked
       &nbsp;</li>
    </ul>

    <hr />
    <center>
      [ <a href="#top">top</a>&nbsp; | <a
      href="#download">Download</a>&nbsp; | <a
      href="#compilation">Compilation</a>&nbsp; | <a
      href="#installation">Installation</a>&nbsp; | <a
      href="#visualage">VisualAge</a> ]
    </center>
  </body>
</html>
d275 2
@


1.1.1.2
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@d21 4
a24 4
      [ <a href="#download">Download</a>
      | <a href="#compilation">Compilation</a>
      | <a href="#installation">Installation</a>
      | <a href="#visualage">VisualAge</a>&nbsp;]
d53 1
a53 1
       <font color="#cc6600"><font size="+1">TIP:</font></font> Be
d61 1
a61 1
         <font color="#cc6600"><font size="+1">TIP:</font></font>
d103 1
a103 1
        <p><font color="#cc6600"><font size="+1">TIP:</font></font>
d148 1
a148 1
     <font color="#cc6600"><font size="+1">TIP:</font></font>
a289 25

      <li><a id="syslog" name="syslog"></a>
        Indicate if you have the Syslog Daemon message logging facility.

        <p>If you are on a PUT13 or higher system, or have PJ27214 installed,
           you can use syslog for Apache's ErrorLog.<br />
           To have the option of using syslog you must do <em>one</em> of the following:<br />
        </p>

        <ul>
          <li>add "<tt>#define&nbsp;HAVE_SYSLOG</tt>" to
          <tt>src/os/tpf/os.h</tt>&nbsp;&nbsp;&nbsp;<em>or</em></li>

          <li>add "<tt>-DHAVE_SYSLOG</tt>" to the
          <tt>_C89_OPTIONS</tt> export in src/os/tpf/TPFExport</li>

        </ul>
        <br />

        <p>You also need to add "<tt>INCLUDE OBJLIB(CSYLOG40)</tt>" to your link JCL.</p>
        <p>See <em>TPF Transmission Control Protocol/Internet Protocol</em> for more information
           about the Syslog Daemon:
           <a href="http://www.ibm.com/tpf/pubs/tpfpubs.htm">http://www.ibm.com/tpf/pubs/tpfpubs.htm</a>.</p>
      </li>

d318 1
a318 1
       <font color="#cc6600"><font size="+1">TIP:</font></font> The
a395 12
        Edit include/ap_config.h if you want to use the <tt>sigaction()</tt> function.<br />

        <p>The <tt>sigaction()</tt> function supersedes the <tt>signal()</tt> interface and should be used in preference.
        This function was implemented with APAR PJ26188 which shipped with PUT10.</p>
     
        <p>To use <tt>sigaction()</tt> remove <tt>#define NO_USE_SIGACTION</tt> in the TPF section of ap_config.h.</p>

        <p>The change will only take effect after Apache is (re)compiled.</p>

      </li>

      <li>
d405 16
a420 10
        parent Apache ECB and improves performance.</p>

        <p>If you are on a pre-PUT10 system, or for some reason
        you do not want to use shared memory for the scoreboard,
        you must remove &quot;<tt>#define&nbsp;USE_SHMGET_SCOREBOARD</tt>&quot; from the TPF
        section of ap_config.h</p>

        <p>The change will only take effect after Apache is
        (re)compiled.</p>

d434 2
a435 2
            The following two compilation warnings may or may not occur.
            They should be ignored:<br />
d437 2
a443 6
              main/http_main.c:&nbsp;&nbsp;&nbsp;
              <tt>Infinite loop detected in function child_main.
              Program may not stop.</tt>
            <br />
            <br />

d449 1
a449 1
          href="#run-configure"><tt><b>Configure</b></tt></a>
d483 1
a483 1
         <font color="#cc6600"><font size="+1">TIP:</font></font>
d488 1
d493 1
d496 1
a496 8
         &nbsp;<br />

         <font color="#cc6600"><font size="+1">TIP:</font></font>
        Apache uses cinet6, which is part of the Internet Daemon (ZINET).
        Ensure that you link Apache with the proper version of cinet6 for your system.
        If&nbsp;you apply changes to cinet6 you should re-link Apache to prevent the
        <code>inetd_getServer</code> and/or <code>inetd_getServerStatus</code> functions
        from failing.<br /><br />
a505 4

       If you require a link map refer to the
       <a href="#visualage">instructions below</a> on
       creating one with VisualAge TPF.<br />
d604 1
a604 1
         <font color="#cc6600" size="4">TIP:</font> Logic changes
a628 1

d633 1
a633 1
      <h2>Using VisualAge TPF</h2>
d635 24
a658 19
    VisualAge TPF can be used to generate link maps for Apache:
    <ol>
    <li>Copy the sample <tt>linkhttp.dlm</tt> file from the <tt>src/os/tpf/samples</tt>
        directory to your Apache <tt>src</tt> directory on OS/390 UNIX.
    </li>
    <li>This sample file contains the components for the default
        configuration of Apache.  Add and delete components (such as modules)
        as necessary so it matches your configuration of Apache.
        Basically, it should match your link JCL with the "<tt>.../apache/src</tt>"
        portion of the filenames removed.
    </li>
    <li>Change items in angle brackets (&lt; &gt;) to also match your JCL.
        Be sure to remove the angle brackets as well.
    </li>
    <li>In VisualAge TPF create a container with your modified dlm file as its sole contents.
    </li>
    <li>Right click on the dlm file in your new container and choose "Build DLM".
    </li>
    </ol>
d662 5
a666 5
      [ <a href="#top">top</a>
      | <a href="#download">Download</a>
      | <a href="#compilation">Compilation</a>
      | <a href="#installation">Installation</a>
      | <a href="#visualage">VisualAge</a>&nbsp;]
@


1.1.1.3
log
@import Apache 1.3.29 and mod_ssl 2.8.16
@
text
@d122 1
a122 1
          <li><b><tt>rm -fr bs2000 cygwin mpeix netware os2 os390 unix win32</tt></b></li>
a371 1
       + using "tr [a-z] [A-Z]" to uppercase
d465 7
a471 2
            The following compilation warning may or may not occur.
            It should be ignored:<br />
d477 2
d601 3
a603 2
        directory structure for Apache is as follows:
<pre><tt>     /usr/local/apache/conf
d607 2
a608 1
</tt></pre>
d673 1
@


