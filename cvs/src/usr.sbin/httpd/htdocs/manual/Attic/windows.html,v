head	1.10;
access;
symbols
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2002.07.20.00.16.21;	author henning;	state dead;
branches;
next	1.9;

1.9
date	2002.07.19.21.31.14;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.29.10.21.28;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.15.22.17.27;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.25.18.29.21;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	99.09.29.06.28.59;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.03.01.01.05.09;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	98.10.11.19.45.04;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.19.59;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.19.59;	author beck;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove pre-apache-1.3.26 cruft

Note for upgraders:
to actually see the current manual, you should do

find /var/www/htdocs/manual/ -type f -exec rm {} \;
cd /usr/src/usr.sbin/httpd/
make -f Makefile.bsd-wrapper distribution

you will also need a current httpd.conf, MultiViews need to be enabled in
/var/www/htdocs/manual/
@
text
@@


1.9
log
@merge
@
text
@@


1.8
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@a0 633
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Using Apache with Microsoft Windows</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER"><a id="help" name="help">Using Apache With
    Microsoft Windows</a></h1>

    <p>This document explains how to install, configure and run
    Apache 1.3 under Microsoft Windows. Most of this document
    assumes that you are installing Windows from a binary
    distribution. If you want to compile Apache yourself (possibly
    to help with development, or to track down bugs), see <a
    href="win_compiling.html">Compiling Apache for Microsoft
    Windows</a>.</p>

    <p>If you find any bugs, please document them on our <a
    href="http://httpd.apache.org/bug_report.html">bug reporting
    page.</a> Contributions are welcomed, please submit your code
    or suggestions to the bug report page, or join the new-httpd
    mailing list.</p>

    <p>The bug reporting page and new-httpd mailing list are
    <em>not</em> provided to answer questions about configuration
    or running Apache. Before you submit a bug report or request,
    first consult this document, the <a
    href="misc/FAQ.html">Frequently Asked Questions</a> page and
    the other relevant documentation topics. If you still have a
    question or problem, post it to the <a
    href="news:comp.infosystems.www.servers.ms-windows">comp.infosystems.www.servers.ms-windows</a>
    newsgroup, where many Apache users and several contributions
    are more than willing to answer new and obscure questions about
    using Apache on Windows.</p>

    <p><a
    href="http://groups.google.com/groups?hl=en&amp;lr=&amp;safe=off&amp;group=comp.infosystems.www.servers.ms-windows">
    groups.google.com's newsgroup archive</a> offers easy browsing
    of previous questions. Searching the newsgroup archives, you
    will usually find your question was already asked and answered
    by other users!</p>

    <p><strong>Warning: Apache on NT has not yet been optimized for
    performance.</strong> Apache still performs best, and is most
    reliable on Unix platforms. Over time NT performance has
    improved, and great progress is being made in the upcoming
    version 2.0 of Apache for the Windows platforms. Folks doing
    comparative reviews of webserver performance are still asked to
    compare against Apache on a Unix platform such as Solaris,
    FreeBSD, or Linux.</p>
    <hr />

    <ul>
      <li><a href="#req">Requirements</a></li>

      <li><a href="#down">Downloading Apache for Windows</a></li>

      <li><a href="#inst">Installing Apache for Windows (binary
      install)</a></li>

      <li><a href="#run">Running Apache for Windows</a></li>

      <li><a href="#test">Testing Apache for Windows</a></li>

      <li><a href="#use">Configuring Apache for Windows</a></li>

      <li><a href="#cmdline">Running Apache in a Console
      Window</a></li>

      <li><a href="#signal">Controlling Apache in a Console
      Window</a></li>

      <li><a href="win_service.html">Running Apache for Windows as
      a Service</a></li>

      <li><a href="win_service.html#signal">Controlling Apache as a
      Service</a></li>

      <li><a href="win_compiling.html">Compiling Apache for
      Microsoft Windows</a></li>
    </ul>
    <hr />

    <h2><a id="req" name="req">Requirements</a></h2>

    <p>Apache 1.3 is designed to run on Windows NT 4.0 and Windows
    2000. The binary installer will only work with the x86 family
    of processors, such as Intel's. Apache may also run on Windows
    95 and 98, but these have not been tested. In all cases TCP/IP
    networking must be installed.</p>

    <p>If running on NT 4.0, installing Service Pack 3 or 6 is
    recommended, as Service Pack 4 created known issues with
    TCP/IP and WinSock integrity that were resolved in Service
    Pack 5 and later.</p>

    <p><strong>Note: "Winsock2" is required for Apache 1.3.7 and
    later.</strong></p>

    <p>If running on Windows 95, the "Winsock2" upgrade must be
    installed before Apache will run. "Winsock2" for Windows 95 is
    available <a
    href="http://www.microsoft.com/windows95/downloads/contents/WUAdminTools/S_WUNetworkingTools/W95Sockets2/Default.asp">
    here</a> or via <a
    href="http://www.microsoft.com/windows95/downloads/">here</a>.
    Be warned that the Dialup Networking 1.2 (MS DUN) updates
    include a Winsock2 that is entirely insufficient, and the
    Winsock2 update must be reinstalled after installing Windows 95
    dialup networking.  Windows 98, NT (Service Pack 3 or later) and
    2000 users need to take no special action, those versions provide
    Winsock2 as distributed.</p>

    <h2><a id="down" name="down">Downloading Apache for
    Windows</a></h2>

    <p>Information on the latest version of Apache can be found on
    the Apache web server at <a
    href="http://httpd.apache.org/">http://httpd.apache.org/</a>.
    This will list the current release, any more recent alpha or
    beta-test releases, together with details of mirror web and
    anonymous FTP sites.</p>

    <p>You should download the binary build of Apache for Windows
    named as <code>apache_1_3_#-win32-src.msi</code> if you are
    interested in the source code, or simply
    <code>apache_1_3_#-win32-no_src.msi</code> if you don't plan to
    do anything with the source code and appreciate a faster
    download. Each of these files contains the complete Apache
    runtime. You must have the Microsoft Installer version 1.10
    installed on your PC before you can install the Apache runtime
    distributions. Windows 2000 and Windows ME are both delivered
    with the Microsoft Installer support, others will need to
    download it. Instructions on locating the Microsoft Installer,
    as well as the binary distributions of Apache, are found at 
    <a href="http://httpd.apache.org/dist/httpd/binaries/win32/"
      >http://httpd.apache.org/dist/httpd/binaries/win32/</a></p>

    <p>The source code is available in the <code>-src.msi</code>
    distribution, or from the
    <a href="http://httpd.apache.org/dist/httpd/"
      >http://httpd.apache.org/dist/httpd/</a>
    distribution directory as a <code>.zip</code> file. If you plan
    on compiling Apache yourself, there is no need to install
    either <code>.msi</code> package. The <code>.zip</code> file
    contains only source code, with MS-DOS line endings (that is
    cr/lf line endings, instead of the single lf used for Unix
    files distributed in .tar.gz or .tar.Z archives.)</p>

    <p>While the source is also available as a <samp>.tar.gz</samp>
    <samp>.tar.Z</samp> archive, these contain unix lf line endings
    that cause grief for Windows users. To use those archives, you
    must convert at least the <samp>.mak</samp> and
    <samp>.dsp</samp> files to have DOS line endings before MSVC
    can understand them. Please stick with the <samp>.zip</samp>
    file to spare yourself the headache.</p>

    <p>Note: prior to 1.3.17 Apache was distributed as an
    InstallShield 2.0 <samp>.exe</samp> file. With an increasing
    number of users unable to run the InstallShield package [on
    Windows ME or Windows 2000] the binaries were repackaged into
    the readily available Microsoft Installer <samp>.msi</samp>
    format.</p>

    <h2><a id="inst" name="inst">Installing Apache for
    Windows</a></h2>

    <p>Run the Apache <samp>.msi</samp> file you downloaded above.
    This will prompt you for:</p>

    <ul>
      <li>whether or not you want to run Apache for all users
      (installing Apache as a Service), or if you want it installed
      to run in a console window when you choose the Start Apache
      shortcut.</li>

      <li>your Server name, Domain name and administrative email
      account.</li>

      <li>the directory to install Apache into (the default is
      <code>C:\Program Files\Apache Group\Apache</code> although
      you can change this to any other directory you wish)</li>

      <li>the installation type. The "Complete" option installs
      everything, including the source code if you downloaded the
      <samp>-src.msi</samp> package. Choose the "Custom" install if
      you choose not to install the documentation, or the source
      code from that package.</li>
    </ul>

    <p>During the installation, Apache will configure the files in
    the <samp>conf</samp> directory for your chosen installation
    directory. However if any of the files in this directory
    already exist they will <strong>not</strong> be overwritten.
    Instead the new copy of the corresponding file will be left
    with the extension <samp>.default.conf</samp>. So, for example,
    if <samp>conf\httpd.conf</samp> already exists it will not be
    altered, but the version which would have been installed will
    be left in <samp>conf\httpd.default.conf</samp>. After the
    installation has finished you should manually check to see what
    in new in the <samp>.default.conf</samp> file, and if necessary
    update your existing configuration files.</p>

    <p>Also, if you already have a file called
    <samp>htdocs\index.html</samp> then it will not be overwritten
    (no <samp>index.html.default</samp> file will be installed
    either). This should mean it is safe to install Apache over an
    existing installation (but you will have to stop the existing
    server running before doing the installation, then start the
    new one after the installation is finished).</p>

    <p>After installing Apache, you should edit the configuration
    files in the <samp>conf</samp> directory as required. These
    files will be configured during the install ready for Apache to
    be run from the directory where it was installed, with the
    documents served from the subdirectory <samp>htdocs</samp>.
    There are lots of other options which should be set before you
    start really using Apache. However to get started quickly the
    files should work as installed.</p>

    <p>If you eventually uninstall Apache, your configuration and log 
    files will not be removed. You will need to delete the installation
    directory tree ("C:\Program Files\Apache Group" by default)
    yourself if you do not care to keep your configuration and
    other web files. Since the httpd.conf file is your
    accumulated effort in using Apache, you need to take the effort
    to remove it. The same happens for all other files you may have
    created, as well as any log files Apache created.</p>

    <h2><a id="run" name="run">Running Apache for Windows</a></h2>

    <p>There are two ways you can run Apache:</p>

    <ul>
      <li>As a <a href="win_service.html">"service"</a>. This is
      the best option if you want Apache to automatically start
      when your machine boots, and to keep Apache running when you
      log-off.</li>

      <li>From a <a href="#cmdline">console window</a>. Closing
      this console window will terminate the Apache server.</li>
    </ul>

    <p><strong>Complete the steps below before you attempt to start
    Apache as a Windows "<a
    href="win_service.html">service</a>"!</strong></p>

    <p>To run Apache from a console window, select the "Start
    Apache as console app" option from the Start menu (in Apache
    1.3.4 and earlier, this option was called "Apache Server").
    This will open a console window and start Apache running inside
    it. The window will remain active until you stop Apache. To
    stop Apache running, either press select the "Shutdown Apache
    console app" icon option from the Start menu (this is not
    available in Apache 1.3.4 or earlier), or see <a
    href="#signal">Controlling Apache in a Console Window</a> for
    commands to control Apache in a console window.</p>

    <p>In Apache 1.3.13 and above it is now quite safe to press
    Ctrl+C or Ctrl+Break to stop the Apache in the console window.
    And on Windows NT/2000 with version 1.3.13, Apache will stop if
    you select 'Close' from the system menu (clicking the icon on
    the top-left corner of the console window) or click the close
    (X) button on the top-right corner. The Close menu item and
    close (X) button also work on Windows 95/98 as of Apache
    version 1.3.15. But do <em>not</em> try any of these approaches
    on earlier versions of the Apache server, since Apache would
    not clean up.</p>

    <h2><a id="test" name="test">Testing Apache for
    Windows</a></h2>

    <p>If you have trouble starting Apache please use the following
    steps to isolate the problem. This applies if you started
    Apache using the "Start Apache as a console app" shortcut from
    the Start menu and the Apache console window closes immediately
    (or unexpectedly) or if you have trouble starting Apache as a
    service.</p>

    <p>Run the "Command Prompt" from the Start Menu - Programs
    list. Change to the folder to which you installed Apache, type
    the command apache, and read the error message. Then review the
    error.log file for configuration mistakes. If you accepted the
    defaults when you installed Apache, the commands would be:</p>
<pre>
  c:
  cd "\program files\apache group\apache"
  apache
  <em>Wait for Apache to exit, or press</em> Ctrl+C
  more &lt;logs\error.log
</pre>

    <p>After looking at the error.log you will probably have a good
    chance of working out what went wrong and be able to fix the
    problem and try again. If you are unable to work it out then
    please follow the <a href="#help">guidelines for assistance</a>
    at the top of this document or in the <a
    href="misc/FAQ.html#what2do">FAQ</a>. Many users discover that
    the nature of the httpd.conf file is easier to manage and audit
    than page after page of configuration dialog boxes.</p>

    <p>After starting Apache running (either in a console window or
    as a service) if will be listening to port 80 (unless you
    changed the <samp>Port</samp>, <samp>Listen</samp> or
    <samp>BindAddress</samp> directives in the configuration
    files). To connect to the server and access the default page,
    launch a browser and enter this URL:</p>
<pre>
  http://localhost/
</pre>

    <p>This should respond with a welcome page, and a link to the
    Apache manual. If nothing happens or you get an error, look in
    the <samp>error.log</samp> file in the <samp>logs</samp>
    directory. If your host isn't connected to the net, you may
    have to use this URL:</p>
<pre>
  http://127.0.0.1/
</pre>

    <p>Once your basic installation is working, you should
    configure it properly by editing the files in the
    <samp>conf</samp> directory.</p>

    <p>Because Apache <em>CANNOT</em> share the same port with
    another TCP/IP application, you may need to stop or uninstall
    certain services first. These include (but are not limited to)
    other web servers, and firewall products such as BlackIce. If
    you can only start Apache with these services disabled,
    reconfigure either Apache or the other product so that they do
    not listen on the same TCP/IP ports. You may find the Windows
    "netstat -an" command useful in finding out what ports are in
    use.</p>

    <h2><a id="use" name="use">Configuring Apache for
    Windows</a></h2>

    <p>Apache is configured by files in the <samp>conf</samp>
    directory. These are the same as files used to configure the
    Unix version, but there are a few different directives for
    Apache on Windows. See the <a href="./">Apache
    documentation</a> for all the available directives.</p>

    <p>Begin configuring the Apache server by reviewing
    <code>httpd.conf</code> and its directives. Although the files
    <code>access.conf</code> and <code>srm.conf</code> both exist,
    these are old files which are no longer used by most
    administrators, and you will find no directives there.</p>

    <p><code>httpd.conf</code> contains a great deal of
    documentation itself, followed by the default configuration
    directives recommended when starting with the Apache server.
    Begin by reading these comments to understand the configuration
    file, and make small changes, starting Apache in a console
    window with each change. If you make a mistake, it will be
    easier to back up to configuration that last worked. You will
    have a better idea of which change caused the server to
    fail.</p>

    <p>The main differences in Apache for Windows are:</p>

    <ul>
      <li>
        Because Apache for Windows is multithreaded, it does not
        use a separate process for each request, as Apache does
        with Unix. Instead there are usually only two Apache
        processes running: a parent process, and a child which
        handles the requests. Within the child each request is
        handled by a separate thread. So, "process"-management
        directives are different: 

        <ul>
          <li><a
          href="mod/core.html#maxrequestsperchild">MaxRequestsPerChild</a>
          - Like the Unix directive, this controls how many
          requests a process will serve before exiting. However,
          unlike Unix, a process serves all the requests at once,
          not just one, so if this is set, it is recommended that a
          very high number is used. The recommended default,
          <code>MaxRequestsPerChild 0</code>, does not cause the
          process to ever exit.</li>

          <li><a
          href="mod/core.html#threadsperchild">ThreadsPerChild</a>
          - This directive is new, and tells the server how many
          threads it should use. This is the maximum number of
          connections the server can handle at once; be sure and
          set this number high enough for your site if you get a
          lot of hits. The recommended default is
          <code>ThreadsPerChild 50</code>.</li>
        </ul>
      </li>

      <li>The directives that accept filenames as arguments now
      must use Windows filenames instead of Unix ones. However,
      because Apache uses Unix-style names internally, you must use
      forward slashes, not backslashes. Drive letters can be used;
      if omitted, the drive with the Apache executable will be
      assumed.</li>

      <li>
        Apache for Windows has the ability to load modules at
        runtime, without recompiling the server. If Apache is
        compiled normally, it will install a number of optional
        modules in the <code>modules</code> directory. To activate
        these, or other modules, the new <a
        href="mod/mod_so.html#loadmodule">LoadModule</a> directive
        must be used. For example, to activate the status module, use
        the following (in addition to the status-activating
        directives in <code>httpd.conf</code> - see <a
        href="mod/mod_status.html">the mod_status docs</a> for more
        details.): 
<pre>
    LoadModule status_module modules/mod_status.so
</pre>

        <p>Information on <a
        href="mod/mod_so.html#creating">creating loadable
        modules</a> is also available. Note that some 3rd party
        modules may be distributed in the old style names,
        ApacheModuleFoo.dll. Always set the LoadModule command as
        directed by the 3rd party module's own documentation.</p>
      </li>

      <li>Apache for Windows version 1.3 series is implemented in
      synchronous calls. This poses an enormous problem for CGI
      authors, who won't see unbuffered results sent immediately to
      the browser. This is not the behavior described for CGI in
      Apache, but it is a side-effect of the Windows port. Apache
      2.0 is making progress to implement the expected asynchronous
      behavior, and we hope to discover that the NT/2000
      implementation allows CGI's to behave as documented.</li>

      <li>
        <p>Apache can also load ISAPI Extensions (<em>i.e.</em>,
        Internet Server Applications), such as those used by
        Microsoft's IIS, and other Windows servers. <a
        href="mod/mod_isapi.html">More information is
        available.</a> Note that Apache <em>CANNOT</em> load ISAPI
        Filters.</p>
      </li>

      <li>When running CGI scripts, the method Apache uses to find
      the interpreter for the script is configurable using the <a
      href="mod/core.html#scriptinterpretersource">ScriptInterpreterSource</a>
      directive.</li>

      <li>Since it is often difficult to manage files with names
      like <code>.htaccess</code> under windows, you may find it
      useful to change the name of this configuration file using
      the <a href="mod/core.html#accessfilename">AccessFilename</a>
      directive.</li>
    </ul>

    <h2><a id="cmdline" name="cmdline">Running Apache in a Console
    Window</a></h2>

    <p>The Start menu icons and the NT Service manager can provide
    a simple interface for administering Apache. But in some cases
    it is easier to work from the command line.</p>

    <p>When working with Apache it is important to know how it will
    find the configuration files. You can specify a configuration
    file on the command line in two ways:</p>

    <ul>
      <li>-f specifies a path to a particular configuration
      file:</li>
    </ul>
<pre>
    apache -f "c:\my server\conf\my.conf"
</pre>
<pre>
    apache -f test\test.conf
</pre>

    <ul>
      <li>-n specifies the configuration file of an installed
      Apache service (Apache 1.3.7 and later):</li>
    </ul>
<pre>
    apache -n "service name"
</pre>

    <p>In these cases, the proper ServerRoot should be set in the
    configuration file.</p>

    <p>If you don't specify a configuration file name with -f or
    -n, Apache will use the file name compiled into the server,
    usually "conf/httpd.conf". Invoking Apache with the -V switch
    will display this value labeled as SERVER_CONFIG_FILE. Apache
    will then determine its ServerRoot by trying the following, in
    this order:</p>

    <ul>
      <li>A ServerRoot directive via a -C switch.</li>

      <li>The -d switch on the command line.</li>

      <li>The current working directory</li>

      <li>A registry entry, created if you did a binary
      install.</li>

      <li>The server root compiled into the server.</li>
    </ul>

    <p>The server root compiled into the server is usually
    "/apache". invoking apache with the -V switch will display this
    value labeled as HTTPD_ROOT.</p>

    <p>When invoked from the start menu, Apache is usually passed
    no arguments, so using the registry entry is the preferred
    technique for console Apache.</p>

    <p>During a binary installation, a registry key will have been
    installed, for example:</p>
<pre>
  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3.13\ServerRoot
</pre>

    <p>This key is compiled into the server and can enable you to
    test new versions without affecting the current version. Of
    course you must take care not to install the new version on top
    of the old version in the file system.</p>

    <p>If you did not do a binary install then Apache will in some
    scenarios complain about the missing registry key. This warning
    can be ignored if it otherwise was able to find its
    configuration files.</p>

    <p>The value of this key is the "ServerRoot" directory,
    containing the <samp>conf</samp> directory. When Apache starts
    it will read the <samp>httpd.conf</samp> file from this
    directory. If this file contains a <samp>ServerRoot</samp>
    directive which is different from the directory obtained from
    the registry key above, Apache will forget the registry key and
    use the directory from the configuration file. If you copy the
    Apache directory or configuration files to a new location it is
    vital that you update the <samp>ServerRoot</samp> directory in
    the <samp>httpd.conf</samp> file to the new location.</p>

    <p>To run Apache from the command line as a console
    application, use the following command:</p>
<pre>
    apache 
</pre>

    <p>Apache will execute, and will remain running until it is
    stopped by pressing control-C.</p>

    <h2><a id="signal" name="signal">Controlling Apache in a
    Console Window</a></h2>

    <p>You can tell a running Apache to stop by opening another
    console window and running:</p>
<pre>
    apache -k shutdown
</pre>

    <p><strong>Note: This option is only available with Apache
    1.3.3 and later.</strong></p>

    <p>For earlier versions, you must use Control-C in the Apache
    console window to shut down the server.</p>

    <p>From version 1.3.3 through 1.3.12, this should be used
    instead of pressing Control-C in a running Apache console
    window, because it allowed Apache to end any current
    transactions and cleanup gracefully.</p>

    <p>As of version 1.3.13 pressing Control-C in the running
    window will cleanup Apache quite gracefully, and you may use -k
    stop as an alias for -k shutdown. Earlier versions do not
    understand -k stop.</p>

    <p>You can also tell Apache to restart. This makes it re-read
    the configuration files. Any transactions in progress are
    allowed to complete without interruption. To restart Apache,
    run:</p>
<pre>
    apache -k restart
</pre>

    <p><strong>Note: This option is only available with Apache
    1.3.3 and later. For earlier versions, you need to use
    Control-C in the Apache console window to shut down the server,
    and then restart the server with the Apache
    command.</strong></p>

    <p>Another <em>very useful</em> feature is the configuration
    files test option. To test the Apache configuration files,
    run:</p>
<pre>
    apache -t
</pre>

    <p>This is especially useful following alterations to the
    configuration files while Apache is still running. You can make
    the changes, confirm that the syntax is good by issuing the
    "apache -t" command, then restart Apache with "apache -k
    restart". Apache will re-read the configuration files, allowing
    any transactions in progress to complete without interruption.
    Any new request will then be served using the new
    configuration.</p>

    <p>Note: for people familiar with the Unix version of Apache,
    these commands provide a Windows equivalent to <code>kill -TERM
    <em>pid</em></code> and <code>kill -USR1 <em>pid</em></code>.
    The command line option used, <code>-k</code>, was chosen as a
    reminder of the "kill" command used on Unix.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>

  </body>
</html>

@


1.7
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 248
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Using Apache with Microsoft Windows</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server
 </H3>
</DIV>


<H1 ALIGN="CENTER"><A NAME="help">Using Apache With Microsoft Windows</A></H1>

<P>This document explains how to install, configure and run Apache 1.3 under 
   Microsoft Windows. Please note that at this time, Windows support is 
   entirely experimental, and is recommended only for experienced users. 
   The Apache Group does not guarantee that this software will work as 
   documented, or even at all. If you find any bugs, please document them on
   our <A HREF="http://www.apache.org/bug_report.html">bug reporting page.</A>
   Contributions are welcomed, please submit your code or suggestions to the 
   bug report page, or join the new-httpd mailing list.</P>

<P>The bug reporting page and new-httpd mailing list are <em>not</em> 
   provided to answer questions about configuration or running Apache.  
   Before you submit a bug report or request, first consult this document, the 
   <A HREF="misc/FAQ.html">Frequently Asked Questions</A> page and the other 
   relevant documentation topics.  If you still have a question or problem, 
   post it to the <A HREF="news:comp.infosystems.www.servers.ms-windows">
   comp.infosystems.www.servers.ms&minus;windows</A> newsgroup, where many 
   Apache users and several contributions are more than willing to answer new 
   and obscure questions about using Apache on Windows.</P>

<P><A HREF="http://www.deja.com/group/comp.infosystems.www.servers.ms-windows">
   deja.com's newsgroup archives</A> offer easy browsing of previous questions.
   Searching the newsgroup archives, you will usually find your question was 
   already asked and answered by other users!</P>

<P><STRONG>Warning: Apache on NT has not yet been optimized for performance.
   </STRONG>Apache still performs best, and is most reliable on Unix platforms.
   Over time NT performance has improved, and great progress is being made
   in the upcoming version 2.0 of Apache for the Windows platforms. Folks doing
   comparative reviews of webserver performance are still asked to compare 
   against Apache on a Unix platform such as Solaris, FreeBSD, or Linux.</P>

<P>Most of this document assumes that you are installing Windows from a
   binary distribution. If you want to compile Apache yourself (possibly
   to help with development, or to track down bugs), see 
   <A HREF="win_compiling.html">Compiling Apache for Microsoft Windows</A>.

<HR>

<UL>
  <LI><A HREF="#req">Requirements</A>
  <LI><A HREF="#down">Downloading Apache for Windows</A>
  <LI><A HREF="#inst">Installing Apache for Windows (binary install)</A>
  <LI><A HREF="#run">Running Apache for Windows</A>
  <LI><A HREF="#test">Testing Apache for Windows</A>
  <LI><A HREF="#use">Configuring Apache for Windows</A>
  <LI><A HREF="#cmdline">Running Apache in a Console Window</A>
  <LI><A HREF="#signal">Controlling Apache in a Console Window</A>
  <LI><A HREF="win_service.html">Running Apache for Windows as a Service</A>
  <LI><A HREF="win_service.html#signal">Controlling Apache as a Service</A>
  <LI><A HREF="win_compiling.html">Compiling Apache for Microsoft Windows</A>
</UL>

<HR>

<H2><A NAME="req">Requirements</A></H2>

<P>Apache 1.3 is designed to run on Windows NT 4.0 and Windows 2000.
   The binary installer will only work with the x86 family of processors, 
   such as Intel's. Apache may also run on Windows 95 and 98, but these have 
   not been tested. In all cases TCP/IP networking must be installed.</P>

<P>If running on NT 4.0, installing Service Pack 3 or 6 is recommended, as
   Service Pack 4 created known issues with TCPIP/WinSock integrity that
   were resolved in later Service Packs.</P>

<P><STRONG>Note: "Winsock 2" is required for Apache 1.3.7 and 
   later.</STRONG></P>

<P>If running on Windows 95, the "Winsock2" upgrade must be installed
   before Apache will run. "Winsock2" for Windows 95 is available
   <A HREF="http://www.microsoft.com/windows95/downloads/contents/WUAdminTools/S_WUNetworkingTools/W95Sockets2/Default.asp">here</a>
   or via <A HREF="http://www.microsoft.com/windows95/downloads/">here</A>.
   Be warned that the Dialup Networking 1.2 (MS DUN) updates include a Winsock2
   that is entirely insufficient, and the Winsock2 update must be reinstalled
   after installing Windows 95 dialup networking.</P>


<H2><A NAME="down">Downloading Apache for Windows</A></H2>

<P>Information on the latest version of Apache can be found on the
   Apache web server at <A HREF="http://www.apache.org/httpd">
   http://www.apache.org/httpd</A>.  This will
   list the current release, any more recent alpha or beta-test releases,
   together with details of mirror web and anonymous FTP sites.</P>

<P>You should download the binary build of Apache for Windows named as
   <CODE>apache_1_3_#-win32-with_src.msi</CODE> if you are interested in
   the source code, or simply <CODE>apache_1_3_#-win32-no_src.msi</CODE> 
   if you don't plan to do anything with the source code and appreciate
   a faster download.  Each of these files contains the complete Apache
   runtime.  You must have the Microsoft Installer version 1.10 installed
   on your PC before you can install the Apache runtime distributions.
   Windows 2000 and Windows ME are both delivered with the Microsoft
   Installer support, others will need to download it.  Instructions on
   locating the Microsoft Installer, as well as the binary distributions
   of Apache, are found at <A HREF="http://httpd.apache.org/dist/binaries/win32/"
   >http://httpd.apache.org/dist/binaries/win32/</A></P>

<P>The source code is available in the <CODE>-with_src.msi</CODE> distribution,
   or from the <A HREF="http://httpd.apache.org/dist/">http://httpd.apache.org/dist/</A>
   distribution directory as a <CODE>.zip</CODE> file.  If you plan on compiling
   Apache yourself, there is no need to install either <CODE>.msi</CODE> package.
   The <CODE>.zip</CODE> file contains only source code, with MS-DOS line endings
   (that is cr/lf line endings, instead of the single lf used for Unix files.)</P>

<P>While the source is also available as a <SAMP>.tar.gz</SAMP> <SAMP>.tar.Z</SAMP>
   archive, these contain unix lf line endings that cause grief for Windows users.
   To use those archives, you must convert at least the <SAMP>.mak</SAMP> and
   <SAMP>.dsp</SAMP> files to have DOS line endings before MSVC can understand them.
   Please stick with the <SAMP>.zip</SAMP> file to spare yourself the headache.</P>

<P>Note: prior to 1.3.17 Apache was distributed as an InstallShield 2.0 <SAMP>.exe</SAMP>
   file.  With an increasing number of users unable to run the InstallShield package
   [on Windows ME or Windows 2000] the binaries were repackaged into the readily 
   available Microsoft Installer <SAMP>.msi</SAMP> format.

<H2><A NAME="inst">Installing Apache for Windows</A></H2>

<P>Run the Apache <SAMP>.msi</SAMP> file you downloaded above. This will
   prompt you for:</P>

<UL>

 <LI>your name and company name, and on Windows NT/2000, whether or not you want
     all users to access Apache as a Service, or if you want it installed to run
     when you choose the Start Apache shortcut.

 <LI>your Server name, Domain name and administrative email account.

 <LI>the directory to install Apache into (the default is 
     <CODE>C:\Program Files\Apache Group\Apache</CODE> although you can
     change this to any other directory you wish)
 
 <LI>the installation type. The "Complete" option installs everything, including
     the source code if you downloaded the <SAMP>-with_src.msi</SAMP> package.
     Choose the "Custom" install if you choose not to install the documentation,
     or the source code from that package.

</UL>

<P>During the installation, Apache will configure the files in the
   <SAMP>conf</SAMP> directory for your chosen installation
   directory. However if any of the files in this directory already exist
   they will <STRONG>not</STRONG> be overwritten. Instead the new copy of
   the corresponding file will be left with the extension
   <SAMP>.default</SAMP>. So, for example, if
   <SAMP>conf\httpd.conf</SAMP> already exists it will not be altered,
   but the version which would have been installed will be left in
   <SAMP>conf\httpd.conf.default</SAMP>. After the installation has
   finished you should manually check to see what in new in the
   <SAMP>.default</SAMP> file, and if necessary update your existing
   configuration files.</P>

<P>Also, if you already have a file called <SAMP>htdocs\index.html</SAMP>
   then it will not be overwritten (no <SAMP>index.html.default</SAMP>
   file will be installed either). This should mean it is safe to install
   Apache over an existing installation (but you will have to stop the
   existing server running before doing the installation, then start the
   new one after the installation is finished).</P>

<P>After installing Apache, you should edit the configuration files in
   the <SAMP>conf</SAMP> directory as required. These files will be
   configured during the install ready for Apache to be run from the
   directory where it was installed, with the documents served from the
   subdirectory <SAMP>htdocs</SAMP>. There are lots of other options
   which should be set before you start really using Apache. However to
   get started quickly the files should work as installed.</P>

<P>If you eventually uninstall Apache, your configuration files will not
   be removed.  You will need to delete the installation directory tree
   ("C:\Program Files\Apache Group" by default) yourself if you do not 
   care to keep your configuration and other web files.  Since the 
   httpd.conf file is a your accumulated effort in using Apache, you need
   to take the effort to remove it.  The same happens for all other files
   you may have created, as well as any log files Apache created.</P>

<H2><A NAME="run">Running Apache for Windows</A></H2>

<P>There are two ways you can run Apache:</P>

<UL>
 <LI>As a <A HREF="win_service.html">"service"</A> (tested on NT/2000 only, 
   but an <EM>experimental</EM> version is available for 95/98).
   This is the best option if you want Apache to automatically start when your
   machine boots, and to keep Apache running when you log-off.
 <LI>From a <A HREF="#cmdline">console window</A>. This is the best option
   available for Windows 95/98 users.
</UL>

<P><STRONG>Complete the steps below before you attempt to start Apache 
   as a Windows "<A HREF="win_service.html">service</A>"!</STRONG></P>

<P>To run Apache from a console window, select the "Start Apache as
   console app" option from the Start menu (in Apache 1.3.4 and earlier,
   this option was called "Apache Server"). This will open a console
   window and start Apache running inside it. The window will remain
   active until you stop Apache. To stop Apache running, either press select
   the "Shutdown Apache console app" icon option from the Start menu
   (this is not available in Apache 1.3.4 or earlier), or see
   <A HREF="#signal">Controlling Apache in a Console Window</A> for commands
   to control Apache in a console window.</P>

<P>In Apache 1.3.13 and above it is now quite safe to press Ctrl+C or 
   Ctrl+Break to stop the Apache in the console window.  And on Windows NT/2000
   with version 1.3.13, Apache will also gladly stop if you select 'Close'
   from the system menu (clicking the icon on the top-left corner of the
   console window) or click the close (X) button on the top-right corner.
   The Close menu item and close (X) button also work on Windows 95/98 as of 
   Apache version 1.3.15. But do <EM>not</em> try any of these approaches on 
   earlier versions of the Apache server, since Apache would not clean up.</P>

<H2><A NAME="test">Testing Apache for Windows</A></H2>

<P>If you have trouble starting Apache please use the following steps to 
   isolate the problem. This applies if you started Apache using the
   "Start Apache as a console app" shortcut from the Start menu and
   the Apache console window closes immediately (or unexpectedly)
   or if you have trouble starting Apache as a service.</P>
	 
<P>Run the "Command Prompt" from the Start Menu - Programs list.  Change
   to the folder to which you installed Apache, type the command apache, and 
   read the error message.  Then review the error.log file for configuration 
   mistakes.  If you accepted the defaults when you installed Apache, the 
   commands would be:</P>
d4 296
a299 1
<PRE>
d303 1
a303 1
  <EM>Wait for Apache to exit, or press </EM>Ctrl+C
d305 1
a305 1
</PRE>
d307 16
a322 15
<P>After looking at the error.log you will probably have a good chance of 
   working out what went wrong and be able to fix the problem and try again. 
   If you are unable to work it out then please follow the 
   <A HREF="#help">guidelines for assistance</A> at the top of this document 
   or in the <a href="misc/FAQ.html#what2do">FAQ</a>. Many users discover that
   the nature of the httpd.conf file is easier to manage and audit than page 
   after page of configuration dialog boxes.</P>

<P>After starting Apache running (either in a console window or as a
   service) if will be listening to port 80 (unless you changed the
   <SAMP>Port</SAMP>, <SAMP>Listen</SAMP> or <SAMP>BindAddress</SAMP>
   directives in the configuration files). To connect to the server and
   access the default page, launch a browser and enter this URL:</P>

<PRE>
d324 1
a324 7
</PRE>

<P>This should respond with a welcome page, and a link to the Apache
   manual. If nothing happens or you get an error, look in the
   <SAMP>error.log</SAMP> file in the <SAMP>logs</SAMP> directory.
   If your host isn't connected to the net, you may have to use
   this URL:</P>
d326 6
a331 1
<PRE>
d333 1
a333 4
</PRE>

<P>Once your basic installation is working, you should configure it
   properly by editing the files in the <SAMP>conf</SAMP> directory.</P>
d335 93
a427 68
<P>Because Apache <EM>CANNOT</EM> share the same port with another
   TCP/IP application, you may need to stop or uninstall certain 
   services first.  These include (but are not limited to) other
   web servers, and firewall products such as BlackIce.  If you can
   only start Apache with these services disabled, reconfigure either
   Apache or the other product so that they do not listen on the
   same TCP/IP ports. You may find the Windows "netstat -an" command useful
   in finding out what ports are in use.</P>

<H2><A NAME="use">Configuring Apache for Windows</A></H2>

<P>Apache is configured by files in the <SAMP>conf</SAMP>
   directory. These are the same as files used to configure the Unix
   version, but there are a few different directives for Apache on
   Windows. See the <A HREF="./">Apache documentation</A> for all the
   available directives.</P>

<P>Begin configuring the Apache server by reviewing <CODE>httpd.conf</CODE> 
   and it's directives.  Although the files <CODE>access.conf</CODE> and
   <CODE>srm.conf</CODE> both exist, these are old files which are no longer
   used by most administrators, and you will find no directives there.</P>

<P><CODE>httpd.conf</CODE> contains a great deal of documentation itself,
   followed by the default configuration directives recommended when starting
   with the Apache server.  Begin by reading these comments to understand the 
   configuration file, and make small changes, starting Apache in a console 
   window with each change.  If you make a mistake, it will be easier to back 
   up to configuration that last worked.  You will have a better idea of
   which change caused the server to fail.</P>

<P>The main differences in Apache for Windows are:</P>

<UL>
  <LI>Because Apache for Windows is multithreaded, it does not use a
      separate process for each request, as Apache does with
      Unix. Instead there are usually only two Apache processes running:
      a parent process, and a child which handles the requests. Within
      the child each request is handled by a separate thread.  So, 
      "process"-management directives are different:
    <UL>
      <LI><A HREF="mod/core.html#maxrequestsperchild">MaxRequestsPerChild</A>
         - Like the Unix directive, this controls how many requests a
           process will serve before exiting. However, unlike Unix, a
           process serves all the requests at once, not just one, so if
           this is set, it is recommended that a very high number is
           used. The recommended default, <CODE>MaxRequestsPerChild
           0</CODE>, does not cause the process to ever exit.
      <LI><A HREF="mod/core.html#threadsperchild">ThreadsPerChild</A> -
         This directive is new, and tells the server how many threads it
         should use. This is the maximum number of connections the server
         can handle at once; be sure and set this number high enough for
         your site if you get a lot of hits. The recommended default is
         <CODE>ThreadsPerChild 50</CODE>.
    </UL>
  <LI>The directives that accept filenames as arguments now must use
      Windows filenames instead of Unix ones. However, because Apache
      uses Unix-style names internally, you must use forward slashes, not
      backslashes. Drive letters can be used; if omitted, the drive with
      the Apache executable will be assumed.
  <LI>Apache for Windows has the ability to load modules at runtime,
      without recompiling the server. If Apache is compiled normally, it
      will install a number of optional modules in the
      <CODE>\modules</CODE> directory. To activate these, or other
      modules, the new <A HREF="mod/mod_so.html#loadmodule">LoadModule</A>
      directive must be used. For example, to active the status module,
      use the following (in addition to the status-activating directives
      in <CODE>access.conf</CODE>):
<PRE>
d429 1
a429 64
</PRE>
      <P>Information on <A HREF="mod/mod_so.html#creating">creating loadable
         modules</A> is also available.  Note that some 3rd party modules
         may be distributed in the old style names, ApacheModuleFoo.dll.
         Always set the LoadModule command as directed as documented by the
         3rd party module's own documentation.</P>
  <LI>Apache for Windows version 1.3 series is implemented in synchronous
      calls.  This poses an enormous problem for CGI authors, who won't
      see unbuffered results sent immediately to the browser.  This is not
      the behavior described for CGI in Apache, but it is a side-effect of
      the Windows port.  Apache 2.0 is making progress to implement the
      expected asynchronous behavior, and we hope to discover that the
      NT/2000 implementation allows CGI's to behave as documented.
  <LI><P>Apache can also load ISAPI Extensions (<EM>i.e.</EM>, Internet Server
         Applications), such as those used by Microsoft's IIS, and other
         Windows servers. <A HREF="mod/mod_isapi.html">More information
         is available.</A> Note that Apache <EM>CANNOT</EM> load ISAPI Filters.
</UL>


<H2><A NAME="cmdline">Running Apache in a Console Window</A></H2>

<P>The Start menu icons and the NT Service manager can provide a simple
   interface for administering Apache. But in some cases it is easier to
   work from the command line.</P>

<P>When working with Apache it is important to know how it will find the
   configuration files.  You can specify a configuration file on the command 
   line in two ways:</P>

<UL>
<LI>-f specifies a path to a particular configuration file:
</UL>
<PRE>    apache -f "c:\my server\conf\my.conf"</PRE>
<PRE>    apache -f test\test.conf</PRE>
<UL>
<LI>-n specifies the configuration file of an installed Apache service (Apache 1.3.7 and later):
</UL>
<PRE>    apache -n "service name"</PRE>

<P>In these cases, the proper ServerRoot should be set in the configuration 
   file.</P>

<P>If you don't specify a configuration file name with -f or -n, Apache will
   use the file name compiled into the server, usually "conf/httpd.conf".  
   Invoking Apache with the -V switch will display this value labeled as 
   SERVER_CONFIG_FILE. Apache will then determine its ServerRoot by trying 
   the following, in this order:</P>

<UL>
<LI>A ServerRoot directive via a -C switch.
<LI>The -d switch on the command line.
<LI>The current working directory
<LI>A registry entry, created if you did a binary install.
<LI>The server root compiled into the server.
</UL>

<P>The server root compiled into the server is usually "/apache".
   invoking apache with the -V switch will display this value
   labeled as HTTPD_ROOT.</P>

<P>When invoked from the start menu, Apache is usually passed no arguments,
   so using the registry entry is the preferred technique for console Apache.
   </P>
d431 102
a532 4
<P>During a binary installation, a registry key will have
   been installed, for example:</P>

<PRE>
d534 1
a534 24
</PRE>

<P>This key is compiled into the server and can enable you to test 
   new versions without affecting the current version.  Of course
   you must take care not to install the new version on top of the
   old version in the file system.</P>

<P>If you did not do a binary install then Apache will in some
   scenarios complain about the missing registry key.  This
   warning can be ignored if it otherwise was able to find its
   configuration files.

<P>The value of this key is the "ServerRoot" directory, containing the
   <SAMP>conf</SAMP> directory. When Apache starts it will read the
   <SAMP>httpd.conf</SAMP> file from this directory. If this file
   contains a <SAMP>ServerRoot</SAMP> directive which is different from
   the directory obtained from the registry key above, Apache will forget
   the registry key and use the directory from the configuration file.
   If you copy the Apache directory or configuration files to a new
   location it is vital that you update the <SAMP>ServerRoot</SAMP>
   directory in the <SAMP>httpd.conf</SAMP> file to the new location.</P>

<P>To run Apache from the command line as a console application, use the
   following command:</P>
d536 24
a559 1
<PRE>
d561 1
a561 1
</PRE>
d563 2
a564 2
<P>Apache will execute, and will remain running until it is stopped by pressing
   control-C.</P>
d566 2
a567 1
<H2><A NAME="signal">Controlling Apache in a Console Window</A></H2>
d569 3
a571 4
<P>You can tell a running Apache to stop by opening another console window and 
   running:</P>

<PRE>
d573 1
a573 7
</PRE>

<P><STRONG>Note: This option is only available with Apache 1.3.3 and
   later.</STRONG></P>

<P>For earlier versions, you must use Control-C in the
   Apache console window to shut down the server.</P>
d575 2
a576 3
<P>From version 1.3.3 through 1.3.12, this should be used instead of pressing
   Control-C in a running Apache console window, because it allowed Apache 
   to end any current transactions and cleanup gracefully.</P>
d578 2
a579 3
<P>As of version 1.3.13 pressing Control-C in the running window will cleanup 
   Apache quite gracefully, and you may use -k stop as an alias for 
   -k shutdown.  Earlier versions do not understand -k stop.</P>
d581 15
a595 5
<P>You can also tell Apache to restart. This makes it re-read the
   configuration files. Any transactions in progress are allowed to
   complete without interruption. To restart Apache, run:</P>

<PRE>
d597 1
a597 9
</PRE>

<P><STRONG>Note: This option is only available with Apache 1.3.3 and
   later.  For earlier versions, you need to use Control-C in the
   Apache console window to shut down the server, and then restart the
   server with the Apache command.</STRONG></P>

<P>Another <EM>very useful</EM> feature is the configuration files test option.
   To test the Apache configuration files, run:</P>
d599 10
a608 1
<PRE>
d610 1
a610 1
</PRE>
d612 15
a626 17
<P>This is especially useful following alterations to the configuration files
   while Apache is still running. You can make the changes, confirm that the 
   syntax is good by issuing the "apache -t" command, then restart Apache with
   "apache -k restart". Apache will re-read the configuration files, allowing 
   any transactions in progress to complete without interruption. Any new 
   request will then be served using the new configuration.</P>

<P>Note: for people familiar with the Unix version of Apache, these commands 
   provide a Windows equivalent to <CODE>kill -TERM <EM>pid</EM></CODE> and 
   <CODE>kill -USR1 <EM>pid</EM></CODE>. The command line option used, 
   <CODE>-k</CODE>, was chosen as a reminder of the "kill" command used on 
   Unix.</P>

<HR>
 <H3 ALIGN="CENTER">
  Apache HTTP Server
 </H3>
d628 2
a629 1
<A HREF="./"><IMG SRC="images/index.gif" ALT="Index"></A>
d631 2
a632 2
</BODY>
</HTML>
@


1.6
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d34 1
a34 1
<P>The bug reporting page and new-httpd mailing list are <EMP>not</EMP> 
d51 1
a51 1
   Over time we will improve NT performance, and great progress is being made
d53 2
a54 2
   comparative reviews of webserver performance are asked to compare against 
   Apache on a Unix platform such as Solaris, FreeBSD, or Linux.</P>
d110 30
a139 9
<P>You should download the version of Apache for Windows with the
   <CODE>.exe</CODE> extension. This is a single file containing Apache,
   ready to install and run. There may also be a <CODE>.zip</CODE> file
   containing the source code, to compile Apache yourself.  (If there is
   no <SAMP>.zip</SAMP> file, the source will be available in a
   <SAMP>.tar.gz</SAMP> file but this will contain Unix line endings. You
   will have to convert at least the <SAMP>.mak</SAMP> and
   <SAMP>.dsp</SAMP> files to have DOS line endings before MSVC will
   understand them).</P>
d143 2
a144 2
<P>Run the Apache <SAMP>.exe</SAMP> file you downloaded above. This will
   ask for:</P>
d148 3
a150 3
 <LI>the directory to install Apache into (the default is 
    <CODE>\Program Files\Apache Group\Apache</CODE> although you can
    change this to any other directory)
d152 1
a152 1
 <LI>the start menu name (default is "Apache Web Server")
d154 8
a161 4
 <LI>the installation type. The "Typical" option installs
    everything except the source code. The "Minimum" option does not
    install the manuals or source code. Choose the "Custom" install if
    you want to install the source code.
d193 8
d232 3
a234 2
   But do <EM>not</em> try any of these approaches on earlier versions of the
   Apache server, since Apache did not shut down cleanly.</P>
d356 8
a370 5
<PRE>
    LoadModule status_module modules/ApacheModuleStatus.dll
</PRE>
      <P>Information on <A HREF="mod/mod_so.html#creating">creating loadable
         modules</A> is also available.</P>
d374 1
a374 2
         is available.</A>  Note that Apache <EM>CANNOT</EM> load ISAPI
		 Filters.
@


1.5
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d23 1
a23 1
<H1 ALIGN="CENTER">Using Apache With Microsoft Windows</H1>
d25 23
a47 8
<P>This document explains how to install, configure and run
   Apache 1.3 under Microsoft Windows. Please note that at
   this time, Windows support is entirely experimental, and is
   recommended only for experienced users. The Apache Group does not
   guarantee that this software will work as documented, or even at
   all. If you find any bugs, or wish to contribute in other ways, please
   use our <A HREF="http://www.apache.org/bug_report.html">bug reporting
   page.</A></P>
d50 10
a59 11
Apache still performs best, and is most reliable on Unix platforms.  Over
time we will improve NT performance. Folks doing comparative reviews
of webserver performance are asked to compare against Apache
on a Unix platform such as Solaris, FreeBSD, or Linux.</STRONG></P>

<P>

Most of this document assumes that you are installing Windows from a
binary distribution. If you want to compile Apache yourself (possibly
to help with development, or to track down bugs), see the section on
<A HREF="#comp">Compiling Apache for Windows</A> below.
d68 7
a74 6
  <LI><A HREF="#use">Using Apache for Windows</A>
  <LI><A HREF="#cmdline">Running Apache for Windows from the Command Line</A>
  <LI><A HREF="#service">Running Apache for Windows as a Service</A>
  <LI><A HREF="#signal">Signalling Console Apache when running</A>
  <LI><A HREF="#signalsrv">Signalling Service Apache when running</A>
  <LI><A HREF="#comp">Compiling Apache for Windows</A>
d81 19
a99 4
Apache 1.3 is designed to run on Windows NT 4.0. The binary installer
will only work in Intel processors. Apache may also run on Windows 95,
Windows 98 and Windows NT 3.5.1, but these have not been tested. In
all cases TCP/IP networking must be installed.
a100 13
<P>

If running on Windows 95, using the "Winsock2" upgrade is recommended
but may not be necessary.  If running on NT 4.0, installing Service Pack 2
is recommended.

<P>

<STRONG>Note: "Winsock 2" is required for Apache 1.3.7 and later.</STRONG>

<P>

"Winsock 2" for Windows 95 is available <A HREF="http://www.microsoft.com/windows95/downloads/">here.</A>
d105 14
a118 16
Apache web server at <A
HREF="http://www.apache.org/">http://www.apache.org/</A>.  This will
list the current release, any more recent alpha or beta-test releases,
together with details of mirror web and anonymous ftp sites.</P>

<P>

You should download the version of Apache for Windows with the
<CODE>.exe</CODE> extension. This is a single file containing Apache,
ready to install and run. There may also be a <CODE>.zip</CODE> file
containing the source code, to compile Apache yourself.  (If there is
no <SAMP>.zip</SAMP> file, the source will be available in a
<SAMP>.tar.gz</SAMP> file but this will contain Unix line endings. You
will have to convert at least the <SAMP>.mak</SAMP> and
<SAMP>.dsp</SAMP> files to have DOS line endings before MSVC will
understand them).
d122 2
a123 2
Run the Apache <SAMP>.exe</SAMP> file you downloaded above. This will
ask for:
d140 27
a166 33
<P>

During the installation, Apache will configure the files in the
<SAMP>conf</SAMP> directory for your chosen installation
directory. However if any of the files in this directory already exist
they will <STRONG>not</STRONG> be overwritten. Instead the new copy of
the corresponding file will be left with the extension
<SAMP>.default</SAMP>. So, for example, if
<SAMP>conf\httpd.conf</SAMP> already exists it will not be altered,
but the version which would have been installed will be left in
<SAMP>conf\httpd.conf.default</SAMP>. After the installation has
finished you should manually check to see what in new in the
<SAMP>.default</SAMP> file, and if necessary update your existing
configuration files.

<P>

Also, if you already have a file called <SAMP>htdocs\index.html</SAMP>
then it will not be overwritten (no <SAMP>index.html.default</SAMP>
file will be installed either). This should mean it a safe to install
Apache over an existing installation (but you will have to stop the
existing server running before doing the installation, then start the
new one after the installation is finished).

<P>

After installing Apache, you should edit the configuration files in
the <SAMP>conf</SAMP> directory as required. These files will be
configured during the install ready for Apache to be run from the
directory where it was installed, with the documents served from the
subdirectory <SAMP>htdocs</SAMP>. There are lots of other options
which should be set before you start really using Apache. However to
get started quickly the files should work as installed.
d170 1
a170 1
There are two ways you can run Apache:
d173 64
a236 47
 <LI>As a <A HREF="#service">"service"</A> (available on NT only). This is the best option if
    you want Apache to automatically start when you machine boots, and to
    keep Apache running when you log-off.

 <LI>From a <A HREF="#cmdline">console window</A>. This is the only option
    available for
    Windows 95 users.
</UL>

To start Apache as a service, you first need to install it as a
service. Multiple Apache services can be installed, each with a
different name and configuration.  To install the default Apache
service named "Apache", run the "Install Apache as Service (NT only)"
option from the Start menu. Once this is done you can start the "Apache"
service by opening the Services window (in the Control Panel), selecting Apache,
then clicking on Start. Apache will now be running in the background. You
can later stop Apache by clicking on Stop. As an alternative to using
the Services window, you can start and stop the "Apache" service from the control
line with

<PRE>
  NET START APACHE
  NET STOP APACHE
</PRE>

See <A HREF="#signalsrv">Signalling Service Apache when Running</A>
for more information on installing and controlling Apache services.

<P>

To run Apache from a console window, select the "Start Apache as
console app" option from the Start menu (in Apache 1.3.4 and earlier,
this option was called "Apache Server"). This will open a console
window and start Apache running inside it. The window will remain
active until you stop Apache. To stop Apache running, either select
the "Shutdown Apache console app" icon option from the Start menu
(this is not available in Apache 1.3.4 or earlier), or see <A
HREF="#signal">Signalling Console Apache when Running</A> for how
to control Apache from the command line.

<P>

After starting Apache running (either in a console window or as a
service) if will be listening to port 80 (unless you changed the
<SAMP>Port</SAMP>, <SAMP>Listen</SAMP> or <SAMP>BindAddress</SAMP>
directives in the configuration files). To connect to the server and
access the default page, launch a browser and enter this URL:
d242 5
a246 5
This should respond with a welcome page, and a link to the Apache
manual. If nothing happens or you get an error, look in the
<SAMP>error_log</SAMP> file in the <SAMP>logs</SAMP> directory.
If your host isn't connected to the net, you may have to use
this URL:
d252 2
a253 1
<P>
d255 8
a262 2
Once your basic installation is working, you should configure it
properly by editing the files in the <SAMP>conf</SAMP> directory.
d266 18
a283 7
Apache is configured by files in the <SAMP>conf</SAMP>
directory. These are the same as files used to configure the Unix
version, but there are a few different directives for Apache on
Windows. See the <A HREF="./">Apache documentation</A> for all the
available directives.

<P>
d285 1
a285 1
The main differences in Apache for Windows are:
d288 1
a288 1
  <LI><P>Because Apache for Windows is multithreaded, it does not use a
d292 4
a295 6
      the child each request is handled by a separate thread.
      <P>

      So the "process"-management directives are different:
      <P><A
         HREF="mod/core.html#maxrequestsperchild">MaxRequestsPerChild</A>
d302 1
a302 1
      <P><A HREF="mod/core.html#threadsperchild">ThreadsPerChild</A> -
d307 3
a309 2
         <CODE>ThreadsPerChild 50</CODE>.</P>
  <LI><P>The directives that accept filenames as arguments now must use
d313 2
a314 2
      the Apache executable will be assumed.</P>
  <LI><P>Apache for Windows contains the ability to load modules at runtime,
d317 1
a317 1
      <CODE>\Apache\modules</CODE> directory. To activate these, or other
d321 8
a328 1
      in <CODE>access.conf</CODE>):</P>
d337 2
a338 1
         is available.</A>
a340 4
<H2><A NAME="service">Running Apache for Windows as a Service</A></H2>
 <STRONG>Note: The -n option to specify a service name is only available
 with Apache 1.3.7 and later.  Earlier versions of Apache only support
 the default service name 'Apache'.</STRONG>
d342 1
a342 1
<P>
d344 3
a346 1
You can install Apache as a Windows NT service as follows:
d348 3
a350 44
<PRE>
    apache -i -n "service name"
</PRE>

To install a service to use a particular configuration, specify the
configuration file when the service is installed:

<PRE>
    apache -i -n "service name" -f "\my server\conf\my.conf"
</PRE>

To remove an Apache service, use

<PRE>
    apache -u -n "service name"
</PRE>

The default "service name", if one is not specified, is "Apache".

<P>

Once a service is installed, you can use the <SAMP>-n</SAMP> option, in conjunction
with other options, to refer to a service's configuration file.  For example:<br>

To test a service's configuration file:
<PRE>
    apache -n "service name" -t
</PRE>

To start a console Apache using a service's configuration file:
<PRE>
    apache -n "service name"
</PRE>

<H2><A NAME="cmdline">Running Apache for Windows from the Command Line</A></H2>

The Start menu icons and the NT Service manager can provide a simple
interface for administering Apache. But in some cases it is easier to
work from the command line.

<P>
When working with Apache it is important to know how it will find the
configuration files.  You can specify a configuration file on the command line
in two ways:
d353 1
a353 1
<LI>-f specifies a path to a particular configuration file
d358 1
a358 1
<LI>-n specifies the configuration file of an installed Apache service (Apache 1.3.7 and later)
d362 2
a363 1
In these cases, the proper ServerRoot should be set in the configuration file.
d365 5
a369 6
<P>

If you don't specify a configuration file name with -f or -n, Apache will
use the file name compiled into the server, usually "conf/httpd.conf".  Invoking
Apache with the -V switch will display this value labeled as SERVER_CONFIG_FILE.
Apache will then determine its ServerRoot by trying the following, in this order:
d374 1
a374 1
<LI>Current working directory
d379 34
a412 15
<P>
The server root compiled into the server is usually "/apache".
invoking apache with the -V switch will display this value
labeled as HTTPD_ROOT.

<P>
When invoked from the start menu, Apache is usually passed no arguments,
so using the registry entry is the preferred technique for console Apache.

<P>
During a binary installation, a registry key will have
been installed, for example:
<PRE>
  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3.4\ServerRoot
</PRE>
d414 2
a415 26
<P>
This key is compiled into the server and can enable you to test 
new versions without affecting the current version.  Of course
you must take care not to install the new version on top of the
old version in the file system.

<P>
If you did not do a binary install then Apache will in some
scenarios complain that about the missing registry key.  This
warning can be ignored if it otherwise was able to find its
configuration files.

<P>
The value of this key is the "ServerRoot" directory, containing the
<SAMP>conf</SAMP> directory. When Apache starts it will read the
<SAMP>httpd.conf</SAMP> file from this directory. If this file
contains a <SAMP>ServerRoot</SAMP> directive which is different from
the directory obtained from the registry key above, Apache will forget
the registry key and use the directory from the configuration file.
If you copy the Apache directory or configuration files to a new
location it is vital that you update the <SAMP>ServerRoot</SAMP>
directory in the <SAMP>httpd.conf</SAMP> file to the new location.

<P>
To run Apache from the command line as a console application, use the
following command:
d421 2
a422 2
Apache will execute, and will remain running until it is stopped by pressing
control-C.
d424 1
a424 1
<H2><A NAME="signalsrv">Signalling Service Apache when running</A></H2>
d426 2
a427 2
On Windows NT, multiple instances of Apache can be run as services.
Signal an Apache service to start, restart, or shutdown as follows:
d430 1
a430 3
    apache -n "service name" -k start
    apache -n "service name" -k restart
    apache -n "service name" -k shutdown
d433 2
a434 2
In addition, you can use the native NT NET command to
start and stop Apache services as follows:
d436 2
a437 9
<PRE>
    NET START "service name"
    NET STOP "service name"
</PRE>

<H2><A NAME="signal">Signalling Console Apache when running</A></H2>

On Windows 95, Apache runs as a console application. You can tell a
running Apache to stop by opening another console window and running
d439 11
a449 19
<PRE>
    apache -k shutdown
</PRE>
<BLOCKQUOTE>
 <STRONG>Note: This option is only available with Apache 1.3.3 and
 later.  For earlier versions, you need to use Control-C in the
 Apache console window to shut down the server.</STRONG>
</BLOCKQUOTE>

<P>
This should be used instead of pressing Control-C in the running
Apache console window, because it lets Apache end any current
transactions and cleanup gracefully.

<P>

You can also tell Apache to restart. This makes it re-read the
configuration files. Any transactions in progress are allowed to
complete without interruption. To restart Apache, run
a453 99
<BLOCKQUOTE>
 <STRONG>Note: This option is only available with Apache 1.3.3 and
 later.  For earlier versions, you need to use Control-C in the
 Apache console window to shut down the server.</STRONG>
</BLOCKQUOTE>

<P>
Note for people familiar with the Unix version of Apache: these
commands provide a Windows equivalent to <CODE>kill -TERM
<EM>pid</EM></CODE> and <CODE>kill -USR1 <EM>pid</EM></CODE>. The command
line option used, <CODE>-k</CODE>, was chosen as a reminder of the
"kill" command used on Unix.

<H2><A NAME="comp">Compiling Apache for Windows</A></H2>

<P>Compiling Apache requires Microsoft Visual C++ 5.0 to be properly
   installed. It is easiest to compile with the command-line tools
   (nmake, <EM>etc.</EM>..). Consult the VC++ manual to determine how to install
   them.</P>

<P>First, unpack the Apache distribution into an appropriate
   directory. Open a command-line prompt, and change to the
   <CODE>src</CODE> subdirectory of the Apache distribution.</P>

<P>The master Apache makefile instructions are contained in the
   <CODE>Makefile.nt</CODE> file. To compile Apache on Windows NT, simply
   use one of the following commands:
<UL>
<LI><CODE>nmake /f Makefile.nt _apacher</CODE> (release build)
<LI><CODE>nmake /f Makefile.nt _apached</CODE> (debug build)
</UL>

<P><em>(1.3.4 and later)</em> To compile Apache on Windows 95, use one of
<UL>
<LI><CODE>nmake /f Makefile_win32.txt</CODE> (release build)
<LI><CODE>nmake /f Makefile_win32_debug.txt</CODE> (debug build)
</UL>

<P>These will both compile Apache. The latter will include debugging
   information in the resulting files, making it easier to find bugs and
   track down problems.</P>

<P>Apache can also be compiled using VC++'s Visual Studio development
   environment. Although compiling Apache in this manner is not as
   simple, it makes it possible to easily modify the Apache source, or
   to compile Apache if the command-line tools are not installed.
   Project files (<CODE>.DSP</CODE>) are included for each of the
   portions of Apache. To build Apache from the these projects files
   you will need to build the following projects <EM>in this order</EM>:

 <OL>
   <LI><CODE>os\win32\ApacheOS.dsp</CODE>
   <LI><CODE>regex\regex.dsp</CODE>
   <LI><CODE>ap\ap.dsp</CODE>
   <LI><CODE>main\gen_uri_delims.dsp</CODE>
   <LI><CODE>main\gen_test_char.dsp</CODE>
   <LI><CODE>ApacheCore.dsp</CODE>
   <LI><CODE>Apache.dsp</CODE>
 </OL>

   In addition, the <CODE>src\os\win32</CODE> subdirectory contains
   project files for the optional modules (see below).</P>

<P>Once Apache has been compiled, it needs to be installed in its server
   root directory. The default is the <CODE>\Apache</CODE>
   directory, on the current hard drive. </P>

<P>To install the files into the <CODE>\Apache</CODE> directory
   automatically, use one the following nmake commands (see above):</P>
<UL>
<LI><CODE>nmake /f Makefile.nt installr INSTDIR=<EM>dir</EM></CODE>
 (for release build)
<LI><CODE>nmake /f Makefile.nt installd INSTDIR=<EM>dir</EM></CODE>
 (for debug build)
</UL>
or, for Windows 95 (1.3.4 and later), use one of:
<UL>
<LI><CODE>nmake /f Makefile_win32.txt install INSTDIR=<EM>dir</EM></CODE>
 (for release build)
<LI><CODE>nmake /f Makefile_win32_debug.txt install INSTDIR=<EM>dir</EM></CODE>
 (for debug build)
</UL>

The dir argument to INSTDIR gives the installation directory; it can
be omitted if Apache is to be installed into <SAMP>\Apache</SAMP>.

<P>This will install the following:</P>

<UL>
  <LI><CODE><EM>dir</EM>\Apache.exe</CODE> - Apache executable
  <LI><CODE><EM>dir</EM>\ApacheCore.dll</CODE> - Main Apache shared library
  <LI><CODE><EM>dir</EM>\modules\ApacheModule*.dll</CODE> - Optional Apache
      modules (7 files)
  <LI><CODE><EM>dir</EM>\conf</CODE> - Empty configuration directory
  <LI><CODE><EM>dir</EM>\logs</CODE> - Empty logging directory
</UL>

<P>If you do not have nmake, or wish to install in a different directory,
   be sure to use a similar naming scheme.</P>
d455 24
a478 6
<P>
Before running the server you must fill out the conf directory.
Copy the *.conf-dist-win from the distribution conf directory
and rename *.conf.  Edit the @@@@ServerRoot@@@@ entries to your
actual server root (for example "C:\apache").  Copy over
the conf/magic and conf/mime.types files as well.
d482 1
a482 1
  Apache HTTP Server Version 1.3
@


1.4
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d361 1
a361 1
Apache will then determine it's ServerRoot by trying the following, in this order:
d396 1
a396 1
warning can be ignored if it otherwise was able to find it's
@


1.3
log
@Apache 1.3.4 merge
@
text
@d56 3
a58 1
  <LI><A HREF="#signal">Signalling Apache when running</A>
d67 3
a69 3
will only work in Intel processors. Apache may also run on Windows 95
and Windows NT 3.5.1, but these have not been tested. In all cases
TCP/IP networking must be installed.
d77 8
d164 1
a164 1
 <LI>As a "service" (available on NT only). This is the best option if
d174 9
a182 7
service. Run the "Install Apache as Service" option from the Start
menu. Once this is done you can start Apache by opening the Services
window (in the Control Panel), selecting Apache, then clicking on
Start. Apache will now be running in the background. You can later
stop Apache by clicking on Stop. As an alternative to using the
Services window, you can start and stop Apache from the control line
with
d189 14
a202 5
To run Apache from a console window, select the "Apache Server" option
from the Start menu. This will open a console window and start Apache
running inside it. The window will remain active until you stop
Apache. To stop Apache running, see <A HREF="#signal"><SAMP>Signalling Apache
when Running</SAMP></A>.
d219 6
d290 43
d341 21
a361 1
configuration files.  Apache will try one of the following, in this order.
a364 1
<LI>The -f switch on the command line.
d366 1
d373 1
a373 1
invoking apache with the -v switch will display this value
d377 2
a378 7
Your current working directory when Apache is started up has no
effect on Apache's behavior.

<P>
When invoked from the start menu or the Service Manager, Apache is
usually passed no arguments, so using the registry entry is the preferred
technique.
d391 1
a391 2
old version in the file system.  You cannot run two invocations
of Apache on Windows simultaneously.
d415 1
a415 1
    apache -s
d419 1
a419 2
control-C.  (The -s option is not required by Windows 95, but on Windows NT it
prevents Apache waiting to see if Apache is running as a service.)
d421 1
a421 1
<P>
d423 2
a424 1
You can install Apache as a Windows NT service as follows:
d427 3
a429 1
    apache -i
d432 2
a433 1
and to remove the Apache service, use
d436 2
a437 1
    apache -u
d440 1
a440 2

<H2><A NAME="signal">Signalling Apache when running</A></H2>
d584 1
@


1.2
log
@Apache 1.3.3 merge + proxy_segv fix
@
text
@d26 1
a26 1
   Apache 1.3b6 and later under Microsoft Windows. Please note that at
a140 13
<BLOCKQUOTE>
<STRONG>Important note for 1.3b6 installs</STRONG>: the above only
applies for 1.3b7 and later. In 1.3b6 the installer would overwrite
any existing <SAMP>httpd.conf</SAMP>, <SAMP>access.conf</SAMP>,
<SAMP>srm.conf</SAMP> or <SAMP>mime.types</SAMP> files in the
<SAMP>conf</SAMP>, and will also overwrite your
<SAMP>index.html</SAMP> file in the <SAMP>htdocs</SAMP> directory. You
should copy these files or directories before installing Apache 1.3b6
or install into a new directory.
</BLOCKQUOTE>

<P>

d180 2
a181 2
Apache. To stop Apache running, see <A HREF="#signal>Signalling Apache
when Running</SAMP>.
d265 2
a266 2
The Start menu icons and the NT Service manager can provide an simple
interafce for administering Apache. But in some cases it is easier to
d291 2
a292 2
Under windows, when invoked from the start menu or the Service Manager Apache is
usually passed no arguments.  So using the registry entry is the perfered
d299 1
a299 1
  HKEY_LOCAL_MACHINE\Software\Apache Group\Apache\1.3.1\ServerRoot
d306 1
a306 1
old version in the file system.  You can not run two invocations
d311 1
a311 1
senarios complain that about the missing registry key.  This
d340 1
a340 1
To install Apache as a Windows NT service as follows:
d355 1
a355 1
On Windows 95 Apache runs as a console application. You can tell a
d361 5
d367 1
d381 5
d387 1
d390 1
a390 1
<i>pid</i></CODE> and <CODE>kill -USR1 <i>pid</i></CODE>. The command
d406 2
a407 2
   <CODE>Makefile.nt</CODE> file. To compile Apache, simply use one of
   the following commands:
d413 6
d456 7
d464 1
a464 1
The dir argument to INSTDIR gives the installation directory. The can
@


1.1
log
@Initial revision
@
text
@d26 1
a26 1
   Apache 1.3 under Microsoft Windows. Please note that at
d56 1
d193 2
a194 2
Apache. To stop Apache running, press Control-C within the console
window.
d365 29
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@
