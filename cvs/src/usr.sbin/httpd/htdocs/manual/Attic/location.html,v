head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.52
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.48
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.46
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.44
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.42
	OPENBSD_5_0:1.4.0.40
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.38
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.36
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.32
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.34
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.3
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.3
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.1.1.2.0.10
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.8
	OPENBSD_2_7_BASE:1.1.1.2
	OPENBSD_2_6:1.1.1.2.0.6
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.4;

1.4
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.29.10.21.27;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.22.17.22;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.31;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.31;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.57;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.27.24;	author henning;	state Exp;
branches;
next	;


desc
@@


1.5
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Access Control by URL</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Access Control by URL</h1>

    <h2><a id="location" name="location">The
    <code>&lt;Location&gt;</code> Directive</a></h2>
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> &lt;Location <em>URL
    prefix</em>&gt;<br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> core<br />
     

    <p>The &lt;Location&gt; directive provides for access control
    by URL. It is comparable to the <a
    href="mod/core.html#directory">&lt;Directory&gt;</a> directive,
    and should be matched with a &lt;/Location&gt; directive.
    Directives that apply to the URL given should be listed between
    them. <code>&lt;Location&gt;</code> sections are processed in
    the order they appear in the configuration file, after the
    &lt;Directory&gt; sections and <code>.htaccess</code> files are
    read.</p>

    <p>Note that, due to the way HTTP functions, <em>URL
    prefix</em> should, save for proxy requests, be of the form
    <code>/path/</code>, and should not include the
    <code>http://servername</code>. It doesn't necessarily have to
    protect a directory (it can be an individual file, or a number
    of files), and can include wild-cards. In a wild-card string,
    `?' matches any single character, and `*' matches any sequences
    of characters.</p>

    <p>This functionality is especially useful when combined with
    the <code><a
    href="mod/mod_mime.html#sethandler">SetHandler</a></code>
    directive. For example, to enable status requests, but allow
    them only from browsers at foo.com, you might use:</p>
<pre>
    &lt;Location /status&gt;
    SetHandler server-status
    Order Deny,Allow
    Deny from all
    Allow from .foo.com
    &lt;/Location&gt;
</pre>
        <hr />

    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>

  </body>
</html>

@


1.4
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@@


1.3
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 60
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Access Control by URL</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server
 </H3>
</DIV>

<H1 ALIGN="CENTER">Access Control by URL</H1>

<H2><A NAME="location">The <CODE>&lt;Location&gt;</CODE> Directive</A></H2>

<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> &lt;Location <EM>URL prefix</EM>&gt;<BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> core<BR>

<P>The &lt;Location&gt; directive provides for access control by
URL. It is comparable to the <A
HREF="mod/core.html#directory">&lt;Directory&gt;</A> directive, and
should be matched with a &lt;/Location&gt; directive. Directives that
apply to the URL given should be listed
between them. <CODE>&lt;Location&gt;</CODE> sections are processed in the
order they appear in the configuration file, after the
&lt;Directory&gt; sections and <CODE>.htaccess</CODE> files are
read.</P>

<P>Note that, due to the way HTTP functions, <EM>URL prefix</EM>
should, save for proxy requests, be of the form <CODE>/path/</CODE>,
and should not include the <CODE>http://servername</CODE>. It doesn't
necessarily have to protect a directory (it can be an individual
file, or a number of files), and can include wild-cards.  In a wild-card
string, `?' matches any single character, and `*' matches any
sequences of characters.

<P>This functionality is especially useful when combined with the
<CODE><A HREF="mod/mod_mime.html#sethandler">SetHandler</A></CODE>
directive. For example, to enable status requests, but allow them only
from browsers at foo.com, you might use:
d4 57
a60 1
<PRE>
d67 2
a68 6
</PRE>

<HR>
 <H3 ALIGN="CENTER">
  Apache HTTP Server
 </H3>
d70 2
a71 1
<A HREF="./"><IMG SRC="images/index.gif" ALT="Index"></A>
d73 2
a74 2
</BODY>
</HTML>
@


1.2
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d43 2
a44 2
apply to the URL given should be listen
within. <CODE>&lt;Location&gt;</CODE> sections are processed in the
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d24 1
a24 1
<h2><a name="location">The <code>&lt;Location&gt;</code> Directive</a></h2>
d26 16
a41 7
<strong>Syntax:</strong> &lt;Location <em>URL prefix</em>&gt;<br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> core<br>

<p>The &lt;Location&gt; directive provides for access control by
URL. It is comparable to the <a
href="mod/core.html#directory">&lt;Directory&gt;</a> directive, and
d44 1
a44 1
within. <code>&lt;Location&gt;</code> sections are processed in the
d46 2
a47 2
&lt;Directory&gt; sections and <code>.htaccess</code> files are
read.</p>
d49 3
a51 3
<p>Note that, due to the way HTTP functions, <em>URL prefix</em>
should, save for proxy requests, be of the form <code>/path/</code>,
and should not include the <code>http://servername</code>. It doesn't
d57 2
a58 2
<p>This functionality is especially useful when combined with the
<code><a href="mod/mod_mime.html#sethandler">SetHandler</a></code>
d62 1
a62 1
<pre>
d65 3
a67 3
    order deny,allow
    deny from all
    allow from .foo.com
d69 1
a69 1
</pre>
d72 3
a74 3
<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.2
</H3>
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d24 1
a24 1
<H2><A NAME="location">The <CODE>&lt;Location&gt;</CODE> Directive</A></H2>
d26 7
a32 16
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> &lt;Location <EM>URL prefix</EM>&gt;<BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> core<BR>

<P>The &lt;Location&gt; directive provides for access control by
URL. It is comparable to the <A
HREF="mod/core.html#directory">&lt;Directory&gt;</A> directive, and
d35 1
a35 1
within. <CODE>&lt;Location&gt;</CODE> sections are processed in the
d37 2
a38 2
&lt;Directory&gt; sections and <CODE>.htaccess</CODE> files are
read.</P>
d40 3
a42 3
<P>Note that, due to the way HTTP functions, <EM>URL prefix</EM>
should, save for proxy requests, be of the form <CODE>/path/</CODE>,
and should not include the <CODE>http://servername</CODE>. It doesn't
d48 2
a49 2
<P>This functionality is especially useful when combined with the
<CODE><A HREF="mod/mod_mime.html#sethandler">SetHandler</A></CODE>
d53 1
a53 1
<PRE>
d60 1
a60 1
</PRE>
d63 3
a65 3
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
 </H3>
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 60
a60 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d62 1
a62 57
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Access Control by URL</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Access Control by URL</h1>

    <h2><a id="location" name="location">The
    <code>&lt;Location&gt;</code> Directive</a></h2>
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> &lt;Location <em>URL
    prefix</em>&gt;<br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> core<br />
     

    <p>The &lt;Location&gt; directive provides for access control
    by URL. It is comparable to the <a
    href="mod/core.html#directory">&lt;Directory&gt;</a> directive,
    and should be matched with a &lt;/Location&gt; directive.
    Directives that apply to the URL given should be listed between
    them. <code>&lt;Location&gt;</code> sections are processed in
    the order they appear in the configuration file, after the
    &lt;Directory&gt; sections and <code>.htaccess</code> files are
    read.</p>

    <p>Note that, due to the way HTTP functions, <em>URL
    prefix</em> should, save for proxy requests, be of the form
    <code>/path/</code>, and should not include the
    <code>http://servername</code>. It doesn't necessarily have to
    protect a directory (it can be an individual file, or a number
    of files), and can include wild-cards. In a wild-card string,
    `?' matches any single character, and `*' matches any sequences
    of characters.</p>

    <p>This functionality is especially useful when combined with
    the <code><a
    href="mod/mod_mime.html#sethandler">SetHandler</a></code>
    directive. For example, to enable status requests, but allow
    them only from browsers at foo.com, you might use:</p>
<pre>
d65 3
a67 3
    Order Deny,Allow
    Deny from all
    Allow from .foo.com
d69 6
a74 2
</pre>
        <hr />
d76 1
a76 2
    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>
d78 2
a79 2
  </body>
</html>
@


