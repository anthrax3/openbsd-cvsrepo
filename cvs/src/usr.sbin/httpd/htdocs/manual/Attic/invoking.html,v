head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.38
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.34
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.32
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.30
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.28
	OPENBSD_5_0:1.7.0.26
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.24
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.22
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.18
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.20
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.16
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.14
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.12
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.10
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.7;

1.7
date	2005.07.29.23.55.39;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.12.07.56.46;	author beck;	state dead;
branches;
next	1.5;

1.5
date	2001.03.29.10.21.27;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.22.17.21;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.09.29.06.28.58;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.01.05.05;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.30;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.30;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.56;	author beck;	state Exp;
branches;
next	;


desc
@@


1.8
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Starting Apache</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Starting Apache</h1>

    <ul>
      <li>
        <a href="#unix">Starting Apache on Unix</a> 

        <ul>
          <li><a href="#errors">Errors During Start-up</a></li>

          <li><a href="#boot">Starting at Boot-Time</a></li>

          <li><a href="#info">Additional Information</a></li>
        </ul>
      </li>
    </ul>
    <hr />

    <h2><a id="unix" name="unix">Starting Apache on Unix</a></h2>

    <p>On Unix, the <a href="programs/httpd.html">httpd</a> program
    is run as a daemon which executes continuously in the
    background to handle requests. It is possible to have Apache
    invoked by the Internet daemon <code>inetd</code> each time a
    connection to the HTTP service is made using the <a
    href="mod/core.html#servertype">ServerType</a> directive, but
    this is not recommended.</p>

    <p>If the <a href="mod/core.html#port">Port</a> specified in
    the configuration file is the default of 80 (or any other port
    below 1024), then it is necessary to have root privileges in
    order to start Apache, so that it can bind to this privileged
    port. Once the server has started and completed a few
    preliminary activities such as opening its log files, it will
    launch several <em>child</em> processes which do the work of
    listening for and answering requests from clients. The main
    <code>httpd</code> process continues to run as the root user,
    but the child processes run as a less privileged user. This is
    controlled by Apache's <a
    href="server-wide.html#process">process creation
    directives</a>.</p>

    <p>The first thing that <code>httpd</code> does when it is
    invoked is to locate and read the <a
    href="configuring.html">configuration file</a>
    <code>httpd.conf</code>. The location of this file is set at
    compile-time, but it is possible to specify its location at run
    time using the <code>-f</code> command-line option as in</p>

    <blockquote>
      <code>/usr/local/apache/bin/httpd -f
      /usr/local/apache/conf/httpd.conf</code>
    </blockquote>

    <p>As an alternative to invoking the <code>httpd</code> binary
    directly, a shell script called <a
    href="programs/apachectl.html">apachectl</a> is provided which
    can be used to control the daemon process with simple commands
    such as <code>apachectl start</code> and <code>apachectl
    stop</code>.</p>

    <p>If all goes well during startup, the server will detach from
    the terminal and the command prompt will return almost
    immediately. This indicates that the server is up and running.
    You can then use your browser to connect to the server and view
    the test page in the <a
    href="mod/core.html#documentroot">DocumentRoot</a> directory
    and the local copy of the documentation linked from that
    page.</p>

    <h3><a id="errors" name="errors">Errors During
    Start-up</a></h3>

    <p>If Apache suffers a fatal problem during startup, it will
    write a message describing the problem either to the console or
    to the <a href="mod/core.html#errorlog">ErrorLog</a> before
    exiting. One of the most common error messages is "<code>Unable
    to bind to Port ...</code>". This message is usually caused by
    either:</p>

    <ul>
      <li>Trying to start the server on a privileged port when not
      logged in as the root user; or</li>

      <li>Trying to start the server when there is another instance
      of Apache or some other web server already bound to the same
      port.</li>
    </ul>

    <p>For further trouble-shooting instructions, consult the
    Apache <a href="misc/FAQ.html">FAQ</a>.</p>

    <h3><a id="boot" name="boot">Starting at Boot-Time</a></h3>

    <p>If you want your server to continue running after a system
    reboot, you should add a call to <code>httpd</code> or
    <code>apachectl</code> to your system startup files (typically
    <code>rc.local</code> or a file in an <code>rc.N</code>
    directory). This will start Apache as root. Before doing this
    ensure that your server is properly configured for security and
    access restrictions. The <code>apachectl</code> script is
    designed so that it can often be linked directly as an init
    script, but be sure to check the exact requirements of your
    system.</p>

    <h3><a id="info" name="info">Additional Information</a></h3>

    <p>Additional information about the command-line options of <a
    href="programs/httpd.html">httpd</a> and <a
    href="programs/apachectl.html">apachectl</a> as well as other
    support programs included with the server is available on the
    <a href="programs/">Server and Supporting Programs</a> page.
    There is also documentation on all the <a
    href="mod/">modules</a> included with the Apache distribution
    and the <a href="mod/directives.html">directives</a> that they
    provide.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>

  </body>
</html>



@


1.7
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.6
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d1 146
a146 129
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Starting Apache</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server
 </H3>
</DIV>

<H1 ALIGN="CENTER">Starting Apache</H1>

<ul>
<li><a href="#windows">Starting Apache on Windows</a></li>
<li><a href="#unix">Starting Apache on Unix</a>
<ul>
<li><a href="#errors">Errors During Start-up</a></li>
<li><a href="#boot">Starting at Boot-Time</a></li>
<li><a href="#info">Additional Information</a></li>
</ul>
</li>
</ul>

<hr>

<h2><a name="windows">Starting Apache On Windows</a></h2>

<p>On Windows, Apache is normally run as a service on Windows NT, or
as a console application on Windows 95. For details, see <A
HREF="windows.html#run">running Apache for Windows</A>.</p>

<h2><a name="unix">Starting Apache on Unix</a></h2>

<p>On Unix, the <a href="programs/httpd.html">httpd</a> program is run
as a daemon which executes continuously in the background to handle
requests.  It is possible to have Apache invoked by the Internet daemon
<CODE>inetd</CODE> each time a connection to the HTTP service is made
using the <A HREF="mod/core.html#servertype">ServerType</A> directive,
but this is not recommended.</p>

<p>If the <a href="mod/core.html#port">Port</a> specified in the
configuration file is the default of 80 (or any other port below
1024), then it is necessary to have root privileges in order to start
Apache, so that it can bind to this privileged port.  Once the server
has started and completed a few preliminary activities such as opening
its log files, it will launch several <em>child</em> processes which
do the work of listening for and answering requests from clients.  The
main <code>httpd</code> process continues to run as the root user, but
the child processes run as a less privileged user.  This is controlled
by Apache's <a href="server-wide.html#process">process creation
directives</a>.</p>

<p>The first thing that <code>httpd</code> does when it is invoked is
to locate and read the <a href="configuring.html">configuration
file</a> <code>httpd.conf</code>.  The location of this file is set at
compile-time, but it is possible to specify its location at run time
using the <code>-f</code> command-line option as in</p>

<blockquote><code> /usr/local/apache/bin/httpd -f
/usr/local/apache/conf/httpd.conf </code></blockquote>

<p>As an alternative to invoking the <code>httpd</code> binary
directly, a shell script called <a
href="programs/apachectl.html">apachectl</a> is provided which can be
used to control the daemon process with simple commands such as
<code>apachectl start</code> and <code>apachectl stop</code>.</p>

<p>If all goes well during startup, the server will detach from the
terminal and the command prompt will return almost immediately.
This indicates that the server is up and running.  You can then
use your browser to connect to the server and view the test
page in the <a href="mod/core.html#documentroot">DocumentRoot</a>
directory and the local copy of the documentation linked from
that page.</p>

<h3><a name="errors">Errors During Start-up</a></h3>

<p>If Apache suffers a fatal problem during startup, it will write a
message describing the problem either to the console or to the <a
href="mod/core.html#errorlog">ErrorLog</a> before exiting.  One of the
most common error messages is "<code>Unable to bind to Port
...</code>".  This message is usually caused by either:</p>
<ul>
<li>Trying to start the server on a privileged port when not
logged in as the root user; or</li>
<li>Trying to start the server when there is another instance
of Apache or some other web server already bound to the same port.</li>
</ul>
<p>For further trouble-shooting instructions, consult the Apache <a
href="misc/FAQ.html">FAQ</a>.</p>

<h3><a name="boot">Starting at Boot-Time</a></h3>

<p>If you want your server to continue running after a system reboot,
you should add a call to <code>httpd</code> or <code>apachectl</code>
to your system startup files (typically <code>rc.local</code> or a
file in an <code>rc.N</code> directory). This will start Apache as
root. Before doing this ensure that your server is properly configured
for security and access restrictions.  The <code>apachectl</code>
script is designed so that it can often be linked directly as an init
script, but be sure to check the exact requirements of your system.</p>

<h3><a name="info">Additional Information</a></h3>

<p>Additional information about the command-line options of <a
href="programs/httpd.html">httpd</a> and <a
href="programs/apachectl.html">apachectl</a> as well as other support
programs included with the server is available on the <a
href="programs/">Server and Supporting Programs</a> page.  There is
also documentation on all the <a href="mod/">modules</a> included with
the Apache distribution and the <a
href="mod/directives.html">directives</a> that they provide.</p>


<HR>
 <H3 ALIGN="CENTER">
  Apache HTTP Server
 </H3>
a147 1
<A HREF="./"><IMG SRC="images/index.gif" ALT="Index"></A>
a148 2
</BODY>
</HTML>
@


1.5
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@@


1.4
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d24 100
a123 1
<H2>Invoking Apache</H2>
a124 121
On Unix, the <CODE>httpd</CODE> program is usually run as a daemon
which executes continuously, handling requests.  It is possible to
invoke Apache by the Internet daemon <CODE>inetd</CODE> each time a
connection to the HTTP service is made (use the <A
HREF="mod/core.html#servertype">ServerType</A> directive) but this is
not recommended.

<P>

On Windows, Apache is normally run as a service on Windows NT, or as a
console application on Windows 95. See also <A
HREF="windows.html#run">running Apache for Windows</A>.

<H2>Command line options</H2>
The following options are recognized on the httpd command line:
<DL>
<DT><CODE>-d</CODE> <EM>serverroot</EM>
<DD>Set the initial value for the
<A HREF="mod/core.html#serverroot">ServerRoot</A> variable to
<EM>serverroot</EM>. This can be overridden by the ServerRoot command
in the configuration file. The default is
<CODE>/usr/local/apache</CODE> on Unix, <CODE>/apache</CODE> on
Windows and <CODE>/os2httpd</CODE> on OS/2.

<DT><CODE>-D</CODE> <EM>name</EM>
<DD>Define a name for use in in 
<A HREF="mod/core.html#ifdefine">IfDefine</A> directives.
This option can be used to optionally enable certain functionality in the
configuration file, or to use a common configuration for
several independent hosts, where host specific information is enclosed in
&lt;IfDefine&gt; sections.

<DT><CODE>-f</CODE> <EM>config</EM>
<DD>Execute the commands in the file <EM>config</EM> on startup. If
<EM>config</EM> does not begin with a <CODE>/</CODE>, then it is taken to be a
path relative to the <A HREF="mod/core.html#serverroot">ServerRoot</A>. The
default is <CODE>conf/httpd.conf</CODE>.

<DT><CODE>-C</CODE> <EM>"directive"</EM>
<DD>Process the given apache "directive" (just as if it had been part of a
configuration file) <STRONG>before</STRONG> actually reading the regular configuration files.

<DT><CODE>-c</CODE> <EM>"directive"</EM>
<DD>Process the given apache "directive" <STRONG>after</STRONG> reading
all the regular configuration files.

<DT><CODE>-X</CODE>
<DD>Run in single-process mode, for internal debugging purposes only; the
daemon does not detach from the terminal or fork any children. Do <EM>NOT</EM>
use this mode to provide ordinary web service.

<DT><CODE>-v</CODE>
<DD>Print the version of httpd and its build date, and then exit.

<DT><A NAME="version"><CODE>-V</CODE></A>
<DD>Print the base version of httpd, its
build date, and a list of compile time settings which influence the
behavior and performance of the apache server (<EM>e.g.</EM>,
<SAMP>-DUSE_MMAP_FILES</SAMP>),
then exit.

<DT><CODE>-L</CODE>
<DD>

Give a list of directives together with expected arguments and places
where the directive is valid, then exit.  (Apache 1.3.4 and
later. Earlier versions used -l instead).


<DT><CODE>-l</CODE>
<DD>

Give a list of all modules compiled into the server, then exit.
(Apache 1.3.4 and later. Earlier versions used -h instead).<br>

Give a list of directives together with expected arguments and places
where the directive is valid, then exit. (Apache 1.2 to 1.3.3. Later
versions use -L instead).



<DT><A NAME="help"><CODE>-h</CODE></A>
<DD>

Print a list of the httpd options, then exit. (Apache 1.3.4 and
later. Earlier versions used -? instead).<br>

Give a list of all modules compiled into the server, then exit. (Up to
Apache 1.3.3. Later versions use -l instead).<br>


<DT><CODE>-S</CODE>
<DD>Show the settings as parsed from the config file (currently only
shows a breakdown of the vhost settings) but do not start the
server. (Up to Apache 1.3.3, this option also started the server).

<DT><CODE>-t</CODE>
<DD>Test the configuration file syntax (<EM>i.e.</EM>, read all configuration files
and interpret them) but do not start the server. If the configuration contains
errors, display an error message and exit with a non-zero exit status,
otherwise display "Syntax OK" and terminate with a zero exit status. This
command checks to see if all DocumentRoot entries exist and are directories.
For sites with many vhosts, this is expensive; consider the <CODE>-T</CODE>
command instead.

<DT><CODE>-T</CODE>
<DD>Test the configuration file syntax (<EM>i.e.</EM>, read all configuration files
and interpret them) but do not start the server. If the configuration contains
errors, display an error message and exit with a non-zero exit status,
otherwise display "Syntax OK" and terminate with a zero exit status. This
command does not perform any checking of the DocumentRoot entries.

<DT><CODE>-k</CODE> <EM>option</EM>
<DD>Windows only: signal Apache to restart or shutdown. <EM>option</EM> 
is one of "shutdown" or "restart". (Apache 1.3.3 and later).

<DT><CODE>-?</CODE>
<DD>Print a list of the httpd options, and then exit (up to Apache
1.3.3. Later version use -h instead).

</DL>
@


1.3
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d87 1
a87 1
<DT><A NAME="help"><CODE>-L</CODE></A>
d95 1
a95 1
<DT><CODE>-l</CODE></A>
d107 1
a107 1
<DT><CODE>-h</CODE>
a147 76
<H2>Configuration files</H2>
The server will read three files for configuration directives. Any
directive may appear in any of these files. The the names of these
files are taken to be relative to the server root; this is set by the
<A HREF="mod/core.html#serverroot">ServerRoot</A> directive, the
<CODE>-d</CODE> command line flag, or (on Windows only) the registry
(see <A HREF="windows.html#run">Running Apache for Windows</A>).

Conventionally, the files are:
<DL>
<DT><CODE>conf/httpd.conf</CODE>
<DD>Contains directives that control the operation of the server daemon.
The filename may be overridden with the <CODE>-f</CODE> command line flag.

<DT><CODE>conf/srm.conf</CODE>
<DD>Contains directives that control the specification of documents that
the server can provide to clients. The filename may be overridden with
the <A HREF="mod/core.html#resourceconfig">ResourceConfig</A> directive.

<DT><CODE>conf/access.conf</CODE>
<DD>Contains directives that control access to documents.
The filename may be overridden with the
<A HREF="mod/core.html#accessconfig">AccessConfig</A> directive.
</DL>
However, these conventions need not be adhered to.
<P>
The server also reads a file containing mime document types; the filename
is set by the <A HREF="mod/mod_mime.html#typesconfig">TypesConfig</A>
directive,
and is <CODE>conf/mime.types</CODE> by default.

<H2>Log files</H2>
<H3>security warning</H3>
Anyone who can write to the directory where Apache is writing a
log file can almost certainly gain access to the uid that the server is
started as, which is normally root.  Do <EM>NOT</EM> give people write
access to the directory the logs are stored in without being aware of
the consequences; see the <A HREF="misc/security_tips.html">security tips</A>
document for details.
<H3>pid file</H3>

On startup, Apache saves the process id of the parent httpd process to
the file <CODE>logs/httpd.pid</CODE>. This filename can be changed
with the <A HREF="mod/core.html#pidfile">PidFile</A> directive. The
process-id is for use by the administrator in restarting and
terminating the daemon: on Unix, a HUP or USR1 signal causes the
daemon to re-read its configuration files and a TERM signal causes it
to die gracefully; on Windows, use the -k command line option instead.
For more information see the <A HREF="stopping.html">Stopping and
Restarting</A> page.

<P>
If the process dies (or is killed) abnormally, then it will be necessary to
kill the children httpd processes.

<H3>Error log</H3>

The server will log error messages to a log file, by default
<CODE>logs/error_log</CODE> on Unix or <CODE>logs/error.log</CODE> on
Windows and OS/2. The filename can be set using the <A
HREF="mod/core.html#errorlog">ErrorLog</A> directive; different error
logs can be set for different <A
HREF="mod/core.html#virtualhost">virtual hosts</A>.

<H3>Transfer log</H3>

The server will typically log each request to a transfer file, by
default <CODE>logs/access_log</CODE> on Unix or
<CODE>logs/access.log</CODE> on Windows and OS/2. The filename can be
set using a <A
HREF="mod/mod_log_config.html#transferlog">TransferLog</A> directive
or additional log files created with the <A
HREF="mod/mod_log_config.html#customlog">CustomLog</A> directive;
different transfer logs can be set for different <A
HREF="mod/core.html#virtualhost">virtual hosts</A>.

d150 1
a150 1
  Apache HTTP Server Version 1.3
@


1.2
log
@Apache 1.3.4 merge
@
text
@d126 11
a136 1
otherwise display "Syntax OK" and terminate with a zero exit status.
d207 1
a207 1
OS/2. The filename can be set using the <A
d216 4
a219 3
<CODE>logs/access.log</CODE> on OS/2. The filename can be set using a
<A HREF="mod/mod_log_config.html#transferlog">TransferLog</A>
directive or additional log files created with the <A
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d22 1
a22 1
<h1 ALIGN="CENTER">Starting Apache</h1>
d24 1
a24 7
<h2>Invoking Apache</h2>
The <code>httpd</code> program is usually run as a daemon which executes
continuously, handling requests.  It is possible to invoke Apache by
the Internet daemon <code>inetd</code> each time a connection to the HTTP 
service is made (use the 
<A HREF="mod/core.html#servertype">ServerType</A> directive)
but this is not recommended.  
d26 14
a39 1
<h2>Command line options</h2>
d41 3
a43 3
<dl>
<dt><code>-d</code> <em>serverroot</em>
<dd>Set the initial value for the
d45 16
a60 6
<em>serverroot</em>. This can be overridden by the ServerRoot command in the
configuration file. The default is <code>/usr/local/etc/httpd</code>.

<dt><code>-f</code> <em>config</em>
<dd>Execute the commands in the file <em>config</em> on startup. If
<em>config</em> does not begin with a <code>/</code>, then it is taken to be a
d62 1
a62 1
default is <code>conf/httpd.conf</code>.
d64 11
a74 3
<dt><code>-X</code>
<dd>Run in single-process mode, for internal debugging purposes only; the
daemon does not detach from the terminal or fork any children. Do <em>NOT</em>
d77 29
a105 2
<dt><code>-v</code>
<dd>Print the version of httpd, and then exit.
d107 38
a144 17
<dt><a name="help"><code>-h</code></a>
<dd>Give a list of directives together with expected arguments and
places where the directive is valid. (New in Apache 1.2)

<dt><code>-l</code>
<dd>Give a list of all modules compiled into the server.

<dt><code>-?</code>
<dd>Print a list of the httpd options, and then exit.
</dl>

<h2>Configuration files</h2>
The server will read three files for configuration directives. Any directive
may appear in any of these files. The the names of these files are taken
to be relative to the server root; this is set by the
<A HREF="mod/core.html#serverroot">ServerRoot</A> directive, or the
<code>-d</code> command line flag.
d147 4
a150 4
<dl>
<dt><code>conf/httpd.conf</code>
<dd>Contains directives that control the operation of the server daemon.
The filename may be overridden with the <code>-f</code> command line flag.
d152 2
a153 2
<dt><code>conf/srm.conf</code>
<dd>Contains directives that control the specification of documents that
d157 2
a158 2
<dt><code>conf/access.conf</code>
<dd>Contains directives that control access to documents.
d161 1
a161 1
</dl>
d163 1
a163 1
<p>
d165 3
a167 2
is set by the <A HREF="mod/mod_mime.html#typesconfig">TypesConfig</A> directive,
and is <code>conf/mime.types</code> by default.
d169 2
a170 2
<h2>Log files</h2>
<h3>security warning</h3>
d177 13
a189 9
<h3>pid file</h3>
On daemon startup, it saves the process id of the parent httpd process to
the file <code>logs/httpd.pid</code>. This filename can be changed with the
<A HREF="mod/core.html#pidfile">PidFile</A> directive. The process-id is for
use by the administrator in restarting and terminating the daemon;
A HUP or USR1 signal causes the daemon to re-read its configuration files and
a TERM signal causes it to die gracefully.  For more information
see the <a href="stopping.html">Stopping and Restarting</a> page.
<p>
d193 19
a211 12
<h3>Error log</h3>
The server will log error messages to a log file, <code>logs/error_log</code>
by default. The filename can be set using the
<A HREF="mod/core.html#errorlog">ErrorLog</A> directive; different error logs can
be set for different <A HREF="mod/core.html#virtualhost">virtual hosts</A>.

<h3>Transfer log</h3>
The server will typically log each request to a transfer file,
<code>logs/access_log</code> by default. The filename can be set using a
<A HREF="mod/mod_log_common.html#transferlog">TransferLog</A> directive; different
transfer logs can be set for different <A HREF="mod/core.html#virtualhost">virtual
hosts</A>.
d214 3
a216 3
<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.2
</H3>
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d22 1
a22 1
<H1 ALIGN="CENTER">Starting Apache</H1>
d24 2
a25 2
<H2>Invoking Apache</H2>
The <CODE>httpd</CODE> program is usually run as a daemon which executes
d27 2
a28 2
the Internet daemon <CODE>inetd</CODE> each time a connection to the HTTP
service is made (use the
d30 1
a30 1
but this is not recommended.
d32 1
a32 1
<H2>Command line options</H2>
d34 3
a36 3
<DL>
<DT><CODE>-d</CODE> <EM>serverroot</EM>
<DD>Set the initial value for the
d38 2
a39 2
<EM>serverroot</EM>. This can be overridden by the ServerRoot command in the
configuration file. The default is <CODE>/usr/local/apache</CODE>.
d41 3
a43 11
<DT><CODE>-D</CODE> <EM>name</EM>
<DD>Define a name for use in in 
<A HREF="mod/core.html#ifdefine">IfDefine</A> directives.
This option can be used to optionally enable certain functionality in the
configuration file, or to use a common configuration for
several independent hosts, where host specific information is enclosed in
&lt;IfDefine&gt; sections.

<DT><CODE>-f</CODE> <EM>config</EM>
<DD>Execute the commands in the file <EM>config</EM> on startup. If
<EM>config</EM> does not begin with a <CODE>/</CODE>, then it is taken to be a
d45 1
a45 1
default is <CODE>conf/httpd.conf</CODE>.
d47 3
a49 11
<DT><CODE>-C</CODE> <EM>"directive"</EM>
<DD>Process the given apache "directive" (just as if it had been part of a
configuration file) <STRONG>before</STRONG> actually reading the regular configuration files.

<DT><CODE>-c</CODE> <EM>"directive"</EM>
<DD>Process the given apache "directive" <STRONG>after</STRONG> reading
all the regular configuration files.

<DT><CODE>-X</CODE>
<DD>Run in single-process mode, for internal debugging purposes only; the
daemon does not detach from the terminal or fork any children. Do <EM>NOT</EM>
d52 2
a53 2
<DT><CODE>-v</CODE>
<DD>Print the version of httpd and its build date, and then exit.
d55 2
a56 9
<DT><A NAME="version"><CODE>-V</CODE></A>
<DD>Print the base version of httpd, its
build date, and a list of compile time settings which influence the
behavior and performance of the apache server (<EM>e.g.</EM>,
<SAMP>-DUSE_MMAP_FILES</SAMP>),
then exit.

<DT><A NAME="help"><CODE>-h</CODE></A>
<DD>Give a list of directives together with expected arguments and
d59 2
a60 2
<DT><CODE>-l</CODE>
<DD>Give a list of all modules compiled into the server.
d62 3
a64 13
<DT><CODE>-S</CODE>
<DD>Show the settings as parsed from the config file (currently only
shows a breakdown of the vhost settings).

<DT><CODE>-t</CODE>
<DD>Test the configuration file syntax (<EM>i.e.</EM>, read all configuration files
and interpret them) but do not start the server. If the configuration contains
errors, display an error message and exit with a non-zero exit status,
otherwise display "Syntax OK" and terminate with a zero exit status.

<DT><CODE>-?</CODE>
<DD>Print a list of the httpd options, and then exit.
</DL>
d66 1
a66 1
<H2>Configuration files</H2>
d71 1
a71 1
<CODE>-d</CODE> command line flag.
d74 4
a77 4
<DL>
<DT><CODE>conf/httpd.conf</CODE>
<DD>Contains directives that control the operation of the server daemon.
The filename may be overridden with the <CODE>-f</CODE> command line flag.
d79 2
a80 2
<DT><CODE>conf/srm.conf</CODE>
<DD>Contains directives that control the specification of documents that
d84 2
a85 2
<DT><CODE>conf/access.conf</CODE>
<DD>Contains directives that control access to documents.
d88 1
a88 1
</DL>
d90 1
a90 1
<P>
d92 2
a93 3
is set by the <A HREF="mod/mod_mime.html#typesconfig">TypesConfig</A>
directive,
and is <CODE>conf/mime.types</CODE> by default.
d95 2
a96 2
<H2>Log files</H2>
<H3>security warning</H3>
d103 1
a103 1
<H3>pid file</H3>
d105 1
a105 1
the file <CODE>logs/httpd.pid</CODE>. This filename can be changed with the
d110 2
a111 2
see the <A HREF="stopping.html">Stopping and Restarting</A> page.
<P>
d115 2
a116 2
<H3>Error log</H3>
The server will log error messages to a log file, <CODE>logs/error_log</CODE>
d118 1
a118 2
<A HREF="mod/core.html#errorlog">ErrorLog</A> directive; different error logs
can
d121 1
a121 1
<H3>Transfer log</H3>
d123 4
a126 4
<CODE>logs/access_log</CODE> by default. The filename can be set using a
<A HREF="mod/mod_log_config.html#transferlog">TransferLog</A> directive;
different transfer logs can be set for different
<A HREF="mod/core.html#virtualhost">virtual hosts</A>.
d129 3
a131 3
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
 </H3>
@

