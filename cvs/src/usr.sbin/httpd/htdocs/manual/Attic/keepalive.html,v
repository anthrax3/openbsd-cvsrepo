head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.38
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.34
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.32
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.30
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.28
	OPENBSD_5_0:1.4.0.26
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.24
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.1.2.0.10
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.8
	OPENBSD_2_7_BASE:1.1.1.2
	OPENBSD_2_6:1.1.1.2.0.6
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.4;

1.4
date	2005.07.29.23.55.39;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.12.07.56.46;	author beck;	state dead;
branches;
next	1.2;

1.2
date	2000.12.15.22.17.22;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.30;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.30;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.56;	author beck;	state Exp;
branches;
next	;


desc
@@


1.5
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache Keep-Alive Support</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Apache Keep-Alive Support</h1>
    <hr />

    <h2>What is Keep-Alive?</h2>
    The Keep-Alive extension to HTTP, as defined by the
    <code>HTTP/1.1</code> draft, allows persistent connections.
    These long-lived HTTP sessions allow multiple requests to be
    send over the same TCP connection, and in some cases have been
    shown to result in an almost 50% speedup in latency times for
    HTML documents with lots of images. 

    <h2>Enabling Keep-Alive Support</h2>
    Apache 1.1 comes with Keep-Alive support on by default, however
    there are some directives you can use to modify Apache's
    behavior: 

    <p><strong>Note</strong>: Apache 1.2 uses a different syntax
    for the <a href="mod/core.html#keepalive">KeepAlive</a>
    directive.</p>

    <h3>KeepAlive</h3>
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> KeepAlive
    <em>max-requests</em><br />
     <a href="mod/directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>KeepAlive
    5</code><br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Core 

    <p>This directive enables Keep-Alive support. Set
    <em>max-requests</em> to the maximum number of requests you
    want Apache to entertain per connection. A limit is imposed to
    prevent a client from hogging your server resources. Set this
    to <code>0</code> to disable support.</p>

    <h3>KeepAliveTimeout</h3>
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> KeepAliveTimeout
    <em>seconds</em><br />
     <a href="mod/directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>KeepAliveTimeout
    15</code><br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Core 

    <p>The number of seconds Apache will wait for a subsequent
    request before closing the connection. Once a request has been
    received, the timeout value specified by the <a
    href="mod/core.html#timeout"><code>Timeout</code></a> directive
    applies.</p>

    <h2>When Keep-Alive Is Used</h2>
    In order for Keep-Alive support to be used, first the browser
    must support it. Many current browsers, including Netscape
    Navigator 2.0, and Spyglass Mosaic-based browsers (including
    Microsoft Internet Explorer) do. Note, however, that some
    Windows 95-based browsers misbehave with Keep-Alive-supporting
    servers; they may occasionally hang on a connect. This has been
    observed with several Windows browsers, and occurs when
    connecting to any Keep-Alive server, not just Apache. Netscape
    3.0b5 and later versions are known to work around this problem.
    

    <p>However, Keep-Alive support only is active with files where
    the length is known beforehand. This means that most CGI
    scripts, server-side included files and directory listings will
    not use the Keep-Alive protocol. While this should be
    completely transparent to the end user, it is something the
    web-master may want to keep in mind.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>

  </body>
</html>



@


1.4
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.3
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d1 104
a104 109
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML><HEAD>
<TITLE>Apache Keep-Alive Support</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server
 </H3>
</DIV>

<H1 ALIGN="CENTER">Apache Keep-Alive Support</H1>

<HR>

<H2>What is Keep-Alive?</H2>

The Keep-Alive extension to HTTP, as defined by the
<CODE>HTTP/1.1</CODE> draft, allows persistent connections. These
long-lived HTTP sessions allow multiple requests to be send over the
same TCP connection, and in some cases have been shown to result in an
almost 50% speedup in latency times for HTML documents with lots of
images.

<H2>Enabling Keep-Alive Support</H2>

Apache 1.1 comes with Keep-Alive support on by default, however there
are some directives you can use to modify Apache's behavior:

<P><STRONG>Note</STRONG>: Apache 1.2 uses a different syntax for the <A
HREF="mod/core.html#keepalive">KeepAlive</A> directive.</P>

<H3>KeepAlive</H3>
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> KeepAlive <EM>max-requests</EM><BR>
<A
 HREF="mod/directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>KeepAlive 5</CODE><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Core<P>

This directive enables Keep-Alive support. Set <EM>max-requests</EM>
to the maximum number of requests you want Apache to entertain per
connection. A limit is imposed to prevent a client from hogging your
server resources. Set this to <CODE>0</CODE> to disable support.

<H3>KeepAliveTimeout</H3>
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> KeepAliveTimeout <EM>seconds</EM><BR>
<A
 HREF="mod/directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>KeepAliveTimeout 15</CODE><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Core<P>

The number of seconds Apache will wait for a subsequent request before
closing the connection. Once a request has been received, the timeout
value specified by the <A
HREF="mod/core.html#timeout"><CODE>Timeout</CODE></A> directive
applies.

<H2>When Keep-Alive Is Used</H2>

In order for Keep-Alive support to be used, first the browser must
support it. Many current browsers, including Netscape Navigator 2.0,
and Spyglass Mosaic-based browsers (including Microsoft Internet
Explorer) do. Note, however, that some Windows 95-based browsers misbehave
with Keep-Alive-supporting servers; they may occasionally hang on a
connect. This has been observed with several Windows browsers, and occurs
when connecting to any Keep-Alive server, not just Apache. Netscape 3.0b5
and later versions are known to work around this problem.

<P>However, Keep-Alive support only is active with files where the
length is known beforehand. This means that most CGI scripts,
server-side included files and directory listings will not use
the Keep-Alive protocol. While this should be completely transparent
to the end user, it is something the web-master may want to keep in mind.</P>

<HR>
 <H3 ALIGN="CENTER">
  Apache HTTP Server
 </H3>
a105 1
<A HREF="./"><IMG SRC="images/index.gif" ALT="Index"></A>
a106 2
</BODY>
</HTML>
@


1.2
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d2 3
a4 3
<html><head>
<title>Apache Keep-Alive Support</title>
</head>
d17 1
a17 1
  Apache HTTP Server Version 1.2
d21 1
a21 1
<h1 ALIGN="CENTER">Apache Keep-Alive Support</h1>
d23 1
a23 1
<hr>
d25 1
a25 1
<h2>What is Keep-Alive?</h2>
d28 1
a28 1
<code>HTTP/1.1</code> draft, allows persistent connections. These
d34 1
a34 1
<h2>Enabling Keep-Alive Support</h2>
d39 2
a40 2
<p><strong>Note</strong>: Apache 1.2 uses a different syntax for the <a
href="mod/core.html#keepalive">KeepAlive</a> directive.</p>
d42 17
a58 5
<h3>KeepAlive</h3>
<strong>Syntax:</strong> KeepAlive <em>max-requests</em><br>
<strong>Default:</strong> <code>KeepAlive 5</code><br>
<strong>Context:</strong> server config<br>
<strong>Status:</strong> Core<p>
d60 1
a60 1
This directive enables Keep-Alive support. Set <em>max-requests</em>
d63 1
a63 1
server resources. Set this to <code>0</code> to disable support.
d65 17
a81 5
<h3>KeepAliveTimeout</h3>
<strong>Syntax:</strong> KeepAliveTimeout <em>seconds</em><br>
<strong>Default:</strong> <code>KeepAliveTimeout 15</code><br>
<strong>Context:</strong> server config<br>
<strong>Status:</strong> Core<p>
d85 2
a86 2
value specified by the <a
href="mod/core.html#timeout"><code>Timeout</code></a> directive
d89 1
a89 1
<h2>When Keep-Alive Is Used</h2>
d100 1
a100 1
<p>However, Keep-Alive support only is active with files where the
d104 1
a104 1
to the end user, it is something the web-master may want to keep in mind.</p>
d107 3
a109 3
<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.2
</H3>
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d2 3
a4 3
<HTML><HEAD>
<TITLE>Apache Keep-Alive Support</TITLE>
</HEAD>
d17 1
a17 1
  Apache HTTP Server Version 1.3
d21 1
a21 1
<H1 ALIGN="CENTER">Apache Keep-Alive Support</H1>
d23 1
a23 1
<HR>
d25 1
a25 1
<H2>What is Keep-Alive?</H2>
d28 1
a28 1
<CODE>HTTP/1.1</CODE> draft, allows persistent connections. These
d34 1
a34 1
<H2>Enabling Keep-Alive Support</H2>
d39 2
a40 2
<P><STRONG>Note</STRONG>: Apache 1.2 uses a different syntax for the <A
HREF="mod/core.html#keepalive">KeepAlive</A> directive.</P>
d42 5
a46 17
<H3>KeepAlive</H3>
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> KeepAlive <EM>max-requests</EM><BR>
<A
 HREF="mod/directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>KeepAlive 5</CODE><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Core<P>
d48 1
a48 1
This directive enables Keep-Alive support. Set <EM>max-requests</EM>
d51 1
a51 1
server resources. Set this to <CODE>0</CODE> to disable support.
d53 5
a57 17
<H3>KeepAliveTimeout</H3>
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> KeepAliveTimeout <EM>seconds</EM><BR>
<A
 HREF="mod/directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>KeepAliveTimeout 15</CODE><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Core<P>
d61 2
a62 2
value specified by the <A
HREF="mod/core.html#timeout"><CODE>Timeout</CODE></A> directive
d65 1
a65 1
<H2>When Keep-Alive Is Used</H2>
d76 1
a76 1
<P>However, Keep-Alive support only is active with files where the
d80 1
a80 1
to the end user, it is something the web-master may want to keep in mind.</P>
d83 3
a85 3
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
 </H3>
@

