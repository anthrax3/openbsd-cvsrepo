head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.52
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.48
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.46
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.44
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.42
	OPENBSD_5_0:1.3.0.40
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.38
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.36
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.32
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.34
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.30
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.28
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.26
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.24
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.22
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.20
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.18
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.16
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.14
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.12
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.10
	OPENBSD_3_5_BASE:1.3
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.3
	OPENBSD_3_4:1.3.0.8
	OPENBSD_3_4_BASE:1.3
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.3
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.1.2.0.10
	OPENBSD_2_8_BASE:1.1.1.2
	OPENBSD_2_7:1.1.1.2.0.8
	OPENBSD_2_7_BASE:1.1.1.2
	OPENBSD_2_6:1.1.1.2.0.6
	OPENBSD_2_6_BASE:1.1.1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.22.17.22;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.31;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.31;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.19.57;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.27.25;	author henning;	state Exp;
branches;
next	;


desc
@@


1.4
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache Multiple Log Files</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Multiple Log Files</h1>
    It is now possible to specify multiple log files, each with a
    fully customizable format. This is compatible with existing
    configurations. Multiple log files are implemented as part of
    the <a href="mod/mod_log_config.html">mod_log_config</a> module
    which as of Apache 1.2 is the default log module. 
    <hr />

    <h2>Using Multiple Log Files</h2>
    Multiple log files be created with either the
    <code>TransferLog</code> or <code>CustomLog</code> directive.
    These directives can be repeated to create more than one log
    file (in previous releases, only one logfile could be given per
    server configuration). The <code>TransferLog</code> directive
    creates a log file in the standard "common log format",
    although this can be customized with <code>LogFormat</code>.
    The syntax of these two directives is the same as for the
    config log module in previous Apache releases. 

    <p>The real power of multiple log files come from the ability
    to create log files in different formats. For example, as well
    as a CLF transfer log, the server could log the user agent of
    each client, or the referrer information, or any other aspect
    of the request, such as the language preferences of the
    user.</p>

    <p>The new <code>CustomLog</code> directive takes both a
    filename to log to, and a log file format.</p>
    <hr />
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CustomLog <em>filename
    "format"</em><br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> base<br />
     <a href="mod/directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_log_config 

    <p>The first argument is the filename to log to. This is used
    exactly like the argument to <code>TransferLog</code>, that is,
    it is either a file as a full path or relative to the current
    server root, or |programname. Be aware that anyone who can
    write to the directory where a log file is written can gain
    access to the uid that starts the server. See the <a
    href="misc/security_tips.html">security tips</a> document for
    details.</p>

    <p>The format argument specifies a format for each line of the
    log file. The options available for the format are exactly the
    same as for the argument of the <code>LogFormat</code>
    directive. If the format includes any spaces (which it will do
    in almost all cases) it should be enclosed in double
    quotes.</p>

    <h3>Use with Virtual Hosts</h3>
    If a &lt;VirtualHost&gt; section does not contain any
    <code>TransferLog</code> or <code>CustomLog</code> directives,
    the logs defined for the main server will be used. If it does
    contain one or more of these directives, requests serviced by
    this virtual host will only be logged in the log files defined
    within its definition, not in any of the main server's log
    files. See the examples below. 
    <hr />

    <h3>Examples</h3>
    To create a normal (CLF) format log file in logs/access_log,
    and a log of user agents: 
<pre>
TransferLog logs/access_log
CustomLog   logs/agents     "%{user-agent}i"
</pre>
    To define a CLF transfer log and a referrer log which log all
    accesses to both the main server and a virtual host: 
<pre>
TransferLog logs/access_log
CustomLog   logs/referer    "%{referer}i"

&lt;VirtualHost&gt;
  DocumentRoot   /whatever
  ServerName     my.virtual.host
&lt;/VirtualHost&gt;
</pre>
    Since no TransferLog or CustomLog directives appear inside the
    &lt;VirtualHost&gt; section, any requests for this virtual host
    will be logged in the main server's log files. If however the
    directive 
<pre>
TransferLog logs/vhost_access_log
</pre>
    was added inside the virtual host definition, then accesses to
    this virtual host will be logged in vhost_access_log file (in
    common log format), and <em>not</em> in logs/access_log or
    logs/referer.     <hr />

    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>

  </body>
</html>

@


1.3
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@@


1.2
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d1 2
a2 98
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache Multiple Log Files</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server
 </H3>
</DIV>

<H1 ALIGN="CENTER">Multiple Log Files</H1>

It is now possible to specify multiple log files, each with a fully
customizable format. This is compatible with existing
configurations.  Multiple log files are implemented as part of the <A
HREF="mod/mod_log_config.html">mod_log_config</A> module which as of
Apache 1.2 is the default log module.

<HR>

<H2>Using Multiple Log Files</H2>

Multiple log files be created with either the <CODE>TransferLog</CODE>
or <CODE>CustomLog</CODE> directive. These directives can be
repeated to create more than one log file (in previous releases,
only one logfile could be given per server configuration).
The <CODE>TransferLog</CODE> directive creates a log file
in the standard "common log format", although this can be customized
with <CODE>LogFormat</CODE>. The syntax of these two
directives is the same as for the config log module in previous
Apache releases.
<P>

The real power of multiple log files come from the ability to
create log files in different formats. For example, as well
as a CLF transfer log, the server could log the user agent of
each client, or the referrer information, or any other aspect of
the request, such as the language preferences of the user.
<P>

The new <CODE>CustomLog</CODE> directive takes both a filename to log
to, and a log file format.

<HR>

<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CustomLog <EM>filename "format"</EM><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> base<BR>
<A
 HREF="mod/directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_log_config<P>

The first argument is the filename to log to. This is used
exactly like the argument to <CODE>TransferLog</CODE>, that is,
it is either a file as a full path or relative to the current
server root, or |programname.  Be aware that anyone who can write to
the directory where a log file is written can gain access to the uid
that starts the server.  See the <A HREF="misc/security_tips.html">
security tips</A> document for details.<P>

The format argument specifies a format for each line of the log file.
The options available for the format are exactly the same as for
the argument of the <CODE>LogFormat</CODE> directive. If the format
includes any spaces (which it will do in almost all cases) it
should be enclosed in double quotes.
<P>

<H3>Use with Virtual Hosts</H3>

If a &lt;VirtualHost&gt; section does not contain any
<CODE>TransferLog</CODE> or <CODE>CustomLog</CODE> directives, the
logs defined for the main server will be used. If it does
contain one or more of these directives, requests serviced by
this virtual host will only be logged in the log files defined
within its definition, not in any of the main server's log files.
See the examples below.
<P>
d4 88
a91 8
<HR>

<H3>Examples</H3>

To create a normal (CLF) format log file in logs/access_log, and a
log of user agents:

<PRE>
d94 4
a97 6
</PRE>

To define a CLF transfer log and a referrer log which log
all accesses to both the main server and a virtual host:

<PRE>
d105 6
a110 8
</PRE>

Since no TransferLog or CustomLog directives appear inside the
&lt;VirtualHost&gt; section, any requests for this virtual host
will be logged in the main server's log files. If however the
directive

<PRE>
d112 5
a116 5
</PRE>

was added inside the virtual host definition, then accesses to this
virtual host will be logged in vhost_access_log file (in common
log format), and <EM>not</EM> in logs/access_log or logs/referer.
d118 2
a119 4
<HR>
 <H3 ALIGN="CENTER">
  Apache HTTP Server
 </H3>
d121 2
a122 1
<A HREF="./"><IMG SRC="images/index.gif" ALT="Index"></A>
a123 2
</BODY>
</HTML>
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d22 1
a22 1
<h1 ALIGN="CENTER">Multiple Log Files</h1>
d26 2
a27 2
configurations.  Multiple log files are implemented as part of the <a
href="mod/mod_log_config.html">mod_log_config</a> module which as of
d30 1
a30 1
<hr>
d32 1
a32 1
<h2>Using Multiple Log Files</h2>
d34 2
a35 2
Multiple log files be created with either the <code>TransferLog</code>
or <code>CustomLog</code> directive. These directives can be
d38 1
a38 1
The <code>TransferLog</code> directive creates a log file
d40 1
a40 1
with <code>LogFormat</code>. The syntax of these two
d43 1
a43 1
<p>
d50 1
a50 1
<p>
d52 2
a53 2
The new <code>CustomLog</code> directive takes both a filename to log
to, and a log file format. 
d55 1
a55 1
<hr>
d57 16
a72 4
<strong>Syntax:</strong> CustomLog <em>filename "format"</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> base<br>
<strong>Module:</strong> mod_log_config<p>
d75 1
a75 1
exactly like the argument to <code>TransferLog</code>, that is,
d80 1
a80 1
security tips</A> document for details.<p>
d84 1
a84 1
the argument of the <code>LogFormat</code> directive. If the format
d87 1
a87 1
<p>
d89 1
a89 1
<h3>Use with Virtual Hosts</h3>
d92 1
a92 1
<code>TransferLog</code> or <code>CustomLog</code> directives, the
d98 1
a98 1
<p>
d100 1
a100 1
<hr>
d102 1
a102 1
<h3>Examples</h3>
d107 1
a107 1
<pre>
d110 1
a110 1
</pre>
d115 1
a115 1
<pre>
d123 1
a123 1
</pre>
d125 1
a125 1
Since no TransferLog or CustomLog directives appear inside the 
d130 1
a130 1
<pre>
d132 1
a132 1
</pre>
d136 1
a136 1
log format), and <i>not</i> in logs/access_log or logs/referer.
d139 3
a141 3
<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.2
</H3>
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d22 1
a22 1
<H1 ALIGN="CENTER">Multiple Log Files</H1>
d26 2
a27 2
configurations.  Multiple log files are implemented as part of the <A
HREF="mod/mod_log_config.html">mod_log_config</A> module which as of
d30 1
a30 1
<HR>
d32 1
a32 1
<H2>Using Multiple Log Files</H2>
d34 2
a35 2
Multiple log files be created with either the <CODE>TransferLog</CODE>
or <CODE>CustomLog</CODE> directive. These directives can be
d38 1
a38 1
The <CODE>TransferLog</CODE> directive creates a log file
d40 1
a40 1
with <CODE>LogFormat</CODE>. The syntax of these two
d43 1
a43 1
<P>
d50 1
a50 1
<P>
d52 2
a53 2
The new <CODE>CustomLog</CODE> directive takes both a filename to log
to, and a log file format.
d55 1
a55 1
<HR>
d57 4
a60 16
<A
 HREF="mod/directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CustomLog <EM>filename "format"</EM><BR>
<A
 HREF="mod/directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="mod/directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> base<BR>
<A
 HREF="mod/directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_log_config<P>
d63 1
a63 1
exactly like the argument to <CODE>TransferLog</CODE>, that is,
d68 1
a68 1
security tips</A> document for details.<P>
d72 1
a72 1
the argument of the <CODE>LogFormat</CODE> directive. If the format
d75 1
a75 1
<P>
d77 1
a77 1
<H3>Use with Virtual Hosts</H3>
d80 1
a80 1
<CODE>TransferLog</CODE> or <CODE>CustomLog</CODE> directives, the
d86 1
a86 1
<P>
d88 1
a88 1
<HR>
d90 1
a90 1
<H3>Examples</H3>
d95 1
a95 1
<PRE>
d98 1
a98 1
</PRE>
d103 1
a103 1
<PRE>
d111 1
a111 1
</PRE>
d113 1
a113 1
Since no TransferLog or CustomLog directives appear inside the
d118 1
a118 1
<PRE>
d120 1
a120 1
</PRE>
d124 1
a124 1
log format), and <EM>not</EM> in logs/access_log or logs/referer.
d127 3
a129 3
 <H3 ALIGN="CENTER">
  Apache HTTP Server Version 1.3
 </H3>
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 98
a98 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d100 8
a107 88
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache Multiple Log Files</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server</h3>
    </div>



    <h1 align="CENTER">Multiple Log Files</h1>
    It is now possible to specify multiple log files, each with a
    fully customizable format. This is compatible with existing
    configurations. Multiple log files are implemented as part of
    the <a href="mod/mod_log_config.html">mod_log_config</a> module
    which as of Apache 1.2 is the default log module. 
    <hr />

    <h2>Using Multiple Log Files</h2>
    Multiple log files be created with either the
    <code>TransferLog</code> or <code>CustomLog</code> directive.
    These directives can be repeated to create more than one log
    file (in previous releases, only one logfile could be given per
    server configuration). The <code>TransferLog</code> directive
    creates a log file in the standard "common log format",
    although this can be customized with <code>LogFormat</code>.
    The syntax of these two directives is the same as for the
    config log module in previous Apache releases. 

    <p>The real power of multiple log files come from the ability
    to create log files in different formats. For example, as well
    as a CLF transfer log, the server could log the user agent of
    each client, or the referrer information, or any other aspect
    of the request, such as the language preferences of the
    user.</p>

    <p>The new <code>CustomLog</code> directive takes both a
    filename to log to, and a log file format.</p>
    <hr />
    <a href="mod/directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CustomLog <em>filename
    "format"</em><br />
     <a href="mod/directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="mod/directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> base<br />
     <a href="mod/directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_log_config 

    <p>The first argument is the filename to log to. This is used
    exactly like the argument to <code>TransferLog</code>, that is,
    it is either a file as a full path or relative to the current
    server root, or |programname. Be aware that anyone who can
    write to the directory where a log file is written can gain
    access to the uid that starts the server. See the <a
    href="misc/security_tips.html">security tips</a> document for
    details.</p>

    <p>The format argument specifies a format for each line of the
    log file. The options available for the format are exactly the
    same as for the argument of the <code>LogFormat</code>
    directive. If the format includes any spaces (which it will do
    in almost all cases) it should be enclosed in double
    quotes.</p>

    <h3>Use with Virtual Hosts</h3>
    If a &lt;VirtualHost&gt; section does not contain any
    <code>TransferLog</code> or <code>CustomLog</code> directives,
    the logs defined for the main server will be used. If it does
    contain one or more of these directives, requests serviced by
    this virtual host will only be logged in the log files defined
    within its definition, not in any of the main server's log
    files. See the examples below. 
    <hr />

    <h3>Examples</h3>
    To create a normal (CLF) format log file in logs/access_log,
    and a log of user agents: 
<pre>
d110 6
a115 4
</pre>
    To define a CLF transfer log and a referrer log which log all
    accesses to both the main server and a virtual host: 
<pre>
d123 8
a130 6
</pre>
    Since no TransferLog or CustomLog directives appear inside the
    &lt;VirtualHost&gt; section, any requests for this virtual host
    will be logged in the main server's log files. If however the
    directive 
<pre>
d132 5
a136 5
</pre>
    was added inside the virtual host definition, then accesses to
    this virtual host will be logged in vhost_access_log file (in
    common log format), and <em>not</em> in logs/access_log or
    logs/referer.     <hr />
d138 4
a141 2
    <h3 align="CENTER">Apache HTTP Server</h3>
    <a href="./"><img src="images/index.gif" alt="Index" /></a>
d143 1
a143 2
  </body>
</html>
d145 2
@


