head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.38
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.30
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.28
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.20
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.24
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.22
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.20
	OPENBSD_3_5_BASE:1.1
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.1
	OPENBSD_3_4:1.1.0.18
	OPENBSD_3_4_BASE:1.1
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.1
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	apache:1.1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.2;

1.2
date	2005.07.27.20.11.23;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.06.29.05;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.07.19.48.08;	author henning;	state Exp;
branches;
next	;


desc
@@


1.3
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<!--%hypertext -->
<!-- mod_define.html                                  -->
<!-- Documentation for the mod_define Apache module   -->
<HTML>
<HEAD>
<TITLE>Apache module mod_define</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<BLOCKQUOTE><!-- page indentation -->

    <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" />

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>

<BR>
<H1 ALIGN="CENTER">Module mod_define</H1>
<H2 ALIGN="CENTER">Variable Definition For Arbitrary Directives</H2>

This module is contained in the <CODE>mod_define.c</CODE> file.  It provides
the definition variables for arbitrary directives, i.e. variables which can be
expanded on any(!) directive line. It needs Extended API (EAPI). It is not
compiled into the server by default. To use <CODE>mod_define</CODE> you have
to enable the following line in the server build <CODE>Configuration</CODE>
file:

<P>
<PRE>
    AddModule  modules/extra/mod_define.o
</PRE>

<P>
<HR NOSHADE SIZE=1>

<H3><A NAME="Define">Define</A></H3>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A>
    <CODE>Define</CODE> <EM>variable</EM> <EM>value</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A>
    <EM>none</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A>
    server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> none<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Extension<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_define.c<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Apache+EAPI<BR>

<P>
The <CODE>Define</CODE> directive defines a variable which later can be
expanded with the unsafe but short construct
``<CODE>$</CODE><EM>variable</EM>'' or the safe but longer construct
``<CODE>${</CODE><EM>variable</EM><CODE>}</CODE>'' on any configuration line.
Do not intermix this with the third-party module <CODE>mod_macro</CODE>. The
<CODE>mod_define</CODE> module doesn't provide a general macro mechanism,
although one can consider variable substitutions as a special form of macros.
Because the value of to which ``<CODE>$</CODE><EM>variable</EM>'' expands has
to fit into one line. When you need macros which can span more lines, you've
to use <CODE>mod_macro</CODE>. OTOH <CODE>mod_macro</CODE> cannot be used to
expand a variable/macro on an arbitrary directive line.  So, the typical use
case of <CODE>mod_define</CODE> is to make strings <EM>variable</EM> (and this
way easily changeable at one location) and not to <EM>bundle</EM> things
together (as it's the typical use case for macros).

<P>
The syntax of the expansion construct (
``<CODE>${</CODE><EM>variable</EM><CODE>}</CODE>'') follows the Perl and Shell
syntax, but can be changed via the <CODE>Define</CODE> directive, too. Four
internal variables can be used for this. The default is:

<BLOCKQUOTE>
<PRE>
Define mod_define::escape "\\"
Define mod_define::dollar "$"
Define mod_define::open   "{"
Define mod_define::close  "}"
</PRE>
</BLOCKQUOTE>

<P>
When you need to escape some of the expansion constructs you place the
mod_define::escape character in front of it.  The default is the backslash as
in Perl or the Shell.

<P>
<STRONG>Example:</STRONG>
<BLOCKQUOTE>
<PRE>
Define master     "Joe Average &lt;joe@@average.dom&gt;"
Define docroot    /usr/local/apache/htdocs
Define hostname   foo
Define domainname bar.dom
Define portnumber 80
  :
&lt;VirtualHost $hostname.$domainname:$portnumber&gt;
SetEnv       SERVER_MASTER "$master"
ServerName   $hostname.$domainname
ServerAlias  $hostname
Port         $portnumber
DocumentRoot $docroot
&lt;Directory $docroot&gt;
  :
&lt;Directory&gt;
</PRE>
</BLOCKQUOTE>

<!--#include virtual="footer.html" -->
</BLOCKQUOTE><!-- page indentation -->
</BODY>
</HTML>
<!--/%hypertext -->
@


1.2
log
@from tamas tevesz:

remove unused footers+headers:
only one was used, which we inline for now;
@
text
@@


1.1
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d19 6
a24 1
<!--#include virtual="header.html" -->
@


1.1.1.1
log
@import apache 1.3.27 and mod_ssl 2.8.11
@
text
@@

