head	1.9;
access;
symbols
	OPENBSD_5_5:1.8.0.38
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.34
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.32
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.30
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.28
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.9
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.8;

1.8
date	2005.07.29.23.55.40;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.20.00.16.21;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2002.07.19.21.31.14;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.32;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.35;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.01.05.22;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.32;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.32;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.03;	author beck;	state Exp;
branches;
next	;


desc
@@


1.9
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_cgi</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_cgi</h1>

    <p>This module provides for execution of CGI scripts.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_cgi.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    cgi_module</p>

    <h2>Summary</h2>
    <!-- XXX: Should have references to CGI definition/RFC -->
    Any file that has the mime type
    <code>application/x-httpd-cgi</code> or handler
    <code>cgi-script</code> (Apache 1.1 or later) will be treated
    as a CGI script, and run by the server, with its output being
    returned to the client. Files acquire this type either by
    having a name containing an extension defined by the <a
    href="mod_mime.html#addtype">AddType</a> directive, or by being
    in a <a href="mod_alias.html#scriptalias">ScriptAlias</a>
    directory. Files that are not in a <a
    href="mod_alias.html#scriptalias">ScriptAlias</a> directory,
    but which are of type <code>application/x-httpd-cgi</code> by
    virtue of an <code>AddType</code> directive, will still not be
    executed by the server unless <code>Options ExecCGI</code> is
    enabled. See the <a
    href="core.html#options"><code>Options</code></a> directive for
    more details. 

    <p>When the server invokes a CGI script, it will add a variable
    called <code>DOCUMENT_ROOT</code> to the environment. This
    variable will contain the value of the <a
    href="core.html#documentroot">DocumentRoot</a> configuration
    variable.</p>

    <p>For an introduction to using CGI scripts with Apache, see
    our tutorial on <a href="../howto/cgi.html">Dynamic Content
    with CGI</a>.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#scriptlog">ScriptLog</a></li>

      <li><a href="#scriptloglength">ScriptLogLength</a></li>

      <li><a href="#scriptlogbuffer">ScriptLogBuffer</a></li>
    </ul>

    <p>See also: <a href="core.html#options">Options</a>, <a
    href="mod_alias.html#scriptalias">ScriptAlias</a>, <a
    href="mod_mime.html#addtype">AddType</a> and <a
    href="mod_mime.html#addhandler">AddHandler</a>.</p>

    <h2>CGI Environment variables</h2>
    The server will set the CGI environment variables as described
    in the <a href="http://hoohoo.ncsa.uiuc.edu/cgi/">CGI
    specification</a>, with the following provisions: 

    <dl>
      <dt>REMOTE_HOST</dt>

      <dd>This will only be set if <a
      href="core.html#hostnamelookups"><code>HostnameLookups</code></a>
      is set to <code>on</code> (it is off by default), and if a
      reverse DNS lookup of the accessing host's address indeed
      finds a host name.</dd>

      <dt>REMOTE_IDENT</dt>

      <dd>This will only be set if <a
      href="core.html#identitycheck">IdentityCheck</a> is set to
      <code>on</code> and the accessing host supports the ident
      protocol. Note that the contents of this variable cannot be
      relied upon because it can easily be faked, and if there is a
      proxy between the client and the server, it is usually
      totally useless.</dd>

      <dt>REMOTE_USER</dt>

      <dd>This will only be set if the CGI script is subject to
      authentication.</dd>
    </dl>

    <h2><a id="cgi_debug" name="cgi_debug">CGI Debugging</a></h2>
    Debugging CGI scripts has traditionally been difficult, mainly
    because it has not been possible to study the output (standard
    output and error) for scripts which are failing to run
    properly. These directives, included in Apache 1.2 and later,
    provide more detailed logging of errors when they occur. 

    <h2>CGI Logfile Format</h2>
    When configured, the CGI error log logs any CGI which does not
    execute properly. Each CGI script which fails to operate causes
    several lines of information to be logged. The first two lines
    are always of the format: 
<pre>
  %% [<em>time</em>] <em>request-line</em>
  %% <em>HTTP-status</em> <em>CGI-script-filename</em>
</pre>
    If the error is that CGI script cannot be run, the log file
    will contain an extra two lines: 
<pre>
  %%error
  <em>error-message</em>
</pre>
    Alternatively, if the error is the result of the script
    returning incorrect header information (often due to a bug in
    the script), the following information is logged: 
<pre>
  %request
  <em>All HTTP request headers received</em>
  <em>POST or PUT entity (if any)</em>
  %response
  <em>All headers output by the CGI script</em>
  %stdout
  <em>CGI standard output</em>
  %stderr
  <em>CGI standard error</em>
</pre>
    (The %stdout and %stderr parts may be missing if the script did
    not output anything on standard output or standard error). 
    <hr />

    <h3><a id="scriptlog" name="scriptlog">ScriptLog</a>
    directive</h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLog
    <em>filename</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> none<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p>The <tt>ScriptLog</tt> directive sets the CGI script error
    logfile. If no ScriptLog is given, no error log is created. If
    given, any CGI errors are logged into the filename given as
    argument. If this is a relative file or path it is taken
    relative to the server root.</p>

    <p>This log will be opened as the user the child processes run
    as, ie. the user specified in the main <a
    href="core.html#user">User</a> directive. This means that
    either the directory the script log is in needs to be writable
    by that user or the file needs to be manually created and set
    to be writable by that user. If you place the script log in
    your main logs directory, do <strong>NOT</strong> change the
    directory permissions to make it writable by the user the child
    processes run as.</p>

    <p>Note that script logging is meant to be a debugging feature
    when writing CGI scripts, and is not meant to be activated
    continuously on running servers. It is not optimized for speed
    or efficiency, and may have security problems if used in a
    manner other than that for which it was designed.</p>
    <hr />

    <h3><a id="scriptloglength"
    name="scriptloglength">ScriptLogLength</a> directive</h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLogLength
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> 10385760<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p><tt>ScriptLogLength</tt> can be used to limit the size of
    the CGI script logfile. Since the logfile logs a lot of
    information per CGI error (all request headers, all script
    output) it can grow to be a big file. To prevent problems due
    to unbounded growth, this directive can be used to set an
    maximum file-size for the CGI logfile. If the file exceeds this
    size, no more information will be written to it.</p>
    <hr />

    <h3><a id="scriptlogbuffer"
    name="scriptlogbuffer">ScriptLogBuffer</a></h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLogBuffer
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> 1024<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p>The size of any PUT or POST entity body that is logged to
    the file is limited, to prevent the log file growing too big
    too quickly if large bodies are being received. By default, up
    to 1024 bytes are logged, but this can be changed with this
    directive.     <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>



@


1.8
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.7
log
@remove pre-apache-1.3.26 cruft

Note for upgraders:
to actually see the current manual, you should do

find /var/www/htdocs/manual/ -type f -exec rm {} \;
cd /usr/src/usr.sbin/httpd/
make -f Makefile.bsd-wrapper distribution

you will also need a current httpd.conf, MultiViews need to be enabled in
/var/www/htdocs/manual/
@
text
@d1 232
@


1.6
log
@merge
@
text
@@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@a0 228
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_cgi</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_cgi</h1>

    <p>This module provides for execution of CGI scripts.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_cgi.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    cgi_module</p>

    <h2>Summary</h2>
    <!-- XXX: Should have references to CGI definition/RFC -->
    Any file that has the mime type
    <code>application/x-httpd-cgi</code> or handler
    <code>cgi-script</code> (Apache 1.1 or later) will be treated
    as a CGI script, and run by the server, with its output being
    returned to the client. Files acquire this type either by
    having a name containing an extension defined by the <a
    href="mod_mime.html#addtype">AddType</a> directive, or by being
    in a <a href="mod_alias.html#scriptalias">ScriptAlias</a>
    directory. Files that are not in a <a
    href="mod_alias.html#scriptalias">ScriptAlias</a> directory,
    but which are of type <code>application/x-httpd-cgi</code> by
    virtue of an <code>AddType</code> directive, will still not be
    executed by the server unless <code>Options ExecCGI</code> is
    enabled. See the <a
    href="core.html#options"><code>Options</code></a> directive for
    more details. 

    <p>When the server invokes a CGI script, it will add a variable
    called <code>DOCUMENT_ROOT</code> to the environment. This
    variable will contain the value of the <a
    href="core.html#documentroot">DocumentRoot</a> configuration
    variable.</p>

    <p>For an introduction to using CGI scripts with Apache, see
    our tutorial on <a href="../howto/cgi.html">Dynamic Content
    with CGI</a>.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#scriptlog">ScriptLog</a></li>

      <li><a href="#scriptloglength">ScriptLogLength</a></li>

      <li><a href="#scriptlogbuffer">ScriptLogBuffer</a></li>
    </ul>

    <p>See also: <a href="core.html#options">Options</a>, <a
    href="mod_alias.html#scriptalias">ScriptAlias</a>, <a
    href="mod_mime.html#addtype">AddType</a> and <a
    href="mod_mime.html#addhandler">AddHandler</a>.</p>

    <h2>CGI Environment variables</h2>
    The server will set the CGI environment variables as described
    in the <a href="http://hoohoo.ncsa.uiuc.edu/cgi/">CGI
    specification</a>, with the following provisions: 

    <dl>
      <dt>REMOTE_HOST</dt>

      <dd>This will only be set if <a
      href="core.html#hostnamelookups"><code>HostnameLookups</code></a>
      is set to <code>on</code> (it is off by default), and if a
      reverse DNS lookup of the accessing host's address indeed
      finds a host name.</dd>

      <dt>REMOTE_IDENT</dt>

      <dd>This will only be set if <a
      href="core.html#identitycheck">IdentityCheck</a> is set to
      <code>on</code> and the accessing host supports the ident
      protocol. Note that the contents of this variable cannot be
      relied upon because it can easily be faked, and if there is a
      proxy between the client and the server, it is usually
      totally useless.</dd>

      <dt>REMOTE_USER</dt>

      <dd>This will only be set if the CGI script is subject to
      authentication.</dd>
    </dl>

    <h2><a id="cgi_debug" name="cgi_debug">CGI Debugging</a></h2>
    Debugging CGI scripts has traditionally been difficult, mainly
    because it has not been possible to study the output (standard
    output and error) for scripts which are failing to run
    properly. These directives, included in Apache 1.2 and later,
    provide more detailed logging of errors when they occur. 

    <h2>CGI Logfile Format</h2>
    When configured, the CGI error log logs any CGI which does not
    execute properly. Each CGI script which fails to operate causes
    several lines of information to be logged. The first two lines
    are always of the format: 
<pre>
  %% [<em>time</em>] <em>request-line</em>
  %% <em>HTTP-status</em> <em>CGI-script-filename</em>
</pre>
    If the error is that CGI script cannot be run, the log file
    will contain an extra two lines: 
<pre>
  %%error
  <em>error-message</em>
</pre>
    Alternatively, if the error is the result of the script
    returning incorrect header information (often due to a bug in
    the script), the following information is logged: 
<pre>
  %request
  <em>All HTTP request headers received</em>
  <em>POST or PUT entity (if any)</em>
  %response
  <em>All headers output by the CGI script</em>
  %stdout
  <em>CGI standard output</em>
  %stderr
  <em>CGI standard error</em>
</pre>
    (The %stdout and %stderr parts may be missing if the script did
    not output anything on standard output or standard error). 
    <hr />

    <h3><a id="scriptlog" name="scriptlog">ScriptLog</a>
    directive</h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLog
    <em>filename</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> none<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p>The <tt>ScriptLog</tt> directive sets the CGI script error
    logfile. If no ScriptLog is given, no error log is created. If
    given, any CGI errors are logged into the filename given as
    argument. If this is a relative file or path it is taken
    relative to the server root.</p>

    <p>This log will be opened as the user the child processes run
    as, ie. the user specified in the main <a
    href="core.html#User">User</a> directive. This means that
    either the directory the script log is in needs to be writable
    by that user or the file needs to be manually created and set
    to be writable by that user. If you place the script log in
    your main logs directory, do <strong>NOT</strong> change the
    directory permissions to make it writable by the user the child
    processes run as.</p>

    <p>Note that script logging is meant to be a debugging feature
    when writing CGI scripts, and is not meant to be activated
    continuously on running servers. It is not optimized for speed
    or efficiency, and may have security problems if used in a
    manner other than that for which it was designed.</p>
    <hr />

    <h3><a id="scriptloglength"
    name="scriptloglength">ScriptLogLength</a> directive</h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLogLength
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> 10385760<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p><tt>ScriptLogLength</tt> can be used to limit the size of
    the CGI script logfile. Since the logfile logs a lot of
    information per CGI error (all request headers, all script
    output) it can grow to be a big file. To prevent problems due
    to unbounded growth, this directive can be used to set an
    maximum file-size for the CGI logfile. If the file exceeds this
    size, no more information will be written to it.</p>
    <hr />

    <h3><a id="scriptlogbuffer"
    name="scriptlogbuffer">ScriptLogBuffer</a></h3>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptLogBuffer
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> 1024<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> mod_cgi 

    <p>The size of any PUT or POST entity body that is logged to
    the file is limited, to prevent the log file growing too big
    too quickly if large bodies are being received. By default, up
    to 1024 bytes are logged, but this can be changed with this
    directive.     <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>

@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 131
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_cgi</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>


<H1 ALIGN="CENTER">Module mod_cgi</H1>

<p>This module provides for execution of CGI scripts.</p>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Base
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_cgi.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> cgi_module
</P>


<H2>Summary</H2>
<!-- XXX: Should have references to CGI definition/RFC -->

Any file that has the mime type <CODE>application/x-httpd-cgi</CODE>
or handler <CODE>cgi-script</CODE> (Apache 1.1 or later)
will be treated as a CGI script, and run by the server, with its output
being returned to the client. Files acquire this type either by
having a name containing an extension defined by the
<A HREF="mod_mime.html#addtype">AddType</A> directive, or by being in
a <A HREF="mod_alias.html#scriptalias">ScriptAlias</A> directory. 
Files that are not in a 
<A HREF="mod_alias.html#scriptalias">ScriptAlias</A> directory, 
but which are of type <CODE>application/x-httpd-cgi</CODE> by
virtue of an <CODE>AddType</CODE> directive, will still not be executed
by the server unless <CODE>Options ExecCGI</CODE> is enabled. See
the <A HREF="core.html#options"><CODE>Options</CODE></A> directive
for more details.
<P>

When the server invokes a CGI script, it will add a variable called
<CODE>DOCUMENT_ROOT</CODE> to the environment. This variable will contain the
value of the <A HREF="core.html#documentroot">DocumentRoot</A>
configuration variable.

<p>For an introduction to using CGI scripts with Apache, see
our tutorial on <a href="../howto/cgi.html">Dynamic Content
with CGI</a>.</p>

<h2>Directives</h2>

<ul>
<li><a href="#scriptlog">ScriptLog</a></li>
<li><a href="#scriptloglength">ScriptLogLength</a></li>
<li><a href="#scriptlogbuffer">ScriptLogBuffer</a></li>
</ul>

<p>See also: <a href="core.html#options">Options</a>, <a
href="mod_alias.html#scriptalias">ScriptAlias</a>, <a
href="mod_mime.html#addtype">AddType</a> and <a
href="mod_mime.html#addhandler">AddHandler</a>.

<H2>CGI Environment variables</H2>
The server will set the CGI environment variables as described in the
<A HREF="http://hoohoo.ncsa.uiuc.edu/cgi/">CGI specification</A>, with the
following provisions:
<DL>
<DT>REMOTE_HOST
<DD>This will only be set if <A HREF="core.html#hostnamelookups"><CODE>HostnameLookups</CODE></A>
is set to <CODE>on</CODE> (it is off by default), and if a reverse DNS
lookup of the accessing host's address indeed finds a host name.
<DT>REMOTE_IDENT
<DD>This will only be set if
<A HREF="core.html#identitycheck">IdentityCheck</A> is set to <CODE>on</CODE>
and the accessing host supports the ident protocol. Note that the contents
of this variable cannot be relied upon because it can easily be faked, and if
there is a proxy between the client and the server, it is usually
totally useless.
<DT>REMOTE_USER
<DD>This will only be set if the CGI script is subject to authentication.
</DL>
<P>

<H2><A NAME="cgi_debug">CGI Debugging</A></H2>

Debugging CGI scripts has traditionally been difficult, mainly because
it has
not
been possible to study the output (standard output and error) for
scripts
which are failing to run properly. These directives, included in
Apache 1.2 and later, provide
more detailed logging of errors when they occur.

<H2>CGI Logfile Format</H2>

When configured, the CGI error log logs any CGI which does not execute
properly.  Each CGI script which fails to operate causes several lines
of information to be logged. The first two lines are always of the
format:

<PRE>
  %% [<EM>time</EM>] <EM>request-line</EM>
  %% <EM>HTTP-status</EM> <EM>CGI-script-filename</EM>
</PRE>

If the error is that CGI script cannot be run, the log file will
contain
an extra two lines:
d4 122
a125 1
<PRE>
d127 6
a132 8
  <EM>error-message</EM>
</PRE>

Alternatively, if the error is the result of the script returning
incorrect header information (often due to a bug in the script), the
following information is logged:

<PRE>
d134 2
a135 2
  <EM>All HTTP request headers received</EM>
  <EM>POST or PUT entity (if any)</EM>
d137 1
a137 1
  <EM>All headers output by the CGI script</EM>
d139 1
a139 1
  <EM>CGI standard output</EM>
d141 87
a227 116
  <EM>CGI standard error</EM>
</PRE>

(The %stdout and %stderr parts may  be missing if the script did not
output
anything on standard output or standard error).

<HR>

<H3><A NAME="scriptlog">ScriptLog</A> directive</H3>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLog <EM>filename</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> none<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>

The <TT>ScriptLog</TT> directive sets the CGI script error logfile.
If no ScriptLog is given, no error log is created. If given, any
CGI errors are logged into the filename given as argument. If this
is a relative file or path it is taken relative to the server root.

<P>This log will be opened as the user the child processes run as,
ie. the user specified in the main <A HREF="core.html#User">User</A>
directive.  This means that either the directory the script log is
in needs to be writable by that user or the file needs to be manually
created and set to be writable by that user.  If you place the
script log in your main logs directory, do <STRONG>NOT</STRONG>
change the directory permissions to make it writable by the user
the child processes run as.</P>

<P>Note that script logging is meant to be a debugging feature when
writing CGI scripts, and is not meant to be activated continuously on
running servers. It is not optimized for speed or efficiency, and may
have security problems if used in a manner other than that for which
it was designed.</P>

<hr>

<H3><A NAME="scriptloglength">ScriptLogLength</A> directive</H3>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLogLength <EM>bytes</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> 10385760<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>

<TT>ScriptLogLength</TT> can be used to limit the size of the CGI
script logfile.  Since the logfile logs a lot of information per CGI
error (all request headers, all script output) it can grow to be a big
file. To prevent problems due to unbounded growth, this directive can
be used to set an maximum file-size for the CGI logfile. If the file
exceeds this size, no more information will be written to it.

<hr>

<H3><A NAME="scriptlogbuffer">ScriptLogBuffer</A></H3>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLogBuffer <EM>bytes</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> 1024<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>

The size of any PUT or POST entity body that is logged to the file is
limited, to prevent the log file growing too big too quickly if large
bodies are being received. By default, up to 1024 bytes are logged,
but this can be changed with this directive.

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>

<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>

</BODY>
</HTML>
@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d68 4
a105 2
<HR>

a116 2
<HR>

d207 1
a207 1
><STRONG>Syntax:</STRONG></A> ScriptLogLength <EM>size</EM><BR>
d236 1
a236 1
><STRONG>Syntax:</STRONG></A> ScriptLogBuffer <EM>size</EM><BR>
@


1.2
log
@Apache 1.3.4 merge
@
text
@d25 18
a42 6
This module is contained in the <CODE>mod_cgi.c</CODE> file, and
is compiled in by default. It provides for execution of CGI scripts.
Any file with mime type <CODE>application/x-httpd-cgi</CODE> will be
processed by this module.
<!--%plaintext &lt;?INDEX {\tt application/x-httpd-cgi} mime type&gt; -->
<!--%plaintext &lt;?INDEX CGI scripts&gt; -->
d45 2
d53 9
a61 1
a <A HREF="mod_alias.html#scriptalias">ScriptAlias</A> directory. <P>
d68 13
d160 1
a160 3
<H2>Directives</H2>

<H3><A NAME="scriptlog">ScriptLog</A></H3>
d200 3
a202 1
<H3><A NAME="scriptloglength">ScriptLogLength</A></H3>
d228 2
@


1.1
log
@Initial revision
@
text
@d2 4
a5 4
<html>
<head>
<title>Apache module mod_cgi</title>
</head>
d18 1
a18 1
  Apache HTTP Server Version 1.2
d23 1
a23 1
<h1 ALIGN="CENTER">Module mod_cgi</h1>
d25 1
a25 1
This module is contained in the <code>mod_cgi.c</code> file, and
d27 1
a27 1
Any file with mime type <code>application/x-httpd-cgi</code> will be
d32 3
a34 3
<h2>Summary</h2>
Any file that has the mime type <code>application/x-httpd-cgi</code>
or handler <code>cgi-script</code> (Apache 1.1 or later)
d37 1
a37 1
having a name ending in an extension defined by the
d39 1
a39 1
a <A HREF="mod_alias.html#scriptalias">ScriptAlias</A> directory. <p>
d42 1
a42 1
<code>DOCUMENT_ROOT</code> to the environment. This variable will contain the
d46 19
a64 13
<h2>CGI Environment variables</h2>
The server will set the CGI environment variables as described in the CGI
specification, with the following provisions:
<dl>
<dt>REMOTE_HOST
<dd>This will only be set if the server has not been compiled with
<code>MINIMAL_DNS</code>.
<dt>REMOTE_IDENT
<dd>This will only be set if
<A HREF="core.html#identitycheck">IdentityCheck</A> is set to <code>on</code>.
<dt>REMOTE_USER
<dd>This will only be set if the CGI script is subject to authentication.
</dl>
d67 1
a67 1
<hr>
d69 1
a69 1
<h2><a name="cgi_debug">CGI Debugging</a></h2>
d80 1
a80 1
<hr>
d82 1
a82 1
<h2>CGI Logfile Format</h2>
d89 4
a92 4
<pre>
  %% [<i>time</i>] <i>request-line</i>
  %% <i>HTTP-status</i> <i>CGI-script-filename</i>
</pre>
d98 1
a98 1
<pre>
d100 2
a101 2
  <i>error-message</i>
</pre>
d107 1
a107 1
<pre>
d109 2
a110 2
  <i>All HTTP request headers received</i>
  <i>POST or PUT entity (if any)</i>
d112 1
a112 1
  <i>All headers output by the CGI script</i>
d114 1
a114 1
  <i>CGI standard output</i>
d116 2
a117 2
  <i>CGI standard error</i>
</pre>
d123 1
a123 1
<hr>
d125 1
a125 1
<h2>Directives</h2>
d127 1
a127 1
<h3><a name="scriptlog">ScriptLog</a></h3>
d129 17
a145 5
<b>Syntax:</b> ScriptLog <i>filename</i><br>
<b>Default:</b> none<br>
<b>Context:</b> resource config<br>
<b>Status:</b> mod_cgi
<p>
d147 1
a147 1
The <tt>ScriptLog</tt> directive sets the CGI script error logfile.
d161 1
a161 1
<p>Note that script logging is meant to be a debugging feature when
d165 1
a165 1
it was designed.</p>
d167 1
a167 1
<h3><a name="scriptloglength">ScriptLogLength</a></h3>
d169 17
a185 5
<b>Syntax:</b> ScriptLogLength <i>size</i><br>
<b>Default:</b> 10385760<br>
<b>Context:</b> resource config<br>
<b>Status:</b> mod_cgi
<p>
d187 1
a187 1
<tt>ScriptLogLength</tt> can be used to limit the size of the CGI
d194 1
a194 1
<h3><a name="scriptlogbuffer">ScriptLogBuffer</a></h3>
d196 17
a212 5
<b>Syntax:</b> ScriptLogBuffer <i>size</i><br>
<b>Default:</b> 1024<br>
<b>Context:</b> resource config<br>
<b>Status:</b> mod_cgi
<p>
d220 1
d222 1
a222 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d2 4
a5 4
<HTML>
<HEAD>
<TITLE>Apache module mod_cgi</TITLE>
</HEAD>
d18 1
a18 1
  Apache HTTP Server Version 1.3
d23 1
a23 1
<H1 ALIGN="CENTER">Module mod_cgi</H1>
d25 1
a25 1
This module is contained in the <CODE>mod_cgi.c</CODE> file, and
d27 1
a27 1
Any file with mime type <CODE>application/x-httpd-cgi</CODE> will be
d32 3
a34 3
<H2>Summary</H2>
Any file that has the mime type <CODE>application/x-httpd-cgi</CODE>
or handler <CODE>cgi-script</CODE> (Apache 1.1 or later)
d39 1
a39 1
a <A HREF="mod_alias.html#scriptalias">ScriptAlias</A> directory. <P>
d42 1
a42 1
<CODE>DOCUMENT_ROOT</CODE> to the environment. This variable will contain the
d46 13
a58 19
<H2>CGI Environment variables</H2>
The server will set the CGI environment variables as described in the
<A HREF="http://hoohoo.ncsa.uiuc.edu/cgi/">CGI specification</A>, with the
following provisions:
<DL>
<DT>REMOTE_HOST
<DD>This will only be set if <A HREF="core.html#hostnamelookups"><CODE>HostnameLookups</CODE></A>
is set to <CODE>on</CODE> (it is off by default), and if a reverse DNS
lookup of the accessing host's address indeed finds a host name.
<DT>REMOTE_IDENT
<DD>This will only be set if
<A HREF="core.html#identitycheck">IdentityCheck</A> is set to <CODE>on</CODE>
and the accessing host supports the ident protocol. Note that the contents
of this variable cannot be relied upon because it can easily be faked, and if
there is a proxy between the client and the server, it is usually
totally useless.
<DT>REMOTE_USER
<DD>This will only be set if the CGI script is subject to authentication.
</DL>
d61 1
a61 1
<HR>
d63 1
a63 1
<H2><A NAME="cgi_debug">CGI Debugging</A></H2>
d74 1
a74 1
<HR>
d76 1
a76 1
<H2>CGI Logfile Format</H2>
d83 4
a86 4
<PRE>
  %% [<EM>time</EM>] <EM>request-line</EM>
  %% <EM>HTTP-status</EM> <EM>CGI-script-filename</EM>
</PRE>
d92 1
a92 1
<PRE>
d94 2
a95 2
  <EM>error-message</EM>
</PRE>
d101 1
a101 1
<PRE>
d103 2
a104 2
  <EM>All HTTP request headers received</EM>
  <EM>POST or PUT entity (if any)</EM>
d106 1
a106 1
  <EM>All headers output by the CGI script</EM>
d108 1
a108 1
  <EM>CGI standard output</EM>
d110 2
a111 2
  <EM>CGI standard error</EM>
</PRE>
d117 1
a117 1
<HR>
d119 1
a119 1
<H2>Directives</H2>
d121 1
a121 1
<H3><A NAME="scriptlog">ScriptLog</A></H3>
d123 5
a127 17
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLog <EM>filename</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> none<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>
d129 1
a129 1
The <TT>ScriptLog</TT> directive sets the CGI script error logfile.
d143 1
a143 1
<P>Note that script logging is meant to be a debugging feature when
d147 1
a147 1
it was designed.</P>
d149 1
a149 1
<H3><A NAME="scriptloglength">ScriptLogLength</A></H3>
d151 5
a155 17
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLogLength <EM>size</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> 10385760<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>
d157 1
a157 1
<TT>ScriptLogLength</TT> can be used to limit the size of the CGI
d164 1
a164 1
<H3><A NAME="scriptlogbuffer">ScriptLogBuffer</A></H3>
d166 5
a170 17
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptLogBuffer <EM>size</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> 1024<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> mod_cgi
<P>
a177 1

d179 1
a179 1
 Apache HTTP Server Version 1.3
@

