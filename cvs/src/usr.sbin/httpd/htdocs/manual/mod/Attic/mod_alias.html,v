head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.38
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.34
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.32
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.30
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.28
	OPENBSD_5_0:1.10.0.26
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.24
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.22
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.18
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.10;

1.10
date	2005.07.29.23.55.40;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2002.10.07.20.51.33;	author henning;	state dead;
branches;
next	1.8;

1.8
date	2002.07.19.21.31.14;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.29.02.08.04;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2001.03.29.10.21.31;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.22.17.33;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.09.29.06.29.04;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.01.05.21;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.32;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.32;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.01;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.27.48;	author henning;	state Exp;
branches;
next	;


desc
@@


1.11
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_alias</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_alias</h1>

    <p>This module provides for mapping different parts of the host
    filesystem in the document tree, and for URL redirection.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_alias.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    alias_module</p>

    <h2>Summary</h2>

    <p>The directives contained in this module allow for
    manipulation and control of URLs as requests arrive at the
    server. The <code>Alias</code> and <code>ScriptAlias</code>
    directives are used to map between URLs and filesystem paths.
    This allows for content which is not directly under the <a
    href="core.html#documentroot"><code>DocumentRoot</code></a> to
    be served as part of the web document tree. The
    <code>ScriptAlias</code> directive has the additional effect of
    marking the target directory as containing only CGI
    scripts.</p>

    <p>The <code>Redirect</code> directives are used to instruct
    clients to make a new request with a different URL. They are
    often used when a resource has moved to a new location.</p>

    <p>A more powerful and flexible set of directives for
    manipulating URLs is contained in the <a
    href="mod_rewrite.html"><code>mod_rewrite</code></a>
    module.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#alias">Alias</a></li>

      <li><a href="#aliasmatch">AliasMatch</a></li>

      <li><a href="#redirect">Redirect</a></li>

      <li><a href="#redirectmatch">RedirectMatch</a></li>

      <li><a href="#redirecttemp">RedirectTemp</a></li>

      <li><a href="#redirectperm">RedirectPermanent</a></li>

      <li><a href="#scriptalias">ScriptAlias</a></li>

      <li><a href="#scriptaliasmatch">ScriptAliasMatch</a></li>
    </ul>
    <hr />

    <h2><a id="alias" name="alias">Alias directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Alias <em>URL-path
    file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias</p>

    <p>The Alias directive allows documents to be stored in the
    local filesystem other than under the <a
    href="core.html#documentroot">DocumentRoot</a>. URLs with a
    (%-decoded) path beginning with <em>url-path</em> will be
    mapped to local files beginning with
    <em>directory-filename</em>.</p>

    <p>Example:</p>

    <blockquote>
      <code>Alias /image /ftp/pub/image</code>
    </blockquote>

    <p>A request for http://myserver/image/foo.gif would cause the
    server to return the file /ftp/pub/image/foo.gif.</p>

    <p>Note that if you include a trailing / on the
    <em>url-path</em> then the server will require a trailing / in
    order to expand the alias. That is, if you use <code>Alias
    /icons/ /usr/local/apache/icons/</code> then the url
    <code>/icons</code> will not be aliased.</p>

    <p>Note that you may need to specify additional <a
    href="core.html#directory"><code>&lt;Directory&gt;</code></a>
    sections which cover the <em>destination</em> of aliases.
    Aliasing occurs before <code>&lt;Directory&gt;</code> sections
    are checked, so only the destination of aliases are affected.
    (Note however <a
    href="core.html#location"><code>&lt;Location&gt;</code></a>
    sections are run through once before aliases are performed, so
    they will apply.)</p>

    <p>See also <a href="#scriptalias">ScriptAlias</a>.</p>
    <hr />

    <h2><a id="aliasmatch" name="aliasmatch">AliasMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AliasMatch <em>regex
    file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a href="#alias">Alias</a>,
    but makes use of standard regular expressions, instead of
    simple prefix matching. The supplied regular expression is
    matched against the URL-path, and if it matches, the server
    will substitute any parenthesized matches into the given string
    and use it as a filename. For example, to activate the
    <code>/icons</code> directory, one might use:</p>
<pre>
    AliasMatch ^/icons(.*) /usr/local/apache/icons$1
</pre>
    <hr />

    <h2><a id="redirect" name="redirect">Redirect
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Redirect
    [<em>status</em>] <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> The directory
    and .htaccess context's are only available in versions 1.1 and
    later. The <em>status</em> argument is only available in Apache
    1.2 or later.</p>

    <p>The Redirect directive maps an old URL into a new one. The
    new URL is returned to the client which attempts to fetch it
    again with the new address. <em>URL-path</em> a (%-decoded)
    path; any requests for documents beginning with this path will
    be returned a redirect error to a new (%-encoded) URL beginning
    with <em>URL</em>.</p>

    <p>Example:</p>

    <blockquote>
      <code>Redirect /service http://foo2.bar.com/service</code>
    </blockquote>

    <p>If the client requests http://myserver/service/foo.txt, it
    will be told to access http://foo2.bar.com/service/foo.txt
    instead.</p>

    <p><strong>Note:</strong> Redirect directives take precedence
    over Alias and ScriptAlias directives, irrespective of their
    ordering in the configuration file. Also, <em>URL-path</em>
    must be an absolute path, not a relative path, even when used
    with .htaccess files or inside of &lt;Directory&gt;
    sections.</p>

    <p>If no <em>status</em> argument is given, the redirect will
    be "temporary" (HTTP status 302). This indicates to the client
    that the resource has moved temporarily. The <em>status</em>
    argument can be used to return other HTTP status codes:</p>

    <dl>
      <dt>permanent</dt>

      <dd>Returns a permanent redirect status (301) indicating that
      the resource has moved permanently.</dd>

      <dt>temp</dt>

      <dd>Returns a temporary redirect status (302). This is the
      default.</dd>

      <dt>seeother</dt>

      <dd>Returns a "See Other" status (303) indicating that the
      resource has been replaced.</dd>

      <dt>gone</dt>

      <dd>Returns a "Gone" status (410) indicating that the
      resource has been permanently removed. When this status is
      used the <em>url</em> argument should be omitted.</dd>
    </dl>

    <p>Other status codes can be returned by giving the numeric
    status code as the value of <em>status</em>. If the status is
    between 300 and 399, the <em>url</em> argument must be present,
    otherwise it must be omitted. Note that the status must be
    known to the Apache code (see the function
    <code>send_error_response</code> in http_protocol.c).</p>

    <p>Example:</p>

    <pre>
    Redirect permanent /one http://example.com/two<br />
    Redirect 303 /two http://example.com/other
    </pre>
    <hr />

    <h2><a id="redirectmatch"
    name="redirectmatch">RedirectMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectMatch
    [<em>status</em>] <em>regex URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a
    href="#redirect">Redirect</a>, but makes use of standard
    regular expressions, instead of simple prefix matching. The
    supplied regular expression is matched against the URL-path,
    and if it matches, the server will substitute any parenthesized
    matches into the given string and use it as a filename. For
    example, to redirect all GIF files to like-named JPEG files on
    another server, one might use:</p>
<pre>
    RedirectMatch (.*)\.gif$ http://www.anotherserver.com$1.jpg
</pre>
    <hr />

    <h2><a id="redirecttemp" name="redirecttemp">RedirectTemp
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectTemp
    <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> This directive
    is only available in Apache 1.2 and later</p>

    <p>This directive makes the client know that the Redirect is
    only temporary (status 302). Exactly equivalent to
    <code>Redirect temp</code>.</p>
    <hr />

    <h2><a id="redirectperm" name="redirectperm">RedirectPermanent
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectPermanent
    <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> This directive
    is only available in Apache 1.2 and later</p>

    <p>This directive makes the client know that the Redirect is
    permanent (status 301). Exactly equivalent to <code>Redirect
    permanent</code>.</p>
    <hr />

    <h2><a id="scriptalias" name="scriptalias">ScriptAlias
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptAlias
    <em>URL-path file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias</p>

    <p>The ScriptAlias directive has the same behavior as the <a
    href="#alias">Alias</a> directive, except that in addition it
    marks the target directory as containing CGI scripts that will be
    processed by <a href="mod_cgi.html">mod_cgi</a>'s cgi-script
    handler. URLs with a (%-decoded) path beginning with
    <em>URL-path</em> will be mapped to scripts beginning with the
    second argument which is a full pathname in the local
    filesystem.</p>

    <p>Example:</p>

    <blockquote>
      <code>ScriptAlias /cgi-bin/ /web/cgi-bin/</code>
    </blockquote>

    <p>A request for http://myserver/cgi-bin/foo would cause the
    server to run the script /web/cgi-bin/foo.</p>
    <hr />

    <h2><a id="scriptaliasmatch"
    name="scriptaliasmatch">ScriptAliasMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptAliasMatch
    <em>regex file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a
    href="#scriptalias">ScriptAlias</a>, but makes use of standard
    regular expressions, instead of simple prefix matching. The
    supplied regular expression is matched against the URL-path,
    and if it matches, the server will substitute any parenthesized
    matches into the given string and use it as a filename. For
    example, to activate the standard <code>/cgi-bin</code>, one
    might use:</p>
<pre>
    ScriptAliasMatch ^/cgi-bin(.*) /usr/local/apache/cgi-bin$1
</pre>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>



@


1.10
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.9
log
@gone to the big harddrive in the sky
@
text
@d1 2
d397 2
@


1.8
log
@merge
@
text
@@


1.7
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@d234 7
@


1.6
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d335 6
a340 4
    marks the target directory as containing CGI scripts. URLs with
    a (%-decoded) path beginning with <em>URL-path</em> will be
    mapped to scripts beginning with the second argument which is a
    full pathname in the local filesystem.</p>
@


1.5
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 149
a149 163
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_alias</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>


<H1 ALIGN="CENTER">Module mod_alias</H1>
<P>
This module provides for mapping different parts of the
host filesystem in the document tree, and for URL redirection.
</P>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Base
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_alias.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> alias_module
</P>

<H2>Summary</H2>

<P>The directives contained in this module allow for manipulation and
control of URLs as requests arrive at the server.  The
<CODE>Alias</CODE> and <CODE>ScriptAlias</CODE> directives are used to
map between URLs and filesystem paths.  This allows for content which
is not directly under the <A
HREF="core.html#documentroot"><CODE>DocumentRoot</CODE></A> to be
served as part of the web document tree.  The <CODE>ScriptAlias</CODE>
directive has the additional effect of marking the target directory as
containing only CGI scripts.

<P>The <CODE>Redirect</CODE> directives are used to instruct clients
to make a new request with a different URL.  They are often used
when a resource has moved to a new location.

<P>A more powerful and flexible set of directives for manipulating
URLs is contained in the <A
HREF="mod_rewrite.html"><CODE>mod_rewrite</CODE></A> module.


<H2>Directives</H2>
<UL>
<LI><A HREF="#alias">Alias</A>
<LI><A HREF="#aliasmatch">AliasMatch</A>
<LI><A HREF="#redirect">Redirect</A>
<LI><A HREF="#redirectmatch">RedirectMatch</A>
<LI><A HREF="#redirecttemp">RedirectTemp</A>
<LI><A HREF="#redirectperm">RedirectPermanent</A>
<LI><A HREF="#scriptalias">ScriptAlias</A>
<LI><A HREF="#scriptaliasmatch">ScriptAliasMatch</A>
</UL>
<HR>


<H2><A NAME="alias">Alias directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Alias} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> Alias <EM>url-path directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias
</P>
<P>
The Alias directive allows documents to be stored in the local filesystem
other than under the <A HREF="core.html#documentroot">DocumentRoot</A>.
URLs with a (%-decoded) path beginning with <EM>url-path</EM> will be
mapped to local files beginning with <EM>directory-filename</EM>.
<P>
Example:
</P>
<BLOCKQUOTE><CODE>Alias /image /ftp/pub/image</CODE></BLOCKQUOTE>
<P>
A request for http://myserver/image/foo.gif would cause the server to
return the file /ftp/pub/image/foo.gif.
</P>
<P>
Note that if you include a trailing / on the <EM>url-path</EM> then the
server will require a trailing / in order to expand the alias.  That is,
if you use <CODE>Alias /icons/ /usr/local/apache/icons/</CODE> then
the url <CODE>/icons</CODE> will not be aliased.
</P>
<P>
Note that you may need to specify additional
<A HREF="core.html#directory"><CODE>&lt;Directory&gt;</CODE></A> sections
which cover the <EM>destination</EM> of aliases.  Aliasing occurs
before <CODE>&lt;Directory&gt;</CODE> sections are checked, so only
the destination of aliases are affected.  (Note however
<A HREF="core.html#location"><CODE>&lt;Location&gt;</CODE></A>
sections are run through once before aliases are performed, so they
will apply.)
<P>
See also <A HREF="#scriptalias">ScriptAlias</A>.
</P>
<HR>

<H2><A NAME="aliasmatch">AliasMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AliasMatch <EM>regex directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#alias">Alias</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to activate the <CODE>/icons</CODE> directory, one might use:
<PRE>
d151 2
a152 1
</PRE>
d154 2
a155 1
<HR>
d157 107
a263 124
<H2><A NAME="redirect">Redirect directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Redirect} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> Redirect [<EM>status</EM>]
 <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> The directory and .htaccess context's
are only available in versions 1.1 and later. The <EM>status</EM>
argument is only available in Apache 1.2 or later.
</P>
<P>
The Redirect directive maps an old URL into a new one. The new URL is returned
to the client which attempts to fetch it again with the new address.
<EM>Url-path</EM> a (%-decoded) path; any requests for documents beginning with
this path will be returned a redirect error to a new (%-encoded) url
beginning with <EM>url</EM>.
</P>
<P>
Example:
</P>
<BLOCKQUOTE><CODE>Redirect /service
http://foo2.bar.com/service</CODE></BLOCKQUOTE>
<P>
If the client requests http://myserver/service/foo.txt, it will be told to
access http://foo2.bar.com/service/foo.txt instead.
</P>
<P>
<STRONG>Note:</STRONG> Redirect directives take precedence over Alias
and ScriptAlias
directives, irrespective of their ordering in the configuration file.  Also,
<EM>Url-path</EM> must be an absolute path, not a relative path, even
when used with .htaccess files or inside of &lt;Directory&gt; sections.
</P>
<P>
If no <EM>status</EM> argument is given, the redirect will be
&quot;temporary&quot; (HTTP status 302). This indicates to the client that the
resource has moved temporarily. The <EM>status</EM>
argument can be used to return other HTTP status codes:
<P>
<DL>
<DT>permanent
<DD>Returns a permanent redirect status (301) indicating that
the resource has moved permanently.
<DT>temp
<DD>Returns a temporary redirect status (302). This is the
default.
<DT>seeother
<DD>Returns a "See Other" status (303) indicating that
the resource has been replaced.
<DT>gone
<DD>Returns a "Gone" status (410) indicating that the resource
has been permanently removed. When this status is used the <EM>url</EM>
argument should be omitted.
</DL>
<P>
Other status codes can be returned by giving the numeric status code
as the value of <EM>status</EM>. If the status is between 300 and 399,
the <EM>url</EM> argument must be present, otherwise it must be
omitted. Note that the status must be known to the Apache code (see
the function <CODE>send_error_response</CODE> in http_protocol.c).
</P>
<HR>

<H2><A NAME="redirectmatch">RedirectMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A>
    RedirectMatch [<EM>status</EM>] <EM>regex url</EM>
<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#alias">Redirect</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to redirect all GIF files to like-named JPEG files on another server,
one might use:
<PRE>
d265 2
a266 1
</PRE>
d268 2
a269 1
<HR>
d271 105
a375 141
<H2><A NAME="redirecttemp">RedirectTemp directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Redirect} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RedirectTemp <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> This directive is only available in Apache 1.2 and later
</P>
<P>
This directive makes the client know that the Redirect is only
temporary (status 302). Exactly equivalent to <CODE>Redirect
temp</CODE>.
</P>
<HR>

<H2><A NAME="redirectperm">RedirectPermanent directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Redirect} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RedirectPermanent <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> This directive is only available in Apache 1.2 and later
</P>
<P>
This directive makes the client know that the Redirect is permanent
(status 301). Exactly equivalent to <CODE>Redirect permanent</CODE>.
</P>
<HR>

<H2><A NAME="scriptalias">ScriptAlias directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt ScriptAlias} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptAlias <EM>url-path directory-filename</EM>
<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias
</P>
<P>
The ScriptAlias directive has the same behavior as the
<A HREF="#alias">Alias</A> directive, except that in addition it
marks the target directory as containing CGI scripts.
URLs with a (%-decoded) path beginning with <EM>url-path</EM> will be
mapped to scripts beginning with <EM>directory-filename</EM>.
<P>
Example:
</P>
<BLOCKQUOTE><CODE>ScriptAlias /cgi-bin/ /web/cgi-bin/</CODE></BLOCKQUOTE>
<P>
A request for http://myserver/cgi-bin/foo would cause the server to
run the script /web/cgi-bin/foo.
</P>

<HR>

<H2><A NAME="scriptaliasmatch">ScriptAliasMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptAliasMatch
 <EM>regex directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#scriptalias">ScriptAlias</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to activate the standard <CODE>/cgi-bin</CODE>, one might use:
<PRE>
d377 2
a378 3
</PRE>

<HR>
d380 3
a382 3
<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d384 2
a385 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a386 2
</BODY>
</HTML>
@


1.4
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@a165 1
</P>
d175 1
a175 1
><STRONG>Syntax:</STRONG></A> Redirect [ <EM>status</EM> ]
a294 1
</P>
a440 1
</P>
@


1.3
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d25 2
a26 3
This module is contained in the <CODE>mod_alias.c</CODE> file, and
is compiled in by default. It provides for mapping different parts of the
host filesystem in the the document tree, and for URL redirection.
d29 37
d228 1
a228 1
resources is has moved temporarily. The <EM>status</EM>
d327 1
a327 1
><STRONG>Compatibility:</STRONG></A> This directive is only available in 1.2
d363 1
a363 1
><STRONG>Compatibility:</STRONG></A> This directive is only available in 1.2
@


1.2
log
@Apache 1.3.4 merge
@
text
@d230 2
a231 1
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
d296 1
a296 1
temporary</CODE>.
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d23 3
a25 3
<H1 ALIGN="CENTER">Module mod_alias</h1>

This module is contained in the <code>mod_alias.c</code> file, and
d28 1
d30 12
a42 8
<menu>
<li><A HREF="#alias">Alias</A>
<li><A HREF="#redirect">Redirect</A>
<li><A HREF="#redirecttemp">RedirectTemp</A>
<li><A HREF="#redirectperm">RedirectPermanent</A>
<li><A HREF="#scriptalias">ScriptAlias</A>
</menu>
<hr>
d44 2
a45 2

<A name="alias"><h2>Alias</h2></A>
d47 18
a64 5
<strong>Syntax:</strong> Alias <em>url-path directory-filename</em><br>
<Strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_alias<br>

d67 3
a69 2
URLs with a (%-decoded) path beginning with <em>url-path</em> will be
mapped to local files beginning with <em>directory-filename</em>.
d71 3
a73 1
<blockquote><code>Alias /image /ftp/pub/image</code></blockquote>
d75 21
a95 1
return the file /ftp/pub/image/foo.gif.<p>
d97 34
a130 4
Note that if you include a trailing / on the <em>url-path</em> then the
server will require a trailing / in order to expand the alias.  That is,
if you use <code>Alias /icons/ /usr/local/etc/httpd/icons/</code> then
the url <code>/icons</code> will not be aliased.<p>
d132 1
a132 1
See also <A HREF="#scriptalias">ScriptAlias</A>.<p><hr>
d134 2
a135 1
<A name="redirect"><h2>Redirect</h2></A>
d137 30
a166 7
<strong>Syntax:</strong> Redirect [ <em>status</em> ] <em>url-path url</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_alias<br>
<strong>Compatibility:</strong> The directory and .htaccess context's
are only available in versions 1.1 and later. The <em>status</em> argument is only available in Apache 1.2 or later.<p>

d169 1
a169 1
<em>Url-path</em> a (%-decoded) path; any requests for documents beginning with
d171 8
a178 3
beginning with <em>url</em>. Example:
<blockquote><code>Redirect /service
http://foo2.bar.com/service</code></blockquote>
d180 5
a184 3
access http://foo2.bar.com/service/foo.txt instead.<p>

Note: Redirect directives take precedence over Alias and ScriptAlias
d186 7
a192 6
<em>Url-path</em> must be an absolute path, not a relative path, even when used with
.htaccess files or inside of &lt;Directory&gt; sections.<p>

If no <em>status</em> argument is given, the redirect will be
"temporary" (HTTP status 302). This indicates to the client that the
resources is has moved temporarily. The <em>status</em>
d194 4
a197 2
<dl>
<dt>permanent<dd>Returns a permanent redirect status (301) indicating that
d199 2
a200 1
<dt>temp<dd>Returns a temporary redirect status (302). This is the
d202 2
a203 1
<dt>seeother<dd>Returns a "See Other" status (303) indicating that
d205 3
a207 2
<dt>gone<dd>Returns a "Gone" status (410) indicating that the resource
has been permanently removed. When this status is used the <em>url</em>
d209 2
a210 2
</dl>

d212 2
a213 2
as the value of <em>status</em>. If the status is between 300 and 399,
the <em>url</em> argument must be present, otherwise it must be
d215 3
a217 1
the function <code>send_error_response</code> in http_protocol.c).
d219 46
a264 1
<A name="redirecttemp"><h2>RedirectTemp</h2></A>
d266 27
a292 6
<strong>Syntax:</strong> RedirectTemp <em>url-path url</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_alias<br>
<strong>Compatibility:</strong> This directive is only available in 1.2<P>

d294 4
a297 1
temporary. (Status 302). Exactly equivalent to <code>Redirect temporary </code><P>
d299 2
a300 1
<A name="redirectperm"><h2>RedirectPermanent</h2></A>
d302 31
a332 8
<strong>Syntax:</strong> RedirectPermanent <em>url-path url</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_alias<br>
<strong>Compatibility:</strong> This directive is only available in 1.2<P>

This directive makes the client know that the Redirect is permanent.
(Status 301). Exactly equivalent to <code>Redirect permanent</code><P>
d334 2
a335 2
<hr>
<A name="scriptalias"><h2>ScriptAlias</h2></A>
d337 19
a355 5
<strong>Syntax:</strong> ScriptAlias <em>url-path directory-filename</em><br>
<Strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_alias<br>

d359 3
a361 2
URLs with a (%-decoded) path beginning with <em>url-path</em> will be
mapped to scripts beginning with <em>directory-filename</em>.
d363 3
a365 1
<blockquote><code>ScriptAlias /cgi-bin/ /web/cgi-bin/</code></blockquote>
d367 40
a406 1
run the script /web/cgi-bin/foo.<p>
d409 1
d411 1
a411 1
 Apache HTTP Server Version 1.2
a418 1

@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d23 3
a25 3
<H1 ALIGN="CENTER">Module mod_alias</H1>
<P>
This module is contained in the <CODE>mod_alias.c</CODE> file, and
a27 1
</P>
d29 9
a37 12
<H2>Directives</H2>
<UL>
<LI><A HREF="#alias">Alias</A>
<LI><A HREF="#aliasmatch">AliasMatch</A>
<LI><A HREF="#redirect">Redirect</A>
<LI><A HREF="#redirectmatch">RedirectMatch</A>
<LI><A HREF="#redirecttemp">RedirectTemp</A>
<LI><A HREF="#redirectperm">RedirectPermanent</A>
<LI><A HREF="#scriptalias">ScriptAlias</A>
<LI><A HREF="#scriptaliasmatch">ScriptAliasMatch</A>
</UL>
<HR>
d40 1
a40 2
<H2><A NAME="alias">Alias directive</A></H2>
<P>
d42 5
a46 18
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> Alias <EM>url-path directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias
</P>
<P>
d49 2
a50 3
URLs with a (%-decoded) path beginning with <EM>url-path</EM> will be
mapped to local files beginning with <EM>directory-filename</EM>.
<P>
d52 1
a52 3
</P>
<BLOCKQUOTE><CODE>Alias /image /ftp/pub/image</CODE></BLOCKQUOTE>
<P>
d54 3
a56 4
return the file /ftp/pub/image/foo.gif.
</P>
<P>
Note that if you include a trailing / on the <EM>url-path</EM> then the
d58 2
a59 16
if you use <CODE>Alias /icons/ /usr/local/apache/icons/</CODE> then
the url <CODE>/icons</CODE> will not be aliased.
</P>
<P>
Note that you may need to specify additional
<A HREF="core.html#directory"><CODE>&lt;Directory&gt;</CODE></A> sections
which cover the <EM>destination</EM> of aliases.  Aliasing occurs
before <CODE>&lt;Directory&gt;</CODE> sections are checked, so only
the destination of aliases are affected.  (Note however
<A HREF="core.html#location"><CODE>&lt;Location&gt;</CODE></A>
sections are run through once before aliases are performed, so they
will apply.)
<P>
See also <A HREF="#scriptalias">ScriptAlias</A>.
</P>
<HR>
d61 1
a61 34
<H2><A NAME="aliasmatch">AliasMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AliasMatch <EM>regex directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#alias">Alias</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to activate the <CODE>/icons</CODE> directory, one might use:
<PRE>
    AliasMatch ^/icons(.*) /usr/local/apache/icons$1
</PRE>
</P>
d63 8
a70 1
<HR>
a71 29
<H2><A NAME="redirect">Redirect directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Redirect} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> Redirect [ <EM>status</EM> ]
 <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> The directory and .htaccess context's
are only available in versions 1.1 and later. The <EM>status</EM>
argument is only available in Apache 1.2 or later.
</P>
<P>
d74 1
a74 1
<EM>Url-path</EM> a (%-decoded) path; any requests for documents beginning with
d76 3
a78 8
beginning with <EM>url</EM>.
</P>
<P>
Example:
</P>
<BLOCKQUOTE><CODE>Redirect /service
http://foo2.bar.com/service</CODE></BLOCKQUOTE>
<P>
d80 3
a82 5
access http://foo2.bar.com/service/foo.txt instead.
</P>
<P>
<STRONG>Note:</STRONG> Redirect directives take precedence over Alias
and ScriptAlias
d84 6
a89 7
<EM>Url-path</EM> must be an absolute path, not a relative path, even
when used with .htaccess files or inside of &lt;Directory&gt; sections.
</P>
<P>
If no <EM>status</EM> argument is given, the redirect will be
&quot;temporary&quot; (HTTP status 302). This indicates to the client that the
resources is has moved temporarily. The <EM>status</EM>
d91 2
a92 4
<P>
<DL>
<DT>permanent
<DD>Returns a permanent redirect status (301) indicating that
d94 1
a94 2
<DT>temp
<DD>Returns a temporary redirect status (302). This is the
d96 1
a96 2
<DT>seeother
<DD>Returns a "See Other" status (303) indicating that
d98 2
a99 3
<DT>gone
<DD>Returns a "Gone" status (410) indicating that the resource
has been permanently removed. When this status is used the <EM>url</EM>
d101 2
a102 2
</DL>
<P>
d104 2
a105 2
as the value of <EM>status</EM>. If the status is between 300 and 399,
the <EM>url</EM> argument must be present, otherwise it must be
d107 1
a107 3
the function <CODE>send_error_response</CODE> in http_protocol.c).
</P>
<HR>
d109 7
a115 37
<H2><A NAME="redirectmatch">RedirectMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A>
    RedirectMatch [<EM>status</EM>] <EM>regex url</EM>
<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#alias">Redirect</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to redirect all GIF files to like-named JPEG files on another server,
one might use:
<PRE>
    RedirectMatch (.*)\.gif$ http://www.anotherserver.com$1.jpg
</PRE>
</P>
d117 2
a118 1
<HR>
d120 1
a120 2
<H2><A NAME="redirecttemp">RedirectTemp directive</A></H2>
<P>
d122 5
a126 28
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RedirectTemp <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> This directive is only available in 1.2
</P>
<P>
This directive makes the client know that the Redirect is only
temporary (status 302). Exactly equivalent to <CODE>Redirect
temporary</CODE>.
</P>
<HR>
d128 2
a129 30
<H2><A NAME="redirectperm">RedirectPermanent directive</A></H2>
<P>
<!--%plaintext &lt;?INDEX {\tt Redirect} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RedirectPermanent <EM>url-path url</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
 .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> This directive is only available in 1.2
</P>
<P>
This directive makes the client know that the Redirect is permanent
(status 301). Exactly equivalent to <CODE>Redirect permanent</CODE>.
</P>
<HR>
d131 2
a132 2
<H2><A NAME="scriptalias">ScriptAlias directive</A></H2>
<P>
d134 5
a138 19
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptAlias <EM>url-path directory-filename</EM>
<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias
</P>
<P>
d142 2
a143 3
URLs with a (%-decoded) path beginning with <EM>url-path</EM> will be
mapped to scripts beginning with <EM>directory-filename</EM>.
<P>
d145 1
a145 3
</P>
<BLOCKQUOTE><CODE>ScriptAlias /cgi-bin/ /web/cgi-bin/</CODE></BLOCKQUOTE>
<P>
d147 1
a147 40
run the script /web/cgi-bin/foo.
</P>

<HR>

<H2><A NAME="scriptaliasmatch">ScriptAliasMatch</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ScriptAliasMatch
 <EM>regex directory-filename</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3 and later
</P>

<P>This directive is equivalent to <A HREF="#scriptalias">ScriptAlias</A>, but
makes use of standard regular expressions, instead of simple prefix
matching. The supplied regular expression is matched against the URL,
and if it matches, the server will substitute any parenthesized
matches into the given string and use it as a filename. For example,
to activate the standard <CODE>/cgi-bin</CODE>, one might use:
<PRE>
    ScriptAliasMatch ^/cgi-bin(.*) /usr/local/apache/cgi-bin$1
</PRE>
</P>
a149 1

d151 1
a151 1
 Apache HTTP Server Version 1.3
d159 1
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 127
a127 149
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_alias</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_alias</h1>

    <p>This module provides for mapping different parts of the host
    filesystem in the document tree, and for URL redirection.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_alias.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    alias_module</p>

    <h2>Summary</h2>

    <p>The directives contained in this module allow for
    manipulation and control of URLs as requests arrive at the
    server. The <code>Alias</code> and <code>ScriptAlias</code>
    directives are used to map between URLs and filesystem paths.
    This allows for content which is not directly under the <a
    href="core.html#documentroot"><code>DocumentRoot</code></a> to
    be served as part of the web document tree. The
    <code>ScriptAlias</code> directive has the additional effect of
    marking the target directory as containing only CGI
    scripts.</p>

    <p>The <code>Redirect</code> directives are used to instruct
    clients to make a new request with a different URL. They are
    often used when a resource has moved to a new location.</p>

    <p>A more powerful and flexible set of directives for
    manipulating URLs is contained in the <a
    href="mod_rewrite.html"><code>mod_rewrite</code></a>
    module.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#alias">Alias</a></li>

      <li><a href="#aliasmatch">AliasMatch</a></li>

      <li><a href="#redirect">Redirect</a></li>

      <li><a href="#redirectmatch">RedirectMatch</a></li>

      <li><a href="#redirecttemp">RedirectTemp</a></li>

      <li><a href="#redirectperm">RedirectPermanent</a></li>

      <li><a href="#scriptalias">ScriptAlias</a></li>

      <li><a href="#scriptaliasmatch">ScriptAliasMatch</a></li>
    </ul>
    <hr />

    <h2><a id="alias" name="alias">Alias directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Alias <em>URL-path
    file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias</p>

    <p>The Alias directive allows documents to be stored in the
    local filesystem other than under the <a
    href="core.html#documentroot">DocumentRoot</a>. URLs with a
    (%-decoded) path beginning with <em>url-path</em> will be
    mapped to local files beginning with
    <em>directory-filename</em>.</p>

    <p>Example:</p>

    <blockquote>
      <code>Alias /image /ftp/pub/image</code>
    </blockquote>

    <p>A request for http://myserver/image/foo.gif would cause the
    server to return the file /ftp/pub/image/foo.gif.</p>

    <p>Note that if you include a trailing / on the
    <em>url-path</em> then the server will require a trailing / in
    order to expand the alias. That is, if you use <code>Alias
    /icons/ /usr/local/apache/icons/</code> then the url
    <code>/icons</code> will not be aliased.</p>

    <p>Note that you may need to specify additional <a
    href="core.html#directory"><code>&lt;Directory&gt;</code></a>
    sections which cover the <em>destination</em> of aliases.
    Aliasing occurs before <code>&lt;Directory&gt;</code> sections
    are checked, so only the destination of aliases are affected.
    (Note however <a
    href="core.html#location"><code>&lt;Location&gt;</code></a>
    sections are run through once before aliases are performed, so
    they will apply.)</p>

    <p>See also <a href="#scriptalias">ScriptAlias</a>.</p>
    <hr />

    <h2><a id="aliasmatch" name="aliasmatch">AliasMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AliasMatch <em>regex
    file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a href="#alias">Alias</a>,
    but makes use of standard regular expressions, instead of
    simple prefix matching. The supplied regular expression is
    matched against the URL-path, and if it matches, the server
    will substitute any parenthesized matches into the given string
    and use it as a filename. For example, to activate the
    <code>/icons</code> directory, one might use:</p>
<pre>
d129 2
a130 2
</pre>
    <hr />
d132 1
a132 2
    <h2><a id="redirect" name="redirect">Redirect
    directive</a></h2>
d134 115
a248 114
    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Redirect
    [<em>status</em>] <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> The directory
    and .htaccess context's are only available in versions 1.1 and
    later. The <em>status</em> argument is only available in Apache
    1.2 or later.</p>

    <p>The Redirect directive maps an old URL into a new one. The
    new URL is returned to the client which attempts to fetch it
    again with the new address. <em>URL-path</em> a (%-decoded)
    path; any requests for documents beginning with this path will
    be returned a redirect error to a new (%-encoded) URL beginning
    with <em>URL</em>.</p>

    <p>Example:</p>

    <blockquote>
      <code>Redirect /service http://foo2.bar.com/service</code>
    </blockquote>

    <p>If the client requests http://myserver/service/foo.txt, it
    will be told to access http://foo2.bar.com/service/foo.txt
    instead.</p>

    <p><strong>Note:</strong> Redirect directives take precedence
    over Alias and ScriptAlias directives, irrespective of their
    ordering in the configuration file. Also, <em>URL-path</em>
    must be an absolute path, not a relative path, even when used
    with .htaccess files or inside of &lt;Directory&gt;
    sections.</p>

    <p>If no <em>status</em> argument is given, the redirect will
    be "temporary" (HTTP status 302). This indicates to the client
    that the resource has moved temporarily. The <em>status</em>
    argument can be used to return other HTTP status codes:</p>

    <dl>
      <dt>permanent</dt>

      <dd>Returns a permanent redirect status (301) indicating that
      the resource has moved permanently.</dd>

      <dt>temp</dt>

      <dd>Returns a temporary redirect status (302). This is the
      default.</dd>

      <dt>seeother</dt>

      <dd>Returns a "See Other" status (303) indicating that the
      resource has been replaced.</dd>

      <dt>gone</dt>

      <dd>Returns a "Gone" status (410) indicating that the
      resource has been permanently removed. When this status is
      used the <em>url</em> argument should be omitted.</dd>
    </dl>

    <p>Other status codes can be returned by giving the numeric
    status code as the value of <em>status</em>. If the status is
    between 300 and 399, the <em>url</em> argument must be present,
    otherwise it must be omitted. Note that the status must be
    known to the Apache code (see the function
    <code>send_error_response</code> in http_protocol.c).</p>

    <p>Example:</p>

    <pre>
    Redirect permanent /one http://example.com/two<br />
    Redirect 303 /two http://example.com/other
    </pre>
    <hr />

    <h2><a id="redirectmatch"
    name="redirectmatch">RedirectMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectMatch
    [<em>status</em>] <em>regex URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a
    href="#redirect">Redirect</a>, but makes use of standard
    regular expressions, instead of simple prefix matching. The
    supplied regular expression is matched against the URL-path,
    and if it matches, the server will substitute any parenthesized
    matches into the given string and use it as a filename. For
    example, to redirect all GIF files to like-named JPEG files on
    another server, one might use:</p>
<pre>
d250 2
a251 2
</pre>
    <hr />
d253 1
a253 2
    <h2><a id="redirecttemp" name="redirecttemp">RedirectTemp
    directive</a></h2>
d255 133
a387 107
    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectTemp
    <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> This directive
    is only available in Apache 1.2 and later</p>

    <p>This directive makes the client know that the Redirect is
    only temporary (status 302). Exactly equivalent to
    <code>Redirect temp</code>.</p>
    <hr />

    <h2><a id="redirectperm" name="redirectperm">RedirectPermanent
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RedirectPermanent
    <em>URL-path URL</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> This directive
    is only available in Apache 1.2 and later</p>

    <p>This directive makes the client know that the Redirect is
    permanent (status 301). Exactly equivalent to <code>Redirect
    permanent</code>.</p>
    <hr />

    <h2><a id="scriptalias" name="scriptalias">ScriptAlias
    directive</a></h2>

    <p>
     <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptAlias
    <em>URL-path file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias</p>

    <p>The ScriptAlias directive has the same behavior as the <a
    href="#alias">Alias</a> directive, except that in addition it
    marks the target directory as containing CGI scripts that will be
    processed by <a href="mod_cgi.html">mod_cgi</a>'s cgi-script
    handler. URLs with a (%-decoded) path beginning with
    <em>URL-path</em> will be mapped to scripts beginning with the
    second argument which is a full pathname in the local
    filesystem.</p>

    <p>Example:</p>

    <blockquote>
      <code>ScriptAlias /cgi-bin/ /web/cgi-bin/</code>
    </blockquote>

    <p>A request for http://myserver/cgi-bin/foo would cause the
    server to run the script /web/cgi-bin/foo.</p>
    <hr />

    <h2><a id="scriptaliasmatch"
    name="scriptaliasmatch">ScriptAliasMatch</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ScriptAliasMatch
    <em>regex file-path</em>|<em>directory-path</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3 and later</p>

    <p>This directive is equivalent to <a
    href="#scriptalias">ScriptAlias</a>, but makes use of standard
    regular expressions, instead of simple prefix matching. The
    supplied regular expression is matched against the URL-path,
    and if it matches, the server will substitute any parenthesized
    matches into the given string and use it as a filename. For
    example, to activate the standard <code>/cgi-bin</code>, one
    might use:</p>
<pre>
d389 4
a392 2
</pre>
        <hr />
d394 3
a396 3
    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>
d398 2
a399 2
  </body>
</html>
d401 2
@


