head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.46
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.42
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.40
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.38
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.36
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.4
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.4
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.6;

1.6
date	2003.08.21.13.11.33;	author henning;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.33;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.41;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.07;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.07;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.28.00;	author henning;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.08.21.12.53.33;	author henning;	state Exp;
branches;
next	;


desc
@@


1.7
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_usertrack</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_usertrack</h1>

    <p>This module uses cookies to provide for a
    <em>clickstream</em> log of user activity on a site.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_usertrack.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    usertrack_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Known as
    mod_cookies prior to Apache 1.3.</p>

    <h2>Summary</h2>

    <p>Previous releases of Apache have included a module which
    generates a 'clickstream' log of user activity on a site using
    cookies. This was called the "cookies" module, mod_cookies. In
    Apache 1.2 and later this module has been renamed the "user
    tracking" module, mod_usertrack. This module has been
    simplified and new directives added.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#cookiedomain">CookieDomain</a></li>

      <li><a href="#cookieexpires">CookieExpires</a></li>

      <li><a href="#cookieformat">CookieFormat</a></li>

      <li><a href="#cookiename">CookieName</a></li>

      <li><a href="#cookieprefix">CookiePrefix</a></li>

      <li><a href="#cookiestyle">CookieStyle</a></li>

      <li><a href="#cookietracking">CookieTracking</a></li>
    </ul>

    <h2>Logging</h2>

    <p>Previously, the cookies module (now the user tracking
    module) did its own logging, using the <tt>CookieLog</tt>
    directive. In this release, this module does no logging at all.
    Instead, a configurable log format file should be used to log
    user click-streams. This is possible because the logging module
    now allows <a href="../multilogs.html">multiple log files</a>.
    The cookie itself is logged by using the text
    <tt>%{cookie}n</tt> in the log file format. For example:</p>
<pre>
CustomLog logs/clickstream "%{cookie}n %r %t"
</pre>
    For backward compatibility the configurable log module
    implements the old <tt>CookieLog</tt> directive, but this
    should be upgraded to the above <tt>CustomLog</tt> directive. 

    <h2>2-digit or 4-digit dates for cookies?</h2>
    (the following is from message
    &lt;022701bda43d$9d32bbb0$1201a8c0@@christian.office.sane.com&gt;
    in the new-httpd archives) 
<pre>
From: "Christian Allen" &lt;christian@@sane.com&gt;
Subject: Re: Apache Y2K bug in mod_usertrack.c
Date: Tue, 30 Jun 1998 11:41:56 -0400

Did some work with cookies and dug up some info that might be useful.

True, Netscape claims that the correct format NOW is four digit dates, and
four digit dates do in fact work... for Netscape 4.x (Communicator), that
is.  However, 3.x and below do NOT accept them.  It seems that Netscape
originally had a 2-digit standard, and then with all of the Y2K hype and
probably a few complaints, changed to a four digit date for Communicator.
Fortunately, 4.x also understands the 2-digit format, and so the best way to
ensure that your expiration date is legible to the client's browser is to
use 2-digit dates.

However, this does not limit expiration dates to the year 2000; if you use
an expiration year of "13", for example, it is interpreted as 2013, NOT
1913!  In fact, you can use an expiration year of up to "37", and it will be
understood as "2037" by both MSIE and Netscape versions 3.x and up (not sure
about versions previous to those).  Not sure why Netscape used that
particular year as its cut-off point, but my guess is that it was in respect
to UNIX's 2038 problem.  Netscape/MSIE 4.x seem to be able to understand
2-digit years beyond that, at least until "50" for sure (I think they
understand up until about "70", but not for sure).

Summary:  Mozilla 3.x and up understands two digit dates up until "37"
(2037).  Mozilla 4.x understands up until at least "50" (2050) in 2-digit
form, but also understands 4-digit years, which can probably reach up until
9999.  Your best bet for sending a long-life cookie is to send it for some
time late in the year "37".
</pre>
    <hr />

    <h2><a id="cookiedomain" name="cookiedomain">CookieDomain</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><b>Syntax:</b></a> CookieDomain <i>domain</i><br />
     <a href="directive-dict.html#Context"
    rel="Help"><b>Context:</b></a> server config, virtual host,
    directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><b>Status:</b></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><b>Module:</b></a> mod_usertrack <a
    href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.21
    and later 

    <p>This directive controls the setting of the domain to which
    the tracking cookie applies. If not present, no domain is
    included in the cookie header field.</p>

    <p>The domain string <b>must</b> begin with a dot, and
    <b>must</b> include at least one embedded dot. That is,
    ".foo.com" is legal, but "foo.bar.com" and ".com" are not.</p>
    <hr />

    <h2><a id="cookieexpires"
    name="cookieexpires">CookieExpires</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieExpires
    <em>expiry-period</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> <b>1.3.20 and
    earlier:</b> server config, virtual host; <b>1.3.21 and
    later:</b> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack 

    <p>When used, this directive sets an expiry time on the cookie
    generated by the usertrack module. The <em>expiry-period</em>
    can be given either as a number of seconds, or in the format
    such as "2 weeks 3 days 7 hours". Valid denominations are:
    years, months, weeks, hours, minutes and seconds. If the expiry
    time is in any format other than one number indicating the
    number of seconds, it must be enclosed by double quotes.</p>

    <p>If this directive is not used, cookies last only for the
    current browser session.</p>
    <hr />

    <h2><a id="cookieformat"
    name="cookieformat">CookieFormat</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieFormat
    <em>Normal | Compact</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <a
    href="directive-dict.html#Compatibility" 
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.28
    and later 

    <p>When used, this directive determines whether the cookie
    used for user tracking is created using the default ("normal")
    format (eg: decimal values for items like the PID) or
    using a more compact format (eg: hexidecimal values).</p>

    <hr />

    <h2><a id="cookiename" name="cookiename">CookieName</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieName
    <em>token</em> <br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>Apache</em> <br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.7 and
    later 

    <p>This directive allows you to change the name of the cookie
    this module uses for its tracking purposes. By default the
    cookie is named "<code>Apache</code>".</p>

    <p>You must specify a valid cookie name; results are
    unpredictable if you use a name containing unusual characters.
    Valid characters include A-Z, a-z, 0-9, "_", and "-".</p>
    <hr />

    <h2><a id="cookieprefix"
    name="cookieprefix">CookiePrefix</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookiePrefix
    <em>"string"</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <a
    href="directive-dict.html#Compatibility" 
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.28
    and later 

    <p>When used, this directive allows for the <em>"string"</em>
    to be prepended to the user tracking cookie. Care must be
    taken not to prepend a string that would result in a bogus
    cookie.</p>

    <hr />

    <h2><a id="cookiestyle" name="cookiestyle">CookieStyle</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><b>Syntax:</b></a> CookieStyle
    <i>Netscape|Cookie|Cookie2|RFC2109|RFC2965</i><br />
     <a href="directive-dict.html#Context"
    rel="Help"><b>Context:</b></a> server config, virtual host,
    directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><b>Status:</b></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><b>Module:</b></a> mod_usertrack 

    <p>This directive controls the format of the cookie header
    field. The three formats allowed are:</p>

    <ul>
      <li><b>Netscape</b>, which is the original but now deprecated
      syntax. This is the default, and the syntax Apache has
      historically used.</li>

      <li><b>Cookie</b> or <b>RFC2109</b>, which is the syntax that
      superseded the Netscape syntax.</li>

      <li><b>Cookie2</b> or <b>RFC2965</b>, which is the most
      current cookie syntax.</li>
    </ul>

    <p>Not all clients can understand all of these formats. but you
    should use the newest one that is generally acceptable to your
    users' browsers.</p>
    <hr />

    <h2><a id="cookietracking"
    name="cookietracking">CookieTracking</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieTracking
    on|off<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack 

    <p>When the user track module is compiled in, and
    "CookieTracking on" is set, Apache will start sending a
    user-tracking cookie for all new requests. This directive can
    be used to turn this behavior on or off on a per-server or
    per-directory basis. By default, compiling mod_usertrack will
    not activate cookies.     <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>

@


1.6
log
@merge
@
text
@@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d54 2
d58 2
d171 23
d219 23
@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 52
a52 78
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_usertrack</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Module mod_usertrack</H1>

<p>This module uses cookies to provide for a <em>clickstream</em> log of user
activity on a site.</p>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Extension
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_usertrack.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> usertrack_module
<BR>
<A
HREF="module-dict.html#Compatibility"
REL="Help"
><STRONG>Compatibility:</STRONG></A> Known as mod_cookies prior to 
Apache 1.3.
</P>

<h2>Summary</h2>

<p>Previous releases of Apache have included a module which generates a
'clickstream' log of user activity on a site using cookies. This was
called the "cookies" module, mod_cookies. In Apache 1.2 and later this
module has been renamed the "user tracking" module,
mod_usertrack. This module has been simplified and new directives
added.</p>

<H2>Directives</H2>

<UL>
<LI><A HREF="#cookieexpires">CookieExpires</A>
<LI><A HREF="#cookiename">CookieName</A>
<LI><A HREF="#cookietracking">CookieTracking</A>
</UL>

<H2>Logging</H2>

<p>Previously, the cookies module (now the user tracking module) did its
own logging, using the <TT>CookieLog</TT> directive. In this release,
this module does no logging at all. Instead, a configurable log
format file should be used to log user click-streams. This is possible
because the logging module now allows <A
HREF="../multilogs.html">multiple log files</A>. The cookie itself is
logged by using the text <TT>%{cookie}n </TT>
in the log file format. For example:
<PRE>
CustomLog logs/clickstream "%{cookie}n %r %t"
</PRE>
d54 1
a54 3
For backward compatibility the configurable log module implements the
old <TT>CookieLog</TT> directive, but this should be upgraded to the
above <TT>CustomLog</TT> directive.
d56 1
a56 1
<H2>2-digit or 4-digit dates for cookies?</H2>
d58 2
a59 3
(the following is from message
&lt;022701bda43d$9d32bbb0$1201a8c0@@christian.office.sane.com&gt; in
the new-httpd archives)
d61 1
a61 1
<P>
d63 20
a82 1
<PRE>
d113 2
a114 111
</PRE>

<HR>

<H2><A NAME="cookieexpires">CookieExpires</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CookieExpires <EM>expiry-period</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> optional<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_usertrack<P>

When used, this directive sets an expiry time on the cookie generated
by the usertrack module. The <EM>expiry-period</EM> can be given either
as a number of seconds, or in the format such as "2 weeks 3 days 7
hours".  Valid denominations are: years, months, weeks, hours, minutes
and seconds.  If the expiry time is in any format other than one
number indicating the number of seconds, it must be enclosed by
double quotes.

<P>If this directive is not used, cookies last only for the current
browser session.</P>

<HR>
<H2><A NAME="cookiename">CookieName</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CookieName <EM>token</EM>
<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>Apache</EM>
<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
.htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> optional<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_usertrack
<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> Apache 1.3.7 and later
<P>
This directive allows you to change the name of the cookie this module
uses for its tracking purposes.  By default the cookie is named
"<CODE>Apache</CODE>".
</P>
<P>
You must specify a valid cookie name; results are unpredictable if
you use a name containing unusual characters.  Valid characters
include A-Z, a-z, 0-9, "_", and "-".
</P>

<hr>
<H2><A NAME="cookietracking">CookieTracking</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CookieTracking on|off<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
.htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> optional<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_usertrack<P>

When the user track module is compiled in, and "CookieTracking on" is
set, Apache will start sending a user-tracking cookie for all new
requests. This directive can be used to turn this behavior on or off
on a per-server or per-directory basis.  By default, compiling
mod_usertrack will not activate cookies.



<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d116 140
a255 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a256 2
</BODY>
</HTML>
@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d202 1
a202 1
><STRONG>Syntax:</STRONG></A> CookieTracking <EM>on | off</EM><BR>
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d24 28
a51 1
Previous releases of Apache have included a module which generates a
d56 1
a56 1
added.
d58 7
a64 1
<HR>
d68 1
a68 1
Previously, the cookies module (now the user tracking module) did its
a74 1

d84 33
a116 1
<H2>Directives</H2>
d118 6
a123 5
<UL>
<LI><A HREF="#cookieexpires">CookieExpires</A>
<LI><A HREF="#cookiename">CookieName</A>
<LI><A HREF="#cookietracking">CookieTracking</A>
</UL>
d127 1
a127 1
<H2><A NAME="cookieexpires">CookieExpires</A></H2>
d156 2
a157 1
<H2><A NAME="cookiename">CookieName</A></H2>
d197 2
a198 1
<H2><A NAME="cookietracking">CookieTracking</A></H2>
a226 1
<HR>
a227 40
<H2>2-digit or 4-digit dates for cookies?</H2>

(the following is from message
&lt;022701bda43d$9d32bbb0$1201a8c0@@christian.office.sane.com&gt; in
the new-httpd archives)

<P>

<PRE>
From: "Christian Allen" &lt;christian@@sane.com&gt;
Subject: Re: Apache Y2K bug in mod_usertrack.c
Date: Tue, 30 Jun 1998 11:41:56 -0400

Did some work with cookies and dug up some info that might be useful.

True, Netscape claims that the correct format NOW is four digit dates, and
four digit dates do in fact work... for Netscape 4.x (Communicator), that
is.  However, 3.x and below do NOT accept them.  It seems that Netscape
originally had a 2-digit standard, and then with all of the Y2K hype and
probably a few complaints, changed to a four digit date for Communicator.
Fortunately, 4.x also understands the 2-digit format, and so the best way to
ensure that your expiration date is legible to the client's browser is to
use 2-digit dates.

However, this does not limit expiration dates to the year 2000; if you use
an expiration year of "13", for example, it is interpreted as 2013, NOT
1913!  In fact, you can use an expiration year of up to "37", and it will be
understood as "2037" by both MSIE and Netscape versions 3.x and up (not sure
about versions previous to those).  Not sure why Netscape used that
particular year as its cut-off point, but my guess is that it was in respect
to UNIX's 2038 problem.  Netscape/MSIE 4.x seem to be able to understand
2-digit years beyond that, at least until "50" for sure (I think they
understand up until about "70", but not for sure).

Summary:  Mozilla 3.x and up understands two digit dates up until "37"
(2037).  Mozilla 4.x understands up until at least "50" (2050) in 2-digit
form, but also understands 4-digit years, which can probably reach up until
9999.  Your best bet for sending a long-life cookie is to send it for some
time late in the year "37".
</PRE>
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d22 1
a22 1
<H1 ALIGN="CENTER">Module mod_usertrack</h1>
d31 1
a31 1
<hr>
d33 1
a33 1
<h2>Logging</h2>
d36 1
a36 1
own logging, using the <tt>CookieLog</tt> directive. In this release,
d39 3
a41 3
because the logging module now allows <a
href="../multilogs.html">multiple log files</a>. The cookie itself is
logged by using the text <tt>%{cookie}n </tt>
d44 1
a44 1
<pre>
d46 1
a46 1
</pre>
d49 4
a52 2
old <tt>CookieLog</tt> directive, but this should be upgraded to the
above <tt>CustomLog</tt> directive.
d54 5
a58 1
<h2>Directives</h2>
d60 19
a78 12
<ul>
<li><a href="#cookieexpires">CookieExpires</a>
<li><a href="#cookietracking">CookieTracking</a>
</ul>

<hr>

<h2><a name="cookieexpires">CookieExpires</A></h2>
<strong>Syntax:</strong> CookieExpires <em>expiry-period</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> optional<br>
<strong>Module:</strong> mod_usertrack<p>
d81 1
a81 1
by the usertrack module. The <i>expiry-period</i> can be given either
d84 69
a152 12
and seconds.

<p>If this directive is not used, cookies last only for the current
browser session.</p>

<h2><a name="cookietracking">CookieTracking</A></h2>
<strong>Syntax:</strong> CookieTracking <em>on | off</em><br>
<strong>Context:</strong> server config, virtual host, directory,
.htaccess<br>
<strong>Override:</strong> FileInfo<br>
<strong>Status:</strong> optional<br>
<strong>Module:</strong> mod_usertrack<p>
d160 42
d204 1
d206 1
a206 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d22 1
a22 1
<H1 ALIGN="CENTER">Module mod_usertrack</H1>
d31 1
a31 1
<HR>
d33 1
a33 1
<H2>Logging</H2>
d36 1
a36 1
own logging, using the <TT>CookieLog</TT> directive. In this release,
d39 3
a41 3
because the logging module now allows <A
HREF="../multilogs.html">multiple log files</A>. The cookie itself is
logged by using the text <TT>%{cookie}n </TT>
d44 1
a44 1
<PRE>
d46 1
a46 1
</PRE>
d49 2
a50 4
old <TT>CookieLog</TT> directive, but this should be upgraded to the
above <TT>CustomLog</TT> directive.

<H2>Directives</H2>
d52 1
a52 4
<UL>
<LI><A HREF="#cookieexpires">CookieExpires</A>
<LI><A HREF="#cookietracking">CookieTracking</A>
</UL>
d54 12
a65 19
<HR>

<H2><A NAME="cookieexpires">CookieExpires</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CookieExpires <EM>expiry-period</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> optional<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_usertrack<P>
d68 1
a68 1
by the usertrack module. The <EM>expiry-period</EM> can be given either
d71 12
a82 29
and seconds.  If the expiry time is in any format other than one
number indicating the number of seconds, it must be enclosed by
double quotes.

<P>If this directive is not used, cookies last only for the current
browser session.</P>

<H2><A NAME="cookietracking">CookieTracking</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CookieTracking <EM>on | off</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory,
.htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> optional<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_usertrack<P>
a89 42
<HR>

<H2>2-digit or 4-digit dates for cookies?</H2>

(the following is from message
&lt;022701bda43d$9d32bbb0$1201a8c0@@christian.office.sane.com&gt; in
the new-httpd archives)

<P>

<PRE>
From: "Christian Allen" &lt;christian@@sane.com&gt;
Subject: Re: Apache Y2K bug in mod_usertrack.c
Date: Tue, 30 Jun 1998 11:41:56 -0400

Did some work with cookies and dug up some info that might be useful.

True, Netscape claims that the correct format NOW is four digit dates, and
four digit dates do in fact work... for Netscape 4.x (Communicator), that
is.  However, 3.x and below do NOT accept them.  It seems that Netscape
originally had a 2-digit standard, and then with all of the Y2K hype and
probably a few complaints, changed to a four digit date for Communicator.
Fortunately, 4.x also understands the 2-digit format, and so the best way to
ensure that your expiration date is legible to the client's browser is to
use 2-digit dates.

However, this does not limit expiration dates to the year 2000; if you use
an expiration year of "13", for example, it is interpreted as 2013, NOT
1913!  In fact, you can use an expiration year of up to "37", and it will be
understood as "2037" by both MSIE and Netscape versions 3.x and up (not sure
about versions previous to those).  Not sure why Netscape used that
particular year as its cut-off point, but my guess is that it was in respect
to UNIX's 2038 problem.  Netscape/MSIE 4.x seem to be able to understand
2-digit years beyond that, at least until "50" for sure (I think they
understand up until about "70", but not for sure).

Summary:  Mozilla 3.x and up understands two digit dates up until "37"
(2037).  Mozilla 4.x understands up until at least "50" (2050) in 2-digit
form, but also understands 4-digit years, which can probably reach up until
9999.  Your best bet for sending a long-life cookie is to send it for some
time late in the year "37".
</PRE>
a91 1

d93 1
a93 1
 Apache HTTP Server Version 1.3
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 41
a41 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d43 4
a46 35
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_usertrack</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_usertrack</h1>

    <p>This module uses cookies to provide for a
    <em>clickstream</em> log of user activity on a site.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_usertrack.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    usertrack_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Known as
    mod_cookies prior to Apache 1.3.</p>

    <h2>Summary</h2>
d48 78
a125 6
    <p>Previous releases of Apache have included a module which
    generates a 'clickstream' log of user activity on a site using
    cookies. This was called the "cookies" module, mod_cookies. In
    Apache 1.2 and later this module has been renamed the "user
    tracking" module, mod_usertrack. This module has been
    simplified and new directives added.</p>
d127 1
a127 1
    <h2>Directives</h2>
d129 1
a129 34
    <ul>
      <li><a href="#cookiedomain">CookieDomain</a></li>

      <li><a href="#cookieexpires">CookieExpires</a></li>

      <li><a href="#cookiename">CookieName</a></li>

      <li><a href="#cookiestyle">CookieStyle</a></li>

      <li><a href="#cookietracking">CookieTracking</a></li>
    </ul>

    <h2>Logging</h2>

    <p>Previously, the cookies module (now the user tracking
    module) did its own logging, using the <tt>CookieLog</tt>
    directive. In this release, this module does no logging at all.
    Instead, a configurable log format file should be used to log
    user click-streams. This is possible because the logging module
    now allows <a href="../multilogs.html">multiple log files</a>.
    The cookie itself is logged by using the text
    <tt>%{cookie}n</tt> in the log file format. For example:</p>
<pre>
CustomLog logs/clickstream "%{cookie}n %r %t"
</pre>
    For backward compatibility the configurable log module
    implements the old <tt>CookieLog</tt> directive, but this
    should be upgraded to the above <tt>CustomLog</tt> directive. 

    <h2>2-digit or 4-digit dates for cookies?</h2>
    (the following is from message
    &lt;022701bda43d$9d32bbb0$1201a8c0@@christian.office.sane.com&gt;
    in the new-httpd archives) 
<pre>
d160 7
a166 2
</pre>
    <hr />
d168 2
a169 140
    <h2><a id="cookiedomain" name="cookiedomain">CookieDomain</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><b>Syntax:</b></a> CookieDomain <i>domain</i><br />
     <a href="directive-dict.html#Context"
    rel="Help"><b>Context:</b></a> server config, virtual host,
    directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><b>Status:</b></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><b>Module:</b></a> mod_usertrack <a
    href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.21
    and later 

    <p>This directive controls the setting of the domain to which
    the tracking cookie applies. If not present, no domain is
    included in the cookie header field.</p>

    <p>The domain string <b>must</b> begin with a dot, and
    <b>must</b> include at least one embedded dot. That is,
    ".foo.com" is legal, but "foo.bar.com" and ".com" are not.</p>
    <hr />

    <h2><a id="cookieexpires"
    name="cookieexpires">CookieExpires</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieExpires
    <em>expiry-period</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> <b>1.3.20 and
    earlier:</b> server config, virtual host; <b>1.3.21 and
    later:</b> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack 

    <p>When used, this directive sets an expiry time on the cookie
    generated by the usertrack module. The <em>expiry-period</em>
    can be given either as a number of seconds, or in the format
    such as "2 weeks 3 days 7 hours". Valid denominations are:
    years, months, weeks, hours, minutes and seconds. If the expiry
    time is in any format other than one number indicating the
    number of seconds, it must be enclosed by double quotes.</p>

    <p>If this directive is not used, cookies last only for the
    current browser session.</p>
    <hr />

    <h2><a id="cookiename" name="cookiename">CookieName</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieName
    <em>token</em> <br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>Apache</em> <br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.7 and
    later 

    <p>This directive allows you to change the name of the cookie
    this module uses for its tracking purposes. By default the
    cookie is named "<code>Apache</code>".</p>

    <p>You must specify a valid cookie name; results are
    unpredictable if you use a name containing unusual characters.
    Valid characters include A-Z, a-z, 0-9, "_", and "-".</p>
    <hr />

    <h2><a id="cookiestyle" name="cookiestyle">CookieStyle</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><b>Syntax:</b></a> CookieStyle
    <i>Netscape|Cookie|Cookie2|RFC2109|RFC2965</i><br />
     <a href="directive-dict.html#Context"
    rel="Help"><b>Context:</b></a> server config, virtual host,
    directory, .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><b>Status:</b></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><b>Module:</b></a> mod_usertrack 

    <p>This directive controls the format of the cookie header
    field. The three formats allowed are:</p>

    <ul>
      <li><b>Netscape</b>, which is the original but now deprecated
      syntax. This is the default, and the syntax Apache has
      historically used.</li>

      <li><b>Cookie</b> or <b>RFC2109</b>, which is the syntax that
      superseded the Netscape syntax.</li>

      <li><b>Cookie2</b> or <b>RFC2965</b>, which is the most
      current cookie syntax.</li>
    </ul>

    <p>Not all clients can understand all of these formats. but you
    should use the newest one that is generally acceptable to your
    users' browsers.</p>
    <hr />

    <h2><a id="cookietracking"
    name="cookietracking">CookieTracking</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieTracking
    on|off<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack 

    <p>When the user track module is compiled in, and
    "CookieTracking on" is set, Apache will start sending a
    user-tracking cookie for all new requests. This directive can
    be used to turn this behavior on or off on a per-server or
    per-directory basis. By default, compiling mod_usertrack will
    not activate cookies.     <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>
d171 2
@


1.1.1.4
log
@import apache 1.3.28 and mod_ssl 2.8.15
@
text
@a53 2
      <li><a href="#cookieformat">CookieFormat</a></li>

a55 2
      <li><a href="#cookieprefix">CookiePrefix</a></li>

a166 23
    <h2><a id="cookieformat"
    name="cookieformat">CookieFormat</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookieFormat
    <em>Normal | Compact</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <a
    href="directive-dict.html#Compatibility" 
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.28
    and later 

    <p>When used, this directive determines whether the cookie
    used for user tracking is created using the default ("normal")
    format (eg: decimal values for items like the PID) or
    using a more compact format (eg: hexidecimal values).</p>

    <hr />

a191 23
    <hr />

    <h2><a id="cookieprefix"
    name="cookieprefix">CookiePrefix</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CookiePrefix
    <em>"string"</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> optional<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_usertrack <a
    href="directive-dict.html#Compatibility" 
    rel="Help"><strong>Compatibility:</strong></a> Apache 1.3.28
    and later 

    <p>When used, this directive allows for the <em>"string"</em>
    to be prepended to the user tracking cookie. Care must be
    taken not to prepend a string that would result in a bogus
    cookie.</p>

@


