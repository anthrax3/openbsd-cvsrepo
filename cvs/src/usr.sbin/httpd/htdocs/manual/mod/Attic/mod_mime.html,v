head	1.10;
access;
symbols
	OPENBSD_5_5:1.9.0.38
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.34
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.32
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.30
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.28
	OPENBSD_5_0:1.9.0.26
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.24
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.22
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.18
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.20
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.16
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.14
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.12
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.10
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.10
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.9;

1.9
date	2005.07.29.23.55.40;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.12.07.56.48;	author beck;	state dead;
branches;
next	1.7;

1.7
date	2001.03.29.10.21.32;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2000.12.15.22.17.38;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.19.11.16.36;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.25.18.29.27;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.09.29.06.29.06;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.01.05.23;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.06;	author beck;	state Exp;
branches;
next	;


desc
@@


1.10
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_mime</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="center">Module mod_mime</h1>

    <p>This module provides for determining the types of files from
    the filename and for association of handlers with files.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_mime.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    mime_module</p>

    <h2>Summary</h2>
    This module is used to determine various bits of "meta
    information" about documents. This information relates to the
    content of the document and is returned to the browser or used
    in content-negotiation within the server. In addition, a
    "handler" can be set for a document, which determines how the
    document will be processed within the server. 

    <p>The directives <a href="#addcharset">AddCharset</a>, <a
    href="#addencoding">AddEncoding</a>, <a
    href="#addhandler">AddHandler</a>, <a
    href="#addlanguage">AddLanguage</a> and <a
    href="#addtype">AddType</a> are all used to map file extensions
    onto the meta-information for that file. Respectively they set
    the character set, content-encoding, handler, content-language,
    and MIME-type (content-type) of documents. The directive <a
    href="#typesconfig">TypesConfig</a> is used to specify a file
    which also maps extensions onto MIME types. The directives <a
    href="#forcetype">ForceType</a> and <a
    href="#sethandler">SetHandler</a> are used to associated all
    the files in a given location (<em>e.g.</em>, a particular
    directory) onto a particular MIME type or handler.</p>

    <p>Note that changing the type or encoding of a file does not
    change the value of the <code>Last-Modified</code> header.
    Thus, previously cached copies may still be used by a client or
    proxy, with the previous headers.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#addcharset">AddCharset</a></li>

      <li><a href="#addencoding">AddEncoding</a></li>

      <li><a href="#addhandler">AddHandler</a></li>

      <li><a href="#addlanguage">AddLanguage</a></li>

      <li><a href="#addtype">AddType</a></li>

      <li><a href="#defaultlanguage">DefaultLanguage</a></li>

      <li><a href="#forcetype">ForceType</a></li>

      <li><a href="#removeencoding">RemoveEncoding</a></li>

      <li><a href="#removehandler">RemoveHandler</a></li>

      <li><a href="#removetype">RemoveType</a></li>

      <li><a href="#sethandler">SetHandler</a></li>

      <li><a href="#typesconfig">TypesConfig</a></li>
    </ul>

    <p>See also: <a
    href="mod_mime_magic.html#mimemagicfile">MimeMagicFile</a>.</p>

    <h2><a id="multipleext" name="multipleext">Files with Multiple
    Extensions</a></h2>
    Files can have more than one extension, and the order of the
    extensions is <em>normally</em> irrelevant. For example, if the
    file <code>welcome.html.fr</code> maps onto content type
    text/html and language French then the file
    <code>welcome.fr.html</code> will map onto exactly the same
    information. The only exception to this is if an extension is
    given which Apache does not know how to handle. In this case it
    will "forget" about any information it obtained from extensions
    to the left of the unknown extension. So, for example, if the
    extensions fr and html are mapped to the appropriate language
    and type but extension xxx is not assigned to anything, then
    the file <code>welcome.fr.xxx.html</code> will be associated
    with content-type text/html but <em>no</em> language. 

    <p>If more than one extension is given which maps onto the same
    type of meta-information, then the one to the right will be
    used. For example, if ".gif" maps to the MIME-type image/gif
    and ".html" maps to the MIME-type text/html, then the file
    <code>welcome.gif.html</code> will be associated with the
    MIME-type "text/html".</p>

    <p>Care should be taken when a file with multiple extensions
    gets associated with both a MIME-type and a handler. This will
    usually result in the request being by the module associated
    with the handler. For example, if the <code>.imap</code>
    extension is mapped to the handler "imap-file" (from mod_imap)
    and the <code>.html</code> extension is mapped to the MIME-type
    "text/html", then the file <code>world.imap.html</code> will be
    associated with both the "imap-file" handler and "text/html"
    MIME-type. When it is processed, the "imap-file" handler will
    be used, and so it will be treated as a mod_imap imagemap
    file.</p>
    <hr />

    <h2><a id="addcharset" name="addcharset">AddCharset</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AddCharset <em>charset
    extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime <br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> AddCharset is
    only available in Apache 1.3.10 and later 

    <p>The AddCharset directive maps the given filename extensions
    to the specified content charset. <i>charset</i> is the MIME
    charset parameter of filenames containing <i>extension</i>.
    This mapping is added to any already in force, overriding any
    mappings that already exist for the same <i>extension</i>.</p>

    <p>Example:</p>
<pre>
    AddLanguage ja .ja
    AddCharset EUC-JP .euc
    AddCharset ISO-2022-JP .jis
    AddCharset SHIFT_JIS .sjis
</pre>

    <p>Then the document <code>xxxx.ja.jis</code> will be treated
    as being a Japanese document whose charset is ISO-2022-JP (as
    will the document <code>xxxx.jis.ja</code>). The AddCharset
    directive is useful for both to inform the client about the
    character encoding of the document so that the document can be
    interpreted and displayed appropriately, and for <a
    href="../content-negotiation.html">content negotiation</a>,
    where the server returns one from several documents based on
    the client's charset preference.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>

    <p><strong>See also</strong>: <a
    href="mod_negotiation.html">mod_negotiation</a></p>
    <hr />

    <h2><a id="addencoding" name="addencoding">AddEncoding</a>
    directive</h2>
    <!--%plaintext &lt;?INDEX {\tt AddEncoding} directive&gt; -->
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AddEncoding
    <em>MIME-enc extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime 

    <p>The AddEncoding directive maps the given filename extensions
    to the specified encoding type. <em>MIME-enc</em> is the MIME
    encoding to use for documents containing the
    <em>extension</em>. This mapping is added to any already in
    force, overriding any mappings that already exist for the same
    <em>extension</em>. Example:</p>

    <blockquote>
      <code>AddEncoding x-gzip .gz<br />
       AddEncoding x-compress .Z</code>
    </blockquote>
    This will cause filenames containing the .gz extension to be
    marked as encoded using the x-gzip encoding, and filenames
    containing the .Z extension to be marked as encoded with
    x-compress. 

    <p>Old clients expect <code>x-gzip</code> and
    <code>x-compress</code>, however the standard dictates that
    they're equivalent to <code>gzip</code> and
    <code>compress</code> respectively. Apache does content
    encoding comparisons by ignoring any leading <code>x-</code>.
    When responding with an encoding Apache will use whatever form
    (<em>i.e.</em>, <code>x-foo</code> or <code>foo</code>) the
    client requested. If the client didn't specifically request a
    particular form Apache will use the form given by the
    <code>AddEncoding</code> directive. To make this long story
    short, you should always use <code>x-gzip</code> and
    <code>x-compress</code> for these two specific encodings. More
    recent encodings, such as <code>deflate</code> should be
    specified without the <code>x-</code>.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>

    <p><strong>See also</strong>: <a href="#multipleext">Files with
    multiple extensions</a></p>
    <hr />

    <h2><a id="addhandler" name="addhandler">AddHandler</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AddHandler
    <em>handler-name extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> AddHandler is
    only available in Apache 1.1 and later 

    <p>AddHandler maps the filename extensions <em>extension</em>
    to the <a href="../handler.html">handler</a>
    <em>handler-name</em>. This mapping is added to any already in
    force, overriding any mappings that already exist for the same
    <em>extension</em>. For example, to activate CGI scripts with
    the file extension "<code>.cgi</code>", you might use:</p>
<pre>
    AddHandler cgi-script .cgi
</pre>

    <p>Once that has been put into your srm.conf or httpd.conf
    file, any file containing the "<code>.cgi</code>" extension
    will be treated as a CGI program.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>

    <p><strong>See also</strong>: <a href="#multipleext">Files with
    multiple extensions</a>, <a href="#sethandler">SetHandler</a></p>
    <hr />

    <h2><a id="addlanguage" name="addlanguage">AddLanguage</a>
    directive</h2>
    <!--%plaintext &lt;?INDEX {\tt AddLanguage} directive&gt; -->
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AddLanguage
    <em>MIME-lang extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime 

    <p>The AddLanguage directive maps the given filename extension
    to the specified content language. <em>MIME-lang</em> is the
    MIME language of filenames containing <em>extension</em>. This
    mapping is added to any already in force, overriding any
    mappings that already exist for the same
    <em>extension</em>.</p>

    <p>Example:</p>

    <blockquote>
      <code>AddEncoding x-compress .Z<br />
       AddLanguage en .en<br />
       AddLanguage fr .fr<br />
      </code>
    </blockquote>

    <p>Then the document <code>xxxx.en.Z</code> will be treated as
    being a compressed English document (as will the document
    <code>xxxx.Z.en</code>). Although the content language is
    reported to the client, the browser is unlikely to use this
    information. The AddLanguage directive is more useful for <a
    href="../content-negotiation.html">content negotiation</a>,
    where the server returns one from several documents based on
    the client's language preference.</p>

    <p>If multiple language assignments are made for the same
    extension, the last one encountered is the one that is used.
    That is, for the case of:</p>
<pre>
    AddLanguage en .en
    AddLanguage en-uk .en
    AddLanguage en-us .en
</pre>

    <p>documents with the extension "<code>.en</code>" would be
    treated as being "<code>en-us</code>".</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>

    <p><strong>See also</strong>: <a href="#multipleext">Files with
    multiple extensions</a>, <a
    href="#defaultlanguage">DefaultLanguage</a><br />
     <strong>See also</strong>: <a
    href="./mod_negotiation.html">mod_negotiation</a></p>
    <hr />

    <h2><a id="addtype" name="addtype">AddType</a> directive</h2>
    <!--%plaintext &lt;?INDEX {\tt AddType} directive&gt; -->
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AddType <em>MIME-type
    extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime 

    <p>The AddType directive maps the given filename extensions
    onto the specified content type. <em>MIME-type</em> is the MIME
    type to use for filenames containing <em>extension</em>. This
    mapping is added to any already in force, overriding any
    mappings that already exist for the same <em>extension</em>.
    This directive can be used to add mappings not listed in the
    MIME types file (see the <code><a
    href="#typesconfig">TypesConfig</a></code> directive).
    Example:</p>

    <blockquote>
      <code>AddType image/gif .gif</code>
    </blockquote>
    It is recommended that new MIME types be added using the
    AddType directive rather than changing the <a
    href="#typesconfig">TypesConfig</a> file. 

    <p>Note that, unlike the NCSA httpd, this directive cannot be
    used to set the type of particular files.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>

    <p><strong>See also</strong>: <a href="#multipleext">Files with
    multiple extensions</a></p>
    <hr />

    <h2><a id="defaultlanguage"
    name="defaultlanguage">DefaultLanguage</a> directive</h2>
    <!--%plaintext &lt;?INDEX {\tt DefaultLanguage} directive&gt; -->
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> DefaultLanguage
    <em>MIME-lang</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> FileInfo<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> DefaultLanguage
    is only available in Apache 1.3.4 and later. 

    <p>The DefaultLanguage directive tells Apache that all files in
    the directive's scope (<em>e.g.</em>, all files covered by the
    current <code>&lt;Directory&gt;</code> container) that don't
    have an explicit language extension (such as <samp>.fr</samp>
    or <samp>.de</samp> as configured by <samp>AddLanguage</samp>)
    should be considered to be in the specified <em>MIME-lang</em>
    language. This allows entire directories to be marked as
    containing Dutch content, for instance, without having to
    rename each file. Note that unlike using extensions to specify
    languages, <samp>DefaultLanguage</samp> can only specify a
    single language.</p>

    <p>For example:</p>

    <code>DefaultLanguage fr</code>

    <p>If no <samp>DefaultLanguage</samp> directive is in force,
    and a file does not have any language extensions as configured
    by <samp>AddLanguage</samp>, then that file will be considered
    to have no language attribute.</p>

    <p><strong>See also</strong>: <a
    href="./mod_negotiation.html">mod_negotiation</a><br />
     <strong>See also</strong>: <a href="#multipleext">Files with
    multiple extensions</a></p>
    <hr />

    <h2><a id="forcetype" name="forcetype">ForceType</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ForceType
    <em>media-type</em>|None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ForceType is
    only available in Apache 1.1 and later. 

    <p>When placed into an <code>.htaccess</code> file or a
    <code>&lt;Directory&gt;</code> or <code>&lt;Location&gt;</code>
    section, this directive forces all matching files to be served
    as the content type given by <em>media type</em>. For example,
    if you had a directory full of GIF files, but did not want to
    label them all with ".gif", you might want to use:</p>
<pre>
    ForceType image/gif
</pre>

    <p>Note that this will override any filename extensions that
    might determine the media type.</p>

    <p>You can override any <directive>ForceType</directive> setting
    by using the value of <code>none</code>:</p>

<pre>
    # force all files to be image/gif:
    &lt;Location /images&gt;
      ForceType image/gif
    &lt;/Location&gt;

    # but normal mime-type associations here:
    &lt;Location /images/mixed&gt;
      ForceType none
    &lt;/Location&gt;
</pre>

    <p><strong>See also</strong>: <a
    href="#addtype">AddType</a></p>

    <hr />

    <h2><a id="removeencoding"
    name="removeencoding">RemoveEncoding</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RemoveEncoding
    <em>extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> RemoveEncoding
    is only available in Apache 1.3.13 and later. 

    <p>The <samp>RemoveEncoding</samp> directive removes any
    encoding associations for files with the given extensions. This
    allows <code>.htaccess</code> files in subdirectories to undo
    any associations inherited from parent directories or the
    server config files. An example of its use might be:</p>

    <dl>
      <dt><code>/foo/.htaccess:</code></dt>

      <dd><code>AddEncoding x-gzip .gz</code><br />
       <code>AddType text/plain .asc</code><br />
       <code>&lt;Files *.gz.asc&gt;</code><br />
       <code>&nbsp;&nbsp;&nbsp;&nbsp;RemoveEncoding
      .gz</code><br />
       <code>&lt;/Files&gt;</code></dd>
    </dl>

    <p>This will cause <code>foo.gz</code> to mark as being encoded
    with the gzip method, but <code>foo.gz.asc</code> as an
    unencoded plaintext file.</p>

    <p><b>Note:</b>RemoveEncoding directives are processed
    <i>after</i> any <a href="#addencoding">AddEncoding</a>
    directives, so it is possible they
    may undo the effects of the latter if both occur within the
    same directory configuration.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>
    <hr />

    <h2><a id="removehandler"
    name="removehandler">RemoveHandler</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RemoveHandler
    <em>extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> RemoveHandler is
    only available in Apache 1.3.4 and later. 

    <p>The <samp>RemoveHandler</samp> directive removes any handler
    associations for files with the given extensions. This allows
    <code>.htaccess</code> files in subdirectories to undo any
    associations inherited from parent directories or the server
    config files. An example of its use might be:</p>

    <dl>
      <dt><code>/foo/.htaccess:</code></dt>

      <dd><code>AddHandler server-parsed .html</code></dd>

      <dt><code>/foo/bar/.htaccess:</code></dt>

      <dd><code>RemoveHandler .html</code></dd>
    </dl>

    <p>This has the effect of returning <samp>.html</samp> files in
    the <samp>/foo/bar</samp> directory to being treated as normal
    files, rather than as candidates for parsing (see the <a
    href="mod_include.html"><samp>mod_include</samp></a>
    module).</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>
    <hr />

    <h2><a id="removetype" name="removetype">RemoveType</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> RemoveType
    <em>extension</em> [<em>extension</em>] ...<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> virtual host, directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> RemoveType is
    only available in Apache 1.3.13 and later. 

    <p>The <samp>RemoveType</samp> directive removes any MIME type
    associations for files with the given extensions. This allows
    <code>.htaccess</code> files in subdirectories to undo any
    associations inherited from parent directories or the server
    config files. An example of its use might be:</p>

    <dl>
      <dt><code>/foo/.htaccess:</code></dt>

      <dd><code>RemoveType .cgi</code></dd>
    </dl>

    <p>This will remove any special handling of <code>.cgi</code>
    files in the <code>/foo/</code> directory and any beneath it,
    causing the files to be treated as being of the <a
    href="core.html#defaulttype">default type</a>.</p>

    <p><b>Note:</b><code>RemoveType</code> directives are processed
    <i>after</i> any <code>AddType</code> directives, so it is
    possible they may undo the effects of the latter if both occur
    within the same directory configuration.</p>

    <p>The <em>extension</em> argument is case-insensitive, and can
    be specified with or without a leading dot.</p>
    <hr />

    <h2><a id="sethandler" name="sethandler">SetHandler</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> SetHandler
    <em>handler-name</em>|None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> directory,
    .htaccess<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> SetHandler is
    only available in Apache 1.1 and later. 

    <p>When placed into an <code>.htaccess</code> file or a
    <code>&lt;Directory&gt;</code> or <code>&lt;Location&gt;</code>
    section, this directive forces all matching files to be parsed
    through the <a href="../handler.html">handler</a> given by
    <em>handler-name</em>. For example, if you had a directory you
    wanted to be parsed entirely as imagemap rule files, regardless
    of extension, you might put the following into an
    <code>.htaccess</code> file in that directory:</p>
<pre>
    SetHandler imap-file
</pre>

    <p>Another example: if you wanted to have the server display a
    status report whenever a URL of
    <code>http://servername/status</code> was called, you might put
    the following into access.conf: (See <a
    href="mod_status.html">mod_status</a> for more details.)</p>
<pre>
    &lt;Location /status&gt;
    SetHandler server-status
    &lt;/Location&gt;
</pre>

    <p>You can override an earlier defined <code>SetHandler</code>
    directive by using the value <code>None</code>.</p>

    <p><strong>See also</strong>: <a href="#addhandler">AddHandler</a></p>
    <hr />

    <h2><a id="typesconfig" name="typesconfig">TypesConfig</a>
    directive</h2>
    <!--%plaintext &lt;?INDEX {\tt TypesConfig} directive&gt; -->
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> TypesConfig
    <em>file-path</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>TypesConfig
    conf/mime.types</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_mime 

    <p>The TypesConfig directive sets the location of the MIME
    types configuration file. <em>Filename</em> is relative to the
    <a href="core.html#serverroot">ServerRoot</a>. This file sets
    the default list of mappings from filename extensions to
    content types; changing this file is not recommended. Use the
    <a href="#addtype">AddType</a> directive instead. The file
    contains lines in the format of the arguments to an AddType
    command:</p>

    <blockquote>
      <em>MIME-type extension extension ...</em>
    </blockquote>
    The extensions are lower-cased. Blank lines, and lines
    beginning with a hash character (`#') are ignored. 

    <p>    <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>



@


1.9
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.8
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d1 155
a155 161
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_mime</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Module mod_mime</H1>

<p>This module provides for determining the types of files
from the filename and for association of handlers with files.</p>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Base
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_mime.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> mime_module
</P>

<H2>Summary</H2>

This module is used to determine various bits of "meta information"
about documents. This information relates to the content of the
document and is returned to the browser or used in content-negotiation
within the server. In addition, a "handler" can be set for a document,
which determines how the document will be processed within the server.

<P>

The directives <a href="#addcharset">AddCharset</a>,
<A HREF="#addencoding">AddEncoding</A>, <A HREF="#addhandler">AddHandler</A>,
<A HREF="#addlanguage">AddLanguage</A> and <A HREF="#addtype">AddType</A>
are all used to map file extensions onto the meta-information for that
file.  Respectively they set the character set, content-encoding, handler,
content-language, and MIME-type (content-type) of documents.  The
directive <A HREF="#typesconfig">TypesConfig</A> is used to specify a
file which also maps extensions onto MIME types. The directives <A
HREF="#forcetype">ForceType</A> and <A
HREF="#sethandler">SetHandler</A> are used to associated all the files
in a given location (<EM>e.g.</EM>, a particular directory) onto a particular
MIME type or handler.

<P>

Note that changing the type or encoding of a file does not change the
value of the <CODE>Last-Modified</CODE> header. Thus, previously cached
copies may still be used by a client or proxy, with the previous headers.

<H2>Directives</H2>
<UL>
<li><a href="#addcharset">AddCharset</a></li>
<LI><A HREF="#addencoding">AddEncoding</A>
<LI><A HREF="#addhandler">AddHandler</A>
<LI><A HREF="#addlanguage">AddLanguage</A>
<LI><A HREF="#addtype">AddType</A>
<LI><A HREF="#defaultlanguage">DefaultLanguage</A>
<LI><A HREF="#forcetype">ForceType</A>
<LI><A HREF="#removeencoding">RemoveEncoding</A>
<LI><A HREF="#removehandler">RemoveHandler</A>
<LI><A HREF="#removetype">RemoveType</A>
<LI><A HREF="#sethandler">SetHandler</A>
<LI><A HREF="#typesconfig">TypesConfig</A>
</UL>

<p>See also: <a
href="mod_mime_magic.html#mimemagicfile">MimeMagicFile</a>.</p>

<H2><A NAME="multipleext">Files with Multiple Extensions</A></H2>

Files can have more than one extension, and the order of the
extensions is <EM>normally</EM> irrelevant. For example, if the file
<CODE>welcome.html.fr</CODE> maps onto content type text/html and
language French then the file <CODE>welcome.fr.html</CODE> will map
onto exactly the same information. The only exception to this is if an
extension is given which Apache does not know how to handle. In this
case it will "forget" about any information it obtained from
extensions to the left of the unknown extension. So, for example, if
the extensions fr and html are mapped to the appropriate language and
type but extension xxx is not assigned to anything, then the file
<CODE>welcome.fr.xxx.html</CODE> will be associated with content-type
text/html but <EM>no</EM> language.

<P>

If more than one extension is given which maps onto the same type of
meta-information, then the one to the right will be used. For example,
if ".gif" maps to the MIME-type image/gif and ".html" maps to the
MIME-type text/html, then the file <CODE>welcome.gif.html</CODE> will
be associated with the MIME-type "text/html".

<P>

Care should be taken when a file with multiple extensions gets
associated with both a MIME-type and a handler. This will usually
result in the request being by the module associated with the
handler. For example, if the <CODE>.imap</CODE> extension is mapped to
the handler "imap-file" (from mod_imap) and the <CODE>.html</CODE>
extension is mapped to the MIME-type "text/html", then the file
<CODE>world.imap.html</CODE> will be associated with both the
"imap-file" handler and "text/html" MIME-type. When it is processed,
the "imap-file" handler will be used, and so it will be treated as a
mod_imap imagemap file.


<HR>

<H2><A NAME="addcharset">AddCharset</A> directive</H2>
<A HREF="directive-dict.html#Syntax" REL="Help"
><STRONG>Syntax:</STRONG></A> AddCharset <em>charset extension</em>
 [<em>extension</em>] ...<br>
<A HREF="directive-dict.html#Context" REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime
<br>
<A HREF="directive-dict.html#Compatibility" REL="Help"
><STRONG>Compatibility:</STRONG></A> AddCharset is only available in Apache
1.3.10 and later

<P>
The AddCharset directive maps the given filename extensions to the
specified content charset. <i>charset</i> is the MIME charset
parameter of filenames containing <i>extension</i>.  This mapping is
added to any already in force, overriding any mappings that already
exist for the same <i>extension</i>.
</P>
<P>
Example:
d163 96
a258 119
<P>
Then the document <CODE>xxxx.ja.jis</CODE> will be treated as being a
Japanese document whose charset is ISO-2022-JP (as will the document
<CODE>xxxx.jis.ja</CODE>). The AddCharset directive is useful for both
to inform the client about the character encoding of the document so
that the document can be interpreted and displayed appropriately, and
for <A HREF="../content-negotiation.html">content negotiation</A>, where
the server returns one from several documents based on the client's
charset preference.
</P>

<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<P>
<STRONG>See also</STRONG>: <A HREF="mod_negotiation.html">mod_negotiation</A>
</P>

<hr>

<H2><A NAME="addencoding">AddEncoding</A> directive</H2>
<!--%plaintext &lt;?INDEX {\tt AddEncoding} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddEncoding <EM>MIME-enc extension</em>
    [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>

The AddEncoding directive maps the given filename extensions to the
specified encoding type. <EM>MIME-enc</EM> is the MIME encoding to use
for documents containing the <EM>extension</EM>. This mapping is added
to any already in force, overriding any mappings that already exist
for the same <EM>extension</EM>.

Example:
<BLOCKQUOTE><CODE>
AddEncoding x-gzip .gz<BR> 
AddEncoding x-compress .Z
</CODE></BLOCKQUOTE>

This will cause filenames containing the .gz extension to be marked as
encoded using the x-gzip encoding, and filenames containing the .Z
extension to be marked as encoded with x-compress.<P>

Old clients expect <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>,
however the standard dictates that they're equivalent to <CODE>gzip</CODE>
and <CODE>compress</CODE> respectively.  Apache does content encoding
comparisons by ignoring any leading <CODE>x-</CODE>.  When responding
with an encoding Apache will use whatever form (<EM>i.e.</EM>, <CODE>x-foo</CODE>
or <CODE>foo</CODE>) the client requested.  If the client didn't
specifically request a particular form Apache will use the form given by
the <CODE>AddEncoding</CODE> directive.  To make this long story short,
you should always use <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>
for these two specific encodings.  More recent encodings, such as
<CODE>deflate</CODE> should be specified without the <CODE>x-</CODE>.

<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<P>

<STRONG>See also</STRONG>: <A HREF="#multipleext">Files with
multiple extensions</A>

<P><HR>

<H2><A NAME="addhandler">AddHandler</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddHandler <EM>handler-name extension</em>
     [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> AddHandler is only available in Apache
1.1 and later<P>

<P>AddHandler maps the filename extensions <EM>extension</EM> to the
<A HREF="../handler.html">handler</A> <EM>handler-name</EM>.  This
mapping is added to any already in force, overriding any mappings that
already exist for the same <EM>extension</EM>.

For example, to activate CGI scripts
with the file extension "<CODE>.cgi</CODE>", you might use:
<PRE>
d260 1
a260 1
</PRE>
d262 56
a317 68
<P>Once that has been put into your srm.conf or httpd.conf file, any
file containing the "<CODE>.cgi</CODE>" extension will be treated as a
CGI program.</P> 

<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<P>

<STRONG>See also</STRONG>: <A HREF="#multipleext">Files with
multiple extensions</A>

<HR>

<H2><A NAME="addlanguage">AddLanguage</A> directive</H2>
<!--%plaintext &lt;?INDEX {\tt AddLanguage} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddLanguage <EM>MIME-lang extension</em>
    [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime

<P>
The AddLanguage directive maps the given filename extension to the
specified content language. <EM>MIME-lang</EM> is the MIME language of
filenames containing <EM>extension</EM>.  This mapping is added to any
already in force, overriding any mappings that already exist for the
same <EM>extension</EM>.
</P>
<P>
Example:
</p>
<BLOCKQUOTE><CODE>
AddEncoding x-compress .Z<BR> AddLanguage en .en<BR> AddLanguage fr
.fr<BR> </CODE></BLOCKQUOTE>

<P>
Then the document <CODE>xxxx.en.Z</CODE> will be treated as being a
compressed English document (as will the document
<CODE>xxxx.Z.en</CODE>). Although the content language is reported to
the client, the browser is unlikely to use this information. The
AddLanguage directive is more useful for
<A HREF="../content-negotiation.html">content negotiation</A>, where
the server returns one from several documents based on the client's
language preference.
</P>
<P>
If multiple language assignments are made for the same extension,
the last one encountered is the one that is used.  That is, for the
case of:
</P>
<PRE>
d321 126
a446 157
</PRE>
<P>
documents with the extension "<CODE>.en</CODE>" would be treated as
being "<CODE>en-us</CODE>".
</P>

<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<P>
<STRONG>See also</STRONG>: <A HREF="#multipleext">Files with
multiple extensions</A>
<BR>
<STRONG>See also</STRONG>: <A
HREF="./mod_negotiation.html">mod_negotiation</A>
</P>

<HR>

<H2><A NAME="addtype">AddType</A> directive</H2>
<!--%plaintext &lt;?INDEX {\tt AddType} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddType <EM>MIME-type extension</em>
   [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>

The AddType directive maps the given filename extensions onto the
specified content type. <EM>MIME-type</EM> is the MIME type to use for
filenames containing <EM>extension</EM>.  This mapping is added to any
already in force, overriding any mappings that already exist for the
same <EM>extension</EM>. This directive can be used to add mappings
not listed in the MIME types file (see the <CODE><A
HREF="#typesconfig">TypesConfig</A></CODE> directive).

Example:
<BLOCKQUOTE><CODE>
AddType image/gif .gif
</CODE></BLOCKQUOTE>
It is recommended that new MIME types be added using the AddType directive
rather than changing the <A HREF="#typesconfig">TypesConfig</A> file.<P>
Note that, unlike the NCSA httpd, this directive cannot be used to set the
type of particular files.<P>

<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<P>

<STRONG>See also</STRONG>: <A HREF="#multipleext">Files with
multiple extensions</A>

<HR>

<H2><A NAME="defaultlanguage">DefaultLanguage</A> directive</H2>
<!--%plaintext &lt;?INDEX {\tt DefaultLanguage} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> DefaultLanguage <EM>MIME-lang</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> DefaultLanguage is only available in Apache
1.3.4 and later.<P>

The DefaultLanguage directive tells Apache that all files in the
directive's scope (<EM>e.g.</EM>, all files covered by the current
<CODE>&lt;Directory&gt;</CODE> container) that don't have an explicit
language extension (such as <SAMP>.fr</SAMP> or <SAMP>.de</SAMP> as
configured by <SAMP>AddLanguage</SAMP>) should be considered to be in
the specified <EM>MIME-lang</EM> language.  This allows entire
directories to be marked as containing Dutch content, for instance,
without having to rename each file. Note that unlike using extensions
to specify languages, <SAMP>DefaultLanguage</SAMP> can only specify a
single language.

<P>

If no <SAMP>DefaultLanguage</SAMP> directive is in force, and a file
does not have any language extensions as configured by
<SAMP>AddLanguage</SAMP>, then that file will be considered to have no
language attribute.

<P>

<STRONG>See also</STRONG>: <A
HREF="./mod_negotiation.html">mod_negotiation</A>
<BR>
<STRONG>See also</STRONG>: <A HREF="#multipleext">Files with
multiple extensions</A>

<HR>

<H2><A NAME="forcetype">ForceType</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ForceType <EM>media-type</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ForceType is only available in Apache
1.1 and later.<P>

<P>When placed into an <CODE>.htaccess</CODE> file or a
<CODE>&lt;Directory&gt;</CODE> or <CODE>&lt;Location&gt;</CODE> section,
this directive forces all matching files to be served
as the content type given by <EM>media type</EM>. For example, if you
had a directory full of GIF files, but did not want to label them all with
".gif", you might want to use:
<PRE>
d448 181
a628 195
</PRE>
<P>Note that this will override any filename extensions that might determine
the media type.</P><HR>

<H2><A NAME="removeencoding">RemoveEncoding</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RemoveEncoding <em>extension</em>
     [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> RemoveEncoding is only available in Apache
1.3.13 and later.<P>

<P>
The <SAMP>RemoveEncoding</SAMP> directive removes any
encoding associations for files with the given extensions.
This allows <CODE>.htaccess</CODE> files in subdirectories to undo
any associations inherited from parent directories or the server
config files.  An example of its use might be:
</P>
<DL>
 <DT><CODE>/foo/.htaccess:</CODE></DT>
 <DD><CODE>AddEncoding x-gzip .gz</CODE>
     <br>
     <code>AddType text/plain .asc</code>
     <br>
     <code>&lt;Files *.gz.asc&gt;</code>
     <br>
     <code>&nbsp;&nbsp;&nbsp;&nbsp;RemoveEncoding .gz</code>
     <br>
     <code>&lt;/Files&gt;</code></dd>
</DL>
<P>
This will cause <code>foo.gz</code> to mark as being encoded with the
gzip method, but <code>foo.gz.asc</code> as an unencoded plaintext file.
</P>
<p>
<b>Note:</b>RemoveEncoding directives are processed <i>after</i> any
AddEncoding directives, so it is possible they may undo the effects
of the latter if both occur within the same directory configuration.
</p>
<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<HR>

<H2><A NAME="removehandler">RemoveHandler</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RemoveHandler <EM>extension</em>
     [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> RemoveHandler is only available in Apache
1.3.4 and later.<P>

<P>
The <SAMP>RemoveHandler</SAMP> directive removes any
handler associations for files with the given extensions.
This allows <CODE>.htaccess</CODE> files in subdirectories to undo
any associations inherited from parent directories or the server
config files.  An example of its use might be:
</P>
<DL>
 <DT><CODE>/foo/.htaccess:</CODE></DT>
 <DD><CODE>AddHandler server-parsed .html</CODE></DD>
 <DT><CODE>/foo/bar/.htaccess:</CODE></DT>
 <DD><CODE>RemoveHandler .html</CODE></DD>
</DL>
<P>
This has the effect of returning <SAMP>.html</SAMP> files in the
<SAMP>/foo/bar</SAMP> directory to being treated as normal
files, rather than as candidates for parsing (see the
<A HREF="mod_include.html"><SAMP>mod_include</SAMP></A> module).
</P>
<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<HR>

<H2><A NAME="removetype">RemoveType</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> RemoveType <em>extension</em>
     [<em>extension</em>] ...<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> RemoveType is only available in Apache
1.3.13 and later.<P>

<P>
The <SAMP>RemoveType</SAMP> directive removes any
MIME type associations for files with the given extensions.
This allows <CODE>.htaccess</CODE> files in subdirectories to undo
any associations inherited from parent directories or the server
config files.  An example of its use might be:
</P>
<DL>
 <DT><CODE>/foo/.htaccess:</CODE></DT>
 <DD><CODE>RemoveType .cgi</CODE></dd>
</DL>
<P>
This will remove any special handling of <code>.cgi</code> files in the
<code>/foo/</code> directory and any beneath it, causing the files to be
treated as being of the <a href="core.html#defaulttype">default type</a>.
</P>
<p>
<b>Note:</b><code>RemoveType</code> directives are processed <i>after</i> any
<code>AddType</code> directives, so it is possible they may undo the effects
of the latter if both occur within the same directory configuration.
</p>
<p>The <em>extension</em> argument is case-insensitive, and can
be specified with or without a leading dot.</p>

<HR>

<H2><A NAME="sethandler">SetHandler</A> directive</H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> SetHandler <EM>handler-name</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> SetHandler is only available in Apache
1.1 and later.<P>

<P>When placed into an <CODE>.htaccess</CODE> file or a
<CODE>&lt;Directory&gt;</CODE> or <CODE>&lt;Location&gt;</CODE> section,
this directive forces all matching files to be parsed through the
<A HREF="../handler.html">handler</A>
given by <EM>handler-name</EM>. For example, if you had a
directory you wanted to be parsed entirely as imagemap rule files,
regardless of extension, you might put the following into an
<CODE>.htaccess</CODE> file in that directory:
<PRE>
d630 1
a630 1
</PRE>
d632 6
a637 4
<P>Another example: if you wanted to have the server display a status
report whenever a URL of <CODE>http://servername/status</CODE> was
called, you might put the following into access.conf:
<PRE>
d641 7
a647 2
</PRE>
<HR>
d649 40
a688 38
<H2><A NAME="typesconfig">TypesConfig</A> directive</H2>
<!--%plaintext &lt;?INDEX {\tt TypesConfig} directive&gt; -->
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> TypesConfig <EM>filename</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>TypesConfig conf/mime.types</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>

The TypesConfig directive sets the location of the MIME types configuration
file. <EM>Filename</EM> is relative to the
<A HREF="core.html#serverroot">ServerRoot</A>. This file sets the default list of
mappings from filename extensions to content types; changing this file is not
recommended. Use the <A HREF="#addtype">AddType</A> directive instead. The
file contains lines in the format of the arguments to an AddType command:
<BLOCKQUOTE><EM>MIME-type extension extension ...</EM></BLOCKQUOTE>
The extensions are lower-cased. Blank lines, and lines beginning with a hash
character (`#') are ignored.<P>

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
a689 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a690 2
</BODY>
</HTML>
@


1.7
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@@


1.6
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d132 2
a133 2
><STRONG>Syntax:</STRONG></A> AddCharset <i>charset extension
 [extension...]</i><br>
d179 4
d194 2
a195 1
><STRONG>Syntax:</STRONG></A> AddEncoding <EM>MIME-enc extension [extension ...]</EM><BR>
d220 3
a222 1
<BLOCKQUOTE><CODE> AddEncoding x-gzip gz<BR> AddEncoding x-compress Z
d241 3
d256 2
a257 1
><STRONG>Syntax:</STRONG></A> AddHandler <EM>handler-name extension [extension ...]</EM><BR>
d288 1
a288 1
    AddHandler cgi-script cgi
d295 3
d310 2
a311 1
><STRONG>Syntax:</STRONG></A> AddLanguage <EM>MIME-lang extension [extension ...]</EM><BR>
d330 1
a330 1
The AddLanguage directive maps the given filename extension tos the
d337 4
a340 2
Example: <BLOCKQUOTE><CODE>
AddEncoding x-compress Z<BR> AddLanguage en .en<BR> AddLanguage fr
d342 1
a342 1
</P>
d367 4
d386 2
a387 1
><STRONG>Syntax:</STRONG></A> AddType <EM>MIME-type extension [extension ...]</EM><BR>
d415 1
a415 1
AddType image/gif GIF
d422 3
d493 1
a493 1
><STRONG>Syntax:</STRONG></A> ForceType <EM>media type</EM><BR>
d529 2
a530 1
><STRONG>Syntax:</STRONG></A> RemoveEncoding <i>extension [extension ...]</i><BR>
d577 3
d587 2
a588 1
><STRONG>Syntax:</STRONG></A> RemoveHandler <EM>extension [extension ...]</EM><BR>
d626 3
d636 2
a637 1
><STRONG>Syntax:</STRONG></A> RemoveType <i>extension [extension ...]</i><BR>
d677 3
@


1.5
log
@apache 1.3.12 + mod_ssl 2.6.2 merge
@
text
@d24 18
a41 3
This module is contained in the <CODE>mod_mime.c</CODE> file, and is
compiled in by default. It provides for determining the types of files
from the filename.
d72 19
d127 1
a127 13
<H2>Directives</H2>
<UL>
<li><a href="#addcharset">AddCharset</a></li>
<LI><A HREF="#addencoding">AddEncoding</A>
<LI><A HREF="#addhandler">AddHandler</A>
<LI><A HREF="#addlanguage">AddLanguage</A>
<LI><A HREF="#addtype">AddType</A>
<LI><A HREF="#defaultlanguage">DefaultLanguage</A>
<LI><A HREF="#forcetype">ForceType</A>
<LI><A HREF="#removehandler">RemoveHandler</A>
<LI><A HREF="#sethandler">SetHandler</A>
<LI><A HREF="#typesconfig">TypesConfig</A>
</UL>
d130 1
a130 1
<H2><A NAME="addcharset">AddCharset</A></H2>
d185 1
a185 1
<H2><A NAME="addencoding">AddEncoding</A></H2>
d190 1
a190 1
><STRONG>Syntax:</STRONG></A> AddEncoding <EM>MIME-enc extension extension...</EM><BR>
d241 1
a241 1
<H2><A NAME="addhandler">AddHandler</A></H2>
d246 1
a246 1
><STRONG>Syntax:</STRONG></A> AddHandler <EM>handler-name extension extension...</EM><BR>
d291 1
a291 1
<H2><A NAME="addlanguage">AddLanguage</A></H2>
d296 1
a296 1
><STRONG>Syntax:</STRONG></A> AddLanguage <EM>MIME-lang extension extension...</EM><BR>
d315 1
a315 1
The AddLanguage directive maps the given filename extensions to the
d360 1
a360 1
<H2><A NAME="addtype">AddType</A></H2>
d365 1
a365 1
><STRONG>Syntax:</STRONG></A> AddType <EM>MIME-type extension extension...</EM><BR>
d384 1
a384 1
specified content type. <EM>MIME-enc</EM> is the MIME type to use for
d407 1
a407 1
<H2><A NAME="defaultlanguage">DefaultLanguage</A></H2>
d463 1
a463 1
<H2><A NAME="forcetype">ForceType</A></H2>
d499 55
a553 1
<H2><A NAME="removehandler">RemoveHandler</A></H2>
d558 1
a558 1
><STRONG>Syntax:</STRONG></A> RemoveHandler <EM>extension extension...</EM><BR>
d598 48
a645 1
<H2><A NAME="sethandler">SetHandler</A></H2>
d691 1
a691 1
<H2><A NAME="typesconfig">TypesConfig</A></H2>
d700 1
a700 1
><STRONG>Default:</STRONG></A> <CODE>TypesConfig conf/MIME.types</CODE><BR>
@


1.4
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d148 1
a148 1
Then the document <samp>xxxx.ja.jis</samp> will be treated as being a
d150 4
a153 4
<samp>xxxx.jis.ja</samp>). Although the content charset is reported to
the client, the browser is unlikely to use this information. The
AddCharset directive is more useful for
<A HREF="../content-negotiation.html">content negotiation</A>, where
@


1.3
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d38 3
a40 3
The directives <A HREF="#addencoding">AddEncoding</A>, <A
HREF="#addhandler">AddHandler</A>, <A
HREF="#addlanguage">AddLanguage</A> and <A HREF="#addtype">AddType</A>
d42 2
a43 2
file.  Respectively they set the content-encoding, handler,
content-language and MIME-type (content-type) of documents.  The
d95 1
d108 54
d406 6
a411 1
><STRONG>Module:</STRONG></A> mod_mime<P>
@


1.2
log
@Apache 1.3.4 merge
@
text
@d235 1
a235 1
><STRONG>Module:</STRONG></A> mod_mime<P>
d237 1
d243 2
a244 1

d248 2
a249 1

d254 2
a255 2
AddLanguage directive is more useful for <A
HREF="../content-negotiation.html">content negotiation</A>, where
d257 16
a272 2
language preference.<P>

a273 1

d279 1
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d22 1
a22 1
<H1 ALIGN="CENTER">Module mod_mime</h1>
d24 1
a24 1
This module is contained in the <code>mod_mime.c</code> file, and is
d28 1
a28 1
<h2>Summary</h2>
d43 1
a43 1
content-language and mime-type (content-type) of documents.  The
d45 1
a45 1
file which also maps extensions onto mime types. The directives <A
d48 2
a49 2
in a given location (e.g. a particular directory) onto a particular
mime type or handler.
d53 6
d60 1
a60 1
extensions is normally irrelevant. For example, if the file
d70 9
a78 1
text/html but <i>no</i> language.
d82 24
a105 11
<h2> Directives</h2>
<ul>
<li><A HREF="#addencoding">AddEncoding</A>
<li><A HREF="#addhandler">AddHandler</A>
<li><A HREF="#addlanguage">AddLanguage</A>
<li><A HREF="#addtype">AddType</A>
<li><A HREF="#forcetype">ForceType</A>
<li><A HREF="#sethandler">SetHandler</A>
<li><A HREF="#typesconfig">TypesConfig</A>
</ul>
<hr>
d108 1
a108 1
<h2><A name="addencoding">AddEncoding</A></h2>
d110 27
a136 9
<strong>Syntax:</strong> AddEncoding <em>mime-enc extension extension...</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<Strong>Override:</strong> FileInfo<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<p>

The AddEncoding directive adds to the list of filename extensions which
filenames may end in for the specified encoding type. <em>Mime-enc</em>
is the mime encoding to use for documents ending in <em>extension</em>.
d138 62
a199 22
<blockquote><code>
AddEncoding x-gzip gz<br>
AddEncoding x-compress Z
</code></blockquote>

This will cause files ending in .gz to be marked as encoded using the x-gzip
encoding, and .Z files to be marked as encoded with x-compress.<p><hr>

<h2><a name="addhandler">AddHandler</a></h2>

<strong>Syntax:</strong> AddHandler <em>handler-name extension extension...</em><br>
<strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<br>
<strong>Compatibility:</strong> AddHandler is only available in Apache
1.1 and later<p>

<p>AddHandler maps the filename extensions <em>extension</em> to the
<a href="../handler.html">handler</a>
<em>handler-name</em>. For example, to activate CGI scripts
with the file extension "<code>.cgi</code>", you might use:
<pre>
d201 10
a210 1
</pre>
a211 3
<p>Once that has been put into your srm.conf or httpd.conf file, any
file ending with "<code>.cgi</code>" will be treated as a CGI
program.</p>
d214 1
a214 1
<h2><A name="addlanguage">AddLanguage</A></h2>
d216 49
a264 21
<strong>Syntax:</strong> AddLanguage <em>mime-lang extension extension...</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<Strong>Override:</strong> FileInfo<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<p>

The AddLanguage directive adds to the list of filename extensions which
filenames may end in for the specified content language. <em>Mime-lang</em>
is the mime language of files with names ending <em>extension</em>,
after any content encoding extensions have been removed. Example:
<blockquote><code>
AddEncoding x-compress Z<br>
AddLanguage en .en<br>
AddLanguage fr .fr<br>
</code></blockquote>

Then the document <code>xxxx.en.Z</code> will be treated as being a compressed
English document. Although the content language is reported to the client,
the browser is unlikely to use this information. The AddLanguage directive
is more useful for content negotiation, where the server returns one
from several documents based on the client's language preference.<p><hr>
d266 1
a266 1
<h2><A name="addtype">AddType</A></h2>
d268 31
a298 11
<strong>Syntax:</strong> AddType <em>mime-type extension extension...</em><br>
<Strong>Context:</strong> server config, virtual host, directory, .htaccess<br>
<Strong>Override:</strong> FileInfo<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<p>

The AddType directive adds to the list of filename extensions which
filenames may end in for the specified content type. <em>Mime-enc</em>
is the mime type to use for documents ending in <em>extension</em>.
after content-encoding and language extensions have been removed. Example:
<blockquote><code>
d300 3
a302 3
</code></blockquote>
It is recommended that new mime types be added using the AddType directive
rather than changing the <A HREF="#typesconfig">TypesConfig</A> file.<p>
d304 49
a352 1
type of particular files.<p><hr>
d354 1
a354 1
<h2><a name="forcetype">ForceType</a></h2>
d356 5
a360 6
<strong>Syntax:</strong> ForceType <em>media type</em><br>
<strong>Context:</strong> directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<br>
<strong>Compatibility:</strong> ForceType is only available in Apache
1.1 and later.<p>
d362 28
a389 2
<p>When placed into an <code>.htaccess</code> file or a
<code>&lt;Directory&gt;</code> or <code>&lt;Location&gt;</code> section,
d391 1
a391 1
as the content type given by <em>media type</em>. For example, if you
d394 1
a394 1
<pre>
d396 27
a422 12
</pre>
<p>Note that this will override any filename extensions that might
media type.</p>

<h2><a name="sethandler">SetHandler</a></h2>

<strong>Syntax:</strong> SetHandler <em>handler-name</em><br>
<strong>Context:</strong> directory, .htaccess<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<br>
<strong>Compatibility:</strong> SetHandler is only available in Apache
1.1 and later.<p>
d424 47
a470 2
<p>When placed into an <code>.htaccess</code> file or a
<code>&lt;Directory&gt;</code> or <code>&lt;Location&gt;</code> section,
d472 2
a473 2
<a href="../handler.html">handler</a>
given by <em>handler-name</em>. For example, if you had a
d476 2
a477 2
<code>.htaccess</code> file in that directory:
<pre>
d479 1
a479 1
</pre>
d481 2
a482 2
<p>Another example: if you wanted to have the server display a status
report whenever a URL of <code>http://servername/status</code> was
d484 1
a484 1
<pre>
d488 1
a488 1
</pre>
d491 1
a491 1
<h2><A name="typesconfig">TypesConfig</A></h2>
d493 20
a512 5
<strong>Syntax:</strong> TypesConfig <em>filename</em><br>
<strong>Default:</strong> <code>TypesConfig conf/mime.types</code><br>
<Strong>Context:</strong> server config<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_mime<p>
d514 2
a515 2
The TypesConfig directive sets the location of the mime types configuration
file. <em>Filename</em> is relative to the
d520 1
a520 1
<blockquote><em>mime-type extension extension ...</em></blockquote>
d522 1
a522 1
character (`#') are ignored.<p>
d525 1
d527 1
a527 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d22 1
a22 1
<H1 ALIGN="CENTER">Module mod_mime</H1>
d24 1
a24 1
This module is contained in the <CODE>mod_mime.c</CODE> file, and is
d28 1
a28 1
<H2>Summary</H2>
d43 1
a43 1
content-language and MIME-type (content-type) of documents.  The
d48 1
a48 1
in a given location (<EM>e.g.</EM>, a particular directory) onto a particular
d64 1
a64 1
text/html but <EM>no</EM> language.
d68 11
a78 3
Note that changing the type or encoding of a file does not change the
value of the <CODE>Last-Modified</CODE> header. Thus, previously cached
copies may still be used by a client or proxy, with the previous headers.
a79 5
<P>

Please note that changing a file's type or encoding does not change
the value of the <CODE>Last-Modified</CODE> header. Previously cached
copies may still be used by a client or proxy.
d81 1
a81 16
<P>

<H2> Directives</H2>
<UL>
<LI><A HREF="#addencoding">AddEncoding</A>
<LI><A HREF="#addhandler">AddHandler</A>
<LI><A HREF="#addlanguage">AddLanguage</A>
<LI><A HREF="#addtype">AddType</A>
<LI><A HREF="#forcetype">ForceType</A>
<LI><A HREF="#sethandler">SetHandler</A>
<LI><A HREF="#typesconfig">TypesConfig</A>
</UL>
<HR>


<H2><A NAME="addencoding">AddEncoding</A></H2>
d83 5
a87 20
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddEncoding <EM>MIME-enc extension extension...</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>
d90 2
a91 2
filenames may end in for the specified encoding type. <EM>Mime-enc</EM>
is the mime encoding to use for documents ending in <EM>extension</EM>.
d93 2
a94 2
<BLOCKQUOTE><CODE>
AddEncoding x-gzip gz<BR>
d96 1
a96 1
</CODE></BLOCKQUOTE>
d99 1
a99 1
encoding, and .Z files to be marked as encoded with x-compress.<P>
d101 14
a114 47
Old clients expect <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>,
however the standard dictates that they're equivalent to <CODE>gzip</CODE>
and <CODE>compress</CODE> respectively.  Apache does content encoding
comparisons by ignoring any leading <CODE>x-</CODE>.  When responding
with an encoding Apache will use whatever form (<EM>i.e.</EM>, <CODE>x-foo</CODE>
or <CODE>foo</CODE>) the client requested.  If the client didn't
specifically request a particular form Apache will use the form given by
the <CODE>AddEncoding</CODE> directive.  To make this long story short,
you should always use <CODE>x-gzip</CODE> and <CODE>x-compress</CODE>
for these two specific encodings.  More recent encodings, such as
<CODE>deflate</CODE> should be specified without the <CODE>x-</CODE>.

<P><HR>

<H2><A NAME="addhandler">AddHandler</A></H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddHandler <EM>handler-name extension extension...</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> AddHandler is only available in Apache
1.1 and later<P>

<P>AddHandler maps the filename extensions <EM>extension</EM> to the
<A HREF="../handler.html">handler</A>
<EM>handler-name</EM>. For example, to activate CGI scripts
with the file extension "<CODE>.cgi</CODE>", you might use:
<PRE>
d116 1
a116 1
</PRE>
d118 3
a120 3
<P>Once that has been put into your srm.conf or httpd.conf file, any
file ending with "<CODE>.cgi</CODE>" will be treated as a CGI
program.</P>
d123 1
a123 1
<H2><A NAME="addlanguage">AddLanguage</A></H2>
d125 5
a129 20
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddLanguage <EM>MIME-lang extension extension...</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>
d132 2
a133 2
filenames may end in for the specified content language. <EM>Mime-lang</EM>
is the mime language of files with names ending <EM>extension</EM>,
d135 5
a139 5
<BLOCKQUOTE><CODE>
AddEncoding x-compress Z<BR>
AddLanguage en .en<BR>
AddLanguage fr .fr<BR>
</CODE></BLOCKQUOTE>
d141 1
a141 1
Then the document <CODE>xxxx.en.Z</CODE> will be treated as being a compressed
d145 1
a145 1
from several documents based on the client's language preference.<P><HR>
d147 1
a147 1
<H2><A NAME="addtype">AddType</A></H2>
d149 5
a153 20
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AddType <EM>MIME-type extension extension...</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host, directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> FileInfo<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>
d156 2
a157 2
filenames may end in for the specified content type. <EM>Mime-enc</EM>
is the mime type to use for documents ending in <EM>extension</EM>.
d159 1
a159 1
<BLOCKQUOTE><CODE>
d161 1
a161 1
</CODE></BLOCKQUOTE>
d163 1
a163 1
rather than changing the <A HREF="#typesconfig">TypesConfig</A> file.<P>
d165 1
a165 1
type of particular files.<P><HR>
d167 1
a167 1
<H2><A NAME="forcetype">ForceType</A></H2>
d169 6
a174 21
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ForceType <EM>media type</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ForceType is only available in Apache
1.1 and later.<P>
d176 2
a177 2
<P>When placed into an <CODE>.htaccess</CODE> file or a
<CODE>&lt;Directory&gt;</CODE> or <CODE>&lt;Location&gt;</CODE> section,
d179 1
a179 1
as the content type given by <EM>media type</EM>. For example, if you
d182 1
a182 1
<PRE>
d184 12
a195 27
</PRE>
<P>Note that this will override any filename extensions that might determine
the media type.</P><HR>

<H2><A NAME="sethandler">SetHandler</A></H2>

<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> SetHandler <EM>handler-name</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> directory, .htaccess<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> SetHandler is only available in Apache
1.1 and later.<P>
d197 2
a198 2
<P>When placed into an <CODE>.htaccess</CODE> file or a
<CODE>&lt;Directory&gt;</CODE> or <CODE>&lt;Location&gt;</CODE> section,
d200 2
a201 2
<A HREF="../handler.html">handler</A>
given by <EM>handler-name</EM>. For example, if you had a
d204 2
a205 2
<CODE>.htaccess</CODE> file in that directory:
<PRE>
d207 1
a207 1
</PRE>
d209 2
a210 2
<P>Another example: if you wanted to have the server display a status
report whenever a URL of <CODE>http://servername/status</CODE> was
d212 1
a212 1
<PRE>
d216 1
a216 1
</PRE>
d219 1
a219 1
<H2><A NAME="typesconfig">TypesConfig</A></H2>
d221 5
a225 20
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> TypesConfig <EM>filename</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>TypesConfig conf/mime.types</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_mime<P>
d228 1
a228 1
file. <EM>Filename</EM> is relative to the
d233 1
a233 1
<BLOCKQUOTE><EM>MIME-type extension extension ...</EM></BLOCKQUOTE>
d235 1
a235 1
character (`#') are ignored.<P>
a237 1

d239 1
a239 1
 Apache HTTP Server Version 1.3
@

