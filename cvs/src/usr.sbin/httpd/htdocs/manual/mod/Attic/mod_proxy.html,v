head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.16
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.12
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.10
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.8
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.6
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.4
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.2
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.8.0.10
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.4
	OPENBSD_3_4:1.7.0.6
	OPENBSD_3_4_BASE:1.7
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.3
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.10;

1.10
date	2009.08.26.04.49.50;	author fgsch;	state Exp;
branches;
next	1.9;

1.9
date	2006.08.01.12.53.59;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2003.11.17.18.57.05;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2002.07.19.21.31.14;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.29.02.08.04;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.33;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.39;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.06;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.34;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.06;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.27.55;	author henning;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.11.17.17.03.16;	author henning;	state Exp;
branches;
next	;


desc
@@


1.11
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_proxy</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Apache module mod_proxy</h1>

    <p>This module provides for an <strong>HTTP 1.1</strong>
    caching proxy server.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_proxy.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    proxy_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.1 and later.</p>

    <h2>Summary</h2>
    This module implements a proxy/cache for Apache. It implements
    proxying capability for <code>FTP</code>, <code>CONNECT</code>
    (for SSL), <code>HTTP/0.9</code>, <code>HTTP/1.0</code>, and
    (as of Apache 1.3.23) <code>HTTP/1.1</code>.
    The module can be configured to connect to other proxy modules
    for these and other protocols. 

    <p>This module was experimental in Apache 1.1.x. As of Apache
    1.2, mod_proxy stability is <em>greatly</em> improved.</p>

    <p><strong>Warning:</strong> Do not enable proxying with <a
    href="#proxyrequests">ProxyRequests</a> until you have <a
    href="#access">secured your server</a>.  Open proxy servers are
    dangerous both to your network and to the Internet at large.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#proxyrequests">ProxyRequests</a></li>

      <li><a href="#proxyremote">ProxyRemote</a></li>

      <li><a href="#proxypass">ProxyPass</a></li>

      <li><a href="#proxypassreverse">ProxyPassReverse</a></li>

      <li><a href="#proxypreservehost">ProxyPreserveHost</a></li>

      <li><a href="#proxyblock">ProxyBlock</a></li>

      <li><a href="#allowconnect">AllowCONNECT</a></li>

      <li><a href="#proxyreceivebuffersize">ProxyReceiveBufferSize</a></li>

      <li><a href="#proxyiobuffersize">ProxyIOBufferSize</a></li>

      <li><a href="#noproxy">NoProxy</a></li>

      <li><a href="#proxydomain">ProxyDomain</a></li>

      <li><a href="#proxyvia">ProxyVia</a></li>

      <li><a href="#cacheroot">CacheRoot</a></li>

      <li><a href="#cachesize">CacheSize</a></li>

      <li><a href="#cachemaxexpire">CacheMaxExpire</a></li>

      <li><a href="#cachedefaultexpire">CacheDefaultExpire</a></li>

      <li><a
      href="#cachelastmodifiedfactor">CacheLastModifiedFactor</a></li>

      <li><a href="#cachegcinterval">CacheGcInterval</a></li>

      <li><a href="#cachedirlevels">CacheDirLevels</a></li>

      <li><a href="#cachedirlength">CacheDirLength</a></li>

      <li><a
      href="#cacheforcecompletion">CacheForceCompletion</a></li>

      <li><a href="#nocache">NoCache</a></li>
    </ul>

    <h2><a id="configs" name="configs">Common configuration
    topics</a></h2>

    <ul>
      <li><a href="#forwardreverse">Forward and Reverse Proxies</a></li>

      <li><a href="#examples">Basic Examples</a></li>

      <li><a href="#access">Controlling access to your
      proxy</a></li>

      <li><a href="#shortname">Using Netscape hostname
      shortcuts</a></li>

      <li><a href="#mimetypes">Why doesn't file type <em>xxx</em>
      download via FTP?</a></li>

      <li><a href="#type">How can I force an FTP ASCII
      download of File <em>xxx</em>?</a></li>

      <li><a href="#percent2fhack">How can I access
      FTP files outside of my home directory?</a></li>

      <li><a href="#ftppass">How can I hide the
      FTP cleartext password in my browser's URL line?</a></li>

      <li><a href="#startup">Why does Apache start more slowly when
      using the proxy module?</a></li>

      <li><a href="#socks">Can I use the Apache proxy module with
      my SOCKS proxy?</a></li>

      <li><a href="#intranet">What other functions are useful for
      an intranet proxy server?</a></li>
    </ul>

<h2><a name="forwardreverse" id="forwardreverse">Forward and Reverse Proxies</a></h2>
      <p>Apache can be configured in both a <dfn>forward</dfn> and
      <dfn>reverse</dfn> proxy mode.</p>

      <p>An ordinary <dfn>forward proxy</dfn> is an intermediate
      server that sits between the client and the <em>origin
      server</em>.  In order to get content from the origin server,
      the client sends a request to the proxy naming the origin server
      as the target and the proxy then requests the content from the
      origin server and returns it to the client.  The client must be
      specially configured to use the forward proxy to access other
      sites.</p>

      <p>A typical usage of a forward proxy is to provide Internet
      access to internal clients that are otherwise restricted by a
      firewall.  The forward proxy can also use caching to reduce
      network usage.</p>

      <p>The forward proxy is activated using the <code><a
      href="#proxyrequests">ProxyRequests</a></code> directive.
      Because forward proxys allow clients to access arbitrary sites
      through your server and to hide their true origin, it is
      essential that you <a href="#access">secure your server</a> so
      that only authorized clients can access the proxy before
      activating a forward proxy.</p>

      <p>A <dfn>reverse proxy</dfn>, by contrast, appears to the
      client just like an ordinary web server.  No special
      configuration on the client is necessary.  The client makes
      ordinary requests for content in the name-space of the reverse
      proxy.  The reverse proxy then decides where to send those
      requests, and returns the content as if it was itself the
      origin.</p>

      <p>A typical usage of a reverse proxy is to provide Internet
      users access to a server that is behind a firewall.  Reverse
      proxies can also be used to balance load among several back-end
      servers, or to provide caching for a slower back-end server.
      In addition, reverse proxies can be used simply to bring
      several servers into the same URL space.</p>

      <p>A reverse proxy is activated using the <code><a
      href="#proxypass">ProxyPass</a></code> directive or the
      <code>[P]</code> flag to the <code><a
      href="../mod/mod_rewrite.html#rewriterule">RewriteRule</a></code>
      directive.  It is <strong>not</strong> necessary to turn
      <code><a href="#proxyrequests">ProxyRequests</a></code> on in
      order to configure a reverse proxy.</p> 

<h2><a name="examples" id="examples">Basic Examples</a></h2>

    <p>The examples below are only a very basic idea to help you
    get started.  Please read the documentation on the individual
    directives.</p>

    <h3>Forward Proxy</h3><p><code>
    ProxyRequests On<br />
    ProxyVia On<br />
    <br />
    &lt;Directory proxy:*&gt;<br />
    
      Order deny,allow<br />
      Deny from all<br />
      Allow from internal.example.com<br />
    
    &lt;/Directory&gt;<br />
    <br />
    CacheRoot "/usr/local/apache/proxy"<br />
    CacheSize 5<br />
    CacheGcInterval 4<br />
    CacheMaxExpire 24<br />
    CacheLastModifiedFactor 0.1<br />
    CacheDefaultExpire 1<br />
    NoCache a-domain.com another-domain.edu joes.garage-sale.com
    </code></p>

    <h3>Reverse Proxy</h3><p><code>
    ProxyRequests Off<br />
    <br />
    ProxyPass /foo http://foo.example.com/bar<br />
    ProxyPassReverse /foo http://foo.example.com/bar
    </code></p>

    <h2><a id="access" name="access">Controlling access to your
    proxy</a></h2>
    You can control who can access your proxy via the normal
    &lt;Directory&gt; control block using the following example: 
<pre>
&lt;Directory proxy:*&gt;
Order Deny,Allow
Deny from all
Allow from yournetwork.example.com
&lt;/Directory&gt;
</pre>

    <p>A &lt;Files&gt; block will also work, and is the only method
    known to work for all possible URLs in Apache versions earlier
    than 1.2b10.</p>

    <p>For more information, see <a
    href="mod_access.html">mod_access</a>.</p>

      <p>Strictly limiting access is essential if you are using a
      forward proxy (using the <code><a
      href="#proxyrequests">ProxyRequests</a></code> directive).
      Otherwise, your server can be used by any client to access
      arbitrary hosts while hiding his or her true identity.  This is
      dangerous both for your network and for the Internet at large.
      When using a reverse proxy (using the <code><a
      href="#proxypass">ProxyPass</a></code> directive with
      <code>ProxyRequests Off</code>), access control is less critical
      because clients can only contact the hosts that you have
      specifically configured.</p>

    <h2><a id="shortname" name="shortname">Using Netscape hostname
    shortcuts</a></h2>
    There is an optional patch to the proxy module to allow
    Netscape-like hostname shortcuts to be used. It's available
    from the <a
    href="http://www.apache.org/dist/httpd/contrib/patches/1.2/netscapehost.patch">
    <samp>contrib/patches/1.2</samp></a> directory on the Apache
    Web site. 

    <h2><a id="mimetypes" name="mimetypes">Why doesn't file type
    <em>xxx</em> download via FTP?</a></h2>
    You probably don't have that particular file type defined as
    <em>application/octet-stream</em> in your proxy's mime.types
    configuration file. A useful line can be 
<pre>
application/octet-stream        bin dms lha lzh exe class tgz taz
</pre>

    <h2><a id="type" name="type">How can I force an FTP ASCII
    download of File <em>xxx</em>?</a></h2>
    In the rare situation where you must download a specific file
    using the FTP <strong>ASCII</strong> transfer method (while the
    default transfer is in <strong>binary</strong> mode), you can
    override mod_proxy's default by suffixing the request with
    <samp>;type=a</samp> to force an ASCII transfer.
    (FTP Directory listings are always executed in ASCII mode, however.)

    <h2><a id="percent2fhack" name="percent2fhack">How can I access
    FTP files outside of my home directory?</a></h2>
    <p>
     A FTP URI is interpreted relative to the home directory of
     the user who is logging in. Alas, to reach higher directory
     levels you cannot use  /../, as the dots are interpreted by the
     browser and not actually sent to the FTP server. To address
     this problem, the so called "Squid %2f hack" was implemented in
     the Apache FTP proxy; it is a solution which is also used by
     other popular proxy servers like the
     <a href="http://www.squid-cache.org/">Squid Proxy Cache</a>.
     By prepending /%2f to the path of your request, you can make
     such a proxy change the FTP starting directory to / (instead
     of the home directory). <br />
     <b>Example:</b> To retrieve the file <code>/etc/motd</code>,
     you would use the URL <blockquote>
     <code>ftp://<em>user@@host</em>/%2f/etc/motd</code></blockquote>
    </p>

    <h2><a id="ftppass" name="ftppass">How can I hide the FTP
    cleartext password in my browser's URL line?</a></h2>
    <p>
     To log in to an FTP server by username and password, Apache
     uses different strategies.
     In absense of a user name and password in the URL altogether,
     Apache sends an anonymous login to the FTP server, i.e.,
     <blockquote><code>
       user: anonymous<br />
       password: apache_proxy@@
     </code></blockquote>
     This works for all popular FTP servers which are configured for
     anonymous access.<br>
     For a personal login with a specific username, you can embed
     the user name into the URL, like in:
     <code>ftp://<em>username@@host</em>/myfile</code>. If the FTP server
     asks for a password when given this username (which it should),
     then Apache will reply with a [401 Authorization required] response,
     which causes the Browser to pop up the username/password dialog.
     Upon entering the password, the connection attempt is retried,
     and if successful, the requested resource is presented.
     The advantage of this procedure is that your browser does not
     display the password in cleartext (which it would if you had used
     <code>ftp://<em>username:password@@host</em>/myfile</code> in
     the first place).
     <br />
     <b>Note</b> that the password which is transmitted in such a way
     is not encrypted on its way. It travels between your browser and
     the Apache proxy server in a base64-encoded cleartext string, and
     between the Apache proxy and the FTP server as plaintext. You should
     therefore think twice before accessing your FTP server via HTTP
     (or before accessing your personal files via FTP at all!) When
     using unsecure channels, an eavesdropper might intercept your
     password on its way.
    </p>


    <h2><a id="startup" name="startup">Why does Apache start more
    slowly when using the proxy module?</a></h2>
    If you're using the <code>ProxyBlock</code> or
    <code>NoCache</code> directives, hostnames' IP addresses are
    looked up and cached during startup for later match test. This
    may take a few seconds (or more) depending on the speed with
    which the hostname lookups occur. 

    <h2><a id="socks" name="socks">Can I use the Apache proxy
    module with my SOCKS proxy?</a></h2>
    Yes. Just build Apache with the rule <code>SOCKS4=yes</code> in
    your <em>Configuration</em> file, and follow the instructions
    there. SOCKS5 capability can be added in a similar way (there's
    no <code>SOCKS5</code> rule yet), so use the
    <code>EXTRA_LDFLAGS</code> definition, or build Apache normally
    and run it with the <em>runsocks</em> wrapper provided with
    SOCKS5, if your OS supports dynamically linked libraries. 

    <p>Some users have reported problems when using SOCKS version
    4.2 on Solaris. The problem was solved by upgrading to SOCKS
    4.3.</p>

    <p>Remember that you'll also have to grant access to your
    Apache proxy machine by permitting connections on the
    appropriate ports in your SOCKS daemon's configuration.</p>

    <h2><a id="intranet" name="intranet">What other functions are
    useful for an intranet proxy server?</a></h2>

    <p>An Apache proxy server situated in an intranet needs to
    forward external requests through the company's firewall
    (for this, configure the <a href="#proxyremote">ProxyRemote</a>
    directive to forward the respective <em>scheme</em> to
    the firewall proxy).
    However, when it has to access resources within the intranet,
    it can bypass the firewall when accessing hosts. The <a
    href="#noproxy">NoProxy</a> directive is useful for specifying
    which hosts belong to the intranet and should be accessed
    directly.</p>

    <p>Users within an intranet tend to omit the local domain name
    from their WWW requests, thus requesting "http://somehost/"
    instead of "http://somehost.my.dom.ain/". Some commercial proxy
    servers let them get away with this and simply serve the
    request, implying a configured local domain. When the <a
    href="#proxydomain">ProxyDomain</a> directive is used and the
    server is <a href="#proxyrequests">configured for proxy
    service</a>, Apache can return a redirect response and send the
    client to the correct, fully qualified, server address. This is
    the preferred method since the user's bookmark files will then
    contain fully qualified hosts.</p>
    <hr />

    <h2><a id="proxyrequests"
    name="proxyrequests">ProxyRequests</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyRequests
    on|off<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>ProxyRequests
    Off</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyRequests is
    only available in Apache 1.1 and later. 

    <p>This allows or prevents Apache from functioning as a forward proxy
    server. Setting ProxyRequests to 'off' does not disable use of
    the <a href="#proxypass">ProxyPass</a> directive.</p>

    <p><strong>Warning:</strong> Do not enable proxying until you have
    <a href="#access">secured your server</a>.  Open proxy servers are
    dangerous both to your network and to the Internet at large.</p>

    <hr />

    <h2><a id="proxyremote" name="proxyremote">ProxyRemote</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyRemote <em>match
    remote-server</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyRemote is
    only available in Apache 1.1 and later. 

    <p>This defines remote proxies to this proxy. <em>match</em> is
    either the name of a URL-scheme that the remote server
    supports, or a partial URL for which the remote server should
    be used, or '*' to indicate the server should be contacted for
    all requests. <em>remote-server</em> is a partial URL for the
    remote server. Syntax:</p>
<pre>
  remote-server = protocol://hostname[:port]
</pre>
    <em>protocol</em> is the protocol that should be used to
    communicate with the remote server; only "http" is supported by
    this module. 

    <p>Example:</p>
<pre>
  ProxyRemote http://goodguys.com/ http://mirrorguys.com:8000
  ProxyRemote * http://cleversite.com
  ProxyRemote ftp http://ftpproxy.mydomain.com:8080
</pre>
    In the last example, the proxy will forward FTP requests,
    encapsulated as yet another HTTP proxy request, to another
    proxy which can handle them. 
    <hr />

    <h2><a id="proxypass" name="proxypass">ProxyPass</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyPass <em>path
    !|url</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyPass is
    only available in Apache 1.1 and later. 

    <p>This directive allows remote servers to be mapped into the
    space of the local server; the local server does not act as a
    proxy in the conventional sense, but appears to be a mirror of
    the remote server. <em>path</em> is the name of a local virtual
    path; <em>url</em> is a partial URL for the remote server.</p>

    <p>Suppose the local server has address
    <samp>http://wibble.org/</samp>; then</p>
<pre>
   ProxyPass /mirror/foo/ http://foo.com/
</pre>
    <p>will cause a local request for the
    &lt;<samp>http://wibble.org/mirror/foo/bar</samp>&gt; to be
    internally converted into a proxy request to
    &lt;<samp>http://foo.com/bar</samp>&gt;.</p>

    <p>The <code>!</code> directive is useful when you don't want
    to reverse-proxy a subdirectory, <em>e.g.</em></p>
<pre>
   ProxyPass /mirror/foo/bar !
   ProxyPass /mirror/foo/ http://foo.com/
</pre>
    <p>will proxy all requests to <samp>/mirror/foo</samp> to
    <samp>foo.com<samp> <em>except</em> requests made to 
    <samp>/mirror/foo/bar</samp>.</p>

    <p><strong>Note:</strong> Order is important. Exclusions must
    come <em>before</em> the general ProxyPass directive.</p>

    <p><strong>Warning:</strong> The <code><a
    href="#proxyrequests">ProxyRequests</a></code> directive should
    usually be set <strong>off</strong> when using <code
    class="directive">ProxyPass</code>.

    <hr />

    <h2><a id="proxypassreverse"
    name="proxypassreverse">ProxyPassReverse</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyPassReverse
    <em>path url</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyPassReverse
    is only available in Apache 1.3b6 and later. 

    <p>This directive lets Apache adjust the URL in the
    <tt>Location</tt> header on HTTP redirect responses. For
    instance this is essential when Apache is used as a reverse
    proxy to avoid by-passing the reverse proxy because of HTTP
    redirects on the backend servers which stay behind the reverse
    proxy.</p>

    <p><em>path</em> is the name of a local virtual path.<br />
     <em>url</em> is a partial URL for the remote server - the same
    way they are used for the <tt>ProxyPass</tt> directive.</p>

    <p>Example:<br />
     Suppose the local server has address
    <samp>http://wibble.org/</samp>; then</p>
<pre>
   ProxyPass         /mirror/foo/ http://foo.com/
   ProxyPassReverse  /mirror/foo/ http://foo.com/
</pre>
    will not only cause a local request for the
    &lt;<samp>http://wibble.org/mirror/foo/bar</samp>&gt; to be
    internally converted into a proxy request to
    &lt;<samp>http://foo.com/bar</samp>&gt; (the functionality
    <samp>ProxyPass</samp> provides here). It also takes care of
    redirects the server foo.com sends: when
    <samp>http://foo.com/bar</samp> is redirected by him to
    <samp>http://foo.com/quux</samp> Apache adjusts this to
    <samp>http://wibble.org/mirror/foo/quux</samp> before
    forwarding the HTTP redirect response to the client. 

    <p>Note that this <samp>ProxyPassReverse</samp> directive can
    also be used in conjunction with the proxy pass-through feature
    ("<samp>RewriteRule ... [P]</samp>") from <a
    href="mod_rewrite.html#RewriteRule"><tt>mod_rewrite</tt></a>
    because its doesn't depend on a corresponding
    <samp>ProxyPass</samp> directive.</p>
    <hr />

    <h2><a id="proxypreservehost"
    name="proxypreservehost">ProxyPreserveHost</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyPreserveHost
    <em>on|off</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <em><samp>ProxyPreserveHost</samp> off</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />

    <p>When enabled, this option will pass the Host: line from the
    incoming request to the proxied host, instead of the hostname
    specified in the proxypass line.<br />
     This option should normally be turned Off. It is mostly useful
    in special configurations like proxied mass name-based virtual
    hosting, where the original Host header needs to be evaluated by
    the backend server.</p>

    <h2><a id="allowconnect" name="allowconnect">AllowCONNECT</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AllowCONNECT
    <em>port</em> [<em>port</em>] ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <em><samp>AllowCONNECT</samp> 443 563</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    <samp>AllowCONNECT</samp> is only available in Apache 1.3.2 and
    later. 

    <p>The <samp>AllowCONNECT</samp> directive specifies a list of
    port numbers to which the proxy <samp>CONNECT</samp> method may
    connect. Today's browsers use this method when a <em>https</em>
    connection is requested and proxy tunneling over <em>http</em>
    is in effect.<br />
     By default, only the default https port (443) and the default
    snews port (563) are enabled. Use the <samp>AllowCONNECT</samp>
    directive to override this default and allow connections to
    the listed ports only.</p>
    <hr />

    <h2><a id="proxyblock" name="proxyblock">ProxyBlock</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyBlock
    *|<em>word|host|domain</em> [<em>word|host|domain</em>]
    ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyBlock is
    only available in Apache 1.2 and later. 

    <p>The ProxyBlock directive specifies a list of words, hosts
    and/or domains, separated by spaces. HTTP, HTTPS, and FTP
    document requests to sites whose names contain matched words,
    hosts or domains are <em>blocked</em> by the proxy server. The
    proxy module will also attempt to determine IP addresses of
    list items which may be hostnames during startup, and cache
    them for match test as well. Example:</p>
<pre>
  ProxyBlock joes-garage.com some-host.co.uk rocky.wotsamattau.edu
</pre>
    'rocky.wotsamattau.edu' would also be matched if referenced by
    IP address. 

    <p>Note that 'wotsamattau' would also be sufficient to match
    'wotsamattau.edu'.</p>

    <p>Note also that</p>
<pre>
ProxyBlock *
</pre>
    blocks connections to all sites. 
    <hr />

    <h2><a id="proxyreceivebuffersize"
    name="proxyreceivebuffersize">ProxyReceiveBufferSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyReceiveBufferSize
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    ProxyReceiveBufferSize is only available in Apache 1.3 and
    later. 

    <p>The ProxyReceiveBufferSize directive specifies an explicit
    network buffer size for outgoing HTTP and FTP connections, for
    increased throughput. It has to be greater than 512 or set to 0
    to indicate that the system's default buffer size should be
    used.</p>

    <p>Example:</p>
<pre>
  ProxyReceiveBufferSize 2048
</pre>
    <hr />

    <h2><a id="proxyiobuffersize"
    name="proxyiobuffersize">ProxyIOBufferSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyIOBufferSize
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>8192</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    ProxyIOBufferSize is only available in Apache 1.3.24 and
    later. 

    <p>The ProxyIOBufferSize directive specifies the number of bytes
    that will be read from a remote HTTP or FTP server at one time.
    This directive is different from the ProxyReceiveBufferSize
    directive, which specifies the low level socket buffer size.
    </p>

    <p>
    When a response is received which fits entirely within the IO
    buffer size, the remote HTTP or FTP server socket will be closed
    before an attempt is made to write the response to the client.
    This ensures that the remote server does not remain connected
    unnecessarily while the response is delivered to a slow client.
    A high value for the IO buffer decreases the load on remote HTTP
    and FTP servers, at the expense of greater RAM footprint on the
    proxy.
    </p>

    <p>Example:</p>
<pre>
  ProxyIOBufferSize 131072
</pre>
    <hr />

    <h2><a id="noproxy" name="noproxy">NoProxy</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> NoProxy <a
    href="#domain"><em>Domain</em></a>|<a
    href="#subnet"><em>SubNet</em></a>|<a
    href="#ipaddr"><em>IpAddr</em></a>|<a
    href="#hostname"><em>Hostname</em></a> [<a
    href="#domain"><em>Domain</em></a>|<a
    href="#subnet"><em>SubNet</em></a>|<a
    href="#ipaddr"><em>IpAddr</em></a>|<a
    href="#hostname"><em>Hostname</em></a>] ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> NoProxy is only
    available in Apache 1.3 and later. 

    <p>This directive is only useful for Apache proxy servers
    within intranets. The NoProxy directive specifies a list of
    subnets, IP addresses, hosts and/or domains, separated by
    spaces. A request to a host which matches one or more of these
    is always served directly, without forwarding to the configured
    ProxyRemote proxy server(s).</p>

    <p>Example:</p>
<pre>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
</pre>
    The arguments to the NoProxy directive are one of the following
    type list: 

    <dl>
      <!-- ===================== Domain ======================= -->

      <dt><a id="domain" name="domain"><em>Domain</em></a></dt>

      <dd>A <em>Domain</em> is a partially qualified DNS domain
      name, preceded by a period. It represents a list of hosts
      which logically belong to the same DNS domain or zone
      (<em>i.e.</em>, the suffixes of the hostnames are all ending
      in <em>Domain</em>).<br />
       Examples: <samp>.com</samp> <samp>.apache.org.</samp><br />
       To distinguish <em>Domain</em>s from <a
      href="#hostname"><em>Hostname</em></a>s (both syntactically
      and semantically; a DNS domain can have a DNS A record,
      too!), <em>Domain</em>s are always written with a leading
      period.<br />
       Note: Domain name comparisons are done without regard to the
      case, and <em>Domain</em>s are always assumed to be anchored
      in the root of the DNS tree, therefore two domains
      <samp>.MyDomain.com</samp> and <samp>.mydomain.com.</samp>
      (note the trailing period) are considered equal. Since a
      domain comparison does not involve a DNS lookup, it is much
      more efficient than subnet comparison. 
      <!-- ===================== SubNet ======================= -->
      </dd>

      <dt><a id="subnet" name="subnet"><em>SubNet</em></a></dt>

      <dd>
        A <em>SubNet</em> is a partially qualified internet address
        in numeric (dotted quad) form, optionally followed by a
        slash and the netmask, specified as the number of
        significant bits in the <em>SubNet</em>. It is used to
        represent a subnet of hosts which can be reached over a
        common network interface. In the absence of the explicit
        net mask it is assumed that omitted (or zero valued)
        trailing digits specify the mask. (In this case, the
        netmask can only be multiples of 8 bits wide.)<br />
         Examples: 

        <dl>
          <dt><samp>192.168</samp> or <samp>192.168.0.0</samp></dt>

          <dd>the subnet 192.168.0.0 with an implied netmask of 16
          valid bits (sometimes used in the netmask form
          <samp>255.255.0.0</samp>)</dd>

          <dt><samp>192.168.112.0/21</samp></dt>

          <dd>the subnet <samp>192.168.112.0/21</samp> with a
          netmask of 21 valid bits (also used in the form
          255.255.248.0)</dd>
        </dl>
        As a degenerate case, a <em>SubNet</em> with 32 valid bits
        is the equivalent to an <em>IPAddr</em>, while a
        <em>SubNet</em> with zero valid bits (<em>e.g.</em>,
        0.0.0.0/0) is the same as the constant <em>_Default_</em>,
        matching any IP address. 
        <!-- ===================== IPAddr ======================= -->
      </dd>

      <dt><a id="ipaddr" name="ipaddr"><em>IPAddr</em></a></dt>

      <dd>
        A <em>IPAddr</em> represents a fully qualified internet
        address in numeric (dotted quad) form. Usually, this
        address represents a host, but there need not necessarily
        be a DNS domain name connected with the address.<br />
         Example: 192.168.123.7<br />
         Note: An <em>IPAddr</em> does not need to be resolved by
        the DNS system, so it can result in more effective apache
        performance. 

        <p><strong>See Also:</strong> <a
        href="../dns-caveats.html">DNS Issues</a></p>
        <!-- ===================== Hostname ======================= -->
      </dd>

      <dt><a id="hostname"
      name="hostname"><em>Hostname</em></a></dt>

      <dd>
        A <em>Hostname</em> is a fully qualified DNS domain name
        which can be resolved to one or more <a
        href="#ipaddr"><em>IPAddrs</em></a> via the DNS domain name
        service. It represents a logical host (in contrast to <a
        href="#domain"><em>Domain</em></a>s, see above) and must be
        resolvable to at least one <a
        href="#ipaddr"><em>IPAddr</em></a> (or often to a list of
        hosts with different <a
        href="#ipaddr"><em>IPAddr</em></a>'s).<br />
         Examples: <samp>prep.ai.mit.edu</samp>
        <samp>www.apache.org.</samp><br />
         Note: In many situations, it is more effective to specify
        an <a href="#ipaddr"><em>IPAddr</em></a> in place of a
        <em>Hostname</em> since a DNS lookup can be avoided. Name
        resolution in Apache can take a remarkable deal of time
        when the connection to the name server uses a slow PPP
        link.<br />
         Note: <em>Hostname</em> comparisons are done without
        regard to the case, and <em>Hostname</em>s are always
        assumed to be anchored in the root of the DNS tree,
        therefore two hosts <samp>WWW.MyDomain.com</samp> and
        <samp>www.mydomain.com.</samp> (note the trailing period)
        are considered equal.<br />
         

        <p><strong>See Also:</strong> <a
        href="../dns-caveats.html">DNS Issues</a></p>
      </dd>
    </dl>
    <hr />

    <h2><a id="proxydomain" name="proxydomain">ProxyDomain</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyDomain
    <em>Domain</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyDomain is
    only available in Apache 1.3 and later. 

    <p>This directive is only useful for Apache proxy servers
    within intranets. The ProxyDomain directive specifies the
    default domain which the apache proxy server will belong to. If
    a request to a host without a domain name is encountered, a
    redirection response to the same host with the configured
    <em>Domain</em> appended will be generated.</p>

    <p>Example:</p>
<pre>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
  ProxyDomain     .mycompany.com
</pre>
    <hr />

    <h2><a id="proxyvia" name="proxyvia">ProxyVia</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyVia
    on|off|full|block<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>ProxyVia
    off</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyVia is only
    available in Apache 1.3.2 and later. 

    <p>This directive controls the use of the <samp>Via:</samp>
    HTTP header by the proxy. Its intended use is to control the
    flow of of proxy requests along a chain of proxy servers. See
    RFC2068 (HTTP/1.1) for an explanation of <samp>Via:</samp>
    header lines.</p>

    <ul>
      <li>If set to <em>off</em>, which is the default, no special
      processing is performed. If a request or reply contains a
      <samp>Via:</samp> header, it is passed through
      unchanged.</li>

      <li>If set to <em>on</em>, each request and reply will get a
      <samp>Via:</samp> header line added for the current
      host.</li>

      <li>If set to <em>full</em>, each generated <samp>Via:</samp>
      header line will additionally have the Apache server version
      shown as a <samp>Via:</samp> comment field.</li>

      <li>If set to <em>block</em>, every proxy request will have
      all its <samp>Via:</samp> header lines removed. No new
      <samp>Via:</samp> header will be generated.</li>
    </ul>
    <hr />

    <h2><a id="cacheforcecompletion"
    name="cacheforcecompletion">CacheForceCompletion</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheForceCompletion
    <em>percentage</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>90</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheForceCompletion is only available in Apache 1.3.1 and
    later. 

    <p>If an http transfer that is being cached is cancelled, the
    proxy module will complete the transfer to cache if more than
    the percentage specified has already been transferred.</p>

    <p>This is a percentage, and must be a number between 1 and
    100, or 0 to use the default. 100 will cause a document to be
    cached only if the transfer was allowed to complete. A number
    between 60 and 90 is recommended.</p>
    <hr />

    <h2><a id="cacheroot" name="cacheroot">CacheRoot</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheRoot
    <em>directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheRoot is
    only available in Apache 1.1 and later. 

    <p>Sets the name of the directory to contain cache files; this
    must be writable by the httpd server. (see the <a
    href="core.html#user"><code>User</code></a> directive).<br />
     Setting <code>CacheRoot</code> enables proxy cacheing; without
    defining a <code>CacheRoot</code>, proxy functionality will be
    available if <code>ProxyRequests</code> are set to
    <code>On</code>, but no cacheing will be available.</p>
    <hr />

    <h2><a id="cachesize" name="cachesize">CacheSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheSize
    <em>kilobytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheSize
    5</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheSize is
    only available in Apache 1.1 and later. 

    <p>Sets the desired space usage of the cache, in KB (1024-byte
    units). Although usage may grow above this setting, the garbage
    collection will delete files until the usage is at or below
    this setting.<br />
     Depending on the expected proxy traffic volume and
    <code>CacheGcInterval</code>, use a value which is at least 20
    to 40 % lower than the available space.</p>
    <hr />

    <h2><a id="cachegcinterval"
    name="cachegcinterval">CacheGcInterval</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheGcInterval
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheGcinterval
    is only available in Apache 1.1 and later. 

    <p>Check the cache after the specified number of
    <em>hours</em>, and delete files if the space usage is greater
    than that set by CacheSize. Note that <em>hours</em> accepts a
    float value, you could for example use <code>CacheGcInterval
    1.5</code> to check the cache every 90 minutes. (If unset, no
    garbage collection will be performed, and the cache will grow
    indefinitely.) Note also that the larger the
    <code>CacheGcInterval</code>, the more extra space beyond the
    configured <code>CacheSize</code> will be needed for the cache
    between garbage collections.<br />
     <!-- Note that due to a design flaw, Apache
            does not automatically force a garbage collection when the available
            space on the file system where the cache resides is exhausted. -->
    </p>
    <hr />

    <h2><a id="cachemaxexpire"
    name="cachemaxexpire">CacheMaxExpire</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheMaxExpire
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheMaxExpire
    24</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheMaxExpire
    is only available in Apache 1.1 and later. 

    <p>Specifies the maximum number of <em>hours</em> for which
    cachable HTTP documents will be retained without checking the
    origin server. Thus, documents will be out of date at most this
    number of <em>hours</em> This restriction is enforced even if
    an expiry date was supplied with the document.</p>
    <hr />

    <h2><a id="cachelastmodifiedfactor"
    name="cachelastmodifiedfactor">CacheLastModifiedFactor</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheLastModifiedFactor
    <em>factor</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <code>CacheLastModifiedFactor 0.1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheLastModifiedFactor is only available in Apache 1.1 and
    later. 

    <p>If the origin HTTP server did not supply an expiry date for
    the document, then estimate one using the formula</p>
<pre>
  expiry-period = time-since-last-modification * <em>factor</em>
</pre>
    For example, if the document was last modified 10 hours ago,
    and <em>factor</em> is 0.1, then the expiry period will be set
    to 10*0.1 = 1 hour. 

    <p>If the expiry-period would be longer than that set by
    CacheMaxExpire, then the latter takes precedence.</p>
    <hr />

    <h2><a id="cachedirlevels"
    name="cachedirlevels">CacheDirLevels</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDirLevels
    <em>levels</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheDirLevels
    3</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheDirLevels
    is only available in Apache 1.1 and later. 

    <p>CacheDirLevels sets the number of <em>levels</em> of
    subdirectories in the cache. Cached data will be saved this
    many directory levels below CacheRoot.</p>
    <hr />

    <h2><a id="cachedirlength"
    name="cachedirlength">CacheDirLength</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDirLength
    <em>length</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheDirLength
    1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheDirLength
    is only available in Apache 1.1 and later. 

    <p>CacheDirLength sets the number of characters in proxy cache
    subdirectory names.</p>
    <hr />

    <h2><a id="cachedefaultexpire"
    name="cachedefaultexpire">CacheDefaultExpire</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDefaultExpire
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <code>CacheDefaultExpire 1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheDefaultExpire is only available in Apache 1.1 and later. 

    <p>If the document is fetched via a protocol that does not
    support expiry times, then use the specified number of
    <em>hours</em> as the expiry time. <a
    href="#cachemaxexpire">CacheMaxExpire</a> does
    <strong>not</strong> override this setting.</p>
    <hr />

    <h2><a id="nocache" name="nocache">NoCache</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> NoCache
    *|<em>word|host|domain</em> [<em>word|host|domain</em>]
    ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> NoCache is only
    available in Apache 1.1 and later. 

    <p>The NoCache directive specifies a list of words, hosts
    and/or domains, separated by spaces. HTTP and non-passworded
    FTP documents from matched words, hosts or domains are
    <em>not</em> cached by the proxy server. The proxy module will
    also attempt to determine IP addresses of list items which may
    be hostnames during startup, and cache them for match test as
    well. Example:</p>
<pre>
  NoCache joes-garage.com some-host.co.uk bullwinkle.wotsamattau.edu
</pre>
    'bullwinkle.wotsamattau.edu' would also be matched if
    referenced by IP address. 

    <p>Note that 'wotsamattau' would also be sufficient to match
    'wotsamattau.edu'.</p>

    <p>Note also that</p>
<pre>
NoCache *
</pre>
    disables caching completely. 

    <p>    <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>

@


1.10
log
@Add ! support to ProxyPass to exclude directories from being proxied.
From Stephan A. Rickauer <stephan dot rickauer at startek dot ch> with
minor tweaks.  ok by many.
@
text
@@


1.9
log
@add ProxyPreserveHost support to mod_proxy. it allows to pass the original
Host header to the backend. default off. henning@@ ok.
@
text
@d470 1
a470 1
    url</em><br />
d502 13
@


1.8
log
@merge apache 1.3.29 and mod_ssl 2.8.16
ok brad@@
@
text
@d64 2
d567 27
@


1.7
log
@merge
@
text
@d105 4
d137 83
d239 12
d303 1
a303 1
     Apache sends an anomymous login to the FTP server, i.e.,
d364 4
a367 1
    forward external requests through the company's firewall.
d409 1
a409 1
    <p>This allows or prevents Apache from functioning as a proxy
d496 1
a496 1
    will cause a local request for the
d499 7
a505 1
    &lt;<samp>http://foo.com/bar</samp>&gt;. 
@


1.6
log
@fix half baked abortion of a merge to 1.3.23 and take
tree to apache-1.3.24+mod+ssl2.8.8
@
text
@d187 1
a187 1
     the Apache FTP proxy; it is is a solution which is also used by
d488 1
a488 1
    directive to overrride this default and allow connections to
@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d41 1
a41 1
    <code>HTTP/1.1</code>.
d48 5
d68 3
a70 2
      <li><a
      href="#proxyreceivebuffersize">ProxyReceiveBufferSize</a></li>
d114 9
d140 2
a141 2
Deny from [machines you'd like *not* to allow by IP address or name]
Allow from [machines you'd like to allow by IP address or name]
d149 3
d176 58
a233 1
    <samp>;type=a</samp> to force an ASCII transfer. 
d310 5
d569 46
@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 97
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_proxy</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Apache module mod_proxy</H1>

<p>This module provides for an <STRONG>HTTP 1.0</STRONG> caching proxy
server.</p>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Extension
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_proxy.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> proxy_module
<BR>
<A
HREF="module-dict.html#Compatibility"
REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.1 and later.
</P>

<H2>Summary</H2>

This module implements a proxy/cache for Apache. It implements
proxying capability for
<CODE>FTP</CODE>,
<CODE>CONNECT</CODE> (for SSL),
<CODE>HTTP/0.9</CODE>, and
<CODE>HTTP/1.0</CODE>.
The module can be configured to connect to other proxy modules for these
and other protocols.

<P>This module was experimental in Apache 1.1.x. As of Apache 1.2, mod_proxy
stability is <EM>greatly</EM> improved.<P>


<H2>Directives</H2>
<UL>
<LI><A HREF="#proxyrequests">ProxyRequests</A>
<LI><A HREF="#proxyremote">ProxyRemote</A>
<LI><A HREF="#proxypass">ProxyPass</A>
<LI><A HREF="#proxypassreverse">ProxyPassReverse</A>
<LI><A HREF="#proxyblock">ProxyBlock</A>
<LI><A HREF="#allowconnect">AllowCONNECT</A>
<LI><A HREF="#proxyreceivebuffersize">ProxyReceiveBufferSize</A>
<LI><A HREF="#noproxy">NoProxy</A>
<LI><A HREF="#proxydomain">ProxyDomain</A>
<LI><A HREF="#proxyvia">ProxyVia</A>
<LI><A HREF="#cacheroot">CacheRoot</A>
<LI><A HREF="#cachesize">CacheSize</A>
<LI><A HREF="#cachemaxexpire">CacheMaxExpire</A>
<LI><A HREF="#cachedefaultexpire">CacheDefaultExpire</A>
<LI><A HREF="#cachelastmodifiedfactor">CacheLastModifiedFactor</A>
<LI><A HREF="#cachegcinterval">CacheGcInterval</A>
<LI><A HREF="#cachedirlevels">CacheDirLevels</A>
<LI><A HREF="#cachedirlength">CacheDirLength</A>
<LI><A HREF="#cacheforcecompletion">CacheForceCompletion</A>
<LI><A HREF="#nocache">NoCache</A>
</UL>

<H2><A NAME="configs">Common configuration topics</A></H2>

<UL>
<LI><A HREF="#access">Controlling access to your proxy</A>
<LI><A HREF="#shortname">Using Netscape hostname shortcuts</A>
<LI><A HREF="#mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A>
<LI><A HREF="#startup">Why does Apache start more slowly when using the
        proxy module?</A>
<LI><A HREF="#socks">Can I use the Apache proxy module with my SOCKS proxy?</A>
<LI><A HREF="#intranet">What other functions are useful for an intranet proxy server?</A>
</UL>
d4 3
a6 1
<H2><A NAME="access">Controlling access to your proxy</A></H2>
d8 3
a10 2
You can control who can access your proxy via the normal &lt;Directory&gt;
control block using the following example:<P>
d12 85
a96 7
<PRE>
&lt;Directory proxy:*&gt;
Order Deny,Allow
Deny from [machines you'd like *not* to allow by IP address or name]
Allow from [machines you'd like to allow by IP address or name]
&lt;/Directory&gt;
</PRE><P>
d98 3
a100 2
A &lt;Files&gt; block will also work, and is the only method known to work
for all possible URLs in Apache versions earlier than 1.2b10.<P>
d102 2
a103 1
<H2><A NAME="shortname">Using Netscape hostname shortcuts</A></H2>
d105 2
a106 4
There is an optional patch to the proxy module to allow Netscape-like
hostname shortcuts to be used. It's available from the
<A HREF="http://www.apache.org/dist/contrib/patches/1.2/netscapehost.patch"
><SAMP>contrib/patches/1.2</SAMP></A> directory on the Apache Web site.<P>
d108 2
a109 1
<H2><A NAME="mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A></H2>
d111 2
a112 3
You probably don't have that particular file type defined as
<EM>application/octet-stream</EM> in your proxy's mime.types configuration
file. A useful line can be<P>
d114 3
a116 3
<PRE>
application/octet-stream        bin dms lha lzh exe class tgz taz
</PRE>
d118 11
a128 1
<H2><A NAME="type">How can I force an FTP ASCII download of File <EM>xxx</EM>?</A></H2>
d130 21
a150 122
In the rare situation where you must download a specific file using the FTP
<STRONG>ASCII</STRONG> transfer method (while the default transfer is in
<STRONG>binary</STRONG> mode), you can override mod_proxy's default by
suffixing the request with <SAMP>;type=a</SAMP> to force an ASCII transfer.<P>

<H2><A NAME="startup">Why does Apache start more slowly when using the
        proxy module?</A></H2>

If you're using the <CODE>ProxyBlock</CODE> or <CODE>NoCache</CODE>
directives, hostnames' IP addresses are looked up and cached during
startup for later match test. This may take a few seconds (or more)
depending on the speed with which the hostname lookups occur.<P>

<H2><A NAME="socks">Can I use the Apache proxy module with my SOCKS proxy?</A></H2>

Yes. Just build Apache with the rule <CODE>SOCKS4=yes</CODE> in your
<EM>Configuration</EM> file, and follow the instructions there. SOCKS5
capability can be added in a similar way (there's no <CODE>SOCKS5</CODE>
rule yet), so use the <CODE>EXTRA_LDFLAGS</CODE> definition, or build Apache
normally and run it with the <EM>runsocks</EM> wrapper provided with SOCKS5,
if your OS supports dynamically linked libraries.<P>

Some users have reported problems when using SOCKS version 4.2 on Solaris.
The problem was solved by upgrading to SOCKS 4.3.<P>

Remember that you'll also have to grant access to your Apache proxy machine by
permitting connections on the appropriate ports in your SOCKS daemon's
configuration.<P>

<H2><A NAME="intranet">What other functions are useful for an intranet proxy server?</A></H2>

<P>An Apache proxy server situated in an intranet needs to forward external
requests through the company's firewall. However, when it has to access
resources within the intranet, it can bypass the firewall when accessing
hosts. The <A HREF="#noproxy">NoProxy</A> directive is useful for specifying
which hosts belong to the intranet and should be accessed directly.</P>

<P>Users within an intranet tend to omit the local domain name from their
WWW requests, thus requesting "http://somehost/" instead of
"http://somehost.my.dom.ain/". Some commercial proxy servers let them get
away with this and simply serve the request, implying a configured
local domain. When the <A HREF="#proxydomain">ProxyDomain</A> directive
is used and the server is <A HREF="#proxyrequests">configured for
proxy service</A>, Apache can return a redirect response and send the client
to the correct, fully qualified, server address. This is the preferred method
since the user's bookmark files will then contain fully qualified hosts.</P>

<HR>

<H2><A NAME="proxyrequests">ProxyRequests</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyRequests on|off<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>ProxyRequests Off</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyRequests is only available in
Apache 1.1 and later.<P>

This allows or prevents Apache from functioning as a proxy
server. Setting ProxyRequests to 'off' does not disable use of the <A
HREF="#proxypass">ProxyPass</A> directive.

<HR>

<H2><A NAME="proxyremote">ProxyRemote</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyRemote <EM>match remote-server</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyRemote is only available in
Apache 1.1 and later.<P>

This defines remote proxies to this proxy. <em>match</em> is either the
name of a URL-scheme that the remote server supports, or a partial URL
for which the remote server should be used, or '*' to indicate the
server should be contacted for all requests. <em>remote-server</em> is a
partial URL for the remote server. Syntax:
d152 113
a264 1
<PRE>
d266 4
a269 1
</PRE>
d271 2
a272 5
<em>protocol</em> is the protocol that should be used to communicate
with the remote server; only "http" is supported by this module.
<P>
Example:
<PRE>
d276 36
a311 46
</PRE>

In the last example, the proxy will forward FTP requests, encapsulated
as yet another HTTP proxy request, to another proxy which can handle
them.

<HR>

<H2><A NAME="proxypass">ProxyPass</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyPass <EM>path url</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyPass is only available in
Apache 1.1 and later.<P>

This directive allows remote servers to be mapped into the space of the local
server; the local server does not act as a proxy in the conventional sense,
but appears to be a mirror of the remote server. <em>path</em> is the name of
a local virtual path; <em>url</em> is a partial URL for the remote server.
<P>
Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
<PRE>
d313 43
a355 51
</PRE>
will cause a local request for the
&lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be
internally converted into a proxy request to
&lt;<SAMP>http://foo.com/bar</SAMP>&gt;.

<HR>

<H2><A NAME="proxypassreverse">ProxyPassReverse</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyPassReverse <EM>path url</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyPassReverse is only available in
Apache 1.3b6 and later.<P>

This directive lets Apache adjust the URL in the <TT>Location</TT> header on
HTTP redirect responses. For instance this is essential when Apache is used as
a reverse proxy to avoid by-passing the reverse proxy because of HTTP
redirects on the backend servers which stay behind the reverse proxy.
<P>
<em>path</em> is the name of a local virtual path.<BR>
<em>url</em> is a partial URL for the remote server - the same way they are
used for the <TT>ProxyPass</TT> directive.
<P>
Example:<BR>
Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
<PRE>
d358 84
a441 103
</PRE>
will not only cause a local request for the
&lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be internally
converted into a proxy request to &lt;<SAMP>http://foo.com/bar</SAMP>&gt; (the
functionality <SAMP>ProxyPass</SAMP> provides here). It also takes care of
redirects the server foo.com sends: when <SAMP>http://foo.com/bar</SAMP> is
redirected by him to <SAMP>http://foo.com/quux</SAMP> Apache adjusts this to
<SAMP>http://wibble.org/mirror/foo/quux</SAMP> before forwarding the HTTP
redirect response to the client. 
<P>
Note that this <SAMP>ProxyPassReverse</SAMP> directive can also be used in
conjunction with the proxy pass-through feature ("<SAMP>RewriteRule ...
[P]</SAMP>") from
<A
 HREF="mod_rewrite.html#RewriteRule"
><TT>mod_rewrite</TT></A> because its doesn't depend on a corresponding
<SAMP>ProxyPass</SAMP> directive.

<HR>

<H2><A NAME="allowconnect">AllowCONNECT</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AllowCONNECT <EM>port</EM> 
    [<em>port</em>] ...<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM><SAMP>AllowCONNECT</SAMP> 443 563</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> <SAMP>AllowCONNECT</SAMP> is only
available in Apache 1.3.2 and later.<P>

The <SAMP>AllowCONNECT</SAMP> directive specifies a list of port numbers
to which the proxy <SAMP>CONNECT</SAMP> method may connect.
Today's browsers use this method when a <EM>https</EM> connection
is requested and proxy tunneling over <EM>http</EM> is in effect.<BR>
By default, only the default https port (443) and the default
snews port (563) are enabled. Use the <SAMP>AllowCONNECT</SAMP>
directive to overrride this default and allow connections to the
listed ports only.

<HR>

<H2><A NAME="proxyblock">ProxyBlock</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyBlock *|<EM>word|host|domain</EM>
    [<em>word|host|domain</em>] ...<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyBlock is only available in
Apache 1.2 and later.<P>

The ProxyBlock directive specifies a list of words, hosts and/or domains,
separated by spaces.  HTTP, HTTPS, and FTP document requests to sites whose
names contain matched words, hosts or domains are <EM>blocked</EM> by the
proxy server. The proxy module will also attempt to determine IP addresses of
list items which may be hostnames during startup, and cache them for match
test as well. Example:

<PRE>
d443 3
a445 1
</PRE>
d447 2
a448 1
'rocky.wotsamattau.edu' would also be matched if referenced by IP address.<P>
d450 2
a451 5
Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>

Note also that

<PRE>
d453 32
a484 5
</PRE>

blocks connections to all sites.

<HR>
d486 2
a487 40
<H2><A NAME="proxyreceivebuffersize">ProxyReceiveBufferSize</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyReceiveBufferSize <EM>bytes</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyReceiveBufferSize is only available in
Apache 1.3 and later.<P>

The ProxyReceiveBufferSize directive specifies an explicit network buffer size
for outgoing HTTP and FTP connections, for increased throughput.  It has to be
greater than 512 or set to 0 to indicate that the system's default buffer size
should be used. 

<P>
Example:

<PRE>
d489 2
a490 3
</PRE>

<HR>
d492 33
a524 46
<H2><A NAME="noproxy">NoProxy</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> NoProxy 
 <A HREF="#domain"><EM>Domain</EM></A>|<A 
    HREF="#subnet"><EM>SubNet</EM></A>|<A
    HREF="#ipaddr"><EM>IpAddr</EM></A>|<A 
    HREF="#hostname"><EM>Hostname</EM></A>
[<A HREF="#domain"><EM>Domain</EM></A>|<A 
    HREF="#subnet"><EM>SubNet</EM></A>|<A
    HREF="#ipaddr"><EM>IpAddr</EM></A>|<A 
    HREF="#hostname"><EM>Hostname</EM></A>] ...<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> NoProxy is only available in
Apache 1.3 and later.<P>

This directive is only useful for Apache proxy servers within intranets.
The NoProxy directive specifies a list of subnets, IP addresses, hosts
and/or domains, separated by spaces. A request to a host which matches
one or more of these is always served directly, without forwarding to
the configured ProxyRemote proxy server(s).
<P>
Example:
d526 2
a527 1
<PRE>
d530 144
a673 125
</PRE>
The arguments to the NoProxy directive are one of the following type list:
   <DL>
    <!-- ===================== Domain ======================= -->
    <DT><A NAME="domain"><EM>Domain</EM></A>
    <DD>A <EM>Domain</EM> is a partially qualified DNS domain name, preceded
        by a period.
        It represents a list of hosts which logically belong to the same DNS
        domain or zone (<EM>i.e.</EM>, the suffixes of the hostnames are all ending in 
        <EM>Domain</EM>).<BR>
		Examples: <SAMP>.com</SAMP>   <SAMP>.apache.org.</SAMP><BR>
        To distinguish <EM>Domain</EM>s from <A HREF="#hostname"><EM>Hostname</EM></A>s (both
        syntactically and semantically; a DNS domain can have a DNS A record,
        too!), <EM>Domain</EM>s are always written
        with a leading period.<BR>
        Note: Domain name comparisons are done without regard to the case,
        and <EM>Domain</EM>s are always assumed to be anchored in the root 
        of the DNS tree, therefore two domains <SAMP>.MyDomain.com</SAMP> and
        <SAMP>.mydomain.com.</SAMP> (note the trailing period) are
        considered equal. Since a domain comparison does not involve a DNS
	lookup, it is much more efficient than subnet comparison.

    <!-- ===================== SubNet ======================= -->
    <DT><A NAME="subnet"><EM>SubNet</EM></A>
    <DD>A <EM>SubNet</EM> is a partially qualified internet address in
        numeric (dotted quad) form, optionally followed by a slash and the
        netmask, specified as the number of significant bits in the
        <EM>SubNet</EM>. It is used to represent a subnet of hosts which can
        be reached over a common network interface. In the absence of the
        explicit net mask it is assumed that omitted (or zero valued)
        trailing digits specify the mask. (In this case, the netmask can
        only be multiples of 8 bits wide.)<BR>
        Examples:
        <DL>
         <DT><SAMP>192.168</SAMP> or <SAMP>192.168.0.0</SAMP>
         <DD>the subnet 192.168.0.0 with an implied netmask of 16 valid bits
             (sometimes used in the netmask form <SAMP>255.255.0.0</SAMP>)
         <DT><SAMP>192.168.112.0/21</SAMP>
         <DD>the subnet <SAMP>192.168.112.0/21</SAMP> with a netmask of 21
             valid bits (also used in the form 255.255.248.0)
        </DL>
		As a degenerate case, a <EM>SubNet</EM> with 32 valid bits is the
        equivalent to an <EM>IPAddr</EM>, while a <EM>SubNet</EM> with zero
        valid bits (<EM>e.g.</EM>, 0.0.0.0/0) is the same as the constant
        <EM>_Default_</EM>, matching any IP address. 

    <!-- ===================== IPAddr ======================= -->
    <DT><A NAME="ipaddr"><EM>IPAddr</EM></A>
    <DD>A <EM>IPAddr</EM> represents a fully qualified internet address in
        numeric (dotted quad) form. Usually, this address represents a
        host, but there need not necessarily be a DNS domain name
        connected with the address.<BR>
		Example: 192.168.123.7<BR>
        Note: An <EM>IPAddr</EM> does not need to be resolved by the DNS
	system, so it can result in more effective apache performance.
        <P><STRONG>See Also:</STRONG>
	<A HREF="../dns-caveats.html">DNS Issues</A></P>

    <!-- ===================== Hostname ======================= -->
    <DT><A NAME="hostname"><EM>Hostname</EM></A>
    <DD>A <EM>Hostname</EM> is a fully qualified DNS domain name which can
        be resolved to one or more <A
	HREF="#ipaddr"><EM>IPAddrs</EM></A> via the DNS domain name service. 
        It represents a logical host (in contrast to
	<A HREF="#domain"><EM>Domain</EM></A>s, see 
        above) and must be resolvable to at least one <A
	HREF="#ipaddr"><EM>IPAddr</EM></A> (or often to a list of hosts
	with different <A HREF="#ipaddr"><EM>IPAddr</EM></A>'s).<BR> 
		Examples: <SAMP>prep.ai.mit.edu</SAMP>
                  <SAMP>www.apache.org.</SAMP><BR>
        Note: In many situations, it is more effective to specify an
        <A HREF="#ipaddr"><EM>IPAddr</EM></A> in place of a
	<EM>Hostname</EM> since a DNS lookup 
        can be avoided. Name resolution in Apache can take a remarkable deal
        of time when the connection to the name server uses a slow PPP
        link.<BR>
        Note: <EM>Hostname</EM> comparisons are done without regard to the case,
        and <EM>Hostname</EM>s are always assumed to be anchored in the root
        of the DNS tree, therefore two hosts <SAMP>WWW.MyDomain.com</SAMP>
        and <SAMP>www.mydomain.com.</SAMP> (note the trailing period) are
        considered equal.<BR>
<P><STRONG>See Also:</STRONG>
<A HREF="../dns-caveats.html">DNS Issues</A></P>
   </DL>

<HR>

<H2><A NAME="proxydomain">ProxyDomain</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyDomain <EM>Domain</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyDomain is only available in
Apache 1.3 and later.<P>

This directive is only useful for Apache proxy servers within intranets.
The ProxyDomain directive specifies the default domain which the apache
proxy server will belong to. If a request to a host without a domain name
is encountered, a redirection response to the same host
with the configured <EM>Domain</EM> appended will be generated. 
<P>
Example:
d675 2
a676 1
<PRE>
d680 2
a681 1
</PRE>
d683 235
a917 289
<HR>

<H2><A NAME="proxyvia">ProxyVia</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyVia on|off|full|block<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>ProxyVia off</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyVia is only available in
Apache 1.3.2 and later.<P>

This directive controls the use of the <SAMP>Via:</SAMP> HTTP header
by the proxy. Its intended use is to control the flow of of proxy
requests along a chain of proxy servers.
See RFC2068 (HTTP/1.1) for an explanation of <SAMP>Via:</SAMP> header lines.<UL>
<LI>If set to <EM>off</EM>, which is the default, no special
processing is performed. If a request or reply contains a <SAMP>Via:</SAMP> header,
it is passed through unchanged.
<LI>If set to <EM>on</EM>, each request and reply will get a <SAMP>Via:</SAMP> header
line added for the current host.
<LI>If set to <EM>full</EM>, each generated <SAMP>Via:</SAMP> header line will
additionally have the Apache server version shown as a <SAMP>Via:</SAMP> comment field.
<LI>If set to <EM>block</EM>, every proxy request will have all its
<SAMP>Via:</SAMP> header lines removed. No new <SAMP>Via:</SAMP> header will be generated.
</UL>

<HR>

<H2><A NAME="cacheforcecompletion">CacheForceCompletion</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheForceCompletion <EM>percentage</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>90</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheForceCompletion is only available in
Apache 1.3.1 and later.<P>

If an http transfer that is being cached is cancelled, the proxy module will
complete the transfer to cache if more than the percentage specified has
already been transferred.<P>

This is a percentage, and must be a number between 1 and 100, or 0 to use
the default.  100 will cause a document to be cached only if the transfer
was allowed to complete.  A number between 60 and 90 is recommended.

<HR>

<H2><A NAME="cacheroot">CacheRoot</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheRoot <EM>directory</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheRoot is only available in
Apache 1.1 and later.<P>

Sets the name of the directory to contain cache files; this must be
writable by the httpd server.
(see the <A HREF="core.html#user"><CODE>User</CODE></A> directive).<BR>
Setting <CODE>CacheRoot</CODE> enables proxy cacheing; without defining
a <CODE>CacheRoot</CODE>, proxy functionality will be available
if <CODE>ProxyRequests</CODE> are set to <CODE>On</CODE>, but no
cacheing will be available.

<HR>

<H2><A NAME="cachesize">CacheSize</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheSize <EM>kilobytes</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheSize 5</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheSize is only available in
Apache 1.1 and later.<P>

Sets the desired space usage of the cache, in KB (1024-byte units). Although
usage may grow above this setting, the garbage collection will delete files
until the usage is at or below this setting.<BR>
Depending on the expected proxy traffic volume and <CODE>CacheGcInterval</CODE>,
use a value which is at least 20 to 40 % lower than the available space.

<HR>

<H2><A NAME="cachegcinterval">CacheGcInterval</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheGcInterval <EM>hours</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheGcinterval is only available in
Apache 1.1 and later.<P>

Check the cache after the specified number of <em>hours</em>, and
delete files if the space usage is greater than that set by
CacheSize. Note that <em>hours</em> accepts a float value, you could for
example use <CODE>CacheGcInterval 1.5</CODE> to check the cache every
90 minutes. (If unset, no garbage collection will be performed, and
the cache will grow indefinitely.)  Note also that the larger the
<CODE>CacheGcInterval</CODE>, the more extra space beyond the
configured <CODE>CacheSize</CODE> will be needed for the cache between
garbage collections.<BR> <!-- Note that due to a design flaw, Apache
does not automatically force a garbage collection when the available
space on the file system where the cache resides is exhausted. -->

<HR>

<H2><A NAME="cachemaxexpire">CacheMaxExpire</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheMaxExpire <EM>hours</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheMaxExpire 24</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheMaxExpire is only available in
Apache 1.1 and later.<P>

<p>Specifies the maximum number of <em>hours</em> for which cachable HTTP
documents will be retained without checking the origin server.  Thus,
documents will be out of date at most this number of <em>hours</em>
This restriction is enforced even if an expiry date was supplied with
the document.</p>

<HR>

<H2><A NAME="cachelastmodifiedfactor">CacheLastModifiedFactor</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheLastModifiedFactor <EM>factor</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheLastModifiedFactor 0.1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheLastModifiedFactor is only available in
Apache 1.1 and later.<P>

If the origin HTTP server did not supply an expiry date for the
document, then estimate one using the formula
<PRE>
d919 120
a1038 158
</PRE>
For example, if the document was last modified 10 hours ago, and
<em>factor</em> is 0.1, then the expiry period will be set to 10*0.1 = 1 hour.

<P>If the expiry-period would be longer than that set by CacheMaxExpire,
then the latter takes precedence.

<HR>

<H2><A NAME="cachedirlevels">CacheDirLevels</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDirLevels <EM>levels</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDirLevels 3</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDirLevels is only available in
Apache 1.1 and later.<P>

CacheDirLevels sets the number of <em>levels</em> of subdirectories in
the cache.  Cached data will be saved this many directory levels below
CacheRoot.

<HR>

<H2><A NAME="cachedirlength">CacheDirLength</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDirLength <EM>length</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDirLength 1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDirLength is only available in
Apache 1.1 and later.<P>

CacheDirLength sets the number of characters in proxy cache subdirectory names.

<HR>

<H2><A NAME="cachedefaultexpire">CacheDefaultExpire</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDefaultExpire <EM>hours</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDefaultExpire 1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDefaultExpire is only available in
Apache 1.1 and later.<P>

If the document is fetched via a protocol that does not support expiry times,
then use the specified number of <em>hours</em> as the expiry time.
<A HREF="#cachemaxexpire">CacheMaxExpire</A> does <STRONG>not</STRONG>
override this setting.

<HR>

<H2><A NAME="nocache">NoCache</A> directive</H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> NoCache *|<EM>word|host|domain</EM>
   [<em>word|host|domain</em>] ...<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> NoCache is only available in
Apache 1.1 and later.<P>

The NoCache directive specifies a list of words, hosts and/or domains, separated
by spaces. HTTP and non-passworded FTP documents from matched words, hosts or
domains are <EM>not</EM> cached by the proxy server. The proxy module will
also attempt to determine IP addresses of list items which may be hostnames
during startup, and cache them for match test as well. Example:

<PRE>
d1040 3
a1042 6
</PRE>

'bullwinkle.wotsamattau.edu' would also be matched if referenced by IP
address.<P>

Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>
d1044 2
a1045 1
Note also that
d1047 2
a1048 1
<PRE>
d1050 2
a1051 9
</PRE>

disables caching completely.<P>

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d1053 1
a1053 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
d1055 7
a1061 2
</BODY>
</HTML>
@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d187 1
a187 1
><STRONG>Syntax:</STRONG></A> ProxyRequests <EM>on/off</EM><BR>
d224 1
a224 1
><STRONG>Syntax:</STRONG></A> ProxyRemote <EM>&lt;match&gt; &lt;remote-server&gt;</EM><BR>
d251 1
a251 1
This defines remote proxies to this proxy. &lt;match&gt; is either the
d254 1
a254 1
server should be contacted for all requests. &lt;remote-server&gt; is a
d258 1
a258 1
  &lt;remote-server&gt; = &lt;protocol&gt;://&lt;hostname&gt;[:port]
d261 1
a261 1
&lt;protocol&gt; is the protocol that should be used to communicate
d281 1
a281 1
><STRONG>Syntax:</STRONG></A> ProxyPass <EM>&lt;path&gt; &lt;url&gt;</EM><BR>
d310 2
a311 2
but appears to be a mirror of the remote server. &lt;path&gt; is the name of
a local virtual path; &lt;url&gt; is a partial URL for the remote server.
d328 1
a328 1
><STRONG>Syntax:</STRONG></A> ProxyPassReverse <EM>&lt;path&gt; &lt;url&gt;</EM><BR>
d360 2
a361 2
&lt;path&gt; is the name of a local virtual path.<BR>
&lt;url&gt; is a partial URL for the remote server - the same way they are
d393 2
a394 1
><STRONG>Syntax:</STRONG></A> AllowCONNECT <EM>&lt;port list&gt;</EM><BR>
d436 2
a437 1
><STRONG>Syntax:</STRONG></A> ProxyBlock <EM>&lt;word/host/domain list&gt;</EM><BR>
d493 1
a493 1
><STRONG>Syntax:</STRONG></A> ProxyReceiveBufferSize <EM>&lt;bytes&gt;</EM><BR>
d538 9
a546 5
><STRONG>Syntax:</STRONG></A> NoProxy { <A HREF="#domain"><EM>&lt;Domain&gt;</EM></A>
                                 | <A HREF="#subnet"><EM>&lt;SubNet&gt;</EM></A>
				 | <A HREF="#ipaddr"><EM>&lt;IpAddr&gt;</EM></A>
				 | <A HREF="#hostname"><EM>&lt;Hostname&gt;</EM></A>
				 } <BR>
d588 1
a588 2
    <A NAME="domain">
    <DT><EM>Domain</EM></A>
d607 1
a607 2
    <A NAME="subnet">
    <DT><EM>SubNet</EM></A>
d631 1
a631 2
    <A NAME="ipaddr">
    <DT><EM>IPAddr</EM></A>
d643 1
a643 2
    <A NAME="hostname">
    <DT><EM>Hostname</EM></A>
d675 1
a675 1
><STRONG>Syntax:</STRONG></A> ProxyDomain <EM>&lt;Domain&gt;</EM><BR>
d722 1
a722 5
><STRONG>Syntax:</STRONG></A> ProxyVia { <EM>off</EM>
                                       | <EM>on</EM>
				       | <EM>full</EM>
				       | <EM>block</EM>
				       }<BR>
d770 1
a770 1
><STRONG>Syntax:</STRONG></A> CacheForceCompletion <EM>&lt;percentage&gt;</EM><BR>
d811 1
a811 1
><STRONG>Syntax:</STRONG></A> CacheRoot <EM>&lt;directory&gt;</EM><BR>
d852 1
a852 1
><STRONG>Syntax:</STRONG></A> CacheSize <EM>&lt;size&gt;</EM><BR>
d891 1
a891 1
><STRONG>Syntax:</STRONG></A> CacheGcInterval <EM>&lt;time&gt;</EM><BR>
d918 11
a928 11
Check the cache every &lt;time&gt; hours, and delete files if the space
usage is greater than that set by CacheSize. Note that &lt;time&gt; accepts a
float value, you could for example use <CODE>CacheGcInterval 1.5</CODE> to
check the cache every 90 minutes. (If unset, no garbage collection will
be performed, and the cache will grow indefinitely.)
Note also that the larger the <CODE>CacheGcInterval</CODE>, the more
extra space beyond the configured <CODE>CacheSize</CODE> will be
needed for the cache between garbage collections.<BR> <!--
Note that due to a design flaw, Apache does not automatically force a
garbage collection when the available space on the file system where
the cache resides is exhausted. -->
d936 1
a936 1
><STRONG>Syntax:</STRONG></A> CacheMaxExpire <EM>&lt;time&gt;</EM><BR>
d963 5
a967 4
Cachable HTTP documents will be retained for at most &lt;time&gt; hours without
checking the origin server. Thus documents can be at most &lt;time&gt;
hours out of date. This restriction is enforced even if an expiry date
was supplied with the document.
d975 1
a975 1
><STRONG>Syntax:</STRONG></A> CacheLastModifiedFactor <EM>&lt;factor&gt;</EM><BR>
d1005 1
a1005 1
  expiry-period = time-since-last-modification * &lt;factor&gt;
d1008 1
a1008 1
&lt;factor&gt; is 0.1, then the expiry period will be set to 10*0.1 = 1 hour.
d1019 1
a1019 1
><STRONG>Syntax:</STRONG></A> CacheDirLevels <EM>&lt;levels&gt;</EM><BR>
d1046 3
a1048 2
CacheDirLevels sets the number of levels of subdirectories in the cache.
Cached data will be saved this many directory levels below CacheRoot.
d1056 1
a1056 1
><STRONG>Syntax:</STRONG></A> CacheDirLength <EM>&lt;length&gt;</EM><BR>
d1091 1
a1091 1
><STRONG>Syntax:</STRONG></A> CacheDefaultExpire <EM>&lt;time&gt;</EM><BR>
d1119 1
a1119 1
then use &lt;time&gt; hours as the expiry time.
d1129 2
a1130 1
><STRONG>Syntax:</STRONG></A> NoCache <EM>&lt;word/host/domain list&gt;</EM><BR>
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d24 2
a25 7
This module is contained in the <CODE>mod_proxy.c</CODE> file for Apache 1.1.x,
or the <CODE>modules/proxy</CODE> subdirectory for Apache 1.2, and
is not compiled in by default. It provides for an <STRONG>HTTP
1.0</STRONG> caching proxy 
server. It is only available in Apache 1.1 and later. Common configuration
questions are addressed <A HREF="#configs">after the directive
descriptions</A>.
d27 20
a46 3
<H3>Note:</H3>
<P>This module was experimental in Apache 1.1.x. As of Apache 1.2, mod_proxy
stability is <EM>greatly</EM> improved.<P>
d59 4
d87 94
d183 1
a183 1
<H2><A NAME="proxyrequests">ProxyRequests</A></H2>
d220 1
a220 1
<H2><A NAME="proxyremote">ProxyRemote</A></H2>
d277 1
a277 1
<H2><A NAME="proxypass">ProxyPass</A></H2>
d324 1
a324 1
<H2><A NAME="proxypassreverse">ProxyPassReverse</A></H2>
d389 1
a389 1
<H2><A NAME="allowconnect">AllowCONNECT</A></H2>
d431 1
a431 1
<H2><A NAME="proxyblock">ProxyBlock</A></H2>
d487 1
a487 1
<H2><A NAME="proxyreceivebuffersize">ProxyReceiveBufferSize</A></H2>
d532 1
a532 1
<H2><A NAME="noproxy">NoProxy</A></H2>
d669 1
a669 1
<H2><A NAME="proxydomain">ProxyDomain</A></H2>
d716 1
a716 1
<H2><A NAME="proxyvia">ProxyVia</A></H2>
d768 1
a768 1
<H2><A NAME="cacheforcecompletion">CacheForceCompletion</A></H2>
d809 1
a809 1
<H2><A NAME="cacheroot">CacheRoot</A></H2>
d850 1
a850 1
<H2><A NAME="cachesize">CacheSize</A></H2>
d889 1
a889 1
<H2><A NAME="cachegcinterval">CacheGcInterval</A></H2>
d934 1
a934 1
<H2><A NAME="cachemaxexpire">CacheMaxExpire</A></H2>
d972 1
a972 1
<H2><A NAME="cachelastmodifiedfactor">CacheLastModifiedFactor</A></H2>
d1016 1
a1016 1
<H2><A NAME="cachedirlevels">CacheDirLevels</A></H2>
d1052 1
a1052 1
<H2><A NAME="cachedirlength">CacheDirLength</A></H2>
d1087 1
a1087 1
<H2><A NAME="cachedefaultexpire">CacheDefaultExpire</A></H2>
d1125 1
a1125 1
<H2><A NAME="nocache">NoCache</A></H2>
a1177 96

<HR>

<H2><A NAME="configs">Common configuration topics</A></H2>

<UL>
<LI><A HREF="#access">Controlling access to your proxy</A>
<LI><A HREF="#shortname">Using Netscape hostname shortcuts</A>
<LI><A HREF="#mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A>
<LI><A HREF="#startup">Why does Apache start more slowly when using the
        proxy module?</A>
<LI><A HREF="#socks">Can I use the Apache proxy module with my SOCKS proxy?</A>
<LI><A HREF="#intranet">What other functions are useful for an intranet proxy server?</A>
</UL>

<H2><A NAME="access">Controlling access to your proxy</A></H2>

You can control who can access your proxy via the normal &lt;Directory&gt;
control block using the following example:<P>

<PRE>
&lt;Directory proxy:*&gt;
order deny,allow
deny from [machines you'd like *not* to allow by IP address or name]
allow from [machines you'd like to allow by IP address or name]
&lt;/Directory&gt;
</PRE><P>

A &lt;Files&gt; block will also work, and is the only method known to work
for all possible URLs in Apache versions earlier than 1.2b10.<P>

<H2><A NAME="shortname">Using Netscape hostname shortcuts</A></H2>

There is an optional patch to the proxy module to allow Netscape-like
hostname shortcuts to be used. It's available from the
<A HREF="http://www.apache.org/dist/contrib/patches/1.2/netscapehost.patch"
><SAMP>contrib/patches/1.2</SAMP></A> directory on the Apache Web site.<P>

<H2><A NAME="mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A></H2>

You probably don't have that particular file type defined as
<EM>application/octet-stream</EM> in your proxy's mime.types configuration
file. A useful line can be<P>

<PRE>
application/octet-stream        bin dms lha lzh exe class tgz taz
</PRE>

<H2><A NAME="type">How can I force an FTP ASCII download of File <EM>xxx</EM>?</A></H2>

In the rare situation where you must download a specific file using the FTP
<STRONG>ASCII</STRONG> transfer method (while the default transfer is in
<STRONG>binary</STRONG> mode), you can override mod_proxy's default by
suffixing the request with <SAMP>;type=a</SAMP> to force an ASCII transfer.<P>

<H2><A NAME="startup">Why does Apache start more slowly when using the
        proxy module?</A></H2>

If you're using the <CODE>ProxyBlock</CODE> or <CODE>NoCache</CODE>
directives, hostnames' IP addresses are looked up and cached during
startup for later match test. This may take a few seconds (or more)
depending on the speed with which the hostname lookups occur.<P>

<H2><A NAME="socks">Can I use the Apache proxy module with my SOCKS proxy?</A></H2>

Yes. Just build Apache with the rule <CODE>SOCKS4=yes</CODE> in your
<EM>Configuration</EM> file, and follow the instructions there. SOCKS5
capability can be added in a similar way (there's no <CODE>SOCKS5</CODE>
rule yet), so use the <CODE>EXTRA_LDFLAGS</CODE> definition, or build Apache
normally and run it with the <EM>runsocks</EM> wrapper provided with SOCKS5,
if your OS supports dynamically linked libraries.<P>

Some users have reported problems when using SOCKS version 4.2 on Solaris.
The problem was solved by upgrading to SOCKS 4.3.<P>

Remember that you'll also have to grant access to your Apache proxy machine by
permitting connections on the appropriate ports in your SOCKS daemon's
configuration.<P>

<H2><A NAME="intranet">What other functions are useful for an intranet proxy server?</A></H2>

<P>An Apache proxy server situated in an intranet needs to forward external
requests through the company's firewall. However, when it has to access
resources within the intranet, it can bypass the firewall when accessing
hosts. The <A HREF="#noproxy">NoProxy</A> directive is useful for specifying
which hosts belong to the intranet and should be accessed directly.</P>

<P>Users within an intranet tend to omit the local domain name from their
WWW requests, thus requesting "http://somehost/" instead of
"http://somehost.my.dom.ain/". Some commercial proxy servers let them get
away with this and simply serve the request, implying a configured
local domain. When the <A HREF="#proxydomain">ProxyDomain</A> directive
is used and the server is <A HREF="#proxyrequests">configured for
proxy service</A>, Apache can return a redirect response and send the client
to the correct, fully qualified, server address. This is the preferred method
since the user's bookmark files will then contain fully qualified hosts.</P>
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.2
d22 1
a22 1
<H1 ALIGN="CENTER">Module mod_proxy</H1>
d24 4
a27 3
This module is contained in the <code>mod_proxy.c</code> file for Apache 1.1.x,
or the <code>modules/proxy</code> subdirectory for Apache 1.2, and
is not compiled in by default. It provides for an <b>HTTP 1.0</b> caching proxy
d29 2
a30 1
questions are addressed <a href="#configs">here</a>.
d32 3
a34 3
<h3>Note:</h3>
<p>This module was experimental in Apache 1.1.x. As of Apache 1.2, mod_proxy
stability is <i>greatly</i> improved.<p>
d36 1
a36 1
<h2>Summary</h2>
d40 4
a43 4
<code>FTP</code>,
<code>CONNECT</code> (for SSL),
<code>HTTP/0.9</code>, and
<code>HTTP/1.0</code>.
d47 56
a102 27
<h2>Directives</h2>
<ul>
<li><a href="#proxyrequests">ProxyRequests</a>
<li><a href="#proxyremote">ProxyRemote</a>
<li><a href="#proxypass">ProxyPass</a>
<li><a href="#proxyblock">ProxyBlock</a>
<li><a href="#cacheroot">CacheRoot</a>
<li><a href="#cachesize">CacheSize</a>
<li><a href="#cachemaxexpire">CacheMaxExpire</a>
<li><a href="#cachedefaultexpire">CacheDefaultExpire</a>
<li><a href="#cachelastmodifiedfactor">CacheLastModifiedFactor</a>
<li><a href="#cachegcinterval">CacheGcInterval</a>
<li><a href="#cachedirlevels">CacheDirLevels</a>
<li><a href="#cachedirlength">CacheDirLength</a>
<li><a href="#nocache">NoCache</a>
</ul>

<hr>

<A name="proxyrequests"><h2>ProxyRequests</h2></A>
<strong>Syntax:</strong> ProxyRequests <em>on/off</em><br>
<strong>Default:</strong> <code>ProxyRequests Off</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> ProxyRequest is only available in
Apache 1.1 and later.<p>
d105 4
a108 2
server. Setting ProxyRequests to 'off' does not disable use of the <a
href="#proxypass">ProxyPass</a> directive.
d110 30
a139 7
<A name="proxyremote"><h2>ProxyRemote</h2></A>
<strong>Syntax:</strong> ProxyRemote <em>&lt;match&gt; &lt;remote-server&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> ProxyRemote is only available in
Apache 1.1 and later.<p>
d147 1
a147 1
<pre>
d149 1
a149 1
</pre>
d153 1
a153 1

d155 1
a155 1
<pre>
d159 1
a159 1
</pre>
d165 32
a196 7
<A name="proxypass"><h2>ProxyPass</h2></A>
<strong>Syntax:</strong> ProxyPass <em>&lt;path&gt; &lt;url&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> ProxyPass is only available in
Apache 1.1 and later.<p>
d202 118
d321 30
a350 14
Suppose the local server has address http://wibble.org; then
<pre>
   ProxyPass /mirror/foo http://foo.com
</pre>
Will cause a local request for the http://wibble.org/mirror/foo/bar to be
internally converted into a proxy request to http://foo.com/bar

<A name="proxyblock"><h2>ProxyBlock</h2></A>
<strong>Syntax:</strong> ProxyBlock <em>&lt;word/host/domain list&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> ProxyBlock is only available in
Apache 1.2 and later.<p>
d353 9
a361 8
separated by spaces. HTTP, HTTPS, and FTP document requests to matched words,
hosts or domains are <em>blocked</em> by the proxy server. The proxy module
will also attempt to determine IP addresses of list items which may be
hostnames during startup, and cache them for match test as well. Example:

<pre>
  ProxyBlock joes_garage.com some_host.co.uk rocky.wotsamattau.edu
</pre>
d363 1
a363 1
'rocky.wotsamattau.edu' would also be matched if referenced by IP address.<p>
d365 1
a365 1
Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<p>
d369 1
a369 1
<pre>
d371 1
a371 1
</pre>
d375 354
a728 7
<A name="cacheroot"><h2>CacheRoot</h2></A>
<strong>Syntax:</strong> CacheRoot <em>&lt;directory&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheRoot is only available in
Apache 1.1 and later.<p>
d731 8
a738 2
writable
by the httpd server.
d740 30
a769 8
<A name="cachesize"><h2>CacheSize</h2></A>
<strong>Syntax:</strong> CacheSize <em>&lt;size&gt;</em><br>
<strong>Default:</strong> <code>CacheSize 5</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheSize is only available in
Apache 1.1 and later.<p>
d771 1
a771 1
Sets the desired space usage of the cache, in Kb (1024 byte units). Although
d773 5
a777 1
until the usage is at or below this setting.
d779 30
a808 7
<A name="cachegcinterval"><h2>CacheGcInterval</h2></A>
<strong>Syntax:</strong> CacheGcInterval <em>&lt;time&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheGcinterval is only available in
Apache 1.1 and later.<p>
d811 12
a822 1
usage is greater than that set by CacheSize.
d824 30
a853 8
<A name="cachemaxexpire"><h2>CacheMaxExpire</h2></A>
<strong>Syntax:</strong> CacheMaxExpire <em>&lt;time&gt;</em><br>
<strong>Default:</strong> <code>CacheMaxExpire 24</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheMaxExpire is only available in
Apache 1.1 and later.<p>
d860 32
a891 8
<A name="cachelastmodifiedfactor"><h2>CacheLastModifiedFactor</h2></A>
<strong>Syntax:</strong> CacheLastModifiedFactor <em>&lt;factor&gt;</em><br>
<strong>Default:</strong> <code>CacheLastModifiedFactor 0.1</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheLastModifiedFactor is only available in
Apache 1.1 and later.<p>
d895 1
a895 1
<pre>
d897 1
a897 1
</pre>
d901 1
a901 1
<p>If the expiry-period would be longer than that set by CacheMaxExpire,
d904 32
a935 8
<A name="cachedirlevels"><h2>CacheDirLevels</h2></A>
<strong>Syntax:</strong> CacheDirLevels <em>&lt;levels&gt;</em><br>
<strong>Default:</strong> <code>CacheDirLevels 3</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheDirLevels is only available in
Apache 1.1 and later.<p>
d940 32
a971 8
<A name="cachedirlength"><h2>CacheDirLength</h2></A>
<strong>Syntax:</strong> CacheDirLength <em>&lt;length&gt;</em><br>
<strong>Default:</strong> <code>CacheDirLength 1</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheDirLength is only available in
Apache 1.1 and later.<p>
d975 32
a1006 8
<A name="cachedefaultexpire"><h2>CacheDefaultExpire</h2></A>
<strong>Syntax:</strong> CacheDefaultExpire <em>&lt;time&gt;</em><br>
<strong>Default:</strong> <code>CacheDefaultExpire 1</code><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> CacheDefaultExpire is only available in
Apache 1.1 and later.<p>
d1010 2
a1011 2
<a href="#cachemaxexpire">CacheMaxExpire</a> does <strong>not</strong>
override.
d1013 32
a1044 7
<A name="nocache"><h2>NoCache</h2></A>
<strong>Syntax:</strong> NoCache <em>&lt;word/host/domain list&gt;</em><br>
<strong>Context:</strong> server config, virtual host<br>
<strong>Status:</strong> Base<br>
<strong>Module:</strong> mod_proxy<br>
<strong>Compatibility:</strong> NoCache is only available in
Apache 1.1 and later.<p>
d1048 1
a1048 1
domains are <em>not</em> cached by the proxy server. The proxy module will
d1052 3
a1054 3
<pre>
  NoCache joes_garage.com some_host.co.uk bullwinkle.wotsamattau.edu
</pre>
d1057 1
a1057 1
address.<p>
d1059 1
a1059 1
Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<p>
d1063 1
a1063 1
<pre>
d1065 1
a1065 1
</pre>
d1067 1
a1067 1
disables caching completely.<p>
d1069 1
a1069 1
<hr>
d1071 1
a1071 1
<a name="configs"><h2>Common configuration topics</h2></a>
d1073 9
a1081 8
<ul>
<li><a href="#access">Controlling access to your proxy</a>
<li><a href="#shortname">Using Netscape hostname shortcuts</a>
<li><a href="#mimetypes">Why doesn't file type <i>xxx</i> download via FTP?</a>
<li><a href="#startup">Why does Apache start more slowly when using the
        proxy module?</a>
<li><a href="#socks">Can I use the Apache proxy module with my SOCKS proxy?</a>
</ul>
d1083 1
a1083 1
<h2><a name="access">Controlling access to your proxy</a></h2>
d1086 1
a1086 1
control block using the following example:<p>
d1088 1
a1088 1
<pre>
a1089 1
&lt;Limit GET PUT POST DELETE CONNECT OPTIONS&gt;
a1092 1
&lt;/Limit&gt;
d1094 1
a1094 1
</pre><p>
d1097 1
a1097 1
for all possible URLs in Apache versions earlier than 1.2b10.<p>
d1099 1
a1099 1
<h2><a name="shortname">Using Netscape hostname shortcuts</a></h2>
d1102 3
a1104 3
hostname shortcuts to be used. It's available
<a href="http://www.apache.org/dist/contrib/patches/1.2/netscapehost.patch">
here</a>.<p>
d1106 1
a1106 1
<h2><a name="mimetypes">Why doesn't file type <i>xxx</i> download via FTP?</a></h2>
d1109 2
a1110 2
<i>application/octet-stream</i> in your proxy's mime.types configuration
file. A useful line can be<p>
d1112 1
a1112 1
<pre>
d1114 8
a1121 1
</pre>
d1123 2
a1124 2
<h2><a name="startup">Why does Apache start more slowly when using the
        proxy module?</a></h2>
d1126 1
a1126 1
If you're using the <code>ProxyBlock</code> or <code>NoCache</code>
d1129 1
a1129 1
depending on the speed with which the hostname lookups occur.<p>
d1131 1
a1131 1
<h2><a name="socks">Can I use the Apache proxy module with my SOCKS proxy?</a></h2>
d1133 6
a1138 6
Yes. Just build Apache with the rule <code>SOCKS4=yes</code> in your
<i>Configuration</i> file, and follow the instructions there. SOCKS5
capability can be added in a similar way (there's no <code>SOCKS5</code>
rule yet), so use the <code>EXTRA_LFLAGS</code> definition, or build Apache
normally and run it with the <i>runsocks</i> wrapper provided with SOCKS5,
if your OS supports dynamically linked libraries.<p>
d1141 1
a1141 1
The problem was solved by upgrading to SOCKS 4.3.<p>
d1145 19
a1163 1
configuration.<p>
d1166 1
d1168 1
a1168 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d18 1
a18 1
  Apache HTTP Server Version 1.3
d22 1
a22 1
<H1 ALIGN="CENTER">Apache module mod_proxy</H1>
d24 3
a26 4
This module is contained in the <CODE>mod_proxy.c</CODE> file for Apache 1.1.x,
or the <CODE>modules/proxy</CODE> subdirectory for Apache 1.2, and
is not compiled in by default. It provides for an <STRONG>HTTP
1.0</STRONG> caching proxy 
d28 1
a28 2
questions are addressed <A HREF="#configs">after the directive
descriptions</A>.
d30 3
a32 3
<H3>Note:</H3>
<P>This module was experimental in Apache 1.1.x. As of Apache 1.2, mod_proxy
stability is <EM>greatly</EM> improved.<P>
d34 1
a34 1
<H2>Summary</H2>
d38 4
a41 4
<CODE>FTP</CODE>,
<CODE>CONNECT</CODE> (for SSL),
<CODE>HTTP/0.9</CODE>, and
<CODE>HTTP/1.0</CODE>.
d45 27
a71 56
<H2>Directives</H2>
<UL>
<LI><A HREF="#proxyrequests">ProxyRequests</A>
<LI><A HREF="#proxyremote">ProxyRemote</A>
<LI><A HREF="#proxypass">ProxyPass</A>
<LI><A HREF="#proxypassreverse">ProxyPassReverse</A>
<LI><A HREF="#proxyblock">ProxyBlock</A>
<LI><A HREF="#allowconnect">AllowCONNECT</A>
<LI><A HREF="#proxyreceivebuffersize">ProxyReceiveBufferSize</A>
<LI><A HREF="#noproxy">NoProxy</A>
<LI><A HREF="#proxydomain">ProxyDomain</A>
<LI><A HREF="#proxyvia">ProxyVia</A>
<LI><A HREF="#cacheroot">CacheRoot</A>
<LI><A HREF="#cachesize">CacheSize</A>
<LI><A HREF="#cachemaxexpire">CacheMaxExpire</A>
<LI><A HREF="#cachedefaultexpire">CacheDefaultExpire</A>
<LI><A HREF="#cachelastmodifiedfactor">CacheLastModifiedFactor</A>
<LI><A HREF="#cachegcinterval">CacheGcInterval</A>
<LI><A HREF="#cachedirlevels">CacheDirLevels</A>
<LI><A HREF="#cachedirlength">CacheDirLength</A>
<LI><A HREF="#cacheforcecompletion">CacheForceCompletion</A>
<LI><A HREF="#nocache">NoCache</A>
</UL>

<HR>

<H2><A NAME="proxyrequests">ProxyRequests</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyRequests <EM>on/off</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>ProxyRequests Off</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyRequests is only available in
Apache 1.1 and later.<P>
d74 2
a75 4
server. Setting ProxyRequests to 'off' does not disable use of the <A
HREF="#proxypass">ProxyPass</A> directive.

<HR>
d77 7
a83 30
<H2><A NAME="proxyremote">ProxyRemote</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyRemote <EM>&lt;match&gt; &lt;remote-server&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyRemote is only available in
Apache 1.1 and later.<P>
d91 1
a91 1
<PRE>
d93 1
a93 1
</PRE>
d97 1
a97 1
<P>
d99 1
a99 1
<PRE>
d103 1
a103 1
</PRE>
d109 7
a115 32
<HR>

<H2><A NAME="proxypass">ProxyPass</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyPass <EM>&lt;path&gt; &lt;url&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyPass is only available in
Apache 1.1 and later.<P>
a120 118
<P>
Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
<PRE>
   ProxyPass /mirror/foo/ http://foo.com/
</PRE>
will cause a local request for the
&lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be
internally converted into a proxy request to
&lt;<SAMP>http://foo.com/bar</SAMP>&gt;.

<HR>

<H2><A NAME="proxypassreverse">ProxyPassReverse</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyPassReverse <EM>&lt;path&gt; &lt;url&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyPassReverse is only available in
Apache 1.3b6 and later.<P>

This directive lets Apache adjust the URL in the <TT>Location</TT> header on
HTTP redirect responses. For instance this is essential when Apache is used as
a reverse proxy to avoid by-passing the reverse proxy because of HTTP
redirects on the backend servers which stay behind the reverse proxy.
<P>
&lt;path&gt; is the name of a local virtual path.<BR>
&lt;url&gt; is a partial URL for the remote server - the same way they are
used for the <TT>ProxyPass</TT> directive.
<P>
Example:<BR>
Suppose the local server has address <SAMP>http://wibble.org/</SAMP>; then
<PRE>
   ProxyPass         /mirror/foo/ http://foo.com/
   ProxyPassReverse  /mirror/foo/ http://foo.com/
</PRE>
will not only cause a local request for the
&lt;<SAMP>http://wibble.org/mirror/foo/bar</SAMP>&gt; to be internally
converted into a proxy request to &lt;<SAMP>http://foo.com/bar</SAMP>&gt; (the
functionality <SAMP>ProxyPass</SAMP> provides here). It also takes care of
redirects the server foo.com sends: when <SAMP>http://foo.com/bar</SAMP> is
redirected by him to <SAMP>http://foo.com/quux</SAMP> Apache adjusts this to
<SAMP>http://wibble.org/mirror/foo/quux</SAMP> before forwarding the HTTP
redirect response to the client. 
<P>
Note that this <SAMP>ProxyPassReverse</SAMP> directive can also by used in
conjunction with the proxy pass-through feature ("<SAMP>RewriteRule ...
[P]</SAMP>") from
<A
 HREF="mod_rewrite.html#RewriteRule"
><TT>mod_rewrite</TT></A> because its doesn't depend on a corresponding
<SAMP>ProxyPass</SAMP> directive.

<HR>

<H2><A NAME="allowconnect">AllowCONNECT</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> AllowCONNECT <EM>&lt;port list&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM><SAMP>AllowCONNECT</SAMP> 443 563</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> <SAMP>AllowCONNECT</SAMP> is only
available in Apache 1.3.2 and later.<P>

The <SAMP>AllowCONNECT</SAMP> directive specifies a list of port numbers
to which the proxy <SAMP>CONNECT</SAMP> method may connect.
Today's browsers use this method when a <EM>https</EM> connection
is requested and proxy tunneling over <EM>http</EM> is in effect.<BR>
By default, only the default https port (443) and the default
snews port (563) are enabled. Use the <SAMP>AllowCONNECT</SAMP>
directive to overrride this default and allow connections to the
listed ports only.

<HR>
d122 14
a135 30
<H2><A NAME="proxyblock">ProxyBlock</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyBlock <EM>&lt;word/host/domain list&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyBlock is only available in
Apache 1.2 and later.<P>
d139 1
a139 1
hosts or domains are <EM>blocked</EM> by the proxy server. The proxy module
d143 3
a145 3
<PRE>
  ProxyBlock joes-garage.com some-host.co.uk rocky.wotsamattau.edu
</PRE>
d147 1
a147 1
'rocky.wotsamattau.edu' would also be matched if referenced by IP address.<P>
d149 1
a149 1
Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>
d153 1
a153 1
<PRE>
d155 1
a155 1
</PRE>
d159 7
a165 354
<HR>

<H2><A NAME="proxyreceivebuffersize">ProxyReceiveBufferSize</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyReceiveBufferSize <EM>&lt;bytes&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyReceiveBufferSize is only available in
Apache 1.3 and later.<P>

The ProxyReceiveBufferSize directive specifies an explicit network buffer size
for outgoing HTTP and FTP connections, for increased throughput.  It has to be
greater than 512 or set to 0 to indicate that the system's default buffer size
should be used. 

<P>
Example:

<PRE>
  ProxyReceiveBufferSize 2048
</PRE>

<HR>

<H2><A NAME="noproxy">NoProxy</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> NoProxy { <A HREF="#domain"><EM>&lt;Domain&gt;</EM></A>
                                 | <A HREF="#subnet"><EM>&lt;SubNet&gt;</EM></A>
				 | <A HREF="#ipaddr"><EM>&lt;IpAddr&gt;</EM></A>
				 | <A HREF="#hostname"><EM>&lt;Hostname&gt;</EM></A>
				 } <BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> NoProxy is only available in
Apache 1.3 and later.<P>

This directive is only useful for Apache proxy servers within intranets.
The NoProxy directive specifies a list of subnets, IP addresses, hosts
and/or domains, separated by spaces. A request to a host which matches
one or more of these is always served directly, without forwarding to
the configured ProxyRemote proxy server(s).
<P>
Example:

<PRE>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
</PRE>
The arguments to the NoProxy directive are one of the following type list:
   <DL>
    <!-- ===================== Domain ======================= -->
    <A NAME="domain">
    <DT><EM>Domain</EM></A>
    <DD>A <EM>Domain</EM> is a partially qualified DNS domain name, preceded
        by a period.
        It represents a list of hosts which logically belong to the same DNS
        domain or zone (<EM>i.e.</EM>, the suffixes of the hostnames are all ending in 
        <EM>Domain</EM>).<BR>
		Examples: <SAMP>.com</SAMP>   <SAMP>.apache.org.</SAMP><BR>
        To distinguish <EM>Domain</EM>s from <A HREF="#hostname"><EM>Hostname</EM></A>s (both
        syntactically and semantically; a DNS domain can have a DNS A record,
        too!), <EM>Domain</EM>s are always written
        with a leading period.<BR>
        Note: Domain name comparisons are done without regard to the case,
        and <EM>Domain</EM>s are always assumed to be anchored in the root 
        of the DNS tree, therefore two domains <SAMP>.MyDomain.com</SAMP> and
        <SAMP>.mydomain.com.</SAMP> (note the trailing period) are
        considered equal. Since a domain comparison does not involve a DNS
	lookup, it is much more efficient than subnet comparison.

    <!-- ===================== SubNet ======================= -->
    <A NAME="subnet">
    <DT><EM>SubNet</EM></A>
    <DD>A <EM>SubNet</EM> is a partially qualified internet address in
        numeric (dotted quad) form, optionally followed by a slash and the
        netmask, specified as the number of significant bits in the
        <EM>SubNet</EM>. It is used to represent a subnet of hosts which can
        be reached over a common network interface. In the absence of the
        explicit net mask it is assumed that omitted (or zero valued)
        trailing digits specify the mask. (In this case, the netmask can
        only be multiples of 8 bits wide.)<BR>
        Examples:
        <DL>
         <DT><SAMP>192.168</SAMP> or <SAMP>192.168.0.0</SAMP>
         <DD>the subnet 192.168.0.0 with an implied netmask of 16 valid bits
             (sometimes used in the netmask form <SAMP>255.255.0.0</SAMP>)
         <DT><SAMP>192.168.112.0/21</SAMP>
         <DD>the subnet <SAMP>192.168.112.0/21</SAMP> with a netmask of 21
             valid bits (also used in the form 255.255.248.0)
        </DL>
		As a degenerate case, a <EM>SubNet</EM> with 32 valid bits is the
        equivalent to an <EM>IPAddr</EM>, while a <EM>SubNet</EM> with zero
        valid bits (<EM>e.g.</EM>, 0.0.0.0/0) is the same as the constant
        <EM>_Default_</EM>, matching any IP address. 

    <!-- ===================== IPAddr ======================= -->
    <A NAME="ipaddr">
    <DT><EM>IPAddr</EM></A>
    <DD>A <EM>IPAddr</EM> represents a fully qualified internet address in
        numeric (dotted quad) form. Usually, this address represents a
        host, but there need not necessarily be a DNS domain name
        connected with the address.<BR>
		Example: 192.168.123.7<BR>
        Note: An <EM>IPAddr</EM> does not need to be resolved by the DNS
	system, so it can result in more effective apache performance.
        <P><STRONG>See Also:</STRONG>
	<A HREF="../dns-caveats.html">DNS Issues</A></P>

    <!-- ===================== Hostname ======================= -->
    <A NAME="hostname">
    <DT><EM>Hostname</EM></A>
    <DD>A <EM>Hostname</EM> is a fully qualified DNS domain name which can
        be resolved to one or more <A
	HREF="#ipaddr"><EM>IPAddrs</EM></A> via the DNS domain name service. 
        It represents a logical host (in contrast to
	<A HREF="#domain"><EM>Domain</EM></A>s, see 
        above) and must be resolvable to at least one <A
	HREF="#ipaddr"><EM>IPAddr</EM></A> (or often to a list of hosts
	with different <A HREF="#ipaddr"><EM>IPAddr</EM></A>'s).<BR> 
		Examples: <SAMP>prep.ai.mit.edu</SAMP>
                  <SAMP>www.apache.org.</SAMP><BR>
        Note: In many situations, it is more effective to specify an
        <A HREF="#ipaddr"><EM>IPAddr</EM></A> in place of a
	<EM>Hostname</EM> since a DNS lookup 
        can be avoided. Name resolution in Apache can take a remarkable deal
        of time when the connection to the name server uses a slow PPP
        link.<BR>
        Note: <EM>Hostname</EM> comparisons are done without regard to the case,
        and <EM>Hostname</EM>s are always assumed to be anchored in the root
        of the DNS tree, therefore two hosts <SAMP>WWW.MyDomain.com</SAMP>
        and <SAMP>www.mydomain.com.</SAMP> (note the trailing period) are
        considered equal.<BR>
<P><STRONG>See Also:</STRONG>
<A HREF="../dns-caveats.html">DNS Issues</A></P>
   </DL>

<HR>

<H2><A NAME="proxydomain">ProxyDomain</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyDomain <EM>&lt;Domain&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyDomain is only available in
Apache 1.3 and later.<P>

This directive is only useful for Apache proxy servers within intranets.
The ProxyDomain directive specifies the default domain which the apache
proxy server will belong to. If a request to a host without a domain name
is encountered, a redirection response to the same host
with the configured <EM>Domain</EM> appended will be generated. 
<P>
Example:

<PRE>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
  ProxyDomain     .mycompany.com
</PRE>

<HR>

<H2><A NAME="proxyvia">ProxyVia</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> ProxyVia { <EM>off</EM>
                                       | <EM>on</EM>
				       | <EM>full</EM>
				       | <EM>block</EM>
				       }<BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>ProxyVia off</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> ProxyVia is only available in
Apache 1.3.2 and later.<P>

This directive controls the use of the <SAMP>Via:</SAMP> HTTP header
by the proxy. Its intended use is to control the flow of of proxy
requests along a chain of proxy servers.
See RFC2068 (HTTP/1.1) for an explanation of <SAMP>Via:</SAMP> header lines.<UL>
<LI>If set to <EM>off</EM>, which is the default, no special
processing is performed. If a request or reply contains a <SAMP>Via:</SAMP> header,
it is passed through unchanged.
<LI>If set to <EM>on</EM>, each request and reply will get a <SAMP>Via:</SAMP> header
line added for the current host.
<LI>If set to <EM>full</EM>, each generated <SAMP>Via:</SAMP> header line will
additionally have the Apache server version shown as a <SAMP>Via:</SAMP> comment field.
<LI>If set to <EM>block</EM>, every proxy request will have all its
<SAMP>Via:</SAMP> header lines removed. No new <SAMP>Via:</SAMP> header will be generated.
</UL>

<HR>

<H2><A NAME="cacheforcecompletion">CacheForceCompletion</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheForceCompletion <EM>&lt;percentage&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>90</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheForceCompletion is only available in
Apache 1.3.1 and later.<P>

If an http transfer that is being cached is cancelled, the proxy module will
complete the transfer to cache if more than the percentage specified has
already been transferred.<P>

This is a percentage, and must be a number between 1 and 100, or 0 to use
the default.  100 will cause a document to be cached only if the transfer
was allowed to complete.  A number between 60 and 90 is recommended.

<HR>

<H2><A NAME="cacheroot">CacheRoot</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheRoot <EM>&lt;directory&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheRoot is only available in
Apache 1.1 and later.<P>
d168 2
a169 8
writable by the httpd server.
(see the <A HREF="core.html#user"><CODE>User</CODE></A> directive).<BR>
Setting <CODE>CacheRoot</CODE> enables proxy cacheing; without defining
a <CODE>CacheRoot</CODE>, proxy functionality will be available
if <CODE>ProxyRequests</CODE> are set to <CODE>On</CODE>, but no
cacheing will be available.

<HR>
d171 8
a178 30
<H2><A NAME="cachesize">CacheSize</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheSize <EM>&lt;size&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheSize 5</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheSize is only available in
Apache 1.1 and later.<P>
d180 1
a180 1
Sets the desired space usage of the cache, in KB (1024-byte units). Although
d182 1
a182 5
until the usage is at or below this setting.<BR>
Depending on the expected proxy traffic volume and <CODE>CacheGcInterval</CODE>,
use a value which is at least 20 to 40 % lower than the available space.

<HR>
d184 7
a190 30
<H2><A NAME="cachegcinterval">CacheGcInterval</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheGcInterval <EM>&lt;time&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheGcinterval is only available in
Apache 1.1 and later.<P>
d193 1
a193 12
usage is greater than that set by CacheSize. Note that &lt;time&gt; accepts a
float value, you could for example use <CODE>CacheGcInterval 1.5</CODE> to
check the cache every 90 minutes. (If unset, no garbage collection will
be performed, and the cache will grow indefinitely.)
Note also that the larger the <CODE>CacheGcInterval</CODE>, the more
extra space beyond the configured <CODE>CacheSize</CODE> will be
needed for the cache between garbage collections.<BR> <!--
Note that due to a design flaw, Apache does not automatically force a
garbage collection when the available space on the file system where
the cache resides is exhausted. -->

<HR>
d195 8
a202 30
<H2><A NAME="cachemaxexpire">CacheMaxExpire</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheMaxExpire <EM>&lt;time&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheMaxExpire 24</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheMaxExpire is only available in
Apache 1.1 and later.<P>
d209 8
a216 32
<HR>

<H2><A NAME="cachelastmodifiedfactor">CacheLastModifiedFactor</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheLastModifiedFactor <EM>&lt;factor&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheLastModifiedFactor 0.1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheLastModifiedFactor is only available in
Apache 1.1 and later.<P>
d220 1
a220 1
<PRE>
d222 1
a222 1
</PRE>
d226 1
a226 1
<P>If the expiry-period would be longer than that set by CacheMaxExpire,
d229 8
a236 32
<HR>

<H2><A NAME="cachedirlevels">CacheDirLevels</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDirLevels <EM>&lt;levels&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDirLevels 3</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDirLevels is only available in
Apache 1.1 and later.<P>
d241 8
a248 32
<HR>

<H2><A NAME="cachedirlength">CacheDirLength</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDirLength <EM>&lt;length&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDirLength 1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDirLength is only available in
Apache 1.1 and later.<P>
d252 8
a259 32
<HR>

<H2><A NAME="cachedefaultexpire">CacheDefaultExpire</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> CacheDefaultExpire <EM>&lt;time&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <CODE>CacheDefaultExpire 1</CODE><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> CacheDefaultExpire is only available in
Apache 1.1 and later.<P>
d263 2
a264 2
<A HREF="#cachemaxexpire">CacheMaxExpire</A> does <STRONG>not</STRONG>
override this setting.
d266 7
a272 32
<HR>

<H2><A NAME="nocache">NoCache</A></H2>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> NoCache <EM>&lt;word/host/domain list&gt;</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> <EM>None</EM><BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Override"
 REL="Help"
><STRONG>Override:</STRONG></A> <EM>Not applicable</EM><BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Base<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_proxy<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> NoCache is only available in
Apache 1.1 and later.<P>
d276 1
a276 1
domains are <EM>not</EM> cached by the proxy server. The proxy module will
d280 3
a282 3
<PRE>
  NoCache joes-garage.com some-host.co.uk bullwinkle.wotsamattau.edu
</PRE>
d285 1
a285 1
address.<P>
d287 1
a287 1
Note that 'wotsamattau' would also be sufficient to match 'wotsamattau.edu'.<P>
d291 1
a291 1
<PRE>
d293 1
a293 1
</PRE>
d295 1
a295 1
disables caching completely.<P>
d297 1
a297 1
<HR>
d299 1
a299 1
<H2><A NAME="configs">Common configuration topics</A></H2>
d301 8
a308 9
<UL>
<LI><A HREF="#access">Controlling access to your proxy</A>
<LI><A HREF="#shortname">Using Netscape hostname shortcuts</A>
<LI><A HREF="#mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A>
<LI><A HREF="#startup">Why does Apache start more slowly when using the
        proxy module?</A>
<LI><A HREF="#socks">Can I use the Apache proxy module with my SOCKS proxy?</A>
<LI><A HREF="#intranet">What other functions are useful for an intranet proxy server?</A>
</UL>
d310 1
a310 1
<H2><A NAME="access">Controlling access to your proxy</A></H2>
d313 1
a313 1
control block using the following example:<P>
d315 1
a315 1
<PRE>
d317 1
d321 1
d323 1
a323 1
</PRE><P>
d326 1
a326 1
for all possible URLs in Apache versions earlier than 1.2b10.<P>
d328 1
a328 1
<H2><A NAME="shortname">Using Netscape hostname shortcuts</A></H2>
d331 3
a333 3
hostname shortcuts to be used. It's available from the
<A HREF="http://www.apache.org/dist/contrib/patches/1.2/netscapehost.patch"
><SAMP>contrib/patches/1.2</SAMP></A> directory on the Apache Web site.<P>
d335 1
a335 1
<H2><A NAME="mimetypes">Why doesn't file type <EM>xxx</EM> download via FTP?</A></H2>
d338 2
a339 2
<EM>application/octet-stream</EM> in your proxy's mime.types configuration
file. A useful line can be<P>
d341 1
a341 1
<PRE>
d343 1
a343 8
</PRE>

<H2><A NAME="type">How can I force an FTP ASCII download of File <EM>xxx</EM>?</A></H2>

In the rare situation where you must download a specific file using the FTP
<STRONG>ASCII</STRONG> transfer method (while the default transfer is in
<STRONG>binary</STRONG> mode), you can override mod_proxy's default by
suffixing the request with <SAMP>;type=a</SAMP> to force an ASCII transfer.<P>
d345 2
a346 2
<H2><A NAME="startup">Why does Apache start more slowly when using the
        proxy module?</A></H2>
d348 1
a348 1
If you're using the <CODE>ProxyBlock</CODE> or <CODE>NoCache</CODE>
d351 1
a351 1
depending on the speed with which the hostname lookups occur.<P>
d353 1
a353 1
<H2><A NAME="socks">Can I use the Apache proxy module with my SOCKS proxy?</A></H2>
d355 6
a360 6
Yes. Just build Apache with the rule <CODE>SOCKS4=yes</CODE> in your
<EM>Configuration</EM> file, and follow the instructions there. SOCKS5
capability can be added in a similar way (there's no <CODE>SOCKS5</CODE>
rule yet), so use the <CODE>EXTRA_LDFLAGS</CODE> definition, or build Apache
normally and run it with the <EM>runsocks</EM> wrapper provided with SOCKS5,
if your OS supports dynamically linked libraries.<P>
d363 1
a363 1
The problem was solved by upgrading to SOCKS 4.3.<P>
d367 1
a367 19
configuration.<P>

<H2><A NAME="intranet">What other functions are useful for an intranet proxy server?</A></H2>

<P>An Apache proxy server situated in an intranet needs to forward external
requests through the company's firewall. However, when it has to access
resources within the intranet, it can bypass the firewall when accessing
hosts. The <A HREF="#noproxy">NoProxy</A> directive is useful for specifying
which hosts belong to the intranet and should be accessed directly.</P>

<P>Users within an intranet tend to omit the local domain name from their
WWW requests, thus requesting "http://somehost/" instead of
"http://somehost.my.dom.ain/". Some commercial proxy servers let them get
away with this and simply serve the request, implying a configured
local domain. When the <A HREF="#proxydomain">ProxyDomain</A> directive
is used and the server is <A HREF="#proxyrequests">configured for
proxy service</A>, Apache can return a redirect response and send the client
to the correct, fully qualified, server address. This is the preferred method
since the user's bookmark files will then contain fully qualified hosts.</P>
a369 1

d371 1
a371 1
 Apache HTTP Server Version 1.3
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 159
a159 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d161 196
a356 3
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />
d358 3
a360 3
    <title>Apache module mod_proxy</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->
d362 1
a362 4
  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 
d364 1
a364 2
      <h3>Apache HTTP Server Version 1.3</h3>
    </div>
d366 1
d368 3
a370 1
    <h1 align="CENTER">Apache module mod_proxy</h1>
d372 1
a372 2
    <p>This module provides for an <strong>HTTP 1.1</strong>
    caching proxy server.</p>
d374 1
a374 10
    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a> mod_proxy.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    proxy_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.1 and later.</p>
d376 35
a410 7
    <h2>Summary</h2>
    This module implements a proxy/cache for Apache. It implements
    proxying capability for <code>FTP</code>, <code>CONNECT</code>
    (for SSL), <code>HTTP/0.9</code>, <code>HTTP/1.0</code>, and
    (as of Apache 1.3.23) <code>HTTP/1.1</code>.
    The module can be configured to connect to other proxy modules
    for these and other protocols. 
d412 2
a413 2
    <p>This module was experimental in Apache 1.1.x. As of Apache
    1.2, mod_proxy stability is <em>greatly</em> improved.</p>
d415 3
a417 4
    <p><strong>Warning:</strong> Do not enable proxying with <a
    href="#proxyrequests">ProxyRequests</a> until you have <a
    href="#access">secured your server</a>.  Open proxy servers are
    dangerous both to your network and to the Internet at large.</p>
d419 1
a419 1
    <h2>Directives</h2>
d421 42
a462 2
    <ul>
      <li><a href="#proxyrequests">ProxyRequests</a></li>
d464 132
a595 1
      <li><a href="#proxyremote">ProxyRemote</a></li>
d597 5
a601 1
      <li><a href="#proxypass">ProxyPass</a></li>
d603 1
a603 1
      <li><a href="#proxypassreverse">ProxyPassReverse</a></li>
d605 445
a1049 1
      <li><a href="#proxyblock">ProxyBlock</a></li>
d1051 3
a1053 1
      <li><a href="#allowconnect">AllowCONNECT</a></li>
d1055 2
a1056 1
      <li><a href="#proxyreceivebuffersize">ProxyReceiveBufferSize</a></li>
d1058 1
a1058 1
      <li><a href="#proxyiobuffersize">ProxyIOBufferSize</a></li>
d1060 1
a1060 1
      <li><a href="#noproxy">NoProxy</a></li>
d1062 3
a1064 26
      <li><a href="#proxydomain">ProxyDomain</a></li>

      <li><a href="#proxyvia">ProxyVia</a></li>

      <li><a href="#cacheroot">CacheRoot</a></li>

      <li><a href="#cachesize">CacheSize</a></li>

      <li><a href="#cachemaxexpire">CacheMaxExpire</a></li>

      <li><a href="#cachedefaultexpire">CacheDefaultExpire</a></li>

      <li><a
      href="#cachelastmodifiedfactor">CacheLastModifiedFactor</a></li>

      <li><a href="#cachegcinterval">CacheGcInterval</a></li>

      <li><a href="#cachedirlevels">CacheDirLevels</a></li>

      <li><a href="#cachedirlength">CacheDirLength</a></li>

      <li><a
      href="#cacheforcecompletion">CacheForceCompletion</a></li>

      <li><a href="#nocache">NoCache</a></li>
    </ul>
d1066 1
a1066 2
    <h2><a id="configs" name="configs">Common configuration
    topics</a></h2>
d1068 1
a1068 3
    <ul>
      <li><a href="#access">Controlling access to your
      proxy</a></li>
d1070 1
a1070 2
      <li><a href="#shortname">Using Netscape hostname
      shortcuts</a></li>
d1072 9
a1080 2
      <li><a href="#mimetypes">Why doesn't file type <em>xxx</em>
      download via FTP?</a></li>
d1082 1
a1082 2
      <li><a href="#type">How can I force an FTP ASCII
      download of File <em>xxx</em>?</a></li>
d1084 2
a1085 2
      <li><a href="#percent2fhack">How can I access
      FTP files outside of my home directory?</a></li>
d1087 1
a1087 18
      <li><a href="#ftppass">How can I hide the
      FTP cleartext password in my browser's URL line?</a></li>

      <li><a href="#startup">Why does Apache start more slowly when
      using the proxy module?</a></li>

      <li><a href="#socks">Can I use the Apache proxy module with
      my SOCKS proxy?</a></li>

      <li><a href="#intranet">What other functions are useful for
      an intranet proxy server?</a></li>
    </ul>

    <h2><a id="access" name="access">Controlling access to your
    proxy</a></h2>
    You can control who can access your proxy via the normal
    &lt;Directory&gt; control block using the following example: 
<pre>
d1089 3
a1091 3
Order Deny,Allow
Deny from all
Allow from yournetwork.example.com
d1093 1
a1093 383
</pre>

    <p>A &lt;Files&gt; block will also work, and is the only method
    known to work for all possible URLs in Apache versions earlier
    than 1.2b10.</p>

    <p>For more information, see <a
    href="mod_access.html">mod_access</a>.</p>

    <h2><a id="shortname" name="shortname">Using Netscape hostname
    shortcuts</a></h2>
    There is an optional patch to the proxy module to allow
    Netscape-like hostname shortcuts to be used. It's available
    from the <a
    href="http://www.apache.org/dist/httpd/contrib/patches/1.2/netscapehost.patch">
    <samp>contrib/patches/1.2</samp></a> directory on the Apache
    Web site. 

    <h2><a id="mimetypes" name="mimetypes">Why doesn't file type
    <em>xxx</em> download via FTP?</a></h2>
    You probably don't have that particular file type defined as
    <em>application/octet-stream</em> in your proxy's mime.types
    configuration file. A useful line can be 
<pre>
application/octet-stream        bin dms lha lzh exe class tgz taz
</pre>

    <h2><a id="type" name="type">How can I force an FTP ASCII
    download of File <em>xxx</em>?</a></h2>
    In the rare situation where you must download a specific file
    using the FTP <strong>ASCII</strong> transfer method (while the
    default transfer is in <strong>binary</strong> mode), you can
    override mod_proxy's default by suffixing the request with
    <samp>;type=a</samp> to force an ASCII transfer.
    (FTP Directory listings are always executed in ASCII mode, however.)

    <h2><a id="percent2fhack" name="percent2fhack">How can I access
    FTP files outside of my home directory?</a></h2>
    <p>
     A FTP URI is interpreted relative to the home directory of
     the user who is logging in. Alas, to reach higher directory
     levels you cannot use  /../, as the dots are interpreted by the
     browser and not actually sent to the FTP server. To address
     this problem, the so called "Squid %2f hack" was implemented in
     the Apache FTP proxy; it is a solution which is also used by
     other popular proxy servers like the
     <a href="http://www.squid-cache.org/">Squid Proxy Cache</a>.
     By prepending /%2f to the path of your request, you can make
     such a proxy change the FTP starting directory to / (instead
     of the home directory). <br />
     <b>Example:</b> To retrieve the file <code>/etc/motd</code>,
     you would use the URL <blockquote>
     <code>ftp://<em>user@@host</em>/%2f/etc/motd</code></blockquote>
    </p>

    <h2><a id="ftppass" name="ftppass">How can I hide the FTP
    cleartext password in my browser's URL line?</a></h2>
    <p>
     To log in to an FTP server by username and password, Apache
     uses different strategies.
     In absense of a user name and password in the URL altogether,
     Apache sends an anomymous login to the FTP server, i.e.,
     <blockquote><code>
       user: anonymous<br />
       password: apache_proxy@@
     </code></blockquote>
     This works for all popular FTP servers which are configured for
     anonymous access.<br>
     For a personal login with a specific username, you can embed
     the user name into the URL, like in:
     <code>ftp://<em>username@@host</em>/myfile</code>. If the FTP server
     asks for a password when given this username (which it should),
     then Apache will reply with a [401 Authorization required] response,
     which causes the Browser to pop up the username/password dialog.
     Upon entering the password, the connection attempt is retried,
     and if successful, the requested resource is presented.
     The advantage of this procedure is that your browser does not
     display the password in cleartext (which it would if you had used
     <code>ftp://<em>username:password@@host</em>/myfile</code> in
     the first place).
     <br />
     <b>Note</b> that the password which is transmitted in such a way
     is not encrypted on its way. It travels between your browser and
     the Apache proxy server in a base64-encoded cleartext string, and
     between the Apache proxy and the FTP server as plaintext. You should
     therefore think twice before accessing your FTP server via HTTP
     (or before accessing your personal files via FTP at all!) When
     using unsecure channels, an eavesdropper might intercept your
     password on its way.
    </p>


    <h2><a id="startup" name="startup">Why does Apache start more
    slowly when using the proxy module?</a></h2>
    If you're using the <code>ProxyBlock</code> or
    <code>NoCache</code> directives, hostnames' IP addresses are
    looked up and cached during startup for later match test. This
    may take a few seconds (or more) depending on the speed with
    which the hostname lookups occur. 

    <h2><a id="socks" name="socks">Can I use the Apache proxy
    module with my SOCKS proxy?</a></h2>
    Yes. Just build Apache with the rule <code>SOCKS4=yes</code> in
    your <em>Configuration</em> file, and follow the instructions
    there. SOCKS5 capability can be added in a similar way (there's
    no <code>SOCKS5</code> rule yet), so use the
    <code>EXTRA_LDFLAGS</code> definition, or build Apache normally
    and run it with the <em>runsocks</em> wrapper provided with
    SOCKS5, if your OS supports dynamically linked libraries. 

    <p>Some users have reported problems when using SOCKS version
    4.2 on Solaris. The problem was solved by upgrading to SOCKS
    4.3.</p>

    <p>Remember that you'll also have to grant access to your
    Apache proxy machine by permitting connections on the
    appropriate ports in your SOCKS daemon's configuration.</p>

    <h2><a id="intranet" name="intranet">What other functions are
    useful for an intranet proxy server?</a></h2>

    <p>An Apache proxy server situated in an intranet needs to
    forward external requests through the company's firewall.
    However, when it has to access resources within the intranet,
    it can bypass the firewall when accessing hosts. The <a
    href="#noproxy">NoProxy</a> directive is useful for specifying
    which hosts belong to the intranet and should be accessed
    directly.</p>

    <p>Users within an intranet tend to omit the local domain name
    from their WWW requests, thus requesting "http://somehost/"
    instead of "http://somehost.my.dom.ain/". Some commercial proxy
    servers let them get away with this and simply serve the
    request, implying a configured local domain. When the <a
    href="#proxydomain">ProxyDomain</a> directive is used and the
    server is <a href="#proxyrequests">configured for proxy
    service</a>, Apache can return a redirect response and send the
    client to the correct, fully qualified, server address. This is
    the preferred method since the user's bookmark files will then
    contain fully qualified hosts.</p>
    <hr />

    <h2><a id="proxyrequests"
    name="proxyrequests">ProxyRequests</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyRequests
    on|off<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>ProxyRequests
    Off</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyRequests is
    only available in Apache 1.1 and later. 

    <p>This allows or prevents Apache from functioning as a proxy
    server. Setting ProxyRequests to 'off' does not disable use of
    the <a href="#proxypass">ProxyPass</a> directive.</p>

    <p><strong>Warning:</strong> Do not enable proxying until you have
    <a href="#access">secured your server</a>.  Open proxy servers are
    dangerous both to your network and to the Internet at large.</p>

    <hr />

    <h2><a id="proxyremote" name="proxyremote">ProxyRemote</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyRemote <em>match
    remote-server</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyRemote is
    only available in Apache 1.1 and later. 

    <p>This defines remote proxies to this proxy. <em>match</em> is
    either the name of a URL-scheme that the remote server
    supports, or a partial URL for which the remote server should
    be used, or '*' to indicate the server should be contacted for
    all requests. <em>remote-server</em> is a partial URL for the
    remote server. Syntax:</p>
<pre>
  remote-server = protocol://hostname[:port]
</pre>
    <em>protocol</em> is the protocol that should be used to
    communicate with the remote server; only "http" is supported by
    this module. 

    <p>Example:</p>
<pre>
  ProxyRemote http://goodguys.com/ http://mirrorguys.com:8000
  ProxyRemote * http://cleversite.com
  ProxyRemote ftp http://ftpproxy.mydomain.com:8080
</pre>
    In the last example, the proxy will forward FTP requests,
    encapsulated as yet another HTTP proxy request, to another
    proxy which can handle them. 
    <hr />

    <h2><a id="proxypass" name="proxypass">ProxyPass</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyPass <em>path
    url</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyPass is
    only available in Apache 1.1 and later. 

    <p>This directive allows remote servers to be mapped into the
    space of the local server; the local server does not act as a
    proxy in the conventional sense, but appears to be a mirror of
    the remote server. <em>path</em> is the name of a local virtual
    path; <em>url</em> is a partial URL for the remote server.</p>

    <p>Suppose the local server has address
    <samp>http://wibble.org/</samp>; then</p>
<pre>
   ProxyPass /mirror/foo/ http://foo.com/
</pre>
    will cause a local request for the
    &lt;<samp>http://wibble.org/mirror/foo/bar</samp>&gt; to be
    internally converted into a proxy request to
    &lt;<samp>http://foo.com/bar</samp>&gt;. 
    <hr />

    <h2><a id="proxypassreverse"
    name="proxypassreverse">ProxyPassReverse</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyPassReverse
    <em>path url</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyPassReverse
    is only available in Apache 1.3b6 and later. 

    <p>This directive lets Apache adjust the URL in the
    <tt>Location</tt> header on HTTP redirect responses. For
    instance this is essential when Apache is used as a reverse
    proxy to avoid by-passing the reverse proxy because of HTTP
    redirects on the backend servers which stay behind the reverse
    proxy.</p>

    <p><em>path</em> is the name of a local virtual path.<br />
     <em>url</em> is a partial URL for the remote server - the same
    way they are used for the <tt>ProxyPass</tt> directive.</p>

    <p>Example:<br />
     Suppose the local server has address
    <samp>http://wibble.org/</samp>; then</p>
<pre>
   ProxyPass         /mirror/foo/ http://foo.com/
   ProxyPassReverse  /mirror/foo/ http://foo.com/
</pre>
    will not only cause a local request for the
    &lt;<samp>http://wibble.org/mirror/foo/bar</samp>&gt; to be
    internally converted into a proxy request to
    &lt;<samp>http://foo.com/bar</samp>&gt; (the functionality
    <samp>ProxyPass</samp> provides here). It also takes care of
    redirects the server foo.com sends: when
    <samp>http://foo.com/bar</samp> is redirected by him to
    <samp>http://foo.com/quux</samp> Apache adjusts this to
    <samp>http://wibble.org/mirror/foo/quux</samp> before
    forwarding the HTTP redirect response to the client. 

    <p>Note that this <samp>ProxyPassReverse</samp> directive can
    also be used in conjunction with the proxy pass-through feature
    ("<samp>RewriteRule ... [P]</samp>") from <a
    href="mod_rewrite.html#RewriteRule"><tt>mod_rewrite</tt></a>
    because its doesn't depend on a corresponding
    <samp>ProxyPass</samp> directive.</p>
    <hr />

    <h2><a id="allowconnect" name="allowconnect">AllowCONNECT</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> AllowCONNECT
    <em>port</em> [<em>port</em>] ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <em><samp>AllowCONNECT</samp> 443 563</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    <samp>AllowCONNECT</samp> is only available in Apache 1.3.2 and
    later. 

    <p>The <samp>AllowCONNECT</samp> directive specifies a list of
    port numbers to which the proxy <samp>CONNECT</samp> method may
    connect. Today's browsers use this method when a <em>https</em>
    connection is requested and proxy tunneling over <em>http</em>
    is in effect.<br />
     By default, only the default https port (443) and the default
    snews port (563) are enabled. Use the <samp>AllowCONNECT</samp>
    directive to override this default and allow connections to
    the listed ports only.</p>
    <hr />

    <h2><a id="proxyblock" name="proxyblock">ProxyBlock</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyBlock
    *|<em>word|host|domain</em> [<em>word|host|domain</em>]
    ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyBlock is
    only available in Apache 1.2 and later. 

    <p>The ProxyBlock directive specifies a list of words, hosts
    and/or domains, separated by spaces. HTTP, HTTPS, and FTP
    document requests to sites whose names contain matched words,
    hosts or domains are <em>blocked</em> by the proxy server. The
    proxy module will also attempt to determine IP addresses of
    list items which may be hostnames during startup, and cache
    them for match test as well. Example:</p>
<pre>
  ProxyBlock joes-garage.com some-host.co.uk rocky.wotsamattau.edu
</pre>
    'rocky.wotsamattau.edu' would also be matched if referenced by
    IP address. 
d1095 2
a1096 2
    <p>Note that 'wotsamattau' would also be sufficient to match
    'wotsamattau.edu'.</p>
d1098 1
a1098 35
    <p>Note also that</p>
<pre>
ProxyBlock *
</pre>
    blocks connections to all sites. 
    <hr />

    <h2><a id="proxyreceivebuffersize"
    name="proxyreceivebuffersize">ProxyReceiveBufferSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyReceiveBufferSize
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    ProxyReceiveBufferSize is only available in Apache 1.3 and
    later. 

    <p>The ProxyReceiveBufferSize directive specifies an explicit
    network buffer size for outgoing HTTP and FTP connections, for
    increased throughput. It has to be greater than 512 or set to 0
    to indicate that the system's default buffer size should be
    used.</p>
d1100 4
a1103 5
    <p>Example:</p>
<pre>
  ProxyReceiveBufferSize 2048
</pre>
    <hr />
d1105 1
a1105 79
    <h2><a id="proxyiobuffersize"
    name="proxyiobuffersize">ProxyIOBufferSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyIOBufferSize
    <em>bytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>8192</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    ProxyIOBufferSize is only available in Apache 1.3.24 and
    later. 

    <p>The ProxyIOBufferSize directive specifies the number of bytes
    that will be read from a remote HTTP or FTP server at one time.
    This directive is different from the ProxyReceiveBufferSize
    directive, which specifies the low level socket buffer size.
    </p>

    <p>
    When a response is received which fits entirely within the IO
    buffer size, the remote HTTP or FTP server socket will be closed
    before an attempt is made to write the response to the client.
    This ensures that the remote server does not remain connected
    unnecessarily while the response is delivered to a slow client.
    A high value for the IO buffer decreases the load on remote HTTP
    and FTP servers, at the expense of greater RAM footprint on the
    proxy.
    </p>

    <p>Example:</p>
<pre>
  ProxyIOBufferSize 131072
</pre>
    <hr />

    <h2><a id="noproxy" name="noproxy">NoProxy</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> NoProxy <a
    href="#domain"><em>Domain</em></a>|<a
    href="#subnet"><em>SubNet</em></a>|<a
    href="#ipaddr"><em>IpAddr</em></a>|<a
    href="#hostname"><em>Hostname</em></a> [<a
    href="#domain"><em>Domain</em></a>|<a
    href="#subnet"><em>SubNet</em></a>|<a
    href="#ipaddr"><em>IpAddr</em></a>|<a
    href="#hostname"><em>Hostname</em></a>] ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> NoProxy is only
    available in Apache 1.3 and later. 

    <p>This directive is only useful for Apache proxy servers
    within intranets. The NoProxy directive specifies a list of
    subnets, IP addresses, hosts and/or domains, separated by
    spaces. A request to a host which matches one or more of these
    is always served directly, without forwarding to the configured
    ProxyRemote proxy server(s).</p>
d1107 3
a1109 148
    <p>Example:</p>
<pre>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
</pre>
    The arguments to the NoProxy directive are one of the following
    type list: 

    <dl>
      <!-- ===================== Domain ======================= -->

      <dt><a id="domain" name="domain"><em>Domain</em></a></dt>

      <dd>A <em>Domain</em> is a partially qualified DNS domain
      name, preceded by a period. It represents a list of hosts
      which logically belong to the same DNS domain or zone
      (<em>i.e.</em>, the suffixes of the hostnames are all ending
      in <em>Domain</em>).<br />
       Examples: <samp>.com</samp> <samp>.apache.org.</samp><br />
       To distinguish <em>Domain</em>s from <a
      href="#hostname"><em>Hostname</em></a>s (both syntactically
      and semantically; a DNS domain can have a DNS A record,
      too!), <em>Domain</em>s are always written with a leading
      period.<br />
       Note: Domain name comparisons are done without regard to the
      case, and <em>Domain</em>s are always assumed to be anchored
      in the root of the DNS tree, therefore two domains
      <samp>.MyDomain.com</samp> and <samp>.mydomain.com.</samp>
      (note the trailing period) are considered equal. Since a
      domain comparison does not involve a DNS lookup, it is much
      more efficient than subnet comparison. 
      <!-- ===================== SubNet ======================= -->
      </dd>

      <dt><a id="subnet" name="subnet"><em>SubNet</em></a></dt>

      <dd>
        A <em>SubNet</em> is a partially qualified internet address
        in numeric (dotted quad) form, optionally followed by a
        slash and the netmask, specified as the number of
        significant bits in the <em>SubNet</em>. It is used to
        represent a subnet of hosts which can be reached over a
        common network interface. In the absence of the explicit
        net mask it is assumed that omitted (or zero valued)
        trailing digits specify the mask. (In this case, the
        netmask can only be multiples of 8 bits wide.)<br />
         Examples: 

        <dl>
          <dt><samp>192.168</samp> or <samp>192.168.0.0</samp></dt>

          <dd>the subnet 192.168.0.0 with an implied netmask of 16
          valid bits (sometimes used in the netmask form
          <samp>255.255.0.0</samp>)</dd>

          <dt><samp>192.168.112.0/21</samp></dt>

          <dd>the subnet <samp>192.168.112.0/21</samp> with a
          netmask of 21 valid bits (also used in the form
          255.255.248.0)</dd>
        </dl>
        As a degenerate case, a <em>SubNet</em> with 32 valid bits
        is the equivalent to an <em>IPAddr</em>, while a
        <em>SubNet</em> with zero valid bits (<em>e.g.</em>,
        0.0.0.0/0) is the same as the constant <em>_Default_</em>,
        matching any IP address. 
        <!-- ===================== IPAddr ======================= -->
      </dd>

      <dt><a id="ipaddr" name="ipaddr"><em>IPAddr</em></a></dt>

      <dd>
        A <em>IPAddr</em> represents a fully qualified internet
        address in numeric (dotted quad) form. Usually, this
        address represents a host, but there need not necessarily
        be a DNS domain name connected with the address.<br />
         Example: 192.168.123.7<br />
         Note: An <em>IPAddr</em> does not need to be resolved by
        the DNS system, so it can result in more effective apache
        performance. 

        <p><strong>See Also:</strong> <a
        href="../dns-caveats.html">DNS Issues</a></p>
        <!-- ===================== Hostname ======================= -->
      </dd>

      <dt><a id="hostname"
      name="hostname"><em>Hostname</em></a></dt>

      <dd>
        A <em>Hostname</em> is a fully qualified DNS domain name
        which can be resolved to one or more <a
        href="#ipaddr"><em>IPAddrs</em></a> via the DNS domain name
        service. It represents a logical host (in contrast to <a
        href="#domain"><em>Domain</em></a>s, see above) and must be
        resolvable to at least one <a
        href="#ipaddr"><em>IPAddr</em></a> (or often to a list of
        hosts with different <a
        href="#ipaddr"><em>IPAddr</em></a>'s).<br />
         Examples: <samp>prep.ai.mit.edu</samp>
        <samp>www.apache.org.</samp><br />
         Note: In many situations, it is more effective to specify
        an <a href="#ipaddr"><em>IPAddr</em></a> in place of a
        <em>Hostname</em> since a DNS lookup can be avoided. Name
        resolution in Apache can take a remarkable deal of time
        when the connection to the name server uses a slow PPP
        link.<br />
         Note: <em>Hostname</em> comparisons are done without
        regard to the case, and <em>Hostname</em>s are always
        assumed to be anchored in the root of the DNS tree,
        therefore two hosts <samp>WWW.MyDomain.com</samp> and
        <samp>www.mydomain.com.</samp> (note the trailing period)
        are considered equal.<br />
         

        <p><strong>See Also:</strong> <a
        href="../dns-caveats.html">DNS Issues</a></p>
      </dd>
    </dl>
    <hr />

    <h2><a id="proxydomain" name="proxydomain">ProxyDomain</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyDomain
    <em>Domain</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyDomain is
    only available in Apache 1.3 and later. 

    <p>This directive is only useful for Apache proxy servers
    within intranets. The ProxyDomain directive specifies the
    default domain which the apache proxy server will belong to. If
    a request to a host without a domain name is encountered, a
    redirection response to the same host with the configured
    <em>Domain</em> appended will be generated.</p>
d1111 3
a1113 7
    <p>Example:</p>
<pre>
  ProxyRemote  *  http://firewall.mycompany.com:81
  NoProxy         .mycompany.com 192.168.112.0/21 
  ProxyDomain     .mycompany.com
</pre>
    <hr />
d1115 1
a1115 363
    <h2><a id="proxyvia" name="proxyvia">ProxyVia</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> ProxyVia
    on|off|full|block<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>ProxyVia
    off</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> ProxyVia is only
    available in Apache 1.3.2 and later. 

    <p>This directive controls the use of the <samp>Via:</samp>
    HTTP header by the proxy. Its intended use is to control the
    flow of of proxy requests along a chain of proxy servers. See
    RFC2068 (HTTP/1.1) for an explanation of <samp>Via:</samp>
    header lines.</p>

    <ul>
      <li>If set to <em>off</em>, which is the default, no special
      processing is performed. If a request or reply contains a
      <samp>Via:</samp> header, it is passed through
      unchanged.</li>

      <li>If set to <em>on</em>, each request and reply will get a
      <samp>Via:</samp> header line added for the current
      host.</li>

      <li>If set to <em>full</em>, each generated <samp>Via:</samp>
      header line will additionally have the Apache server version
      shown as a <samp>Via:</samp> comment field.</li>

      <li>If set to <em>block</em>, every proxy request will have
      all its <samp>Via:</samp> header lines removed. No new
      <samp>Via:</samp> header will be generated.</li>
    </ul>
    <hr />

    <h2><a id="cacheforcecompletion"
    name="cacheforcecompletion">CacheForceCompletion</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheForceCompletion
    <em>percentage</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>90</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheForceCompletion is only available in Apache 1.3.1 and
    later. 

    <p>If an http transfer that is being cached is cancelled, the
    proxy module will complete the transfer to cache if more than
    the percentage specified has already been transferred.</p>

    <p>This is a percentage, and must be a number between 1 and
    100, or 0 to use the default. 100 will cause a document to be
    cached only if the transfer was allowed to complete. A number
    between 60 and 90 is recommended.</p>
    <hr />

    <h2><a id="cacheroot" name="cacheroot">CacheRoot</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheRoot
    <em>directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheRoot is
    only available in Apache 1.1 and later. 

    <p>Sets the name of the directory to contain cache files; this
    must be writable by the httpd server. (see the <a
    href="core.html#user"><code>User</code></a> directive).<br />
     Setting <code>CacheRoot</code> enables proxy cacheing; without
    defining a <code>CacheRoot</code>, proxy functionality will be
    available if <code>ProxyRequests</code> are set to
    <code>On</code>, but no cacheing will be available.</p>
    <hr />

    <h2><a id="cachesize" name="cachesize">CacheSize</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheSize
    <em>kilobytes</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheSize
    5</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheSize is
    only available in Apache 1.1 and later. 

    <p>Sets the desired space usage of the cache, in KB (1024-byte
    units). Although usage may grow above this setting, the garbage
    collection will delete files until the usage is at or below
    this setting.<br />
     Depending on the expected proxy traffic volume and
    <code>CacheGcInterval</code>, use a value which is at least 20
    to 40 % lower than the available space.</p>
    <hr />

    <h2><a id="cachegcinterval"
    name="cachegcinterval">CacheGcInterval</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheGcInterval
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheGcinterval
    is only available in Apache 1.1 and later. 

    <p>Check the cache after the specified number of
    <em>hours</em>, and delete files if the space usage is greater
    than that set by CacheSize. Note that <em>hours</em> accepts a
    float value, you could for example use <code>CacheGcInterval
    1.5</code> to check the cache every 90 minutes. (If unset, no
    garbage collection will be performed, and the cache will grow
    indefinitely.) Note also that the larger the
    <code>CacheGcInterval</code>, the more extra space beyond the
    configured <code>CacheSize</code> will be needed for the cache
    between garbage collections.<br />
     <!-- Note that due to a design flaw, Apache
            does not automatically force a garbage collection when the available
            space on the file system where the cache resides is exhausted. -->
    </p>
    <hr />

    <h2><a id="cachemaxexpire"
    name="cachemaxexpire">CacheMaxExpire</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheMaxExpire
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheMaxExpire
    24</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheMaxExpire
    is only available in Apache 1.1 and later. 

    <p>Specifies the maximum number of <em>hours</em> for which
    cachable HTTP documents will be retained without checking the
    origin server. Thus, documents will be out of date at most this
    number of <em>hours</em> This restriction is enforced even if
    an expiry date was supplied with the document.</p>
    <hr />

    <h2><a id="cachelastmodifiedfactor"
    name="cachelastmodifiedfactor">CacheLastModifiedFactor</a>
    directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheLastModifiedFactor
    <em>factor</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <code>CacheLastModifiedFactor 0.1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheLastModifiedFactor is only available in Apache 1.1 and
    later. 

    <p>If the origin HTTP server did not supply an expiry date for
    the document, then estimate one using the formula</p>
<pre>
  expiry-period = time-since-last-modification * <em>factor</em>
</pre>
    For example, if the document was last modified 10 hours ago,
    and <em>factor</em> is 0.1, then the expiry period will be set
    to 10*0.1 = 1 hour. 

    <p>If the expiry-period would be longer than that set by
    CacheMaxExpire, then the latter takes precedence.</p>
    <hr />

    <h2><a id="cachedirlevels"
    name="cachedirlevels">CacheDirLevels</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDirLevels
    <em>levels</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheDirLevels
    3</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheDirLevels
    is only available in Apache 1.1 and later. 

    <p>CacheDirLevels sets the number of <em>levels</em> of
    subdirectories in the cache. Cached data will be saved this
    many directory levels below CacheRoot.</p>
    <hr />

    <h2><a id="cachedirlength"
    name="cachedirlength">CacheDirLength</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDirLength
    <em>length</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <code>CacheDirLength
    1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> CacheDirLength
    is only available in Apache 1.1 and later. 

    <p>CacheDirLength sets the number of characters in proxy cache
    subdirectory names.</p>
    <hr />

    <h2><a id="cachedefaultexpire"
    name="cachedefaultexpire">CacheDefaultExpire</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> CacheDefaultExpire
    <em>hours</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a>
    <code>CacheDefaultExpire 1</code><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    CacheDefaultExpire is only available in Apache 1.1 and later. 

    <p>If the document is fetched via a protocol that does not
    support expiry times, then use the specified number of
    <em>hours</em> as the expiry time. <a
    href="#cachemaxexpire">CacheMaxExpire</a> does
    <strong>not</strong> override this setting.</p>
    <hr />

    <h2><a id="nocache" name="nocache">NoCache</a> directive</h2>
    <a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> NoCache
    *|<em>word|host|domain</em> [<em>word|host|domain</em>]
    ...<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> <em>None</em><br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> <em>Not
    applicable</em><br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Base<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_proxy<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> NoCache is only
    available in Apache 1.1 and later. 

    <p>The NoCache directive specifies a list of words, hosts
    and/or domains, separated by spaces. HTTP and non-passworded
    FTP documents from matched words, hosts or domains are
    <em>not</em> cached by the proxy server. The proxy module will
    also attempt to determine IP addresses of list items which may
    be hostnames during startup, and cache them for match test as
    well. Example:</p>
<pre>
  NoCache joes-garage.com some-host.co.uk bullwinkle.wotsamattau.edu
</pre>
    'bullwinkle.wotsamattau.edu' would also be matched if
    referenced by IP address. 

    <p>Note that 'wotsamattau' would also be sufficient to match
    'wotsamattau.edu'.</p>
d1117 52
a1168 5
    <p>Note also that</p>
<pre>
NoCache *
</pre>
    disables caching completely. 
d1170 2
a1171 1
    <p>    <hr />
d1173 2
a1174 7
    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

    </p>
  </body>
</html>
@


1.1.1.4
log
@import Apache 1.3.29 and mod_ssl 2.8.16
@
text
@a104 4
      <li><a href="#forwardreverse">Forward and Reverse Proxies</a></li>

      <li><a href="#examples">Basic Examples</a></li>

a132 83
<h2><a name="forwardreverse" id="forwardreverse">Forward and Reverse Proxies</a></h2>
      <p>Apache can be configured in both a <dfn>forward</dfn> and
      <dfn>reverse</dfn> proxy mode.</p>

      <p>An ordinary <dfn>forward proxy</dfn> is an intermediate
      server that sits between the client and the <em>origin
      server</em>.  In order to get content from the origin server,
      the client sends a request to the proxy naming the origin server
      as the target and the proxy then requests the content from the
      origin server and returns it to the client.  The client must be
      specially configured to use the forward proxy to access other
      sites.</p>

      <p>A typical usage of a forward proxy is to provide Internet
      access to internal clients that are otherwise restricted by a
      firewall.  The forward proxy can also use caching to reduce
      network usage.</p>

      <p>The forward proxy is activated using the <code><a
      href="#proxyrequests">ProxyRequests</a></code> directive.
      Because forward proxys allow clients to access arbitrary sites
      through your server and to hide their true origin, it is
      essential that you <a href="#access">secure your server</a> so
      that only authorized clients can access the proxy before
      activating a forward proxy.</p>

      <p>A <dfn>reverse proxy</dfn>, by contrast, appears to the
      client just like an ordinary web server.  No special
      configuration on the client is necessary.  The client makes
      ordinary requests for content in the name-space of the reverse
      proxy.  The reverse proxy then decides where to send those
      requests, and returns the content as if it was itself the
      origin.</p>

      <p>A typical usage of a reverse proxy is to provide Internet
      users access to a server that is behind a firewall.  Reverse
      proxies can also be used to balance load among several back-end
      servers, or to provide caching for a slower back-end server.
      In addition, reverse proxies can be used simply to bring
      several servers into the same URL space.</p>

      <p>A reverse proxy is activated using the <code><a
      href="#proxypass">ProxyPass</a></code> directive or the
      <code>[P]</code> flag to the <code><a
      href="../mod/mod_rewrite.html#rewriterule">RewriteRule</a></code>
      directive.  It is <strong>not</strong> necessary to turn
      <code><a href="#proxyrequests">ProxyRequests</a></code> on in
      order to configure a reverse proxy.</p> 

<h2><a name="examples" id="examples">Basic Examples</a></h2>

    <p>The examples below are only a very basic idea to help you
    get started.  Please read the documentation on the individual
    directives.</p>

    <h3>Forward Proxy</h3><p><code>
    ProxyRequests On<br />
    ProxyVia On<br />
    <br />
    &lt;Directory proxy:*&gt;<br />
    
      Order deny,allow<br />
      Deny from all<br />
      Allow from internal.example.com<br />
    
    &lt;/Directory&gt;<br />
    <br />
    CacheRoot "/usr/local/apache/proxy"<br />
    CacheSize 5<br />
    CacheGcInterval 4<br />
    CacheMaxExpire 24<br />
    CacheLastModifiedFactor 0.1<br />
    CacheDefaultExpire 1<br />
    NoCache a-domain.com another-domain.edu joes.garage-sale.com
    </code></p>

    <h3>Reverse Proxy</h3><p><code>
    ProxyRequests Off<br />
    <br />
    ProxyPass /foo http://foo.example.com/bar<br />
    ProxyPassReverse /foo http://foo.example.com/bar
    </code></p>

a151 12
      <p>Strictly limiting access is essential if you are using a
      forward proxy (using the <code><a
      href="#proxyrequests">ProxyRequests</a></code> directive).
      Otherwise, your server can be used by any client to access
      arbitrary hosts while hiding his or her true identity.  This is
      dangerous both for your network and for the Internet at large.
      When using a reverse proxy (using the <code><a
      href="#proxypass">ProxyPass</a></code> directive with
      <code>ProxyRequests Off</code>), access control is less critical
      because clients can only contact the hosts that you have
      specifically configured.</p>

d204 1
a204 1
     Apache sends an anonymous login to the FTP server, i.e.,
d265 1
a265 4
    forward external requests through the company's firewall
    (for this, configure the <a href="#proxyremote">ProxyRemote</a>
    directive to forward the respective <em>scheme</em> to
    the firewall proxy).
d307 1
a307 1
    <p>This allows or prevents Apache from functioning as a forward proxy
d394 1
a394 1
    <p>will cause a local request for the
d397 1
a397 7
    &lt;<samp>http://foo.com/bar</samp>&gt;.</p>

    <p><strong>Warning:</strong> The <code><a
    href="#proxyrequests">ProxyRequests</a></code> directive should
    usually be set <strong>off</strong> when using <code
    class="directive">ProxyPass</code>.

@


