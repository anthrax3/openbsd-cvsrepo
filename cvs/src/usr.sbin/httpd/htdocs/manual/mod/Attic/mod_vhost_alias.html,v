head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.52
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.48
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.46
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.44
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.42
	OPENBSD_5_0:1.5.0.40
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.38
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.36
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.32
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.34
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.30
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.28
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.26
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.24
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.22
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.20
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.18
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.16
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.1
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.1
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	apache_1_3_26:1.1.1.1
	apache:1.1.1
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.22.14.47.24;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.33;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.41;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.01.25.18.29.28;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.06.29.07;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.07.19.21.28.00;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_vhost_alias</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_vhost_alias</h1>

    <p>This module provides support for <a
    href="../vhosts/mass.html">dynamically configured mass virtual
    hosting</a>.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_vhost_alias.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    vhost_alias_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3.7 and later.</p>

    <h2>Summary</h2>

    <p>This module creates dynamically configured virtual hosts, by
    allowing the IP address and/or the <code>Host:</code> header of
    the HTTP request to be used as part of the pathname to
    determine what files to serve. This allows for easy use of a
    huge number of virtual hosts with similar configurations.</p>

    <h2>Directives</h2>

    <ul>
      <li><a
      href="#virtualdocumentroot">VirtualDocumentRoot</a></li>

      <li><a
      href="#virtualdocumentrootip">VirtualDocumentRootIP</a></li>

      <li><a href="#virtualscriptalias">VirtualScriptAlias</a></li>

      <li><a
      href="#virtualscriptaliasip">VirtualScriptAliasIP</a></li>
    </ul>

    <p>See also: <a
    href="core.html#usecanonicalname">UseCanonicalName</a>.</p>

    <h2>Directory Name Interpolation</h2>

    <p>All the directives in this module interpolate a string into
    a pathname. The interpolated string (henceforth called the
    "name") may be either the server name (see the <a
    href="core.html#usecanonicalname"><code>UseCanonicalName</code></a>
    directive for details on how this is determined) or the IP
    address of the virtual host on the server in dotted-quad
    format. The interpolation is controlled by specifiers inspired
    by <code>printf</code> which have a number of formats:</p>

    <dl>
      <dt><code>%%</code></dt>

      <dd>insert a <code>%</code></dd>

      <dt><code>%p</code></dt>

      <dd>insert the port number of the virtual host</dd>

      <dt><code>%N.M</code></dt>

      <dd>insert (part of) the name</dd>
    </dl>

    <p><code>N</code> and <code>M</code> are used to specify
    substrings of the name. <code>N</code> selects from the
    dot-separated components of the name, and <code>M</code>
    selects characters within whatever <code>N</code> has selected.
    <code>M</code> is optional and defaults to zero if it isn't
    present; the dot must be present if and only if <code>M</code>
    is present. The interpretation is as follows:</p>

    <dl>
      <dt><code>0</code></dt>

      <dd>the whole name</dd>

      <dt><code>1</code></dt>

      <dd>the first part</dd>

      <dt><code>2</code></dt>

      <dd>the second part</dd>

      <dt><code>-1</code></dt>

      <dd>the last part</dd>

      <dt><code>-2</code></dt>

      <dd>the penultimate part</dd>

      <dt><code>2+</code></dt>

      <dd>the second and all subsequent parts</dd>

      <dt><code>-2+</code></dt>

      <dd>the penultimate and all preceding parts</dd>

      <dt><code>1+</code> and <code>-1+</code></dt>

      <dd>the same as <code>0</code></dd>
    </dl>

    <p>If <code>N</code> or <code>M</code> is greater than the
    number of parts available a single underscore is
    interpolated.</p>

    <h3>Examples</h3>

    <p>For simple name-based virtual hosts you might use the
    following directives in your server configuration file:</p>
<pre>
    UseCanonicalName    Off
    VirtualDocumentRoot /usr/local/apache/vhosts/%0
</pre>

    <p>A request for
    <code>http://www.example.com/directory/file.html</code> will be
    satisfied by the file
    <code>/usr/local/apache/vhosts/www.example.com/directory/file.html</code>.</p>

    <p>For a very large number of virtual hosts it is a good idea
    to arrange the files to reduce the size of the
    <code>vhosts</code> directory. To do this you might use the
    following in your configuration file:</p>
<pre>
    UseCanonicalName    Off
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2
</pre>
    A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    will be satisfied by the file
    <code>/usr/local/apache/vhosts/isp.com/e/x/a/example/directory/file.html</code>.
    A more even spread of files can be achieved by hashing from the
    end of the name, for example: 
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.-1/%2.-2/%2.-3/%2
</pre>
    The example request would come from
    <code>/usr/local/apache/vhosts/isp.com/e/l/p/example/directory/file.html</code>.
    Alternatively you might use: 
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2.4+
</pre>

    <p>The example request would come from
    <code>/usr/local/apache/vhosts/isp.com/e/x/a/mple/directory/file.html</code>.</p>

    <p>For IP-based virtual hosting you might use the following in
    your configuration file:</p>
<pre>
    UseCanonicalName DNS
    VirtualDocumentRootIP   /usr/local/apache/vhosts/%1/%2/%3/%4/docs
    VirtualScriptAliasIP    /usr/local/apache/vhosts/%1/%2/%3/%4/cgi-bin
</pre>

    <p>A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    would be satisfied by the file
    <code>/usr/local/apache/vhosts/10/20/30/40/docs/directory/file.html</code>
    if the IP address of <code>www.example.com</code> were
    10.20.30.40. A request for
    <code>http://www.example.isp.com/cgi-bin/script.pl</code> would
    be satisfied by executing the program
    <code>/usr/local/apache/vhosts/10/20/30/40/cgi-bin/script.pl</code>.</p>

    <p>If you want to include the <code>.</code> character in a
    <code>VirtualDocumentRoot</code> directive, but it clashes with
    a <code>%</code> directive, you can work around the problem in
    the following way:</p>
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%2.0.%3.0
</pre>

    <p>A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    will be satisfied by the file
    <code>/usr/local/apache/vhosts/example.isp/directory/file.html</code>.</p>

    <p>The <a href="mod_log_config.html#formats">LogFormat
    directives</a> <code>%V</code> and <code>%A</code> are useful
    in conjunction with this module.</p>
    <hr />

    <h2><a id="virtualdocumentroot"
    name="virtualdocumentroot">VirtualDocumentRoot
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualDocumentRoot
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualDocumentRoot is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualDocumentRoot</code> directive allows you to
    determine where Apache will find your documents based on the
    value of the server name. The result of expanding
    <em>interpolated-directory</em> is used as the root of the
    document tree in a similar manner to the <a
    href="core.html#documentroot"><code>DocumentRoot</code></a>
    directive's argument. If <em>interpolated-directory</em> is
    <code>none</code> then <code>VirtualDocumentRoot</code> is
    turned off. This directive cannot be used in the same context
    as <a
    href="#virtualdocumentrootip"><code>VirtualDocumentRootIP</code></a>.</p>
    <hr />

    <h2><a id="virtualdocumentrootip"
    name="virtualdocumentrootip">VirtualDocumentRootIP
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualDocumentRootIP
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualDocumentRootIP is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualDocumentRootIP</code> directive is like the
    <a
    href="#virtualdocumentroot"><code>VirtualDocumentRoot</code></a>
    directive, except that it uses the IP address of the server end
    of the connection instead of the server name.</p>
    <hr />

    <h2><a id="virtualscriptalias"
    name="virtualscriptalias">VirtualScriptAlias directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualScriptAlias
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualScriptAlias is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualScriptAlias</code> directive allows you to
    determine where Apache will find CGI scripts in a similar
    manner to <a
    href="#virtualdocumentroot"><code>VirtualDocumentRoot</code></a>
    does for other documents. It matches requests for URIs starting
    <code>/cgi-bin/</code>, much like <code><a
    href="mod_alias.html#scriptalias">ScriptAlias</a>
    /cgi-bin/</code> would.</p>
    <hr />

    <h2><a id="virtualscriptaliasip"
    name="virtualscriptaliasip">VirtualScriptAliasIP
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualScriptAliasIP
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualScriptAliasIP is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualScriptAliasIP</code> directive is like the
    <a
    href="#virtualscriptalias"><code>VirtualScriptAlias</code></a>
    directive, except that it uses the IP address of the server end
    of the connection instead of the server name.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 356
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache module mod_vhost_alias</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Module mod_vhost_alias</H1>

<P>
This module provides support for <A
HREF="../vhosts/mass.html">dynamically configured mass virtual
hosting</A>.
</P>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Extension
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_vhost_alias.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> vhost_alias_module
<BR>
<A
HREF="module-dict.html#Compatibility"
REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.3.7 and later.
</P>

<h2>Summary</h2>

<p>This module creates dynamically configured virtual hosts, by
allowing the IP address and/or the <code>Host:</code> header of the
HTTP request to be used as part of the pathname to determine what
files to serve.  This allows for easy use of a huge number of virtual
hosts with similar configurations.</p>

<H2>Directives</H2>
<UL>
  <LI><A HREF="#virtualdocumentroot">VirtualDocumentRoot</A>
  <LI><A HREF="#virtualdocumentrootip">VirtualDocumentRootIP</A>
  <LI><A HREF="#virtualscriptalias">VirtualScriptAlias</A>
  <LI><A HREF="#virtualscriptaliasip">VirtualScriptAliasIP</A>
</UL>

<p>See also: <a href="core.html#usecanonicalname">UseCanonicalName</a>.</p>


<H2>Directory Name Interpolation</H2>

<P>
All the directives in this module interpolate a string into a
pathname. The interpolated string (henceforth called the "name") may
be either the server name (see the
<A HREF="core.html#usecanonicalname"><CODE>UseCanonicalName</CODE></A>
directive for details on how this is determined) or the IP address of
the virtual host on the server in dotted-quad format. The
interpolation is controlled by specifiers inspired by
<CODE>printf</CODE> which have a number of formats:
</P>

<DL>
  <DT><CODE>%%</CODE>
    <DD>insert a <CODE>%</CODE>
  <DT><CODE>%p</CODE>
    <DD>insert the port number of the virtual host
  <DT><CODE>%N.M</CODE>
    <DD>insert (part of) the name
</DL>

<P>
<CODE>N</CODE> and <CODE>M</CODE> are used to specify substrings of
the name. <CODE>N</CODE> selects from the dot-separated components of
the name, and <CODE>M</CODE> selects characters within whatever
<CODE>N</CODE> has selected. <CODE>M</CODE> is optional and defaults
to zero if it isn't present; the dot must be present if and only if
<CODE>M</CODE> is present. The interpretation is as follows:
<DL>
  <DT><CODE>0</CODE>
    <DD>the whole name
  <DT><CODE>1</CODE>
    <DD>the first part
  <DT><CODE>2</CODE>
    <DD>the second part
  <DT><CODE>-1</CODE>
    <DD>the last part
  <DT><CODE>-2</CODE>
    <DD>the penultimate part
  <DT><CODE>2+</CODE>
    <DD>the second and all subsequent parts
  <DT><CODE>-2+</CODE>
    <DD>the penultimate and all preceding parts
  <DT><CODE>1+</CODE> and <CODE>-1+</CODE>
    <DD>the same as <CODE>0</CODE>
</DL>

<p>
If <CODE>N</CODE> or <CODE>M</CODE> is greater than the number of
parts available a single underscore is interpolated.
</P>

<H3>Examples</H3>

<P>
For simple name-based virtual hosts you might use the following
directives in your server configuration file:
</p>
<PRE>
	UseCanonicalName	Off
	VirtualDocumentRoot	/usr/local/apache/vhosts/%0
</PRE>

<p>
A request for <CODE>http://www.example.com/directory/file.html</CODE>
will be satisfied by the file
<CODE>/usr/local/apache/vhosts/www.example.com/directory/file.html</CODE>.
</P>

<P>
For a very large number of virtual hosts it is a good idea to arrange
the files to reduce the size of the <CODE>vhosts</CODE> directory. To
do this you might use the following in your configuration file:
<PRE>
	UseCanonicalName	Off
	VirtualDocumentRoot	/usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2
</PRE>
A request for <CODE>http://www.example.isp.com/directory/file.html</CODE>
will be satisfied by the file
<CODE>/usr/local/apache/vhosts/isp.com/e/x/a/example/directory/file.html</CODE>.
A more even spread of files can be achieved by hashing from the end of
the name, for example:
<PRE>
	VirtualDocumentRoot	/usr/local/apache/vhosts/%3+/%2.-1/%2.-2/%2.-3/%2
</PRE>
The example request would come from
<CODE>/usr/local/apache/vhosts/isp.com/e/l/p/example/directory/file.html</CODE>.
Alternatively you might use:
<PRE>
	VirtualDocumentRoot	/usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2.4+
</PRE>

<p>The example request would come from
<CODE>/usr/local/apache/vhosts/isp.com/e/x/a/mple/directory/file.html</CODE>.
</P>

<P>
For IP-based virtual hosting you might use the following in your
configuration file:
<PRE>
	UseCanonicalName DNS
	VirtualDocumentRootIP	/usr/local/apache/vhosts/%1/%2/%3/%4/docs
	VirtualScriptAliasIP	/usr/local/apache/vhosts/%1/%2/%3/%4/cgi-bin
</PRE>

<p>
A request for <CODE>http://www.example.isp.com/directory/file.html</CODE>
would be satisfied by the file
<CODE>/usr/local/apache/vhosts/10/20/30/40/docs/directory/file.html</CODE> if
the IP address of <CODE>www.example.com</CODE> were 10.20.30.40.
A request for <CODE>http://www.example.isp.com/cgi-bin/script.pl</CODE>
would be satisfied by executing the program
<CODE>/usr/local/apache/vhosts/10/20/30/40/cgi-bin/script.pl</CODE>.
</P>

<P>
If you want to include the <CODE>.</CODE> character in a
<CODE>VirtualDocumentRoot</CODE> directive, but it clashes with a
<CODE>%</CODE> directive, you can work around the problem in the
following way:
<PRE>
	VirtualDocumentRoot	/usr/local/apache/vhosts/%2.0.%3.0
</PRE>

<p>
A request for <CODE>http://www.example.isp.com/directory/file.html</CODE>
will be satisfied by the file
<CODE>/usr/local/apache/vhosts/example.isp/directory/file.html</CODE>.
</P>

<P>
The <A HREF="mod_log_config.html#formats">LogFormat directives</A>
<CODE>%V</CODE> and <CODE>%A</CODE> are useful in conjunction with
this module.
</P>

<HR>


<H2><A NAME="virtualdocumentroot">VirtualDocumentRoot directive</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> VirtualDocumentRoot <EM>interpolated-directory</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> None<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Extension<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_vhost_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> VirtualDocumentRoot is only available in 1.3.7 and later.</P>
<P>
The <CODE>VirtualDocumentRoot</CODE> directive allows you to determine
where Apache will find your documents based on the value of the server
name. The result of expanding <EM>interpolated-directory</EM> is used
as the root of the document tree in a similar manner to the
<A HREF="core.html#documentroot"><CODE>DocumentRoot</CODE></A>
directive's argument. If <EM>interpolated-directory</EM> is
<CODE>none</CODE> then <CODE>VirtualDocumentRoot</CODE> is turned off.
This directive cannot be used in the same context as
<A HREF="#virtualdocumentrootip"><CODE>VirtualDocumentRootIP</CODE></A>.
</P>
<HR>

<H2><A NAME="virtualdocumentrootip">VirtualDocumentRootIP directive</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> VirtualDocumentRootIP <EM>interpolated-directory</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> None<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Extension<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_vhost_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> VirtualDocumentRootIP is only available in 1.3.7 and later.</P>
<P>
The <CODE>VirtualDocumentRootIP</CODE> directive is like the
<A HREF="#virtualdocumentroot"><CODE>VirtualDocumentRoot</CODE></A> directive,
except that it uses the IP address of the server end of the connection
instead of the server name.
</P>
<HR>

<H2><A NAME="virtualscriptalias">VirtualScriptAlias directive</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> VirtualScriptAlias <EM>interpolated-directory</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> None<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Extension<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_vhost_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> VirtualScriptAlias is only available in 1.3.7 and later.</P>
<P>
The <CODE>VirtualScriptAlias</CODE> directive allows you to determine
where Apache will find CGI scripts in a similar manner to
<A HREF="#virtualdocumentroot"><CODE>VirtualDocumentRoot</CODE></A>
does for other documents. It matches requests for URIs starting
<CODE>/cgi-bin/</CODE>, much like
<CODE><A HREF="mod_alias.html#scriptalias">ScriptAlias</A> /cgi-bin/</CODE>
would.
</P>
<HR>

<H2><A NAME="virtualscriptaliasip">VirtualScriptAliasIP directive</A></H2>
<P>
<A
 HREF="directive-dict.html#Syntax"
 REL="Help"
><STRONG>Syntax:</STRONG></A> VirtualScriptAliasIP <EM>interpolated-directory</EM><BR>
<A
 HREF="directive-dict.html#Default"
 REL="Help"
><STRONG>Default:</STRONG></A> None<BR>
<A
 HREF="directive-dict.html#Context"
 REL="Help"
><STRONG>Context:</STRONG></A> server config, virtual host<BR>
<A
 HREF="directive-dict.html#Status"
 REL="Help"
><STRONG>Status:</STRONG></A> Extension<BR>
<A
 HREF="directive-dict.html#Module"
 REL="Help"
><STRONG>Module:</STRONG></A> mod_vhost_alias<BR>
<A
 HREF="directive-dict.html#Compatibility"
 REL="Help"
><STRONG>Compatibility:</STRONG></A> VirtualScriptAliasIP is only available in 1.3.7 and later.</P>
<P>
The <CODE>VirtualScriptAliasIP</CODE> directive is like the
<A HREF="#virtualscriptalias"><CODE>VirtualScriptAlias</CODE></A> directive,
except that it uses the IP address of the server end of the connection
instead of the server name.
</P>
<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d4 331
a334 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a335 2
</BODY>
</HTML>
@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d81 2
a90 1
</P>
d117 2
d128 1
d133 2
d162 2
a163 1
The example request would come from
d175 2
d194 2
d243 1
a243 1
<CODE>none</CODE> then <CODE>VirtaulDocumentRoot</CODE> is turned off.
@


1.2
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d25 2
a26 3
This module is contained in the <CODE>mod_vhost_alias.c</CODE> file
and is not compiled in by default. It provides support for
<A HREF="../vhosts/mass.html">dynamically configured mass virtual
d30 40
d144 1
a144 1
<CODE>/usr/local/apache/isp.com/e/x/a/example/directory/file.html</CODE>.
d165 2
a166 2
	VirtualDocumentRootIP	/usr/local/apache/vhost/%1/%2/%3/%4/docs
	VirtualScriptAliasIP	/usr/local/apache/vhost/%1/%2/%3/%4/cgi-bin
d170 1
a170 1
<CODE>/usr/local/apache/10/20/30/40/docs/directory/file.html</CODE> if
d174 14
a187 1
<CODE>/usr/local/apache/10/20/30/40/cgi-bin/script.pl</CODE>.
a197 8
<H2>Directives</H2>
<UL>
  <LI><A HREF="#virtualdocumentroot">VirtualDocumentRoot</A>
  <LI><A HREF="#virtualdocumentrootip">VirtualDocumentRootIP</A>
  <LI><A HREF="#virtualscriptalias">VirtualScriptAlias</A>
  <LI><A HREF="#virtualscriptaliasip">VirtualScriptAliasIP</A>
</UL>
<HR>
@


1.1
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d26 3
a28 7
and is not compiled in by default. It should be mentioned near the
start of the <CODE>Configuration</CODE> file so that it doesn't
override the behaviour of other modules that do filename translation,
<EM>e.g.</EM>, <A HREF="mod_userdir.html"><CODE>mod_userdir</CODE></A> and
<A HREF="mod_alias.html"><CODE>mod_alias</CODE></A>. It provides
support for <A HREF="../vhosts/mass.html">dynamically configured mass
virtual hosting</A>.
d148 4
a151 4
  <LI><A HREF="#VirtualDocumentRoot">VirtualDocumentRoot</A>
  <LI><A HREF="#VirtualDocumentRootIP">VirtualDocumentRootIP</A>
  <LI><A HREF="#VirtualScriptAlias">VirtualScriptAlias</A>
  <LI><A HREF="#VirtualScriptAliasIP">VirtualScriptAliasIP</A>
d155 1
a155 1
<H2><A NAME="VirtualDocumentRoot">VirtualDocumentRoot directive</A></H2>
d190 1
a190 1
<A HREF="#VirtualDocumentRootIP"><CODE>VirtualDocumentRootIP</CODE></A>.
d194 1
a194 1
<H2><A NAME="VirtualDocumentRootIP">VirtualDocumentRootIP directive</A></H2>
d222 1
a222 1
<A HREF="#VirtualDocumentRoot"><CODE>VirtualDocumentRoot</CODE></A> directive,
d228 1
a228 1
<H2><A NAME="VirtualScriptAlias">VirtualScriptAlias directive</A></H2>
d257 1
a257 1
<A HREF="#VirtualDocumentRoot"><CODE>VirtualDocumentRoot</CODE></A>
d265 1
a265 1
<H2><A NAME="VirtualScriptAlias">VirtualScriptAliasIP directive</A></H2>
d292 2
a293 2
The <CODE>VirtualScriptAliasIP</CODE> directibe is like the
<A HREF="#VirtualScriptAlias"><CODE>VirtualScriptAlias</CODE></A> directive,
@


1.1.1.1
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 305
a305 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
d307 2
a308 331
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_vhost_alias</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_vhost_alias</h1>

    <p>This module provides support for <a
    href="../vhosts/mass.html">dynamically configured mass virtual
    hosting</a>.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_vhost_alias.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    vhost_alias_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.3.7 and later.</p>

    <h2>Summary</h2>

    <p>This module creates dynamically configured virtual hosts, by
    allowing the IP address and/or the <code>Host:</code> header of
    the HTTP request to be used as part of the pathname to
    determine what files to serve. This allows for easy use of a
    huge number of virtual hosts with similar configurations.</p>

    <h2>Directives</h2>

    <ul>
      <li><a
      href="#virtualdocumentroot">VirtualDocumentRoot</a></li>

      <li><a
      href="#virtualdocumentrootip">VirtualDocumentRootIP</a></li>

      <li><a href="#virtualscriptalias">VirtualScriptAlias</a></li>

      <li><a
      href="#virtualscriptaliasip">VirtualScriptAliasIP</a></li>
    </ul>

    <p>See also: <a
    href="core.html#usecanonicalname">UseCanonicalName</a>.</p>

    <h2>Directory Name Interpolation</h2>

    <p>All the directives in this module interpolate a string into
    a pathname. The interpolated string (henceforth called the
    "name") may be either the server name (see the <a
    href="core.html#usecanonicalname"><code>UseCanonicalName</code></a>
    directive for details on how this is determined) or the IP
    address of the virtual host on the server in dotted-quad
    format. The interpolation is controlled by specifiers inspired
    by <code>printf</code> which have a number of formats:</p>

    <dl>
      <dt><code>%%</code></dt>

      <dd>insert a <code>%</code></dd>

      <dt><code>%p</code></dt>

      <dd>insert the port number of the virtual host</dd>

      <dt><code>%N.M</code></dt>

      <dd>insert (part of) the name</dd>
    </dl>

    <p><code>N</code> and <code>M</code> are used to specify
    substrings of the name. <code>N</code> selects from the
    dot-separated components of the name, and <code>M</code>
    selects characters within whatever <code>N</code> has selected.
    <code>M</code> is optional and defaults to zero if it isn't
    present; the dot must be present if and only if <code>M</code>
    is present. The interpretation is as follows:</p>

    <dl>
      <dt><code>0</code></dt>

      <dd>the whole name</dd>

      <dt><code>1</code></dt>

      <dd>the first part</dd>

      <dt><code>2</code></dt>

      <dd>the second part</dd>

      <dt><code>-1</code></dt>

      <dd>the last part</dd>

      <dt><code>-2</code></dt>

      <dd>the penultimate part</dd>

      <dt><code>2+</code></dt>

      <dd>the second and all subsequent parts</dd>

      <dt><code>-2+</code></dt>

      <dd>the penultimate and all preceding parts</dd>

      <dt><code>1+</code> and <code>-1+</code></dt>

      <dd>the same as <code>0</code></dd>
    </dl>

    <p>If <code>N</code> or <code>M</code> is greater than the
    number of parts available a single underscore is
    interpolated.</p>

    <h3>Examples</h3>

    <p>For simple name-based virtual hosts you might use the
    following directives in your server configuration file:</p>
<pre>
    UseCanonicalName    Off
    VirtualDocumentRoot /usr/local/apache/vhosts/%0
</pre>

    <p>A request for
    <code>http://www.example.com/directory/file.html</code> will be
    satisfied by the file
    <code>/usr/local/apache/vhosts/www.example.com/directory/file.html</code>.</p>

    <p>For a very large number of virtual hosts it is a good idea
    to arrange the files to reduce the size of the
    <code>vhosts</code> directory. To do this you might use the
    following in your configuration file:</p>
<pre>
    UseCanonicalName    Off
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2
</pre>
    A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    will be satisfied by the file
    <code>/usr/local/apache/vhosts/isp.com/e/x/a/example/directory/file.html</code>.
    A more even spread of files can be achieved by hashing from the
    end of the name, for example: 
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.-1/%2.-2/%2.-3/%2
</pre>
    The example request would come from
    <code>/usr/local/apache/vhosts/isp.com/e/l/p/example/directory/file.html</code>.
    Alternatively you might use: 
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%3+/%2.1/%2.2/%2.3/%2.4+
</pre>

    <p>The example request would come from
    <code>/usr/local/apache/vhosts/isp.com/e/x/a/mple/directory/file.html</code>.</p>

    <p>For IP-based virtual hosting you might use the following in
    your configuration file:</p>
<pre>
    UseCanonicalName DNS
    VirtualDocumentRootIP   /usr/local/apache/vhosts/%1/%2/%3/%4/docs
    VirtualScriptAliasIP    /usr/local/apache/vhosts/%1/%2/%3/%4/cgi-bin
</pre>

    <p>A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    would be satisfied by the file
    <code>/usr/local/apache/vhosts/10/20/30/40/docs/directory/file.html</code>
    if the IP address of <code>www.example.com</code> were
    10.20.30.40. A request for
    <code>http://www.example.isp.com/cgi-bin/script.pl</code> would
    be satisfied by executing the program
    <code>/usr/local/apache/vhosts/10/20/30/40/cgi-bin/script.pl</code>.</p>

    <p>If you want to include the <code>.</code> character in a
    <code>VirtualDocumentRoot</code> directive, but it clashes with
    a <code>%</code> directive, you can work around the problem in
    the following way:</p>
<pre>
    VirtualDocumentRoot /usr/local/apache/vhosts/%2.0.%3.0
</pre>

    <p>A request for
    <code>http://www.example.isp.com/directory/file.html</code>
    will be satisfied by the file
    <code>/usr/local/apache/vhosts/example.isp/directory/file.html</code>.</p>

    <p>The <a href="mod_log_config.html#formats">LogFormat
    directives</a> <code>%V</code> and <code>%A</code> are useful
    in conjunction with this module.</p>
    <hr />

    <h2><a id="virtualdocumentroot"
    name="virtualdocumentroot">VirtualDocumentRoot
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualDocumentRoot
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualDocumentRoot is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualDocumentRoot</code> directive allows you to
    determine where Apache will find your documents based on the
    value of the server name. The result of expanding
    <em>interpolated-directory</em> is used as the root of the
    document tree in a similar manner to the <a
    href="core.html#documentroot"><code>DocumentRoot</code></a>
    directive's argument. If <em>interpolated-directory</em> is
    <code>none</code> then <code>VirtualDocumentRoot</code> is
    turned off. This directive cannot be used in the same context
    as <a
    href="#virtualdocumentrootip"><code>VirtualDocumentRootIP</code></a>.</p>
    <hr />

    <h2><a id="virtualdocumentrootip"
    name="virtualdocumentrootip">VirtualDocumentRootIP
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualDocumentRootIP
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualDocumentRootIP is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualDocumentRootIP</code> directive is like the
    <a
    href="#virtualdocumentroot"><code>VirtualDocumentRoot</code></a>
    directive, except that it uses the IP address of the server end
    of the connection instead of the server name.</p>
    <hr />

    <h2><a id="virtualscriptalias"
    name="virtualscriptalias">VirtualScriptAlias directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualScriptAlias
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualScriptAlias is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualScriptAlias</code> directive allows you to
    determine where Apache will find CGI scripts in a similar
    manner to <a
    href="#virtualdocumentroot"><code>VirtualDocumentRoot</code></a>
    does for other documents. It matches requests for URIs starting
    <code>/cgi-bin/</code>, much like <code><a
    href="mod_alias.html#scriptalias">ScriptAlias</a>
    /cgi-bin/</code> would.</p>
    <hr />

    <h2><a id="virtualscriptaliasip"
    name="virtualscriptaliasip">VirtualScriptAliasIP
    directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> VirtualScriptAliasIP
    <em>interpolated-directory</em><br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_vhost_alias<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    VirtualScriptAliasIP is only available in 1.3.7 and later.</p>

    <p>The <code>VirtualScriptAliasIP</code> directive is like the
    <a
    href="#virtualscriptalias"><code>VirtualScriptAlias</code></a>
    directive, except that it uses the IP address of the server end
    of the connection instead of the server name.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>
d310 2
@


