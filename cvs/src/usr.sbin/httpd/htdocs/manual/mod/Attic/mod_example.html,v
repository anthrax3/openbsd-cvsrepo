head	1.6;
access;
symbols
	OPENBSD_3_7:1.5.0.14
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.12
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.10
	OPENBSD_3_5_BASE:1.5
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.3
	OPENBSD_3_4:1.5.0.8
	OPENBSD_3_4_BASE:1.5
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.3
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.3
	apache_1_3_27:1.1.1.3
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	apache_1_3_26:1.1.1.3
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.2.0.4
	OPENBSD_2_5_BASE:1.1.1.2
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	apache_1_3_2:1.1.1.2
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2005.07.29.09.37.45;	author jmc;	state dead;
branches;
next	1.5;

1.5
date	2002.02.12.07.56.47;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.29.10.21.32;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.35;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.05;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.03.25.07.08.33;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.33;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.10.01.17.20.04;	author beck;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.07.19.21.27.51;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@from tamas tevesz:

==> some more alien platforms and obsolete info. the mod/core.html
change is because 1) the target link doesn't exist, 2) it
probably was meant to refer to misc/known_bugs.html in the
first place, which just got removed.
thanks henning for guidance.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_example</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_example</h1>

    <p>This module illustrates many of the aspects of the <a
    href="../misc/API.html" rel="Help">Apache 1.2 API</a> and, when
    used, demonstrates the manner in which module callbacks are
    triggered by the server.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_example.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    example_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.2 and later.</p>

    <h2>Summary</h2>

    <p>The files in the <code>src/modules/example directory</code>
    under the Apache distribution directory tree are provided as an
    example to those that wish to write modules that use the Apache
    API.</p>

    <p>The main file is <code>mod_example.c</code>, which
    illustrates all the different callback mechanisms and call
    syntaxes. By no means does an add-on module need to include
    routines for all of the callbacks - quite the contrary!</p>

    <p>The example module is an actual working module. If you link
    it into your server, enable the "example-handler" handler for a
    location, and then browse to that location, you will see a
    display of some of the tracing the example module did as the
    various callbacks were made.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#example">Example</a></li>
    </ul>

    <h2>Compiling the example module</h2>

    <p>To include the example module in your server, follow the
    steps below:</p>

    <ol>
      <li>
        Uncomment the "AddModule modules/example/mod_example" line
        near the bottom of the <code>src/Configuration</code> file.
        If there isn't one, add it; it should look like this: 
<pre>
     AddModule modules/example/mod_example.o
   
</pre>
      </li>

      <li>Run the <code>src/Configure</code> script
      ("<samp>cd&nbsp;src;&nbsp;./Configure</samp>"). This will
      build the Makefile for the server itself, and update the
      <code>src/modules/Makefile</code> for any additional modules
      you have requested from beneath that subdirectory.</li>

      <li>Make the server (run "<samp>make</samp>" in the
      <code>src</code> directory).</li>
    </ol>

    <p>To add another module of your own:</p>

    <ol type="A">
      <li><samp>mkdir src/modules/<em>mymodule</em></samp></li>

      <li><samp>cp src/modules/example/*
      src/modules/<em>mymodule</em></samp></li>

      <li>Modify the files in the new directory.</li>

      <li>Follow steps [1] through [3] above, with appropriate
      changes.</li>
    </ol>

    <h2>Using the <samp>mod_example</samp> Module</h2>

    <p>To activate the example module, include a block similar to
    the following in your <samp>srm.conf</samp> file:</p>
<pre>
   &lt;Location /example-info&gt;
       SetHandler example-handler
   &lt;/Location&gt;
 
</pre>

    <p>As an alternative, you can put the following into a <a
    href="core.html#accessfilename"><samp>.htaccess</samp></a> file
    and then request the file "test.example" from that
    location:</p>
<pre>
   AddHandler example-handler .example
 
</pre>

    <p>After reloading/restarting your server, you should be able
    to browse to this location and see the brief display mentioned
    earlier.</p>
    <hr />

    <h2><a id="example" name="example">Example directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Example<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> Options<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_example<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    <samp>Example</samp> is only available in Apache 1.2 and
    later.</p>

    <p>The <samp>Example</samp> directive just sets a demonstration
    flag which the example module's content handler displays. It
    takes no arguments. If you browse to an URL to which the
    example content-handler applies, you will get a display of the
    routines within the module and how and in what order they were
    called to service the document request. The effect of this
    directive one can observe under the point "<samp>Example
    directive declared here: YES/NO</samp>".</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.5
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@@


1.4
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 74
a74 90
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
 <HEAD>
  <TITLE>Apache module mod_example</TITLE>
 </HEAD>
 <!-- Background white, links blue (unvisited), navy (visited), red (active) -->
 <BODY
  BGCOLOR="#FFFFFF"
  TEXT="#000000"
  LINK="#0000FF"
  VLINK="#000080"
  ALINK="#FF0000"
 >
  <DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

  <H1 ALIGN="CENTER">Module mod_example</H1>
  <P>
  This module illustrates many of
  the aspects of the
  <A
   HREF="../misc/API.html"
   REL="Help"
  >Apache 1.2 API</A>
  and, when used, demonstrates the manner in which module callbacks are
  triggered by the server.
  </P>

<P><A
HREF="module-dict.html#Status"
REL="Help"
><STRONG>Status:</STRONG></A> Extension
<BR>
<A
HREF="module-dict.html#SourceFile"
REL="Help"
><STRONG>Source File:</STRONG></A> mod_example.c
<BR>
<A
HREF="module-dict.html#ModuleIdentifier"
REL="Help"
><STRONG>Module Identifier:</STRONG></A> example_module
<BR>
<A 
HREF="module-dict.html#Compatibility"
REL="Help"
><STRONG>Compatibility:</STRONG></A> Available in Apache 1.2 and later.
</P>


  <H2>Summary</H2>
  <P>
  The files in the <CODE>src/modules/example directory</CODE> under the
  Apache distribution directory tree are provided as an example to those
  that wish to write modules that use the Apache API.
  </P>
  <P>
  The main file is <CODE>mod_example.c</CODE>, which illustrates all
  the different callback mechanisms and call syntaxes.  By no means does
  an add-on module need to include routines for all of the callbacks -
  quite the contrary!
  </P>
  <P>
  The example module is an actual working module.  If you link it into
  your server, enable the "example-handler" handler for a location, and
  then browse to that location, you will see a display of
  some of the tracing the example module did as the various callbacks
  were made.
  </P>
  <H2>Directives</H2>
  <P>
  <UL>
   <LI><A HREF="#example">Example</A>
   </LI>
  </UL>

  <h2>Compiling the example module</h2>
  <P>
  To include the example module in your server, follow the steps below:
  </P>
  <OL>
   <LI>Uncomment the "AddModule modules/example/mod_example" line near 
    the bottom of
    the <CODE>src/Configuration</CODE> file.  If there isn't one, add
    it; it should look like this:
    <PRE>
d76 33
a108 33
    </PRE>
   </LI>
   <LI>Run the <CODE>src/Configure</CODE> script
    ("<SAMP>cd&nbsp;src;&nbsp;./Configure</SAMP>").  This will
    build the Makefile for the server itself, and update the
    <CODE>src/modules/Makefile</CODE> for any additional modules you
    have requested from beneath that subdirectory.
   </LI>
   <LI>Make the server (run "<SAMP>make</SAMP>" in the <CODE>src</CODE>
    directory).
   </LI>
  </OL>
  <P>
  To add another module of your own:
  </P>
  <OL TYPE="A">
   <LI><SAMP>mkdir src/modules/<EM>mymodule</EM></SAMP>
   </LI>
   <LI><SAMP>cp src/modules/example/* src/modules/<EM>mymodule</EM></SAMP>
   </LI>
   <LI>Modify the files in the new directory.
   </LI>
   <LI>Follow steps [1] through [3] above, with appropriate changes.
   </LI>
  </OL>
  <H2>
   Using the <SAMP>mod_example</SAMP> Module
  </H2>
  <P>
  To activate the example module, include a block similar to the
  following in your <SAMP>srm.conf</SAMP> file:
  </P>
  <PRE>
d112 8
a119 10
  </PRE>
  <P>
  As an alternative, you can put the following into a
  <A
   HREF="core.html#accessfilename"
  ><SAMP>.htaccess</SAMP></A>
  file and then request the file &quot;test.example&quot; from that
  location:
  </P>
  <PRE>
d121 41
a161 62
  </PRE>
  <P>
  After reloading/restarting your server, you should be able to browse
  to this location and see the brief display mentioned earlier.
  </P>

  <HR>
  <H2><A NAME="example">
   Example directive
  </A></H2>
  <P>
  <A
   HREF="directive-dict.html#Syntax"
   REL="Help" 
  ><STRONG>Syntax:</STRONG></A> Example
  <BR>
  <A
   HREF="directive-dict.html#Default"
   REL="Help" 
  ><STRONG>Default:</STRONG></A> None
  <BR>
  <A
   HREF="directive-dict.html#Context"
   REL="Help" 
  ><STRONG>Context:</STRONG></A> server config, virtual host, directory,
  .htaccess
  <BR>
  <A
   HREF="directive-dict.html#Override"
   REL="Help" 
  ><STRONG>Override:</STRONG></A> Options
  <BR>
  <A
   HREF="directive-dict.html#Status"
   REL="Help" 
  ><STRONG>Status:</STRONG></A> Extension
  <BR>
  <A
   HREF="directive-dict.html#Module"
   REL="Help" 
  ><STRONG>Module:</STRONG></A> mod_example
  <BR>
  <A
   HREF="directive-dict.html#Compatibility"
   REL="Help" 
  ><STRONG>Compatibility:</STRONG></A> <SAMP>Example</SAMP> is only
   available in Apache 1.2 and later.
  </P>
  <P>
  The <SAMP>Example</SAMP> directive just sets a demonstration flag which the
  example module's content handler displays.  It takes no arguments.  If you
  browse to an URL to which the example content-handler applies, you will get
  a display of the routines within the module and how and in what order they
  were called to service the document request. The effect of this directive
  one can observe under the point "<SAMP>Example directive declared
  here: YES/NO</SAMP>". 
  </P>
  <HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d163 2
a164 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a165 2
 </BODY>
</HTML>
@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@a79 1
  </P>
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d23 1
a23 2
  This module is contained in the <CODE>modules/mod_example.c</CODE> file, and
  <STRONG>is not</STRONG> compiled in by default.  It illustrates many of
d32 23
d74 9
d118 1
a118 1
  <H3>
d120 1
a120 1
  </H3>
d145 1
a145 7
  <H2>Directives</H2>
  <P>
  <UL>
   <LI><A HREF="#example">Example</A>
   </LI>
  </UL>
  </P>
d148 1
a148 1
   Example
@


1.1
log
@Initial revision
@
text
@d17 1
a17 1
  Apache HTTP Server Version 1.2
d21 1
a21 1
  <H1 ALIGN="CENTER">Module mod_example</h1>
d41 1
a41 1
  the different callback mechanisms and call syntaces.  By no means does
d56 2
a57 1
   <LI>Uncomment the "Module example_module" line near the bottom of
d61 1
a61 1
     Module example_module        modules/example/mod_example.o
d126 4
a129 1
  <STRONG>Syntax:</STRONG> Example
d131 4
a134 1
  <STRONG>Default:</STRONG> None
d136 5
a140 1
  <STRONG>Context:</STRONG> server config, virtual host, directory, .htaccess
d142 4
a145 1
  <STRONG>Override:</STRONG> Options
d147 4
a150 1
  <STRONG>Status:</STRONG> Extension
d152 10
a161 1
  <STRONG>Module:</STRONG> mod_example
d164 7
a170 5
  The Example directive activates the example module's content handler
  for a particular location or file type.  It takes no arguments.  If
  you browse to an URL to which the example content-handler applies, you
  will get a display of the routines within the module and how and in
  what order they were called to service the document request.
d173 1
d175 1
a175 1
 Apache HTTP Server Version 1.2
@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@


1.1.1.2
log
@Apache 1.3.2
@
text
@d17 1
a17 1
  Apache HTTP Server Version 1.3
d21 1
a21 1
  <H1 ALIGN="CENTER">Module mod_example</H1>
d41 1
a41 1
  the different callback mechanisms and call syntaxes.  By no means does
d56 1
a56 2
   <LI>Uncomment the "AddModule modules/example/mod_example" line near 
    the bottom of
d60 1
a60 1
     AddModule modules/example/mod_example.o
d125 1
a125 4
  <A
   HREF="directive-dict.html#Syntax"
   REL="Help" 
  ><STRONG>Syntax:</STRONG></A> Example
d127 1
a127 4
  <A
   HREF="directive-dict.html#Default"
   REL="Help" 
  ><STRONG>Default:</STRONG></A> None
d129 1
a129 5
  <A
   HREF="directive-dict.html#Context"
   REL="Help" 
  ><STRONG>Context:</STRONG></A> server config, virtual host, directory,
  .htaccess
d131 1
a131 4
  <A
   HREF="directive-dict.html#Override"
   REL="Help" 
  ><STRONG>Override:</STRONG></A> Options
d133 1
a133 4
  <A
   HREF="directive-dict.html#Status"
   REL="Help" 
  ><STRONG>Status:</STRONG></A> Extension
d135 1
a135 10
  <A
   HREF="directive-dict.html#Module"
   REL="Help" 
  ><STRONG>Module:</STRONG></A> mod_example
  <BR>
  <A
   HREF="directive-dict.html#Compatibility"
   REL="Help" 
  ><STRONG>Compatibility:</STRONG></A> <SAMP>Example</SAMP> is only
   available in Apache 1.2 and later.
d138 1
a138 2
  The <SAMP>Example</SAMP> directive activates the example module's
  content handler 
a144 1

d146 1
a146 1
 Apache HTTP Server Version 1.3
@


1.1.1.3
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 60
a60 74
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache module mod_example</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Module mod_example</h1>

    <p>This module illustrates many of the aspects of the <a
    href="../misc/API.html" rel="Help">Apache 1.2 API</a> and, when
    used, demonstrates the manner in which module callbacks are
    triggered by the server.</p>

    <p><a href="module-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="module-dict.html#SourceFile"
    rel="Help"><strong>Source File:</strong></a>
    mod_example.c<br />
     <a href="module-dict.html#ModuleIdentifier"
    rel="Help"><strong>Module Identifier:</strong></a>
    example_module<br />
     <a href="module-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a> Available in
    Apache 1.2 and later.</p>

    <h2>Summary</h2>

    <p>The files in the <code>src/modules/example directory</code>
    under the Apache distribution directory tree are provided as an
    example to those that wish to write modules that use the Apache
    API.</p>

    <p>The main file is <code>mod_example.c</code>, which
    illustrates all the different callback mechanisms and call
    syntaxes. By no means does an add-on module need to include
    routines for all of the callbacks - quite the contrary!</p>

    <p>The example module is an actual working module. If you link
    it into your server, enable the "example-handler" handler for a
    location, and then browse to that location, you will see a
    display of some of the tracing the example module did as the
    various callbacks were made.</p>

    <h2>Directives</h2>

    <ul>
      <li><a href="#example">Example</a></li>
    </ul>

    <h2>Compiling the example module</h2>

    <p>To include the example module in your server, follow the
    steps below:</p>

    <ol>
      <li>
        Uncomment the "AddModule modules/example/mod_example" line
        near the bottom of the <code>src/Configuration</code> file.
        If there isn't one, add it; it should look like this: 
<pre>
d62 33
a94 33
   
</pre>
      </li>

      <li>Run the <code>src/Configure</code> script
      ("<samp>cd&nbsp;src;&nbsp;./Configure</samp>"). This will
      build the Makefile for the server itself, and update the
      <code>src/modules/Makefile</code> for any additional modules
      you have requested from beneath that subdirectory.</li>

      <li>Make the server (run "<samp>make</samp>" in the
      <code>src</code> directory).</li>
    </ol>

    <p>To add another module of your own:</p>

    <ol type="A">
      <li><samp>mkdir src/modules/<em>mymodule</em></samp></li>

      <li><samp>cp src/modules/example/*
      src/modules/<em>mymodule</em></samp></li>

      <li>Modify the files in the new directory.</li>

      <li>Follow steps [1] through [3] above, with appropriate
      changes.</li>
    </ol>

    <h2>Using the <samp>mod_example</samp> Module</h2>

    <p>To activate the example module, include a block similar to
    the following in your <samp>srm.conf</samp> file:</p>
<pre>
d98 10
a107 8
 
</pre>

    <p>As an alternative, you can put the following into a <a
    href="core.html#accessfilename"><samp>.htaccess</samp></a> file
    and then request the file "test.example" from that
    location:</p>
<pre>
d109 67
a175 41
 
</pre>

    <p>After reloading/restarting your server, you should be able
    to browse to this location and see the brief display mentioned
    earlier.</p>
    <hr />

    <h2><a id="example" name="example">Example directive</a></h2>

    <p><a href="directive-dict.html#Syntax"
    rel="Help"><strong>Syntax:</strong></a> Example<br />
     <a href="directive-dict.html#Default"
    rel="Help"><strong>Default:</strong></a> None<br />
     <a href="directive-dict.html#Context"
    rel="Help"><strong>Context:</strong></a> server config, virtual
    host, directory, .htaccess<br />
     <a href="directive-dict.html#Override"
    rel="Help"><strong>Override:</strong></a> Options<br />
     <a href="directive-dict.html#Status"
    rel="Help"><strong>Status:</strong></a> Extension<br />
     <a href="directive-dict.html#Module"
    rel="Help"><strong>Module:</strong></a> mod_example<br />
     <a href="directive-dict.html#Compatibility"
    rel="Help"><strong>Compatibility:</strong></a>
    <samp>Example</samp> is only available in Apache 1.2 and
    later.</p>

    <p>The <samp>Example</samp> directive just sets a demonstration
    flag which the example module's content handler displays. It
    takes no arguments. If you browse to an URL to which the
    example content-handler applies, you will get a display of the
    routines within the module and how and in what order they were
    called to service the document request. The effect of this
    directive one can observe under the point "<samp>Example
    directive declared here: YES/NO</samp>".</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>
d177 2
a178 2
  </body>
</html>
d180 2
@


