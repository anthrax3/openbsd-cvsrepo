head	1.15;
access;
symbols
	OPENBSD_5_5:1.14.0.10
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.6
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.4
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.2
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.14
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.12
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.10
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.6
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.8
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.4
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.2
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.11.0.28
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.26
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.24
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.22
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.20
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.18
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.16
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.14
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.12
	OPENBSD_3_5_BASE:1.11
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.1
	OPENBSD_3_4:1.11.0.10
	OPENBSD_3_4_BASE:1.11
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.1
	OPENBSD_3_3:1.11.0.8
	OPENBSD_3_3_BASE:1.11
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.1
	apache_1_3_27:1.1.1.1
	apache:1.1.1
	OPENBSD_3_2:1.11.0.6
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.15
date	2014.04.22.14.47.25;	author henning;	state dead;
branches;
next	1.14;

1.14
date	2012.02.24.06.19.00;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2012.01.29.15.05.05;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.18.05.42.29;	author brad;	state Exp;
branches;
next	1.11;

1.11
date	2001.06.20.18.06.13;	author brad;	state Exp;
branches;
next	1.10;

1.10
date	2001.03.29.10.21.34;	author beck;	state Exp;
branches;
next	1.9;

1.9
date	2000.12.15.22.17.43;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2000.08.15.13.11.19;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.21.01.20.29;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.30.05.35.09;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.19.11.16.40;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.25.18.29.29;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.12.08.02.45.48;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.06.29.09;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.03.01.04.27.59;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.10.07.19.48.08;	author henning;	state Exp;
branches;
next	;


desc
@@


1.15
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<html>
<head>
<title>mod_ssl: F.A.Q.</title>

<!--
  Copyright (c) 1998-2001 Ralf S. Engelschall. All rights reserved.

  Redistribution and use in source and binary forms, with or without
  modification, are permitted provided that the following conditions
  are met:

  1. Redistributions of source code must retain the above
     copyright notice, this list of conditions and the following
     disclaimer. 
 
  2. Redistributions in binary form must reproduce the above
     copyright notice, this list of conditions and the following
     disclaimer in the documentation and/or other materials
     provided with the distribution.
 
  3. All advertising materials mentioning features or use of this
     software must display the following acknowledgment: 
     "This product includes software developed by 
      Ralf S. Engelschall <rse@@engelschall.com> for use in the
      mod_ssl project (http://www.modssl.org/)."
 
  4. The name "mod_ssl" must not be used to endorse or promote
     products derived from this software without prior written
     permission.  

  5. Redistributions of any form whatsoever must retain the
     following acknowledgment:
     "This product includes software developed by 
      Ralf S. Engelschall <rse@@engelschall.com> for use in the
      mod_ssl project (http://www.modssl.org/)."
 
  THIS SOFTWARE IS PROVIDED BY RALF S. ENGELSCHALL ``AS IS'' AND ANY
  EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
  PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL RALF S. ENGELSCHALL OR
  HIS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
  SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
  HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
  STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
  OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<style type="text/css"><!--
A:link {
    text-decoration: none;
    color: #6666cc;
}
A:active {
    text-decoration: none;
    color: #6666cc;
}
A:visited {
    text-decoration: none;
    color: #6666cc;
}
#sf {
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
H1 {
    font-weight: bold;
    font-size: 24pt;
    line-height: 24pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
H2 {
    font-weight: bold;
    font-size: 18pt;
    line-height: 18pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
H3 {
    font-weight: bold;
    font-size: 14pt;
    line-height: 14pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
H4 {
    font-weight: bold;
    font-size: 12pt;
    line-height: 12pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
#H {
}
#D {
    background-color: #f0f0f0;
}
#faq {
    font-weight: bold;
    font-size: 16pt;
    line-height: 16pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
#howto {
    font-weight: bold;
    font-size: 16pt;
    line-height: 16pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
#term {
    font-weight: bold;
    font-size: 16pt;
    line-height: 16pt;
    font-family: arial,helvetica;
    font-variant: normal;
    font-style: normal;
}
--></style>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
function ro_imgNormal(imgName) {
    if (document.images) {
        document[imgName].src = eval(imgName + '_n.src');
        self.status = '';
    }
}
function ro_imgOver(imgName, descript) {
    if (document.images) {
        document[imgName].src = eval(imgName + '_o.src');
        self.status = descript;
    }
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_prev_top_n = new Image();
    ro_img_prev_top_n.src = 'ssl_template.navbut-prev-n.gif';
    ro_img_prev_top_o = new Image();
    ro_img_prev_top_o.src = 'ssl_template.navbut-prev-s.gif';
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_prev_bot_n = new Image();
    ro_img_prev_bot_n.src = 'ssl_template.navbut-prev-n.gif';
    ro_img_prev_bot_o = new Image();
    ro_img_prev_bot_o.src = 'ssl_template.navbut-prev-s.gif';
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_next_top_n = new Image();
    ro_img_next_top_n.src = 'ssl_template.navbut-next-n.gif';
    ro_img_next_top_o = new Image();
    ro_img_next_top_o.src = 'ssl_template.navbut-next-s.gif';
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_next_bot_n = new Image();
    ro_img_next_bot_n.src = 'ssl_template.navbut-next-n.gif';
    ro_img_next_bot_o = new Image();
    ro_img_next_bot_o.src = 'ssl_template.navbut-next-s.gif';
}
// done hiding -->
</script>
</head>
<body bgcolor="#ffffff" text="#000000" link="#333399" alink="#9999ff" vlink="#000066">
<div align="center">
<table width="600" cellspacing="0" cellpadding="0" border="0" summary="">
<tr>
  <td>
      <img src="ssl_template.imgdot-1x1-transp.gif" alt="" width="600" height="1" align="bottom" border="0"><br>
      <table width="600" cellspacing="0" cellpadding="0" summary="">
      <tr>
        <td>
        <table width="600" summary="">
        <tr>
            <td align="left" valign="bottom">
            <font face="Arial,Helvetica" size="+2"><b>mod_ssl</b></font>
            </td>
            <td align="right">
              <img src="ssl_template.head-chapter.gif" alt="Chapter" width="175" height="94"> <img src="ssl_template.head-num-6.gif" alt="6" width="74" height="89">
            </td>
        </tr>
        </table>
        </td>
      </tr>
      <tr>
        <td><img src="ssl_template.imgdot-1x1-000000.gif" alt="" width="600" height="2" align="bottom" border="0"></td>
      </tr>
      <tr>
        <td>
           <table width="600" border="0" summary="">
           <tr>
            <td valign="top" align="left" width="250">
<a href="ssl_howto.html" onmouseover="ro_imgOver('ro_img_prev_top', 'previous page'); return true" onmouseout="ro_imgNormal('ro_img_prev_top'); return true" onfocus="ro_imgOver('ro_img_prev_top', 'previous page'); return true" onblur="ro_imgNormal('ro_img_prev_top'); return true"><img name="ro_img_prev_top" src="ssl_template.navbut-prev-n.gif" alt="previous page" width="70" height="18" border="0"></a><br><font color="#000000">HowTo</font>
            </td>
            <td valign="top" align="right" width="250">
<a href="ssl_glossary.html" onmouseover="ro_imgOver('ro_img_next_top', 'next page'); return true" onmouseout="ro_imgNormal('ro_img_next_top'); return true" onfocus="ro_imgOver('ro_img_next_top', 'next page'); return true" onblur="ro_imgNormal('ro_img_next_top'); return true"><img name="ro_img_next_top" src="ssl_template.navbut-next-n.gif" alt="next page" width="70" height="18" border="0"></a><br><font color="#000000">Glossary</font>
            </td>
           </tr>
           </table>
         </td>
      </tr>
      <tr>
        <td>
          <br>
          <img src="ssl_template.title-faq.gif" alt="F.A.Q." width="456" height="60">
        </td>
      </tr>
      </table>
<div align="right">
<table cellspacing="0" cellpadding="0" width="200" summary="">
<tr>
<td>
<em>
``The wise man doesn't give the right answers,
he poses the right questions.''
</em>
</td>
</tr>
<tr>
<td align="right">
<font size="-1">
Claude Levi-Strauss
</font>
</td>
</tr>
</table>
</div>
<p>
<table cellspacing="0" cellpadding="0" border="0" summary="">
<tr valign="bottom">
<td>
<img src="ssl_faq.gfont000.gif" alt="T" width="34" height="34" border="0" align="left">
his chapter is a collection of frequently asked questions (FAQ) and
corresponding answers following the popular USENET tradition. Most of these
questions occured on the Newsgroup <a
href="news:comp.infosystems.www.servers.unix">
<code>comp.infosystems.www.servers.unix</code></a> or the mod_ssl Support
Mailing List <a href="mailto:modssl-users@@modssl.org">
<code>modssl-users@@modssl.org</code></a>. They are collected at this place
to avoid answering the same questions over and over.
<p>
Please read this chapter at least once when installing mod_ssl or at least
search for your problem here before submitting a problem report to the
author.
</td>
<td>
&nbsp;&nbsp;
</td>
<td>
<div align="right">
<table cellspacing="0" cellpadding="5" border="0" bgcolor="#ccccff" width="350" summary="">
<tr>
<td bgcolor="#333399">
<font face="Arial,Helvetica" color="#ccccff">
<b>Table Of Contents</b>
</font>
</td>
</tr>
<tr>
<td>
<font face="Arial,Helvetica" size="-1">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC1"><strong>About the module</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC2"><strong>What is the history of mod_ssl?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC3"><strong>Apache-SSL vs. mod_ssl: differences?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC4"><strong>mod_ssl vs. commercial alternatives?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC5"><strong>mod_ssl/Apache versions?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC6"><strong>mod_ssl and Year 2000?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC7"><strong>mod_ssl and Wassenaar Arrangement?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC8"><strong>About Installation</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC9"><strong>Core dumps for HTTPS requests?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC10"><strong>Core dumps for Apache+mod_ssl+PHP3?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC11"><strong>Undefined symbols on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC12"><strong>Permission problem on SSLMutex</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC13"><strong>Shared memory and process size?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC14"><strong>Shared memory and pathname?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC15"><strong>PRNG and not enough entropy?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC16"><strong>About Configuration</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC17"><strong>HTTP and HTTPS with a single server?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>Where is the HTTPS port?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>How to test HTTPS manually?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>Why does my connection hang?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>Why do I get connection refused?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>Why are the SSL_XXX variables missing?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Bad Certificate Error?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC36"><strong>How to convert from PEM to DER?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC37"><strong>Verisign and the magic getca program?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC38"><strong>Global IDs or SGC?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC39"><strong>Global IDs and Cert Chain?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC40"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>Random SSL errors under heavy load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>Why are connections horribly slow?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>How to use Anonymous-DH ciphers</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>Why do I get 'no shared ciphers'?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC47"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC48"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC49"><strong>Why do I get I/O errors with MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC50"><strong>Why do I get I/O errors with NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC51"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC52"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC53"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC54"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC55"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC56"><strong>How to get a backtrace?</strong></a><br>
</font>
</td>
</tr>
</table>
</div>
</td>
</tr>
</table>
<h2><a name="ToC1">About the module</a></h2>
<ul>
<p>
<li><a name="ToC2"></a>
    <a name="history"></a>
    <strong id="faq">
What is the history of mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#history"><b>L</b></a>]
    <p>
    The mod_ssl v1 package was initially created in April 1998 by <a
    href="mailto:rse@@engelschall.com">Ralf S. Engelschall</a> via porting <a
    href="mailto:ben@@algroup.co.uk">Ben Laurie</a>'s <a
    href="http://www.apache-ssl.org/">Apache-SSL</a> 1.17 source patches for
    Apache 1.2.6 to Apache 1.3b6. Because of conflicts with Ben
    Laurie's development cycle it then was re-assembled from scratch for
    Apache 1.3.0 by merging the old mod_ssl 1.x with the newer Apache-SSL
    1.18. From this point on mod_ssl lived its own life as mod_ssl v2. The
    first publically released version was mod_ssl 2.0.0 from August 10th,
    1998. As of this writing (August 1999) the current mod_ssl version is 2.4.0.
    <p>
    After one year of very active development with over 1000 working hours and
    over 40 releases mod_ssl reached its current state. The result is an
    already very clean source base implementing a very rich functionality.
    The code size increased by a factor of 4 to currently a total of over
    10.000 lines of ANSI C consisting of approx. 70% code and 30% code
    documentation. From the original Apache-SSL code currently approx. 5% is
    remaining only.
<p>
<li><a name="ToC3"></a>
    <a name="apssl-diff"></a>
    <strong id="faq">
What are the functional differences between mod_ssl and Apache-SSL, from where
it is originally derived?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#apssl-diff"><b>L</b></a>]
    <p>
    This neither can be answered in short (there were too many code changes)
    nor can be answered at all by the author (there would immediately be flame
    wars with no reasonable results at the end). But as you easily can guess
    from the 5% of remaining Apache-SSL code, a lot of differences exists,
    although user-visible backward compatibility exists for most things.
    <p>
    When you really want a detailed comparison you have to read the entries in
    the large <code>CHANGES</code> file that is in the mod_ssl
    distribution. Usually this is much too hard-core. So I recommend you to
    either believe in the opinion and recommendations of other users (the
    simplest approach) or do a comparison yourself (the most reasonable
    approach). For the latter, grab distributions of mod_ssl (from <a
    href="http://www.modssl.org/">http://www.modssl.org</a>) and Apache-SSL
    (from <a href="http://www.apache-ssl.org/">http://www.apache-ssl.org</a>),
    install both packages, read their documentation and try them out yourself.
    Then choose the one which pleases you most.
    <p>
    A few final hints to help direct your comparison: quality of documentation
    ("can you easily find answers and are they sufficient?"), quality of
    source code ("is the source code reviewable so you can make sure there
    aren't any trapdoors or inherent security risks because of bad programming
    style?"), easy and clean installation ("can the SSL functionality easily
    added to an Apache source tree without manual editing or patching?"),
    clean integration into Apache ("is the SSL functionality encapsulated and
    cleanly separated from the remaining Apache functionality?"), support for
    Dynamic Shared Object (DSO) facility ("can the SSL functionality built as
    a separate DSO for maximum flexibility?"), Win32 port ("is the SSL
    functionality available also under the Win32 platform?"), amount and
    quality of functionality ("is the provided SSL functionality and control
    possibilities sufficient for your situation?"), quality of problem tracing
    ("is it possible for you to easily trace down the problems via logfiles,
    etc?"), etc. pp.
<p>
<li><a name="ToC4"></a>
    <a name="apssl-diff"></a>
    <strong id="faq">
What are the major differences between mod_ssl and
the commercial alternatives like Raven or Stronghold?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#apssl-diff"><b>L</b></a>]
    <p>
    In the past (until September 20th, 2000) the major difference was
    the RSA license which one received (very cheaply in contrast to
    a direct licensing from RSA DSI) with the commercial Apache SSL
    products. On the other hand, one needed this license only in the US,
    of course. So for non-US citizens this point was useless. But now
    even for US citizens the situations changed because the RSA patent
    expired on September 20th, 2000 and RSA DSI also placed the RSA
    algorithm explicitly into the public domain.
    <p>
    Second, there is the point that one has guaranteed support from
    the commercial vendors. On the other hand, if you monitored the
    Open Source quality of mod_ssl and the support activities
    found on <a href="mailto:modssl-users@@modssl.org">
    <code>modssl-users@@modssl.org</code></a>, you could ask yourself
    whether you are really convinced that you can get better support
    from a commercial vendor.
    <p>
    Third, people often think they would receive perhaps at least a
    better technical SSL solution than mod_ssl from the commercial
    vendors. But this is not really true, because all commercial
    alternatives (Raven 1.4.x, Stronghold 3.x, RedHat SWS 2.x, etc.)
    <i>are</i> actually based on mod_ssl and OpenSSL. The reason for
    this common misunderstanding is mainly because some vendors make no
    attempt to make it reasonably clear that their product is actually
    mod_ssl based. So, do not think, just because the commercial
    alternatives are usually more expensive, that you are also receiving
    an alternative <i>technical</i> SSL solution. This is usually not
    the case. Actually the vendor versions of Apache, mod_ssl and OpenSSL
    often stay behind the latest free versions and perhaps this way still do not
    include important bug and security fixes. On the other hand,
    it sometimes occurs that a vendor version includes useful changes
    which are not available through the official freely available
    packages. But most vendors play fair and contribute back those
    changes to the free software world, of course.
    <p>
    So, in short: There are lots of commercial versions of the popular
    Apache+mod_ssl+OpenSSL server combination available. Every user
    should decide carefully whether they really need to buy a commercial
    version or whether it would not be sufficient to directly use the
    free and official versions of the Apache, mod_ssl and OpenSSL
    packages.
<p>
<li><a name="ToC5"></a>
    <a name="what-version"></a>
    <strong id="faq">
How do I know which mod_ssl version is for which Apache version?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#what-version"><b>L</b></a>]
    <p>
    That's trivial: mod_ssl uses version strings of the syntax
    <em>&lt;mod_ssl-version&gt;</em>-<em>&lt;apache-version&gt;</em>, for
    instance <code>2.4.0-1.3.9</code>. This directly indicates that it's
    mod_ssl version 2.4.0 for Apache version 1.3.9. And this also means you
    <em>only</em> can apply this mod_ssl version to exactly this Apache
    version (unless you use the <code>--force</code> option to mod_ssl's
    <code>configure</code> command ;-).
<p>
<li><a name="ToC6"></a>
    <a name="y2k"></a>
    <strong id="faq">
Is mod_ssl Year 2000 compliant?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#y2k"><b>L</b></a>]
    <p>
    Yes, mod_ssl is Year 2000 compliant.
    <p>
    Because first mod_ssl internally never stores years as two digits.
    Instead it always uses the ANSI C &amp; POSIX numerical data type
    <code>time_t</code> type, which on almost all Unix platforms at the moment
    is a <code>signed long</code> (usually 32-bits) representing seconds since
    epoch of January 1st, 1970, 00:00 UTC. This signed value overflows in
    early January 2038 and not in the year 2000. Second, date and time
    presentations (for instance the variable ``<code>%{TIME_YEAR}</code>'')
    are done with full year value instead of abbreviating to two digits.
    <p>
    Additionally according to a <a
    href="../../misc/FAQ.html#year2000">Year 2000
    statement</a> from the Apache Group, the Apache webserver is Year 2000
    compliant, too. But whether OpenSSL or the underlying Operating System
    (either a Unix or Win32 platform) is Year 2000 compliant is a different
    question which cannot be answered here.
<p>
<li><a name="ToC7"></a>
    <a name="wassenaar"></a>
    <strong id="faq">
What about mod_ssl and the Wassenaar Arrangement?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#wassenaar"><b>L</b></a>]
    <p>
    First, let us explain what <i>Wassenaar</i> and it's <i>Arrangement on
    Export Controls for Conventional Arms and Dual-Use Goods and
    Technologies</i> is: This is a international regime, established 1995, to
    control trade in conventional arms and dual-use goods and technology. It
    replaced the previous <i>CoCom</i> regime. 33 countries are signatories:
    Argentina, Australia, Austria, Belgium, Bulgaria, Canada, Czech Republic,
    Denmark, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Japan,
    Luxembourg, Netherlands, New Zealand, Norway, Poland, Portugal, Republic
    of Korea, Romania, Russian Federation, Slovak Republic, Spain, Sweden,
    Switzerland, Turkey, Ukraine, United Kingdom and United States. For more
    details look at <a
    href="http://www.wassenaar.org/">http://www.wassenaar.org/</a>.
    <p>
    In short: The aim of the Wassenaar Arrangement is to prevent the build up
    of military capabilities that threaten regional and international security
    and stability. The Wassenaar Arrangement controls the export of
    cryptography as a dual-use good, i.e., one that has both military and
    civilian applications. However, the Wassenaar Arrangement also provides an
    exemption from export controls for mass-market software and free software.
    <p>
    In the current Wassenaar ``<i>List of Dual Use Goods and Technologies And
    Munitions</i>'', under ``<i>GENERAL SOFTWARE NOTE</i>'' (GSN) it says
    ``<i>The Lists do not control "software" which is either: 1. [...] 2. "in
    the public domain".</i>'' And under ``<i>DEFINITIONS OF TERMS USED IN
    THESE LISTS</i>'' one can find the definition: ``<i>"In the public
    domain": This means "technology" or "software" which has been made
    available without restrictions upon its further dissemination. N.B.
    Copyright restrictions do not remove "technology" or "software" from being
    "in the public domain".</i>''
    <p>
    So, both mod_ssl and OpenSSL are ``in the public domain'' for the purposes
    of the Wassenaar Agreement and its ``<i>List of Dual Use Goods and
    Technologies And Munitions List</i>''.
    <p>
    Additionally the Wassenaar Agreement itself has no direct consequence for
    exporting cryptography software. What is actually allowed or forbidden to
    be exported from the countries has still to be defined in the local laws
    of each country. And at least according to official press releases from
    the German BMWi (see <a
    href="http://www.bmwi.de/presse/1998/1208prm2.html">here</a>) and the
    Switzerland Bawi (see <a href="http://jya.com/wass-ch.htm">here</a>) there
    will be no forthcoming export restriction for free cryptography software
    for their countries. Remember that mod_ssl is created in Germany and
    distributed from Switzerland.
    <p>
    So, mod_ssl and OpenSSL are not affected by the Wassenaar Agreement.
</ul>
<p>
<br>
<h2><a name="ToC8">About Installation</a></h2>
<ul>
<p>
<li><a name="ToC9"></a>
    <a name="core-dbm"></a>
    <strong id="faq">
When I access my website the first time via HTTPS I get a core dump?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-dbm"><b>L</b></a>]
    <p>
    There can be a lot of reasons why a core dump can occur, of course.
    Ranging from buggy third-party modules, over buggy vendor libraries up to
    a buggy mod_ssl version. But the above situation is often caused by old or
    broken vendor DBM libraries. To solve it either build mod_ssl with the
    built-in SDBM library (specify <tt>--enable-rule=SSL_SDBM</tt> at the
    APACI command line) or switch from ``<tt>SSLSessionCache dbm:</tt>'' to the
    newer ``<tt>SSLSessionCache shm:</tt>'' variant (after you have rebuilt
    Apache with MM, of course).
<p>
<li><a name="ToC10"></a>
    <a name="core-php3"></a>
    <strong id="faq">
My Apache dumps core when I add both mod_ssl and PHP3?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-php3"><b>L</b></a>]
    <p>
    Make sure you add mod_ssl to the Apache source tree first and then do a
    fresh configuration and installation of PHP3. For SSL support EAPI patches
    are required which have to change internal Apache structures. PHP3 needs
    to know about these in order to work correctly. Always make sure that
    <tt>-DEAPI</tt> is contained in the compiler flags when PHP3 is build.
<p>
<li><a name="ToC11"></a>
    <a name="dso-sym"></a>
    <strong id="faq">
When I startup Apache I get errors about undefined symbols like ap_global_ctx?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#dso-sym"><b>L</b></a>]
    <p>
    This actually means you installed mod_ssl as a DSO, but without rebuilding
    Apache with EAPI. Because EAPI is a requirement for mod_ssl, you need an
    extra patched Apache (containing the EAPI patches) and you have to build
    this Apache with EAPI enabled (explicitly specify
    <tt>--enable-rule=EAPI</tt> at the APACI command line).
<p>
<li><a name="ToC12"></a>
    <a name="mutex-perm"></a>
    <strong id="faq">
When I startup Apache I get permission errors related to SSLMutex?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mutex-perm"><b>L</b></a>]
    <p>
    When you receive entries like ``<code>mod_ssl: Child could not open
    SSLMutex lockfile /opt/apache/logs/ssl_mutex.18332 (System error follows)
    [...] System: Permission denied (errno: 13)</code>'' this is usually
    caused by to restrictive permissions on the <i>parent</i> directories.
    Make sure that all parent directories (here <code>/opt</code>,
    <code>/opt/apache</code> and <code>/opt/apache/logs</code>) have the x-bit
    set at least for the UID under which Apache's children are running (see
    the <code>User</code> directive of Apache).
<p>
<li><a name="ToC13"></a>
    <a name="mm"></a>
    <strong id="faq">
When I use the MM library and the shared memory cache each process grows
1.5MB according to `top' although I specified 512000 as the cache size?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mm"><b>L</b></a>]
    <p>
    The additional 1MB are caused by the global shared memory pool EAPI
    allocates for all modules and which is not used by mod_ssl for
    various reasons. So the actually allocated shared memory is always
    1MB more than what you specify on <code>SSLSessionCache</code>.
    But don't be confused by the display of `top': although is
    indicates that <i>each</i> process grow, this is not reality, of
    course. Instead the additional memory consumption is shared by
    all processes, i.e. the 1.5MB are allocated only once per Apache
    instance and not once per Apache server process.
<p>
<li><a name="ToC14"></a>
    <a name="mmpath"></a>
    <strong id="faq">
Apache creates files in a directory declared by the internal
EAPI_MM_CORE_PATH define. Is there a way to override the path using a
configuration directive?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mmpath"><b>L</b></a>]
    <p>
    No, there is not configuration directive, because for technical
    bootstrapping reasons, a directive not possible at all. Instead
    use ``<code>CFLAGS='-DEAPI_MM_CORE_PATH="/path/to/wherever/"'
    ./configure ...</code>'' when building Apache or use option
    <b>-d</b> when starting <code>httpd</code>.
<p>
<li><a name="ToC15"></a>
    <a name="entropy"></a>
    <strong id="faq">
When I fire up the server, mod_ssl stops with the error
"Failed to generate temporary 512 bit RSA private key", why?
And a "PRNG not seeded" error occurs if I try "make certificate".
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#entropy"><b>L</b></a>]
    <p>
    Cryptographic software needs a source of unpredictable data
    to work correctly. Many open source operating systems provide
    a "randomness device" that serves this purpose (usually named
    <code>/dev/random</code>). On other systems, applications have to
    seed the OpenSSL Pseudo Random Number Generator (PRNG) manually with
    appropriate data before generating keys or performing public key
    encryption. As of version 0.9.5, the OpenSSL functions that need
    randomness report an error if the PRNG has not been seeded with
    at least 128 bits of randomness. So mod_ssl has to provide enough
    entropy to the PRNG to work correctly. For this one has to use the
    <code>SSLRandomSeed</code> directives (to solve the run-time problem)
    and create a <code>$HOME/.rnd</code> file to make sure enough
    entropy is available also for the "<code>make certificate</code>"
    step (in case the "<code>make certificate</code>" procedure is not
    able to gather enough entropy theirself by searching for system
    files).
</ul>
<p>
<br>
<h2><a name="ToC16">About Configuration</a></h2>
<ul>
<p>
<li><a name="ToC17"></a>
    <a name="https-parallel"></a>
    <strong id="faq">
Is it possible to provide HTTP and HTTPS with a single server?</strong>
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-parallel"><b>L</b></a>]
    <p>
    Yes, HTTP and HTTPS use different server ports, so there is no direct
    conflict between them. Either run two separate server instances (one binds
    to port 80, the other to port 443) or even use Apache's elegant virtual
    hosting facility where you can easily create two virtual servers which
    Apache dispatches: one responding to port 80 and speaking HTTP and one
    responding to port 443 speaking HTTPS.
<p>
<li><a name="ToC18"></a>
    <a name="https-port"></a>
    <strong id="faq">
I know that HTTP is on port 80, but where is HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-port"><b>L</b></a>]
    <p>
    You can run HTTPS on any port, but the standards specify port 443, which
    is where any HTTPS compliant browser will look by default. You can force
    your browser to look on a different port by specifying it in the URL like
    this (for port 666): <code>https://secure.server.dom:666/</code>
<p>
<li><a name="ToC19"></a>
    <a name="https-test"></a>
    <strong id="faq">
How can I speak HTTPS manually for testing purposes?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-test"><b>L</b></a>]
    <p>
    While you usually just use
    <p>
    <code><b>$ telnet localhost 80</b></code><br>
    <code><b>GET / HTTP/1.0</b></code>
    <p>
    for simple testing the HTTP protocol of Apache, it's not such easy for
    HTTPS because of the SSL protocol between TCP and HTTP. But with the
    help of OpenSSL's <code>s_client</code> command you can do a similar
    check even for HTTPS:
    <p>
    <code><b>$ openssl s_client -connect localhost:443 -state -debug</b></code><br>
    <code><b>GET / HTTP/1.0</b></code>
    <p>
    Before the actual HTTP response you receive detailed information about the
    SSL handshake. For a more general command line client which directly
    understands both the HTTP and HTTPS scheme, can perform GET and POST
    methods, can use a proxy, supports byte ranges, etc. you should have a
    look at nifty <a href="http://curl.haxx.nu/">cURL</a>
    tool. With it you can directly check if your Apache is running fine on
    Port 80 and 443 as following:
    <p>
    <code><b>$ curl http://localhost/</b></code><br>
    <code><b>$ curl https://localhost/</b></code><br>
<p>
<li><a name="ToC20"></a>
    <a name="hang"></a>
    <strong id="faq">
Why does the connection hang when I connect to my SSL-aware Apache server?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hang"><b>L</b></a>]
    <p>
    Because you connected with HTTP to the HTTPS port, i.e. you used an URL of
    the form ``<code>http://</code>'' instead of ``<code>https://</code>''.
    This also happens the other way round when you connect via HTTPS to a HTTP
    port, i.e. when you try to use ``<code>https://</code>'' on a server that
    doesn't support SSL (on this port). Make sure you are connecting to a
    virtual server that supports SSL, which is probably the IP associated with
    your hostname, not localhost (127.0.0.1).
<p>
<li><a name="ToC21"></a>
    <a name="hang"></a>
    <strong id="faq">
Why do I get ``Connection Refused'' messages when trying to access my freshly
installed Apache+mod_ssl server via HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hang"><b>L</b></a>]
    <p>
    There can be various reasons. Some of the common mistakes is that people
    start Apache with just ``<tt>apachectl start</tt>'' (or
    ``<tt>httpd</tt>'') instead of ``<tt>apachectl startssl</tt>'' (or
    ``<tt>httpd -DSSL</tt>''. Or you're configuration is not correct. At
    least make sure that your ``<tt>Listen</tt>'' directives match your
    ``<tt>&lt;VirtualHost&gt;</tt>'' directives. And if all fails, please do
    yourself a favor and start over with the default configuration mod_ssl
    provides you.
<p>
<li><a name="ToC22"></a>
    <a name="env-vars"></a>
    <strong id="faq">
In my CGI programs and SSI scripts the various documented
<code>SSL_XXX</code> variables do not exists. Why?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#env-vars"><b>L</b></a>]
    <p>
    Just make sure you have ``<code>SSLOptions +StdEnvVars</code>''
    enabled for the context of your CGI/SSI requests.
<p>
<li><a name="ToC23"></a>
    <a name="relative-links"></a>
    <strong id="faq">
How can I use relative hyperlinks to switch between HTTP and HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#relative-links"><b>L</b></a>]
    <p>
    Usually you have to use fully-qualified hyperlinks because
    you have to change the URL scheme. But with the help of some URL
    manipulations through mod_rewrite you can achieve the same effect while
    you still can use relative URLs:
    <pre>
    RewriteEngine on
    RewriteRule   ^/(.*):SSL$   https://%{SERVER_NAME}/$1 [R,L]
    RewriteRule   ^/(.*):NOSSL$ http://%{SERVER_NAME}/$1  [R,L]
    </pre>
    This rewrite ruleset lets you use hyperlinks of the form
    <pre>
    &lt;a href="document.html:SSL"&gt
    </pre>
</ul>
<p>
<br>
<h2><a name="ToC24">About Certificates</a></h2>
<ul>
<p>
<li><a name="ToC25"></a>
    <a name="what-is"></a>
    <strong id="faq">
What are RSA Private Keys, CSRs and Certificates?</strong>
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#what-is"><b>L</b></a>]
    <p>
    The RSA private key file is a digital file that you can use to decrypt
    messages sent to you. It has a public component which you distribute (via
    your Certificate file) which allows people to encrypt those messages to
    you. A Certificate Signing Request (CSR) is a digital file which contains
    your public key and your name. You send the CSR to a Certifying Authority
    (CA) to be converted into a real Certificate. A Certificate contains your
    RSA public key, your name, the name of the CA, and is digitally signed by
    your CA. Browsers that know the CA can verify the signature on that
    Certificate, thereby obtaining your RSA public key. That enables them to
    send messages which only you can decrypt.
    See the <a href="ssl_intro.html">Introduction</a> chapter for a general
    description of the SSL protocol.
<p>
<li><a name="ToC26"></a>
    <a name="startup"></a>
    <strong id="faq">
Seems like there is a difference on startup between the original Apache and an SSL-aware Apache?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#startup"><b>L</b></a>]
    <p>
    Yes, in general, starting Apache with a built-in mod_ssl is just like
    starting an unencumbered Apache, except for the fact that when you have a
    pass phrase on your SSL private key file. Then a startup dialog pops up
    asking you to enter the pass phrase.
    <p>
    To type in the pass phrase manually when starting the server can be
    problematic, for instance when starting the server from the system boot
    scripts. As an alternative to this situation you can follow the steps
    below under ``How can I get rid of the pass-phrase dialog at Apache
    startup time?''.
<p>
<li><a name="ToC27"></a>
    <a name="cert-dummy"></a>
    <strong id="faq">
How can I create a dummy SSL server Certificate for testing purposes?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-dummy"><b>L</b></a>]
    <p>
    A Certificate does not have to be signed by a public CA. You can use your
    private key to sign the Certificate which contains your public key. You
    can install this Certificate into your server, and people using Netscape
    Navigator (not MSIE) will be able to connect after clicking OK to a
    warning dialogue. You can get MSIE to work, and your customers can
    eliminate the dialogue, by installing that Certificate manually into their
    browsers.
    <p>
    Just use the ``<code>make certificate</code>'' command at the top-level
    directory of the Apache source tree right before installing Apache via
    ``<code>make install</code>''. This creates a self-signed SSL Certificate
    which expires after 30 days and isn't encrypted (which means you don't
    need to enter a pass-phrase at Apache startup time).
    <p>
    BUT REMEMBER: YOU REALLY HAVE TO CREATE A REAL CERTIFICATE FOR THE LONG
    RUN! HOW THIS IS DONE IS DESCRIBED IN THE NEXT ANSWER.
<p>
<li><a name="ToC28"></a>
    <a name="cert-real"></a>
    <strong id="faq">
Ok, I've got my server installed and want to create a real SSL
server Certificate for it. How do I do it?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-real"><b>L</b></a>]
    <p>
    Here is a step-by-step description:
    <p>
    <ol>
    <li>Make sure OpenSSL is really installed and in your <code>PATH</code>.
        But some commands even work ok when you just run the
        ``<code>openssl</code>'' program from within the OpenSSL source tree as
        ``<code>./apps/openssl</code>''.
    <p>
    <li>Create a RSA private key for your Apache server
       (will be Triple-DES encrypted and PEM formatted):
       <p>
       <code><strong>$ openssl genrsa -des3 -out server.key 1024</strong></code>
       <p>
       Please backup this <code>server.key</code> file and remember the
       pass-phrase you had to enter at a secure location.
       You can see the details of this RSA private key via the command:
       <p>
       <code><strong>$ openssl rsa -noout -text -in server.key</strong></code>
       <p>
       And you could create a decrypted PEM version (not recommended)
       of this RSA private key via:
       <p>
       <code><strong>$ openssl rsa -in server.key -out server.key.unsecure</strong></code>
    <p>
    <li>Create a Certificate Signing Request (CSR) with the server RSA private
       key (output will be PEM formatted):
       <p>
       <code><strong>$ openssl req -new -key server.key -out server.csr</strong></code>
       <p>
       Make sure you enter the FQDN ("Fully Qualified Domain Name") of the
       server when OpenSSL prompts you for the "CommonName", i.e. when you
       generate a CSR for a website which will be later accessed via
       <code>https://www.foo.dom/</code>, enter "www.foo.dom" here.
       You can see the details of this CSR via the command
       <p>
       <code><strong>$ openssl req -noout -text -in server.csr</strong></code>
    <p>
    <li>You now have to send this Certificate Signing Request (CSR) to
       a Certifying Authority (CA) for signing. The result is then a real
       Certificate which can be used for Apache. Here you have two options:
       First you can let the CSR sign by a commercial CA like Verisign or
       Thawte. Then you usually have to post the CSR into a web form, pay for
       the signing and await the signed Certificate you then can store into a
       server.crt file. For more information about commercial CAs have a look
       at the following locations:
       <p>
       <ul>
       <li>  Verisign<br>
             <a href="http://digitalid.verisign.com/server/apacheNotice.htm">
             http://digitalid.verisign.com/server/apacheNotice.htm
             </a>
       <li>  Thawte Consulting<br>
             <a href="http://www.thawte.com/certs/server/request.html">
             http://www.thawte.com/certs/server/request.html
             </a>
       <li>  CertiSign Certificadora Digital Ltda.<br>
             <a href="http://www.certisign.com.br">
             http://www.certisign.com.br
             </a>
       <li>  IKS GmbH<br>
             <a href="http://www.iks-jena.de/produkte/ca/">
             http://www.iks-jena.de/produkte/ca/
             </a>
       <li>  Uptime Commerce Ltd.<br>
             <a href="http://www.uptimecommerce.com">
             http://www.uptimecommerce.com
             </a>
       <li>  BelSign NV/SA<br>
             <a href="http://www.belsign.be">
             http://www.belsign.be
             </a>
       </ul>
       <p>
       Second you can use your own CA and now have to sign the CSR yourself by
       this CA. Read the next answer in this FAQ on how to sign a CSR with
       your CA yourself.
       You can see the details of the received Certificate via the command:
       <p>
       <code><strong>$ openssl x509 -noout -text -in server.crt</strong></code>
    <p>
    <li>Now you have two files: <code>server.key</code> and
    <code>server.crt</code>. These now can be used as following inside your
    Apache's <code>httpd.conf</code> file:
       <pre>
       SSLCertificateFile    /path/to/this/server.crt
       SSLCertificateKeyFile /path/to/this/server.key
       </pre>
       The <code>server.csr</code> file is no longer needed.
    </ol>
<p>
<li><a name="ToC29"></a>
    <a name="cert-ownca"></a>
    <strong id="faq">
How can I create and use my own Certificate Authority (CA)?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-ownca"><b>L</b></a>]
    <p>
    The short answer is to use the <code>CA.sh</code> or <code>CA.pl</code>
    script provided by OpenSSL. The long and manual answer is this:
    <p>
    <ol>
    <li>Create a RSA private key for your CA
       (will be Triple-DES encrypted and PEM formatted):
       <p>
       <code><strong>$ openssl genrsa -des3 -out ca.key 1024</strong></code>
       <p>
       Please backup this <code>ca.key</code> file and remember the
       pass-phrase you currently entered at a secure location.
       You can see the details of this RSA private key via the command
       <p>
       <code><strong>$ openssl rsa -noout -text -in ca.key</strong></code>
       <p>
       And you can create a decrypted PEM version (not recommended) of this
       private key via:
       <p>
       <code><strong>$ openssl rsa -in ca.key -out ca.key.unsecure</strong></code>
    <p>
    <li>Create a self-signed CA Certificate (X509 structure)
       with the RSA key of the CA (output will be PEM formatted):
       <p>
       <code><strong>$ openssl req -new -x509 -days 365 -key ca.key -out ca.crt</strong></code>
       <p>
       You can see the details of this Certificate via the command:
       <p>
       <code><strong>$ openssl x509 -noout -text -in ca.crt</strong></code>
    <p>
    <li>Prepare a script for signing which is needed because
       the ``<code>openssl ca</code>'' command has some strange requirements
       and the default OpenSSL config doesn't allow one easily to use
       ``<code>openssl ca</code>'' directly. So a script named
       <code>sign.sh</code> is distributed with the mod_ssl distribution
       (subdir <code>pkg.contrib/</code>). Use this script for signing.
    <p>
    <li>Now you can use this CA to sign server CSR's in order to create real
       SSL Certificates for use inside an Apache webserver (assuming
       you already have a <code>server.csr</code> at hand):
       <p>
       <code><strong>$ ./sign.sh server.csr</strong></code>
       <p>
       This signs the server CSR and results in a <code>server.crt</code> file.
    </ol>
<p>
<li><a name="ToC30"></a>
    <a name="change-passphrase"></a>
    <strong id="faq">
How can I change the pass-phrase on my private key file?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#change-passphrase"><b>L</b></a>]
    <p>
    You simply have to read it with the old pass-phrase and write it again
    by specifying the new pass-phrase. You can accomplish this with the following
    commands:
    <p>
    <code><strong>$ openssl rsa -des3 -in server.key -out server.key.new</strong></code><br>
    <code><strong>$ mv server.key.new server.key</strong></code><br>
    <p>
    Here you're asked two times for a PEM pass-phrase. At the first
    prompt enter the old pass-phrase and at the second prompt
    enter the new pass-phrase.
<p>
<li><a name="ToC31"></a>
    <a name="remove-passphrase"></a>
    <strong id="faq">
How can I get rid of the pass-phrase dialog at Apache startup time?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#remove-passphrase"><b>L</b></a>]
    <p>
    The reason why this dialog pops up at startup and every re-start
    is that the RSA private key inside your server.key file is stored in
    encrypted format for security reasons. The pass-phrase is needed to be
    able to read and parse this file. When you can be sure that your server is
    secure enough you perform two steps:
    <p>
    <ol>
    <li>Remove the encryption from the RSA private key (while
       preserving the original file):
       <p>
       <code><strong>$ cp server.key server.key.org</strong></code><br>
       <code><strong>$ openssl rsa -in server.key.org -out server.key</strong></code>
    <p>
    <li>Make sure the server.key file is now only readable by root:
       <p>
       <code><strong>$ chmod 400 server.key</strong></code>
    </ol>
    <p>
    Now <code>server.key</code> will contain an unencrypted copy of the key.
    If you point your server at this file it will not prompt you for a
    pass-phrase. HOWEVER, if anyone gets this key they will be able to
    impersonate you on the net. PLEASE make sure that the permissions on that
    file are really such that only root or the web server user can read it
    (preferably get your web server to start as root but run as another
    server, and have the key readable only by root).
    <p>
    As an alternative approach you can use the ``<code>SSLPassPhraseDialog
    exec:/path/to/program</code>'' facility. But keep in mind that this is
    neither more nor less secure, of course.
<p>
<li><a name="ToC32"></a>
    <a name="verify-key"></a>
    <strong id="faq">
How do I verify that a private key matches its Certificate?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#verify-key"><b>L</b></a>]
    <p>
    The private key contains a series of numbers. Two of those numbers form
    the "public key", the others are part of your "private key". The "public
    key" bits are also embedded in your Certificate (we get them from your
    CSR). To check that the public key in your cert matches the public
    portion of your private key, you need to view the cert and the key and
    compare the numbers. To view the Certificate and the key run the
    commands:
    <p>
    <code><strong>$ openssl x509 -noout -text -in server.crt</strong></code><br>
    <code><strong>$ openssl rsa -noout -text -in server.key</strong></code>
    <p>
    The `modulus' and the `public exponent' portions in the key and the
    Certificate must match. But since the public exponent is usually 65537
    and it's bothering comparing long modulus you can use the following
    approach:
    <p>
    <code><strong>$ openssl x509 -noout -modulus -in server.crt | openssl md5</strong></code><br>
    <code><strong>$ openssl rsa -noout -modulus -in server.key | openssl md5</strong></code>
    <p>
    And then compare these really shorter numbers. With overwhelming
    probability they will differ if the keys are different. BTW, if I want to
    check to which key or certificate a particular CSR belongs you can compute
    <p>
    <code><strong>$ openssl req -noout -modulus -in server.csr | openssl md5</strong></code>
<p>
<li><a name="ToC33"></a>
    <a name="keysize1"></a>
    <strong id="faq">
What does it mean when my connections fail with an "alert bad certificate"
error?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#keysize1"><b>L</b></a>]
    <p>
    Usually when you see errors like ``<tt>OpenSSL: error:14094412: SSL
    routines:SSL3_READ_BYTES:sslv3 alert bad certificate</tt>'' in the SSL
    logfile, this means that the browser was unable to handle the server
    certificate/private-key which perhaps contain a RSA-key not equal to 1024
    bits. For instance Netscape Navigator 3.x is one of those browsers.
<p>
<li><a name="ToC34"></a>
    <a name="keysize2"></a>
    <strong id="faq">
Why does my 2048-bit private key not work?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#keysize2"><b>L</b></a>]
    <p>
    The private key sizes for SSL must be either 512 or 1024 for compatibility
    with certain web browsers. A keysize of 1024 bits is recommended because
    keys larger than 1024 bits are incompatible with some versions of Netscape
    Navigator and Microsoft Internet Explorer, and with other browsers that
    use RSA's BSAFE cryptography toolkit.
<p>
<li><a name="ToC35"></a>
    <a name="hash-symlinks"></a>
    <strong id="faq">
Why is client authentication broken after upgrading from
SSLeay version 0.8 to 0.9?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hash-symlinks"><b>L</b></a>]
    <p>
    The CA certificates under the path you configured with
    <code>SSLCACertificatePath</code> are found by SSLeay through hash
    symlinks. These hash values are generated by the `<code>openssl x509 -noout
    -hash</code>' command. But the algorithm used to calculate the hash for a
    certificate has changed between SSLeay 0.8 and 0.9. So you have to remove
    all old hash symlinks and re-create new ones after upgrading. Use the
    <code>Makefile</code> mod_ssl placed into this directory.
<p>
<li><a name="ToC36"></a>
    <a name="pem-to-der"></a>
    <strong id="faq">
How can I convert a certificate from PEM to DER format?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#pem-to-der"><b>L</b></a>]
    <p>
    The default certificate format for SSLeay/OpenSSL is PEM, which actually
    is Base64 encoded DER with header and footer lines. For some applications
    (e.g. Microsoft Internet Explorer) you need the certificate in plain DER
    format. You can convert a PEM file <code>cert.pem</code> into the
    corresponding DER file <code>cert.der</code> with the following command:
    <code><strong>$ openssl x509 -in cert.pem -out cert.der -outform DER</strong></code>
<p>
<li><a name="ToC37"></a>
    <a name="verisign-getca"></a>
    <strong id="faq">
I try to install a Verisign certificate. Why can't I find neither the
<code>getca</code> nor <code>getverisign</code> programs Verisign mentions?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#verisign-getca"><b>L</b></a>]
    <p>
    This is because Verisign has never provided specific instructions
    for Apache+mod_ssl. Rather they tell you what you should do
    if you were using C2Net's Stronghold (a commercial Apache
    based server with SSL support). The only thing you have to do
    is to save the certificate into a file and give the name of
    that file to the <code>SSLCertificateFile</code> directive.
    Remember that you need to give the key file in as well (see
    <code>SSLCertificateKeyFile</code> directive). For a better
    CA-related overview on SSL certificate fiddling you can look at <a
    href="http://www.thawte.com/certs/server/keygen/mod_ssl.html">
    Thawte's mod_ssl instructions</a>.
<p>
<li><a name="ToC38"></a>
    <a name="gid"></a>
    <strong id="faq">
Can I use the Server Gated Cryptography (SGC) facility (aka Verisign Global
ID) also with mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#gid"><b>L</b></a>]
    <p>
    Yes, mod_ssl since version 2.1 supports the SGC facility. You don't have
    to configure anything special for this, just use a Global ID as your
    server certificate. The <i>step up</i> of the clients are then
    automatically handled by mod_ssl under run-time. For details please read
    the <tt>README.GlobalID</tt> document in the mod_ssl distribution.
<p>
<li><a name="ToC39"></a>
    <a name="gid"></a>
    <strong id="faq">
After I have installed my new Verisign Global ID server certificate, the
browsers complain that they cannot verify the server certificate?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#gid"><b>L</b></a>]
    <p>
    That is because Verisign uses an intermediate CA certificate between
    the root CA certificate (which is installed in the browsers) and
    the server certificate (which you installed in the server). You
    should have received this additional CA certificate from Verisign.
    If not, complain to them. Then configure this certificate with the
    <code>SSLCertificateChainFile</code> directive in the server. This
    makes sure the intermediate CA certificate is send to the browser
    and this way fills the gap in the certificate chain.
</ul>
<p>
<br>
<h2><a name="ToC40">About SSL Protocol</a></h2>
<ul>
<p>
<li><a name="ToC41"></a>
    <a name="random-errors"></a>
    <strong id="faq">
Why do I get lots of random SSL protocol errors under heavy server load?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#random-errors"><b>L</b></a>]
    <p>
    There can be a number of reasons for this, but the main one
    is problems with the SSL session Cache specified by the
    <tt>SSLSessionCache</tt> directive. The DBM session cache is most
    likely the source of the problem, so trying the SHM session cache or
    no cache at all may help.
<p>
<li><a name="ToC42"></a>
    <a name="load"></a>
    <strong id="faq">
Why has my webserver a higher load now that I run SSL there?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#load"><b>L</b></a>]
    <p>
    Because SSL uses strong cryptographic encryption and this needs a lot of
    number crunching. And because when you request a webpage via HTTPS even
    the images are transferred encrypted. So, when you have a lot of HTTPS
    traffic the load increases.
<p>
<li><a name="ToC43"></a>
    <a name="random"></a>
    <strong id="faq">
Often HTTPS connections to my server require up to 30 seconds for establishing
the connection, although sometimes it works faster?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#random"><b>L</b></a>]
    <p>
    Usually this is caused by using a <code>/dev/random</code> device for
    <code>SSLRandomSeed</code> which is blocking in read(2) calls if not
    enough entropy is available. Read more about this problem in the refernce
    chapter under <code>SSLRandomSeed</code>.
<p>
<li><a name="ToC44"></a>
    <a name="ciphers"></a>
    <strong id="faq">
What SSL Ciphers are supported by mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#ciphers"><b>L</b></a>]
    <p>
    Usually just all SSL ciphers which are supported by the
    version of OpenSSL in use (can depend on the way you built
    OpenSSL). Typically this at least includes the following:
    <p>
    <ul>
    <li>RC4 with MD5
    <li>RC4 with MD5 (export version restricted to 40-bit key)
    <li>RC2 with MD5
    <li>RC2 with MD5 (export version restricted to 40-bit key)
    <li>IDEA with MD5
    <li>DES with MD5
    <li>Triple-DES with MD5
    </ul>
    <p>
    To determine the actual list of supported ciphers you can
    run the following command:
    <p>
    <code><strong>$ openssl ciphers -v</strong></code><br>
<p>
<li><a name="ToC45"></a>
    <a name="cipher-adh"></a>
    <strong id="faq">
I want to use Anonymous Diffie-Hellman (ADH) ciphers, but I always get ``no
shared cipher'' errors?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cipher-adh"><b>L</b></a>]
    <p>
    In order to use Anonymous Diffie-Hellman (ADH) ciphers, it is not enough
    to just put ``<code>ADH</code>'' into your <code>SSLCipherSuite</code>.
    Additionally you have to build OpenSSL with
    ``<code>-DSSL_ALLOW_ADH</code>''. Because per default OpenSSL does not
    allow ADH ciphers for security reasons. So if you are actually enabling
    these ciphers make sure you are informed about the side-effects.
<p>
<li><a name="ToC46"></a>
    <a name="cipher-shared"></a>
    <strong id="faq">
I always just get a 'no shared ciphers' error if
I try to connect to my freshly installed server?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cipher-shared"><b>L</b></a>]
    <p>
    Either you have messed up your <code>SSLCipherSuite</code>
    directive (compare it with the pre-configured example in
    <code>httpd.conf</code>) or you have choosen the DSA/DH
    algorithms instead of RSA under "<code>make certificate</code>"
    and ignored or overseen the warnings. Because if you have choosen
    DSA/DH, then your server no longer speaks RSA-based SSL ciphers
    (at least not until you also configure an additional RSA-based
    certificate/key pair). But current browsers like NS or IE only speak
    RSA ciphers. The result is the "no shared ciphers" error. To fix
    this, regenerate your server certificate/key pair and this time
    choose the RSA algorithm.
<p>
<li><a name="ToC47"></a>
    <a name="vhosts"></a>
    <strong id="faq">
Why can't I use SSL with name-based/non-IP-based virtual hosts?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#vhosts"><b>L</b></a>]
    <p>
    The reason is very technical. Actually it's some sort of a chicken and
    egg problem: The SSL protocol layer stays below the HTTP protocol layer
    and encapsulates HTTP. When an SSL connection (HTTPS) is established
    Apache/mod_ssl has to negotiate the SSL protocol parameters with the
    client. For this mod_ssl has to consult the configuration of the virtual
    server (for instance it has to look for the cipher suite, the server
    certificate, etc.). But in order to dispatch to the correct virtual server
    Apache has to know the <code>Host</code> HTTP header field. For this the
    HTTP request header has to be read. This cannot be done before the SSL
    handshake is finished. But the information is already needed at the SSL
    handshake phase. Bingo!
<p>
<li><a name="ToC48"></a>
    <a name="lock-icon"></a>
    <strong id="faq">
When I use Basic Authentication over HTTPS the lock icon in Netscape browsers
still show the unlocked state when the dialog pops up. Does this mean the
username/password is still transmitted unencrypted?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#lock-icon"><b>L</b></a>]
    <p>
    No, the username/password is already transmitted encrypted. The icon in
    Netscape browsers is just not really synchronized with the SSL/TLS layer
    (it toggles to the locked state when the first part of the actual webpage
    data is transferred which is not quite correct) and this way confuses
    people. The Basic Authentication facility is part of the HTTP layer and
    this layer is above the SSL/TLS layer in HTTPS. And before any HTTP data
    communication takes place in HTTPS the SSL/TLS layer has already done the
    handshake phase and switched to encrypted communication. So, don't get
    confused by this icon.
<p>
<li><a name="ToC49"></a>
    <a name="io-ie"></a>
    <strong id="faq">
When I connect via HTTPS to an Apache+mod_ssl+OpenSSL server with Microsoft Internet
Explorer (MSIE) I get various I/O errors. What is the reason?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#io-ie"><b>L</b></a>]
    <p>
    The first reason is that the SSL implementation in some MSIE versions has
    some subtle bugs related to the HTTP keep-alive facility and the SSL close
    notify alerts on socket connection close. Additionally the interaction
    between SSL and HTTP/1.1 features are problematic with some MSIE versions,
    too. You've to work-around these problems by forcing
    Apache+mod_ssl+OpenSSL to not use HTTP/1.1, keep-alive connections or
    sending the SSL close notify messages to MSIE clients. This can be done by
    using the following directive in your SSL-aware virtual host section:
    <pre>
    SetEnvIf User-Agent ".*MSIE.*" \
             <b>nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0</b></pre>
    Additionally it is known some MSIE versions have also problems
    with particular ciphers. Unfortunately one cannot workaround these
    bugs only for those MSIE particular clients, because the ciphers
    are already used in the SSL handshake phase. So a MSIE-specific
    <tt>SetEnvIf</tt> doesn't work to solve these problems. Instead one
    has to do more drastic adjustments to the global parameters. But
    before you decide to do this, make sure your clients really have
    problems. If not, do not do this, because it affects all(!) your
    clients, i.e., also your non-MSIE clients.
    <p>
    The next problem is that 56bit export versions of MSIE 5.x browsers have a
    broken SSLv3 implementation which badly interacts with OpenSSL versions
    greater than 0.9.4. You can either accept this and force your clients to
    upgrade their browsers, or you downgrade to OpenSSL 0.9.4 (hmmm), or you
    can decide to workaround it by accepting the drawback that your workaround
    will horribly affect also other browsers:
    <pre>
    SSLProtocol all <b>-SSLv3</b></pre>
    This completely disables the SSLv3 protocol and lets those browsers work.
    But usually this is an even less acceptable workaround. A more reasonable
    workaround is to address the problem more closely and disable only the
    ciphers which cause trouble.
    <pre>
    SSLCipherSuite ALL:!ADH:<b>!EXPORT56</b>:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP</pre>
    This also lets the broken MSIE versions work, but only removes the
    newer 56bit TLS ciphers.
    <p>
    Another problem with MSIE 5.x clients is that they refuse to connect to
    URLs of the form <tt>https://12.34.56.78/</tt> (IP-addresses are used
    instead of the hostname), if the server is using the Server Gated
    Cryptography (SGC) facility. This can only be avoided by using the fully
    qualified domain name (FQDN) of the website in hyperlinks instead, because
    MSIE 5.x has an error in the way it handles the SGC negotiation.
    <p>
    And finally there are versions of MSIE which seem to require that
    an SSL session can be reused (a totally non standard-conforming
    behaviour, of course). Connection with those MSIE versions only work
    if a SSL session cache is used. So, as a work-around, make sure you
    are using a session cache (see <tt>SSLSessionCache</tt> directive).
<p>
<li><a name="ToC50"></a>
    <a name="io-ns"></a>
    <strong id="faq">
When I connect via HTTPS to an Apache+mod_ssl server with Netscape Navigator I
get I/O errors and the message "Netscape has encountered bad data from the
server" What's the reason?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#io-ns"><b>L</b></a>]
    <p>
    The problem usually is that you had created a new server certificate with
    the same DN, but you had told your browser to accept forever the old
    server certificate. Once you clear the entry in your browser for the old
    certificate, everything usually will work fine. Netscape's SSL
    implementation is correct, so when you encounter I/O errors with Netscape
    Navigator it is most of the time caused by the configured certificates.
</ul>
<p>
<br>
<h2><a name="ToC51">About Support</a></h2>
<ul>
<p>
<li><a name="ToC52"></a>
    <a name="resources"></a>
    <strong id="faq">
What information resources are available in case of mod_ssl problems?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#resources"><b>L</b></a>]
    <p>
The following information resources are available.
In case of problems you should search here first.
<p>
<ol>
<li><em>Answers in the User Manual's F.A.Q. List (this)</em><br>
    <a href="http://www.modssl.org/docs/2.8/ssl_faq.html">
    http://www.modssl.org/docs/2.8/ssl_faq.html</a><br>
    First look inside the F.A.Q. (this text), perhaps your problem is such
    popular that it was already answered a lot of times in the past.
<p>
<li><em>Postings from the modssl-users Support Mailing List</em>
    <a href="http://www.modssl.org/support/">
    http://www.modssl.org/support/</a><br>
    Second search for your problem in one of the existing archives of the
    modssl-users mailing list. Perhaps your problem popped up at least once for
    another user, too.
<p>
<li><em>Problem Reports in the Bug Database</em>
    <a href="http://www.modssl.org/support/bugdb/">
    http://www.modssl.org/support/bugdb/</a><br>
    Third look inside the mod_ssl Bug Database. Perhaps
    someone else already has reported the problem.
</ol>
<p>
<li><a name="ToC53"></a>
    <a name="contact"></a>
    <strong id="faq">
What support contacts are available in case of mod_ssl problems?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#contact"><b>L</b></a>]
    <p>
The following lists all support possibilities for mod_ssl, in order of
preference, i.e. start in this order and do not pick the support possibility
you just like most, please.
<p>
<ol>
<li><em>Write a Problem Report into the Bug Database</em><br>
    <a href="http://www.modssl.org/support/bugdb/">
    http://www.modssl.org/support/bugdb/</a><br>
    This is the preferred way of submitting your problem report, because this
    way it gets filed into the bug database (it cannot be lost) <em>and</em>
    send to the modssl-users mailing list (others see the current problems and
    learn from answers).
<p>
<li><em>Write a Problem Report to the modssl-users Support Mailing List</em><br>
    <a href="mailto:modssl-users@@modssl.org">
    modssl-users&nbsp;@@&nbsp;modssl.org</a><br>
    This is the second way of submitting your problem report. You have to
    subscribe to the list first, but then you can easily discuss your problem
    with both the author and the whole mod_ssl user community.
<p>
<li><em>Write a Problem Report to the author</em><br>
    <a href="mailto:rse@@engelschall.com">
    rse&nbsp;@@&nbsp;engelschall.com</a><br>
    This is the last way of submitting your problem report. Please avoid this
    in your own interest because the author is really a very busy men. Your
    mail will always be filed to one of his various mail-folders and is
    usually not processed as fast as a posting on modssl-users.
</ol>
<p>
<li><a name="ToC54"></a>
    <a name="report-details"></a>
    <strong id="faq">
What information and details I've to provide to
the author when writing a bug report?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#report-details"><b>L</b></a>]
    <p>
You have to at least always provide the following information:
<p>
<ul>
<li><em>Apache, mod_ssl and OpenSSL version information</em><br>
    The mod_ssl version you should really know. For instance, it's the version
    number in the distribution tarball. The Apache version can be determined
    by running ``<code>httpd -v</code>''. The OpenSSL version can be
    determined by running ``<code>openssl version</code>''. Alternatively when
    you have Lynx installed you can run the command ``<code>lynx -mime_header
    http://localhost/ | grep Server</code>'' to determine all information in a
    single step.
<p>
<li><em>The details on how you built and installed Apache+mod_ssl+OpenSSL</em><br>
    For this you can provide a logfile of your terminal session which shows
    the configuration and install steps. Alternatively you can at least
    provide the author with the APACI `<code>configure</code>'' command line
    you used (assuming you used APACI, of course).
<p>
<li><em>In case of core dumps please include a Backtrace</em><br>
    In case your Apache+mod_ssl+OpenSSL should really dumped core please attach
    a stack-frame ``backtrace'' (see the next question on how to get it).
    Without this information the reason for your core dump cannot be found.
    So you have to provide the backtrace, please.
<p>
<li><em>A detailed description of your problem</em><br>
    Don't laugh, I'm totally serious. I already got a lot of problem reports
    where the people not really said what's the actual problem is. So, in your
    own interest (you want the problem be solved, don't you?) include as much
    details as possible, please. But start with the essentials first, of
    course.
</ul>
<p>
<li><a name="ToC55"></a>
    <a name="core-dumped"></a>
    <strong id="faq">
I got a core dump, can you help me?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-dumped"><b>L</b></a>]
    <p>
    In general no, at least not unless you provide more details about the code
    location where Apache dumped core. What is usually always required in
    order to help you is a backtrace (see next question). Without this
    information it is mostly impossible to find the problem and help you in
    fixing it.
<p>
<li><a name="ToC56"></a>
    <a name="report-backtrace"></a>
    <strong id="faq">
Ok, I got a core dump but how do I get a backtrace to find out the reason for it?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#report-backtrace"><b>L</b></a>]
    <p>
Follow the following steps:
<p>
<ol>
<li>Make sure you have debugging symbols available in at least
    Apache and mod_ssl. On platforms where you use GCC/GDB you have to build
    Apache+mod_ssl with ``<code>OPTIM="-g -ggdb3"</code>'' to achieve this. On
    other platforms at least ``<code>OPTIM="-g"</code>'' is needed.
<p>
<li>Startup the server and try to produce the core-dump. For this you perhaps
    want to use a directive like ``<code>CoreDumpDirectory /tmp</code>'' to
    make sure that the core-dump file can be written. You then should get a
    <code>/tmp/core</code> or <code>/tmp/httpd.core</code> file. When you
    don't get this, try to run your server under an UID != 0 (root), because
    most "current" kernels do not allow a process to dump core after it has
    done a <code>setuid()</code> (unless it does an <code>exec()</code>) for
    security reasons (there can be privileged information left over in
    memory). Additionally you can run ``<code>/path/to/httpd -X</code>''
    manually to force Apache to not fork.
<p>
<li>Analyze the core-dump. For this run ``<code>gdb /path/to/httpd
    /tmp/httpd.core</code>'' or a similar command has to run. In GDB you then
    just have to enter the ``<code>bt</code>'' command and, voila, you get the
    backtrace. For other debuggers consult your local debugger manual. Send
    this backtrace to the author.
</ol>
</ul>
      <p>
      <br>
      <table summary="">
      <tr>
        <td>
           <table width="600" border="0" summary="">
           <tr>
            <td valign="top" align="left" width="250">
<a href="ssl_howto.html" onmouseover="ro_imgOver('ro_img_prev_bot', 'previous page'); return true" onmouseout="ro_imgNormal('ro_img_prev_bot'); return true" onfocus="ro_imgOver('ro_img_prev_bot', 'previous page'); return true" onblur="ro_imgNormal('ro_img_prev_bot'); return true"><img name="ro_img_prev_bot" src="ssl_template.navbut-prev-n.gif" alt="previous page" width="70" height="18" border="0"></a><br><font color="#000000">HowTo</font>
            </td>
            <td valign="top" align="right" width="250">
<a href="ssl_glossary.html" onmouseover="ro_imgOver('ro_img_next_bot', 'next page'); return true" onmouseout="ro_imgNormal('ro_img_next_bot'); return true" onfocus="ro_imgOver('ro_img_next_bot', 'next page'); return true" onblur="ro_imgNormal('ro_img_next_bot'); return true"><img name="ro_img_next_bot" src="ssl_template.navbut-next-n.gif" alt="next page" width="70" height="18" border="0"></a><br><font color="#000000">Glossary</font>
            </td>
           </tr>
           </table>
         </td>
      </tr>
      <tr>
        <td><img src="ssl_template.imgdot-1x1-000000.gif" alt="" width="600" height="2" align="bottom" border="0"></td>
      </tr>
      <tr>
        <td><table width="598" summary="">
        <tr>
        <td align="left"><font face="Arial,Helvetica">
        <a href="http://www.modssl.org/">mod_ssl</a> 2.8, User Manual<br>
        The Apache Interface to OpenSSL
        </font>
        </td>
        <td align="right"><font face="Arial,Helvetica">
        Copyright &copy; 1998-2001
        <a href="http://www.engelschall.com/">Ralf S. Engelschall</a><br>
        All Rights Reserved<br>
        </font>
        </td>
        </tr>
        </table>
        </td>
      </tr>
      </table>
  </td>
</tr>
</table>
</div>
</body>
</html>
@


1.14
log
@Correct the spelling of "transferred" and "transferring"

from Tobias Ulmer (tobiasu at tmux.org); ok jmc@@, krw@@
@
text
@@


1.13
log
@from Mikolaj Kucharski:
- move FAQ.html to misc/FAQ.html, since all docs point there
- change a broken link in ssl_faq.html

from Rares Aioanei:
- underlaying -> underlying

ok henning
@
text
@d1250 1
a1250 1
    the images are transfered encrypted. So, when you have a lot of HTTPS
@


1.12
log
@Remove references to httpd.conf-dist.

ok deraadt@@
@
text
@d503 1
a503 1
    href="http://www.apache.org/docs/misc/FAQ.html#year2000">Year 2000
d505 1
a505 1
    compliant, too. But whether OpenSSL or the underlaying Operating System
@


1.11
log
@merge mod_ssl 2.8.4
--
Ok'd by: beck@@
@
text
@d1317 1
a1317 1
    <code>httpd.conf-dist</code>) or you have choosen the DSA/DH
@


1.10
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d925 1
a925 1
       Certificate which can be used for Apache. Here you have to options:
@


1.9
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d6 1
a6 1
  Copyright (c) 1998-2000 Ralf S. Engelschall. All rights reserved.
d325 16
a340 15
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>Why are connections horribly slow?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>How to use Anonymous-DH ciphers</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>Why do I get 'no shared ciphers'?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC47"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC48"><strong>Why do I get I/O errors with MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC49"><strong>Why do I get I/O errors with NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC50"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC51"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC52"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC53"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC54"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC55"><strong>How to get a backtrace?</strong></a><br>
d357 1
a357 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#history"><b>L</b></a>]
d384 1
a384 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#apssl-diff"><b>L</b></a>]
d425 1
a425 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#apssl-diff"><b>L</b></a>]
d474 1
a474 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#what-version"><b>L</b></a>]
d489 1
a489 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#y2k"><b>L</b></a>]
d514 1
a514 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#wassenaar"><b>L</b></a>]
d573 1
a573 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#core-dbm"><b>L</b></a>]
d589 1
a589 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#core-php3"><b>L</b></a>]
d602 1
a602 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#dso-sym"><b>L</b></a>]
d615 1
a615 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#mutex-perm"><b>L</b></a>]
d632 1
a632 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#mm"><b>L</b></a>]
d651 1
a651 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#mmpath"><b>L</b></a>]
d666 1
a666 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#entropy"><b>L</b></a>]
d695 1
a695 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#https-parallel"><b>L</b></a>]
d709 1
a709 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#https-port"><b>L</b></a>]
d721 1
a721 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#https-test"><b>L</b></a>]
d752 1
a752 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#hang"><b>L</b></a>]
d768 1
a768 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#hang"><b>L</b></a>]
d785 1
a785 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#env-vars"><b>L</b></a>]
d795 1
a795 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#relative-links"><b>L</b></a>]
d821 1
a821 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#what-is"><b>L</b></a>]
d841 1
a841 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#startup"><b>L</b></a>]
d859 1
a859 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#cert-dummy"><b>L</b></a>]
d884 1
a884 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#cert-real"><b>L</b></a>]
d981 1
a981 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#cert-ownca"><b>L</b></a>]
d1033 1
a1033 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#change-passphrase"><b>L</b></a>]
d1051 1
a1051 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d1088 1
a1088 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#verify-key"><b>L</b></a>]
d1121 1
a1121 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#keysize1"><b>L</b></a>]
d1134 1
a1134 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#keysize2"><b>L</b></a>]
d1148 1
a1148 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d1163 1
a1163 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#pem-to-der"><b>L</b></a>]
d1178 1
a1178 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#verisign-getca"><b>L</b></a>]
d1198 1
a1198 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#gid"><b>L</b></a>]
d1212 1
a1212 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#gid"><b>L</b></a>]
d1229 13
d1246 1
a1246 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#load"><b>L</b></a>]
d1253 1
a1253 1
<li><a name="ToC42"></a>
d1259 1
a1259 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#random"><b>L</b></a>]
d1266 1
a1266 1
<li><a name="ToC43"></a>
d1271 1
a1271 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#ciphers"><b>L</b></a>]
d1292 1
a1292 1
<li><a name="ToC44"></a>
d1298 1
a1298 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#cipher-adh"><b>L</b></a>]
d1307 1
a1307 1
<li><a name="ToC45"></a>
d1313 1
a1313 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#cipher-shared"><b>L</b></a>]
d1327 1
a1327 1
<li><a name="ToC46"></a>
d1332 1
a1332 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#vhosts"><b>L</b></a>]
d1346 1
a1346 1
<li><a name="ToC47"></a>
d1353 1
a1353 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#lock-icon"><b>L</b></a>]
d1365 1
a1365 1
<li><a name="ToC48"></a>
d1371 1
a1371 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#io-ie"><b>L</b></a>]
d1418 6
d1425 1
a1425 1
<li><a name="ToC49"></a>
d1432 1
a1432 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#io-ns"><b>L</b></a>]
d1443 1
a1443 1
<h2><a name="ToC50">About Support</a></h2>
d1446 1
a1446 1
<li><a name="ToC51"></a>
d1451 1
a1451 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#resources"><b>L</b></a>]
d1458 2
a1459 2
    <a href="http://www.modssl.org/docs/2.7/ssl_faq.html">
    http://www.modssl.org/docs/2.7/ssl_faq.html</a><br>
d1464 2
a1465 2
    <a href="http://www.modssl.org/news/list.html">
    http://www.modssl.org/news/list.html</a><br>
d1477 1
a1477 1
<li><a name="ToC52"></a>
d1482 1
a1482 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#contact"><b>L</b></a>]
d1513 1
a1513 1
<li><a name="ToC53"></a>
d1519 1
a1519 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#report-details"><b>L</b></a>]
d1553 1
a1553 1
<li><a name="ToC54"></a>
d1558 1
a1558 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#core-dumped"><b>L</b></a>]
d1566 1
a1566 1
<li><a name="ToC55"></a>
d1571 1
a1571 1
    [<a href="http://www.modssl.org/docs/2.7/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1623 1
a1623 1
        <a href="http://www.modssl.org/">mod_ssl</a> 2.7, User Manual<br>
d1628 1
a1628 1
        Copyright &copy; 1998-2000
@


1.8
log
@merge mod_ssl 2.6.6
@
text
@d356 1
a356 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#history"><b>L</b></a>]
d383 1
a383 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#apssl-diff"><b>L</b></a>]
d424 1
a424 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#apssl-diff"><b>L</b></a>]
d426 2
a427 2
    As of this writing (end of the year 1999) the major difference is
    the RSA license which one receives (very cheaply in contrast to
d429 5
a433 4
    products. On the other hand, one needs this license only in the
    US, of course. So for non-US citizens this point is useless. And
    even for US citizens the situations is at least solved next year
    (September 20th, 2000) when the RSA patent expires.
d462 5
a466 7
    Apache+mod_ssl+OpenSSL server combination available. And until the
    RSA patent expires in the year 2000, US citizens have no choice,
    of course. They have to buy one of the commercial versions. Non-US
    citizens are not forced into this situation and should decide
    carefully whether they really need to buy a commercial version or
    whether it would not be sufficient to directly use the free and
    official versions of the Apache, mod_ssl and OpenSSL packages.
d473 1
a473 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#what-version"><b>L</b></a>]
d488 1
a488 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#y2k"><b>L</b></a>]
d513 1
a513 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#wassenaar"><b>L</b></a>]
d572 1
a572 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#core-dbm"><b>L</b></a>]
d588 1
a588 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#core-php3"><b>L</b></a>]
d601 1
a601 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#dso-sym"><b>L</b></a>]
d614 1
a614 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#mutex-perm"><b>L</b></a>]
d631 1
a631 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#mm"><b>L</b></a>]
d650 1
a650 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#mmpath"><b>L</b></a>]
d665 1
a665 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#entropy"><b>L</b></a>]
d694 1
a694 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#https-parallel"><b>L</b></a>]
d708 1
a708 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#https-port"><b>L</b></a>]
d720 1
a720 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#https-test"><b>L</b></a>]
d751 1
a751 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#hang"><b>L</b></a>]
d767 1
a767 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#hang"><b>L</b></a>]
d784 1
a784 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#env-vars"><b>L</b></a>]
d794 1
a794 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#relative-links"><b>L</b></a>]
d820 1
a820 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#what-is"><b>L</b></a>]
d840 1
a840 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#startup"><b>L</b></a>]
d858 1
a858 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#cert-dummy"><b>L</b></a>]
d883 1
a883 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#cert-real"><b>L</b></a>]
d980 1
a980 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#cert-ownca"><b>L</b></a>]
d1032 1
a1032 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#change-passphrase"><b>L</b></a>]
d1050 1
a1050 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d1087 1
a1087 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#verify-key"><b>L</b></a>]
d1120 1
a1120 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#keysize1"><b>L</b></a>]
d1133 1
a1133 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#keysize2"><b>L</b></a>]
d1147 1
a1147 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d1162 1
a1162 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#pem-to-der"><b>L</b></a>]
d1177 1
a1177 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#verisign-getca"><b>L</b></a>]
d1197 1
a1197 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#gid"><b>L</b></a>]
d1211 1
a1211 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#gid"><b>L</b></a>]
d1232 1
a1232 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#load"><b>L</b></a>]
d1245 1
a1245 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#random"><b>L</b></a>]
d1257 1
a1257 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#ciphers"><b>L</b></a>]
d1284 1
a1284 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#cipher-adh"><b>L</b></a>]
d1299 1
a1299 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#cipher-shared"><b>L</b></a>]
d1318 1
a1318 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#vhosts"><b>L</b></a>]
d1339 1
a1339 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#lock-icon"><b>L</b></a>]
d1357 1
a1357 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#io-ie"><b>L</b></a>]
d1412 1
a1412 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#io-ns"><b>L</b></a>]
d1431 1
a1431 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#resources"><b>L</b></a>]
d1438 2
a1439 2
    <a href="http://www.modssl.org/docs/2.6/ssl_faq.html">
    http://www.modssl.org/docs/2.6/ssl_faq.html</a><br>
d1462 1
a1462 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#contact"><b>L</b></a>]
d1499 1
a1499 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#report-details"><b>L</b></a>]
d1538 1
a1538 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#core-dumped"><b>L</b></a>]
d1551 1
a1551 1
    [<a href="http://www.modssl.org/docs/2.6/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1581 1
a1581 1
      <table>
d1603 1
a1603 1
        <a href="http://www.modssl.org/">mod_ssl</a> 2.6, User Manual<br>
@


1.7
log
@Mod_SSL 2.6.5 - from brad@@, thanks.
@
text
@a129 30
</head>
<body bgcolor="#ffffff" text="#000000" link="#333399" alink="#9999ff" vlink="#000066">
<div align="center">
<table width="600" cellspacing="0" cellpadding="0" border="0">
<tr>
  <td>
          <img src="ssl_template.imgdot-1x1-transp.gif" alt="" width="600" height="1" align="bottom" border="0"><br>
      <table width="600" cellspacing="0" cellpadding="0">
      <tr>
        <td>
        <table width="600">
        <tr>
            <td align="left" valign="bottom">
            <font face="Arial,Helvetica" size="+2"><b>mod_ssl</b></font>
            </td>
            <td align="right">
                            <img src="ssl_template.head-chapter.gif" alt="Chapter" width="175" height="94"> <img src="ssl_template.head-num-6.gif" alt="6" width="74" height="89">
            </td>
        </tr>
        </table>
        </td>
      </tr>
      <tr>
        <td><img src="ssl_template.imgdot-1x1-000000.gif" alt="" width="600" height="2" align="bottom" border="0"></td>
      </tr>
      <tr>
        <td>
           <table width="600" border="0">
           <tr>
            <td valign="top" align="left" width="250">
d134 1
a134 1
        document[imgName].src = eval(imgName + "_n.src");
d140 1
a140 1
        document[imgName].src = eval(imgName + "_o.src");
d150 1
a150 1
    ro_img_prev_top_n.src = "ssl_template.navbut-prev-n.gif";
d152 11
a162 1
    ro_img_prev_top_o.src = "ssl_template.navbut-prev-s.gif";
a165 12
<a href="ssl_howto.html"
   onMouseOver="ro_imgOver('ro_img_prev_top', 'previous page'); return true"
   onMouseOut="ro_imgNormal('ro_img_prev_top'); return true"
><img
   name="ro_img_prev_top"
   src="ssl_template.navbut-prev-n.gif"
   alt="previous page"
   width="70" height="18"
   border="0"
></a><br><font color="#000000">HowTo</font>
            </td>
            <td valign="top" align="right" width="250">
d170 1
a170 1
    ro_img_next_top_n.src = "ssl_template.navbut-next-n.gif";
d172 11
a182 1
    ro_img_next_top_o.src = "ssl_template.navbut-next-s.gif";
d186 34
a219 10
<a href="ssl_glossary.html"
   onMouseOver="ro_imgOver('ro_img_next_top', 'next page'); return true"
   onMouseOut="ro_imgNormal('ro_img_next_top'); return true"
><img
   name="ro_img_next_top"
   src="ssl_template.navbut-next-n.gif"
   alt="next page"
   width="70" height="18"
   border="0"
></a><br><font color="#000000">Glossary</font>
d227 1
a227 1
                    <br>
d232 2
a233 2
<DIV align="right">
<table cellspacing="0" cellpadding="0" width="200">
d236 4
a239 2
<em>``The wise man doesn't give the right answers,
he poses the right questions.''</em>
d252 1
a252 1
<table cellspacing="0" cellpadding="0" border="0">
d273 2
a274 2
<DIV align="right">
<table cellspacing="0" cellpadding="5" border="0" bgcolor="#ccccff" width="350">
d348 1
a348 1
<H2><a name="ToC1">About the module</a></H2>
d353 3
a355 1
    <strong id="faq">What is the history of mod_ssl?</strong>&nbsp;&nbsp;
d370 1
a370 1
    over 40 releases mod_ssl reached it's current state. The result is an
d379 4
a382 2
    <strong id="faq">What are the functional differences between mod_ssl and Apache-SSL, from where
it is originally derived?</strong>&nbsp;&nbsp;
d385 2
a386 2
    This neither can be answered in short (there were too much code changes)
    nor can be answered at all by the author (there would be immediately flame
d388 1
a388 1
    from the 5% of remaining Apache-SSL code, lot's of differences exists,
d391 3
a393 3
    When you really want a detailed comparison you've to read the entries in
    the large <code>CHANGES</code> file you can find in the mod_ssl
    distribution. Usually this is too much hard-core. So I recommend you to
d396 1
a396 1
    approach). For this grab distributions of mod_ssl (from <a
d402 1
a402 1
    A few final hints to direct your comparison: quality of documentation
d420 4
a423 2
    <strong id="faq">What are the major differences between mod_ssl and
the commercial alternatives like Raven or Stronghold?</strong>&nbsp;&nbsp;
d434 1
a434 1
    Second, there is the point that one has guarrantied support from
d444 1
a444 1
    vendors. But this is not really the truth, because all commercial
d452 3
a454 3
    the case. Actually the vendors versions of Apache, mod_ssl and OpenSSL
    often stay behind the latest free versions and this way still do not
    include perhaps important bug and security fixes. On the other hand,
d462 1
a462 1
    RSA patent expires in the year 2000, US citizens have no chance,
d471 3
a473 1
    <strong id="faq">How do I know which mod_ssl version is for which Apache version?</strong>&nbsp;&nbsp;
d486 3
a488 1
    <strong id="faq">Is mod_ssl Year 2000 compliant?</strong>&nbsp;&nbsp;
d495 1
a495 1
    <code>time_t</code> type, which on mostly all Unix platforms at the moment
d511 3
a513 1
    <strong id="faq">What about mod_ssl and the Wassenaar Arrangement?</strong>&nbsp;&nbsp;
d565 1
a565 1
<H2><a name="ToC8">About Installation</a></H2>
d570 3
a572 1
    <strong id="faq">When I access my website the first time via HTTPS I get a core dump?</strong>&nbsp;&nbsp;
d581 1
a581 1
    newer ``<tt>SSLSessionCache shm:</tt>'' variant (after you've rebuilt
d586 3
a588 1
    <strong id="faq">My Apache dumps core when I add both mod_ssl and PHP3?</strong>&nbsp;&nbsp;
d599 3
a601 1
    <strong id="faq">When I startup Apache I get errors about undefined symbols like ap_global_ctx?</strong>&nbsp;&nbsp;
d612 3
a614 1
    <strong id="faq">When I startup Apache I get permission errors related to SSLMutex?</strong>&nbsp;&nbsp;
d628 4
a631 2
    <strong id="faq">When I use the MM library and the shared memory cache each process grows
1.5MB according to `top' although I specified 512000 as the cache size?</strong>&nbsp;&nbsp;
d646 2
a647 1
    <strong id="faq">Apache creates files in a directory declared by the internal
d649 2
a650 1
configuration directive?</strong>&nbsp;&nbsp;
d661 2
a662 1
    <strong id="faq">When I fire up the server, mod_ssl stops with the error
d664 2
a665 1
And a "PRNG not seeded" error occurs if I try "make certificate".</strong>&nbsp;&nbsp;
d687 1
a687 1
<H2><a name="ToC16">About Configuration</a></H2>
d692 3
a694 1
    <strong id="faq">Is it possible to provide HTTP and HTTPS with a single server?</strong></strong>&nbsp;&nbsp;
d706 3
a708 1
    <strong id="faq">I know that HTTP is on port 80, but where is HTTPS?</strong>&nbsp;&nbsp;
d718 3
a720 1
    <strong id="faq">How can I speak HTTPS manually for testing purposes?</strong>&nbsp;&nbsp;
d749 3
a751 1
    <strong id="faq">Why does the connection hang when I connect to my SSL-aware Apache server?</strong>&nbsp;&nbsp;
d764 4
a767 2
    <strong id="faq">Why do I get ``Connection Refused'' messages when trying to access my freshly
installed Apache+mod_ssl server via HTTPS?</strong>&nbsp;&nbsp;
d781 4
a784 2
    <strong id="faq">In my CGI programs and SSI scripts the various documented
<code>SSL_XXX</code> variables do not exists. Why?</strong>&nbsp;&nbsp;
d792 3
a794 1
    <strong id="faq">How can I use relative hyperlinks to switch between HTTP and HTTPS?</strong>&nbsp;&nbsp;
d813 1
a813 1
<H2><a name="ToC24">About Certificates</a></H2>
d818 3
a820 1
    <strong id="faq">What are RSA Private Keys, CSRs and Certificates?</strong></strong>&nbsp;&nbsp;
d838 3
a840 1
    <strong id="faq">Seems like there is a difference on startup between the original Apache and an SSL-aware Apache?</strong>&nbsp;&nbsp;
d856 3
a858 1
    <strong id="faq">How can I create a dummy SSL server Certificate for testing purposes?</strong>&nbsp;&nbsp;
d880 4
a883 2
    <strong id="faq">Ok, I've got my server installed and want to create a real SSL
server Certificate for it. How do I do it?</strong>&nbsp;&nbsp;
d978 3
a980 1
    <strong id="faq">How can I create and use my own Certificate Authority (CA)?</strong>&nbsp;&nbsp;
d1030 3
a1032 1
    <strong id="faq">How can I change the pass-phrase on my private key file?</strong>&nbsp;&nbsp;
d1048 3
a1050 1
    <strong id="faq">How can I get rid of the pass-phrase dialog at Apache startup time?</strong>&nbsp;&nbsp;
d1085 3
a1087 1
    <strong id="faq">How do I verify that a private key matches its Certificate?</strong>&nbsp;&nbsp;
d1117 4
a1120 2
    <strong id="faq">What does it mean when my connections fail with an "alert bad certificate"
error?</strong>&nbsp;&nbsp;
d1131 3
a1133 1
    <strong id="faq">Why does my 2048-bit private key not work?</strong>&nbsp;&nbsp;
d1144 4
a1147 2
    <strong id="faq">Why is client authentication broken after upgrading from
SSLeay version 0.8 to 0.9?</strong>&nbsp;&nbsp;
d1160 3
a1162 1
    <strong id="faq">How can I convert a certificate from PEM to DER format?</strong>&nbsp;&nbsp;
d1174 4
a1177 2
    <strong id="faq">I try to install a Verisign certificate. Why can't I find neither the
<code>getca</code> nor <code>getverisign</code> programs Verisign mentions?</strong>&nbsp;&nbsp;
d1188 1
a1188 1
    CA-related overview on SSL certifiate fiddling you can look at <a
d1194 4
a1197 2
    <strong id="faq">Can I use the Server Gated Cryptography (SGC) facility (aka Verisign Global
ID) also with mod_ssl?</strong>&nbsp;&nbsp;
d1208 4
a1211 2
    <strong id="faq">After I have installed my new Verisign Global ID server certificate, the
browsers complain that they cannot verify the server certificate?</strong>&nbsp;&nbsp;
d1225 1
a1225 1
<H2><a name="ToC40">About SSL Protocol</a></H2>
d1230 3
a1232 1
    <strong id="faq">Why has my webserver a higher load now that I run SSL there?</strong>&nbsp;&nbsp;
d1242 4
a1245 2
    <strong id="faq">Often HTTPS connections to my server require up to 30 seconds for establishing
the connection, although sometimes it works faster?</strong>&nbsp;&nbsp;
d1255 3
a1257 1
    <strong id="faq">What SSL Ciphers are supported by mod_ssl?</strong>&nbsp;&nbsp;
d1281 4
a1284 2
    <strong id="faq">I want to use Anonymous Diffie-Hellman (ADH) ciphers, but I always get ``no
shared cipher'' errors?</strong>&nbsp;&nbsp;
d1296 4
a1299 2
    <strong id="faq">I always just get a 'no shared ciphers' error if
I try to connect to my freshly installed server?</strong>&nbsp;&nbsp;
d1316 3
a1318 1
    <strong id="faq">Why can't I use SSL with name-based/non-IP-based virtual hosts?</strong>&nbsp;&nbsp;
d1335 2
a1336 1
    <strong id="faq">When I use Basic Authentication over HTTPS the lock icon in Netscape browsers
d1338 2
a1339 1
username/password is still transmitted unencrypted?</strong>&nbsp;&nbsp;
d1354 4
a1357 2
    <strong id="faq">When I connect via HTTPS to an Apache+mod_ssl+OpenSSL server with Microsoft Internet
Explorer (MSIE) I get various I/O errors. What is the reason?</strong>&nbsp;&nbsp;
d1408 2
a1409 1
    <strong id="faq">When I connect via HTTPS to an Apache+mod_ssl server with Netscape Navigator I
d1411 2
a1412 1
server" What's the reason?</strong>&nbsp;&nbsp;
d1424 1
a1424 1
<H2><a name="ToC50">About Support</a></H2>
d1429 3
a1431 1
    <strong id="faq">What information resources are available in case of mod_ssl problems?</strong>&nbsp;&nbsp;
d1460 3
a1462 1
    <strong id="faq">What support contacts are available in case of mod_ssl problems?</strong>&nbsp;&nbsp;
d1496 4
a1499 2
    <strong id="faq">What information and details I've to provide to
the author when writing a bug report?</strong>&nbsp;&nbsp;
d1506 1
a1506 1
    The mod_ssl version you should really know. It's for instance the version
d1536 3
a1538 1
    <strong id="faq">I got a core dump, can you help me?</strong>&nbsp;&nbsp;
d1549 3
a1551 1
    <strong id="faq">Ok, I got a core dump but how do I get a backtrace to find out the reason for it?</strong>&nbsp;&nbsp;
d1571 1
a1571 1
    manually to force Apache not not fork.
d1580 1
a1580 1
          <p>
d1585 1
a1585 1
           <table width="600" border="0">
d1588 1
a1588 20
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_prev_bot_n = new Image();
    ro_img_prev_bot_n.src = "ssl_template.navbut-prev-n.gif";
    ro_img_prev_bot_o = new Image();
    ro_img_prev_bot_o.src = "ssl_template.navbut-prev-s.gif";
}
// done hiding -->
</script>
<a href="ssl_howto.html"
   onMouseOver="ro_imgOver('ro_img_prev_bot', 'previous page'); return true"
   onMouseOut="ro_imgNormal('ro_img_prev_bot'); return true"
><img
   name="ro_img_prev_bot"
   src="ssl_template.navbut-prev-n.gif"
   alt="previous page"
   width="70" height="18"
   border="0"
></a><br><font color="#000000">HowTo</font>
d1591 1
a1591 20
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_next_bot_n = new Image();
    ro_img_next_bot_n.src = "ssl_template.navbut-next-n.gif";
    ro_img_next_bot_o = new Image();
    ro_img_next_bot_o.src = "ssl_template.navbut-next-s.gif";
}
// done hiding -->
</script>
<a href="ssl_glossary.html"
   onMouseOver="ro_imgOver('ro_img_next_bot', 'next page'); return true"
   onMouseOut="ro_imgNormal('ro_img_next_bot'); return true"
><img
   name="ro_img_next_bot"
   src="ssl_template.navbut-next-n.gif"
   alt="next page"
   width="70" height="18"
   border="0"
></a><br><font color="#000000">Glossary</font>
d1601 1
a1601 1
        <td>        <table width="598">
@


1.6
log
@mod_ssl 2.6.4 merge
From brad@@
@
text
@d328 2
a329 2
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC48"><strong>Why do I get I/O errors with my MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC49"><strong>Why do I get I/O errors with my NS clients?</strong></a><br>
d1266 2
a1267 3
    <strong id="faq">When I connect via HTTPS to an Apache+mod_ssl server with Microsoft Internet
Explorer (MSIE) I sometimes get I/O errors and the message "bad data from the
server". What's the reason?</strong>&nbsp;&nbsp;
d1270 8
a1277 6
    The reason is that MSIE's SSL implementation has some subtle bugs related
    to the HTTP keep-alive facility and the SSL close notify alerts on socket
    connection close. You've to work-around this by forcing Apache+mod_ssl to
    not use keep-alive connections and not sending the SSL close notify
    messages to MSIE clients. This can be done by using the following
    directive in your SSL-aware virtual host section:
d1279 36
a1314 2
    SetEnvIf User-Agent ".*MSIE.*" nokeepalive ssl-unclean-shutdown
    </pre>
@


1.5
log
@apache 1.3.12 + mod_ssl 2.6.2 merge
@
text
@d648 1
a648 1
    <code>SSLRandSeed</code> directives (to solve the run-time problem)
@


1.4
log
@Apache 1.3.11 + mod_ssl 2.5.0 merge
@
text
@d295 41
a335 40
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC15"><strong>About Configuration</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC16"><strong>HTTP and HTTPS with a single server?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC17"><strong>Where is the HTTPS port?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>How to test HTTPS manually?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>Why does my connection hang?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>Why do I get connection refused?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>Why are the SSL_XXX variables missing?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>Bad Certificate Error?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>How to convert from PEM to DER?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC36"><strong>Verisign and the magic getca program?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC37"><strong>Global IDs or SGC?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC38"><strong>Global IDs and Cert Chain?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC39"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC40"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>Why are connections horribly slow?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>How to use Anonymous-DH ciphers</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>Why do I get 'no shared ciphers'?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC47"><strong>Why do I get I/O errors with my MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC48"><strong>Why do I get I/O errors with my NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC49"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC50"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC51"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC52"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC53"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC54"><strong>How to get a backtrace?</strong></a><br>
d350 1
a350 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#history"><b>L</b></a>]
d375 1
a375 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#apssl-diff"><b>L</b></a>]
d414 1
a414 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#apssl-diff"><b>L</b></a>]
d462 1
a462 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#what-version"><b>L</b></a>]
d475 1
a475 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#y2k"><b>L</b></a>]
d498 1
a498 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#wassenaar"><b>L</b></a>]
d555 1
a555 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#core-dbm"><b>L</b></a>]
d569 1
a569 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#core-php3"><b>L</b></a>]
d580 1
a580 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#dso-sym"><b>L</b></a>]
d591 1
a591 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#mutex-perm"><b>L</b></a>]
d606 1
a606 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#mm"><b>L</b></a>]
d623 1
a623 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#mmpath"><b>L</b></a>]
d630 24
d657 1
a657 1
<H2><a name="ToC15">About Configuration</a></H2>
d660 1
a660 1
<li><a name="ToC16"></a>
d663 1
a663 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#https-parallel"><b>L</b></a>]
d672 1
a672 1
<li><a name="ToC17"></a>
d675 1
a675 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#https-port"><b>L</b></a>]
d682 1
a682 1
<li><a name="ToC18"></a>
d685 1
a685 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#https-test"><b>L</b></a>]
d711 1
a711 1
<li><a name="ToC19"></a>
d714 1
a714 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#hang"><b>L</b></a>]
d724 1
a724 1
<li><a name="ToC20"></a>
d728 1
a728 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#hang"><b>L</b></a>]
d739 1
a739 1
<li><a name="ToC21"></a>
d743 1
a743 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#env-vars"><b>L</b></a>]
d748 1
a748 1
<li><a name="ToC22"></a>
d751 1
a751 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#relative-links"><b>L</b></a>]
d769 1
a769 1
<H2><a name="ToC23">About Certificates</a></H2>
d772 1
a772 1
<li><a name="ToC24"></a>
d775 1
a775 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#what-is"><b>L</b></a>]
d790 1
a790 1
<li><a name="ToC25"></a>
d793 1
a793 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#startup"><b>L</b></a>]
d806 1
a806 1
<li><a name="ToC26"></a>
d809 1
a809 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#cert-dummy"><b>L</b></a>]
d828 1
a828 1
<li><a name="ToC27"></a>
d832 1
a832 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#cert-real"><b>L</b></a>]
d924 1
a924 1
<li><a name="ToC28"></a>
d927 1
a927 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#cert-ownca"><b>L</b></a>]
d974 1
a974 1
<li><a name="ToC29"></a>
d977 1
a977 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#change-passphrase"><b>L</b></a>]
d990 1
a990 1
<li><a name="ToC30"></a>
d993 1
a993 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d1025 1
a1025 1
<li><a name="ToC31"></a>
d1028 1
a1028 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#verify-key"><b>L</b></a>]
d1055 1
a1055 1
<li><a name="ToC32"></a>
d1059 1
a1059 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#keysize1"><b>L</b></a>]
d1067 1
a1067 1
<li><a name="ToC33"></a>
d1070 1
a1070 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#keysize2"><b>L</b></a>]
d1078 1
a1078 1
<li><a name="ToC34"></a>
d1082 1
a1082 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d1092 1
a1092 1
<li><a name="ToC35"></a>
d1095 1
a1095 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#pem-to-der"><b>L</b></a>]
d1104 1
a1104 1
<li><a name="ToC36"></a>
d1108 1
a1108 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#verisign-getca"><b>L</b></a>]
d1122 1
a1122 1
<li><a name="ToC37"></a>
d1126 1
a1126 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#gid"><b>L</b></a>]
d1134 1
a1134 1
<li><a name="ToC38"></a>
d1138 1
a1138 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#gid"><b>L</b></a>]
d1151 1
a1151 1
<H2><a name="ToC39">About SSL Protocol</a></H2>
d1154 1
a1154 1
<li><a name="ToC40"></a>
d1157 1
a1157 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#load"><b>L</b></a>]
d1164 1
a1164 1
<li><a name="ToC41"></a>
d1168 1
a1168 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#random"><b>L</b></a>]
d1175 1
a1175 1
<li><a name="ToC42"></a>
d1178 1
a1178 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#ciphers"><b>L</b></a>]
d1199 1
a1199 1
<li><a name="ToC43"></a>
d1203 1
a1203 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#cipher-adh"><b>L</b></a>]
d1212 1
a1212 1
<li><a name="ToC44"></a>
d1216 1
a1216 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#cipher-shared"><b>L</b></a>]
d1230 1
a1230 1
<li><a name="ToC45"></a>
d1233 1
a1233 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#vhosts"><b>L</b></a>]
d1247 1
a1247 1
<li><a name="ToC46"></a>
d1252 1
a1252 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#lock-icon"><b>L</b></a>]
d1264 1
a1264 1
<li><a name="ToC47"></a>
d1269 1
a1269 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#io-ie"><b>L</b></a>]
d1281 1
a1281 1
<li><a name="ToC48"></a>
d1286 1
a1286 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#io-ns"><b>L</b></a>]
d1297 1
a1297 1
<H2><a name="ToC49">About Support</a></H2>
d1300 1
a1300 1
<li><a name="ToC50"></a>
d1303 1
a1303 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#resources"><b>L</b></a>]
d1310 2
a1311 2
    <a href="http://www.modssl.org/docs/2.5/ssl_faq.html">
    http://www.modssl.org/docs/2.5/ssl_faq.html</a><br>
d1329 1
a1329 1
<li><a name="ToC51"></a>
d1332 1
a1332 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#contact"><b>L</b></a>]
d1363 1
a1363 1
<li><a name="ToC52"></a>
d1367 1
a1367 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#report-details"><b>L</b></a>]
d1401 1
a1401 1
<li><a name="ToC53"></a>
d1404 1
a1404 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#core-dumped"><b>L</b></a>]
d1412 1
a1412 1
<li><a name="ToC54"></a>
d1415 1
a1415 1
    [<a href="http://www.modssl.org/docs/2.5/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1505 1
a1505 1
        <a href="http://www.modssl.org/">mod_ssl</a> 2.5, User Manual<br>
@


1.3
log
@mod_ssl 2.4.9 merge
@
text
@d6 1
a6 1
  Copyright (c) 1998-1999 Ralf S. Engelschall. All rights reserved.
d270 1
a270 1
<table cellspacing="0" cellpadding="5" border="0" bgcolor="#ccccff" width="300">
d284 51
a334 44
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC4"><strong>mod_ssl/Apache versions?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC5"><strong>mod_ssl and Year 2000?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC6"><strong>mod_ssl and Wassenaar Arrangement?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC7"><strong>About Installation</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC8"><strong>Core dumps for HTTPS requests?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC9"><strong>Core dumps for Apache+mod_ssl+PHP3?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC10"><strong>Undefined symbols on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC11"><strong>Permission problem on SSLMutex</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC12"><strong>Shared memory and process size?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC13"><strong>About Configuration</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC14"><strong>HTTP and HTTPS with a single server?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC15"><strong>Where is the HTTPS port?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC16"><strong>How to test HTTPS manually?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC17"><strong>Why does my connection hang?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>Why do I get connection refused?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>Bad Certificate Error?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>How to convert from PEM to DER?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Verisign and the magic getca program?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>Global IDs or SGC?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC36"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC37"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC38"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC39"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC40"><strong>Why do I get I/O errors with my MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>Why do I get I/O errors with my NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC47"><strong>How to get a backtrace?</strong></a><br>
d349 1
a349 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#history"><b>L</b></a>]
d374 1
a374 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#apssl-diff"><b>L</b></a>]
d410 49
d461 1
a461 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#what-version"><b>L</b></a>]
d471 1
a471 1
<li><a name="ToC5"></a>
d474 1
a474 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#y2k"><b>L</b></a>]
d494 1
a494 1
<li><a name="ToC6"></a>
d497 1
a497 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#wassenaar"><b>L</b></a>]
d548 1
a548 1
<H2><a name="ToC7">About Installation</a></H2>
d551 1
a551 1
<li><a name="ToC8"></a>
d554 1
a554 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#core-dbm"><b>L</b></a>]
d565 1
a565 1
<li><a name="ToC9"></a>
d568 1
a568 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#core-php3"><b>L</b></a>]
d576 1
a576 1
<li><a name="ToC10"></a>
d579 1
a579 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#dso-sym"><b>L</b></a>]
d587 1
a587 1
<li><a name="ToC11"></a>
d590 1
a590 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#mutex-perm"><b>L</b></a>]
d601 1
a601 1
<li><a name="ToC12"></a>
d605 1
a605 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#mm"><b>L</b></a>]
d616 13
d632 1
a632 1
<H2><a name="ToC13">About Configuration</a></H2>
d635 1
a635 1
<li><a name="ToC14"></a>
d638 1
a638 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#https-parallel"><b>L</b></a>]
d647 1
a647 1
<li><a name="ToC15"></a>
d650 1
a650 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#https-port"><b>L</b></a>]
d657 1
a657 1
<li><a name="ToC16"></a>
d660 1
a660 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#https-test"><b>L</b></a>]
d679 1
a679 1
    look at nifty <a href="http://www.fts.frontec.se/~dast/curl/">cURL</a>
d686 1
a686 1
<li><a name="ToC17"></a>
d689 1
a689 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#hang"><b>L</b></a>]
d699 1
a699 1
<li><a name="ToC18"></a>
d703 1
a703 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#hang"><b>L</b></a>]
d714 10
a723 1
<li><a name="ToC19"></a>
d726 1
a726 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#relative-links"><b>L</b></a>]
d744 1
a744 1
<H2><a name="ToC20">About Certificates</a></H2>
d747 1
a747 1
<li><a name="ToC21"></a>
d750 1
a750 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#what-is"><b>L</b></a>]
d765 1
a765 1
<li><a name="ToC22"></a>
d768 1
a768 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#startup"><b>L</b></a>]
d781 1
a781 1
<li><a name="ToC23"></a>
d784 1
a784 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#cert-dummy"><b>L</b></a>]
d803 1
a803 1
<li><a name="ToC24"></a>
d807 1
a807 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#cert-real"><b>L</b></a>]
d899 1
a899 1
<li><a name="ToC25"></a>
d902 1
a902 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#cert-ownca"><b>L</b></a>]
d949 1
a949 1
<li><a name="ToC26"></a>
d952 1
a952 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#change-passphrase"><b>L</b></a>]
d965 1
a965 1
<li><a name="ToC27"></a>
d968 1
a968 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d1000 1
a1000 1
<li><a name="ToC28"></a>
d1003 1
a1003 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#verify-key"><b>L</b></a>]
d1030 1
a1030 1
<li><a name="ToC29"></a>
d1034 1
a1034 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#keysize1"><b>L</b></a>]
d1042 1
a1042 1
<li><a name="ToC30"></a>
d1045 1
a1045 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#keysize2"><b>L</b></a>]
d1053 1
a1053 1
<li><a name="ToC31"></a>
d1057 1
a1057 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d1067 1
a1067 1
<li><a name="ToC32"></a>
d1070 1
a1070 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#pem-to-der"><b>L</b></a>]
d1079 1
a1079 1
<li><a name="ToC33"></a>
d1083 1
a1083 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#verisign-getca"><b>L</b></a>]
d1097 1
a1097 1
<li><a name="ToC34"></a>
d1101 1
a1101 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#gid"><b>L</b></a>]
d1108 15
d1126 1
a1126 1
<H2><a name="ToC35">About SSL Protocol</a></H2>
d1129 1
a1129 1
<li><a name="ToC36"></a>
d1132 1
a1132 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#load"><b>L</b></a>]
d1139 12
a1150 1
<li><a name="ToC37"></a>
d1153 1
a1153 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#ciphers"><b>L</b></a>]
d1174 32
a1205 1
<li><a name="ToC38"></a>
d1208 1
a1208 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#vhosts"><b>L</b></a>]
d1222 1
a1222 1
<li><a name="ToC39"></a>
d1227 1
a1227 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#lock-icon"><b>L</b></a>]
d1239 1
a1239 1
<li><a name="ToC40"></a>
d1244 1
a1244 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#io-ie"><b>L</b></a>]
d1256 1
a1256 1
<li><a name="ToC41"></a>
d1261 1
a1261 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#io-ns"><b>L</b></a>]
d1272 1
a1272 1
<H2><a name="ToC42">About Support</a></H2>
d1275 1
a1275 1
<li><a name="ToC43"></a>
d1278 1
a1278 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#resources"><b>L</b></a>]
d1285 2
a1286 2
    <a href="http://www.modssl.org/docs/2.4/ssl_faq.html">
    http://www.modssl.org/docs/2.4/ssl_faq.html</a><br>
d1304 1
a1304 1
<li><a name="ToC44"></a>
d1307 1
a1307 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#contact"><b>L</b></a>]
d1338 1
a1338 1
<li><a name="ToC45"></a>
d1342 1
a1342 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#report-details"><b>L</b></a>]
d1376 1
a1376 1
<li><a name="ToC46"></a>
d1379 1
a1379 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#core-dumped"><b>L</b></a>]
d1387 1
a1387 1
<li><a name="ToC47"></a>
d1390 1
a1390 1
    [<a href="http://www.modssl.org/docs/2.4/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1405 5
a1409 5
    most "current" kernels Most "current" kernels do not allow a process to
    dump core after it has done a <code>setuid()</code> (unless it does an
    <code>exec()</code>) for security reasons (there can be privileged
    information left over in memory). Additionally you can run
    ``<code>/path/to/httpd -X</code>'' manually to force Apache not not fork.
d1480 1
a1480 1
        <a href="http://www.modssl.org/">mod_ssl</a> 2.4, User Manual<br>
d1485 1
a1485 1
        Copyright &copy; 1998-1999
@


1.2
log
@Apache 1.3.9 + Mod_ssl 2.4.2 - now builds with apaci nastiness.
@
text
@d292 1
a292 1
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC12"><strong>shared memory and process size?</strong></a><br>
d298 30
a327 29
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>Bad Certificate Error?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>How to convert from PEM to DER?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>Verisign and the magic getca program?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Global IDs or SGC?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC36"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC37"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC38"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC39"><strong>Why do I get I/O errors with my MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC40"><strong>Why do I get I/O errors with my NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>How to get a backtrace?</strong></a><br>
d505 2
a506 2
    APACI command line) or switch from ``<tt>SSLSessioCache dbm:</tt>'' to the
    newer ``<tt>SSLSessioCache shm:</tt>'' variant (after you've rebuilt
d631 15
d666 1
a666 1
<H2><a name="ToC19">About Certificates</a></H2>
d669 1
a669 1
<li><a name="ToC20"></a>
d687 1
a687 1
<li><a name="ToC21"></a>
d703 1
a703 1
<li><a name="ToC22"></a>
d725 1
a725 1
<li><a name="ToC23"></a>
d821 1
a821 1
<li><a name="ToC24"></a>
d871 1
a871 1
<li><a name="ToC25"></a>
d887 1
a887 1
<li><a name="ToC26"></a>
d922 1
a922 1
<li><a name="ToC27"></a>
d952 1
a952 1
<li><a name="ToC28"></a>
d964 1
a964 1
<li><a name="ToC29"></a>
d975 1
a975 1
<li><a name="ToC30"></a>
d989 1
a989 1
<li><a name="ToC31"></a>
d1001 1
a1001 1
<li><a name="ToC32"></a>
d1019 1
a1019 1
<li><a name="ToC33"></a>
d1033 1
a1033 1
<H2><a name="ToC34">About SSL Protocol</a></H2>
d1036 1
a1036 1
<li><a name="ToC35"></a>
d1046 1
a1046 1
<li><a name="ToC36"></a>
d1070 1
a1070 1
<li><a name="ToC37"></a>
d1087 1
a1087 1
<li><a name="ToC38"></a>
d1104 1
a1104 1
<li><a name="ToC39"></a>
d1121 1
a1121 1
<li><a name="ToC40"></a>
d1137 1
a1137 1
<H2><a name="ToC41">About Support</a></H2>
d1140 1
a1140 1
<li><a name="ToC42"></a>
d1169 1
a1169 1
<li><a name="ToC43"></a>
d1203 1
a1203 1
<li><a name="ToC44"></a>
d1241 1
a1241 1
<li><a name="ToC45"></a>
d1252 1
a1252 1
<li><a name="ToC46"></a>
@


1.1
log
@mod_ssl-2.2.3-1.3.4 (will require libssl-1.1 for https to work, but
mostly harmless otherwise).
@
text
@d25 1
a25 1
      mod_ssl project (http://www.engelschall.com/sw/mod_ssl/)."
d35 1
a35 1
      mod_ssl project (http://www.engelschall.com/sw/mod_ssl/)."
d257 2
a258 2
Mailing List <a href="mailto:sw-mod-ssl@@engelschall.com">
<code>sw-mod-ssl@@engelschall.com</code></a>. They are collected at this place
d282 45
a326 34
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC2"><strong>Apache-SSL vs. mod_ssl: difference?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC3"><strong>Should Apache-SSL be avoided?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC4"><strong>Which Apache-SSL version is the base?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC5"><strong>Why starting with version 2.0.0?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC6"><strong>mod_ssl/Apache versions?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC7"><strong>mod_ssl and Year 2000?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC8"><strong>mod_ssl and Wassenaar Arrangement?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC9"><strong>About Configuration</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC10"><strong>HTTP and HTTPS on same machine?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC11"><strong>Where is the HTTPS port?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC12"><strong>How to test HTTPS manually?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC13"><strong>Why does my browser hang?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC14"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC15"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC16"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC17"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>How to get a backtrace?</strong></a><br>
d339 22
a360 151
    <a name="apssl-diff"></a>
    <strong id="faq">What are the differences between mod_ssl and Apache-SSL, from where it is derived?</strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#apssl-diff"><b>L</b></a>]
    <p>
    This cannot be answered in short, because there are too much changes (see
    the <code>CHANGES</code> and <code>CHANGES.20</code> files in the mod_ssl
    distribution for detailed information). Most of them are internal changes,
    cleanups and re-organizations of the source code. But the user visible
    changes are mainly the following:
    <p>
    <ul>
    <li><em>mod_ssl provides a complete documentation</em> (this User Manual)
        where all configuration directives, environment variables, and other
        things are documented while Apache-SSL had no such documentation
        although it existed for over three years when mod_ssl was split from
        it (in April 1998). Additionally mod_ssl provides answers to often
        occuring frequently asked questions (this list) in the
        Apache/SSL/SSLeay area. For instance mod_ssl gives detailed hints
        about how to setup a CA, how to create real a server Certificate, etc.
        And the mod_ssl User Manual provides a compact introduction to the
        complex SSL area itself. Because here are the typical hurdles located
        every user stumbles over.
    <p>
    <li><em>mod_ssl comes with clean and documented source code</em> with the
        intent that only this way the user is able to re-view it for
        backdoors, security holes, etc. This is considered important for
        security-related software. It was always incomprehensible to the
        author of mod_ssl how Apache-SSL could exist for over three years
        while both the source code and the source patches were provided in an
        undocumented and partly unreadable format. For the mod_ssl package
        the source codes follows the Apache coding style, is logically
        ordered to follow the API phases and even the patches to the
        Apache source tree are annotated with descriptions to give the
        user a chance to re-view and understand them.
    <p>
    <li><em>mod_ssl uses a generic Extended API</em> to achieve
        its functionality. This means instead of patching in
        SSL/crypto-related code into the Apache kernel a clean and well
        separated Extended API is patched in. This way the SSL and
        cryptography code is <em>only</em> present inside the SSL module
        itself (i.e. inside the <code>src/modules/ssl/</code> subtree only).
        The benefit from this is a clean separation and API-conforming SSL
        solution (which means for instance no direct SSL-references from the
        kernel, no kludges and hacks to get called, etc).
    <p>
    <li><em>mod_ssl supports Dynamic Shared Object (DSO) building</em>
        as a direct consequence from using the Extended API. In short DSO
        support means maximum flexibility under run-time, i.e. you don't have
        to decide under compile-time whether to build or not to build SSL into
        the Apache httpd executable. Instead you can just load mod_ssl through
        mod_so's <code>LoadModule</code> directive <em>on demand</em>. This
        is especially interesting for two cases: Vendor package maintainers
        receive the power they need for creating flexible packages and power
        users receive the ability to run more than one Apache (non-SSL-aware
        and SSL-aware) instance from a single Apache installation while still
        saving RAM.
    <p>
    <li><em>mod_ssl is ported to the Win32 platform</em>,
        as it's the case for Apache and SSLeay. This way mod_ssl follows the
        evolution of these packages and provides the always requested support
        also for this nasty platform. As for the Unix/DSO case under Win32
        mod_ssl is well-integrated into Apache through a stand-alone DLL which
        can be loaded through mod_so's <code>LoadModule</code> directive.
    <p>
    <li><em>mod_ssl can be really easily applied to the Apache source tree</em> because
        it provides a full-featured and automated configuration environment
        for this task while Apache-SSL forced the user to fiddle with the
        <code>patch</code> and <code>cp</code> tools theirself. Just
        because security is not for amateurs hasn't to mean that user
        friendliness is not important. So it's a must to assist the user
        in applying the SSL-stuff to vanilla Apache sources. For this
        mod_ssl integrates also very-well into the new Apache 1.3
        Autoconf-style Interface (APACI). Additionally mod_ssl's
        configuration mechanism supports the usage of RSAref, arbitrary
        locations for SSLeay, etc.
    <p>
    <li><em>mod_ssl fixes a lot of bugs and inconsistencies</em> which
        existed in Apache-SSL. For Apache experts here are a few impressions:
        Apache-SSL wrote directly to <code>stderr</code> instead of the Apache
        error logfile; it messed up it's error messages with the SSLeay error
        messages; it directly patched the <code>SERVER_BASEVERSION</code>
        define instead of using the Apache 1.3 conforming
        <code>ap_add_version_component</code> function; it used the unsafe
        <code>sprintf</code> function instead of the robust
        <code>ap_snprintf</code>; it incorrectly spawned and killed the
        <code>gcache</code> auxiliary program and it totally failed to pass the
        ``<code>gcc -Wall -Wshadow -Wpointer-arith -Wcast-align
        -Wmissing-prototypes -Wmissing-declarations -Wnested-externs
        -Winline</code>'' test (while Apache already passes it) because of
        unclean code.
        <p>
        Additionally Apache-SSL didn't provide a way to easily apply it to
        the Apache source tree (semi-manual editing and patching was
        required); it didn't seamlessly integrate into the new Apache 1.3
        Autoconf-style Interface (APACI) at configuration time; it didn't
        automatically recognize the difference between an installed SSLeay and
        an out-of-the-source-only SSLeay; it didn't provide integration into
        the APACI installation process (<code>make install</code>); it used
        numbers 0 to 2 instead of reasonable names for the argument of
        <code>SSLVerifyClient</code> just because internally an
        <code>enum</code> was used and for the provided
        <code>%{version}c</code> construct of CustomLog it used the results
        "2", "3" under SSLeay 0.8 while under SSLeay 0.9 the results were
        "SSL2", "SSL3", etc. pp.
    <p>
    <li><em>mod_ssl adds new functionalities which were missing in
        Apache-SSL</em>. A few selected points which give you an impression
        follow:
        <ul>
        <li>mod_ssl provides a real dedicated SSL log file controlled by log
            level and the additional features that messages logged at the
            `error' level are automatically duplicated to the general Apache
            error log file. And occuring system and SSLeay error messages are
            automatically appended to mod_ssl messages. Additionally mod_ssl
            annotates deep-level SSLeay messages with more high-level hints.
        <li>mod_ssl provides a completely new and enhanced handling
            of encrypted private key files. First the private keys are kept in
            a permanent memory pool (as SSLeay already does internally), so
            Apache now survives server restarts without falling down. Second
            the pass phrase dialog is a lot more user friendly and advanced:
            It uses a pass phrase reuse-algorithm to minimize the dialog, it
            recognizes wrong pass phrases and allows retries (but with a
            backoff time delay), etc. And additionally a minimal interface is
            provided to plug-in an external program for providing the pass
            phrase for special batch security situations.
        <li>mod_ssl provides the <code>SSLCACertificateReqFile</code>
            directive which can be used to configure a different (from
            <code>SSLCACertificateFile</code>) set of CA Certificates for the
            SSLv3 feature used by the clients to load CA Certificates from the
            server for speeding up server authentication.
        <li>mod_ssl replaced the ``gcache'' stuff of Apache-SSL (used for
            caching SSL sessions) with a more robust DBM-based solution,
            because the controlling of an external program cannot be done very
            reliable from within Apache. Additionally a "mutex" is now used to
            synchronize the inter-process access to this cache.
        <li>mod_ssl provides support for the SSLeay+RSAref couple, i.e.
            mod_ssl supports the building with RSAref.
        <li>mod_ssl provides a new SSLRequire directive which can be used
            to implement more granular access control based on arbitrary
            complex boolean expression.
        <li>mod_ssl adds support for HTTPS to the Apache Proxy Module
            (mod_proxy).
        <li>mod_ssl is the first Open Source version of an SSL
            extension to Apache which supports the Win32 platform.
        <li>etc.pp.
        </ul>
    </ul>
    <p>
    When you're still really interested in more hard-core details walk through
    the entries in the <code>CHANGES</code> and <code>CHANGES.20</code> files
    in the mod_ssl distribution.
d363 37
a399 14
    <a name="apssl-avoid"></a>
    <strong id="faq">Ok, does this mean I should avoid using Apache-SSL from now on?</strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#apssl-avoid"><b>L</b></a>]
    <p>
    <strong>No</strong>, it just means that you <em>can</em> use mod_ssl.
    Beside the well-known flaws Apache-SSL works great. Ben Laurie did and
    still does a great job in maintaining it. The big difference is just that
    Ben Laurie's goals are different from Ralf S. Engelschall's goals. So, as
    long as you don't get bothered by inconsistencies and other flaws you
    don't have to upgrade. Instead you should decide yourself if you already
    feel comfortable or not. If yes, stay with Apache-SSL - if not, move to
    mod_ssl or (even better) one of the commercial SSL solutions for Apache.
    Or in other words: No solution is better than another in general. Which
    one you should use depends mainly on your personal requirements.
a401 27
    <a name="apssl-baseversion"></a>
    <strong id="faq">On which Apache-SSL version is mod_ssl actually based?</strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#apssl-baseversion"><b>L</b></a>]
    <p>
    The mod_ssl package was initially created by porting the Apache-SSL 1.17
    stuff from Apache 1.2.6 to Apache 1.3b6 in April 1998. Because of
    conflicts with Ben Laurie's development cycle it then was re-assembled
    from scratch for Apache 1.3.0 by merging the old mod_ssl with the newer
    Apache-SSL 1.18. From this point mod_ssl lived its own life and changes
    with Apache-SSL releases were merged after they were released. In other
    words: mod_ssl is based on the latest Apache-SSL and always will contain
    all useful changes which will occur with Apache-SSL in the future.
<p>
<li><a name="ToC5"></a>
    <a name="why200"></a>
    <strong id="faq">Why is mod_ssl's version starting with 2.0.0?</strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#why200"><b>L</b></a>]
    <p>
    Because initially the mod_ssl project was intended as a contribution to
    the Apache-SSL project from Ben Laurie. The idea was that mod_ssl formed
    Apache-SSL 2.0.0. But after Ralf S. Engelschall and Ben Laurie couldn't
    find a reasonable compromise in merging mod_ssl with Apache-SSL, the stuff
    was released as a new package named ``mod_ssl''. But to still indicate
    that it's some ``second generation'' stuff, the first mod_ssl version was
    named 2.0.0.
<p>
<li><a name="ToC6"></a>
d404 1
a404 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#what-version"><b>L</b></a>]
d408 2
a409 2
    instance <code>2.2.0-1.3.4</code>. This directly indicates that it's
    mod_ssl version 2.2.0 for Apache version 1.3.4. And this also means you
d414 1
a414 1
<li><a name="ToC7"></a>
d417 1
a417 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#y2k"><b>L</b></a>]
d433 1
a433 1
    compliant, too. But whether SSLeay or the underlaying Operating System
d437 1
a437 1
<li><a name="ToC8"></a>
d440 1
a440 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#wassenaar"><b>L</b></a>]
d442 12
a453 12
	First, let us explain what <i>Wassenaar</i> and it's <i>Arrangement on
	Export Controls for Conventional Arms and Dual-Use Goods and
	Technologies</i> is: This is a international regime, established 1995, to
	control trade in conventional arms and dual-use goods and technology. It
	replaced the previous <i>CoCom</i> regime. 33 countries are signatories:
	Argentina, Australia, Austria, Belgium, Bulgaria, Canada, Czech Republic,
	Denmark, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Japan,
	Luxembourg, Netherlands, New Zealand, Norway, Poland, Portugal, Republic
	of Korea, Romania, Russian Federation, Slovak Republic, Spain, Sweden,
	Switzerland, Turkey, Ukraine, United Kingdom and United States. For more
	details look at <a
	href="http://www.wassenaar.org/">http://www.wassenaar.org/</a>.
d462 9
a470 9
	In the current Wassenaar ``<i>List of Dual Use Goods and Technologies And
	Munitions</i>'', under ``<i>GENERAL SOFTWARE NOTE</i>'' (GSN) it says
	``<i>The Lists do not control "software" which is either: 1. [...] 2. "in
	the public domain".</i>'' And under ``<i>DEFINITIONS OF TERMS USED IN
	THESE LISTS</i>'' one can find the definition: ``<i>"In the public
	domain": This means "technology" or "software" which has been made
	available without restrictions upon its further dissemination. N.B.
	Copyright restrictions do not remove "technology" or "software" from being
	"in the public domain".</i>''
d472 1
a472 1
    So, both mod_ssl and SSLeay are ``in the public domain'' for the purposes
d487 1
a487 1
    So, mod_ssl and SSLeay are not affected by the Wassenaar Agreement.
d491 1
a491 1
<H2><a name="ToC9">About Configuration</a></H2>
d494 25
d520 46
d567 2
a568 2
    <strong id="faq">I want to run HTTP and HTTPS on the same machine. Is that possible?</strong></strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#https-parallel"><b>L</b></a>]
d570 6
a575 7
    Yes, there are two ways to do this: run two server instances, or run both
    services from the same server instance. Unless there is a good reason to
    run two (like using a different product for HTTP and HTTPS), it's usually
    most simples to run a single instance where you enable SSL only for those
    virtual hosts that need it. If you wish to run two server instances you
    must make sure that they each only try to bind to their allowed ports
    (normally port 80 for HTTP and 443 for HTTPS).
d577 1
a577 1
<li><a name="ToC11"></a>
d580 1
a580 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#https-port"><b>L</b></a>]
d587 1
a587 1
<li><a name="ToC12"></a>
d590 1
a590 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#https-test"><b>L</b></a>]
d599 1
a599 1
    help of SSLeay's <code>s_client</code> program you can do a similar
d602 1
a602 1
    <code><b>$ s_client -connect localhost:443 -state -debug</b></code><br>
d616 1
a616 1
<li><a name="ToC13"></a>
d618 2
a619 2
    <strong id="faq">Why does my browser hang when I connect to my SSL-aware Apache server?</strong>&nbsp;&nbsp;
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#hang"><b>L</b></a>]
d621 7
a627 9
    Because you used an URL of the form ``<code>http://</code>'' instead of
    ``<code>https:</code>''. Really! Also, if you see: ``<code>SSL_Accept
    failed error:140760EB:SSL routines: SSL23_GET_CLIENT_HELLO:unknown
    protocol</code>'' in your Apache error logfile, it's for the same reason.
    This also happens the other way round, i.e. when you try to use
    ``<code>https://</code>'' on a server that doesn't support SSL (on this
    port). Make sure you are connecting to a virtual server that supports
    SSL, which is probably the IP associated with your hostname, not localhost
    (127.0.0.1).
d629 1
a629 1
<li><a name="ToC14"></a>
d632 1
a632 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#relative-links"><b>L</b></a>]
d650 1
a650 1
<H2><a name="ToC15">About Certificates</a></H2>
d653 1
a653 1
<li><a name="ToC16"></a>
d656 1
a656 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#what-is"><b>L</b></a>]
d671 1
a671 1
<li><a name="ToC17"></a>
d674 1
a674 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#startup"><b>L</b></a>]
d687 1
a687 1
<li><a name="ToC18"></a>
d690 1
a690 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#cert-dummy"><b>L</b></a>]
d709 1
a709 1
<li><a name="ToC19"></a>
d713 1
a713 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#cert-real"><b>L</b></a>]
d718 1
a718 1
    <li>Make sure SSLeay is really installed and in your <code>PATH</code>.
d720 2
a721 2
        ``<code>ssleay</code>'' program from within the SSLeay source tree as
        ``<code>./apps/ssleay</code>''.
d726 1
a726 1
       <code><strong>$ ssleay genrsa -des3 -out server.key 1024</strong></code>
d732 1
a732 1
       <code><strong>$ ssleay rsa -noout -text -in server.key</strong></code>
d737 1
a737 1
       <code><strong>$ ssleay rsa -in server.key -out server.key.unsecure</strong></code>
d739 1
a739 1
    <li>Create a Certificate Signing Request (CSR) for the server RSA private
d742 1
a742 1
       <code><strong>$ ssleay req -new -days 365 -key server.key -out server.csr</strong></code>
d744 4
d750 1
a750 1
       <code><strong>$ ssleay req -noout -text -in server.csr</strong></code>
d793 1
a793 1
       <code><strong>$ ssleay x509 -noout -text -in server.crt</strong></code>
d805 1
a805 1
<li><a name="ToC20"></a>
d808 1
a808 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#cert-ownca"><b>L</b></a>]
d810 2
a811 2
    The short answer is to use the <code>CA.sh</code> script provided by SSLeay.
    The long and manual answer is this:
d814 1
a814 1
    <li> Create a RSA private key for your CA
d817 1
a817 1
       <code><strong>$ ssleay genrsa -des3 -out ca.key 1024</strong></code>
d823 1
a823 1
       <code><strong>$ ssleay rsa -noout -text -in ca.key</strong></code>
d828 1
a828 1
       <code><strong>$ ssleay rsa -in ca.key -out ca.key.unsecure</strong></code>
d831 1
a831 1
       for the RSA key of the CA (output will be PEM formatted):
d833 1
a833 1
       <code><strong>$ ssleay req -new -x509 -days 365 -key ca.key -out ca.crt</strong></code>
d837 1
a837 1
       <code><strong>$ ssleay x509 -noout -text -in ca.crt</strong></code>
d840 3
a842 3
       the ``<code>ssleay ca</code>'' command has some strange requirements
       and the default SSLeay config doesn't allow one easily to use
       ``<code>ssleay ca</code>'' directly. So a script named
d846 3
a848 2
    <li>Now you can use this CA to sign CSR's in order to create real
       SSL Certificates for use inside an Apache webserver:
d852 1
a852 1
       This signs the CSR and results in a <code>server.crt</code> file.
d855 1
a855 1
<li><a name="ToC21"></a>
d858 1
a858 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#change-passphrase"><b>L</b></a>]
d864 1
a864 1
    <code><strong>$ ssleay rsa -des3 -in server.key -out server.key.new</strong></code><br>
d871 1
a871 1
<li><a name="ToC22"></a>
d874 1
a874 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d887 1
a887 1
       <code><strong>$ ssleay rsa -in server.key.org -out server.key</strong></code>
d901 4
d906 1
a906 1
<li><a name="ToC23"></a>
d909 1
a909 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#verify-key"><b>L</b></a>]
d919 2
a920 2
    <code><strong>$ ssleay x509 -noout -text -in server.crt</strong></code><br>
    <code><strong>$ ssleay rsa -noout -text -in server.key</strong></code>
d927 2
a928 2
    <code><strong>$ ssleay x509 -noout -modulus -in server.crt | ssleay md5</strong></code><br>
    <code><strong>$ ssleay rsa -noout -modulus -in server.key | ssleay md5</strong></code>
d934 1
a934 1
    <code><strong>$ ssleay req -noout -modulus -in server.csr | ssleay md5</strong></code>
d936 14
a949 2
<li><a name="ToC24"></a>
    <a name="keysize"></a>
d951 1
a951 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#keysize"><b>L</b></a>]
d959 1
a959 1
<li><a name="ToC25"></a>
d963 1
a963 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d967 1
a967 1
    symlinks. These hash values are generated by the `<code>ssleay x509 -noout
d972 42
d1017 1
a1017 1
<H2><a name="ToC26">About SSL Protocol</a></H2>
d1020 1
a1020 1
<li><a name="ToC27"></a>
d1023 1
a1023 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#load"><b>L</b></a>]
d1030 1
a1030 1
<li><a name="ToC28"></a>
d1033 1
a1033 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#ciphers"><b>L</b></a>]
d1036 2
a1037 2
    version of SSLeay in use (can depend on the way you built
    SSLeay). Typically this at least includes the following:
d1052 1
a1052 1
    <code><strong>$ ssleay ciphers -v</strong></code><br>
d1054 1
a1054 1
<li><a name="ToC29"></a>
d1057 1
a1057 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#vhosts"><b>L</b></a>]
d1071 1
a1071 1
<li><a name="ToC30"></a>
d1076 1
a1076 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#lock-icon"><b>L</b></a>]
d1087 31
d1121 1
a1121 1
<H2><a name="ToC31">About Support</a></H2>
d1124 1
a1124 1
<li><a name="ToC32"></a>
d1127 1
a1127 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#resources"><b>L</b></a>]
d1134 2
a1135 2
    <a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html">
    http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html</a><br>
d1139 3
a1141 3
<li><em>Postings from the sw-mod-ssl Support Mailing List</em>
    <a href="http://www.engelschall.com/sw/mod_ssl/news/list.html">
    http://www.engelschall.com/sw/mod_ssl/news/list.html</a><br>
d1143 1
a1143 1
    sw-mod-ssl mailing list. Perhaps your problem popped up at least once for
d1147 2
a1148 2
    <a href="http://www.engelschall.com/sw/mod_ssl/bugdb/">
    http://www.engelschall.com/sw/mod_ssl/bugdb/</a><br>
d1153 1
a1153 1
<li><a name="ToC33"></a>
d1156 1
a1156 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#contact"><b>L</b></a>]
d1164 2
a1165 2
    <a href="http://www.engelschall.com/sw/mod_ssl/bugdb/">
    http://www.engelschall.com/sw/mod_ssl/bugdb/</a><br>
d1168 1
a1168 1
    send to the sw-mod-ssl mailing list (others see the current problems and
d1171 3
a1173 3
<li><em>Write a Problem Report to the sw-mod-ssl Support Mailing List</em><br>
    <a href="mailto:sw-mod-ssl@@engelschall.com">
    sw-mod-ssl&nbsp;@@&nbsp;engelschall.com</a><br>
d1184 1
a1184 1
    usually not processed as fast as a posting on sw-mod-ssl.
d1187 1
a1187 1
<li><a name="ToC34"></a>
d1191 1
a1191 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#report-details"><b>L</b></a>]
d1196 1
a1196 1
<li><em>Apache, mod_ssl and SSLeay version information</em><br>
d1199 2
a1200 2
    by running ``<code>httpd -v</code>''. The SSLeay version can be
    determined by running ``<code>ssleay version</code>''. Alternatively when
d1205 1
a1205 1
<li><em>The details on how you built and installed Apache+mod_ssl+SSLeay</em><br>
d1212 1
a1212 1
    In case your Apache+mod_ssl+SSLeay should really dumped core please attach
d1225 12
a1236 1
<li><a name="ToC35"></a>
d1239 1
a1239 1
    [<a href="http://www.engelschall.com/sw/mod_ssl/docs/2.2/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1254 5
a1258 3
    some kernels don't write (for security reasons) core-dumps for
    root-processes. Additionally you can run ``<code>/path/to/httpd -X</code>''
    manually to force Apache not not fork.
d1329 2
a1330 2
        <a href="http://www.engelschall.com/sw/mod_ssl/">mod_ssl</a> 2.2, User Manual<br>
        The Apache Interface to SSLeay
@


1.1.1.1
log
@import apache 1.3.27 and mod_ssl 2.8.11
@
text
@d6 1
a6 1
  Copyright (c) 1998-2001 Ralf S. Engelschall. All rights reserved.
d25 1
a25 1
      mod_ssl project (http://www.modssl.org/)."
d35 1
a35 1
      mod_ssl project (http://www.modssl.org/)."
d130 30
d164 1
a164 1
        document[imgName].src = eval(imgName + '_n.src');
d170 1
a170 1
        document[imgName].src = eval(imgName + '_o.src');
d180 1
a180 1
    ro_img_prev_top_n.src = 'ssl_template.navbut-prev-n.gif';
d182 1
a182 11
    ro_img_prev_top_o.src = 'ssl_template.navbut-prev-s.gif';
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_prev_bot_n = new Image();
    ro_img_prev_bot_n.src = 'ssl_template.navbut-prev-n.gif';
    ro_img_prev_bot_o = new Image();
    ro_img_prev_bot_o.src = 'ssl_template.navbut-prev-s.gif';
d186 12
d202 1
a202 1
    ro_img_next_top_n.src = 'ssl_template.navbut-next-n.gif';
d204 1
a204 11
    ro_img_next_top_o.src = 'ssl_template.navbut-next-s.gif';
}
// done hiding -->
</script>
<script type="text/javascript" language="JavaScript">
<!-- Hiding the code
if (document.images) {
    ro_img_next_bot_n = new Image();
    ro_img_next_bot_n.src = 'ssl_template.navbut-next-n.gif';
    ro_img_next_bot_o = new Image();
    ro_img_next_bot_o.src = 'ssl_template.navbut-next-s.gif';
d208 10
a217 34
</head>
<body bgcolor="#ffffff" text="#000000" link="#333399" alink="#9999ff" vlink="#000066">
<div align="center">
<table width="600" cellspacing="0" cellpadding="0" border="0" summary="">
<tr>
  <td>
      <img src="ssl_template.imgdot-1x1-transp.gif" alt="" width="600" height="1" align="bottom" border="0"><br>
      <table width="600" cellspacing="0" cellpadding="0" summary="">
      <tr>
        <td>
        <table width="600" summary="">
        <tr>
            <td align="left" valign="bottom">
            <font face="Arial,Helvetica" size="+2"><b>mod_ssl</b></font>
            </td>
            <td align="right">
              <img src="ssl_template.head-chapter.gif" alt="Chapter" width="175" height="94"> <img src="ssl_template.head-num-6.gif" alt="6" width="74" height="89">
            </td>
        </tr>
        </table>
        </td>
      </tr>
      <tr>
        <td><img src="ssl_template.imgdot-1x1-000000.gif" alt="" width="600" height="2" align="bottom" border="0"></td>
      </tr>
      <tr>
        <td>
           <table width="600" border="0" summary="">
           <tr>
            <td valign="top" align="left" width="250">
<a href="ssl_howto.html" onmouseover="ro_imgOver('ro_img_prev_top', 'previous page'); return true" onmouseout="ro_imgNormal('ro_img_prev_top'); return true" onfocus="ro_imgOver('ro_img_prev_top', 'previous page'); return true" onblur="ro_imgNormal('ro_img_prev_top'); return true"><img name="ro_img_prev_top" src="ssl_template.navbut-prev-n.gif" alt="previous page" width="70" height="18" border="0"></a><br><font color="#000000">HowTo</font>
            </td>
            <td valign="top" align="right" width="250">
<a href="ssl_glossary.html" onmouseover="ro_imgOver('ro_img_next_top', 'next page'); return true" onmouseout="ro_imgNormal('ro_img_next_top'); return true" onfocus="ro_imgOver('ro_img_next_top', 'next page'); return true" onblur="ro_imgNormal('ro_img_next_top'); return true"><img name="ro_img_next_top" src="ssl_template.navbut-next-n.gif" alt="next page" width="70" height="18" border="0"></a><br><font color="#000000">Glossary</font>
d225 1
a225 1
          <br>
d230 2
a231 2
<div align="right">
<table cellspacing="0" cellpadding="0" width="200" summary="">
d234 2
a235 4
<em>
``The wise man doesn't give the right answers,
he poses the right questions.''
</em>
d248 1
a248 1
<table cellspacing="0" cellpadding="0" border="0" summary="">
d257 2
a258 2
Mailing List <a href="mailto:modssl-users@@modssl.org">
<code>modssl-users@@modssl.org</code></a>. They are collected at this place
d269 2
a270 2
<div align="right">
<table cellspacing="0" cellpadding="5" border="0" bgcolor="#ccccff" width="350" summary="">
d282 34
a315 55
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC2"><strong>What is the history of mod_ssl?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC3"><strong>Apache-SSL vs. mod_ssl: differences?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC4"><strong>mod_ssl vs. commercial alternatives?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC5"><strong>mod_ssl/Apache versions?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC6"><strong>mod_ssl and Year 2000?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC7"><strong>mod_ssl and Wassenaar Arrangement?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC8"><strong>About Installation</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC9"><strong>Core dumps for HTTPS requests?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC10"><strong>Core dumps for Apache+mod_ssl+PHP3?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC11"><strong>Undefined symbols on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC12"><strong>Permission problem on SSLMutex</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC13"><strong>Shared memory and process size?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC14"><strong>Shared memory and pathname?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC15"><strong>PRNG and not enough entropy?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC16"><strong>About Configuration</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC17"><strong>HTTP and HTTPS with a single server?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC18"><strong>Where is the HTTPS port?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC19"><strong>How to test HTTPS manually?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC20"><strong>Why does my connection hang?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC21"><strong>Why do I get connection refused?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC22"><strong>Why are the SSL_XXX variables missing?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC23"><strong>How to switch with relative hyperlinks?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC24"><strong>About Certificates</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC25"><strong>What are Keys, CSRs and Certs?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC26"><strong>Difference on startup?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC27"><strong>How to create a dummy cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC28"><strong>How to create a real cert?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC29"><strong>How to create my own CA?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC30"><strong>How to change a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC31"><strong>How to remove a pass phrase?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC32"><strong>How to verify a key/cert pair?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC33"><strong>Bad Certificate Error?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC34"><strong>Why does a 2048-bit key not work?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC35"><strong>Why is client auth broken?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC36"><strong>How to convert from PEM to DER?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC37"><strong>Verisign and the magic getca program?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC38"><strong>Global IDs or SGC?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC39"><strong>Global IDs and Cert Chain?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC40"><strong>About SSL Protocol</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC41"><strong>Random SSL errors under heavy load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC42"><strong>Why has the server a higher load?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC43"><strong>Why are connections horribly slow?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC44"><strong>Which ciphers are supported?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC45"><strong>How to use Anonymous-DH ciphers</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC46"><strong>Why do I get 'no shared ciphers'?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC47"><strong>HTTPS and name-based vhosts</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC48"><strong>The lock icon in Netscape locks very late</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC49"><strong>Why do I get I/O errors with MSIE clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC50"><strong>Why do I get I/O errors with NS clients?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC51"><strong>About Support</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC52"><strong>Resources in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC53"><strong>Support in case of problems?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC54"><strong>How to write a problem report?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC55"><strong>I got a core dump, can you help me?</strong></a><br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<a href="#ToC56"><strong>How to get a backtrace?</strong></a><br>
d324 1
a324 1
<h2><a name="ToC1">About the module</a></h2>
d328 151
a478 24
    <a name="history"></a>
    <strong id="faq">
What is the history of mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#history"><b>L</b></a>]
    <p>
    The mod_ssl v1 package was initially created in April 1998 by <a
    href="mailto:rse@@engelschall.com">Ralf S. Engelschall</a> via porting <a
    href="mailto:ben@@algroup.co.uk">Ben Laurie</a>'s <a
    href="http://www.apache-ssl.org/">Apache-SSL</a> 1.17 source patches for
    Apache 1.2.6 to Apache 1.3b6. Because of conflicts with Ben
    Laurie's development cycle it then was re-assembled from scratch for
    Apache 1.3.0 by merging the old mod_ssl 1.x with the newer Apache-SSL
    1.18. From this point on mod_ssl lived its own life as mod_ssl v2. The
    first publically released version was mod_ssl 2.0.0 from August 10th,
    1998. As of this writing (August 1999) the current mod_ssl version is 2.4.0.
    <p>
    After one year of very active development with over 1000 working hours and
    over 40 releases mod_ssl reached its current state. The result is an
    already very clean source base implementing a very rich functionality.
    The code size increased by a factor of 4 to currently a total of over
    10.000 lines of ANSI C consisting of approx. 70% code and 30% code
    documentation. From the original Apache-SSL code currently approx. 5% is
    remaining only.
d481 14
a494 39
    <a name="apssl-diff"></a>
    <strong id="faq">
What are the functional differences between mod_ssl and Apache-SSL, from where
it is originally derived?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#apssl-diff"><b>L</b></a>]
    <p>
    This neither can be answered in short (there were too many code changes)
    nor can be answered at all by the author (there would immediately be flame
    wars with no reasonable results at the end). But as you easily can guess
    from the 5% of remaining Apache-SSL code, a lot of differences exists,
    although user-visible backward compatibility exists for most things.
    <p>
    When you really want a detailed comparison you have to read the entries in
    the large <code>CHANGES</code> file that is in the mod_ssl
    distribution. Usually this is much too hard-core. So I recommend you to
    either believe in the opinion and recommendations of other users (the
    simplest approach) or do a comparison yourself (the most reasonable
    approach). For the latter, grab distributions of mod_ssl (from <a
    href="http://www.modssl.org/">http://www.modssl.org</a>) and Apache-SSL
    (from <a href="http://www.apache-ssl.org/">http://www.apache-ssl.org</a>),
    install both packages, read their documentation and try them out yourself.
    Then choose the one which pleases you most.
    <p>
    A few final hints to help direct your comparison: quality of documentation
    ("can you easily find answers and are they sufficient?"), quality of
    source code ("is the source code reviewable so you can make sure there
    aren't any trapdoors or inherent security risks because of bad programming
    style?"), easy and clean installation ("can the SSL functionality easily
    added to an Apache source tree without manual editing or patching?"),
    clean integration into Apache ("is the SSL functionality encapsulated and
    cleanly separated from the remaining Apache functionality?"), support for
    Dynamic Shared Object (DSO) facility ("can the SSL functionality built as
    a separate DSO for maximum flexibility?"), Win32 port ("is the SSL
    functionality available also under the Win32 platform?"), amount and
    quality of functionality ("is the provided SSL functionality and control
    possibilities sufficient for your situation?"), quality of problem tracing
    ("is it possible for you to easily trace down the problems via logfiles,
    etc?"), etc. pp.
d497 12
a508 48
    <a name="apssl-diff"></a>
    <strong id="faq">
What are the major differences between mod_ssl and
the commercial alternatives like Raven or Stronghold?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#apssl-diff"><b>L</b></a>]
    <p>
    In the past (until September 20th, 2000) the major difference was
    the RSA license which one received (very cheaply in contrast to
    a direct licensing from RSA DSI) with the commercial Apache SSL
    products. On the other hand, one needed this license only in the US,
    of course. So for non-US citizens this point was useless. But now
    even for US citizens the situations changed because the RSA patent
    expired on September 20th, 2000 and RSA DSI also placed the RSA
    algorithm explicitly into the public domain.
    <p>
    Second, there is the point that one has guaranteed support from
    the commercial vendors. On the other hand, if you monitored the
    Open Source quality of mod_ssl and the support activities
    found on <a href="mailto:modssl-users@@modssl.org">
    <code>modssl-users@@modssl.org</code></a>, you could ask yourself
    whether you are really convinced that you can get better support
    from a commercial vendor.
    <p>
    Third, people often think they would receive perhaps at least a
    better technical SSL solution than mod_ssl from the commercial
    vendors. But this is not really true, because all commercial
    alternatives (Raven 1.4.x, Stronghold 3.x, RedHat SWS 2.x, etc.)
    <i>are</i> actually based on mod_ssl and OpenSSL. The reason for
    this common misunderstanding is mainly because some vendors make no
    attempt to make it reasonably clear that their product is actually
    mod_ssl based. So, do not think, just because the commercial
    alternatives are usually more expensive, that you are also receiving
    an alternative <i>technical</i> SSL solution. This is usually not
    the case. Actually the vendor versions of Apache, mod_ssl and OpenSSL
    often stay behind the latest free versions and perhaps this way still do not
    include important bug and security fixes. On the other hand,
    it sometimes occurs that a vendor version includes useful changes
    which are not available through the official freely available
    packages. But most vendors play fair and contribute back those
    changes to the free software world, of course.
    <p>
    So, in short: There are lots of commercial versions of the popular
    Apache+mod_ssl+OpenSSL server combination available. Every user
    should decide carefully whether they really need to buy a commercial
    version or whether it would not be sufficient to directly use the
    free and official versions of the Apache, mod_ssl and OpenSSL
    packages.
d511 13
d525 2
a526 4
    <strong id="faq">
How do I know which mod_ssl version is for which Apache version?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#what-version"><b>L</b></a>]
d530 2
a531 2
    instance <code>2.4.0-1.3.9</code>. This directly indicates that it's
    mod_ssl version 2.4.0 for Apache version 1.3.9. And this also means you
d536 1
a536 1
<li><a name="ToC6"></a>
d538 2
a539 4
    <strong id="faq">
Is mod_ssl Year 2000 compliant?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#y2k"><b>L</b></a>]
d545 1
a545 1
    <code>time_t</code> type, which on almost all Unix platforms at the moment
d555 1
a555 1
    compliant, too. But whether OpenSSL or the underlaying Operating System
d559 1
a559 1
<li><a name="ToC7"></a>
d561 15
a575 17
    <strong id="faq">
What about mod_ssl and the Wassenaar Arrangement?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#wassenaar"><b>L</b></a>]
    <p>
    First, let us explain what <i>Wassenaar</i> and it's <i>Arrangement on
    Export Controls for Conventional Arms and Dual-Use Goods and
    Technologies</i> is: This is a international regime, established 1995, to
    control trade in conventional arms and dual-use goods and technology. It
    replaced the previous <i>CoCom</i> regime. 33 countries are signatories:
    Argentina, Australia, Austria, Belgium, Bulgaria, Canada, Czech Republic,
    Denmark, Finland, France, Germany, Greece, Hungary, Ireland, Italy, Japan,
    Luxembourg, Netherlands, New Zealand, Norway, Poland, Portugal, Republic
    of Korea, Romania, Russian Federation, Slovak Republic, Spain, Sweden,
    Switzerland, Turkey, Ukraine, United Kingdom and United States. For more
    details look at <a
    href="http://www.wassenaar.org/">http://www.wassenaar.org/</a>.
d584 9
a592 9
    In the current Wassenaar ``<i>List of Dual Use Goods and Technologies And
    Munitions</i>'', under ``<i>GENERAL SOFTWARE NOTE</i>'' (GSN) it says
    ``<i>The Lists do not control "software" which is either: 1. [...] 2. "in
    the public domain".</i>'' And under ``<i>DEFINITIONS OF TERMS USED IN
    THESE LISTS</i>'' one can find the definition: ``<i>"In the public
    domain": This means "technology" or "software" which has been made
    available without restrictions upon its further dissemination. N.B.
    Copyright restrictions do not remove "technology" or "software" from being
    "in the public domain".</i>''
d594 1
a594 1
    So, both mod_ssl and OpenSSL are ``in the public domain'' for the purposes
d609 1
a609 1
    So, mod_ssl and OpenSSL are not affected by the Wassenaar Agreement.
d613 1
a613 1
<h2><a name="ToC8">About Installation</a></h2>
a615 16
<li><a name="ToC9"></a>
    <a name="core-dbm"></a>
    <strong id="faq">
When I access my website the first time via HTTPS I get a core dump?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-dbm"><b>L</b></a>]
    <p>
    There can be a lot of reasons why a core dump can occur, of course.
    Ranging from buggy third-party modules, over buggy vendor libraries up to
    a buggy mod_ssl version. But the above situation is often caused by old or
    broken vendor DBM libraries. To solve it either build mod_ssl with the
    built-in SDBM library (specify <tt>--enable-rule=SSL_SDBM</tt> at the
    APACI command line) or switch from ``<tt>SSLSessionCache dbm:</tt>'' to the
    newer ``<tt>SSLSessionCache shm:</tt>'' variant (after you have rebuilt
    Apache with MM, of course).
<p>
d617 11
a627 11
    <a name="core-php3"></a>
    <strong id="faq">
My Apache dumps core when I add both mod_ssl and PHP3?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-php3"><b>L</b></a>]
    <p>
    Make sure you add mod_ssl to the Apache source tree first and then do a
    fresh configuration and installation of PHP3. For SSL support EAPI patches
    are required which have to change internal Apache structures. PHP3 needs
    to know about these in order to work correctly. Always make sure that
    <tt>-DEAPI</tt> is contained in the compiler flags when PHP3 is build.
a629 107
    <a name="dso-sym"></a>
    <strong id="faq">
When I startup Apache I get errors about undefined symbols like ap_global_ctx?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#dso-sym"><b>L</b></a>]
    <p>
    This actually means you installed mod_ssl as a DSO, but without rebuilding
    Apache with EAPI. Because EAPI is a requirement for mod_ssl, you need an
    extra patched Apache (containing the EAPI patches) and you have to build
    this Apache with EAPI enabled (explicitly specify
    <tt>--enable-rule=EAPI</tt> at the APACI command line).
<p>
<li><a name="ToC12"></a>
    <a name="mutex-perm"></a>
    <strong id="faq">
When I startup Apache I get permission errors related to SSLMutex?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mutex-perm"><b>L</b></a>]
    <p>
    When you receive entries like ``<code>mod_ssl: Child could not open
    SSLMutex lockfile /opt/apache/logs/ssl_mutex.18332 (System error follows)
    [...] System: Permission denied (errno: 13)</code>'' this is usually
    caused by to restrictive permissions on the <i>parent</i> directories.
    Make sure that all parent directories (here <code>/opt</code>,
    <code>/opt/apache</code> and <code>/opt/apache/logs</code>) have the x-bit
    set at least for the UID under which Apache's children are running (see
    the <code>User</code> directive of Apache).
<p>
<li><a name="ToC13"></a>
    <a name="mm"></a>
    <strong id="faq">
When I use the MM library and the shared memory cache each process grows
1.5MB according to `top' although I specified 512000 as the cache size?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mm"><b>L</b></a>]
    <p>
    The additional 1MB are caused by the global shared memory pool EAPI
    allocates for all modules and which is not used by mod_ssl for
    various reasons. So the actually allocated shared memory is always
    1MB more than what you specify on <code>SSLSessionCache</code>.
    But don't be confused by the display of `top': although is
    indicates that <i>each</i> process grow, this is not reality, of
    course. Instead the additional memory consumption is shared by
    all processes, i.e. the 1.5MB are allocated only once per Apache
    instance and not once per Apache server process.
<p>
<li><a name="ToC14"></a>
    <a name="mmpath"></a>
    <strong id="faq">
Apache creates files in a directory declared by the internal
EAPI_MM_CORE_PATH define. Is there a way to override the path using a
configuration directive?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#mmpath"><b>L</b></a>]
    <p>
    No, there is not configuration directive, because for technical
    bootstrapping reasons, a directive not possible at all. Instead
    use ``<code>CFLAGS='-DEAPI_MM_CORE_PATH="/path/to/wherever/"'
    ./configure ...</code>'' when building Apache or use option
    <b>-d</b> when starting <code>httpd</code>.
<p>
<li><a name="ToC15"></a>
    <a name="entropy"></a>
    <strong id="faq">
When I fire up the server, mod_ssl stops with the error
"Failed to generate temporary 512 bit RSA private key", why?
And a "PRNG not seeded" error occurs if I try "make certificate".
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#entropy"><b>L</b></a>]
    <p>
    Cryptographic software needs a source of unpredictable data
    to work correctly. Many open source operating systems provide
    a "randomness device" that serves this purpose (usually named
    <code>/dev/random</code>). On other systems, applications have to
    seed the OpenSSL Pseudo Random Number Generator (PRNG) manually with
    appropriate data before generating keys or performing public key
    encryption. As of version 0.9.5, the OpenSSL functions that need
    randomness report an error if the PRNG has not been seeded with
    at least 128 bits of randomness. So mod_ssl has to provide enough
    entropy to the PRNG to work correctly. For this one has to use the
    <code>SSLRandomSeed</code> directives (to solve the run-time problem)
    and create a <code>$HOME/.rnd</code> file to make sure enough
    entropy is available also for the "<code>make certificate</code>"
    step (in case the "<code>make certificate</code>" procedure is not
    able to gather enough entropy theirself by searching for system
    files).
</ul>
<p>
<br>
<h2><a name="ToC16">About Configuration</a></h2>
<ul>
<p>
<li><a name="ToC17"></a>
    <a name="https-parallel"></a>
    <strong id="faq">
Is it possible to provide HTTP and HTTPS with a single server?</strong>
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-parallel"><b>L</b></a>]
    <p>
    Yes, HTTP and HTTPS use different server ports, so there is no direct
    conflict between them. Either run two separate server instances (one binds
    to port 80, the other to port 443) or even use Apache's elegant virtual
    hosting facility where you can easily create two virtual servers which
    Apache dispatches: one responding to port 80 and speaking HTTP and one
    responding to port 443 speaking HTTPS.
<p>
<li><a name="ToC18"></a>
d631 2
a632 4
    <strong id="faq">
I know that HTTP is on port 80, but where is HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-port"><b>L</b></a>]
d639 1
a639 1
<li><a name="ToC19"></a>
d641 2
a642 4
    <strong id="faq">
How can I speak HTTPS manually for testing purposes?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#https-test"><b>L</b></a>]
d651 1
a651 1
    help of OpenSSL's <code>s_client</code> command you can do a similar
d654 1
a654 1
    <code><b>$ openssl s_client -connect localhost:443 -state -debug</b></code><br>
d661 1
a661 1
    look at nifty <a href="http://curl.haxx.nu/">cURL</a>
d668 1
a668 1
<li><a name="ToC20"></a>
d670 2
a671 37
    <strong id="faq">
Why does the connection hang when I connect to my SSL-aware Apache server?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hang"><b>L</b></a>]
    <p>
    Because you connected with HTTP to the HTTPS port, i.e. you used an URL of
    the form ``<code>http://</code>'' instead of ``<code>https://</code>''.
    This also happens the other way round when you connect via HTTPS to a HTTP
    port, i.e. when you try to use ``<code>https://</code>'' on a server that
    doesn't support SSL (on this port). Make sure you are connecting to a
    virtual server that supports SSL, which is probably the IP associated with
    your hostname, not localhost (127.0.0.1).
<p>
<li><a name="ToC21"></a>
    <a name="hang"></a>
    <strong id="faq">
Why do I get ``Connection Refused'' messages when trying to access my freshly
installed Apache+mod_ssl server via HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hang"><b>L</b></a>]
    <p>
    There can be various reasons. Some of the common mistakes is that people
    start Apache with just ``<tt>apachectl start</tt>'' (or
    ``<tt>httpd</tt>'') instead of ``<tt>apachectl startssl</tt>'' (or
    ``<tt>httpd -DSSL</tt>''. Or you're configuration is not correct. At
    least make sure that your ``<tt>Listen</tt>'' directives match your
    ``<tt>&lt;VirtualHost&gt;</tt>'' directives. And if all fails, please do
    yourself a favor and start over with the default configuration mod_ssl
    provides you.
<p>
<li><a name="ToC22"></a>
    <a name="env-vars"></a>
    <strong id="faq">
In my CGI programs and SSI scripts the various documented
<code>SSL_XXX</code> variables do not exists. Why?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#env-vars"><b>L</b></a>]
d673 9
a681 2
    Just make sure you have ``<code>SSLOptions +StdEnvVars</code>''
    enabled for the context of your CGI/SSI requests.
d683 1
a683 1
<li><a name="ToC23"></a>
d685 2
a686 4
    <strong id="faq">
How can I use relative hyperlinks to switch between HTTP and HTTPS?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#relative-links"><b>L</b></a>]
d704 1
a704 1
<h2><a name="ToC24">About Certificates</a></h2>
d707 1
a707 1
<li><a name="ToC25"></a>
d709 2
a710 4
    <strong id="faq">
What are RSA Private Keys, CSRs and Certificates?</strong>
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#what-is"><b>L</b></a>]
d725 1
a725 1
<li><a name="ToC26"></a>
d727 2
a728 4
    <strong id="faq">
Seems like there is a difference on startup between the original Apache and an SSL-aware Apache?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#startup"><b>L</b></a>]
d741 1
a741 1
<li><a name="ToC27"></a>
d743 2
a744 4
    <strong id="faq">
How can I create a dummy SSL server Certificate for testing purposes?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-dummy"><b>L</b></a>]
d763 1
a763 1
<li><a name="ToC28"></a>
d765 3
a767 5
    <strong id="faq">
Ok, I've got my server installed and want to create a real SSL
server Certificate for it. How do I do it?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-real"><b>L</b></a>]
d772 1
a772 1
    <li>Make sure OpenSSL is really installed and in your <code>PATH</code>.
d774 2
a775 2
        ``<code>openssl</code>'' program from within the OpenSSL source tree as
        ``<code>./apps/openssl</code>''.
d780 1
a780 1
       <code><strong>$ openssl genrsa -des3 -out server.key 1024</strong></code>
d786 1
a786 1
       <code><strong>$ openssl rsa -noout -text -in server.key</strong></code>
d791 1
a791 1
       <code><strong>$ openssl rsa -in server.key -out server.key.unsecure</strong></code>
d793 1
a793 1
    <li>Create a Certificate Signing Request (CSR) with the server RSA private
d796 1
a796 1
       <code><strong>$ openssl req -new -key server.key -out server.csr</strong></code>
a797 4
       Make sure you enter the FQDN ("Fully Qualified Domain Name") of the
       server when OpenSSL prompts you for the "CommonName", i.e. when you
       generate a CSR for a website which will be later accessed via
       <code>https://www.foo.dom/</code>, enter "www.foo.dom" here.
d800 1
a800 1
       <code><strong>$ openssl req -noout -text -in server.csr</strong></code>
d804 1
a804 1
       Certificate which can be used for Apache. Here you have two options:
d843 1
a843 1
       <code><strong>$ openssl x509 -noout -text -in server.crt</strong></code>
d855 1
a855 1
<li><a name="ToC29"></a>
d857 2
a858 4
    <strong id="faq">
How can I create and use my own Certificate Authority (CA)?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cert-ownca"><b>L</b></a>]
d860 2
a861 2
    The short answer is to use the <code>CA.sh</code> or <code>CA.pl</code>
    script provided by OpenSSL. The long and manual answer is this:
d864 1
a864 1
    <li>Create a RSA private key for your CA
d867 1
a867 1
       <code><strong>$ openssl genrsa -des3 -out ca.key 1024</strong></code>
d873 1
a873 1
       <code><strong>$ openssl rsa -noout -text -in ca.key</strong></code>
d878 1
a878 1
       <code><strong>$ openssl rsa -in ca.key -out ca.key.unsecure</strong></code>
d881 1
a881 1
       with the RSA key of the CA (output will be PEM formatted):
d883 1
a883 1
       <code><strong>$ openssl req -new -x509 -days 365 -key ca.key -out ca.crt</strong></code>
d887 1
a887 1
       <code><strong>$ openssl x509 -noout -text -in ca.crt</strong></code>
d890 3
a892 3
       the ``<code>openssl ca</code>'' command has some strange requirements
       and the default OpenSSL config doesn't allow one easily to use
       ``<code>openssl ca</code>'' directly. So a script named
d896 2
a897 3
    <li>Now you can use this CA to sign server CSR's in order to create real
       SSL Certificates for use inside an Apache webserver (assuming
       you already have a <code>server.csr</code> at hand):
d901 1
a901 1
       This signs the server CSR and results in a <code>server.crt</code> file.
d904 1
a904 1
<li><a name="ToC30"></a>
d906 2
a907 4
    <strong id="faq">
How can I change the pass-phrase on my private key file?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#change-passphrase"><b>L</b></a>]
d913 1
a913 1
    <code><strong>$ openssl rsa -des3 -in server.key -out server.key.new</strong></code><br>
d920 1
a920 1
<li><a name="ToC31"></a>
d922 2
a923 4
    <strong id="faq">
How can I get rid of the pass-phrase dialog at Apache startup time?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#remove-passphrase"><b>L</b></a>]
d936 1
a936 1
       <code><strong>$ openssl rsa -in server.key.org -out server.key</strong></code>
a949 4
    <p>
    As an alternative approach you can use the ``<code>SSLPassPhraseDialog
    exec:/path/to/program</code>'' facility. But keep in mind that this is
    neither more nor less secure, of course.
d951 1
a951 1
<li><a name="ToC32"></a>
d953 2
a954 4
    <strong id="faq">
How do I verify that a private key matches its Certificate?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#verify-key"><b>L</b></a>]
d964 2
a965 2
    <code><strong>$ openssl x509 -noout -text -in server.crt</strong></code><br>
    <code><strong>$ openssl rsa -noout -text -in server.key</strong></code>
d972 2
a973 2
    <code><strong>$ openssl x509 -noout -modulus -in server.crt | openssl md5</strong></code><br>
    <code><strong>$ openssl rsa -noout -modulus -in server.key | openssl md5</strong></code>
d979 1
a979 1
    <code><strong>$ openssl req -noout -modulus -in server.csr | openssl md5</strong></code>
d981 4
a984 20
<li><a name="ToC33"></a>
    <a name="keysize1"></a>
    <strong id="faq">
What does it mean when my connections fail with an "alert bad certificate"
error?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#keysize1"><b>L</b></a>]
    <p>
    Usually when you see errors like ``<tt>OpenSSL: error:14094412: SSL
    routines:SSL3_READ_BYTES:sslv3 alert bad certificate</tt>'' in the SSL
    logfile, this means that the browser was unable to handle the server
    certificate/private-key which perhaps contain a RSA-key not equal to 1024
    bits. For instance Netscape Navigator 3.x is one of those browsers.
<p>
<li><a name="ToC34"></a>
    <a name="keysize2"></a>
    <strong id="faq">
Why does my 2048-bit private key not work?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#keysize2"><b>L</b></a>]
d992 1
a992 1
<li><a name="ToC35"></a>
d994 3
a996 5
    <strong id="faq">
Why is client authentication broken after upgrading from
SSLeay version 0.8 to 0.9?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#hash-symlinks"><b>L</b></a>]
d1000 1
a1000 1
    symlinks. These hash values are generated by the `<code>openssl x509 -noout
a1004 65
<p>
<li><a name="ToC36"></a>
    <a name="pem-to-der"></a>
    <strong id="faq">
How can I convert a certificate from PEM to DER format?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#pem-to-der"><b>L</b></a>]
    <p>
    The default certificate format for SSLeay/OpenSSL is PEM, which actually
    is Base64 encoded DER with header and footer lines. For some applications
    (e.g. Microsoft Internet Explorer) you need the certificate in plain DER
    format. You can convert a PEM file <code>cert.pem</code> into the
    corresponding DER file <code>cert.der</code> with the following command:
    <code><strong>$ openssl x509 -in cert.pem -out cert.der -outform DER</strong></code>
<p>
<li><a name="ToC37"></a>
    <a name="verisign-getca"></a>
    <strong id="faq">
I try to install a Verisign certificate. Why can't I find neither the
<code>getca</code> nor <code>getverisign</code> programs Verisign mentions?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#verisign-getca"><b>L</b></a>]
    <p>
    This is because Verisign has never provided specific instructions
    for Apache+mod_ssl. Rather they tell you what you should do
    if you were using C2Net's Stronghold (a commercial Apache
    based server with SSL support). The only thing you have to do
    is to save the certificate into a file and give the name of
    that file to the <code>SSLCertificateFile</code> directive.
    Remember that you need to give the key file in as well (see
    <code>SSLCertificateKeyFile</code> directive). For a better
    CA-related overview on SSL certificate fiddling you can look at <a
    href="http://www.thawte.com/certs/server/keygen/mod_ssl.html">
    Thawte's mod_ssl instructions</a>.
<p>
<li><a name="ToC38"></a>
    <a name="gid"></a>
    <strong id="faq">
Can I use the Server Gated Cryptography (SGC) facility (aka Verisign Global
ID) also with mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#gid"><b>L</b></a>]
    <p>
    Yes, mod_ssl since version 2.1 supports the SGC facility. You don't have
    to configure anything special for this, just use a Global ID as your
    server certificate. The <i>step up</i> of the clients are then
    automatically handled by mod_ssl under run-time. For details please read
    the <tt>README.GlobalID</tt> document in the mod_ssl distribution.
<p>
<li><a name="ToC39"></a>
    <a name="gid"></a>
    <strong id="faq">
After I have installed my new Verisign Global ID server certificate, the
browsers complain that they cannot verify the server certificate?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#gid"><b>L</b></a>]
    <p>
    That is because Verisign uses an intermediate CA certificate between
    the root CA certificate (which is installed in the browsers) and
    the server certificate (which you installed in the server). You
    should have received this additional CA certificate from Verisign.
    If not, complain to them. Then configure this certificate with the
    <code>SSLCertificateChainFile</code> directive in the server. This
    makes sure the intermediate CA certificate is send to the browser
    and this way fills the gap in the certificate chain.
d1008 1
a1008 1
<h2><a name="ToC40">About SSL Protocol</a></h2>
d1011 1
a1011 14
<li><a name="ToC41"></a>
    <a name="random-errors"></a>
    <strong id="faq">
Why do I get lots of random SSL protocol errors under heavy server load?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#random-errors"><b>L</b></a>]
    <p>
    There can be a number of reasons for this, but the main one
    is problems with the SSL session Cache specified by the
    <tt>SSLSessionCache</tt> directive. The DBM session cache is most
    likely the source of the problem, so trying the SHM session cache or
    no cache at all may help.
<p>
<li><a name="ToC42"></a>
d1013 2
a1014 4
    <strong id="faq">
Why has my webserver a higher load now that I run SSL there?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#load"><b>L</b></a>]
d1021 1
a1021 14
<li><a name="ToC43"></a>
    <a name="random"></a>
    <strong id="faq">
Often HTTPS connections to my server require up to 30 seconds for establishing
the connection, although sometimes it works faster?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#random"><b>L</b></a>]
    <p>
    Usually this is caused by using a <code>/dev/random</code> device for
    <code>SSLRandomSeed</code> which is blocking in read(2) calls if not
    enough entropy is available. Read more about this problem in the refernce
    chapter under <code>SSLRandomSeed</code>.
<p>
<li><a name="ToC44"></a>
d1023 2
a1024 4
    <strong id="faq">
What SSL Ciphers are supported by mod_ssl?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#ciphers"><b>L</b></a>]
d1027 2
a1028 2
    version of OpenSSL in use (can depend on the way you built
    OpenSSL). Typically this at least includes the following:
d1043 1
a1043 1
    <code><strong>$ openssl ciphers -v</strong></code><br>
d1045 1
a1045 36
<li><a name="ToC45"></a>
    <a name="cipher-adh"></a>
    <strong id="faq">
I want to use Anonymous Diffie-Hellman (ADH) ciphers, but I always get ``no
shared cipher'' errors?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cipher-adh"><b>L</b></a>]
    <p>
    In order to use Anonymous Diffie-Hellman (ADH) ciphers, it is not enough
    to just put ``<code>ADH</code>'' into your <code>SSLCipherSuite</code>.
    Additionally you have to build OpenSSL with
    ``<code>-DSSL_ALLOW_ADH</code>''. Because per default OpenSSL does not
    allow ADH ciphers for security reasons. So if you are actually enabling
    these ciphers make sure you are informed about the side-effects.
<p>
<li><a name="ToC46"></a>
    <a name="cipher-shared"></a>
    <strong id="faq">
I always just get a 'no shared ciphers' error if
I try to connect to my freshly installed server?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#cipher-shared"><b>L</b></a>]
    <p>
    Either you have messed up your <code>SSLCipherSuite</code>
    directive (compare it with the pre-configured example in
    <code>httpd.conf-dist</code>) or you have choosen the DSA/DH
    algorithms instead of RSA under "<code>make certificate</code>"
    and ignored or overseen the warnings. Because if you have choosen
    DSA/DH, then your server no longer speaks RSA-based SSL ciphers
    (at least not until you also configure an additional RSA-based
    certificate/key pair). But current browsers like NS or IE only speak
    RSA ciphers. The result is the "no shared ciphers" error. To fix
    this, regenerate your server certificate/key pair and this time
    choose the RSA algorithm.
<p>
<li><a name="ToC47"></a>
d1047 2
a1048 4
    <strong id="faq">
Why can't I use SSL with name-based/non-IP-based virtual hosts?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#vhosts"><b>L</b></a>]
d1062 1
a1062 1
<li><a name="ToC48"></a>
d1064 1
a1064 2
    <strong id="faq">
When I use Basic Authentication over HTTPS the lock icon in Netscape browsers
d1066 2
a1067 3
username/password is still transmitted unencrypted?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#lock-icon"><b>L</b></a>]
a1077 76
<p>
<li><a name="ToC49"></a>
    <a name="io-ie"></a>
    <strong id="faq">
When I connect via HTTPS to an Apache+mod_ssl+OpenSSL server with Microsoft Internet
Explorer (MSIE) I get various I/O errors. What is the reason?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#io-ie"><b>L</b></a>]
    <p>
    The first reason is that the SSL implementation in some MSIE versions has
    some subtle bugs related to the HTTP keep-alive facility and the SSL close
    notify alerts on socket connection close. Additionally the interaction
    between SSL and HTTP/1.1 features are problematic with some MSIE versions,
    too. You've to work-around these problems by forcing
    Apache+mod_ssl+OpenSSL to not use HTTP/1.1, keep-alive connections or
    sending the SSL close notify messages to MSIE clients. This can be done by
    using the following directive in your SSL-aware virtual host section:
    <pre>
    SetEnvIf User-Agent ".*MSIE.*" \
             <b>nokeepalive ssl-unclean-shutdown \
             downgrade-1.0 force-response-1.0</b></pre>
    Additionally it is known some MSIE versions have also problems
    with particular ciphers. Unfortunately one cannot workaround these
    bugs only for those MSIE particular clients, because the ciphers
    are already used in the SSL handshake phase. So a MSIE-specific
    <tt>SetEnvIf</tt> doesn't work to solve these problems. Instead one
    has to do more drastic adjustments to the global parameters. But
    before you decide to do this, make sure your clients really have
    problems. If not, do not do this, because it affects all(!) your
    clients, i.e., also your non-MSIE clients.
    <p>
    The next problem is that 56bit export versions of MSIE 5.x browsers have a
    broken SSLv3 implementation which badly interacts with OpenSSL versions
    greater than 0.9.4. You can either accept this and force your clients to
    upgrade their browsers, or you downgrade to OpenSSL 0.9.4 (hmmm), or you
    can decide to workaround it by accepting the drawback that your workaround
    will horribly affect also other browsers:
    <pre>
    SSLProtocol all <b>-SSLv3</b></pre>
    This completely disables the SSLv3 protocol and lets those browsers work.
    But usually this is an even less acceptable workaround. A more reasonable
    workaround is to address the problem more closely and disable only the
    ciphers which cause trouble.
    <pre>
    SSLCipherSuite ALL:!ADH:<b>!EXPORT56</b>:RC4+RSA:+HIGH:+MEDIUM:+LOW:+SSLv2:+EXP</pre>
    This also lets the broken MSIE versions work, but only removes the
    newer 56bit TLS ciphers.
    <p>
    Another problem with MSIE 5.x clients is that they refuse to connect to
    URLs of the form <tt>https://12.34.56.78/</tt> (IP-addresses are used
    instead of the hostname), if the server is using the Server Gated
    Cryptography (SGC) facility. This can only be avoided by using the fully
    qualified domain name (FQDN) of the website in hyperlinks instead, because
    MSIE 5.x has an error in the way it handles the SGC negotiation.
    <p>
    And finally there are versions of MSIE which seem to require that
    an SSL session can be reused (a totally non standard-conforming
    behaviour, of course). Connection with those MSIE versions only work
    if a SSL session cache is used. So, as a work-around, make sure you
    are using a session cache (see <tt>SSLSessionCache</tt> directive).
<p>
<li><a name="ToC50"></a>
    <a name="io-ns"></a>
    <strong id="faq">
When I connect via HTTPS to an Apache+mod_ssl server with Netscape Navigator I
get I/O errors and the message "Netscape has encountered bad data from the
server" What's the reason?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#io-ns"><b>L</b></a>]
    <p>
    The problem usually is that you had created a new server certificate with
    the same DN, but you had told your browser to accept forever the old
    server certificate. Once you clear the entry in your browser for the old
    certificate, everything usually will work fine. Netscape's SSL
    implementation is correct, so when you encounter I/O errors with Netscape
    Navigator it is most of the time caused by the configured certificates.
d1081 1
a1081 1
<h2><a name="ToC51">About Support</a></h2>
d1084 1
a1084 1
<li><a name="ToC52"></a>
d1086 2
a1087 4
    <strong id="faq">
What information resources are available in case of mod_ssl problems?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#resources"><b>L</b></a>]
d1094 2
a1095 2
    <a href="http://www.modssl.org/docs/2.8/ssl_faq.html">
    http://www.modssl.org/docs/2.8/ssl_faq.html</a><br>
d1099 3
a1101 3
<li><em>Postings from the modssl-users Support Mailing List</em>
    <a href="http://www.modssl.org/support/">
    http://www.modssl.org/support/</a><br>
d1103 1
a1103 1
    modssl-users mailing list. Perhaps your problem popped up at least once for
d1107 2
a1108 2
    <a href="http://www.modssl.org/support/bugdb/">
    http://www.modssl.org/support/bugdb/</a><br>
d1113 1
a1113 1
<li><a name="ToC53"></a>
d1115 2
a1116 4
    <strong id="faq">
What support contacts are available in case of mod_ssl problems?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#contact"><b>L</b></a>]
d1124 2
a1125 2
    <a href="http://www.modssl.org/support/bugdb/">
    http://www.modssl.org/support/bugdb/</a><br>
d1128 1
a1128 1
    send to the modssl-users mailing list (others see the current problems and
d1131 3
a1133 3
<li><em>Write a Problem Report to the modssl-users Support Mailing List</em><br>
    <a href="mailto:modssl-users@@modssl.org">
    modssl-users&nbsp;@@&nbsp;modssl.org</a><br>
d1144 1
a1144 1
    usually not processed as fast as a posting on modssl-users.
d1147 1
a1147 1
<li><a name="ToC54"></a>
d1149 3
a1151 5
    <strong id="faq">
What information and details I've to provide to
the author when writing a bug report?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#report-details"><b>L</b></a>]
d1156 2
a1157 2
<li><em>Apache, mod_ssl and OpenSSL version information</em><br>
    The mod_ssl version you should really know. For instance, it's the version
d1159 2
a1160 2
    by running ``<code>httpd -v</code>''. The OpenSSL version can be
    determined by running ``<code>openssl version</code>''. Alternatively when
d1165 1
a1165 1
<li><em>The details on how you built and installed Apache+mod_ssl+OpenSSL</em><br>
d1172 1
a1172 1
    In case your Apache+mod_ssl+OpenSSL should really dumped core please attach
d1185 1
a1185 14
<li><a name="ToC55"></a>
    <a name="core-dumped"></a>
    <strong id="faq">
I got a core dump, can you help me?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#core-dumped"><b>L</b></a>]
    <p>
    In general no, at least not unless you provide more details about the code
    location where Apache dumped core. What is usually always required in
    order to help you is a backtrace (see next question). Without this
    information it is mostly impossible to find the problem and help you in
    fixing it.
<p>
<li><a name="ToC56"></a>
d1187 2
a1188 4
    <strong id="faq">
Ok, I got a core dump but how do I get a backtrace to find out the reason for it?
</strong>&nbsp;&nbsp;
    [<a href="http://www.modssl.org/docs/2.8/ssl_faq.html#report-backtrace"><b>L</b></a>]
d1203 3
a1205 5
    most "current" kernels do not allow a process to dump core after it has
    done a <code>setuid()</code> (unless it does an <code>exec()</code>) for
    security reasons (there can be privileged information left over in
    memory). Additionally you can run ``<code>/path/to/httpd -X</code>''
    manually to force Apache to not fork.
d1214 1
a1214 1
      <p>
d1216 1
a1216 1
      <table summary="">
d1219 1
a1219 1
           <table width="600" border="0" summary="">
d1222 20
a1241 1
<a href="ssl_howto.html" onmouseover="ro_imgOver('ro_img_prev_bot', 'previous page'); return true" onmouseout="ro_imgNormal('ro_img_prev_bot'); return true" onfocus="ro_imgOver('ro_img_prev_bot', 'previous page'); return true" onblur="ro_imgNormal('ro_img_prev_bot'); return true"><img name="ro_img_prev_bot" src="ssl_template.navbut-prev-n.gif" alt="previous page" width="70" height="18" border="0"></a><br><font color="#000000">HowTo</font>
d1244 20
a1263 1
<a href="ssl_glossary.html" onmouseover="ro_imgOver('ro_img_next_bot', 'next page'); return true" onmouseout="ro_imgNormal('ro_img_next_bot'); return true" onfocus="ro_imgOver('ro_img_next_bot', 'next page'); return true" onblur="ro_imgNormal('ro_img_next_bot'); return true"><img name="ro_img_next_bot" src="ssl_template.navbut-next-n.gif" alt="next page" width="70" height="18" border="0"></a><br><font color="#000000">Glossary</font>
d1273 1
a1273 1
        <td><table width="598" summary="">
d1276 2
a1277 2
        <a href="http://www.modssl.org/">mod_ssl</a> 2.8, User Manual<br>
        The Apache Interface to OpenSSL
d1281 1
a1281 1
        Copyright &copy; 1998-2001
@


