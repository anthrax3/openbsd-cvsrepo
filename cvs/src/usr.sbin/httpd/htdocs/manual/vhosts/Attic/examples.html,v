head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.50
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.46
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.44
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.42
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.40
	OPENBSD_5_0:1.5.0.38
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.36
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.34
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.30
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.32
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.28
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.26
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.24
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.22
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.22.14.47.25;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2002.07.19.21.31.15;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.29.10.21.36;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.22.17.46;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.07.19.21.28.15;	author henning;	state Exp;
branches;
next	;


desc
@@


1.6
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>VirtualHost Examples</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Virtual Host examples for common setups</h1>

    <h2>Base configuration</h2>

    <ul>
      <li><a href="#purename">Simple name-based vhosting</a></li>

      <li><a href="#name">More complicated name-based
      vhosts</a></li>

      <li><a href="#ip">IP-based vhosts</a></li>

      <li><a href="#mixed">Mixed name-/IP-based vhosts</a></li>

      <li><a href="#port">Port-based vhosts</a></li>
    </ul>

    <h2>Additional features</h2>

    <ul>
      <li><a href="#default">Using <code>_default_</code>
      vhosts</a></li>

      <li><a href="#migrate">Migrating a named-based vhost to an
      IP-based vhost</a></li>

      <li><a href="#serverpath">Using the <code>ServerPath</code>
      directive</a></li>
    </ul>
    <hr />

    <h3><a id="purename" name="purename">Simple name-based
    vhosting</a></h3>

    <ul>
      <li><strong>Compatibility:</strong> This syntax was added in
      Apache 1.3.13.</li>

      <li>
        <strong>Setup:</strong> The server machine has a primary
        name <samp>server.domain.tld</samp>. There are two aliases
        (CNAMEs) <samp>www.domain.tld</samp> and
        <samp>www.sub.domain.tld</samp> for the address
        <samp>server.domain.tld</samp>. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName server.domain.tld

    NameVirtualHost *

    &lt;VirtualHost *&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;
    
    &lt;VirtualHost *&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ...
    &lt;/VirtualHost&gt; 
   
</pre>
          The asterisks match all addresses, so the main server
          serves no requests. Due to the fact that
          <samp>www.domain.tld</samp> is first in the configuration
          file, it has the highest priority and can be seen as the
          <cite>default</cite> or <cite>primary</cite> server.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="name" name="name">More complicated name-based
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> The server machine has one IP
        address (<samp>111.22.33.44</samp>) which resolves to the
        name <samp>server.domain.tld</samp>. There are two aliases
        (CNAMEs) <samp>www.domain.tld</samp> and
        <samp>www.sub.domain.tld</samp> for the address
        <samp>111.22.33.44</samp>. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName server.domain.tld

    NameVirtualHost 111.22.33.44 

    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;
    
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ...
    &lt;/VirtualHost&gt; 
   
</pre>
          Apart from <samp>localhost</samp> there are no
          unspecified addresses/ports, therefore the main server
          only serves <samp>localhost</samp> requests. Due to the
          fact that <samp>www.domain.tld</samp> has the highest
          priority it can be seen as the <cite>default</cite> or
          <cite>primary</cite> server.
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server1.domain.tld</samp> and
        <samp>server2.domain.tld</samp> respectively. The alias
        <samp>www.domain.tld</samp> should be used for the main
        server which should also catch any unspecified addresses.
        We want to use a virtual host for the alias
        <samp>www.otherdomain.tld</samp> and another virtual host,
        with server name <samp>www.sub.domain.tld</samp>, should
        catch any request to hostnames of the form
        <samp>*.sub.domain.tld</samp>. The address
        <samp>111.22.33.55</samp> should be used for the virtual
        hosts. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName www.domain.tld
    DocumentRoot /www/domain

    NameVirtualHost 111.22.33.55

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ServerAlias *.sub.domain.tld
    ...
    &lt;/VirtualHost&gt; 
   
</pre>
          Any request to an address other than
          <samp>111.22.33.55</samp> will be served from the main
          server. A request to <samp>111.22.33.55</samp> with an
          unknown or no <code>Host:</code> header will be served
          from <samp>www.otherdomain.tld</samp>.
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> The server machine has two IP
        addresses (<samp>192.168.1.1</samp> and
        <samp>111.22.33.55</samp>). The machine is sitting between
        an internal (intranet) network and an external (internet)
        network. Outside of the network, the name
        <samp>server1.domain.tld</samp> resolves to the external
        address (<samp>111.22.33.55</samp>), but inside the
        network, that same name resolves to the internal address
        (<samp>192.168.1.1</samp>). 

        <p>The server can be made to respond to internal and
        external requests with the same content, with just one
        <code>VirtualHost</code> section.</p>

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    NameVirtualHost 192.168.1.1
    NameVirtualHost 111.22.33.55

    &lt;VirtualHost 192.168.1.1 111.22.33.55&gt;
    DocumentRoot /www/server1
    ServerName server1.domain.tld
    ServerAlias server1
    ...
    &lt;/VirtualHost&gt;
   
</pre>
        </blockquote>
        Now requests from both networks will be served from the
        same <code>VirtualHost</code>
      </li>

      <li>
        <strong>Setup 4:</strong> You have multiple domains going
        to the same IP and also want to serve multiple ports. By
        defining the ports in the "NameVirtualHost" tag, you can
        allow this to work. If you try using &lt;VirtualHost
        name:port&gt; without the NameVirtualHost name:port or you
        try to use the Port directive, your configuration will not
        work. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...   
    NameVirtualHost 111.22.33.44:80
    NameVirtualHost 111.22.33.44:8080

    &lt;VirtualHost 111.22.33.44:80&gt;
    ServerName www.domain.tld
    DocumentRoot /www/domain-80
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:8080&gt;
    ServerName www.domain.tld
    DocumentRoot /www/domain-8080
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:80&gt;
    ServerName www.otherdomain.tld
    DocumentRoot /www/otherdomain-80
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:8080&gt;
    ServerName www.otherdomain.tld
    DocumentRoot /www/otherdomain-8080
    &lt;/VirtualHost&gt;

   
</pre>
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="ip" name="ip">IP-based vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server.domain.tld</samp> and
        <samp>www.otherdomain.tld</samp> respectively. The hostname
        <samp>www.domain.tld</samp> is an alias (CNAME) for
        <samp>server.domain.tld</samp> and will represent the main
        server. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    DocumentRoot /www/domain
    ServerName www.domain.tld

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          <samp>www.otherdomain.tld</samp> can only be reached
          through the address <samp>111.22.33.55</samp>, while
          <samp>www.domain.tld</samp> can only be reached through
          <samp>111.22.33.44</samp> (which represents our main
          server).
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> Same as setup 1, but we don't
        want to have a dedicated main server. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName server.domain.tld
    
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          The main server can never catch a request, because all IP
          addresses of our machine are in use for IP-based virtual
          hosts (only <samp>localhost</samp> requests can hit the
          main server).
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server.domain.tld</samp> and
        <samp>www-cache.domain.tld</samp> respectively. The
        hostname <samp>www.domain.tld</samp> is an alias (CNAME)
        for <samp>server.domain.tld</samp> and will represent the
        main server. <samp>www-cache.domain.tld</samp> will become
        our proxy-cache listening on port 8080, while the web
        server itself uses the default port 80. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    Listen 111.22.33.44:80
    Listen 111.22.33.55:8080
    ServerName server.domain.tld
    
    &lt;VirtualHost 111.22.33.44:80&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.55:8080&gt;
    ServerName www-cache.domain.tld
    ...
      &lt;Directory proxy:&gt;
      Order Deny,Allow
      Deny from all
      Allow from 111.22.33
      &lt;/Directory&gt;
    &lt;/VirtualHost&gt;
   
</pre>
          The main server can never catch a request, because all IP
          addresses (apart from <samp>localhost</samp>) of our
          machine are in use for IP-based virtual hosts. The web
          server can only be reached on the first address through
          port 80 and the proxy only on the second address through
          port 8080.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="mixed" name="mixed">Mixed name-/IP-based
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The server machine has three IP
        addresses (<samp>111.22.33.44</samp>,
        <samp>111.22.33.55</samp> and <samp>111.22.33.66</samp>)
        which resolve to the names <samp>server.domain.tld</samp>,
        <samp>www.otherdomain1.tld</samp> and
        <samp>www.otherdomain2.tld</samp> respectively. The address
        <samp>111.22.33.44</samp> should be used for a couple of
        name-based vhosts and the other addresses for IP-based
        vhosts. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName server.domain.tld

    NameVirtualHost 111.22.33.44

    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;
   
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain1
    ServerName www.sub1.domain.tld
    ...
    &lt;/VirtualHost&gt; 
    
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain2
    ServerName www.sub2.domain.tld
    ...
    &lt;/VirtualHost&gt; 
 
    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain1
    ServerName www.otherdomain1.tld
    ...
    &lt;/VirtualHost&gt; 
    
    &lt;VirtualHost 111.22.33.66&gt;
    DocumentRoot /www/otherdomain2
    ServerName www.otherdomain2.tld
    ...
    &lt;/VirtualHost&gt;     
   
</pre>
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="port" name="port">Port-based vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The server machine has one IP
        address (<samp>111.22.33.44</samp>) which resolves to the
        name <samp>www.domain.tld</samp>. If we don't have the
        option to get another address or alias for our server we
        can use port-based vhosts if we need a virtual host with a
        different configuration. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Listen 80
    Listen 8080
    ServerName www.domain.tld
    DocumentRoot /www/domain

    &lt;VirtualHost 111.22.33.44:8080&gt;
    DocumentRoot /www/domain2
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          A request to <samp>www.domain.tld</samp> on port 80 is
          served from the main server and a request to port 8080 is
          served from the virtual host.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="default" name="default">Using <code>_default_</code>
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> Catching <em>every</em> request
        to any unspecified IP address and port, <em>i.e.</em>, an
        address/port combination that is not used for any other
        virtual host. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    &lt;VirtualHost _default_:*&gt;
    DocumentRoot /www/default
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          Using such a default vhost with a wildcard port
          effectively prevents any request going to the main
          server.<br />
           A default vhost never serves a request that was sent to
          an address/port that is used for name-based vhosts. If
          the request contained an unknown or no <code>Host:</code>
          header it is always served from the primary name-based
          vhost (the vhost for that address/port appearing first in
          the configuration file).<br />
           You can use <a
          href="../mod/mod_alias.html#aliasmatch"><code>AliasMatch</code></a>
          or <a
          href="../mod/mod_rewrite.html#RewriteRule"><code>RewriteRule</code></a>
          to rewrite any request to a single information page (or
          script).
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> Same as setup 1, but the server
        listens on several ports and we want to use a second
        <code>_default_</code> vhost for port 80. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    &lt;VirtualHost _default_:80&gt;
    DocumentRoot /www/default80
    ...
    &lt;/VirtualHost&gt;
    
    &lt;VirtualHost _default_:*&gt;
    DocumentRoot /www/default
    ...
    &lt;/VirtualHost&gt;    
   
</pre>
          The default vhost for port 80 (which <em>must</em> appear
          before any default vhost with a wildcard port) catches
          all requests that were sent to an unspecified IP address.
          The main server is never used to serve a request.
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> We want to have a default vhost
        for port 80, but no other default vhosts. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    &lt;VirtualHost _default_:80&gt;
    DocumentRoot /www/default
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          A request to an unspecified address on port 80 is served
          from the default vhost any other request to an
          unspecified address and port is served from the main
          server.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="migrate" name="migrate">Migrating a name-based vhost
    to an IP-based vhost</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The name-based vhost with the
        hostname <samp>www.otherdomain.tld</samp> (from our <a
        href="#name">name-based</a> example, setup 2) should get
        its own IP address. To avoid problems with name servers or
        proxies who cached the old IP address for the name-based
        vhost we want to provide both variants during a migration
        phase.<br />
         The solution is easy, because we can simply add the new IP
        address (<samp>111.22.33.66</samp>) to the
        <code>VirtualHost</code> directive. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName www.domain.tld
    DocumentRoot /www/domain

    NameVirtualHost 111.22.33.55

    &lt;VirtualHost 111.22.33.55 111.22.33.66&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ServerAlias *.sub.domain.tld
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          The vhost can now be accessed through the new address (as
          an IP-based vhost) and through the old address (as a
          name-based vhost).
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="serverpath" name="serverpath">Using the
    <code>ServerPath</code> directive</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> We have a server with two
        name-based vhosts. In order to match the correct virtual
        host a client must send the correct <code>Host:</code>
        header. Old HTTP/1.0 clients do not send such a header and
        Apache has no clue what vhost the client tried to reach
        (and serves the request from the primary vhost). To provide
        as much backward compatibility as possible we create a
        primary vhost which returns a single page containing links
        with an URL prefix to the name-based virtual hosts. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    NameVirtualHost 111.22.33.44

    &lt;VirtualHost 111.22.33.44&gt;
    # primary vhost
    DocumentRoot /www/subdomain
    RewriteEngine On
    RewriteRule ^/.* /www/subdomain/index.html
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain/sub1
    ServerName www.sub1.domain.tld
    ServerPath /sub1/
    RewriteEngine On
    RewriteRule ^(/sub1/.*) /www/subdomain$1 
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain/sub2
    ServerName www.sub2.domain.tld
    ServerPath /sub2/
    RewriteEngine On
    RewriteRule ^(/sub2/.*) /www/subdomain$1 
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          Due to the <a
          href="../mod/core.html#serverpath"><code>ServerPath</code></a>
          directive a request to the URL
          <samp>http://www.sub1.domain.tld/sub1/</samp> is
          <em>always</em> served from the sub1-vhost.<br />
           A request to the URL
          <samp>http://www.sub1.domain.tld/</samp> is only served
          from the sub1-vhost if the client sent a correct
          <code>Host:</code> header. If no <code>Host:</code>
          header is sent the client gets the information page from
          the primary host.<br />
           Please note that there is one oddity: A request to
          <samp>http://www.sub2.domain.tld/sub1/</samp> is also
          served from the sub1-vhost if the client sent no
          <code>Host:</code> header.<br />
           The <code>RewriteRule</code> directives are used to make
          sure that a client which sent a correct
          <code>Host:</code> header can use both URL variants,
          <em>i.e.</em>, with or without URL prefix.
        </blockquote>
      </li>
    </ul>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.5
log
@merge
@
text
@@


1.4
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@d402 1
a402 1
        <samp>111.22.33.44</samp> should we used for a couple of
@


1.3
log
@Apache 1.3.19+mod_ssl 2.8.1 merge - also adds shared build of mod_headers
and mod_expire
@
text
@d1 2
a2 56
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML><HEAD>
<TITLE>VirtualHost Examples</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Virtual Host examples for common setups</H1>


<H2>Base configuration</H2>

<UL>
<LI><A HREF="#purename">Simple name-based vhosting</A>
<LI><A HREF="#name">More complicated name-based vhosts</A>
<LI><A HREF="#ip">IP-based vhosts</A>
<LI><A HREF="#mixed">Mixed name-/IP-based vhosts</A>
<LI><A HREF="#port">Port-based vhosts</A>
</UL>

<H2>Additional features</H2>

<UL>
<LI><A HREF="#default">Using <CODE>_default_</CODE> vhosts</A>
<LI><A HREF="#migrate">Migrating a named-based vhost to an IP-based vhost</A>
<LI><A HREF="#serverpath">Using the <CODE>ServerPath</CODE> directive</A>
</UL>

<HR>

<H3><A NAME="purename">Simple name-based vhosting</A></H3>

<UL>

<LI><STRONG>Compatibility:</STRONG>
    This syntax was added in Apache 1.3.13.

<LI><STRONG>Setup:</STRONG>
    The server machine has a primary name <SAMP>server.domain.tld</SAMP>.
    There are two aliases (CNAMEs) <SAMP>www.domain.tld</SAMP> and
    <SAMP>www.sub.domain.tld</SAMP> for the address <SAMP>server.domain.tld</SAMP>.
    <P>
    <STRONG>Server configuration:</STRONG>
d4 66
a69 1
    <BLOCKQUOTE><PRE>
d87 23
a109 23
    </PRE>
    The asterisks match all addresses, so the main server serves no
    requests. Due to the fact that <SAMP>www.domain.tld</SAMP> is first
    in the configuration file, it has the highest priority and can be
    seen as the <CITE>default</CITE> or <CITE>primary</CITE> server.
    </BLOCKQUOTE>
    <P>

</UL>

<HR>

<H3><A NAME="name">More complicated name-based vhosts</A></H3>

<UL>

<LI><STRONG>Setup 1:</STRONG>
    The server machine has one IP address (<SAMP>111.22.33.44</SAMP>)
    which resolves to the name <SAMP>server.domain.tld</SAMP>.
    There are two aliases (CNAMEs) <SAMP>www.domain.tld</SAMP> and
    <SAMP>www.sub.domain.tld</SAMP> for the address <SAMP>111.22.33.44</SAMP>.
    <P>
    <STRONG>Server configuration:</STRONG>
d111 4
a114 1
    <BLOCKQUOTE><PRE>
d132 26
a157 26
    </PRE>
    Apart from <SAMP>localhost</SAMP> there are no unspecified
    addresses/ports, therefore the main server only serves
    <SAMP>localhost</SAMP> requests. Due to the fact
    that <SAMP>www.domain.tld</SAMP> has the highest priority
    it can be seen as the <CITE>default</CITE> or
    <CITE>primary</CITE> server.
    </BLOCKQUOTE>
    <P>
   
<LI><STRONG>Setup 2:</STRONG>
    The server machine has two IP addresses (<SAMP>111.22.33.44</SAMP>
    and <SAMP>111.22.33.55</SAMP>)
    which resolve to the names <SAMP>server1.domain.tld</SAMP> and
    <SAMP>server2.domain.tld</SAMP> respectively.
    The alias <SAMP>www.domain.tld</SAMP> should be used for the
    main server which should also catch any unspecified addresses. 
    We want to use a virtual host for the alias
    <SAMP>www.otherdomain.tld</SAMP> and another virtual host, 
    with server name <SAMP>www.sub.domain.tld</SAMP>, should
    catch any request to hostnames of the form
    <SAMP>*.sub.domain.tld</SAMP>. 
    The address <SAMP>111.22.33.55</SAMP> should be
    used for the virtual hosts.
    <P>
    <STRONG>Server configuration:</STRONG>
d159 4
a162 1
    <BLOCKQUOTE><PRE>
d182 24
a205 20
    </PRE>
    Any request to an address other than <SAMP>111.22.33.55</SAMP>
    will be served from the main server. A request to
    <SAMP>111.22.33.55</SAMP> with an unknown or no <CODE>Host:</CODE>
    header will be served from <SAMP>www.otherdomain.tld</SAMP>.
    </BLOCKQUOTE>

<LI><STRONG>Setup 3:</STRONG>
       The server machine has two IP addresses (<SAMP>192.168.1.1</SAMP>
       and <SAMP>111.22.33.55</SAMP>). The machine is sitting between
       an internal (intranet) network and an external (internet) network.
       Outside of the network, the name <SAMP>server1.domain.tld</SAMP>
       resolves to the external address (<SAMP>111.22.33.55</SAMP>), but
       inside the network, that same name resolves to the internal
       address (<SAMP>192.168.1.1</SAMP>).<P>

       The server can be made to respond to internal and external
       requests with the same content, with just one <CODE>VirtualHost</CODE>
       section.
       <P>
d207 1
a207 1
       <STRONG>Server configuration:</STRONG>
d209 2
a210 1
       <BLOCKQUOTE><PRE>
d221 15
a235 4
    </PRE></BLOCKQUOTE>

       Now requests from both networks will be served from the same
       <CODE>VirtualHost</CODE>
d237 1
a237 8
<LI><STRONG>Setup 4:</STRONG>
       You have multiple domains going to the same IP and also want
       to serve multiple ports.  By defining the
       ports in the "NameVirtualHost" tag, you can allow this to
       work. If you try using &lt;VirtualHost name:port&gt; without the
       NameVirtualHost name:port or you try to use the Port
       directive, your configuration will not work.
       <P>
d239 2
a240 3
       <STRONG>Server configuration:</STRONG>

       <BLOCKQUOTE><PRE>
d265 19
a283 3
    </PRE></BLOCKQUOTE>

</UL>
d285 1
a285 1
<HR>
d287 2
a288 17
<H3><A NAME="ip">IP-based vhosts</A></H3>

<UL>

<LI><STRONG>Setup 1:</STRONG>
    The server machine has two IP addresses (<SAMP>111.22.33.44</SAMP>
    and <SAMP>111.22.33.55</SAMP>)
    which resolve to the names <SAMP>server.domain.tld</SAMP> and
    <SAMP>www.otherdomain.tld</SAMP> respectively.
    The hostname <SAMP>www.domain.tld</SAMP> is an alias (CNAME)
    for <SAMP>server.domain.tld</SAMP> and will represent the
    main server.
    <P>
    <STRONG>Server configuration:</STRONG>


    <BLOCKQUOTE><PRE>
d299 15
a313 12
    </PRE>
    <SAMP>www.otherdomain.tld</SAMP> can only be reached through the
    address <SAMP>111.22.33.55</SAMP>, while <SAMP>www.domain.tld</SAMP>
    can only be reached through <SAMP>111.22.33.44</SAMP>
    (which represents our main server).
    </BLOCKQUOTE>
    <P>

<LI><STRONG>Setup 2:</STRONG>
    Same as setup 1, but we don't want to have a dedicated main server.
    <P>
    <STRONG>Server configuration:</STRONG>
d315 2
a316 1
    <BLOCKQUOTE><PRE>
d332 22
a353 20
    </PRE>
    The main server can never catch a request, because all IP addresses
    of our machine are in use for IP-based virtual hosts
    (only <SAMP>localhost</SAMP> requests can hit the main server).
    </BLOCKQUOTE>
    <P>
    
<LI><STRONG>Setup 3:</STRONG>
    The server machine has two IP addresses (<SAMP>111.22.33.44</SAMP>
    and <SAMP>111.22.33.55</SAMP>)
    which resolve to the names <SAMP>server.domain.tld</SAMP> and
    <SAMP>www-cache.domain.tld</SAMP> respectively.
    The hostname <SAMP>www.domain.tld</SAMP> is an alias (CNAME)
    for <SAMP>server.domain.tld</SAMP> and will represent the
    main server.
    <SAMP>www-cache.domain.tld</SAMP> will become our proxy-cache 
    listening on port 8080, while the web server itself uses the default
    port 80.
    <P>
    <STRONG>Server configuration:</STRONG>
d355 2
a356 1
    <BLOCKQUOTE><PRE>
d378 27
a404 24
    </PRE>
    The main server can never catch a request, because all IP addresses
    (apart from <SAMP>localhost</SAMP>) of our machine are in use for IP-based
    virtual hosts. The web server can only be reached on the first address
    through port 80 and the proxy only on the second address through port 8080.
    </BLOCKQUOTE>
</UL>

<HR>

<H3><A NAME="mixed">Mixed name-/IP-based vhosts</A></H3>

<UL>

<LI><STRONG>Setup:</STRONG>
    The server machine has three IP addresses (<SAMP>111.22.33.44</SAMP>,
    <SAMP>111.22.33.55</SAMP> and <SAMP>111.22.33.66</SAMP>)
    which resolve to the names <SAMP>server.domain.tld</SAMP>,
    <SAMP>www.otherdomain1.tld</SAMP> and <SAMP>www.otherdomain2.tld</SAMP>
    respectively.
    The address <SAMP>111.22.33.44</SAMP> should we used for a couple
    of name-based vhosts and the other addresses for IP-based vhosts. 
    <P>
    <STRONG>Server configuration:</STRONG>
d406 4
a409 1
    <BLOCKQUOTE><PRE>
d445 17
a461 7
    </PRE></BLOCKQUOTE>

</UL>

<HR>

<H3><A NAME="port">Port-based vhosts</A></H3>
d463 1
a463 1
<UL>
d465 2
a466 10
<LI><STRONG>Setup:</STRONG>
    The server machine has one IP address (<SAMP>111.22.33.44</SAMP>)
    which resolves to the name <SAMP>www.domain.tld</SAMP>.
    If we don't have the option to get another address or alias
    for our server we can use port-based vhosts if we need
    a virtual host with a different configuration.
    <P>
    <STRONG>Server configuration:</STRONG>

    <BLOCKQUOTE><PRE>
d477 19
a495 19
    </PRE>
    A request to <SAMP>www.domain.tld</SAMP> on port 80 is served
    from the main server and a request to port 8080 is served from
    the virtual host.
    </BLOCKQUOTE>
</UL> 
   
<HR>

<H3><A NAME="default">Using <CODE>_default_</CODE> vhosts</A></H3>

<UL>

<LI><STRONG>Setup 1:</STRONG> 
    Catching <EM>every</EM> request to any unspecified IP address and port,
    <EM>i.e.</EM>, an address/port combination that is not used for any other
    virtual host.
    <P>
    <STRONG>Server configuration:</STRONG>
d497 4
a500 1
    <BLOCKQUOTE><PRE>
d506 26
a531 22
    </PRE>
    Using such a default vhost with a wildcard port effectively
    prevents any request going to the main server.<BR>
    A default vhost never serves a request that was sent to an
    address/port that is used for name-based vhosts. If the request
    contained an unknown or no <CODE>Host:</CODE> header it is
    always served from the primary name-based vhost (the
    vhost for that address/port appearing first in the configuration
    file).<BR>
    You can use
    <A HREF="../mod/mod_alias.html#aliasmatch"><CODE>AliasMatch</CODE></A>
    or
    <A HREF="../mod/mod_rewrite.html#RewriteRule"><CODE>RewriteRule</CODE></A>
    to rewrite any request to a single information page (or script).
    </BLOCKQUOTE>
    <P>
    
<LI><STRONG>Setup 2:</STRONG> 
    Same as setup 1, but the server listens on several ports and
    we want to use a second <CODE>_default_</CODE> vhost for port 80.
    <P>
    <STRONG>Server configuration:</STRONG>
d533 2
a534 1
    <BLOCKQUOTE><PRE>
d545 14
a558 12
    </PRE>
    The default vhost for port 80 (which <EM>must</EM> appear before
    any default vhost with a wildcard port) catches all requests that
    were sent to an unspecified IP address. The main server is
    never used to serve a request.
    </BLOCKQUOTE>    
    <P>
    
<LI><STRONG>Setup 3:</STRONG> 
    We want to have a default vhost for port 80, but no other default vhosts.
    <P>
    <STRONG>Server configuration:</STRONG>
d560 2
a561 1
    <BLOCKQUOTE><PRE>
d567 28
a594 25
    </PRE>
    A request to an unspecified address on port 80 is served from the
    default vhost any other request to an unspecified address and port
    is served from the main server.
    </BLOCKQUOTE>

</UL>

<HR>

<H3><A NAME="migrate">Migrating a name-based vhost to an IP-based vhost</A></H3>

<UL>

<LI><STRONG>Setup:</STRONG>
    The name-based vhost with the hostname
    <SAMP>www.otherdomain.tld</SAMP> (from our <A HREF="#name">name-based</A>
    example, setup 2) should get its own IP address.
    To avoid problems with name servers or proxies who cached the old
    IP address for the name-based vhost we want to provide both variants
    during a migration phase.<BR>
    The solution is easy, because we can simply add the new IP address
    (<SAMP>111.22.33.66</SAMP>) to the <CODE>VirtualHost</CODE> directive.
    <P>
    <STRONG>Server configuration:</STRONG>
d596 2
a597 1
    <BLOCKQUOTE><PRE>
d617 26
a642 23
    </PRE>
    The vhost can now be accessed through the new address (as an IP-based
    vhost) and through the old address (as a name-based vhost).
    </BLOCKQUOTE>

</UL>

<HR>

<H3><A NAME="serverpath">Using the <CODE>ServerPath</CODE> directive</A></H3>

<UL>

<LI><STRONG>Setup:</STRONG>
    We have a server with two name-based vhosts. In order to match the correct
    virtual host a client must send the correct <CODE>Host:</CODE> header.
    Old HTTP/1.0 clients do not send such a header and Apache has no clue
    what vhost the client tried to reach (and serves the request from
    the primary vhost). To provide as much backward compatibility
    as possible we create a primary vhost which returns a single page
    containing links with an URL prefix to the name-based virtual hosts.
    <P>
    <STRONG>Server configuration:</STRONG>
d644 2
a645 1
    <BLOCKQUOTE><PRE>
d674 29
a702 25
    </PRE>
    Due to the <A HREF="../mod/core.html#serverpath"><CODE>ServerPath</CODE></A>
    directive a request to the
    URL <SAMP>http://www.sub1.domain.tld/sub1/</SAMP> is <EM>always</EM>
    served from the sub1-vhost. <BR>
    A request to the URL <SAMP>http://www.sub1.domain.tld/</SAMP>
    is only served from the sub1-vhost if the client sent a correct
    <CODE>Host:</CODE> header.
    If no <CODE>Host:</CODE> header is sent the client gets the
    information page from the primary host.<BR>
    Please note that there is one oddity: A request to
    <SAMP>http://www.sub2.domain.tld/sub1/</SAMP> is also served from
    the sub1-vhost if the client sent no <CODE>Host:</CODE> header. <BR>
    The <CODE>RewriteRule</CODE> directives are used to make sure that
    a client which sent a correct <CODE>Host:</CODE> header can use
    both URL variants, <EM>i.e.</EM>, with or without URL prefix.
    </BLOCKQUOTE>

</UL> 

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d704 2
a705 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
a706 2
</BODY>
</HTML>
@


1.2
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d204 38
a633 1
<LI><STRONG>Setup:</STRONG>
@


1.1
log
@Initial revision
@
text
@d27 3
a29 2
<LI><A HREF="#ip">IP-based vhosts only</A>
<LI><A HREF="#name">Name-based vhosts only</A>
d44 165
a208 1
<H3><A NAME="ip">IP-based vhosts only</A></H3>
d302 3
a304 3
      order deny,allow
      deny from all
      allow from 111.22.33
a313 85
<HR>

<H3><A NAME="name">Name-based vhosts only</A></H3>

<UL>

<LI><STRONG>Setup 1:</STRONG>
    The server machine has one IP address (<SAMP>111.22.33.44</SAMP>)
    which resolves to the name <SAMP>server.domain.tld</SAMP>.
    There are two aliases (CNAMEs) <SAMP>www.domain.tld</SAMP> and
    <SAMP>www.sub.domain.tld</SAMP> for the address <SAMP>111.22.33.44</SAMP>.
    <P>
    <STRONG>Server configuration:</STRONG>

    <BLOCKQUOTE><PRE>
    ...
    Port 80
    ServerName server.domain.tld

    NameVirtualHost 111.22.33.44 

    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;
    
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ...
    &lt;/VirtualHost&gt; 
    </PRE>
    Apart from <SAMP>localhost</SAMP> there are no unspecified
    addresses/ports, therefore the main server only serves
    <SAMP>localhost</SAMP> requests. Due to the fact
    that <SAMP>www.domain.tld</SAMP> has the highest priority
    it can be seen as the <CITE>default</CITE> or
    <CITE>primary</CITE> server.
    </BLOCKQUOTE>
    <P>
   
<LI><STRONG>Setup 2:</STRONG>
    The server machine has two IP addresses (<SAMP>111.22.33.44</SAMP>
    and <SAMP>111.22.33.55</SAMP>)
    which resolve to the names <SAMP>server1.domain.tld</SAMP> and
    <SAMP>server2.domain.tld</SAMP> respectively.
    The alias <SAMP>www.domain.tld</SAMP> should be used for the
    main server which should also catch any unspecified addresses. 
    We want to use a virtual host for the alias
    <SAMP>www.otherdomain.tld</SAMP> and one virtual host should
    catch any request to hostnames of the form
    <SAMP>*.sub.domain.tld</SAMP> with <SAMP>www.sub.domain.tld</SAMP>
    as its server name. The address <SAMP>111.22.33.55</SAMP> should be
    used for the virtual hosts.
    <P>
    <STRONG>Server configuration:</STRONG>

    <BLOCKQUOTE><PRE>
    ...
    Port 80
    ServerName www.domain.tld
    DocumentRoot /www/domain

    NameVirtualHost 111.22.33.55

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
    ServerAlias *.sub.domain.tld
    ...
    &lt;/VirtualHost&gt; 
    </PRE>
    Any request to an address other than <SAMP>111.22.33.55</SAMP>
    will be served from the main server. A request to
    <SAMP>111.22.33.55</SAMP> with an unknown or no <CODE>Host:</CODE>
    header will be served from <SAMP>www.otherdomain.tld</SAMP>.
    </BLOCKQUOTE>
</UL>
d596 1
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@


1.1.1.2
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 56
a56 2
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
a57 3
<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />
d59 5
a63 3
    <title>VirtualHost Examples</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->
d65 17
a81 4
  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 
d83 10
a92 2
      <h3>Apache HTTP Server Version 1.3</h3>
    </div>
d94 25
d120 1
a120 49
    <h1 align="CENTER">Virtual Host examples for common setups</h1>

    <h2>Base configuration</h2>

    <ul>
      <li><a href="#purename">Simple name-based vhosting</a></li>

      <li><a href="#name">More complicated name-based
      vhosts</a></li>

      <li><a href="#ip">IP-based vhosts</a></li>

      <li><a href="#mixed">Mixed name-/IP-based vhosts</a></li>

      <li><a href="#port">Port-based vhosts</a></li>
    </ul>

    <h2>Additional features</h2>

    <ul>
      <li><a href="#default">Using <code>_default_</code>
      vhosts</a></li>

      <li><a href="#migrate">Migrating a named-based vhost to an
      IP-based vhost</a></li>

      <li><a href="#serverpath">Using the <code>ServerPath</code>
      directive</a></li>
    </ul>
    <hr />

    <h3><a id="purename" name="purename">Simple name-based
    vhosting</a></h3>

    <ul>
      <li><strong>Compatibility:</strong> This syntax was added in
      Apache 1.3.13.</li>

      <li>
        <strong>Setup:</strong> The server machine has a primary
        name <samp>server.domain.tld</samp>. There are two aliases
        (CNAMEs) <samp>www.domain.tld</samp> and
        <samp>www.sub.domain.tld</samp> for the address
        <samp>server.domain.tld</samp>. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d123 2
d126 2
a127 4

    NameVirtualHost *

    &lt;VirtualHost *&gt;
d132 3
a134 4
    
    &lt;VirtualHost *&gt;
    DocumentRoot /www/subdomain
    ServerName www.sub.domain.tld
d136 26
a161 26
    &lt;/VirtualHost&gt; 
   
</pre>
          The asterisks match all addresses, so the main server
          serves no requests. Due to the fact that
          <samp>www.domain.tld</samp> is first in the configuration
          file, it has the highest priority and can be seen as the
          <cite>default</cite> or <cite>primary</cite> server.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="name" name="name">More complicated name-based
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> The server machine has one IP
        address (<samp>111.22.33.44</samp>) which resolves to the
        name <samp>server.domain.tld</samp>. There are two aliases
        (CNAMEs) <samp>www.domain.tld</samp> and
        <samp>www.sub.domain.tld</samp> for the address
        <samp>111.22.33.44</samp>. 

        <p><strong>Server configuration:</strong></p>
d163 1
a163 2
        <blockquote>
<pre>
d181 25
a205 26
   
</pre>
          Apart from <samp>localhost</samp> there are no
          unspecified addresses/ports, therefore the main server
          only serves <samp>localhost</samp> requests. Due to the
          fact that <samp>www.domain.tld</samp> has the highest
          priority it can be seen as the <cite>default</cite> or
          <cite>primary</cite> server.
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server1.domain.tld</samp> and
        <samp>server2.domain.tld</samp> respectively. The alias
        <samp>www.domain.tld</samp> should be used for the main
        server which should also catch any unspecified addresses.
        We want to use a virtual host for the alias
        <samp>www.otherdomain.tld</samp> and another virtual host,
        with server name <samp>www.sub.domain.tld</samp>, should
        catch any request to hostnames of the form
        <samp>*.sub.domain.tld</samp>. The address
        <samp>111.22.33.55</samp> should be used for the virtual
        hosts. 
d207 1
a207 4
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d227 24
a250 24
   
</pre>
          Any request to an address other than
          <samp>111.22.33.55</samp> will be served from the main
          server. A request to <samp>111.22.33.55</samp> with an
          unknown or no <code>Host:</code> header will be served
          from <samp>www.otherdomain.tld</samp>.
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> The server machine has two IP
        addresses (<samp>192.168.1.1</samp> and
        <samp>111.22.33.55</samp>). The machine is sitting between
        an internal (intranet) network and an external (internet)
        network. Outside of the network, the name
        <samp>server1.domain.tld</samp> resolves to the external
        address (<samp>111.22.33.55</samp>), but inside the
        network, that same name resolves to the internal address
        (<samp>192.168.1.1</samp>). 

        <p>The server can be made to respond to internal and
        external requests with the same content, with just one
        <code>VirtualHost</code> section.</p>
d252 1
a252 203
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    NameVirtualHost 192.168.1.1
    NameVirtualHost 111.22.33.55

    &lt;VirtualHost 192.168.1.1 111.22.33.55&gt;
    DocumentRoot /www/server1
    ServerName server1.domain.tld
    ServerAlias server1
    ...
    &lt;/VirtualHost&gt;
   
</pre>
        </blockquote>
        Now requests from both networks will be served from the
        same <code>VirtualHost</code>
      </li>

      <li>
        <strong>Setup 4:</strong> You have multiple domains going
        to the same IP and also want to serve multiple ports. By
        defining the ports in the "NameVirtualHost" tag, you can
        allow this to work. If you try using &lt;VirtualHost
        name:port&gt; without the NameVirtualHost name:port or you
        try to use the Port directive, your configuration will not
        work. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...   
    NameVirtualHost 111.22.33.44:80
    NameVirtualHost 111.22.33.44:8080

    &lt;VirtualHost 111.22.33.44:80&gt;
    ServerName www.domain.tld
    DocumentRoot /www/domain-80
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:8080&gt;
    ServerName www.domain.tld
    DocumentRoot /www/domain-8080
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:80&gt;
    ServerName www.otherdomain.tld
    DocumentRoot /www/otherdomain-80
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.44:8080&gt;
    ServerName www.otherdomain.tld
    DocumentRoot /www/otherdomain-8080
    &lt;/VirtualHost&gt;

   
</pre>
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="ip" name="ip">IP-based vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server.domain.tld</samp> and
        <samp>www.otherdomain.tld</samp> respectively. The hostname
        <samp>www.domain.tld</samp> is an alias (CNAME) for
        <samp>server.domain.tld</samp> and will represent the main
        server. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    DocumentRoot /www/domain
    ServerName www.domain.tld

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          <samp>www.otherdomain.tld</samp> can only be reached
          through the address <samp>111.22.33.55</samp>, while
          <samp>www.domain.tld</samp> can only be reached through
          <samp>111.22.33.44</samp> (which represents our main
          server).
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> Same as setup 1, but we don't
        want to have a dedicated main server. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    ServerName server.domain.tld
    
    &lt;VirtualHost 111.22.33.44&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.55&gt;
    DocumentRoot /www/otherdomain
    ServerName www.otherdomain.tld
    ...
    &lt;/VirtualHost&gt;
   
</pre>
          The main server can never catch a request, because all IP
          addresses of our machine are in use for IP-based virtual
          hosts (only <samp>localhost</samp> requests can hit the
          main server).
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> The server machine has two IP
        addresses (<samp>111.22.33.44</samp> and
        <samp>111.22.33.55</samp>) which resolve to the names
        <samp>server.domain.tld</samp> and
        <samp>www-cache.domain.tld</samp> respectively. The
        hostname <samp>www.domain.tld</samp> is an alias (CNAME)
        for <samp>server.domain.tld</samp> and will represent the
        main server. <samp>www-cache.domain.tld</samp> will become
        our proxy-cache listening on port 8080, while the web
        server itself uses the default port 80. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
    ...
    Port 80
    Listen 111.22.33.44:80
    Listen 111.22.33.55:8080
    ServerName server.domain.tld
    
    &lt;VirtualHost 111.22.33.44:80&gt;
    DocumentRoot /www/domain
    ServerName www.domain.tld
    ...
    &lt;/VirtualHost&gt;

    &lt;VirtualHost 111.22.33.55:8080&gt;
    ServerName www-cache.domain.tld
    ...
      &lt;Directory proxy:&gt;
      Order Deny,Allow
      Deny from all
      Allow from 111.22.33
      &lt;/Directory&gt;
    &lt;/VirtualHost&gt;
   
</pre>
          The main server can never catch a request, because all IP
          addresses (apart from <samp>localhost</samp>) of our
          machine are in use for IP-based virtual hosts. The web
          server can only be reached on the first address through
          port 80 and the proxy only on the second address through
          port 8080.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="mixed" name="mixed">Mixed name-/IP-based
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The server machine has three IP
        addresses (<samp>111.22.33.44</samp>,
        <samp>111.22.33.55</samp> and <samp>111.22.33.66</samp>)
        which resolve to the names <samp>server.domain.tld</samp>,
        <samp>www.otherdomain1.tld</samp> and
        <samp>www.otherdomain2.tld</samp> respectively. The address
        <samp>111.22.33.44</samp> should be used for a couple of
        name-based vhosts and the other addresses for IP-based
        vhosts. 

        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d288 9
a296 17
   
</pre>
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="port" name="port">Port-based vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The server machine has one IP
        address (<samp>111.22.33.44</samp>) which resolves to the
        name <samp>www.domain.tld</samp>. If we don't have the
        option to get another address or alias for our server we
        can use port-based vhosts if we need a virtual host with a
        different configuration. 
d298 8
a305 1
        <p><strong>Server configuration:</strong></p>
d307 1
a307 2
        <blockquote>
<pre>
d318 19
a336 21
   
</pre>
          A request to <samp>www.domain.tld</samp> on port 80 is
          served from the main server and a request to port 8080 is
          served from the virtual host.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="default" name="default">Using <code>_default_</code>
    vhosts</a></h3>

    <ul>
      <li>
        <strong>Setup 1:</strong> Catching <em>every</em> request
        to any unspecified IP address and port, <em>i.e.</em>, an
        address/port combination that is not used for any other
        virtual host. 

        <p><strong>Server configuration:</strong></p>
d338 1
a338 2
        <blockquote>
<pre>
d344 22
a365 24
   
</pre>
          Using such a default vhost with a wildcard port
          effectively prevents any request going to the main
          server.<br />
           A default vhost never serves a request that was sent to
          an address/port that is used for name-based vhosts. If
          the request contained an unknown or no <code>Host:</code>
          header it is always served from the primary name-based
          vhost (the vhost for that address/port appearing first in
          the configuration file).<br />
           You can use <a
          href="../mod/mod_alias.html#aliasmatch"><code>AliasMatch</code></a>
          or <a
          href="../mod/mod_rewrite.html#RewriteRule"><code>RewriteRule</code></a>
          to rewrite any request to a single information page (or
          script).
        </blockquote>
      </li>

      <li>
        <strong>Setup 2:</strong> Same as setup 1, but the server
        listens on several ports and we want to use a second
        <code>_default_</code> vhost for port 80. 
d367 1
a367 4
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d378 12
a389 12
   
</pre>
          The default vhost for port 80 (which <em>must</em> appear
          before any default vhost with a wildcard port) catches
          all requests that were sent to an unspecified IP address.
          The main server is never used to serve a request.
        </blockquote>
      </li>

      <li>
        <strong>Setup 3:</strong> We want to have a default vhost
        for port 80, but no other default vhosts. 
d391 1
a391 4
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d397 25
a421 26
   
</pre>
          A request to an unspecified address on port 80 is served
          from the default vhost any other request to an
          unspecified address and port is served from the main
          server.
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="migrate" name="migrate">Migrating a name-based vhost
    to an IP-based vhost</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> The name-based vhost with the
        hostname <samp>www.otherdomain.tld</samp> (from our <a
        href="#name">name-based</a> example, setup 2) should get
        its own IP address. To avoid problems with name servers or
        proxies who cached the old IP address for the name-based
        vhost we want to provide both variants during a migration
        phase.<br />
         The solution is easy, because we can simply add the new IP
        address (<samp>111.22.33.66</samp>) to the
        <code>VirtualHost</code> directive. 
d423 1
a423 4
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d443 23
a465 24
   
</pre>
          The vhost can now be accessed through the new address (as
          an IP-based vhost) and through the old address (as a
          name-based vhost).
        </blockquote>
      </li>
    </ul>
    <hr />

    <h3><a id="serverpath" name="serverpath">Using the
    <code>ServerPath</code> directive</a></h3>

    <ul>
      <li>
        <strong>Setup:</strong> We have a server with two
        name-based vhosts. In order to match the correct virtual
        host a client must send the correct <code>Host:</code>
        header. Old HTTP/1.0 clients do not send such a header and
        Apache has no clue what vhost the client tried to reach
        (and serves the request from the primary vhost). To provide
        as much backward compatibility as possible we create a
        primary vhost which returns a single page containing links
        with an URL prefix to the name-based virtual hosts. 
d467 1
a467 4
        <p><strong>Server configuration:</strong></p>

        <blockquote>
<pre>
d496 25
a520 29
   
</pre>
          Due to the <a
          href="../mod/core.html#serverpath"><code>ServerPath</code></a>
          directive a request to the URL
          <samp>http://www.sub1.domain.tld/sub1/</samp> is
          <em>always</em> served from the sub1-vhost.<br />
           A request to the URL
          <samp>http://www.sub1.domain.tld/</samp> is only served
          from the sub1-vhost if the client sent a correct
          <code>Host:</code> header. If no <code>Host:</code>
          header is sent the client gets the information page from
          the primary host.<br />
           Please note that there is one oddity: A request to
          <samp>http://www.sub2.domain.tld/sub1/</samp> is also
          served from the sub1-vhost if the client sent no
          <code>Host:</code> header.<br />
           The <code>RewriteRule</code> directives are used to make
          sure that a client which sent a correct
          <code>Host:</code> header can use both URL variants,
          <em>i.e.</em>, with or without URL prefix.
        </blockquote>
      </li>
    </ul>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>
d522 2
a523 2
  </body>
</html>
d525 2
@

