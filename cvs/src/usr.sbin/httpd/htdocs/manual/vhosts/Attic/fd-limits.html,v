head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.1.1.0.14
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.12
	OPENBSD_2_8:1.1.1.1.0.10
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.8
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.22.14.47.25;	author henning;	state dead;
branches;
next	1.5;

1.5
date	2005.07.29.23.55.40;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.20.00.16.21;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2002.07.19.21.31.15;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches;
next	;


desc
@@


1.6
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd">
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache Server Virtual Host Support</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">File Descriptor Limits</h1>

    <p>When using a large number of Virtual Hosts, Apache may run
    out of available file descriptors (sometimes called <cite>file
    handles</cite> if each Virtual Host specifies different log
    files. The total number of file descriptors used by Apache is
    one for each distinct error log file, one for every other log
    file directive, plus 10-20 for internal use. Unix operating
    systems limit the number of file descriptors that may be used
    by a process; the limit is typically 64, and may usually be
    increased up to a large hard-limit.</p>

    <p>Although Apache attempts to increase the limit as required,
    this may not work if:</p>

    <ol>
      <li>Your system does not provide the setrlimit() system
      call.</li>

      <li>The setrlimit(RLIMIT_NOFILE) call does not function on
      your system (such as Solaris 2.3)</li>

      <li>The number of file descriptors required exceeds the hard
      limit.</li>

      <li>Your system imposes other limits on file descriptors,
      such as a limit on stdio streams only using file descriptors
      below 256. (Solaris 2)</li>
    </ol>
    In the event of problems you can: 

    <ul>
      <li>Reduce the number of log files; don't specify log files
      in the VirtualHost sections, but only log to the main log
      files.</li>

      <li>
        If you system falls into 1 or 2 (above), then increase the
        file descriptor limit before starting Apache, using a
        script like 

        <blockquote>
          <code>#!/bin/sh<br />
           ulimit -S -n 100<br />
           exec httpd</code>
        </blockquote>
      </li>
    </ul>

    <p>Please see the <a
    href="../misc/descriptors.html">Descriptors and Apache</a>
    document containing further details about file descriptor
    problems and how they can be solved on your operating
    system.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>



@


1.5
log
@from tamas tevesz:
==> de-multiviewification complete.

(rename *.html.html -> *.html)
@
text
@@


1.4
log
@remove pre-apache-1.3.26 cruft

Note for upgraders:
to actually see the current manual, you should do

find /var/www/htdocs/manual/ -type f -exec rm {} \;
cd /usr/src/usr.sbin/httpd/
make -f Makefile.bsd-wrapper distribution

you will also need a current httpd.conf, MultiViews need to be enabled in
/var/www/htdocs/manual/
@
text
@d1 87
@


1.3
log
@merge
@
text
@@


1.2
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@a0 83
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache Server Virtual Host Support</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">File Descriptor Limits</h1>

    <p>When using a large number of Virtual Hosts, Apache may run
    out of available file descriptors (sometimes called <cite>file
    handles</cite> if each Virtual Host specifies different log
    files. The total number of file descriptors used by Apache is
    one for each distinct error log file, one for every other log
    file directive, plus 10-20 for internal use. Unix operating
    systems limit the number of file descriptors that may be used
    by a process; the limit is typically 64, and may usually be
    increased up to a large hard-limit.</p>

    <p>Although Apache attempts to increase the limit as required,
    this may not work if:</p>

    <ol>
      <li>Your system does not provide the setrlimit() system
      call.</li>

      <li>The setrlimit(RLIMIT_NOFILE) call does not function on
      your system (such as Solaris 2.3)</li>

      <li>The number of file descriptors required exceeds the hard
      limit.</li>

      <li>Your system imposes other limits on file descriptors,
      such as a limit on stdio streams only using file descriptors
      below 256. (Solaris 2)</li>
    </ol>
    In the event of problems you can: 

    <ul>
      <li>Reduce the number of log files; don't specify log files
      in the VirtualHost sections, but only log to the main log
      files.</li>

      <li>
        If you system falls into 1 or 2 (above), then increase the
        file descriptor limit before starting Apache, using a
        script like 

        <blockquote>
          <code>#!/bin/sh<br />
           ulimit -S -n 100<br />
           exec httpd</code>
        </blockquote>
      </li>
    </ul>

    <p>Please see the <a
    href="../misc/descriptors.html">Descriptors and Apache</a>
    document containing further details about file descriptor
    problems and how they can be solved on your operating
    system.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.1
log
@Initial revision
@
text
@d1 2
a2 67
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache Server Virtual Host Support</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">File Descriptor Limits</H1>

<P>
When using a large number of Virtual Hosts, Apache may run out of available
file descriptors (sometimes called <CITE>file handles</CITE> if each Virtual
Host specifies different log files.
The total number of file descriptors used by Apache is one for each distinct
error log file, one for every other log file directive, plus 10-20 for
internal use. Unix operating systems limit the number of file descriptors that
may be used by a process; the limit is typically 64, and may usually be
increased up to a large hard-limit.
<P>
Although Apache attempts to increase the limit as required, this
may not work if:
<OL>
<LI>Your system does not provide the setrlimit() system call.
<LI>The setrlimit(RLIMIT_NOFILE) call does not function on your system
 (such as Solaris 2.3)
<LI>The number of file descriptors required exceeds the hard limit.
<LI>Your system imposes other limits on file descriptors, such as a limit
on stdio streams only using file descriptors below 256. (Solaris 2)
</OL>

In the event of problems you can:
<UL>
<LI>Reduce the number of log files; don't specify log files in the VirtualHost
sections, but only log to the main log files.
<LI>If you system falls into 1 or 2 (above), then increase the file descriptor
limit before starting Apache, using a script like
<BLOCKQUOTE><CODE>
#!/bin/sh <BR>
ulimit -S -n 100 <BR>
exec httpd</CODE></BLOCKQUOTE>
</UL>
<P>
Please see the
<A HREF="../misc/descriptors.html">Descriptors and Apache</A>
document containing further details about file descriptor problems and how
they can be solved on your operating system.
</P>

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>
d4 76
a79 2
<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
d81 2
a82 1
</BODY></HTML>
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@
