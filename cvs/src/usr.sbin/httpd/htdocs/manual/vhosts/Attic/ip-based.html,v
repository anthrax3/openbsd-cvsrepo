head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.52
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.48
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.46
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.44
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.42
	OPENBSD_5_0:1.4.0.40
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.38
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.36
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.32
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.34
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.30
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.28
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.26
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.24
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	apache_1_3_29-mod_ssl_2_8_16:1.1.1.2
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	apache_1_3_28-mod_ssl_2_8_15:1.1.1.2
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	apache_1_3_27-mod_ssl_2_8_12:1.1.1.2
	apache_1_3_27:1.1.1.2
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	apache_1_3_26:1.1.1.2
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	apache_1_3_2:1.1.1.1
	apache:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.22.14.47.25;	author henning;	state dead;
branches;
next	1.4;

1.4
date	2002.02.12.07.56.48;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.22.17.48;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.16.46;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.01.17.20.18;	author beck;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.07.19.21.28.15;	author henning;	state Exp;
branches;
next	;


desc
@@


1.5
log
@this commit is really florian@@'s, since he's the one who made removal
of our forked apache possible by his work on nginx and slowcgi, but he
doesn't want it - so it is my pleasure to tedu it. I spent so much work
on chroot in it 10 years ago - and am very happy to see it go now, nginx
is a far better choice today.
Bye bye, Apache, won't miss you.
@
text
@<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache IP-based Virtual Host Support</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Apache IP-based Virtual Host Support</h1>
    <strong>See also:</strong> <a href="name-based.html">Name-based
    Virtual Hosts Support</a> 
    <hr />

    <h2>System requirements</h2>
    As the term <cite>IP-based</cite> indicates, the server
    <strong>must have a different IP address for each IP-based
    virtual host</strong>. This can be achieved by the machine
    having several physical network connections, or by use of
    virtual interfaces which are supported by most modern operating
    systems (see system documentation for details, these are
    frequently called "ip aliases", and the "ifconfig" command is
    most commonly used to set them up). 

    <h2>How to set up Apache</h2>
    There are two ways of configuring apache to support multiple
    hosts. Either by running a separate httpd daemon for each
    hostname, or by running a single daemon which supports all the
    virtual hosts. 

    <p>Use multiple daemons when:</p>

    <ul>
      <li>There are security partitioning issues, such as company1
      does not want anyone at company2 to be able to read their
      data except via the web. In this case you would need two
      daemons, each running with different <a
      href="../mod/core.html#user">User</a>, <a
      href="../mod/core.html#group">Group</a>, <a
      href="../mod/core.html#listen">Listen</a>, and <a
      href="../mod/core.html#serverroot">ServerRoot</a>
      settings.</li>

      <li>You can afford the memory and <a
      href="../misc/descriptors.html">file descriptor
      requirements</a> of listening to every IP alias on the
      machine. It's only possible to <a
      href="../mod/core.html#listen">Listen</a> to the "wildcard"
      address, or to specific addresses. So if you have a need to
      listen to a specific address for whatever reason, then you
      will need to listen to all specific addresses. (Although one
      httpd could listen to N-1 of the addresses, and another could
      listen to the remaining address.)</li>
    </ul>
    Use a single daemon when: 

    <ul>
      <li>Sharing of the httpd configuration between virtual hosts
      is acceptable.</li>

      <li>The machine services a large number of requests, and so
      the performance loss in running separate daemons may be
      significant.</li>
    </ul>

    <h2>Setting up multiple daemons</h2>
    Create a separate httpd installation for each virtual host. For
    each installation, use the <a
    href="../mod/core.html#listen">Listen</a> directive in the
    configuration file to select which IP address (or virtual host)
    that daemon services. e.g. 
<pre>
    Listen www.smallco.com:80
</pre>
    It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>). 

    <h2>Setting up a single daemon with virtual hosts</h2>
    For this case, a single httpd will service requests for the
    main server and all the virtual hosts. The <a
    href="../mod/core.html#virtualhost">VirtualHost</a> directive
    in the configuration file is used to set the values of <a
    href="../mod/core.html#serveradmin">ServerAdmin</a>, <a
    href="../mod/core.html#servername">ServerName</a>, <a
    href="../mod/core.html#documentroot">DocumentRoot</a>, <a
    href="../mod/core.html#errorlog">ErrorLog</a> and <a
    href="../mod/mod_log_config.html#transferlog">TransferLog</a>
    or <a href="../mod/mod_log_config.html#customlog">CustomLog</a>
    configuration directives to different values for each virtual
    host. e.g. 
<pre>
    &lt;VirtualHost www.smallco.com&gt;
    ServerAdmin webmaster@@mail.smallco.com
    DocumentRoot /groups/smallco/www
    ServerName www.smallco.com
    ErrorLog /groups/smallco/logs/error_log
    TransferLog /groups/smallco/logs/access_log
    &lt;/VirtualHost&gt;

    &lt;VirtualHost www.baygroup.org&gt;
    ServerAdmin webmaster@@mail.baygroup.org
    DocumentRoot /groups/baygroup/www
    ServerName www.baygroup.org
    ErrorLog /groups/baygroup/logs/error_log
    TransferLog /groups/baygroup/logs/access_log
    &lt;/VirtualHost&gt;
</pre>
    It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>). 

    <p>Almost <strong>any</strong> configuration directive can be
    put in the VirtualHost directive, with the exception of
    directives that control process creation and a few other
    directives. To find out if a directive can be used in the
    VirtualHost directive, check the <a
    href="../mod/directive-dict.html#Context">Context</a> using the
    <a href="../mod/directives.html">directive index</a>.</p>

    <p><a href="../mod/core.html#user">User</a> and <a
    href="../mod/core.html#group">Group</a> may be used inside a
    VirtualHost directive if the <a href="../suexec.html">suEXEC
    wrapper</a> is used.</p>

    <p><em>SECURITY:</em> When specifying where to write log files,
    be aware of some security risks which are present if anyone
    other than the user that starts Apache has write access to the
    directory where they are written. See the <a
    href="../misc/security_tips.html">security tips</a> document
    for details.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>

  </body>
</html>

@


1.4
log
@Apache 1.3.23+mod_ssl-2.8.6-1.3.23 merge
@
text
@@


1.3
log
@apache 1.3.14 + mod_ssl 2.7.1 merge
@
text
@d1 83
a83 75
<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 3.2 Final//EN">
<HTML>
<HEAD>
<TITLE>Apache IP-based Virtual Host Support</TITLE>
</HEAD>

<!-- Background white, links blue (unvisited), navy (visited), red (active) -->
<BODY
 BGCOLOR="#FFFFFF"
 TEXT="#000000"
 LINK="#0000FF"
 VLINK="#000080"
 ALINK="#FF0000"
>
<DIV ALIGN="CENTER">
 <IMG SRC="../images/sub.gif" ALT="[APACHE DOCUMENTATION]">
 <H3>
  Apache HTTP Server Version 1.3
 </H3>
</DIV>

<H1 ALIGN="CENTER">Apache IP-based Virtual Host Support</H1>

<STRONG>See also:</STRONG>
<A HREF="name-based.html">Name-based Virtual Hosts Support</A>

<HR>

<H2>System requirements</H2>
As the term <CITE>IP-based</CITE> indicates, the server <STRONG>must have a
different IP address for each IP-based virtual host</STRONG>.
This can be achieved by the machine having several physical network connections,
or by use of virtual interfaces which are supported by most modern
operating systems (see system documentation for details, these are
frequently called "ip aliases", and the "ifconfig" command
is most commonly used to set them up).

<H2>How to set up Apache</H2>
There are two ways of configuring apache to support multiple hosts.
Either by running a separate httpd daemon for each hostname, or by running a
single daemon which supports all the virtual hosts.
<P>
Use multiple daemons when:
<UL>
<LI>There are security partitioning issues, such as company1 does not want
    anyone at company2 to be able to read their data except via the web.
    In this case you would need two daemons, each running with different
    <A HREF="../mod/core.html#user">User</A>,
    <A HREF="../mod/core.html#group">Group</A>,
    <A HREF="../mod/core.html#listen">Listen</A>, and
    <A HREF="../mod/core.html#serverroot">ServerRoot</A> settings.
<LI>You can afford the memory and
    <A HREF="../misc/descriptors.html">file descriptor requirements</A> of
    listening to every IP alias on the machine.  It's only possible to
    <A HREF="../mod/core.html#listen">Listen</A>
    to the "wildcard" address, or to specific addresses.  So if you have
    a need to listen to a specific address for whatever reason, then you
    will need to listen to all specific addresses.  (Although one httpd
    could listen to N-1 of the addresses, and another could listen to
    the remaining address.)
</UL>
Use a single daemon when:
<UL>
<LI>Sharing of the httpd configuration between virtual hosts is acceptable.
<LI>The machine services a large number of requests, and so the performance
   loss in running separate daemons may be significant.
</UL>

<H2>Setting up multiple daemons</H2>
Create a separate httpd installation for each virtual host.
For each installation, use the
<A HREF="../mod/core.html#listen">Listen</A> directive in the configuration
file to select which IP address (or virtual host) that daemon services.
e.g.
<PRE>
d85 18
a102 18
</PRE>
It is recommended that you use an IP address instead of a hostname
(see <A HREF="../dns-caveats.html">DNS caveats</A>).

<H2>Setting up a single daemon with virtual hosts</H2>
For this case, a single httpd will service requests for the main server
and all the virtual hosts.
The <A HREF="../mod/core.html#virtualhost">VirtualHost</A> directive in the
 configuration file is used to set the values of
<A HREF="../mod/core.html#serveradmin">ServerAdmin</A>,
<A HREF="../mod/core.html#servername">ServerName</A>,
<A HREF="../mod/core.html#documentroot">DocumentRoot</A>,
<A HREF="../mod/core.html#errorlog">ErrorLog</A> and
<A HREF="../mod/mod_log_config.html#transferlog">TransferLog</A> or
<A HREF="../mod/mod_log_config.html#customlog">CustomLog</A>
configuration directives to different values for each virtual host.
e.g.
<PRE>
d118 28
a145 35
</PRE>

It is recommended that you use an IP address instead of a hostname
(see <A HREF="../dns-caveats.html">DNS caveats</A>).

<P>

Almost <STRONG>any</STRONG> configuration directive can be put in the
VirtualHost directive, with the exception of directives that control
process creation and a few other directives.  To find out if a
directive can be used in the VirtualHost directive, check the
<A HREF="../mod/directive-dict.html#Context">Context</A> using the
<A HREF="../mod/directives.html">directive index</A>.

<P>
<A HREF="../mod/core.html#user">User</A> and
<A HREF="../mod/core.html#group">Group</A> may be used inside a VirtualHost
directive if the <A HREF="../suexec.html">suEXEC wrapper</A> is used.
<P>

<EM>SECURITY:</EM> When specifying where to write log files, be aware
of some security risks which are present if anyone other than the
user that starts Apache has write access to the directory where they
are written.  See the <A HREF="../misc/security_tips.html">security
tips</A> document for details.
</P>

<HR>

<H3 ALIGN="CENTER">
 Apache HTTP Server Version 1.3
</H3>

<A HREF="./"><IMG SRC="../images/index.gif" ALT="Index"></A>
<A HREF="../"><IMG SRC="../images/home.gif" ALT="Home"></A>
d147 2
a148 2
</BODY>
</HTML>
@


1.2
log
@apache 1.3.12 + mod_ssl 2.6.2 merge
@
text
@d117 7
a123 14
Almost <STRONG>any</STRONG> configuration directive can be put
in the VirtualHost directive, with the exception of
<A HREF="../mod/core.html#servertype">ServerType</A>,
<A HREF="../mod/core.html#startservers">StartServers</A>,
<A HREF="../mod/core.html#maxspareservers">MaxSpareServers</A>,
<A HREF="../mod/core.html#minspareservers">MinSpareServers</A>,
<A HREF="../mod/core.html#maxrequestsperchild">MaxRequestsPerChild</A>,
<A HREF="../mod/core.html#bindaddress">BindAddress</A>,
<A HREF="../mod/core.html#listen">Listen</A>,
<A HREF="../mod/core.html#pidfile">PidFile</A>,
<A HREF="../mod/mod_mime.html#typesconfig">TypesConfig</A>,
<A HREF="../mod/core.html#serverroot">ServerRoot</A>,
<A HREF="../mod/core.html#namevirtualhost">NameVirtualHost</A>
and a few other directives.
@


1.1
log
@Initial revision
@
text
@d128 3
a130 2
<A HREF="../mod/core.html#serverroot">ServerRoot</A> and
<A HREF="../mod/core.html#namevirtualhost">NameVirtualHost</A>.
@


1.1.1.1
log
@Apache 1.3.2
@
text
@@


1.1.1.2
log
@import apache 1.3.26 + mod_ssl 2.8.10
@
text
@d1 75
a75 83
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
    "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
  <head>
    <meta name="generator" content="HTML Tidy, see www.w3.org" />

    <title>Apache IP-based Virtual Host Support</title>
  </head>
  <!-- Background white, links blue (unvisited), navy (visited), red (active) -->

  <body bgcolor="#FFFFFF" text="#000000" link="#0000FF"
  vlink="#000080" alink="#FF0000">
        <div align="CENTER">
      <img src="../images/sub.gif" alt="[APACHE DOCUMENTATION]" /> 

      <h3>Apache HTTP Server Version 1.3</h3>
    </div>


    <h1 align="CENTER">Apache IP-based Virtual Host Support</h1>
    <strong>See also:</strong> <a href="name-based.html">Name-based
    Virtual Hosts Support</a> 
    <hr />

    <h2>System requirements</h2>
    As the term <cite>IP-based</cite> indicates, the server
    <strong>must have a different IP address for each IP-based
    virtual host</strong>. This can be achieved by the machine
    having several physical network connections, or by use of
    virtual interfaces which are supported by most modern operating
    systems (see system documentation for details, these are
    frequently called "ip aliases", and the "ifconfig" command is
    most commonly used to set them up). 

    <h2>How to set up Apache</h2>
    There are two ways of configuring apache to support multiple
    hosts. Either by running a separate httpd daemon for each
    hostname, or by running a single daemon which supports all the
    virtual hosts. 

    <p>Use multiple daemons when:</p>

    <ul>
      <li>There are security partitioning issues, such as company1
      does not want anyone at company2 to be able to read their
      data except via the web. In this case you would need two
      daemons, each running with different <a
      href="../mod/core.html#user">User</a>, <a
      href="../mod/core.html#group">Group</a>, <a
      href="../mod/core.html#listen">Listen</a>, and <a
      href="../mod/core.html#serverroot">ServerRoot</a>
      settings.</li>

      <li>You can afford the memory and <a
      href="../misc/descriptors.html">file descriptor
      requirements</a> of listening to every IP alias on the
      machine. It's only possible to <a
      href="../mod/core.html#listen">Listen</a> to the "wildcard"
      address, or to specific addresses. So if you have a need to
      listen to a specific address for whatever reason, then you
      will need to listen to all specific addresses. (Although one
      httpd could listen to N-1 of the addresses, and another could
      listen to the remaining address.)</li>
    </ul>
    Use a single daemon when: 

    <ul>
      <li>Sharing of the httpd configuration between virtual hosts
      is acceptable.</li>

      <li>The machine services a large number of requests, and so
      the performance loss in running separate daemons may be
      significant.</li>
    </ul>

    <h2>Setting up multiple daemons</h2>
    Create a separate httpd installation for each virtual host. For
    each installation, use the <a
    href="../mod/core.html#listen">Listen</a> directive in the
    configuration file to select which IP address (or virtual host)
    that daemon services. e.g. 
<pre>
d77 18
a94 18
</pre>
    It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>). 

    <h2>Setting up a single daemon with virtual hosts</h2>
    For this case, a single httpd will service requests for the
    main server and all the virtual hosts. The <a
    href="../mod/core.html#virtualhost">VirtualHost</a> directive
    in the configuration file is used to set the values of <a
    href="../mod/core.html#serveradmin">ServerAdmin</a>, <a
    href="../mod/core.html#servername">ServerName</a>, <a
    href="../mod/core.html#documentroot">DocumentRoot</a>, <a
    href="../mod/core.html#errorlog">ErrorLog</a> and <a
    href="../mod/mod_log_config.html#transferlog">TransferLog</a>
    or <a href="../mod/mod_log_config.html#customlog">CustomLog</a>
    configuration directives to different values for each virtual
    host. e.g. 
<pre>
d110 41
a150 28
</pre>
    It is recommended that you use an IP address instead of a
    hostname (see <a href="../dns-caveats.html">DNS caveats</a>). 

    <p>Almost <strong>any</strong> configuration directive can be
    put in the VirtualHost directive, with the exception of
    directives that control process creation and a few other
    directives. To find out if a directive can be used in the
    VirtualHost directive, check the <a
    href="../mod/directive-dict.html#Context">Context</a> using the
    <a href="../mod/directives.html">directive index</a>.</p>

    <p><a href="../mod/core.html#user">User</a> and <a
    href="../mod/core.html#group">Group</a> may be used inside a
    VirtualHost directive if the <a href="../suexec.html">suEXEC
    wrapper</a> is used.</p>

    <p><em>SECURITY:</em> When specifying where to write log files,
    be aware of some security risks which are present if anyone
    other than the user that starts Apache has write access to the
    directory where they are written. See the <a
    href="../misc/security_tips.html">security tips</a> document
    for details.</p>
        <hr />

    <h3 align="CENTER">Apache HTTP Server Version 1.3</h3>
    <a href="./"><img src="../images/index.gif" alt="Index" /></a>
    <a href="../"><img src="../images/home.gif" alt="Home" /></a>
d152 2
a153 2
  </body>
</html>
@

