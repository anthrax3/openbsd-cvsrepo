head	1.4;
access;
symbols
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_2_4:1.1.1.1.0.4
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.2
	OPENBSD_2_3_BASE:1.1.1.1
	apache:1.1.1.1
	apache_1_2_6:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2004.02.03.10.47.20;	author henning;	state dead;
branches;
next	1.3;

1.3
date	2003.08.21.13.11.41;	author henning;	state Exp;
branches;
next	1.2;

1.2
date	99.03.01.02.03.22;	author beck;	state dead;
branches;
next	1.1;

1.1
date	98.03.25.07.08.52;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.03.25.07.08.52;	author beck;	state Exp;
branches;
next	;


desc
@@


1.4
log
@somehow cvs revived this long dead directory, but fgs@@ noticed
@
text
@/*

Simple program to rotate Apache logs without having to kill the server.

Contributed by Ben Laurie <ben@@algroup.co.uk>

12 Mar 1996

*/

#define BUFSIZE		65536
#define MAX_PATH	1024

#include <stdio.h>
#include <stdlib.h>
#include <time.h>
#include <errno.h>
#include <fcntl.h>
#include <unistd.h>

void main(int argc,char **argv)
    {
    char buf[BUFSIZE],buf2[MAX_PATH];
    time_t tLogEnd;
    time_t tRotation;
    int nLogFD=-1;
    int nRead;
    char *szLogRoot;

    if(argc != 3)
	{
	fprintf(stderr,"%s <logfile> <rotation time in seconds>\n\n",argv[0]);
#ifdef __EMX__
	fprintf(stderr,"Add this:\n\nTransferLog \"|%s.exe /some/where 86400\"\n\n",argv[0]);
#else
       	fprintf(stderr,"Add this:\n\nTransferLog \"|%s /some/where 86400\"\n\n",argv[0]);
#endif
	fprintf(stderr,"to httpd.conf. The generated name will be /some/where.nnnn where nnnn is the\n");
	fprintf(stderr,"system time at which the log nominally starts (N.B. this time will always be a\n");
	fprintf(stderr,"multiple of the rotation time, so you can synchronize cron scripts with it).\n");
	fprintf(stderr,"At the end of each rotation time a new log is started.\n");
	exit(1);
	}

    szLogRoot=argv[1];
    tRotation=atoi(argv[2]);
    if(tRotation <= 0)
	{
	fprintf(stderr,"Rotation time must be > 0\n");
	exit(6);
	}

    for( ; ; )
	{
	nRead=read(0,buf,sizeof buf);
	if(nRead == 0)
	    exit(3);
	if(nRead < 0)
	    if(errno != EINTR)
		exit(4);
	if(nLogFD >= 0 && (time(NULL) >= tLogEnd || nRead < 0))
	    {
	    close(nLogFD);
	    nLogFD=-1;
	    }
	if(nLogFD < 0)
	    {
	    time_t tLogStart=(time(NULL)/tRotation)*tRotation;
	    sprintf(buf2,"%s.%010d",szLogRoot,(int)tLogStart);
	    tLogEnd=tLogStart+tRotation;
	    nLogFD=open(buf2,O_WRONLY|O_CREAT|O_APPEND,0666);
	    if(nLogFD < 0)
		{
		perror(buf2);
		exit(2);
		}
	    }
	if(write(nLogFD,buf,nRead) != nRead)
	    {
	    perror(buf2);
	    exit(5);
	    }
	}
    }
@


1.3
log
@merge
@
text
@@


1.2
log
@Not present in 1.3.4
@
text
@@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Initial import from apache 1.2.6
@
text
@@
