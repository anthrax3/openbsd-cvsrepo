head	1.8;
access;
symbols
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2003.07.23.19.44.28;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2002.06.01.20.27.15;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.29.19.01.48;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2000.02.01.03.24.14;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.12.05.06.25.41;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.05.23.17.19.23;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	97.08.30.07.55.17;	author matthieu;	state Exp;
branches;
next	1.1;

1.1
date	97.03.11.03.23.18;	author kstailey;	state Exp;
branches;
next	;


desc
@@


1.8
log
@bye bye
@
text
@static char *rcs_id = "$Id: use_adf.c,v 1.7 2002/06/01 20:27:15 deraadt Exp $";
/*
 * Copyright (c) 1995 Kenneth Stailey
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the NetBSD Project
 *	by Kenneth Stailey
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,
 * BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED
 * AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * use_adf.c: make the scanner use the ADF as the next paper source
 */

#include <sys/param.h>
#if defined(__NetBSD__) || defined(__OpenBSD__)
# include <sys/ioctl.h>
#endif
#include <sys/scanio.h>

#include <errno.h>
#include <stdio.h>
#include <stdlib.h>
#include <fcntl.h>


void
usage(char *prog_name)
{
  fprintf(stderr, "usage: %s [-l <logical name>]\n", prog_name);
  exit(1);
}

main(int argc, char *argv[])
{
  int sfd;
  char *logical_name = "scan0";
  char device[MAXPATHLEN];

  int c;
  extern int optind;
  extern char *optarg;


  while ((c = getopt(argc, argv, "l:")) != -1) {
    switch (c) {
    case 'l':
      logical_name = optarg;
      break;

    case '?':
      usage(argv[0]);
      break;
    }
  }

  if (snprintf(device, sizeof device, "/dev/%s", logical_name) >=
    sizeof device) {
    fprintf(stderr, "%s: name to long", device);
    exit(1);
  }
	
  snprintf(device, sizeof device, "/dev/%s", logical_name);

  if ((sfd = open(device, O_RDONLY)) < 0) {
    fprintf(stderr, "open of %s failed: ", device);
    perror("");
    exit(errno);
  }

  if (ioctl(sfd, SCIOC_USE_ADF, NULL) < 0) {
    int sv_errno = errno;

    switch (errno) {
    case ENOTTY:
      fprintf(stderr, "use_adf: scanner does not support ADF\n");
      break;
    case EIO:
      fprintf(stderr, "use_adf: ADF probably empty or jammed\n");
      break;
    default:
      perror("use_adf: ioctl SCAN_USE_ADF failed");
    }
    exit(sv_errno);
  }

  close(sfd);
  exit(0);
}
@


1.7
log
@exit 1 not -1
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.6 2002/05/29 19:01:48 deraadt Exp $";
@


1.6
log
@snprintf, strlcpy, strlcat
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.5 2000/02/01 03:24:14 deraadt Exp $";
d54 1
a54 1
  exit(-1);
@


1.5
log
@no need to extern int errno if errno.h is included
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.4 1999/12/05 06:25:41 deraadt Exp $";
d86 1
a86 2
  strcpy(device, "/dev/");
  strcat(device, logical_name);
@


1.4
log
@oflow
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.3 1999/05/23 17:19:23 aaron Exp $";
a66 1
  extern int errno;
@


1.3
log
@getopt(3) returns -1, not EOF
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.2 1997/08/30 07:55:17 matthieu Exp $";
d38 1
a38 1
#include <sys/types.h>
d61 1
a61 1
  char device[255];
d81 6
@


1.2
log
@ifdef __NetBSD__ -> if defined(__NetBSD__) || defined(__OpenBSD__)
to compile on OpenBSD
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.1 1997/03/11 03:23:18 kstailey Exp $";
d69 1
a69 1
  while ((c = getopt(argc, argv, "l:")) != EOF) {
@


1.1
log
@the PINT scanner utilities for now
@
text
@d1 1
a1 1
static char *rcs_id = "$Id: use_adf.c,v 1.3 1996/01/14 01:29:57 ken Exp $";
d39 1
a39 1
#ifdef __NetBSD__
@
