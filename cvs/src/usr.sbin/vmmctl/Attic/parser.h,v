head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2015.12.03.21.45.45;	author reyk;	state dead;
branches;
next	1.4;
commitid	MPLOtGQkSv2xIotz;

1.4
date	2015.12.01.20.52.44;	author halex;	state Exp;
branches;
next	1.3;
commitid	0F6KK0vAg9wCOKZm;

1.3
date	2015.11.27.09.11.39;	author reyk;	state Exp;
branches;
next	1.2;
commitid	YD6OAZRyqVv6x6Jz;

1.2
date	2015.11.26.08.26.48;	author reyk;	state Exp;
branches;
next	1.1;
commitid	GRMyPzYJL6q2Nvq3;

1.1
date	2015.11.22.20.55.18;	author reyk;	state Exp;
branches;
next	;
commitid	Ce3XWaK9k2YVSX7c;


desc
@@


1.5
log
@Replace vmmctl with vmctl.  Also remove parse.y from the "new" vmctl.

As discussed with mlarkin@@ and deraadt@@
@
text
@/*	$OpenBSD: parser.h,v 1.4 2015/12/01 20:52:44 halex Exp $	*/

/*
 * Copyright (c) 2015 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/queue.h>
#include <imsg.h>

#ifndef VMMCTL_PARSER_H
#define VMMCTL_PARSER_H

#define VMM_CONF	"/etc/vmm.conf"

enum actions {
	NONE,
	CMD_CREATE,
	CMD_LOAD,
	CMD_START,
	CMD_STATUS,
	CMD_STOP,
};

struct ctl_command;

struct parse_result {
	enum actions		 action;
	uint32_t		 id;
	char			*name;
	char			*path;
	long long		 size;
	int			 nifs;
	size_t			 ndisks;
	char			**disks;
	int			 disable;
	struct ctl_command	*ctl;
};

struct ctl_command {
	const char		*name;
	enum actions		 action;
	int			(*main)(struct parse_result *, int, char *[]);
	const char		*usage;
	int			 has_pledge;
};

struct imsgbuf	*ibuf;

/* main.c */
int	 vmmaction(struct parse_result *);
int	 parse_ifs(struct parse_result *, char *, int);
int	 parse_size(struct parse_result *, char *, long long);
int	 parse_disk(struct parse_result *, char *);
int	 parse_vmid(struct parse_result *, char *, uint32_t);
void	 parse_free(struct parse_result *);
int	 parse(int, char *[]);

/* parse.y */
int	 parse_config(const char *);
int	 cmdline_symset(char *);

/* vmmctl.c */
int	 create_imagefile(const char *, long);
int	 start_vm(const char *, int, int, int, char **, char *);
int	 start_vm_complete(struct imsg *, int *);
void	 terminate_vm(uint32_t);
int	 terminate_vm_complete(struct imsg *, int *);
void	 get_info_vm(uint32_t);
int	 add_info(struct imsg *, int *);
void	 print_vm_info(struct vm_info_result *, size_t);

#endif /* VMMCTL_PARSER_H */
@


1.4
log
@Fix -i option handling.

ok reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.3 2015/11/27 09:11:39 reyk Exp $	*/
@


1.3
log
@Change the command line syntax to a "command + getopts" style, eg.
  vmmctl start "myvm" -m 512M -i 1 -d disk.img -k /bsd

Networking people like me are used to the human-readable CLI-style
syntax that we have in some of our OpenBSD *ctl tools, including
bgpctl, other routing daemons, or relayctl.  But this didn't work for
vmmctl, so change it to something a bit less human-readable but more
BSD- and POSIX-ish.  After all, the command line is only intended for
simple configuration, more details will go into the configuration
file, so we can avoid getopt flag conflicts or scary things like the
getsubopt(3) style.

OK krw@@ jasper@@, with input from kettenis@@ jmc@@ deraadt@@ mlarkin@@ etc.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.2 2015/11/26 08:26:48 reyk Exp $	*/
d44 1
a44 1
	size_t			 nifs;
@


1.2
log
@Automatically start vmm(4) when the first VM is created and after the
last VM is terminated.  This allows to remove the explicit "vmm
enable" / "vmm disable" (VMM_IOC_START / VMM_IOC_STOP) ioctls.  You'll
have to update kernel and userland for this change, as the kernel ABI
changes.

OK mpi@@ mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.1 2015/11/22 20:55:18 reyk Exp $	*/
d30 1
d32 2
a33 3
	CMD_TERMINATE,
	CMD_INFO,
	CMD_LOAD
d36 2
d39 18
a56 9
	enum actions	 action;
	uint32_t	 id;
	char		*name;
	char		*path;
	size_t		 size;
	size_t		 nifs;
	size_t		 ndisks;
	char		**disks;
	int		 disable;
d67 2
a68 4

/* parser.c */
struct parse_result *
	 parse(int, char *[]);
d75 1
a75 1
int	 create_imagefile(char *, long);
@


1.1
log
@Add initial parser to support a vmm.conf(5) configuration file format
for vmm and virtual machines.  Additionally, add a matching vmmctl
command line grammar that replaces (most of the) getopt arguments.
The goal is to provide a sane way to configure vmm(4) and vmd(8).
"There is still a lot to be done, and fixed" in this as well.

OK mlarkin@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a29 2
	CMD_ENABLE,
	CMD_DISABLE,
a68 4
void	 enable_vmm(void);
int	 enable_vmm_complete(struct imsg *, int *);
void	 disable_vmm(void);
int	 disable_vmm_complete(struct imsg *, int *);
@

