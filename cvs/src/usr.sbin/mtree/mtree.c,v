head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.10
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.22.0.6
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.16
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.14
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.12
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.10
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.8
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.4
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.18.0.20
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.18
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.18.0.16
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.14
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.12
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.10
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.8
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.6
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.4
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.18.0.2
	OPENBSD_3_4_BASE:1.18
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_9:1.11.0.6
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.10.0.4
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.8.0.2
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2015.12.20.19.53.24;	author benno;	state Exp;
branches;
next	1.23;
commitid	9tXQgLXMPDGHauxS;

1.23
date	2015.12.19.19.58.38;	author tb;	state Exp;
branches;
next	1.22;
commitid	iLvzzzPJoIBvv06y;

1.22
date	2015.01.16.06.40.18;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	Uu5nFG3wCl0LACBb;

1.21
date	2013.11.27.13.32.02;	author okan;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.27.23.59.53;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2008.05.17.23.31.52;	author sobrado;	state Exp;
branches;
next	1.18;

1.18
date	2003.07.26.17.34.18;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.26.19.47.09;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.16.17.51.21;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.23.36.54;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.02.16.21.28.05;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.01.16.48.19;	author jakob;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.10.02.37.14;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.20.00.20.14;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.01.24.10.26.54;	author rohee;	state Exp;
branches;
next	1.9;

1.9
date	98.12.28.21.22.46;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.08.20.20.11.41;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	97.07.18.05.49.03;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.07.18.05.46.13;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.01.15.23.44.03;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.03.21.40.50;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.10.08.26.09;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.08.01.13.41;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.49;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.49;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@need to include err.h for err().
ok deraadt@@
@
text
@/*	$OpenBSD: mtree.c,v 1.23 2015/12/19 19:58:38 tb Exp $	*/
/*	$NetBSD: mtree.c,v 1.7 1996/09/05 23:29:22 thorpej Exp $	*/

/*-
 * Copyright (c) 1989, 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/stat.h>
#include <err.h>
#include <errno.h>
#include <unistd.h>
#include <stdio.h>
#include <limits.h>
#include <fts.h>
#include "mtree.h"
#include "extern.h"

extern u_int32_t crc_total;

int ftsoptions = FTS_PHYSICAL;
int cflag, dflag, eflag, iflag, lflag, nflag, qflag, rflag, sflag, tflag,
    uflag, Uflag;
u_int keys;
char fullpath[PATH_MAX];

static void usage(void);

int
main(int argc, char *argv[])
{
	extern int optind;
	extern char *optarg;
	int ch;
	char *dir, *p;
	int status;

	dir = NULL;
	keys = KEYDEFAULT;
	while ((ch = getopt(argc, argv, "cdef:iK:k:lnp:qrs:tUux")) != -1)
		switch(ch) {
		case 'c':
			cflag = 1;
			break;
		case 'd':
			dflag = 1;
			break;
		case 'e':
			eflag = 1;
			break;
		case 'f':
			if (!(freopen(optarg, "r", stdin)))
				error("%s: %s", optarg, strerror(errno));
			break;
		case 'i':
			iflag = 1;
			break;
		case 'K':
			while ((p = strsep(&optarg, " \t,")) != NULL)
				if (*p != '\0')
					keys |= parsekey(p, NULL);
			break;
		case 'k':
			keys = F_TYPE;
			while ((p = strsep(&optarg, " \t,")) != NULL)
				if (*p != '\0')
					keys |= parsekey(p, NULL);
			break;
		case 'l':
			lflag = 1;
			break;
		case 'n':
			nflag = 1;
			break;
		case 'p':
			dir = optarg;
			break;
		case 'q':
			qflag = 1;
			break;
		case 'r':
			rflag = 1;
			break;
		case 's':
			sflag = 1;
			crc_total = ~strtol(optarg, &p, 0);
			if (*p)
				error("illegal seed value -- %s", optarg);
			break;
		case 't':
			tflag = 1;
			break;
		case 'U':
			Uflag = 1;
			uflag = 1;
			break;
		case 'u':
			uflag = 1;
			break;
		case 'x':
			ftsoptions |= FTS_XDEV;
			break;
		case '?':
		default:
			usage();
		}
	argc -= optind;
	argv += optind;

	if (argc)
		usage();

	/*
	 * If uflag is set we can't make any pledges because we must be able
	 * to chown and place setugid bits.  Make sure that we're pledged
	 * when -c was specified.
	 */
	if (!uflag || cflag) {
		if (rflag && tflag) {
			if (pledge("stdio rpath cpath getpw fattr", NULL) == -1)
				err(1, "pledge");
		} else if (rflag && !tflag) {
			if (pledge("stdio rpath cpath getpw", NULL) == -1)
				err(1, "pledge");
		} else if (!rflag && tflag) {
			if (pledge("stdio rpath getpw fattr", NULL) == -1)
				err(1, "pledge");
		} else {
			if (pledge("stdio rpath getpw", NULL) == -1)
				err(1, "pledge");
		}
	}

	if (dir && chdir(dir))
		error("%s: %s", dir, strerror(errno));

	if ((cflag || sflag) && !getcwd(fullpath, sizeof fullpath))
		error("getcwd: %s", strerror(errno));

	if (lflag == 1 && uflag == 1)
		error("-l and -u flags are mutually exclusive");

	if (cflag) {
		cwalk();
		exit(0);
	}
	status = verify();
	if (Uflag && (status == MISMATCHEXIT))
		status = 0;
	exit(status);
}

static void
usage(void)
{
	(void)fprintf(stderr,
	    "usage: mtree [-cdeilnqrtUux] [-f spec] [-K keywords] "
	    "[-k keywords] [-p path]\n"
	    "             [-s seed]\n");
	exit(1);
}
@


1.23
log
@Add pledge(2).  It is not currently possible to pledge -u and -U
because of chown(2) and chmod(2).

If -u and -U aren't specified, the basic pledge is "stdio rpath getpw".
"getpw" is used to resolve uid and gid to names and vice versa.
The -r flag makes use of rmdir(2) and unlink(2), so we need "cpath"
The -t flag uses utimes(2), so we need "fattr"

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.22 2015/01/16 06:40:18 deraadt Exp $	*/
d34 1
@


1.22
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.21 2013/11/27 13:32:02 okan Exp $	*/
d135 21
@


1.21
log
@remove erroneous char cast to switch expression processing getopt(3);
not used in any cases.

ok deraadt@@, guenther@@, millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.20 2009/10/27 23:59:53 deraadt Exp $	*/
a32 1
#include <sys/param.h>
d37 1
d48 1
a48 1
char fullpath[MAXPATHLEN];
@


1.20
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.19 2008/05/17 23:31:52 sobrado Exp $	*/
d64 1
a64 1
		switch((char)ch) {
@


1.19
log
@documentation tweaks.

ok (some time ago) jmc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.18 2003/07/26 17:34:18 millert Exp $	*/
a31 14

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1989, 1990, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)mtree.c	8.1 (Berkeley) 6/6/93";
#else
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.18 2003/07/26 17:34:18 millert Exp $";
#endif
#endif /* not lint */
@


1.18
log
@Add missing "break" in -s case and make usage() explicitly take void.
From Andrey Matveev.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.17 2003/06/26 19:47:09 deraadt Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.17 2003/06/26 19:47:09 deraadt Exp $";
d173 3
a175 1
"usage: mtree [-cdeilnqrtUux] [-f spec] [-K key] [-k key] [-p path] [-s seed]\n");
@


1.17
log
@strict proto cleanups
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.16 2003/06/16 17:51:21 millert Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.16 2003/06/16 17:51:21 millert Exp $";
d126 1
d170 1
a170 1
usage()
@


1.16
log
@Bitwise AND was used where logical AND was intended; from mpech@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.15 2003/06/02 23:36:54 millert Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.15 2003/06/02 23:36:54 millert Exp $";
d67 1
a67 3
main(argc, argv)
	int argc;
	char *argv[];
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.14 2002/02/16 21:28:05 millert Exp $	*/
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.14 2002/02/16 21:28:05 millert Exp $";
d165 1
a165 1
	if (Uflag & (status == MISMATCHEXIT))
@


1.14
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.13 2001/10/01 16:48:19 jakob Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d43 1
a43 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.13 2001/10/01 16:48:19 jakob Exp $";
@


1.13
log
@add -l flag - do loose permissions checks, in which more stringent permissions
will match less stringent ones. ok millert@@, deraadt@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.12 2001/08/10 02:37:14 millert Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.12 2001/08/10 02:37:14 millert Exp $";
d68 1
a68 1
static void usage __P((void));
@


1.12
log
@pass -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.11 2000/01/20 00:20:14 millert Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: mtree.c,v 1.11 2000/01/20 00:20:14 millert Exp $";
d63 2
a64 1
int cflag, dflag, eflag, iflag, nflag, qflag, rflag, sflag, tflag, uflag, Uflag;
d83 1
a83 1
	while ((ch = getopt(argc, argv, "cdef:iK:k:np:qrs:tUux")) != -1)
d112 3
d161 3
d178 1
a178 1
"usage: mtree [-cdeinqrtUux] [-f spec] [-K key] [-k key] [-p path] [-s seed]\n");
@


1.11
log
@getcwd() does not stuff an error string in buf on error, call strerror()
instead.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.10 1999/01/24 10:26:54 rohee Exp $	*/
d38 1
a38 1
static char copyright[] =
d45 1
a45 1
static char sccsid[] = "@@(#)mtree.c	8.1 (Berkeley) 6/6/93";
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.10 1999/01/24 10:26:54 rohee Exp $";
@


1.10
log
@-q was not in usage()
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.9 1998/12/28 21:22:46 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.9 1998/12/28 21:22:46 deraadt Exp $";
d155 1
a155 1
		error("%s", fullpath);
@


1.9
log
@use getcwd(3)
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.8 1998/08/20 20:11:41 marc Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.8 1998/08/20 20:11:41 marc Exp $";
d171 1
a171 1
"usage: mtree [-cdeinrtUux] [-f spec] [-K key] [-k key] [-p path] [-s seed]\n");
@


1.8
log
@add -q flag to silent messages of the type:
missing: some-file-name (not created: File exists)
which occurred of some-file-name was a path that contained a symbolic link
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.7 1997/07/18 05:49:03 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.7 1997/07/18 05:49:03 millert Exp $";
d154 1
a154 1
	if ((cflag || sflag) && !getwd(fullpath))
@


1.7
log
@err() -> error() so we don't conflict with err(3).
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.6 1997/07/18 05:46:13 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.6 1997/07/18 05:46:13 millert Exp $";
d63 1
a63 1
int cflag, dflag, eflag, iflag, nflag, rflag, sflag, tflag, uflag, Uflag;
d82 1
a82 1
	while ((ch = getopt(argc, argv, "cdef:iK:k:np:rs:tUux")) != -1)
d116 3
@


1.6
log
@Add rmd160 support.  Sheesh, you'd think this was tripwire.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.5 1997/01/15 23:44:03 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.5 1997/01/15 23:44:03 millert Exp $";
d95 1
a95 1
				err("%s: %s", optarg, strerror(errno));
d124 1
a124 1
				err("illegal seed value -- %s", optarg);
d149 1
a149 1
		err("%s: %s", dir, strerror(errno));
d152 1
a152 1
		err("%s", fullpath);
@


1.5
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.4 1997/01/03 21:40:50 millert Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.4 1997/01/03 21:40:50 millert Exp $";
d64 1
a64 1
u_short keys;
@


1.4
log
@From NetBSD:
    Add a `-t' (touch) option to update time stamps.
    Only record size for regular files.
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.3 1996/12/10 08:26:09 deraadt Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.3 1996/12/10 08:26:09 deraadt Exp $";
d82 1
a82 1
	while ((ch = getopt(argc, argv, "cdef:iK:k:np:rs:tUux")) != EOF)
@


1.3
log
@merge freebsd mtree diffs, plus -Wall cleanup
@
text
@d1 2
a2 2
/*	$OpenBSD: mtree.c,v 1.2 1996/12/08 01:13:41 niklas Exp $	*/
/*	$NetBSD: mtree.c,v 1.5 1995/03/07 21:12:10 cgd Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.2 1996/12/08 01:13:41 niklas Exp $";
d63 1
a63 1
int cflag, dflag, eflag, iflag, nflag, rflag, sflag, uflag, Uflag;
d82 1
a82 1
	while ((ch = getopt(argc, argv, "cdef:iK:k:np:rs:Uux")) != EOF)
d125 3
d168 1
a168 1
"usage: mtree [-cdeinrUux] [-f spec] [-K key] [-k key] [-p path] [-s seed]\n");
@


1.2
log
@64-bit clean + RCS tags
@
text
@d1 1
a1 1
/*	$OpenBSD: mtree.c,v 1.5 1995/03/07 21:12:10 cgd Exp $	*/
d47 1
a47 1
static char rcsid[] = "$OpenBSD: mtree.c,v 1.5 1995/03/07 21:12:10 cgd Exp $";
d63 1
a63 1
int cflag, dflag, eflag, rflag, sflag, uflag;
d78 1
d82 1
a82 1
	while ((ch = getopt(argc, argv, "cdef:K:k:p:rs:ux")) != EOF)
d97 3
d111 3
d125 4
d155 4
a158 1
	exit(verify());
d165 1
a165 1
"usage: mtree [-cderux] [-f spec] [-K key] [-k key] [-p path] [-s seed]\n");
@


1.1
log
@Initial revision
@
text
@d1 1
d47 1
a47 1
static char rcsid[] = "$NetBSD: mtree.c,v 1.5 1995/03/07 21:12:10 cgd Exp $";
d60 1
a60 1
extern int crc_total;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
