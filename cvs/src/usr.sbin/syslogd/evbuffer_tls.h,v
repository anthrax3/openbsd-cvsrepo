head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.10
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.8
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.5
date	2015.10.09.16.58.25;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	5A0tNEXnHGGgWpGX;

1.4
date	2015.09.10.18.32.06;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	LgKbuvsrCAHwACYR;

1.3
date	2015.07.18.22.33.46;	author bluhm;	state Exp;
branches;
next	1.2;
commitid	hfkOPlRIC2r9WCxe;

1.2
date	2015.02.20.00.56.32;	author bluhm;	state Exp;
branches;
next	1.1;
commitid	vP1CrASY5DRsLXb7;

1.1
date	2015.01.18.19.37.59;	author bluhm;	state Exp;
branches;
next	;
commitid	cVnX55hA2Of6ako2;


desc
@@


1.5
log
@If syslogd is started with -S, it accepts TLS connections to receive
encrypted messages.  The server certificates are taken from /etc/ssl
like relayd does.
OK benno@@ beck@@ deraadt@@
@
text
@/*	$OpenBSD: evbuffer_tls.h,v 1.4 2015/09/10 18:32:06 bluhm Exp $ */

/*
 * Copyright (c) 2014-2015 Alexander Bluhm <bluhm@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _EVBUFFER_TLS_H_
#define _EVBUFFER_TLS_H_

#define EVBUFFER_HANDSHAKE	0x04

struct bufferevent;
struct tls;

struct buffertls {
	struct bufferevent	*bt_bufev;
	struct tls		*bt_ctx;
};

void	buffertls_set(struct buffertls *, struct bufferevent *, struct tls *,
    int);
void	buffertls_accept(struct buffertls *, int);
void	buffertls_connect(struct buffertls *, int);

#endif /* _EVBUFFER_TLS_H_ */
@


1.4
log
@Convert syslogd TLS connect to use handshake callback.  The bt_hostname
can go away as the callback does not need the hostname anymore.
Call tls_handshake() until successful.  Remove the function
tls_socket() as it has a bad prefix.  Just call tls_client(),
tls_configure() and tls_connect_socket() after the TCP socket has
been created.  There is no need to wait until TCP connect has
finished.
OK beck@@ jsing@@
@
text
@d1 1
a1 1
/*	$OpenBSD: evbuffer_tls.h,v 1.3 2015/07/18 22:33:46 bluhm Exp $ */
d34 1
@


1.3
log
@As libtls previously did not set SSL_MODE_ACCEPT_MOVING_WRITE_BUFFER,
syslogd had to drop messages after tls_write() returned
TLS_{READ,WRITE}_AGAIN.  Now after libtls has been fixed, remove
the workaround.  Messages are stored in the libevent write buffer
as we can safely do a realloc(3) now.
OK reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD: evbuffer_tls.h,v 1.2 2015/02/20 00:56:32 bluhm Exp $ */
d22 1
a22 1
#define EVBUFFER_CONNECT	0x80
a29 1
	const char		*bt_hostname;
d34 1
a34 1
void	buffertls_connect(struct buffertls *, int, const char *);
@


1.2
log
@When syslogd is writing over TLS, the error "SSL3_WRITE_PENDING:bad
write retry" may occur.  Unfortunately libtls tls_write() has
inherited the strange semantics regarding partial writes and buffer
movement from SSL_write().  This will be investigated after unlock,
the goal is to have the behavior of write(2) in libtls.

For now add a workaround in syslogd.  If tls_write() indicates that
it needs a read or write again, stop modifying the output buffer.
Instead drop and count the syslog messages.  After writing over TLS
was successful, continue to queue the messages.  This solution has
minimum inpact and will be improved after 5.7 release.

discussed with tedu@@ reyk@@ jsing@@;  OK tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: evbuffer_tls.h,v 1.1 2015/01/18 19:37:59 bluhm Exp $ */
a30 2
	int			 bt_flags;
#define BT_WRITE_AGAIN		0x1
@


1.1
log
@Implement sending syslog messages over TLS.
OK reyk@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d31 2
@

