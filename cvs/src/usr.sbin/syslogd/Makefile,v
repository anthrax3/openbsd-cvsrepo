head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.8
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.4
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.6
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.5.0.46
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.44
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.40
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.38
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.36
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.34
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.8
date	2017.03.16.23.55.19;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	mPxHeEPvGtNx5V0a;

1.7
date	2015.01.18.19.37.59;	author bluhm;	state Exp;
branches;
next	1.6;
commitid	cVnX55hA2Of6ako2;

1.6
date	2014.10.05.18.14.01;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	F9a5EGI6b8V6fn1r;

1.5
date	2004.01.04.08.28.49;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2003.07.31.18.20.07;	author avsm;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.11.44.29;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.05.14.00.20;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.22;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.22;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Start to replace the home grown syslogd(8) internal debug and logging
functions with a more common log.c implementation.  Of course
openlog(3) cannot be used, so adapt the log.[ch] initially copied
from ospfd(8) to syslogd's special needs.  As the messages are
limited to ERRBUFSIZE anyway, malloc(3) in the error logging code
can be avoided.  Changing all log calls to the new API will be done
in a separate step.
OK millert@@
@
text
@#	$OpenBSD: Makefile,v 1.7 2015/01/18 19:37:59 bluhm Exp $

PROG=	syslogd
SRCS=	evbuffer_tls.c log.c privsep.c privsep_fdpass.c	ringbuf.c syslogd.c \
	ttymsg.c
MAN=	syslogd.8 syslog.conf.5
LDADD=	-levent -ltls -lssl -lcrypto
DPADD=	${LIBEVENT} ${LIBTLS} ${LIBSSL} ${LIBCRYPTO}

.include <bsd.prog.mk>
@


1.7
log
@Implement sending syslog messages over TLS.
OK reyk@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2014/10/05 18:14:01 bluhm Exp $
d4 2
a5 1
SRCS=	syslogd.c ttymsg.c privsep.c privsep_fdpass.c ringbuf.c evbuffer_tls.c
@


1.6
log
@Switch syslogd from using poll(2) to libevent.
test and OK nicm@@; OK henning@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2004/01/04 08:28:49 djm Exp $
d4 1
a4 1
SRCS=	syslogd.c ttymsg.c privsep.c privsep_fdpass.c ringbuf.c
d6 2
a7 2
LDADD=	-levent
DPADD=	${LIBEVENT}
@


1.5
log
@Buffered logging for syslogd. Logs may be stored in memory buffers and
extracted using a small client. Useful for diskless systems.
much feedback from deraadt@@, canacar@@, jmc@@, jakob@@ ; ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2003/07/31 18:20:07 avsm Exp $
d6 2
@


1.4
log
@Privilege separated syslog daemon.  The child listening to log requests drops
to user _syslogd and chroots itself, while the privileged parent grants it
access to open logfiles and other calls it needs.

The only difference from existing behaviour is that if syslog.conf changes
and syslogd receives a HUP, it will re-exec itself and have two new PIDs.
A HUP with an unchanged config will make syslogd reopen logfiles as before.

Lots of help and code from deraadt@@ , and advice from millert@@

Various versions tested by todd, cloder, mpech, markus, tdeval and others
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1997/09/21 11:44:29 deraadt Exp $
d4 1
a4 1
SRCS=	syslogd.c ttymsg.c privsep.c privsep_fdpass.c
@


1.3
log
@$OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 2
SRCS=	syslogd.c ttymsg.c
.PATH:	${.CURDIR}/../../usr.bin/wall
@


1.2
log
@sync with 4.4lite2 version, as well as netbsd changes merged by perry.
retain openbsd changes too.
@
text
@d1 1
a1 2
#	from: @@(#)Makefile	8.1 (Berkeley) 6/6/93
#	$NetBSD: Makefile,v 1.6 1996/01/02 17:30:27 perry Exp $
@


1.1
log
@Initial revision
@
text
@d1 2
a2 2
#	from: @@(#)Makefile	5.7 (Berkeley) 9/30/90
#	$Id: Makefile,v 1.5 1994/12/22 11:43:28 cgd Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
