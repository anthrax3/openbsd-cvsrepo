head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.22
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.18
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.14
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.16
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.8
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.12
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.10
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2012.07.16.18.05.36;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.08.13.15.11;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2010.09.24.14.50.30;	author yasuoka;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.02.21.20.57;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.01.03.38.17;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.6
log
@add IP_IPSECFLOWINFO option to sendmsg() and recvmsg(), so npppd(4)
can use this to select the IPsec tunnel for sending L2TP packets.
this fixes Windows (always binding to 1701) and Android clients
(negotiating wildcard flows); feedback mpf@@ and yasuoka@@;
ok henning@@ and yasuoka@@; ok jmc@@ for the manpage
@
text
@/*	$OpenBSD: l2tp_local.h,v 1.5 2012/05/08 13:15:11 yasuoka Exp $	*/
/*-
 * Copyright (c) 2009 Internet Initiative Japan Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef	L2TP_LOCAL_H
#define	L2TP_LOCAL_H 1
/* $Id: l2tp_local.h,v 1.5 2012/05/08 13:15:11 yasuoka Exp $ */

#ifndef	GETSHORT
#define	GETSHORT(s, cp) {	\
    s = *(cp)++ << 8;		\
    s |= *(cp)++;		\
}
#endif

struct l2tp_header {
#if	BYTE_ORDER == LITTLE_ENDIAN
	uint8_t		p:1,
			o:1,
			x2:1,
			s:1,
			x1:2,
			l:1,
			t:1;
	uint8_t		ver:4,
			x3:4;
#else
	uint8_t		t:1,
			l:1,
			x1:2,
			s:1,
			x2:1,
			o:1,
			p:1;
	uint8_t		x3:4,
			ver:4;
#endif
	uint16_t	length;
	uint16_t	tunnel_id;
	uint16_t	session_id;
	uint16_t	ns;
	uint16_t	nr;
} __attribute__((__packed__));

#ifndef	countof
#define	countof(x)	(sizeof((x)) / sizeof((x)[0]))
#endif

#define	LISTENER_SOCK(ctrl)	\
	((l2tpd_listener *)slist_get(&(ctrl)->l2tpd->listener, \
	    (ctrl)->listener_index))->sock
#ifndef SIN
#define SIN(ss)	((struct sockaddr_in *)(ss))
#endif
#define SIN6(ss)	((struct sockaddr_in6 *)(ss))

#define	L2TP_SESSION_ID_MASK		0x00007fff
#define	L2TP_SESSION_ID_SHUFFLE_MARK	0x10000000

#ifndef	L2TP_NCALL 
#define	L2TP_NCALL 		10000
#endif

#if L2TP_NCALL > 0xffff
#error L2TP_NCALL must be less than 65536
#endif

#ifndef USE_LIBSOCKUTIL
struct in_ipsec_sa_cookie	{
	u_int32_t	ipsecflow;
};
#endif

#endif
@


1.5
log
@Fix comments and styles.  Delete unused variables and labels.
No binary changes.

ok mcbride henning
@
text
@d1 1
a1 1
/*	$OpenBSD: l2tp_local.h,v 1.4 2010/09/24 14:50:30 yasuoka Exp $	*/
d29 1
a29 1
/* $Id: l2tp_local.h,v 1.4 2010/09/24 14:50:30 yasuoka Exp $ */
d74 1
d76 1
d88 6
@


1.4
log
@Add support pipex for L2TP call and L2TP on IPv6.
- pipex requires unique session-id in protocol, so session-id
  generation algorithm has been changed.
- change to fit the new PIPEX ioctl.
ok dlg@@
@
text
@d1 1
a1 1
/* $OpenBSD: l2tp_local.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $	*/
d29 1
a29 1
/* $Id: l2tp_local.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $ */
@


1.3
log
@add $OpenBSD$ and remove trailing space.  no functional change.
@
text
@d1 1
a1 1
/* $OpenBSD: l2tp_local.h,v 1.2 2010/07/01 03:38:17 yasuoka Exp $	*/
d29 1
a29 1
/* $Id: l2tp_local.h,v 1.2 2010/07/01 03:38:17 yasuoka Exp $ */
d75 12
@


1.2
log
@Translate Japanese comments or labels into English.  Translation was
done by IIJ people (MATSUI Yoshihiro, SAITOH Masanobu, Tomoyuki Sahara),
yuo@@ and myself.

This diff also includes
 - delete part of useless comments, correct spelling.
 - add man page of npppdctl.

There is no functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD:$	*/
d29 1
a29 1
/* $Id: l2tp_local.h,v 1.1 2010/01/11 04:20:57 yasuoka Exp $ */
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@d1 1
d29 1
a29 1
/* $Id: l2tp_local.h 34825 2008-02-03 11:47:53Z yasuoka $ */
@

