head	1.2;
access;
symbols
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2010.09.23.01.45.10;	author jsg;	state dead;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove support for talking to the zebra routing socket which
was not enabled, we use a kernel routing socket for such things.

ok yasuoka@@ claudio@@
@
text
@#define	ZEBRA_STATUS_INIT0	0
#define	ZEBRA_STATUS_INIT	1
#define	ZEBRA_STATUS_CONNECTING	2
#define	ZEBRA_STATUS_CONNECTED	3
#define	ZEBRA_STATUS_STOPPED	4
#define	ZEBRA_STATUS_DISPOSING	5


#ifdef RT_ZEBRA_DEBUG
#define RT_ZEBRA_DBG(x)	rt_zebra_log x
#define RT_ZEBRA_ASSERT(x)	ASSERT(x)
#else
#define RT_ZEBRA_DBG(x)
#define RT_ZEBRA_ASSERT(x)
#endif

#define GETCHAR(c, cp) { \
	(c) = *(cp)++; \
}
#define PUTCHAR(c, cp) { \
	*(cp)++ = (u_char) (c); \
}

#define GETSHORT(s, cp) { \
	(s) = *(cp)++ << 8; \
	(s) |= *(cp)++; \
}

#define PUTSHORT(s, cp) { \
	*(cp)++ = (u_char) ((s) >> 8); \
	*(cp)++ = (u_char) (s); \
}

#define GETLONG(l, cp) { \
	(l) = *(cp)++ << 8; \
	()l) |= *(cp)++; (l) <<= 8; \
	(l) |= *(cp)++; (l) <<= 8; \
	(l) |= *(cp)++; \
}
#define PUTLONG(l, cp) { \
	*(cp)++ = (u_char) ((l) >> 24); \
	*(cp)++ = (u_char) ((l) >> 16); \
	*(cp)++ = (u_char) ((l) >> 8); \
	*(cp)++ = (u_char) (l); \
}

@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@@

