head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.1.0.20
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.16
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.14
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.12
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.10
	OPENBSD_5_0:1.1.0.8
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.12.17.08.01.55;	author tb;	state Exp;
branches;
next	1.3;
commitid	rxFyYPvjQaKOvR3j;

1.3
date	2015.04.04.18.05.04;	author guenther;	state Exp;
branches;
next	1.2;
commitid	JLMS0l1gREgLc0hW;

1.2
date	2014.03.22.04.30.31;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add missing $OpenBSD$ tags.
@
text
@/*	$OpenBSD$ */
/*-
 * Copyright (c) 2009 Internet Initiative Japan Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef	DEBUG_UTIL_H
#define	DEBUG_UTIL_H 1

#include <stdio.h>	/* for FILE * */
#include "debugmacro.h"

#define	DEBUG_LEVEL_1	( 1 << 24)
#define	DEBUG_LEVEL_2	( 2 << 24)
#define	DEBUG_LEVEL_3	( 3 << 24)
#define	DEBUG_LEVEL_4	( 4 << 24)
#define	DEBUG_LEVEL_5	( 5 << 24)
#define	DEBUG_LEVEL_6	( 6 << 24)
#define	DEBUG_LEVEL_7	( 7 << 24)
#define	DEBUG_LEVEL_8	( 8 << 24)
#define	DEBUG_LEVEL_9	( 9 << 24)
#define	DEBUG_LEVEL_10	(10 << 24)
#define	DEBUG_LEVEL_11	(11 << 24)
#define	DEBUG_LEVEL_12	(12 << 24)
#define	DEBUG_LEVEL_13	(13 << 24)
#define	DEBUG_LEVEL_14	(14 << 24)
#define	DEBUG_LEVEL_15	(15 << 24)

extern int debuglevel;

/* adapted from FreeBSD:/usr/include/sys/cdefs */
#ifndef __printflike
#define __printflike(fmtarg, firstvararg) \
		__attribute__((__format__ (__printf__, fmtarg, firstvararg)))
#endif

#ifdef __cplusplus
extern "C" {
#endif

#include <stdarg.h>

void  debug_set_debugfp (FILE *);
FILE  *debug_get_debugfp (void);
int   vlog_printf (uint32_t, const char *, va_list);
int   log_printf (int, const char *, ...) __printflike(2, 3);
void  show_hd (FILE *, const u_char *, int);
void  debug_use_syslog (int);
void  debug_set_syslog_level_adjust (int);
int   debug_get_syslog_level_adjust (void);
void  debug_set_no_debuglog (int);

#ifdef __cplusplus
}
#endif


#endif
@


1.3
log
@gcc 2.x is dead

ok millert@@
@
text
@d1 1
@


1.2
log
@Reimplement control part of npppd(8) with imsg.  Also add "monitor"
command for npppctl(8) to monitor PPP session start/stop events.
@
text
@a51 3
#if __GNUC__ < 2 || __GNUC__ == 2 && __GNUC_MINOR__ < 7
#define __printflike(fmtarg, firstvararg)
#else
a53 1
#endif
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@d29 1
@

