head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.18
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.14
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.16
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.12
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2012.05.08.13.18.37;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.08.13.15.12;	author yasuoka;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.02.21.20.57;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.01.03.38.17;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Trivial changes from the upstream(IIJ).
 - fix styles, compile errors in some ifdef condition and compiler warnings.
 - delete rtev* that was to work around routing socket overflows.
 - delete is_ctrl argument from l2tp_ctrl_send_packet().  It's not used.
 - tweak returning the exit status.
 - use IPV6_IPSEC_POLICY for IPv6 socket.
   (though npppd cannot set up a ipsec policy to the socket yet.)

ok mcbride henning
@
text
@/*	$OpenBSD: psm-opt.h,v 1.4 2012/05/08 13:15:12 yasuoka Exp $ */

/*-
 * Copyright (c) 2009 Internet Initiative Japan Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef	PSM_H
#define	PSM_H	1

/**@@file
 * This files provides helper macros for negotiating configuration options.
 *<p>Example:<pre>
 *  struct lcp {
 *	struct {
 *	    uint8_t	pfc;	// bit flags for LCP PFC option
 *	    uint8_t	acfc;	// bit flags for LCP ACFC option
 *	} opt;
 *  }
 * if (psm_opt_is_accepted(lcp, pfc)) {
 *	// We've accepted "Protocol Field Compression" option.
 * }
 * // Mark peer rejects "Address and Control Field Compression" option.
 * psm_peer_opt_set_reject(lcp, acfc, true)
 * </pre></p>
 * $Id: psm-opt.h,v 1.4 2012/05/08 13:15:12 yasuoka Exp $
 */

#define	PSM_OPT_REQUEST_OURS		0x01
#define	PSM_OPT_ACCEPT_OURS		0x02
#define	PSM_OPT_REJECT_OURS		0x04
#define	PSM_OPT_ENABLED_OURS		0x08

#define	PSM_OPT_REQUEST_PEERS		0x10
#define	PSM_OPT_ACCEPT_PEERS		0x20
#define	PSM_OPT_REJECT_PEERS		0x40
#define	PSM_OPT_ENABLED_PEERS		0x80

#define	psm_peer_opt_is_requested(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_REQUEST_PEERS) != 0)
#define	psm_peer_opt_set_requested(psm, confopt, boolval)		\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_REQUEST_PEERS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_REQUEST_PEERS;	\
		}							\
	} while (0)
#define	psm_opt_is_requested(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_REQUEST_OURS) != 0)
#define	psm_opt_set_requested(psm, confopt, boolval)			\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_REQUEST_OURS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_REQUEST_OURS;	\
		}							\
	} while (0)
#define	psm_peer_opt_is_accepted(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_ACCEPT_PEERS) != 0)
#define	psm_peer_opt_set_accepted(psm, confopt, boolval)		\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_ACCEPT_PEERS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_ACCEPT_PEERS;	\
		}							\
	} while (0)
#define	psm_opt_is_accepted(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_ACCEPT_OURS) != 0)
#define	psm_opt_set_accepted(psm, confopt, boolval)			\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_ACCEPT_OURS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_ACCEPT_OURS;	\
		}							\
	} while (0)
#define	psm_peer_opt_is_rejected(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_REJECT_PEERS) != 0)
#define	psm_peer_opt_set_rejected(psm, confopt, boolval)		\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_REJECT_PEERS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_REJECT_PEERS;	\
		}							\
	} while (0)
#define	psm_opt_is_rejected(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_REJECT_OURS) != 0)
#define	psm_opt_set_rejected(psm, confopt, boolval)			\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_REJECT_OURS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_REJECT_OURS;	\
		}							\
	} while (0)
#define	psm_peer_opt_is_enabled(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_ENABLED_PEERS) != 0)
#define	psm_peer_opt_set_enabled(psm, confopt, boolval)			\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_ENABLED_PEERS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_ENABLED_PEERS;	\
		}							\
	} while (0)
#define	psm_opt_is_enabled(psm, confopt)				\
	(((psm)->opt.confopt & PSM_OPT_ENABLED_OURS) != 0)
#define	psm_opt_set_enabled(psm, confopt, boolval)			\
	do {								\
		if ((boolval)) {					\
			(psm)->opt.confopt |= PSM_OPT_ENABLED_OURS;	\
		} else {						\
			(psm)->opt.confopt &= ~PSM_OPT_ENABLED_OURS;	\
		}							\
	} while (0)
#endif
@


1.4
log
@Fix comments and styles.  Delete unused variables and labels.
No binary changes.

ok mcbride henning
@
text
@d1 1
a1 1
/*	$OpenBSD: psm-opt.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $ */
d46 1
a46 1
 * $Id: psm-opt.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $
d59 1
a59 1
#define	psm_peer_opt_is_requested(psm, confopt)			\
d61 9
a69 7
#define	psm_peer_opt_set_requested(psm, confopt, boolval)	\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_REQUEST_PEERS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_REQUEST_PEERS;	\
	}
#define	psm_opt_is_requested(psm, confopt)			\
d71 9
a79 7
#define	psm_opt_set_requested(psm, confopt, boolval)		\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_REQUEST_OURS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_REQUEST_OURS;	\
	}
#define	psm_peer_opt_is_accepted(psm, confopt)			\
d81 9
a89 7
#define	psm_peer_opt_set_accepted(psm, confopt, boolval)	\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_ACCEPT_PEERS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_ACCEPT_PEERS;	\
	}
#define	psm_opt_is_accepted(psm, confopt)			\
d91 9
a99 7
#define	psm_opt_set_accepted(psm, confopt, boolval)		\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_ACCEPT_OURS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_ACCEPT_OURS;	\
	}
#define	psm_peer_opt_is_rejected(psm, confopt)			\
d101 9
a109 7
#define	psm_peer_opt_set_rejected(psm, confopt, boolval)	\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_REJECT_PEERS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_REJECT_PEERS;	\
	}
#define	psm_opt_is_rejected(psm, confopt)			\
d111 9
a119 7
#define	psm_opt_set_rejected(psm, confopt, boolval)		\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_REJECT_OURS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_REJECT_OURS;	\
	}
#define	psm_peer_opt_is_enabled(psm, confopt)			\
d121 9
a129 7
#define	psm_peer_opt_set_enabled(psm, confopt, boolval)	\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_ENABLED_PEERS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_ENABLED_PEERS;	\
	}
#define	psm_opt_is_enabled(psm, confopt)			\
d131 8
a138 6
#define	psm_opt_set_enabled(psm, confopt, boolval)		\
	if ((boolval)) {					\
		(psm)->opt.confopt |= PSM_OPT_ENABLED_OURS;	\
	} else {						\
		(psm)->opt.confopt &= ~PSM_OPT_ENABLED_OURS;	\
	}
@


1.3
log
@add $OpenBSD$ and remove trailing space.  no functional change.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d46 1
a46 1
 * $Id: psm-opt.h,v 1.2 2010/07/01 03:38:17 yasuoka Exp $
@


1.2
log
@Translate Japanese comments or labels into English.  Translation was
done by IIJ people (MATSUI Yoshihiro, SAITOH Masanobu, Tomoyuki Sahara),
yuo@@ and myself.

This diff also includes
 - delete part of useless comments, correct spelling.
 - add man page of npppdctl.

There is no functional change.
@
text
@d1 2
d46 1
a46 1
 * $Id: psm-opt.h,v 1.1 2010/01/11 04:20:57 yasuoka Exp $
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@d30 15
a44 22
 * <p>PPPステートマシンのオプションのネゴシエーション状態を保持、変更するための
 * マクロ。</p>
 * <p>
 * オプションは LCP、CCP など fsm から導出された型に保持する。
 * <pre>
 *	struct lcp {
 *		fsm fsm;
 *		struct {
 *			uint8_t pfc;
 *			uint8_t acfc;
 *		} opt;
 *	};</pre></p>
 * <p>
 * 使用例:
 * <pre>
 *	if (!psm_opt_is_accepted(_this->lcp, pcf)) {
 *		// LCP の Protocol Field Compression を accept している
 *	}</pre></p>
 * <p>
 * fsm ではなく、導出されたクラスに保持することにしたので、fsm という名前
 * は使わず psm のサフィックスを使った。</p>
 * $Id: psm-opt.h 34405 2007-04-17 13:21:25Z yasuoka $
@

