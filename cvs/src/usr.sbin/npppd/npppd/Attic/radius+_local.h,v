head	1.6;
access;
symbols
	OPENBSD_5_7:1.5.0.8
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.12
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.10
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.6
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.07.23.09.04.06;	author yasuoka;	state dead;
branches;
next	1.5;
commitid	UzaYgcNQWA1XOOah;

1.5
date	2012.05.08.13.15.12;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.06.20.52.28;	author yasuoka;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.02.21.20.57;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2010.05.12.08.12.11;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Make npppd use libradius(3).  Remove radius+ files.
@
text
@/*	$OpenBSD: radius+_local.h,v 1.5 2012/05/08 13:15:12 yasuoka Exp $ */

/*-
 * Copyright (c) 2009 Internet Initiative Japan Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
/*
 * radius+.cc :
 *   yet another RADIUS library
 */
#ifndef RADIUSPLUS_LOCAL_H
#define RADIUSPLUS_LOCAL_H

#ifndef countof
#define countof(x) (sizeof(x)/sizeof((x)[0]))
#endif

#pragma pack(1)
typedef struct _RADIUS_PACKET_DATA
{
	u_int8_t  code;
	u_int8_t  id;
	u_int16_t length;
	char      authenticator[16];
	char      attributes[0];
} RADIUS_PACKET_DATA;

typedef struct _RADIUS_ATTRIBUTE
{
	u_int8_t  type;
	u_int8_t  length;
	char      data[0];
	u_int32_t vendor;
	u_int8_t  vtype;
	u_int8_t  vlength;
	char      vdata[0];
} RADIUS_ATTRIBUTE;
#pragma pack()

struct _RADIUS_PACKET
{
	RADIUS_PACKET_DATA* pdata;
	size_t capacity;
	const RADIUS_PACKET* request;
};

#define RADIUS_PACKET_CAPACITY_INITIAL   64
#define RADIUS_PACKET_CAPACITY_INCREMENT 64

extern u_int8_t radius_id_counter;

#define ADVANCE(rp) (rp = (RADIUS_ATTRIBUTE*)(((char*)rp) + rp->length))

#define ATTRS_BEGIN(pdata) ((RADIUS_ATTRIBUTE*)pdata->attributes)

#define ATTRS_END(pdata)		\
    ((RADIUS_ATTRIBUTE*)(((char*)pdata) + ntohs(pdata->length)))

#endif /* RADIUSPLUS_LOCAL_H */
@


1.5
log
@Fix comments and styles.  Delete unused variables and labels.
No binary changes.

ok mcbride henning
@
text
@d1 1
a1 1
/*	$OpenBSD: radius+_local.h,v 1.4 2011/07/06 20:52:28 yasuoka Exp $ */
@


1.4
log
@Add RADIUS accounting support and some authentication related changes:

- Add functions to radius+.c that are required to implement RADIUS
  accounting.
- Send RADIUS Account-Start and Account-Stop messages with attributes that
  are defined by RFC 2866, 2868, 2869.
- If any authentication realm is deleted from the configuration, npppd may
  exit by segmentation fault.
- Delete radius_common.c, radius_common.h and eap.c because they are not
  used.
- Retransmission and failover are reimplemented.
- Cleanup
@
text
@d1 1
a1 1
/* $OpenBSD: radius+_local.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $ */
@


1.3
log
@add $OpenBSD$ and remove trailing space.  no functional change.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a78 4

#ifndef	MIN
#define	MIN(m,n)	(((m) < (n))? (m) : (n))
#endif
@


1.2
log
@Remove the tiny bit of C++ that is not realy needed so that we get a pure
C application.
OK yasuoka@@, reyk@@
@
text
@d1 2
d29 1
a29 1
 * radius+.cc : 
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@a32 2
#include "nint.h"

d42 1
a42 1
	nuint16   length;
d52 1
a52 1
	nuint32   vendor;
d71 1
a71 14
inline void ADVANCE(RADIUS_ATTRIBUTE*& rp)
{
	rp = (RADIUS_ATTRIBUTE*)(((char*)rp) + rp->length);
}

inline void ADVANCE(const RADIUS_ATTRIBUTE*& rp)
{
	rp = (const RADIUS_ATTRIBUTE*)(((const char*)rp) + rp->length);
}

inline RADIUS_ATTRIBUTE* ATTRS_BEGIN(RADIUS_PACKET_DATA* pdata)
{
	return (RADIUS_ATTRIBUTE*)pdata->attributes;
}
d73 1
a73 4
inline const RADIUS_ATTRIBUTE* ATTRS_BEGIN(const RADIUS_PACKET_DATA* pdata)
{
	return (const RADIUS_ATTRIBUTE*)pdata->attributes;
}
d75 2
a76 9
inline RADIUS_ATTRIBUTE* ATTRS_END(RADIUS_PACKET_DATA* pdata)
{
	return (RADIUS_ATTRIBUTE*)(((char*)pdata) + pdata->length);
}

inline const RADIUS_ATTRIBUTE* ATTRS_END(const RADIUS_PACKET_DATA* pdata)
{
	return (const RADIUS_ATTRIBUTE*)(((const char*)pdata) + pdata->length);
}
@

