head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.18
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.16
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.12
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2014.11.20.03.48.12;	author tedu;	state Exp;
branches;
next	1.3;
commitid	p39TubJravUKyG3v;

1.3
date	2010.09.22.11.48.38;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.02.21.20.57;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove nt and lanman functions which aren't used. ok reyk yasuoka
@
text
@/*	$OpenBSD: chap_ms.h,v 1.3 2010/09/22 11:48:38 yasuoka Exp $	*/
/*	$vantronix: chap_ms.h,v 1.6 2010/05/19 09:37:00 reyk Exp $	*/

/*
 * Copyright (c) 2010 Reyk Floeter <reyk@@vantronix.net>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _CHAP_MS_H
#define _CHAP_MS_H

#define MSCHAP_CHALLENGE_SZ	8
#define MSCHAPV2_CHALLENGE_SZ	16
#define MSCHAP_HASH_SZ		16
#define MSCHAP_MASTERKEY_SZ	16
#define MSCHAP_MSK_KEY_SZ	32
#define MSCHAP_MSK_PADDING_SZ	32
#define MSCHAP_MSK_SZ		64

#define MSCHAP_MAXNTPASSWORD_SZ	255	/* unicode chars */

void	 mschap_nt_response(u_int8_t *, u_int8_t *, u_int8_t *, int,
	    u_int8_t *, int , u_int8_t *);
void	 mschap_auth_response(u_int8_t *, int, u_int8_t *, u_int8_t *,
	    u_int8_t *, u_int8_t *, int, u_int8_t *);

void	 mschap_ntpassword_hash(u_int8_t *, int, u_int8_t *);
void	 mschap_challenge_hash(u_int8_t *, u_int8_t *, u_int8_t *,
	    int, u_int8_t *);

void	 mschap_asymetric_startkey(u_int8_t *, u_int8_t *, int, int, int);
void	 mschap_masterkey(u_int8_t *, u_int8_t *, u_int8_t *);
void	 mschap_radiuskey(u_int8_t *, const u_int8_t *, const u_int8_t *,
	    const u_int8_t *);
void	 mschap_msk(u_int8_t *, int, u_int8_t *, u_int8_t *);

#endif /* _CHAP_MS_H */
@


1.3
log
@unify MS-CHAP implementation to sbin/iked/chap_ms.[ch].
copy sbin/iked/chap_ms.[ch] and fixed chap.c and eap.c to compile with it.
@
text
@d1 1
a1 1
/*	$OpenBSD: chap_ms.h,v 1.1 2010/06/03 16:41:12 reyk Exp $	*/
a37 3
void	 mschap_nt(u_int8_t *, u_int8_t *);
void	 mschap_lanman(u_int8_t *, u_int8_t *, u_int8_t *);

a43 1
void	 mschap_newkey(u_int8_t *, u_int8_t *, long, u_int8_t *);
@


1.2
log
@add $OpenBSD$ and remove trailing space.  no functional change.
@
text
@d1 2
a2 1
/* $OpenBSD$ */
d4 2
a5 6
/*-
 * Copyright (c) 1997        Gabor Kincses <gabor@@acm.org>
 *               1997 - 2001 Brian Somers <brian@@Awfulhak.org>
 *          based on work by Eric Rosenquist
 *                           Strata Software Limited.
 * All rights reserved.
d7 3
a9 8
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
d11 7
a17 13
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: src/usr.sbin/ppp/chap_ms.h,v 1.5.2.2 2001/08/18 02:46:06 brian Exp $
d20 31
a50 2
/* Max # of (Unicode) chars in an NT password */
#define MAX_NT_PASSWORD	256
d52 1
a52 20
/* Don't rely on sizeof(MS_ChapResponse) in case of struct padding */
#define MS_CHAP_RESPONSE_LEN    49
#define CHAP81_RESPONSE_LEN     49
#define CHAP81_NTRESPONSE_LEN   24
#define CHAP81_NTRESPONSE_OFF   24
#define CHAP81_HASH_LEN         16
#define CHAP81_AUTHRESPONSE_LEN	42
#define CHAP81_CHALLENGE_LEN    16

extern void mschap_NT(char *, char *);
extern void mschap_LANMan(char *, char *, char *);
extern void GenerateNTResponse(char *, char *, char *, int, char *, int , char *);
extern void HashNtPasswordHash(char *, char *);
extern void NtPasswordHash(char *, int, char *);
extern void ChallengeHash(char *, char *, char *UserName, int, char *);
extern void GenerateAuthenticatorResponse(char *, int, char *, char *, char *, char *, int, char *);
extern void GetAsymetricStartKey(char *, char *, int, int, int);
extern void GetMasterKey(char *, char *, char *);
extern void GetNewKeyFromSHA(char *, char *, long, char *);
extern void DecryptKeyFromRadius(char *, const char *, const char *, const char *);
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@d1 2
d37 1
a37 1
/* Don't rely on sizeof(MS_ChapResponse) in case of struct padding */  
@

