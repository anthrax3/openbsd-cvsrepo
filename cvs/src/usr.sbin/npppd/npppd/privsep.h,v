head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.8
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.4
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.2
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.6
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.4
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.10.11.07.32.06;	author guenther;	state Exp;
branches;
next	1.6;
commitid	l7h58s8VRh2mApBT;

1.6
date	2014.07.12.14.04.18;	author yasuoka;	state Exp;
branches;
next	1.5;
commitid	t0CcAvTHqWCFoExz;

1.5
date	2012.09.18.13.14.08;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2012.05.08.13.15.12;	author yasuoka;	state Exp;
branches;
next	1.3;

1.3
date	2012.01.18.03.13.04;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.08.06.14.54;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.31.05.49.51;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Simplify and lock down priv_open():
 * kill the 'mode' argument
 * fail if passed any flags other than O_ACCMODE OR O_NONBLOCK
 * paranoia: mask O_CREAT when calling open() with only two arguments
 * instead of using ioctl(FIONBIO) after the fact, pass O_NONBLOCK to
   priv_open()

"good start" deraadt@@
ok yasuoka@@
@
text
@/*	$OpenBSD: privsep.h,v 1.6 2014/07/12 14:04:18 yasuoka Exp $ */

/*
 * Copyright (c) 2010 Yasuoka Masahiko <yasuoka@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#ifndef PRIVSEP_H
#define PRIVSEP_H 1

#include <sys/socket.h>
#include <stdio.h>

#define PRIVSEP_BUFSIZE		4092

#include "npppd_auth.h"

#ifdef __cplusplus
extern "C" {
#endif

int   privsep_init (void);
void  privsep_fini (void);
pid_t privsep_priv_pid (void);
FILE  *priv_fopen (const char *);
int   priv_bind (int, const struct sockaddr *, socklen_t);
int   priv_unlink (const char *);
int   priv_socket (int, int, int);
int   priv_open (const char *, int);
int   priv_send (int, const void *, int, int);
int   priv_sendto (int, const void *, int, int, const struct sockaddr *, socklen_t);
int   priv_get_user_info(const char *, const char *, npppd_auth_user **);
int   priv_set_if_addr(const char *, struct in_addr *);
int   priv_get_if_addr(const char *, struct in_addr *);
int   priv_delete_if_addr(const char *);
int   priv_set_if_flags(const char *, int);
int   priv_get_if_flags(const char *, int *);

#ifdef __cplusplus
}
#endif

#endif
@


1.6
log
@Use imsg(3) for the IPC between the privileged process and the
non-privileged process to be unify the way.  Also fix style.
@
text
@d1 1
a1 1
/*	$OpenBSD: privsep.h,v 1.5 2012/09/18 13:14:08 yasuoka Exp $ */
d39 1
a39 1
int   priv_open (const char *, int, mode_t);
@


1.5
log
@New configuration syntax for npppd(8).  `npppd.conf' will be based on
parse.y and `npppd-users' will be based on getcap(3).  Add man pages.

feedback from giovanni
@
text
@d1 1
a1 1
/*	$OpenBSD: privsep.h,v 1.4 2012/05/08 13:15:12 yasuoka Exp $ */
d20 3
@


1.4
log
@Fix comments and styles.  Delete unused variables and labels.
No binary changes.

ok mcbride henning
@
text
@d1 1
a1 1
/*	$OpenBSD: privsep.h,v 1.3 2012/01/18 03:13:04 yasuoka Exp $ */
d23 2
d39 6
@


1.3
log
@Replace npppdctl(8) by new npppctl(8).  npppctl was written from
scratch, it uses parser.c derived from ikectl(8) to have OpenBSD's
fashion.  This includes related changes listed below:
- changed npppd control IPC heavyly.
- support IPv6 as tunnel source address.
- deleted support changing the configuration of npppd_ctl on running.
  Because it is not so needed but it requires privilege operations.
- refactors.

man page helps from jmc.  tested by sebastia.
ok deraadt sebastia sthen
@
text
@d1 1
a1 1
/* $OpenBSD: privsep.h,v 1.2 2011/07/08 06:14:54 yasuoka Exp $ */
@


1.2
log
@Improved npppd privileged separations:
- Changed finalizing way to the privileged process.  In old way, the
  privileged process could not aware abnormal exit of the process in
  jail.  Then the processes in jail remained as zombies.  Created a
  pipe to monitor the privileged process, the privileged process can
  exit in peace by using the pipe.
- npppd will exit abnormally when the privileged process exits
  abnormally.
- PF_KEY socket requires privileges.
- Return correct "errno" to the jail in priv_open().
- Cleanup.

ok hsuenaga@@
@
text
@d1 1
a1 1
/* $OpenBSD: privsep.h,v 1.1 2010/01/31 05:49:51 yasuoka Exp $ */
d21 1
a21 1
#define PRIVSEP_BUFSIZE		(10 * 1024)
@


1.1
log
@privilege separation of npppd.

- Drop privilege after daemon initializing.
- Some system calls that requires root privileges were replaced to
  wrapper functions that communicate with a separated privileged
  process via IPC.  And the privileged process checks whether the
  operations are acceptable.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d21 2
d29 1
@

