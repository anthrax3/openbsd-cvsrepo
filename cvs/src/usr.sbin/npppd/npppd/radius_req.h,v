head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.6
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.6
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.1.0.2
	OPENBSD_4_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.07.23.09.04.06;	author yasuoka;	state Exp;
branches;
next	1.6;
commitid	UzaYgcNQWA1XOOah;

1.6
date	2012.09.18.13.14.08;	author yasuoka;	state Exp;
branches;
next	1.5;

1.5
date	2012.05.08.13.15.12;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.06.20.52.28;	author yasuoka;	state Exp;
branches;
next	1.3;

1.3
date	2010.07.02.21.20.57;	author yasuoka;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.01.03.38.17;	author yasuoka;	state Exp;
branches;
next	1.1;

1.1
date	2010.01.11.04.20.57;	author yasuoka;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Make npppd use libradius(3).  Remove radius+ files.
@
text
@/*	$OpenBSD: radius_req.h,v 1.6 2012/09/18 13:14:08 yasuoka Exp $ */

/*-
 * Copyright (c) 2009 Internet Initiative Japan Inc.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */
#ifndef	RADIUS_REQ_H
#define	RADIUS_REQ_H 1

#include <sys/socket.h>
#include <netinet/in.h>
#include <stdbool.h>
#include <radius.h>

/** maximum number of length for RADIUS shared secret */
#define MAX_RADIUS_SECRET				128

/** maximum number of RADIUS server */
#define MAX_RADIUS_SERVERS				16

/** RADIUS request failed */
#define	RADIUS_REQUEST_ERROR				0x0001

/** RADIUS request timed out */
#define	RADIUS_REQUEST_TIMEOUT				0x0002

/** response has valid authenticator */
#define	RADIUS_REQUEST_CHECK_AUTHENTICATOR_OK		0x0010

/** authenticator is not checked */
#define	RADIUS_REQUEST_CHECK_AUTHENTICATOR_NO_CHECK	0x0020

/** type for context to handle RADIUS request / response */
typedef void * RADIUS_REQUEST_CTX;

/** type for callback function to receive the RADIUS response */
typedef void (radius_response)(void *context, RADIUS_PACKET *pkt, int flags, RADIUS_REQUEST_CTX reqctx);

/** type for setting of RADIUS request */
typedef struct _radius_req_setting
{
	/** RADIUS Servers */
	struct {
		/** Server's address */
		union {
			struct sockaddr_in6	sin6;
			struct sockaddr_in	sin4;
		} peer;
		/** Our address */
		union {
			struct sockaddr_in6	sin6;
			struct sockaddr_in	sin4;
		} sock;
		char	secret[MAX_RADIUS_SECRET];
		int	enabled;
	} server[MAX_RADIUS_SERVERS];
	/** Index of current server */
	int curr_server;
	/** request timeout(in second) */
	int timeout;
	/** The maximum number of RADIUS request transmission */
	int max_tries;
	/** The maximum number of RADIUS request failover */
	int max_failovers;

	/** references by radius request */
	int refcnt;
	/** destroy is requested */
	int destroyed;

} radius_req_setting;

#ifdef __cplusplus
extern "C" {
#endif

void                radius_request (RADIUS_REQUEST_CTX, RADIUS_PACKET *);
int                 radius_prepare_nas_address (radius_req_setting *, RADIUS_PACKET *);
int                 radius_request_can_failover (RADIUS_REQUEST_CTX);
int                 radius_request_failover (RADIUS_REQUEST_CTX);
int                 radius_prepare (radius_req_setting *, void *, RADIUS_REQUEST_CTX *, radius_response);
void                radius_cancel_request (RADIUS_REQUEST_CTX);
const char          *radius_get_server_secret (RADIUS_REQUEST_CTX);
struct sockaddr     *radius_get_server_address (RADIUS_REQUEST_CTX);
radius_req_setting  *radius_req_setting_create (void);
int                 radius_req_setting_has_server(radius_req_setting *);
void                radius_req_setting_destroy (radius_req_setting *);

#ifdef __cplusplus
}
#endif

#endif
@


1.6
log
@New configuration syntax for npppd(8).  `npppd.conf' will be based on
parse.y and `npppd-users' will be based on getcap(3).  Add man pages.

feedback from giovanni
@
text
@d1 1
a1 1
/*	$OpenBSD: radius_req.h,v 1.5 2012/05/08 13:15:12 yasuoka Exp $ */
d30 5
@


1.5
log
@Fix comments and styles.  Delete unused variables and labels.
No binary changes.

ok mcbride henning
@
text
@d1 1
a1 1
/*	$OpenBSD: radius_req.h,v 1.4 2011/07/06 20:52:28 yasuoka Exp $ */
d97 1
a97 1
int                 radius_prepare (radius_req_setting *, void *, RADIUS_REQUEST_CTX *, radius_response, int);
@


1.4
log
@Add RADIUS accounting support and some authentication related changes:

- Add functions to radius+.c that are required to implement RADIUS
  accounting.
- Send RADIUS Account-Start and Account-Stop messages with attributes that
  are defined by RFC 2866, 2868, 2869.
- If any authentication realm is deleted from the configuration, npppd may
  exit by segmentation fault.
- Delete radius_common.c, radius_common.h and eap.c because they are not
  used.
- Retransmission and failover are reimplemented.
- Cleanup
@
text
@d1 1
a1 1
/* $OpenBSD: radius_req.h,v 1.3 2010/07/02 21:20:57 yasuoka Exp $ */
@


1.3
log
@add $OpenBSD$ and remove trailing space.  no functional change.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d38 1
a38 1
#define	RADIUS_REQUST_ERROR				0x0001
d41 1
a41 1
#define	RADIUS_REQUST_TIMEOUT				0x0002
d44 1
a44 1
#define	RADIUS_REQUST_CHECK_AUTHENTICTOR_OK		0x0010
d47 1
a47 4
#define	RADIUS_REQUST_CHECK_AUTHENTICTOR_NO_CHECK	0x0020

/** type for callback function to receive the RADIUS response */
typedef void (radius_response)(void *context, RADIUS_PACKET *pkt, int flags);
d52 3
d77 10
d93 11
a103 6
int   radius_prepare (radius_req_setting *, void *, RADIUS_REQUEST_CTX *, radius_response *, int);
void  radius_request (RADIUS_REQUEST_CTX, RADIUS_PACKET *);
void  radius_cancel_request (RADIUS_REQUEST_CTX);
const char *radius_get_server_secret(RADIUS_REQUEST_CTX);
struct sockaddr *radius_get_server_address(RADIUS_REQUEST_CTX);
int radius_prepare_nas_address(radius_req_setting *, RADIUS_PACKET *);
@


1.2
log
@Translate Japanese comments or labels into English.  Translation was
done by IIJ people (MATSUI Yoshihiro, SAITOH Masanobu, Tomoyuki Sahara),
yuo@@ and myself.

This diff also includes
 - delete part of useless comments, correct spelling.
 - add man page of npppdctl.

There is no functional change.
@
text
@d1 2
d56 1
a56 1
typedef struct _radius_req_setting 
d71 1
a71 1
		int	enabled;	
@


1.1
log
@Initial import npppd(8).  npppd is a new PPP daemon that handles many
ppp sessions as a server.  It supports L2TP, PPTP and PPPoE as
tunneling.

ok mcbride@@ dlg@@ deraadt@@ reyk@@.
@
text
@d29 1
a29 1
/** RADIUS 共有秘密鍵の最大長 */
d32 1
a32 1
/** RADIUS サーバの最大数 */
d35 1
a35 1
/** RADIUS 要求が失敗した */
d38 1
a38 1
/** RADIUS 要求がタイムアウトした */
d41 1
a41 1
/** Authenticator チェックは OK  */
d44 1
a44 1
/** Authenticator チェックはしていない  */
d47 1
a47 1
/** RADIUS 応答を受信するコールバック関数の型 */
d50 1
a50 1
/** RADIUS 要求/応答を行うためのコンテキストを示す型 */
d53 1
a53 1
/** RADIUS 要求の設定を示す型 */
d56 1
a56 1
	/** サーバ配列 */
d58 1
d60 4
a63 5
			/** サーバの IPv6 アドレス */
			struct sockaddr_in6 sin6;
			/** サーバの IPv4 アドレス */
			struct sockaddr_in sin4;
		}	/** サーバのアドレス */ peer;
d65 3
a67 5
			/** サーバの IPv6 アドレス */
			struct sockaddr_in6 sin6;
			/** サーバの IPv4 アドレス */
			struct sockaddr_in sin4;
		}	/** サーバのアドレス */ sock;
d69 1
a69 2
		/** このアドレスが有効かどうか */
		int	enabled;
d71 1
a71 7
	/**
	 * 現在使用しているサーバのインデックス。
	 * <p>
	 * これを変更する仕組みは、radius_req.c では実装していません。npppd
	 * では npppd.c、npppd_auth.c
	 * あたりで実装しています。</p>
	 */
d73 1
a73 1
	/** リクエストタイムアウト(秒) */
@

