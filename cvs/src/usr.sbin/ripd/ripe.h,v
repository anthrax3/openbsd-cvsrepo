head	1.12;
access;
symbols
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.11.0.8
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.4
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.10.0.20
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.18
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.14
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.12
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.10
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.8
	OPENBSD_5_0:1.10.0.6
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.8.0.4
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.2
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4;
locks; strict;
comment	@ * @;


1.12
date	2017.01.17.16.30.54;	author jca;	state Exp;
branches;
next	1.11;
commitid	Ywz8bnXTyXEFkF5Y;

1.11
date	2014.10.25.03.23.49;	author lteo;	state Exp;
branches;
next	1.10;
commitid	2uw1UTO4k6erpWzK;

1.10
date	2010.05.26.13.56.08;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.17.14.19.39;	author michele;	state Exp;
branches;
next	1.8;

1.8
date	2007.10.24.20.52.50;	author claudio;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.18.09.47.57;	author claudio;	state Exp;
branches;
next	1.6;

1.6
date	2007.04.09.20.45.52;	author michele;	state Exp;
branches;
next	1.5;

1.5
date	2007.03.27.20.19.04;	author michele;	state Exp;
branches;
next	1.4;

1.4
date	2007.01.23.21.10.10;	author michele;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.10.10.28.18;	author michele;	state Exp;
branches;
next	1.2;

1.2
date	2006.10.31.23.43.11;	author michele;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.16.11.58;	author norby;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Keep track of dead peers instead of freeing them right away.

This mimics what ospfd does, and avoids a (mostly harmless)
use-after-free.  Delay suggested by claudio@@, ok florian@@
@
text
@/*	$OpenBSD: ripe.h,v 1.11 2014/10/25 03:23:49 lteo Exp $ */

/*
 * Copyright (c) 2006 Michele Marchetto <mydecay@@openbeer.it>
 * Copyright (c) 2004, 2005 Esben Norby <norby@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _RIPE_H_
#define _RIPE_H_

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netinet/ip.h>

TAILQ_HEAD(ctl_conns, ctl_conn) ctl_conns;
u_int8_t	*pkt_ptr;

/* neighbor events */
enum nbr_event {
	NBR_EVT_RESPONSE_RCVD,
	NBR_EVT_REQUEST_RCVD,
	NBR_EVT_RESPONSE_SENT,
	NBR_EVT_TIMEOUT,
	NBR_EVT_KILL_NBR,
	NBR_EVT_NOTHING
};

/* neighbor actions */
enum nbr_action {
	NBR_ACT_STRT_TIMER,
	NBR_ACT_RST_TIMER,
	NBR_ACT_DEL,
	NBR_ACT_NOTHING
};

struct nbr_failed {
	struct event		 timeout_timer;
	LIST_ENTRY(nbr_failed)	 entry;
	struct in_addr		 addr;
	u_int32_t		 auth_seq_num;
};

struct nbr {
	LIST_ENTRY(nbr)		 entry, hash;
	struct event		 timeout_timer;
	struct in_addr		 addr;
	struct in_addr		 id;

	struct packet_head	 rq_list;
	struct packet_head	 rp_list;

	struct iface		*iface;

	u_int32_t		 peerid;	/* unique ID in DB */
	u_int32_t		 auth_seq_num;
	u_int16_t		 port;
	time_t			 uptime;
	int			 state;
	int			 flags;
};

/* packet.c */
int	 send_packet(struct iface *, void *, size_t, struct sockaddr_in *);
void	 recv_packet(int, short, void *);
int	 gen_rip_hdr(struct ibuf *, u_int8_t);

/* interface.c */
void			 if_init(struct ripd_conf *, struct iface *);
int			 if_fsm(struct iface *, enum iface_event);
int			 if_set_mcast(struct iface *);
int			 if_set_mcast_ttl(int, u_int8_t);
int			 if_set_mcast_loop(int);
int			 if_set_opt(int);
int			 if_set_tos(int, int);
void			 if_set_recvbuf(int);
struct iface		*if_new(struct kif *);
void			 if_del(struct iface *);
const char		*if_event_name(int);
const char		*if_action_name(int);
int			 if_join_group(struct iface *, struct in_addr *);
int			 if_leave_group(struct iface *, struct in_addr *);
struct ctl_iface	*if_to_ctl(struct iface *);

/* message.c */
void	 recv_request(struct iface *, struct nbr *, u_int8_t *, u_int16_t);
void	 recv_response(struct iface *, struct nbr *, u_int8_t *, u_int16_t);
void	 add_entry(struct packet_head *, struct rip_route *);
void	 clear_list(struct packet_head *);
int	 send_triggered_update(struct iface *, struct rip_route *);
int	 send_request(struct packet_head *, struct iface *, struct nbr *);
int	 send_response(struct packet_head *, struct iface *, struct nbr *);
int	 start_report_timer(void);
void	 report_timer(int, short, void *);

/* ripe.c */
pid_t	 ripe(struct ripd_conf *, int [2], int [2], int [2]);
int	 ripe_imsg_compose_parent(int, pid_t, void *, u_int16_t);
int	 ripe_imsg_compose_rde(int, u_int32_t, pid_t, void *,
	    u_int16_t);
void	 ripe_dispatch_main(int, short, void *);
void	 ripe_dispatch_rde(int, short, void *);
void	 ripe_iface_ctl(struct ctl_conn *, unsigned int);
void	 ripe_nbr_ctl(struct ctl_conn *);
void	 ripe_demote_iface(struct iface *, int);

/* auth.c */
int	 auth_validate(u_int8_t **, u_int16_t *, struct iface *, struct nbr *,
	    struct nbr_failed *, u_int32_t *);
int	 auth_gen(struct ibuf *, struct iface *);
int	 auth_add_trailer(struct ibuf *, struct iface *);
int	 md_list_add(struct auth_md_head *, u_int8_t, char *);
void	 md_list_copy(struct auth_md_head *, struct auth_md_head *);
void	 md_list_clr(struct auth_md_head *);

/* neighbor.c */
void		 nbr_init(u_int32_t);
struct nbr	*nbr_new(u_int32_t, struct iface *);
void		 nbr_del(struct nbr *);

struct nbr		*nbr_find_ip(struct iface *, u_int32_t);
struct nbr		*nbr_find_peerid(u_int32_t);
struct nbr_failed	*nbr_failed_find(struct iface *, u_int32_t);
void			 nbr_failed_delete(struct nbr_failed *);

int		 nbr_fsm(struct nbr *, enum nbr_event);
void		 nbr_timeout_timer(int, short, void *);
void		 nbr_act_del(struct nbr *);

const char	*nbr_event_name(int);
const char	*nbr_action_name(int);

struct ctl_nbr	*nbr_to_ctl(struct nbr *);

#endif /* _RIPE_H_ */
@


1.11
log
@Remove unnecessary netinet/in_systm.h include.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.10 2010/05/26 13:56:08 nicm Exp $ */
d131 1
a131 1
void		 nbr_act_del(struct nbr *);
d140 1
a140 1
void		 nbr_act_delete(struct nbr *);
@


1.10
log
@Rename some imsg bits to make namespace collisions less likely buf to
ibuf, buf_read to ibuf_read, READ_BUF_SIZE to IBUF_READ_SIZE.

ok henning gilles claudio jacekm deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.9 2008/12/17 14:19:39 michele Exp $ */
a25 1
#include <netinet/in_systm.h>
@


1.9
log
@Add support for demotion counter.
When interfaces go up/down the demotion counter of the
specified group is decreased/increased.

ok henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.8 2007/10/24 20:52:50 claudio Exp $ */
d79 1
a79 1
int	 gen_rip_hdr(struct buf *, u_int8_t);
d123 2
a124 2
int	 auth_gen(struct buf *, struct iface *);
int	 auth_add_trailer(struct buf *, struct iface *);
@


1.8
log
@Make the packet buffer u_int8_t * everywhere. This is binary data and not
a string.
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.7 2007/10/18 09:47:57 claudio Exp $ */
d118 1
@


1.7
log
@Massive cleanup in the authentication code. the simple auth_key and the crypt
keys are not strings so a) use u_int8_t instead of char and b) uses memcpy
to copy the full MAX_SIMPLE_AUTH_LEN resp. MD5_DIGEST_LENGTH bytes around.
The parser needs some special code to ensure that the string is not to long
and if it is shorter then the buffer the rest needs to be zero padded.
Avoid to use strncpy() instead use a bzero(); memcpy() combo.
with and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.6 2007/04/09 20:45:52 michele Exp $ */
d30 1
a30 1
char	*pkt_ptr;
d99 2
a100 2
void	 recv_request(struct iface *, struct nbr *, char *, u_int16_t);
void	 recv_response(struct iface *, struct nbr *, char *, u_int16_t);
d120 1
a120 1
int	 auth_validate(char **, u_int16_t *, struct iface *, struct nbr *,
@


1.6
log
@Improve the handling of "counting to infinity" mechanism and add an heuristic
higly recommended in the rfc.

tested by me and OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.5 2007/03/27 20:19:04 michele Exp $ */
d124 1
a124 1
void	 md_list_add(struct auth_md_head *, u_int8_t, char *);
@


1.5
log
@Remove unused parameter in nbr_new
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.4 2007/01/23 21:10:10 michele Exp $ */
d76 1
a76 1
/* packet */
d81 1
a81 1
/* interface */
@


1.4
log
@add timeout for failed nbr structures

OK claudio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.3 2006/11/10 10:28:18 michele Exp $ */
d130 1
a130 1
struct nbr	*nbr_new(u_int32_t, struct iface *, int);
@


1.3
log
@clear lists before deleting neighbor

OK claudio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.2 2006/10/31 23:43:11 michele Exp $ */
d51 1
d136 1
a136 1
void			 nbr_failed_delete(struct iface *, struct nbr_failed *);
a138 1

a139 1

@


1.2
log
@create a temporary neighbor instead of a permanent one when a request is received
@
text
@d1 1
a1 1
/*	$OpenBSD: ripe.h,v 1.1 2006/10/18 16:11:58 norby Exp $ */
d97 1
a97 1
/* communications */
d101 1
@


1.1
log
@Welcome ripd
started by Michele Marchetto some time ago by using the imsg/three process framework
of ospfd. He implemented most of the daemon with a little help and guidance from
Claudio and I.

Currently the daemon is more or less complete, with the exception of key lifetime
and rollover.

Not yet connected to the builds.
OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d36 1
@

