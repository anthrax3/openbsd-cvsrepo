head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.34
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.32
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.28
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.24
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.4
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.4.0.6
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.4
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.2
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.3.0.4
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2009.07.31.16.04.34;	author michele;	state Exp;
branches;
next	1.5;

1.5
date	2009.03.24.19.26.13;	author michele;	state Exp;
branches;
next	1.4;

1.4
date	2007.10.18.09.42.47;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2007.01.08.13.01.10;	author claudio;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.09.04.06.09;	author joel;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.18.16.11.58;	author norby;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Reword the split horizon parameters in the configuration file.
Now the choioses are: none, simple, poisoned.

Also make poisoned reverse the default behaviour.

Based on a diff by Eugene Yunak, thanks.

ok claudio@@
@
text
@/*	$OpenBSD: printconf.c,v 1.5 2009/03/24 19:26:13 michele Exp $ */

/*
 * Copyright (c) 2004, 2005, 2006 Esben Norby <norby@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/queue.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>

#include <stdio.h>

#include "rip.h"
#include "ripd.h"
#include "ripe.h"

void	print_mainconf(struct ripd_conf *);
const char *print_no(u_int16_t);
void	print_redistribute(struct ripd_conf *);
void	print_iface(struct iface *);

void
print_mainconf(struct ripd_conf *conf)
{
	if (conf->flags & RIPD_FLAG_NO_FIB_UPDATE)
		printf("fib-update no\n");
	else
		printf("fib-update yes\n");

	print_redistribute(conf);

	if (conf->options & OPT_SPLIT_HORIZON)
		printf("split-horizon simple\n");
	else if (conf->options & OPT_SPLIT_POISONED)
		printf("split-horizon poisoned\n");
	else
		printf("split-horizon none\n");

	if (conf->options & OPT_TRIGGERED_UPDATES)
		printf("triggered-updates yes\n");
	else
		printf("triggered-updates no\n");
}

const char *
print_no(u_int16_t type)
{
	if (type & REDIST_NO)
		return ("no ");
	else
		return ("");
}

void
print_redistribute(struct ripd_conf *conf)
{
	struct redistribute	*r;

	SIMPLEQ_FOREACH(r, &conf->redist_list, entry) {
		switch (r->type & ~REDIST_NO) {
		case REDIST_STATIC:
			printf("%sredistribute static\n", print_no(r->type));
			break;
		case REDIST_CONNECTED:
			printf("%sredistribute connected\n", print_no(r->type));
			break;
		case REDIST_LABEL:
			printf("%sredistribute rtlabel %s\n",
			    print_no(r->type), rtlabel_id2name(r->label));
			break;
		case REDIST_DEFAULT:
			printf("redistribute default\n");
			break;
		case REDIST_ADDR:
			printf("%ssredistribute %s/%d\n",
			    print_no(r->type), inet_ntoa(r->addr),
			    mask2prefixlen(r->mask.s_addr));
			break;
		}
	}
}

void
print_iface(struct iface *iface)
{
	struct auth_md	*m;

	printf("interface %s {\n", iface->name);

	if (iface->passive)
		printf("\tpassive\n");

	printf("\tcost %d\n", iface->cost);

	printf("\tauth-type %s\n", if_auth_name(iface->auth_type));
	switch (iface->auth_type) {
	case AUTH_NONE:
		break;
	case AUTH_SIMPLE:
		printf("\tauth-key XXXXXX\n");
		break;
	case AUTH_CRYPT:
		printf("\tauth-md-keyid %d\n", iface->auth_keyid);
		TAILQ_FOREACH(m, &iface->auth_md_list, entry)
			printf("\tauth-md %d XXXXXX\n", m->keyid);
		break;
	default:
		printf("\tunknown auth type!\n");
		break;
	}

	printf("}\n\n");
}

void
print_config(struct ripd_conf *conf)
{
	struct iface	*iface;

	print_mainconf(conf);
	printf("\n");

	LIST_FOREACH(iface, &conf->iface_list, entry) {
		print_iface(iface);
	}
}
@


1.5
log
@Change the behaviour of redistribute default.
Now a default route have to be present in the fib to be correctly advertised.

Spotted and tested by Steven Surdok on ripd.
ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.4 2007/10/18 09:42:47 claudio Exp $ */
d47 1
a47 1
		printf("split-horizon default\n");
@


1.4
log
@Add missing bits for auth crypt and cleanup a bit. OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.3 2007/01/08 13:01:10 claudio Exp $ */
a72 3
	if (conf->redistribute & REDISTRIBUTE_DEFAULT)
		printf("redistribute default\n");

d84 3
@


1.3
log
@New redistribute code adapted from ospfd. It is now possible to do the same
redistribute setups as in ospfd (rtlables, per prefix, negation).
Tested, input and OK michele@@
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.2 2006/11/09 04:06:09 joel Exp $ */
d100 2
d117 3
d126 1
a126 1
	printf("}\n");
a133 1
	printf("\n");
a137 1
		printf("ooo\n");
a139 2
	printf("\n");

@


1.2
log
@Properly indicate status of "fib-update"
@
text
@d1 1
a1 1
/*	$OpenBSD: printconf.c,v 1.1 2006/10/18 16:11:58 norby Exp $ */
d31 4
a34 2
void	 print_mainconf(struct ripd_conf *);
void	 print_iface(struct iface *);
d44 1
a44 8
	if (conf->redistribute_flags & REDISTRIBUTE_STATIC)
		printf("redistribute static\n");
	else if (conf->redistribute_flags & REDISTRIBUTE_CONNECTED)
		printf("redistribute connected\n");
	else if (conf->redistribute_flags & REDISTRIBUTE_DEFAULT)
		printf("redistribute default\n");
	else
		printf("redistribute none\n");
d57 38
@


1.1
log
@Welcome ripd
started by Michele Marchetto some time ago by using the imsg/three process framework
of ospfd. He implemented most of the daemon with a little help and guidance from
Claudio and I.

Currently the daemon is more or less complete, with the exception of key lifetime
and rollover.

Not yet connected to the builds.
OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d37 3
a39 1
	if (conf->flags |= RIPD_FLAG_NO_FIB_UPDATE)
a40 2
	else
		printf("fib-update no\n");
@

