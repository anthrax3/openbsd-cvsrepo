head	1.6;
access;
symbols
	OPENBSD_6_0:1.6.0.8
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.4
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.34
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.32
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.28
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.26
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.24
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.22
	OPENBSD_5_0:1.5.0.20
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.18
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.16
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.12
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@ * @;


1.6
date	2015.01.16.06.40.17;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	Uu5nFG3wCl0LACBb;

1.5
date	2007.02.08.11.15.55;	author reyk;	state Exp;
branches;
next	1.4;

1.4
date	2005.12.18.17.54.12;	author reyk;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.01.01.11.30;	author reyk;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.13.20.25.31;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.13.18.12.23;	author reyk;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@/*	$OpenBSD: llc.c,v 1.5 2007/02/08 11:15:55 reyk Exp $	*/

/*
 * Copyright (c) 2004, 2005 Reyk Floeter <reyk@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/ioctl.h>
#include <sys/types.h>
#include <sys/socket.h>
#include <sys/time.h>

#include <net/if.h>
#include <net/if_dl.h>
#include <net/if_media.h>
#include <net/if_arp.h>
#include <net/if_llc.h>
#include <net/bpf.h>

#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <arpa/inet.h>

#include <fcntl.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>

#include "hostapd.h"

void
hostapd_llc_init(struct hostapd_config *cfg)
{
	struct hostapd_iapp *iapp = &cfg->c_iapp;
	struct ifreq ifr;
	u_int i;

	iapp->i_raw = hostapd_bpf_open(O_WRONLY);
	cfg->c_flags |= HOSTAPD_CFG_F_RAW;

	bzero(&ifr, sizeof(struct ifreq));
	(void)strlcpy(ifr.ifr_name, iapp->i_iface, sizeof(ifr.ifr_name));

	/* Associate the wired network interface to the BPF descriptor */
	if (ioctl(iapp->i_raw, BIOCSETIF, &ifr) == -1)
		hostapd_fatal("failed to set BPF interface \"%s\": %s\n",
		    iapp->i_iface, strerror(errno));

	i = 1;
	if (ioctl(iapp->i_raw, BIOCSHDRCMPLT, &i) == -1)
		hostapd_fatal("failed to set BPF header completion: %s\n",
		    strerror(errno));

	/* Lock the BPF descriptor, no further configuration */
	if (ioctl(iapp->i_raw, BIOCLOCK, NULL) == -1)
		hostapd_fatal("failed to lock BPF interface on \"%s\": %s\n",
		    iapp->i_iface, strerror(errno));
}

int
hostapd_llc_send_xid(struct hostapd_config *cfg, struct hostapd_node *node)
{
	struct hostapd_iapp *iapp = &cfg->c_iapp;
	struct hostapd_llc *llc;
	u_int8_t buf[ETHER_HDR_LEN + (LLC_UFRAMELEN * 2)];

	/*
	 * Send an IEEE 802.3 LLC XID frame which will possibly force
	 * our switch port on the wired network to learn the station's
	 * new MAC address.
	 */
	bzero(&buf, sizeof(buf));
	llc = (struct hostapd_llc *)&buf;
	memset(&llc->x_hdr.ether_dhost, 0xff,
	    sizeof(llc->x_hdr.ether_dhost));
	bcopy(&node->ni_macaddr, &llc->x_hdr.ether_shost,
	    sizeof(llc->x_hdr.ether_shost));
	llc->x_hdr.ether_type = htons(sizeof(buf));
	llc->x_llc.llc_control = IAPP_LLC;
	llc->x_llc.llc_fid = IAPP_LLC_XID;
	llc->x_llc.llc_class = IAPP_LLC_CLASS;
	llc->x_llc.llc_window = IAPP_LLC_WINDOW;

	if (write(iapp->i_raw, &buf, sizeof(buf)) == -1)
		return (errno);
	return (0);
}
@


1.5
log
@carefully check some return values and make lint happy. check for
truncation before feeding strings into the kernel.
@
text
@d1 1
a1 1
/*	$OpenBSD: llc.c,v 1.4 2005/12/18 17:54:12 reyk Exp $	*/
a18 1
#include <sys/param.h>
d40 1
@


1.4
log
@Update my e-mail address in the copyright statement, no binary changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: llc.c,v 1.3 2005/12/01 01:11:30 reyk Exp $	*/
d55 1
a55 1
	strlcpy(ifr.ifr_name, iapp->i_iface, sizeof(ifr.ifr_name));
@


1.3
log
@move iapp configuration in a separate data structure
@
text
@d1 1
a1 1
/*	$OpenBSD: llc.c,v 1.2 2005/04/13 20:25:31 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 2004, 2005 Reyk Floeter <reyk@@vantronix.net>
@


1.2
log
@tighten code vertically
@
text
@d1 1
a1 1
/*	$OpenBSD: llc.c,v 1.1 2005/04/13 18:12:23 reyk Exp $	*/
d47 1
d51 1
a51 1
	cfg->c_iapp_raw = hostapd_bpf_open(O_WRONLY);
d55 1
a55 1
	strlcpy(ifr.ifr_name, cfg->c_iapp_iface, sizeof(ifr.ifr_name));
d58 1
a58 1
	if (ioctl(cfg->c_iapp_raw, BIOCSETIF, &ifr) == -1)
d60 1
a60 1
		    cfg->c_iapp_iface, strerror(errno));
d63 1
a63 1
	if (ioctl(cfg->c_iapp_raw, BIOCSHDRCMPLT, &i) == -1)
d68 1
a68 1
	if (ioctl(cfg->c_iapp_raw, BIOCLOCK, NULL) == -1)
d70 1
a70 1
		    cfg->c_iapp_iface, strerror(errno));
d76 1
d97 1
a97 1
	if (write(cfg->c_iapp_raw, &buf, sizeof(buf)) == -1)
@


1.1
log
@add the initial version of the OpenBSD hostapd daemon

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a50 1

a82 1

a83 1

a96 1

@

