head	1.3;
access;
symbols
	OPENBSD_3_2:1.2.0.24
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.22
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2003.02.21.08.59.44;	author jakob;	state dead;
branches;
next	1.2;

1.2
date	97.03.12.10.41.56;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.02.19.19.53.52;	author dm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove bind4; ok deraadt@@
@
text
@/*	$OpenBSD: port.h,v 1.2 1997/03/12 10:41:56 downsj Exp $	*/

/*
** Various portability definitions.
**
**	@@(#)port.h              e07@@nikhef.nl (Eric Wassenaar) 961010
*/

#if defined(SYSV) || defined(SVR4)
#define SYSV_MALLOC
#define SYSV_MEMSET
#define SYSV_STRCHR
#define SYSV_SETVBUF
#endif

#if defined(__hpux) || defined(hpux)
#define SYSV_MALLOC
#define SYSV_SETVBUF
#endif

#if defined(RES_PRF_STATS)
#define BIND_49
#else
#define BIND_48
#endif

#if defined(BIND_49) && defined(__BIND)
#define BIND_493
#endif

/*
** Define constants for fixed sizes.
*/

#ifndef INT16SZ
#define	INT16SZ		2	/* for systems without 16-bit ints */
#endif
#ifndef INT32SZ
#define	INT32SZ		4	/* for systems without 32-bit ints */
#endif
#ifndef INADDRSZ
#define	INADDRSZ	4	/* for sizeof(struct inaddr) != 4 */
#endif

#define	IPNGSIZE	16	/* 128 bit ip v6 address size */

/*
** The following should depend on existing definitions.
*/

#if defined(BIND_49)
typedef struct __res_state	res_state_t;
#else
typedef struct state		res_state_t;
#endif

#if defined(BIND_48)
typedef struct rrec	rrec_t;
#else
#if defined(BIND_493)
typedef u_char		rrec_t;
#else
typedef char		rrec_t;
#endif
#endif

#if defined(BIND_493)
typedef u_char	qbuf_t;
#else
typedef char	qbuf_t;
#endif

#if defined(BIND_493)
typedef char	nbuf_t;
#else
typedef u_char	nbuf_t;
#endif

#if defined(__alpha) || defined(BIND_49)
typedef u_int	ipaddr_t;
#else
typedef u_long	ipaddr_t;
#endif

#if defined(apollo) || defined(_BSD_SIGNALS)
typedef int	sigtype_t;
#else
typedef void	sigtype_t;
#endif

#if defined(SYSV_MALLOC)
typedef void	ptr_t;		/* generic pointer type */
typedef u_int	siz_t;		/* general size type */
typedef void	free_t;
#else
typedef char	ptr_t;		/* generic pointer type */
typedef u_int	siz_t;		/* general size type */
typedef int	free_t;
#endif

#ifdef SYSV_MEMSET
#define bzero(a,n)	(void) memset(a,'\0',n)
#define bcopy(a,b,n)	(void) memcpy(b,a,n)
#endif

#ifdef SYSV_STRCHR
#define index		strchr
#define rindex		strrchr
#endif

#ifdef SYSV_SETVBUF
#define linebufmode(a)	(void) setvbuf(a, (char *)NULL, _IOLBF, BUFSIZ);
#else
#define linebufmode(a)	(void) setlinebuf(a);
#endif

#ifdef ULTRIX_RESOLV
#define nslist(i)	_res.ns_list[i].addr
#else
#define nslist(i)	_res.nsaddr_list[i]
#endif

#ifdef fp_nquery
#define pr_query(a,n,f)	fp_nquery(a,n,f)
#else
#define pr_query(a,n,f)	fp_query(a,f)
#endif

#if defined(sun) && defined(NO_YP_LOOKUP)
#define gethostbyname	(struct hostent *)res_gethostbyname
#define gethostbyaddr	(struct hostent *)res_gethostbyaddr
#endif

/*
** No prototypes yet.
*/

#define PROTO(TYPES)	()

#if !defined(__STDC__) || defined(apollo)
#define const
#endif

#if defined(__STDC__) && defined(BIND_49)
#define CONST	const
#else
#define CONST
#endif
@


1.2
log
@BIND 4.9.5-P1.

libresolv and include are required until the new resolver gets integrated
into libc.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@netbsd: bind 4.9.3
@
text
@d1 2
d6 1
a6 1
**	@@(#)port.h              e07@@nikhef.nl (Eric Wassenaar) 950925
d10 1
d17 1
d27 1
a27 2
#if defined(BIND_49)
#if defined(__BIND)
a29 1
#endif
a37 1

a40 1

d45 2
d91 5
a95 1
/* too primitive */
d98 2
d139 4
@
