head	1.21;
access;
symbols
	OPENBSD_3_2:1.20.0.6
	OPENBSD_3_2_BASE:1.20
	OPENBSD_3_1:1.20.0.4
	OPENBSD_3_1_BASE:1.20
	OPENBSD_3_0:1.20.0.2
	OPENBSD_3_0_BASE:1.20
	OPENBSD_2_9_BASE:1.19
	OPENBSD_2_9:1.19.0.4
	OPENBSD_2_8:1.19.0.2
	OPENBSD_2_8_BASE:1.19
	OPENBSD_2_7:1.18.0.2
	OPENBSD_2_7_BASE:1.18
	OPENBSD_2_6:1.15.0.2
	OPENBSD_2_6_BASE:1.15
	OPENBSD_2_5:1.9.0.2
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.21
date	2003.02.21.08.59.45;	author jakob;	state dead;
branches;
next	1.20;

1.20
date	2001.08.02.18.37.35;	author mpech;	state Exp;
branches;
next	1.19;

1.19
date	2000.10.17.19.29.15;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.03.19.17.57.09;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.03.14.21.31.37;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.03.04.22.19.28;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	99.07.09.13.35.54;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.07.07.10.50.14;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	99.06.05.22.17.34;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.06.05.01.29.39;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.28.23.00.07;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.16.19.58.14;	author alex;	state Exp;
branches;
next	1.9;

1.9
date	99.03.11.01.35.07;	author pjanzen;	state Exp;
branches;
next	1.8;

1.8
date	98.12.16.02.47.52;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	98.07.24.00.43.58;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	98.05.22.00.47.27;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.03.16.11.02.03;	author d;	state Exp;
branches;
next	1.4;

1.4
date	98.03.09.06.39.52;	author d;	state Exp;
branches;
next	1.3;

1.3
date	98.02.03.00.29.23;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.03.12.10.42.12;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.02.19.19.53.56;	author dm;	state Exp;
branches;
next	;


desc
@@


1.21
log
@remove bind4; ok deraadt@@
@
text
@.\"	$OpenBSD: dig.1,v 1.20 2001/08/02 18:37:35 mpech Exp $
.\" $From: dig.1,v 8.2 1997/06/01 20:34:33 vixie Exp $
.\"
.\" ++Copyright++ 1993
.\" -
.\" Copyright (c) 1993
.\" The Regents of the University of California. All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\" notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\" notice, this list of conditions and the following disclaimer in the
.\" documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\" must display the following acknowledgement:
.\" 	This product includes software developed by the University of
.\" 	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\" may be used to endorse or promote products derived from this software
.\" without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\" -
.\" Portions Copyright (c) 1993 by Digital Equipment Corporation.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies, and that
.\" the name of Digital Equipment Corporation not be used in advertising or
.\" publicity pertaining to distribution of the document or software without
.\" specific, written prior permission.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL DIGITAL EQUIPMENT
.\" CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
.\" SOFTWARE.
.\" -
.\" --Copyright--
.\"
.\" Distributed with 'dig' version 2.0 from University of Southern
.\" California Information Sciences Institute (USC-ISI).
.\"
.\" dig.1 2.0 (USC-ISI) 8/30/90
.\"
.\" Man page reformatted for this release by Andrew Cherenson
.\" (arc@@sgi.com)
.\"
.Dd August 30, 1990
.Dt dig 1
.Os
.Sh NAME
.Nm dig
.Nd send domain name query packets to name servers
.Sh SYNOPSIS
.Nm dig
.Op Cm @@ Ns Ar server
.Ar domain
.Op Ar query-type
.Op Ar query-class
.\" .Op Cm \&- Ns Ar dig-option
.Op Fl f Ar file
.Op Fl T Ar time
.Op Fl p Ar port
.Op Fl P Ns Op Ar ping-string
.Op Fl t Ar query-type
.Op Fl c Ar query-class
.Op Fl envsav
.Op Fl envset
.Op Fl stick | Fl nostick
.Oo
.Cm + Ns Ar keyword Ns
.Oo
.Cm \= Ns Ar value
.Oc
.Oc
.Op Cm % Ns Ar comment
.Nm dig
.Op Cm @@ Ns Ar server
.Fl x Ar dot-notation-address
.Op ...
.Sh DESCRIPTION
.Nm
(domain information groper) is a flexible command line tool which can be
used to gather information from the Domain Name System servers.
.Nm
has two modes: simple interactive mode, which makes a single query,
and batch mode, which executes a query for each in a list of
several query lines.
All query options are accessible from the command line.
.Pp
The usual simple use of
.Nm
will take the form:
.Bd -filled -offset indent
.Ic dig
.Cm @@ Ns Ar server
.Ar domain
.Ar query-type
.Ar query-class
.Ed
.Pp
where:
.Bl -tag -width "query-class" -offset
.It Ar server
may be either a domain name or a dot-notation Internet address.
If this optional field is omitted,
.Nm
will attempt to use the default name server for your machine.
.Pp
.Sy Note:
If a domain name is specified, this will be resolved
using the domain name system resolver (i.e., BIND).
If your system does not support DNS, you may have to specify a
dot-notation address.
Alternatively, if there is a server at your disposal somewhere,
all that is required is that
.Pa /etc/resolv.conf
be present and indicate where the default name servers reside, so that
.Ar server
itself can be resolved.
See
.Xr resolv.conf 5
for information on
.Pa /etc/resolv.conf .
.Pp
.Sy Warning:
Changing
.Pa /etc/resolv.conf
will affect the standard resolver library and potentially several
programs which use it.)
As an option, the user may set the environment variable
.Ev LOCALRES
to name a file which is to be used instead of
.Pa /etc/resolv.conf
.Ev ( LOCALRES
is specific to the
.Nm
resolver and not referenced by the standard resolver).
If the
.Ev LOCALRES
variable is not set or the file is not readable then
.Pa /etc/resolv.conf
will be used.
.It Ar domain
is the domain name for which you are requesting information.
See
.Sx "OTHER OPTIONS"
.Fl ( x )
for a convenient way to specify inverse address query.
.It Ar query-type
is the type of information (DNS query type) that you are requesting.
If omitted, the default is
.Dq Li a
(T_A = address).
The following types are recognized:
.sp 1
.ta \w'hinfoXX'u +\w'T_HINFOXX'u
.nf
a	T_A	network address
any	T_ANY	all/any information about specified domain
mx	T_MX	mail exchanger for the domain
ns	T_NS	name servers
soa	T_SOA	zone of authority record
hinfo	T_HINFO	host information
axfr	T_AXFR	zone transfer
		 (must ask an authoritative server)
txt	T_TXT	arbitrary number of strings
.fi
.sp 1
(See RFC 1035 for the complete list.)
.It Ar query-class
is the network class requested in the query.
If omitted, the default is
.Dq Li in
(C_IN = Internet).
The following classes are recognized:
.sp 1
.ta \w'hinfoXX'u +\w'T_HINFOXX'u
.nf
in	C_IN	Internet class domain
any	C_ANY	all/any class information
.fi
.sp 1
(See RFC 1035 for the complete list.)
.sp 1
.Sy Note:
.Dq Li any
can be used to specify a class and/or a type of query.
.Nm
will parse the first occurrence of
.Dq Li any
to mean
.Ar query-type
= T_ANY.
To specify
.Ar query-class
= C_ANY you must either specify
.Dq Li any
twice, or set query-class using
.Fl c
option (see below).
.El
.Sh OTHER OPTIONS
.Bl -tag -width Ar -offset
.It Cm % Ns ignored-comment
.Dq Li %
is used to included an argument that is simply not parsed.
This may be useful if running
.Nm
in batch mode.
Instead of resolving every
.Cm @@ Ns Ar server-domain-name
in a list of queries, you can avoid the overhead of doing so,
and still have the domain name on the command line as a reference.
Example:
.D1 Ic "dig @@128.9.0.32 %venera.isi.edu mx isi.edu"
.\" .It Cm \- Ns dig-option
.\" .Dq Li \-
.\" is used to specify an option which affects the
.\" operation of
.\" .Nm dig .
.\" The following options are currently
.\" available (although not guaranteed to be useful):
.\" .Bl -tag -width Fl -offset
.It Fl x Ar dot-notation-address
Convenient form to specify inverse address mapping.
Instead of
.D1 Ic "dig 32.0.9.128.in-addr.arpa"
one can simply
.D1 Ic "dig -x 128.9.0.32"
.It Fl f Ar file
File for
.Nm
batch mode.
The file contains a list
of query specifications (\fIdig\fP command lines) which
are to be executed successively.
Lines beginning
with
.Ql \&; ,
.Ql # ,
or
.Ql \en
are ignored.
Other options may still appear on command line, and will be in
effect for each batch query.
.It Fl T Ar time
Time in seconds between start of successive queries when running in batch mode.
Can be used to keep two or more batch
.Nm
commands running roughly in sync.
Default is zero.
.It Fl p Ar port
Port number.
Query a name server listening to a non-standard port number.
Default is 53.
.It Fl P Ns Op Ar ping-string
After query returns, execute a
.Xr ping 1
command for response time comparison.
This rather inelegantly makes a call to the shell.
The last three lines of statistics are printed for the command:
.Dl ping -s server_name 56 3
If the optional
.Ar ping-string
is present, it replaces
.Dq Li "ping \-s"
in the shell command.
.It Fl t Ar query-type
Specify the type of query.
This may specify either an integer value to be included in the type field
or use the abbreviated mnemonic as discussed above (i.e., mx = T_MX).
.It Fl c Ar query-class
Specify the class of query.
This may specify either an integer value to be included in the class field
or use the abbreviated mnemonic as discussed above (i.e., in = C_IN).
.It Fl envsav
This flag specifies that the
.Nm
environment (defaults, print options, etc.), after all of the arguments
are parsed, should be saved to a file to become the default environment.
Useful if you do not like the standard set of defaults and do not desire
to include a large number of options each time
.Nm
is used.
The environment consists of resolver state variable flags, timeout,
and retries as well as the flags detailing
.Nm
output (see below).
If the shell environment variable
.Ev LOCALDEF
is set to the name of a file, this is where the default
.Nm
environment is saved.
If not, the file
.Pa DiG.env
is created in the current working directory.
.sp 1
.Sy Note:
.Ev LOCALDEF
is specific to the
.Nm
resolver, and will not affect operation of the standard resolver library.
.sp 1
Each time
.Nm
is executed, it looks for
.Pa DiG.env
in the working directory, or the file specified by the
shell environment variable
.Ev LOCALDEF .
If the file exists and is readable, then the environment is restored
from it before any arguments are parsed.
.It Fl envset
This flag only affects batch query runs.
When
.Fl envset
is specified on a line in a
.Nm
batch file, the
.Nm
environment after the arguments are parsed, becomes the default environment
for the duration of the the batch file, or until the next line which specifies
.Fl envset .
.It Fl stick | Fl nostick
These flags only affects batch query runs.
.Fl stick
specifies that the
.Nm
environment (as read initially or set by
.Fl envset
switch) is to be restored before each query (line) in a
.Nm
batch file.
The default
.Fl nostick
means that the
.Nm
environment does not stick; that is, options specified on a single line in a
.Nm
batch file will remain in effect for subsequent lines
(i.e., they are not restored to the
.Dq sticky
default).
.\" .El
.It Xo Cm + Ns Ar keyword Ns
.Op = Ns Ar value
.Xc
.Dq Li "+"
is used to specify an option to be changed in the query packet or to change
.Nm
output specifics.
Many of these are the same parameters accepted by
.Xr nslookup 8 .
.\" If an option requires a parameter, the form is as
.\" follows:
.\" .Bd -ragged -offset indent
.\" .Cm + Ns Ar keyword Ns
.\" .Oo
.\" .Cm \= Ns Ar value
.\" .Oc
.\" .Ed
.Pp
Most keywords can be abbreviated.
Parsing of the
.Dq Li "+"
options is very simplistic \(em a value must not be
separated from its keyword by whitespace.
The following
.Ar keyword Ns
s are currently available:
.sp 1
.nf
.ta \w'domain=NAMEXX'u +\w'(deb)XXX'u
Keyword	Abbrev.	Meaning [default]

[no]debug	(deb)	turn on/off debugging mode [deb]
[no]d2		turn on/off extra debugging mode [nod2]
[no]recurse	(rec)	use/don't use recursive lookup [rec]
retry=#	(ret)	set number of retries to # [4]
time=#	(ti)	set timeout length to # seconds [4]
[no]ko		keep open option (implies vc) [noko]
[no]vc		use/don't use virtual circuit [novc]
[no]defname	(def)	use/don't use default domain name [def]
[no]search	(sea)	use/don't use domain search list [sea]
domain=NAME	(do)	set default domain name to NAME
[no]ignore	(i)	ignore/don't ignore trunc. errors [noi]
[no]primary	(pr)	 use/don't use primary server [nopr]
[no]aaonly	(aa)	authoritative query only flag [noaa]
[no]sort	(sor)	sort resource records [nosor]
[no]cmd		echo parsed arguments [cmd]
[no]stats	(st)	print query statistics [st]
[no]Header	(H)	print basic header [H]
[no]header	(he)	print header flags [he]
[no]ttlid	(tt)	print TTLs [tt]
[no]cl			print class info [nocl]
[no]qr		print outgoing query [noqr]
[no]reply	(rep)	print reply [rep]
[no]ques	(qu)	print question section [qu]
[no]answer	(an)	print answer section [an]
[no]author	(au)	print authoritative section [au]
[no]addit	(ad)	print additional section [ad]
pfdef		set to default print flags
pfmin		set to minimal default print flags
pfset=#		set print flags to #
		(# can be hex/octal/decimal)
pfand=#		bitwise and print flags with #
pfor=#		bitwise or print flags with #
.fi
.sp 1
The
.Ar retry
and
.Ar time
keywords affect the retransmission strategy used by resolver
library when sending datagram queries.
The algorithm is as follows:
.Bd -literal -offset indent
for i = 0 to retry \- 1
    for j = 1 to num_servers
	send_query
	wait((time * (2**i)) / num_servers)
    end
end
.Ed
.Pp
.Sy Note:
.Nm
always uses a value of 1 for
.Va num_servers .
.El
.Sh DETAILS
.Nm
once required a slightly modified version of the BIND
.Xr resolver 3
library.
BIND's resolver has (as of BIND 4.9) been augmented to work properly with
.Nm dig .
Essentially,
.Nm
is a straight-forward
(albeit not pretty) effort of parsing arguments and setting appropriate
parameters.
.Nm
uses resolver routines
.Fn res_init ,
.Fn res_mkquery ,
.Fn res_send
as well as accessing the
.Va _res
structure.
.Sh ENVIRONMENT
.Bl -tag -width Ev -compact
.It Ev LOCALRES
file to use in place of
.Pa /etc/resolv.conf
.It Ev LOCALDEF
default environment file
.El
.Sh FILES
.Bl -tag -width /etc/resolv.conf -compact
.It Pa /etc/resolv.conf
initial domain name and name server addresses
.It Pa DiG.env
default save file for default options
.El
.Sh SEE ALSO
.Xr resolver 3 ,
.Xr resolv.conf 5 ,
.Xr named 8 ,
.Xr nslookup 8
.Sh AUTHORS
Steve Hotz
hotz@@isi.edu
.Sh ACKNOWLEDGMENTS
.Nm
uses functions from
.Xr nslookup 8
authored by Andrew Cherenson.
.Sh BUGS
.Nm
has a serious case of
.Dq creeping featurism
\(em the result of
considering several potential uses during it's development.
It would probably benefit from a rigorous diet.
Similarly, the print flags and granularity of the items they specify
make evident their rather ad-hoc genesis.
.Pp
.Nm
does not consistently exit nicely (with appropriate status)
when a problem occurs somewhere in the resolver.
.Sy ( Note:
most of the common exit cases are handled).
This is particularly annoying when running in batch mode.
If the resolver exits abnormally (and is not caught), the entire
batch aborts; when such an event is trapped,
.Nm
simply continues with the next query.
@


1.20
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.19 2000/10/17 19:29:15 aaron Exp $
@


1.19
log
@Clean.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.18 2000/03/19 17:57:09 aaron Exp $
d489 1
a489 1
.Sh AUTHOR
@


1.18
log
@Remove hard sentence breaks. Add $OpenBSD$ tags where appropriate. Some other
cleanup along the way.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.17 2000/03/14 21:31:37 aaron Exp $
d100 6
a105 7
(domain information groper) is a flexible command line tool
which can be used to gather information from the Domain
Name System servers.
.Nm
has two modes: simple interactive mode
which makes a single query, and batch which executes a query for
each in a list of several query lines.
d118 1
d122 1
a122 2
may be either a domain name or a dot-notation
Internet address.
d130 1
a130 3
If your system does not support DNS, you may
.Em have
to specify a
d132 2
a133 2
Alternatively, if there is a server
at your disposal somewhere, all that is required is that
d135 1
a135 2
be present and indicate where the default
name servers reside, so that
d137 1
a137 2
itself can be
resolved.
d146 3
a148 4
will affect
the standard resolver library and potentially several
programs which use it.) As an option, the user may set the
environment variable
d150 1
a150 2
to name a file which is to
be used instead of
d153 1
a153 2
is specific
to the
d155 1
a155 2
resolver and not referenced by the standard
resolver).
d158 1
a158 2
variable is not set or the file
is not readable then
d166 1
a166 2
for a convenient way to specify inverse address
query.
d168 1
a168 2
is the type of information (DNS query type) that
you are requesting.
d205 1
a205 2
can be used to specify a class and/or a type of
query.
d216 1
a216 2
twice, or set
query-class using
d224 1
a224 2
is used to included an argument that is simply not
parsed.
d227 1
a227 2
in batch
mode.
d230 2
a231 3
in a list of queries, you can avoid the overhead of doing
so, and still have the domain name on the command line
as a reference.
d246 1
a246 2
one can
simply
d262 1
a262 2
Other options
may still appear on command line, and will be in
d265 1
a265 2
Time in seconds between start of successive
queries when running in batch mode.
d268 1
a268 2
commands running
roughly in sync.
d277 1
a277 2
command
for response time comparison.
d283 1
a283 2
is present, it
replaces
d288 2
a289 4
This may specify either an
integer value to be included in the type field
or use the abbreviated mnemonic as discussed
above (i.e., mx = T_MX).
d292 2
a293 4
This may specify either an
integer value to be included in the class field
or use the abbreviated mnemonic as discussed
above (i.e., in = C_IN).
d297 4
a300 7
environment
(defaults, print options, etc.), after
all of the arguments are parsed, should be saved
to a file to become the default environment.
Useful if you do not like the standard set of
defaults and do not desire to include a
large number of options each time
d303 2
a304 3
The environment consists of resolver state
variable flags, timeout, and retries as well as
the flags detailing
d309 1
a309 2
is set
to the name of a file, this is where the default
d320 1
a320 3
resolver,
and will not affect operation of the standard
resolver library.
d326 2
a327 2
int the working directory,
or the file specified by the shell environment variable
d329 2
a330 3
If the file exists and is readable, then the
environment is restored from it
before any arguments are parsed.
d332 1
a332 2
This flag only affects
batch query runs.
d335 1
a335 2
is
specified on a line in a
d339 2
a340 3
environment after the arguments are parsed,
becomes the default environment for the duration of
the batch file, or until the next line which specifies
d347 1
a347 2
environment (as read initially
or set by
d349 1
a349 2
switch) is to be restored before each query
(line) in a
d356 1
a356 3
environment
does not stick; that is, options specified on a single line
in a
d358 2
a359 2
batch file will remain in effect for
subsequent lines (i.e., they are not restored to the
d367 1
a367 2
is used to specify an option to be changed in the
query packet or to change
a468 7
.Sh FILES
.Bl -tag -width Pa -compact -offset indent
.It Pa /etc/resolv.conf
initial domain name and name server addresses
.It Pa DiG.env
default save file for default options
.El
d470 1
a470 1
.Bl -tag -width Ev -compact -offset indent
d477 12
d504 2
a505 3
Similarly, the print flags
and granularity of the items they specify make evident their
rather ad hoc genesis.
d511 1
a511 2
most of the common
exit cases are handled).
a516 5
.Sh SEE ALSO
.Xr resolver 3 ,
.Xr resolv.conf 5 ,
.Xr named 8 ,
.Xr nslookup 8
@


1.17
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.16 2000/03/04 22:19:28 aaron Exp $
d106 2
a107 2
each in a list of several query lines. All query options are
accessible from the command line.
d123 2
a124 1
Internet address. If this optional field is omitted,
d130 2
a131 2
using the domain name system resolver (i.e., BIND). If your
system does not support DNS, you may
d134 2
a135 1
dot-notation address. Alternatively, if there is a server
d142 2
a143 1
resolved. See
d164 2
a165 1
resolver). If the
d180 2
a181 1
you are requesting. If omitted, the default is
d201 2
a202 2
is the network class requested in the query. If
omitted, the default is
d224 2
a225 1
= T_ANY. To specify
d239 2
a240 1
parsed. This may be useful if running
d243 2
a244 1
mode. Instead of resolving every
d248 2
a249 1
as a reference. Example:
d269 2
a270 1
batch mode. The file contains a list
d272 9
a280 2
are to be executed successively. Lines beginning
with ';', '#', or '\\n' are ignored. Other options
d285 2
a286 2
queries when running in batch mode. Can be used
to keep two or more batch
d289 2
a290 1
roughly in sync. Default is zero.
d292 3
a294 2
Port number. Query a name server listening to a
non-standard port number. Default is 53.
d299 3
a301 4
for response time comparison. This rather
inelegantly makes a call to the shell. The last
three lines of statistics are printed for the
command:
d310 2
a311 1
Specify the type of query. This may specify either an
d316 2
a317 1
Specify the class of query. This may specify either an
d343 2
a344 1
environment is saved. If not, the file
d368 2
a369 1
batch query runs. When
d412 2
a413 2
output specifics. Many
of these are the same parameters accepted by
d424 2
a425 1
Most keywords can be abbreviated. Parsing of the
d428 2
a429 1
separated from its keyword by whitespace. The following
d476 2
a477 1
library when sending datagram queries. The algorithm is as follows:
d496 2
a497 2
library. BIND's resolver has (as of BIND 4.9) been augmented to work
properly with
d540 3
a542 2
considering several potential uses during it's development. It would
probably benefit from a rigorous diet. Similarly, the print flags
d551 3
a553 2
exit cases are handled). This is particularly annoying when running in
batch mode. If the resolver exits abnormally (and is not caught), the entire
@


1.16
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.15 1999/07/09 13:35:54 aaron Exp $
d379 1
a379 1
subsequent lines (i.e. they are not restored to the
@


1.15
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.14 1999/07/07 10:50:14 aaron Exp $
d405 1
a405 1
separated from its keyword by white space. The following
@


1.14
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.13 1999/06/05 22:17:34 aaron Exp $
d491 1
a491 1
.It Pa DiG.env		
@


1.13
log
@remove trailing whitespace, some Nm cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.12 1999/06/05 01:29:39 aaron Exp $
d66 1
a67 1
.Dt dig 1
@


1.12
log
@more .Os cleansing
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.11 1999/05/28 23:00:07 aaron Exp $
d88 1
a88 1
.Cm + Ns Ar keyword Ns 
d112 5
a116 5
.Bd -filled -offset indent 
.Ic dig 
.Cm @@ Ns Ar server 
.Ar domain 
.Ar query-type 
d137 1
a137 1
name servers reside, so that 
d236 2
a237 2
mode. Instead of resolving every 
.Cm @@ Ns Ar server-domain-name 
d383 1
a383 1
.It Xo Cm + Ns Ar keyword Ns 
d395 2
a396 2
.\" .Bd -ragged -offset indent 
.\" .Cm + Ns Ar keyword Ns 
d447 1
a447 1
The 
d449 1
a449 1
and 
@


1.11
log
@more .El madness
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.10 1999/05/16 19:58:14 alex Exp $
d66 1
a66 1
.Os OpenBSD
@


1.10
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.9 1999/03/11 01:35:07 pjanzen Exp $
d466 1
@


1.9
log
@fix more comma splices that involve misuse of conjunctive adverbs
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.8 1998/12/16 02:47:52 aaron Exp $
a529 1
.Xr named 8 ,
d532 1
@


1.8
log
@more .Nm fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.7 1998/07/24 00:43:58 espie Exp $
d375 1
a375 1
does not stick, hence options specified on a single line
@


1.7
log
@
Man pages Xrefs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.6 1998/05/22 00:47:27 millert Exp $
d72 1
a72 1
.Nm
@


1.6
log
@bind 4.9.6, 4.9.7 comming soon.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.5 1998/03/16 11:02:03 d Exp $
d532 1
a532 1
.Xr resolve.conf 5 ,
@


1.5
log
@.Nd
@
text
@d1 2
a2 2
.\"	$OpenBSD: dig.1,v 1.4 1998/03/09 06:39:52 d Exp $
.\" $From: dig.1,v 8.1 1994/12/15 06:24:10 vixie Exp $
@


1.4
log
@<deraadt> Almost wasting your time fixing named man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.3 1998/02/03 00:29:23 millert Exp $
d69 2
a70 1
dig \- send domain name query packets to name servers
d72 1
a72 1
.Nm dig
@


1.3
log
@s/@@CMD_EXT_U@@/1
@
text
@d1 1
a1 1
.\"	$OpenBSD: dig.1,v 1.2 1997/03/12 10:42:12 downsj Exp $
d7 2
a8 2
.\"    The Regents of the University of California.  All rights reserved.
.\" 
d13 1
a13 1
.\"    notice, this list of conditions and the following disclaimer.
d15 2
a16 2
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
d18 1
a18 1
.\"    must display the following acknowledgement:
d22 3
a24 3
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\" 
d28 1
a28 1
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
d38 1
a38 1
.\" 
d45 1
a45 1
.\" 
d48 1
a48 1
.\" OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
d60 1
a60 1
.\"       dig.1   2.0 (USC-ISI) 8/30/90
d65 4
a68 2
.TH DIG 1 "August 30, 1990"
.SH NAME
d70 30
a99 11
.SH SYNOPSIS
.B dig 
.RI [ @@\fIserver\fP ]
.I domain
.RI [ "<query-type>" ]
.RI [ "<query-class>" ]
.RI [ "+<query-option>" ]
.RI [ "\-<dig-option>" ]
.RI [ "%comment" ]
.SH DESCRIPTION
\fIDig\fP (domain information groper) is a flexible command line tool
d101 3
a103 1
Name System servers. \fIDig\fP has two modes: simple interactive mode
d107 11
a117 5
.PP
The usual simple use of \fIdig\fP will take the form:
.sp 1
	dig  @@server  domain   query-type  query-class
.sp 1
d119 2
a120 1
.IP \fIserver\fP 
d122 2
a123 1
Internet address. If this optional field is omitted, \fIdig\fP
d125 3
a127 2
.sp 1
\fBNote:\fP If a domain name is specified, this will be resolved
d129 20
a148 10
system does not support DNS,  you may \fIhave\fP to specify a
dot-notation address.  Alternatively, if there is a server
at your disposal somewhere,  all that is required is that
/etc/resolv.conf be present and indicate where the default
name servers  reside,  so that  \fIserver\fP itself can be
resolved. See 
.IR resolver (@@FORMAT_EXT@@)
for information on /etc/resolv.conf.
(WARNING: Changing /etc/resolv.conf will affect
the standard  resolver library and  potentially several
d150 17
a166 6
environment variable LOCALRES to name a file which is to
be used instead of /etc/resolv.conf (LOCALRES is specific
to the \fIdig\fP resolver and  not referenced by the standard
resolver). If the LOCALRES variable is not set or the file
is not readable then /etc/resolv.conf will be used.
.IP \fIdomain\fP
d168 4
a171 1
See OPTIONS [-x] for convenient way to specify inverse address
d173 1
a173 1
.IP \fIquery-type\fP 
d175 3
a177 1
you are requesting. If omitted, the default is "a" (T_A = address).
d194 1
a194 1
.IP \fIquery-class\fP
d196 3
a198 1
omitted, the default is "in" (C_IN = Internet).
d209 29
a237 12
\fBNote:\fP
"Any" can be used to specify a class and/or a type of
query. \fIDig\fP will parse the first occurrence of "any"
to mean query-type = T_ANY. To specify query-class =
C_ANY you must either specify "any" twice, or set
query-class using "\-c" option (see below).
.SH OTHER OPTIONS
.IP "%ignored-comment"
"%" is used to included an argument that is simply not
parsed.  This may be useful  if running \fIdig\fP in batch
mode. Instead of resolving every @@server-domain-name in
a list of queries, you can avoid the overhead of doing
d240 10
a249 9
.sp 1
	dig  @@128.9.0.32  %venera.isi.edu  mx  isi.edu
.sp 1
.IP "\-<dig option>"
"\-" is used to specify an option which effects the
operation of \fIdig\fP. The following options are currently
available (although not guaranteed to be useful):
.RS
.IP "\-x \fIdot-notation-address\fP"
d251 9
a259 4
Instead of "dig 32.0.9.128.in-addr.arpa" one can
simply "dig -x 128.9.0.32".
.IP "\-f \fIfile\fP"
File for \fIdig\fP batch mode. The file contains a list
d265 1
a265 1
.IP "\-T \fItime\fP"
d268 3
a270 1
to keep two or more batch \fIdig\fP commands running
d272 1
a272 1
.IP "\-p \fIport\fP"  
d275 3
a277 3
.IP "\-P[\fIping-string\fP]"
After query returns, execute a 
.IR ping (@@SYS_OPS_EXT@@)
d280 2
a281 2
unelegantly makes a call to the shell. The last
three lines of statistics is printed for the
d283 9
a291 7
.sp 1
	ping \-s server_name 56 3
.sp 1
If the optional "ping string" is present, it
replaces "ping \-s" in the shell command.
.IP "\-t \fIquery-type\fP"
Specify type of query. May specify either an
d294 3
a296 3
above (i.e., mx  = T_MX).
.IP "\-c \fIquery-class\fP"  
Specify class of query. May specify either an
d300 4
a303 2
.IP "\-envsav"
This flag specifies that the \fIdig\fP environment
d309 3
a311 1
large number of options each time \fIdig\fP is used.
d314 6
a319 2
the flags detailing \fIdig\fP output (see below).
If the shell environment variable LOCALDEF is set
d321 10
a330 4
\fIdig\fP environment is saved. If not, the file
"DiG.env" is created in the current working directory.
.sp 1
\fBNote:\fP LOCALDEF is specific to the \fIdig\fP resolver,
d334 5
a338 1
Each time \fIdig\fP is executed, it looks for "./DiG.env"
d340 3
a342 2
LOCALDEF. If such file exists and is readable, then the
environment is restored from this file
d344 1
a344 1
.IP "\-envset"
d346 8
a353 3
batch query runs. When "\-envset" is
specified on a line in a \fIdig\fP batch file,
the \fIdig\fP environment after the arguments are parsed,
d356 18
a373 7
"\-envset".
.IP "\-[no]stick"
This flag only affects batch query runs.
It specifies that the \fIdig\fP environment (as read initially
or set by "\-envset" switch) is to be restored before each query
(line) in a \fIdig\fP batch file.
The default "\-nostick" means that the \fIdig\fP environment
d375 3
a377 1
in a \fIdig\fP batch file will remain in effect for
d379 25
a403 15
"sticky" default).

.RE
.IP "+<query option>"
"+" is used to specify an option to be changed in the
query packet or to change \fIdig\fP output specifics. Many
of these are the same parameters accepted by 
.IR nslookup (@@SYS_OPS_EXT@@).
If an option requires a parameter, the form is as
follows:
.sp 1
	+keyword[=value]
.sp 1
Most keywords can be abbreviated.  Parsing of the "+"
options  is very  simplistic \(em a value must not be
d405 2
a406 1
keywords are currently available:
d446 5
a450 1
The retry and time options affect the retransmission strategy used by resolver 
d452 1
a452 3
.sp 1
.in +5n
.nf
d459 16
a474 9
.fi
.in -5n
.sp 1
(Note: \fIdig\fP always uses a value of 1 for num_servers.) 
.SH DETAILS
\fIDig\fP once required a slightly modified version of the BIND 
.IR resolver (@@LIB_NETWORK_EXT@@)
library.  BIND's resolver has (as of BIND 4.9) been augmented to work
properly with \fIDig\fP.  Essentially, \fIDig\fP is a straight-forward
d476 26
a501 14
parameters.  \fIDig\fP uses resolver routines res_init(), res_mkquery(),
res_send() as well as accessing _res structure. 
.SH FILES
.ta \w'/etc/resolv.confXX'u
/etc/resolv.conf	initial domain name and name server 
\./DiG.env		default save file for default options
.br
	addresses
.SH ENVIRONMENT
LOCALRES	file to use in place of /etc/resolv.conf
.br
LOCALDEF	default environment file
.SH AUTHOR
Steve Hotz 
d503 4
a506 3
.SH ACKNOWLEDGMENTS
\fIDig\fP uses functions from 
.IR nslookup (@@SYS_OPS_EXT@@)
d508 7
a514 4
.SH BUGS
\fIDig\fP has a serious case of "creeping featurism" -- the result of
considering several potential uses during it's development.  It would
probably benefit from a rigorous diet.  Similarly, the print flags
d517 16
a532 9
.PP
\fIDig\fP does not consistently exit nicely (with appropriate status)
when a problem occurs somewhere in the resolver (NOTE: most of the common
exit cases are handled).  This is particularly annoying when running in
batch mode.  If it exits abnormally (and is not caught), the entire
batch aborts; when such an event is trapped, \fIdig\fP simply
continues with the next query.
.SH SEE ALSO
@@INDOT@@named(@@SYS_OPS_EXT@@),  resolver(@@LIB_NETWORK_EXT@@),  resolver(@@FORMAT_EXT@@),  nslookup(@@SYS_OPS_EXT@@)
@


1.2
log
@BIND 4.9.5-P1.

libresolv and include are required until the new resolver gets integrated
into libc.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d65 1
a65 1
.TH DIG @@CMD_EXT_U@@ "August 30, 1990"
@


1.1
log
@netbsd: bind 4.9.3
@
text
@d1 2
a2 3
.\"	$NetBSD: dig.1,v 1.1 1996/02/02 15:27:16 mrg Exp $
.\"
.\" $Id: dig.1,v 8.1 1994/12/15 06:24:10 vixie Exp 
d65 1
a65 1
.TH DIG 1 "August 30, 1990"
d103 1
a103 1
.IR resolver (5)
d192 1
a192 1
.IR ping (8)
d262 1
a262 1
.IR nslookup (8).
d328 1
a328 1
.IR resolver (3)
d349 1
a349 1
.IR nslookup (8)
d365 1
a365 1
named(8),  resolver(3),  resolver(5),  nslookup(8)
@

