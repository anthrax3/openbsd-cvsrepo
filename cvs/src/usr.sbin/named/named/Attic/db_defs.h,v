head	1.5;
access;
symbols
	OPENBSD_3_2:1.3.0.18
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.16
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.02.21.08.59.45;	author jakob;	state dead;
branches;
next	1.4;

1.4
date	2002.11.14.02.54.22;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.05.22.00.47.31;	author millert;	state Exp;
branches
	1.3.14.1
	1.3.16.1
	1.3.18.1;
next	1.2;

1.2
date	97.03.12.10.42.21;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.02.19.19.54.09;	author dm;	state Exp;
branches;
next	;

1.3.14.1
date	2002.11.14.23.44.14;	author millert;	state Exp;
branches;
next	;

1.3.16.1
date	2002.11.14.23.34.39;	author millert;	state Exp;
branches;
next	;

1.3.18.1
date	2002.11.14.23.50.10;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove bind4; ok deraadt@@
@
text
@/*	$OpenBSD: db_defs.h,v 1.4 2002/11/14 02:54:22 millert Exp $	*/

/*
 *	from db.h	4.16 (Berkeley) 6/1/90
 *	$From: db_defs.h,v 8.6 1997/06/01 20:34:34 vixie Exp $
 */

/*
 * ++Copyright++ 1985, 1990
 * -
 * Copyright (c) 1985, 1990
 *    The Regents of the University of California.  All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 * 	This product includes software developed by the University of
 * 	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * -
 * Portions Copyright (c) 1993 by Digital Equipment Corporation.
 * 
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies, and that
 * the name of Digital Equipment Corporation not be used in advertising or
 * publicity pertaining to distribution of the document or software without
 * specific, written prior permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
 * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 * -
 * --Copyright--
 */

/*
 * Global definitions for data base routines.
 */

#define INVBLKSZ	7	/* # of namebuf pointers per block */
#define INVHASHSZ	919	/* size of inverse hash table */

	/* max length of data in RR data field */
#define MAXDATA		(3*MAXDNAME + 5*INT32SZ)

#define DB_ROOT_TIMBUF	3600
#define TIMBUF		300

/*
 * Hash table structures.
 */
struct databuf {
	struct databuf	*d_next;	/* linked list */
#ifdef STATS
	struct nameser	*d_ns;		/* NS from whence this came */
#endif
	u_int32_t	d_ttl;		/* time to live */
					/* if d_zone == DB_Z_CACHE, then
					 * d_ttl is actually the time when
					 * the record will expire.
					 * otherwise (for authoritative
					 * primary and secondary zones),
					 * d_ttl is the time to live.
					 */
	unsigned	d_flags :7;	/* see below */
	unsigned	d_cred :3;	/* DB_C_{??????} */
	unsigned	d_clev :6;
	int16_t		d_zone;		/* zone number or 0 for the cache */
	int16_t		d_class;	/* class number */
	int16_t		d_type;		/* type number */
	int16_t		d_size;		/* size of data area */
	u_int32_t	d_rcnt;
#ifdef NCACHE
	unsigned	d_rcode :4;	/* rcode added for negative caching */
#endif
	u_int16_t	d_nstime;	/* NS response time, milliseconds */
	u_char		d_data[sizeof(char*)]; /* malloc'd (padded) */
};
#define DATASIZE(n) (sizeof(struct databuf) - sizeof(char*) + n)

/*
 * d_flags definitions
 */
#define DB_F_HINT       0x01		/* databuf belongs to fcachetab */
#define DB_F_ACTIVE     0x02		/* databuf is linked into a cache */

/*
 * d_cred definitions
 */
#define	DB_C_ZONE	4		/* authoritative zone - best */
#define	DB_C_AUTH	3		/* authoritative answer */
#define	DB_C_ANSWER	2		/* non-authoritative answer */
#define	DB_C_ADDITIONAL	1		/* additional data */
#define	DB_C_CACHE	0		/* cache - worst */

struct namebuf {
	u_int		n_hashval;	/* hash value of n_dname */
	struct namebuf	*n_next;	/* linked list */
	struct databuf	*n_data;	/* data records */
	struct namebuf	*n_parent;	/* parent domain */
	struct hashbuf	*n_hash;	/* hash table for children */
	char		_n_name[sizeof(void*)];	/* Counted str, malloc'ed. */
};
#define NAMESIZE(n) (sizeof(struct namebuf) - sizeof(void*) + 1 + n + 1)
#define NAMELEN(nb) ((nb)._n_name[0])
#define NAME(nb)    ((nb)._n_name + 1)

#ifdef INVQ
struct invbuf {
	struct invbuf	*i_next;	/* linked list */
	struct namebuf	*i_dname[INVBLKSZ]; /* domain name */
};
#endif

struct hashbuf {
	int		h_size;		/* size of hash table */
	int		h_cnt;		/* number of entries */
	struct namebuf	*h_tab[1];	/* malloc'ed as needed */
};
#define HASHSIZE(s) (s*sizeof(struct namebuf *) + 2*sizeof(int))

#define HASHSHIFT	3
#define HASHMASK	0x1f

/*
 * Flags to updatedb
 */
#define DB_NODATA	0x01	/* data should not exist */
#define DB_MEXIST	0x02	/* data must exist */
#define DB_DELETE	0x04	/* delete data if it exists */
#define DB_NOTAUTH	0x08	/* must not update authoritative data */
#define DB_NOHINTS      0x10	/* don't reflect update in fcachetab */
#define DB_PRIMING	0x20	/* is this update the result of priming? */

#define DB_Z_CACHE      (0)	/* cache-zone-only db_dump() */
#define DB_Z_ALL        (-1)	/* normal db_dump() */

/*
 * Error return codes
 */
#define OK		0
#define NONAME		-1
#define NOCLASS		-2
#define NOTYPE		-3
#define NODATA		-4
#define DATAEXISTS	-5
#define NODBFILE	-6
#define TOOMANYZONES	-7
#define GOODDB		-8
#define NEWDB		-9
#define AUTH		-10

/*
 * getnum() options
 */
#define GETNUM_NONE	0x00	/* placeholder */
#define GETNUM_SERIAL	0x01	/* treat as serial number */
#define GETNUM_SCALED	0x02	/* permit "k", "m" suffixes, scale result */
@


1.4
log
@Sync with bind-4.9.11-REL; fixes the problems listed in:
    http://www.isc.org/products/BIND/bind-security.html
including a buffer overflow that could lead to remote code execution.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_defs.h,v 1.3 1998/05/22 00:47:31 millert Exp $	*/
@


1.3
log
@bind 4.9.6, 4.9.7 comming soon.
@
text
@d1 1
a1 1
/*	$OpenBSD: db_defs.h,v 1.2 1997/03/12 10:42:21 downsj Exp $	*/
d71 1
a71 1
#define MAXDATA		2048
@


1.3.18.1
log
@Apply http://www.isc.org/products/BIND/patches/bind4910.diff
Fixes bugs listed in http://www.isc.org/products/BIND/bind-security.html
@
text
@d1 1
a1 1
/*	$OpenBSD: db_defs.h,v 1.3 1998/05/22 00:47:31 millert Exp $	*/
d71 1
a71 1
#define MAXDATA		(3*MAXDNAME + 5*INT32SZ)
@


1.3.14.1
log
@Apply http://www.isc.org/products/BIND/patches/bind4910.diff
Fixes bugs listed in http://www.isc.org/products/BIND/bind-security.html
@
text
@d1 1
a1 1
/*	$OpenBSD: db_defs.h,v 1.3 1998/05/22 00:47:31 millert Exp $	*/
d71 1
a71 1
#define MAXDATA		(3*MAXDNAME + 5*INT32SZ)
@


1.3.16.1
log
@Apply http://www.isc.org/products/BIND/patches/bind4910.diff
Fixes bugs listed in http://www.isc.org/products/BIND/bind-security.html
@
text
@d1 1
a1 1
/*	$OpenBSD: db_defs.h,v 1.3 1998/05/22 00:47:31 millert Exp $	*/
d71 1
a71 1
#define MAXDATA		(3*MAXDNAME + 5*INT32SZ)
@


1.2
log
@BIND 4.9.5-P1.

libresolv and include are required until the new resolver gets integrated
into libc.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d5 1
a5 1
 *	$From: db_defs.h,v 8.5 1996/08/27 08:33:23 vixie Exp $
d81 3
d99 1
a101 4
#endif
	unsigned	d_rcnt :12;
#ifdef STATS
	struct nameser	*d_ns;		/* NS from whence this came */
@


1.1
log
@netbsd: bind 4.9.3
@
text
@d1 1
a1 1
/*	$NetBSD: db_defs.h,v 1.1 1996/02/02 15:28:06 mrg Exp $	*/
d5 1
a5 1
 *	$Id: db_defs.h,v 8.3 1995/06/19 20:55:40 vixie Exp 
a94 1
	int16_t		d_mark;		/* place to mark data */
d97 1
a97 1
	int16_t		d_rcode;	/* rcode added for negative caching */
d99 1
a99 1
	int16_t		d_rcnt;
d103 1
a103 1
/*XXX*/	u_int32_t       d_nstime;       /* NS response time, milliseconds */
d112 1
a123 1
	char		*n_dname;	/* domain name */
d129 1
d131 3
@
