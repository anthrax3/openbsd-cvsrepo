head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.8
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.16
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.8
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.12
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.10
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.6
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.2.0.30
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.28
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.26
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.24
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.22
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.11.06.03.24.30;	author mmcc;	state Exp;
branches;
next	1.6;
commitid	QVxNiyto42734Prl;

1.6
date	2012.03.04.04.05.15;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2009.10.27.23.59.53;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2005.05.16.03.12.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.08.01.18.32.20;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.04.15.15.06.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@err(1, "%s", "")  ->  err(1, NULL)

Discussed with schwarze@@
@
text
@/*
 * Copyright (c) 1994 Christos Zoulas
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Christos Zoulas.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <err.h>
#include <stdlib.h>
#include <string.h>

#include "util.h"

/* emalloc():
 *	Error checked malloc
 */
void *
emalloc(size_t s)
{
	void *ptr = malloc(s);
	if (ptr == NULL)
		err(1, NULL);
	return ptr;
}


/* erealloc():
 *	Error checked realloc
 */
void *
erealloc(void *p, size_t s)
{
	void *ptr = realloc(p, s);
	if (ptr == NULL)
		err(1, NULL);
	return ptr;
}


/* get_line():
 *	Read a line from a file parsing continuations ending in \
 *	and eliminating trailing newlines.
 */
char *
get_line(FILE *fp, size_t *size)
{
	size_t s, len = 0;
	char *buf = NULL, *ptr;
	int cnt = 1;

	while (cnt) {
		if ((ptr = fgetln(fp, &s)) == NULL) {
			*size = len;
			return buf;
		}
		if (ptr[s - 1] == '\n')		/* the newline may be missing at EOF */
			s--;				/* forget newline */
		if (s && (cnt = (ptr[s - 1] == '\\')))	/* check for \\ */
			s--;				/* forget \\ */

		buf = erealloc(buf, len + s + 1);
		memcpy(buf + len, ptr, s);
		len += s;
		buf[len] = '\0';
	}
	*size = len;
	return buf;
}
@


1.6
log
@In preparation for getline and getdelim additions to libc, rename getline()
occurrences to get_line().
Based on a diff from Jan Klemkow <j-dot-klemkow-at-wemelug-dot-de> to tech.
@
text
@d46 1
a46 1
		err(1, "%s", "");
d59 1
a59 1
		err(1, "%s", "");
@


1.5
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d64 1
a64 1
/* getline():
d69 1
a69 1
getline(FILE *fp, size_t *size)
@


1.4
log
@knf
@
text
@a31 4
#ifndef lint
static char *rcsid = "$Id: util.c,v 1.3 2004/08/01 18:32:20 deraadt Exp $";
#endif

@


1.3
log
@ansi cleanup; khalek@@linuxgamers.net
@
text
@d33 1
a33 1
static char *rcsid = "$Id: util.c,v 1.2 1997/04/15 15:06:13 deraadt Exp $";
d48 4
a51 5
    void *ptr = malloc(s);
    if (ptr == NULL)
	/* Crappy gcc warning! */
	err(1, "%s", "");
    return ptr;
d61 4
a64 5
    void *ptr = realloc(p, s);
    if (ptr == NULL)
	/* Crappy gcc warning! */
	err(1, "%s", "");
    return ptr;
d75 18
a92 9
    size_t s, len = 0;
    char *buf = NULL;
    char *ptr;
    int cnt = 1;

    while (cnt) {
	if ((ptr = fgetln(fp, &s)) == NULL) {
	    *size = len;
	    return buf;
d94 2
a95 12
	if (ptr[s - 1] == '\n')		/* the newline may be missing at EOF */
	    s--;			/* forget newline */
	if (s && (cnt = (ptr[s - 1] == '\\')))	/* check for \\ */
	    s--;			/* forget \\ */

	buf = erealloc(buf, len + s + 1);
	memcpy(buf + len, ptr, s);
	len += s;
	buf[len] = '\0';
    }
    *size = len;
    return buf;
@


1.2
log
@handle \\ at start of line; christos
@
text
@d33 1
a33 1
static char *rcsid = "$Id: util.c,v 1.1.1.1 1995/10/18 08:47:57 deraadt Exp $";
d46 1
a46 2
emalloc(s)
    size_t s;
d60 1
a60 3
erealloc(p, s)
    void *p;
    size_t s;
d75 1
a75 3
getline(fp, size)
    FILE *fp;
    size_t *size;
@


1.1
log
@Initial revision
@
text
@d33 1
a33 1
static char *rcsid = "$Id: util.c,v 1.2 1995/04/24 13:25:56 cgd Exp $";
d94 1
a94 1
	if ((cnt = (ptr[s - 1] == '\\')))	/* check for \\ */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
