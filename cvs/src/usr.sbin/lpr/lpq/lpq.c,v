head	1.23;
access;
symbols
	OPENBSD_6_1:1.23.0.4
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.22.0.4
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.22.0.6
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.20.0.6
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.19.0.16
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.19.0.14
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.12
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.10
	OPENBSD_5_0:1.19.0.8
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.19.0.6
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.4
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.18.0.8
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.4
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.16.0.6
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.4
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.2
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.11.0.2
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.18
	OPENBSD_2_8:1.7.0.16
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.14
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.12
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.10
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.8
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.6
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2016.02.29.17.26.02;	author jca;	state Exp;
branches;
next	1.22;
commitid	aNWKwmYdfVagOC9V;

1.22
date	2015.02.09.23.00.14;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	822YD61EeG0Xl9Na;

1.21
date	2015.01.16.06.40.18;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	Uu5nFG3wCl0LACBb;

1.20
date	2013.11.24.21.32.32;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2009.10.27.23.59.52;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.26.06.30.36;	author otto;	state Exp;
branches;
next	1.17;

1.17
date	2008.05.22.08.06.57;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2007.02.16.13.29.04;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.09.03.20.23.26;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.23.36.53;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.08.01.53.43;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.20.23.13.50;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.02.16.21.28.04;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.12.06.03.12.31;	author ericj;	state Exp;
branches;
next	1.9;

1.9
date	2001.11.23.03.58.18;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.30.17.38.13;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.01.17.16.12.44;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.10.26.04.16.35;	author imp;	state Exp;
branches;
next	1.5;

1.5
date	96.07.04.05.41.56;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.05.15.13.41.56;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.05.06.06.39.38;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.04.11.52.47;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Move ckqueue() to common_source/common.c

Patch from Chris Bennett, ok tb@@
@
text
@/*	$OpenBSD: lpq.c,v 1.22 2015/02/09 23:00:14 deraadt Exp $	*/
/*	$NetBSD: lpq.c,v 1.9 1999/12/07 14:54:47 mrg Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Spool Queue examination program
 *
 * lpq [-a] [-l] [-Pprinter] [user...] [job...]
 *
 * -a show all non-null queues on the local machine
 * -l long output
 * -P used to identify printer as per lpr/lprm
 */


#include <ctype.h>
#include <signal.h>
#include <dirent.h>
#include <err.h>
#include <errno.h>
#include <unistd.h>
#include <stdlib.h>
#include <stdio.h>
#include <limits.h>
#include <syslog.h>

#include "lp.h"
#include "lp.local.h"
#include "pathnames.h"

int	 requ[MAXREQUESTS];	/* job number of spool entries */
int	 requests;		/* # of spool requests */
char	*user[MAXUSERS];	/* users to process */
int	 users;			/* # of users in user array */

volatile sig_atomic_t gotintr;

static __dead void usage(void);

int
main(int argc, char **argv)
{
	int	ch, aflag, lflag;
	char	*buf, *cp;
	long	l;

	effective_uid = geteuid();
	real_uid = getuid();
	effective_gid = getegid();
	real_gid = getgid();
	PRIV_END;	/* be safe */

	if (gethostname(host, sizeof(host)) != 0)
		err(1, "gethostname");
	openlog("lpq", 0, LOG_LPR);

	aflag = lflag = 0;
	while ((ch = getopt(argc, argv, "alP:w:")) != -1) {
		switch(ch) {
		case 'a':
			aflag = 1;
			break;
		case 'l':			/* long output */
			lflag = 1;
			break;
		case 'P':		/* printer name */
			printer = optarg;
			break;
		case 'w':
			l = strtol(optarg, &cp, 10);
			if (*cp != '\0' || l < 0 || l >= INT_MAX)
				errx(1, "wait time must be postive integer: %s",
				    optarg);
			wait_time = (u_int)l;
			if (wait_time < 30)
				warnx("warning: wait time less than 30 seconds");
			break;
		case '?':
		default:
			usage();
		}
	}

	if (!aflag && printer == NULL && (printer = getenv("PRINTER")) == NULL)
		printer = DEFLP;

	for (argc -= optind, argv += optind; argc; --argc, ++argv)
		if (isdigit((unsigned char)argv[0][0])) {
			if (requests >= MAXREQUESTS)
				fatal("too many requests");
			requ[requests++] = atoi(*argv);
		}
		else {
			if (users >= MAXUSERS)
				fatal("too many users");
			user[users++] = *argv;
		}

	if (aflag) {
		while (cgetnext(&buf, printcapdb) > 0) {
			if (ckqueue(buf) <= 0) {
				free(buf);
				continue;	/* no jobs */
			}
			for (cp = buf; *cp; cp++)
				if (*cp == '|' || *cp == ':') {
					*cp = '\0';
					break;
				}
			printer = buf;
			printf("%s:\n", printer);
			displayq(lflag);
			free(buf);
			printf("\n");
		}
	} else
		displayq(lflag);
	exit(0);
}

static __dead void
usage(void)
{
	extern char *__progname;

	fprintf(stderr,
	    "usage: %s [-al] [-Pprinter] [job# ...] [user ...]\n",
	    __progname);
	exit(1);
}
@


1.22
log
@clean up flags++ instances around getopt()
ok florian
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.21 2015/01/16 06:40:18 deraadt Exp $	*/
a66 1
static int ckqueue(char *);
a147 26
}

/* XXX - could be common w/ lpd */
static int
ckqueue(char *cap)
{
	struct dirent *d;
	DIR *dirp;
	char *spooldir;

	if (cgetstr(cap, "sd", &spooldir) >= 0) {
		dirp = opendir(spooldir);
		free(spooldir);
	} else
		dirp = opendir(_PATH_DEFSPOOL);

	if (dirp == NULL)
		return (-1);
	while ((d = readdir(dirp)) != NULL) {
		if (d->d_name[0] != 'c' || d->d_name[1] != 'f')
			continue;	/* daemon control files only */
		closedir(dirp);
		return (1);		/* found something */
	}
	closedir(dirp);
	return (0);
@


1.21
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.20 2013/11/24 21:32:32 deraadt Exp $	*/
d91 1
a91 1
			++aflag;
d94 1
a94 1
			++lflag;
@


1.20
log
@more ctype cleanups
checked by jca
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.19 2009/10/27 23:59:52 deraadt Exp $	*/
a43 1
#include <sys/param.h>
d46 1
d53 1
@


1.19
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.18 2008/05/26 06:30:36 otto Exp $	*/
d117 1
a117 1
		if (isdigit(argv[0][0])) {
@


1.18
log
@cgetstr(3) can also return 2 so handle that. Also restructre things a bit
to get rid of the flag var. ok deraadt@@ fgsch@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.17 2008/05/22 08:06:57 otto Exp $	*/
a32 14

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1983, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)lpq.c	8.3 (Berkeley) 5/10/95";
#else
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.17 2008/05/22 08:06:57 otto Exp $";
#endif
#endif /* not lint */
@


1.17
log
@Comparing string literals does not work as the author expected.
From  Adam Majer (debian maintaner); looks correct fgs@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.16 2007/02/16 13:29:04 jmc Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.16 2007/02/16 13:29:04 jmc Exp $";
a170 1
	int free_spooldir = 1;
d172 2
a173 6
	if (cgetstr(cap, "sd", &spooldir) == -1) {
		spooldir = _PATH_DEFSPOOL;
		free_spooldir = 0;
	}
	dirp = opendir(spooldir);
	if (free_spooldir)
d175 3
@


1.16
log
@sort options and sync usage(); from Igor Sobrado
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.15 2003/09/03 20:23:26 tedu Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.15 2003/09/03 20:23:26 tedu Exp $";
d171 1
d173 1
a173 1
	if (cgetstr(cap, "sd", &spooldir) == -1)
d175 2
d178 1
a178 1
	if (spooldir != _PATH_DEFSPOOL)
@


1.15
log
@plug mem leaks, pr3425 from patrick latifi.  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.14 2003/06/02 23:36:53 millert Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.14 2003/06/02 23:36:53 millert Exp $";
d195 1
a195 1
	    "usage: %s [-a] [-l] [-Pprinter] [user ...] [job ...]\n",
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.13 2002/06/08 01:53:43 millert Exp $	*/
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.13 2002/06/08 01:53:43 millert Exp $";
d174 4
a177 1
	if ((dirp = opendir(spooldir)) == NULL)
@


1.13
log
@Remove setuid root from lp*.  lpr needs to be setuid daemon so the
files it creates are not owned by the user spooling them but the
others (lpc, lpq, lprm) can get away with setgid daemon.  lpd runs
as user daemon for most things, only changing its uid to 0 for
things that must be done as root.

For the time being, don't require connections to come from a reserved
port since lpq/lpr/lprm can't acquire that w/o setuid root.  In the
near future we will have a mechanism for select non-root processes
to grab reserved ports.

The upshot of this is that spool directories must be writable by
group daemon and the files within the spool dirs must be owned by
daemon.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.12 2002/05/20 23:13:50 millert Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d44 1
a44 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.12 2002/05/20 23:13:50 millert Exp $";
@


1.12
log
@Pull in useful bits from NetBSD and make our lp* easier to diff and
do some minor cleanup of my own:

o IPv6 support
o ANSI function headers
o use getopt()
o synce usage() with man pages
o passes -Wall on both 32bit and 64bit platforms
o add an option to set the max number of children lpd will fork off
o add an lpd option to bind to specific addresses instead of INADDR_ANY.
o allow user to specify how long to wait for a connection to remote servers
o more strlcpy() and snprintf() usage
o Use FOO_FILENO constants instead of hard-coding 0-2
o Add some keeps to man the page SYNOPSIS to avoid options being split
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.11 2002/02/16 21:28:04 millert Exp $	*/
d48 1
a48 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.11 2002/02/16 21:28:04 millert Exp $";
d67 1
d94 5
a98 3
	euid = geteuid();
	uid = getuid();
	seteuid(uid);
d168 1
@


1.11
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 2
a2 1
/*	$OpenBSD: lpq.c,v 1.10 2001/12/06 03:12:31 ericj Exp $	*/
d48 1
a48 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.10 2001/12/06 03:12:31 ericj Exp $";
d64 1
a64 1
#include <syslog.h>
d66 1
d70 2
a71 1
#include <ctype.h>
a80 2
uid_t	uid, euid;

d84 1
a84 1
void usage(void);
d87 1
a87 3
main(argc, argv)
	int	argc;
	char	**argv;
a88 2
	extern char	*optarg;
	extern int	optind;
d91 1
d97 3
a99 5
	if (gethostname(host, sizeof(host))) {
		perror("lpq: gethostname");
		exit(1);
	}
	openlog("lpd", 0, LOG_LPR);
d102 2
a103 2
	while ((ch = getopt(argc, argv, "alP:")) != -1)
		switch((char)ch) {
d113 9
d126 1
d128 1
a128 3
	if (!aflag && printer == NULL) {
		char *p;

a129 3
		if ((p = getenv("PRINTER")) != NULL)
			printer = p;
	}
d166 1
a166 2
ckqueue(cap)
	char *cap;
d186 2
a187 2
void
usage()
d189 5
a193 1
	puts("usage: lpq [-a] [-l] [-Pprinter] [user ...] [job ...]");
@


1.10
log
@
use err/warn and friends instead of printf/exit.
also, remove fatal2() which is just errx anyway.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.9 2001/11/23 03:58:18 deraadt Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.9 2001/11/23 03:58:18 deraadt Exp $";
d82 2
a83 2
static int ckqueue __P((char *));
void usage __P((void));
@


1.9
log
@use the same siginterrupt() trick in lpc(1) as in timedc(1). we have to hack
a global into the other programs since they share some source.
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.8 2001/08/30 17:38:13 millert Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.8 2001/08/30 17:38:13 millert Exp $";
d98 1
a98 1
	name = *argv;
@


1.8
log
@o kill register
o add const to rcsid and copyright strings
o placate -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: lpq.c,v 1.7 1997/01/17 16:12:44 millert Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: lpq.c,v 1.7 1997/01/17 16:12:44 millert Exp $";
d79 2
@


1.7
log
@Add OpenBSD tags (was in wrong dir for previous commit)
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d38 1
a38 1
static char copyright[] =
d45 1
a45 1
static char sccsid[] = "@@(#)lpq.c	8.3 (Berkeley) 5/10/95";
d47 1
a47 1
static char rcsid[] = "$OpenBSD: $";
d85 2
a86 2
	register int	argc;
	register char	**argv;
d166 1
a166 1
	register struct dirent *d;
@


1.6
log
@getopt returns -1 on OpenBSD
@
text
@d1 2
d44 1
d46 3
@


1.5
log
@Integrated 4.4Lite2 source
Fixed potential problem pointed out by bitblt
@
text
@d98 1
a98 1
	while ((ch = getopt(argc, argv, "alP:")) != EOF)
@


1.4
log
@previous fix of NULL check reversed
@
text
@d42 1
a42 1
static char sccsid[] = "@@(#)lpq.c	8.1 (Berkeley) 6/6/93";
d48 1
a48 1
 * lpq [-l] [-Pprinter] [user...] [job...]
d50 1
d65 1
d74 1
d84 2
a85 1
	int	ch, lflag;		/* long output option */
d97 2
a98 2
	lflag = 0;
	while ((ch = getopt(argc, argv, "lP:")) != EOF)
d100 3
d114 1
a114 1
	if (printer == NULL) {
d134 19
a152 1
	displayq(lflag);
d156 22
d181 1
a181 1
	puts("usage: lpq [-l] [-Pprinter] [user ...] [job ...]");
@


1.3
log
@Missing ' == NULL)' added...
@
text
@d111 1
a111 1
		if ((p = getenv("PRINTER")) == NULL)
@


1.2
log
@correct -P, $PRINTER, and DEFLP interactions. bug reported by scott.burns@@labatt.com
@
text
@d111 1
a111 1
		if ((p = getenv("PRINTER"))
@


1.1
log
@Initial revision
@
text
@d107 3
a109 1
	if (printer == NULL && (printer = getenv("PRINTER")) == NULL)
d111 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
