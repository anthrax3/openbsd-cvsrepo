head	1.17;
access;
symbols
	OPENBSD_6_2:1.17.0.6
	OPENBSD_6_2_BASE:1.17
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.14.0.4
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.10.0.16
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.14
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.12
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.10
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.10.27.15.23.28;	author millert;	state Exp;
branches;
next	1.16;
commitid	JA3xh2v9rL58vfNr;

1.16
date	2015.10.11.20.23.49;	author guenther;	state Exp;
branches;
next	1.15;
commitid	i6P7pBlCuLlhNqfW;

1.15
date	2015.01.16.06.40.17;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	Uu5nFG3wCl0LACBb;

1.14
date	2014.07.20.01.38.40;	author guenther;	state Exp;
branches;
next	1.13;
commitid	0acpjAf5myNxgwB5;

1.13
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.01.16.32.06;	author stevesk;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.01.13.12.32;	author stevesk;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.23.36.53;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.07.27.22.30.00;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.08.01.53.43;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.20.23.13.50;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.06.03.12.30;	author ericj;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.23.03.58.17;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.30.17.38.13;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.16.11.38;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.10.25.19.38.21;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Use AF_UNIX instead of AF_LOCAL.
@
text
@/*	$OpenBSD: startdaemon.c,v 1.16 2015/10/11 20:23:49 guenther Exp $	*/
/*	$NetBSD: startdaemon.c,v 1.10 1998/07/18 05:04:39 lukem Exp $	*/

/*
 * Copyright (c) 1983, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/socket.h>
#include <sys/un.h>

#include <dirent.h>
#include <err.h>
#include <errno.h>
#include <stdio.h>
#include <unistd.h>
#include <limits.h>
#include <string.h>
#include <signal.h>

#include "lp.h"
#include "pathnames.h"

/*
 * Tell the printer daemon that there are new files in the spool directory.
 */
int
startdaemon(char *printer)
{
	struct sockaddr_un un;
	int s;
	size_t n;
	char buf[BUFSIZ];

	s = socket(AF_UNIX, SOCK_STREAM, 0);
	if (s < 0) {
		warn("socket");
		return(0);
	}
	memset(&un, 0, sizeof(un));
	un.sun_family = AF_UNIX;
	strlcpy(un.sun_path, _PATH_SOCKETNAME, sizeof(un.sun_path));
	siginterrupt(SIGINT, 1);
	PRIV_START;
	if (connect(s, (struct sockaddr *)&un, sizeof(un)) < 0) {
		int saved_errno = errno;
		if (errno == EINTR && gotintr) {
			PRIV_END;
			siginterrupt(SIGINT, 0);
			close(s);
			return(0);
		}
		PRIV_END;
		siginterrupt(SIGINT, 0);
		warnc(saved_errno, "connect");
		(void)close(s);
		return(0);
	}
	PRIV_END;
	siginterrupt(SIGINT, 0);
	if ((n = snprintf(buf, sizeof(buf), "\1%s\n", printer)) >= sizeof(buf) ||
	    n == -1) {
		close(s);
		return (0);
	}

	/* XXX atomicio inside siginterrupt? */
	if (write(s, buf, n) != n) {
		warn("write");
		(void)close(s);
		return(0);
	}
	if (read(s, buf, 1) == 1) {
		if (buf[0] == '\0') {		/* everything is OK */
			(void)close(s);
			return(1);
		}
		putchar(buf[0]);
	}
	while ((n = read(s, buf, sizeof(buf))) > 0)
		fwrite(buf, 1, n, stdout);
	(void)close(s);
	return(0);
}
@


1.16
log
@Userspace doesn't need to use SUN_LEN(): connect() and bind() must accept
sizeof(struct sockaddr_un), so do the simple, portable thing.
Also convert some strncpy() to strlcpy()

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.15 2015/01/16 06:40:17 deraadt Exp $	*/
d59 1
a59 1
	s = socket(AF_LOCAL, SOCK_STREAM, 0);
d65 1
a65 1
	un.sun_family = AF_LOCAL;
@


1.15
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.14 2014/07/20 01:38:40 guenther Exp $	*/
d69 1
a69 1
	if (connect(s, (struct sockaddr *)&un, SUN_LEN(&un)) < 0) {
@


1.14
log
@Make sure the correct errno is reported by warn* or err* and not
the errno of an intervening cleanup operation like close/unlink/etc.

Diff from Doug Hogan (doug (at) acyclic.org)
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.13 2009/10/27 23:59:51 deraadt Exp $	*/
a32 1
#include <sys/param.h>
d41 1
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.12 2007/05/01 16:32:06 stevesk Exp $	*/
d70 1
d79 1
a79 1
		warn("connect");
@


1.12
log
@remove #ifndef SUN_LEN; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.11 2007/05/01 13:12:32 stevesk Exp $	*/
a31 8

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)startdaemon.c	8.2 (Berkeley) 4/17/94";
#else
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.11 2007/05/01 13:12:32 stevesk Exp $";
#endif
#endif /* not lint */
@


1.11
log
@use warn() vs. perror() for consistency; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.10 2003/06/02 23:36:53 millert Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.10 2003/06/02 23:36:53 millert Exp $";
a74 3
#ifndef SUN_LEN
#define SUN_LEN(unp) (strlen((unp)->sun_path) + 2)
#endif
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.9 2002/07/27 22:30:00 deraadt Exp $	*/
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.9 2002/07/27 22:30:00 deraadt Exp $";
d89 1
a89 1
		perror("connect");
@


1.9
log
@merge if() and foo = snprintf checks better; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.8 2002/06/08 01:53:43 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.8 2002/06/08 01:53:43 millert Exp $";
@


1.8
log
@Remove setuid root from lp*.  lpr needs to be setuid daemon so the
files it creates are not owned by the user spooling them but the
others (lpc, lpq, lprm) can get away with setgid daemon.  lpd runs
as user daemon for most things, only changing its uid to 0 for
things that must be done as root.

For the time being, don't require connections to come from a reserved
port since lpq/lpr/lprm can't acquire that w/o setuid root.  In the
near future we will have a mechanism for select non-root processes
to grab reserved ports.

The upshot of this is that spool directories must be writable by
group daemon and the files within the spool dirs must be owned by
daemon.
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.7 2002/05/20 23:13:50 millert Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.7 2002/05/20 23:13:50 millert Exp $";
d99 2
a100 2
	n = snprintf(buf, sizeof(buf), "\1%s\n", printer);
	if (n >= sizeof(buf) || n == -1) {
@


1.7
log
@Pull in useful bits from NetBSD and make our lp* easier to diff and
do some minor cleanup of my own:

o IPv6 support
o ANSI function headers
o use getopt()
o synce usage() with man pages
o passes -Wall on both 32bit and 64bit platforms
o add an option to set the max number of children lpd will fork off
o add an lpd option to bind to specific addresses instead of INADDR_ANY.
o allow user to specify how long to wait for a connection to remote servers
o more strlcpy() and snprintf() usage
o Use FOO_FILENO constants instead of hard-coding 0-2
o Add some keeps to man the page SYNOPSIS to avoid options being split
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.6 2001/12/06 03:12:30 ericj Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.6 2001/12/06 03:12:30 ericj Exp $";
d56 1
a62 1

a81 1
	seteuid(euid);
d83 1
d86 1
a87 1
			seteuid(uid);
d91 1
a92 1
		seteuid(uid);
d97 1
a98 1
	seteuid(uid);
@


1.6
log
@
use err/warn and friends instead of printf/exit.
also, remove fatal2() which is just errx anyway.

millert@@ ok
@
text
@d1 2
a2 1
/*	$OpenBSD: startdaemon.c,v 1.5 2001/11/23 03:58:17 deraadt Exp $	*/
d41 1
a41 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.5 2001/11/23 03:58:17 deraadt Exp $";
d50 1
d55 1
a58 2
extern uid_t	uid, euid;

d64 1
a64 2
startdaemon(printer)
	char *printer;
d67 2
a68 1
	int s, n;
d71 1
a71 1
	s = socket(AF_UNIX, SOCK_STREAM, 0);
d73 1
a73 1
		perror("socket");
d77 2
a78 2
	un.sun_family = AF_UNIX;
	strcpy(un.sun_path, _PATH_SOCKETNAME);
d94 1
a94 1
		(void) close(s);
d99 2
a100 1
	if (snprintf(buf, sizeof buf, "\1%s\n", printer) > sizeof buf-1) {
a103 1
	n = strlen(buf);
d107 2
a108 2
		perror("write");
		(void) close(s);
d113 1
a113 1
			(void) close(s);
d120 1
a120 2

	(void) close(s);
@


1.5
log
@use the same siginterrupt() trick in lpc(1) as in timedc(1). we have to hack
a global into the other programs since they share some source.
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.4 2001/08/30 17:38:13 millert Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.4 2001/08/30 17:38:13 millert Exp $";
a57 2
static void perr __P((char *));

d72 1
a72 1
		perr("socket");
d92 1
a92 1
		perr("connect");
d106 1
a106 1
		perr("write");
a121 9
}

static void
perr(msg)
	char *msg;
{
	extern char *name;

	(void)printf("%s: %s: %s\n", name, msg, strerror(errno));
@


1.4
log
@o kill register
o add const to rcsid and copyright strings
o placate -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: startdaemon.c,v 1.3 1997/01/17 16:11:38 millert Exp $	*/
d40 1
a40 1
static const char rcsid[] = "$OpenBSD: startdaemon.c,v 1.3 1997/01/17 16:11:38 millert Exp $";
a43 1

d84 1
d86 7
d98 1
d105 2
d121 1
@


1.3
log
@Add OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d38 1
a38 1
static char sccsid[] = "@@(#)startdaemon.c	8.2 (Berkeley) 4/17/94";
d40 1
a40 1
static char rcsid[] = "$OpenBSD: $";
d70 1
a70 1
	register int s, n;
@


1.2
log
@proactive bounds checking; help from millert
@
text
@d1 2
d37 1
d39 3
@


1.1
log
@Initial revision
@
text
@d86 4
a89 1
	(void) sprintf(buf, "\1%s\n", printer);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
