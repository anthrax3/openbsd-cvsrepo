head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.8
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.6
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.2
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.19.0.6
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.2
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.18.0.6
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.4
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.2
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.15.0.2
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.36
	OPENBSD_5_0:1.14.0.34
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.32
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.30
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.26
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.28
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.24
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.22
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.20
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.18
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2016.02.29.17.26.01;	author jca;	state Exp;
branches;
next	1.20;
commitid	aNWKwmYdfVagOC9V;

1.20
date	2016.01.12.23.35.13;	author tb;	state Exp;
branches;
next	1.19;
commitid	6TIpGjc6KPGjJcnt;

1.19
date	2015.01.16.06.40.17;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	Uu5nFG3wCl0LACBb;

1.18
date	2013.12.10.16.38.04;	author naddy;	state Exp;
branches;
next	1.17;

1.17
date	2012.12.05.23.20.26;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2012.11.29.02.15.44;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2012.03.04.04.05.15;	author fgsch;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.23.36.53;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.13.06.48.40;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.09.03.56.28;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.06.09.03.44.50;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.08.01.53.43;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.20.23.13.50;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.17.19.42.36;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.28.03;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.06.03.12.30;	author ericj;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.23.03.58.17;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.01.18.02.33;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.01.17.16.11.35;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.07.04.05.41.51;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Move ckqueue() to common_source/common.c

Patch from Chris Bennett, ok tb@@
@
text
@/*	$OpenBSD: lp.h,v 1.20 2016/01/12 23:35:13 tb Exp $	*/
/*	$NetBSD: lp.h,v 1.14 2000/04/16 14:43:58 mrg Exp $	*/

/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * 	@@(#)lp.h	8.2 (Berkeley) 4/28/95
 */


/*
 * Global definitions for the line printer system.
 */

extern char	*AF;		/* accounting file */
extern long	 BR;		/* baud rate if lp is a tty */
extern char	*CF;		/* name of cifplot filter (per job) */
extern char	*DF;		/* name of tex filter (per job) */
extern long	 DU;		/* daemon user-id */
extern char	*FF;		/* form feed string */
extern char	*GF;		/* name of graph(1G) filter (per job) */
extern long	 HL;		/* print header last */
extern char	*IF;		/* name of input filter (created per job) */
extern char	*LF;		/* log file for error messages */
extern char	*LO;		/* lock file name */
extern char	*LP;		/* line printer device name */
extern long	 MC;		/* maximum number of copies allowed */
extern char	*MS;		/* stty flags to set if lp is a tty */
extern long	 MX;		/* maximum number of blocks to copy */
extern char	*NF;		/* name of ditroff(1) filter (per job) */
extern char	*OF;		/* name of output filter (created once) */
extern long	 PL;		/* page length */
extern long	 PW;		/* page width */
extern long	 PX;		/* page width in pixels */
extern long	 PY;		/* page length in pixels */
extern char	*RF;		/* name of fortran text filter (per job) */
extern char	*RG;		/* restricted group */
extern char	*RM;		/* remote machine name */
extern char	*RP;		/* remote printer name */
extern long	 RS;		/* restricted to those with local accounts */
extern long	 RW;		/* open LP for reading and writing */
extern long	 SB;		/* short banner instead of normal header */
extern long	 SC;		/* suppress multiple copies */
extern char	*SD;		/* spool directory */
extern long	 SF;		/* suppress FF on each print job */
extern long	 SH;		/* suppress header page */
extern char	*ST;		/* status file name */
extern char	*TF;		/* name of troff(1) filter (per job) */
extern char	*TR;		/* trailer string to be output when Q empties */
extern char	*VF;		/* name of raster filter (per job) */

extern char	line[BUFSIZ];
extern char	*bp;		/* pointer into printcap buffer */
extern char	*printer;	/* printer name */
				/* host machine name */
extern char	host[HOST_NAME_MAX+1];
extern char	*from;		/* client's machine name */
extern int	remote;		/* true if sending files to a remote host */
extern char	*printcapdb[];	/* printcap database array */
extern u_int	wait_time;	/* time to wait for remote responses */

extern uid_t	real_uid, effective_uid;
extern gid_t	real_gid, effective_gid;

extern volatile sig_atomic_t	gotintr;

/*
 * Structure used for building a sorted list of control files.
 */
struct queue {
	time_t	q_time;			/* modification time */
	char	q_name[MAXNAMLEN+1];	/* control file name */
};

/*
 * Macros to raise/lower permissions.
 */
#define PRIV_START do {				\
	int save_errno = errno;			\
	(void)seteuid(effective_uid);		\
	(void)setegid(effective_gid);		\
	errno = save_errno;			\
} while (0)

#define PRIV_END do {				\
	int save_errno = errno;			\
	(void)setegid(real_gid);		\
	(void)seteuid(real_uid);		\
	errno = save_errno;			\
} while (0)


__BEGIN_DECLS
struct dirent;

/* common.c */
char	*checkremote(void);
int	 ckqueue(char *);
void	 fatal(const char *, ...)
    __attribute__((__noreturn__,__format__(__printf__, 1, 2)));
int	 get_line(FILE *);
int	 getport(char *, int);
int	 getq(struct queue ***);
int	 safe_open(const char *, int, mode_t);

/* displayq.c */
void	 displayq(int);

/* rmjob.c */
void	 rmjob(void);

/* startdaemon.c */
int	 startdaemon(char *);

__END_DECLS
@


1.20
log
@Move prototypes of local functions from lp.h to the .c files and make
functions static if possible.  Move delay() to lpd/printjob.c and fix
an annoying typo.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 2.19 2015/01/16 06:40:17 deraadt Exp $	*/
d123 1
@


1.19
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.18 2013/12/10 16:38:04 naddy Exp $	*/
d121 1
a121 1
void     blankfill(int);
d123 2
a124 5
int      chk(char *);
void     displayq(int);
void     dump(char *, char *, int);
__dead void fatal(const char *, ...)
	__attribute__((__format__(__printf__, 1, 2)));
a127 13
void     header(void);
int      inlist(char *, char *);
int      iscf(const struct dirent *);
int      isowner(char *, char *);
void     ldump(char *, char *, int);
void     prank(int);
void     process(char *);
void     rmjob(void);
void     rmremote(void);
void     show(char *, char *, int);
int      startdaemon(char *);
void     nodaemon(void);
void     delay(int);
d129 10
@


1.18
log
@Remove the printcap fc, fs, xc, xs capabilities from lpd that were used
to configure a tty by poking magic numbers into sgtty.  If needed, the
ms capability, which uses symbolic stty modes, can be used instead.
Better description of ms from FreeBSD.
ok beck@@, deraadt@@, jmc@@ (man page)
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.17 2012/12/05 23:20:26 deraadt Exp $	*/
d81 1
a81 1
extern char	host[MAXHOSTNAMELEN];
@


1.17
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.16 2012/11/29 02:15:44 guenther Exp $	*/
a44 1
extern long	 FC;		/* flags to clear if lp is a tty */
a45 1
extern long	 FS;		/* flags to set if lp is a tty */
a75 2
extern long	 XC;		/* flags to clear for local mode */
extern long	 XS;		/* flags to set for local mode */
@


1.16
log
@Change scandir()'s 'select' argument from
	int (*)(struct dirent *)
to
	int (*)(const struct dirent *)
to match POSIX.

ok millert@@, ports check by naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.15 2012/03/04 04:05:15 fgsch Exp $	*/
a120 1
#include <sys/cdefs.h>
@


1.15
log
@In preparation for getline and getdelim additions to libc, rename getline()
occurrences to get_line().
Based on a diff from Jan Klemkow <j-dot-klemkow-at-wemelug-dot-de> to tech.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.14 2003/06/02 23:36:53 millert Exp $	*/
d138 1
a138 1
int      iscf(struct dirent *);
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.13 2002/06/13 06:48:40 millert Exp $	*/
d133 1
a133 1
int	 getline(FILE *);
@


1.13
log
@Fixed some lpd bugs while on the plane from Calgary:
o mark fatal() as __dead
o add SIGINT to the signal mask when installing abort() as a handler.
  We can end up in abortpr() due to several different signals and since
  abortpr() kill()s itself with SIGINT we need to explicately protect
  against the current process receiving SIGINT while in abortpr()
o Don't leak the lock fd to children spawned by lpd
o Close the lock file (and thus unlocke immediately in abortpr().
  Otherwise, if there is an output filter the lock file only gets
  closed after we finish waiting for the output filter to die.
  This causes a race condition in lprm such that the per-printer
  daemon does not get restarted when lprm kills the active job
  (noticed during c2k2 with the mp3 printer spool ;-)
o Open the printcap file with privs raised just in case it is not
  world-readable.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.12 2002/06/09 03:56:28 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@Convert remaining K&R function headers to ANSI
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.11 2002/06/09 03:44:50 millert Exp $	*/
d135 1
a135 1
void	 fatal(const char *, ...)
@


1.11
log
@o Kill "garbage" global (unused)
o Kill "rank" global (doesn't need to be global)
o Make inform() static (local to displayq.c)
o Pass in rank to inform() based on index within sorted mtime array
o Simplify compar()
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.10 2002/06/08 01:53:43 millert Exp $	*/
d139 1
a139 1
int	 getq(struct queue *(*[]));
@


1.10
log
@Remove setuid root from lp*.  lpr needs to be setuid daemon so the
files it creates are not owned by the user spooling them but the
others (lpc, lpq, lprm) can get away with setgid daemon.  lpd runs
as user daemon for most things, only changing its uid to 0 for
things that must be done as root.

For the time being, don't require connections to come from a reserved
port since lpq/lpr/lprm can't acquire that w/o setuid root.  In the
near future we will have a mechanism for select non-root processes
to grab reserved ports.

The upshot of this is that spool directories must be writable by
group daemon and the files within the spool dirs must be owned by
daemon.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.9 2002/05/20 23:13:50 millert Exp $	*/
a140 1
void     inform(char *);
@


1.9
log
@Pull in useful bits from NetBSD and make our lp* easier to diff and
do some minor cleanup of my own:

o IPv6 support
o ANSI function headers
o use getopt()
o synce usage() with man pages
o passes -Wall on both 32bit and 64bit platforms
o add an option to set the max number of children lpd will fork off
o add an lpd option to bind to specific addresses instead of INADDR_ANY.
o allow user to specify how long to wait for a connection to remote servers
o more strlcpy() and snprintf() usage
o Use FOO_FILENO constants instead of hard-coding 0-2
o Add some keeps to man the page SYNOPSIS to avoid options being split
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.8 2002/02/17 19:42:36 millert Exp $	*/
d95 2
a96 1
extern uid_t	uid, euid;	/* real and effective user id's */
d108 17
a145 1
int      lockchk(char *);
d154 1
@


1.8
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 2
a2 1
/*	$OpenBSD: lp.h,v 1.7 2002/02/16 21:28:03 millert Exp $	*/
d48 1
a48 1
extern long	 DU;		/* daeomon user-id */
d60 1
a60 1
extern long  MX;		/* maximum number of blocks to copy */
d92 4
a95 1
extern char	*printcapdb[];  /* printcap database array */
d117 2
a118 1
void	 fatal(const char *, ...);
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.6 2001/12/06 03:12:30 ericj Exp $	*/
d116 1
a116 1
int	 getq __P((struct queue *(*[])));
@


1.6
log
@
use err/warn and friends instead of printf/exit.
also, remove fatal2() which is just errx anyway.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.5 2001/11/23 03:58:17 deraadt Exp $	*/
d108 8
a115 8
void     blankfill __P((int));
char	*checkremote __P((void));
int      chk __P((char *));
void     displayq __P((int));
void     dump __P((char *, char *, int));
void	 fatal __P((const char *, ...));
int	 getline __P((FILE *));
int	 getport __P((char *, int));
d117 15
a131 15
void     header __P((void));
void     inform __P((char *));
int      inlist __P((char *, char *));
int      iscf __P((struct dirent *));
int      isowner __P((char *, char *));
void     ldump __P((char *, char *, int));
int      lockchk __P((char *));
void     prank __P((int));
void     process __P((char *));
void     rmjob __P((void));
void     rmremote __P((void));
void     show __P((char *, char *, int));
int      startdaemon __P((char *));
void     nodaemon __P((void));
void     delay __P((int));
@


1.5
log
@use the same siginterrupt() trick in lpc(1) as in timedc(1). we have to hack
a global into the other programs since they share some source.
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.4 2001/11/01 18:02:33 mickey Exp $	*/
a85 1
extern char	*name;		/* program name */
@


1.4
log
@displayq to honor the terminal width; millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: lp.h,v 1.3 1997/01/17 16:11:35 millert Exp $	*/
d93 3
@


1.3
log
@Add OpenBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: $	*/
d128 1
a128 1
void     warn __P((void));
@


1.2
log
@Integrated 4.4Lite2 source
Fixed potential problem pointed out by bitblt
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d33 1
a33 1
 * 	@@(#)lp.h	8.1 (Berkeley) 6/6/93
d89 1
a89 1
extern int	sendtorem;	/* are we sending to a remote? */
d111 1
a111 1
int	 getport __P((char *));
d127 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
