head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.3.0.12
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2017.01.30.06.46.13;	author jsg;	state Exp;
branches;
next	1.3;
commitid	jucAd4XIVd2Rf9AB;

1.3
date	2013.10.28.09.00.06;	author patrick;	state Exp;
branches;
next	1.2;

1.2
date	2013.09.04.14.54.13;	author patrick;	state Exp;
branches;
next	1.1;

1.1
date	2013.05.30.19.17.15;	author bmercer;	state Exp;
branches;
next	;


desc
@@


1.4
log
@build mkuboot on arm64
@
text
@#	$OpenBSD: Makefile,v 1.3 2013/10/28 09:00:06 patrick Exp $

.if ${MACHINE} == "arm64" || ${MACHINE} == "armv7

PROG=	mkuboot
SRCS=	mkuboot.c copy_elf32.c copy_elf64.c
DPADD=	${LIBZ}
LDADD=	-lz
CFLAGS=	-DMACHINE_ARCH=\"${MACHINE_ARCH}\"

.else

NOPROG=yes

.endif

MAN=	mkuboot.8

.include <bsd.prog.mk>
@


1.3
log
@Improve mkuboot's ELF handling.  This fixes the problem where mkuboot
running on 64-bit systems does not create valid images.
While there, append kernel symbols at the end of the kernel.

ok syl@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/09/04 14:54:13 patrick Exp $
d3 1
a3 1
.if ${MACHINE} == "armv7"
a4 1
BINDIR=	/usr/sbin
@


1.2
log
@Beagle has been replaced by armv7.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2013/05/30 19:17:15 bmercer Exp $
d7 1
@


1.1
log
@Move mkuboot to the proper location.
OK jasper@@ get it in deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2013/05/30 13:50:09 bmercer Exp $
d3 1
a3 1
.if ${MACHINE} == "beagle"
@

