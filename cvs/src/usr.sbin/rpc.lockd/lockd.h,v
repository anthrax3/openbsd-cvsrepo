head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.34
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.30
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.32
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.24
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.28
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.26
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.22
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.20
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.18
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	OPENBSD_5_0:1.4.0.14
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.12
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.10
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.6
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.44
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.42
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.40
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.38
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.36
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.34
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.32
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.30
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.28
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.26
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2008.06.13.21.32.26;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	97.09.17.23.09.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.08.10.21.06.40;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.07.20.05.02.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@from NetBSD:
Implement file locking in lockd. All the stuff is done in userland, using
fhopen() and flock(). This means that if you kill lockd, all locks will
be relased.
Shared locks are not handled efficiently, they're serialised in lockd when
they could be granted.

tested against debian etch (linux 2.6.18)
not fully functional yet in mixed NFSv2/v3 environments
further development in-tree as discussed w/ deraadt
@
text
@/*	$OpenBSD: lockd.h,v 1.3 1997/09/17 23:09:37 deraadt Exp $	*/

/*
 * Copyright (c) 1995
 *	A.R. Gordon (andrew.gordon@@net-tel.co.uk).  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed for the FreeBSD project
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY ANDREW GORDON AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

extern int debug_level;
extern int grace_expired;
void sigchild_handler(int);
@


1.3
log
@make this readable, so that i can think about actually coding it..
@
text
@d1 1
a1 1
/*	$OpenBSD: lockd.h,v 1.2 1997/08/10 21:06:40 millert Exp $	*/
d37 2
@


1.2
log
@Pass -Wall and add OpenBSD tags.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a35 13


#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <rpc/rpc.h>
#include <rpc/pmap_clnt.h>
#include <syslog.h>
#include <rpcsvc/sm_inter.h>	/* protocol to talk to rpc.statd	*/
#include "nlm_prot.h"		/* The protocol we are implementing	*/


/* global variables ------------------------------------------------------- */
@


1.1
log
@rpc.lockd from freebsd; has a problem yet
@
text
@d1 2
d39 2
d42 1
@
