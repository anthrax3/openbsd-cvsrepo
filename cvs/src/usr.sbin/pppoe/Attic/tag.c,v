head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.2.0.32
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.30
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.26
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.28
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.24
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.22
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.1.1.0.12
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.10
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.8
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.6
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	PPPOE_USER:1.1.1.1
	PPPOE:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2014.03.17.18.42.41;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2013.11.19.15.12.23;	author mikeb;	state Exp;
branches;
next	1.5;

1.5
date	2011.11.05.09.20.36;	author yasuoka;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.04.16.29.35;	author sthen;	state Exp;
branches;
next	1.3;

1.3
date	2011.03.31.09.19.35;	author sobrado;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.04.04.46.13;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2000.06.18.07.30.41;	author jason;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.06.18.07.30.41;	author jason;	state Exp;
branches;
next	;


desc
@@


1.7
log
@to the great bit bucket in the sky...
@
text
@/*	$OpenBSD: tag.c,v 1.6 2013/11/19 15:12:23 mikeb Exp $	*/

/*
 * Copyright (c) 2000 Network Security Technologies, Inc. http://www.netsec.net
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>
#include <sys/queue.h>
#include <net/if.h>
#include <net/if_dl.h>
#include <net/if_types.h>
#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <string.h>
#include <stdlib.h>

#include "pppoe.h"

void
tag_init(struct tag_list *l)
{
	LIST_INIT(&l->thelist);
}

void
tag_destroy(struct tag_list *l)
{
	struct tag_node *p;

	while (1) {
		p = LIST_FIRST(&l->thelist);
		if (p == NULL)
			break;
		p->_ref--;
		if (p->_ref == 0 && p->val)
			free(p->val);
		LIST_REMOVE(p, next);
		free(p);
	}
}

struct tag_node *
tag_lookup(struct tag_list *l, u_int16_t type, int idx)
{
	struct tag_node *p;

	p = LIST_FIRST(&l->thelist);
	while (p != NULL) {
		if (p->type == type) {
			if (idx == 0)
				break;
			idx--;
		}
		p = LIST_NEXT(p, next);
	}
	return (p);
}

int
tag_add(struct tag_list *l, u_int16_t type, u_int16_t len, u_int8_t *val)
{
	struct tag_node *p;

	p = (struct tag_node *)malloc(sizeof(*p));
	if (p == NULL)
		return (-1);
	if (len) {
		p->val = (u_int8_t *)malloc(len);
		if (p->val == NULL) {
			free(p);
			return (-1);
		}
		memcpy(p->val, val, len);
	}
	else
		p->val = NULL;
	p->type = type;
	p->len = len;
	p->_ref = 1;
	LIST_INSERT_HEAD(&l->thelist, p, next);
	return (0);
}

int
tag_pkt(struct tag_list *l, u_long pktlen, u_int8_t *pkt)
{
	u_int16_t ttype, tlen;

	while (pktlen != 0) {
		if (pktlen < sizeof(u_int16_t))
			break;
		ttype = pkt[1] | (pkt[0] << 8);
		pkt += sizeof(u_int16_t);
		pktlen -= sizeof(u_int16_t);

		if (pktlen < sizeof(u_int16_t))
			break;
		tlen = pkt[1] | (pkt[0] << 8);
		pkt += sizeof(u_int16_t);
		pktlen -= sizeof(u_int16_t);

		if (pktlen < tlen)
			break;

		if (tag_add(l, ttype, tlen, pkt) < 0)
			return (-1);
		pkt += tlen;
		pktlen -= tlen;
	}

	if (pktlen != 0)
		return (-1);
	return (0);
}

void
tag_hton(struct tag_list *l)
{
	struct tag_node *p;

	for (p = LIST_FIRST(&l->thelist); p; p = LIST_NEXT(p, next)) {
		p->len = htons(p->len);
		p->type = htons(p->type);
	}
}
@


1.6
log
@include queue.h directly instead of relying on if.h to provide it;
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: tag.c,v 1.5 2011/11/05 09:20:36 yasuoka Exp $	*/
@


1.5
log
@Remove unnecessary #include's.  From Michael W. Bombardieri.

No binary change.
@
text
@d1 1
a1 1
/*	$OpenBSD: tag.c,v 1.4 2011/07/04 16:29:35 sthen Exp $	*/
d30 1
@


1.4
log
@Bring back byte-order conversion that was inadvertently removed in previous
commit. Problem reported by Scott McEachern, ok yasuoka@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tag.c,v 1.3 2011/03/31 09:19:35 sobrado Exp $	*/
a27 1
#include <stdio.h>
a28 2
#include <sys/uio.h>
#include <sys/time.h>
a29 1
#include <sys/ioctl.h>
a34 2
#include <net/bpf.h>
#include <errno.h>
a35 4
#include <err.h>
#include <fcntl.h>
#include <unistd.h>
#include <sysexits.h>
@


1.3
log
@remove dead code from pppoe(8).

found by Michael W. Bombardieri for tag_ntoh() and tag_show(),
improved later by yasuoka@@ to include tag_hton() which is called
one time but never used.

ok yasuoka@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tag.c,v 1.2 2003/06/04 04:46:13 jason Exp $	*/
d145 11
@


1.2
log
@kill terms 3 & 4
@
text
@d1 1
a1 1
/*	$OpenBSD: tag.c,v 1.1.1.1 2000/06/18 07:30:41 jason Exp $	*/
a144 36
}

void
tag_show(struct tag_list *l)
{
	struct tag_node *p;
	int i;

	for (p = LIST_FIRST(&l->thelist); p; p = LIST_NEXT(p, next)) {
		printf("\ttag type=0x%04x, length=%d", p->type, p->len);
		for (i = 0; i < p->len; i++)
			printf("%c%02x", (i == 0) ? ' ' : ':', p->val[i]);
		printf("\n");
	}
}

void
tag_hton(struct tag_list *l)
{
	struct tag_node *p;

	for (p = LIST_FIRST(&l->thelist); p; p = LIST_NEXT(p, next)) {
		p->len = htons(p->len);
		p->type = htons(p->type);
	}
}

void
tag_ntoh(struct tag_list *l)
{
	struct tag_node *p;

	for (p = LIST_FIRST(&l->thelist); p; p = LIST_NEXT(p, next)) {
		p->len = htons(p->len);
		p->type = htons(p->type);
	}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a4 1
 * All rights reserved.
a13 6
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Network Security
 *	Technologies, Inc.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.1.1.1
log
@import my pppoe code
@
text
@@
