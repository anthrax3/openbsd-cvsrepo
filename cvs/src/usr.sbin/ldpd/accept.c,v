head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.3.0.8
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.7
date	2016.05.23.19.11.42;	author renato;	state Exp;
branches;
next	1.6;
commitid	AQBoOveMRKjtVfFv;

1.6
date	2016.05.23.19.09.25;	author renato;	state Exp;
branches;
next	1.5;
commitid	t07H0Mk6WGdVWB0W;

1.5
date	2016.05.23.17.43.42;	author renato;	state Exp;
branches;
next	1.4;
commitid	VpAym8dVR6eY4drQ;

1.4
date	2016.05.23.15.14.07;	author renato;	state Exp;
branches;
next	1.3;
commitid	l3e6PhvoAh8C7elc;

1.3
date	2013.10.31.16.56.22;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2013.10.15.20.21.24;	author renato;	state Exp;
branches;
next	1.1;

1.1
date	2012.04.12.17.33.43;	author claudio;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove superfluous includes.
@
text
@/*	$OpenBSD: accept.c,v 1.6 2016/05/23 19:09:25 renato Exp $ */

/*
 * Copyright (c) 2012 Claudio Jeker <claudio@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <stdlib.h>

#include "ldpd.h"
#include "ldpe.h"
#include "log.h"

struct accept_ev {
	LIST_ENTRY(accept_ev)	 entry;
	struct event		 ev;
	void			(*accept_cb)(int, short, void *);
	void			*arg;
	int			 fd;
};

struct {
	LIST_HEAD(, accept_ev)	queue;
	struct event		evt;
} accept_queue;

static void	accept_arm(void);
static void	accept_unarm(void);
static void	accept_cb(int, short, void *);
static void	accept_timeout(int, short, void *);

void
accept_init(void)
{
	LIST_INIT(&accept_queue.queue);
	evtimer_set(&accept_queue.evt, accept_timeout, NULL);
}

int
accept_add(int fd, void (*cb)(int, short, void *), void *arg)
{
	struct accept_ev	*av;

	if ((av = calloc(1, sizeof(*av))) == NULL)
		return (-1);
	av->fd = fd;
	av->accept_cb = cb;
	av->arg = arg;
	LIST_INSERT_HEAD(&accept_queue.queue, av, entry);

	event_set(&av->ev, av->fd, EV_READ, accept_cb, av);
	event_add(&av->ev, NULL);

	log_debug("%s: accepting on fd %d", __func__, fd);

	return (0);
}

void
accept_del(int fd)
{
	struct accept_ev	*av;

	LIST_FOREACH(av, &accept_queue.queue, entry)
		if (av->fd == fd) {
			log_debug("%s: %d removed from queue", __func__, fd);
			event_del(&av->ev);
			LIST_REMOVE(av, entry);
			free(av);
			return;
		}
}

void
accept_pause(void)
{
	struct timeval evtpause = { 1, 0 };

	log_debug(__func__);
	accept_unarm();
	evtimer_add(&accept_queue.evt, &evtpause);
}

void
accept_unpause(void)
{
	if (evtimer_pending(&accept_queue.evt, NULL)) {
		log_debug(__func__);
		evtimer_del(&accept_queue.evt);
		accept_arm();
	}
}

static void
accept_arm(void)
{
	struct accept_ev	*av;
	LIST_FOREACH(av, &accept_queue.queue, entry)
		event_add(&av->ev, NULL);
}

static void
accept_unarm(void)
{
	struct accept_ev	*av;
	LIST_FOREACH(av, &accept_queue.queue, entry)
		event_del(&av->ev);
}

static void
accept_cb(int fd, short event, void *arg)
{
	struct accept_ev	*av = arg;
	event_add(&av->ev, NULL);
	av->accept_cb(fd, event, av->arg);
}

static void
accept_timeout(int fd, short event, void *bula)
{
	log_debug(__func__);
	accept_arm();
}
@


1.6
log
@Make functions and variables static whenever possible.

The benefits of this include:
* clean up of the ldpd global namespace;
* improved readability;
* more hints to the compiler/linker to generate more efficient code.

Whenever possible, move global static variables to a smaller scope
(function).

All extern variables are now declared in header files to avoid unnecessary
duplication.

This patch also cleans up the indentation of all function prototypes
and global variables.
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.5 2016/05/23 17:43:42 renato Exp $ */
d19 1
a19 3
#include <sys/queue.h>
#include <sys/time.h>
#include <event.h>
@


1.5
log
@Fix mess caused by my commit script.

I screwed up everything... trying to fix now.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 4
a44 4
void	accept_arm(void);
void	accept_unarm(void);
void	accept_cb(int, short, void *);
void	accept_timeout(int, short, void *);
d108 1
a108 1
void
d116 1
a116 1
void
d124 1
a124 1
void
d132 1
a132 1
void
@


1.4
log
@Replace manually written function names with __func__.
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.3 2013/10/31 16:56:22 deraadt Exp $ */
@


1.3
log
@another stray %d
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.2 2013/10/15 20:21:24 renato Exp $ */
d68 1
a68 1
	log_debug("accept_add: accepting on fd %d", fd);
d80 1
a80 1
			log_debug("accept_del: %d removed from queue", fd);
d93 1
a93 1
	log_debug("accept_pause");
d102 1
a102 1
		log_debug("accept_unpause");
d135 1
a135 1
	log_debug("accept_timeout");
@


1.2
log
@Fix whitespace and other style issues.
OK claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: accept.c,v 1.1 2012/04/12 17:33:43 claudio Exp $ */
d80 1
a80 1
			log_debug("accept_del: %i removed from queue", fd);
@


1.1
log
@accept pacing ldpd way. Since this daemon has multiple listening fds
we add them all to a accept queue that does the pacing with the
accept_pause() and accept_unpause() calls.
With and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d59 1
a59 1
		return -1;
@

