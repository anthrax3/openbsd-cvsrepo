head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.4.0.14
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.16
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.8
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.12
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.6
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.4
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.2
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.4
	OPENBSD_4_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2017.03.03.23.30.57;	author renato;	state Exp;
branches;
next	1.8;
commitid	mvwmKJi9MZW7VKOy;

1.8
date	2016.05.23.19.11.42;	author renato;	state Exp;
branches;
next	1.7;
commitid	AQBoOveMRKjtVfFv;

1.7
date	2016.05.23.19.09.25;	author renato;	state Exp;
branches;
next	1.6;
commitid	t07H0Mk6WGdVWB0W;

1.6
date	2016.05.23.18.55.21;	author renato;	state Exp;
branches;
next	1.5;
commitid	85kONxXVWUqI2Jhb;

1.5
date	2016.05.23.17.43.42;	author renato;	state Exp;
branches;
next	1.4;
commitid	VpAym8dVR6eY4drQ;

1.4
date	2012.04.12.17.33.43;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2010.04.15.15.04.23;	author claudio;	state Exp;
branches;
next	1.2;

1.2
date	2009.06.06.08.09.43;	author pyr;	state Exp;
branches;
next	1.1;

1.1
date	2009.06.01.20.59.45;	author michele;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Allow to specify an alternate control socket.

This is required to run multiple instances of ldpd.

OK claudio@@
@
text
@/*	$OpenBSD: control.h,v 1.8 2016/05/23 19:11:42 renato Exp $ */

/*
 * Copyright (c) 2003, 2004 Henning Brauer <henning@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _CONTROL_H_
#define	_CONTROL_H_

#include <sys/types.h>
#include <sys/queue.h>

struct ctl_conn {
	TAILQ_ENTRY(ctl_conn)	entry;
	struct imsgev		iev;
};
TAILQ_HEAD(ctl_conns, ctl_conn);

extern struct ctl_conns ctl_conns;

int	control_init(char *);
int	control_listen(void);
void	control_cleanup(char *);
int	control_imsg_relay(struct imsg *);

#endif	/* _CONTROL_H_ */
@


1.8
log
@Remove superfluous includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.7 2016/05/23 19:09:25 renato Exp $ */
d33 1
a33 1
int	control_init(void);
d35 1
a35 1
void	control_cleanup(void);
@


1.7
log
@Make functions and variables static whenever possible.

The benefits of this include:
* clean up of the ldpd global namespace;
* improved readability;
* more hints to the compiler/linker to generate more efficient code.

Whenever possible, move global static variables to a smaller scope
(function).

All extern variables are now declared in header files to avoid unnecessary
duplication.

This patch also cleans up the indentation of all function prototypes
and global variables.
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.6 2016/05/23 18:55:21 renato Exp $ */
d22 1
a23 2
#include <sys/time.h>
#include <event.h>
@


1.6
log
@Assorted fixes and small cleanup.

Nothing really interesting here.
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.5 2016/05/23 17:43:42 renato Exp $ */
d36 1
a36 2
void	control_accept(int, short, void *);
void	control_dispatch_imsg(int, short, void *);
a37 1
void	control_cleanup(void);
@


1.5
log
@Fix mess caused by my commit script.

I screwed up everything... trying to fix now.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d30 3
@


1.4
log
@accept pacing ldpd way. Since this daemon has multiple listening fds
we add them all to a accept queue that does the pacing with the
accept_pause() and accept_unpause() calls.
With and OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.3 2010/04/15 15:04:23 claudio Exp $ */
@


1.3
log
@Instead of having three ways of setting fds non-blocking use
session_socket_blockmode() everywhere.
Additionally make two fatal() distinguishable.
OK michele@@
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.2 2009/06/06 08:09:43 pyr Exp $ */
a24 5

struct {
	struct event	ev;
	int		fd;
} control_state;
@


1.2
log
@make ldpd imsg-in-a-lib ready too.
@
text
@d1 1
a1 1
/*	$OpenBSD: control.h,v 1.1 2009/06/01 20:59:45 michele Exp $ */
a30 5
enum blockmodes {
	BM_NORMAL,
	BM_NONBLOCK
};

a41 2

void	session_socket_blockmode(int, enum blockmodes);
@


1.1
log
@Welcome ldpd, the Label Distribution Protocol daemon.
Built using the imsg/three process framework, its main aim
is to redistribute MPLS labels between peers.

Right now it has some really basic functionalities,
the basic protocol works and peers are able to exchange
labels and insert them in the kernel.
It still does not react to changes of topology.

Not yet connected to the builds.

ok claudio@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d38 1
a38 1
	struct imsgbuf		ibuf;
@

