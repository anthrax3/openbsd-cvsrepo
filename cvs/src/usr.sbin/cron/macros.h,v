head	1.15;
access;
symbols
	OPENBSD_6_1:1.15.0.8
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.30
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.28
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.26
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.22
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.24
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.20
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.18
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.16
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.14
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2;
locks; strict;
comment	@ * @;


1.15
date	2015.11.12.21.12.05;	author millert;	state Exp;
branches;
next	1.14;
commitid	6PlWoK7FsQNDGZmn;

1.14
date	2015.11.04.20.28.17;	author millert;	state Exp;
branches;
next	1.13;
commitid	6N0oXtYc5KM1a7DW;

1.13
date	2015.10.26.14.27.41;	author millert;	state Exp;
branches;
next	1.12;
commitid	k893fgzG4z9i5qIx;

1.12
date	2015.10.06.14.58.37;	author tedu;	state Exp;
branches;
next	1.11;
commitid	DORRwC1MyrO1Yl4N;

1.11
date	2015.01.23.02.37.25;	author tedu;	state Exp;
branches;
next	1.10;
commitid	UGPHvhzwRtnjrF9O;

1.10
date	2015.01.23.01.01.06;	author tedu;	state Exp;
branches;
next	1.9;
commitid	kzBIhYnXdVeOLxgw;

1.9
date	2015.01.14.17.30.53;	author millert;	state Exp;
branches;
next	1.8;
commitid	qsePpGDsMLqV3DYZ;

1.8
date	2013.11.23.18.06.49;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.08.22.19.32.42;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.17.22.11.55;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.28.16.32.09;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.20.20.38.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.15.19.13.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.20.02.03.19;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.18.19.48.35;	author millert;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Use absolute paths in pathnames.h.  There is no longer a need to
chdir(2) to the cron dir and cron(8) now changes to / via daemon(3).
We no longer try to create/chmod the spool directories as they
should be set correctly at install time.  The setegid(crontab)
has been moved to open_socket() so it is closer to the chmod(2)
call that needs it.  OK deraadt@@ tedu@@
@
text
@/*	$OpenBSD: macros.h,v 1.14 2015/11/04 20:28:17 millert Exp $	*/

/*
 * Copyright (c) 2004 by Internet Systems Consortium, Inc. ("ISC")
 * Copyright (c) 1997,2000 by Internet Software Consortium, Inc.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#define CRON_VERSION	"V5.0"

#define TRUE		1
#define FALSE		0

#define READ_PIPE	0	/* which end of a pipe pair do you read? */
#define WRITE_PIPE	1	/*   or write to? */
#define	MAX_COMMAND	1000	/* max length of internally generated cmd */
#define	MAX_ENVSTR	1000	/* max length of envvar=value\0 strings */
#define	MAX_TEMPSTR	100	/* obvious */
#define	MAX_UNAME	(_PW_NAME_LEN+1)	/* max length of username, should be overkill */

#define	Skip_Blanks(c, f) \
			while (c == '\t' || c == ' ') \
				c = get_char(f);

#define	Skip_Nonblanks(c, f) \
			while (c!='\t' && c!=' ' && c!='\n' && c != EOF) \
				c = get_char(f);

#define	Set_LineNum(ln)	{ LineNumber = ln; }

/* Data values used on cron socket */
#define	RELOAD_CRON	0x2
#define	RELOAD_AT	0x4

#define	get_gmtoff(c, t)        ((t)->tm_gmtoff)

#define	SECONDS_PER_MINUTE	60

#define	FIRST_MINUTE	0
#define	LAST_MINUTE	59
#define	MINUTE_COUNT	(LAST_MINUTE - FIRST_MINUTE + 1)

#define	FIRST_HOUR	0
#define	LAST_HOUR	23
#define	HOUR_COUNT	(LAST_HOUR - FIRST_HOUR + 1)

#define	FIRST_DOM	1
#define	LAST_DOM	31
#define	DOM_COUNT	(LAST_DOM - FIRST_DOM + 1)

#define	FIRST_MONTH	1
#define	LAST_MONTH	12
#define	MONTH_COUNT	(LAST_MONTH - FIRST_MONTH + 1)

/* note on DOW: 0 and 7 are both Sunday, for compatibility reasons. */
#define	FIRST_DOW	0
#define	LAST_DOW	7
#define	DOW_COUNT	(LAST_DOW - FIRST_DOW + 1)
@


1.14
log
@Change cron from including all headers in every file to only including
what each .c file needs.  I have not removed cron.h since it will
be used in a future clean up of the cron's .h files.  OK nicm@@
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.13 2015/10/26 14:27:41 millert Exp $	*/
a26 1
#define	MAX_FNAME	100	/* max length of internally generated fn */
@


1.13
log
@Remove some useless defines and the set_cron_uid() function.
OK jung@@
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.12 2015/10/06 14:58:37 tedu Exp $	*/
d19 2
@


1.12
log
@clear out some more legacy code and whatnot
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.11 2015/01/23 02:37:25 tedu Exp $	*/
a22 1
#define	INIT_PID	1	/* parent of orphans */
a29 4
#define	ROOT_UID	0	/* don't change this, it really must be root */
#define	ROOT_USER	"root"	/* ditto */

#define	PPC_NULL	((const char **)NULL)
@


1.11
log
@Remove the OK and ERR macros. They obfuscate the code and don't
help legibility. (unix system calls use 0 for ok, but hundreds of
other projects use 1 to indicate success.) Despite the name, many
system calls (e.g., open) also return not OK values for success.
It also cleans up some weird code like int crontab_fd = OK - 1;
This diff is mechanical in nature. Later I will fix the bugs it reveals.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.10 2015/01/23 01:01:06 tedu Exp $	*/
a49 1
#ifdef HAVE_TM_GMTOFF
a50 1
#endif
@


1.10
log
@remove debug code.
I think the level of debug code in cron is excessive for a program
that has reached feature complete. If cron needs to provide more
information to the user about its operational status, I think syslog
would be more appropriate. (The debug flags also disable forking
into the background, so they aren't even that useful for debugging a
live system.)
ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.9 2015/01/14 17:30:53 millert Exp $	*/
a19 5
	/* these are really immutable, and are
	 *   defined for symbolic convenience only
	 * TRUE, FALSE, and ERR must be distinct
	 * ERR must be < OK.
	 */
a21 4
	/* system calls return this on success */
#define OK		0
	/*   or this on error */
#define ERR		(-1)
@


1.9
log
@Replace MAXHOSTNAMELEN with HOST_NAME_MAX+1 and MAXNAMLEN with NAME_MAX
and use limits.h instead of sys/param.h.
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.8 2013/11/23 18:06:49 deraadt Exp $	*/
a31 5
	/* turn this on to get '-x' code */
#ifndef DEBUGGING
#define DEBUGGING	FALSE
#endif

a42 11
				/* NOTE: these correspond to DebugFlagNames,
				 *	defined below.
				 */
#define	DEXT		0x0001	/* extend flag for other debug masks */
#define	DSCH		0x0002	/* scheduling debug mask */
#define	DPROC		0x0004	/* process control debug mask */
#define	DPARS		0x0008	/* parsing debug mask */
#define	DLOAD		0x0010	/* database loading debug mask */
#define	DMISC		0x0020	/* misc debug mask */
#define	DTEST		0x0040	/* test mode: don't execute any commands */

d53 1
a53 12
#if DEBUGGING
# define Debug(mask, message) \
			if (DebugFlags & (mask)) \
				printf message;
#else /* !DEBUGGING */
# define Debug(mask, message) \
			;
#endif /* DEBUGGING */

#define	Set_LineNum(ln)	{Debug(DPARS|DEXT,("linenum=%d\n",ln)); \
			 LineNumber = ln; \
			}
@


1.8
log
@remove unused macro; ok jca
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.7 2011/08/22 19:32:42 millert Exp $	*/
a59 4

#ifndef MAXHOSTNAMELEN
#define MAXHOSTNAMELEN 64
#endif
@


1.7
log
@Use standard EXIT_SUCCESS/EXIT_FAILURE and STD{IN,OUT,ERR}_FILENO
defines instead of using custom macros.  OK deraadt@@ gilles@@
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.6 2004/06/17 22:11:55 millert Exp $	*/
a81 1
#define	MkUpper(ch)	(islower(ch) ? toupper(ch) : ch)
@


1.6
log
@UUpdate ISC copyright year to 2004
Remove unused macros Skip_Line and MkLower
Remove trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.5 2003/02/28 16:32:09 mpech Exp $	*/
a39 5
#define STDIN		0	/* what is stdin's file descriptor? */
#define STDOUT		1	/*   stdout's? */
#define STDERR		2	/*   stderr's? */
#define ERROR_EXIT	1	/* exit() with this will scare the shell */
#define	OK_EXIT		0	/* exit() with this is considered 'normal' */
@


1.5
log
@Fix double Debug() usage, for instance, Debug(DPARS|DEXT...)
Make sence if debugging.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.4 2003/02/20 20:38:08 millert Exp $	*/
d4 1
d11 7
a17 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE
 * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
a77 3
#define	Skip_Line(c, f) \
			do {c = get_char(f);} while (c != '\n' && c != EOF);

a86 1
#define	MkLower(ch)	(isupper(ch) ? tolower(ch) : ch)
@


1.4
log
@Sync with ISC cron-current + my at(1) integration.
The at(1) code is now more tightly integrated into the cron codebase.
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.3 2002/07/15 19:13:29 millert Exp $	*/
d83 1
a83 1
			if ( (DebugFlags & (mask) ) == (mask) ) \
@


1.3
log
@Move atrun(8) functionality into cron(8) proper.  This fixes the
long-standing annoyance that atrun's granularity is 10 minutes.
Most at jobs run with a 1 minute granularity.  Jobs submitted via
"at now" or "batch" will run immediately.  Includes a rewritten
cron(8) man page.  at(1) will be integrated more closely into
cron at a future date.

Upgrading notes:
    the atrun job in root's crontab should be removed.
    the /var/at/spool directory is no longer used
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.2 2001/02/20 02:03:19 millert Exp $	*/
d97 2
a98 2
#define RELOAD_CRON	0x2
#define RELOAD_AT	0x4
d101 1
a101 1
#define get_gmtoff(c, t)        (t->tm_gmtoff)
d104 1
a104 1
#define SECONDS_PER_MINUTE	60
a125 6

			/* each user's crontab will be held as a list of
			 * the following structure.
			 *
			 * These are the cron commands.
			 */
@


1.2
log
@Turn get_gmtoff into a macro for OSes with tm_gmtoff (like OpenBSD).
Save the GMT offset in a global so cron_sleep can use it.  This means
the offset can only change in set_time() which is really what we want.
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.1 2001/02/18 19:48:35 millert Exp $	*/
a62 1
#define	DBIT		0x0080	/* bit twiddling shown (long) */
a63 1
#define	CRON_TAB(u)	"%s/%s", SPOOL_DIR, u
d95 4
@


1.1
log
@Update to ISC cron 4.0b1 + our patches.  This is now under a BSD license.
I also fixed the signal handlers while I was at it.
@
text
@d1 1
a1 1
/*	$OpenBSD: macros.h,v 1.2 2000/01/02 20:53:43 vixie Exp $	*/
d97 4
@

