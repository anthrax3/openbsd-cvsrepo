head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.10.0.6
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.2
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.38
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.36
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.34
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.32
	OPENBSD_5_0:1.7.0.30
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.28
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.26
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.22
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.24
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.20
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.18
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.16
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.14
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.12
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.10
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.8
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.6
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.4
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.2
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.2;
locks; strict;
comment	@ * @;


1.13
date	2015.11.06.23.47.42;	author millert;	state Exp;
branches;
next	1.12;
commitid	8eaJrEU7qiymGijK;

1.12
date	2015.11.04.12.53.05;	author millert;	state Exp;
branches;
next	1.11;
commitid	2QMTGnuouMIAKrAq;

1.11
date	2015.10.06.14.58.37;	author tedu;	state Exp;
branches;
next	1.10;
commitid	DORRwC1MyrO1Yl4N;

1.10
date	2015.01.23.15.56.04;	author millert;	state Exp;
branches;
next	1.9;
commitid	J0ZSDUGnvc89fOFh;

1.9
date	2015.01.23.01.01.06;	author tedu;	state Exp;
branches;
next	1.8;
commitid	kzBIhYnXdVeOLxgw;

1.8
date	2013.08.15.20.19.26;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.06.17.22.11.55;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.20.20.38.08;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.17.18.40.11;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.15.19.13.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.02.19.14.33.33;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.02.18.20.14.01;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2001.02.18.19.48.35;	author millert;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Use __progname instead of the homegrown ProgramName.
@
text
@/*	$OpenBSD: globals.h,v 1.12 2015/11/04 12:53:05 millert Exp $	*/

/*
 * Copyright (c) 2004 by Internet Systems Consortium, Inc. ("ISC")
 * Copyright (c) 1997,2000 by Internet Software Consortium, Inc.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
 * OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

extern int	LineNumber;
extern char	*__progname;
@


1.12
log
@Change some globals from extern to static when they are not used
outside their respective .c files.  Also remove some unused defines.
OK jung@@
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.11 2015/10/06 14:58:37 tedu Exp $	*/
d20 2
a21 10
#ifdef MAIN_PROGRAM
# define XTRN
# define INIT(x) = x
#else
# define XTRN extern
# define INIT(x)
#endif

XTRN char	*ProgramName INIT("amnesia");
XTRN int	LineNumber INIT(0);
@


1.11
log
@clear out some more legacy code and whatnot
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.10 2015/01/23 15:56:04 millert Exp $	*/
a27 19
XTRN const char *MonthNames[]
#ifdef MAIN_PROGRAM
	= {
		"Jan", "Feb", "Mar", "Apr", "May", "Jun",
		"Jul", "Aug", "Sep", "Oct", "Nov", "Dec",
		NULL
	}
#endif
	;

XTRN const char *DowNames[]
#ifdef MAIN_PROGRAM
	= {
		"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun",
		NULL
	}
#endif
	;

a29 2
XTRN time_t	StartTime INIT(0);
XTRN int	NoFork INIT(0);
@


1.10
log
@Remove now-unused DebugFlags.
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.9 2015/01/23 01:01:06 tedu Exp $	*/
a25 15
#endif

#if 0
XTRN const char *copyright[]
#ifdef MAIN_PROGRAM
	= {
		"@@(#) ISC Cron V4.1",
		"@@(#) Copyright 1988,1989,1990,1993,1994 by Paul Vixie",
		"@@(#) Copyright 1997,2000 by Internet Software Consortium, Inc.",
		"@@(#) Copyright 2004 by Internet Systems Consortium, Inc.",
		"@@(#) All rights reserved",
		NULL
	}
#endif
	;
@


1.9
log
@remove debug code.
I think the level of debug code in cron is excessive for a program
that has reached feature complete. If cron needs to provide more
information to the user about its operational status, I think syslog
would be more appropriate. (The debug flags also disable forking
into the background, so they aren't even that useful for debugging a
live system.)
ok deraadt millert
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.8 2013/08/15 20:19:26 millert Exp $	*/
a65 2

#define	DebugFlags	0
@


1.8
log
@Don't include unused copyright[] string in all the cron binaries.
OK mikeb@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.7 2004/06/17 22:11:55 millert Exp $	*/
a66 10
#if DEBUGGING
XTRN int	DebugFlags INIT(0);
XTRN const char *DebugFlagNames[]
#ifdef MAIN_PROGRAM
	= {
		"ext", "sch", "proc", "pars", "load", "misc", "test", NULL
	}
#endif
	;
#else
a67 1
#endif /* DEBUGGING */
@


1.7
log
@UUpdate ISC copyright year to 2004
Remove unused macros Skip_Line and MkLower
Remove trailing whitespace
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.6 2003/02/20 20:38:08 millert Exp $	*/
d28 1
d41 1
@


1.6
log
@Sync with ISC cron-current + my at(1) integration.
The at(1) code is now more tightly integrated into the cron codebase.
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.5 2003/02/17 18:40:11 millert Exp $	*/
d4 1
d11 7
a17 8
 * THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS
 * ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE
 * CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
d31 1
d33 2
a34 1
		"@@(#) Copyright 1997 by Internet Software Consortium, Inc.",
d44 2
a45 2
		"Jan", "Feb", "Mar", "Apr", "May", "Jun",\
		"Jul", "Aug", "Sep", "Oct", "Nov", "Dec",\
d54 1
a54 1
		"Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun",\
@


1.5
log
@Add a -n flag and version string; from vixie
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.4 2002/07/15 19:13:29 millert Exp $	*/
d73 1
a73 1
#define DebugFlags	0
@


1.4
log
@Move atrun(8) functionality into cron(8) proper.  This fixes the
long-standing annoyance that atrun's granularity is 10 minutes.
Most at jobs run with a 1 minute granularity.  Jobs submitted via
"at now" or "batch" will run immediately.  Includes a rewritten
cron(8) man page.  at(1) will be integrated more closely into
cron at a future date.

Upgrading notes:
    the atrun job in root's crontab should be removed.
    the /var/at/spool directory is no longer used
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.3 2001/02/19 14:33:33 millert Exp $	*/
d61 1
@


1.3
log
@Normalize the time in minutes to GMT so we can really catch DST changes
(since time() does not change during a DST switch).  This makes cron
correctly detect DST changes.  It does not fix the problem of wildcard
jobs running multiple times.  Also, don't rely on tm_gmtoff since that
is non-standard (but use it when we have it).
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.2 2001/02/18 20:14:01 millert Exp $	*/
d67 1
a67 2
		"ext", "sch", "proc", "pars", "load", "misc", "test", "bit",\
		NULL
@


1.2
log
@Define CAPITALIZE_FOR_PS so children are capitalized in ps (like before).
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.1 2001/02/18 19:48:35 millert Exp $	*/
a60 3
XTRN time_min	timeRunning INIT(0);
XTRN time_min	virtualTime INIT(0);
XTRN time_min	clockTime INIT(0);
@


1.1
log
@Update to ISC cron 4.0b1 + our patches.  This is now under a BSD license.
I also fixed the signal handlers while I was at it.
@
text
@d1 1
a1 1
/*	$OpenBSD: globals.h,v 1.2 2000/01/02 20:53:42 vixie Exp $	*/
d58 1
a58 1
XTRN const char *ProgramName INIT("amnesia");
@

