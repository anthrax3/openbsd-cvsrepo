head	1.34;
access;
symbols
	OPENBSD_6_2_BASE:1.34
	OPENBSD_6_1:1.34.0.4
	OPENBSD_6_1_BASE:1.34
	OPENBSD_6_0:1.33.0.12
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.8
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.33.0.10
	OPENBSD_5_8_BASE:1.33
	OPENBSD_5_7:1.33.0.2
	OPENBSD_5_7_BASE:1.33
	OPENBSD_5_6:1.33.0.6
	OPENBSD_5_6_BASE:1.33
	OPENBSD_5_5:1.33.0.4
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.25.0.2
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.24.0.10
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.8
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.6
	OPENBSD_5_0:1.24.0.4
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.2
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.21.0.14
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.10
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.12
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.8
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.6
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.20.0.12
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.10
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.8
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.6
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.20.0.4
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.20.0.2
	OPENBSD_3_6_BASE:1.20
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.16.0.4
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.34
date	2016.10.12.17.27.08;	author schwarze;	state Exp;
branches;
next	1.33;
commitid	CRKdWihzGfr4YS01;

1.33
date	2014.01.30.20.02.42;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2014.01.30.17.49.40;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2014.01.30.13.32.58;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2014.01.20.05.07.48;	author schwarze;	state Exp;
branches;
next	1.29;

1.29
date	2013.08.14.16.07.53;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2013.08.14.14.58.06;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2013.08.14.08.41.16;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2013.08.14.08.39.32;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2013.07.16.11.13.33;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2010.11.19.17.16.48;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2010.09.20.07.41.17;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2010.09.19.21.59.23;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.31.19.20.23;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2004.06.17.22.11.55;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.12.12.59.50;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.02.20.20.38.08;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2002.07.08.18.11.02;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.22.23.14.27;	author hugh;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.22.18.29.29;	author heko;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.02.18.37.34;	author mpech;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.19.22.40.24;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.18.19.48.32;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.15.11.53.29;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.19.17.57.03;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.10.08.19.18;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	99.07.09.13.35.53;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.07.10.50.11;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.07.02.20.11.48;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.06.18.02.11.44;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.05.22.16.35;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	97.07.17.07.34.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.07.09.13.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.34
log
@Document the "-q " prefix accepted in the "command" field.
Original patch from Wouter Clarie <wclarie at gmail com>,
tweaked in joint work with jca@@,
OK millert@@, OK jca@@ on an earlier version.
@
text
@.\"/* Copyright 1988,1990,1993,1994 by Paul Vixie
.\" * All rights reserved
.\" */
.\"
.\" Copyright (c) 2004 by Internet Systems Consortium, Inc. ("ISC")
.\" Copyright (c) 1997,2000 by Internet Software Consortium, Inc.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT
.\" OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $OpenBSD: crontab.5,v 1.33 2014/01/30 20:02:42 jmc Exp $
.\"
.Dd $Mdocdate: January 30 2014 $
.Dt CRONTAB 5
.Os
.Sh NAME
.Nm crontab
.Nd tables for driving cron
.Sh DESCRIPTION
A
.Nm
file contains instructions to the
.Xr cron 8
daemon of the general form:
.Dq at these times on these dates run this command .
There may be a system
.Nm
and each user may have their own
.Nm .
Commands in any given
.Nm
will be
executed either as the user who owns the
.Nm
or, in the case of the system
.Nm crontab ,
as the user specified on the command line.
.Pp
While a
.Nm
is a text file, it is not intended to be directly edited.
Creation, modification, and removal of a
.Nm
should be done using
.Xr crontab 1 .
.Pp
Blank lines, leading spaces, and tabs are ignored.
Lines whose first non-space character is a pound sign
.Pq Ql #
are comments, and are ignored.
Note that comments are not allowed on the same line as
.Xr cron 8
commands, since
they will be taken to be part of the command.
Similarly, comments are not
allowed on the same line as environment variable settings.
.Pp
An active line in a
.Nm
is either an environment variable setting or a
.Xr cron 8
command.
.Pp
Environment variable settings create the environment
any command in the
.Nm
is run in.
An environment variable setting is of the form:
.Pp
.Dl name = value
.Pp
The spaces around the equal sign
.Pq Ql =
are optional, and any subsequent non-leading spaces in
.Ar value
will be part of the value assigned to
.Ar name .
The
.Ar value
string may be placed in quotes
.Pq single or double , but matching
to preserve leading or trailing blanks.
.Pp
Lines in the system
.Nm
have six fixed fields plus a command, in the form:
.Bd -ragged -offset indent
.Ar minute
.Ar hour
.Ar day-of-month
.Ar month
.Ar day-of-week
.Ar user
.Ar command
.Ed
.Pp
While lines in a user
.Nm
have five fixed fields plus a command, in the form:
.Bd -ragged -offset indent
.Ar minute
.Ar hour
.Ar day-of-month
.Ar month
.Ar day-of-week
.Ar command
.Ed
.Pp
Fields are separated by blanks or tabs.
The command may be one or more fields long.
The allowed values for the fields are:
.Bl -column "day-of-month" "allowed values" -offset indent
.It Sy field Ta Sy allowed values
.It Ar minute Ta * or 0\(en59
.It Ar hour Ta * or 0\(en23
.It Ar day-of-month Ta * or 1\(en31
.It Ar month Ta * or 1\(en12 or a name (see below)
.It Ar day-of-week Ta * or 0\(en7 or a name (0 or 7 is Sunday)
.It Ar user Ta a valid username
.It Ar command Ta text
.El
.Pp
Lists are allowed.
A list is a set of numbers (or ranges) separated by commas.
For example,
.Dq 1,2,5,9
or
.Dq 0\(en4,8\(en12 .
.Pp
Ranges of numbers are allowed.
Ranges are two numbers separated with a hyphen.
The specified range is inclusive.
For example,
8\(en11 for an
.Ar hour
entry specifies execution at hours 8, 9, 10 and 11.
.Pp
Step values can be used in conjunction with ranges.
Following a range with
.No / Ns Ar number
specifies skips of
.Ar number
through the range.
For example,
.Dq 0\(en23/2
can be used in the
.Ar hour
field to specify command execution every other hour.
Steps are also permitted after an asterisk, so to say
.Dq every two hours ,
just use
.Dq */2 .
.Pp
An asterisk
.Pq Ql *
is short form for a range of all allowed values.
.Pp
Names can be used in the
.Ar month
and
.Ar day-of-week
fields.
Use the first three letters of the particular
day or month (case doesn't matter).
Ranges or lists of names are not allowed.
.Pp
The
.Ar command
field (the rest of the line) is the command to be
run.
The entire command portion of the line, up to a newline or %
character, will be executed by
.Pa /bin/sh
or by the shell
specified in the
.Ev SHELL
variable of the
.Nm crontab .
Percent signs
.Pq Ql %
in the command, unless escaped with a backslash
.Pq Ql \e ,
will be changed into newline characters, and all data
after the first
.Ql %
will be sent to the command as standard input.
If the
.Ar command
field begins with
.Ql -q ,
execution will not be logged.
Use whitespace to separate
.Ql -q
from the command.
.Pp
Commands are executed by
.Xr cron 8
when the
.Ar minute ,
.Ar hour ,
and
.Ar month
fields match the current time,
.Em and
when at least one of the two day fields
.Po Ar day-of-month
or
.Ar day-of-week Pc ,
match the current time.
.Pp
Note: The day of a command's execution can be specified by two
fields \(em
.Ar day-of-month
and
.Ar day-of-week .
If both fields are restricted (i.e. aren't *),
the command will be run when
.Em either
field matches the current time.
For example,
.Pp
.Dl 30 4 1,15 * 5
.Pp
would cause a command to be run at 4:30 am on the 1st and 15th of each
month, plus every Friday.
.Pp
Instead of the first five fields, one of eight special strings may appear:
.Bl -column "@@midnight" "meaning" -offset indent
.It Sy string Ta Sy meaning
.It @@reboot Ta Run once, at startup.
.It @@yearly Ta Run every January 1 (0 0 1 1 *).
.It @@annually Ta The same as @@yearly.
.It @@monthly Ta Run the first day of every month (0 0 1 * *).
.It @@weekly Ta Run every Sunday (0 0 * * 0).
.It @@daily Ta Run every midnight (0 0 * * *).
.It @@midnight Ta The same as @@daily.
.It @@hourly Ta Run every hour, on the hour (0 * * * *).
.El
.Sh ENVIRONMENT
.Bl -tag -width "LOGNAMEXXX"
.It Ev HOME
Set from the user's
.Pa /etc/passwd
entry.
May be overridden by settings in the
.Nm .
.It Ev LOGNAME
Set from the user's
.Pa /etc/passwd
entry.
May not be overridden by settings in the
.Nm .
.It Ev MAILTO
If
.Ev MAILTO
is defined and non-empty,
mail is sent to the user so named.
If
.Ev MAILTO
is defined but empty
.Pq Ev MAILTO = Qq ,
no mail will be sent.
Otherwise mail is sent to the owner of the
.Nm .
This is useful for pseudo-users that lack an alias
that would otherwise redirect the mail to a real person.
.It Ev SHELL
Set to
.Pa /bin/sh .
May be overridden by settings in the
.Nm .
.It Ev USER
Set from the user's
.Pa /etc/passwd
entry.
May not be overridden by settings in the
.Nm .
.El
.Sh FILES
.Bl -tag -width "/var/cron/tabs/<user>XXX" -compact
.It Pa /etc/crontab
System crontab.
.It Pa /var/cron/tabs/ Ns Aq Ar user
User crontab.
.El
.Sh EXAMPLES
.Bd -literal
# use /bin/sh to run commands, no matter what /etc/passwd says
SHELL=/bin/sh
# mail any output to `paul', no matter whose crontab this is
MAILTO=paul
#
# run five minutes after midnight, every day
5 0 * * *       $HOME/bin/daily.job >> $HOME/tmp/out 2>&1
# run at 2:15pm on the first of every month -- output mailed to paul
15 14 1 * *     $HOME/bin/monthly
# run at 10 pm on weekdays, annoy Joe
0 22 * * 1-5	mail -s "It's 10pm" joe%Joe,%%Where are your kids?%
23 0-23/2 * * * echo "run 23 minutes after midn, 2am, 4am ..., everyday"
5 4 * * sun     echo "run at 5 after 4 every sunday"
.Ed
.Sh SEE ALSO
.Xr crontab 1 ,
.Xr cron 8
.Sh STANDARDS
The
.Nm
file format is compliant with the
.St -p1003.1-2008
specification.
The behaviours described below are all extensions to that standard:
.Bl -dash
.It
The
.Ar day-of-week
field may use 7 to represent Sunday.
.It
Ranges may include
.Dq steps .
.It
Months or days of the week can be specified by name.
.It
Logging can be suppressed with
.Ql -q .
.It
Environment variables can be set in a crontab.
.It
Command output can be mailed to a person other than the crontab
owner, or the feature can be turned off and no mail will be sent
at all.
.It
All of the
.Ql @@
commands that can appear in place of the first five fields.
.El
.Sh AUTHORS
.Nm
was written by
.An Paul Vixie Aq Mt vixie@@isc.org .
@


1.33
log
@reinstate the note that setting env vars in a crontab is an extension;
ok millert (actually it was millert who pointed it out) + sobrado
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.32 2014/01/30 17:49:40 jmc Exp $
d196 8
d331 3
@


1.32
log
@reorganise this file into something a bit saner, killing wacky macros
as we go;

ok sobrado millert
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.31 2014/01/30 13:32:58 jmc Exp $
d323 2
@


1.31
log
@update the EXTENSIONS section, renaming it to STANDARDS while here;
help/ok millert sobrado
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.30 2014/01/20 05:07:48 schwarze Exp $
d22 1
a22 1
.Dd $Mdocdate: January 20 2014 $
d34 1
a34 3
.Do
at these times on these dates run this command
.Dc .
a36 1
.Pq Pa /etc/crontab
d38 1
a38 2
.Nm
.Pq Pa /var/cron/tabs/<user> .
d46 1
a46 9
as the user specified in the command line.
Uucp and News will usually each have
their own
.Nm crontab ,
eliminating the need for explicitly running
.Xr su 1
as part of a
.Xr cron 8
command.
a72 2
.Em Environment Variable Settings
.Pp
d79 1
a79 1
.Dl name \&= value
d81 1
a81 1
where the spaces around the equal-sign
d84 1
a84 1
.Fa value
d86 1
a86 1
.Fa name .
d88 1
a88 1
.Fa value
a92 60
Several environment variables are set automatically by the
.Xr cron 8
daemon.
.Ev SHELL
is set to
.Pa /bin/sh ,
and
.Ev LOGNAME ,
.Ev HOME ,
and
.Ev USER
are set from the
.Pa /etc/passwd
line of the
.Nm crontab Ns \&'s
owner.
.Ev HOME
and
.Ev SHELL
may be overridden by settings in the
.Nm crontab ;
.Ev LOGNAME
and
.Ev USER
may not.
.Pp
In addition to
.Ev LOGNAME ,
.Ev HOME ,
.Ev USER ,
and
.Ev SHELL ,
.Xr cron 8
will look at
.Ev MAILTO
if it has any reason to send mail as a result of running
commands in
.Dq this
.Nm crontab .
If
.Ev MAILTO
is defined (and non-empty),
mail is sent to the user so named.
If
.Ev MAILTO
is defined but empty
.Pq Ev MAILTO \&= Qq ,
no
mail will be sent.
Otherwise mail is sent to the owner of the
.Nm crontab .
This option is useful for pseudo-users that lack an alias
that would otherwise redirect the mail to a real person.
.Pp
.Em cron Commands
.Pp
The format of a
.Xr cron 8
command is very much the V7 standard, with a number of
upward-compatible extensions.
d95 1
a95 1
have six fixed fields plus a command in the form:
d99 1
a99 1
.Ar day\-of\-month
d101 1
a101 1
.Ar day\-of\-week
d108 1
a108 1
have five fixed fields plus a command in the form:
d112 1
a112 1
.Ar day\-of\-month
d114 1
a114 1
.Ar day\-of\-week
d121 9
a129 20
.Pp
.Bl -tag -width "day-of-month" -compact -offset indent
.It field
allowed values
.It -----
--------------
.It Ar minute
* or 0\-59
.It Ar hour
* or 0\-23
.It Ar day\&-of\&-month
* or 1-31
.It Ar month
* or 1-12 or a name (see below)
.It Ar day\&-of\&-week
* or 0-7 or a name (0 or 7 is Sunday)
.It Ar user
a valid username
.It Ar command
text
d134 4
a137 5
Examples:
.Sm off
.Dq 1 , 2 , 5 , 9 ,
.Dq 0\&-4 , 8\&-12 .
.Sm on
d143 2
a144 2
8\-11 for an
.Fa hour
d149 1
a149 1
.No \&/ Ns Ar number
d151 1
a151 1
.Fa number
d154 1
a154 1
.Dq 0-23/2
d156 3
a158 5
.Fa hour
field to specify command execution every other hour (the alternative
in the V7 standard is
.Dq 0,2,4,6,8,10,12,14,16,18,20,22 ) .
Steps are also permitted after an asterisk, so if you want to say
d161 1
a161 1
.Dq \&*\&/2 .
d168 1
a168 1
.Fa month
d170 1
a170 1
.Fa day\&-of\&-week
d177 1
a177 1
.Fa command
d200 2
a201 2
.Fa minute ,
.Fa hour ,
d203 1
a203 1
.Fa month
d207 1
a207 1
.Pf ( Fa day\&-of\&-month
d209 2
a210 6
.Fa day\&-of\&-week ,
see Note below) match the current time.
.Xr cron 8
examines
.Nm
entries once every minute.
d214 1
a214 1
.Ar day\&-of\&-month
d216 3
a218 3
.Ar day\&-of\&-week .
If both fields are
restricted (i.e., aren't *), the command will be run when
d223 1
a223 1
.Dl 30 4 1\&,15 \&* 5
d229 57
a285 24
.Pp
.Bl -tag -width "@@annually" -offset indent -compact
.It string
meaning
.It ------
-------
.It @@reboot
Run once, at
.Xr cron 8
startup.
.It @@yearly
Run every January 1, "0 0 1 1 *".
.It @@annually
(same as @@yearly).
.It @@monthly
Run the first day of every month, "0 0 1 * *".
.It @@weekly
Run every Sunday, "0 0 * * 0".
.It @@daily
Run every midnight, "0 0 * * *".
.It @@midnight
(same as @@daily).
.It @@hourly
Run every hour, on the hour, "0 * * * *".
d333 3
a335 1
.An Paul Vixie Aq Mt vixie@@isc.org
@


1.30
log
@Obvious .Xr fixes, found while testing mandocdb(8).
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.29 2013/08/14 16:07:53 jmc Exp $
d22 1
a22 1
.Dd $Mdocdate: August 14 2013 $
d365 16
a380 30
.Sh EXTENSIONS
When specifying
.Fa day\&-of\&-week ,
both day 0 and day 7 will be considered Sunday.
.Bx
and
.At
seem to disagree about this.
.Pp
Lists and ranges are allowed to coexist in the same field.
.Dq 1\&-3,7\&-9
would
be rejected by
.At
or
.Bx
.Xr cron 8
\(em they want to see
.Dq 1\&-3
or
.Dq 7,8,9
.Em only .
.Pp
Ranges can include
.Dq steps ,
so
.Dq 1-9/2
is the same as
.Dq 1,3,5,7,9 .
.Pp
d382 5
a386 7
.Pp
Environment variables can be set in the crontab.
.Pp
Command output is mailed to the crontab owner, can be
mailed to a person other than the crontab owner, or the
feature can be turned off and no mail will be sent at all.
.Pp
d389 2
a390 2
commands that can appear in place of the first five fields
are extensions.
@


1.29
log
@editing blip in previous;
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.28 2013/08/14 14:58:06 millert Exp $
d381 1
a381 1
.Xr cron
@


1.28
log
@ISC cron is the defacto BSD cron these days so remove confusing
remarks about the historic BSD and SysV crons.  OK jmc@@
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.27 2013/08/14 08:41:16 jmc Exp $
a401 1
either).
@


1.27
log
@macro simplification;
From: Jan Stary
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.26 2013/08/14 08:39:32 jmc Exp $
d114 2
a115 1
.Ev LOGNAME
d117 1
a117 1
.Ev HOME
d129 2
a132 15
Note: on
.Bx
systems the
.Ev LOGNAME
variable is sometimes called
.Ev USER .
On
.Ox ,
.Xr cron 8
will set both
.Ev USER
and
.Ev LOGNAME
to the same value.
.Pp
d136 1
a397 7
In
.Bx
or
.At ,
the
environment handed to child processes is basically the one from
.Pa /etc/rc .
d399 3
a401 8
Command output is mailed to the crontab owner
.Po
.Bx
can't do this
.Pc ,
can be
mailed to a person other than the crontab owner (SysV can't do this), or the
feature can be turned off and no mail will be sent at all (SysV can't do this
@


1.26
log
@some Bx/Ox conversion;
From: Jan Stary
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.25 2013/07/16 11:13:33 schwarze Exp $
d22 1
a22 1
.Dd $Mdocdate: July 16 2013 $
d39 1
a39 1
.Pf ( Pa /etc/crontab )
d42 1
a42 1
.Pf ( Pa /var/cron/tabs/<user> ) .
@


1.25
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.24 2010/11/19 17:16:48 millert Exp $
d22 1
a22 1
.Dd $Mdocdate: November 19 2010 $
d130 3
a132 1
Note: on BSD systems the
d380 4
a383 1
BSD and ATT seem to disagree about this.
d388 4
a391 1
be rejected by ATT or BSD
d409 14
a422 4
In BSD or ATT, the
environment handed to child processes is basically the one from /etc/rc.
.Pp
Command output is mailed to the crontab owner (BSD can't do this), can be
@


1.24
log
@Use regular double quotes ("") in the MAILTO example so we don't
suggest something that is a syntax error.  OK jmc@@
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.23 2010/09/20 07:41:17 jmc Exp $
d22 1
a22 1
.Dd $Mdocdate: September 20 2010 $
d414 1
a414 1
.An Paul Vixie Aq vixie@@isc.org
@


1.23
log
@according to ingo, it isn;t a problem to have empty [BDS]q macros, so
revert that part of yesterday's diffs;
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.22 2010/09/19 21:59:23 jmc Exp $
d22 1
a22 1
.Dd $Mdocdate: September 19 2010 $
d162 1
a162 1
.Pq Ev MAILTO \&= Sq ,
@


1.22
log
@more wacky macro fixing;
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.21 2007/05/31 19:20:23 jmc Exp $
d22 1
a22 1
.Dd $Mdocdate: May 31 2007 $
d162 1
a162 1
.Pq Ev MAILTO \&= \(oq\(cq ,
@


1.21
log
@convert to new .Dd format;
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.20 2004/06/17 22:11:55 millert Exp $
d22 1
a22 1
.Dd $Mdocdate$
d162 1
a162 1
.Pq Ev MAILTO \&= Sq ,
@


1.20
log
@UUpdate ISC copyright year to 2004
Remove unused macros Skip_Line and MkLower
Remove trailing whitespace
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.19 2003/06/12 12:59:50 jmc Exp $
d22 1
a22 1
.Dd June 8, 1999
@


1.19
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- new sentence, new line
@
text
@d5 1
d12 7
a18 8
.\" THE SOFTWARE IS PROVIDED "AS IS" AND INTERNET SOFTWARE CONSORTIUM DISCLAIMS
.\" ALL WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL INTERNET SOFTWARE
.\" CONSORTIUM BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
.\" DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
.\" PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
.\" ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
.\" SOFTWARE.
d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.18 2003/02/20 20:38:08 millert Exp $
@


1.18
log
@Sync with ISC cron-current + my at(1) integration.
The at(1) code is now more tightly integrated into the cron codebase.
@
text
@d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.17 2002/07/08 18:11:02 millert Exp $
d414 1
a414 1
Paul Vixie <vixie@@isc.org>
@


1.17
log
@Merge in some changes from Paul Vixie's tree; most are cosmetic
o ANSI function headers
o return (foo) not return foo
o add -oi to sendmail flags
o update email address in man pages
o make some strings const
o completely remove globbing cruft from popen.c
o whitespace changes
o add DOW_STAR to flags for "monthly", "weekly", and "daily" cron entries
@
text
@d5 2
d20 1
a20 1
.\" $OpenBSD: crontab.5,v 1.16 2001/08/22 23:14:27 hugh Exp $
@


1.16
log
@More manpage mania. Crontab entries are comprised of a certain number
of fixed fields (the time spec, etc) and a command which may itself
be one or more fields long. Make this clear.
@
text
@d18 1
a18 1
.\" $OpenBSD: crontab.5,v 1.15 2001/08/22 18:29:29 heko Exp $
d412 1
a412 1
Paul Vixie <paul@@vix.com>
@


1.15
log
@ o System crontab has seven (7) fields
 o User crontab has six (6) fields
 o Closes PR 2021; thanks jamesez@@cerberus.jimz.net
 o Okay millert@@
@
text
@d18 1
a18 1
.\" $OpenBSD: crontab.5,v 1.13 2001/06/19 22:40:24 millert Exp $
d176 1
a176 1
have seven fields in the form:
d187 1
a187 1
while lines in a user
d189 1
a189 1
have six fields in the form:
d200 1
@


1.14
log
@o) .Sh AUTHOR -> .Sh AUTHORS;
o) .Sh EXAMPLE -> .Sh EXAMPLES;
o) Delete .Sh OPTIONS. Text moved to .Sh DESCRIPTION;

millert@@ ok
@
text
@d176 1
a176 1
have six fields in the form:
d189 1
a189 1
have five fields in the form:
@


1.13
log
@o Don't talk about /bin/mail vs. sendmail since we always build with
  sendmail support.
o Remove misleading info in STANDARDS about the syntax being different
  from previous Vixie Cron versions.  The flags have been this way for
  all versions of cron we have shipped with.
@
text
@d18 1
a18 1
.\" $OpenBSD: crontab.5,v 1.12 2001/02/18 19:48:32 millert Exp $
d410 1
a410 1
.Sh AUTHOR
@


1.12
log
@Update to ISC cron 4.0b1 + our patches.  This is now under a BSD license.
I also fixed the signal handlers while I was at it.
@
text
@d18 1
a18 1
.\" $OpenBSD: crontab.5,v 1.11 2000/04/15 11:53:29 aaron Exp $
d165 2
a166 12
This option is useful if you decide on
.Pa /bin/mail
instead of
.Pa /usr/lib/sendmail
as
your mailer when you install
.Xr cron 8
\(em
.Pa /bin/mail
doesn't do aliasing, and
.Tn UUCP
usually doesn't read its mail.
@


1.11
log
@- `coexist', not `co-exist'; it's not hyphenated.
- Correct some .Nm usage.
@
text
@d1 1
a1 1
.\"	$NetBSD: crontab.5,v 1.5 1997/07/13 11:01:16 mouse Exp $
a2 13
.\" *
.\" * Distribute freely, except: don't remove my name from the source or
.\" * documentation (don't take credit for my work), mark your changes (don't
.\" * get me blamed for your possible bugs), don't alter or remove this
.\" * notice.  May be sold if buildable source is provided to buyer.  No
.\" * warrantee of any kind, express or implied, is included with this
.\" * software; use at your own risk, responsibility for damages (if any) to
.\" * anyone resulting from the use of this software rests entirely with the
.\" * user.
.\" *
.\" * Send bug reports, bug fixes, enhancements, requests, flames, etc., and
.\" * I'll try to keep a version up to date.  I can be reached as follows:
.\" * Paul Vixie          <paul@@vix.com>          uunet!decwrl!vixie!paul
d5 14
a18 1
.\" $Id: crontab.5,v 1.10 2000/03/19 17:57:03 aaron Exp $
@


1.10
log
@Remove hard sentence breaks. Add $OpenBSD$ tags where appropriate. Some other
cleanup along the way.
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.9 2000/01/10 08:19:18 deraadt Exp $
d36 1
a36 1
.Nm crontab
d39 1
a39 1
.Nm crontab
d387 1
a387 1
Lists and ranges are allowed to co-exist in the same field.
@


1.9
log
@the the
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.8 1999/07/09 13:35:53 aaron Exp $
d66 2
a67 2
Blank lines, leading spaces, and tabs are ignored. Lines whose first
non-space character is a pound sign
d73 2
a74 1
they will be taken to be part of the command. Similarly, comments are not
d88 2
a89 1
is run in. An environment variable setting is of the form:
d156 2
a157 1
mail is sent to the user so named. If
d162 2
a163 1
mail will be sent. Otherwise mail is sent to the owner of the
d183 2
a184 1
upward-compatible extensions. Lines in the system
d212 1
a212 1
.Bl -tag -width "day-of-month"  -compact -offset indent
d233 3
a235 2
Lists are allowed. A list is a set of numbers (or ranges)
separated by commas. Examples:
d241 4
a244 2
Ranges of numbers are allowed. Ranges are two numbers separated
with a hyphen. The specified range is inclusive. For example,
d249 2
a250 2
Step values can be used in conjunction with ranges. Following
a range with
d254 2
a255 1
through the range. For example,
d275 4
a278 3
fields. Use the first three letters of the particular
day or month (case doesn't matter). Ranges or
lists of names are not allowed.
d328 2
a329 1
field matches the current time. For example,
d407 2
a408 1
Environment variables can be set in the crontab. In BSD or ATT, the
@


1.8
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.7 1999/07/07 10:50:11 aaron Exp $
d181 1
a181 1
have six fields in the the form:
@


1.7
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d18 2
a19 2
.\" $Id: crontab.5,v 1.6 1999/07/02 20:11:48 aaron Exp $
.\" 
d37 1
a37 1
.Pf ( Pa /etc/crontab ) 
d71 1
a71 1
.Xr cron 8 
d114 1
a114 1
.Pa /etc/passwd 
d154 1
a154 1
mail is sent to the user so named. If 
@


1.6
log
@consistent .Dd usage; proper format is: .Dd Month DD, YYYY
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.5 1999/06/18 02:11:44 aaron Exp $
d21 1
a22 1
.Dt CRONTAB 5
@


1.5
log
@new mandoc cron(8), crontab(1), and crontab(5) man pages; kwesterback@@home.com
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.3 1997/07/17 07:34:44 deraadt Exp $
d20 1
a20 1
.Dd 8 June, 1999
@


1.4
log
@remove trailing whitespace, some Nm cleanup
@
text
@d19 8
a26 6
.\"
.TH CRONTAB 5 "24 January 1994"
.UC 4
.SH NAME
crontab \- tables for driving cron
.SH DESCRIPTION
d28 1
a28 1
.I crontab
d30 44
a73 12
.IR cron (8)
daemon of the general form: ``run this command at this time on this date''.
Each user has their own crontab, and commands in any given crontab will be
executed as the user who owns the crontab.  Uucp and News will usually have
their own crontabs, eliminating the need for explicitly running
.IR su (1)
as part of a cron command.
.PP
Blank lines and leading spaces and tabs are ignored.  Lines whose first
non-space character is a pound-sign (#) are comments, and are ignored.
Note that comments are not allowed on the same line as cron commands, since
they will be taken to be part of the command.  Similarly, comments are not
d75 20
a94 9
.PP
An active line in a crontab will be either an environment setting or a cron
command.  An environment setting is of the form,
.PP
    name = value
.PP
where the spaces around the equal-sign (=) are optional, and any subsequent
non-leading spaces in
.I value
d96 1
a96 1
.IR name .
d98 7
a104 7
.I value
string may be placed in quotes (single or double, but matching) to preserve
leading or trailing blanks.
.PP
Several environment variables are set up
automatically by the
.IR cron (8)
d106 66
a171 15
SHELL is set to /bin/sh, and LOGNAME and HOME are set from the /etc/passwd
line of the crontab's owner.
HOME and SHELL may be overridden by settings in the crontab; LOGNAME may not.
.PP
(Another note: the LOGNAME variable is sometimes called USER on BSD systems...
on these systems, USER will be set also.)
.PP
In addition to LOGNAME, HOME, and SHELL,
.IR cron (8)
will look at MAILTO if it has any reason to send mail as a result of running
commands in ``this'' crontab.  If MAILTO is defined (and non-empty), mail is
sent to the user so named.  If MAILTO is defined but empty (MAILTO=""), no
mail will be sent.  Otherwise mail is sent to the owner of the crontab.  This
option is useful if you decide on /bin/mail instead of /usr/lib/sendmail as
your mailer when you install cron -- /bin/mail doesn't do aliasing, and UUCP
d173 77
a249 43
.PP
The format of a cron command is very much the V7 standard, with a number of
upward-compatible extensions.  Each line has five time and date fields,
followed by a user name if this is the system crontab file,
followed by a command.  Commands are executed by
.IR cron (8)
when the minute, hour, and month of year fields match the current time,
.I and
when at least one of the two day fields (day of month, or day of week)
match the current time (see ``Note'' below).
.IR cron (8)
examines cron entries once every minute.
The time and date fields are:
.IP
.ta 1.5i
field	allowed values
.br
-----	--------------
.br
minute	0-59
.br
hour	0-23
.br
day of month	1-31
.br
month	1-12 (or names, see below)
.br
day of week	0-7 (0 or 7 is Sun, or use names)
.br
.PP
A field may be an asterisk (*), which always stands for ``first\-last''.
.PP
Ranges of numbers are allowed.  Ranges are two numbers separated
with a hyphen.  The specified range is inclusive.  For example,
8-11 for an ``hours'' entry specifies execution at hours 8, 9, 10
and 11.
.PP
Lists are allowed.  A list is a set of numbers (or ranges)
separated by commas.  Examples: ``1,2,5,9'', ``0-4,8-12''.
.PP
Step values can be used in conjunction with ranges.  Following
a range with ``/<number>'' specifies skips of the number's value
through the range.  For example, ``0-23/2'' can be used in the hours
d251 17
a267 7
in the V7 standard is ``0,2,4,6,8,10,12,14,16,18,20,22'').  Steps are
also permitted after an asterisk, so if you want to say ``every two
hours'', just use ``*/2''.
.PP
Names can also be used for the ``month'' and ``day of week''
fields.  Use the first three letters of the particular
day or month (case doesn't matter).  Ranges or
d269 4
a272 2
.PP
The ``sixth'' field (the rest of the line) specifies the command to be
d275 35
a309 7
character, will be executed by /bin/sh or by the shell
specified in the SHELL variable of the cronfile.
Percent-signs (%) in the command, unless escaped with backslash
(\\), will be changed into newline characters, and all data
after the first % will be sent to the command as standard
input.
.PP
d311 11
a321 6
fields \(em day of month, and day of week.  If both fields are
restricted (ie, aren't *), the command will be run when
.I either
field matches the current time.  For example,
.br
``30 4 1,15 * 5''
d324 1
a324 1
.PP
d326 27
a352 25
.IP
.ta 1.5i
string	meaning
.br
------	-------
.br
@@reboot	Run once, at startup.
.br
@@yearly	Run once a year, "0 0 1 1 *".
.br
@@annually	(same as @@yearly)
.br
@@monthly	Run once a month, "0 0 1 * *".
.br
@@weekly	Run once a week, "0 0 * * 0".
.br
@@daily	Run once a day, "0 0 * * *".
.br
@@midnight	(same as @@daily)
.br
@@hourly	Run once an hour, "0 * * * *".
.br
.SH EXAMPLE CRON FILE
.nf

d366 8
a373 5
.fi
.SH SEE ALSO
cron(8), crontab(1)
.SH EXTENSIONS
When specifying day of week, both day 0 and day 7 will be considered Sunday.
d375 22
a396 9
.PP
Lists and ranges are allowed to co-exist in the same field.  "1-3,7-9" would
be rejected by ATT or BSD cron -- they want to see "1-3" or "7,8,9" ONLY.
.PP
Ranges can include "steps", so "1-9/2" is the same as "1,3,5,7,9".
.PP
Names of months or days of the week can be specified by name.
.PP
Environment variables can be set in the crontab.  In BSD or ATT, the
d398 1
a398 1
.PP
d403 4
a406 2
.PP
All of the `@@' commands that can appear in place of the first five fields
d408 1
a408 2
.SH AUTHOR
.nf
@


1.3
log
@doc @@ commands; mouse
@
text
@d18 2
a19 2
.\" $Id: crontab.5,v 1.2 1996/12/07 09:13:11 deraadt Exp $
.\" 
d61 1
a61 1
SHELL is set to /bin/sh, and LOGNAME and HOME are set from the /etc/passwd 
@


1.2
log
@months are from 1-12 not 0-12, netbsd pr#2806, mouse@@Rodents.Montreal.QC.CA
@
text
@d1 1
a1 1
.\"/* Copyright 1988,1990,1993,1994 by Paul Vixie
d18 1
a18 1
.\" $Id: crontab.5,v 1.1.1.1 1995/10/18 08:47:30 deraadt Exp $
d100 1
a100 1
day of month	0-31
d149 24
d210 3
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
.\" $Id: crontab.5,v 1.1.1.5 1994/01/26 19:09:33 jtc Exp $
d102 1
a102 1
month	0-12 (or names, see below)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
