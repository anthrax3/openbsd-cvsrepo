head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.24
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.16
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.20
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.18
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.14
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2017.01.24.00.20.28;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	9X4DvWPMPo8FciN5;

1.5
date	2015.09.03.11.30.13;	author yasuoka;	state Exp;
branches;
next	1.4;
commitid	jnELcL5yvbbZxHpa;

1.4
date	2010.08.05.17.30.28;	author marco;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.04.02.25.53;	author cloder;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.03.19.18.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.02.20.09.39;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@remove unused junk definitions
@
text
@# $OpenBSD: Makefile,v 1.5 2015/09/03 11:30:13 yasuoka Exp $

.if (${MACHINE} == "i386") || (${MACHINE} == "amd64")
PROG= acpidump
SRCS= acpidump.c
LDADD=	-lkvm
DPADD=	${LIBKVM}
.else
NOPROG= yes
.endif

MAN= acpidump.8

.include <bsd.prog.mk>
@


1.5
log
@Modify acpidump to work on systems booted from efi boot.  Use the ACPI
config address passed through the boot parameter.

ok mlarkin
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.4 2010/08/05 17:30:28 marco Exp $
a12 5

VPATH=${.CURDIR}/aml
CFLAGS+=-I${.CURDIR}

BINDIR?=/usr/sbin
@


1.4
log
@kill kill kill the aml parser, kill kill kill it until it is dead

ok deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.3 2005/06/04 02:25:53 cloder Exp $
d6 2
@


1.3
log
@Clean up gcc-isms. OK tholo
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.2 2005/06/03 19:18:32 deraadt Exp $
d4 2
a5 4
PROG=	acpidump
SRCS=	acpi.c acpi_user.c asl_dump.c aml_dump.c acpidump.c
SRCS+=	aml_name.c aml_parse.c aml_amlmem.c aml_memman.c aml_obj.c
SRCS+=	aml_common.c aml_evalobj.c aml_store.c
d7 1
a7 1
NOPROG=		yes
d10 1
a10 1
MAN=	acpidump.8
@


1.2
log
@i386 and amd64 only
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.1 2005/06/02 20:09:39 tholo Exp $
d14 2
a15 2
VPATH=	${.CURDIR}/aml
CFLAGS=	-I${.CURDIR}
@


1.1
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
# $OpenBSD$
d3 1
d8 4
@

