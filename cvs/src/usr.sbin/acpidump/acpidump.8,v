head	1.17;
access;
symbols
	OPENBSD_6_0:1.15.0.10
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.6
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.8
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.4
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.11.0.18
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.14
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.10
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.8
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.2
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@.\" @;


1.17
date	2016.09.26.19.58.26;	author kettenis;	state Exp;
branches;
next	1.16;
commitid	kGs7uSzV2Jf8k5fx;

1.16
date	2016.09.25.15.23.37;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	YxqfPf79WCjoxCH9;

1.15
date	2014.03.13.21.14.08;	author brynet;	state Exp;
branches;
next	1.14;

1.14
date	2014.03.13.19.35.08;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2014.03.13.18.46.03;	author brynet;	state Exp;
branches;
next	1.12;

1.12
date	2014.03.13.18.41.18;	author brynet;	state Exp;
branches;
next	1.11;

1.11
date	2010.08.08.14.40.19;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2010.08.05.17.30.28;	author marco;	state Exp;
branches;
next	1.9;

1.9
date	2008.10.30.22.08.57;	author sobrado;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.04.17.23.24;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2007.10.17.18.58.23;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.31.19.20.21;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2007.02.23.14.47.45;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2007.02.22.19.29.51;	author jordan;	state Exp;
branches;
next	1.3;

1.3
date	2006.12.19.05.53.47;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.03.22.29.49;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.02.20.09.39;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.17
log
@If the argument of -o specifies a directory, dump the files without using a
prefix.

ok deraadt@@
@
text
@.\"	$OpenBSD: acpidump.8,v 1.16 2016/09/25 15:23:37 deraadt Exp $
.\"
.\" Copyright (c) 1999 Doug Rabson <dfr@@FreeBSD.org>
.\" Copyright (c) 2000 Mitsuru IWASAKI <iwasaki@@FreeBSD.org>
.\" Copyright (c) 2000 Yasuo YOKOYAMA <yokoyama@@jp.FreeBSD.org>
.\" Copyright (c) 2000 Hiroki Sato <hrs@@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/usr.sbin/acpi/acpidump/acpidump.8,v 1.9 2001/09/05 19:21:25 dd Exp $
.\"
.Dd $Mdocdate: September 25 2016 $
.Dt ACPIDUMP 8
.Os
.Sh NAME
.Nm acpidump
.Nd dump ACPI tables
.Sh SYNOPSIS
.Nm
.Fl o Ar prefix
.Sh DESCRIPTION
The
.Nm
command stores ACPI tables from physical memory into files specified by
.Ar prefix .
If
.Ar prefix
specifies a directory, the generated files will be of the form
<prefix>/<sig>.<id>.
Otherwise, they will be named <prefix>.<sig>.<id>.
.Dq sig
is the signature of the ACPI Table;
.Dq id
is unique for each table.
.Pp
Additionally a file called <prefix>/headers or <prefix>.headers will
be created that contains additional human readable information
pertaining to this specific dump.
.Pp
The ACPICA disassembler is available through the
.Ox
ports tree or package system:
.Bd -literal -offset indent
# pkg_add acpica
$ iasl -d <prefix>.<sig>.<id>
.Ed
.Pp
.Nm
requires the ability to open
.Pa /dev/kmem
which may be restricted based upon the value of the
.Ar kern.allowkmem
.Xr sysctl 8 .
.Sh FILES
.Bl -tag -width /dev/mem
.It Pa /dev/mem
.El
.Sh SEE ALSO
.Xr pkg_add 1 ,
.Xr mem 4 ,
.Xr packages 7 ,
.Xr ports 7
.Sh HISTORY
The
.Nm
command first appeared in
.Ox 3.8 .
@


1.16
log
@Make a move towards ending 4 decades of kernel snooping.

Add sysctl kern.allowkmem (default 0) which controls the ability to open
/dev/mem or /dev/kmem at securelevel > 0.  Over 15 years we converted 99%
of utilities in the tree to operate on sysctl-nodes (either by themselves
or via code hiding in the guts of -lkvm).

pstat -d and -v & procmap are affected and continued use of them will
require kern.allowkmem=1 in /etc/sysctl.conf.  acpidump (and it's
buddy sendbug) are affected, but we'll work out a solution soon.

There will be some impact in ports.

ok kettenis guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.15 2014/03/13 21:14:08 brynet Exp $
d32 1
a32 1
.Dd $Mdocdate: March 13 2014 $
d40 1
a40 1
.Fl o Ar prefix_for_output
d45 6
a50 3
.Ar prefix_for_output .
The files generated will
be of the form <prefix>.<sig>.<id>.
d56 3
a58 2
Additionally a file called <prefix>.headers will be created that contains
additional human readable information pertaining to this specific dump.
@


1.15
log
@Don't suggest running the AML parser as root. :-)

kindly pointed out by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.14 2014/03/13 19:35:08 jmc Exp $
d63 7
@


1.14
log
@oops! none of us spotted that pkg_add is section 1, not 8;
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.13 2014/03/13 18:46:03 brynet Exp $
d61 1
a61 1
# iasl -d <prefix>.<sig>.<id>
@


1.13
log
@Correction from jmc@@, sort references alphabetically.
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.12 2014/03/13 18:41:18 brynet Exp $
d68 1
d71 1
a71 2
.Xr ports 7 ,
.Xr pkg_add 8
@


1.12
log
@Add a reference to the ACPICA utilities, with examples.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.11 2010/08/08 14:40:19 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: August 8 2010 $
d69 1
a70 1
.Xr packages 7 ,
@


1.11
log
@tweak previous; specifically, -o is no longer optional;
ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.10 2010/08/05 17:30:28 marco Exp $
d32 1
a32 1
.Dd $Mdocdate: August 5 2010 $
d55 8
d68 4
a71 1
.Xr mem 4
@


1.10
log
@kill kill kill the aml parser, kill kill kill it until it is dead

ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.9 2008/10/30 22:08:57 sobrado Exp $
d32 1
a32 1
.Dd $Mdocdate: October 30 2008 $
d40 1
a40 1
.Op Fl o Ar prefix_for_output
d42 3
a44 1
Store ACPI tables from physical memory into files specified by
d52 1
@


1.9
log
@move the list of options to the right place on the manual page;
while here, remove an obsolete url.

diff tweaked by jmc@@; sent upstream to FreeBSD people.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.8 2008/06/04 17:23:24 kettenis Exp $
d32 1
a32 1
.Dd $Mdocdate: June 4 2008 $
a39 2
.Op Fl f Ar dsdt_file_for_input
.Nm
a41 27
The
.Nm
command analyzes ACPI tables in physical memory and dumps them to standard output.
In addition,
.Nm
can disassemble some contents of the tables in AML
(ACPI Machine Language)
and dump them in ASL
(ACPI Source Language).
.Pp
ACPI tables have an notably essential data block called DSDT
(Differentiated System Description Table),
that includes information used on the kernel side such as
detailed information about PnP hardware, procedures for controlling
power management support, and so on.
.Nm
can extract a DSDT data block from physical memory and store it into
a DSDT data file, and can also generate an output in ASL
from a given DSDT data file.
.Pp
The options are as follows:
.Bl -tag -width indent
.It Fl f Ar dsdt_file_for_input
Interpret AML data in DSDT from a file specified in
.Ar dsdt_file_for_input
and dumps them in ASL to standard output.
.It Fl o Ar prefix_for_output
d50 2
a51 50
.Pp
The following are common table signatures (there may be others):
RSDP, FACP, DSDT, SSDT, HPET, MCFG, SPMI, APIC, SPCR, SRAT, XSDT.
.El
.Pp
When
.Nm
is invoked with no options, it will search ACPI tables from physical
memory via a special file
.Pa /dev/mem
and dump them.
First, it searches Root System Description Pointer,
that has a signature
.Qq RSD PTR\ \& ,
and then gets RSDT
(Root System Description Table),
which includes a list of pointers to physical memory addresses
for other tables.
RSDT itself and all other tables linked from RSDT are generically
called SDT
(System Description Table)
and their header has the common format which consists of items
such as Signature, Length, Revision, Checksum, OEMID, OEM Table ID,
OEM Revision, Creator ID, and Creator Revision.
.Nm
dumps the contents of these SDTs.
For further information about the formats of each table,
see chapter 5: ACPI Software Programming Model,
.Dq Advanced Configuration and Power Interface Specification Revision 1.0b
from Intel/Microsoft/Toshiba.
.Pp
There is always a pointer to a physical memory address in RSDT for FACP
(Fixed ACPI Description Table).
FACP defines static system information about power management support
(ACPI Hardware Register Implementation)
such as interrupt mode
(INT_MODEL),
SCI interrupt number, SMI command port
(SMI_CMD),
and the location of ACPI registers.
FACP also has a pointer to a physical memory address for DSDT,
which includes information used on the kernel side such as
PnP, power management support, and so on.
While the other tables are described in a fixed format,
DSDT consists of AML data which is compiled from sources
written in free formatted ASL, a description language for ACPI.
When
.Nm
outputs DSDT, it disassembles the AML data and
translates them into ASL.
a56 1
.\" .Xr acpi 4 ,
a57 9
.\" .Xr acpiconf 8 ,
.\" Xr amldb 8
.Rs
.%T Advanced Configuration and Power Interface Specification
.%A Intel
.%A Microsoft
.%A Toshiba
.%R Revision 1.0b
.Re
a62 19
.Sh AUTHORS
.An Doug Rabson Aq dfr@@FreeBSD.org
.An Mitsuru IWASAKI Aq iwasaki@@FreeBSD.org
.An Yasuo YOKOYAMA Aq yokoyama@@jp.FreeBSD.org
.Pp
Some contributions made by:
.An Chitoshi Ohsawa Aq ohsawa@@catv1.ccn-net.ne.jp ,
.An Takayasu IWANASHI Aq takayasu@@wendy.a.perfect-liberty.or.jp ,
.An Yoshihiko SARUMARU Aq mistral@@imasy.or.jp ,
.An Hiroki Sato Aq hrs@@FreeBSD.org ,
.An Jordan Hargrave Aq jordan@@openbsd.org
and
.An Michael Lucas Aq mwlucas@@blackhelicopters.org .
.Sh BUGS
In the current implementation,
.Nm
doesn't dump any information of Firmware ACPI Control Structure
(FACS)
specified by a pointer in FACP.
@


1.8
log
@Don't disassemble the AML if the -o option is specified.  That way at least
we get the complete files if the disassembler crashes on a machine.

ok marco@@, krw@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.7 2007/10/17 18:58:23 deraadt Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
d64 20
a128 21
.Sh OPTIONS
The following options are supported by
.Nm :
.Bl -tag -width indent
.It Fl f Ar dsdt_file_for_input
Interpret AML data in DSDT from a file specified in
.Ar dsdt_file_for_input
and dumps them in ASL to standard output.
.It Fl o Ar prefix_for_output
Store ACPI tables from physical memory into files specified by
.Ar prefix_for_output .
The files generated will
be of the form <prefix>.<sig>.<id>.
.Dq sig
is the signature of the ACPI Table;
.Dq id
is unique for each table.
.Pp
The following are common table signatures (there may be others):
RSDP, FACP, DSDT, SSDT, HPET, MCFG, SPMI, APIC, SPCR, SRAT, XSDT.
.El
a143 1
.%O http://www.teleport.com/~acpi/
@


1.7
log
@fix getopt handling; ok marco
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.6 2007/05/31 19:20:21 jmc Exp $
d118 1
a118 1
Additionally store ACPI tables from physical memory into files specified by
a133 7
.Sh EXAMPLES
This is an example to get a dump of SDTs and a DSDT data file
simultaneously on a machine that supports ACPI BIOS:
.Pp
.Dl # acpidump -o foo \*(Gt foo.asl
.Pp
This will generate foo.RSDP.x, foo.FACP.x, foo.DSDT.x, etc.
@


1.6
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.5 2007/02/23 14:47:45 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
a39 2
.Op Fl h
.Nm
a116 2
.It Fl h
Display usage and exit.
@


1.5
log
@tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.4 2007/02/22 19:29:51 jordan Exp $
d32 1
a32 1
.Dd February 22, 2007
@


1.4
log
@Added new prefix dump option for obtaining all ACPI files
ok marco@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.3 2006/12/19 05:53:47 jmc Exp $
d122 9
a130 6
Store ACPI tables from physical memory into files specified by
.Ar prefix_for_output
in addition to behavior with no option.  The files generated will
be of the form <prefix>.<sig>.<id>.  The sig is the signature of
the ACPI Table, id is unique for each table.

d132 1
a132 1
RSDP, FACP, DSDT, SSDT, HPET, MCFG, SPMI, APIC, SPCR, SRAT, XSDT
d143 1
a143 1

d147 1
a147 1
.Xr mem 4 ,
@


1.3
log
@no more acpid.8;
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.2 2005/06/03 22:29:49 jmc Exp $
d32 1
a32 1
.Dd August 31, 2000
d44 1
a44 1
.Op Fl o Ar dsdt_file_for_output
d121 9
a129 4
.It Fl o Ar dsdt_file_for_output
Store DSDT data block from physical memory into a file specified in
.Ar dsdt_file_for_output
in addition to behavior with no option.
d139 3
a141 1
.Dl # acpidump -o foo.dsdt \*(Gt foo.asl
d170 1
@


1.2
log
@various tweaks;
ok tholo@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: acpidump.8,v 1.1 2005/06/02 20:09:39 tholo Exp $
a138 1
.Xr acpid 8
@


1.1
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d40 3
a44 2
.Nm
.Op Fl f Ar dsdt_file_for_input
d59 2
a60 2
detail information about PnP hardware, procedures for controlling
a power management support and so on.
d63 1
a63 1
a DSDT data file, and also can generate an output in ASL
d68 1
a68 1
is invoked with no option, it will search ACPI tables from physical
d71 2
a72 1
and dump them.  First, it searches Root System Description Pointer,
d84 1
a84 1
OEM Revision, Creator ID and Creator Revision.
d86 2
a87 2
dumps contents of these SDTs.
For further information about formats of each table,
d99 2
a100 2
(SMI_CMD)
and location of ACPI registers.
d103 4
a106 4
PnP, power management support and so on.
While the other tables are described in fixed format,
DSDT consists of AML data which compiled from sources
written in free formated ASL, description language for ACPI.
a114 4
.It Fl o Ar dsdt_file_for_output
Stores DSDT data block from physical memory into a file specified in
.Ar dsdt_file_for_output
in addition to behavior with no option.
d116 1
a116 1
Interprets AML data in DSDT from a file specified in
d120 5
a124 1
Displays usage and exit.
a125 12
.Sh EXAMPLES
This is an example to get a dump of SDTs and a DSDT data file
simultaneously on a machine that supports ACPI BIOS.
.Bd -literal -offset indent
# acpidump -o foo.dsdt > foo.asl
.Ed
.Sh BUGS
In the current implementation,
.Nm
doesn't dump any information of Firmware ACPI Control Structure
(FACS)
specified by a pointer in FACP.
d130 5
d139 15
a153 10
..\" Xr amldb 8
.Pp
.Dq Advanced Configuration and Power Interface Specification
.Bd -literal -offset indent -compact
Intel
Microsoft
Toshiba
Revision 1.0b
.Ed
<URL:http://www.teleport.com/~acpi/>
d159 1
a159 1
Some contributions made by
d166 2
a167 2
.Sh HISTORY
The
d169 3
a171 2
command appeared in
.Fx 5.0 .
@

