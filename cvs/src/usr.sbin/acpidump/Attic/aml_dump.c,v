head	1.3;
access;
symbols
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.08.05.17.30.28;	author marco;	state dead;
branches;
next	1.2;

1.2
date	2007.02.22.19.09.26;	author jordan;	state Exp;
branches;
next	1.1;

1.1
date	2005.06.02.20.09.39;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.3
log
@kill kill kill the aml parser, kill kill kill it until it is dead

ok deraadt
@
text
@/*	$OpenBSD: aml_dump.c,v 1.2 2007/02/22 19:09:26 jordan Exp $	*/
/*-
 * Copyright (c) 2000 Mitsuru IWASAKI <iwasaki@@FreeBSD.org>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	$Id: aml_dump.c,v 1.2 2007/02/22 19:09:26 jordan Exp $
 *	$FreeBSD: src/usr.sbin/acpi/acpidump/aml_dump.c,v 1.3 2000/11/08 02:37:00 iwasaki Exp $
 */

#include <sys/types.h>
#include <sys/stat.h>

#include <fcntl.h>
#include <stdio.h>
#include <unistd.h>

#include "acpidump.h"

char	*aml_dumpfile = NULL;

void
aml_dump(struct ACPIsdt *hdr)
{
	static int hdr_index;
	char    name[128];
	int	fd;
	mode_t	mode;

	if (aml_dumpfile == NULL) {
		return;
	}

	snprintf(name, sizeof(name), "%s.%c%c%c%c.%d", 
		 aml_dumpfile, hdr->signature[0], hdr->signature[1], 
		 hdr->signature[2], hdr->signature[3],
		 hdr_index++);

	mode = (S_IRUSR | S_IWUSR | S_IRGRP | S_IROTH);
	fd = open(name, O_WRONLY | O_CREAT | O_TRUNC, mode);
	if (fd == -1) {
		return;
	}
	write(fd, hdr, SIZEOF_SDT_HDR);
	write(fd, hdr->body, hdr->len - SIZEOF_SDT_HDR);
	close(fd);
}
@


1.2
log
@Added changes to dump all tables not just DSDT
-o generates files of form <prefix>.<sig>.<num>
eg. -o foo generates foo.DSDT.1 foo.FACP.0 foo.MCFG.2 etc
ok marco@@
@
text
@d1 1
a1 1
/*	$OpenBSD: aml_dump.c,v 1.1 2005/06/02 20:09:39 tholo Exp $	*/
d27 1
a27 1
 *	$Id: aml_dump.c,v 1.1 2005/06/02 20:09:39 tholo Exp $
@


1.1
log
@Start on a basic ACPI framework -- does not do much more than read out the
ACPI tables into kernel memory and attach ACPI and HPET timers currently.

In order to test this code, enabling the devices in GENERIC as well as
the ACPI_ENABLE option is needed.  This code does not do any thermal
control yet, so this should be done with care depending on the platform.

In the tree so more people can contribute to making this more fully
featured.

Ok niklas@@ grange@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 1
a27 1
 *	$Id: aml_dump.c,v 1.3 2000/08/08 14:12:21 iwasaki Exp $
d43 1
a43 1
aml_dump(struct ACPIsdt *dsdp)
d45 2
d54 5
d60 1
a60 1
	fd = open(aml_dumpfile, O_WRONLY | O_CREAT | O_TRUNC, mode);
d64 2
a65 2
	write(fd, dsdp, SIZEOF_SDT_HDR);
	write(fd, dsdp->body, dsdp->len - SIZEOF_SDT_HDR);
a67 1

@

