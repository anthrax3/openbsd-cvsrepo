head	1.14;
access;
symbols
	OPENBSD_5_3:1.13.0.20
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.18
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.16
	OPENBSD_5_0:1.13.0.14
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.12
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.10
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.6
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.8
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.4
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.2
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.10.0.18
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.16
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.14
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.12
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.10
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.6
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	snap19991220:1.1.1.1
	KAME:1.1.1;
locks; strict;
comment	@# @;


1.14
date	2013.03.14.11.08.20;	author mpi;	state dead;
branches;
next	1.13;

1.13
date	2008.07.19.10.35.31;	author reyk;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.04.18.11.35;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2008.05.08.16.51.30;	author sobrado;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.25.09.51.32;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2002.05.09.14.12.16;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.01.07.40.04;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2000.09.16.10.33.43;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.02.09.21.50;	author itojun;	state Exp;
branches;
next	1.5;

1.5
date	2000.05.31.03.09.21;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.02.25.10.24.10;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	99.12.21.01.38.27;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	99.12.20.16.32.53;	author itojun;	state Exp;
branches;
next	1.1;

1.1
date	99.12.20.16.07.42;	author itojun;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	99.12.20.16.07.42;	author itojun;	state Exp;
branches;
next	;


desc
@@


1.14
log
@tedu faithd(8), suggested by todd@@ some weeks ago after a submission by
dhill.

ok krw@@, mikeb@@, tedu@@ (implicit)
@
text
@Configuring FAITH IPv6-to-IPv4 TCP relay

Kazu Yamamoto and Jun-ichiro itojun Hagino
$OpenBSD: README,v 1.13 2008/07/19 10:35:31 reyk Exp $
$KAME: README,v 1.9 2002/05/09 14:10:06 itojun Exp $


Introduction
============

FAITH is a IPv6-to-IPv4 TCP relay.  It performs tcp relay just as some of
firewall-oriented gateway does, but between IPv6 and IPv4 with address
translation.
TCP connections has to be made from IPv6 node to IPv4 node.  FAITH will
not relay connections for the opposite direction.
To perform relays, FAITH daemon needs to be executed on a router between
your local IPv6 site and outside IPv4 network.  The daemon needs to be
invoked per each TCP services (TCP port number).

	IPv4 node "dest" = 123.4.5.6
		|
	[[[[ outside IPv4 ocean ]]]]
		|
	node that runs FAITH-daemon (usually a router)
		|
	==+=====+===+==== IPv6, or IPv4/v6 network in your site ^
	  |	    |						| connection
	clients	  IPv6 node "src"				|

You will have to allocate an IPv6 address prefix to map IPv4 addresses into.
The following description uses 2001:db8:ffff:0000:: as example.
Please use a prefix which belongs to your site.
FAITH will make it possible to make a IPv6 TCP connection From IPv6 node
"src", toward IPv4 node "dest", by specifying FAITH-mapped address
2001:db8:ffff:0000::123.4.5.6
(which is, 2001:db8:ffff:0000:0000:0000:7b04:0506).
The address mapping can be performed by hand:-), by special nameserver on
the network, or by special resolver on the source node.


Setup
=====

The following example assumes:
- You have assigned 2001:db8:ffff:0000:: as FAITH address prefix.
- You are willing to provide IPv6-to IPv4 TCP relay for telnet.

<<On the translating router on which faithd runs>>

(1) If you have IPv6 TCP server for the "telnet" service, i.e. telnetd via
    inet6d, disable that daemon.  Comment out the line from "inet6d.conf"
    and send the HUP signal to "inet6d".

(2) Execute sysctl as root to enable FAITH support in the kernel.

        # sysctl net.inet6.ip6.keepfaith=1

(3) Route packets toward FAITH prefix into "faith0" interface.

	# ifconfig faith0 up
	# route add -inet6 2001:db8:ffff:0000:: -prefixlen 64 ::1
	# route change -inet6 2001:db8:ffff:0000:: -prefixlen 64 -ifp faith0

(4) Execute "faithd" by root as follows:

	# faithd telnet /usr/libexec/telnetd telnetd

    1st argument is a service name you are willing to provide TCP relay.
	(it can be specified either by number "23" or by string "telnet")
    2nd argument is a path name for local IPv6 TCP server.  If there is a
    connection toward the router itself, this program will be invoked.
    3rd and the following arguments are arguments for the local IPv6 TCP
    server.  (3rd argument is typically the program name without its path.)

    More examples:

	# faithd ftpd /usr/libexec/ftpd ftpd -l
	# faithd sshd

If inetd(8) on your platform have special support for faithd, it is possible
to setup faithd services via inetd(8).  Consult manpage for details.


<<Routing>>

(4) Make sure that packets whose destinations match the prefix can
reach from the IPv6 host to the translating router.

<<On the IPv6 host>>

There are two ways to translate IPv4 address to IPv6 address:
	(a) Faked by DNS
	(b) Faked by /etc/hosts.

(5.a) Install "newbie" and set up FAITH mode. See kit/ports/newbie.

(5.b) Add an entry into /etc/hosts so that you can resolve hostname into
faked IPv6 address.  For example, add the following line for www.netbsd.org:

	2001:db8:ffff:0000::140.160.140.252	www.netbsd.org

<<On the translating router on which faithd runs.>>

(6) To see if "faithd" works, watch "/var/log/daemon". Note: please
setup "/etc/syslog.conf" so that LOG_DAEMON messages are to be stored
in "/var/log/daemon".

	<e.g.>
	daemon.*   /var/log/daemon


Access control
==============

Since faithd implements TCP relaying service, it is critical to implement
proper access control to cope with malicious use.  Bad guy may try to
use your relay router to circumvent access controls, or may try to
abuse your network (like sending SPAMs from IPv4 address that belong to you).
Install IPv6 packet filter directives that would reject traffic from
unwanted source.  If you are using inetd-based setup, you may be able to
use access control mechanisms in inetd.


Advanced configuration
======================

If you would like to restrict IPv4 destination for translation, you may
want to do the following:

	# route add -inet6 2001:db8:ffff:0000::123.0.0.0 -prefixlen 104 ::1
	# route change -inet6 2001:db8:ffff:0000::123.0.0.0 -prefixlen 104 \
		-ifp faith0

By this way, you can restrict IPv4 destination to 123.0.0.0/8.
You may also want to reject packets toward 2001:db8:ffff:0000::/64 which
is not in 2001:db8:ffff:0000::123.0.0.0/104.  This will be left as excerside
for the reader.

By doing this, you will be able to provide your IPv4 web server to outside
IPv6 customers, without risks of unwanted open relays.

	[[[[ IPv6 network outside ]]]]			|
		|					| connection
	node that runs FAITH-daemon (usually a router)	v
		|
	========+======== IPv4/v6 network in your site
		|			(123.0.0.0/8)
	IPv4 web server
@


1.13
log
@Use the IPv6 documentation prefix 2001:db8::/32 from RFC 3849 instead
of the deprecated 3ffe::/16 6bone test address space.  Deprecated or
public IPv6 allocations should not be used for documentation; we have
the same approach for IPv4 by using RFC 1918 private addresses.

ok jmc@@ todd@@
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.12 2008/06/04 18:11:35 miod Exp $
@


1.12
log
@adderss -> address
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.11 2008/05/08 16:51:30 sobrado Exp $
d31 1
a31 1
The following description uses 3ffe:0501:ffff:0000:: as example.
d35 2
a36 2
3ffe:0501:ffff:0000::123.4.5.6
(which is, 3ffe:0501:ffff:0000:0000:0000:7b04:0506).
d45 1
a45 1
- You have assigned 3ffe:0501:ffff:0000:: as FAITH address prefix.
d61 2
a62 2
	# route add -inet6 3ffe:0501:ffff:0000:: -prefixlen 64 ::1
	# route change -inet6 3ffe:0501:ffff:0000:: -prefixlen 64 -ifp faith0
d100 1
a100 1
	3ffe:0501:ffff:0000::140.160.140.252	www.netbsd.org
d130 2
a131 2
	# route add -inet6 3ffe:0501:ffff:0000::123.0.0.0 -prefixlen 104 ::1
	# route change -inet6 3ffe:0501:ffff:0000::123.0.0.0 -prefixlen 104 \
d135 2
a136 2
You may also want to reject packets toward 3ffe:0501:ffff:0000::/64 which
is not in 3ffe:0501:ffff:0000::123.0.0.0/104.  This will be left as excerside
@


1.11
log
@documentation tweaks.
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.10 2004/02/25 09:51:32 jmc Exp $
d45 1
a45 1
- You have assigned 3ffe:0501:ffff:0000:: as FAITH adderss prefix.
@


1.10
log
@oops. one more -w removal from sysctl, which i missed;
also from Paul de Weerd, and also ok deraadt@@
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.9 2002/05/09 14:12:16 itojun Exp $
d98 1
a98 1
faked IPv6 addrss.  For example, add the following line for www.netbsd.org:
@


1.9
log
@drop support for rlogin/rsh service (we shouldn't have support it as
they usually use IP address for authentication).  sync with kame
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.8 2001/05/01 07:40:04 itojun Exp $
d56 1
a56 1
        # sysctl -w net.inet6.ip6.keepfaith=1
@


1.8
log
@avodi null pointer dereference.  sync with kame
@
text
@d4 2
a5 2
$OpenBSD: README,v 1.7 2000/09/16 10:33:43 itojun Exp $
$KAME: README,v 1.7 2001/04/25 11:25:19 itojun Exp $
a76 2
	# faithd login /usr/libexec/rlogin rlogind
	# faithd shell /usr/libexec/rshd rshd
@


1.7
log
@synchronize with latest kame.
- improve exit code and logging.
- repair multicast address rejection (IN_MULTICAST takes host endian value)
- repair ftp relaying, when the result of PASV does not have paren.
- repair ftp relaying, when EPSV is sent from client.
@
text
@d4 2
a5 2
$OpenBSD: README,v 1.6 2000/07/02 09:21:50 itojun Exp $
$KAME: README,v 1.6 2000/07/06 13:43:33 itojun Exp $
d37 1
a37 1
The address mapping can be performed by hand:-), by speical nameserver on
@


1.6
log
@correct use of route(8) in sample.
@
text
@d4 2
a5 2
$OpenBSD: README,v 1.5 2000/05/31 03:09:21 itojun Exp $
$KAME: README,v 1.5 2000/07/02 08:50:50 itojun Exp $
d31 1
a31 1
The following description uses 3ffe:0501:1234:ffff:: as example.
d35 2
a36 2
3ffe:0501:1234:ffff::123.4.5.6
(which is, 3ffe:0501:1234:ffff:0000:0000:7b04:0506).
d45 1
a45 1
- You have assigned 3ffe:0501:1234:ffff:: as FAITH adderss prefix.
d61 2
a62 2
	# route add -inet6 3ffe:0501:1234:ffff:: -prefixlen 64 \
		fe80::xxxx:yyyy:zzzz:wwww%faith0
d82 3
d102 1
a102 1
	3ffe:0501:1234:ffff::140.160.140.252	www.netbsd.org
d114 12
d132 3
a134 2
	# route add -inet6 3ffe:0501:1234:ffff::123.0.0.0 -prefixlen 104 \
		-interface faith0
d137 2
a138 2
You may also want to reject packets toward 3ffe:0501:1234:ffff::/64 which
is not in 3ffe:0501:1234:ffff::123.0.0.0/104.  This will be left as excerside
d144 1
a144 1
	[[[[ IPv6 network outside ]]]]			| 
d148 1
a148 1
	========+======== IPv4/v6 network in your site 
@


1.5
log
@sync with the latest kame code.  insufficient len in malloc() call is
corrected.
@
text
@d4 2
a5 2
$OpenBSD: README,v 1.4 2000/02/25 10:24:10 itojun Exp $
$KAME: README,v 1.3 2000/05/31 03:08:04 itojun Exp $
a60 4
	# route add -inet6 3ffe:0501:1234:ffff:: -prefixlen 64 -interface faith0

	or, on platforms that has problem with "-interface":
	# ifconfig faith0 up
d62 1
a62 2
		fe80:q::xxxx:yyyy:zzzz:wwww
	(the last one is link-local address assigned for faith0)
@


1.4
log
@fix file path (/usr/local/v6/libexec -> /usr/libexec)
@
text
@d4 2
a5 2
$OpenBSD: README,v 1.3 1999/12/21 01:38:27 itojun Exp $
KAME Id: README,v 1.2 1999/12/21 01:37:06 itojun Exp
@


1.3
log
@typo fix.
From: Michael Shalayeff <mickey@@lucifier.dial-up.user.akula.net>
@
text
@d4 1
a4 1
$OpenBSD: README,v 1.2 1999/12/20 16:32:53 itojun Exp $
d71 1
a71 1
	# faithd telnet /usr/local/v6/libexec/telnetd telnetd
d82 3
a84 3
	# faithd login /usr/local/v6/libexec/rlogin rlogind
	# faithd shell /usr/local/v6/libexec/rshd rshd
	# faithd ftpd /usr/local/v6/libexec/ftpd ftpd -l
@


1.2
log
@rcsid police.
pathname change (/usr/local/v6/libexec -> /usr/libexec)
bring in some of kame fixes (sprintf -> snprintf, proc title).
@
text
@d4 2
a5 2
$OpenBSD$
KAME Id: README,v 1.1.1.1 1999/12/20 16:07:42 itojun Exp
d13 2
a14 2
address translation.
TCP connections has to be made from IPv6 node to to IPv4 node.  FAITH will
@


1.1
log
@Initial revision
@
text
@d4 2
a5 1
$Id: README,v 1.1.1.1 1999/08/08 23:29:27 itojun Exp $
@


1.1.1.1
log
@faith translator deamon, from KAME
@
text
@@
