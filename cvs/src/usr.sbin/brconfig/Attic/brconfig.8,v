head	1.15;
access;
symbols
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10;
locks; strict;
comment	@.\" @;


1.15
date	99.09.01.03.28.01;	author deraadt;	state dead;
branches;
next	1.14;

1.14
date	99.07.24.22.46.10;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.07.02.20.11.48;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.05.17.14.57.43;	author jason;	state Exp;
branches;
next	1.11;

1.11
date	99.05.16.19.58.08;	author alex;	state Exp;
branches;
next	1.10;

1.10
date	99.03.31.02.35.40;	author jason;	state Exp;
branches;
next	1.9;

1.9
date	99.03.19.22.47.34;	author jason;	state Exp;
branches;
next	1.8;

1.8
date	99.03.19.02.46.55;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	99.03.12.02.40.43;	author jason;	state Exp;
branches;
next	1.6;

1.6
date	99.03.05.22.09.19;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	99.03.05.21.10.55;	author jason;	state Exp;
branches;
next	1.4;

1.4
date	99.03.01.16.01.48;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	99.02.27.18.29.54;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	99.02.26.19.17.41;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	99.02.26.17.52.12;	author jason;	state Exp;
branches;
next	;


desc
@@


1.15
log
@move brconfig to /sbin, where it belongs
@
text
@.\"	$OpenBSD: brconfig.8,v 1.14 1999/07/24 22:46:10 deraadt Exp $
.\"
.\" Copyright (c) 1999 Jason L. Wright (jason@@thought.net)
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Jason L. Wright
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
.\" WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
.\" DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
.\" INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
.\" (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
.\" SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
.\" ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd February 26, 1999
.Dt BRCONFIG 8
.Os
.Sh NAME
.Nm brconfig
.Nd manipulate bridge interfaces
.Sh SYNOPSIS
.Nm brconfig
.Ar -a
.Nm brconfig
.Ar bridge-name
.Op Ar up
.Op Ar down
.Op Ar addr
.Op Ar add interface-name
.Op Ar delete interface-name
.Op Ar maxaddr size
.Op Ar timeout time
.Op Ar static interface-name address
.Op Ar deladdr address
.Op Ar flush
.Op Ar flushall
.Op Ar discover interface-name
.Op Ar -discover interface-name
.Op Ar learn interface-name
.Op Ar -learn interface-name
.Op Ar link0
.Op Ar link1
.Op Ar -link0
.Op Ar -link1
.Op Ar ...
.Sh DESCRIPTION
The
.Nm brconfig
utility retrieves kernel state of bridge interfaces and allows
user control of these bridges.  In the first synopsis, the command
will list the status of all bridges in the system.
In the second, its command line consists
of the name of a bridge and a set of operations to be
performed on that bridge.  The commands are executed in
the order they were specified.  If no command is specified in
the second synopsis, the
.Nm brconfig
will display status information about the bridge.
.Pp
The available commands are:
.Bl -tag -width Ds
.It Ar up
Start the bridge forwarding packets.
.It Ar down
Stop the bridge from forwarding packets.
.It Ar addr
Display the addresses that have been learned by the bridge.
.It Ar add interface-name
Add the interface named by
.Ar interface-name
as a member of the bridge.
The interface is put into promiscuous mode so
that it can receive every packet sent on the
network.
.It Ar delete interface-name
Remove the interface named by
.Ar interface-name
from the bridge.
Promiscuous mode is turned off for the interface when it is
removed from the bridge.
.It Ar del
Alias for `delete'.
.It Ar maxaddr size
Set the address cache size to
.Cm size .
The default is 100 entries.
.It Ar timeout time
Set the timeout, in seconds, for addresses in the cache to
.Cm time .
The default is 240 seconds.
If
.Cm time
is set to zero, then entries will not be expired.
.It Ar static interface-name address
Add a static entry into the address cache pointing to
.Cm interface-name .
Static entries are never aged out of the cache or replaced if the address
is seen on a different interface.
.It Ar deladdr address
Delete an address from the cache.
.It Ar flush
Remove all dynamically learned addresses from the cache.
.It Ar flushall
Remove all addresses from the cache including static addresses.
.It Ar discover interface
Mark an interface so that packets are sent out of the interface
if the destination port of the packet is unknown.
If the bridge has no address cache entry for the destination of
a packet, meaning that there is no static entry and no dynamically learned
entry for the destination, the bridge will forward the packet to all member
interfaces that have this flag set.
This is the default for interfaces added to the bridge.
.It Ar -discover interface
Mark an interface so that packets are not sent out of the interface
if the destination port of the packet is unknown.  Turning this flag
off means that the bridge will not send packets out of this interface
unless the packet is a broadcast packet, multicast packet, or a
packet with a destination address found on the interface's segment.
This, in combination with static address cache entries,
prevents potentially sensitive packets from being sent on
segments that have no need to see the packet.
.It Ar learn interface
Mark an interface so that the source address of packets received from
.Cm interface
are entered into the address cache.
This is the default for interfaces added to the bridge.
.It Ar -learn interface
Mark an interface so that the source address of packets received from
.Cm interface
are not entered into the address cache.
.It Ar link0
Setting this flag stops all non-IP multicast packets from
being forwarded by the bridge.
.It Ar -link0
Clear the
.Ar link0
flag on the bridge interface.
.It Ar link1
Setting this flags stops all IP multicast packets from
being forwarded by the bridge.
.It Ar -link0
Clear the
.Ar link1
flag on the bridge interface.
.El
.Sh EXAMPLES
.Bl -tag -width brconfig
.It Cm brconfig bridge0 add rl0 add xl0 up
Add the Ethernet interfaces rl0 and xl0 to the bridge bridge0, and
start the bridge forwarding packets.
.It Cm brconfig bridge0
Retrieve a list of interfaces that are members of bridge0, and the addresses
learned by the bridge.
.It Cm brconfig bridge0 down
Stop bridge0 from forwarding packets.
.It Cm brconfig bridge0 delete xl0
Remove the interface xl0 from the bridge bridge0.
.It Cm brconfig bridge0 flush
Flush all dynamically learned addresses from the address cache.
.It Cm brconfig bridge0 flushall
Remove all addresses, including static addresses, from the address cache.
.It Cm brconfig bridge0 -learn xl0 static xl0 8:0:20:1e:2f:2b
.It Cm brconfig bridge0 -discover xl0
The examples above mark the xl0 interface so that it will not learn
addresses and adds a static entry for the host 8:0:20:1e:2f:2b on the xl0
segment.
Finally, xl0 is marked so that it will not receive packets with
destinations not found in the address cache of bridge0.
This setup is the most secure,
and means that bogus MAC addresses seen by the xl0 side of the bridge
will not be propogated to the rest of the network.
Also, no packets will be sent on xl0 segment by the bridge unless they are
broadcast packets or are for 8:0:20:1e:2f:2b.
.El
.Sh SEE ALSO
.Xr bridge 4 ,
.Xr ifconfig 8
.Sh HISTORY
.Nm brconfig
first appeared in
.Ox 2.5 .
.Sh AUTHOR
The
.Xr brconfig 8
command and the
.Xr bridge 4
kernel interface were written by Jason L. Wright <jason@@thought.net> as
part of an undergraduate independent study
at the University of North Carolina at Greensboro.
.Sh BUGS
There are some rather special network interface chipsets which will
not work in a bridge configuration.  Some, like the Lite-On PNIC (see
.Xr pn 4 ),
have serious flaws when running in promiscuous mode, and others, like the
TI ThunderLAN (see
.Xr tl 4 ),
receive their own transmissions, which makes the address learning code
ineffective.  Most other chipsets work fine though.
@


1.14
log
@... but most cards work OK
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.13 1999/07/02 20:11:48 aaron Exp $
@


1.13
log
@consistent .Dd usage; proper format is: .Dd Month DD, YYYY
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.12 1999/05/17 14:57:43 jason Exp $
d208 8
a215 4
There are some network interface chipsets which will not work in a bridge
configuration.  Some, like the Lite-On PNIC, have serious flaws when
running in promiscuous mode, and others, like the TI ThunderLAN, receive
their own transmissions, which makes the address learning code ineffective.
@


1.12
log
@Typos; Suzanne M. Lea <smlea@@uncg.edu>
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.11 1999/05/16 19:58:08 alex Exp $
d32 1
a32 1
.Dd Feb 26, 1999
@


1.11
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.10 1999/03/31 02:35:40 jason Exp $
d205 1
a205 1
part of an undergraduate indenpendent study
@


1.10
log
@more examples
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.9 1999/03/19 22:47:34 jason Exp $
d193 2
a194 2
.Xr ifconfig 8 ,
.Xr bridge 4
@


1.9
log
@Add flag to allow some interfaces to not see packets with unknown destination.
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.8 1999/03/19 02:46:55 jason Exp $
d175 16
@


1.8
log
@Add the ability to mark an interface as "non-learning"
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.7 1999/03/12 02:40:43 jason Exp $
d54 2
d122 17
@


1.7
log
@big overhaul:
o SNAP encapsulated IP filtering
o static address cache entries
o address deletion from cache
o dynamic & full cache flush
o filter packets based on each interface, not on the bridge as a whole
o KNF nits
o allow addition of ~IFF_UP interfaces
o man page & user level fixes to match the above
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.6 1999/03/05 22:09:19 jason Exp $
d54 2
d120 9
@


1.6
log
@bump cache timeout up a bit
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.5 1999/03/05 21:10:55 jason Exp $
d50 4
a84 5
The interface must already be ready for packet
reception, (ie. it must be in the
.Cm up
state, see
.Xr ifconfig 8 )
d107 11
d135 2
a136 2
.It Cm brconfig bridge0 add pn0 add mx0 up
Add the Ethernet interfaces pn0 and mx0 to the bridge bridge0, and
d143 2
a144 2
.It Cm brconfig bridge0 delete pn0
Remove the interface pn0 from the bridge bridge0.
@


1.5
log
@Make address cache expiration actually work and provide a knob
for adjusting the timeout.
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.4 1999/03/01 16:01:48 jason Exp $
d104 1
a104 1
The default is 30 seconds.
d107 1
a107 1
is set to zero, then entries will never expire.
@


1.4
log
@document 'maxaddr' command
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.3 1999/02/27 18:29:54 jason Exp $
d49 1
d101 7
@


1.3
log
@changes in command syntax; suggested by deraadt.
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.2 1999/02/26 19:17:41 jason Exp $
d48 1
d96 4
@


1.2
log
@rearrange sections to match mdoc.template
nuke references to the original name of the program
add bugs section
@
text
@d1 1
a1 1
.\"	$OpenBSD: brconfig.8,v 1.1 1999/02/26 17:52:12 jason Exp $
d37 1
a37 1
.Nd manipulate Ethernet bridges
d40 2
d45 1
a45 3
.Op Ar list
.Op Ar routes
.Op Ar status
d56 4
a59 2
utility retrieves kernel state of Ethernet bridges and allows
user control of these bridges.  Its command line consists
d62 4
a65 1
the order they were specified.
d73 2
a74 7
.It Ar list
Retrieve a list of interface members of the bridge.
.It Ar routes
Display the routes that have been learned by the bridge.
.It Ar status
Print the status of the bridge, including member interfaces and
routes learned by the bridge.
d93 2
d115 3
a117 2
.It Cm brconfig bridge0 list
Retrieve a list of interfaces that are members of bridge0.
d139 1
a139 1
There are some Ethernet chipsets which will not work in a bridge
d142 1
a142 1
their own transmissions, which makes the route learning code ineffective.
@


1.1
log
@bridge config utility
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d32 2
a33 2
.Dd Jan 13, 1999
.Dt BRIDGECTL 8
d123 4
d135 5
a139 4
.Sh HISTORY
.Nm brconfig
first appeared in
.Ox 2.5 .
@

