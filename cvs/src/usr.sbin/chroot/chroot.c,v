head	1.14;
access;
symbols
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.10
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.6
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.2
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.18
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.22
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.20
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.16
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.14
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.12
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.10
	OPENBSD_5_0:1.13.0.8
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.6
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.4
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.2
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.12.0.20
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.16
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.14
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.12
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.3.0.8
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.6
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.4
	OPENBSD_2_8:1.3.0.2
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2015.05.19.16.05.12;	author millert;	state Exp;
branches;
next	1.13;
commitid	THWxPIM21A49HdgX;

1.13
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.23.22.52.04;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.23.36.52;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.11.18.29.17;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.08.21.37.04;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.12.22.22.25.20;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.29.23.12.06;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.25.19.23.48;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.14.02.59.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.13.07.44.48;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2000.08.17.15.28.36;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.29.03.32.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@When a user is specified via the -u flag, use setusercontext() to
setup (most of) the execution environment.  We still have to defer
setting the actual uid until after we change root.  OK deraadt@@
@
text
@/*	$OpenBSD: chroot.c,v 1.13 2009/10/27 23:59:51 deraadt Exp $	*/

/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <ctype.h>
#include <err.h>
#include <errno.h>
#include <grp.h>
#include <limits.h>
#include <login_cap.h>
#include <paths.h>
#include <pwd.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

int		main(int, char **);
__dead void	usage(void);

int
main(int argc, char **argv)
{
	struct group	*grp;
	struct passwd	*pwd;
	login_cap_t	*lc;
	const char	*shell;
	char		*user, *group, *grouplist;
	gid_t		gidlist[NGROUPS_MAX];
	int		ch, ngids;
	int		flags = LOGIN_SETALL & ~(LOGIN_SETLOGIN|LOGIN_SETUSER);

	lc = NULL;
	ngids = 0;
	pwd = NULL;
	user = grouplist = NULL;
	while ((ch = getopt(argc, argv, "g:u:")) != -1) {
		switch(ch) {
		case 'u':
			user = optarg;
			if (*user == '\0')
				usage();
			break;
		case 'g':
			grouplist = optarg;
			if (*grouplist == '\0')
				usage();
			break;
		default:
			usage();
		}
	}
	argc -= optind;
	argv += optind;

	if (argc < 1)
		usage();

	if (user != NULL) {
		if ((pwd = getpwnam(user)) == NULL)
			errx(1, "no such user `%s'", user);
		if ((lc = login_getclass(pwd->pw_class)) == NULL)
			err(1, "unable to get login class for `%s'", user);
	}

	while ((group = strsep(&grouplist, ",")) != NULL) {
		if (*group == '\0')
			continue;

		if (ngids == NGROUPS_MAX)
			errx(1, "too many supplementary groups provided");
		if ((grp = getgrnam(group)) == NULL)
			errx(1, "no such group `%s'", group);
		gidlist[ngids++] = grp->gr_gid;
	}

	if (ngids != 0) {
		if (setgid(gidlist[0]) != 0)
			err(1, "setgid");
		if (setgroups(ngids, gidlist) != 0)
			err(1, "setgroups");
		flags &= ~LOGIN_SETGROUP;
	}
	if (lc != NULL) {
		if (setusercontext(lc, pwd, pwd->pw_uid, flags) == -1)
			err(1, "setusercontext");
	}

	if (chroot(argv[0]) != 0 || chdir("/") != 0)
		err(1, "%s", argv[0]);

	if (pwd != NULL) {
		/* only set login name if we are/can be a session leader */
		if (getsid(0) == getpid() || setsid() != -1)
			setlogin(pwd->pw_name);
		if (setuid(pwd->pw_uid) != 0)
			err(1, "setuid");
	}

	if (argv[1]) {
		execvp(argv[1], &argv[1]);
		err(1, "%s", argv[1]);
	}

	if ((shell = getenv("SHELL")) == NULL || *shell == '\0')
		shell = _PATH_BSHELL;
	execlp(shell, shell, "-i", (char *)NULL);
	err(1, "%s", shell);
	/* NOTREACHED */
}

__dead void
usage(void)
{
	extern char *__progname;

	(void)fprintf(stderr, "usage: %s [-g group,group,...] [-u user] "
	    "newroot [command]\n", __progname);
	exit(1);
}
@


1.13
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.12 2005/05/23 22:52:04 henning Exp $	*/
d38 1
d54 1
d59 1
d61 1
d87 6
a92 2
	if (user != NULL && (pwd = getpwnam(user)) == NULL)
		errx(1, "no such user `%s'", user);
d110 5
a114 5
	} else if (pwd != NULL) {
		if (setgid(pwd->pw_gid) != 0)
			err(1, "setgid");
		if (initgroups(user, pwd->pw_gid) == -1)
			err(1, "initgroups");
a125 1
		endgrent();
@


1.12
log
@useless endpwent
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.11 2003/06/02 23:36:52 millert Exp $	*/
a30 14

#ifndef lint
static const char copyright[] =
"@@(#) Copyright (c) 1988, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
#if 0
static const char sccsid[] = "@@(#)chroot.c	8.1 (Berkeley) 6/9/93";
#else
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.11 2003/06/02 23:36:52 millert Exp $";
#endif
#endif /* not lint */
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.10 2003/02/11 18:29:17 mpech Exp $	*/
d42 1
a42 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.10 2003/02/11 18:29:17 mpech Exp $";
a132 1
		endpwent();
@


1.10
log
@More -G/-U deletion + style(9) while millert@@ is here.
Make sence.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.9 2003/02/08 21:37:04 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d42 1
a42 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.9 2003/02/08 21:37:04 millert Exp $";
@


1.9
log
@Make the -u and -g options more like the -U and -G options.  My intention
was to avoid needless incompatibilities with NetBSD's command line options
but this ended up causing too much confusion on the part of the user.

The -u option now also sets the group and group vector based on passwd(5)
and group(5) unless an alternate group list is specified via the -g option.
The -U and -G options have been removed.

The resulting code is much simpler and the behavior of chroot(8) seems
to better match users' expectations; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.8 2002/12/22 22:25:20 millert Exp $	*/
a35 1
#include <sys/cdefs.h>
d46 1
a46 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.8 2002/12/22 22:25:20 millert Exp $";
d50 1
@


1.8
log
@o check for empty $SHELL and add missing __dead (Andrey Matveev)
o call setlogin() if the -U flag was specified and we either are the session
leader or are able to become it.
@
text
@d1 1
a1 2
/*	$OpenBSD: chroot.c,v 1.7 2002/10/29 23:12:06 millert Exp $	*/
/*	$NetBSD: chroot.c,v 1.11 2001/04/06 02:34:04 lukem Exp $	*/
d47 1
a47 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.7 2002/10/29 23:12:06 millert Exp $";
d69 1
a69 1
	struct group	*gp;
d72 5
a76 9
	char		*fulluser, *user, *group, *grouplist, *endp, *p;
	gid_t		gid, gidlist[NGROUPS_MAX];
	uid_t		uid;
	int		ch, gids;
	unsigned long	ul;

	gid = 0;
	uid = 0;
	gids = 0;
d78 2
a79 2
	user = fulluser = group = grouplist = NULL;
	while ((ch = getopt(argc, argv, "G:g:U:u:")) != -1) {
a80 5
		case 'U':
			fulluser = optarg;
			if (*fulluser == '\0')
				usage();
			break;
a86 5
			group = optarg;
			if (*group == '\0')
				usage();
			break;
		case 'G':
a90 1
		case '?':
a99 21
	if (fulluser && (user || group || grouplist))
		errx(1,
		    "the -U option may not be specified with any other option");

	if (group != NULL) {
		if ((gp = getgrnam(group)) != NULL)
			gid = gp->gr_gid;
		else if (isdigit((unsigned char)*group)) {
			errno = 0;
			ul = strtoul(group, &endp, 10);
			if (*endp != '\0' ||
			    (ul == ULONG_MAX && errno == ERANGE))
				errx(1, "invalid group ID `%s'", group);
			gid = (gid_t)ul;
		} else
			errx(1, "no such group `%s'", group);
		if (grouplist != NULL)
			gidlist[gids++] = gid;
		if (setgid(gid) != 0)
			err(1, "setgid");
	}
d101 5
a105 2
	while ((p = strsep(&grouplist, ",")) != NULL && gids < NGROUPS_MAX) {
		if (*p == '\0')
d108 5
a112 34
		if ((gp = getgrnam(p)) != NULL)
			gidlist[gids] = gp->gr_gid;
		else if (isdigit((unsigned char)*p)) {
			errno = 0;
			ul = strtoul(p, &endp, 10);
			if (*endp != '\0' ||
			    (ul == ULONG_MAX && errno == ERANGE))
				errx(1, "invalid group ID `%s'", p);
			gidlist[gids] = (gid_t)ul;
		} else
			errx(1, "no such group `%s'", p);
		/*
		 * Ignore primary group if specified; we already added it above.
		 */
		if (group == NULL || gidlist[gids] != gid)
			gids++;
	}
	if (p != NULL && gids == NGROUPS_MAX)
		errx(1, "too many supplementary groups provided");
	if (gids && setgroups(gids, gidlist) != 0)
		err(1, "setgroups");

	if (user != NULL) {
		if ((pwd = getpwnam(user)) != NULL)
			uid = pwd->pw_uid;
		else if (isdigit((unsigned char)*user)) {
			errno = 0;
			ul = strtoul(user, &endp, 10);
			if (*endp != '\0' ||
			    (ul == ULONG_MAX && errno == ERANGE))
				errx(1, "invalid user ID `%s'", user);
			uid = (uid_t)ul;
		} else
			errx(1, "no such user `%s'", user);
d115 2
a116 6
	if (fulluser != NULL) {
		if ((pwd = getpwnam(fulluser)) == NULL)
			errx(1, "no such user `%s'", fulluser);
		uid = pwd->pw_uid;
		gid = pwd->pw_gid;
		if (setgid(gid) != 0)
d118 6
a123 1
		if (initgroups(fulluser, gid) == -1)
a126 3
	if (pwd != NULL && (getsid(0) == getpid() || setsid() != -1))
		setlogin(pwd->pw_name);

d130 9
a138 2
	if ((user || fulluser) && setuid(uid) != 0)
		err(1, "setuid");
d157 2
a158 2
	(void)fprintf(stderr, "usage: %s [-g group] [-G group,group,...] "
	    "[-u user] [-U user] newroot [command]\n", __progname);
@


1.7
log
@Add -U option to set uid, gid, and group vector based on password database.
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.6 2002/10/25 19:23:48 millert Exp $	*/
d48 1
a48 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.6 2002/10/25 19:23:48 millert Exp $";
d71 1
a71 1
	struct passwd	*pw;
d82 1
d165 2
a166 2
		if ((pw = getpwnam(user)) != NULL)
			uid = pw->pw_uid;
d179 1
a179 1
		if ((pw = getpwnam(fulluser)) == NULL)
d181 2
a182 2
		uid = pw->pw_uid;
		gid = pw->pw_gid;
d189 3
d203 1
a203 1
	if ((shell = getenv("SHELL")) == NULL)
d210 1
a210 1
void
@


1.6
log
@Add options to set the uid, gid, and group vector after the chroot;
adapted from NetBSD.  OK markus@@ and previously discussed with Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.5 2002/07/14 02:59:29 deraadt Exp $	*/
d48 1
a48 1
static const char rcsid[] = "$OpenBSD: chroot.c,v 1.5 2002/07/14 02:59:29 deraadt Exp $";
d73 1
a73 1
	char		*user, *group, *grouplist, *endp, *p;
d79 2
d82 2
a83 2
	user = group = grouplist = NULL;
	while ((ch = getopt(argc, argv, "G:g:u:")) != -1) {
d85 5
d115 3
d133 2
d152 5
a156 1
		gids++;
d160 2
d177 11
d191 1
a191 5
	if (gids && setgroups(gids, gidlist) != 0)
		err(1, "setgroups");
	if (group && setgid(gid) != 0)
		err(1, "setgid");
	if (user && setuid(uid) != 0)
d212 1
a212 1
	    "[-u user] newroot [command]\n", __progname);
@


1.5
log
@ansi
@
text
@d1 2
a2 1
/*	$OpenBSD: chroot.c,v 1.4 2002/05/13 07:44:48 mpech Exp $	*/
d5 2
a6 2
 * Copyright (c) 1988 The Regents of the University of California.
 * All rights reserved.
d37 1
d39 3
a41 3
char copyright[] =
"@@(#) Copyright (c) 1988 The Regents of the University of California.\n\
 All rights reserved.\n";
d45 5
a49 2
/*static char sccsid[] = "from: @@(#)chroot.c	5.8 (Berkeley) 6/1/90";*/
static char rcsid[] = "$OpenBSD: chroot.c,v 1.4 2002/05/13 07:44:48 mpech Exp $";
d52 7
a61 1
#include <paths.h>
d63 3
a65 1
#include <err.h>
d68 1
a68 1
main(int argc, char *argv[])
d70 54
a123 1
	char *shell;
d125 16
a140 3
	if (argc < 2) {
		(void)fprintf(stderr, "usage: chroot newroot [command]\n");
		exit(1);
d142 29
a170 1
	if (chroot(argv[1]) || chdir("/"))
a171 8
	if (argv[2]) {
		execvp(argv[2], &argv[2]);
		err(1, "%s", argv[2]);
	} else {
		if (!(shell = getenv("SHELL")))
			shell = _PATH_BSHELL;
		execlp(shell, shell, "-i", (char *)NULL);
		err(1, "%s", shell);
d173 5
d179 10
@


1.4
log
@o) fix order and usage of chroot&chdir;
o) move code up from chroot&chdir block (tftpd);

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: chroot.c,v 1.3 2000/08/17 15:28:36 mickey Exp $	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: chroot.c,v 1.3 2000/08/17 15:28:36 mickey Exp $";
d55 1
a55 3
main(argc, argv)
	int argc;
	char **argv;
@


1.3
log
@openbsd rcsdids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 1
a44 1
static char rcsid[] = "$OpenBSD: chroot.c,v 1.2 1996/08/29 03:32:50 deraadt Exp $";
d65 1
a65 1
	if (chdir(argv[1]) || chroot("."))
@


1.2
log
@int main
@
text
@d1 2
d44 1
a44 1
static char rcsid[] = "$Id: chroot.c,v 1.1.1.1 1995/10/18 08:47:29 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d42 1
a42 1
static char rcsid[] = "$Id: chroot.c,v 1.4 1994/01/07 20:34:23 jtc Exp $";
d49 1
d52 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
