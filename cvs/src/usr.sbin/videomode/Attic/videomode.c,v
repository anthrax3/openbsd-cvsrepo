head	1.5;
access;
symbols
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2002.12.31.16.35.42;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2002.05.29.09.46.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.28.10;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.15.23.44.38;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$NetBSD: videomode.c,v 1.2 1995/10/09 13:52:49 chopps Exp $	*/

/*
 * Copyright (c) 1995 Christian E. Hopps
 * Copyright (c) 1994 Markus Wild
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Markus Wild
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>
#include <sys/ioctl.h>
#include <sys/device.h>
#include <amiga/dev/grfioctl.h>
#include <amiga/dev/grfvar.h>

#include <unistd.h>
#include <errno.h>
#include <err.h>
#include <stdio.h>

void dump_mode(int);
void dump_vm(struct grfvideo_mode *);
int  get_grf(void);
void set_mode(int);
void usage(void);

int
main(argc, argv)
	int argc;
	char *argv[];
{
	int m;
	int c;

	if (argc == 1) {
		dump_mode(0);
		return (0);
	}
	while ((c = getopt(argc, argv, "as:")) != -1) {
		switch (c) {
		case 'a':
			if (optind < argc)
				usage();
			dump_mode(-1);
			return (0);
		case 's':
			m = atoi(optarg);
			if (m == 0 || optind < argc)
				usage();
			set_mode(m);
			return (0);
		}
	}

	argc -= optind;
	argv += optind;
	if (argc != 1)
		usage();

	dump_mode(atoi(*argv));
	return (0);
}


int
get_grf()
{
	struct stat stb;
	char grfname[80];
	int grffd;

	/* find out on which ite/grf we are */
	if (fstat(0, &stb) == -1)
		err(1, "fstat 0");
	if (((stb.st_mode & S_IFMT) != S_IFCHR) || !isatty(0))
		errx(1, "stdin not a tty");
	if (major(stb.st_rdev) != 13)
		errx(1, "stdin not an ite device");
	(void)snprintf(grfname, sizeof grfname, "/dev/grf%d",
	    minor(stb.st_rdev) & 0x7);
	if ((grffd = open(grfname, 2)) < 0)
		err(1, "%s", grfname);
	return (grffd);
}

void
dump_mode(m)
	int m;
{
	struct grfvideo_mode vm;
	int num_vm;
	int grffd;

	grffd = get_grf();

	if (ioctl(grffd, GRFGETNUMVM, &num_vm) < 0)
		err(1, "GRFGETNUMVM");
	if (m > 0 && m > num_vm)
		errx(1, "no such mode");
	if (m <= 0) {
		(void)printf("Current mode:\n");
		vm.mode_num = 0;
		if (ioctl(grffd, GRFGETVMODE, &vm) == 0)
			dump_vm(&vm);
		(void)printf("\n");
	}
	if (m >= 0)
		return;
	for (m = 1; m <= num_vm; m++) {
		vm.mode_num = m;
		if (ioctl(grffd, GRFGETVMODE, &vm) == -1)
			break;
		dump_vm(&vm);
	}
}

void
set_mode(m)
	int m;
{
	int grffd;

	grffd = get_grf();
	(void)ioctl(grffd, GRFSETVMODE, &m);
}

void
dump_vm(vm)
	struct grfvideo_mode *vm;
{
	(void)printf("%d: %s\n", vm->mode_num, vm->mode_descr);
	(void)printf("pixel_clock = %u, width = %d, height = %d, depth = %d\n", 
	    vm->pixel_clock, vm->disp_width, vm->disp_height, vm->depth);
}

void
usage()
{
	(void)fprintf(stderr, "usage: videomode [mode]\n");
	(void)fprintf(stderr, "usage: videomode -a\n");
	(void)fprintf(stderr, "usage: videomode -s mode\n");
	exit(0);
}
@


1.4
log
@more snprintf
@
text
@@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d104 2
a105 1
	(void)sprintf(grfname, "/dev/grf%d", minor(stb.st_rdev) & 0x7);
@


1.2
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d46 5
a50 5
void dump_mode __P((int));
void dump_vm   __P((struct grfvideo_mode *));
int  get_grf __P((void));
void set_mode __P((int));
void usage __P((void));
@


1.1
log
@Initial revision
@
text
@d64 1
a64 1
	while ((c = getopt(argc, argv, "as:")) != EOF) {
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
