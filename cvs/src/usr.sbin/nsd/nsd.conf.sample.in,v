head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.2
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	NSD_4_1_6:1.1.1.12
	OPENBSD_5_8:1.1.1.11.0.6
	OPENBSD_5_8_BASE:1.1.1.11
	NSD_4_1_3:1.1.1.11
	OPENBSD_5_7:1.1.1.11.0.2
	OPENBSD_5_7_BASE:1.1.1.11
	NSD_4_1_1:1.1.1.11
	NSD_4_1_0:1.1.1.10
	OPENBSD_5_6:1.1.1.9.0.6
	OPENBSD_5_6_BASE:1.1.1.9
	NSD_4_0_3:1.1.1.9
	NSD_4_0_2:1.1.1.9
	OPENBSD_5_5:1.1.1.9.0.4
	OPENBSD_5_5_BASE:1.1.1.9
	NSD_4_0_1:1.1.1.9
	NSD_4_0_0:1.1.1.8
	NSD_3_2_16:1.1.1.7
	OPENBSD_5_4:1.1.1.6.0.4
	OPENBSD_5_4_BASE:1.1.1.6
	OPENBSD_5_3:1.1.1.6.0.2
	OPENBSD_5_3_BASE:1.1.1.6
	NSD_3_2_15:1.1.1.6
	NSD_3_2_14:1.1.1.5
	NSD_3_2_13:1.1.1.5
	OPENBSD_5_2:1.1.1.5.0.2
	OPENBSD_5_2_BASE:1.1.1.5
	NSD_3_2_11:1.1.1.5
	NSD_3_2_10:1.1.1.4
	OPENBSD_5_1_BASE:1.1.1.4
	OPENBSD_5_1:1.1.1.4.0.4
	NSD_3_2_9:1.1.1.4
	OPENBSD_5_0:1.1.1.4.0.2
	OPENBSD_5_0_BASE:1.1.1.4
	NSD_3_2_8:1.1.1.4
	OPENBSD_4_9:1.1.1.3.0.2
	OPENBSD_4_9_BASE:1.1.1.3
	NSD_3_2_6:1.1.1.3
	OPENBSD_4_8:1.1.1.2.0.2
	OPENBSD_4_8_BASE:1.1.1.2
	NSD_3_2_5:1.1.1.2
	OPENBSD_4_7:1.1.1.1.0.2
	OPENBSD_4_7_BASE:1.1.1.1
	NSD_3_2_4:1.1.1.1
	NLNETLABS:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2017.04.15.09.15.45;	author florian;	state Exp;
branches;
next	1.5;
commitid	fXBqT4bSlfjTKAVE;

1.5
date	2016.10.24.09.44.43;	author florian;	state Exp;
branches;
next	1.4;
commitid	g3wASIhTcujU0LFi;

1.4
date	2016.08.31.07.31.20;	author florian;	state Exp;
branches;
next	1.3;
commitid	1gMwFuybgH2l617m;

1.3
date	2016.06.24.08.34.03;	author florian;	state Exp;
branches;
next	1.2;
commitid	Z9jVKJJMPmC3zw2t;

1.2
date	2015.12.11.12.28.49;	author sthen;	state Exp;
branches;
next	1.1;
commitid	e67Hx722TeF4XpDl;

1.1
date	2010.01.15.19.24.59;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.01.15.19.24.59;	author jakob;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.04.15.20.56.50;	author jakob;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.08.22.09.21.37;	author jakob;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2011.05.21.18.17.10;	author jakob;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2012.07.09.21.55.06;	author sthen;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2013.02.18.10.17.40;	author sthen;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2013.09.03.09.21.33;	author sthen;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2013.11.26.12.50.14;	author sthen;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2014.02.04.01.54.03;	author brad;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2014.09.16.16.54.00;	author brad;	state Exp;
branches;
next	1.1.1.11;
commitid	BWSdZeElrpYSRdME;

1.1.1.11
date	2015.02.03.10.24.29;	author brad;	state Exp;
branches;
next	1.1.1.12;
commitid	yn8l9RVkmdMVYIfl;

1.1.1.12
date	2015.11.05.21.21.04;	author sthen;	state Exp;
branches;
next	;
commitid	RXfGmPAh2IZTjnIf;


desc
@@


1.6
log
@update to 4.1.16rc1
tests & OK sthen

(if there are more changes coming for 4.1.16 release we will just
commit them on top)
@
text
@#
# nsd.conf -- the NSD(8) configuration file, nsd.conf(5).
#
# Copyright (c) 2001-2011, NLnet Labs. All rights reserved.
#
# See LICENSE for the license.
#

# This is a comment.
# Sample configuration file
# include: "file" # include that file's text over here.  Globbed, "*.conf"

# options for the nsd server
server:
	# Number of NSD servers to fork.  Put the number of CPUs to use here.
	# server-count: 1

	# uncomment to specify specific interfaces to bind (default are the
	# wildcard interfaces 0.0.0.0 and ::0).
	# For servers with multiple IP addresses, list them one by one,
	# or the source address of replies could be wrong.
	# Use ip-transparent to be able to list addresses that turn on later.
	# ip-address: 1.2.3.4
	# ip-address: 1.2.3.4@@5678
	# ip-address: 12fe::8ef0

	# Allow binding to non local addresses. Default no.
	# ip-transparent: no

	# Allow binding to addresses that are down.  Default no.
	# ip-freebind: no

	# use the reuseport socket option for performance. Default no.
	# reuseport: no

	# enable debug mode, does not fork daemon process into the background.
	# debug-mode: no

	# listen on IPv4 connections
	# do-ip4: yes

	# listen on IPv6 connections
	# do-ip6: yes

	# port to answer queries on. default is 53.
	# port: 53

	# Verbosity level.
	# verbosity: 0

	# After binding socket, drop user privileges.
	# can be a username, id or id.gid.
	# username: @@user@@

	# Run NSD in a chroot-jail.
	# make sure to have pidfile and database reachable from there.
	# by default, no chroot-jail is used.
	# chroot: "@@configdir@@"

	# The directory for zonefile: files.  The daemon chdirs here.
	# zonesdir: "@@zonesdir@@"
	
	# the list of dynamically added zones.
	# zonelistfile: "@@zonelistfile@@"

	# the database to use
	# if set to "" then no disk-database is used, less memory usage.
	# database: "@@dbfile@@"

	# log messages to file. Default to stderr and syslog (with
	# facility LOG_DAEMON).  stderr disappears when daemon goes to bg.
	# logfile: "@@logfile@@"

	# File to store pid for nsd in.
	# pidfile: "@@pidfile@@"

	# The file where secondary zone refresh and expire timeouts are kept.
	# If you delete this file, all secondary zones are forced to be 
	# 'refreshing' (as if nsd got a notify).  Set to "" to disable.
	# xfrdfile: "@@xfrdfile@@"

	# The directory where zone transfers are stored, in a subdir of it.
	# xfrdir: "@@xfrdir@@"

	# don't answer VERSION.BIND and VERSION.SERVER CHAOS class queries
	# hide-version: no

	# version string the server responds with for chaos queries.
	# default is 'NSD x.y.z' with the server's version number.
	# version: "NSD"

	# identify the server (CH TXT ID.SERVER entry).
	# identity: "unidentified server"

	# NSID identity (hex string, or "ascii_somestring"). default disabled.
	# nsid: "aabbccdd"

	# Maximum number of concurrent TCP connections per server.
	# tcp-count: 100

	# Maximum number of queries served on a single TCP connection.
	# By default 0, which means no maximum.
	# tcp-query-count: 0

	# Override the default (120 seconds) TCP timeout.
	# tcp-timeout: 120

	# Maximum segment size (MSS) of TCP socket on which the server
	# responds to queries. Default is 0, system default MSS.
	# tcp-mss: 0

	# Maximum segment size (MSS) of TCP socket for outgoing AXFR request.
	# Default is 0, system default MSS.
	# outgoing-tcp-mss: 0

	# Preferred EDNS buffer size for IPv4.
	# ipv4-edns-size: 4096

	# Preferred EDNS buffer size for IPv6.
	# ipv6-edns-size: 4096

	# statistics are produced every number of seconds. Prints to log.
	# Default is 0, meaning no statistics are produced.
	# statistics: 3600

	# Number of seconds between reloads triggered by xfrd.
	# xfrd-reload-timeout: 1
	
	# log timestamp in ascii (y-m-d h:m:s.msec), yes is default.
	# log-time-ascii: yes

	# round robin rotation of records in the answer.
	# round-robin: no

	# minimal-responses only emits extra data for referrals.
	# minimal-responses: no

	# check mtime of all zone files on start and sighup
	# zonefiles-check: yes
	
	# write changed zonefiles to disk, every N seconds.
	# default is 0(disabled) or 3600(if database is "").
	# zonefiles-write: 3600

	# RRLconfig
	# Response Rate Limiting, size of the hashtable. Default 1000000.
	# rrl-size: 1000000

	# Response Rate Limiting, maximum QPS allowed (from one query source).
	# If set to 0, ratelimiting is disabled. Also set
	# rrl-whitelist-ratelimit to 0 to disable ratelimit processing.
	# Default is @@ratelimit_default@@.
	# rrl-ratelimit: 200

	# Response Rate Limiting, number of packets to discard before
	# sending a SLIP response (a truncated one, allowing an honest
	# resolver to retry with TCP). Default is 2 (one half of the
	# queries will receive a SLIP response, 0 disables SLIP (all
	# packets are discarded), 1 means every request will get a
	# SLIP response.  When the ratelimit is hit the traffic is
	# divided by the rrl-slip value.
	# rrl-slip: 2

	# Response Rate Limiting, IPv4 prefix length. Addresses are
	# grouped by netblock. 
	# rrl-ipv4-prefix-length: 24

	# Response Rate Limiting, IPv6 prefix length. Addresses are
	# grouped by netblock. 
	# rrl-ipv6-prefix-length: 64

	# Response Rate Limiting, maximum QPS allowed (from one query source)
	# for whitelisted types. Default is @@ratelimit_default@@.
	# rrl-whitelist-ratelimit: 2000
	# RRLend

# Remote control config section. 
remote-control:
	# Enable remote control with nsd-control(8) here.
	# set up the keys and certificates with nsd-control-setup.
	# control-enable: no

	# what interfaces are listened to for control, default is on localhost.
	# control-interface: 127.0.0.1
	# control-interface: ::1

	# port number for remote control operations (uses TLS over TCP).
	# control-port: 8952

	# nsd server key file for remote control.
	# server-key-file: "@@configdir@@/nsd_server.key"

	# nsd server certificate file for remote control.
	# server-cert-file: "@@configdir@@/nsd_server.pem"

	# nsd-control key file.
	# control-key-file: "@@configdir@@/nsd_control.key"

	# nsd-control certificate file.
	# control-cert-file: "@@configdir@@/nsd_control.pem"


# Secret keys for TSIGs that secure zone transfers.
# You could include: "secret.keys" and put the 'key:' statements in there,
# and give that file special access control permissions.
#
# key:
	# The key name is sent to the other party, it must be the same
	#name: "keyname"
	# algorithm hmac-md5, or sha1, sha256, sha224, sha384, sha512
	#algorithm: sha256
	# secret material, must be the same as the other party uses.
	# base64 encoded random number.
	# e.g. from dd if=/dev/random of=/dev/stdout count=1 bs=32 | base64
	#secret: "K2tf3TRjvQkVCmJF3/Z9vA=="


# Patterns have zone configuration and they are shared by one or more zones.
# 
# pattern:
	# name by which the pattern is referred to
	#name: "myzones"
	# the zonefile for the zones that use this pattern.
	# if relative then from the zonesdir (inside the chroot).
	# the name is processed: %s - zone name (as appears in zone:name).
	# %1 - first character of zone name, %2 second, %3 third.
	# %z - topleveldomain label of zone, %y, %x next labels in name.
	# if label or character does not exist you get a dot '.'.
	# for example "%s.zone" or "zones/%1/%2/%3/%s" or "secondary/%z/%s"
	#zonefile: "%s.zone"
	
	# If no master and slave access control elements are provided,
	# this zone will not be served to/from other servers.

	# A master zone needs notify: and provide-xfr: lists.  A slave
	# may also allow zone transfer (for debug or other secondaries).
	# notify these slaves when the master zone changes, address TSIG|NOKEY
	# IP can be ipv4 and ipv6, with @@port for a nondefault port number.
	#notify: 192.0.2.1 NOKEY
	# allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED
	# address range 192.0.2.0/24, 1.2.3.4&255.255.0.0, 3.0.2.20-3.0.2.40
	#provide-xfr: 192.0.2.0/24 my_tsig_key_name
	# set the number of retries for notify.
	#notify-retry: 5

	# uncomment to provide AXFR to all the world
	# provide-xfr: 0.0.0.0/0 NOKEY
	# provide-xfr: ::0/0 NOKEY

	# A slave zone needs allow-notify: and request-xfr: lists.
	#allow-notify: 2001:db8::0/64 my_tsig_key_name
	# By default, a slave will request a zone transfer with IXFR/TCP.
	# If you want to make use of IXFR/UDP use: UDP addr tsigkey
	# for a master that only speaks AXFR (like NSD) use AXFR addr tsigkey
	#request-xfr: 192.0.2.2 the_tsig_key_name
	# Attention: You cannot use UDP and AXFR together. AXFR is always over 
	# TCP. If you use UDP, we higly recommend you to deploy TSIG.
	# Allow AXFR fallback if the master does not support IXFR. Default
	# is yes.
	#allow-axfr-fallback: yes
	# set local interface for sending zone transfer requests.
	# default is let the OS choose.
	#outgoing-interface: 10.0.0.10
	# limit the refresh and retry interval in seconds.
	#max-refresh-time: 2419200
	#min-refresh-time: 0
	#max-retry-time: 1209600
	#min-retry-time: 0
	# Slave server tries zone transfer to all masters and picks highest
	# zone version available, for when masters have different versions.
	#multi-master-check: no

	# limit the zone transfer size (in bytes), stops very large transfers
	# 0 is no limits enforced.
	# size-limit-xfr: 0

	# if compiled with --enable-zone-stats, give name of stat block for
	# this zone (or group of zones).  Output from nsd-control stats.
	# zonestats: "%s"

	# if you give another pattern name here, at this point the settings
	# from that pattern are inserted into this one (as if it were a 
	# macro).  The statement can be given in between other statements,
	# because the order of access control elements can make a difference
	# (which master to request from first, which slave to notify first).
	#include-pattern: "common-masters"


# Fixed zone entries.  Here you can config zones that cannot be deleted.
# Zones that are dynamically added and deleted are put in the zonelist file.
#
# zone:
 	# name: "example.com"
 	# you can give a pattern here, all the settings from that pattern
 	# are then inserted at this point
 	# include-pattern: "master"
 	# You can also specify (additional) options directly for this zone.
 	# zonefile: "example.com.zone"
 	# request-xfr: 192.0.2.1 example.com.key

	# RRLconfig
	# Response Rate Limiting, whitelist types
	# rrl-whitelist: nxdomain
	# rrl-whitelist: error
	# rrl-whitelist: referral
	# rrl-whitelist: any
	# rrl-whitelist: rrsig
	# rrl-whitelist: wildcard
	# rrl-whitelist: nodata
	# rrl-whitelist: dnskey
	# rrl-whitelist: positive
	# rrl-whitelist: all
	# RRLend

@


1.5
log
@Update to 4.1.13
Testing millert, brad and myself.
OK millert@@
@
text
@d135 3
@


1.4
log
@update to 4.1.11
"Working fine here." millert@@
OK dlg, sthen
@
text
@d207 2
a208 2
	# algorithm hmac-md5, or hmac-sha1, or hmac-sha256 (if compiled in)
	#algorithm: hmac-sha256
d266 3
@


1.3
log
@Update to 4.1.10
Testing by millert@@, sthen@@ and me.
came up with the same diff & OK sthen@@
@
text
@d261 9
@


1.2
log
@update to NSD 4.1.7, ok florian@@
@
text
@d30 3
d107 8
@


1.1
log
@Initial revision
@
text
@d4 1
a4 1
# Copyright (c) 2001-2006, NLnet Labs. All rights reserved.
d11 1
d15 8
a22 1
	# uncomment to specify specific interfaces to bind (default all).
d24 1
d27 5
a31 2
	# don't answer VERSION.BIND and VERSION.SERVER CHAOS class queries
	# hide-version: no
d36 20
a55 2
	# listen only on IPv4 connections
	# ip4-only: no
d57 2
a58 2
	# listen only on IPv6 connections
	# ip6-only: no
d60 3
d64 1
d67 22
d92 2
a93 5
	# log messages to file. Default to stderr and syslog.
	# logfile: "/var/log/nsd.log"

	# Number of NSD servers to fork.
	# server-count: 1
d96 1
a96 2
	# This option should have a value below 1000.
	# tcp-count: 10
d111 2
a112 7
	# File to store pid for nsd in.
	# pidfile: "@@pidfile@@"

	# port to answer queries on. default is 53.
	# port: 53

	# statistics are produced every number of seconds.
a114 21
	# Run NSD in a chroot-jail.
	# make sure to have pidfile and database reachable from there.
	# by default, no chroot-jail is used.
	# chroot: "@@configdir@@"

	# After binding socket, drop user privileges.
	# can be a username, id or id.gid.
	# username: @@user@@

	# The directory for zonefile: files.
	# zonesdir: "@@zonesdir@@"

	# The file where incoming zone transfers are stored.
	# run nsd-patch to update zone files, then you can safely delete it.
	# difffile: "@@difffile@@"

	# The file where secondary zone refresh and expire timeouts are kept.
	# If you delete this file, all secondary zones are forced to be 
	# 'refreshing' (as if nsd got a notify).
	# xfrdfile: "@@xfrdfile@@"

d116 4
a119 1
	# xfrd-reload-timeout: 10
d121 2
a122 2
	# Verbosity level.
	# verbosity: 0
d124 96
a219 16
# key for zone 1
key:
	name: mskey
	algorithm: hmac-md5
	secret: "K2tf3TRjvQkVCmJF3/Z9vA=="

# Sample zone 1
zone:
	name: "example.com"
	zonefile: "example.com.zone"

	# This is a slave zone. Masters are listed below.

	# master 1
	allow-notify: 168.192.44.42 mskey
	request-xfr: 168.192.44.42 mskey
d221 10
a230 2
	# set local interface for sending zone transfer requests.
	outgoing-interface: 10.0.0.10
d232 3
a234 3
	# master 2
	allow-notify: 10.0.0.11 NOKEY
	request-xfr: 10.0.0.11 NOKEY
d236 2
d239 3
a241 8
	# If you want to make use of IXFR/UDP use
	allow-notify: 10.0.0.12 NOKEY
	request-xfr: UDP 10.0.0.12 NOKEY

	# for a master that only speaks AXFR (like NSD) use
	allow-notify: 10.0.0.13 NOKEY
	request-xfr: AXFR 10.0.0.13 NOKEY

a243 1

d246 4
a249 5
	allow-axfr-fallback: "yes"

	# uncomment to provide AXFR to all the world
	# provide-xfr: 0.0.0.0/0 NOKEY
	# provide-xfr: ::0/0 NOKEY
d251 10
a260 22
# Sample zone 2
zone:
	name: "example.net"
	zonefile: "example.net.signed.zone"

	# This is a master zone. Slaves are listed below.

	# secondary 1. Uses port 5300.
	notify: 10.0.0.14@@5300 sec1_key
	provide-xfr: 10.0.0.14@@5300 sec1_key

	# set local interface for sending notifies
	outgoing-interface: 10.0.0.15

	# secondary 2. 
	notify: 10.11.12.14 sec2_key
	provide-xfr: 10.11.12.14 sec2_key

	# also provide xfr to operator's network.
	provide-xfr: 169.192.85.0/24 NOKEY
	# uncomment to disable xfr for the address.
	# provide-xfr: 169.192.85.66 BLOCKED
a261 2
	# set the number of retries for notify.
	notify-retry: 5
d263 25
a287 15
# keys for zone 2
key:
	name: "sec1_key"
	algorithm: hmac-md5
	secret: "6KM6qiKfwfEpamEq72HQdA=="

key:
	name: sec2_key
	algorithm: hmac-sha1
	secret: "m83H2x8R0zbDf3yRKhrqgw=="

key:
	name: sec3_key
	algorithm: hmac-sha256
	secret: "m83H2x8R0zbDf3yRKhrqgw=="
@


1.1.1.1
log
@NSD v3.2.4
@
text
@@


1.1.1.2
log
@NSD v3.2.5
@
text
@a35 3
	# NSID identity (hex string). default disabled.
	# nsid: "aabbccdd"

@


1.1.1.3
log
@NSD v3.2.6
@
text
@d14 1
a14 1
	# uncomment to specify specific interfaces to bind (default wildcard interface).
a15 1
	# ip-address: 1.2.3.4@@5678
d39 1
a39 1
	# log messages to file. Default to stderr and syslog (with facility LOG_DAEMON).
a109 2
	# If no access control elements are provided, this zone
	# will not be served to/from other servers.
d115 3
a141 3
	# set local interface for sending zone transfer requests.
	outgoing-interface: 10.0.0.10

a147 2
	# If no access control elements are provided, this zone
	# will not be served to/from other servers.
d153 3
a166 3

	# set local interface for sending notifies
	outgoing-interface: 10.0.0.15
@


1.1.1.4
log
@NSD v3.2.8
@
text
@d4 1
a4 1
# Copyright (c) 2001-2011, NLnet Labs. All rights reserved.
d41 1
a41 1
	# logfile: "@@logfile@@"
@


1.1.1.5
log
@NSD v3.2.11, ok phessler@@
@
text
@a71 3
	# if per zone statistics is enabled, file to store statistics.
	# zone-stats-file: "@@zonestatsfile@@"

@


1.1.1.6
log
@Update to NSD 3.2.15, ok brad@@ phessler@@ deraadt@@ also tested by okan@@
@
text
@a101 14
	# RRLconfig
	# Response Rate Limiting, size of the hashtable. Default 1000000.
	# rrl-size: 1000000

	# Response Rate Limiting, maximum QPS allowed (from one query source).
	# Default 200. If set to 0, ratelimiting is disabled. Also set
	# rrl-whitelist-ratelimit to 0 to disable ratelimit processing.
	# rrl-ratelimit: 200

	# Response Rate Limiting, maximum QPS allowed (from one query source)
	# for whitelisted types. Default 2000.
	# rrl-whitelist-ratelimit: 2000
	# RRLend

a174 15

	# RRLconfig
	# Response Rate Limiting, whitelist types
	# rrl-whitelist: nxdomain
	# rrl-whitelist: error
	# rrl-whitelist: referral
	# rrl-whitelist: any
	# rrl-whitelist: rrsig
	# rrl-whitelist: wildcard
	# rrl-whitelist: nodata
	# rrl-whitelist: dnskey
	# rrl-whitelist: positive
	# rrl-whitelist: all
	# RRLend

@


1.1.1.7
log
@update to NSD 3.2.16, ok deraadt@@ brad@@
@
text
@a18 3
	# Allow binding to non local addresses. Default no.
	# ip-transparent: no

a109 16

	# Response Rate Limiting, number of packets to discard before
	# sending a SLIP response (a truncated one, allowing an honest
	# resolver to retry with TCP). Default is 2 (one half of the
	# queries will receive a SLIP response, 0 disables SLIP (all
	# packets are discarded), 1 means every request will get a
	# SLIP response.
	# rrl-slip: 2

	# Response Rate Limiting, IPv4 prefix length. Addresses are
	# grouped by netblock. 
	# rrl-ipv4-prefix-length: 24

	# Response Rate Limiting, IPv6 prefix length. Addresses are
	# grouped by netblock. 
	# rrl-ipv6-prefix-length: 64
@


1.1.1.8
log
@import NSD 4.0.0, tests from Dorian Büttner, Patrik Lundin, requested by brad@@
@
text
@a10 1
# include: "file" # include that file's text over here.
d14 1
a14 5
	# Number of NSD servers to fork.  Put the number of CPUs to use here.
	# server-count: 1

	# uncomment to specify specific interfaces to bind (default are the
	# wildcard interfaces 0.0.0.0 and ::0).
d22 3
d28 2
a29 15
	# listen on IPv4 connections
	# do-ip4: yes

	# listen on IPv6 connections
	# do-ip6: yes

	# port to answer queries on. default is 53.
	# port: 53

	# Verbosity level.
	# verbosity: 0

	# After binding socket, drop user privileges.
	# can be a username, id or id.gid.
	# username: @@user@@
d31 2
a32 7
	# Run NSD in a chroot-jail.
	# make sure to have pidfile and database reachable from there.
	# by default, no chroot-jail is used.
	# chroot: "@@configdir@@"

	# The directory for zonefile: files.  The daemon chdirs here.
	# zonesdir: "@@zonesdir@@"
a33 3
	# the list of dynamically added zones.
	# zonelistfile: "@@zonelistfile@@"

a36 18
	# log messages to file. Default to stderr and syslog (with
	# facility LOG_DAEMON).  stderr disappears when daemon goes to bg.
	# logfile: "@@logfile@@"

	# File to store pid for nsd in.
	# pidfile: "@@pidfile@@"

	# The file where secondary zone refresh and expire timeouts are kept.
	# If you delete this file, all secondary zones are forced to be 
	# 'refreshing' (as if nsd got a notify).
	# xfrdfile: "@@xfrdfile@@"

	# The directory where zone transfers are stored, in a subdir of it.
	# xfrdir: "@@xfrdir@@"

	# don't answer VERSION.BIND and VERSION.SERVER CHAOS class queries
	# hide-version: no

d43 6
d50 2
a51 1
	# tcp-count: 100
d66 7
a72 1
	# statistics are produced every number of seconds. Prints to log.
d75 24
d100 1
a100 1
	# xfrd-reload-timeout: 1
d102 2
a103 2
	# check mtime of all zone files on start and sighup
	# zonefiles-check: yes
d135 34
a168 57
# Remote control config section. 
remote-control:
	# Enable remote control with nsd-control(8) here.
	# set up the keys and certificates with nsd-control-setup.
	# control-enable: no

	# what interfaces are listened to for control, default is on localhost.
	# control-interface: 127.0.0.1
	# control-interface: ::1

	# port number for remote control operations (uses TLS over TCP).
	# control-port: 8952

	# nsd server key file for remote control.
	# server-key-file: "@@configdir@@/nsd_server.key"

	# nsd server certificate file for remote control.
	# server-cert-file: "@@configdir@@/nsd_server.pem"

	# nsd-control key file.
	# control-key-file: "@@configdir@@/nsd_control.key"

	# nsd-control certificate file.
	# control-cert-file: "@@configdir@@/nsd_control.pem"


# Secret keys for TSIGs that secure zone transfers.
# You could include: "secret.keys" and put the 'key:' statements in there,
# and give that file special access control permissions.
#
# key:
	# The key name is sent to the other party, it must be the same
	#name: "keyname"
	# algorithm hmac-md5, or hmac-sha1, or hmac-sha256 (if compiled in)
	#algorithm: hmac-sha256
	# secret material, must be the same as the other party uses.
	# base64 encoded random number.
	# e.g. from dd if=/dev/random of=/dev/stdout count=1 bs=32 | base64
	#secret: "K2tf3TRjvQkVCmJF3/Z9vA=="


# Patterns have zone configuration and they are shared by one or more zones.
# 
# pattern:
	# name by which the pattern is referred to
	#name: "myzones"
	# the zonefile for the zones that use this pattern.
	# if relative then from the zonesdir (inside the chroot).
	# the name is processed: %s - zone name (as appears in zone:name).
	# %1 - first character of zone name, %2 second, %3 third.
	# %z - topleveldomain label of zone, %y, %x next labels in name.
	# if label or character does not exist you get a dot '.'.
	# for example "%s.zone" or "zones/%1/%2/%3/%s" or "secondary/%z/%s"
	#zonefile: "%s.zone"
	
	# If no master and slave access control elements are provided,
	# this zone will not be served to/from other servers.
d170 3
a172 10
	# A master zone needs notify: and provide-xfr: lists.  A slave
	# may also allow zone transfer (for debug or other secondaries).
	# notify these slaves when the master zone changes, address TSIG|NOKEY
	# IP can be ipv4 and ipv6, with @@port for a nondefault port number.
	#notify: 192.0.2.1 NOKEY
	# allow these IPs and TSIG to transfer zones, addr TSIG|NOKEY|BLOCKED
	# address range 192.0.2.0/24, 1.2.3.4&255.255.0.0, 3.0.2.20-3.0.2.40
	#provide-xfr: 192.0.2.0/24 my_tsig_key_name
	# set the number of retries for notify.
	#notify-retry: 5
a177 11
	# A slave zone needs allow-notify: and request-xfr: lists.
	#allow-notify: 2001:db8::0/64 my_tsig_key_name
	# By default, a slave will request a zone transfer with IXFR/TCP.
	# If you want to make use of IXFR/UDP use: UDP addr tsigkey
	# for a master that only speaks AXFR (like NSD) use AXFR addr tsigkey
	#request-xfr: 192.0.2.2 the_tsig_key_name
	# Attention: You cannot use UDP and AXFR together. AXFR is always over 
	# TCP. If you use UDP, we higly recommend you to deploy TSIG.
	# Allow AXFR fallback if the master does not support IXFR. Default
	# is yes.
	#allow-axfr-fallback: yes
d179 1
a179 2
	# default is let the OS choose.
	#outgoing-interface: 10.0.0.10
d181 27
a207 19
	# if you give another pattern name here, at this point the settings
	# from that pattern are inserted into this one (as if it were a 
	# macro).  The statement can be given in between other statements,
	# because the order of access control elements can make a difference
	# (which master to request from first, which slave to notify first).
	#include-pattern: "common-masters"


# Fixed zone entries.  Here you can config zones that cannot be deleted.
# Zones that are dynamically added and deleted are put in the zonelist file.
#
# zone:
 	# name: "example.com"
 	# you can give a pattern here, all the settings from that pattern
 	# are then inserted at this point
 	# include-pattern: "master"
 	# You can also specify (additional) options directly for this zone.
 	# zonefile: "example.com.zone"
 	# request-xfr: 192.0.2.1 example.com.key
d222 17
@


1.1.1.9
log
@update to NSD 4.0.1, ok sthen@@
@
text
@d81 1
a81 1
	# NSID identity (hex string, or "ascii_somestring"). default disabled.
@


1.1.1.10
log
@update to NSD 4.1.0, ok sthen@@
@
text
@d11 1
a11 1
# include: "file" # include that file's text over here.  Globbed, "*.conf"
a57 1
	# if set to "" then no disk-database is used, less memory usage.
d69 1
a69 1
	# 'refreshing' (as if nsd got a notify).  Set to "" to disable.
a100 1
	# Default is 0, meaning no statistics are produced.
a104 6
	
	# log timestamp in ascii (y-m-d h:m:s.msec), yes is default.
	# log-time-ascii: yes

	# round robin rotation of records in the answer.
	# round-robin: no
a107 4
	
	# write changed zonefiles to disk, every N seconds.
	# default is 0(disabled) or 3600(if database is "").
	# zonefiles-write: 3600
@


1.1.1.11
log
@update to NSD 4.1.1, ok sthen@@
@
text
@a238 4
	# if compiled with --enable-zone-stats, give name of stat block for
	# this zone (or group of zones).  Output from nsd-control stats.
	# zonestats: "%s"

@


1.1.1.12
log
@update to NSD 4.1.6, ok millert@@ florian@@
@
text
@a19 3
	# For servers with multiple IP addresses, list them one by one,
	# or the source address of replies could be wrong.
	# Use ip-transparent to be able to list addresses that turn on later.
a25 4

	# use the reuseport socket option for performance.
	# The default is yes on linux, no for others.
	# reuseport: no
@


