head	1.230;
access;
symbols
	OPENBSD_6_1:1.230.0.4
	OPENBSD_6_1_BASE:1.230
	OPENBSD_6_0:1.226.0.2
	OPENBSD_6_0_BASE:1.226
	OPENBSD_5_9:1.221.0.2
	OPENBSD_5_9_BASE:1.221
	OPENBSD_5_8:1.197.0.4
	OPENBSD_5_8_BASE:1.197
	OPENBSD_5_7:1.194.0.2
	OPENBSD_5_7_BASE:1.194
	OPENBSD_5_6:1.144.0.4
	OPENBSD_5_6_BASE:1.144
	OPENBSD_5_5:1.122.0.4
	OPENBSD_5_5_BASE:1.122
	OPENBSD_5_4:1.104.0.2
	OPENBSD_5_4_BASE:1.104
	OPENBSD_5_3:1.102.0.2
	OPENBSD_5_3_BASE:1.102
	OPENBSD_5_2:1.84.0.2
	OPENBSD_5_2_BASE:1.84
	OPENBSD_5_1_BASE:1.83
	OPENBSD_5_1:1.83.0.2
	OPENBSD_5_0:1.81.0.2
	OPENBSD_5_0_BASE:1.81
	OPENBSD_4_9:1.66.0.2
	OPENBSD_4_9_BASE:1.66
	OPENBSD_4_8:1.62.0.2
	OPENBSD_4_8_BASE:1.62
	OPENBSD_4_7:1.57.0.2
	OPENBSD_4_7_BASE:1.57
	OPENBSD_4_6:1.47.0.4
	OPENBSD_4_6_BASE:1.47
	OPENBSD_4_5:1.29.0.2
	OPENBSD_4_5_BASE:1.29
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19;
locks; strict;
comment	@# @;


1.230
date	2017.03.06.08.16.24;	author ajacoutot;	state Exp;
branches;
next	1.229;
commitid	0XdQXJHW3FOVFZaX;

1.229
date	2017.01.11.08.50.11;	author ajacoutot;	state Exp;
branches;
next	1.228;
commitid	V3H3e2CCFzGk2psN;

1.228
date	2016.09.22.13.08.20;	author ajacoutot;	state Exp;
branches;
next	1.227;
commitid	2WCsOSQShEqLLu68;

1.227
date	2016.07.30.06.31.17;	author ajacoutot;	state Exp;
branches;
next	1.226;
commitid	1ij5k9JDb1hJ8hU5;

1.226
date	2016.05.14.16.14.40;	author ajacoutot;	state Exp;
branches;
next	1.225;
commitid	7lRx3s3V5DWO7zNP;

1.225
date	2016.05.14.14.44.35;	author ajacoutot;	state Exp;
branches;
next	1.224;
commitid	PoOLTNRkFJ5FLSGp;

1.224
date	2016.04.29.12.32.45;	author sthen;	state Exp;
branches;
next	1.223;
commitid	UbMF69lLXWsiG3qz;

1.223
date	2016.04.28.16.42.29;	author ajacoutot;	state Exp;
branches;
next	1.222;
commitid	oXr4B9ZOymhyKrjK;

1.222
date	2016.04.26.11.19.35;	author ajacoutot;	state Exp;
branches;
next	1.221;
commitid	Cm3aMaeXHbdVke4k;

1.221
date	2016.02.02.07.02.32;	author ajacoutot;	state Exp;
branches;
next	1.220;
commitid	Lvion9Pwf0QjXPtO;

1.220
date	2016.01.14.19.58.32;	author ajacoutot;	state Exp;
branches;
next	1.219;
commitid	zaUG2pzRo1oBWzYm;

1.219
date	2015.12.23.10.01.58;	author ajacoutot;	state Exp;
branches;
next	1.218;
commitid	XfIY49A8ohRAV9cs;

1.218
date	2015.12.21.10.54.49;	author ajacoutot;	state Exp;
branches;
next	1.217;
commitid	x7JfGMQPJV7Ma5YW;

1.217
date	2015.11.28.02.42.22;	author deraadt;	state Exp;
branches;
next	1.216;
commitid	6D8MybcnQSLpelF0;

1.216
date	2015.10.18.04.45.21;	author ajacoutot;	state Exp;
branches;
next	1.215;
commitid	WvNTHEIZb7Hp6L0q;

1.215
date	2015.10.16.19.55.39;	author ajacoutot;	state Exp;
branches;
next	1.214;
commitid	Hk7p5VrQyEpxrBhy;

1.214
date	2015.10.13.18.52.56;	author ajacoutot;	state Exp;
branches;
next	1.213;
commitid	qx8s1zjVUkBEEmcP;

1.213
date	2015.10.12.18.25.16;	author ajacoutot;	state Exp;
branches;
next	1.212;
commitid	J7vdRbAiVMnBsQ5Z;

1.212
date	2015.10.12.18.13.59;	author ajacoutot;	state Exp;
branches;
next	1.211;
commitid	VBPwZXaeD4h2yCm4;

1.211
date	2015.09.18.18.03.47;	author ajacoutot;	state Exp;
branches;
next	1.210;
commitid	KS8OCsdONa20z9G7;

1.210
date	2015.09.18.17.03.44;	author ajacoutot;	state Exp;
branches;
next	1.209;
commitid	BvkHneZ8jUxGRNXu;

1.209
date	2015.09.18.16.00.19;	author ajacoutot;	state Exp;
branches;
next	1.208;
commitid	VA15mkSPu6aImI6P;

1.208
date	2015.09.18.10.55.26;	author ajacoutot;	state Exp;
branches;
next	1.207;
commitid	dM5YNHnIbA3LgwxS;

1.207
date	2015.09.09.09.44.31;	author ajacoutot;	state Exp;
branches;
next	1.206;
commitid	s5i99vsit4GPLVjG;

1.206
date	2015.09.09.08.10.33;	author ajacoutot;	state Exp;
branches;
next	1.205;
commitid	zTtAGBLYqV5EG5aO;

1.205
date	2015.09.09.08.04.22;	author ajacoutot;	state Exp;
branches;
next	1.204;
commitid	9ohAPuvLVxtE36fK;

1.204
date	2015.09.07.10.02.04;	author ajacoutot;	state Exp;
branches;
next	1.203;
commitid	uTl2wFu2kYhF9nn8;

1.203
date	2015.09.07.09.34.56;	author ajacoutot;	state Exp;
branches;
next	1.202;
commitid	LG8sNn6jHhGMhoyN;

1.202
date	2015.08.24.12.16.36;	author ajacoutot;	state Exp;
branches;
next	1.201;
commitid	WIKJwoq2JvEHyWe1;

1.201
date	2015.08.24.11.03.41;	author ajacoutot;	state Exp;
branches;
next	1.200;
commitid	7NgJOc03qdu2WIgz;

1.200
date	2015.08.24.10.42.08;	author ajacoutot;	state Exp;
branches;
next	1.199;
commitid	fjvxZoJ9vynXEQQK;

1.199
date	2015.08.19.09.28.48;	author ajacoutot;	state Exp;
branches;
next	1.198;
commitid	JYjJw52X3oxTDxpe;

1.198
date	2015.08.13.07.06.41;	author ajacoutot;	state Exp;
branches;
next	1.197;
commitid	zp1ocenyjkrSluag;

1.197
date	2015.07.18.20.27.37;	author ajacoutot;	state Exp;
branches;
next	1.196;
commitid	HMNifyMg2lMszSxw;

1.196
date	2015.06.02.17.29.28;	author jung;	state Exp;
branches;
next	1.195;
commitid	WdrMA41zCyfiI9I9;

1.195
date	2015.03.12.12.46.01;	author ajacoutot;	state Exp;
branches;
next	1.194;
commitid	twyCZJxjFSzKRPLh;

1.194
date	2015.02.17.15.43.34;	author sthen;	state Exp;
branches;
next	1.193;
commitid	X8yDZzoddKhbcScB;

1.193
date	2014.11.26.15.52.30;	author ajacoutot;	state Exp;
branches;
next	1.192;
commitid	NYWFjNVrcySCJ9AK;

1.192
date	2014.10.09.14.33.51;	author ajacoutot;	state Exp;
branches;
next	1.191;
commitid	xCdGLzKS73QrmDdS;

1.191
date	2014.10.09.14.23.58;	author ajacoutot;	state Exp;
branches;
next	1.190;
commitid	JAIQKMaK996LdtUU;

1.190
date	2014.09.16.21.56.42;	author rpe;	state Exp;
branches;
next	1.189;
commitid	0SoCvZOxdjaw72hk;

1.189
date	2014.09.13.12.00.52;	author ajacoutot;	state Exp;
branches;
next	1.188;
commitid	lQlbttkXpGaVEGz5;

1.188
date	2014.09.09.08.53.51;	author ajacoutot;	state Exp;
branches;
next	1.187;
commitid	MPzibE74GrgCg4oK;

1.187
date	2014.09.09.07.47.04;	author rpe;	state Exp;
branches;
next	1.186;
commitid	UBA809uOcSh36VRU;

1.186
date	2014.09.09.06.37.57;	author rpe;	state Exp;
branches;
next	1.185;
commitid	2RUn3443Wvh5meFD;

1.185
date	2014.09.08.16.47.58;	author ajacoutot;	state Exp;
branches;
next	1.184;
commitid	sS0YmjxpxSAMvV6d;

1.184
date	2014.09.08.11.27.49;	author halex;	state Exp;
branches;
next	1.183;
commitid	iTTVvFoHfW6yKFvC;

1.183
date	2014.09.07.11.41.49;	author ajacoutot;	state Exp;
branches;
next	1.182;
commitid	vdSksXncHQ20y2V5;

1.182
date	2014.09.07.09.46.32;	author ajacoutot;	state Exp;
branches;
next	1.181;
commitid	7cUkRkJClYtE3CsQ;

1.181
date	2014.09.07.09.21.42;	author ajacoutot;	state Exp;
branches;
next	1.180;
commitid	TnPHc1yp0YskBMv5;

1.180
date	2014.09.07.08.39.04;	author ajacoutot;	state Exp;
branches;
next	1.179;
commitid	W3ntqDddhlN4C2yt;

1.179
date	2014.09.07.08.15.42;	author ajacoutot;	state Exp;
branches;
next	1.178;
commitid	SqdosDwy2wz9tcQs;

1.178
date	2014.09.07.07.46.26;	author ajacoutot;	state Exp;
branches;
next	1.177;
commitid	H86ULOfbRqOSdQaS;

1.177
date	2014.09.07.06.40.01;	author ajacoutot;	state Exp;
branches;
next	1.176;
commitid	hWrDTpGqTCemCrXa;

1.176
date	2014.09.06.21.46.15;	author rpe;	state Exp;
branches;
next	1.175;
commitid	5jDFPYFiXrC9YRLQ;

1.175
date	2014.09.06.20.47.44;	author rpe;	state Exp;
branches;
next	1.174;
commitid	jAeA41ue0dGQHSHy;

1.174
date	2014.09.06.10.43.24;	author ajacoutot;	state Exp;
branches;
next	1.173;
commitid	Ld8ly6FeyCYQ0Z0z;

1.173
date	2014.09.06.10.38.01;	author ajacoutot;	state Exp;
branches;
next	1.172;
commitid	Av0eqMxuwfHtY6L4;

1.172
date	2014.09.05.17.26.08;	author ajacoutot;	state Exp;
branches;
next	1.171;
commitid	DHkMdwAsiBcefCpO;

1.171
date	2014.09.05.17.22.10;	author ajacoutot;	state Exp;
branches;
next	1.170;
commitid	65LcsLI2PbWZGUw6;

1.170
date	2014.09.05.17.19.48;	author ajacoutot;	state Exp;
branches;
next	1.169;
commitid	MKPXKtzl35aMRlMw;

1.169
date	2014.09.05.16.59.46;	author ajacoutot;	state Exp;
branches;
next	1.168;
commitid	GIvcdqvO5DDzFdyW;

1.168
date	2014.09.05.08.28.12;	author ajacoutot;	state Exp;
branches;
next	1.167;
commitid	lwVpwpY4Od6g4DgR;

1.167
date	2014.09.05.07.16.38;	author ajacoutot;	state Exp;
branches;
next	1.166;
commitid	yaDCqVaKVik059zG;

1.166
date	2014.09.01.06.55.37;	author ajacoutot;	state Exp;
branches;
next	1.165;
commitid	YGLwG4Ruip3rfQs5;

1.165
date	2014.08.31.09.20.06;	author ajacoutot;	state Exp;
branches;
next	1.164;
commitid	0SYJDox1270vQF59;

1.164
date	2014.08.31.08.32.41;	author ajacoutot;	state Exp;
branches;
next	1.163;
commitid	CMuIREgEulN9AFl0;

1.163
date	2014.08.31.07.59.58;	author ajacoutot;	state Exp;
branches;
next	1.162;
commitid	BiGqlyji4dcXQpvs;

1.162
date	2014.08.31.07.35.52;	author ajacoutot;	state Exp;
branches;
next	1.161;
commitid	RcJRBRjCd6frps8W;

1.161
date	2014.08.31.07.31.26;	author ajacoutot;	state Exp;
branches;
next	1.160;
commitid	mIwl3gHwORwzlU66;

1.160
date	2014.08.31.06.40.46;	author ajacoutot;	state Exp;
branches;
next	1.159;
commitid	tZJHcIn0SOEBHWc7;

1.159
date	2014.08.30.20.31.03;	author ajacoutot;	state Exp;
branches;
next	1.158;
commitid	lBYLkRlwbZMYJ9r6;

1.158
date	2014.08.30.16.37.12;	author ajacoutot;	state Exp;
branches;
next	1.157;
commitid	oy5vMYPA0XrQdmS2;

1.157
date	2014.08.30.14.40.09;	author ajacoutot;	state Exp;
branches;
next	1.156;
commitid	WYZDD2nqARqLZ2gT;

1.156
date	2014.08.29.06.52.20;	author ajacoutot;	state Exp;
branches;
next	1.155;
commitid	IkmdpzlHfqoz26TK;

1.155
date	2014.08.28.17.43.21;	author ajacoutot;	state Exp;
branches;
next	1.154;
commitid	DgyVyKzJEDoaNCTF;

1.154
date	2014.08.27.14.44.42;	author ajacoutot;	state Exp;
branches;
next	1.153;
commitid	iCGSOoyKezIUBhYA;

1.153
date	2014.08.27.14.13.17;	author ajacoutot;	state Exp;
branches;
next	1.152;
commitid	pMbb7UN9ETMCTbBr;

1.152
date	2014.08.26.21.29.56;	author ajacoutot;	state Exp;
branches;
next	1.151;
commitid	O0yWo4lc1SMKXXmU;

1.151
date	2014.08.21.16.50.11;	author ajacoutot;	state Exp;
branches;
next	1.150;
commitid	c3LmQm5XegD55NVl;

1.150
date	2014.08.11.09.03.27;	author ajacoutot;	state Exp;
branches;
next	1.149;
commitid	bPvVUTFWHSx3SyRY;

1.149
date	2014.08.10.17.15.18;	author jmc;	state Exp;
branches;
next	1.148;
commitid	8ebGH2HELtax1UVM;

1.148
date	2014.08.09.12.46.51;	author ajacoutot;	state Exp;
branches;
next	1.147;
commitid	yuaHd2XY2QQhMIEd;

1.147
date	2014.08.09.12.45.03;	author ajacoutot;	state Exp;
branches;
next	1.146;
commitid	FskWo4sInNg8ZY4O;

1.146
date	2014.08.09.12.34.05;	author ajacoutot;	state Exp;
branches;
next	1.145;
commitid	QIcMDBFc9gImxa58;

1.145
date	2014.08.08.16.38.25;	author ajacoutot;	state Exp;
branches;
next	1.144;
commitid	ONEEOWkNWyTm9GjQ;

1.144
date	2014.07.30.16.54.09;	author ajacoutot;	state Exp;
branches;
next	1.143;
commitid	Bzt84iuP9GSGvaVn;

1.143
date	2014.07.20.08.19.59;	author ajacoutot;	state Exp;
branches;
next	1.142;
commitid	xmNMP034KU2QAY2K;

1.142
date	2014.07.18.10.43.29;	author ajacoutot;	state Exp;
branches;
next	1.141;
commitid	CuyVxcggjjzsUuWF;

1.141
date	2014.07.15.15.30.56;	author ajacoutot;	state Exp;
branches;
next	1.140;
commitid	vwOVBu29m1iLwEQ8;

1.140
date	2014.07.15.09.27.04;	author ajacoutot;	state Exp;
branches;
next	1.139;
commitid	y5g5q0ndqFZgnXb1;

1.139
date	2014.07.13.07.12.41;	author ajacoutot;	state Exp;
branches;
next	1.138;
commitid	N0cI7FlzHM0PVQdF;

1.138
date	2014.07.12.22.06.11;	author ajacoutot;	state Exp;
branches;
next	1.137;
commitid	VAq3TGjUEjfNVTC2;

1.137
date	2014.07.12.16.26.35;	author ajacoutot;	state Exp;
branches;
next	1.136;
commitid	7pASukHTS9tEh4uI;

1.136
date	2014.07.12.15.58.14;	author ajacoutot;	state Exp;
branches;
next	1.135;
commitid	U1QqNySyBEcOastM;

1.135
date	2014.07.12.15.31.54;	author ajacoutot;	state Exp;
branches;
next	1.134;
commitid	4ZnxXWzBDY3JwfP8;

1.134
date	2014.07.10.11.00.03;	author ajacoutot;	state Exp;
branches;
next	1.133;
commitid	nqjY67Y9lxMFqQhf;

1.133
date	2014.03.27.07.27.04;	author ajacoutot;	state Exp;
branches;
next	1.132;

1.132
date	2014.03.26.23.03.59;	author ajacoutot;	state Exp;
branches;
next	1.131;

1.131
date	2014.03.24.15.20.32;	author ajacoutot;	state Exp;
branches;
next	1.130;

1.130
date	2014.03.22.12.33.36;	author ajacoutot;	state Exp;
branches;
next	1.129;

1.129
date	2014.03.22.12.26.03;	author ajacoutot;	state Exp;
branches;
next	1.128;

1.128
date	2014.03.22.11.16.42;	author ajacoutot;	state Exp;
branches;
next	1.127;

1.127
date	2014.03.21.08.13.57;	author ajacoutot;	state Exp;
branches;
next	1.126;

1.126
date	2014.03.21.08.02.11;	author ajacoutot;	state Exp;
branches;
next	1.125;

1.125
date	2014.03.20.09.00.09;	author ajacoutot;	state Exp;
branches;
next	1.124;

1.124
date	2014.03.18.18.03.44;	author ajacoutot;	state Exp;
branches;
next	1.123;

1.123
date	2014.03.06.15.07.11;	author ajacoutot;	state Exp;
branches;
next	1.122;

1.122
date	2014.03.01.13.47.26;	author deraadt;	state Exp;
branches;
next	1.121;

1.121
date	2014.02.08.23.58.06;	author ajacoutot;	state Exp;
branches;
next	1.120;

1.120
date	2014.02.07.18.15.27;	author ajacoutot;	state Exp;
branches;
next	1.119;

1.119
date	2014.02.05.15.49.15;	author ajacoutot;	state Exp;
branches;
next	1.118;

1.118
date	2014.02.03.09.11.14;	author ajacoutot;	state Exp;
branches;
next	1.117;

1.117
date	2014.01.28.09.25.22;	author ajacoutot;	state Exp;
branches;
next	1.116;

1.116
date	2014.01.27.17.40.42;	author ajacoutot;	state Exp;
branches;
next	1.115;

1.115
date	2014.01.27.17.16.53;	author ajacoutot;	state Exp;
branches;
next	1.114;

1.114
date	2014.01.27.17.06.56;	author ajacoutot;	state Exp;
branches;
next	1.113;

1.113
date	2014.01.23.22.05.59;	author rpe;	state Exp;
branches;
next	1.112;

1.112
date	2014.01.23.08.23.45;	author ajacoutot;	state Exp;
branches;
next	1.111;

1.111
date	2014.01.23.07.24.00;	author ajacoutot;	state Exp;
branches;
next	1.110;

1.110
date	2014.01.22.10.40.07;	author ajacoutot;	state Exp;
branches;
next	1.109;

1.109
date	2014.01.22.08.34.57;	author ajacoutot;	state Exp;
branches;
next	1.108;

1.108
date	2014.01.22.08.25.16;	author ajacoutot;	state Exp;
branches;
next	1.107;

1.107
date	2014.01.21.07.58.08;	author ajacoutot;	state Exp;
branches;
next	1.106;

1.106
date	2014.01.21.07.39.14;	author rpe;	state Exp;
branches;
next	1.105;

1.105
date	2013.09.10.08.44.38;	author ajacoutot;	state Exp;
branches;
next	1.104;

1.104
date	2013.03.22.08.20.43;	author ajacoutot;	state Exp;
branches;
next	1.103;

1.103
date	2013.03.02.09.11.15;	author ajacoutot;	state Exp;
branches;
next	1.102;

1.102
date	2013.01.25.13.32.49;	author ajacoutot;	state Exp;
branches;
next	1.101;

1.101
date	2013.01.04.07.56.36;	author rpe;	state Exp;
branches;
next	1.100;

1.100
date	2013.01.03.19.45.57;	author rpe;	state Exp;
branches;
next	1.99;

1.99
date	2012.12.26.12.28.26;	author rpe;	state Exp;
branches;
next	1.98;

1.98
date	2012.12.26.10.38.10;	author rpe;	state Exp;
branches;
next	1.97;

1.97
date	2012.12.25.13.26.45;	author rpe;	state Exp;
branches;
next	1.96;

1.96
date	2012.12.24.14.31.36;	author rpe;	state Exp;
branches;
next	1.95;

1.95
date	2012.12.23.11.50.19;	author rpe;	state Exp;
branches;
next	1.94;

1.94
date	2012.12.19.19.40.30;	author rpe;	state Exp;
branches;
next	1.93;

1.93
date	2012.11.10.18.48.28;	author rpe;	state Exp;
branches;
next	1.92;

1.92
date	2012.11.10.16.02.52;	author rpe;	state Exp;
branches;
next	1.91;

1.91
date	2012.11.10.09.50.05;	author rpe;	state Exp;
branches;
next	1.90;

1.90
date	2012.11.08.08.56.41;	author rpe;	state Exp;
branches;
next	1.89;

1.89
date	2012.08.28.05.42.07;	author ajacoutot;	state Exp;
branches;
next	1.88;

1.88
date	2012.08.20.14.10.30;	author ajacoutot;	state Exp;
branches;
next	1.87;

1.87
date	2012.08.20.06.10.24;	author ajacoutot;	state Exp;
branches;
next	1.86;

1.86
date	2012.08.04.09.55.29;	author ajacoutot;	state Exp;
branches;
next	1.85;

1.85
date	2012.08.04.07.02.14;	author ajacoutot;	state Exp;
branches;
next	1.84;

1.84
date	2012.03.19.10.52.57;	author ajacoutot;	state Exp;
branches;
next	1.83;

1.83
date	2011.10.09.15.02.22;	author sthen;	state Exp;
branches;
next	1.82;

1.82
date	2011.09.01.07.52.46;	author ajacoutot;	state Exp;
branches;
next	1.81;

1.81
date	2011.08.03.13.33.29;	author ajacoutot;	state Exp;
branches;
next	1.80;

1.80
date	2011.07.11.04.37.21;	author deraadt;	state Exp;
branches;
next	1.79;

1.79
date	2011.07.11.04.10.47;	author deraadt;	state Exp;
branches;
next	1.78;

1.78
date	2011.07.06.23.35.07;	author ajacoutot;	state Exp;
branches;
next	1.77;

1.77
date	2011.07.06.17.38.15;	author ajacoutot;	state Exp;
branches;
next	1.76;

1.76
date	2011.07.06.17.19.06;	author ajacoutot;	state Exp;
branches;
next	1.75;

1.75
date	2011.07.05.21.43.45;	author ajacoutot;	state Exp;
branches;
next	1.74;

1.74
date	2011.05.09.14.18.34;	author ajacoutot;	state Exp;
branches;
next	1.73;

1.73
date	2011.05.08.09.49.34;	author ajacoutot;	state Exp;
branches;
next	1.72;

1.72
date	2011.05.06.16.17.18;	author ajacoutot;	state Exp;
branches;
next	1.71;

1.71
date	2011.04.27.08.44.48;	author ajacoutot;	state Exp;
branches;
next	1.70;

1.70
date	2011.04.21.15.57.14;	author ajacoutot;	state Exp;
branches;
next	1.69;

1.69
date	2011.04.21.15.54.24;	author ajacoutot;	state Exp;
branches;
next	1.68;

1.68
date	2011.04.20.09.37.35;	author ajacoutot;	state Exp;
branches;
next	1.67;

1.67
date	2011.04.18.07.50.29;	author ajacoutot;	state Exp;
branches;
next	1.66;

1.66
date	2010.11.11.10.46.10;	author ajacoutot;	state Exp;
branches;
next	1.65;

1.65
date	2010.11.08.14.05.09;	author ajacoutot;	state Exp;
branches;
next	1.64;

1.64
date	2010.11.04.09.17.38;	author ajacoutot;	state Exp;
branches;
next	1.63;

1.63
date	2010.08.21.09.32.00;	author sthen;	state Exp;
branches;
next	1.62;

1.62
date	2010.07.20.05.35.29;	author ajacoutot;	state Exp;
branches;
next	1.61;

1.61
date	2010.07.17.06.47.13;	author ajacoutot;	state Exp;
branches;
next	1.60;

1.60
date	2010.07.06.12.02.54;	author ajacoutot;	state Exp;
branches;
next	1.59;

1.59
date	2010.07.05.08.30.28;	author ajacoutot;	state Exp;
branches;
next	1.58;

1.58
date	2010.06.27.00.07.22;	author ajacoutot;	state Exp;
branches;
next	1.57;

1.57
date	2010.02.06.14.02.36;	author ajacoutot;	state Exp;
branches;
next	1.56;

1.56
date	2010.01.13.16.22.56;	author sthen;	state Exp;
branches;
next	1.55;

1.55
date	2009.12.18.15.33.02;	author ajacoutot;	state Exp;
branches;
next	1.54;

1.54
date	2009.12.18.13.51.03;	author ajacoutot;	state Exp;
branches;
next	1.53;

1.53
date	2009.12.06.16.21.36;	author ajacoutot;	state Exp;
branches;
next	1.52;

1.52
date	2009.10.02.11.53.45;	author ajacoutot;	state Exp;
branches;
next	1.51;

1.51
date	2009.08.24.19.14.13;	author ajacoutot;	state Exp;
branches;
next	1.50;

1.50
date	2009.08.18.08.27.32;	author ajacoutot;	state Exp;
branches;
next	1.49;

1.49
date	2009.08.17.12.02.47;	author ajacoutot;	state Exp;
branches;
next	1.48;

1.48
date	2009.08.16.20.15.10;	author ajacoutot;	state Exp;
branches;
next	1.47;

1.47
date	2009.06.28.21.08.06;	author ajacoutot;	state Exp;
branches;
next	1.46;

1.46
date	2009.06.28.18.23.43;	author ajacoutot;	state Exp;
branches;
next	1.45;

1.45
date	2009.06.28.08.14.26;	author ajacoutot;	state Exp;
branches;
next	1.44;

1.44
date	2009.06.14.06.54.40;	author ajacoutot;	state Exp;
branches;
next	1.43;

1.43
date	2009.06.04.23.24.17;	author ajacoutot;	state Exp;
branches;
next	1.42;

1.42
date	2009.05.13.22.27.48;	author ajacoutot;	state Exp;
branches;
next	1.41;

1.41
date	2009.05.12.13.04.18;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2009.05.11.20.25.55;	author ajacoutot;	state Exp;
branches;
next	1.39;

1.39
date	2009.04.28.08.25.27;	author ajacoutot;	state Exp;
branches;
next	1.38;

1.38
date	2009.04.12.11.17.58;	author ajacoutot;	state Exp;
branches;
next	1.37;

1.37
date	2009.04.12.07.52.10;	author ajacoutot;	state Exp;
branches;
next	1.36;

1.36
date	2009.04.12.07.43.17;	author ajacoutot;	state Exp;
branches;
next	1.35;

1.35
date	2009.04.09.10.44.50;	author ajacoutot;	state Exp;
branches;
next	1.34;

1.34
date	2009.04.06.15.25.10;	author ajacoutot;	state Exp;
branches;
next	1.33;

1.33
date	2009.04.06.10.35.20;	author ajacoutot;	state Exp;
branches;
next	1.32;

1.32
date	2009.03.27.15.17.31;	author ajacoutot;	state Exp;
branches;
next	1.31;

1.31
date	2009.03.25.18.02.12;	author ajacoutot;	state Exp;
branches;
next	1.30;

1.30
date	2009.03.25.13.20.02;	author ajacoutot;	state Exp;
branches;
next	1.29;

1.29
date	2009.02.17.16.48.11;	author ajacoutot;	state Exp;
branches;
next	1.28;

1.28
date	2009.02.17.10.57.59;	author ajacoutot;	state Exp;
branches;
next	1.27;

1.27
date	2008.12.16.22.23.55;	author ajacoutot;	state Exp;
branches;
next	1.26;

1.26
date	2008.12.15.15.54.55;	author fgsch;	state Exp;
branches;
next	1.25;

1.25
date	2008.09.17.08.04.17;	author ajacoutot;	state Exp;
branches;
next	1.24;

1.24
date	2008.09.12.13.31.59;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2008.09.12.13.23.17;	author ajacoutot;	state Exp;
branches;
next	1.22;

1.22
date	2008.09.06.13.25.48;	author ajacoutot;	state Exp;
branches;
next	1.21;

1.21
date	2008.09.02.11.38.06;	author ajacoutot;	state Exp;
branches;
next	1.20;

1.20
date	2008.08.29.08.17.28;	author ajacoutot;	state Exp;
branches;
next	1.19;

1.19
date	2008.07.21.08.28.55;	author ajacoutot;	state Exp;
branches;
next	1.18;

1.18
date	2008.07.10.16.49.26;	author ajacoutot;	state Exp;
branches;
next	1.17;

1.17
date	2008.07.08.11.04.28;	author ajacoutot;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.04.15.03.45;	author sthen;	state Exp;
branches;
next	1.15;

1.15
date	2008.06.13.23.56.48;	author ajacoutot;	state Exp;
branches;
next	1.14;

1.14
date	2008.06.13.00.46.57;	author ajacoutot;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.13.00.33.04;	author ajacoutot;	state Exp;
branches;
next	1.12;

1.12
date	2008.06.10.00.36.46;	author pyr;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.09.23.57.58;	author ajacoutot;	state Exp;
branches;
next	1.10;

1.10
date	2008.06.08.21.54.25;	author ajacoutot;	state Exp;
branches;
next	1.9;

1.9
date	2008.06.08.21.51.25;	author ajacoutot;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.01.15.07.00;	author ajacoutot;	state Exp;
branches;
next	1.7;

1.7
date	2008.05.14.15.31.41;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.14.07.48.36;	author ajacoutot;	state Exp;
branches;
next	1.5;

1.5
date	2008.04.30.20.15.55;	author ajacoutot;	state Exp;
branches;
next	1.4;

1.4
date	2008.04.23.20.39.00;	author ajacoutot;	state Exp;
branches;
next	1.3;

1.3
date	2008.04.23.16.50.33;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2008.04.23.16.39.40;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2008.04.22.20.53.16;	author ajacoutot;	state Exp;
branches;
next	;


desc
@@


1.230
log
@Just exit 1 instead of printing usage on error.

prodded by deraadt@@
@
text
@#!/bin/ksh -
#
# $OpenBSD: sysmerge.sh,v 1.229 2017/01/11 08:50:11 ajacoutot Exp $
#
# Copyright (c) 2008-2014 Antoine Jacoutot <ajacoutot@@openbsd.org>
# Copyright (c) 1998-2003 Douglas Barton <DougB@@FreeBSD.org>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
#

umask 0022

usage() {
	echo "usage: ${0##*/} [-bdp]" >&2 && exit 1
}

# OpenBSD /etc/rc v1.456
stripcom() {
	local _file=$1 _line

	[[ -s $_file ]] || return

	while read _line ; do
		_line=${_line%%#*}
		[[ -n $_line ]] && print -r -- "$_line"
	done <$_file
}

sm_error() {
	(($#)) && echo "!!!! $@@"
	rm -rf ${_TMPROOT}
	exit 1
}

sm_trap() {
	rm -f /var/sysmerge/{etc,pkg,xetc}sum
	sm_error
}

trap "sm_trap" 1 2 3 13 15

sm_info() {
	(($#)) && echo "---- $@@" || true
}

sm_warn() {
	(($#)) && echo "**** $@@" || true
}

sm_extract_sets() {
	${PKGMODE} && return
	local _e _x _set

	[[ -f /var/sysmerge/etc.tgz ]] && _e=etc
	[[ -f /var/sysmerge/xetc.tgz ]] && _x=xetc
	[[ -z ${_e}${_x} ]] && sm_error "cannot find sets to extract"

	for _set in ${_e} ${_x}; do
		tar -xzphf \
			/var/sysmerge/${_set}.tgz || \
			sm_error "failed to extract ${_set}.tgz"
	done
}

sm_rotate_bak() {
	local _b

	for _b in $(jot 4 3 0); do
		[[ -d ${_BKPDIR}.${_b} ]] && \
			mv ${_BKPDIR}.${_b} ${_BKPDIR}.$((_b+1))
	done
	rm -rf ${_BKPDIR}.4
	[[ -d ${_BKPDIR} ]] && mv ${_BKPDIR} ${_BKPDIR}.0
	# make sure this function is only run _once_ per sysmerge invocation
	unset -f sm_rotate_bak
}

# get pkg @@sample information
exec_espie() {
	local _tmproot

	_tmproot=${_TMPROOT} /usr/bin/perl <<'EOF'
use strict;
use warnings;

package OpenBSD::PackingElement;

sub walk_sample
{
}

package OpenBSD::PackingElement::Sampledir;
sub walk_sample
{
	my $item = shift;
	print "0-DIR", " ",
	      $item->{owner} // "root", " ",
	      $item->{group} // "wheel", " ",
	      $item->{mode} // "0755", " ",
	      $ENV{'_tmproot'}, $item->fullname,
	      "\n";
}

package OpenBSD::PackingElement::Sample;
sub walk_sample
{
	my $item = shift;
	print "1-FILE", " ",
	      $item->{owner} // "root", " ",
	      $item->{group} // "wheel", " ",
	      $item->{mode} // "0644", " ",
	      $item->{copyfrom}->fullname, " ",
	      $ENV{'_tmproot'}, $item->fullname,
	      "\n";
}

package main;
use OpenBSD::PackageInfo;
use OpenBSD::PackingList;

for my $i (installed_packages()) {
	my $plist = OpenBSD::PackingList->from_installation($i);
	$plist->walk_sample();
}
EOF
}

sm_cp_pkg_samples() {
	! ${PKGMODE} && return
	local _install_args _i _ret=0 _sample

	# access to full base system hierarchy is implied in packages
	mtree -qdef /etc/mtree/4.4BSD.dist -U >/dev/null
	mtree -qdef /etc/mtree/BSD.x11.dist -U >/dev/null

	# @@sample directories are processed first
	exec_espie | sort -u | while read _i; do
		set -A _sample -- ${_i}
		_install_args="-o ${_sample[1]} -g ${_sample[2]} -m ${_sample[3]}"
		if [[ ${_sample[0]} == "0-DIR" ]]; then
			install -d ${_install_args} ${_sample[4]} || _ret=1
		else
			# directory we want to copy the @@sample file into
			# does not exist and is not a @@sample so we have no
			# knowledge of the required owner/group/mode
			# (e.g. /var/www/usr/sbin in mail/femail,-chroot)
			_pkghier=${_sample[5]%/*}
			if [[ ! -d ${_pkghier#${_TMPROOT}} ]]; then
				sm_warn "skipping ${_sample[5]#${_TMPROOT}}: ${_pkghier#${_TMPROOT}} does not exist"
				continue
			else
				# non-default prefix (e.g. mail/roundcubemail)
				install -d ${_pkghier}
			fi
			install ${_install_args} \
				${_sample[4]} ${_sample[5]} || _ret=1
		fi
	done

	if [[ ${_ret} -eq 0 ]]; then
		find . -type f -exec sha256 '{}' + | sort \
			>./var/sysmerge/pkgsum || _ret=1
	fi
	[[ ${_ret} -ne 0 ]] && \
		sm_error "failed to populate packages @@samples and create sum file"
}

sm_run() {
	local _auto_upg _c _c1 _c2 _cursum _diff _i _k _j _cfdiff _cffiles
	local _ignorefiles _cvsid1 _cvsid2 _matchsum _mismatch

	# XXX remove after OPENBSD_6_1
	rm -f /var/sysmerge/examplessum

	sm_extract_sets
	sm_add_user_grp
	sm_cp_pkg_samples

	for _i in etcsum xetcsum pkgsum; do
		if [[ -f /var/sysmerge/${_i} && \
			-f ./var/sysmerge/${_i} ]] && \
			! ${DIFFMODE}; then
			# redirect stderr: file may not exist
			_matchsum=$(sha256 -c /var/sysmerge/${_i} 2>/dev/null | \
				sed -n 's/^(SHA256) \(.*\): OK$/\1/p')
			# delete file in temproot if it has not changed since
			# last release and is present in current installation
			for _j in ${_matchsum}; do
				# skip sum files
				[[ ${_j} == ./var/sysmerge/${_i} ]] && continue
				[[ -f ${_j#.} && -f ${_j} ]] && \
					rm ${_j}
			done

			# set auto-upgradable files
			_mismatch=$(diff -u ./var/sysmerge/${_i} /var/sysmerge/${_i} | \
				sed -n 's/^+SHA256 (\(.*\)).*/\1/p')
			for _k in ${_mismatch}; do
				# skip sum files
				[[ ${_k} == ./var/sysmerge/${_i} ]] && continue
				# compare CVS Id first so if the file hasn't been modified,
				# it will be deleted from temproot and ignored from comparison;
				# several files are generated from scripts so CVS ID is not a
				# reliable way of detecting changes: leave for a full diff
				if ! ${PKGMODE} && \
					[[ ${_k} != ./etc/@@(fbtab|ttys) && \
					! -h ${_k} ]]; then
					_cvsid1=$(sed -n "/[$]OpenBSD:.*Exp [$]/{p;q;}" ${_k#.} 2>/dev/null)
					_cvsid2=$(sed -n "/[$]OpenBSD:.*Exp [$]/{p;q;}" ${_k} 2>/dev/null)
					[[ -n ${_cvsid1} ]] && \
						[[ ${_cvsid1} == ${_cvsid2} ]] && \
						[[ -f ${_k} ]] && rm ${_k} && \
						continue
				fi
				# redirect stderr: file may not exist
				_cursum=$(cd / && sha256 ${_k} 2>/dev/null)
				grep -q "${_cursum}" /var/sysmerge/${_i} && \
					! grep -q "${_cursum}" ./var/sysmerge/${_i} && \
					_auto_upg="${_auto_upg} ${_k}"
			done
			[[ -n ${_auto_upg} ]] && set -A AUTO_UPG -- ${_auto_upg}
		fi
		[[ -f ./var/sysmerge/${_i} ]] && \
			mv ./var/sysmerge/${_i} /var/sysmerge/${_i}
	done

	# files we don't want/need to deal with
	_ignorefiles="/etc/group
		      /etc/localtime
		      /etc/master.passwd
		      /etc/motd
		      /etc/passwd
		      /etc/pwd.db
		      /etc/spwd.db
		      /var/db/locate.database
		      /var/mail/root"
	# in case X(7) is not installed, xetcsum is not removed by the loop above
	_ignorefiles="${_ignorefiles} /var/sysmerge/xetcsum"
	[[ -f /etc/sysmerge.ignore ]] && \
		_ignorefiles="${_ignorefiles} $(stripcom /etc/sysmerge.ignore)"
	for _i in ${_ignorefiles}; do
		rm -f ./${_i}
	done

	# aliases(5) needs to be handled last in case mailer.conf(5) changes
	_c1=$(find . -type f -or -type l | grep -v '^./etc/mail/aliases$')
	[[ -f ./etc/mail/aliases ]] && _c2="./etc/mail/aliases"
	for COMPFILE in ${_c1} ${_c2}; do
		IS_BIN=false
		IS_LINK=false
		TARGET=${COMPFILE#.}

		# links need to be treated in a different way
		if [[ -h ${COMPFILE} ]]; then
			IS_LINK=true
			[[ -h ${TARGET} && \
				$(readlink ${COMPFILE}) == $(readlink ${TARGET}) ]] && \
				rm ${COMPFILE} && continue
		elif [[ -f ${TARGET} ]]; then
			# empty files = binaries (to avoid comparison);
			# only process them if they don't exist on the system
			if [[ ! -s ${COMPFILE} ]]; then
				rm ${COMPFILE} && continue
			fi

			_diff=$(diff -q ${TARGET} ${COMPFILE} 2>&1)
			# files are the same: delete
			[[ $? -eq 0 ]] && rm ${COMPFILE} && continue
			# disable sdiff for binaries
			echo "${_diff}" | head -1 | grep -q "Binary files" && \
				IS_BIN=true
		else
			# missing files = binaries (to avoid comparison)
			IS_BIN=true
		fi

		sm_diff_loop
	done
}

sm_install() {
	local _dmode _fgrp _fmode _fown
	local _instdir=${TARGET%/*}
	[[ -z ${_instdir} ]] && _instdir="/"

	_dmode=$(stat -f "%OMp%OLp" .${_instdir}) || return
	eval $(stat -f "_fmode=%OMp%OLp _fown=%Su _fgrp=%Sg" ${COMPFILE}) || return

	if [[ ! -d ${_instdir} ]]; then
		install -d -o root -g wheel -m ${_dmode} "${_instdir}" || return
	fi

	if ${IS_LINK}; then
		_linkt=$(readlink ${COMPFILE})
		(cd ${_instdir} && ln -sf ${_linkt} . && rm ${_TMPROOT}/${COMPFILE})
		return
	fi

	if [[ -f ${TARGET} ]]; then
		if typeset -f sm_rotate_bak >/dev/null; then
			sm_rotate_bak || return
		fi
		mkdir -p ${_BKPDIR}/${_instdir} || return
		cp -p ${TARGET} ${_BKPDIR}/${_instdir} || return
	fi

	if ! install -m ${_fmode} -o ${_fown} -g ${_fgrp} ${COMPFILE} ${_instdir}; then
		rm ${_BKPDIR}/${COMPFILE} && return 1
	fi
	rm ${COMPFILE}

	case ${TARGET} in
	/etc/login.conf)
		if [[ -f /etc/login.conf.db ]]; then
			echo " (running cap_mkdb(1), needs a relog)"
			sm_warn $(cap_mkdb /etc/login.conf 2>&1)
		else
			echo
		fi
		;;
	/etc/mail/aliases)
		if [[ -f /etc/mail/aliases.db ]]; then
			echo " (running newaliases(8))"
			sm_warn $(newaliases 2>&1 >/dev/null)
		else
			echo
		fi
		;;
	*)
		echo
		;;
	esac
}

sm_add_user_grp() {
	local _g _p _gid _u _rest
	local _gr=./etc/group
	local _pw=./etc/master.passwd

	${PKGMODE} && return

	while IFS=: read -r -- _g _p _gid _rest; do
		if ! grep -Eq "^${_g}:" /etc/group; then
			getent group ${_gid} >/dev/null && \
				sm_warn "Not adding group ${_g}, GID ${_gid} already exists" && \
				continue
			echo "===> Adding the ${_g} group"
			groupadd -g ${_gid} ${_g}
		fi
	done <${_gr}

	while IFS=: read -r -- _u _p _uid _rest; do
		if [[ ${_u} != root ]]; then
			if ! grep -Eq "^${_u}:" /etc/master.passwd; then
				getent passwd ${_uid} >/dev/null && \
					sm_warn "Not adding user ${_u}, UID ${_uid} already exists" && \
					continue
				echo "===> Adding the ${_u} user"
				chpass -a "${_u}:${_p}:${_uid}:${_rest}"
			fi
		fi
	done <${_pw}
}

sm_warn_valid() {
	# done as a separate function to print a warning with the
	# filename above output from the check command
	local _res

	_res=$(eval $* 2>&1)
	if [[ $? -ne 0 || -n ${_res} ]]; then
	       sm_warn "${_file} appears to be invalid"
	       echo "${_res}"
	fi
}

sm_check_validity() {
	local _file=$1.merged
	local _fail

	case $1 in
	./etc/ssh/sshd_config)
		sm_warn_valid sshd -f ${_file} -t ;;
	./etc/pf.conf)
		sm_warn_valid pfctl -nf ${_file} ;;
	./etc/login.conf)
		sm_warn_valid "cap_mkdb -f ${_TMPROOT}/login.conf.check ${_file} || true"
		rm -f ${_TMPROOT}/login.conf.check.db ;;
	esac
}

sm_merge_loop() {
	local _instmerged _tomerge
	echo "===> Type h at the sdiff prompt (%) to get usage help\n"
	_tomerge=true
	while ${_tomerge}; do
		cp -p ${COMPFILE} ${COMPFILE}.merged
		sdiff -as -w $(tput -T ${TERM:=vt100} cols) -o ${COMPFILE}.merged \
			${TARGET} ${COMPFILE}
		_instmerged=v
		while [[ ${_instmerged} == v ]]; do
			echo
			echo "  Use 'e' to edit the merged file"
			echo "  Use 'i' to install the merged file"
			echo "  Use 'n' to view a diff between the merged and new files"
			echo "  Use 'o' to view a diff between the old and merged files"
			echo "  Use 'r' to re-do the merge"
			echo "  Use 'v' to view the merged file"
			echo "  Use 'x' to delete the merged file and go back to previous menu"
			echo "  Default is to leave the temporary file to deal with by hand"
			echo
			sm_check_validity ${COMPFILE}
			echo -n "===> How should I deal with the merged file? [Leave it for later] "
			read _instmerged
			case ${_instmerged} in
			[eE])
				echo "editing merged file...\n"
				${EDITOR} ${COMPFILE}.merged
				_instmerged=v
				;;
			[iI])
				mv ${COMPFILE}.merged ${COMPFILE}
				echo -n "\n===> Merging ${TARGET}"
				sm_install || \
					(echo && sm_warn "problem merging ${TARGET}")
				_tomerge=false
				;;
			[nN])
				(
					echo "comparison between merged and new files:\n"
					diff -u ${COMPFILE}.merged ${COMPFILE}
				) | ${PAGER}
				_instmerged=v
				;;
			[oO])
				(
					echo "comparison between old and merged files:\n"
					diff -u ${TARGET} ${COMPFILE}.merged
				) | ${PAGER}
				_instmerged=v
				;;
			[rR])
				rm ${COMPFILE}.merged
				;;
			[vV])
				${PAGER} ${COMPFILE}.merged
				;;
			[xX])
				rm ${COMPFILE}.merged
				return 1
				;;
			'')
				_tomerge=false
				;;
			*)
				echo "invalid choice: ${_instmerged}"
				_instmerged=v
				;;
			esac
		done
	done
}

sm_diff_loop() {
	local i _handle _nonexistent

	${BATCHMODE} && _handle=todo || _handle=v

	FORCE_UPG=false
	_nonexistent=false
	while [[ ${_handle} == @@(v|todo) ]]; do
		if [[ -f ${TARGET} && -f ${COMPFILE} ]] && ! ${IS_LINK}; then
			if ! ${DIFFMODE}; then
				# automatically install files if current != new
				# and current = old
				for i in ${AUTO_UPG[@@]}; do \
					[[ ${i} == ${COMPFILE} ]] && FORCE_UPG=true
				done
				# automatically install files which differ
				# only by CVS Id or that are binaries
				if [[ -z $(diff -q -I'[$]OpenBSD:.*$' ${TARGET} ${COMPFILE}) ]] || \
					${FORCE_UPG} || ${IS_BIN}; then
					echo -n "===> Updating ${TARGET}"
					sm_install || \
						(echo && sm_warn "problem updating ${TARGET}")
					return
				fi
			fi
			if [[ ${_handle} == v ]]; then
				(
					echo "\n========================================================================\n"
					echo "===> Displaying differences between ${COMPFILE} and installed version:"
					echo
					diff -u ${TARGET} ${COMPFILE}
				) | ${PAGER}
				echo
			fi
		else
			# file does not exist on the target system
			if ${DIFFMODE}; then
				_nonexistent=true
				${BATCHMODE} || echo "\n===> Missing ${TARGET}\n"
			elif ${IS_LINK}; then
				echo "===> Linking ${TARGET}"
				sm_install || \
					sm_warn "problem creating ${TARGET} link"
				return
			else
				echo -n "===> Installing ${TARGET}"
				sm_install || \
					(echo && sm_warn "problem installing ${TARGET}")
				return
			fi
		fi

		if ! ${BATCHMODE}; then
			echo "  Use 'd' to delete the temporary ${COMPFILE}"
			echo "  Use 'i' to install the temporary ${COMPFILE}"
			if ! ${_nonexistent} && ! ${IS_BIN} && \
				! ${IS_LINK}; then
				echo "  Use 'm' to merge the temporary and installed versions"
				echo "  Use 'v' to view the diff results again"
			fi
			echo
			echo "  Default is to leave the temporary file to deal with by hand"
			echo
			echo -n "How should I deal with this? [Leave it for later] "
			read _handle
		else
			unset _handle
		fi

		case ${_handle} in
		[dD])
			rm ${COMPFILE}
			echo "\n===> Deleting ${COMPFILE}"
			;;
		[iI])
			echo
			if ${IS_LINK}; then
				echo "===> Linking ${TARGET}"
				sm_install || \
					sm_warn "problem creating ${TARGET} link"
			else
				echo -n "===> Updating ${TARGET}"
				sm_install || \
					(echo && sm_warn "problem updating ${TARGET}")
			fi
			;;
		[mM])
			if ! ${_nonexistent} && ! ${IS_BIN} && ! ${IS_LINK}; then
				sm_merge_loop || _handle=todo
			else
				echo "invalid choice: ${_handle}\n"
				_handle=todo
			fi
			;;
		[vV])
			if ! ${_nonexistent} && ! ${IS_BIN} && ! ${IS_LINK}; then
				_handle=v
			else
				echo "invalid choice: ${_handle}\n"
				_handle=todo
			fi
			;;
		'')
			echo -n
			;;
		*)
			echo "invalid choice: ${_handle}\n"
			_handle=todo
			continue
			;;
		esac
	done
}

sm_post() {
	local _f

	cd ${_TMPROOT} && \
		find . -type d -depth -empty -exec rmdir -p '{}' + 2>/dev/null
	rmdir ${_TMPROOT} 2>/dev/null

	if [[ -d ${_TMPROOT} ]]; then
		for _f in $(find ${_TMPROOT} ! -type d ! -name \*.merged -size +0)
		do
			sm_info "${_f##*${_TMPROOT}} unhandled, re-run ${0##*/} to merge the new version"
			! ${DIFFMODE} && [[ -f ${_f} ]] && \
				sed -i "/$(sha256 -q ${_f})/d" /var/sysmerge/*sum
		done
	fi

	mtree -qdef /etc/mtree/4.4BSD.dist -p / -U >/dev/null
	[[ -f /var/sysmerge/xetc.tgz ]] && \
		mtree -qdef /etc/mtree/BSD.x11.dist -p / -U >/dev/null
}

BATCHMODE=false
DIFFMODE=false
PKGMODE=false

while getopts bdp arg; do
	case ${arg} in
	b)	BATCHMODE=true;;
	d)	DIFFMODE=true;;
	p)	PKGMODE=true;;
	*)	usage;;
	esac
done
shift $(( OPTIND -1 ))
[[ $# -ne 0 ]] && usage

[[ $(id -u) -ne 0 ]] && echo "${0##*/}: need root privileges" && exit 1

# global constants
_BKPDIR=/var/sysmerge/backups
_RELINT=$(uname -r | tr -d '.') || exit 1
_TMPROOT=$(mktemp -d -p /tmp sysmerge.XXXXXXXXXX) || exit 1
readonly _BKPDIR _RELINT _TMPROOT

[[ -z ${VISUAL} ]] && EDITOR=${EDITOR:=/usr/bin/vi} || EDITOR=${VISUAL}
PAGER=${PAGER:=/usr/bin/more}

mkdir -p ${_TMPROOT} || sm_error "cannot create ${_TMPROOT}"
cd ${_TMPROOT} || sm_error "cannot enter ${_TMPROOT}"

sm_run && sm_post
@


1.229
log
@Instead of checking if /etc/X11 is around to know whether the xbase set
is installed, check if /var/sysmerge/xetc.tgz exists.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.228 2016/09/22 13:08:20 ajacoutot Exp $
d624 1
a624 1
[[ $(id -u) -ne 0 ]] && echo "${0##*/}: need root privileges" && usage
@


1.228
log
@Make sure we don't have conflicting UIDs/GIDs when adding user/group.

reported by florian@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.227 2016/07/30 06:31:17 ajacoutot Exp $
d605 1
a605 1
	[[ -d /etc/X11 ]] && \
@


1.227
log
@Remove compat code.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.226 2016/05/14 16:14:40 ajacoutot Exp $
d346 1
a346 1
	local _g _p _gid _l _u _rest
d354 3
d362 1
a362 2
	while read _l; do
		_u=${_l%%:*}
d365 3
d369 1
a369 1
				chpass -a "${_l}"
@


1.226
log
@Be gone /var/sysmerge/examplessum.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.225 2016/05/14 14:44:35 ajacoutot Exp $
a181 5
	# XXX remove after OPENBSD_6_0
	if [[ -d /usr/share/sysmerge && -d /var/sysmerge ]]; then
		cp -fp /usr/share/sysmerge/*sum /var/sysmerge/ 2>/dev/null
		rm -rf /usr/share/sysmerge
	fi
@


1.225
log
@Remove handling of /etc/examples/ files by sysmerge(8). Getting regular messages
about pkg.conf isn't really that helpful and if a big syntax change comes along
well we have current.html.

it was disabled during p2k16 and no one complained so far
discussed with and ok deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.224 2016/04/29 12:32:45 sthen Exp $
d187 2
@


1.224
log
@In sysmerge interactive mode, check syntax of several important files after
merging (currently sshd_config, login.conf, pf.conf) to give some protection
against bad merges.  feedback/ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.223 2016/04/28 16:42:29 ajacoutot Exp $
d249 1
a249 2
		      /var/mail/root
		      /var/sysmerge/examplessum"
d258 2
a259 4
	# aliases(5) needs to be handled last in case mailer.conf(5) changes;
	# examples are checked later, we don't want to handle examplessum
	_c1=$(find . -type f -or -type l | \
		grep -vE '^./(etc/mail/aliases|var/sysmerge/examplessum)$')
a291 2

#	sm_check_an_eg
a583 19
}

sm_check_an_eg() {
	${PKGMODE} && return
	local _egmods _i _managed

	if [[ -f /var/sysmerge/examplessum ]]; then
		_egmods=$(cd / && \
			 sha256 -c /var/sysmerge/examplessum 2>/dev/null | \
			 sed -n 's/^(SHA256) \(.*\): FAILED$/\1/p')
	fi
	for _i in ${_egmods}; do
		_i=${_i##*/}
		# only check files we care about
		[[ -f /etc/${_i} ]] && \
			sm_info "Updated /etc/examples/${_i}, syntax may have changed"
	done
	mv ./var/sysmerge/examplessum \
		/var/sysmerge/examplessum
@


1.223
log
@Comment sm_check_an_eg().
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.222 2016/04/26 11:19:35 ajacoutot Exp $
d378 27
d425 1
@


1.222
log
@Tweak output a bit; to be improved probably (sthen@@ and I can't think of a
better wording for now).
Also be consistent in batch and interactive mode: make sure we can just re-run
sysmerge if we leave a file for later; this prevents having to save the tmpdir
to find which files needs to be handled (aka we are self-contained).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.221 2016/02/02 07:02:32 ajacoutot Exp $
d249 2
a250 1
		      /var/mail/root"
d296 1
a296 1
	sm_check_an_eg
@


1.221
log
@Uppecase.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.220 2016/01/14 19:58:32 ajacoutot Exp $
d591 2
a592 2
			sm_info "${_f} left for comparison"
			${BATCHMODE} && [[ -f ${_f} ]] && \
@


1.220
log
@No more /etc/mail/aliases.db.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.219 2015/12/23 10:01:58 ajacoutot Exp $
d575 1
a575 1
			sm_info "updated /etc/examples/${_i}, syntax may have changed"
@


1.219
log
@Tidy up output.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.218 2015/12/21 10:54:49 ajacoutot Exp $
a242 1
		      /etc/mail/aliases.db
@


1.218
log
@Only run newaliases(8) if we already have an aliases db.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.217 2015/11/28 02:42:22 deraadt Exp $
d40 1
a40 1
	(($#)) && echo "---- Error: $@@"
d53 1
a53 1
	(($#)) && echo "---- Info: $@@" || true
d57 1
a57 1
	(($#)) && echo "---- Warning: $@@" || true
@


1.217
log
@chflags -l flag went away.  Noticed this myself 15 minutes
before Chris Hettrick did.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.216 2015/10/18 04:45:21 ajacoutot Exp $
d340 6
a345 2
		echo " (running newaliases(8))"
		sm_warn $(newaliases 2>&1 >/dev/null)
@


1.216
log
@Make sure sm_rotate_bak() is only run once.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.215 2015/10/16 19:55:39 ajacoutot Exp $
d368 1
a368 1
				chpass -la "${_l}"
@


1.215
log
@Drop usage of TMPDIR.
While here, stop refering to /tmp/sysmerge.XXXXXXXXXX, that's a script
internal we don't need to know about.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.214 2015/10/13 18:52:56 ajacoutot Exp $
d84 2
a85 1
	install -d ${_BKPDIR} || return
d318 3
a320 1
		sm_rotate_bak || return
@


1.214
log
@sm_error() already does the exit for us.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.213 2015/10/12 18:25:16 ajacoutot Exp $
d616 1
a616 1
_TMPROOT=$(mktemp -d -p ${TMPDIR:=/tmp} sysmerge.XXXXXXXXXX) || exit 1
@


1.213
log
@Reverse the sm_error call in sm_trap.

pointed out by semarie@@... I need some sleep :/
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.212 2015/10/12 18:13:59 ajacoutot Exp $
d50 1
a50 1
trap "sm_trap; exit 1" 1 2 3 13 15
@


1.212
log
@Only remove existing sum files on trap handlers.

req. by semarie@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.211 2015/09/18 18:03:47 ajacoutot Exp $
d46 1
a47 1
	rm -f /var/sysmerge/{etc,pkg,xetc}sum
@


1.211
log
@In case of a hard error, remove all checksums except for examplessum which
is special. Otherwise, we may miss comparing files at next run; we may miss
some automation on the next run but it's safer this way.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.210 2015/09/18 17:03:44 ajacoutot Exp $
a40 1
	rm -f /var/sysmerge/{etc,pkg,xetc}sum
d45 6
a50 1
trap "sm_error; exit 1" 1 2 3 13 15
@


1.210
log
@Simplify: we don't need a work directory anymore, temproot is enough.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.209 2015/09/18 16:00:19 ajacoutot Exp $
d41 1
@


1.209
log
@Tweak warning/error output a bit.
Check for examples changes at the end.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.208 2015/09/18 10:55:26 ajacoutot Exp $
d41 1
a41 1
	rm -rf ${_WRKDIR}
d573 1
a573 1
	cd ${_WRKDIR} && \
d575 1
a575 1
	rmdir ${_WRKDIR} 2>/dev/null
a577 1
		sm_info "file(s) left for comparison:"
d580 2
a581 1
			echo "${_f}" && ${BATCHMODE} && [[ -f ${_f} ]] && \
d611 2
a612 3
_WRKDIR=$(mktemp -d -p ${TMPDIR:=/tmp} sysmerge.XXXXXXXXXX) || exit 1
_TMPROOT=${_WRKDIR}/temproot
readonly _BKPDIR _RELINT _TMPROOT _WRKDIR
@


1.208
log
@More dead code.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.207 2015/09/09 09:44:31 ajacoutot Exp $
d40 1
a40 1
	(($#)) && echo "!!!! ERROR: $@@"
d47 4
d52 1
a52 1
	(($#)) && echo "**** WARNING: $@@" || true
d172 1
a172 1
sm_init() {
a183 1
	sm_check_an_eg
d253 5
a257 3
	# aliases(5) needs to be handled last in case mailer.conf(5) changes
	_c1=$(find . -type f -or -type l | grep -vE '^./etc/mail/aliases$')
	_c2=$(find . -type f -name aliases)
d289 2
d564 1
a564 1
			_managed="${_managed:+${_managed} }${_i}"
a565 1
	[[ -n ${_managed} ]] && sm_warn "example(s) changed for: ${_managed}"
d578 1
a578 1
		sm_warn "file(s) left for comparison:"
d621 1
a621 1
sm_init && sm_post
@


1.207
log
@Remove more dead code.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.206 2015/09/09 08:10:33 ajacoutot Exp $
d335 1
a335 1
	local _g _p _gid _l _u _rest _newgrp _newusr
d344 1
a344 2
			groupadd -g ${_gid} ${_g} && \
				set -A _newgrp -- ${_newgrp[@@]} ${_g}
d353 1
a353 2
				chpass -la "${_l}" && \
					set -A _newusr -- ${_newusr[@@]} ${_u}
a542 1

@


1.206
log
@Remove unused code.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.205 2015/09/09 08:04:22 ajacoutot Exp $
d510 1
a510 2
				sm_install && \
					MERGED_FILES="${MERGED_FILES}${TARGET}\n" || \
d514 1
a514 2
				sm_install && \
					MERGED_FILES="${MERGED_FILES}${TARGET}\n" || \
d520 1
a520 3
				sm_merge_loop && \
					MERGED_FILES="${MERGED_FILES}${TARGET}\n" || \
						_handle=todo
@


1.205
log
@Move and tweak a comment.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.204 2015/09/07 10:02:04 ajacoutot Exp $
d433 1
a433 1
	local i _handle _nonexistent _autoinst
d452 1
a452 2
					sm_install && \
						_autoinst="${_autoinst}${TARGET}\n" || \
d473 1
a473 2
				sm_install && \
					_autoinst="${_autoinst}${TARGET}\n" || \
d478 1
a478 2
				sm_install && \
					_autoinst="${_autoinst}${TARGET}\n" || \
@


1.204
log
@Simplify handling of sum files.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.203 2015/09/07 09:34:56 ajacoutot Exp $
d565 1
a568 1
	# only warn for files we care about
@


1.203
log
@No need to restore backup of sum files; once the new ones are installed,
it means we already processed all relevant files.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.202 2015/08/24 12:16:36 ajacoutot Exp $
a239 3
		      /var/sysmerge/etcsum
		      /var/sysmerge/examplessum
		      /var/sysmerge/xetcsum
d242 2
a243 5
	# XXX remove after OPENBSD_6_0
	_ignorefiles="${_ignorefiles}
		      /usr/share/sysmerge/etcsum
		      /usr/share/sysmerge/examplessum
		      /usr/share/sysmerge/xetcsum"
@


1.202
log
@cp -> mv
Put /usr/share/sysmerge under XXX.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.201 2015/08/24 11:03:41 ajacoutot Exp $
a40 11

	# restore sum files from backups or remove the newly created ones
	for _i in ${_WRKDIR}/{etcsum,xetcsum,examplessum,pkgsum}; do
		_j=$(basename ${_i})
		if [[ -f ${_i} ]]; then
			mv ${_i} /var/sysmerge/${_j}
		elif [[ -f /var/sysmerge/${_j} ]]; then
			rm /var/sysmerge/${_j}
		fi
	done

a59 3
		[[ -f /var/sysmerge/${_set}sum ]] && \
			cp /var/sysmerge/${_set}sum \
			${_WRKDIR}/${_set}sum
a131 3
	[[ -f /var/sysmerge/pkgsum ]] && \
		cp /var/sysmerge/pkgsum ${_WRKDIR}/pkgsum

a564 1
		cp /var/sysmerge/examplessum ${_WRKDIR}/examplessum
@


1.201
log
@Make backup directory of replaced files persistent: /var/sysmerge/backups.
3 rotations so that we have history of modified files.
In batch mode, when a file cannot be handled automatically, remove it from
the checksum file so that the next interactive sysmerge(8) run will ask
to merge the changes.

ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.200 2015/08/24 10:42:08 ajacoutot Exp $
a189 1
	# and remove /usr/share/sysmerge/* from _ignorefiles in sm_init()
d191 1
a191 1
		mv -f /usr/share/sysmerge/*sum /var/sysmerge/ 2>/dev/null
a256 3
		      /usr/share/sysmerge/etcsum
		      /usr/share/sysmerge/examplessum
		      /usr/share/sysmerge/xetcsum
d262 5
@


1.200
log
@/usr/share/sysmerge -> /var/sysmerge

requested by several
discussed with deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.199 2015/08/19 09:28:48 ajacoutot Exp $
d52 1
a52 3
	# do not empty _WRKDIR, it may still contain our backup files
	rm -rf ${_TMPROOT}
	rmdir ${_WRKDIR} 2>/dev/null
d80 12
d191 2
a192 2
	if [[ -d /usr/share/sysmerge && -d /var/sysmerge/ ]]; then
		mv -f /usr/share/sysmerge/*sum /var/sysmerge/
d327 1
a490 11
			if ${IS_LINK}; then
				if ${DIFFMODE}; then
					echo && _nonexistent=true
				else
					echo "===> Linking ${TARGET}"
					sm_install && \
						_autoinst="${_autoinst}${TARGET}\n" || \
						sm_warn "problem creating ${TARGET} link"
					return
				fi
			fi
d492 8
a499 1
				echo && _nonexistent=true
d598 2
d604 8
a611 7
	[[ -d ${_BKPDIR} ]] && \
		echo "===> Backup file(s):" && \
		find ${_BKPDIR} -type f -size +0

	[[ -d ${_TMPROOT} ]] && \
		sm_warn "file(s) left for comparison:" && \
		find ${_TMPROOT} -type f ! -name \*.merged -size +0
d636 2
a638 1
_BKPDIR=${_WRKDIR}/backups
d640 1
a640 2
_RELINT=$(uname -r | tr -d '.') || exit 1
readonly _WRKDIR _BKPDIR _TMPROOT _RELINT
@


1.199
log
@Remove XXX.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.198 2015/08/13 07:06:41 ajacoutot Exp $
d46 3
a48 3
			mv ${_i} /usr/share/sysmerge/${_j}
		elif [[ -f /usr/share/sysmerge/${_j} ]]; then
			rm /usr/share/sysmerge/${_j}
d68 3
a70 2
	[[ -f /usr/share/sysmerge/etc.tgz ]] && _e=etc
	[[ -f /usr/share/sysmerge/xetc.tgz ]] && _x=xetc
d73 2
a74 2
		[[ -f /usr/share/sysmerge/${_set}sum ]] && \
			cp /usr/share/sysmerge/${_set}sum \
d77 1
a77 1
			/usr/share/sysmerge/${_set}.tgz || \
d136 2
a137 2
	[[ -f /usr/share/sysmerge/pkgsum ]] && \
		cp /usr/share/sysmerge/pkgsum ${_WRKDIR}/pkgsum
d169 1
a169 1
			>./usr/share/sysmerge/pkgsum || _ret=1
d179 7
d192 2
a193 2
		if [[ -f /usr/share/sysmerge/${_i} && \
			-f ./usr/share/sysmerge/${_i} ]] && \
d196 1
a196 1
			_matchsum=$(sha256 -c /usr/share/sysmerge/${_i} 2>/dev/null | \
d202 1
a202 1
				[[ ${_j} == ./usr/share/sysmerge/${_i} ]] && continue
d208 1
a208 1
			_mismatch=$(diff -u ./usr/share/sysmerge/${_i} /usr/share/sysmerge/${_i} | \
d212 1
a212 1
				[[ ${_k} == ./usr/share/sysmerge/${_i} ]] && continue
d229 2
a230 2
				grep -q "${_cursum}" /usr/share/sysmerge/${_i} && \
					! grep -q "${_cursum}" ./usr/share/sysmerge/${_i} && \
d235 2
a236 2
		[[ -f ./usr/share/sysmerge/${_i} ]] && \
			mv ./usr/share/sysmerge/${_i} /usr/share/sysmerge/${_i}
d251 3
d573 2
a574 2
	if [[ -f /usr/share/sysmerge/examplessum ]]; then
		cp /usr/share/sysmerge/examplessum ${_WRKDIR}/examplessum
d576 1
a576 1
			 sha256 -c /usr/share/sysmerge/examplessum 2>/dev/null | \
d586 2
a587 2
	mv ./usr/share/sysmerge/examplessum \
		/usr/share/sysmerge/examplessum
@


1.198
log
@Sync stripcom() with /etc/rc.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.197 2015/07/18 20:27:37 ajacoutot Exp $
a579 2
	# XXX drop -f after OPENBSD_5_7
	rm -f ${_WRKDIR}/*sum
@


1.197
log
@Add groups before users.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.196 2015/06/02 17:29:28 jung Exp $
d27 1
a27 1
# OpenBSD /etc/rc v1.438
d29 1
a29 2
	local _file=$1
	local _line
d31 6
a36 7
	{
		while read _line ; do
			_line=${_line%%#*}		# strip comments
			test -z "$_line" && continue
			echo $_line
		done
	} < $_file
@


1.196
log
@fix variable name typo

ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.195 2015/03/12 12:46:01 ajacoutot Exp $
d338 1
a339 1
	local _gr=./etc/group
d343 8
a360 8

	while IFS=: read -r -- _g _p _gid _rest; do
		if ! grep -Eq "^${_g}:" /etc/group; then
			echo "===> Adding the ${_g} group"
			groupadd -g ${_gid} ${_g} && \
				set -A _newgrp -- ${_newgrp[@@]} ${_g}
		fi
	done <${_gr}
@


1.195
log
@Set TERM if unset. Fixes some remote sysmerge usage by sthen@@

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.194 2015/02/17 15:43:34 sthen Exp $
d178 1
a178 1
	local _ignorefile _cvsid1 _cvsid2 _matchsum _mismatch
@


1.194
log
@Instead of a relatively complex "stty size | ( read ..." in sysmerge, use
"tput cols". (This from ajacoutot@@).

Use it directly in the sdiff command, rather than saving it once at startup.
Handling window size changes at runtime makes sysmerge significantly easier
to use in common cases. Adds around .17s per sdiff invocation on my slowest
machine (486), imperceptible on a faster machine, so it seems a reasonable
trade-off.

ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.193 2014/11/26 15:52:30 ajacoutot Exp $
d369 1
a369 1
		sdiff -as -w $(tput cols) -o ${COMPFILE}.merged \
@


1.193
log
@Drop sysmerge.log ; it used to be handy for batch mode but now the
console output is clear and clean in that mode.

Since /var/tmp is now a symlink to /tmp:
- directly use /tmp
- if modifications were done; at the end of the run:
  - display our backup directory (in case we want to move it to survive a reboot)
  - display where and what files are still left for comparison

discussed with and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.192 2014/10/09 14:33:51 ajacoutot Exp $
d369 1
a369 1
		sdiff -as -w ${_STTYSIZE} -o ${COMPFILE}.merged \
d623 1
a623 2
_STTYSIZE=$(stty size | ( read r c; ((c==0)) && c=80; echo $c )) || exit 1
readonly _WRKDIR _BKPDIR _TMPROOT _RELINT _STTYSIZE
@


1.192
log
@Tweak, no functional change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.191 2014/10/09 14:23:58 ajacoutot Exp $
a40 4
sm_echo() {
	echo "$@@" | tee -a ${_WRKDIR}/sysmerge.log
}

d42 1
a42 1
	(($#)) && sm_echo "!!!! ERROR: $@@"
d63 1
a63 1
	(($#)) && sm_echo "**** WARNING: $@@" || true
d189 1
a189 1
			# redirect stderr; file may not exist
d221 1
a221 1
				# redirect stderr; file may not exist
d320 1
a320 1
			sm_echo " (running cap_mkdb(1), needs a relog)"
d323 1
a323 1
			sm_echo
d327 1
a327 1
		sm_echo " (running newaliases(8))"
d331 1
a331 1
		sm_echo
d347 1
a347 1
				sm_echo "===> Adding the ${_u} user"
d356 1
a356 1
			sm_echo "===> Adding the ${_g} group"
d393 1
a393 1
				sm_echo -n "\n===> Merging ${TARGET}"
a422 1
				sm_echo "===> ${COMPFILE} will remain for your consideration"
d453 1
a453 1
					sm_echo -n "===> Updating ${TARGET}"
d473 1
a473 1
					sm_echo && _nonexistent=true
d475 1
a475 1
					sm_echo "===> Linking ${TARGET}"
d483 1
a483 1
				sm_echo && _nonexistent=true
d485 1
a485 1
				sm_echo -n "===> Installing ${TARGET}"
d516 1
a516 1
			sm_echo
d518 1
a518 1
				sm_echo "===> Linking ${TARGET}"
d523 1
a523 1
				sm_echo -n "===> Updating ${TARGET}"
d548 1
a548 1
			sm_echo "===> ${COMPFILE} will remain for your consideration"
d582 5
a586 1
	local _i _files_in_tmproot _files_in_bkpdir
a587 1
	_files_in_tmproot=$(find . -type f ! -name \*.merged -size +0)
d589 2
a590 1
		_files_in_bkpdir=$(find ${_BKPDIR} -type f -size +0)
d592 3
a594 2
	[[ -n ${_files_in_tmproot} ]] && \
		sm_warn "some files are still left for comparison"
a598 12

	if [[ -e ${_WRKDIR}/sysmerge.log ]]; then
		# XXX drop -f after OPENBSD_5_7
		rm -f ${_WRKDIR}/*sum
		sed '/^$/d' ${_WRKDIR}/sysmerge.log >${_WRKDIR}/sysmerge.log.bak
		mv ${_WRKDIR}/sysmerge.log.bak ${_WRKDIR}/sysmerge.log
		cd ${_WRKDIR} && \
			find . -type d -depth -empty -exec rmdir -p '{}' + 2>/dev/null
		echo "===> Log available at ${_WRKDIR}/sysmerge.log"
	else
		rm -rf ${_WRKDIR}
	fi
d619 1
a619 1
_WRKDIR=$(mktemp -d -p ${TMPDIR:=/var/tmp} sysmerge.XXXXXXXXXX) || exit 1
d632 1
a632 2
sm_init
sm_post
@


1.191
log
@Make sure _instdir is not null.

issue reported by jsg@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.190 2014/09/16 21:56:42 rpe Exp $
d294 2
a295 2
	local _dmode _fgrp _fmode _fown _instdir
	_instdir=${TARGET%/*}
d298 1
a298 1
	_dmode=$(stat -f "%OMp%OLp" ./${_instdir}) || return
@


1.190
log
@zap unnecessary quotes

OK ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.189 2014/09/13 12:00:52 ajacoutot Exp $
d296 1
@


1.189
log
@In PKG mode, cope with non-default PREFIX (e.g. /var/www/...).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.188 2014/09/09 08:53:51 ajacoutot Exp $
d29 1
a29 1
	local _file="$1"
d320 1
a320 1
	case "${TARGET}" in
d341 2
a342 2
	local _pw="./etc/master.passwd"
	local _gr="./etc/group"
d348 1
a348 1
		if [[ ${_u} != "root" ]]; then
d375 1
a375 1
		while [[ ${_instmerged} == "v" ]]; do
d464 1
a464 1
			if [[ ${_handle} == "v" ]]; then
d537 1
a537 1
						_handle="todo"
d540 1
a540 1
				_handle="todo"
d545 1
a545 1
				_handle="v"
d548 1
a548 1
				_handle="todo"
d556 1
a556 1
			_handle="todo"
@


1.188
log
@'rm -f' in case we skip a release. No functional change, just cosmetic.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.187 2014/09/09 07:47:04 rpe Exp $
d160 1
a160 1
			if [[ ! -d ${_pkghier} ]]; then
d163 3
@


1.187
log
@Rreplace [[ -n $(grep..) ]] and [[ -z $(grep..) ]]
with grep -q and ! grep -q.

OK ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.186 2014/09/09 06:37:57 rpe Exp $
d597 2
a598 1
		rm ${_WRKDIR}/*sum
@


1.186
log
@Replace last usage of awk in sysmerge with a shell equivalent.

based on a diff from and OK ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.185 2014/09/08 16:47:58 ajacoutot Exp $
d224 2
a225 2
				[[ -n $(grep "${_cursum}" /usr/share/sysmerge/${_i}) && \
					-z $(grep "${_cursum}" ./usr/share/sysmerge/${_i}) ]] && \
d346 1
a346 1
			if [[ -z $(grep -E "^${_u}:" /etc/master.passwd) ]]; then
d355 1
a355 1
		if [[ -z $(grep -E "^${_g}:" /etc/group) ]]; then
@


1.185
log
@Put chpass(1) args between quotes.

spotted by matthieu@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.184 2014/09/08 11:27:49 halex Exp $
d369 1
a369 1
		sdiff -as -w ${_SWIDTH} -o ${COMPFILE}.merged \
d629 3
a631 3
_SWIDTH=$(stty size | awk '{w=$2} END {if (w==0) {w=80} print w}')
_RELINT=$(uname -r | tr -d '.')
readonly _WRKDIR _BKPDIR _TMPROOT _SWIDTH _RELINT
@


1.184
log
@strip excess verbiage from sed expressions

ok and prodding ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.183 2014/09/07 11:41:49 ajacoutot Exp $
d348 1
a348 1
				chpass -la ${_l} && \
@


1.183
log
@Remove last use of xargs(1).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.182 2014/09/07 09:46:32 ajacoutot Exp $
d192 1
a192 1
				sed -n '/OK$/s/^(SHA256) \(.*\): OK$/\1/p')
d569 1
a569 1
			 sed -n '/FAILED$/s/^(SHA256) \(.*\): FAILED$/\1/p')
@


1.182
log
@Only compare CVS Id when it's not empty.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.181 2014/09/07 09:21:42 ajacoutot Exp $
d170 2
a171 3
		find . -type f | sort | \
			xargs sha256 -h ./usr/share/sysmerge/pkgsum || \
			_ret=1
@


1.181
log
@Drop 2 uneeded xargs(1).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.180 2014/09/07 08:39:04 ajacoutot Exp $
d209 1
a209 1
				# compare CVS $Id's first so if the file hasn't been modified,
d218 2
a219 1
					[[ ${_cvsid2} == ${_cvsid1} ]] && \
@


1.180
log
@Consistency in var names.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.179 2014/09/07 08:15:42 ajacoutot Exp $
a596 2
		find . -type f -empty | xargs -r rm
		find . -type d | sort -r | xargs -r rmdir 2>/dev/null
d600 2
@


1.179
log
@Fix regression in detecting changed files.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.178 2014/09/07 07:46:26 ajacoutot Exp $
d258 1
a258 1
		IS_BINFILE=false
d280 1
a280 1
				IS_BINFILE=true
d283 1
a283 1
			IS_BINFILE=true
d337 1
a337 1
	local _g _p _gid _l _u _rest NEWGRP NEWUSR
d349 1
a349 1
					set -A NEWUSR -- ${NEWUSR[@@]} ${_u}
d358 1
a358 1
				set -A NEWGRP -- ${NEWGRP[@@]} ${_g}
d364 1
a364 1
	local INSTALL_MERGED MERGE_AGAIN
d366 2
a367 2
	MERGE_AGAIN=true
	while ${MERGE_AGAIN}; do
d371 2
a372 2
		INSTALL_MERGED=v
		while [[ ${INSTALL_MERGED} == "v" ]]; do
d384 2
a385 2
			read INSTALL_MERGED
			case ${INSTALL_MERGED} in
d389 1
a389 1
				INSTALL_MERGED=v
d396 1
a396 1
				MERGE_AGAIN=false
d403 1
a403 1
				INSTALL_MERGED=v
d410 1
a410 1
				INSTALL_MERGED=v
d424 1
a424 1
				MERGE_AGAIN=false
d427 2
a428 2
				echo "invalid choice: ${INSTALL_MERGED}"
				INSTALL_MERGED=v
d436 1
a436 1
	local i HANDLE_COMPFILE NO_INSTALLED AUTO_INSTALLED_FILES
d438 1
a438 1
	${BATCHMODE} && HANDLE_COMPFILE=todo || HANDLE_COMPFILE=v
d441 2
a442 2
	NO_INSTALLED=false
	while [[ ${HANDLE_COMPFILE} == @@(v|todo) ]]; do
d453 1
a453 1
					${FORCE_UPG} || ${IS_BINFILE}; then
d456 1
a456 1
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${TARGET}\n" || \
d461 1
a461 1
			if [[ ${HANDLE_COMPFILE} == "v" ]]; then
d474 1
a474 1
					sm_echo && NO_INSTALLED=true
d478 1
a478 1
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${TARGET}\n" || \
d484 1
a484 1
				sm_echo && NO_INSTALLED=true
d488 1
a488 1
					AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${TARGET}\n" || \
d497 1
a497 1
			if ! ${NO_INSTALLED} && ! ${IS_BINFILE} && \
d506 1
a506 1
			read HANDLE_COMPFILE
d508 1
a508 1
			unset HANDLE_COMPFILE
d511 1
a511 1
		case ${HANDLE_COMPFILE} in
d531 1
a531 1
			if ! ${NO_INSTALLED} && ! ${IS_BINFILE} && ! ${IS_LINK}; then
d534 1
a534 1
						HANDLE_COMPFILE="todo"
d536 2
a537 2
				echo "invalid choice: ${HANDLE_COMPFILE}\n"
				HANDLE_COMPFILE="todo"
d541 2
a542 2
			if ! ${NO_INSTALLED} && ! ${IS_BINFILE} && ! ${IS_LINK}; then
				HANDLE_COMPFILE="v"
d544 2
a545 2
				echo "invalid choice: ${HANDLE_COMPFILE}\n"
				HANDLE_COMPFILE="todo"
d552 2
a553 2
			echo "invalid choice: ${HANDLE_COMPFILE}\n"
			HANDLE_COMPFILE="todo"
d583 1
a583 1
	local _i FILES_IN__TMPROOT FILES_IN__BKPDIR
d585 1
a585 1
	FILES_IN__TMPROOT=$(find . -type f ! -name \*.merged -size +0)
d587 1
a587 1
		FILES_IN__BKPDIR=$(find ${_BKPDIR} -type f -size +0)
d589 1
a589 1
	[[ -n ${FILES_IN__TMPROOT} ]] && \
d621 1
a621 1
[ $# -ne 0 ] && usage
@


1.178
log
@Use shell substitution instead of dirname.
Fix installing pkg @@sample when the target directory is missing.
Fix output when a file fails to install.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.177 2014/09/07 06:40:01 ajacoutot Exp $
d275 1
a275 1
			_diff=$(diff -q ${TARGET} ${COMPFILE} 2>&1 | head -1)
d279 2
a280 1
			grep -q "Binary files" "${_diff}" && IS_BINFILE=true
@


1.177
log
@Simplify checks.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.176 2014/09/06 21:46:15 rpe Exp $
d159 1
a159 1
			_pkghier=$(dirname ${_sample[5]#${_TMPROOT}})
d161 1
a161 1
				sm_warn "skipping ${_sample[5]#${_TMPROOT}}: ${_pkghier} does not exist"
d164 2
a165 4
			if [[ -d $(dirname ${_sample[5]}) ]]; then
				install ${_install_args} \
					${_sample[4]} ${_sample[5]} || _ret=1
			fi
d179 1
a179 1
	local _auto_upg _c _c1 _c2 _cursum _i _k _j _cfdiff _cffiles
d291 1
a291 1
	_instdir=$(dirname ${TARGET})
d296 1
a296 1
	[[ -d ${_instdir} ]] && \
d298 1
d312 1
a312 1
		rm ${_BKPDIR}/${COMPFILE}; return 1
d394 1
a394 1
					sm_warn "problem merging ${TARGET}"
d456 1
a456 1
						sm_warn "problem updating ${TARGET}"
d488 1
a488 1
					sm_warn "problem installing ${TARGET}"
d526 1
a526 1
					sm_warn "problem updating ${TARGET}"
@


1.176
log
@Replace awk with either sed or shell equivalents.

OK ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.175 2014/09/06 20:47:44 rpe Exp $
d270 1
a270 5
		else
			# disable sdiff for binaries
			diff -q /dev/null ${COMPFILE} | grep -q Binary && \
				IS_BINFILE=true

d274 1
a274 6
				if [[ -f ${TARGET} ]]; then
					[[ -f ${COMPFILE} ]] && rm ${COMPFILE}
					continue
				else
					IS_BINFILE=true
				fi
d277 8
a284 3
			# make sure files are different; if not: delete
			diff -q ${TARGET} ${COMPFILE} >/dev/null && \
				rm ${COMPFILE} && continue
@


1.175
log
@Convert vars used as boolean (unset or 1) to true or false.

OK ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.174 2014/09/06 10:43:24 ajacoutot Exp $
d195 1
a195 2
				awk '/OK/ { print $2 }' | \
				sed 's/[:]//')
d341 1
a341 1
	local _g _gid _l _u NEWGRP NEWUSR
d348 1
a348 1
		_u=$(echo ${_l} | awk -F ':' '{ print $1 }')
d358 1
a358 3
	while read _l; do
		_g=$(echo ${_l} | awk -F ':' '{ print $1 }')
		_gid=$(echo ${_l} | awk -F ':' '{ print $3 }')
d573 1
a573 3
			 grep 'FAILED$' | \
			 awk '{ print $2 }' | \
			 sed -e "s,:,,")
@


1.174
log
@Remove backup checksums after a successfull run.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.173 2014/09/06 10:38:01 ajacoutot Exp $
d71 1
a71 1
	[[ -n ${PKGMODE} ]] && return
d138 1
a138 1
	[[ -z ${PKGMODE} ]] && return
d191 2
a192 2
			-f ./usr/share/sysmerge/${_i} && \
			-z ${DIFFMODE} ]]; then
d216 2
a217 2
				if [[ -z ${PKGMODE} && \
					${_k} != ./etc/@@(fbtab|ttys) && \
d261 2
a262 1
		unset IS_BINFILE IS_LINK
d267 1
a267 1
			IS_LINK=1
d274 1
a274 1
				IS_BINFILE=1
d283 1
a283 1
					IS_BINFILE=1
d306 1
a306 1
	if [[ -n ${IS_LINK} ]]; then
d346 1
a346 1
	[[ -n ${PKGMODE} ]] && return
d373 2
a374 2
	MERGE_AGAIN=1
	while [[ -n ${MERGE_AGAIN} ]]; do
d403 1
a403 1
				unset MERGE_AGAIN
d431 1
a431 1
				unset MERGE_AGAIN
d445 1
a445 1
	[[ -n ${BATCHMODE} ]] && HANDLE_COMPFILE=todo || HANDLE_COMPFILE=v
d447 2
a448 1
	unset NO_INSTALLED FORCE_UPG
d450 2
a451 2
		if [[ -f ${TARGET} && -f ${COMPFILE} && -z ${IS_LINK} ]]; then
			if [[ -z ${DIFFMODE} ]]; then
d455 1
a455 1
					[[ ${i} == ${COMPFILE} ]] && FORCE_UPG=1
d459 2
a460 2
				if [[ -z $(diff -q -I'[$]OpenBSD:.*$' ${TARGET} ${COMPFILE}) || \
					-n ${FORCE_UPG} || -n ${IS_BINFILE} ]]; then
d479 3
a481 3
			if [[ -n ${IS_LINK} ]]; then
				if [[ -n ${DIFFMODE} ]]; then
					sm_echo && NO_INSTALLED=1
d490 2
a491 2
			if [[ -n ${DIFFMODE} ]]; then
				sm_echo && NO_INSTALLED=1
d501 1
a501 1
		if [[ -z ${BATCHMODE} ]]; then
d504 2
a505 2
			if [[ -z ${NO_INSTALLED} && -z ${IS_BINFILE} && \
				-z ${IS_LINK} ]]; then
d525 1
a525 1
			if [[ -n ${IS_LINK} ]]; then
d538 1
a538 1
			if [[ -z ${NO_INSTALLED} && -z ${IS_BINFILE} && -z ${IS_LINK} ]]; then
d548 1
a548 1
			if [[ -z ${NO_INSTALLED} && -z ${IS_BINFILE} && -z ${IS_LINK} ]]; then
d569 1
a569 1
	[[ -n ${PKGMODE} ]] && return
d617 4
a620 1
unset BATCHMODE DIFFMODE PKGMODE
d623 3
a625 3
	b)	BATCHMODE=1;;
	d)	DIFFMODE=1;;
	p)	PKGMODE=1;;
@


1.173
log
@Files may have been removed in the previous step, so make sure they exist
before trying to remove them again.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.172 2014/09/05 17:26:08 ajacoutot Exp $
a211 2


a224 2


d606 1
@


1.172
log
@Drop support for SM_MERGE. The goal is to be a less interactive as possible
so there is no point in allowing graphical merge tools to be used; especially
since it is _completely_ untested...
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.171 2014/09/05 17:22:10 ajacoutot Exp $
d223 3
a225 1
					[[ ${_cvsid2} == ${_cvsid1} ]] && rm ${_k} && continue
@


1.171
log
@Sync _ignorefiles.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.170 2014/09/05 17:19:48 ajacoutot Exp $
d373 1
a373 2
	[[ ${SM_MERGE} == sdiff* ]] && \
		echo "===> Type h at the sdiff prompt (%) to get usage help\n"
d377 1
a377 1
		${SM_MERGE} ${COMPFILE}.merged \
a637 1
SM_MERGE=${SM_MERGE:=sdiff -as -w ${_SWIDTH} -o}
@


1.170
log
@Drop support for sendmail(8) -- hopefully it'll go away from base soon.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.169 2014/09/05 16:59:46 ajacoutot Exp $
d240 1
a240 2
	_ignorefiles="/etc/*.db
		      /etc/group
d244 1
d246 5
a250 1
		      /etc/motd
@


1.169
log
@Spring cleanup in preparation for more changes.
Lots of moving around.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.168 2014/09/05 08:28:12 ajacoutot Exp $
d243 1
a243 1
		      /etc/mail/*.db
a248 5
	_cffiles="/etc/mail/localhost.cf /etc/mail/sendmail.cf /etc/mail/submit.cf"
	for _i in ${_cffiles}; do
		_cfdiff=$(diff -q -I "##### " ./${_i} ${_i} 2>/dev/null)
		[[ -z ${_cfdiff} ]] && _ignorefiles="${_ignorefiles} ${_i}"
	done
d255 1
a255 1
	# aliases(5) needs to be handled last in case syntax changes
d315 1
a315 1
		rm ${_BKPDIR}/${COMPFILE%/*}/${COMPFILE##*/}; return 1
a326 4
		;;
	/etc/mail/@@(access|genericstable|mailertable|virtusertable))
		sm_echo " (running makemap(8))"
		sm_warn $(/usr/libexec/sendmail/makemap hash ${TARGET} 2>&1 <${TARGET})
@


1.168
log
@Tweaks, no functionnal change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.167 2014/09/05 07:16:38 ajacoutot Exp $
d81 1
a81 1
		cd ${_TMPROOT} && tar -xzphf \
d145 2
a146 2
	mtree -qdef /etc/mtree/4.4BSD.dist -p ${_TMPROOT} -U >/dev/null
	mtree -qdef /etc/mtree/BSD.x11.dist -p ${_TMPROOT} -U >/dev/null
d159 1
a159 1
			_pkghier=$(dirname ${_sample[5]})
d161 1
a161 1
				sm_warn "skipping ${_sample[5]#${_TMPROOT}}: ${_pkghier#${_TMPROOT}} does not exist"
d172 2
a173 2
		cd ${_TMPROOT} && find . -type f | sort | \
			xargs sha256 -h ${_TMPROOT}/usr/share/sysmerge/pkgsum || \
d177 1
a177 1
		sm_error "failed to populate packages @@samples and create checksum file"
d180 3
a182 5
sm_populate() {
	local _auto_upg _c _cursum _i _k _j _cfdiff _cffiles _ignorefiles _matchsum _mismatch

	mkdir -p ${_TMPROOT} || \
		sm_error "cannot create ${_TMPROOT}"
d191 6
a196 1
			 -f ${_TMPROOT}/usr/share/sysmerge/${_i} ]]; then
d199 1
a199 7
			if [[ -z ${DIFFMODE} ]]; then
				# redirect stderr; file may not exist
				_matchsum=$(cd ${_TMPROOT} && \
					sha256 -c /usr/share/sysmerge/${_i} 2>/dev/null | \
					awk '/OK/ { print $2 }' | \
					sed 's/[:]//')
				for _j in ${_matchsum}; do
d201 4
a204 5
					[[ ${_j} == ./usr/share/sysmerge/${_i} ]] && continue
					[[ -f ${_j#.} && -f ${_TMPROOT}/${_j#.} ]] && \
						rm -f ${_TMPROOT}/${_j#.}
				done
			fi
d207 1
a207 1
			_mismatch=$(diff -u ${_TMPROOT}/usr/share/sysmerge/${_i} /usr/share/sysmerge/${_i} | \
d212 15
d230 1
a230 1
					-z $(grep "${_cursum}" ${_TMPROOT}/usr/share/sysmerge/${_i}) ]] && \
d235 2
a236 2
		[[ -f ${_TMPROOT}/usr/share/sysmerge/${_i} ]] && \
			mv ${_TMPROOT}/usr/share/sysmerge/${_i} /usr/share/sysmerge/${_i}
d251 1
a251 1
		_cfdiff=$(diff -q -I "##### " ${_TMPROOT}/${_i} ${_i} 2>/dev/null)
d257 1
a257 1
		rm -f ${_TMPROOT}/${_i}
a258 1
}
d260 33
a292 5
sm_install_rm() {
	if [[ -f ${5}/${4##*/} ]]; then
		mkdir -p ${_BKPDIR}/${4%/*}
		cp ${5}/${4##*/} ${_BKPDIR}/${4%/*}
	fi
d294 2
a295 4
	if ! install -m ${1} -o ${2} -g ${3} ${4} ${5}; then
		rm -f ${_BKPDIR}/${4%/*}/${4##*/} && return 1
	fi
	rm ${4}
d299 2
a300 3
	local DIR_MODE FILE_MODE FILE_OWN FILE_GRP INSTDIR
	INSTDIR=${1#.}
	INSTDIR=${INSTDIR%/*}
d302 2
a303 1
	[[ -z ${INSTDIR} ]] && INSTDIR=/
d305 2
a306 2
	DIR_MODE=$(stat -f "%OMp%OLp" "${_TMPROOT}/${INSTDIR}")
	eval $(stat -f "FILE_MODE=%OMp%OLp FILE_OWN=%Su FILE_GRP=%Sg" ${1})
d308 10
a317 2
	[[ -n ${INSTDIR} && ! -d ${INSTDIR} ]] && \
		install -d -o root -g wheel -m "${DIR_MODE}" "${INSTDIR}"
d319 4
a322 2
	sm_install_rm ${FILE_MODE} ${FILE_OWN} ${FILE_GRP} ${1} ${INSTDIR} || \
		return
d324 1
a324 1
	case "${1#.}" in
d335 1
a335 1
		sm_warn $(/usr/libexec/sendmail/makemap hash ${1#.} 2>&1 <${1#.})
a346 15
sm_ln() {
	local _dirmode _linkf _linkt
	_linkt=$(readlink ${COMPFILE})
	_linkf=$(dirname ${COMPFILE#.})

	_dirmode=$(stat -f "%OMp%OLp" ${_TMPROOT}/${_linkf})
	[[ ! -d ${_linkf} ]] && \
		install -d -o root -g wheel -m ${_dirmode} ${_linkf}

	rm ${COMPFILE}
	sm_echo "===> Linking ${COMPFILE#.}"
	(cd ${_linkf} && ln -sf ${_linkt} .)
	return
}

d349 2
a350 2
	local _pw="${_TMPROOT}/etc/master.passwd"
	local _gr="${_TMPROOT}/etc/group"
d384 1
a384 1
			${COMPFILE#.} ${COMPFILE}
d407 3
a409 3
				sm_echo -n "\n===> Merging ${COMPFILE#.}"
				sm_install ${COMPFILE} || \
					sm_warn "problem merging ${COMPFILE#.}"
d422 1
a422 1
					diff -u ${COMPFILE#.} ${COMPFILE}.merged
d456 1
a456 1
		if [[ -f ${COMPFILE#.} && -f ${COMPFILE} && -z ${IS_LINK} ]]; then
d460 1
a460 1
				for i in ${AUTO_UPG[@@]}; do
d465 1
a465 1
				if [[ -z $(diff -q -I'[$]OpenBSD:.*$' ${COMPFILE#.} ${COMPFILE}) || \
d467 4
a470 4
					sm_echo -n "===> Updating ${COMPFILE#.}"
					sm_install ${COMPFILE} && \
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${COMPFILE#.}\n" || \
						sm_warn "problem updating ${COMPFILE#.}"
d479 1
a479 1
					diff -u ${COMPFILE#.} ${COMPFILE}
d487 1
a487 2
					sm_echo
					NO_INSTALLED=1
d489 4
a492 3
					sm_ln && \
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${COMPFILE#.}\n" || \
						sm_warn "problem creating ${COMPFILE#.} link"
d499 4
a502 4
				sm_echo -n "===> Installing ${COMPFILE#.}"
				sm_install ${COMPFILE} && \
					AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${COMPFILE#.}\n" || \
					sm_warn "problem installing ${COMPFILE#.}"
d532 4
a535 3
				sm_ln && \
					MERGED_FILES="${MERGED_FILES}${COMPFILE#.}\n" || \
					sm_warn "problem creating ${COMPFILE#.} link"
d537 4
a540 4
				sm_echo -n "===> Updating ${COMPFILE#.}"
				sm_install "${COMPFILE}" && \
					MERGED_FILES="${MERGED_FILES}${COMPFILE#.}\n" || \
					sm_warn "problem updating ${COMPFILE#.}"
d546 1
a546 1
					MERGED_FILES="${MERGED_FILES}${COMPFILE#.}\n" || \
a572 66
sm_compare() {
	local _c1 _c2 COMPFILE CVSID1 CVSID2

	cd ${_TMPROOT} || sm_error "cannot enter ${_TMPROOT}"

	# aliases(5) needs to be handled last in case syntax changes
	_c1=$(find . -type f -or -type l | grep -vE '^./etc/mail/aliases$')
	_c2=$(find . -type f -name aliases)
	for COMPFILE in ${_c1} ${_c2}; do
		unset IS_BINFILE IS_LINK
		# treat empty files the same as IS_BINFILE to avoid comparing them;
		# only process them if they don't exist on the target system
		if [[ ! -s ${COMPFILE} ]]; then
			if [[ -f ${COMPFILE#.} ]]; then
				rm ${COMPFILE}
			else
				IS_BINFILE=1
			fi
		fi

		# links need to be treated in a different way
		[[ -h ${COMPFILE} ]] && IS_LINK=1
		if [[ -n ${IS_LINK} && -h ${COMPFILE#.} ]]; then
			IS_LINK=1
			# if links target are the same, remove from temproot
			if [[ $(readlink ${COMPFILE}) == $(readlink ${COMPFILE#.}) ]]; then
				rm ${COMPFILE}
			else
				sm_diff_loop
			fi
			continue
		fi

		# file not present on the system
		if [[ ! -e ${COMPFILE#.} ]]; then
			sm_diff_loop
			continue
		fi

		# compare CVS $Id's first so if the file hasn't been modified,
		# it will be deleted from temproot and ignored from comparison;
		# several files are generated from scripts so CVS ID is not a
		# reliable way of detecting changes: leave for a full diff
		if [[ -z ${DIFFMODE} && \
			-z ${PKGMODE} && \
			${COMPFILE} != ./etc/@@(fbtab|ttys) && \
			-z ${IS_LINK} ]]; then
			CVSID1=$(sed -n "/[$]OpenBSD:.*Exp [$]/{p;q;}" ${COMPFILE#.} 2>/dev/null)
			CVSID2=$(sed -n "/[$]OpenBSD:.*Exp [$]/{p;q;}" ${COMPFILE} 2>/dev/null) || CVSID2=none
			[[ ${CVSID2} == ${CVSID1} ]] && rm ${COMPFILE}
		fi

		if [[ -f ${COMPFILE} && -z ${IS_LINK} ]]; then
			# make sure files are different; if not, delete
			# the one in temproot
			if diff -q ${COMPFILE#.} ${COMPFILE} >/dev/null; then
				rm ${COMPFILE}
			# if file is a binary; set IS_BINFILE to disable sdiff
			elif diff -q ${COMPFILE#.} ${COMPFILE} | grep -q Binary; then
				IS_BINFILE=1 && sm_diff_loop
			else
				sm_diff_loop
			fi
		fi
	done
}
d593 1
a593 1
	mv ${_TMPROOT}/usr/share/sysmerge/examplessum \
d600 1
a600 1
	FILES_IN__TMPROOT=$(find "${_TMPROOT}" -type f ! -name \*.merged -size +0)
d602 1
a602 1
		FILES_IN__BKPDIR=$(find "${_BKPDIR}" -type f -size +0)
d612 2
a613 3
		find "${_TMPROOT}" -type f -empty | xargs -r rm
		find "${_TMPROOT}" -type d | sort -r | xargs -r rmdir 2>/dev/null
		rm ${_WRKDIR}/*sum
d648 4
a651 2
sm_populate
sm_compare
@


1.167
log
@/etc/{hosts,myname} are going away from etc.tgz.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.166 2014/09/01 06:55:37 ajacoutot Exp $
d78 1
a78 1
		[ -f /usr/share/sysmerge/${_set}sum ] && \
d187 1
a187 1
	sm_install_user_grp
d280 1
a280 1
		if [ -f /etc/login.conf.db ]; then
d307 1
a307 1
	[ ! -d "${_linkf}" ] && \
d316 1
a316 1
sm_install_user_grp() {
@


1.166
log
@Do not compare checksum of checksums...
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.165 2014/08/31 09:20:06 ajacoutot Exp $
a235 1
		      /etc/myname
d419 1
a419 1
	local i CAN_INSTALL HANDLE_COMPFILE NO_INSTALLED AUTO_INSTALLED_FILES
d423 1
a423 1
	unset NO_INSTALLED CAN_INSTALL FORCE_UPG
d478 1
a478 4
			if [[ ${COMPFILE} != "./etc/hosts" ]]; then
				CAN_INSTALL=1
				echo "  Use 'i' to install the temporary ${COMPFILE}"
			fi
d499 5
a503 12
			if [[ -n ${CAN_INSTALL} ]]; then
				sm_echo
				if [[ -n ${IS_LINK} ]]; then
					sm_ln && \
						MERGED_FILES="${MERGED_FILES}${COMPFILE#.}\n" || \
						sm_warn "problem creating ${COMPFILE#.} link"
				else
					sm_echo -n "===> Updating ${COMPFILE#.}"
					sm_install "${COMPFILE}" && \
						MERGED_FILES="${MERGED_FILES}${COMPFILE#.}\n" || \
						sm_warn "problem updating ${COMPFILE#.}"
				fi
d505 4
a508 2
				echo "invalid choice: ${HANDLE_COMPFILE}\n"
				HANDLE_COMPFILE="todo"
a509 1
				
@


1.165
log
@Make sysmerge(8) completely silent by default when no file is modified.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.164 2014/08/31 08:32:41 ajacoutot Exp $
d203 4
a206 3
					_j=${_j#.}
					[[ -f ${_j} && -f ${_TMPROOT}/${_j} ]] && \
						rm -f ${_TMPROOT}/${_j}
d214 1
a214 1
				# skip sum files (!auto-install)
@


1.164
log
@In pkg mode, warn if the directory we want to copy the @@sample file into
does not exist and is not a @@sample because we have no knowledge of the
required owner/group/mode so we cannot create it.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.163 2014/08/31 07:59:58 ajacoutot Exp $
a182 1
	echo "===> Populating ${_TMPROOT}"
a551 1
	echo "===> Starting comparison"
a649 1
	echo "===> Checking directories permissions (running mtree(8))"
d660 1
a660 1
		echo "===> Run log available at ${_WRKDIR}/sysmerge.log"
a661 1
		echo "===> Removing ${_WRKDIR}"
@


1.163
log
@Simplify examples files handling.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.162 2014/08/31 07:35:52 ajacoutot Exp $
d155 9
a163 12
			# the directory we want to copy the @@sample file
			# into does not exist, ignore @@sample and move on:
			# - if the directory was a @@sample, it would have
			#   been created at this point
			# - we have no knowledge of the required owner,
			#   group and mode of the directory hierarchy
			#   because the dir is not a @@sample
			#   (e.g. mail/femail,-chroot)
			#_pkghier=$(dirname ${_sample[5]})
			#if [ ! -d "${_pkghier}" ]; then
			#	install -d -o root -g wheel -m 0755 ${_pkghier}
			#fi
@


1.162
log
@Only use the sum files corresponding to the mode we run in.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.161 2014/08/31 07:31:26 ajacoutot Exp $
d624 1
a624 1
	local _egmods _i _j _managed EGMODS
d635 3
a637 1
		[[ -f /etc/${_i##*/} ]] && EGMODS="${EGMODS:+${EGMODS} }${_i#.}"
d640 1
a640 6
	if [[ -n ${EGMODS} ]]; then
		for _j in ${EGMODS}; do
			_managed="${_managed:+${_managed} }${_j##*/}"
		done
		sm_warn "example(s) changed for: ${_managed}"
	fi
@


1.161
log
@When we are not running in pkg mode, /usr/share/sysmerge/examplessum
should always be part of the temproot, so there's not need to check for its
existence.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.160 2014/08/31 06:40:46 ajacoutot Exp $
a194 1
	# examplessum is used differently, see sm_check_an_eg()
d196 2
a197 1
		if [[ -f /usr/share/sysmerge/${_i} ]]; then
@


1.160
log
@Do not overwrite examplessum; use the one we are provided with.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.159 2014/08/30 20:31:03 ajacoutot Exp $
d218 1
a218 1
				[[ $_k == ./usr/share/sysmerge/${_i} ]] && continue
d644 1
a644 2
	[[ -f ${_TMPROOT}/usr/share/sysmerge/examplessum ]] && \
		mv ${_TMPROOT}/usr/share/sysmerge/examplessum \
@


1.159
log
@Refactor sum checks; all the information we need is already available so
not need to create sum files anymore (except in pkg mode).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.158 2014/08/30 16:37:12 ajacoutot Exp $
d627 1
a627 2
		cp /usr/share/sysmerge/examplessum \
			${_TMPROOT}/usr/share/sysmerge/examplessum
@


1.158
log
@sm_warn() always returns 0.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.157 2014/08/30 14:40:09 ajacoutot Exp $
d49 2
a50 3
	for _i in ${_WRKDIR}/{etcsum,xetcsum,examplessum,pkgsum}.bak; do
		_j=$(basename ${_i} .bak)
		[[ -f ${_WRKDIR}/${_j} ]] || continue
a55 1
		rm ${_WRKDIR}/${_j}
d70 1
a70 1
sm_extract_mksum() {
d80 4
a83 10
			${_WRKDIR}/${_set}sum.bak
		# XXX do we still want this check?
		tar -tzf /usr/share/sysmerge/${_set}.tgz \
			./usr/share/sysmerge/${_set}sum >/dev/null ||
			sm_error "${_set}.tgz: badly formed set, lacks ./usr/share/sysmerge/${_set}sum"
		(cd ${_TMPROOT} && tar -xzphf \
			/usr/share/sysmerge/${_set}.tgz && \
			find . -type f | sort | \
			xargs sha256 -h ${_WRKDIR}/${_set}sum) || \
			sm_error "failed to extract ${_set}.tgz and create sum file"
d142 1
a142 1
		cp /usr/share/sysmerge/pkgsum ${_WRKDIR}/pkgsum.bak
d176 1
a176 1
			xargs sha256 -h ${_WRKDIR}/pkgsum || \
d190 1
a190 1
	sm_extract_mksum
d192 1
d197 1
a197 1
		if [[ -f /usr/share/sysmerge/${_i} && -f ${_WRKDIR}/${_i} ]]; then
d201 1
a201 2
				# redirect stderr in case file got removed
				# manually but is still in the sum file
d214 1
a214 1
			_mismatch=$(diff -u ${_WRKDIR}/${_i} /usr/share/sysmerge/${_i} | \
d217 3
a219 2
				# redirect stderr in case file got removed
				# manually but is still in the sum file
d222 1
a222 1
					-z $(grep "${_cursum}" ${_WRKDIR}/${_i}) ]] && \
d227 2
a228 2
		[[ -f ${_WRKDIR}/${_i} ]] && \
			mv ${_WRKDIR}/${_i} /usr/share/sysmerge/${_i}
a239 1
		      /usr/share/sysmerge/{etc,examples,xetc}sum
d623 1
d626 3
a628 2
	if [ -f /usr/share/sysmerge/examplessum ]; then
		cp /usr/share/sysmerge/examplessum ${_WRKDIR}/examplessum.bak
d645 3
a647 3
	cd / && find ./etc/examples -type f | sort | \
		xargs sha256 -h /usr/share/sysmerge/examplessum || \
		sm_error "failed to create examplessum checksum file"
d668 1
a668 1
		rm ${_WRKDIR}/*sum.bak
a705 1
sm_check_an_eg
@


1.157
log
@DESTDIR is gone.

from Nathanael Rensen, thanks!
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.156 2014/08/29 06:52:20 ajacoutot Exp $
d69 1
a69 1
	(($#)) && sm_echo "**** WARNING: $@@"
@


1.156
log
@Some cleanings, no functional change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.155 2014/08/28 17:43:21 ajacoutot Exp $
d211 1
a211 1
					sha256 -c ${DESTDIR}/${DBDIR}/${_i} 2>/dev/null | \
@


1.155
log
@Major sysmerge cleanup now that both etc and xetc sets are part of base.
Expect more changes/cleanup/... in the near future.

-S (signature) option is gone since we are not fetching sets anymore
-s and -x are gone as well for obvious reasons

Left is:
usage: sysmerge [-bdp]

I would appreciate feedback, *lots* of things have changed and there may be
side effects I missed. Consider sysmerge as WIP for the time being.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.154 2014/08/27 14:44:42 ajacoutot Exp $
d60 3
a62 4
	# do not remove the entire _WRKDIR in case sysmerge stopped half
	# way since it contains our backup files
	rm -rf "${_TMPROOT}"
	rmdir "${_WRKDIR}" 2>/dev/null
a71 1
# extract set(s) and create cksum file(s)
d87 1
a87 1
		(cd "${_TMPROOT}" && tar -xzphf \
d90 1
a90 1
			xargs sha256 -h "${_WRKDIR}/${_set}sum") || \
d147 1
a147 2

	local _install_args _l _ret=0 _sample
d157 2
a158 2
	exec_espie | sort -u | while read _l; do
		set -A _sample -- ${_l}
a170 2
			# - it's not the job of sysmerge to repair
			#   broken pkg installations
d183 2
a184 2
		cd "${_TMPROOT}" && find . -type f | sort | \
			xargs sha256 -h "${_WRKDIR}/pkgsum" || \
d192 2
a193 1
	local cf i _array _d _r _D _R CF_DIFF CF_FILES CURSUM IGNORE_FILES
a197 2
	# automatically install missing user(s) and group(s) from the
	# new master.passwd and group files right after extracting the sets
a199 1

d203 2
a204 2
	for i in etcsum xetcsum pkgsum; do
		if [[ -f /usr/share/sysmerge/${i} && -f ${_WRKDIR}/${i} ]]; then
d208 4
a211 4
				# 2>/dev/null: if file got removed manually
				# but is still in the sum file
				_R=$(cd ${_TMPROOT} && \
					sha256 -c ${DESTDIR}/${DBDIR}/${i} 2>/dev/null | \
d214 4
a217 4
				for _r in ${_R}; do
					_r=${_r#.}
					[[ -f ${_r} && -f ${_TMPROOT}/${_r} ]] && \
						rm -f ${_TMPROOT}/${_r}
d222 1
a222 1
			_D=$(diff -u ${_WRKDIR}/${i} /usr/share/sysmerge/${i} | \
d224 7
a230 7
			for _d in ${_D}; do
				# 2>/dev/null: if file got removed manually
				# but is still in the sum file
				CURSUM=$(cd / && sha256 ${_d} 2>/dev/null)
				[[ -n $(grep "${CURSUM}" /usr/share/sysmerge/${i}) && \
					-z $(grep "${CURSUM}" ${_WRKDIR}/${i}) ]] && \
					_array="${_array} ${_d}"
d232 1
a232 1
			[[ -n ${_array} ]] && set -A AUTO_UPG -- ${_array}
d234 2
a235 2
		[[ -f ${_WRKDIR}/${i} ]] && \
			mv ${_WRKDIR}/${i} /usr/share/sysmerge/${i}
d239 1
a239 1
	IGNORE_FILES="/etc/*.db
d250 4
a253 4
	CF_FILES="/etc/mail/localhost.cf /etc/mail/sendmail.cf /etc/mail/submit.cf"
	for cf in ${CF_FILES}; do
		CF_DIFF=$(diff -q -I "##### " ${_TMPROOT}/${cf} ${cf} 2>/dev/null)
		[[ -z ${CF_DIFF} ]] && IGNORE_FILES="${IGNORE_FILES} ${cf}"
d256 3
a258 3
		IGNORE_FILES="${IGNORE_FILES} $(stripcom /etc/sysmerge.ignore)"
	for i in ${IGNORE_FILES}; do
		rm -f ${_TMPROOT}/${i}
d314 7
a320 7
	local _LINKF _LINKT DIR_MODE 
	_LINKT=$(readlink ${COMPFILE})
	_LINKF=$(dirname ${COMPFILE#.})

	DIR_MODE=$(stat -f "%OMp%OLp" ${_TMPROOT}/${_LINKF})
	[ ! -d "${_LINKF}" ] && \
		install -d -o root -g wheel -m ${DIR_MODE} ${_LINKF}
d324 1
a324 1
	(cd ${_LINKF} && ln -sf ${_LINKT} .)
d574 1
a574 2
		# only process them (i.e. install) if they don't exist on
		# the target system
d603 1
a603 1
		# it will be deleted from temproot and ignored from comparison.
d605 1
a605 1
		# reliable way of detecting changes; leave for a full diff.
d620 1
a620 2
			# xetc.tgz contains binary files; set IS_BINFILE
			# to disable sdiff
a705 1
# sysmerge specific variables (overridable)
a706 2

# system-wide variables (overridable)
@


1.154
log
@One less option.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.153 2014/08/27 14:13:17 ajacoutot Exp $
a22 37
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE EGMODS EGSUM ETCSUM
unset NEED_NEWALIASES NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK PKGMODE
unset PKGSUM TGZ XETCSUM XTGZ

# forced variables
WRKDIR=$(mktemp -d -p ${TMPDIR:=/var/tmp} sysmerge.XXXXXXXXXX) || exit 1
SWIDTH=$(stty size | awk '{w=$2} END {if (w==0) {w=80} print w}')
RELINT=$(uname -r | tr -d '.')
if [ -z "${VISUAL}" ]; then
	EDIT="${EDITOR:=/usr/bin/vi}"
else
	EDIT="${VISUAL}"
fi

# sysmerge specific variables (overridable)
MERGE_CMD="${MERGE_CMD:=sdiff -as -w ${SWIDTH} -o}"
REPORT="${REPORT:=${WRKDIR}/sysmerge.log}"
DBDIR="${DBDIR:=/usr/share/sysmerge}"

# system-wide variables (overridable)
PAGER="${PAGER:=/usr/bin/more}"

# restore sum files from backups or remove the newly generated ones if
# they did not exist
restore_sum() {
	local i _i
	for i in ${DESTDIR}/${DBDIR}/.{${ETCSUM},${XETCSUM},${EGSUM},${PKGSUM}}.bak; do
		_i=$(basename ${i} .bak)
		if [ -f "${i}" ]; then
			mv ${i} ${DESTDIR}/${DBDIR}/${_i#.}
		elif [ -f "${DESTDIR}/${DBDIR}/${_i#.}" ]; then
			rm ${DESTDIR}/${DBDIR}/${_i#.}
		fi
	done
	rm -f ${WRKDIR}/*sum
}

d24 1
a24 5
	echo "usage: ${0##*/} [-bdS] [-p | [-x xetcXX.tgz]]" >&2
}

warn() {
	echo "**** WARNING: $@@"
d27 1
a27 5
report() {
	echo "$@@" >> ${REPORT}
}

# from OpenBSD's /etc/rc,v 1.438
d41 20
a60 5
# remove newly created work directory and exit with status 1
error_rm_wrkdir() {
	(($#)) && echo "!!!! ERROR: $@@"
	restore_sum
	# do not remove the entire WRKDIR in case sysmerge stopped half
d62 2
a63 4
	rm -rf ${TEMPROOT}
	rm -f ${WRKDIR}/*.tgz
	rm -f ${WRKDIR}/SHA256.sig
	rmdir ${WRKDIR} 2>/dev/null
d67 5
a71 1
trap "error_rm_wrkdir; exit 1" 1 2 3 13 15
d73 2
a74 8
if (($(id -u) != 0)); then
	usage
	error_rm_wrkdir "need root privileges"
fi

# extract (x)etcXX.tgz and create cksum file(s);
# stores sum filename in ETCSUM or XETCSUM (see eval);
extract_sets() {
d76 1
a76 1
	local _e _x _set _tgz
d78 2
a79 2
	[[ -f ${WRKDIR}/${TGZ##*/} ]] && _e=etc
	[[ -f ${WRKDIR}/${XTGZ##*/} ]] && _x=xetc
d82 12
a93 12
		typeset -u _SETSUM=${_set}sum
		eval ${_SETSUM}=${_set}sum
		[[ ${_set} == etc ]] && _tgz=${WRKDIR}/${TGZ##*/}
		[[ ${_set} == xetc ]] && _tgz=${WRKDIR}/${XTGZ##*/}

		tar -tzf "${_tgz}" .${DBDIR}/${_set}sum >/dev/null ||
			error_rm_wrkdir "${_tgz##*/}: badly formed \"${_set}\" set, lacks .${DBDIR}/${_set}sum"

		(cd ${TEMPROOT} && tar -xzphf "${_tgz}" && \
			find . -type f | sort | xargs sha256 -h ${WRKDIR}/${_set}sum) || \
				error_rm_wrkdir "failed to extract ${_tgz} and create checksum file"
		rm "${_tgz}"
a96 27
# fetch and verify sets, abort on failure
sm_fetch_and_verify() {
	[[ -n ${PKGMODE} ]] && return
	local _file _url;
	local _key="/etc/signify/openbsd-${RELINT}-base.pub"

	for _url in ${TGZ} ${XTGZ}; do
		[[ -f ${_url} ]] && _url="file://$(readlink -f ${_url})"
		_file=${WRKDIR}/${_url##*/}
		[[ ${_url} == @@(file|ftp|http|https)://*/*[!/] ]] ||
			error_rm_wrkdir "${_url}: invalid URL"
		echo "===> Fetching ${_url}"
		/usr/bin/ftp -Vm -k "${FTP_KEEPALIVE-0}" -o "${_file}" "${_url}" >/dev/null || \
			error_rm_wrkdir "could not retrieve ${_url##*/}"
	done
	if [ -z "${NOSIGCHECK}" -a -n "${XTGZ}" ]; then
		echo "===> Fetching ${XTGZ%/*}/SHA256.sig"
		/usr/bin/ftp -Vm -k "${FTP_KEEPALIVE-0}" -o "${WRKDIR}/SHA256.sig" "${XTGZ%/*}/SHA256.sig" >/dev/null || \
			error_rm_wrkdir "could not retrieve SHA256.sig"
		echo "===> Verifying ${XTGZ##*/} against ${_key}"
		(cd ${WRKDIR} && /usr/bin/signify -qC -p ${_key} -x SHA256.sig ${XTGZ##*/}) || \
			error_rm_wrkdir "${XTGZ##*/}: signature/checksum failed"
	fi

	[[ -z ${NOSIGCHECK} ]] && rm ${WRKDIR}/SHA256.sig
}

d99 3
a101 1
	TEMPROOT=${TEMPROOT} /usr/bin/perl <<'EOF'
d119 1
a119 1
	      $ENV{'TEMPROOT'}, $item->fullname,
d132 1
a132 1
	      $ENV{'TEMPROOT'}, $item->fullname,
d147 1
a147 1
copy_pkg_samples() {
d150 4
a153 2
	local _install_args _l _ret _sample
	PKGSUM=pkgsum
d155 3
a157 3
	# access to base system hierarchy is implied in packages
	mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${TEMPROOT} -U >/dev/null
	mtree -qdef ${DESTDIR}/etc/mtree/BSD.x11.dist -p ${TEMPROOT} -U >/dev/null
d163 2
a164 2
		if [ "${_sample[0]}" = "0-DIR" ]; then
			install -d ${_install_args} ${_sample[4]} || return 1
d167 1
a167 1
			# into does not exist, ignore @@sample and move on for now:
d172 2
a173 1
			#   because the dir is not a @@sample (e.g. mail/femail,-chroot)
d180 3
a182 2
			if [ -d "${DESTDIR}/$(dirname ${_sample[5]})" ]; then
				install ${_install_args} ${_sample[4]} ${_sample[5]} || return 1
d186 4
a189 3
	_ret=$?
	if [ "${_ret}" -eq 0 ]; then
		cd ${TEMPROOT} && find . -type f | sort | xargs sha256 -h ${WRKDIR}/${PKGSUM} || \
d192 2
a193 3
	if [ "${_ret}" -ne 0 ]; then
		error_rm_wrkdir "failed to populate packages @@samples and create checksum file"
	fi
d198 3
a200 6
	echo "===> Populating temporary root under ${TEMPROOT}"
	mkdir -p ${TEMPROOT}

	if [ ! -d ${DESTDIR}/${DBDIR} ]; then
		mkdir -p ${DESTDIR}/${DBDIR} || exit 1
	fi
d203 18
a220 15
	# new master.passwd and group files after extracting the sets
	# (so we have the new files)
	extract_sets
	copy_pkg_samples
	install_user_group

	# EGSUM is used differently, see sm_check_an_eg()
	for i in ${ETCSUM} ${XETCSUM} ${PKGSUM}; do
		if [ -f ${DESTDIR}/${DBDIR}/${i} ]; then
			# delete file in temproot if it has not changed since last release
			# and is present in current installation
			if [ -z "${DIFFMODE}" ]; then
				# 2>/dev/null: if file got removed manually but is still in the sum file
				_R=$(cd ${TEMPROOT} && \
					sha256 -c ${DESTDIR}/${DBDIR}/${i} 2>/dev/null | awk '/OK/ { print $2 }' | sed 's/[:]//')
d222 3
a224 3
					if [ -f ${DESTDIR}/${_r} -a -f ${TEMPROOT}/${_r} ]; then
						rm -f ${TEMPROOT}/${_r}
					fi
d229 2
a230 1
			_D=$(diff -u ${WRKDIR}/${i} ${DESTDIR}/${DBDIR}/${i} | sed -n 's/^+SHA256 (\(.*\)).*/\1/p')
d232 5
a236 3
				# 2>/dev/null: if file got removed manually but is still in the sum file
				CURSUM=$(cd ${DESTDIR:=/} && sha256 ${_d} 2>/dev/null)
				[ -n "$(grep "${CURSUM}" ${DESTDIR}/${DBDIR}/${i})" -a -z "$(grep "${CURSUM}" ${WRKDIR}/${i})" ] && \
a239 2

			mv ${DESTDIR}/${DBDIR}/${i} ${DESTDIR}/${DBDIR}/.${i}.bak
d241 2
a242 1
		mv ${WRKDIR}/${i} ${DESTDIR}/${DBDIR}/${i}
d259 1
a259 1
		CF_DIFF=$(diff -q -I "##### " ${TEMPROOT}/${cf} ${DESTDIR}/${cf} 2>/dev/null)
d262 1
a262 1
	if [ -f /etc/sysmerge.ignore ]; then
a263 1
	fi
d265 1
a265 1
		rm -f ${TEMPROOT}/${i}
d269 4
a272 4
install_and_rm() {
	if [ -f "${5}/${4##*/}" ]; then
		mkdir -p ${BKPDIR}/${4%/*}
		cp ${5}/${4##*/} ${BKPDIR}/${4%/*}
d275 2
a276 3
	if ! install -m "${1}" -o "${2}" -g "${3}" "${4}" "${5}"; then
		rm -f ${BKPDIR}/${4%/*}/${4##*/}
		return 1
d278 1
a278 1
	rm -f "${4}"
d281 1
a281 1
install_file() {
d288 1
a288 1
	DIR_MODE=$(stat -f "%OMp%OLp" "${TEMPROOT}/${INSTDIR}")
d291 2
a292 2
	[ -n "${DESTDIR}${INSTDIR}" -a ! -d "${DESTDIR}${INSTDIR}" ] && \
		install -d -o root -g wheel -m "${DIR_MODE}" "${DESTDIR}${INSTDIR}"
d294 2
a295 1
	install_and_rm "${FILE_MODE}" "${FILE_OWN}" "${FILE_GRP}" "${1}" "${DESTDIR}${INSTDIR}" || return
a297 5
	/dev/MAKEDEV)
		echo " (running MAKEDEV(8))"
		(cd ${DESTDIR}/dev && /bin/sh MAKEDEV all)
		export NEED_REBOOT=1
		;;
d299 3
a301 3
		if [ -f ${DESTDIR}/etc/login.conf.db ]; then
			echo " (running cap_mkdb(1))"
			cap_mkdb ${DESTDIR}/etc/login.conf
d303 1
a303 1
			echo ""
a304 1
		export NEED_REBOOT=1
d307 2
a308 2
		echo " (running makemap(8))"
		/usr/libexec/sendmail/makemap hash ${DESTDIR}/${1#.} < ${DESTDIR}/${1#.}
d311 2
a312 2
		echo " (running newaliases(8))"
		${DESTDIR:+chroot ${DESTDIR}} newaliases >/dev/null || export NEED_NEWALIASES=1
d315 1
a315 1
		echo ""
d320 1
a320 1
install_link() {
d323 1
a323 1
	_LINKF=$(dirname ${DESTDIR}${COMPFILE#.})
d325 3
a327 3
	DIR_MODE=$(stat -f "%OMp%OLp" "${TEMPROOT}/${_LINKF}")
	[[ ! -d ${_LINKF} ]] && \
		install -d -o root -g wheel -m "${DIR_MODE}" "${_LINKF}"
d329 2
a330 1
	rm -f ${COMPFILE}
d335 13
a347 14
install_user_group() {
	local _g _gid _u
	local _pw="${TEMPROOT}/etc/master.passwd"
	local _gr="${TEMPROOT}/etc/group"

	# when running with '-x' only or in PKGMODE
	[ ! -f ${_pw} -o ! -f ${_gr} ] && return

	while read l; do
		_u=$(echo ${l} | awk -F ':' '{ print $1 }')
		if [ "${_u}" != "root" ]; then
			if [ -z "$(grep -E "^${_u}:" ${DESTDIR}/etc/master.passwd)" ]; then
				echo "===> Adding the ${_u} user"
				if ${DESTDIR:+chroot ${DESTDIR}} chpass -la "${l}"; then
a348 1
				fi
d351 1
a351 1
	done < ${_pw}
d353 6
a358 6
	while read l; do
		_g=$(echo ${l} | awk -F ':' '{ print $1 }')
		_gid=$(echo ${l} | awk -F ':' '{ print $3 }')
		if [ -z "$(grep -E "^${_g}:" ${DESTDIR}/etc/group)" ]; then
			echo "===> Adding the ${_g} group"
			if ${DESTDIR:+chroot ${DESTDIR}} groupadd -g "${_gid}" "${_g}"; then
a359 1
			fi
d361 1
a361 1
	done < ${_gr}
d364 1
a364 1
merge_loop() {
d366 1
a366 1
	[[ ${MERGE_CMD} == sdiff* ]] && \
d369 4
a372 4
	while [ -n "${MERGE_AGAIN}" ]; do
		cp -p "${COMPFILE}" "${COMPFILE}.merged"
		${MERGE_CMD} "${COMPFILE}.merged" \
			"${DESTDIR}${COMPFILE#.}" "${COMPFILE}"
d374 2
a375 2
		while [ "${INSTALL_MERGED}" = "v" ]; do
			echo ""
d384 1
a384 1
			echo ""
d387 1
a387 1
			case "${INSTALL_MERGED}" in
d390 1
a390 1
				${EDIT} ${COMPFILE}.merged
d394 4
a397 4
				mv "${COMPFILE}.merged" "${COMPFILE}"
				echo -n "\n===> Merging ${COMPFILE#.}"
				install_file "${COMPFILE}" || \
					warn "problem merging ${COMPFILE#.}"
d410 1
a410 1
					diff -u ${DESTDIR}${COMPFILE#.} ${COMPFILE}.merged
d415 1
a415 1
				rm "${COMPFILE}.merged"
d418 1
a418 1
				${PAGER} "${COMPFILE}.merged"
d421 1
a421 1
				rm "${COMPFILE}.merged"
d425 1
a425 1
				echo "===> ${COMPFILE} will remain for your consideration"
d437 4
a440 7
diff_loop() {
	local i CAN_INSTALL HANDLE_COMPFILE NO_INSTALLED
	if [ -n "${BATCHMODE}" ]; then
		HANDLE_COMPFILE=todo
	else
		HANDLE_COMPFILE=v
	fi
a442 1

d444 5
a448 4
		if [ -f "${DESTDIR}${COMPFILE#.}" -a -f "${COMPFILE}" -a -z "${IS_LINK}" ]; then
			if [ -z "${DIFFMODE}" ]; then
				# automatically install files if current != new and current = old
				for i in "${AUTO_UPG[@@]}"; do
d451 8
a458 8
				# automatically install files which differ only by CVS Id or that are binaries
				if [ -z "$(diff -q -I'[$]OpenBSD:.*$' "${DESTDIR}${COMPFILE#.}" "${COMPFILE}")" -o -n "${FORCE_UPG}" -o -n "${IS_BINFILE}" ]; then
					echo -n "===> Updating ${COMPFILE#.}"
					if install_file "${COMPFILE}"; then
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
					else
						warn "problem updating ${COMPFILE#.}"
					fi
d462 1
a462 1
			if [ "${HANDLE_COMPFILE}" = "v" ]; then
d466 2
a467 2
					echo ""
					diff -u "${DESTDIR}${COMPFILE#.}" "${COMPFILE}"
d469 1
a469 1
				echo ""
d473 3
a475 3
			if [ -n "${IS_LINK}" ]; then
				if [ -n "${DIFFMODE}" ]; then
					echo ""
d478 3
a480 6
					if install_link; then
						echo "===> ${COMPFILE#.} link created successfully"
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
					else
						warn "problem creating ${COMPFILE#.} link"
					fi
d484 2
a485 3
			if [ -n "${DIFFMODE}" ]; then
				echo ""
				NO_INSTALLED=1
d487 4
a490 6
				echo -n "===> Installing ${COMPFILE#.}"
				if install_file "${COMPFILE}"; then
					AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
				else
					warn "problem installing ${COMPFILE#.}"
				fi
d495 1
a495 1
		if [ -z "${BATCHMODE}" ]; then
d497 1
a497 1
			if [ "${COMPFILE}" != ./etc/hosts ]; then
d501 2
a502 1
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" -a -z "${IS_LINK}" ]; then
d506 1
a506 1
			echo ""
d508 1
a508 1
			echo ""
d515 1
a515 1
		case "${HANDLE_COMPFILE}" in
d517 1
a517 1
			rm "${COMPFILE}"
d521 6
a526 9
			if [ -n "${CAN_INSTALL}" ]; then
				echo ""
				if [ -n "${IS_LINK}" ]; then
					if install_link; then
						echo "===> ${COMPFILE#.} link created successfully"
						MERGED_FILES="${MERGED_FILES}${DESTDIR}${COMPFILE#.}\n"
					else
						warn "problem creating ${COMPFILE#.} link"
					fi
d528 4
a531 6
					echo -n "===> Updating ${COMPFILE#.}"
					if install_file "${COMPFILE}"; then
						MERGED_FILES="${MERGED_FILES}${DESTDIR}${COMPFILE#.}\n"
					else
						warn "problem updating ${COMPFILE#.}"
					fi
d540 4
a543 4
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" -a -z "${IS_LINK}" ]; then
				merge_loop && \
					MERGED_FILES="${MERGED_FILES}${DESTDIR}${COMPFILE#.}\n" || \
					HANDLE_COMPFILE="todo"
d550 1
a550 1
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" -a -z "${IS_LINK}" ]; then
d558 1
a558 1
			echo "===> ${COMPFILE} will remain for your consideration"
d573 1
a573 1
	cd ${TEMPROOT} || error_rm_wrkdir "cannot enter ${TEMPROOT}"
d575 1
a575 1
	# aliases(5) needs to be handled last in case smtpd.conf(5) syntax changes
d581 5
a585 4
		# only process them (i.e. install) if they don't exist on the target system
		if [ ! -s "${COMPFILE}" ]; then
			if [ -f "${DESTDIR}${COMPFILE#.}" ]; then
				[[ -f ${COMPFILE} ]] && rm ${COMPFILE}
d593 1
a593 1
		if [ -n "${IS_LINK}" -a -h "${DESTDIR}${COMPFILE#.}" ]; then
d596 2
a597 2
			if [ "$(readlink ${COMPFILE})" = "$(readlink ${DESTDIR}${COMPFILE#.})" ]; then
				rm "${COMPFILE}"
d599 1
a599 1
				diff_loop
d605 2
a606 2
		if [ ! -e "${DESTDIR}${COMPFILE#.}" ]; then
			diff_loop
d618 1
a618 1
			CVSID1=$(sed -n "/[$]OpenBSD:.*Exp [$]/{p;q;}" ${DESTDIR}${COMPFILE#.} 2>/dev/null)
d620 1
a620 1
			[[ ${CVSID2} == ${CVSID1} ]] && rm "${COMPFILE}"
d623 9
a631 8
		if [ -f "${COMPFILE}" -a -z "${IS_LINK}" ]; then
			# make sure files are different; if not, delete the one in temproot
			if diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" >/dev/null; then
				rm "${COMPFILE}"
			# xetcXX.tgz contains binary files; set IS_BINFILE to disable sdiff
			elif diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" | grep -q Binary; then
				IS_BINFILE=1
				diff_loop
d633 1
a633 1
				diff_loop
d640 6
a645 5
	EGSUM=examplessum
	local _egmods _i _j _managed
	if [ -f "${DESTDIR}/${DBDIR}/${EGSUM}" ]; then
		_egmods="$(cd ${DESTDIR:=/} && \
			 sha256 -c ${DESTDIR}/${DBDIR}/${EGSUM} 2>/dev/null | \
d648 1
a648 2
			 sed -e "s,:,,")"
		mv ${DESTDIR}/${DBDIR}/${EGSUM} ${DESTDIR}/${DBDIR}/.${EGSUM}.bak
d651 1
a651 3
		if [ -f "${DESTDIR}/etc/${_i##*/}" ]; then
			EGMODS="${EGMODS:+${EGMODS} }${_i#.}"
		fi
d654 1
a654 1
	if [ -n "${EGMODS}" ]; then
d658 1
a658 7
		warn "example(s) changed for: ${_managed}"
	fi
	cd ${DESTDIR:=/} && \
		find ./etc/examples -type f | sort | xargs sha256 -h ${DESTDIR}/${DBDIR}/${EGSUM} || \
			error_rm_wrkdir "failed to create ${EGSUM} checksum file"
	if [ -f "${DESTDIR}/${DBDIR}/.${EGSUM}.bak" ]; then
		rm ${DESTDIR}/${DBDIR}/.${EGSUM}.bak
d660 3
d666 1
a666 40
	local _i FILES_IN_TEMPROOT FILES_IN_BKPDIR

	FILES_IN_TEMPROOT=$(find ${TEMPROOT} -type f ! -name \*.merged -size +0)
	[[ -d ${BKPDIR} ]] && FILES_IN_BKPDIR=$(find ${BKPDIR} -type f -size +0)

	if [ -n "${NEED_NEWALIASES}" ]; then
		report "===> A new ${DESTDIR}/etc/mail/aliases file was installed."
		report "However ${DESTDIR}/usr/bin/newaliases could not be run,"
		report "you will need to rebuild your aliases database manually.\n"
	fi

	if [ -n "${AUTO_INSTALLED_FILES}" ]; then
		report "===> Automatically installed file(s)"
		report "${AUTO_INSTALLED_FILES}"
	fi
	if [ -n "${MERGED_FILES}" ]; then
		report "===> Manually merged/installed file(s)"
		report "${MERGED_FILES}"
	fi
	if [ -n "${FILES_IN_BKPDIR}" ]; then
		report "===> Backup of replaced file(s) can be found under"
		report "${BKPDIR}\n"
	fi
	if [ -n "${NEWUSR}" -o -n "${NEWGRP}" ]; then
		report "===> The following user(s)/group(s) have been added"
		[[ -n ${NEWUSR} ]] && report "user(s): ${NEWUSR[@@]}"
		[[ -n ${NEWGRP} ]] && report "group(s): ${NEWGRP[@@]}"
		report ""
	fi
	if [ -n "${EGMODS}" ]; then
		report "===> Matching example(s) modified since last run"
		for _i in ${EGMODS}; do
			report "${_i}"
		done
		report ""
	fi
	if [ -n "${FILES_IN_TEMPROOT}" ]; then
		report "===> File(s) remaining for you to merge by hand"
		report "${FILES_IN_TEMPROOT}"
	fi
d668 19
a686 18
	[[ -n ${FILES_IN_TEMPROOT} ]] && \
		warn "some files are still left for comparison"

	[[ -n ${NEED_NEWALIASES} ]] && \
		warn "newaliases(8) failed to run properly"

	[[ -n ${NEED_REBOOT} ]] && \
		warn "some new/updated file(s) may require a reboot"

	echo "===> Checking directory hierarchy permissions (running mtree(8))"
	mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U >/dev/null
	[[ -n ${XTGZ} ]] && \
		mtree -qdef ${DESTDIR}/etc/mtree/BSD.x11.dist -p ${DESTDIR:=/} -U >/dev/null

	if [ -e "${REPORT}" ]; then
		echo "===> Output log available at ${REPORT}"
		find ${TEMPROOT} -type f -empty | xargs -r rm
		find ${TEMPROOT} -type d | sort -r | xargs -r rmdir 2>/dev/null
d688 2
a689 2
		echo "===> Removing ${WRKDIR}"
		rm -rf "${WRKDIR}"
a690 4

	unset NEED_NEWALIASES NEED_REBOOT

	rm -f ${DESTDIR}/${DBDIR}/.*.bak
d693 2
a694 2

while getopts bdpS:x: arg; do
d696 4
a699 19
	b)
		BATCHMODE=1
		;;
	d)
		DIFFMODE=1
		;;
	p)
		PKGMODE=1
		;;
	S)	
		NOSIGCHECK=1
		;;
	x)
		XTGZ="${OPTARG}"
		;;
	*)
		usage
		error_rm_wrkdir
		;;
d702 4
d707 10
a716 19
shift $(( OPTIND -1 ))
if (($# != 0)); then
	usage
	error_rm_wrkdir
fi

TGZ=/usr/share/sysmerge/etc.tgz

if [ -z "${XTGZ}" -a -n "${SM_PATH}" -a -d ${DESTDIR}/etc/X11 ]; then
	XTGZ="${SM_PATH}/xetc${RELINT}.tgz"
fi

if [ -n "${PKGMODE}" ]; then
	unset TGZ
	if [ -n "${XTGZ}" ]; then
		usage
		error_rm_wrkdir "conflicting options"
	fi
fi
d718 3
a720 2
TEMPROOT="${WRKDIR}/temproot"
BKPDIR="${WRKDIR}/backups"
a721 1
sm_fetch_and_verify
@


1.153
log
@Simplify examples handling.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.152 2014/08/26 21:29:56 ajacoutot Exp $
d814 1
a814 1
while getopts bdpSs:x: arg; do
@


1.152
log
@Fist shot at fixing sysmerge(8) with etc-in-base; note that it's still in
transition state and the utility will get a lot of revamping in the near
future.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.151 2014/08/21 16:50:11 ajacoutot Exp $
d23 1
a23 1
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE EGSUM ETCSUM
d125 2
a126 2
			find . -type f | xargs sha256 -h ${WRKDIR}/${_set}sum) || \
			error_rm_wrkdir "failed to extract ${_tgz} and create checksum file"
d714 1
a714 1
	local _egmods _i _managed
d716 5
a720 1
		EGMODS="$(cd ${DESTDIR:=/} && sha256 -c ${DESTDIR}/${DBDIR}/${EGSUM} 2>/dev/null | grep 'FAILED$' | awk '{ print $2 }' | sed -e "s,:,,")"
d723 3
a725 4
	for _i in ${EGMODS}; do
		_managed=$(echo ${_i} | sed -e "s,etc/examples,etc,")
		if [ -f "${DESTDIR}/${_managed}" ]; then
			_egmods="${_egmods} ${_managed##*/}"
d728 6
a733 5
	if [ -n "${_egmods}" ]; then
		warn "example(s) changed for:${_egmods}"
	else
		# example changed but we have no corresponding file under /etc
		unset EGMODS
d736 2
a737 2
		find ./etc/examples -type f | xargs sha256 -h ${DESTDIR}/${DBDIR}/${EGSUM} || \
		error_rm_wrkdir "failed to create ${EGSUM} checksum file"
d744 1
a744 1
	local FILES_IN_TEMPROOT FILES_IN_BKPDIR
d775 3
a777 1
		report "${EGMODS}"
@


1.151
log
@Unbreak when "SRCDIR=."

reported by phessler@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.150 2014/08/11 09:03:27 ajacoutot Exp $
d25 1
a25 1
unset PKGSUM SRCDIR SRCSUM TGZ XETCSUM XTGZ
a44 6
# clean leftovers created by make in src
clean_src() {
	[[ -n ${SRCDIR} ]] && \
		cd ${SRCDIR}/gnu/usr.sbin/sendmail/cf/cf && make cleandir >/dev/null
}

d49 1
a49 1
	for i in ${DESTDIR}/${DBDIR}/.{${SRCSUM},${ETCSUM},${XETCSUM},${EGSUM},${PKGSUM}}.bak; do
d61 1
a61 1
	echo "usage: ${0##*/} [-bdS] [-p | [-s src | etcXX.tgz] [-x xetcXX.tgz]]" >&2
a89 1
	clean_src
a108 1
	[[ -n ${SRCDIR} ]] && return
a132 1
	[[ -n ${SRCDIR} ]] && return
d134 1
a134 1
	local _file _sigdone _url;
a144 11
		if [ -z "${NOSIGCHECK}" ]; then
			if [ -z ${_sigdone} ]; then
				echo "===> Fetching ${_url%/*}/SHA256.sig"
				/usr/bin/ftp -Vm -k "${FTP_KEEPALIVE-0}" -o "${WRKDIR}/SHA256.sig" "${_url%/*}/SHA256.sig" >/dev/null || \
					error_rm_wrkdir "could not retrieve SHA256.sig"
				[[ ${TGZ%/*} == ${XTGZ%/*} ]] && _sigdone=1
			fi
			echo "===> Verifying ${_url##*/} against ${_key}"
			(cd ${WRKDIR} && /usr/bin/signify -qC -p ${_key} -x SHA256.sig ${_url##*/}) || \
				error_rm_wrkdir "${_url##*/}: signature/checksum failed"
		fi
d146 8
a157 11
# prepare TEMPROOT content from a src dir and create cksum file 
prepare_src() {
	[[ -z ${SRCDIR} ]] && return
	SRCSUM=srcsum
	# 2>/dev/null: distribution-etc-root-var complains /var/tmp is world writable
	(cd ${SRCDIR}/etc && \
	 make DESTDIR=${TEMPROOT} distribution-etc-root-var >/dev/null 2>&1 && \
	 cd ${TEMPROOT} && find . -type f | xargs sha256 -h ${WRKDIR}/${SRCSUM}) || \
		error_rm_wrkdir "failed to populate from ${SRCDIR} and create checksum file"
}

d261 2
a262 3
	# new master.passwd and group files:
	# - after extracting the sets (so we have the new files)
	# - before running distribution-etc-root-var (using files from SRCDIR)
a265 1
	prepare_src
d268 1
a268 1
	for i in ${SRCSUM} ${ETCSUM} ${XETCSUM} ${PKGSUM}; do
d396 2
a397 7
	if [ -n "${SRCDIR}" ]; then
		local _pw="${SRCDIR}/etc/master.passwd"
		local _gr="${SRCDIR}/etc/group"
	else
		local _pw="${TEMPROOT}/etc/master.passwd"
		local _gr="${TEMPROOT}/etc/group"
	fi
a803 1
	clean_src
a818 13
	s)
		if [ -d "${OPTARG}" ]; then
			if [ -n "${PKGMODE}" ]; then
				usage
				error_rm_wrkdir "conflicting options"
			fi
			SRCDIR="$(readlink -f ${OPTARG})"
			[[ -f ${SRCDIR}/etc/Makefile ]] || \
				error_rm_wrkdir "${SRCDIR}: invalid \"src\" tree, missing ${SRCDIR}/etc/Makefile"
			continue
		fi
		TGZ="${OPTARG}"
		;;
d838 9
a846 16
if [ -z "${SRCDIR}" -a -z "${TGZ}" -a -z "${XTGZ}" ]; then
	if [ -z "${PKGMODE}" ]; then
		if [ -n "${SM_PATH}" ]; then
			TGZ="${SM_PATH}/etc${RELINT}.tgz"
			if [ -d ${DESTDIR}/etc/X11 ]; then
				XTGZ="${SM_PATH}/xetc${RELINT}.tgz"
			fi
		elif [ -f "/usr/src/etc/Makefile" ]; then
			SRCDIR=/usr/src
		else
			usage
			error_rm_wrkdir "please specify a valid path to src or (x)etcXX.tgz"
		fi
	fi
else
	if [ -n "${PKGMODE}" ]; then
@


1.150
log
@Steal stripcom() from /etc/rc to parse sysmerge.ignore.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.149 2014/08/10 17:15:18 jmc Exp $
d856 1
a856 1
			SRCDIR="${OPTARG}"
@


1.149
log
@- add -p to SYNOPSIS
- the argument to -s is not optional

ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.148 2014/08/09 12:46:51 ajacoutot Exp $
d78 14
d340 2
a341 4
	if [ -r /etc/sysmerge.ignore ]; then
		while read i; do \
			IGNORE_FILES="${IGNORE_FILES} $(echo ${i} | sed -e 's,\.\.,,g' -e 's,#.*,,g')"
		done < /etc/sysmerge.ignore
d344 1
a344 1
		rm -rf ${TEMPROOT}/${i};
@


1.148
log
@Extend comment.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.147 2014/08/09 12:45:03 ajacoutot Exp $
d67 1
a67 1
	echo "usage: ${0##*/} [-bdS] [-p | [-s [src | etcXX.tgz]] [-x xetcXX.tgz]]" >&2
@


1.147
log
@Initial support for handling configuration files from packages
(aka @@sample) -- `sysmerge -p`
Worked done at g2k14.
Committing early so we have plenty of time for testing.

with help from espie@@
thanks to landry@@ for feedback on initial testing
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.146 2014/08/09 12:34:05 ajacoutot Exp $
d238 1
a238 1
			#   because the dir is not a @@sample
@


1.146
log
@sysctl.conf is an example.
Tweak error output.
Mention that `-S' has no effect when sets aren't used.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.145 2014/08/08 16:38:25 ajacoutot Exp $
d23 3
a25 2
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE EGSUM ETCSUM NEED_NEWALIASES
unset NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK SRCDIR SRCSUM TGZ XETCSUM XTGZ
d55 1
a55 1
	for i in ${DESTDIR}/${DBDIR}/.{${SRCSUM},${ETCSUM},${XETCSUM},${EGSUM}}.bak; do
d67 1
a67 1
	echo "usage: ${0##*/} [-bdS] [-s [src | etcXX.tgz]] [-x xetcXX.tgz]" >&2
d103 1
d128 1
d167 93
d274 1
d278 2
a279 1
	for i in ${SRCSUM} ${ETCSUM} ${XETCSUM}; do
d417 1
a417 1
	# when running with '-x' only
d707 1
d827 1
a827 1
while getopts bdSs:x: arg; do
d835 3
d840 4
d871 11
a881 4
	if [ -n "${SM_PATH}" ]; then
		TGZ="${SM_PATH}/etc${RELINT}.tgz"
		if [ -d ${DESTDIR}/etc/X11 ]; then
			XTGZ="${SM_PATH}/xetc${RELINT}.tgz"
d883 3
a885 3
	elif [ -f "/usr/src/etc/Makefile" ]; then
		SRCDIR=/usr/src
	else
d887 1
a887 1
		error_rm_wrkdir "please specify a valid path to src or (x)etcXX.tgz"
@


1.145
log
@Tweak verbiage.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.144 2014/07/30 16:54:09 ajacoutot Exp $
d79 1
a79 1
	(($#)) && echo "**** ERROR: $@@"
d609 1
a609 1
			${COMPFILE} != ./etc/@@(fbtab|sysctl.conf|ttys) && \
@


1.144
log
@Properly warn when an example changes and the corresponding file is found
under /etc.

issue reported by Nathanael Rensen
"fine" deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.143 2014/07/20 08:19:59 ajacoutot Exp $
d645 1
a645 1
		warn "example file(s) changed for:${_egmods}"
d689 1
a689 1
		report "===> Example(s) with corresponding used files modified since last run"
@


1.143
log
@Fix auto-upgradable files detection.

from Nathanael Rensen, thanks!
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.142 2014/07/18 10:43:29 ajacoutot Exp $
d635 1
a635 1
		EGMODS="$(sha256 -c ${DESTDIR}/${DBDIR}/${EGSUM} 2>/dev/null | grep 'FAILED$' | awk '{ print $2 }' | sed -e "s,:,,")"
@


1.142
log
@Cleanups:
- links are already ignored when creating the sums
- better CVSID match
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.141 2014/07/15 15:30:56 ajacoutot Exp $
d197 1
a197 1
			_D=$(diff -u ${WRKDIR}/${i} ${DESTDIR}/${DBDIR}/${i} | grep -E '^\+' | sed '1d' | awk '{print $3}')
@


1.141
log
@typo
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.140 2014/07/15 09:27:04 ajacoutot Exp $
d117 1
a117 1
			find . -type f -and ! -type l | xargs sha256 -h ${WRKDIR}/${_set}sum) || \
d160 1
a160 1
	 cd ${TEMPROOT} && find . -type f -and ! -type l | xargs sha256 -h ${WRKDIR}/${SRCSUM}) || \
d611 2
a612 2
			CVSID1=$(grep "[$]OpenBSD:" ${DESTDIR}${COMPFILE#.} 2>/dev/null)
			CVSID2=$(grep "[$]OpenBSD:" ${COMPFILE} 2>/dev/null) || CVSID2=none
@


1.140
log
@/var/db/sysmerge -> /usr/share/sysmerge

ok deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.139 2014/07/13 07:12:41 ajacoutot Exp $
d113 2
a114 2
		tar -tzf "${_tgz}" .${DBDIR}/sysmerge/${_set}sum >/dev/null ||
			error_rm_wrkdir "${_tgz##*/}: badly formed \"${_set}\" set, lacks .${DBDIR}/sysmerge/${_set}sum"
@


1.139
log
@Also ignore examplessum.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.138 2014/07/12 22:06:11 ajacoutot Exp $
d39 1
a39 1
DBDIR="${DBDIR:=/var/db/sysmerge}"
d113 2
a114 2
		tar -tzf "${_tgz}" ./var/db/sysmerge/${_set}sum >/dev/null ||
			error_rm_wrkdir "${_tgz##*/}: badly formed \"${_set}\" set, lacks ./var/db/sysmerge/${_set}sum"
d220 1
a221 1
		      /var/db/sysmerge/{etc,examples,xetc}sum
@


1.138
log
@egsum -> examplessum
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.137 2014/07/12 16:26:35 ajacoutot Exp $
d221 1
a221 1
		      /var/db/sysmerge/{etc,xetc}sum
@


1.137
log
@Extend output a bit.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.136 2014/07/12 15:58:14 ajacoutot Exp $
d632 1
a632 1
	EGSUM=egsum
@


1.136
log
@Use sha256(1) for compared files, just like we do for examples.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.135 2014/07/12 15:31:54 ajacoutot Exp $
d689 1
a689 1
		report "===> Example(s) modified since last run"
@


1.135
log
@Initial support for /etc/examples.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.134 2014/07/10 11:00:03 ajacoutot Exp $
d117 2
a118 3
			tar -tzf "${_tgz}" | while read _f; do
				[[ ! -h ${_f} ]] && cksum ${_f} >> ${WRKDIR}/${_set}sum; done) || \
					error_rm_wrkdir "failed to extract ${_tgz} and create checksum file"
d160 1
a160 1
	 cd ${TEMPROOT} && find . -type f -and ! -type l | xargs cksum > ${WRKDIR}/${SRCSUM}) || \
d188 1
a188 1
					cksum -c ${DESTDIR}/${DBDIR}/${i} 2>/dev/null | awk '/OK/ { print $2 }' | sed 's/[:]//')
d200 1
a200 1
				CURSUM=$(cd ${DESTDIR:=/} && cksum ${_d} 2>/dev/null)
@


1.134
log
@/var/games/tetris.scores will move away from the etc set.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.133 2014/03/27 07:27:04 ajacoutot Exp $
d23 2
a24 2
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE ETCSUM NEED_NEWALIASES NEWGRP
unset NEWUSR NEED_REBOOT NOSIGCHECK SRCDIR SRCSUM TGZ XETCSUM XTGZ
d54 1
a54 1
	for i in ${DESTDIR}/${DBDIR}/.{${SRCSUM},${ETCSUM},${XETCSUM}}.bak; do
d80 2
d91 1
a91 1
trap "restore_sum; clean_src; error_rm_wrkdir; exit 1" 1 2 3 13 15
d554 1
a554 1
			echo "\n===> ${COMPFILE} will remain for your consideration"
d632 27
d689 5
d785 1
@


1.133
log
@restore_sum: remove newly created sum file(s).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.132 2014/03/26 23:03:59 ajacoutot Exp $
a220 1
		      /var/games/tetris.scores
@


1.132
log
@login.conf(5) is not special anymore.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.131 2014/03/24 15:20:32 ajacoutot Exp $
d62 1
@


1.131
log
@Rework the way we fetch and verify sets to simplify the process.
Don't fetch SHA256 twice when we are updating from the same repo.
Better output.

Simplify extract_set (becomes extract_sets and deal with all sets at once).

Make sure we cannot pass -s xetcXX and/or -x etcXX.
Bring consistency in condition evaluations.
Drop some unused variables.

with inputs from rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.130 2014/03/22 12:33:36 ajacoutot Exp $
d608 1
a608 1
			${COMPFILE} != ./etc/@@(fbtab|login.conf|sysctl.conf|ttys) && \
@


1.130
log
@Fix trap: do not remove the entire WRKDIR -- we may have our backed up files
in there.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.129 2014/03/22 12:26:03 ajacoutot Exp $
d23 2
a24 3
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE EDIT ETCSUM NEED_NEWALIASES
unset NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK RELINT SIGFETCHED SRCDIR SRCSUM
unset TGZ XETCSUM XTGZ
d46 1
a46 1
	[ -n "${SRCDIR}" ] && \
d83 1
d95 1
a95 1
# extract (x)etcXX.tgz and create cksum file;
d97 28
a124 20
# takes file and setname ('etc' or 'xetc') as arguments
extract_set() {
	[[ -z $1 ]] && return
	local _tgz=$(readlink -f "$1") _set=$2 _f
	typeset -u _SETSUM=${_set}sum
	eval ${_SETSUM}=${_set}sum
	(cd ${TEMPROOT} && tar -xzphf "${_tgz}" && \
		tar -tzf "${_tgz}" | while read _f; do
			[ ! -h ${_f} ] && cksum ${_f} >> ${WRKDIR}/${_set}sum; done) || \
				error_rm_wrkdir "failed to extract ${_tgz} and create checksum file"
	rm "${_tgz}"
}

# fetch and check if tgz is valid;
# stores local path to tgz in TGZ or XTGZ;
# takes url or filename and setname ('etc' or 'xetc') as arguments;
# verify SHA256.sig, abort on failure
get_set() {
	local _url=$1 _set=$2
	local _tgz=${WRKDIR}/${_url##*/}
d126 8
a133 5
	[ -f "${_url}" ] && _url="file://$(readlink -f ${_url})"
	[[ ${_set} == etc ]] && TGZ=${_tgz} || XTGZ=${_tgz}
	if [[ ${_url} == @@(file|ftp|http|https)://*/*[!/] ]]; then
		echo "===> Fetching from ${_url%/*}"
		/usr/bin/ftp -D "===> Getting" -Vm -k "${FTP_KEEPALIVE-0}" -o "${_tgz}" "${_url}" || \
d135 14
a148 13
	else
			error_rm_wrkdir "${_url}: no such file"
	fi
	if [ -z "${NOSIGCHECK}" ]; then
		echo "===> Verifying against ${_key}"
		(cd ${WRKDIR} && 
			/usr/bin/ftp -D "===> Getting" -Vm -k "${FTP_KEEPALIVE-0}" -o - "${_url%/*}/SHA256.sig" | \
				/usr/bin/signify -qC -p ${_key} -x - ${_url##*/}) || \
				error_rm_wrkdir "SHA256.sig: signature/checksum failed"
	else
		tar -tzf "${_tgz}" ./var/db/sysmerge/${_set}sum >/dev/null || \
			error_rm_wrkdir "${_tgz##*/}: badly formed \"${_set}\" set, lacks ./var/db/sysmerge/${_set}sum"
	fi
a170 3
	extract_set "${TGZ}" etc
	extract_set "${XTGZ}" xetc

d175 1
a176 1

d202 1
a202 1
			[ -n "${_array}" ] && set -A AUTO_UPG -- ${_array}
d225 1
a225 1
		[ -z "${CF_DIFF}" ] && IGNORE_FILES="${IGNORE_FILES} ${cf}"
d255 1
a255 1
	[ -z "${INSTDIR}" ] && INSTDIR=/
d300 1
a300 1
	[ ! -d "${_LINKF}" ] && \
d318 3
d433 1
a433 1
					[ "${i}" = "${COMPFILE}" ] && FORCE_UPG=1
d487 1
a487 1
			if [[ ${COMPFILE} != ./etc/hosts ]]; then
d578 1
a578 1
				[ -f "${COMPFILE}" ] && rm "${COMPFILE}"
d585 1
a585 1
		[ -h "${COMPFILE}" ] && IS_LINK=1
d612 1
a612 1
			[ "${CVSID2}" = "${CVSID1}" ] && rm "${COMPFILE}"
d634 1
a634 1
	[ -d "${BKPDIR}" ] && FILES_IN_BKPDIR=$(find ${BKPDIR} -type f -size +0)
d656 2
a657 2
		[ -n "${NEWUSR}" ] && report "user(s): ${NEWUSR[@@]}"
		[ -n "${NEWGRP}" ] && report "group(s): ${NEWGRP[@@]}"
d665 1
a665 1
	[ -n "${FILES_IN_TEMPROOT}" ] && \
d668 1
a668 1
	[ -n "${NEED_NEWALIASES}" ] && \
d671 1
a671 1
	[ -n "${NEED_REBOOT}" ] && \
d676 1
a676 1
	[ -n "${XTGZ}" ] && \
d705 2
a706 2
			SRCDIR=${OPTARG}
			[ -f "${SRCDIR}/etc/Makefile" ] || \
d710 1
a710 1
		get_set "${OPTARG}" etc
d716 1
a716 1
		get_set "${OPTARG}" xetc
d733 1
a733 1
		get_set "${SM_PATH}/etc${RELINT}.tgz" etc
d735 1
a735 1
			get_set "${SM_PATH}/xetc${RELINT}.tgz" xetc
d748 1
@


1.129
log
@Also remove TEMPROOT in error_rm_wrkdir.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.128 2014/03/22 11:16:42 ajacoutot Exp $
d88 1
a88 1
trap "restore_sum; clean_src; rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15
@


1.128
log
@Make sure to add missing users/groups _before_ running the
distribution-etc-root-var target; otherwise mtree(8) can fail.

issue reported and debugged by deraadt@@
ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.127 2014/03/21 08:13:57 ajacoutot Exp $
d82 1
@


1.127
log
@Use ftp -D.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.126 2014/03/21 08:02:11 ajacoutot Exp $
a157 1
	prepare_src
d161 8
d179 1
a179 4
						# sanity check: _always_ compare master.passwd(5) and group(5)
						# we don't want to have missing system user(s) and/or group(s)
						[ ${_r} != ./etc/master.passwd -a ${_r} != ./etc/group ] && \
							rm -f ${TEMPROOT}/${_r}
d201 1
d204 1
a277 4
	/etc/master.passwd)
		echo " (running pwd_mkdb(8))"
		pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd
		;;
d298 34
d406 1
a406 1
	local i _g _gid _merge_pwd _merge_grp _u CAN_INSTALL HANDLE_COMPFILE NO_INSTALLED
a431 39
				# automatically install missing users
				if [ "${COMPFILE}" = "./etc/master.passwd" ]; then
					while read l; do
						_u=$(echo ${l} | awk -F ':' '{ print $1 }')
						if [ "${_u}" != "root" ]; then
							if [ -z "$(grep -E "^${_u}:" ${DESTDIR}${COMPFILE#.})" ]; then
								echo "===> Adding the ${_u} user"
								if ${DESTDIR:+chroot ${DESTDIR}} chpass -la "${l}"; then
									set -A NEWUSR -- ${NEWUSR[@@]} ${_u}
								else
									_merge_pwd=1
								fi
							fi
						fi
					done < ${COMPFILE}
					if [ -z ${_merge_pwd} ]; then
						rm "${TEMPROOT}${COMPFILE#.}"
						return
					fi
				fi
				# automatically install missing groups
				if [ "${COMPFILE}" = "./etc/group" ]; then
					while read l; do
						_g=$(echo ${l} | awk -F ':' '{ print $1 }')
						_gid=$(echo ${l} | awk -F ':' '{ print $3 }')
						if [ -z "$(grep -E "^${_g}:" ${DESTDIR}${COMPFILE#.})" ]; then
							echo "===> Adding the ${_g} group"
							if ${DESTDIR:+chroot ${DESTDIR}} groupadd -g "${_gid}" "${_g}"; then
								set -A NEWGRP -- ${NEWGRP[@@]} ${_g}
							else
								_merge_grp=1
							fi
						fi
					done < ${COMPFILE}
					if [ -z ${_merge_grp} ]; then
						rm "${TEMPROOT}${COMPFILE#.}"
						return
					fi
				fi
d474 1
a474 1
			if [[ ${COMPFILE} != ./etc/@@(master.passwd|group|hosts) ]]; then
d551 1
a551 1
	local _c1 _c2 _c3 COMPFILE CVSID1 CVSID2
a555 2
	# group and master.passwd need to be handled first in case
	# install_file needs a new user/group;
d557 3
a559 4
	_c1="./etc/group ./etc/master.passwd"
	_c2=$(find . -type f -or -type l | grep -vE '^./etc/(group|master.passwd|mail/aliases)$')
	_c3=$(find . -type f -name aliases)
	for COMPFILE in ${_c1} ${_c2} ${_c3}; do
d561 1
a561 1
		# treat empty files the same as IS_BINFILE to avoid comparing them
a564 1
				# group and master.passwd are always in the _c1 list
@


1.126
log
@Fix small regression when not using a full path to sets.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.125 2014/03/20 09:00:09 ajacoutot Exp $
d121 1
a121 1
		/usr/bin/ftp -Vm -k "${FTP_KEEPALIVE-0}" -o "${_tgz}" "${_url}" || \
d129 1
a129 1
			/usr/bin/ftp -Vm -k "${FTP_KEEPALIVE-0}" -o - "${_url%/*}/SHA256.sig" | \
@


1.125
log
@Cope with recent signify(1) changes and simplify getting/checking the sets.

ok sthen@@ rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.124 2014/03/18 18:03:44 ajacoutot Exp $
d118 1
d128 1
a128 1
		cd ${WRKDIR} && 
d130 1
a130 1
				/usr/bin/signify -qC -p ${_key} -x - ${_url##*/} || \
a135 1
	[[ ${_set} == etc ]] && TGZ=${_tgz} || XTGZ=${_tgz}
@


1.124
log
@Drop the check for badly formed *etc sets when we check signatures; it saves
us time and if the sets are signed we can assume they are legit (yes, I am
an assumer).
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.123 2014/03/06 15:07:11 ajacoutot Exp $
a43 1
SIGHASH=SHA256
a81 1
	rm -f ${WRKDIR}/*${SIGHASH}{,.sig}
d94 1
a94 6
# takes 2 arguments: output file and URL
fetch() {
	/usr/bin/ftp -V -m -k "${FTP_KEEPALIVE-0}" -o "$1" "$2" >/dev/null
}

# extract and verify (x)etcXX.tgz and create cksum file;
d109 1
a109 2
# fetch and check if file is a valid (x)etcXX.tgz;
# fetch and signature file;
d111 2
a112 1
# takes url or filename and setname ('etc' or 'xetc') as arguments
d114 3
a116 4
	local _tgz=${WRKDIR}/${1##*/} _url=$1 _set=$2
	[ -n "${SM_PATH}" ] && \
		local _sigfile=${WRKDIR}/${SIGHASH} || \
		local _sigfile=${WRKDIR}/${_set}-${SIGHASH} 
d119 2
a120 2
		echo "===> Fetching ${_url}"
		fetch "${_tgz}" "${_url}" || \
a124 1
	[[ ${_set} == etc ]] && TGZ=${_tgz} || XTGZ=${_tgz}
d126 5
a130 6
		if [ -z "${SIGFETCHED}" ]; then
			echo "===> Fetching ${_url%/*}/${SIGHASH}.sig"
			fetch "${_sigfile}.sig" "${_url%/*}/${SIGHASH}.sig" || \
				error_rm_wrkdir "could not retrieve ${SIGHASH}.sig"
		fi
		check_sig "${_sigfile}" "${_tgz}"
d135 1
a135 16
}

# verify ${SIGHASH}.sig and write ${WRKDIR}/(x)etc-${SIGHASH}, abort on failure;
# takes the signature file and set as arguments
check_sig() {
	local _sigfile=${1##*/} _tgz=${2##*/}
	local _key="/etc/signify/openbsd-${RELINT}-base.pub"
	echo "===> Verifying ${_tgz} using ${_sigfile}.sig against ${_key}"
	(cd ${WRKDIR} && \
		signify -V -e -p ${_key} -x "${_sigfile}.sig" -m ${_sigfile} >/dev/null) || \
			error_rm_wrkdir "${_sigfile}.sig: signature check failed"
	(cd ${WRKDIR} && \
		sha256 -C "${_sigfile}" "${_tgz}" >/dev/null) || \
			error_rm_wrkdir "${_tgz}: bad ${SIGHASH} checksum"
	[ -n "${SM_PATH}" -a -d ${DESTDIR}/etc/X11 -a -z "${SIGFETCHED}" ] && SIGFETCHED=1 && return
	rm ${WRKDIR}/${_sigfile}{,.sig}
a703 1
		unset SM_PATH
a709 1
		unset SM_PATH
@


1.123
log
@Always print the key signify(1) is using.

sure deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.122 2014/03/01 13:47:26 deraadt Exp $
a133 2
	tar -tzf "${_tgz}" ./var/db/sysmerge/${_set}sum >/dev/null || \
		error_rm_wrkdir "${_tgz##*/}: badly formed \"${_set}\" set, lacks ./var/db/sysmerge/${_set}sum"
d141 3
@


1.122
log
@start using the new officially named keys.  This is being done before
any snapshots come out which are signed with that key... but just give
it a day or two.
from ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.121 2014/02/08 23:58:06 ajacoutot Exp $
d151 1
a151 1
	echo "===> Verifying ${_tgz} signature and checksum"
@


1.121
log
@Only create DBDIR if it does not exist.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.120 2014/02/07 18:15:27 ajacoutot Exp $
d83 1
a83 1
	rm -f ${WRKDIR}/{,x}etc-${SIGHASH}{,.sig}
d150 1
a150 1
	local _key="/etc/signify/${RELINT}base.pub"
@


1.120
log
@When using SM_PATH, fetch the SHA256 file only once since we will not be
using multiple repos.

ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.119 2014/02/05 15:49:15 ajacoutot Exp $
a174 1
	mkdir -p ${DESTDIR}/${DBDIR} || error_rm_wrkdir "cannot create ${DESTDIR}/${DBDIR}"
d177 4
@


1.119
log
@Sync getopts with usage.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.118 2014/02/03 09:11:14 ajacoutot Exp $
d24 2
a25 2
unset NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK RELINT SRCDIR SRCSUM TGZ
unset XETCSUM XTGZ
d122 3
a124 1
	local _sigfile=${WRKDIR}/${_set}-${SIGHASH}
d137 5
a141 3
		echo "===> Fetching ${_url%/*}/${SIGHASH}.sig"
		fetch "${_sigfile}.sig" "${_url%/*}/${SIGHASH}.sig" || \
			error_rm_wrkdir "could not retrieve ${SIGHASH}.sig"
d158 1
d725 1
d732 1
@


1.118
log
@Really clean up after a run.
Factorize the sig file name.
Do not through an error when a file got manually removed but is still
present in the sum file.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.117 2014/01/28 09:25:22 ajacoutot Exp $
d705 1
a705 1
while getopts bds:Sx: arg; do
@


1.117
log
@Drop FETCH_CMD and always use ftp(1).
New fetch() function that wraps ftp(1) with our needed knobs
(courtesy of halex@@)

input from halex@@ rpe@@
ok halex@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.116 2014/01/27 17:40:42 ajacoutot Exp $
d44 1
d83 1
a83 1
	rm -f ${WRKDIR}/*SHA256*
d122 1
a122 1
	local _sigfile=${WRKDIR}/${_set}-SHA256
d135 3
a137 3
		echo "===> Fetching ${_url%/*}/SHA256.sig"
		fetch "${_sigfile}.sig" "${_url%/*}/SHA256.sig" || \
			error_rm_wrkdir "could not retrieve SHA256.sig"
d142 1
a142 1
# verify SHA256.sig and write ${WRKDIR}/(x)etc-SHA256, abort on failure;
d153 2
a154 1
			error_rm_wrkdir "${_tgz}: bad SHA256 checksum"
d183 1
d185 1
a185 1
					cksum -c ${DESTDIR}/${DBDIR}/${i} | awk '/OK/ { print $2 }' | sed 's/[:]//')
d199 2
a200 1
				CURSUM=$(cd ${DESTDIR:=/} && cksum ${_d})
@


1.116
log
@Only remove COMPFILE if it exists.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.115 2014/01/27 17:16:53 ajacoutot Exp $
a38 1
FETCH_CMD="${FETCH_CMD:=/usr/bin/ftp -V -m -k ${FTP_KEEPALIVE:-0}}"
d95 5
d111 1
a111 1
				error_rm_wrkdir "failed to extract/cksum ${_tgz}"
d125 1
a125 1
		${FETCH_CMD} -o ${_tgz} "${_url}" >/dev/null || \
d135 1
a135 1
		${FETCH_CMD} -o "${_sigfile}.sig" "${_url%/*}/SHA256.sig" >/dev/null || \
d149 1
a149 1
		error_rm_wrkdir "${_sigfile}.sig: signature check failed"
d152 1
a152 1
			error_rm_wrkdir "${_tgz}: bad checksum"
d163 1
a163 1
		error_rm_wrkdir "failed to populate and checksum from ${SRCDIR}"
@


1.115
log
@Move "EDIT" to the top.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.114 2014/01/27 17:06:56 ajacoutot Exp $
d579 2
a580 1
				rm "${COMPFILE}"
@


1.114
log
@Enhance errors output and display exactly what is going on.
req. by deraadt@@

Don't redirect error messages unless in a couple of places where it actually
makes sense.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.113 2014/01/23 22:05:59 rpe Exp $
d23 1
a23 1
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE ETCSUM NEED_NEWALIASES
d31 5
a329 5
				if [ -z "${VISUAL}" ]; then
					EDIT="${EDITOR:=/usr/bin/vi}"
				else
					EDIT="${VISUAL}"
				fi
@


1.113
log
@specifically NOT suppress signify error output

suggested by espie@@
OK deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.112 2014/01/23 08:23:45 ajacoutot Exp $
d24 2
a25 2
unset NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK SRCDIR SRCSUM TGZ XETCSUM
unset XTGZ
d27 1
d30 3
d38 1
d88 1
a88 1
	error_rm_wrkdir "need root privileges to run this script"
d102 1
a102 1
				error_rm_wrkdir "extract/cksum of ${_tgz} failed"
d116 4
a119 2
		${FETCH_CMD} -o ${_tgz} "${_url}" >/dev/null 2>&1 || \
			error_rm_wrkdir "could not retrieve ${_url}"
d122 2
a123 2
	tar -tzf "${_tgz}" ./var/db/sysmerge/${_set}sum >/dev/null 2>&1 || \
		error_rm_wrkdir "${_tgz} is not a valid ${_set}XX.tgz set"
d126 2
a127 2
		${FETCH_CMD} -o "${_sigfile}.sig" "${_url%/*}/SHA256.sig" >/dev/null 2>&1 || \
			error_rm_wrkdir "could not retrieve ${_url%/*}/SHA256.sig"
d136 1
a136 1
	local _key="/etc/signify/$(uname -r | tr -d '.')base.pub"
d140 1
a140 1
		error_rm_wrkdir "signature check failed for ${_sigfile}.sig"
d142 2
a143 2
		sha256 -C "${_sigfile}" "${_tgz}" >/dev/null 2>&1) || \
		error_rm_wrkdir "bad checksum for ${_tgz}"
d150 1
d154 1
a154 1
		error_rm_wrkdir "prepare/cksum of ${SRCDIR} failed"
d159 1
a159 1
	mkdir -p ${DESTDIR}/${DBDIR} || error_rm_wrkdir
d173 1
a173 1
					cksum -c ${DESTDIR}/${DBDIR}/${i} 2>/dev/null | awk '/OK/ { print $2 }' | sed 's/[:]//')
d187 1
a187 1
				CURSUM=$(cd ${DESTDIR:=/} && cksum ${_d} 2>/dev/null)
d230 1
a230 1
	if ! install -m "${1}" -o "${2}" -g "${3}" "${4}" "${5}" 2>/dev/null; then
d565 1
a565 1
	cd ${TEMPROOT} || error_rm_wrkdir
d618 1
a618 1
			if diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" >/dev/null 2>&1; then
d634 2
a635 2
	FILES_IN_TEMPROOT=$(find ${TEMPROOT} -type f ! -name \*.merged -size +0 2>/dev/null)
	FILES_IN_BKPDIR=$(find ${BKPDIR} -type f -size +0 2>/dev/null)
d682 1
a682 1
		find ${TEMPROOT} -type f -empty 2>/dev/null | xargs -r rm
d708 1
a708 1
				error_rm_wrkdir "${SRCDIR} is not a valid path to src"
d734 1
a734 2
		_relint=$(uname -r | tr -d '.')
		get_set "${SM_PATH}/etc${_relint}.tgz" etc
d736 1
a736 1
			get_set "${SM_PATH}/xetc${_relint}.tgz" xetc
@


1.112
log
@More output enhancements, put errors and warnings where they belong.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.111 2014/01/23 07:24:00 ajacoutot Exp $
d132 1
a132 1
		signify -V -e -p ${_key} -x "${_sigfile}.sig" -m ${_sigfile} >/dev/null 2>&1) || \
@


1.111
log
@Verify both the signature and the checksum in check_sig().
Fix a regression with '-s' and '-x' when not using full path to the sets.
Be a little bit more verbose about what we do.

ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.110 2014/01/22 10:40:07 ajacoutot Exp $
d61 1
a61 5
	echo "\t*** WARNING: $@@"
}

error() {
	echo "\t*** ERROR: $@@"
d70 1
a70 1
	(($#)) && error "$@@"
a81 1
	error "need root privileges to run this script"
d83 1
a83 1
	error_rm_wrkdir
d130 1
a130 1
	echo "===> Verifying \"${_set}\" set SHA256 signature and checksum"
d625 3
a627 4
	echo "===> Checking directory hierarchy permissions (running mtree(8))"
	mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U >/dev/null
	[ -n "${XTGZ}" ] && \
		mtree -qdef ${DESTDIR}/etc/mtree/BSD.x11.dist -p ${DESTDIR:=/} -U >/dev/null
a634 2
	FILES_IN_TEMPROOT=$(find ${TEMPROOT} -type f ! -name \*.merged -size +0 2>/dev/null)
	FILES_IN_BKPDIR=$(find ${BKPDIR} -type f -size +0 2>/dev/null)
d658 14
a680 9
	[ -n "${FILES_IN_TEMPROOT}" ] && \
		warn "some files are still left for comparison"

	[ -n "${NEED_NEWALIASES}" ] && \
		warn "newaliases(8) failed to run properly"

	[ -n "${NEED_REBOOT}" ] && \
		warn "some new/updated file(s) may require a reboot"

a733 1
		error "please specify a valid path to src or (x)etcXX.tgz"
d735 1
a735 1
		error_rm_wrkdir
@


1.110
log
@Do not bother comparing/merging empty files. Regression from previous
spotted by kettenis@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.109 2014/01/22 08:34:57 ajacoutot Exp $
a96 6
	local _sha256=${_set}-SHA256
	if [ -z "${NOSIGCHECK}" ]; then
		(cd ${WRKDIR} && sha256 -C ${_sha256} "${_tgz##*/}" >/dev/null 2>&1) || \
			error_rm_wrkdir "${_tgz##*/} checksum could not be verified against ${_sha256}.sig"
		rm "${WRKDIR}/${_sha256}"
	fi
d112 5
a116 4
	local _sigfile=${_set}-SHA256
	[ -f "${_url}" ] && _url="file://${_url}"
	if [[ ${_url} == @@(file|ftp|http|https)://*/*[!/] ]]; then 
		${FETCH_CMD} -o ${_tgz} "${_url}" >/dev/null || \
d123 2
a124 1
		${FETCH_CMD} -o "${WRKDIR}/${_sigfile}.sig" "${_url%/*}/SHA256.sig" >/dev/null 2>&1 || \
d126 1
a126 1
		check_sig "${_sigfile}"
d131 1
a131 1
# takes a file path as argument
d133 1
a133 1
	local _sigfile=${WRKDIR}/$1 _src
d135 7
a141 4
	echo "===> Verying ${_set} SHA256 signature"
	/usr/bin/signify -V -e -p ${_key} -x "${_sigfile}.sig" -m "${_sigfile}" 2>/dev/null || \
		error_rm_wrkdir "signature check for ${_sigfile}"
	rm "${_sigfile}.sig"
@


1.109
log
@Don't remove the SHA256 file twice.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.108 2014/01/22 08:25:16 ajacoutot Exp $
d574 8
a581 1
		[ ! -s "${COMPFILE}" -a -n "${DIFFMODE}" ] && IS_BINFILE=1
@


1.108
log
@Cleanup and simplify:

- rename restore_bak to restore_sum since this is what it does
- better clean up after ourselves so only user relevant files are left
  in the work directory after a run
- better handling of symlinks and make sure they match
- tweak output: no need to warn the user when we are finished, it is
  pretty obvious; output that we are veryfing sigs
- simplify signature handling:
  drop get_sig and get signatures at the same time we get the sets -- this
    allows to get a specific SHA256.sig file for each set
  check signature in check_sig() right after getting the corresponding set

ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.107 2014/01/21 07:58:08 ajacoutot Exp $
d142 1
a142 1
	rm "${_sigfile}" "${_sigfile}.sig"
@


1.107
log
@Protect variable names.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.106 2014/01/21 07:39:14 rpe Exp $
d24 2
a25 2
unset NEWGRP NEWUSR NEED_REBOOT NOSIGCHECK SETSRC SRCDIR SRCSUM TGZ
unset XETCSUM XTGZ
d42 1
a42 1
# restore files from backups or remove the newly generated sum files if
d44 1
a44 1
restore_bak() {
d75 4
d83 1
a83 1
trap "restore_bak; clean_src; rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15
d91 3
a93 3
# extract, verify (x)etcXX.tgz and create cksum file
# takes file- and setname ('etc' or 'xetc') as arguments
# stores sumfilename in ETCSUM or XETCSUM (see eval)
d97 5
a101 3
	if [ -z "$NOSIGCHECK" -a -f "${WRKDIR}/SHA256" ]; then
		(cd ${WRKDIR} && sha256 -C SHA256 "${_tgz##*/}" >/dev/null 2>&1) || \
			error_rm_wrkdir "${_tgz##*/} checksum could not be verified against SHA256.sig"
d109 1
d112 3
a114 1
# optionally fetch and check if file is a valid (x)etcXX.tgz
a115 1
# stores local path to tgz in TGZ or XTGZ
d118 1
d121 1
a121 1
		${FETCH_CMD} -o ${_tgz} "${_url}" || \
d127 5
d134 4
a137 6
# fetch, verify SHA256.sig and write ${WRKDIR}/SHA256 abort on failure
# unless NOSIGCHECK is set in which case try to fetch SHA256 at least
# takes a directory path, either where etcXX.tgz was fetched from or SM_PATH
get_sig() {
	[ -n "${NOSIGCHECK}" ] && return
	local _cfile=${WRKDIR}/SHA256 _src=${SETSRC:-$SM_PATH}
d139 4
a142 4
	[ -d "${_src}" ] && _src="file://${_src}"
	${FETCH_CMD} -o "${_cfile}.sig" "${_src}/SHA256.sig" >/dev/null 2>&1 && \
		signify -Vep ${_key} -x "${_cfile}.sig" -m "${_cfile}" || \
			error_rm_wrkdir "Signature check failed"
d160 1
a160 1
	
d198 1
d383 1
a383 3
	unset NO_INSTALLED
	unset CAN_INSTALL
	unset FORCE_UPG
d565 2
a566 3
	# use -size +0 to avoid comparing empty log files and device nodes;
	# however, we want to keep the symlinks; group and master.passwd
	# need to be handled first in case install_file needs a new user/group;
d569 1
a569 1
	_c2=$(find . -type f -size +0 -or -type l | grep -vE '^./etc/(group|master.passwd|mail/aliases)$')
d572 4
a575 2
		unset IS_BINFILE
		unset IS_LINK
d578 12
a619 2

	echo "===> Comparison complete"
d662 2
a700 1
		SETSRC=${OPTARG%/*}
a739 1
get_sig
@


1.106
log
@Add and enable signature checking per default.
Provide new option -S to skip that step.

idea and initial work from jturner@@
with feedback from deraadt@@
ok aja@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.105 2013/09/10 08:44:38 ajacoutot Exp $
d5 1
a5 1
# Copyright (c) 2008-2013 Antoine Jacoutot <ajacoutot@@openbsd.org>
d110 1
a110 1
	[ -f "${_url}" ] && _url="file://$_url"
d128 2
a129 2
	${FETCH_CMD} -o "$_cfile.sig" "$_src/SHA256.sig" >/dev/null 2>&1 && \
		signify -Vep ${_key} -x "$_cfile.sig" -m "$_cfile" || \
@


1.105
log
@Add support for the SM_PATH environment variable. This changes the
default behavior of sysmerge when no source is specified on the
command line:
* if SM_PATH is set, then sysmerge will search this path for etcXX.tgz
and/or xetcXX.tgz
* if SM_PATH is not set (the default), then the behaviour is the same
as before and /usr/src is used

idea from espie@@
man page refactoring jmc@@ (who else :-))
"good idea" krw@@
ok rpe@@ landry@@ espie@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.104 2013/03/22 08:20:43 ajacoutot Exp $
d24 2
a25 1
unset NEWGRP NEWUSR NEED_REBOOT SRCDIR SRCSUM TGZ XETCSUM XTGZ
d57 1
a57 1
	echo "usage: ${0##*/} [-bd] [-s [src | etcXX.tgz]] [-x xetcXX.tgz]" >&2
d87 1
a87 1
# extract (x)etcXX.tgz and create cksum file
d93 4
d109 2
a110 1
	local _tgz=$1 _url=$1 _set=$2
a111 1
		_tgz=${WRKDIR}/${_set}.tgz
d120 13
d661 1
a661 1
while getopts bds:x: arg; do
d677 4
d717 1
@


1.104
log
@Do not register symlinks in the sum files. This makes no sense and makes
sysmerge(8) output a warning when the target of the link does not yes
exist on the system.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.103 2013/03/02 09:11:15 ajacoutot Exp $
d677 7
a683 1
	if [ -f "/usr/src/etc/Makefile" ]; then
@


1.103
log
@Always compare aliases(5) at the end of the sysmerge(8) run after all
files have already been merged. This is needed in the case where the
syntax of smtpd.conf changed to prevent newaliases(8) from failing.

issue reported by todd@@
ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.102 2013/01/25 13:32:49 ajacoutot Exp $
d91 1
a91 1
	local _tgz=$(readlink -f "$1") _set=$2
d95 3
a97 2
	 tar -tzf "${_tgz}" | xargs cksum > ${WRKDIR}/${_set}sum) || \
		error_rm_wrkdir "extract/cksum of ${_tgz} failed"
d121 1
a121 1
	 cd ${TEMPROOT} && find . -type f | xargs cksum > ${WRKDIR}/${SRCSUM}) || \
@


1.102
log
@Rename some functions and bump copyright.
No functionnal change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.101 2013/01/04 07:56:36 rpe Exp $
d530 1
a530 1
	local _c1 _c2 COMPFILE CVSID1 CVSID2
d537 2
a538 1
	# need to be handled first in case install_file needs a new user/group
d540 3
a542 2
	_c2=$(find . -type f -size +0 -or -type l | grep -vE '(./etc/group|./etc/master.passwd)')
	for COMPFILE in ${_c1} ${_c2}; do
@


1.101
log
@simplify chroot cases

ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.100 2013/01/03 19:45:57 rpe Exp $
d5 1
a5 1
# Copyright (c) 2008, 2009, 2010, 2011, 2012 Antoine Jacoutot <ajacoutot@@openbsd.org>
d124 1
a124 1
do_populate() {
d190 1
a190 1
do_install_and_rm() {
d203 1
a203 1
mm_install() {
d216 1
a216 1
	do_install_and_rm "${FILE_MODE}" "${FILE_OWN}" "${FILE_GRP}" "${1}" "${DESTDIR}${INSTDIR}" || return
d251 1
a251 1
mm_install_link() {
d302 1
a302 1
				mm_install "${COMPFILE}" || \
d365 1
a365 1
					if mm_install "${COMPFILE}"; then
d428 1
a428 1
					if mm_install_link; then
d442 1
a442 1
				if mm_install "${COMPFILE}"; then
d479 1
a479 1
					if mm_install_link; then
d487 1
a487 1
					if mm_install "${COMPFILE}"; then
d529 1
a529 1
do_compare() {
d537 1
a537 1
	# need to be handled first in case mm_install needs a new user/group
d579 1
a579 1
do_post() {
d686 3
a688 3
do_populate
do_compare
do_post
@


1.100
log
@Refactor code for extracting and checksumming of (x)etcXX.tgz sets
or preparing from /usr/src into extract_set() and prepare_src().
- extend error handling and quoting of user supplied input
- move and rename get_sets() to get_set(), change parameter order
  and allow arbitrary filenames in url pattern (see r1.62 msg)

ok halex@@, 'go ahead' ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.99 2012/12/26 12:28:26 rpe Exp $
d239 1
a239 5
		if [ -n "${DESTDIR}" ]; then
			chroot ${DESTDIR} newaliases >/dev/null || export NEED_NEWALIASES=1
		else
			newaliases >/dev/null
		fi
d379 1
a379 6
								if [ -n "${DESTDIR}" ]; then
									chroot ${DESTDIR} chpass -la "${l}"
								else
									chpass -la "${l}"
								fi
								if (($? == 0)); then
d399 1
a399 6
							if [ -n "${DESTDIR}" ]; then
								chroot ${DESTDIR} groupadd -g "${_gid}" "${_g}"
							else
								groupadd -g "${_gid}" "${_g}"
							fi
							if (($? == 0)); then
@


1.99
log
@correction of the SRCDIR check
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.98 2012/12/26 10:38:10 rpe Exp $
d86 38
d125 1
a125 1
	local cf i _array _d _r _D _E _R _X CF_DIFF CF_FILES CURSUM IGNORE_FILES
d129 4
a132 22
	if [ -n "${SRCDIR}" ]; then
		SRCSUM=srcsum
		cd ${SRCDIR}/etc
		make DESTDIR=${TEMPROOT} distribution-etc-root-var >/dev/null 2>&1
		(cd ${TEMPROOT} && find . -type f | xargs cksum > ${WRKDIR}/${SRCSUM})
	fi

	if [ -n "${TGZ}" -o -n "${XTGZ}" ]; then
		for i in ${TGZ} ${XTGZ}; do
			tar -xzphf ${i} -C ${TEMPROOT};
		done
		if [ -n "${TGZ}" ]; then
			ETCSUM=etcsum
			_E=$(cd $(dirname ${TGZ}) && pwd)/$(basename ${TGZ})
			(cd ${TEMPROOT} && tar -tzf ${_E} | xargs cksum > ${WRKDIR}/${ETCSUM})
		fi
		if [ -n "${XTGZ}" ]; then
			XETCSUM=xetcsum
			_X=$(cd $(dirname ${XTGZ}) && pwd)/$(basename ${XTGZ})
			(cd ${TEMPROOT} && tar -tzf ${_X} | xargs cksum > ${WRKDIR}/${XETCSUM})
		fi
	fi
a652 11
get_sets() {
	local _etc=$1 _tgz=$2 _url=$2
	if [[ ${_url} == @@(file|ftp|http|https)://*/${_etc}[0-9][0-9].tgz ]]; then 
		_tgz=${WRKDIR}/${_etc}.tgz
		${FETCH_CMD} -o ${_tgz} ${_url} || \
			error_rm_wrkdir "could not retrieve ${_url}"
	fi
	tar tzf ${_tgz} ./var/db/sysmerge/${_etc}sum >/dev/null 2>&1 || \
		error_rm_wrkdir "${_tgz} is not a valid ${_etc}XX.tgz set"
	[[ ${_etc} == etc ]] && TGZ=${_tgz} || XTGZ=${_tgz}
}
d669 1
a669 1
		get_sets etc "${OPTARG}"
d672 1
a672 1
		get_sets xetc "${OPTARG}"
@


1.98
log
@Combine almost identical code for fetching and checking of the
etcXX.tgz/xetcXX.tgz sets into a more generic function get_sets().
Move the SRCDIR check into the getopts while-loop as well.

ok ajacoutot@@ halex@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.97 2012/12/25 13:26:45 rpe Exp $
d656 1
a656 1
			[ -f "${SRCDIR}/etc/Makefile" ] && \
@


1.97
log
@replace one grep with awk patterns and simplify another using -q

ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.96 2012/12/24 14:31:36 rpe Exp $
d24 1
a24 2
unset NEWGRP NEWUSR NEED_REBOOT SRCDIR SRCSUM TGZ TGZURL XETCSUM
unset XTGZ XTGZURL
d633 12
d656 3
a658 7
		elif [[ ${OPTARG} == @@(file|ftp|http|https)://*/etc[0-9][0-9].tgz ]]; then 
			TGZ=${WRKDIR}/etc.tgz
			TGZURL=${OPTARG}
			${FETCH_CMD} -o ${TGZ} ${TGZURL} || \
				error_rm_wrkdir "could not retrieve ${TGZURL}"
		else
			TGZ=${OPTARG}
d660 1
d663 1
a663 8
		if [[ ${OPTARG} == @@(file|ftp|http|https)://*/xetc[0-9][0-9].tgz ]]; then 
			XTGZ=${WRKDIR}/xetc.tgz
			XTGZURL=${OPTARG}
			${FETCH_CMD} -o ${XTGZ} ${XTGZURL} || \
				error_rm_wrkdir "could not retrieve ${XTGZURL}"
		else
			XTGZ=${OPTARG}
		fi
a687 9
[ -n "${SRCDIR}" -a ! -f "${SRCDIR}/etc/Makefile" ] && \
	error_rm_wrkdir "${SRCDIR} is not a valid path to src"

[ -n "${TGZ}" ] && ! tar tzf ${TGZ} ./var/db/sysmerge/etcsum >/dev/null 2>&1 && \
	error_rm_wrkdir "${TGZ} is not a valid etcXX.tgz set"

[ -n "${XTGZ}" ] && ! tar tzf ${XTGZ} ./var/db/sysmerge/xetcsum >/dev/null 2>&1 && \
	error_rm_wrkdir "${XTGZ} is not a valid xetcXX.tgz set"
	
@


1.96
log
@simplify things by using shell patterns

ok ajacoutot@@ halex@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.95 2012/12/23 11:50:19 rpe Exp $
d121 1
a121 1
					cksum -c ${DESTDIR}/${DBDIR}/${i} 2>/dev/null | grep OK | awk '{ print $2 }' | sed 's/[:]//')
d562 1
a562 1
			elif diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" | grep "Binary" >/dev/null 2>&1; then
@


1.95
log
@simplify setting FETCH_CMD and move it upwards to where the other
global variables are defined

ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.94 2012/12/19 19:40:30 rpe Exp $
d214 1
a214 1
	/etc/mail/access|/etc/mail/genericstable|/etc/mail/mailertable|/etc/mail/virtusertable)
d252 1
a252 1
	[ "$(expr "${MERGE_CMD}" : ^sdiff.*)" -gt 0 ] && \
d340 1
a340 1
	while [ "${HANDLE_COMPFILE}" = "v" -o "${HANDLE_COMPFILE}" = "todo" ]; do
d448 1
a448 1
			if [ "${COMPFILE}" != "./etc/master.passwd" -a "${COMPFILE}" != "./etc/group" -a "${COMPFILE}" != "./etc/hosts" ]; then
d549 3
a551 4
		if [ -z "${DIFFMODE}" -a "${COMPFILE}" != "./etc/fbtab" \
		    -a "${COMPFILE}" != "./etc/login.conf" \
		    -a "${COMPFILE}" != "./etc/sysctl.conf" \
		    -a "${COMPFILE}" != "./etc/ttys" -a -z "${IS_LINK}" ]; then
d645 1
a645 2
		elif echo ${OPTARG} | \
		    grep -qE '^(file|ftp|http|https)://.*/etc[0-9][0-9]\.tgz$'; then
d655 1
a655 2
		if echo ${OPTARG} | \
		    grep -qE '^(file|ftp|http|https)://.*/xetc[0-9][0-9]\.tgz$'; then
@


1.94
log
@use (()) for arithmetic tests

ok @@ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.93 2012/11/10 18:48:28 rpe Exp $
d30 1
a84 5
fi

if [ -z "${FETCH_CMD}" ]; then
	[ -z "${FTP_KEEPALIVE}" ] && FTP_KEEPALIVE=0
	FETCH_CMD="/usr/bin/ftp -V -m -k ${FTP_KEEPALIVE}"
@


1.93
log
@consistently use [ -n "${var}" ] instead of [ "${var}" ]
no functional change

discussed and ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.92 2012/11/10 16:02:52 rpe Exp $
d80 1
a80 1
if [ "$(id -u)" -ne 0 ]; then
d373 1
a373 1
								if [ $? -eq 0 ]; then
d398 1
a398 1
							if [ $? -eq 0 ]; then
d679 1
a679 1
if [ $# -ne 0 ]; then
@


1.92
log
@turn single-command if-then-fi blocks into "[ expr ] && command"
style lines. no change of functionality.

discussed with and ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.91 2012/11/10 09:50:05 rpe Exp $
d37 1
a37 1
	[ "${SRCDIR}" ] && \
d96 1
a96 1
	if [ "${SRCDIR}" ]; then
d103 1
a103 1
	if [ "${TGZ}" -o "${XTGZ}" ]; then
d107 1
a107 1
		if [ "${TGZ}" ]; then
d112 1
a112 1
		if [ "${XTGZ}" ]; then
d198 1
a198 1
	[ "${DESTDIR}${INSTDIR}" -a ! -d "${DESTDIR}${INSTDIR}" ] && \
d224 1
a224 1
		if [ "${DESTDIR}" ]; then
d259 1
a259 1
	while [ "${MERGE_AGAIN}" ]; do
d334 1
a334 1
	if [ "${BATCHMODE}" ]; then
d368 1
a368 1
								if [ "${DESTDIR}" ]; then
d393 1
a393 1
							if [ "${DESTDIR}" ]; then
d422 1
a422 1
			if [ "${IS_LINK}" ]; then
d586 1
a586 1
	if [ "${NEED_NEWALIASES}" ]; then
d594 1
a594 1
	if [ "${AUTO_INSTALLED_FILES}" ]; then
d598 1
a598 1
	if [ "${MERGED_FILES}" ]; then
d602 1
a602 1
	if [ "${FILES_IN_BKPDIR}" ]; then
d606 1
a606 1
	if [ "${NEWUSR}" -o "${NEWGRP}" ]; then
d608 2
a609 2
		[ "${NEWUSR}" ] && report "user(s): ${NEWUSR[@@]}"
		[ "${NEWGRP}" ] && report "group(s): ${NEWGRP[@@]}"
d612 1
a612 1
	if [ "${FILES_IN_TEMPROOT}" ]; then
d624 1
a624 1
	[ "${FILES_IN_TEMPROOT}" ] && \
d627 1
a627 1
	[ "${NEED_NEWALIASES}" ] && \
d630 1
a630 1
	[ "${NEED_REBOOT}" ] && \
@


1.91
log
@enhance error_rm_wrkdir() to print an error message if one is passed
as argument to replace some
        error "message"
        error_rm_workdir
lines by a single
        error_rm_workdir "message"
line.

ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.90 2012/11/08 08:56:41 rpe Exp $
d37 1
a37 1
	if [ "${SRCDIR}" ]; then
a38 1
	fi
d87 1
a87 3
	if [ -z "${FTP_KEEPALIVE}" ]; then
		FTP_KEEPALIVE=0
	fi
d130 1
a130 1
						if [ ${_r} != ./etc/master.passwd -a ${_r} != ./etc/group ]; then
a131 1
						fi
d140 1
a140 1
				if [ -n "$(grep "${CURSUM}" ${DESTDIR}/${DBDIR}/${i})" -a -z "$(grep "${CURSUM}" ${WRKDIR}/${i})" ]; then
a141 1
				fi
d143 1
a143 3
			if [ -n "${_array}" ]; then
				set -A AUTO_UPG -- ${_array}
			fi
d163 1
a163 3
		if [ -z "${CF_DIFF}" ]; then
			IGNORE_FILES="${IGNORE_FILES} ${cf}"
		fi
d193 1
a193 1
	if [ -z "${INSTDIR}" ]; then INSTDIR=/; fi
d198 1
a198 1
	if [ "${DESTDIR}${INSTDIR}" -a ! -d "${DESTDIR}${INSTDIR}" ]; then
a199 1
	fi
d256 1
a256 1
	if [ "$(expr "${MERGE_CMD}" : ^sdiff.*)" -gt 0 ]; then
a257 1
	fi
d291 1
a291 1
				if ! mm_install "${COMPFILE}"; then
a292 1
				fi
d349 1
a349 3
					if [ "${i}" = "${COMPFILE}" ]; then
						FORCE_UPG=1
					fi
d543 1
a543 3
		if [ -h "${COMPFILE}" ]; then
			IS_LINK=1
		fi
d559 1
a559 1
			if [ "${CVSID2}" = "${CVSID1}" ]; then rm "${COMPFILE}"; fi
d583 1
a583 1
	if [ -n "${XTGZ}" ]; then
a584 1
	fi
d608 2
a609 6
		if [ "${NEWUSR}" ]; then
			report "user(s): ${NEWUSR[@@]}"
		fi
		if [ "${NEWGRP}" ]; then
			report "group(s): ${NEWGRP[@@]}"
		fi
d624 1
a624 1
	if [ "${FILES_IN_TEMPROOT}" ]; then
a625 1
	fi
d627 1
a627 1
	if [ "${NEED_NEWALIASES}" ]; then
a628 1
	fi
d630 1
a630 1
	if [ "${NEED_REBOOT}" ]; then
a631 1
	fi
d654 1
a654 1
			if ! ${FETCH_CMD} -o ${TGZ} ${TGZURL}; then
a655 1
			fi
d665 1
a665 1
			if ! ${FETCH_CMD} -o ${XTGZ} ${XTGZURL}; then
a666 1
			fi
d694 1
a694 1
if [ -n "${SRCDIR}" -a ! -f "${SRCDIR}/etc/Makefile" ]; then
a695 1
fi
d697 1
a697 1
if [ -n "${TGZ}" ] && ! tar tzf ${TGZ} ./var/db/sysmerge/etcsum >/dev/null 2>&1; then
a698 1
fi
d700 1
a700 1
if [ -n "${XTGZ}" ] && ! tar tzf ${XTGZ} ./var/db/sysmerge/xetcsum >/dev/null 2>&1; then
a701 1
fi
@


1.90
log
@mark some more variables as local

ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.89 2012/08/28 05:42:07 ajacoutot Exp $
a55 6
# remove newly created work directory and exit with status 1
error_rm_wrkdir() {
	rmdir ${WRKDIR} 2>/dev/null
	exit 1
}

d72 7
d679 1
a679 2
				error "could not retrieve ${TGZURL}"
				error_rm_wrkdir
d691 1
a691 2
				error "could not retrieve ${XTGZURL}"
				error_rm_wrkdir
d721 1
a721 2
	error "${SRCDIR} is not a valid path to src"
	error_rm_wrkdir
d725 1
a725 2
	error "${TGZ} is not a valid etcXX.tgz set"
	error_rm_wrkdir
d729 1
a729 2
	error "${XTGZ} is not a valid xetcXX.tgz set"
	error_rm_wrkdir
@


1.89
log
@Always compare master.passwd(5) and group(5) regardless of their sums:
this is a sanity check to ensure no system user(s)/group(s) are missing.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.88 2012/08/20 14:10:30 ajacoutot Exp $
d45 1
a45 1
	local _i
d94 1
a94 1
	local _array _D _E _R _X CF_DIFF CF_FILES CURSUM IGNORE_FILES
d344 1
a344 1
	local _g _gid _merge_pwd _merge_grp _u CAN_INSTALL HANDLE_COMPFILE NO_INSTALLED
d542 1
a542 1
	local _c1 _c2 CVSID1 CVSID2
@


1.88
log
@Explicitely set local variables as such.
Remove unused DBFILE.

from robert at peichaer dot org
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.87 2012/08/20 06:10:24 ajacoutot Exp $
d130 5
a134 1
						rm -f ${TEMPROOT}/${_r}
@


1.87
log
@Don't unset NEED_NEWALIASES too soon or we will not get the warning.

from robert at peichaer dot org
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.86 2012/08/04 09:55:29 ajacoutot Exp $
d5 1
a6 1
# Copyright (c) 2008, 2009, 2010, 2011 Antoine Jacoutot <ajacoutot@@openbsd.org>
d45 1
d94 1
d140 1
a140 1
					local _array="${_array} ${_d}"
d193 1
a193 1
	local INSTDIR
a224 1
		DBFILE=$(echo ${1} | sed -e 's,.*/,,')
d246 1
d260 1
d340 1
a371 1
					local _merge_pwd
a396 1
					local _merge_grp
d538 1
d546 2
a547 2
	local _c1="./etc/group ./etc/master.passwd"
	local _c2=$(find . -type f -size +0 -or -type l | grep -vE '(./etc/group|./etc/master.passwd)')
d591 1
d652 1
a652 1
	unset FILES_IN_TEMPROOT NEED_NEWALIASES NEED_REBOOT
@


1.86
log
@Also log the file(s) we manually merged/installed as it's important
information.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.85 2012/08/04 07:02:14 ajacoutot Exp $
a597 1
		unset NEED_NEWALIASES
@


1.85
log
@Factorize common warn, error and report outputs into functions.
Remove bogus echo -n "foobar\n", leftover from display output tests.

No functional change but makes the code more readable.

from robert ar peichaer dor org
ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.84 2012/03/19 10:52:57 ajacoutot Exp $
d487 1
a487 1
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
d493 3
a495 1
					if ! mm_install "${COMPFILE}"; then
d507 3
a509 1
				merge_loop || HANDLE_COMPFILE="todo"
d606 4
@


1.84
log
@Use $() instead of backticks.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.83 2011/10/09 15:02:22 sthen Exp $
d65 12
d80 1
a80 1
	echo "\t*** ERROR: need root privileges to run this script"
d295 1
a295 1
					echo "\t*** WARNING: problem merging ${COMPFILE#.}"
d362 1
a362 1
						echo "\t*** WARNING: problem updating ${COMPFILE#.}"
d438 1
a438 1
						echo "\t*** WARNING: problem creating ${COMPFILE#.} link"
d451 1
a451 1
					echo "\t*** WARNING: problem installing ${COMPFILE#.}"
d489 1
a489 1
						echo "\t*** WARNING: problem creating ${COMPFILE#.} link"
d494 1
a494 1
						echo "\t*** WARNING: problem updating ${COMPFILE#.}"
d591 3
a593 3
		echo "===> A new ${DESTDIR}/etc/mail/aliases file was installed." >> ${REPORT}
		echo "However ${DESTDIR}/usr/bin/newaliases could not be run," >> ${REPORT}
		echo "you will need to rebuild your aliases database manually.\n" >> ${REPORT}
d600 2
a601 2
		echo "===> Automatically installed file(s)" >> ${REPORT}
		echo "${AUTO_INSTALLED_FILES}" >> ${REPORT}
d604 2
a605 2
		echo "===> Backup of replaced file(s) can be found under" >> ${REPORT}
		echo "${BKPDIR}\n" >> ${REPORT}
d608 1
a608 1
		echo "===> The following user(s)/group(s) have been added" >> ${REPORT}
d610 1
a610 1
			echo -n "user(s): ${NEWUSR[@@]}\n" >> ${REPORT}
d613 1
a613 1
			echo -n "group(s): ${NEWGRP[@@]}\n" >> ${REPORT}
d615 1
a615 1
		echo "" >> ${REPORT}
d618 2
a619 2
		echo "===> File(s) remaining for you to merge by hand" >> ${REPORT}
		echo "${FILES_IN_TEMPROOT}" >> ${REPORT}
d630 1
a630 1
		echo "\t*** WARNING: some files are still left for comparison"
d634 1
a634 1
		echo "\t*** WARNING: newaliases(8) failed to run properly"
d638 1
a638 1
		echo "\t*** WARNING: some new/updated file(s) may require a reboot"
d663 1
a663 1
				echo "\t*** ERROR: could not retrieve ${TGZURL}"
d676 1
a676 1
				echo "\t*** ERROR: could not retrieve ${XTGZURL}"
d700 1
a700 1
		echo "\t*** ERROR: please specify a valid path to src or (x)etcXX.tgz"
d707 1
a707 1
	echo "\t*** ERROR: ${SRCDIR} is not a valid path to src"
d712 1
a712 1
	echo "\t*** ERROR: ${TGZ} is not a valid etcXX.tgz set"
d717 1
a717 1
	echo "\t*** ERROR: ${XTGZ} is not a valid xetcXX.tgz set"
@


1.83
log
@add a missing newline when you merge login.conf if login.conf.db doesn't exist
ok aja@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.82 2011/09/01 07:52:46 ajacoutot Exp $
d27 2
a28 2
WRKDIR=`mktemp -d -p ${TMPDIR:=/var/tmp} sysmerge.XXXXXXXXXX` || exit 1
SWIDTH=`stty size | awk '{w=$2} END {if (w==0) {w=80} print w}'`
d46 1
a46 1
		_i=`basename ${i} .bak`
d67 1
a67 1
if [ "`id -u`" -ne 0 ]; then
d97 1
a97 1
			_E=$(cd `dirname ${TGZ}` && pwd)/`basename ${TGZ}`
d102 1
a102 1
			_X=$(cd `dirname ${XTGZ}` && pwd)/`basename ${XTGZ}`
d122 1
a122 1
			_D=`diff -u ${WRKDIR}/${i} ${DESTDIR}/${DBDIR}/${i} | grep -E '^\+' | sed '1d' | awk '{print $3}'`
d125 1
a125 1
				if [ -n "`grep "${CURSUM}" ${DESTDIR}/${DBDIR}/${i}`" -a -z "`grep "${CURSUM}" ${WRKDIR}/${i}`" ]; then
d150 1
a150 1
		CF_DIFF=`diff -q -I "##### " ${TEMPROOT}/${cf} ${DESTDIR}/${cf} 2>/dev/null`
d185 2
a186 2
	DIR_MODE=`stat -f "%OMp%OLp" "${TEMPROOT}/${INSTDIR}"`
	eval `stat -f "FILE_MODE=%OMp%OLp FILE_OWN=%Su FILE_GRP=%Sg" ${1}`
d211 1
a211 1
		DBFILE=`echo ${1} | sed -e 's,.*/,,'`
d233 2
a234 2
	_LINKT=`readlink ${COMPFILE}`
	_LINKF=`dirname ${DESTDIR}${COMPFILE#.}`
d236 1
a236 1
	DIR_MODE=`stat -f "%OMp%OLp" "${TEMPROOT}/${_LINKF}"`
d246 1
a246 1
	if [ "`expr "${MERGE_CMD}" : ^sdiff.*`" -gt 0 ]; then
d345 1
a345 1
				if [ -z "`diff -q -I'[$]OpenBSD:.*$' "${DESTDIR}${COMPFILE#.}" "${COMPFILE}"`" -o -n "${FORCE_UPG}" -o -n "${IS_BINFILE}" ]; then
d358 1
a358 1
						_u=`echo ${l} | awk -F ':' '{ print $1 }'`
d360 1
a360 1
							if [ -z "`grep -E "^${_u}:" ${DESTDIR}${COMPFILE#.}`" ]; then
d384 3
a386 3
						_g=`echo ${l} | awk -F ':' '{ print $1 }'`
						_gid=`echo ${l} | awk -F ':' '{ print $3 }'`
						if [ -z "`grep -E "^${_g}:" ${DESTDIR}${COMPFILE#.}`" ]; then
d528 1
a528 1
	local _c2=`find . -type f -size +0 -or -type l | grep -vE '(./etc/group|./etc/master.passwd)'`
d549 2
a550 2
			CVSID1=`grep "[$]OpenBSD:" ${DESTDIR}${COMPFILE#.} 2>/dev/null`
			CVSID2=`grep "[$]OpenBSD:" ${COMPFILE} 2>/dev/null` || CVSID2=none
d585 2
a586 2
	FILES_IN_TEMPROOT=`find ${TEMPROOT} -type f ! -name \*.merged -size +0 2>/dev/null`
	FILES_IN_BKPDIR=`find ${BKPDIR} -type f -size +0 2>/dev/null`
@


1.82
log
@Fix the display of running utilities (e.g. don't say we are running
makemap when we are in fact running newaliases...).
No functionnal change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.81 2011/08/03 13:33:29 ajacoutot Exp $
d204 2
@


1.81
log
@Remove the 'obsolete file(s)' feature. It may come back at some point
(doubtful) but since files tend to move from one set to another sysmerge
would end up tagging them as obsolete. I see no way to fix this...

req. by and ok deraadt@@, ok landry sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.80 2011/07/11 04:37:21 deraadt Exp $
a179 1
	unset RUNNING
d196 1
a196 1
		RUNNING=" (running MAKEDEV(8))"
d202 1
a202 1
			RUNNING=" (running cap_mkdb(1))"
d208 1
a208 1
		RUNNING=" (running makemap(8))"
d213 1
a213 1
		RUNNING=" (running newaliases(8))"
d221 1
a221 1
		RUNNING=" (running pwd_mkdb(8))"
d224 3
d279 1
a279 1
				echo "\n===> Merging ${COMPFILE#.}${RUNNING}"
d344 1
a344 1
					echo "===> Updating ${COMPFILE#.}${RUNNING}"
d433 1
a433 1
				echo "===> Installing ${COMPFILE#.}${RUNNING}"
d478 1
a478 1
					echo "===> Updating ${COMPFILE#.}${RUNNING}"
@


1.80
log
@EDITOR or VISUAL are not a path.  They are a string that needs to be
added to the front of the file, then sent through system() of equiv.
ok aja
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.79 2011/07/11 04:10:47 deraadt Exp $
d24 2
a25 2
unset NEWGRP NEWUSR NEED_REBOOT OBSOLETE_FILES SRCDIR SRCSUM TGZ TGZURL
unset XETCSUM XTGZ XTGZURL
a132 10
			# check for obsolete files
			awk '{ print $3 }' ${DESTDIR}/${DBDIR}/${i} | sed 's/^./X/;s/$/X/' > ${WRKDIR}/new
			awk '{ print $3 }' ${WRKDIR}/${i} | sed 's/^./X/;s/$/X/' > ${WRKDIR}/old
			if [ -n "`diff -q ${WRKDIR}/old ${WRKDIR}/new`" ]; then
				local _diff=`grep -v -f ${WRKDIR}/old ${WRKDIR}/new | sed 's/^X//;s/X$//'`
				_obs="${_diff} ${_obs}"
				set -A OBSOLETE_FILES -- ${_obs}
			fi
			rm ${WRKDIR}/new ${WRKDIR}/old
			
a590 5
	if [ "${OBSOLETE_FILES}" ]; then
		echo "===> File(s) removed from previous source (maybe obsolete)" >> ${REPORT}
		echo "${OBSOLETE_FILES[@@]}" | tr "[:space:]" "\n" >> ${REPORT}
		echo "" >> ${REPORT}
	fi
a616 4
	if [ "${OBSOLETE_FILES}" ]; then
		echo "\t*** WARNING: file(s) detected as obsolete: ${OBSOLETE_FILES[@@]}"
	fi

d625 1
a625 1
	unset FILES_IN_TEMPROOT OBSOLETE_FILES NEED_NEWALIASES NEED_REBOOT
@


1.79
log
@use more XXX for mktemp; ok ajacoutot
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.78 2011/07/06 23:35:07 ajacoutot Exp $
d282 1
a282 5
				if which ${EDIT} >/dev/null 2>&1; then
					${EDIT} ${COMPFILE}.merged
				else
					echo "\t*** ERROR: ${EDIT} can not be found or is not executable"
				fi
@


1.78
log
@Harden the checks on the provided sets/src to make sure they are legit.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.77 2011/07/06 17:38:15 ajacoutot Exp $
d27 1
a27 1
WRKDIR=`mktemp -d -p ${TMPDIR:=/var/tmp} sysmerge.XXXXX` || exit 1
@


1.77
log
@Consistency in stdout redirections.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.76 2011/07/06 17:19:06 ajacoutot Exp $
d663 1
a663 1
		if [ -f "${OPTARG}/etc/Makefile" ]; then
a664 3
		elif [ -f "${OPTARG}" ] && \
			tar tzf ${OPTARG} ./var/db/sysmerge/etcsum >/dev/null 2>&1 ; then
			TGZ=${OPTARG}
d674 1
a674 2
			echo "\t*** ERROR: ${OPTARG} is not a path to src nor etcXX.tgz"
			error_rm_wrkdir
d678 1
a678 4
		if [ -f "${OPTARG}" ] && \
			tar tzf ${OPTARG} ./var/db/sysmerge/xetcsum >/dev/null 2>&1 ; then \
			XTGZ=${OPTARG}
		elif echo ${OPTARG} | \
d687 1
a687 2
			echo "\t*** ERROR: ${OPTARG} is not a path to xetcXX.tgz"
			error_rm_wrkdir
d713 15
@


1.76
log
@Indent, no change.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.75 2011/07/05 21:43:45 ajacoutot Exp $
d38 1
a38 1
		cd ${SRCDIR}/gnu/usr.sbin/sendmail/cf/cf && make cleandir > /dev/null
d57 1
a57 1
	rmdir ${WRKDIR} 2> /dev/null
d87 1
a87 1
		make DESTDIR=${TEMPROOT} distribution-etc-root-var > /dev/null 2>&1
d113 1
a113 1
					cksum -c ${DESTDIR}/${DBDIR}/${i} 2> /dev/null | grep OK | awk '{ print $2 }' | sed 's/[:]//')
d124 1
a124 1
				CURSUM=$(cd ${DESTDIR:=/} && cksum ${_d} 2> /dev/null)
d160 1
a160 1
		CF_DIFF=`diff -q -I "##### " ${TEMPROOT}/${cf} ${DESTDIR}/${cf} 2> /dev/null`
d181 1
a181 1
	if ! install -m "${1}" -o "${2}" -g "${3}" "${4}" "${5}" 2> /dev/null; then
d282 1
a282 1
				if which ${EDIT} > /dev/null 2>&1; then
d559 2
a560 2
			CVSID1=`grep "[$]OpenBSD:" ${DESTDIR}${COMPFILE#.} 2> /dev/null`
			CVSID2=`grep "[$]OpenBSD:" ${COMPFILE} 2> /dev/null` || CVSID2=none
d566 1
a566 1
			if diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" > /dev/null 2>&1; then
d569 1
a569 1
			elif diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" | grep "Binary" > /dev/null 2>&1; then
d583 1
a583 1
	mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U > /dev/null
d585 1
a585 1
		mtree -qdef ${DESTDIR}/etc/mtree/BSD.x11.dist -p ${DESTDIR:=/} -U > /dev/null
d595 2
a596 2
	FILES_IN_TEMPROOT=`find ${TEMPROOT} -type f ! -name \*.merged -size +0 2> /dev/null`
	FILES_IN_BKPDIR=`find ${BKPDIR} -type f -size +0 2> /dev/null`
d666 1
a666 1
			tar tzf ${OPTARG} ./var/db/sysmerge/etcsum > /dev/null 2>&1 ; then
d683 1
a683 1
			tar tzf ${OPTARG} ./var/db/sysmerge/xetcsum > /dev/null 2>&1 ; then \
a709 1

@


1.75
log
@Make it possible to pass https:// and file:// (along with ftp:// and
http://) so that sysmerge(8) can work with URLs we use in the install
script.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.74 2011/05/09 14:18:34 ajacoutot Exp $
d112 2
a113 1
				_R=$(cd ${TEMPROOT} && cksum -c ${DESTDIR}/${DBDIR}/${i} 2> /dev/null | grep OK | awk '{ print $2 }' | sed 's/[:]//')
@


1.74
log
@Installing -> Updating.
Update copyright year while here.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.73 2011/05/08 09:49:34 ajacoutot Exp $
d668 1
a668 1
		    grep -qE '^(http|ftp)://.*/etc[0-9][0-9]\.tgz$'; then
d685 1
a685 1
		    grep -qE '^(http|ftp)://.*/xetc[0-9][0-9]\.tgz$'; then
@


1.73
log
@Make sure /etc/group and /etc/master.passwd are handled first in case we
need to install files or directories with newly added user/group
ownerships.

ok sthen@@ (on a slightly different diff)
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.72 2011/05/06 16:17:18 ajacoutot Exp $
d6 1
a6 1
# Copyright (c) 2008, 2009, 2010 Antoine Jacoutot <ajacoutot@@openbsd.org>
d489 1
a489 1
					echo "===> Installing ${COMPFILE#.}${RUNNING}"
d491 1
a491 1
						echo "\t*** WARNING: problem installing ${COMPFILE#.}"
@


1.72
log
@If it doesn't exist, create the directory holding the link we are about
to create, otherwise sysmerge will fail installing it. This can happen
for example when you only installed etcXX but run sysmerge against both
etcXX and xetcXX.

found the hard way by and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.71 2011/04/27 08:44:48 ajacoutot Exp $
d534 5
a538 2
	# however, we want to keep the symlinks
	for COMPFILE in `find . -type f -size +0 -or -type l`; do
@


1.71
log
@Cosmetic:
* "Installing foo" -> "{Merging,Upgrading} foo" where it makes sense
* remove the "it will remain to merge by hand" msg, too chatty and we
already tell the user at the end of a sysmerge run if some files are
still left to handle

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.70 2011/04/21 15:57:14 ajacoutot Exp $
d240 5
@


1.70
log
@Oopsy.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.69 2011/04/21 15:54:24 ajacoutot Exp $
d285 1
a285 1
				echo "\n===> Installing merged version of ${COMPFILE#.}${RUNNING}"
d287 1
a287 1
					echo "\t*** WARNING: problem installing ${COMPFILE#.}, it will remain to merge by hand"
d350 1
a350 1
					echo "===> Installing ${COMPFILE#.}${RUNNING}"
d354 1
a354 1
						echo "\t*** WARNING: problem installing ${COMPFILE#.}, it will remain to merge by hand"
d430 1
a430 1
						echo "\t*** WARNING: problem creating ${COMPFILE#.} link, manual intervention will be needed"
d443 1
a443 1
					echo "\t*** WARNING: problem installing ${COMPFILE#.}, it will remain to merge by hand"
d481 1
a481 1
						echo "\t*** WARNING: problem creating ${COMPFILE#.} link, manual intervention will be needed"
d486 1
a486 1
						echo "\t*** WARNING: problem installing ${COMPFILE#.}, it will remain to merge by hand"
@


1.69
log
@Better detection of obsolete files (naddy@@ reported a false positive).

help from and ok naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.68 2011/04/20 09:37:35 ajacoutot Exp $
d136 1
a136 1
				local _diff=`grep -v -F ${WRKDIR}/old ${WRKDIR}/new | sed 's/^X//;s/X$//'`
@


1.68
log
@Enhance sysmerge(8) output so that it is more readable and make it more
clear if there are any warning/error or things that should be handled
manually.
e.g. output from going from 4.8 to current:

# sysmerge -s etc49.tgz -x xetc49.tgz
===> Populating temporary root under /var/tmp/sysmerge.k1BnD/temproot
===> Starting comparison
===> Installing /.profile
===> Installing /etc/bgpd.conf
<...>
===> Installing /root/.profile
===> Installing /var/www/conf/mime.types
===> Comparison complete
===> Checking directory hierarchy permissions (running mtree(8))
===> Output log available at /var/tmp/sysmerge.k1BnD/sysmerge.log
        *** WARNING: file(s) detected as obsolete: /etc/portal.conf /etc/security /var/msgs/bounds
        *** WARNING: some new/updated file(s) may require a reboot

feedback and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.67 2011/04/18 07:50:29 ajacoutot Exp $
d133 2
a134 2
			awk '{ print $3 }' ${DESTDIR}/${DBDIR}/${i} > ${WRKDIR}/new
			awk '{ print $3 }' ${WRKDIR}/${i} > ${WRKDIR}/old
d136 2
a137 1
				local _obs="${_obs} `diff -C 0 ${WRKDIR}/new ${WRKDIR}/old | sed -n -e 's,^- .,,gp'`"
@


1.67
log
@Fix a bug where OBSOLETE_FILES would contain only the last appended
occurence.

with a small tweak from an ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.66 2010/11/11 10:46:10 ajacoutot Exp $
d68 1
a68 1
	echo " *** Error: need root privileges to run this script"
d82 1
a82 2
	echo "===> Creating and populating temporary root under"
	echo "     ${TEMPROOT}"
d188 1
d205 1
a205 2
		echo -n "===> A new ${DESTDIR%/}/dev/MAKEDEV script was installed, "
		echo "running MAKEDEV"
d211 1
a211 2
			echo -n "===> A new ${DESTDIR%/}/etc/login.conf file was installed, "
			echo "running cap_mkdb"
d217 1
a218 2
		echo -n "===> A new ${DESTDIR%/}/${1#.} file was installed, "
		echo "running makemap"
d222 1
a222 2
		echo -n "===> A new ${DESTDIR%/}/etc/mail/aliases file was installed, "
		echo "running newaliases"
d224 1
a224 1
			chroot ${DESTDIR} newaliases || export NEED_NEWALIASES=1
d226 1
a226 1
			newaliases
d230 1
a230 2
		echo -n "===> A new ${DESTDIR%/}/etc/master.passwd file was installed, "
		echo "running pwd_mkdb"
d278 1
a278 1
					echo " *** Error: ${EDIT} can not be found or is not executable"
d284 3
a286 5
				echo ""
				if mm_install "${COMPFILE}"; then
					echo "===> Merged version of ${COMPFILE} installed successfully"
				else
					echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d349 1
a350 1
						echo "===> ${COMPFILE} installed successfully"
d353 1
a353 1
						echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d429 1
a429 1
						echo " *** Warning: problem creating ${COMPFILE#.} link, manual intervention will be needed"
d438 1
a439 1
					echo "===> ${COMPFILE} installed successfully"
d442 1
a442 1
					echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d480 1
a480 1
						echo " *** Warning: problem creating ${COMPFILE#.} link, manual intervention will be needed"
d483 3
a485 4
					if mm_install "${COMPFILE}"; then
						echo "===> ${COMPFILE} installed successfully"
					else
						echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d572 1
a572 1
	echo "===> Making sure your directory hierarchy has correct perms, running mtree"
d596 2
a597 2
		echo "===> File(s) removed from previous source (maybe obsolete)" | tee -a ${REPORT}
		echo "${OBSOLETE_FILES[@@]}" | tr "[:space:]" "\n" | tee -a ${REPORT}
d616 1
a616 6
		if [ "${OBSOLETE_FILES}" -o "${FILES_IN_TEMPROOT}" -o "${NEED_NEWALIASES}" ]; then
			echo "===> Manual intervention may be needed, see ${REPORT}"
		else
			echo "===> Output log available at ${REPORT}"
		fi
		echo "===> When done, ${WRKDIR} and its subdirectories should be removed"
d622 12
d635 1
a635 2
		echo "\n *** WARNING: some new and/or updated file(s) may require a reboot!"
		unset NEED_REBOOT
d638 2
d663 1
a663 1
				echo " *** Error: could not retrieve ${TGZURL}"
d667 1
a667 1
			echo " *** Error: ${OPTARG} is not a path to src nor etcXX.tgz"
d680 1
a680 1
				echo " *** Error: could not retrieve ${XTGZURL}"
d684 1
a684 1
			echo " *** Error: ${OPTARG} is not a path to xetcXX.tgz"
d706 1
a706 1
		echo " *** Error: please specify a valid path to src or (x)etcXX.tgz"
@


1.66
log
@Unconfuse usage.

prodded by and ok espie@@, ok jmc@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.65 2010/11/08 14:05:09 ajacoutot Exp $
d137 2
a138 1
				OBSOLETE_FILES="`diff -C 0 ${WRKDIR}/new ${WRKDIR}/old | grep -E '^- .' | sed -e 's,^- .,,g'`"
d604 2
a605 2
		echo "===> File(s) removed from previous source (maybe obsolete)" >> ${REPORT}
		echo "${OBSOLETE_FILES}" >> ${REPORT}
@


1.65
log
@No need to differentiate newly installed files versus automatically
updated files in the output, this is confusing.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.64 2010/11/04 09:17:38 ajacoutot Exp $
d62 1
a62 1
	echo "usage: ${0##*/} [-bd] [-s src | etcXX.tgz] [-x xetcXX.tgz]" >&2
@


1.64
log
@Make sure we don't end up using /usr/src/etc if we forget to pass the
correct option (e.g. 'sysmerge /tmp/etc48.tgz'). Use OPTIND as all args
are handled by getopts we can catch misusage and we exit with an error.

from Brian Poole, thanks.
ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.63 2010/08/21 09:32:00 sthen Exp $
d425 1
a425 1
			echo "===> ${COMPFILE#.} was not found on the target system"
@


1.63
log
@Display usage information as well as the error when a path to
src/*.tgz isn't specified.  ok ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.62 2010/07/20 05:35:29 ajacoutot Exp $
d693 6
@


1.62
log
@Instead of checking for the *etcXX.tgz filename, check whether the
tarball contains ./var/db/sysmerge/etcsum or ./var/db/sysmerge/xetcsum.
First, it's more correct and second it allows people to rename the sets
without sysmerge bailing out.

feature requested and tested by oga@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.61 2010/07/17 06:47:13 ajacoutot Exp $
d700 1
@


1.61
log
@When running in full diff mode, don't wait for user input before
starting the comparison anymore. It does not bring us anything and
allows to chop 30 lines of the script.
While here, remove some empty lines.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.60 2010/07/06 12:02:54 ajacoutot Exp $
d654 2
a655 3
		elif [ -f "${OPTARG}" ] && echo -n ${OPTARG} | \
		    awk -F/ '{print $NF}' | \
		    grep '^etc[0-9][0-9]\.tgz$' > /dev/null 2>&1 ; then
d671 2
a672 3
		if [ -f "${OPTARG}" ] && echo -n ${OPTARG} | \
		    awk -F/ '{print $NF}' | \
		    grep '^xetc[0-9][0-9]\.tgz$' > /dev/null 2>&1 ; then
@


1.60
log
@Add a blank line between sections in the output log, it's more readable.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.59 2010/07/05 08:30:28 ajacoutot Exp $
a79 49

do_pre() {
	if [ -z "${SRCDIR}" -a -z "${TGZ}" -a -z "${XTGZ}" ]; then
		if [ -f "/usr/src/etc/Makefile" ]; then
			SRCDIR=/usr/src
		else
			echo " *** Error: please specify a valid path to src or (x)etcXX.tgz"
			error_rm_wrkdir
		fi
	fi

	TEMPROOT="${WRKDIR}/temproot"
	BKPDIR="${WRKDIR}/backups"

	if [ -z "${BATCHMODE}" -a -n "${DIFFMODE}" ]; then
		echo "\n===> Running ${0##*/} with the following settings:\n"
		if [ "${TGZURL}" ]; then
			echo " etc source:          ${TGZURL}"
			echo "                      (fetched in ${TGZ})"
		elif [ "${TGZ}" ]; then
			echo " etc source:          ${TGZ}"
		elif [ "${SRCDIR}" ]; then
			echo " etc source:          ${SRCDIR}"
		fi
		if [ "${XTGZURL}" ]; then
			echo " xetc source:         ${XTGZURL}"
			echo "                      (fetched in ${XTGZ})"
		else
			[ "${XTGZ}" ] && echo " xetc source:         ${XTGZ}"
		fi
		echo ""
		echo " base work directory: ${WRKDIR}"
		echo " temp root directory: ${TEMPROOT}"
		echo " backup directory:    ${BKPDIR}"
		echo ""
		echo -n "Continue? (y|[n]) "
		read ANSWER
		case "${ANSWER}" in
			y|Y)
				echo ""
				;;
			*)
				error_rm_wrkdir
				;;
		esac
	fi
}


a172 1

a185 1

a332 1

a528 1

a577 1

a642 1

d697 12
a708 1
do_pre
@


1.59
log
@Automatically install missing users and groups.
(does *NOT* touch existing users/groups)

"I like it" from several...
inputs from sthen@@ and halex@@
ok krw@@ halex@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.58 2010/06/27 00:07:22 ajacoutot Exp $
d659 1
@


1.58
log
@Suggest a reboot if "sh MAKEDEV" was run or login.conf was modified.

reported by matthieu@@
req. by and "I like it" deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.57 2010/02/06 14:02:36 ajacoutot Exp $
d24 2
a25 2
unset NEED_REBOOT OBSOLETE_FILES SRCDIR SRCSUM TGZ TGZURL XETCSUM XTGZ
unset XTGZURL
d415 51
d659 10
@


1.57
log
@Remove newly generated sum file(s) if it did not exist before and trap
is called.
While here, change shebang to /bin/ksh to reflect reality and bump
copyright year.

"checkbashisms says yes. :-)" && ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.56 2010/01/13 16:22:56 sthen Exp $
d24 2
a25 1
unset OBSOLETE_FILES SRCDIR SRCSUM TGZ TGZURL XETCSUM XTGZ XTGZURL
d258 1
d266 1
d615 1
a615 1
		if [ "${OBSOLETE_FILES}" -o "${FILES_IN_TEMPROOT}" ]; then
d624 5
@


1.56
log
@- move the separator so it's just displayed for files with diffs to
review, specifically it's now not printed for every auto-installed
file, giving a much more compact output. ok ajacoutot@@

- skip the blank line before 'Comparison complete' suggested by ajacoutot.
@
text
@d1 1
a1 1
#!/bin/sh -
d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.55 2009/12/18 15:33:02 ajacoutot Exp $
d6 1
a6 1
# Copyright (c) 2008, 2009 Antoine Jacoutot <ajacoutot@@openbsd.org>
d23 2
a24 2
unset AUTO_INSTALLED_FILES BATCHMODE DIFFMODE NEED_NEWALIASES
unset OBSOLETE_FILES SRCDIR TGZ TGZURL XTGZ XTGZURL
d41 2
a42 1
# restore files from backups
d44 1
a44 1
	for i in ${DESTDIR}/${DBDIR}/.*.bak; do
d48 2
a132 1
	local SRCSUM ETCSUM XETCSUM
@


1.55
log
@xargs takes the whole list as argument, so no need to append.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.54 2009/12/18 13:51:03 ajacoutot Exp $
a391 3
		if [ "${HANDLE_COMPFILE}" = "v" ]; then
			echo "\n========================================================================\n"
		fi
d413 1
d572 1
a572 1
	echo "\n===> Comparison complete"
@


1.54
log
@Add etcsum and xetcsum to IGNORE_FILES. Needed for upcoming change.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.53 2009/12/06 16:21:36 ajacoutot Exp $
d135 1
a135 1
		(cd ${TEMPROOT} && find . -type f | xargs cksum >> ${WRKDIR}/${SRCSUM})
d145 1
a145 1
			(cd ${TEMPROOT} && tar -tzf ${_E} | xargs cksum >> ${WRKDIR}/${ETCSUM})
d150 1
a150 1
			(cd ${TEMPROOT} && tar -tzf ${_X} | xargs cksum >> ${WRKDIR}/${XETCSUM})
@


1.53
log
@Add /var/db/locate.database and /var/games/tetris.scores to IGNORE_FILES.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.52 2009/10/02 11:53:45 ajacoutot Exp $
d199 1
@


1.52
log
@Use BSD.x11.dist mtree file now that it is up-to-date and maintained.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.51 2009/08/24 19:14:13 ajacoutot Exp $
d193 8
a200 1
	IGNORE_FILES="/etc/*.db /etc/mail/*.db /etc/passwd /etc/motd /etc/myname /var/mail/root"
@


1.51
log
@Harden variables setting, prodded by alex@@
Fix TMPDIR while here and remove the EDITOR definition, it is only used
once.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.50 2009/08/18 08:27:32 ajacoutot Exp $
d573 3
@


1.50
log
@HEADS-UP:  change the way sysmerge(8) runs by default.
Remove the '-a' switch (auto-mode) and make this behaviour the default.
Add a new '-d' switch to get former default (full diff) mode.

General idea ok for several.
man page improvements from jmc@@
ok jim@@ oga@@ sobrado@@
ok sthen@@ "sane defaults++ :)"
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.49 2009/08/17 12:02:47 ajacoutot Exp $
d23 4
a26 1
WRKDIR=`mktemp -d -p /var/tmp sysmerge.XXXXX` || exit 1
a31 1
EDITOR="${EDITOR:=/usr/bin/vi}"
d130 1
d132 1
a132 1
		local SRCSUM=srcsum
d143 1
a143 1
			local ETCSUM=etcsum
d148 1
a148 1
			local XETCSUM=xetcsum
d172 1
a172 1
					_array="${_array} ${_d}"
d313 1
a313 1
					EDIT="${EDITOR}"
@


1.49
log
@Don't try to move files that don't exist.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.48 2009/08/16 20:15:10 ajacoutot Exp $
d56 1
a56 1
	echo "usage: ${0##*/} [-ab] [-s src | etcXX.tgz] [-x xetcXX.tgz]" >&2
d88 1
a88 1
	if [ -z "${BATCHMODE}" -a -z "${AUTOMODE}" ]; then
d155 1
a155 1
			if [ "${AUTOMODE}" ]; then
d385 1
a385 1
			if [ "${AUTOMODE}" ]; then
d414 1
a414 1
				if [ -z "${AUTOMODE}" ]; then
d427 1
a427 1
			if [ -z "${AUTOMODE}" ]; then
d540 1
a540 1
		if [ "${AUTOMODE}" -a "${COMPFILE}" != "./etc/fbtab" \
d614 1
a614 1
while getopts abs:x: arg; do
a615 3
	a)
		AUTOMODE=1
		;;
d618 3
@


1.48
log
@Properly initialize the array setting auto-upgradable files.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.47 2009/06/28 21:08:06 ajacoutot Exp $
d43 3
a45 1
		mv ${i} ${DESTDIR}/${DBDIR}/${_i#.}
@


1.47
log
@Fix small regression introduced with symlinks handling.
spotted by jmc@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.46 2009/06/28 18:23:43 ajacoutot Exp $
d167 1
a167 1
					set -A AUTO_UPG -- ${_d}
d170 3
@


1.46
log
@Remove useless blank space in output.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.45 2009/06/28 08:14:26 ajacoutot Exp $
d538 1
a538 1
		    -a "${COMPFILE}" != "./etc/ttys" ]; then
d544 1
a544 1
		if [ -f "${COMPFILE}" ]; then
@


1.45
log
@Teach sysmerge to deal with links (found the hard way when I realised I
missed some very much needed symlinks under /etc/fonts/conf.d/).
The behaviour is the following, if a link does not exist:
* in '-a' mode, it is created automatically
* in normal mode, sysmerge will ask what you want to do

If one wants to use '-a' mode while still being in control of what
links are created, sysmerge.ignore can be used.

"sounds good to" phessler@@, ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.44 2009/06/14 06:54:40 ajacoutot Exp $
d175 1
a175 1
				OBSOLETE_FILES="${OBSOLETE_FILES} `diff -C 0 ${WRKDIR}/new ${WRKDIR}/old | grep -E '^- .' | sed -e 's,^- .,,g'`"
@


1.44
log
@DBDIR resides in DESTDIR.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.43 2009/06/04 23:24:17 ajacoutot Exp $
d270 7
d379 1
a379 1
		if [ -f "${DESTDIR}${COMPFILE#.}" -a -f "${COMPFILE}" ]; then
d407 15
a421 1
			echo "===> ${COMPFILE} was not found on the target system"
d442 1
a442 1
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" ]; then
d463 7
a469 2
				if mm_install "${COMPFILE}"; then
					echo "===> ${COMPFILE} installed successfully"
d471 5
a475 1
					echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d484 1
a484 1
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" ]; then
d492 1
a492 1
			if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" ]; then
d517 9
a525 2
	# use -size +0 to avoid comparing empty log files and device nodes
	for COMPFILE in `find . -type f -size +0`; do
a552 1
				unset IS_BINFILE
@


1.43
log
@When in auto-mode, automatically install binary files (from the X set).

``please put it in'', pyr@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.42 2009/05/13 22:27:48 ajacoutot Exp $
d41 1
a41 1
	for i in ${DBDIR}/.*.bak; do
d43 1
a43 1
		mv ${i} ${DBDIR}/${_i#.}
d122 1
a122 1
	mkdir -p ${DBDIR} || error_rm_wrkdir
d150 1
a150 1
		if [ -f ${DBDIR}/${i} ]; then
d154 1
a154 1
				_R=$(cd ${TEMPROOT} && cksum -c ${DBDIR}/${i} 2> /dev/null | grep OK | awk '{ print $2 }' | sed 's/[:]//')
d163 1
a163 1
			_D=`diff -u ${WRKDIR}/${i} ${DBDIR}/${i} | grep -E '^\+' | sed '1d' | awk '{print $3}'`
d166 1
a166 1
				if [ -n "`grep "${CURSUM}" ${DBDIR}/${i}`" -a -z "`grep "${CURSUM}" ${WRKDIR}/${i}`" ]; then
d172 1
a172 1
			awk '{ print $3 }' ${DBDIR}/${i} > ${WRKDIR}/new
d179 1
a179 1
			mv ${DBDIR}/${i} ${DBDIR}/.${i}.bak
d181 1
a181 1
		mv ${WRKDIR}/${i} ${DBDIR}/${i}
d569 1
a569 1
	rm -f ${DBDIR}/.*.bak
@


1.42
log
@Remove unused args from getopts.
Remove top comments already duplicated in the man page.

"sure" sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.41 2009/05/12 13:04:18 jmc Exp $
d380 2
a381 2
				# automatically install files which differ only by CVS Id
				if [ -z "`diff -q -I'[$]OpenBSD:.*$' "${DESTDIR}${COMPFILE#.}" "${COMPFILE}"`" -o -n "${FORCE_UPG}" ]; then
@


1.41
log
@- tweak the description of -a
- remove -SX from usage()

ok ajacoutot
@
text
@d3 1
a3 7
# $OpenBSD: sysmerge.sh,v 1.40 2009/05/11 20:25:55 ajacoutot Exp $
#
# This script is based on the FreeBSD mergemaster script, written by
# Douglas Barton <DougB@@FreeBSD.org>
#
# Some ideas came from the NetBSD etcupdate script, written by
# Martti Kuparinen <martti@@NetBSD.org>
d573 1
a573 1
while getopts abs:x:S:X: arg; do
@


1.40
log
@This commit adds a new feature to sysmerge(8), usable in '-a' mode.
From now on, checksums of reference files (sets and/or src) will be
stored under /var/db/sysmerge/{etcsum,xetcsum,srcsum} . This allows for
"remembering last choice" several people have requested.
This deprecates the need for -X and -S which have been removed (these
switches may come back at some point for the auto-patch feature which
halex@@ proposed).

It will only compare files which reference sources have changed since
the last run and will attempt to automatically upgrade them to the
newest version provided that they have no local changes.
i.e. first run should dislay differences, second run should not display
anything except if something changed between old and new sets/src. This
way sysmerge can also warn you from files which may have been obsoleted.

General idea taken from Net/FreeBSD but we're doing things differently.

Intensively discussed with oga@@, sthen@@ and halex@@
ok oga@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.39 2009/04/28 08:25:27 ajacoutot Exp $
d60 1
a60 1
	echo "usage: ${0##*/} [-ab] [-S etcXX.tgz] [-s src | etcXX.tgz] [-X xetcXX.tgz] [-x xetcXX.tgz]" >&2
@


1.39
log
@Add the possibility to go back from merging mode to the previous menu.
Move unset NO_INSTALLED where it belongs, at the start of the function.
Several minor cleanups.

from Alexander Hall

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.38 2009/04/12 11:17:58 ajacoutot Exp $
d33 1
d45 8
d63 1
a63 1
trap "clean_src; rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15
a88 30
	if [ "${OTGZ}" ]; then
		TGZV=`echo ${TGZ} | sed -e 's,^.*/,,' -e 's,etc,,' -e 's,.tgz,,'`
		OTGZV=`echo ${OTGZ} | sed -e 's,^.*/,,' -e 's,etc,,' -e 's,.tgz,,'`
		if [ -z "${TGZ}" ]; then
			echo " *** Error: please specify a valid path to the new etcXX.tgz"
			error_rm_wrkdir
		elif cmp -s ${OTGZ} ${TGZ}; then
			echo " *** Error: old and new etcXX.tgz are identical"
			error_rm_wrkdir
		elif [ "${OTGZV}" -gt "${TGZV}" ]; then
			echo " *** Error: old etc${OTGZV}.tgz version is higher than new etc${TGZV}.tgz"
			error_rm_wrkdir
		fi
	fi
	
	if [ "${OXTGZ}" ]; then
		XTGZV=`echo ${XTGZ} | sed -e 's,^.*/,,' -e 's,etc,,' -e 's,.tgz,,'`
		OXTGZV=`echo ${OXTGZ} | sed -e 's,^.*/,,' -e 's,etc,,' -e 's,.tgz,,'`
		if [ -z "${XTGZ}" ]; then
			echo " *** Error: please specify a valid path to the new xetcXX.tgz"
			error_rm_wrkdir
		elif cmp -s ${OXTGZ} ${XTGZ}; then
			echo " *** Error: old and new xetcXX.tgz are identical"
			error_rm_wrkdir
		elif [ "${OXTGZV}" -gt "${XTGZV}" ]; then
			echo " *** Error: old xetc${OXTGZV}.tgz version is higher than new xetc${XTGZV}.tgz"
			error_rm_wrkdir
		fi
	fi

a101 7
		if [ "${OTGZURL}" ]; then
			echo " old etc source:      ${OTGZURL}"
			echo "                      (fetched in ${OTGZ})"
		else
			[ "${OTGZ}" ] && echo " old etc source:      ${OTGZ}"
		fi
		if [ "${OTGZ}" -o "${OXTGZ}" ]; then echo ""; fi
a107 6
		if [ "${OXTGZURL}" ]; then
			echo " old xetc source:     ${OXTGZURL}"
			echo "                      (fetched in ${OXTGZ})"
		else
			[ "${OXTGZ}" ] && echo " old xetc source:     ${OXTGZ}"
		fi
d128 1
d133 1
d136 1
d143 10
d155 34
a188 13
	if [ "${OTGZ}" -o "${OXTGZ}" ]; then
		OTEMPROOT="${WRKDIR}/.otemproot"
		mkdir -p ${OTEMPROOT}
		for i in ${OTGZ} ${OXTGZ}; do
			tar -xzphf ${i} -C ${OTEMPROOT};
			tar -tzf ${i} >> ${WRKDIR}/olist;
		done
		for i in ${TGZ} ${XTGZ}; do
			tar -tzf ${i} >> ${WRKDIR}/nlist;
		done
		OBSOLETE_FILES=`diff -C 0 ${WRKDIR}/olist ${WRKDIR}/nlist | grep -E '^- .' | sed -e 's,^- .,,g'`
		rm -f ${WRKDIR}/olist ${WRKDIR}/nlist
	fi
d372 1
a378 1
			# automatically install files which differ only by CVS Id
d380 4
a383 6
				if diff -q -I'[$]OpenBSD:.*$' "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" > /dev/null 2>&1; then
					if mm_install "${COMPFILE}"; then
						echo "===> ${COMPFILE} installed successfully"
						AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
					else
						echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
d385 3
a387 8
					return
				fi
			fi
			if [ "${OTGZ}" -o "${OXTGZ}" ]; then
				# if current != new and current = old, auto-install new
				if diff -q "${DESTDIR}${COMPFILE#.}" "${OTEMPROOT}${COMPFILE#.}" > /dev/null 2>&1; then
					echo "===> ${COMPFILE} has not been modified since previous release/snapshot,"
					echo "     automatically installing new version"
a516 3
			# delete file in temproot if it has not changed since last release
			elif [ "${OTGZ}" -o "${OXTGZ}" ] && diff -q "${COMPFILE}" "${OTEMPROOT}${COMPFILE#.}" > /dev/null 2>&1; then
				rm "${COMPFILE}"
a532 3
	clean_src
	rm -rf ${OTEMPROOT}

d554 1
a554 1
		echo "===> File(s) removed from previous set (maybe obsolete)" >> ${REPORT}
d573 3
a617 36
				error_rm_wrkdir
			fi
		else
			echo " *** Error: ${OPTARG} is not a path to xetcXX.tgz"
			error_rm_wrkdir
		fi
		;;
	S)
		if [ -f "${OPTARG}" ] && echo -n ${OPTARG} | \
		    awk -F/ '{print $NF}' | \
		    grep '^etc[0-9][0-9]\.tgz$' > /dev/null 2>&1 ; then
			OTGZ=${OPTARG}
		elif echo ${OPTARG} | \
		    grep -qE '^(http|ftp)://.*/etc[0-9][0-9]\.tgz$'; then
			OTGZ=${WRKDIR}/etc.tgz
			OTGZURL=${OPTARG}
			if ! ${FETCH_CMD} -o ${OTGZ} ${OTGZURL}; then
				echo " *** Error: could not retrieve ${OTGZURL}"
				error_rm_wrkdir
			fi
		else
			echo " *** Error: ${OPTARG} is not a path to etcXX.tgz"
			error_rm_wrkdir
		fi
		;;
	X)
		if [ -f "${OPTARG}" ] && echo -n ${OPTARG} | \
		    awk -F/ '{print $NF}' | \
		    grep '^xetc[0-9][0-9]\.tgz$' > /dev/null 2>&1 ; then
			OXTGZ=${OPTARG}
		elif echo ${OPTARG} | \
		    grep -qE '^(http|ftp)://.*/xetc[0-9][0-9]\.tgz$'; then
			OXTGZ=${WRKDIR}/xetc.tgz
			OXTGZURL=${OPTARG}
			if ! ${FETCH_CMD} -o ${OXTGZ} ${OXTGZURL}; then
				echo " *** Error: could not retrieve ${OXTGZURL}"
@


1.38
log
@Better output (i.e. /etc instead of //etc)

mostly from and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.37 2009/04/12 07:52:10 ajacoutot Exp $
d295 1
d318 5
a322 5
					if mm_install "${COMPFILE}"; then
						echo "===> Merged version of ${COMPFILE} installed successfully"
					else
						echo " *** Warning: problem installing ${COMPFILE}, it will remain to merge by hand"
					fi
d326 4
a329 2
				echo "comparison between merged and new files:\n"
				diff -u ${COMPFILE}.merged ${COMPFILE}
d333 4
a336 2
				echo "comparison between old and merged files:\n"
				diff -u ${DESTDIR}${COMPFILE#.} ${COMPFILE}.merged
d345 4
d370 3
a389 2
				
			# if current != new and current = old, auto-install new
d391 1
d431 1
d453 1
a453 1
			if [ "${COMPFILE}" != "./etc/master.passwd" -a "${COMPFILE}" != "./etc/group" -a "${COMPFILE}" != "./etc/hosts" ]; then
d468 1
a468 1
				merge_loop
a491 2

	unset NO_INSTALLED
@


1.37
log
@Treat /etc/hosts the same way as /etc/group and /etc/master.passwd: make
it impossible to install a virgin one over the currently installed one.

from Mitja Muzenic, with a tweak
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.36 2009/04/12 07:43:17 ajacoutot Exp $
d242 1
a242 1
		echo -n "===> A new ${DESTDIR}/dev/MAKEDEV script was installed, "
d248 1
a248 1
			echo -n "===> A new ${DESTDIR}/etc/login.conf file was installed, "
d255 1
a255 1
		echo -n "===> A new ${DESTDIR}/${1#.} file was installed, "
d260 1
a260 1
		echo -n "===> A new ${DESTDIR}/etc/mail/aliases file was installed, "
d269 1
a269 1
		echo -n "===> A new ${DESTDIR}/etc/master.passwd file was installed, "
@


1.36
log
@When in automode, sysmerge will now automatically install files
that only differ by CVS Id (adapted from FreeBSD mergemaster)

Ground work on the man page, from jmc@@
 * do not duplicate info
 * rewordings
 * move some stuffs around

ok jmc@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.35 2009/04/09 10:44:50 ajacoutot Exp $
d419 1
a419 1
			if [ "${COMPFILE}" != "./etc/master.passwd" -a "${COMPFILE}" != "./etc/group" ]; then
d441 1
a441 1
			if [ "${COMPFILE}" != "./etc/master.passwd" -a "${COMPFILE}" != "./etc/group" ]; then
@


1.35
log
@Add a hook to deal with special sendmail db files under /etc/mail/
Tweak some outputs and put interesting messages into sysmerge.log.
export the NEED_NEWALIASES variable.

inputs from and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.34 2009/04/06 15:25:10 ajacoutot Exp $
d366 13
@


1.34
log
@Fix regression introduced in r1.32 where after running MAKEDEV sysmerge
would stop comparing files.

breakage reported by and ok naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.33 2009/04/06 10:35:20 ajacoutot Exp $
d243 1
a243 1
		echo "MAKEDEV will be run"
d249 1
a249 1
			echo "cap_mkdb will be run"
d253 6
d261 1
a261 1
		echo "newaliases will be run"
d263 1
a263 1
			chroot ${DESTDIR} newaliases || NEED_NEWALIASES=1
d270 1
a270 1
		echo "pwd_mkdb will be run"
a519 6
	if [ "${NEED_NEWALIASES}" ]; then
		echo "===> A new ${DESTDIR}/etc/mail/aliases file was installed."
		echo "     However ${DESTDIR}/usr/bin/newaliases could not be run,"
		echo "     you will need to rebuild your aliases database manually."
        fi

d526 7
d553 5
a557 1
		echo "===> Manual intervention may be needed, see ${REPORT}"
@


1.33
log
@Add a report summary file, ${WRKDIR}/sysmerge.log, that will include all
worthy post run information instead of spreading info into several
files.  Tweak some output while here.

Enchance description for the -S and -X options; thanks to sthen@@ and
jmc@@ for finding the correct wording... it was not as easy as it seems.
Fix a typo in the man page, spotted by jmc@@

ok sthen@@ jmc@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.32 2009/03/27 15:17:31 ajacoutot Exp $
d244 1
a244 1
		cd ${DESTDIR}/dev && /bin/sh MAKEDEV all
@


1.32
log
@Mitigate the risk of leaving the system in an inconsistent state
when a "special" file has been installed (e.g. master.passwd) but
sysmerge was interrupted: we now run the corresponding command
right after installing the file and not at the end of sysmerge run.

When DESTDIR is set and a new aliases file has been installed, try
to run newaliases from chrooted DESTDIR.

input from and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.31 2009/03/25 18:02:12 ajacoutot Exp $
d32 1
d186 1
a186 2
		diff -C 0 ${WRKDIR}/olist ${WRKDIR}/nlist | grep -E '^- .' \
			| sed -e 's,^- .,,g' > ${WRKDIR}/obsolete_files
a513 4
	if [ "${AUTO_INSTALLED_FILES}" ]; then
		echo "${AUTO_INSTALLED_FILES}" > ${WRKDIR}/auto_installed_files
	fi

d516 2
a517 2
		echo "However ${DESTDIR}/usr/bin/newaliases could not be run, you will"
		echo "need to rebuild your aliases database manually."
d523 1
a523 1
	echo "===> Making sure your directory hierarchy has correct perms, running mtree..."
d526 21
a546 21
	FILES_IN_WRKDIR=`find ${WRKDIR} -type f -size +0 2> /dev/null`
	if [ "${FILES_IN_WRKDIR}" ]; then
		FILES_IN_TEMPROOT=`find ${TEMPROOT} -type f -size +0 2> /dev/null`
		FILES_IN_BKPDIR=`find ${BKPDIR} -type f -size +0 2> /dev/null`
		OBSOLETE_FILES=`stat -f %z ${WRKDIR}/obsolete_files 2> /dev/null`
		if [ "${AUTO_INSTALLED_FILES}" ]; then
			echo "===> Automatically installed file(s) listed in"
			echo "     ${WRKDIR}/auto_installed_files"
		fi
		if [ "${OBSOLETE_FILES}" -ne 0 ]; then
			echo "===> File(s) removed from previous set (maybe obsolete) listed in"
			echo "     ${WRKDIR}/obsolete_files"
		fi
		if [ "${FILES_IN_TEMPROOT}" ]; then
			echo "===> File(s) remaining for you to merge by hand:"
			find "${TEMPROOT}" -type f ! -name \*.merged -size +0 -exec echo "     {}" \;
		fi
		if [ "${FILES_IN_BKPDIR}" ]; then
			echo "===> Backup of replaced file(s) can be found under"
			echo "     ${BKPDIR}"
		fi
@


1.31
log
@Several cleanups:

 * constistency in redirections (and fix a wrong one)
 * enclose variables
 * several UPPER -> lowercase rewordings
 * add "" on conditionals (suggested by jared r r spiegel a while ago)
 * use cmp instead of md5 for sets comparison (from sthen@@)
 * some man page rewordings from sthen@@

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.30 2009/03/25 13:20:02 ajacoutot Exp $
d242 3
a244 1
		NEED_MAKEDEV=1
d247 5
a251 1
		if [ -f ${DESTDIR}/etc/login.conf.db ]; then NEED_CAP_MKDB=1; fi
d254 7
a260 1
		NEED_NEWALIASES=1
d263 3
a265 1
		NEED_PWD_MKDB=1
a517 18
	if [ "${NEED_CAP_MKDB}" ]; then
		echo -n "===> A new ${DESTDIR}/etc/login.conf file was installed, "
		echo "running cap_mkdb..."
		cap_mkdb ${DESTDIR}/etc/login.conf
	fi

	if [ "${NEED_PWD_MKDB}" ]; then
		echo -n "===> A new ${DESTDIR}/etc/master.passwd file was installed, "
		echo "running pwd_mkdb..."
		pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd
	fi

	if [ "${NEED_MAKEDEV}" ]; then
		echo -n "===> A new ${DESTDIR}/dev/MAKEDEV script was installed, "
		echo "running MAKEDEV..."
		cd ${DESTDIR}/dev && /bin/sh MAKEDEV all
	fi

d519 4
a522 10
		echo -n "===> A new ${DESTDIR}/etc/mail/aliases file was installed, "
		if [ "${DESTDIR}" ]; then
			echo "\n     but the newaliases command is limited to the directories configured"
			echo "     in sendmail.cf.  Make sure to create your aliases database by"
			echo "     hand when your sendmail configuration is done."
		else
			echo "running newaliases..."
			newaliases
		fi
	fi
@


1.30
log
@You can now feed sysmerge with an etcXX and/or xetcXX tarball(s)
corresponding to your current snapshot or release. Any file that was
modified between this old reference and the new one *and* that you did
not change locally will automatically be updated to the new version.

Make sure we don't compare files that have not changed between old and
new tarball (from Alexander Hall).

man page flushing, tweaking, rewording and enhancing from jmc@@

Several people came up with this request or alike, thanks to them.

looked over and tested by several
ok weerd@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.29 2009/02/17 16:48:11 ajacoutot Exp $
d39 1
a39 1
		cd ${SRCDIR}/gnu/usr.sbin/sendmail/cf/cf && make cleandir 1> /dev/null
d55 2
a56 2
if [ `id -u` -ne 0 ]; then
	echo " *** ERROR: Need root privileges to run this script"
d74 1
a74 1
			echo " *** ERROR: please specify a valid path to src or (x)etcXX.tgz"
d83 1
a83 1
			echo " *** ERROR: please specify a valid path to the new etcXX.tgz"
d85 2
a86 2
		elif [ `md5 -q ${OTGZ}` = `md5 -q ${TGZ}` ]; then
			echo " *** ERROR: old and new etcXX.tgz are identical"
d89 1
a89 1
			echo " *** ERROR: old etc${OTGZV}.tgz version is higher than new etc${TGZV}.tgz"
d98 1
a98 1
			echo " *** ERROR: please specify a valid path to the new xetcXX.tgz"
d100 2
a101 2
		elif [ `md5 -q ${OXTGZ}` = `md5 -q ${XTGZ}` ]; then
			echo " *** ERROR: old and new xetcXX.tgz are identical"
d104 1
a104 1
			echo " *** ERROR: old xetc${OXTGZV}.tgz version is higher than new xetc${XTGZV}.tgz"
d166 1
a166 2
		make DESTDIR=${TEMPROOT} distribution-etc-root-var 2>&1 1> /dev/null \
		  | tee | grep -v "WARNING\: World writable directory"
d258 1
a258 1
	if [ `expr "$MERGE_CMD" : ^sdiff.*` -gt 0 ]; then
d290 1
a290 1
					echo " *** ERROR: ${EDIT} can not be found or is not executable"
d300 1
a300 1
						echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
d355 1
a355 1
						echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
d378 1
a378 1
					echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
d413 1
a413 1
					echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
d472 2
a473 2
			CVSID1=`grep "[$]OpenBSD:" ${DESTDIR}${COMPFILE#.} 2>/dev/null`
			CVSID2=`grep "[$]OpenBSD:" ${COMPFILE} 2>/dev/null` || CVSID2=none
d538 1
a538 1
	mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U 1> /dev/null
d540 1
a540 1
	FILES_IN_WRKDIR=`find ${WRKDIR} -type f -size +0 2>/dev/null`
d542 2
a543 2
		FILES_IN_TEMPROOT=`find ${TEMPROOT} -type f -size +0 2>/dev/null`
		FILES_IN_BKPDIR=`find ${BKPDIR} -type f -size +0 2>/dev/null`
d589 1
a589 1
				echo " *** ERROR: Could not retrieve ${TGZURL}"
d593 1
a593 1
			echo " *** ERROR: ${OPTARG} is not a path to src nor etcXX.tgz"
d607 1
a607 1
				echo " *** ERROR: Could not retrieve ${XTGZURL}"
d611 1
a611 1
			echo " *** ERROR: ${OPTARG} is not a path to xetcXX.tgz"
d625 1
a625 1
				echo " *** ERROR: Could not retrieve ${OTGZURL}"
d629 1
a629 1
			echo " *** ERROR: ${OPTARG} is not a path to etcXX.tgz"
d643 1
a643 1
				echo " *** ERROR: Could not retrieve ${OXTGZURL}"
d647 1
a647 1
			echo " *** ERROR: ${OPTARG} is not a path to xetcXX.tgz"
@


1.29
log
@- always run pwd_mdb, newaliases, MAKEDEV and cap_mkdb even when not in
auto-mode so that the system is not left in an inconsistent state
- unify messages
- tweak manpage according to new behavior

based on an initial patch from matthieu@@
ok matthieu@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.28 2009/02/17 10:57:59 ajacoutot Exp $
d12 1
a12 1
# Copyright (c) 2008 Antoine Jacoutot <ajacoutot@@openbsd.org>
d50 1
a50 1
	echo "usage: ${0##*/} [-ab] [-s src | etcXX.tgz] [-x xetcXX.tgz]" >&2
d79 30
d114 11
a124 11
		if [ -n "${TGZURL}" ]; then
			echo " etc source:   ${TGZURL}"
			echo "               (fetched in ${TGZ})"
		elif [ -n "${TGZ}" ]; then
			echo " etc source:   ${TGZ}"
		elif [ -n "${SRCDIR}" ]; then
			echo " etc source:   ${SRCDIR}"
		fi
		if [ -n "${XTGZURL}" ]; then
			echo " xetc source:  ${XTGZURL}"
			echo "               (fetched in ${XTGZ})"
d126 14
a139 1
			[ -n "${XTGZ}" ] && echo " xetc source:  ${XTGZ}"
d142 3
a144 3
		echo " base work directory:  ${WRKDIR}"
		echo " temp root directory:  ${TEMPROOT}"
		echo " backup directory:     ${BKPDIR}"
d176 15
d217 4
a220 1
	install -m "${1}" -o "${2}" -g "${3}" "${4}" "${5}"
d235 1
a235 1
	if [ -n "${DESTDIR}${INSTDIR}" -a ! -d "${DESTDIR}${INSTDIR}" ]; then
d239 1
a239 1
	do_install_and_rm "${FILE_MODE}" "${FILE_OWN}" "${FILE_GRP}" "${1}" "${DESTDIR}${INSTDIR}"
d347 14
d367 1
a367 1
			echo ""
d482 3
d536 1
d545 1
d550 4
d570 1
a570 1
while getopts abs:x: arg; do
d609 36
@


1.28
log
@- better output

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.27 2008/12/16 22:23:55 ajacoutot Exp $
d428 3
a430 8
		echo -n "===> You installed a new ${DESTDIR}/etc/login.conf file, "
		if [ "${AUTOMODE}" ]; then
			echo "running cap_mkdb"
			cap_mkdb ${DESTDIR}/etc/login.conf
		else
			echo "\n    rebuild your login.conf database by running the following command as root:"
			echo "    'cap_mkdb ${DESTDIR}/etc/login.conf'"
		fi
d435 2
a436 7
		if [ "${AUTOMODE}" ]; then
			echo "running pwd_mkdb"
			pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd
		else
			echo "\n    rebuild your password files by running the following command as root:"
			echo "    'pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd'"
		fi
d441 2
a442 7
		if [ "${AUTOMODE}" ]; then
			echo "running MAKEDEV"
			cd ${DESTDIR}/dev && /bin/sh MAKEDEV all
		else
			echo "\n    rebuild your device nodes by running the following command as root:"
			echo "    'cd ${DESTDIR}/dev && /bin/sh MAKEDEV all'"
		fi
d451 2
a452 2
		elif [ "${AUTOMODE}" ]; then
			echo "running newaliases"
a453 3
		else
			echo "\n    rebuild your aliases database by running the following command as root:"
			echo "    'newaliases'"
d459 1
a459 1
	echo "===> Making sure your directory hierarchy has correct perms, running mtree"
@


1.27
log
@- make it possible to edit a merged file using an external editor ;
useful when 'sdiff eb' does not cope with one's needs.

idea and input from weerd@@
ok weerd@@ sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.26 2008/12/15 15:54:55 fgsch Exp $
d463 3
a465 3
			echo "\n    but the newaliases command is limited to the directories configured"
			echo "    in sendmail.cf.  Make sure to create your aliases database by"
			echo "    hand when your sendmail configuration is done."
@


1.26
log
@Cleanup the temporary directory in all the error paths.
ajacoutot@@ ok.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.25 2008/09/17 08:04:17 ajacoutot Exp $
d31 3
a34 1
MERGE_CMD="${MERGE_CMD:=sdiff -as -w ${SWIDTH} -o}"
d209 2
a210 1
			echo "  Use 'i' to install merged file"
d220 14
@


1.25
log
@- when merging a file, add a key to see a diff between the merged file
and the new or old one

requested by todd@@ months ago
"I like the idea" fgsch@@, "should be in" todd@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.24 2008/09/12 13:31:59 ajacoutot Exp $
d73 1
a73 1
			exit 1
d108 1
a108 2
				rm -rf ${WRKDIR} 2> /dev/null
				exit 1
d364 1
a364 1
	cd ${TEMPROOT} || exit 1
@


1.24
log
@- make it possible to use a user defined MERGE_CMD instead of sdiff

mostly from andreas@@
man page enhancing by jmc@@
ok andreas@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.23 2008/09/12 13:23:17 ajacoutot Exp $
d209 2
d227 10
@


1.23
log
@- use shell built-in getopts instead of getopt(1)
- cleanup by adding usage and error_rm_wrkdir functions

feedbacks from guenther@@ sthen@@ and jared r r spiegel, thank you!
ok sthen
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.22 2008/09/06 13:25:48 ajacoutot Exp $
d29 2
d32 1
a32 2
SWIDTH=`stty size | awk '{w=$2} END {if (w==0) {w=80} print w}'`
WRKDIR=`mktemp -d -p /var/tmp sysmerge.XXXXX` || exit 1
d197 3
a199 1
	echo "===> Type h at the sdiff prompt (%) to get usage help\n"
d203 1
a203 1
		sdiff -as -o "${COMPFILE}.merged" -w ${SWIDTH} \
@


1.22
log
@- don't list *.merged files in the "remaining for you to merge by hand"
list, it's very confusing.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.21 2008/09/02 11:38:06 ajacoutot Exp $
d40 10
d52 6
d473 3
a475 16
ARGS=`getopt abs:x: $*`
if [ $? -ne 0 ]; then
	echo "usage: ${0##*/} [-ab] [-s src | etcXX.tgz] [-x xetcXX.tgz]" >&2
	exit 1
fi

if [ `id -u` -ne 0 ]; then
	echo " *** ERROR: Need root privilege to run this script"
	exit 1
fi

set -- ${ARGS}
while [ $# -ne 0 ]
do
	case "$1" in
	-a)
d477 2
a478 2
		shift;;
	-b)
d480 6
a485 8
		shift;;
	-s)
		WHERE="${2}"
		shift 2
		if [ -f "${WHERE}/etc/Makefile" ]; then
			SRCDIR=${WHERE}
		elif [ -f "${WHERE}" ] && echo -n ${WHERE} |		\
		    awk -F/ '{print $NF}' | 				\
d487 2
a488 2
			TGZ=${WHERE}
		elif echo ${WHERE} | \
d491 1
a491 1
			TGZURL="${WHERE}"
d494 1
a494 1
				exit 1
d497 2
a498 2
			echo " *** ERROR: ${WHERE} is not a path to src nor etcXX.tgz"
			exit 1
d501 3
a503 5
	-x)
		WHERE="${2}"
		shift 2
		if [ -f "${WHERE}" ] && echo -n ${WHERE} | 		\
		    awk -F/ '{print $NF}' | 				\
d505 2
a506 2
			XTGZ=${WHERE}
		elif echo ${WHERE} | \
d509 1
a509 1
			XTGZURL="${WHERE}"
d512 1
a512 1
				exit 1
d515 2
a516 2
			echo " *** ERROR: ${WHERE} is not a path to xetcXX.tgz"
			exit 1
d519 4
a522 3
	--)
		shift
		break;;
@


1.21
log
@- make sure they are no sendmail leftovers in src when sysmerge stops
unexpectedly

feedback and ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.20 2008/08/29 08:17:28 ajacoutot Exp $
d443 1
a443 1
			find "${TEMPROOT}" -type f -size +0 -exec echo "     {}" \;
@


1.20
log
@- prevent sysmerge from installing a virgin master.passwd and group
files (only allow delete or merge+install); requested by nick@@

no objections from laurent@@ krw@@ oga@@
ok sthen@@ nick@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.19 2008/07/21 08:28:55 ajacoutot Exp $
d33 8
a40 1
trap "rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15
d428 1
a428 4
	# clean leftovers created by make in src
	if [ "${SRCDIR}" ]; then
		cd ${SRCDIR}/gnu/usr.sbin/sendmail/cf/cf && make cleandir 1> /dev/null
	fi
@


1.19
log
@Leave PATH alone.

noticed by and ok deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.18 2008/07/10 16:49:26 ajacoutot Exp $
d258 3
a260 1
			echo "  Use 'i' to install the temporary ${COMPFILE}"
d280 7
a286 3
			echo ""
			if mm_install "${COMPFILE}"; then
				echo "===> ${COMPFILE} installed successfully"
d288 2
a289 1
				echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
d291 1
@


1.18
log
@Fix "etc source" output when not using a tarball

ok "bien sur!" sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.17 2008/07/08 11:04:28 ajacoutot Exp $
a27 1
PATH="/bin:/usr/bin:/sbin:/usr/sbin"
@


1.17
log
@Typo in summarize output.

ok sthen@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.16 2008/07/04 15:03:45 sthen Exp $
d62 4
a65 2
		else
			[ -n "${TGZ}" ] && echo " etc source:   ${TGZ}"
@


1.16
log
@Teach sysmerge to retrieve {etc,xetc}*.tgz files from FTP/HTTP
paths using ftp(1). Thanks ajacoutot and jmc for suggestions.

ok ajacoutot jmc, no objection deraadt
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.15 2008/06/13 23:56:48 ajacoutot Exp $
d69 1
a69 1
			[ -n "${XTGZ}" ] && echo " etc source:   ${XTGZ}"
@


1.15
log
@- don't ask for yesno confirmation when running in automatic mode
- allow comments in sysmerge.ignore

suggested by, feedback from and ok naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.14 2008/06/13 00:46:57 ajacoutot Exp $
d32 1
d34 1
d36 3
a38 4
do_pre() {
	if [ `id -u` -ne 0 ]; then
		echo " *** ERROR: Need root privilege to run this script"
		exit 1
d40 3
d44 1
a53 1
	WRKDIR=`mktemp -d -p /var/tmp sysmerge.XXXXX` || exit 1
a56 2
	trap "rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15

d59 13
a71 1
		echo " source(s):            ${SRCDIR}${TGZ} ${XTGZ}"
d83 1
a83 1
				rmdir ${WRKDIR} 2> /dev/null
d449 6
d474 8
d494 8
@


1.14
log
@- add support for ignoring files and directories from comparison
through an optionnal /etc/sysmerge.ignore file
requested by many

man page tweak from jmc@@
/etc/changelist addition suggested by sthen@@

ok sthen@@ jdixon@@ jmc@@ naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.13 2008/06/13 00:33:04 ajacoutot Exp $
d55 7
a61 9
	echo "\n===> Running ${0##*/} with the following settings:\n"
	echo " auto-mode:            ${AUTOMODE:-no}"
	echo " source(s):            ${SRCDIR}${TGZ} ${XTGZ}"
	echo " base work directory:  ${WRKDIR}"
	echo " temp root directory:  ${TEMPROOT}"
	echo " backup directory:     ${BKPDIR}"
	echo ""

	if [ -z "${BATCHMODE}" ]; then
d104 1
a104 1
			IGNORE_FILES="${IGNORE_FILES} $(echo ${i} | sed -e 's,\.\.,,g')"
d440 1
a440 1
		AUTOMODE=yes
@


1.13
log
@- always force full file check on fbtab, login.conf, sysctl.conf and
ttys since they are created using helper scripts and comparing CVS Id
would not be accurate

original diff from sthen@@
man page tweak from jmc@@

ok sthen@@ jdixon@@ jmc@@ naddy@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.12 2008/06/10 00:36:46 pyr Exp $
d104 5
d110 1
a110 1
		rm -f ${TEMPROOT}/${i};
@


1.12
log
@Additionnal checks on the file names supplied for -s and -x.
Based on a diff by ajacoutot@@, ok jdixon@@ and sthen@@ on a previous diff,
ok ajacoutot@@.
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.11 2008/06/09 23:57:58 ajacoutot Exp $
d311 7
a317 2
		# it will be deleted from temproot and ignored from comparison
		if [ "${AUTOMODE}" ]; then
@


1.11
log
@- add a sanity check on tarballs name to ensure we're not feeding
sysmerge with unrelated sets

ok sthen@@ pyr@@ jdixon@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.10 2008/06/08 21:54:25 ajacoutot Exp $
d442 3
a444 1
		elif [ -f "${WHERE}" -a "`echo ${WHERE} | sed -e 's,.*\/,,g'`" = etc??.tgz ]; then
d454 3
a456 1
		if [ -f "${WHERE}" -a "`echo ${WHERE} | sed -e 's,.*\/,,g'`" = xetc??.tgz ]; then
@


1.10
log
@- remove sendmail cf files leftover after make in src

issue reported by jmc@@
ok pyr@@ jdixon@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.9 2008/06/08 21:51:25 ajacoutot Exp $
d442 1
a442 1
		elif [ -f "${WHERE}" ]; then
d452 1
a452 1
		if [ -f "${WHERE}" ]; then
@


1.9
log
@- enhance output for 80 columns wide terminals

ok pyr@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.8 2008/06/01 15:07:00 ajacoutot Exp $
d388 5
@


1.8
log
@- make it possible to merge files from xetcXX only

man page bits by jmc@@
suggested by an ok jdixon@@ merdely@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.7 2008/05/14 15:31:41 ajacoutot Exp $
d80 2
a81 1
	echo "===> Creating and populating temporary root under ${TEMPROOT}"
d406 2
a407 1
			echo "===> Backup of replaced file(s) can be found under ${BKPDIR}"
d409 1
a409 1
		echo "===> When done, ${WRKDIR} and its sub-directories should be removed"
@


1.7
log
@- fix new directory creation by using the correct variable;
spotted by merdely@@ while trying to populate /var/www from scratch

ok merdely@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.6 2008/05/14 07:48:36 ajacoutot Exp $
d40 1
a40 1
	if [ -z "${SRCDIR}" -a -z "${TGZ}" ]; then
d44 1
a44 1
			echo " *** ERROR: please specify a valid path to src or etcXX.tgz"
d98 1
a98 1
		CF_DIFF=`diff -u -I "##### " ${TEMPROOT}/${cf} ${DESTDIR}/${cf}`
@


1.6
log
@- add a non-interactive mode to sysmerge ('-b')
- yesno is only used once

man page consulting jmc@@ ;)
ok laurent@@ pyr@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.5 2008/04/30 20:15:55 ajacoutot Exp $
d127 1
a127 1
	DIR_OWN=`stat -f "%OMp%OLp" "${TEMPROOT}/${INSTDIR}"`
@


1.5
log
@* add xetcXX.tgz support to sysmerge and handle binary files
* update man page accordingly
* several cleanups in the process:
- smaller sendmail configuration files diff check
- remove a condition that would always evaluate to true
- define AUTOMODE to a value we can reuse later
- tell user when installing a file automatically
- better check for src directory validity
- remove full PATH to some commands to be consistent

testing from several
man pages bits ok jmc@@
"go ahead" jasper@@, ok sthen@@ pyr@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.4 2008/04/23 20:39:00 ajacoutot Exp $
a32 14
yesno() {
	echo -n "${*}? (y|[n]) "
	read ANSWER
	case "${ANSWER}" in
	y|Y)
		echo ""
		return 0
		;;
	*)
		return 1
		;;
	esac
}

d62 13
a74 5
	if yesno "Continue"; then
		echo -n ""
	else
		rmdir ${WRKDIR} 2> /dev/null
		exit 1
d202 5
a206 1
	HANDLE_COMPFILE=v
d237 15
a251 11
		echo "  Use 'd' to delete the temporary ${COMPFILE}"
		echo "  Use 'i' to install the temporary ${COMPFILE}"
		if [ -z "${NO_INSTALLED}" -a -z "${IS_BINFILE}" ]; then
			echo "  Use 'm' to merge the temporary and installed versions"
			echo "  Use 'v' to view the diff results again"
		fi
		echo ""
		echo "  Default is to leave the temporary file to deal with by hand"
		echo ""
		echo -n "How should I deal with this? [Leave it for later] "
		read HANDLE_COMPFILE
d415 1
a415 1
ARGS=`getopt as:x: $*`
d417 1
a417 1
	echo "usage: ${0##*/} [-a] [-s src | etcXX.tgz] [-x xetcXX.tgz]" >&2
d426 3
@


1.4
log
@- clarify copyright / license

discussed with deraadt@@ millert@@
wording from millert@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.3 2008/04/23 16:50:33 deraadt Exp $
d54 9
a68 5
	if [ -z "${SRCMODE}" -a -z "${TGZMODE}" ]; then
		SRCMODE=1
		SRCDIR=/usr/src
	fi

d70 2
a71 4
	if [ "${AUTOMODE}" ]; then
		echo " auto-mode:            yes"
	fi
	echo " source:               ${SRCDIR}${TGZ}"
d86 11
a96 26
	if [ "${SRCMODE}" -o "${TGZMODE}" ]; then
		echo "===> Creating and populating temporary root under ${TEMPROOT}"
		mkdir -p ${TEMPROOT}
		if [ "${SRCMODE}" ]; then
			cd ${SRCDIR}/etc
			make DESTDIR=${TEMPROOT} distribution-etc-root-var 2>&1 1> /dev/null \
			  | tee | grep -v "WARNING\: World writable directory"
		fi

		if [ "${TGZMODE}" ]; then
			for i in ${TGZ}; do
				tar -xzphf ${i} -C ${TEMPROOT};
			done
		fi

		# files we don't want/need to deal with
		IGNORE_FILES="/etc/*.db /etc/mail/*.db /etc/passwd /etc/motd /etc/myname /var/mail/root"
		CF_FILES="/etc/mail/localhost.cf /etc/mail/sendmail.cf /etc/mail/submit.cf"
		for cf in ${CF_FILES}; do
			CF_DIFF=`diff -u -I "##### built by .* on" ${TEMPROOT}/${cf} ${DESTDIR}/${cf}`
			if [ -z "${CF_DIFF}" ]; then
				IGNORE_FILES="${IGNORE_FILES} ${cf}"
			fi
		done
		for i in ${IGNORE_FILES}; do
			rm -f ${TEMPROOT}/${i};
d99 13
d224 1
a224 1
			echo "===> ${COMPFILE} was not found on the target system\n"
d226 1
d230 1
d241 1
a241 1
		if [ -z "${NO_INSTALLED}" ]; then
d265 1
a265 1
			if [ -z "${NO_INSTALLED}" ]; then
d268 1
d273 6
a278 2
			HANDLE_COMPFILE="v"
			continue
d319 4
d324 1
d343 1
a343 1
			/usr/bin/cap_mkdb ${DESTDIR}/etc/login.conf
d346 1
a346 1
			echo "    '/usr/bin/cap_mkdb ${DESTDIR}/etc/login.conf'"
d354 1
a354 1
			/usr/sbin/pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd
d357 1
a357 1
			echo "    '/usr/sbin/pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd'"
d380 1
a380 1
			/usr/bin/newaliases
d383 1
a383 1
			echo "    '/usr/bin/newaliases'"
d388 1
a388 1
	/usr/sbin/mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U 1> /dev/null
d413 1
a413 1
ARGS=`getopt as: $*`
d415 1
a415 1
	echo "usage: ${0##*/} [-a] [-s src | etcXX.tgz]" >&2
d423 1
a423 1
		AUTOMODE=1
d428 1
a428 2
		if [ -d "${WHERE}" ]; then
			SRCMODE=1
a430 1
			TGZMODE=1
d434 10
@


1.3
log
@usage is only used once; ok millert
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.2 2008/04/23 16:39:40 millert Exp $
d5 2
a6 2
# This script is based on the FreeBSD mergemaster script which is
# Copyright (c) 1998-2003 Douglas Barton <DougB@@FreeBSD.org>
d11 1
@


1.2
log
@Re-indent code
Print usage to stderr not stdout
Remove an unneeded check for TEMPROOT
OK and last piece courtesy of ajacoutot@@
@
text
@d3 1
a3 1
# $OpenBSD: sysmerge.sh,v 1.1 2008/04/22 20:53:16 ajacoutot Exp $
d30 1
a30 7
SWIDTH=`stty size | awk '{w=$2}END{if(w==0){w=80}print w}'`


usage() {
	echo "usage: ${0##*/} [-a] [-s src | etcXX.tgz]" >&2
}

d402 1
a402 1
	usage
@


1.1
log
@Welcome sysmerge(8), a mergemaster-based utility to help you update
configuration files after upgrading to a new release or snapshot.
The "sysmerge" name was chosen by weingart@@

Lots of inputs from deraadt@@ jmc@@ millert@@ krw@@ and several, thank you!
Man page enhancements by jmc@@
Testings from at least okan@@ landry@@ gilles@@ pyr@@ merdely@@

Still a _work-in-progress_, not connected to the build.

"fine with me" krw@@, "get it in" deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD$
d34 1
a34 3
cat << EOF
usage: ${0##*/} [-a] [-s src | etcXX.tgz]
EOF
d39 3
a41 3
echo -n "${*}? (y|[n]) "
read ANSWER
case "${ANSWER}" in
d49 1
a49 1
esac
d54 10
a63 4
if [ `id -u` -ne 0 ]; then
	echo " *** ERROR: Need root privilege to run this script"
	exit 1
fi
d65 4
a68 10
WRKDIR=`mktemp -d -p /var/tmp sysmerge.XXXXX` || exit 1
TEMPROOT="${WRKDIR}/temproot"
BKPDIR="${WRKDIR}/backups"

trap "rm -rf ${WRKDIR}; exit 1" 1 2 3 13 15

if [ -z "${SRCMODE}" -a -z "${TGZMODE}" ]; then
	SRCMODE=1
	SRCDIR=/usr/src
fi
d70 15
a84 15
echo "\n===> Running ${0##*/} with the following settings:\n"
if [ "${AUTOMODE}" ]; then
	echo " auto-mode:            yes"
fi
echo " source:               ${SRCDIR}${TGZ}"
echo " base work directory:  ${WRKDIR}"
echo " temp root directory:  ${TEMPROOT}"
echo " backup directory:     ${BKPDIR}"
echo ""
if yesno "Continue"; then
	echo -n ""
else
	rmdir ${WRKDIR} 2> /dev/null
	exit 1
fi
d89 7
a95 20
if [ "${SRCMODE}" -o "${TGZMODE}" ]; then
	echo "===> Creating and populating temporary root under ${TEMPROOT}"
	mkdir -p ${TEMPROOT}
	if [ "${SRCMODE}" ]; then
		cd ${SRCDIR}/etc
		make DESTDIR=${TEMPROOT} distribution-etc-root-var 2>&1 1> /dev/null \
		  | tee | grep -v "WARNING\: World writable directory"
	fi

	if [ "${TGZMODE}" ]; then
		for i in ${TGZ}; do tar -xzphf ${i} -C ${TEMPROOT}; done
	fi

	# files we don't want/need to deal with
	IGNORE_FILES="/etc/*.db /etc/mail/*.db /etc/passwd /etc/motd /etc/myname /var/mail/root"
	CF_FILES="/etc/mail/localhost.cf /etc/mail/sendmail.cf /etc/mail/submit.cf"
	for cf in ${CF_FILES}; do
		CF_DIFF=`diff -u -I "##### built by .* on" ${TEMPROOT}/${cf} ${DESTDIR}/${cf}`
		if [ -z "${CF_DIFF}" ]; then
			IGNORE_FILES="${IGNORE_FILES} ${cf}"
d97 20
a116 3
	done
	for i in ${IGNORE_FILES}; do rm -f ${TEMPROOT}/${i}; done
fi
d121 4
a124 4
if [ -f "${5}/${4##*/}" ]; then
	mkdir -p ${BKPDIR}/${4%/*}
	cp ${5}/${4##*/} ${BKPDIR}/${4%/*}
fi
d126 2
a127 2
install -m "${1}" -o "${2}" -g "${3}" "${4}" "${5}"
rm -f "${4}"
d132 3
a134 3
local INSTDIR
INSTDIR=${1#.}
INSTDIR=${INSTDIR%/*}
d136 1
a136 1
if [ -z "${INSTDIR}" ]; then INSTDIR=/; fi
d138 2
a139 2
DIR_OWN=`stat -f "%OMp%OLp" "${TEMPROOT}/${INSTDIR}"`
eval `stat -f "FILE_MODE=%OMp%OLp FILE_OWN=%Su FILE_GRP=%Sg" ${1}`
d141 3
a143 3
if [ -n "${DESTDIR}${INSTDIR}" -a ! -d "${DESTDIR}${INSTDIR}" ]; then
	install -d -o root -g wheel -m "${DIR_MODE}" "${DESTDIR}${INSTDIR}"
fi
d145 1
a145 1
do_install_and_rm "${FILE_MODE}" "${FILE_OWN}" "${FILE_GRP}" "${1}" "${DESTDIR}${INSTDIR}"
d147 1
a147 1
case "${1#.}" in
d160 1
a160 1
esac
d165 17
a181 17
echo "===> Type h at the sdiff prompt (%) to get usage help\n"
MERGE_AGAIN=1
while [ "${MERGE_AGAIN}" ]; do
	cp -p "${COMPFILE}" "${COMPFILE}.merged"
	sdiff -as -o "${COMPFILE}.merged" -w ${SWIDTH} \
		"${DESTDIR}${COMPFILE#.}" "${COMPFILE}"
	INSTALL_MERGED=v
	while [ "${INSTALL_MERGED}" = "v" ]; do
		echo ""
		echo "  Use 'i' to install merged file"
		echo "  Use 'r' to re-do the merge"
		echo "  Use 'v' to view the merged file"
		echo "  Default is to leave the temporary file to deal with by hand"
		echo ""
		echo -n "===> How should I deal with the merged file? [Leave it for later] "
		read INSTALL_MERGED
		case "${INSTALL_MERGED}" in
d206 2
a207 1
		esac
a208 1
done
d213 1
a213 1
HANDLE_COMPFILE=v
d215 1
a215 5
while [ "${HANDLE_COMPFILE}" = "v" -o "${HANDLE_COMPFILE}" = "todo" ]; do
	if [ "${HANDLE_COMPFILE}" = "v" ]; then
		echo "\n========================================================================\n"
	fi
	if [ -f "${DESTDIR}${COMPFILE#.}" -a -f "${COMPFILE}" ]; then
d217 1
a217 6
			(
				echo "===> Displaying differences between ${COMPFILE} and installed version:"
				echo ""
				diff -u "${DESTDIR}${COMPFILE#.}" "${COMPFILE}"
			) | ${PAGER}
		echo ""
d219 9
a227 4
	else
		echo "===> ${COMPFILE} was not found on the target system\n"
		if [ -z "${AUTOMODE}" ]; then
			NO_INSTALLED=1
d229 3
a231 2
			if mm_install "${COMPFILE}"; then
				AUTO_INSTALLED_FILES="${AUTO_INSTALLED_FILES}${DESTDIR}${COMPFILE#.}\n"
d233 6
a238 1
				echo " *** WARNING: Problem installing ${COMPFILE}, it will remain to merge by hand"
a239 1
			return
a240 1
	fi
d242 11
a252 11
	echo "  Use 'd' to delete the temporary ${COMPFILE}"
	echo "  Use 'i' to install the temporary ${COMPFILE}"
	if [ -z "${NO_INSTALLED}" ]; then
		echo "  Use 'm' to merge the temporary and installed versions"
		echo "  Use 'v' to view the diff results again"
	fi
	echo ""
	echo "  Default is to leave the temporary file to deal with by hand"
	echo ""
	echo -n "How should I deal with this? [Leave it for later] "
	read HANDLE_COMPFILE
d254 1
a254 1
	case "${HANDLE_COMPFILE}" in
d286 2
a287 2
	esac
done
d289 1
a289 1
unset NO_INSTALLED
d294 1
a294 5
echo "===> Starting comparison"
if [ ! -d "${TEMPROOT}" ]; then
	echo " *** ERROR: ${TEMPROOT} does not exist!"
	exit 1
fi
d296 1
a296 1
cd ${TEMPROOT}
d298 6
a303 6
# use -size +0 to avoid comparing empty log files and device nodes
for COMPFILE in `find . -type f -size +0`; do
	if [ ! -e "${DESTDIR}${COMPFILE#.}" ]; then
		diff_loop
		continue
	fi
d305 7
a311 7
	# compare CVS $Id's first so if the file hasn't been modified,
	# it will be deleted from temproot and ignored from comparison
	if [ "${AUTOMODE}" ]; then
		CVSID1=`grep "[$]OpenBSD:" ${DESTDIR}${COMPFILE#.} 2>/dev/null`
		CVSID2=`grep "[$]OpenBSD:" ${COMPFILE} 2>/dev/null` || CVSID2=none
		if [ "${CVSID2}" = "${CVSID1}" ]; then rm "${COMPFILE}"; fi
	fi
d313 7
a319 6
	if [ -f "${COMPFILE}" ]; then
		# make sure files are different; if not, delete the one in temproot
		if diff -q "${DESTDIR}${COMPFILE#.}" "${COMPFILE}" > /dev/null 2>&1; then
			rm "${COMPFILE}"
		else
			diff_loop
d321 1
a321 2
	fi
done
d323 1
a323 1
echo "\n===> Comparison complete"
d328 3
a330 3
if [ "${AUTO_INSTALLED_FILES}" ]; then
	echo "${AUTO_INSTALLED_FILES}" > ${WRKDIR}/auto_installed_files
fi
d332 9
a340 8
if [ "${NEED_CAP_MKDB}" ]; then
	echo -n "===> You installed a new ${DESTDIR}/etc/login.conf file, "
	if [ "${AUTOMODE}" ]; then
		echo "running cap_mkdb"
		/usr/bin/cap_mkdb ${DESTDIR}/etc/login.conf
	else
		echo "\n    rebuild your login.conf database by running the following command as root:"
		echo "    '/usr/bin/cap_mkdb ${DESTDIR}/etc/login.conf'"
a341 1
fi
d343 9
a351 8
if [ "${NEED_PWD_MKDB}" ]; then
	echo -n "===> A new ${DESTDIR}/etc/master.passwd file was installed, "
	if [ "${AUTOMODE}" ]; then
		echo "running pwd_mkdb"
		/usr/sbin/pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd
	else
		echo "\n    rebuild your password files by running the following command as root:"
		echo "    '/usr/sbin/pwd_mkdb -d ${DESTDIR}/etc -p ${DESTDIR}/etc/master.passwd'"
a352 1
fi
d354 9
a362 8
if [ "${NEED_MAKEDEV}" ]; then
	echo -n "===> A new ${DESTDIR}/dev/MAKEDEV script was installed, "
	if [ "${AUTOMODE}" ]; then
		echo "running MAKEDEV"
		cd ${DESTDIR}/dev && /bin/sh MAKEDEV all
	else
		echo "\n    rebuild your device nodes by running the following command as root:"
		echo "    'cd ${DESTDIR}/dev && /bin/sh MAKEDEV all'"
a363 1
fi
d365 13
a377 12
if [ "${NEED_NEWALIASES}" ]; then
	echo -n "===> A new ${DESTDIR}/etc/mail/aliases file was installed, "
	if [ "${DESTDIR}" ]; then
		echo "\n    but the newaliases command is limited to the directories configured"
		echo "    in sendmail.cf.  Make sure to create your aliases database by"
		echo "    hand when your sendmail configuration is done."
	elif [ "${AUTOMODE}" ]; then
		echo "running newaliases"
		/usr/bin/newaliases
	else
		echo "\n    rebuild your aliases database by running the following command as root:"
		echo "    '/usr/bin/newaliases'"
a378 1
fi
d380 2
a381 2
echo "===> Making sure your directory hierarchy has correct perms, running mtree"
/usr/sbin/mtree -qdef ${DESTDIR}/etc/mtree/4.4BSD.dist -p ${DESTDIR:=/} -U 1> /dev/null
d383 19
a401 7
FILES_IN_WRKDIR=`find ${WRKDIR} -type f -size +0 2>/dev/null`
if [ "${FILES_IN_WRKDIR}" ]; then
	FILES_IN_TEMPROOT=`find ${TEMPROOT} -type f -size +0 2>/dev/null`
	FILES_IN_BKPDIR=`find ${BKPDIR} -type f -size +0 2>/dev/null`
	if [ "${AUTO_INSTALLED_FILES}" ]; then
		echo "===> Automatically installed file(s) listed in"
		echo "     ${WRKDIR}/auto_installed_files"
a402 12
	if [ "${FILES_IN_TEMPROOT}" ]; then
		echo "===> File(s) remaining for you to merge by hand:"
		find "${TEMPROOT}" -type f -size +0 -exec echo "     {}" \;
	fi
	if [ "${FILES_IN_BKPDIR}" ]; then
		echo "===> Backup of replaced file(s) can be found under ${BKPDIR}"
	fi
	echo "===> When done, ${WRKDIR} and its sub-directories should be removed"
else
	echo "===> Removing ${WRKDIR}"
	rm -rf "${WRKDIR}"
fi
d415 20
a434 19
		-a)
			AUTOMODE=1
			shift;;
		-s)
			WHERE="${2}"
			shift 2
			if [ -d "${WHERE}" ]; then
				SRCMODE=1
				SRCDIR=${WHERE}
			elif [ -f "${WHERE}" ]; then
				TGZMODE=1
				TGZ=${WHERE}
			else
				echo " *** ERROR: ${WHERE} is not a path to src nor etcXX.tgz"
				exit 1
			fi
			;;
		--)
			shift; break;;
@

