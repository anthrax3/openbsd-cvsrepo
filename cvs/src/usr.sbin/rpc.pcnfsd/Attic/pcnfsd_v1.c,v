head	1.5;
access;
symbols
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.07.07.21.37.07;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2003.02.15.12.15.04;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.02.15.11.53.45;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.19.19.16.12;	author ericj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@bye bye piece of crud
@
text
@/*	$OpenBSD: pcnfsd_v1.c,v 1.4 2003/02/15 12:15:04 deraadt Exp $	*/
/*	$NetBSD: pcnfsd_v1.c,v 1.2 1995/07/25 22:21:19 gwr Exp $	*/

/*
**=====================================================================
** Copyright (c) 1986,1987,1988,1989,1990,1991 by Sun Microsystems, Inc.
**	@@(#)pcnfsd_v1.c	1.1	9/3/91
**
** pcnfsd is copyrighted software, but is freely licensed. This
** means that you are free to redistribute it, modify it, ship it
** in binary with your system, whatever, provided:
**
** - you leave the Sun copyright notice in the source code
** - you make clear what changes you have introduced and do
**   not represent them as being supported by Sun.
**
** If you make changes to this software, we ask that you do so in
** a way which allows you to build either the "standard" version or
** your custom version from a single source file. Test it, lint
** it (it won't lint 100%, very little does, and there are bugs in
** some versions of lint :-), and send it back to Sun via email
** so that we can roll it into the source base and redistribute
** it. We'll try to make sure your contributions are acknowledged
** in the source, but after all these years it's getting hard to
** remember who did what.
**=====================================================================
*/

#include <sys/types.h>
#include <sys/stat.h>

#include <netdb.h>
#include <pwd.h>
#include <signal.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

#include "pcnfsd.h"
#include "paths.h"

/*ARGSUSED*/
void *
pcnfsd_null_1_svc(arg, req)
	void *arg;
	struct svc_req *req;
{
	static char dummy;

	return ((void *)&dummy);
}

auth_results *
pcnfsd_auth_1_svc(arg, req)
	auth_args *arg;
	struct svc_req *req;
{
	static auth_results r;
	char uname[32], pw[64];
	int c1, c2;
	struct passwd *p;


	r.stat = AUTH_RES_FAIL;	/* assume failure */
	r.uid = (int)-2;
	r.gid = (int)-2;

	scramble(arg->id, uname);
	scramble(arg->pw, pw);

	if (check_cache(uname, pw, &r.uid, &r.gid)) {
		r.stat = AUTH_RES_OK;
		wlogin(uname, req);
		return (&r);
	}

	if ((p = get_password(uname)) == NULL)
		return (&r);

	c1 = strlen(pw);
	c2 = strlen(p->pw_passwd);
	if ((c1 && !c2) || (c2 && !c1) ||
	   (strcmp(p->pw_passwd, crypt(pw, p->pw_passwd)))) 
           {
	   return (&r);
	   }
	r.stat = AUTH_RES_OK;
	r.uid = p->pw_uid;
	r.gid = p->pw_gid;
		wlogin(uname, req);

	add_cache_entry(p);

	return (&r);
}

pr_init_results *
pcnfsd_pr_init_1_svc(pi_arg, req)
	pr_init_args *pi_arg;
	struct svc_req *req;
{
	static pr_init_results pi_res;

	pi_res.stat = (pirstat)pr_init(pi_arg->system, pi_arg->pn, &pi_res.dir);

	return (&pi_res);
}

pr_start_results *
pcnfsd_pr_start_1_svc(ps_arg, req)
	pr_start_args *ps_arg;
	struct svc_req *req;
{
	static pr_start_results ps_res;
	char *dummyptr;

	ps_res.stat = (psrstat)pr_start2(ps_arg->system, ps_arg->pn,
			ps_arg->user, ps_arg->file, ps_arg->opts, &dummyptr);

	return (&ps_res);
}
@


1.4
log
@oops; i forgot to delete the block he said i could delete
@
text
@d1 1
a1 1
/*	$OpenBSD: pcnfsd_v1.c,v 1.3 2003/02/15 11:53:45 deraadt Exp $	*/
@


1.3
log
@copyright blob from geoff.arnold@@sun.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pcnfsd_v1.c,v 1.2 2001/08/19 19:16:12 ericj Exp $	*/
a15 2
** - you do not charge money for the source code (unlikely, given
**   its free availability)
@


1.2
log
@
first pass at some cleanup here
- use standard functions,, dont roll our own (strdup, strcasecmp, etc)
- style(9)
- share common headers.. more readable.
doesnt address some of the other problems (cacheing), yet
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a3 1
/* RE_SID: @@(%)/usr/dosnfs/shades_SCCS/unix/pcnfsd/v2/src/SCCS/s.pcnfsd_v1.c 1.1 91/09/03 12:41:50 SMI */
d8 20
@


1.1
log
@Initial revision
@
text
@d1 1
a10 1
#include "common.h"
d12 2
a13 10
/*
**=====================================================================
**             I N C L U D E   F I L E   S E C T I O N                *
**                                                                    *
** If your port requires different include files, add a suitable      *
** #define in the customization section, and make the inclusion or    *
** exclusion of the files conditional on this.                        *
**=====================================================================
*/
#include "pcnfsd.h"
d15 1
a15 1
#include <stdio.h>
a16 1
#include <sys/file.h>
d18 1
a18 3
#include <sys/stat.h>
#include <sys/ioctl.h>
#include <netdb.h>
d20 1
d22 2
a23 41
#ifndef SYSV
#include <sys/wait.h>
#endif

#ifdef ISC_2_0
#include <sys/fcntl.h>
#endif

#ifdef SHADOW_SUPPORT
#include <shadow.h>
#endif

/*
**---------------------------------------------------------------------
** Other #define's 
**---------------------------------------------------------------------
*/

extern void     scramble();
extern char    *crypt();

#ifdef WTMP
extern void wlogin();
#endif

extern struct passwd  *get_password();

/*
**---------------------------------------------------------------------
**                       Misc. variable definitions
**---------------------------------------------------------------------
*/

int             buggit = 0;

/*
**=====================================================================
**                      C O D E   S E C T I O N                       *
**=====================================================================
*/

d26 4
a29 3
void *pcnfsd_null_1_svc(arg, req)
void *arg;
struct svc_req *req;
d31 3
a33 2
static char dummy;
return((void *)&dummy);
d36 4
a39 3
auth_results *pcnfsd_auth_1_svc(arg, req)
auth_args *arg;
struct svc_req *req;
d41 4
a44 6
static auth_results r;

char            uname[32];
char            pw[64];
int             c1, c2;
struct passwd  *p;
d54 2
a55 4
#ifdef USER_CACHE
	if(check_cache(uname, pw, &r.uid, &r.gid)) {
		 r.stat = AUTH_RES_OK;
#ifdef WTMP
d57 2
a58 4
#endif
		 return (&r);
   }
#endif
d60 2
a61 3
	p = get_password(uname);
	if (p == (struct passwd *)NULL)
	   return (&r);
a72 1
#ifdef WTMP
a73 1
#endif
a74 1
#ifdef USER_CACHE
a75 1
#endif
d77 1
a77 1
return(&r);
d80 4
a83 3
pr_init_results *pcnfsd_pr_init_1_svc(pi_arg, req)
pr_init_args *pi_arg;
struct svc_req *req;
d85 1
a85 1
static pr_init_results pi_res;
d87 1
a87 2
	pi_res.stat =
	  (pirstat) pr_init(pi_arg->system, pi_arg->pn, &pi_res.dir);
d89 1
a89 1
return(&pi_res);
d92 4
a95 3
pr_start_results *pcnfsd_pr_start_1_svc(ps_arg, req)
pr_start_args *ps_arg;
struct svc_req *req;
d97 2
a98 2
static pr_start_results ps_res;
char *dummyptr;
d100 2
a101 3
	ps_res.stat =
	  (psrstat) pr_start2(ps_arg->system, ps_arg->pn, ps_arg->user,
	  ps_arg ->file, ps_arg->opts, &dummyptr);
d103 1
a103 1
return(&ps_res);
a104 1

@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
