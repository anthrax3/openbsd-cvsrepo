head	1.7;
access;
symbols
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2003.07.07.21.37.07;	author deraadt;	state dead;
branches;
next	1.6;

1.6
date	2003.02.15.12.15.04;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.15.11.53.45;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.08.19.19.16.12;	author ericj;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.01.03.24.10;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.08.19.17.06.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.48.06;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.48.06;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@bye bye piece of crud
@
text
@/*	$OpenBSD: pcnfsd_cache.c,v 1.6 2003/02/15 12:15:04 deraadt Exp $	*/
/*	$NetBSD: pcnfsd_cache.c,v 1.2 1995/07/25 22:20:37 gwr Exp $	*/

/*
 *=====================================================================
 * Copyright (c) 1986,1987,1988,1989,1990,1991 by Sun Microsystems, Inc.
 *	@@(#)pcnfsd_cache.c	1.1	9/3/91
 *
 * pcnfsd is copyrighted software, but is freely licensed. This
 * means that you are free to redistribute it, modify it, ship it
 * in binary with your system, whatever, provided:
 *
 * - you leave the Sun copyright notice in the source code
 * - you make clear what changes you have introduced and do
 *   not represent them as being supported by Sun.
 *
 * If you make changes to this software, we ask that you do so in
 * a way which allows you to build either the "standard" version or
 * your custom version from a single source file. Test it, lint
 * it (it won't lint 100%, very little does, and there are bugs in
 * some versions of lint :-), and send it back to Sun via email
 * so that we can roll it into the source base and redistribute
 * it. We'll try to make sure your contributions are acknowledged
 * in the source, but after all these years it's getting hard to
 * remember who did what.
 *=====================================================================
 */

#include <stdio.h>
#include <pwd.h>
#include <errno.h>
#include <string.h>
#include <unistd.h>

#include "pcnfsd.h"

#define CACHE_SIZE 16		/* keep it small, as linear searches are
				 * done */
struct cache 
{
       int   cuid;
       int   cgid;
       char  cpw[_PASSWORD_LEN];
       char  cuname[10];	/* keep this even for machines
				 * with alignment problems */
} User_cache[CACHE_SIZE];

int
check_cache(name, pw, p_uid, p_gid)
	char *name, *pw;
	int *p_uid, *p_gid;
{
	int i, c1, c2;

	for (i = 0; i < CACHE_SIZE; i++) {
		if (!strcmp(User_cache[i].cuname, name)) {
           		c1 = strlen(pw);
	       		c2 = strlen(User_cache[i].cpw);
	        	if ((!c1 && !c2) ||
	  	       	    !(strcmp(User_cache[i].cpw,
		       	           crypt(pw, User_cache[i].cpw)))) {
		        	*p_uid = User_cache[i].cuid;
		        	*p_gid = User_cache[i].cgid;
		        	return (1);
		    	}
		    	User_cache[i].cuname[0] = '\0'; /* nuke entry */
           		return (0);
       		}
	}
	return (0);
}

void
add_cache_entry(p)
	struct passwd *p;
{
	int i;

	for (i = CACHE_SIZE - 1; i > 0; i--)
		User_cache[i] = User_cache[i - 1];
	User_cache[0].cuid = p->pw_uid;
	User_cache[0].cgid = p->pw_gid;
	(void)strncpy(User_cache[0].cpw, p->pw_passwd, sizeof User_cache[0].cpw-1);
	User_cache[0].cpw[sizeof User_cache[0].cpw-1] = '\0';
	(void)strncpy(User_cache[0].cuname, p->pw_name, sizeof User_cache[0].cuname-1);
	User_cache[0].cuname[sizeof User_cache[0].cuname-1] = '\0';
}
@


1.6
log
@oops; i forgot to delete the block he said i could delete
@
text
@d1 1
a1 1
/*	$OpenBSD: pcnfsd_cache.c,v 1.5 2003/02/15 11:53:45 deraadt Exp $	*/
@


1.5
log
@copyright blob from geoff.arnold@@sun.com
@
text
@d1 1
a1 1
/*	$OpenBSD: pcnfsd_cache.c,v 1.4 2001/08/19 19:16:12 ericj Exp $	*/
a15 2
 * - you do not charge money for the source code (unlikely, given
 *   its free availability)
@


1.4
log
@
first pass at some cleanup here
- use standard functions,, dont roll our own (strdup, strcasecmp, etc)
- style(9)
- share common headers.. more readable.
doesnt address some of the other problems (cacheing), yet
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a3 1
/* RE_SID: @@(%)/usr/dosnfs/shades_SCCS/unix/pcnfsd/v2/src/SCCS/s.pcnfsd_cache.c 1.1 91/09/03 12:45:14 SMI */
d8 20
@


1.3
log
@no need to extern int errno if errno.h is included
@
text
@d1 1
d6 5
a10 16
**=====================================================================
** Copyright (c) 1986,1987,1988,1989,1990,1991 by Sun Microsystems, Inc.
**	@@(#)pcnfsd_cache.c	1.1	9/3/91
**=====================================================================
*/
#include "common.h"
/*
**=====================================================================
**             I N C L U D E   F I L E   S E C T I O N                *
**                                                                    *
** If your port requires different include files, add a suitable      *
** #define in the customization section, and make the inclusion or    *
** exclusion of the files conditional on this.                        *
**=====================================================================
*/
#include "pcnfsd.h"
d16 1
d18 1
a18 1
extern char    *crypt();
a19 9

/*
**---------------------------------------------------------------------
**                       Misc. variable definitions
**---------------------------------------------------------------------
*/


#ifdef USER_CACHE
d23 1
a23 1
       {
d29 1
a29 10
       }User_cache[CACHE_SIZE];



/*
**---------------------------------------------------------------------
**                 User cache support procedures 
**---------------------------------------------------------------------
*/

d33 2
a34 4
	char           *name;
   char           *pw;
   int            *p_uid;
   int            *p_gid;
d36 1
a36 2
	int             i;
   int             c1, c2;
d58 1
a58 1
	struct passwd  *p;
d60 1
a60 1
	int             i;
a70 5


#endif				/* USER_CACHE */


@


1.2
log
@buf oflows; reported by felix@@schlund.de but fixed by me because he did not send in a patch
@
text
@a35 1
extern int      errno;
@


1.1
log
@Initial revision
@
text
@d45 1
a45 1
       char  cpw[32];
d97 4
a100 2
	(void)strcpy(User_cache[0].cpw, p->pw_passwd);
	(void)strcpy(User_cache[0].cuname, p->pw_name);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
