head	1.14;
access;
symbols
	OPENBSD_6_2:1.14.0.10
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.12
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.8
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.4
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.8.0.8
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.6
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.4
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.2.0.22
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.20
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.18
	OPENBSD_2_8:1.2.0.16
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.14
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.12
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.10
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2014.10.20.02.33.42;	author guenther;	state Exp;
branches;
next	1.13;
commitid	bZbpWDoZDVt0RPe1;

1.13
date	2014.10.20.00.20.04;	author guenther;	state Exp;
branches;
next	1.12;
commitid	ciYfifbFHhmQvDo5;

1.12
date	2014.01.21.22.19.32;	author jsg;	state Exp;
branches;
next	1.11;

1.11
date	2009.08.12.13.21.17;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2007.02.18.20.26.38;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2007.02.18.08.18.03;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.18.15.51.02;	author henning;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.36.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.03.08.29.31;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.18.02.03.00;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.10.21.07.14;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.25.07.37.19;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.01.15.23.43.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@unifdef -DHAS_REGEXP -DHAS_PASSWD_MAPS -DHAS_FILE_MAPS \
  -DHAS_NIS_MAPS -DHAS_NIS_RELOAD -DRPC_4 -DHAS_UNION_MAPS \
  -DHAS_TCP_NFS -DOS_HAS_NDBM -DNFS_PROTOCOL_VERSION=3 \
  -DNFS_ARGS_NEEDS_PATH -DPRECISE_SYMLINKS -DHAS_EMPTY_AUTOMOUNTS \
  -DNEED_MNTOPT_PARSER -DSHORT_MOUNT_NAME -DHAS_NFS_QUALIFIED_NAMES \
  -UUPDATE_MTAB -UFIXUP_MNTENT -UMNTENT_HDR -UMNTINFO_DEV \
  -UMNTOPT_COMPRESS -UMNTOPT_NQNFS -UINFORM_MOUNTD \
  -USUNOS4_WORKAROUND -UULTRIX_HACK

ok deraadt@@
@
text
@/*
 * Copyright (c) 1990 Jan-Simon Pendry
 * Copyright (c) 1990 Imperial College of Science, Technology & Medicine
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Jan-Simon Pendry at Imperial College, London.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)get_args.c	8.1 (Berkeley) 6/6/93
 *	$Id: get_args.c,v 1.13 2014/10/20 00:20:04 guenther Exp $
 */

/*
 * Argument decode
 */

#include "am.h"
#include <syslog.h>
#include <sys/stat.h>
#include <unistd.h>

extern int optind;
extern char *optarg;

#if defined(DEBUG) && defined(PARANOID)
char **gargv;
#endif /* defined(DEBUG) && defined(PARANOID) */
int restart_existing_mounts;
int print_pid;
int normalize_hosts;
char *karch;			/* Kernel architecture */
char *cluster;			/* Cluster name */
char *domain;			/* YP domain */
int afs_timeo = -1;
int afs_retrans = -1;
int am_timeo = AM_TTL;
int am_timeo_w = AM_TTL_W;

#ifdef DEBUG
/*
 * List of debug options.
 */
static struct opt_tab dbg_opt[] = {
	{ "all", D_ALL },		/* All */
	{ "amq", D_AMQ },		/* Register for AMQ program */
	{ "daemon", D_DAEMON },		/* Enter daemon mode */
	{ "full", D_FULL },		/* Program trace */
	{ "mem", D_MEM },		/* Trace memory allocations */
	{ "mtab", D_MTAB },		/* Use local mtab file */
	{ "str", D_STR },		/* Debug string munging */
	{ "test", D_TEST },		/* Full debug - but no daemon */
	{ "trace", D_TRACE },		/* Protocol trace */
	{ 0, 0 }
};

int debug_flags = D_AMQ			/* Register AMQ */
		 |D_DAEMON		/* Enter daemon mode */
		 ;

/*
 * Switch on/off debug options
 */
int
debug_option(char *opt)
{
	return cmdoption(opt, dbg_opt, &debug_flags);
}
#endif /* DEBUG */

void
get_args(int c, char *v[])
{
	int opt_ch;
	int usage = 0;
	char *logfile = "syslog";
	char *sub_domain = 0;

	while ((opt_ch = getopt(c, v, "mnprva:c:d:h:k:l:t:w:x:y:C:D:")) != -1)
		switch (opt_ch) {
		case 'a':
			if (*optarg != '/') {
				fprintf(stderr, "%s: -a option must begin with a '/'\n",
				    __progname);
				exit(1);
			}
			auto_dir = optarg;
			break;

		case 'c':
			am_timeo = atoi(optarg);
			if (am_timeo <= 0)
				am_timeo = AM_TTL;
			break;

		case 'd':
			sub_domain = optarg;
			break;

		case 'h':
#if defined(HAS_HOST) && defined(HOST_EXEC)
			host_helper = optarg;
#else
			plog(XLOG_USER, "-h: option ignored.  HOST_EXEC is not enabled.");
			break;
#endif /* defined(HAS_HOST) && defined(HOST_EXEC) */

		case 'k':
			karch = optarg;
			break;

		case 'l':
			logfile = optarg;
			break;

		case 'm':
			plog(XLOG_USER, "The -m option is no longer supported.");
			plog(XLOG_USER, "... Use `ypcat -k am.master` on the command line instead");
			break;

		case 'n':
			normalize_hosts = 1;
			break;

		case 'p':
			print_pid = 1;
			break;

		case 'r':
			restart_existing_mounts = 1;
			break;

		case 't':
			/* timeo.retrans */
			{ char *dot = strchr(optarg, '.');
			  if (dot) *dot = '\0';
			  if (*optarg) {
				afs_timeo = atoi(optarg);
			  }
			  if (dot) {
				afs_retrans = atoi(dot+1);
				*dot = '.';
			  }
			}
			break;

		case 'v':
			fputs("Map support for: ", stderr);
			mapc_showtypes(stderr);
			fputs(".\nFS: ", stderr);
			ops_showfstypes(stderr);
			fputs(".\n", stderr);
			fprintf(stderr, "Primary network is %s.\n", wire);
			exit(0);
			break;

		case 'w':
			am_timeo_w = atoi(optarg);
			if (am_timeo_w <= 0)
				am_timeo_w = AM_TTL_W;
			break;

		case 'x':
			usage += switch_option(optarg);
			break;

		case 'y':
			domain = optarg;
			break;

		case 'C':
			cluster = optarg;
			break;

		case 'D':
#ifdef DEBUG
			usage += debug_option(optarg);
#else
			fprintf(stderr, "%s: not compiled with DEBUG option -- sorry.\n",
			    __progname);
#endif /* DEBUG */
			break;

		default:
			usage = 1;
			break;
		}

	if (xlog_level_init == ~0) {
		(void) switch_option("");
#ifdef DEBUG
		usage += switch_option("debug");
#endif /* DEBUG */
	} else {
#ifdef DEBUG
		usage += switch_option("debug");
#endif /* DEBUG */
	}

	if (usage)
		goto show_usage;

	while (optind <= c-2) {
		char *dir = v[optind++];
		char *map = v[optind++];
		char *opts = "";
		if (v[optind] && *v[optind] == '-')
			opts = &v[optind++][1];

		root_newmap(dir, opts, map);
	}

	if (optind == c) {

		/*
		 * Append domain name to hostname.
		 * sub_domain overrides hostdomain
		 * if given.
		 */
		if (sub_domain)
			hostdomain = sub_domain;
		if (*hostdomain == '.')
			hostdomain++;
		strlcat(hostd,  ".", 2 * MAXHOSTNAMELEN);
		strlcat(hostd, hostdomain, 2 * MAXHOSTNAMELEN);

#ifdef DEBUG
		{ if (debug_flags & D_MTAB) {
			dlog("-D mtab option ignored");
		} }
#endif /* DEBUG */

		if (switch_to_logfile(logfile) != 0)
			plog(XLOG_USER, "Cannot switch logfile");

		/*
		 * If the kernel architecture was not specified
		 * then use the machine architecture.
		 */
		if (karch == 0)
			karch = arch;

		if (cluster == 0)
			cluster = hostdomain;

		if (afs_timeo <= 0)
			afs_timeo = AFS_TIMEO;
		if (afs_retrans <= 0)
			afs_retrans = AFS_RETRANS;
		if (afs_retrans <= 0)
			afs_retrans = 3;	/* XXX */
		return;
	}

show_usage:
	fprintf(stderr,
	    "usage: %s [-nprv] [-a mount_point] [-C cluster] "
	    "[-c duration] [-D option]\n"
	    "\t[-d domain] [-k kernel-arch] [-l logfile] "
	    "[-t interval.interval]\n"
	    "\t[-w interval]", __progname);

#if defined(HAS_HOST) && defined(HOST_EXEC)
	fputs(" [-h host_helper]\n", stderr);
#endif /* defined(HAS_HOST) && defined(HOST_EXEC) */

	fputs(" [-y YP-domain]\n", stderr);

	show_opts('x', xlog_opt);
#ifdef DEBUG
	show_opts('D', dbg_opt);
#endif /* DEBUG */
	fprintf(stderr, "\t[directory mapname [-map-options]] ...\n");
	exit(1);
}
@


1.13
log
@Start removing portability goo: we have syslog(), strerror(), POSIX regexp,
    BSD-style getmntinfo(), BSD signals, 4.4BSD unmount(), etc
Delete configurations for other OSes
Delete fsinfo and mk-amd-map, as we don't build them.

ok deraadt@@
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.12 2014/01/21 22:19:32 jsg Exp $
a57 1
#ifdef HAS_NIS_MAPS
a58 4
#endif /* HAS_NIS_MAPS */
#ifdef UPDATE_MTAB
char *mtab;
#endif /* UPDATE_MTAB */
a191 1
#ifdef HAS_NIS_MAPS
a192 3
#else
			plog(XLOG_USER, "-y: option ignored.  No NIS support available.");
#endif /* HAS_NIS_MAPS */
a250 8
#ifdef UPDATE_MTAB
#ifdef DEBUG
		if (debug_flags & D_MTAB)
			mtab = DEBUG_MTAB;
		else
#endif /* DEBUG */
		mtab = MOUNTED;
#else
a255 1
#endif /* UPDATE_MTAB */
a290 1
#ifdef HAS_NIS_MAPS
a291 3
#else
	fputc('\n', stderr);
#endif /* HAS_NIS_MAPS */
@


1.12
log
@include unistd.h for getopt()
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.11 2009/08/12 13:21:17 deraadt Exp $
a42 1
#ifdef HAS_SYSLOG
a43 1
#endif /* HAS_SYSLOG */
a246 9
#ifdef hpux
		/*
		 * HP-UX can't handle ./mtab
		 * That system is sick - really.
		 */
#ifdef	DEBUG
		debug_option("nomtab");
#endif	/* DEBUG */
#endif	/* hpux */
@


1.11
log
@change some defaults inside amd itself, so that the rc scripts no longer
have to pass those options.  this makes amd much easier to restart by
hand (though it still remains a nasty daemon do that with)
ok millert
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.10 2007/02/18 20:26:38 jmc Exp $
d47 1
@


1.10
log
@oops, let synopsis and usage agree;
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.9 2007/02/18 08:18:03 jmc Exp $
d106 1
a106 1
	char *logfile = 0;
@


1.9
log
@sort options and sync usage(); from Igor Sobrado
also fix a misplaced .El
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.8 2005/02/18 15:51:02 henning Exp $
d309 1
a309 1
	    "usage: %s [-nprv] [-a mount_point] [-C cluster-name] "
@


1.8
log
@do not embed compile date and such in the binaries so they don't change
all time, ok millert@@
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.7 2003/06/02 23:36:51 millert Exp $
d309 5
a313 3
	    "Usage: %s [-mnprv] [-a mnt_point] [-c cache_time] [-d domain]\n"
	    "\t[-k kernel_arch] [-l logfile|\"syslog\"] [-t afs_timeout]\n"
	    "\t[-w wait_timeout] [-C cluster_name]", __progname);
d320 1
a320 1
	fputs(" [-y nis-domain]\n", stderr);
d329 1
a329 1
	fprintf(stderr, "\t{directory mapname [-map_options]} ...\n");
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d35 1
a35 1
 *	$Id: get_args.c,v 1.6 2002/08/03 08:29:31 pvalchev Exp $
a177 1
			fprintf(stderr, "%s%s (%s-endian).\n", copyright, version, endian);
@


1.6
log
@various KNF and code cleanup/simplification, parts checked by millert/deraadt
@
text
@d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
 *	$Id: get_args.c,v 1.5 2002/07/18 02:03:00 deraadt Exp $
@


1.5
log
@space nits
@
text
@d39 1
a39 1
 *	$Id: get_args.c,v 1.4 2002/06/10 21:07:14 itojun Exp $
a53 1
extern char *__progname;
d98 2
a99 2
int debug_option(opt)
char *opt;
d105 2
a106 3
void get_args(c, v)
int c;
char *v[];
d114 19
a132 9
	switch (opt_ch) {
	case 'a':
		if (*optarg != '/') {
			fprintf(stderr, "%s: -a option must begin with a '/'\n",
			    __progname);
			exit(1);
		}
		auto_dir = optarg;
		break;
d134 1
a134 11
	case 'c':
		am_timeo = atoi(optarg);
		if (am_timeo <= 0)
			am_timeo = AM_TTL;
		break;

	case 'd':
		sub_domain = optarg;
		break;

	case 'h':
d136 1
a136 1
		host_helper = optarg;
d138 2
a139 2
		plog(XLOG_USER, "-h: option ignored.  HOST_EXEC is not enabled.");
		break;
d142 59
a200 38
	case 'k':
		karch = optarg;
		break;

	case 'l':
		logfile = optarg;
		break;

	case 'm':
		plog(XLOG_USER, "The -m option is no longer supported.");
		plog(XLOG_USER, "... Use `ypcat -k am.master` on the command line instead");
		break;

	case 'n':
		normalize_hosts = 1;
		break;

	case 'p':
		print_pid = 1;
		break;

	case 'r':
		restart_existing_mounts = 1;
		break;

	case 't':
		/* timeo.retrans */
		{ char *dot = strchr(optarg, '.');
		  if (dot) *dot = '\0';
		  if (*optarg) {
			afs_timeo = atoi(optarg);
		  }
		  if (dot) {
			afs_retrans = atoi(dot+1);
			*dot = '.';
		  }
		}
		break;
d202 1
a202 22
	case 'v':
		fprintf(stderr, "%s%s (%s-endian).\n", copyright, version, endian);
		fputs("Map support for: ", stderr);
		mapc_showtypes(stderr);
		fputs(".\nFS: ", stderr);
		ops_showfstypes(stderr);
		fputs(".\n", stderr);
		fprintf(stderr, "Primary network is %s.\n", wire);
		exit(0);
		break;

	case 'w':
		am_timeo_w = atoi(optarg);
		if (am_timeo_w <= 0)
			am_timeo_w = AM_TTL_W;
		break;

	case 'x':
		usage += switch_option(optarg);
		break;

	case 'y':
d204 1
a204 1
		domain = optarg;
d206 1
a206 1
		plog(XLOG_USER, "-y: option ignored.  No NIS support available.");
d208 1
a208 1
		break;
d210 3
a212 3
	case 'C':
		cluster = optarg;
		break;
d214 1
a214 1
	case 'D':
d216 1
a216 1
		usage += debug_option(optarg);
d218 2
a219 2
		fprintf(stderr, "%s: not compiled with DEBUG option -- sorry.\n",
		    __progname);
d221 1
a221 1
		break;
d223 4
a226 4
	default:
		usage = 1;
		break;
	}
@


1.4
log
@strlcpy, strlcat
@
text
@d39 1
a39 1
 *	$Id: get_args.c,v 1.3 2002/05/25 07:37:19 deraadt Exp $
d177 1
a177 1
		  	afs_retrans = atoi(dot+1);
@


1.3
log
@__progname stuff; jason@@ackley.net
@
text
@d39 1
a39 1
 *	$Id: get_args.c,v 1.2 1997/01/15 23:43:45 millert Exp $
d274 2
a275 2
		strcat(hostd,  ".");
		strcat(hostd, hostdomain);
@


1.2
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d39 1
a39 1
 *	$Id: get_args.c,v 1.1.1.1 1995/10/18 08:47:10 deraadt Exp $
d54 1
d120 1
a120 1
					progname);
d220 2
a221 1
		fprintf(stderr, "%s: not compiled with DEBUG option -- sorry.\n", progname);
d316 3
a318 3
"Usage: %s [-mnprv] [-a mnt_point] [-c cache_time] [-d domain]\n\
\t[-k kernel_arch] [-l logfile|\"syslog\"] [-t afs_timeout]\n\
\t[-w wait_timeout] [-C cluster_name]", progname);
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
 *	$Id: get_args.c,v 1.3 1994/06/13 20:47:09 mycroft Exp $
d114 1
a114 1
	while ((opt_ch = getopt(c, v, "mnprva:c:d:h:k:l:t:w:x:y:C:D:")) != EOF)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
