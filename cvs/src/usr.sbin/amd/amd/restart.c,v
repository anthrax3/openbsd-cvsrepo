head	1.7;
access;
symbols
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.8
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.1.1.1.0.24
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.22
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2015.12.05.21.15.01;	author mmcc;	state Exp;
branches;
next	1.6;
commitid	dGqLLvlPAG0kHsOT;

1.6
date	2014.10.20.06.55.59;	author guenther;	state Exp;
branches;
next	1.5;
commitid	1xnKI9ul35JBjA4W;

1.5
date	2009.10.27.23.59.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.23.36.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.03.08.29.31;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.18.02.03.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.12;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove a bunch of NULL-checks before free().
@
text
@/*
 * Copyright (c) 1990 Jan-Simon Pendry
 * Copyright (c) 1990 Imperial College of Science, Technology & Medicine
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Jan-Simon Pendry at Imperial College, London.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "am.h"

/*
 * Handle an amd restart.
 *
 * Scan through the mount list finding all "interesting" mount points.
 * Next hack up partial data structures and add the mounted file
 * system to the list of known filesystems.  This will leave a
 * dangling reference to that filesystems, so when the filesystem is
 * finally inherited, an extra "free" must be done on it.
 *
 * This module relies on internal details of other components.  If
 * you change something else make *sure* restart() still works.
 */
void
restart()
{
	/*
	 * Read the existing mount table
	 */
	mntlist *ml, *mlp;

	/*
	 * For each entry, find nfs, ufs or auto mounts
	 * and create a partial am_node to represent it.
	 */
	for (mlp = ml = read_mtab("restart"); mlp; mlp = mlp->mnext) {
		struct mntent *me = mlp->mnt;
		am_ops *fs_ops = 0;
		if (STREQ(me->mnt_type, "ffs")) {
			/*
			 * UFS entry
			 */
			fs_ops = &ufs_ops;
		} else if (STREQ(me->mnt_type, "nfs")) {
			/*
			 * NFS entry, or possibly an Amd entry...
			 */
			int au_pid;
			char *colon = strchr(me->mnt_fsname, ':');
			if (colon && sscanf(colon, ":(pid%d)", &au_pid) == 1) {
				plog(XLOG_WARNING, "%s is an existing automount point", me->mnt_dir);
				fs_ops = &sfs_ops;
			} else {
				fs_ops = &nfs_ops;
			}
		} else if (STREQ(me->mnt_type, "mfs")) {
			/*
			 * MFS entry.  Fake with a symlink.
			 */
			fs_ops = &sfs_ops;
		} else {
			/*
			 * Catch everything else with symlinks to
			 * avoid recursive mounts.  This is debatable...
			 */
			fs_ops = &sfs_ops;
		}

		/*
		 * If we found something to do
		 */
		if (fs_ops) {
			mntfs *mf;
			am_opts mo;
			char *cp;
			cp = strchr(me->mnt_fsname, ':');
			/*
			 * Partially fake up an opts structure
			 */
			mo.opt_rhost = 0;
			mo.opt_rfs = 0;
			if (cp) {
				*cp = '\0';
				mo.opt_rhost = strdup(me->mnt_fsname);
				mo.opt_rfs = strdup(cp+1);
				*cp = ':';
			} else if (fs_ops->ffserver == find_nfs_srvr) {
				/*
				 * Prototype 4.4 BSD used to end up here -
				 * might as well keep the workaround for now
				 */
				plog(XLOG_WARNING, "NFS server entry assumed to be %s:/", me->mnt_fsname);
				mo.opt_rhost = strdup(me->mnt_fsname);
				mo.opt_rfs = strdup("/");
				me->mnt_fsname = str3cat(me->mnt_fsname, mo.opt_rhost, ":", "/");
			}
			mo.opt_fs = me->mnt_dir;
			mo.opt_opts = me->mnt_opts;

			/*
			 * Make a new mounted filesystem
			 */
			mf = find_mntfs(fs_ops, &mo, me->mnt_dir,
				me->mnt_fsname, "", me->mnt_opts, "");
			if (mf->mf_refc == 1) {
				mf->mf_flags |= MFF_RESTART|MFF_MOUNTED;
				mf->mf_error = 0;	/* Already mounted correctly */
				mf->mf_fo = 0;
				/*
				 * If the restarted type is a link then
				 * don't time out.
				 */
				if (fs_ops == &sfs_ops || fs_ops == &ufs_ops)
					mf->mf_flags |= MFF_RSTKEEP;
				if (fs_ops->fs_init) {
					/*
					 * Don't care whether this worked since
					 * it is checked again when the fs is
					 * inherited.
					 */
					(void) (*fs_ops->fs_init)(mf);
				}

				plog(XLOG_INFO, "%s restarted fstype %s on %s",
					me->mnt_fsname, fs_ops->fs_type, me->mnt_dir);
			} else {
				/* Something strange happened - two mounts at the same place! */
				free_mntfs(mf);
			}
			/*
			 * Clean up mo
			 */
			free(mo.opt_rhost);
			free(mo.opt_rfs);
		}
	}

	/*
	 * Free the mount list
	 */
	free_mntlist(ml);
}
@


1.6
log
@Change MTAB_TYPE_UFS from "ufs" to "ffs", fixing mount-restarting for them.
Perform one level of expansion on the various "portability" macros from os-*.h
Delete support for Hesiod and the pre-4.4 versions of the NFS API
Delete the no-op unlock_mntlist()
unifdef -UFASCIST_DF_COMMAND -UMOUNT_HELPER_SOURCE
Move the struct mntent and MNTMAXSTR definitions into include/am.h
Move the commented-out -DHAS_NDBM_MAPS into amd/Makefile
Expand OS_REP to "bsd44".
With config/* empty, delete them.

"lot of stuff...but I know your process on this" deraadt@@
@
text
@d158 2
a159 4
			if (mo.opt_rhost)
				free(mo.opt_rhost);
			if (mo.opt_rfs)
				free(mo.opt_rfs);
@


1.5
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d64 1
a64 1
		if (STREQ(me->mnt_type, MTAB_TYPE_UFS)) {
d69 1
a69 1
		} else if (STREQ(me->mnt_type, MTAB_TYPE_NFS)) {
d81 1
a81 2
#ifdef MTAB_TYPE_MFS
		} else if (STREQ(me->mnt_type, MTAB_TYPE_MFS)) {
a85 1
#endif /* MTAB_TYPE_MFS */
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@a34 5
#ifndef lint
/*static char sccsid[] = "from: @@(#)restart.c	8.1 (Berkeley) 6/6/93";*/
static char *rcsid = "$Id: restart.c,v 1.3 2002/08/03 08:29:31 pvalchev Exp $";
#endif /* not lint */

@


1.3
log
@various KNF and code cleanup/simplification, parts checked by millert/deraadt
@
text
@d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
static char *rcsid = "$Id: restart.c,v 1.2 2002/07/18 02:03:00 deraadt Exp $";
@


1.2
log
@space nits
@
text
@d41 1
a41 1
static char *rcsid = "$Id: restart.c,v 1.1.1.1 1995/10/18 08:47:12 deraadt Exp $";
d58 2
a59 1
void restart()
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
static char *rcsid = "$Id: restart.c,v 1.3 1994/06/13 20:47:57 mycroft Exp $";
d123 1
a123 1
				/* 
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
