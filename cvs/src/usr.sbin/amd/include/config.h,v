head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.6
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.7.0.38
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.36
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.32
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.30
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.26
	OPENBSD_5_0:1.7.0.24
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.22
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.20
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.16
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.18
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.14
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.12
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.10
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.8
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.6
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.4
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.1.1.1.0.24
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.22
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.12.11.04.26.01;	author mmcc;	state Exp;
branches;
next	1.11;
commitid	QfxsBeGJitJUAfkd;

1.11
date	2014.10.26.02.32.51;	author guenther;	state Exp;
branches;
next	1.10;
commitid	iT0Nq2N4oC6UxuDO;

1.10
date	2014.10.26.01.16.49;	author guenther;	state Exp;
branches;
next	1.9;
commitid	Qcgfc5DGBBARLngk;

1.9
date	2014.10.20.06.55.59;	author guenther;	state Exp;
branches;
next	1.8;
commitid	1xnKI9ul35JBjA4W;

1.8
date	2014.10.20.00.20.04;	author guenther;	state Exp;
branches;
next	1.7;
commitid	ciYfifbFHhmQvDo5;

1.7
date	2005.12.21.01.40.24;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.31.10.38.20;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.36.52;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.08.05.07.24.26;	author pvalchev;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.03.08.29.32;	author pvalchev;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.26.02.49.50;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.21;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Remove debugging fluff from allocation functions. There's probably more
of this stuff elsewhere in amd.

"such clutter just makes people not care" deraadt@@
@
text
@/*
 * Copyright (c) 1990 Jan-Simon Pendry
 * Copyright (c) 1990 Imperial College of Science, Technology & Medicine
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Jan-Simon Pendry at Imperial College, London.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)config.h	8.1 (Berkeley) 6/6/93
 *	$Id: config.h,v 1.11 2014/10/26 02:32:51 guenther Exp $
 */

/*
 * Pick up target dependent definitions
 */
#include <sys/types.h>
#include <sys/time.h>
#include <errno.h>
#include <stdio.h>

#define clocktime() (clock_valid ? clock_valid : time(&clock_valid))
extern time_t clock_valid;	/* Clock needs recalculating */

extern char *__progname;
extern char hostname[];		/* "kiska" */
extern pid_t mypid;		/* Current process id */

extern int syslogging;		/* Really using syslog */
extern FILE *logfp;		/* Log file */
extern int xlog_level;		/* Logging level */
extern int xlog_level_init;

extern int orig_umask;		/* umask() on startup */

#define	XLOG_FATAL	0x0001
#define	XLOG_ERROR	0x0002
#define	XLOG_USER	0x0004
#define	XLOG_WARNING	0x0008
#define	XLOG_INFO	0x0010
#define	XLOG_DEBUG	0x0020
#define	XLOG_MAP	0x0040
#define	XLOG_STATS	0x0080

#define XLOG_DEFSTR	"all,nomap,nostats"		/* Default log options */
#define XLOG_ALL	(XLOG_FATAL|XLOG_ERROR|XLOG_USER|XLOG_WARNING|XLOG_INFO|XLOG_MAP|XLOG_STATS)

#ifdef DEBUG
#define	D_ALL	(~0)

#define Debug(x) if (!(debug_flags & (x))) ; else
#define dlog Debug(D_FULL) dplog
#endif /* DEBUG */

/*
 * Option tables
 */
struct opt_tab {
	char *opt;
	int flag;
};

extern struct opt_tab xlog_opt[];

extern int cmdoption(char *, struct opt_tab *, int *);
extern void going_down(int);
#ifdef DEBUG
#define dplog(fmt, args...) plog(XLOG_DEBUG, fmt, ## args)
#endif /* DEBUG */
extern void plog(int, const char *, ...)
    __attribute__((__format__ (syslog, 2, 3)));
extern void show_opts(int ch, struct opt_tab *);
__dead void xmallocfailure(void);
extern void *xmalloc(size_t);
extern void *xreallocarray(void *, size_t, size_t);
@


1.11
log
@Use vsyslog() instead of manually expanding the string and calling syslog(%s)
Now that newline stripping isn't needed, use vfprintf() instead of formatting
   and then writing it out.
Delete bogus XXX comment that predated the switch to vsnprintf()
Make the format string const char *
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.10 2014/10/26 01:16:49 guenther Exp $
a73 4

#ifdef DEBUG_MEM
#define free(x) xfree(__FILE__,__LINE__,x)
#endif /* DEBUG_MEM */
@


1.10
log
@Replace xrealloc() with xreallocarray().  Break-out the 'log and die'
function as xmallocfailure() and use that in the locations where
reallocarray's checks alone aren't sufficient.

ok doug@@ deraadt@@
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.9 2014/10/20 06:55:59 guenther Exp $
d98 2
a99 1
extern void plog(int, char *, ...) __attribute__((__format__ (syslog, 2, 3)));
@


1.9
log
@Change MTAB_TYPE_UFS from "ufs" to "ffs", fixing mount-restarting for them.
Perform one level of expansion on the various "portability" macros from os-*.h
Delete support for Hesiod and the pre-4.4 versions of the NFS API
Delete the no-op unlock_mntlist()
unifdef -UFASCIST_DF_COMMAND -UMOUNT_HELPER_SOURCE
Move the struct mntent and MNTMAXSTR definitions into include/am.h
Move the commented-out -DHAS_NDBM_MAPS into amd/Makefile
Expand OS_REP to "bsd44".
With config/* empty, delete them.

"lot of stuff...but I know your process on this" deraadt@@
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.8 2014/10/20 00:20:04 guenther Exp $
d98 1
a98 1
extern void plog(int, char *, ...);
d100 3
a102 2
extern void *xmalloc(int);
extern void *xrealloc(void *, int);
@


1.8
log
@Start removing portability goo: we have syslog(), strerror(), POSIX regexp,
    BSD-style getmntinfo(), BSD signals, 4.4BSD unmount(), etc
Delete configurations for other OSes
Delete fsinfo and mk-amd-map, as we don't build them.

ok deraadt@@
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.7 2005/12/21 01:40:24 millert Exp $
d41 2
a42 3
#include "os-defaults.h"
#include "os-bsd44.h"

a44 2
#include <sys/types.h>
#include <sys/time.h>
@


1.7
log
@Userland programs should include <errno.h> not <sys/errno.h>
OK deraadt@@
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.6 2004/05/31 10:38:20 otto Exp $
a37 6
#ifdef __GNUC__
#define INLINE /* __inline */
#else
#define	INLINE
#endif /* __GNUC__ */

d42 1
a42 1
#include OS_HDR
a55 1
#ifdef HAS_SYSLOG
a56 1
#endif /* HAS_SYSLOG */
@


1.6
log
@Remove redundant errno declaration. ok deraadt@@
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.5 2003/06/02 23:36:52 millert Exp $
d50 1
a52 1
#include <sys/errno.h>
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d35 1
a35 1
 *	$Id: config.h,v 1.4 2002/08/05 07:24:26 pvalchev Exp $
a52 1
extern int errno;
@


1.4
log
@Get rid of useless local definitions P_void, voidp, Const and use
void, void *, const respectively; some cosmetics; ok deraadt
@
text
@d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
 *	$Id: config.h,v 1.3 2002/08/03 08:29:32 pvalchev Exp $
@


1.3
log
@various KNF and code cleanup/simplification, parts checked by millert/deraadt
@
text
@d39 1
a39 1
 *	$Id: config.h,v 1.2 2002/05/26 02:49:50 deraadt Exp $
a41 11
/*
 * Get this in now so that OS_HDR can use it
 */
#ifdef __STDC__
#define	P_void void
#define	Const const
#else
#define P_void /* as nothing */
#define Const /* as nothing */
#endif /* __STDC__ */

a53 6
#ifdef VOIDP
typedef void *voidp;
#else
typedef char *voidp;
#endif /* VOIDP */

d116 2
a117 2
extern voidp xmalloc(int);
extern voidp xrealloc(voidp, int);
@


1.2
log
@pid_cleanup, inspired by work by jason@@ackley.net
@
text
@d39 1
a39 1
 *	$Id: config.h,v 1.1.1.1 1995/10/18 08:47:21 deraadt Exp $
a45 1
#define	P(x) x
a48 1
#define P(x) ()
a77 1
extern time_t time P((time_t *));
d80 1
a80 1
extern char *progname;		/* "amd"|"mmd" */
d126 2
a127 2
extern int cmdoption P((char*, struct opt_tab*, int*));
extern void going_down P((int));
d129 1
a129 2
extern void dplog ();
/*extern void dplog P((char*, ...));*/
d131 4
a134 6
extern void plog ();
/*extern void plog P((int, char*, ...));*/
extern void show_opts P((int ch, struct opt_tab*));
extern char* strchr P((const char*, int)); /* C */
extern voidp xmalloc P((int));
extern voidp xrealloc P((voidp, int));
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
 *	$Id: config.h,v 1.3 1994/06/13 20:50:35 mycroft Exp $
d85 1
a85 1
extern int mypid;		/* Current process id */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
