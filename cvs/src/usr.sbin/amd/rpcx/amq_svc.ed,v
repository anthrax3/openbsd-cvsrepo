head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.14
	OPENBSD_6_2_BASE:1.1
	OPENBSD_6_1:1.1.0.12
	OPENBSD_6_1_BASE:1.1
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.1
date	2015.01.22.03.43.58;	author guenther;	state Exp;
branches;
next	;
commitid	rWRB7wdvhHzZsMSB;


desc
@@


1.1
log
@amd's nfs_prot.x file has some tweaks from the standard; automate them with ed.
Regenerate the amd's NFS RPC stubs with a current rpcgen, automating the
  post-generation tweaks to the svc stubs.  However, do follow the modern
  naming style where the svc stubs have a _svc suffix.
As a side benefit, this eliminates the need to #include <nfs/nfsproto.h>
This is all a prelude to updating amd to talk NFSv3 with the kernel for
  its own "toplvl" mounts, to squash another y2038 issue.
@
text
@/"amq.h"/a
#include "am.h"
#include <arpa/inet.h>
.
/_msgout(/-1,/^}/d
/local/a
	extern SVCXPRT *lamqp;

	if (transp != lamqp) {
		struct sockaddr_in *fromsin = svc_getcaller(transp);

		syslog(LOG_WARNING,
		    "non-local amq attempt (might be from %s)",
		    inet_ntoa(fromsin->sin_addr));
		svcerr_noproc(transp);
		return;
	}
.
/_msgout/;+1c
		plog(XLOG_FATAL, "unable to free rpc arguments in amqprog");
		going_down(1);
.
g/_rpcsvcdirty/d
wq
@
