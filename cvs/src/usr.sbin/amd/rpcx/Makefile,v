head	1.2;
access;
symbols
	OPENBSD_6_1:1.2.0.12
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@# @;


1.2
date	2015.01.22.03.43.58;	author guenther;	state Exp;
branches;
next	1.1;
commitid	rWRB7wdvhHzZsMSB;

1.1
date	2015.01.21.08.24.41;	author guenther;	state Exp;
branches;
next	;
commitid	fwWHCHQH9uktPmic;


desc
@@


1.2
log
@amd's nfs_prot.x file has some tweaks from the standard; automate them with ed.
Regenerate the amd's NFS RPC stubs with a current rpcgen, automating the
  post-generation tweaks to the svc stubs.  However, do follow the modern
  naming style where the svc stubs have a _svc suffix.
As a side benefit, this eliminates the need to #include <nfs/nfsproto.h>
This is all a prelude to updating amd to talk NFSv3 with the kernel for
  its own "toplvl" mounts, to squash another y2038 issue.
@
text
@
RPCGEN = rpcgen -C

AMQ = amq.h amq_clnt.c amq_svc.c amq_xdr.c
NFS = nfs_prot.h nfs_prot_svc.c nfs_prot_xdr.c

NFSX = /usr/include/rpcsvc/nfs_prot.x

all: ${AMQ} ${NFS}

.SUFFIXES:
.SUFFIXES: .x .h _xdr.c _clnt.c .c

.x.h:
	${RPCGEN} -o $@@ -h $<
.x_xdr.c:
	${RPCGEN} -o $@@ -c -i 100 $<
.x_clnt.c:
	${RPCGEN} -o $@@ -l $<

amq_svc.c: amq.x $*.ed
	${RPCGEN} -o $@@.tmp -m amq.x
	ed -s $@@.tmp <$*.ed
	mv $@@.tmp $@@

nfs_prot_svc.c: nfs_prot.x $*.ed
	${RPCGEN} -o $@@.tmp -m nfs_prot.x
	ed -s $@@.tmp <$*.ed
	mv $@@.tmp $@@

nfs_prot.x: ${NFSX} $*.ed
	cat ${NFSX} >$@@.tmp
	ed -s $@@.tmp <$*.ed
	mv $@@.tmp $@@
@


1.1
log
@Regenerate the amq RPC stubs with a -current rpcgen, with some
post-processing of the server stub to match previous local changes.
This corrects the type handling of mt_mounttime, so "amq /mountpoint"
doesn't segv trying to treat a time_t as a pointer.
With the file (re)generation fixed, we can more easily update the
protocol to support 64bit time_t...
@
text
@d4 2
a5 1
AMQ_SVC_EXTRA = amq_svc.extra
d7 1
a7 1
all: amq.h amq_clnt.c amq_svc.c amq_xdr.c
d9 13
a21 7
amq.h: amq.x
	${RPCGEN} -o $@@ -h amq.x
amq_xdr.c: amq.x
	${RPCGEN} -o $@@ -c -i 100 amq.x
amq_clnt.c: amq.x
	${RPCGEN} -o $@@ -l amq.x
amq_svc.c: amq.x ${AMQ_SVC_EXTRA} Makefile
d23 1
a23 2
	printf '/"amq.h"/a\n#include "am.h"\n#include <arpa/inet.h>\n.\n/_msgout(/-1,/^}/d\n/local/r %s\n/_msgout/\n.,+1c\n\t\tplog(XLOG_FATAL, "unable to free rpc arguments in amqprog");\n\t\tgoing_down(1);\n.\ng/_rpcsvcdirty/d\nwq\n' ${AMQ_SVC_EXTRA} | \
		ed -s $@@.tmp >/dev/null
d26 4
d31 4
@

