head	1.12;
access;
symbols
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.22
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.10.20.00.20.04;	author guenther;	state dead;
branches;
next	1.11;
commitid	ciYfifbFHhmQvDo5;

1.11
date	2013.12.03.02.14.58;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2007.03.20.04.00.32;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2004.05.07.15.51.12;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.23.36.52;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.08.05.07.24.26;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.18.10.10.56;	author pvalchev;	state Exp;
branches;
next	1.4;

1.4
date	2002.06.11.05.29.55;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.18.41.42;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.01.15.23.43.48;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.22;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.22;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Start removing portability goo: we have syslog(), strerror(), POSIX regexp,
    BSD-style getmntinfo(), BSD signals, 4.4BSD unmount(), etc
Delete configurations for other OSes
Delete fsinfo and mk-amd-map, as we don't build them.

ok deraadt@@
@
text
@/*
 * Copyright (c) 1990, 1993 Jan-Simon Pendry
 * Copyright (c) 1990 Imperial College of Science, Technology & Medicine
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Jan-Simon Pendry at Imperial College, London.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)mk-amd-map.c	8.1 (Berkeley) 6/28/93
 *	$Id: mk-amd-map.c,v 1.11 2013/12/03 02:14:58 deraadt Exp $
 */

/*
 * Convert a file map into an ndbm map
 */

#include "am.h"

#ifndef SIGINT
#include <signal.h>
#endif
#include <unistd.h>

#ifdef OS_HAS_NDBM
#define HAS_DATABASE
#include <ndbm.h>

#ifdef DBM_SUFFIX
#define USING_DB
#endif

#define create_database(name) dbm_open(name, O_RDWR|O_CREAT, 0644)

static int
store_data(void *db, char *k, char *v)
{
	datum key, val;

	key.dptr = k; val.dptr = v;
	key.dsize = strlen(k) + 1;
	val.dsize = strlen(v) + 1;
	return dbm_store((DBM *) db, key, val, DBM_INSERT);
}

#endif /* OS_HAS_NDBM */

#ifdef HAS_DATABASE
#include <fcntl.h>
#include <ctype.h>

static int
read_line(char *buf, int size, FILE *fp)
{
	int done = 0;

	do {
		while (fgets(buf, size, fp)) {
			int len = strlen(buf);
			done += len;
			if (len > 1 && buf[len-2] == '\\' &&
					buf[len-1] == '\n') {
				int ch;
				buf += len - 2;
				size -= len - 2;
				*buf = '\n'; buf[1] = '\0';
				/*
				 * Skip leading white space on next line
				 */
				while ((ch = getc(fp)) != EOF &&
					isascii(ch) && isspace(ch))
						;
				(void) ungetc(ch, fp);
			} else {
				return done;
			}
		}
	} while (size > 0 && !feof(fp));

	return done;
}

/*
 * Read through a map
 */
static int
read_file(FILE *fp, char *map, void *db)
{
	char key_val[2048];
	int chuck = 0;
	int line_no = 0;
	int errs = 0;

	while (read_line(key_val, sizeof(key_val), fp)) {
		char *kp;
		char *cp;
		char *hash;
		int len = strlen(key_val);
		line_no++;

		/*
		 * Make sure we got the whole line
		 */
		if (key_val[len-1] != '\n') {
			fprintf(stderr, "line %d in \"%s\" is too long", line_no, map);
			chuck = 1;
		} else {
			key_val[len-1] = '\0';
		}

		/*
		 * Strip comments
		 */
		hash = strchr(key_val, '#');
		if (hash)
			*hash = '\0';

		/*
		 * Find start of key
		 */
		for (kp = key_val;
		    isascii((unsigned char)*kp) && isspace((unsigned char)*kp);
		    kp++)
			;

		/*
		 * Ignore blank lines
		 */
		if (!*kp)
			goto again;

		/*
		 * Find end of key
		 */
		for (cp = kp; *cp &&
		    (!isascii((unsigned char)*cp) || !isspace((unsigned char)*cp));
		    cp++)
			;

		/*
		 * Check whether key matches, or whether
		 * the entry is a wildcard entry.
		 */
		if (*cp)
			*cp++ = '\0';
		while (isascii((unsigned char)*cp) && isspace((unsigned char)*cp))
			cp++;
		if (*kp == '+') {
			fprintf(stderr, "Can't interpolate %s\n", kp);
			errs++;
		} else if (*cp) {
			if (db) {
				if (store_data(db, kp, cp) < 0) {
					fprintf(stderr, "Could store %s -> %s\n", kp, cp);
					errs++;
				}
			} else {
				printf("%s\t%s\n", kp, cp);
			}
		} else {
			fprintf(stderr, "%s: line %d has no value field", map, line_no);
			errs++;
		}

again:
		/*
		 * If the last read didn't get a whole line then
		 * throw away the remainder before continuing...
		 */
		if (chuck) {
			while (fgets(key_val, sizeof(key_val), fp) &&
				!strchr(key_val, '\n'))
					;
			chuck = 0;
		}
	}
	return errs;
}

static int
remove_file(char *f)
{
	if (unlink(f) < 0 && errno != ENOENT)
		return -1;
	return 0;
}

int
main(int argc, char *argv[])
{
	FILE *mapf;
	char *map;
	int rc = 0;
	DBM *mapd;
	static char maptmp[] = "dbmXXXXXXXXXX";
	char maptpag[16];
	char *mappag;
#ifndef USING_DB
	char maptdir[16];
	char *mapdir;
#endif
	int len;
	char *sl;
	int printit = 0;
	int usage = 0;
	int ch;
	extern int optind;

	while ((ch = getopt(argc, argv, "p")) != -1)
	switch (ch) {
	case 'p':
		printit = 1;
		break;
	default:
		usage++;
		break;
	}

	if (usage || optind != (argc - 1)) {
		fputs("Usage: mk-amd-map [-p] file-map\n", stderr);
		exit(1);
	}

	map = argv[optind];
	sl = strrchr(map, '/');
	if (sl) {
		*sl = '\0';
		if (chdir(map) < 0) {
			fputs("Can't chdir to ", stderr);
			perror(map);
			exit(1);
		}
		map = sl + 1;
	}

	if (!printit) {
#ifdef USING_DB
		len = strlen(map) + 4;
		mappag = (char *) malloc(len);
		if (!mappag) {
			perror("mk-amd-map: malloc");
			exit(1);
		}
		mktemp(maptmp);
		snprintf(maptpag, sizeof(maptpag), "%s.db", maptmp);
		if (remove_file(maptpag) < 0) {
			fprintf(stderr, "Can't remove existing temporary file");
			perror(maptpag);
			exit(1);
		}
#else
		len = strlen(map) + 5;
		mappag = (char *) malloc(len);
		mapdir = (char *) malloc(len);
		if (!mappag || !mapdir) {
			perror("mk-amd-map: malloc");
			exit(1);
		}
		mktemp(maptmp);
		snprintf(maptpag, sizeof(maptpag), "%s.pag", maptmp);
		snprintf(maptdir, sizeof(maptdir), "%s.dir", maptmp);
		if (remove_file(maptpag) < 0 || remove_file(maptdir) < 0) {
			fprintf(stderr, "Can't remove existing temporary files; %s and", maptpag);
			perror(maptdir);
			exit(1);
		}
#endif
	}

	mapf =  fopen(map, "r");
	if (mapf && !printit)
		mapd = create_database(maptmp);
	else
		mapd = 0;

#ifndef DEBUG
	signal(SIGINT, SIG_IGN);
#endif

	if (mapd || printit) {
		int error = read_file(mapf, map, mapd);
		if (mapd)
			dbm_close(mapd);
		(void) fclose(mapf);
		if (printit) {
			if (error) {
				fprintf(stderr, "Error creating ndbm map for %s\n", map);
				rc = 1;
			}
		} else {
			if (error) {
				fprintf(stderr, "Error reading source file  %s\n", map);
				rc = 1;
			} else {
#ifdef USING_DB
				snprintf(mappag, len, "%s.db", map);
				if (rename(maptpag, mappag) < 0) {
					fprintf(stderr, "Couldn't rename %s to ", maptpag);
					perror(mappag);
					/* Throw away the temporary map */
					unlink(maptpag);
					rc = 1;
				}
#else
				snprintf(mappag, len, "%s.pag", map);
				snprintf(mapdir, len, "%s.dir", map);
				if (rename(maptpag, mappag) < 0) {
					fprintf(stderr, "Couldn't rename %s to ", maptpag);
					perror(mappag);
					/* Throw away the temporary map */
					unlink(maptpag);
					unlink(maptdir);
					rc = 1;
				} else if (rename(maptdir, mapdir) < 0) {
					fprintf(stderr, "Couldn't rename %s to ", maptdir);
					perror(mapdir);
					/* Put the .pag file back */
					rename(mappag, maptpag);
					/* Throw away remaining part of original map */
					unlink(mapdir);
					fprintf(stderr,
						"WARNING: existing map \"%s.{dir,pag}\" destroyed\n",
						map);
					rc = 1;
				}
#endif
			}
		}
	} else {
		fprintf(stderr, "Can't open \"%s.{dir,pag}\" for ", map);
		perror("writing");
		rc = 1;
	}
	exit(rc);
}
#else
main()
{
	fputs("mk-amd-map: This system does not support hashed database files\n", stderr);
	exit(1);
}
#endif /* HAS_DATABASE */
@


1.11
log
@ctype cleanups
ok okan
@
text
@d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.10 2009/10/27 23:59:51 deraadt Exp $
@


1.10
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.9 2007/03/20 04:00:32 tedu Exp $
d145 3
a147 1
		for (kp = key_val; isascii(*kp) && isspace(*kp); kp++)
d159 3
a161 1
		for (cp = kp; *cp&&(!isascii(*cp)||!isspace(*cp)); cp++)
d170 1
a170 1
		while (isascii(*cp) && isspace(*cp))
@


1.9
log
@remove some bogus *p tests from charles longeau
ok deraadt millert
@
text
@d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.8 2004/05/07 15:51:12 millert Exp $
a40 13

#ifndef lint
char copyright[] = "\
@@(#)Copyright (c) 1990, 1993 Jan-Simon Pendry\n\
@@(#)Copyright (c) 1990 Imperial College of Science, Technology & Medicine\n\
@@(#)Copyright (c) 1990, 1993\n\
	The Regents of the University of California.  All rights reserved.\n";
#endif /* not lint */

#ifndef lint
static char rcsid[] = "$Id: mk-amd-map.c,v 1.8 2004/05/07 15:51:12 millert Exp $";
static char sccsid[] = "@@(#)mk-amd-map.c	8.1 (Berkeley) 6/28/93";
#endif /* not lint */
@


1.8
log
@Fix some sizeof(ptr) bugs based on diffs from aaron@@.
Note that this is not code that actually gets compiled.
@
text
@d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.7 2003/06/02 23:36:52 millert Exp $
d51 1
a51 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.7 2003/06/02 23:36:52 millert Exp $";
d158 1
a158 1
		for (kp = key_val; *kp && isascii(*kp) && isspace(*kp); kp++)
d179 1
a179 1
		while (*cp && isascii(*cp) && isspace(*cp))
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.6 2002/08/05 07:24:26 pvalchev Exp $
d51 1
a51 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.6 2002/08/05 07:24:26 pvalchev Exp $";
a269 1
		len = strlen(map);
d271 2
a272 1
		mappag = (char *) malloc(len + 5);
d278 1
a278 1
		snprintf(maptpag, sizeof(maptpag), "%s%s", maptmp, DBM_SUFFIX);
d285 3
a287 2
		mappag = (char *) malloc(len + 5);
		mapdir = (char *) malloc(len + 5);
d329 1
a329 1
				snprintf(mappag, sizeof(mappag), "%s%s", map, DBM_SUFFIX);
d338 2
a339 2
				snprintf(mappag, sizeof(mappag), "%s.pag", map);
				snprintf(mapdir, sizeof(mapdir), "%s.dir", map);
@


1.6
log
@Get rid of useless local definitions P_void, voidp, Const and use
void, void *, const respectively; some cosmetics; ok deraadt
@
text
@d18 1
a18 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
 *	$Id: mk-amd-map.c,v 1.5 2002/07/18 10:10:56 pvalchev Exp $
d51 1
a51 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.5 2002/07/18 10:10:56 pvalchev Exp $";
@


1.5
log
@ansify, pull some prototypes
@
text
@d39 1
a39 1
 *	$Id: mk-amd-map.c,v 1.4 2002/06/11 05:29:55 itojun Exp $
d55 1
a55 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.4 2002/06/11 05:29:55 itojun Exp $";
d77 1
a77 1
store_data(voidp db, char *k, char *v)
d128 1
a128 1
read_file(FILE *fp, char *map, voidp db)
@


1.4
log
@use snprintf.
@
text
@d39 1
a39 1
 *	$Id: mk-amd-map.c,v 1.3 1997/04/04 18:41:42 deraadt Exp $
d55 1
a55 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.3 1997/04/04 18:41:42 deraadt Exp $";
d64 1
d76 2
a77 3
static int store_data(db, k, v)
voidp db;
char *k, *v;
d93 2
a94 4
static int read_line(buf, size, fp)
char *buf;
int size;
FILE *fp;
d127 2
a128 4
static int read_file(fp, map, db)
FILE *fp;
char *map;
voidp db;
d217 2
a218 2
static int remove_file(f)
char *f;
d225 2
a226 3
main(argc, argv)
int argc;
char *argv[];
@


1.3
log
@when mktemp() is hard to fix, use 10 X
@
text
@d39 1
a39 1
 *	$Id: mk-amd-map.c,v 1.2 1997/01/15 23:43:48 millert Exp $
d55 1
a55 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.2 1997/01/15 23:43:48 millert Exp $";
d287 1
a287 1
		sprintf(maptpag, "%s%s", maptmp, DBM_SUFFIX);
d301 2
a302 2
		sprintf(maptpag, "%s.pag", maptmp);
		sprintf(maptdir, "%s.dir", maptmp);
d337 1
a337 1
				sprintf(mappag, "%s%s", map, DBM_SUFFIX);
d346 2
a347 2
				sprintf(mappag, "%s.pag", map);
				sprintf(mapdir, "%s.dir", map);
@


1.2
log
@getopt(3) returns -1 when out of args, not EOF, whee!
@
text
@d39 1
a39 1
 *	$Id: mk-amd-map.c,v 1.1.1.1 1995/10/18 08:47:22 deraadt Exp $
d55 1
a55 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.1.1.1 1995/10/18 08:47:22 deraadt Exp $";
d237 1
a237 1
	static char maptmp[] = "dbmXXXXXX";
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
 *	$Id: mk-amd-map.c,v 1.3 1994/06/13 20:50:42 mycroft Exp $
d55 1
a55 1
static char rcsid[] = "$Id: mk-amd-map.c,v 1.3 1994/06/13 20:50:42 mycroft Exp $";
d251 1
a251 1
	while ((ch = getopt(argc, argv, "p")) != EOF)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
