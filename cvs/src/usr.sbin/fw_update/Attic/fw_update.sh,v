head	1.22;
access;
symbols
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.12.0.4
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.4
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.2
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8;
locks; strict;
comment	@# @;


1.22
date	2015.01.23.14.38.24;	author halex;	state dead;
branches;
next	1.21;
commitid	hZc8MS5VBprHhAuc;

1.21
date	2014.02.23.22.22.16;	author halex;	state Exp;
branches;
next	1.20;

1.20
date	2014.02.23.20.09.59;	author halex;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.30.00.12.09;	author halex;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.03.14.58.54;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	2013.10.18.23.25.02;	author halex;	state Exp;
branches;
next	1.16;

1.16
date	2013.08.20.22.42.08;	author halex;	state Exp;
branches;
next	1.15;

1.15
date	2013.08.20.09.14.31;	author mpi;	state Exp;
branches;
next	1.14;

1.14
date	2013.08.13.21.16.45;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2013.08.13.20.11.21;	author halex;	state Exp;
branches;
next	1.12;

1.12
date	2012.09.17.18.28.43;	author rpe;	state Exp;
branches;
next	1.11;

1.11
date	2012.09.05.08.16.34;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2012.01.26.20.20.18;	author halex;	state Exp;
branches;
next	1.9;

1.9
date	2011.10.25.20.48.32;	author halex;	state Exp;
branches;
next	1.8;

1.8
date	2011.08.02.15.52.26;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.27.15.12.57;	author halex;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.16.22.27.09;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2011.07.09.21.27.23;	author halex;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.09.17.56.46;	author halex;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.09.04.49.29;	author halex;	state Exp;
branches;
next	1.2;

1.2
date	2011.07.09.01.42.30;	author halex;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.09.01.16.57;	author halex;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Killing my darling.  Functionality and binary name moved to pkg_* and
friends.  So long and thanks for all the fish.

ok deraadt@@
@
text
@#!/bin/sh

# $OpenBSD: fw_update.sh,v 1.21 2014/02/23 22:22:16 halex Exp $
# Copyright (c) 2011 Alexander Hall <alexander@@beard.se>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

# This is the list of drivers we should look for
DRIVERS="acx athn bwi ipw iwi iwn malo otus pgt radeondrm rsu uath
	upgt urtwn uvideo wpi"

PKG_ADD="pkg_add -I -D repair -DFW_UPDATE"
PKG_DELETE="pkg_delete -I -DFW_UPDATE"

usage() {
	echo "usage: ${0##*/} [-adnv] [-p path] [driver ...]" >&2
	exit 1
}

verbose() {
	[ "$verbose" ] && echo "${0##*/}: $@@"
}

setpath() {
	[ "$path" ] && export PKG_PATH=$path && return

	set -- $(sysctl -n kern.version |
	    sed 's/^OpenBSD \([0-9]\.[0-9]\)\([^ ]*\).*/\1 \2/;q')

	local version=$1 tag=$2

	[[ $tag == -!(stable) ]] && version=snapshots
	export PKG_PATH=http://firmware.openbsd.org/firmware/$version/
}

perform() {
	if [ "$verbose" ]; then
		"$@@"
	else
		"$@@" 2>/dev/null
	fi
}

all=false
verbose=
nop=
delete=false
path=
while getopts 'adnp:v' s "$@@" 2>/dev/null; do
	case "$s" in
	a)	all=true;;
	d)	delete=true;;
	n)	nop=-n;;
	p)	path=$OPTARG;;
	v)	verbose=${verbose:--}v;;
	*)	usage;;
	esac
done

shift $((OPTIND - 1))

if $all; then
	[ $# != 0 ] && usage
	set -- $DRIVERS
fi

if $delete && [ $# == 0 ]; then
	echo "Driver specification required for delete operation" >&2
	exit 1
fi

setpath

installed=$(pkg_info -q)
dmesg=$(cat /var/run/dmesg.boot; echo; dmesg)

install=
update=
extra=

if [ $# = 0 ]; then
	for driver in $DRIVERS; do
		if print "$installed" | grep -q "^$driver-firmware-" ||
		    print -r -- "$dmesg" | egrep -q "^$driver[0-9]+ at "; then
			set -- "$@@" $driver
		fi
	done
fi

for driver; do
	if print "$installed" | grep -q "^${driver}-firmware-"; then
		update="$update ${driver}-firmware"
		extra="$extra -Dupdate_${driver}-firmware"
	elif printf "%s\n" $DRIVERS | fgrep -qx "$driver"; then
		install="$install ${driver}-firmware"
	else
		print -r "${0##*/}: $driver: unknown driver" >&2
		exit 1
	fi
done

if ! $delete && [ -z "$install$update" ]; then
	verbose "No devices found which need firmware files to be downloaded."
	exit 0
elif $delete && [ -z "$update" ]; then
	verbose "No firmware to delete."
	exit 0
fi

$delete || verbose "Path to firmware: $PKG_PATH"

[ "$nop" ] || [ 0 = $(id -u) ] ||
	{ echo "${0##*/} must be run as root" >&2; exit 1; }

# Install missing firmware packages
if ! $delete && [ "$install" ]; then
	verbose "Installing firmware:$update $install."
	perform $PKG_ADD $nop $verbose $update $install
fi

# Update or delete installed firmware packages
if [ "$update" ]; then
	if $delete; then
		verbose "Deleting firmware:$update."
		perform $PKG_DELETE $nop $verbose $update
	else
		verbose "Updating firmware:$update."
		perform $PKG_ADD $extra $nop $verbose -u $update
	fi
fi
@


1.21
log
@- add a -p <path> switch for specifying the location of
  firmware packages
- reword 'firmware files' to 'firmware'
- pick some style and whitespace nits

ok deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.20 2014/02/23 20:09:59 halex Exp $
@


1.20
log
@print out the path to the firmware packages in verbose mode, for use with
the upcoming -p <path> flag
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.19 2014/01/30 00:12:09 halex Exp $
d26 1
a26 1
	echo "usage: ${0##*/} [-adnv] [driver ...]" >&2
d35 2
d58 2
a59 1
while getopts 'adnv' s "$@@" 2>/dev/null; do
d63 4
a66 3
	v)	verbose=${verbose:--}v ;;
	n)	nop=-n ;;
	*)	usage ;;
d127 1
a127 1
	verbose "Installing firmware files:$update $install."
d134 1
a134 1
		verbose "Deleting firmware files:$update."
d137 1
a137 1
		verbose "Updating firmware files:$update."
@


1.19
log
@add a -d flag to remove the specified firmware packages

ok espie@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.18 2014/01/03 14:58:54 espie Exp $
d115 2
@


1.18
log
@explicitly tells pkg_add we're fw_update, will have some nice side-effects
later.

okay deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.17 2013/10/18 23:25:02 halex Exp $
d23 1
d26 1
a26 1
	echo "usage: ${0##*/} [-anv] [driver ...]" >&2
d55 2
a56 1
while getopts 'anv' s "$@@" 2>/dev/null; do
d59 1
d73 5
d108 1
a108 1
if [ -z "$install$update" ]; then
d111 3
d119 4
a122 4
# Install missing firmware
if [ "$install" ]; then
	verbose "Installing firmware files:$install."
	perform $PKG_ADD $nop $verbose $install
d125 1
a125 1
# Update installed firmware
d127 7
a133 2
	verbose "Updating firmware files:$update."
	perform $PKG_ADD $extra $nop $verbose -u $update
@


1.17
log
@don't silence stderr from pkg_add when running in verbose mode

suggested by Alexander Holupirek
ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.16 2013/08/20 22:42:08 halex Exp $
d22 1
a22 1
PKG_ADD="pkg_add -I -D repair"
@


1.16
log
@use a single line in usage() and SYNOPSIS and explain in text which
combinations are not allowed

discussed with jmc@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.15 2013/08/20 09:14:31 mpi Exp $
d43 8
d111 1
a111 1
	$PKG_ADD $nop $verbose $install 2>/dev/null
d117 1
a117 1
	$PKG_ADD $extra $nop $verbose -u $update 2>/dev/null
@


1.15
log
@tedu netnatm and ueagle(4).

ok mikeb@@, sthen@@, tedu@@ (implied), doc bits ok jmc@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.14 2013/08/13 21:16:45 kettenis Exp $
d25 1
a25 2
	echo "usage: ${0##*/} [-anv]" >&2
	echo "       ${0##*/} [-nv] [driver ...]" >&2
@


1.14
log
@Handle firmware for radeondrm(4).

pointed out by jasper@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.13 2013/08/13 20:11:21 halex Exp $
d19 1
a19 1
DRIVERS="acx athn bwi ipw iwi iwn malo otus pgt radeondrm rsu uath ueagle
@


1.13
log
@allow the user to specify which firmware to install, or install all of
them using the -a switch

ok rpe@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.12 2012/09/17 18:28:43 rpe Exp $
d19 2
a20 2
DRIVERS="acx athn bwi ipw iwi iwn malo otus pgt rsu uath ueagle upgt urtwn
	uvideo wpi"
@


1.12
log
@simplify the detection of release/stable vs. snapshot kernel by
using the same logic from install.sub

ok halex@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.11 2012/09/05 08:16:34 espie Exp $
d25 2
a26 1
	echo "usage: ${0##*/} [-nv]" >&2
d34 11
d47 1
a47 1
while getopts 'nv' s "$@@" 2>/dev/null; do
d49 1
d56 1
a56 4
# No additional arguments allowed
[ $# = $(($OPTIND-1)) ] || usage

set -- $(sysctl -n kern.version | sed 's/^OpenBSD \([0-9]\.[0-9]\)\([^ ]*\).*/\1 \2/;q')
d58 4
a61 2
version=$1
tag=$2
d63 1
a63 2
[[ $tag == -!(stable) ]] && version=snapshots
export PKG_PATH=http://firmware.openbsd.org/firmware/$version/
d72 11
a82 2
for driver in $DRIVERS; do
	if print -r -- "$installed" | grep -q "^${driver}-firmware-"; then
d85 1
a85 1
	elif print -r -- "$dmesg" | grep -q "^${driver}[0-9][0-9]* at "; then
d87 3
@


1.11
log
@don't let pkg_add turn interactive, and waive the @@ask-update questions.
okay sthen@@
halex "you know best"...

problem(s) reported by claudio@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.10 2012/01/26 20:20:18 halex Exp $
d51 1
a51 1
[ -n "$tag" -a X"$tag" != X"-stable" ] && version=snapshots
@


1.10
log
@closing fd 0-2 is bad practice, so dup to /dev/null instead

ok krw@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.9 2011/10/25 20:48:32 halex Exp $
d22 1
a22 1
PKG_ADD="pkg_add -D repair"
d59 1
d64 1
d87 1
a87 1
	$PKG_ADD $nop $verbose -u $update 2>/dev/null
@


1.9
log
@Reduce noice by fw_update on network errors, among others

ok deraadt@@
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.8 2011/08/02 15:52:26 deraadt Exp $
d35 1
a35 1
while getopts 'nv' s "$@@" 2>&-; do
d79 1
a79 1
	$PKG_ADD $nop $verbose $install 2>&-
d85 1
a85 1
	$PKG_ADD $nop $verbose -u $update 2>&-
@


1.8
log
@Say "firmware files" instead of "firmwares".  It is so hard to be clear
when they are per-device packages which can containing more than one
firmware files..
Shown to halex, no response
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.7 2011/07/27 15:12:57 halex Exp $
d79 1
a79 1
	$PKG_ADD $nop $verbose $install
d85 1
a85 1
	$PKG_ADD $nop $verbose -u $update
@


1.7
log
@a bunch of requested changes:
- pass same count of -v's to pkg_add as was passed to fw_update
- don't be all quiet if -v is specified
- add -n flag as per pkg_add
- prefix all verbose messages by 'fw_update: '
- look for devices in current dmesg as well as dmesg.boot

ok deraadt krw
@
text
@d3 1
a3 1
# $OpenBSD: fw_update.sh,v 1.6 2011/07/16 22:27:09 espie Exp $
d69 1
a69 1
	verbose "No devices found which need firmwares to be downloaded."
d76 1
a76 1
# Install missing firmwares
d78 1
a78 1
	verbose "Installing firmwares:$install."
d82 1
a82 1
# Update installed firmwares
d84 1
a84 1
	verbose "Updating firmwares:$update."
@


1.6
log
@missing $OpenBSD$ marker
@
text
@d3 1
a3 1
# $OpenBSD$
a23 2
[ 0 = $(id -u) ] || { echo "${0##*/} must be run as root" >&2; exit 1; }

d25 1
a25 1
	echo "usage: ${0##*/} [-v]" >&2
d29 4
d34 2
a35 1
while getopts 'v' s "$@@" 2>&-; do
d37 2
a38 1
	v)	verbose=-v ;;
d55 1
d63 1
a63 1
	elif grep -q "^${driver}[0-9][0-9]* at " /var/run/dmesg.boot; then
d68 7
a74 1
[ "$install$update" ] || exit 0
d77 4
a80 1
[ "$install" ] && $PKG_ADD $verbose $install
d83 4
a86 1
[ "$update" ] && $PKG_ADD $verbose -u $update
@


1.5
log
@zap a glob leftover

noted by weerd@@, thanks
@
text
@d3 1
@


1.4
log
@- use pkg_info -q instead of looking in /var/db/pkg/*. it is not as expensive
  as I thought.
- pass -D repair to pkg_add
- move the 'updating firmwares' message into rc.firsttime

first two from espie@@ and sthen@@, respectively; thanks

"looks good" deraadt@@
@
text
@d55 1
a55 1
	if print -r -- "$installed" | grep -q "^${driver}-firmware-*"; then
@


1.3
log
@when checking for installed packages we should indeed be as precise
as possible

pointed out by sthen@@
@
text
@d17 6
a46 1

d49 1
a49 1
DRIVERS="acx athn bwi ipw iwi iwn malo otus pgt rsu uath ueagle upgt urtwn uvideo wpi"
d55 1
a55 1
	if test -d /var/db/pkg/${driver}-firmware-*; then
a63 2
echo 'updating firmwares'

d65 1
a65 1
[ "$install" ] && pkg_add $verbose $install
d68 1
a68 1
[ "$update" ] && pkg_add $verbose -u $update
@


1.2
log
@error messages goes to stderr

pointed out by naddy@@
@
text
@d50 1
a50 1
	if test -d /var/db/pkg/${driver}-*; then
@


1.1
log
@welcome fw_update, which installs and/or updates non-free firmware for
detected and previously installed devices that needs it

"go ahead and commit it" deraadt@@
@
text
@d17 1
a17 1
[ 0 = $(id -u) ] || { echo "${0##*/} must be run as root"; exit 1; }
d20 1
a20 1
	echo "usage: ${0##*/} [-v]"
@

