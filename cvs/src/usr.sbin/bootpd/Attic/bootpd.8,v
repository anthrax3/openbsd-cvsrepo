head	1.12;
access;
symbols
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.12
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.10
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.8
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.12
date	2004.05.04.23.37.06;	author deraadt;	state dead;
branches;
next	1.11;

1.11
date	2003.05.29.18.31.53;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.14.06.51.48;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.15.21.01.49;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.14.21.31.35;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.05.22.16.32;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.11.14.21.18.20;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.06.03.05.58.36;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.05.30.00.05.05;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.17.21.51.12;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.09.20.07.07.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@bye bye bootpd.  You will not be missed.
@
text
@.\"	$OpenBSD: bootpd.8,v 1.11 2003/05/29 18:31:53 jmc Exp $
.\"
.\" Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
.\"
.Dd November 6, 1993
.Dt BOOTPD 8
.Os
.Sh NAME
.Nm bootpd , bootpgw
.Nd Internet Boot Protocol server/gateway
.Sh SYNOPSIS
.Nm bootpd
.Op Fl is
.Op Fl t Ar timeout
.Op Fl d Ar level
.Op Fl c Ar chdir-path
.Bk -words
.Op Ar bootptab Op Ar dumpfile
.Ek
.Nm bootpgw
.Op Fl is
.Op Fl t Ar timeout
.Op Fl d Ar level
.Ar server
.Sh DESCRIPTION
.Nm bootpd
implements an Internet Bootstrap Protocol (BOOTP) server as defined in
RFC 951, RFC 1532, and RFC 1533.
.Nm bootpgw
implements a simple BOOTP gateway which can be used to forward
requests and responses between clients on one subnet and a BOOTP server
(i.e.,
.Nm bootpd )
on another subnet.
While either
.Nm bootpd
or
.Nm bootpgw
will forward BOOTREPLY packets, only
.Nm bootpgw
will forward BOOTREQUEST packets.
.Pp
One host on each network segment is normally configured to run either
.Nm bootpd
or
.Nm bootpgw
from
.Xr inetd 8
by including one of the following lines in the file
.Pa /etc/inetd.conf :
.Pp
.Bd -literal
bootps dgram udp wait root /usr/sbin/bootpd bootpd bootptab
bootps dgram udp wait root /usr/sbin/bootpgw bootpgw server
.Ed
.Pp
This mode of operation is referred to as "inetd mode" and causes
.Nm bootpd
(or
.Nm bootpgw )
to be started only when a boot request arrives.
If it does not receive another packet within fifteen minutes of the last one
it received, it will exit to conserve system resources.
The
.Fl t
option controls this timeout (see
.Sx OPTIONS ) .
.Pp
It is also possible to run
.Nm bootpd
(or
.Nm bootpgw )
in "stand-alone mode" (without
.Xr inetd 8 )
by simply invoking it from a shell like any other regular command.
Stand-alone mode is particularly useful when
.Nm bootpd
is used with a large configuration database, where the start up
delay might otherwise prevent timely response to client requests.
(Automatic start up in stand-alone mode can be done by invoking
.Nm bootpd
from within
.Pa /etc/rc.local ,
for example.)
Stand-alone mode is less useful for
.Nm bootpgw
which
has very little start up delay because
it does not read a configuration file.
.Pp
Either program automatically detects whether it was invoked from
.Xr inetd 8
or from a shell and automatically selects the appropriate mode.
The
.Fl s
or
.Fl i
option may be used to force stand-alone or inetd mode, respectively (see
.Sx OPTIONS ) .
.Sh OPTIONS
.Bl -tag -width Ds
.It Fl t Ar timeout
Specifies the
.Ar timeout
value (in minutes) that a
.Nm bootpd
or
.Nm bootpgw
process will wait for a BOOTP packet before exiting.
If no packets are received for
.Ar timeout
minutes, then the program will exit.
A timeout value of zero means "run forever".
In stand-alone mode, this option is forced to zero.
.It Fl d Ar debug-level
Sets the
.Ar debug-level
variable that controls the amount of debugging messages generated.
For example, -d4 or -d 4 will set the debugging level to 4.
For compatibility with older versions of
.Nm bootpd ,
omitting the numeric parameter (i.e., just -d) will
simply increment the debug level by one.
.It Fl c Ar chdir-path
Sets the current directory used by
.Nm bootpd
while checking the existence and size of client boot files.
This is useful when client boot files are specified as relative pathnames, and
.Nm bootpd
needs to use the same current directory as the TFTP server
(typically
.Pa /tftpboot ) .
This option is not recognized by
.Nm bootpgw .
.It Fl i
Force inetd mode.
This option is obsolete, but remains for compatibility with older versions of
.Nm bootpd .
.It Fl s
Force stand-alone mode.
This option is obsolete, but remains for compatibility with older versions of
.Nm bootpd .
.It Ar bootptab
Specifies the name of the configuration file from which
.Nm bootpd
loads its database of known clients and client options
.Pf ( Nm bootpd
only).
.It Ar dumpfile
Specifies the name of the file that
.Nm bootpd
will dump its internal database into when it receives a
SIGUSR1 signal
.Pf ( Nm bootpd
only).
This option is only recognized if
.Nm bootpd
was compiled with the -DDEBUG flag.
.It Ar server
Specifies the name of a BOOTP server to which
.Nm bootpgw
will forward all BOOTREQUEST packets it receives
.Pf ( Nm bootpgw
only).
.El
.Sh OPERATION
Both
.Nm bootpd
and
.Nm bootpgw
operate similarly in that both listen for any packets sent to the
.Em bootps
port, and both simply forward any BOOTREPLY packets.
They differ in their handling of BOOTREQUEST packets.
.Pp
When
.Nm bootpgw
is started, it determines the address of a BOOTP server
whose name is provided as a command line parameter.
When
.Nm bootpgw
receives a BOOTREQUEST packet, it sets the "gateway address"
and "hop count" fields in the packet and forwards the packet
to the BOOTP server at the address determined earlier.
Requests are forwarded only if they indicate that
the client has been waiting for at least three seconds.
.Pp
When
.Nm bootpd
is started it reads a configuration file (normally
.Pa /etc/bootptab )
that initializes the internal database of known clients and client options.
This internal database is reloaded from the configuration file when
.Nm bootpd
receives a hangup signal (SIGHUP) or when it discovers that the
configuration file has changed.
.Pp
When
.Nm bootpd
receives a BOOTREQUEST packet, it
.\" checks the modification time of the
.\" configuration file and reloads the database if necessary.
.\" Then it
looks for a database entry matching the client request.
If the client is known,
.Nm bootpd
composes a BOOTREPLY packet using the database entry found above,
and sends the reply to the client (possibly using a gateway).
If the client is unknown, the request is discarded
(with a notice if debug \*[Gt] 0).
.Pp
If
.Nm bootpd
is compiled with the -DDEBUG option, receipt of a SIGUSR1 signal causes
it to dump its internal database to the file
.Pa /var/run/bootpd.dump
or the dumpfile specified as a command line parameter.
.Pp
During initialization, both programs determine the UDP port numbers to be used
by calling
.Xr getservbyname 3
(which normally uses
.Pa /etc/services ) .
Two service names (and port numbers) are used:
.Pp
.Bd -literal
	bootps - BOOTP Server listening port
	bootpc - BOOTP Client destination port
.Ed
.Pp
If the port numbers cannot be determined using
.Xr getservbyname 3
then the values default to boopts=67 and bootpc=68.
.Sh FILES
.Bl -tag -width "/var/run/bootpd.dump" -compact
.It /etc/bootptab
Database file read by
.Nm bootpd .
.It /var/run/bootpd.dump
Debugging dump file created by
.Nm bootpd .
.It /etc/services
Internet service numbers.
.It /tftpboot
Current directory typically used by the TFTP server and
.Nm bootpd .
.El
.Sh BUGS
Individual host entries must not exceed 1024 characters.
.Sh CREDITS
This distribution is currently maintained by
.An Walter L. Wimer Aq walt+@@cmu.edu .
.Pp
The original BOOTP server was created by
Bill Croft at Stanford University in January 1986.
.Pp
The current version of
.Nm bootpd
is primarily the work of David Kovar,
Drew D. Perkins, and Walter L. Wimer,
at Carnegie Mellon University.
.Pp
Enhancements and bug-fixes have been contributed by
(in alphabetical order):
.Pp
.Bl -tag -width Ds -compact
.It An Danny Backx Aq db@@sunbim.be
.It An John Brezak Aq brezak@@ch.hp.com
.It An Frank da Cruz Aq fdc@@cc.columbia.edu
.It An David R. Linn Aq drl@@vuse.vanderbilt.edu
.It An Jim McKim Aq mckim@@lerc.nasa.gov
.It An Gordon W. Ross Aq gwr@@mc.com
.It An Jason Zions Aq jazz@@hal.com
.El
.Sh SEE ALSO
.Xr bootptab 5 ,
.Xr inetd 8 ,
.Xr tftpd 8
.Pp
DARPA Internet Request For Comments:
.Bd -literal
RFC  951 Bootstrap Protocol
RFC 1532 Clarifications and Extensions for the Bootstrap Protocol
RFC 1533 DHCP Options and BOOTP Vendor Extensions
.Ed
@


1.11
log
@mdoc versions;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: bootpd.8,v 1.10 2003/04/14 06:51:48 jmc Exp $
@


1.10
log
@standalone/stand alone -> stand-alone;

from NetBSD (Igor Sobrado);
httpd stuff passed to apache people;

ok millert@@
@
text
@d1 2
d5 22
a26 34
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.9 2003/03/15 21:01:49 jmc Exp $
.\"
.TH BOOTPD 8 "November 06, 1993" "Carnegie Mellon University"
.SH NAME
bootpd, bootpgw \- Internet Boot Protocol server/gateway
.SH SYNOPSIS
.B bootpd
[
.B \-i
.B \-s
.B \-t
timeout
.B \-d
level
.B \-c
chdir\-path
]
[
.I bootptab
[
.I dumpfile
] ]
.br
.B bootpgw
[
.B \-i
.B \-s
.B \-t
timeout
.B \-d
level
] server
.SH DESCRIPTION
.I Bootpd
d28 2
a29 2
RFC951, RFC1532, and RFC1533.
.I Bootpgw
d31 6
a36 5
requests and responses between clients on one subnet and a
BOOTP server (i.e.,
.IR bootpd )
on another subnet. While either
.I bootpd
d38 1
a38 1
.I bootpgw
d40 1
a40 1
.I bootpgw
d42 1
a42 1
.PP
d44 1
a44 1
.I bootpd
d46 1
a46 1
.I bootpgw
d48 1
a48 1
.I inetd
d50 3
a52 2
.IR /etc/inetd.conf :
.IP
a53 1
.br
d55 2
a56 1
.PP
d58 1
a58 1
.I bootpd
d60 9
a68 7
.IR bootpgw )
to be started only when a boot request arrives.  If it does not
receive another packet within fifteen minutes of the last one
it received, it will exit to conserve system resources.  The
.B \-t
option controls this timeout (see OPTIONS).
.PP
d70 1
a70 1
.I bootpd
d72 1
a72 1
.IR bootpgw )
d74 1
a74 1
.IR inetd )
d77 1
a77 1
.I bootpd
d81 1
a81 1
.I bootpd
d83 1
a83 1
.IR /etc/rc.local ,
d86 1
a86 1
.I bootpgw
d90 3
a92 2
.PP
Either program automatically detects whether it was invoked from inetd
d95 1
a95 1
.B \-s
d97 6
a102 6
.B \-i
option may be used to force stand-alone or inetd mode respectively
(see OPTIONS).
.SH OPTIONS
.TP
.BI \-t \ timeout
d104 1
a104 1
.I timeout
d106 1
a106 1
.I bootpd
d108 1
a108 1
.I bootpgw
d111 1
a111 1
.I timeout
d115 1
a115 2
.TP
.BI \-d \ debug\-level
d117 1
a117 1
.I debug\-level
d121 1
a121 1
.IR bootpd ,
d124 1
a124 2
.TP
.BI \-c \ chdir\-path
d126 4
a129 4
.I bootpd
while checking the existence and size of client boot files.  This is
useful when client boot files are specified as relative pathnames, and
.I bootpd
d131 13
a143 14
(typically /tftpboot).  This option is not recognized by
.IR bootpgw .
.TP
.B \-i
Force inetd mode.  This option is obsolete, but remains for
compatibility with older versions of
.IR bootpd .
.TP
.B \-s
Force stand-alone mode.  This option is obsolete, but remains for
compatibility with older versions of
.IR bootpd .
.TP
.I bootptab
d145 1
a145 1
.I bootpd
d147 1
a147 1
.RI ( bootpd
d149 1
a149 2
.TP
.I dumpfile
d151 1
a151 1
.I bootpd
d154 4
a157 3
.RI ( bootpd
only).  This option is only recognized if
.I bootpd
d159 1
a159 2
.TP
.I server
d161 1
a161 1
.I bootpgw
d163 1
a163 1
.RI ( bootpgw
d165 2
a166 2
.SH OPERATION
.PP
d168 1
a168 1
.I bootpd
d170 1
a170 1
.I bootpgw
d172 1
a172 1
.I bootps
d175 1
a175 1
.PP
d177 1
a177 1
.I bootpgw
d179 3
a181 2
whose name is provided as a command line parameter.  When
.I bootpgw
d187 1
a187 1
.PP
d189 6
a194 7
.I bootpd
is started it reads a configuration file, (normally
.IR /etc/bootptab )
that initializes the internal database of known clients and client
options.  This internal database is reloaded
from the configuration file when
.I bootpd
d197 1
a197 1
.PP
d199 1
a199 1
.I bootpd
d202 2
a203 1
.\" configuration file and reloads the database if necessary.  Then it
d206 1
a206 1
.I bootpd
d210 2
a211 2
(with a notice if debug > 0).
.PP
d213 1
a213 1
.I bootpd
d216 1
a216 1
.I /var/run/bootpd.dump
d218 4
a221 4
.PP
During initialization, both programs
determine the UDP port numbers to be used by calling
.I getservbyname
d223 1
a223 1
.IR /etc/services).
d225 8
a232 8
.IP
bootps \- BOOTP Server listening port
.br
bootpc \- BOOTP Client destination port
.LP
If the port numbers cannot
be determined using
.I getservbyname
d234 3
a236 3
.SH FILES
.TP 20
/etc/bootptab
d238 2
a239 3
.IR bootpd .
.TP
/var/run/bootpd.dump
d241 2
a242 3
.IR bootpd .
.TP
/etc/services
d244 1
a244 2
.TP
/tftpboot
d246 3
a248 3
.IR bootpd .

.SH BUGS
d250 1
a250 3

.SH CREDITS
.PP
d252 2
a253 2
Walter L. Wimer <walt+@@cmu.edu>.
.PP
d256 1
a256 1
.PP
d258 1
a258 1
.I bootpd
d262 18
a279 21
.TP
Enhancements and bug\-fixes have been contributed by:
(in alphabetical order)
.br
Danny Backx <db@@sunbim.be>
.br
John Brezak <brezak@@ch.hp.com>
.br
Frank da Cruz <fdc@@cc.columbia.edu>
.br
David R. Linn <drl@@vuse.vanderbilt.edu>
.br
Jim McKim <mckim@@lerc.nasa.gov>
.br
Gordon W. Ross <gwr@@mc.com>
.br
Jason Zions <jazz@@hal.com>
.SH "SEE ALSO"
.LP
bootptab(5), inetd(8), tftpd(8)
.LP
d281 5
a285 9
.TP 10
RFC951
Bootstrap Protocol
.TP 10
RFC1532
Clarifications and Extensions for the Bootstrap Protocol
.TP 10
RFC1533
DHCP Options and BOOTP Vendor Extensions
@


1.9
log
@recoginzed -> recognized;
elimininating -> eliminating;

typos courtesy NetBSD (Igor Sobrado)
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.8 2000/03/14 21:31:35 aaron Exp $
d79 1
a79 1
in "standalone mode" (without
d82 1
a82 1
Standalone mode is particularly useful when
d86 1
a86 1
(Automatic start up in standalone mode can be done by invoking
d91 1
a91 1
Standalone mode is less useful for
d103 1
a103 1
option may be used to force standalone or inetd mode respectively
d119 1
a119 1
In standalone mode, this option is forced to zero.
d147 1
a147 1
Force standalone mode.  This option is obsolete, but remains for
@


1.8
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.7 1999/06/05 22:16:32 aaron Exp $
d138 1
a138 1
(typically /tftpboot).  This option is not recoginzed by
@


1.7
log
@remove trailing whitespace, some Nm cleanup
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.6 1998/11/14 21:18:20 millert Exp $
d42 1
a42 1
BOOTP server (i.e.
d128 1
a128 1
omitting the numeric parameter (i.e. just -d) will
@


1.6
log
@put bootpd.dump in /var/run, not /tmp, to avoid /tmp race
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.5 1998/06/03 05:58:36 deraadt Exp $
d99 1
a99 1
The 
@


1.5
log
@typos; josh@@quick.net
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.4 1997/05/30 00:05:05 deraadt Exp $
d224 1
a224 1
.I /etc/bootpd.dump
d248 1
a248 1
/etc/bootpd.dump
@


1.4
log
@typo; enami@@ba2.so-net.or.jp
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.3 1997/04/17 21:51:12 deraadt Exp $
d115 1
a115 1
If no packets are recieved for
d230 1
a230 1
(which nomally uses
@


1.3
log
@timeout is in minutes; msaitoh@@spa.is.uec.ac.jp
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.2 1996/09/20 07:07:17 deraadt Exp $
d92 1
a92 1
.I bootgw
@


1.2
log
@fix example; netbsd pr#2744, erik@@aarhus1.uni-c.dk
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootpd.8,v 1.1.1.1 1995/10/18 08:47:25 deraadt Exp $
d117 1
a117 1
seconds, then the program will exit.
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
.\"	$Header: /a/cvsroot/src/usr.sbin/bootpd/bootpd.8,v 1.2 1994/08/22 22:14:41 gwr Exp $
d61 1
a61 1
bootps dgram udp wait root /etc/bootpd bootpd bootptab
d63 1
a63 1
bootps dgram udp wait root /etc/bootpgw bootpgw server
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
