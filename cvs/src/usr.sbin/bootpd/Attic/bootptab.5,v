head	1.9;
access;
symbols
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.6
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.9
date	2004.05.04.23.37.06;	author deraadt;	state dead;
branches;
next	1.8;

1.8
date	2003.05.29.18.31.53;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.01.18.23.40.58;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.22.01.53.05;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.14.21.31.35;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.12.13.26.52;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.09.07.16.44.34;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.06.23.10.22.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bye bye bootpd.  You will not be missed.
@
text
@.\"	$OpenBSD: bootptab.5,v 1.8 2003/05/29 18:31:53 jmc Exp $
.\"
.\" Copyright (c) 1988, 1989, 1991 Carnegie Mellon University
.\"
.Dd October 31, 1991
.Dt BOOTPTAB 5
.Os
.Sh NAME
.Nm bootptab
.Nd Internet Bootstrap Protocol server database
.Sh DESCRIPTION
The
.Nm bootptab
file is the configuration database file for
.Xr bootpd 8 ,
the Internet Bootstrap Protocol server.
Its format is similar to that of
.Xr termcap 5
in which two-character case-sensitive tag symbols are used to
represent host parameters.
These parameter declarations are separated by colons (:),
with a general format of:
.Pp
.Dl hostname:tg=value:tg=value:tg=value:
.Pp
where
.Ar hostname
is the actual name of a bootp client (or a "dummy entry"), and
.Ar tg
is a two-character tag symbol.
Replies are returned to clients only if an entry with the client's Ethernet
or IP address exists in the
.Nm booptab
file.
Dummy entries have an invalid hostname
(one with a "." as the first character)
and are used to provide default values used by other entries via the
.Ar tc=.dummy-entry
mechanism.
Most tags must be followed by an equal sign and a value, as above.
Some may also appear in a boolean form with no value (i.e.,
.Pf : Ns Ar tg Ns : ) .
The currently recognized tags are:
.Pp
.Bd -literal -offset indent
bf	Bootfile
bs	Bootfile size in 512-octet blocks
cs	Cookie server address list
df	Merit dump file
dn	Domain name
ds	Domain name server address list
ef	Extension file
gw	Gateway address list
ha	Host hardware address
hd	Bootfile home directory
hn	Send client's hostname to client
ht	Host hardware type (see Assigned Numbers RFC)
im	Impress server address list
ip	Host IP address
lg	Log server address list
lp	LPR server address list
ns	IEN-116 name server address list
nt	NTP (time) Server (RFC 1129)
ra	Reply address override
rl	Resource location protocol server address list
rp	Root path to mount as root
sa	TFTP server address client should use
sm	Host subnet mask
sw	Swap server address
tc	Table continuation (points to similar "template" host entry)
td	TFTP root directory used by "secure" TFTP servers
to	Time offset in seconds from UTC
ts	Time server address list
vm	Vendor magic cookie selector
yd	YP (NIS) domain name
ys	YP (NIS) server address
.Ed
.Pp
There is also a generic tag,
.Pf T Ns Ar n ,
where
.Ar n
is an RFC 1084 vendor field tag number.
Thus it is possible to immediately take advantage of future extensions
to RFC 1084 without being forced to modify
.Xr bootpd 8
first.
Generic data may be represented as either a stream of hexadecimal
numbers or as a quoted string of ASCII characters.
The length of the generic data is automatically determined and inserted into
the proper field(s) of the RFC 1084-style bootp reply.
.Pp
The following tags take a whitespace-separated list of IP addresses:
.Ar cs ,
.Ar ds ,
.Ar gw ,
.Ar im ,
.Ar lg ,
.Ar lp ,
.Ar ns ,
.Ar nt ,
.Ar ra ,
.Ar rl ,
and
.Ar ts .
The
.Ar ip ,
.Ar sa ,
.Ar sw ,
.Ar sm ,
and
.Ar ys
tags each take a single IP address.
All IP addresses are specified in standard Internet "dot" notation
and may use decimal, octal, or hexadecimal numbers
(octal numbers begin with 0, hexadecimal numbers begin with '0x' or '0X').
Any IP addresses may alternatively be specified as a hostname, causing
.Xr bootpd 8
to look up the IP address for that host name using
.Xr gethostbyname 3 .
If the
.Ar ip
tag is not specified,
.Xr bootpd 8
will determine the IP address using the entry name as the host name.
(Dummy entries use an invalid host name to avoid automatic IP lookup.)
.Pp
The
.Ar ht
tag specifies the hardware type code as either an unsigned decimal, octal, or
hexadecimal integer or one of the following symbolic names:
.Em ethernet
or
.Em ether
for 10Mb Ethernet,
.Em ethernet3
or
.Em ether3
for 3Mb experimental Ethernet,
.Em ieee802 ,
.Em tr ,
or
.Em token-ring
for IEEE 802 networks,
.Em pronet
for Proteon ProNET Token Ring, or
.Em chaos ,
.Em arcnet ,
or
.Em ax.25
for Chaos, ARCNET, and AX.25 Amateur Radio networks, respectively.
The
.Ar ha
tag takes a hardware address which may be specified as a host name
or in numeric form.
Note that the numeric form
.Em must
be specified in hexadecimal; optional periods and/or a leading '0x' may be
included for readability.
The
.Ar ha
tag must be preceded by the
.Ar ht
tag (either explicitly or implicitly; see
.Ar tc
below).
If the hardware address is not specified and the type is specified
as either "ethernet" or "ieee802", then
.Xr bootpd 8
will try to determine the hardware address using
.Xr ether_hostton 3 .
.Pp
The hostname, home directory, and bootfile are ASCII strings which may be
optionally surrounded by double quotes (").
The client's request and the values of the
.Ar hd
and
.Ar bf
symbols determine how the server fills in the bootfile field of the bootp
reply packet.
.Pp
If the
.Ar bf
option is specified, its value is copied into the reply packet.
Otherwise, the name supplied in the client request is used.
If the
.Ar hd
option is specified, its value is prepended to the boot file in the reply
packet, otherwise the path supplied in the client request is used.
The existence of the boot file is NOT verified by
.Xr bootpd 8
because the boot file may be on some other machine.
.Pp
The
.Ar bs
option specifies the size of the boot file.
It can be written as
.Ar bs =auto
which causes
.Xr bootpd 8
to determine the boot file size automatically.
.Pp
Some newer versions of
.Xr tftpd 8
provide a security feature to change their root directory using the
.Xr chroot 2
system call.
The
.Ar td
tag may be used to inform
.Xr bootpd 8
of this special root directory used by
.Xr tftpd 8 .
(One may alternatively use the bootpd
.Qq -c chdir
option.)
The
.Ar hd
tag is actually relative to the root directory specified by the
.Ar td
tag.
For example, if the real absolute path to your BOOTP client bootfile is
.Pa /tftpboot/bootfiles/bootimage ,
and
.Xr tftpd 8
uses
.Pa /tftpboot
as its "secure" directory, then specify the following in
.Nm bootptab :
.Pp
.Dl :td=/tftpboot:hd=/bootfiles:bf=bootimage:
.Pp
If your bootfiles are located directly in
.Pa /tftpboot ,
use:
.Pp
.Dl :td=/tftpboot:hd=/:bf=bootimage:
.Pp
The
.Ar sa
tag may be used to specify the IP address of the particular TFTP server
you wish the client to use.
In the absence of this tag,
.Xr bootpd 8
will tell the client to perform TFTP to the same machine
.Xr bootpd 8
is running on.
.Pp
The time offset
.Ar to
may be either a signed decimal integer specifying the client's
time zone offset in seconds from UTC, or the keyword
.Ar auto
which uses the server's time zone offset.
Specifying the
.Ar to
symbol as a boolean has the same effect as specifying
.Ar auto
as its value.
.Pp
The bootfile size
.Ar bs
may be either a decimal, octal, or hexadecimal integer specifying the size of
the bootfile in 512-octet blocks, or the keyword
.Ar auto
which causes the server to automatically calculate the bootfile size at each
request.
As with the time offset, specifying the
.Ar bs
symbol as a boolean has the same effect as specifying
.Ar auto
as its value.
.Pp
The vendor magic cookie selector (the
.Ar vm
tag) may take one of the following keywords:
.Ar auto
(indicating that vendor information is determined by the client's request),
.Ar rfc1048
or
.Ar rfc1084
(which always forces an RFC 1084-style reply), or
.Ar cmu
(which always forces a CMU-style reply).
.Pp
The
.Ar hn
tag is strictly a boolean tag; it does not take the usual equals sign and
value.
Its presence indicates that the hostname should be sent to RFC 1084 clients.
.Xr bootpd 8
attempts to send the entire hostname as it is specified in the configuration
file; if this will not fit into the reply packet, the name is shortened to
just the host field (up to the first period, if present) and then tried.
In no case is an arbitrarily truncated hostname sent (if nothing reasonable
will fit, nothing is sent).
.Pp
Often, many host entries share common values for certain tags (such as name
servers, etc.).
Rather than repeatedly specifying these tags, a full specification can be
listed for one host entry and shared by others via the
.Ar tc
(table continuation) mechanism.
Often, the template entry is a dummy host which doesn't actually exist and
never sends bootp requests.
This feature is similar to the
.Ar tc
feature of
.Xr termcap 5
for similar terminals.
Note that
.Xr bootpd 8
allows the
.Ar tc
tag symbol to appear anywhere in the host entry, unlike
.Xr termcap 5
which requires it to be the last tag.
Information explicitly specified for a host always overrides information
implied by a
.Ar tc
tag symbol, regardless of its location within the entry.
The value of the
.Ar tc
tag may be the hostname or IP address of any host entry
previously listed in the configuration file.
.Pp
Sometimes it is necessary to delete a specific tag after it has been inferred
via
.Ar tc .
This can be done using the construction
.Ar tag @@
which removes the effect of
.Ar tag
as in
.Xr termcap 5 .
For example, to completely undo an IEN-116 name server specification, use
.Qq :ns@@:
at an appropriate place in the configuration entry.
After removal with
.Ar @@ ,
a tag is eligible to be set again through the
.Ar tc
mechanism.
.Pp
Blank lines and lines beginning with "#" are ignored in the configuration
file.
Host entries are separated from one another by newlines; a single host
entry may be extended over multiple lines if the lines end with a backslash
(\\).
It is also acceptable for lines to be longer than 80 characters.
Tags may appear in any order, with the following exceptions:
the hostname must be the very first field in an entry,
and the hardware type must precede the hardware address.
.Pp
An example
.Pa /etc/bootptab
file follows:
.Pp
.Bd -literal -offset indent
# Sample bootptab file (domain=andrew.cmu.edu)

\&.default:\\
	:hd=/usr/boot:bf=null:\\
	:ds=netserver, lancaster:\\
	:ns=pcs2, pcs1:\\
	:ts=pcs2, pcs1:\\
	:sm=255.255.255.0:\\
	:gw=gw.cs.cmu.edu:\\
	:hn:to=-18000:

carnegie:ht=6:ha=7FF8100000AF:tc=.default:
baldwin:ht=1:ha=0800200159C3:tc=.default:
wylie:ht=1:ha=00DD00CADF00:tc=.default:
arnold:ht=1:ha=0800200102AD:tc=.default:
bairdford:ht=1:ha=08002B02A2F9:tc=.default:
bakerstown:ht=1:ha=08002B0287C8:tc=.default:

# Special domain name server and option tags for next host
butlerjct:ha=08002001560D:ds=128.2.13.42:\\
	:T37=0x12345927AD3BCF:\\
	:T99="Special ASCII string":\\
	:tc=.default:

gastonville:ht=6:ha=7FFF81000A47:tc=.default:
hahntown:ht=6:ha=7FFF81000434:tc=.default:
hickman:ht=6:ha=7FFF810001BA:tc=.default:
lowber:ht=1:ha=00DD00CAF000:tc=.default:
mtoliver:ht=1:ha=00DD00FE1600:tc=.default:
.Ed
.Sh FILES
/etc/bootptab
.Sh SEE ALSO
.Xr bootpd 8 ,
.Xr tftpd 8
.Pp
DARPA Internet Request For Comments RFC 951, RFC 1048, RFC 1084,
Assigned Numbers
@


1.8
log
@mdoc versions;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: bootptab.5,v 1.7 2003/01/18 23:40:58 deraadt Exp $
@


1.7
log
@more typos; jmc@@prioris.mini.pw.edu.pl
@
text
@d1 2
d5 7
a11 8
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.6 2001/08/22 01:53:05 brad Exp $
.\"
.TH BOOTPTAB 5 "October 31, 1991" "Carnegie Mellon University"
.UC 6

.SH NAME
bootptab \- Internet Bootstrap Protocol server database
.SH DESCRIPTION
d13 1
a13 1
.I bootptab
d15 1
a15 1
.IR bootpd ,
d18 1
a18 1
.IR termcap (5)
d20 6
a25 5
represent host parameters.  These parameter declarations are separated by
colons (:), with a general format of:
.PP
.I "	hostname:tg=value:tg=value:tg=value:"
.PP
d27 1
a27 1
.I hostname
d29 14
a42 13
.I tg
is a two-character tag symbol.  Replies are returned to clients
only if an entry with the client's Ethernet or IP address exists
in the
.I booptab
file.  Dummy entries have an invalid hostname
(one with a "." as the first character) and are used to provide
default values used by other entries via the
.B tc=.dummy-entry
mechanism.  Most tags must be followed by an equal sign
and a value as above.  Some may also appear in a boolean form with no
value (i.e.,
.RI : tg :).
d44 35
a78 69
.PP
.br
	bf	Bootfile
.br
	bs	Bootfile size in 512-octet blocks
.br
	cs	Cookie server address list
.br
	df	Merit dump file
.br
	dn	Domain name
.br
	ds	Domain name server address list
.br
	ef	Extension file
.br
	gw	Gateway address list
.br
	ha	Host hardware address
.br
	hd	Bootfile home directory
.br
	hn	Send client's hostname to client
.br
	ht	Host hardware type (see Assigned Numbers RFC)
.br
	im	Impress server address list
.br
	ip	Host IP address
.br
	lg	Log server address list
.br
	lp	LPR server address list
.br
	ns	IEN-116 name server address list
.br
	nt	NTP (time) Server (RFC 1129)
.br
	ra	Reply address override
.br
	rl	Resource location protocol server address list
.br
	rp	Root path to mount as root
.br
	sa	TFTP server address client should use
.br
	sm	Host subnet mask
.br
	sw	Swap server address
.br
	tc	Table continuation (points to similar "template" 
.br
		host entry)
.br
	td	TFTP root directory used by "secure" TFTP 
.br
		servers
.br
	to	Time offset in seconds from UTC
.br
	ts	Time server address list
.br
	vm	Vendor magic cookie selector
.br
	yd	YP (NIS) domain name
.br
	ys	YP (NIS) server address

.PP
d80 1
a80 1
.RI T n ,
d82 11
a92 9
.I n
is an RFC1084 vendor field tag number.  Thus it is possible to immediately
take advantage of future extensions to RFC1084 without being forced to modify
.I bootpd
first.  Generic data may be represented as either a stream of hexadecimal
numbers or as a quoted string of ASCII characters.  The length of the generic
data is automatically determined and inserted into the proper field(s) of the
RFC1084-style bootp reply.
.PP
d94 10
a103 10
.BR cs ,
.BR ds ,
.BR gw ,
.BR im ,
.BR lg ,
.BR lp ,
.BR ns ,
.BR nt ,
.BR ra ,
.BR rl ,
d105 1
a105 1
.BR ts .
d107 4
a110 4
.BR ip ,
.BR sa ,
.BR sw ,
.BR sm ,
d112 1
a112 1
.B ys
d118 3
a120 2
.I bootpd
to lookup the IP address for that host name using gethostbyname(3).
d122 1
a122 1
.B ip
d124 1
a124 1
.I bootpd
d127 1
a127 1
.PP
d129 1
a129 1
.B ht
d132 1
a132 1
.B ethernet
d134 1
a134 1
.B ether
d136 1
a136 1
.B ethernet3
d138 1
a138 1
.B ether3
d140 2
a141 2
.BR ieee802 ,
.BR tr ,
d143 1
a143 1
.B token-ring
d145 1
a145 1
.B pronet
d147 2
a148 2
.BR chaos ,
.BR arcnet ,
d150 1
a150 1
.B ax.25
d153 1
a153 1
.B ha
d155 3
a157 2
or in numeric form.  Note that the numeric form
.I must
d159 3
a161 2
included for readability.  The
.B ha
d163 1
a163 1
.B ht
d165 1
a165 1
.B tc
d169 4
a172 3
.I bootpd
will try to determine the hardware address using ether_hostton(3).
.PP
d174 3
a176 3
optionally surrounded by double quotes (").  The client's request and the
values of the
.B hd
d178 1
a178 1
.B bf
d181 1
a181 1
.PP
d183 1
a183 1
.B bf
d187 3
a189 4
.B hd
option is specified, its value is prepended to the
boot file in the reply packet, otherwise the path
supplied in the client request is used.
d191 1
a191 1
.I bootpd
d193 1
a193 1
.PP
d195 2
a196 2
.B bs
option specified the size of the boot file.
d198 1
a198 1
.BR bs =auto
d200 1
a200 1
.I bootpd
d202 1
a202 1
.PP
d204 3
a206 4
.I tftpd
provide a security feature to change their root directory using
the
.IR chroot (2)
d209 1
a209 1
.B td
d211 1
a211 1
.I bootpd
d213 4
a216 4
.IR tftpd .
(One may alternatively use the
.I bootpd
"-c chdir" option.)
d218 1
a218 1
.B hd
d220 1
a220 1
.B td
d223 16
a238 13
/tftpboot/bootfiles/bootimage, and
.IR tftpd
uses /tftpboot as its "secure" directory, then specify the following in
.IR bootptab :
.PP
.br
	:td=/tftpboot:hd=/bootfiles:bf=bootimage:
.PP
If your bootfiles are located directly in /tftpboot, use:
.PP
.br
	:td=/tftpboot:hd=/:bf=bootimage:
.PP
d240 1
a240 1
.B sa
d242 3
a244 2
you wish the client to use.  In the absence of this tag,
.I bootpd
d246 1
a246 1
.I bootpd
d248 1
a248 1
.PP
d250 1
a250 1
.B to
d253 4
a256 3
.B auto
which uses the server's time zone offset.  Specifying the
.B to
d258 1
a258 1
.B auto
d260 1
a260 1
.PP
d262 1
a262 1
.B bs
d265 1
a265 1
.B auto
d267 3
a269 2
request.  As with the time offset, specifying the
.B bs
d271 1
a271 1
.B auto
d273 1
a273 1
.PP
d275 1
a275 1
.B vm
d277 1
a277 1
.B auto
d279 1
a279 1
.B rfc1048
d281 3
a283 3
.B rfc1084
(which always forces an RFC1084-style reply), or
.B cmu
d285 1
a285 1
.PP
d287 5
a291 5
.B hn
tag is strictly a boolean tag; it does not take the usual equals-sign and
value.  Its presence indicates that the hostname should be sent to RFC1084
clients.
.I Bootpd
d297 1
a297 1
.PP
d299 4
a302 3
servers, etc.).  Rather than repeatedly specifying these tags, a full
specification can be listed for one host entry and shared by others via the
.B tc
d305 3
a307 2
never sends bootp requests.  This feature is similar to the
.B tc
d309 4
a312 3
.IR termcap (5)
for similar terminals.  Note that
.I bootpd
d314 1
a314 1
.B tc
d316 8
a323 7
.I termcap
which requires it to be the last tag.  Information explicitly specified for a
host always overrides information implied by a
.B tc
tag symbol, regardless of its location within the entry.  The
value of the
.B tc
d326 1
a326 1
.PP
d329 1
a329 1
.BR tc .
d331 1
a331 1
.IB tag @@
d333 1
a333 1
.I tag
d335 1
a335 1
.IR termcap (5).
d337 4
a340 3
":ns@@:" at an appropriate place in the configuration entry.  After removal
with
.BR @@ ,
d342 1
a342 1
.B tc
d344 1
a344 1
.PP
d346 2
a347 1
file.  Host entries are separated from one another by newlines; a single host
d349 6
a354 5
(\\).  It is also acceptable for lines to be longer than 80 characters.  Tags
may appear in any order, with the following exceptions:  the hostname must be
the very first field in an entry, and the hardware type must precede the
hardware address.
.PP
d356 1
a356 1
.I /etc/bootptab
d358 3
a360 3
.PP
.nf
	# Sample bootptab file (domain=andrew.cmu.edu)
d362 8
a369 8
	.default:\\
		:hd=/usr/boot:bf=null:\\
		:ds=netserver, lancaster:\\
		:ns=pcs2, pcs1:\\
		:ts=pcs2, pcs1:\\
		:sm=255.255.255.0:\\
		:gw=gw.cs.cmu.edu:\\
		:hn:to=-18000:
d371 6
a376 6
	carnegie:ht=6:ha=7FF8100000AF:tc=.default:
	baldwin:ht=1:ha=0800200159C3:tc=.default:
	wylie:ht=1:ha=00DD00CADF00:tc=.default:
	arnold:ht=1:ha=0800200102AD:tc=.default:
	bairdford:ht=1:ha=08002B02A2F9:tc=.default:
	bakerstown:ht=1:ha=08002B0287C8:tc=.default:
d378 5
a382 5
	# Special domain name server and option tags for next host
	butlerjct:ha=08002001560D:ds=128.2.13.42:\\
		:T37=0x12345927AD3BCF:\\
		:T99="Special ASCII string":\\
		:tc=.default:
d384 7
a390 8
	gastonville:ht=6:ha=7FFF81000A47:tc=.default:
	hahntown:ht=6:ha=7FFF81000434:tc=.default:
	hickman:ht=6:ha=7FFF810001BA:tc=.default:
	lowber:ht=1:ha=00DD00CAF000:tc=.default:
	mtoliver:ht=1:ha=00DD00FE1600:tc=.default:

.fi
.SH FILES
d392 6
a397 6

.SH "SEE ALSO"
.br
bootpd(8), tftpd(8),
.br
DARPA Internet Request For Comments RFC951, RFC1048, RFC1084, Assigned Numbers
@


1.6
log
@ether_hton(3) -> ether_hostton(3)
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.5 2000/03/14 21:31:35 aaron Exp $
d91 1
a91 1
	tc	Table continuation (points to similar "template" host entry)
d93 5
a97 1
	td	TFTP root directory used by "secure" TFTP servers
@


1.5
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.4 1999/05/12 13:26:52 aaron Exp $
d192 1
a192 1
will try to determine the hardware address using ether_hton(3).
@


1.4
log
@grammar police: do not hyphenate compound words that act as adjectives if the
first word ends in -ly

i.e., fully-qualified, newly-created, globally-visible, etc. are wrong
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.3 1998/09/07 16:44:34 aaron Exp $
d38 1
a38 1
value (i.e.
@


1.3
log
@More man page fixes. Particularly fix uses of it's/its, affect/effect,
then/than and such. Other miscellaneous problems fixed across these source
files.
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.2 1996/06/23 10:22:25 deraadt Exp $
d312 1
a312 1
In no case is an arbitrarily-truncated hostname sent (if nothing reasonable
@


1.2
log
@sync to 0622
@
text
@d3 1
a3 1
.\"	$Header: /cvs/src/usr.sbin/bootpd/bootptab.5,v 1.1.1.1 1995/10/18 08:47:26 deraadt Exp $
d16 1
a16 1
It's format is similar to that of
d306 1
a306 1
value.  It's presence indicates that the hostname should be sent to RFC1084
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
.\"	$Header: /a/cvsroot/src/usr.sbin/bootpd/bootptab.5,v 1.2 1994/08/22 22:14:51 gwr Exp $
d22 1
a22 1
.I "	hostname:tg=value. . . :tg=value. . . :tg=value. . . ."
d28 5
a32 1
is a two-character tag symbol.  Dummy entries have an invalid hostname
d36 1
a36 1
mechanism.  Most tags must be followed by an equals-sign
d203 1
a203 2
If the client provides a file name it is left as is.
Otherwise, if the
d205 2
a206 1
option is specified its value is copied into the reply packet.
d209 11
a219 3
option is specified as well, its value is prepended to the
boot file copied into the reply packet.
The existence of the boot file is checked only if the
d221 3
a223 2
option is used (to determine the boot file size).
A reply may be sent whether or not the boot file exists.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
