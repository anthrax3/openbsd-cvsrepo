head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.22
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.20
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.16
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.14
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.12
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.10
	OPENBSD_5_0:1.8.0.8
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.6
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.4
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.22
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.18
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.16
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.14
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.12
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.10
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.8
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.6
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.14
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.12
	OPENBSD_2_8:1.3.0.10
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.8
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.6
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2015.01.16.06.40.17;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	Uu5nFG3wCl0LACBb;

1.8
date	2009.10.27.23.59.51;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2004.11.24.17.57.16;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.26.21.36.39;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.23.36.53;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.14.16.44.25;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	98.08.19.06.47.55;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.15.22.08.17;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.47.39;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.47.39;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Replace <sys/param.h> with <limits.h> and other less dirty headers where
possible.  Annotate <sys/param.h> lines with their current reasons.  Switch
to PATH_MAX, NGROUPS_MAX, HOST_NAME_MAX+1, LOGIN_NAME_MAX, etc.  Change
MIN() and MAX() to local definitions of MINIMUM() and MAXIMUM() where
sensible to avoid pulling in the pollution.  These are the files confirmed
through binary verification.
ok guenther, millert, doug (helped with the verification protocol)
@
text
@/*	$OpenBSD: testdb.c,v 1.8 2009/10/27 23:59:51 deraadt Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/sysctl.h>

#include <db.h>
#include <fcntl.h>
#include <kvm.h>
#include <limits.h>
#include <paths.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

#include "extern.h"

/* Return true if the db file is valid, else false */
int
testdb(char *dbname)
{
	DBT rec;
	DB *db = NULL;
	size_t kversionlen;
	char kversion[LINE_MAX];
	int mib[2], ret = 0;

	/* Read version string of running kernel */
	mib[0] = CTL_KERN;
	mib[1] = KERN_VERSION;
	kversionlen = sizeof(kversion);
	if (sysctl(mib, 2, kversion, &kversionlen, NULL, 0) < 0)
		goto close;

	/* Read the version out of the database */
	if ((db = dbopen(dbname, O_RDONLY, 0, DB_HASH, NULL)) == NULL)
		goto close;
	rec.data = VRS_KEY;
	rec.size = sizeof(VRS_KEY) - 1;
	if ((db->get)(db, &rec, &rec, 0))
		goto close;
	if (rec.data == NULL || rec.size > kversionlen)
		goto close;

	/* If they match, we win */
	ret = memcmp(kversion, rec.data, rec.size) == 0;

close:
	if (db)
		(void)(db->close)(db);
	return (ret);
}
@


1.8
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.7 2004/11/24 17:57:16 millert Exp $	*/
d32 1
a32 1
#include <sys/param.h>
@


1.7
log
@Use sysctl to get the running kernel version instead of grotting
through kmem.  Fixes false positives on machines where the memory
is not cleared between boots.  OK deraadt@@, tedu@@, jaredy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.6 2003/06/26 21:36:39 deraadt Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "from: @@(#)testdb.c	8.1 (Berkeley) 6/6/93";
#else
static char *rcsid = "$OpenBSD: testdb.c,v 1.6 2003/06/26 21:36:39 deraadt Exp $";
#endif
#endif /* not lint */
@


1.6
log
@ansi and protos
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.5 2003/06/02 23:36:53 millert Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: testdb.c,v 1.5 2003/06/02 23:36:53 millert Exp $";
d41 5
a45 2
#include <sys/file.h>
#include <errno.h>
d47 1
a47 2
#include <kvm.h>
#include <db.h>
d49 1
a50 2
#include <string.h>
#include <paths.h>
a57 2
	DB *db;
	int cc, kd, ret, dbversionlen;
d59 10
a68 8
	struct nlist nitem;
	char dbversion[_POSIX2_LINE_MAX];
	char kversion[_POSIX2_LINE_MAX];

	ret = 0;
	db = NULL;

	if ((kd = open(_PATH_KMEM, O_RDONLY, 0)) < 0)
d71 1
a73 2

	/* Read the version out of the database */
d78 1
a78 22
	if (rec.data == 0 || rec.size == 0 || rec.size > sizeof(dbversion))
		goto close;
	(void)memcpy(dbversion, rec.data, rec.size);
	dbversionlen = rec.size;

	/* Read version string from kernel memory */
	rec.data = VRS_SYM;
	rec.size = sizeof(VRS_SYM) - 1;
	if ((db->get)(db, &rec, &rec, 0))
		goto close;
	if (rec.data == 0 || rec.size != sizeof(struct nlist))
		goto close;
	(void)memcpy(&nitem, rec.data, sizeof(nitem));
	/*
	 * Theoretically possible for lseek to be seeking to -1.  Not
	 * that it's something to lie awake nights about, however.
	 */
	errno = 0;
	if (lseek(kd, (off_t)nitem.n_value, SEEK_SET) == -1 && errno != 0)
		goto close;
	cc = read(kd, kversion, sizeof(kversion));
	if (cc < 0 || cc != sizeof(kversion))
d82 1
a82 1
	ret = memcmp(kversion, dbversion, dbversionlen) == 0;
d84 1
a84 2
close:	if (kd >= 0)
		(void)close(kd);
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.4 2002/03/14 16:44:25 mpech Exp $	*/
d36 1
a36 1
static char *rcsid = "$OpenBSD: testdb.c,v 1.4 2002/03/14 16:44:25 mpech Exp $";
d55 1
a55 2
testdb(dbname)
	char *dbname;
@


1.4
log
@kill more registers.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.3 1998/08/19 06:47:55 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static char *rcsid = "$OpenBSD: testdb.c,v 1.3 1998/08/19 06:47:55 millert Exp $";
@


1.3
log
@Make kvm_mkdb work again
 o testdb() needs to take as an arg the name of the kernel so it can do
   the version test correctly.
 o add undocumented verbose flag to tell when we are rebuilding the .db file
 o DO_* -> _NLIST_DO_*, this prevented kvm_mkdb from doing anything at all.
 o preserve a few error messages so you get error output when none of
   the exec types match the target.
 o check malloc return values
 o get_kerntext should not subtract the sizeof(struct exec) from kernel_text
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.2 1997/01/15 22:08:17 millert Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD: testdb.c,v 1.2 1997/01/15 22:08:17 millert Exp $";
d62 2
a63 2
	register DB *db;
	register int cc, kd, ret, dbversionlen;
@


1.2
log
@From NetBSD: make testdb() fail if database version string has length zero.
Also, KNF, b* -> mem*, getopt tests against -1, not EOF, and index -> strchr.
Added OpenBSD tags.
@
text
@d1 1
a1 1
/*	$OpenBSD: testdb.c,v 1.5 1997/01/11 06:18:11 mikel Exp $	*/
d40 1
a40 1
static char *rcsid = "$OpenBSD: testdb.c,v 1.5 1997/01/11 06:18:11 mikel Exp $";
d59 2
a60 1
testdb()
a63 1
	register char *cp, *uf;
d66 1
a66 1
	char dbname[MAXPATHLEN], dbversion[_POSIX2_LINE_MAX];
a74 4
	uf = _PATH_UNIX;
	if ((cp = strrchr(uf, '/')) != 0)
		uf = cp + 1;
	(void)snprintf(dbname, sizeof(dbname), "%skvm_%s.db", _PATH_VARDB, uf);
@


1.1
log
@Initial revision
@
text
@d1 2
d37 5
a41 2
/*static char sccsid[] = "from: @@(#)testdb.c	8.1 (Berkeley) 6/6/93";*/
static char *rcsid = "$Id: testdb.c,v 1.2 1994/06/11 07:57:42 mycroft Exp $";
d76 1
a76 1
	if ((cp = rindex(uf, '/')) != 0)
d78 1
a78 1
	(void) snprintf(dbname, sizeof(dbname), "%skvm_%s.db", _PATH_VARDB, uf);
d87 1
a87 1
	if (rec.data == 0 || rec.size > sizeof(dbversion))
d89 1
a89 1
	bcopy(rec.data, dbversion, rec.size);
d99 1
a99 1
	bcopy(rec.data, &nitem, sizeof(nitem));
d112 1
a112 1
	ret = bcmp(dbversion, kversion, dbversionlen) == 0;
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
