head	1.29;
access;
symbols
	OPENBSD_6_1:1.29.0.4
	OPENBSD_6_1_BASE:1.29
	OPENBSD_6_0:1.27.0.6
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.27.0.4
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.26.0.6
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.25.0.2
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.24.0.4
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.2
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.2
	OPENBSD_5_0:1.22.0.6
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.4
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.2
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.19.0.4
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.18.0.4
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.2
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.15.0.2
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.29
date	2017.01.13.18.59.12;	author phessler;	state Exp;
branches;
next	1.28;
commitid	3Jvf15B19ysa8i2W;

1.28
date	2016.10.14.16.05.35;	author phessler;	state Exp;
branches;
next	1.27;
commitid	Ai7XVOgXw9ZLovz1;

1.27
date	2015.04.17.07.51.09;	author phessler;	state Exp;
branches;
next	1.26;
commitid	FgmHx68AdtL9Wg33;

1.26
date	2013.10.09.08.56.38;	author phessler;	state Exp;
branches;
next	1.25;

1.25
date	2013.03.07.21.28.34;	author claudio;	state Exp;
branches;
next	1.24;

1.24
date	2012.05.27.18.53.50;	author claudio;	state Exp;
branches;
next	1.23;

1.23
date	2011.09.21.10.37.51;	author claudio;	state Exp;
branches;
next	1.22;

1.22
date	2010.05.03.13.11.41;	author claudio;	state Exp;
branches;
next	1.21;

1.21
date	2010.01.10.00.16.23;	author claudio;	state Exp;
branches;
next	1.20;

1.20
date	2009.11.02.20.38.45;	author claudio;	state Exp;
branches;
next	1.19;

1.19
date	2009.06.06.06.05.41;	author claudio;	state Exp;
branches;
next	1.18;

1.18
date	2008.06.07.18.14.41;	author henning;	state Exp;
branches;
next	1.17;

1.17
date	2007.04.06.18.36.32;	author claudio;	state Exp;
branches;
next	1.16;

1.16
date	2007.03.28.12.34.08;	author henning;	state Exp;
branches;
next	1.15;

1.15
date	2007.03.03.11.45.30;	author henning;	state Exp;
branches;
next	1.14;

1.14
date	2006.08.23.08.21.11;	author claudio;	state Exp;
branches;
next	1.13;

1.13
date	2006.06.15.09.59.48;	author claudio;	state Exp;
branches;
next	1.12;

1.12
date	2006.05.23.12.14.34;	author henning;	state Exp;
branches;
next	1.11;

1.11
date	2006.01.24.15.28.03;	author henning;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.03.22.51.14;	author claudio;	state Exp;
branches;
next	1.9;

1.9
date	2005.06.06.17.13.56;	author henning;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.23.20.09.00;	author claudio;	state Exp;
branches;
next	1.7;

1.7
date	2004.12.23.17.26.51;	author henning;	state Exp;
branches;
next	1.6;

1.6
date	2004.11.19.14.45.57;	author claudio;	state Exp;
branches;
next	1.5;

1.5
date	2004.08.20.15.49.35;	author henning;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.21.11.52.32;	author claudio;	state Exp;
branches;
next	1.3;

1.3
date	2004.03.02.19.32.43;	author claudio;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.26.16.19.58;	author claudio;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.21.23.45.18;	author henning;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Add support for draft-ietf-idr-shutdown

    BGP state = Idle, marked down with shutdown reason "goodbye, we are
    upgrading to openbsd 6.1", down for 00:00:17

developed by Peter van Dijk <peter.van.dijk@@powerdns.com> and Job
Snijders <job@@ntt.net>, thank you!

OK benno@@
@
text
@/*	$OpenBSD: parser.h,v 1.28 2016/10/14 16:05:35 phessler Exp $ */

/*
 * Copyright (c) 2003, 2004 Henning Brauer <henning@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>

#include "bgpd.h"

enum actions {
	NONE,
	SHOW,
	SHOW_SUMMARY,
	SHOW_SUMMARY_TERSE,
	SHOW_NEIGHBOR,
	SHOW_NEIGHBOR_TIMERS,
	SHOW_NEIGHBOR_TERSE,
	SHOW_FIB,
	SHOW_FIB_TABLES,
	SHOW_RIB,
	SHOW_MRT,
	SHOW_RIB_MEM,
	SHOW_NEXTHOP,
	SHOW_INTERFACE,
	RELOAD,
	FIB,
	FIB_COUPLE,
	FIB_DECOUPLE,
	LOG_VERBOSE,
	LOG_BRIEF,
	NEIGHBOR,
	NEIGHBOR_UP,
	NEIGHBOR_DOWN,
	NEIGHBOR_CLEAR,
	NEIGHBOR_RREFRESH,
	NEIGHBOR_DESTROY,
	NETWORK_ADD,
	NETWORK_REMOVE,
	NETWORK_FLUSH,
	NETWORK_SHOW,
	NETWORK_MRT,
	IRRFILTER,
	NETWORK_BULK_ADD,
	NETWORK_BULK_REMOVE
};

struct parse_result {
	struct bgpd_addr	 addr;
	struct bgpd_addr	 peeraddr;
	struct filter_as	 as;
	struct filter_set_head	 set;
	struct filter_community  community;
	struct filter_largecommunity  large_community;
	char			 peerdesc[PEER_DESCR_LEN];
	char			 rib[PEER_DESCR_LEN];
	char			 shutcomm[SHUT_COMM_LEN];
	char			*irr_outdir;
	int			 flags;
	u_int			 rtableid;
	enum actions		 action;
	u_int8_t		 prefixlen;
	u_int8_t		 aid;
	int			 mrtfd;
};

__dead void		 usage(void);
struct parse_result	*parse(int, char *[]);
int			 parse_prefix(const char *, size_t, struct bgpd_addr *,
			     u_int8_t *);
@


1.28
log
@Add support for draft-ietf-idr-large-community

Joint work with Job Snijders, many thanks!
OK benno@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.27 2015/04/17 07:51:09 phessler Exp $ */
d69 1
@


1.27
log
@parse_prefix in parse.c got changed but the declaration in bgpctl.c
wasn't updated, so we would crash when doing `bgpctl net bulk` commands.

Fix by moving parse_prefix into a header, since we use it in more than
one file.

crash found by henning@@
underlying problem found by blambert@@

OK sthen@@ deraadt@@ claudio@@ henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.26 2013/10/09 08:56:38 phessler Exp $ */
d66 1
@


1.26
log
@Allow us to bulk add / delete routes with the same attributes.  Really
useful for distributing IP lists.

OK beck@@, claudio@@, henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.25 2013/03/07 21:28:34 claudio Exp $ */
d79 2
@


1.25
log
@Implement a bgpctl nei foo destroy that will remove the specified cloned
neighbor. The neighbor must be set down before calling this function.
OK phessler
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.24 2012/05/27 18:53:50 claudio Exp $ */
d55 3
a57 1
	IRRFILTER
@


1.24
log
@Make it possible to load mrt table dumps into bgpd. This is a debug tool but
it  allows anyone to use MRT table dumps to load prefixes into a bgpd instance.
For example you can download the RIPE dumps and load full-feeds onto your
laptop until the poor thing dies.
OK henning@@ sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.23 2011/09/21 10:37:51 claudio Exp $ */
d49 1
@


1.23
log
@Make it possible to parse MRT table dumps (all 3 formats) and display
them like the show rib / show rib detail output. It is also possible
to filter the output. e.g.
   bgpctl show mrt file ./bview.20110914.1600 as 22512 204.209.0.0/16 all
OK sthen@@, put it in henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.22 2010/05/03 13:11:41 claudio Exp $ */
d53 1
@


1.22
log
@Adjustments for multiple kroute table support. This adds a few new command
arguments (show tables and show fib table 1, etc).
Tested by sthen@@, OK to move on by henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.21 2010/01/10 00:16:23 claudio Exp $ */
d34 1
d70 1
@


1.21
log
@ribreq uses now a AID, use AID also on the parsing side and convert to
AF when necessary. OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.20 2009/11/02 20:38:45 claudio Exp $ */
d32 1
d65 2
a66 1
	enum actions		action;
@


1.20
log
@Implement "log verbose" and "log brief" to enable or disable verbose debug
logging. henning, sthen, michele like the idea
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.19 2009/06/06 06:05:41 claudio Exp $ */
d66 1
a66 1
	sa_family_t		 af;
@


1.19
log
@bgpctl part of allowing alternate RIBs to be shown. Had to use the
keyword table because show rib rib foo is strange.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.18 2008/06/07 18:14:41 henning Exp $ */
d40 2
@


1.18
log
@teach the command lineparser about getopt style options after commands
use that for irrfilter mode.
hints from theo a year ago, code by me a year ago, ok claudio a year ago
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.17 2007/04/06 18:36:32 claudio Exp $ */
d59 1
@


1.17
log
@Implement "bgpctl show neighbor <peer> terse" this will print all statistics
in an easily parseable form. This output can be used to implement SNMP MIBs
or rrdtool/mrtg update scripts. OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.16 2007/03/28 12:34:08 henning Exp $ */
d53 8
a60 7
	struct bgpd_addr	addr;
	struct bgpd_addr	peeraddr;
	struct filter_as	as;
	struct filter_set_head	set;
	struct filter_community community;
	char			peerdesc[PEER_DESCR_LEN];
	int			flags;
d62 2
a63 2
	u_int8_t		prefixlen;
	sa_family_t		af;
d66 1
@


1.16
log
@add support for bgpctl show rib community <community>
mostly from rivo nurges <rix@@estpak.ee>, ok claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.15 2007/03/03 11:45:30 henning Exp $ */
d30 1
@


1.15
log
@add irrfilter mode.
generates bgpd filter rules from the Internet Routing Registry aka IRR aka
the aut-num, as-set and route objects in the RIPE, ARIN, APNIC ... databases
accessed via whois, using the Routing Policy Specificaion Language RPSL.
implement the whois query interface, an RPSL parser (of course only the
parts we need), recursive as-set resolver, prefixes per AS lookup,
and an ouput module to make up the rules.
work in progress, not ready for general consumption yet.
import agreed by theo & claudio
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.14 2006/08/23 08:21:11 claudio Exp $ */
d56 1
@


1.14
log
@Extend show rib command. Following new options are added:
 in: show the unfiltered input of a neighbor aka adj-rib-in
 out: show only the prefixes that are sent to a specified neighbor (adj-rib-out)
 neighbor <IP>: limit the output of the command to prefixes sent by the
                specified neighbor

OK henning@@ manpage with help by jmc@@ but the show rib section needs some
rework because it starts to be confusing. Actually the parser needs to get
smarter.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.13 2006/06/15 09:59:48 claudio Exp $ */
d47 2
a48 1
	NETWORK_SHOW
@


1.13
log
@Shuffle some vars to make the struct ordered by size.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.12 2006/05/23 12:14:34 henning Exp $ */
d52 1
@


1.12
log
@support requesting route refresh from a neighbor
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.11 2006/01/24 15:28:03 henning Exp $ */
d53 1
d55 1
a56 1
	int			flags;
a57 1
	struct filter_set_head	set;
@


1.11
log
@introduce "bgpctl show summary terse", shows summary in an easy to parse
format, intended for monitoring puposes. claudio ok
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.10 2006/01/03 22:51:14 claudio Exp $ */
d43 1
@


1.10
log
@Show RIB statistics via "bgpctl show rib mem".
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.9 2005/06/06 17:13:56 henning Exp $ */
d27 1
@


1.9
log
@add support for a "family" token, allows to select address families
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.8 2005/05/23 20:09:00 claudio Exp $ */
d31 1
@


1.8
log
@Make it possible to dynamicaly add networks with attributes like communities
or metrics. Requested by beck@@ OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.7 2004/12/23 17:26:51 henning Exp $ */
d55 1
@


1.7
log
@allow "bgpctl neighbor" to take the peer's descr as argument as well
as its address
so "bgpctl neighbor upstream1 clear" now works and you don't have to
remember IPs
claudio ok
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.6 2004/11/19 14:45:57 claudio Exp $ */
d54 1
@


1.6
log
@Rename struct as_filter to struct filter_as.
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.5 2004/08/20 15:49:35 henning Exp $ */
d48 3
a52 1
	struct bgpd_addr	addr;
a53 1
	struct filter_as	as;
@


1.5
log
@add support for "bgpctl neighbor 1.2.3.4 clear", takes session down & up again
claudio ok
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.4 2004/05/21 11:52:32 claudio Exp $ */
d52 1
a52 1
	struct as_filter	as;
@


1.4
log
@Make it possible to add, delete, flush and show network announcements.
OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.3 2004/03/02 19:32:43 claudio Exp $ */
d40 1
@


1.3
log
@show rib A.B.C.D and show rib A.B.C.D/N [all] support. Now the most important
show commands are available. OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.2 2004/02/26 16:19:58 claudio Exp $ */
d39 5
a43 1
	NEIGHBOR_DOWN
@


1.2
log
@Implement "show rib" and "show rib <astype> <AS>" commands to dump the
RIB. OK henning@@
@
text
@d1 1
a1 1
/*	$OpenBSD: parser.h,v 1.1 2004/01/21 23:45:18 henning Exp $ */
d46 1
@


1.1
log
@new parser.
completely table driven and not wired into the action code like the
previous parser...
i wanted to do this for some time, and now it was just due.

ok claudio@@
@
text
@d1 1
a1 1
/*	$OpenBSD: bgpctl.c,v 1.32 2004/01/20 13:11:39 henning Exp $ */
d30 1
d46 1
@

