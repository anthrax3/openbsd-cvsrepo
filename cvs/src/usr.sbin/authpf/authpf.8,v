head	1.54;
access;
symbols
	OPENBSD_6_0:1.54.0.4
	OPENBSD_6_0_BASE:1.54
	OPENBSD_5_9:1.54.0.2
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.53.0.14
	OPENBSD_5_8_BASE:1.53
	OPENBSD_5_7:1.53.0.6
	OPENBSD_5_7_BASE:1.53
	OPENBSD_5_6:1.53.0.10
	OPENBSD_5_6_BASE:1.53
	OPENBSD_5_5:1.53.0.8
	OPENBSD_5_5_BASE:1.53
	OPENBSD_5_4:1.53.0.4
	OPENBSD_5_4_BASE:1.53
	OPENBSD_5_3:1.53.0.2
	OPENBSD_5_3_BASE:1.53
	OPENBSD_5_2:1.52.0.12
	OPENBSD_5_2_BASE:1.52
	OPENBSD_5_1_BASE:1.52
	OPENBSD_5_1:1.52.0.10
	OPENBSD_5_0:1.52.0.8
	OPENBSD_5_0_BASE:1.52
	OPENBSD_4_9:1.52.0.6
	OPENBSD_4_9_BASE:1.52
	OPENBSD_4_8:1.52.0.4
	OPENBSD_4_8_BASE:1.52
	OPENBSD_4_7:1.52.0.2
	OPENBSD_4_7_BASE:1.52
	OPENBSD_4_6:1.47.0.6
	OPENBSD_4_6_BASE:1.47
	OPENBSD_4_5:1.47.0.2
	OPENBSD_4_5_BASE:1.47
	OPENBSD_4_4:1.46.0.2
	OPENBSD_4_4_BASE:1.46
	OPENBSD_4_3:1.45.0.2
	OPENBSD_4_3_BASE:1.45
	OPENBSD_4_2:1.44.0.2
	OPENBSD_4_2_BASE:1.44
	OPENBSD_4_1:1.43.0.2
	OPENBSD_4_1_BASE:1.43
	OPENBSD_4_0:1.41.0.4
	OPENBSD_4_0_BASE:1.41
	OPENBSD_3_9:1.41.0.2
	OPENBSD_3_9_BASE:1.41
	OPENBSD_3_8:1.39.0.2
	OPENBSD_3_8_BASE:1.39
	OPENBSD_3_7:1.38.0.2
	OPENBSD_3_7_BASE:1.38
	OPENBSD_3_6:1.36.0.2
	OPENBSD_3_6_BASE:1.36
	OPENBSD_3_5:1.31.0.2
	OPENBSD_3_5_BASE:1.31
	OPENBSD_3_4:1.30.0.2
	OPENBSD_3_4_BASE:1.30
	OPENBSD_3_3:1.26.0.2
	OPENBSD_3_3_BASE:1.26
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9;
locks; strict;
comment	@.\" @;


1.54
date	2015.11.01.21.26.48;	author jmc;	state Exp;
branches;
next	1.53;
commitid	WWHUg7NSwgnfw8Dy;

1.53
date	2013.01.15.23.03.37;	author beck;	state Exp;
branches;
next	1.52;

1.52
date	2010.01.27.21.36.58;	author jmc;	state Exp;
branches;
next	1.51;

1.51
date	2010.01.27.15.36.17;	author todd;	state Exp;
branches;
next	1.50;

1.50
date	2009.10.26.22.06.13;	author sthen;	state Exp;
branches;
next	1.49;

1.49
date	2009.09.08.07.34.48;	author sthen;	state Exp;
branches;
next	1.48;

1.48
date	2009.09.08.06.59.18;	author sthen;	state Exp;
branches;
next	1.47;

1.47
date	2009.01.06.03.11.50;	author mcbride;	state Exp;
branches;
next	1.46;

1.46
date	2008.03.18.23.03.14;	author merdely;	state Exp;
branches;
next	1.45;

1.45
date	2008.02.14.01.49.17;	author mcbride;	state Exp;
branches;
next	1.44;

1.44
date	2007.05.31.19.20.22;	author jmc;	state Exp;
branches;
next	1.43;

1.43
date	2007.02.24.17.21.04;	author beck;	state Exp;
branches;
next	1.42;

1.42
date	2006.10.23.07.05.49;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2006.01.07.16.42.16;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2005.09.23.14.36.46;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2005.05.12.08.17.21;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2005.01.04.09.57.04;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2004.09.15.23.24.13;	author jmc;	state Exp;
branches;
next	1.36;

1.36
date	2004.08.15.10.40.50;	author canacar;	state Exp;
branches;
next	1.35;

1.35
date	2004.06.07.18.41.26;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2004.04.28.07.46.38;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2004.04.28.06.55.57;	author cedric;	state Exp;
branches;
next	1.32;

1.32
date	2004.04.28.05.06.12;	author cedric;	state Exp;
branches;
next	1.31;

1.31
date	2003.12.10.04.10.37;	author beck;	state Exp;
branches;
next	1.30;

1.30
date	2003.08.17.23.24.47;	author henning;	state Exp;
branches;
next	1.29;

1.29
date	2003.08.04.09.45.45;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2003.06.23.13.41.41;	author henning;	state Exp;
branches;
next	1.27;

1.27
date	2003.06.12.12.59.49;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.03.20.01.29.17;	author david;	state Exp;
branches;
next	1.25;

1.25
date	2003.03.18.08.44.09;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.03.11.09.24.57;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2003.03.10.15.37.29;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2003.03.06.04.07.38;	author david;	state Exp;
branches;
next	1.21;

1.21
date	2003.01.28.10.40.20;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2002.12.29.22.23.37;	author dhartmei;	state Exp;
branches;
next	1.19;

1.19
date	2002.12.22.14.19.30;	author dhartmei;	state Exp;
branches;
next	1.18;

1.18
date	2002.10.25.18.34.53;	author camield;	state Exp;
branches;
next	1.17;

1.17
date	2002.07.27.07.27.04;	author nordin;	state Exp;
branches;
next	1.16;

1.16
date	2002.06.24.09.59.54;	author dhartmei;	state Exp;
branches;
next	1.15;

1.15
date	2002.06.24.07.59.48;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2002.06.24.07.43.10;	author dhartmei;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.16.19.35.07;	author miod;	state Exp;
branches;
next	1.12;

1.12
date	2002.06.11.18.57.15;	author kjell;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.21.07.13.37;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.04.15.05.55.48;	author pvalchev;	state Exp;
branches;
next	1.9;

1.9
date	2002.04.06.17.34.14;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2002.04.05.20.35.52;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.04.05.03.06.52;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2002.04.02.17.29.47;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	2002.04.02.17.19.24;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2002.04.01.18.54.32;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2002.04.01.18.36.27;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.04.01.18.26.04;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2002.04.01.17.43.42;	author beck;	state Exp;
branches;
next	;


desc
@@


1.54
log
@replace "can not" with "cannot";
@
text
@.\" $OpenBSD: authpf.8,v 1.53 2013/01/15 23:03:37 beck Exp $
.\"
.\" Copyright (c) 1998-2007 Bob Beck (beck@@openbsd.org>.  All rights reserved.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 15 2013 $
.Dt AUTHPF 8
.Os
.Sh NAME
.Nm authpf ,
.Nm authpf-noip
.Nd authenticating gateway user shell
.Sh SYNOPSIS
.Nm authpf
.Nm authpf-noip
.Sh DESCRIPTION
.Nm
is a user shell for authenticating gateways.
It is used to change
.Xr pf 4
rules when a user authenticates and starts a session with
.Xr sshd 8
and to undo these changes when the user's session exits.
Typical use would be for a gateway that authenticates users before
allowing them Internet use, or a gateway that allows different users into
different places.
Combined with properly set up filter rules and secure switches,
.Nm
can be used to ensure users are held accountable for their network traffic.
It is meant to be used with users who can connect via
.Xr ssh 1
only, and requires the
.Xr pf 4
subsystem to be enabled.
.Pp
.Nm authpf-noip
is a user shell
which allows multiple connections to take
place from the same IP address.
It is useful primarily in cases where connections are tunneled via
the gateway system, and can be directly associated with the user name.
It cannot ensure accountability when
classifying connections by IP address;
in this case the client's IP address
is not provided to the packet filter via the
.Ar client_ip
macro or the
.Ar authpf_users
table.
Additionally, states associated with the client IP address
are not purged when the session is ended.
.Pp
To use either
.Nm
or
.Nm authpf-noip ,
the user's shell needs to be set to
.Pa /usr/sbin/authpf
or
.Pa /usr/sbin/authpf-noip .
.Pp
.Nm
uses the
.Xr pf.conf 5
syntax to change rules for an individual user or client IP address
as long as a user maintains an active
.Xr ssh 1
session, and logs the successful start and end of a session to
.Xr syslogd 8 .
.Nm
retrieves the client's connecting IP address via the
.Ev SSH_CLIENT
environment variable and, after performing additional access checks,
reads a template file to determine what rules (if any) to add, and
maintains the list of IP addresses of connected users in the
.Ar authpf_users
table.
On session exit the same rules and table entries that were added at startup
are removed, and all states associated with the client's IP address are purged.
.Pp
Each
.Nm
process stores its rules in a separate ruleset inside a
.Xr pf 4
.Pa anchor
shared by all
.Nm
processes.
By default, the
.Pa anchor
name "authpf" is used, and the ruleset names equal the username and PID of the
.Nm
processes as "username(pid)".
The following needs to be added to the main ruleset
.Pa /etc/pf.conf
in order to cause evaluation of any
.Nm
rules:
.Bd -literal -offset indent
anchor "authpf/*"
.Ed
.Pp
The "/*" at the end of the anchor name is required for
.Xr pf 4
to process the rulesets attached to the anchor by
.Nm authpf .
.Sh FILTER RULES
Filter rules for
.Nm
use the same format described in
.Xr pf.conf 5 .
The only difference is that these rules may (and probably should) use
the macro
.Em user_ip ,
which is assigned the connecting IP address whenever
.Nm
is run.
Additionally, the macro
.Em user_id
is assigned the user name.
.Pp
Rules are stored in a file called
.Pa authpf.rules .
This file will first be searched for in
.Pa /etc/authpf/users/$USER/ ,
then in
.Pa /etc/authpf/groups/$GROUP/
and finally in
.Pa /etc/authpf/ .
Only the first found file will be used.
.Pp
Per-user rules from the
.Pa /etc/authpf/users/$USER/
directory are intended to be used when non-default rules
are needed on an individual user basis.
Per-group rules from the
.Pa /etc/authpf/groups/$GROUP/
directory are intended to be used when non-default rules
are needed on a group basis.
It is important to ensure that a user cannot write or change
these configuration files.
.Pp
The
.Pa authpf.rules
file must exist in one of the above locations for
.Nm
to run.
.Sh CONFIGURATION
Options are controlled by the
.Pa /etc/authpf/authpf.conf
file.
If the file is empty, defaults are used for all
configuration options.
The file consists of pairs of the form
.Li name=value ,
one per line.
Currently, the allowed values are as follows:
.Bl -tag -width Ds
.It anchor=name
Use the specified
.Pa anchor
name instead of "authpf".
.It table=name
Use the specified
.Pa table
name instead of "authpf_users".
.El
.Sh USER MESSAGES
On successful invocation,
.Nm
displays a message telling the user he or she has been authenticated.
It will additionally display the contents of the file called
.Pa authpf.message .
This file will first be searched for in
.Pa /etc/authpf/users/$USER/
and then in
.Pa /etc/authpf/ .
Only one of these files will be used if both are present.
.Pp
There exist two methods for providing additional granularity to the control
offered by
.Nm
- it is possible to set the gateway to explicitly allow users who have
authenticated to
.Xr ssh 1
and deny access to only a few troublesome individuals.
This is done by creating a file with the banned user's login name as the
filename in
.Pa /etc/authpf/banned/ .
The contents of this file will be displayed to a banned user, thus providing
a method for informing the user that they have been banned, and where they can
go and how to get there if they want to have their service restored.
This is the default behaviour.
.Pp
It is also possible to configure
.Nm
to only allow specific users access.
This is done by listing their login names, one per line, in
.Pa /etc/authpf/authpf.allow .
A group of users can also be indicated by prepending "%" to the group name,
and all members of a login class can be indicated by prepending "@@" to the
login class name.
If "*" is found on a line, then all usernames match.
If
.Nm
is unable to verify the user's permission to use the gateway, it will
print a brief message and die.
It should be noted that a ban takes precedence over an allow.
.Pp
On failure, messages will be logged to
.Xr syslogd 8
for the system administrator.
The user does not see these, but will be told the system is unavailable due to
technical difficulties.
The contents of the file
.Pa /etc/authpf/authpf.problem
will also be displayed if the file exists and is readable.
.Sh CONFIGURATION ISSUES
.Nm
maintains the changed rules as long as the user maintains an active session.
It is important to remember however, that the existence
of this session means the user is authenticated.
Because of this, it is important to configure
.Xr sshd 8
to ensure the security of the session, and to ensure that the network
through which users connect is secure.
.Xr sshd 8
should be configured to use the
.Ar ClientAliveInterval
and
.Ar ClientAliveCountMax
parameters to ensure that a ssh session is terminated quickly if
it becomes unresponsive, or if arp or address spoofing is used to
hijack the session.
Note that TCP keepalives are not sufficient for
this, since they are not secure.
Also note that the various SSH tunnelling mechanisms,
such as
.Ar AllowTcpForwarding
and
.Ar PermitTunnel ,
should be disabled for
.Nm
users to prevent them from circumventing restrictions imposed by the
packet filter ruleset.
.Pp
.Nm
will remove state table entries that were created during a user's
session.
This ensures that there will be no unauthenticated traffic
allowed to pass after the controlling
.Xr ssh 1
session has been closed.
.Pp
.Nm
is designed for gateway machines which typically do not have regular
(non-administrative) users using the machine.
An administrator must remember that
.Nm
can be used to modify the
.Xr pf 4
rules through the environment in which it is run, and as such could be
used to modify the rules (based on the contents of the configuration files)
by regular users.
In the case where a machine has regular users using it, as well
as users with
.Nm
as their shell, the regular users should be prevented from running
.Nm
by using the
.Pa /etc/authpf/authpf.allow
or
.Pa /etc/authpf/banned/
facilities.
.Pp
.Nm
modifies the packet filter rules, and because of this it needs to
be configured carefully.
.Nm
will not run and will exit silently if the
.Pa /etc/authpf/authpf.conf
file does not exist.
After considering the effect
.Nm
may have on the main packet filter rules, the system administrator may
enable
.Nm
by creating an appropriate
.Pa /etc/authpf/authpf.conf
file.
.Sh EXAMPLES
.Sy Control Files
\- To illustrate the user-specific access control
mechanisms, let us consider a typical user named bob.
Normally, as long as bob can authenticate himself, the
.Nm
program will load the appropriate rules.
Enter the
.Pa /etc/authpf/banned/
directory.
If bob has somehow fallen from grace in the eyes of the
powers-that-be, they can prohibit him from using the gateway by creating
the file
.Pa /etc/authpf/banned/bob
containing a message about why he has been banned from using the network.
Once bob has done suitable penance, his access may be restored by moving or
removing the file
.Pa /etc/authpf/banned/bob .
.Pp
Now consider a workgroup containing alice, bob, carol and dave.
They have a
wireless network which they would like to protect from unauthorized use.
To accomplish this, they create the file
.Pa /etc/authpf/authpf.allow
which lists their login ids, group prepended with "%", or login class
prepended with "@@", one per line.
At this point, even if eve could authenticate to
.Xr sshd 8 ,
she would not be allowed to use the gateway.
Adding and removing users from
the work group is a simple matter of maintaining a list of allowed userids.
If bob once again manages to annoy the powers-that-be, they can ban him from
using the gateway by creating the familiar
.Pa /etc/authpf/banned/bob
file.
Though bob is listed in the allow file, he is prevented from using
this gateway due to the existence of a ban file.
.Pp
.Sy Distributed Authentication
\- It is often desirable to interface with a
distributed password system rather than forcing the sysadmins to keep a large
number of local password files in sync.
The
.Xr login.conf 5
mechanism in
.Ox
can be used to fork the right shell.
To make that happen,
.Xr login.conf 5
should have entries that look something like this:
.Bd -literal -offset indent
shell-default:shell=/bin/csh

default:\e
	...
	:shell=/usr/sbin/authpf

daemon:\e
	...
	:shell=/bin/csh:\e
	:tc=default:

staff:\e
	...
	:shell=/bin/csh:\e
	:tc=default:
.Ed
.Pp
Using a default password file, all users will get
.Nm
as their shell except for root who will get
.Pa /bin/csh .
.Pp
.Sy SSH Configuration
\- As stated earlier,
.Xr sshd 8
must be properly configured to detect and defeat network attacks.
To that end, the following options should be added to
.Xr sshd_config 5 :
.Bd -literal -offset indent
Protocol 2
ClientAliveInterval 15
ClientAliveCountMax 3
.Ed
.Pp
This ensures that unresponsive or spoofed sessions are terminated within a
minute, since a hijacker should not be able to spoof ssh keepalive messages.
.Pp
.Sy Banners
\- Once authenticated, the user is shown the contents of
.Pa /etc/authpf/authpf.message .
This message may be a screen-full of the appropriate use policy, the contents
of
.Pa /etc/motd
or something as simple as the following:
.Bd -literal -offset indent
This means you will be held accountable by the powers that be
for traffic originating from your machine, so please play nice.
.Ed
.Pp
To tell the user where to go when the system is broken,
.Pa /etc/authpf/authpf.problem
could contain something like this:
.Bd -literal -offset indent
Sorry, there appears to be some system problem. To report this
problem so we can fix it, please phone 1-900-314-1597 or send
an email to remove@@bulkmailerz.net.
.Ed
.Pp
.Sy Packet Filter Rules
\- In areas where this gateway is used to protect a
wireless network (a hub with several hundred ports), the default rule set as
well as the per-user rules should probably allow very few things beyond
encrypted protocols like
.Xr ssh 1 ,
.Xr ssl 8 ,
or
.Xr ipsec 4 .
On a securely switched network, with plug-in jacks for visitors who are
given authentication accounts, you might want to allow out everything.
In this context, a secure switch is one that tries to prevent address table
overflow attacks.
.Pp
Example
.Pa /etc/pf.conf :
.Bd -literal
# by default we allow internal clients to talk to us using
# ssh and use us as a dns server.
internal_if="fxp1"
gateway_addr="10.0.1.1"
block in on $internal_if from any to any
pass in quick on $internal_if proto tcp from any to $gateway_addr \e
      port = ssh
pass in quick on $internal_if proto udp from any to $gateway_addr \e
      port = domain
anchor "authpf/*"
.Ed
.Pp
.Sy For a switched, wired net
\- This example
.Pa /etc/authpf/authpf.rules
makes no real restrictions; it turns the IP address on and off, logging
TCP connections.
.Bd -literal
external_if = "xl0"
internal_if = "fxp0"

pass in log quick on $internal_if proto tcp from $user_ip to any
pass in quick on $internal_if from $user_ip to any
.Ed
.Pp
.Sy For a wireless or shared net
\- This example
.Pa /etc/authpf/authpf.rules
could be used for an insecure network (such as a public wireless network) where
we might need to be a bit more restrictive.
.Bd -literal
internal_if="fxp1"
ipsec_gw="10.2.3.4"

# rdr ftp for proxying by ftp-proxy(8)
match in on $internal_if proto tcp from $user_ip to any port 21 \e
      rdr-to 127.0.0.1 port 8021

# allow out ftp, ssh, www and https only, and allow user to negotiate
# ipsec with the ipsec server.
pass in log quick on $internal_if proto tcp from $user_ip to any \e
      port { 21, 22, 80, 443 }
pass in quick on $internal_if proto tcp from $user_ip to any \e
      port { 21, 22, 80, 443 }
pass in quick proto udp from $user_ip to $ipsec_gw port = isakmp
pass in quick proto esp from $user_ip to $ipsec_gw
.Ed
.Pp
.Sy Dealing with NAT
\- The following
.Pa /etc/authpf/authpf.rules
shows how to deal with NAT, using tags:
.Bd -literal
ext_if = "fxp1"
ext_addr = 129.128.11.10
int_if = "fxp0"
# nat and tag connections...
match out on $ext_if from $user_ip to any tag $user_ip nat-to $ext_addr
pass in quick on $int_if from $user_ip to any
pass out log quick on $ext_if tagged $user_ip
.Ed
.Pp
With the above rules added by
.Nm ,
outbound connections corresponding to each users NAT'ed connections
will be logged as in the example below, where the user may be identified
from the ruleset name.
.Bd -literal
# tcpdump -n -e -ttt -i pflog0
Oct 31 19:42:30.296553 rule 0.bbeck(20267).1/0(match): pass out on fxp1: \e
129.128.11.10.60539 > 198.137.240.92.22: S 2131494121:2131494121(0) win \e
16384 <mss 1460,nop,nop,sackOK> (DF)
.Ed
.Pp
.Sy Using the authpf_users table
\- Simple
.Nm
settings can be implemented without an anchor by just using the "authpf_users"
.Pa table .
For example, the following
.Xr pf.conf 5
lines will give SMTP and IMAP access to logged in users:
.Bd -literal
table <authpf_users> persist
pass in on $ext_if proto tcp from <authpf_users> \e
        to port { smtp imap }
.Ed
.Pp
It is also possible to use the "authpf_users"
.Pa table
in combination with anchors.
For example,
.Xr pf 4
processing can be sped up by looking up the anchor
only for packets coming from logged in users:
.Bd -literal
table <authpf_users> persist
anchor "authpf/*" from <authpf_users>
.Ed
.Pp
.Sy Tunneled users
\- normally
.Nm
allows only one session per client IP address.
However in some cases, such as when connections are tunneled via
.Xr ssh 1
or
.Xr ipsec 4 ,
the connections can be authorized based on the userid of the user instead of
the client IP address.
In this case it is appropriate to use
.Nm authpf-noip
to allow multiple users behind a NAT gateway to connect.
In the
.Pa /etc/authpf/authpf.rules
example below, the remote user could tunnel a remote desktop session to their
workstation:
.Bd -literal
internal_if="bge0"
workstation_ip="10.2.3.4"

pass out on $internal_if from (self) to $workstation_ip port 3389 \e
       user $user_id
.Ed
.Sh FILES
.Bl -tag -width "/etc/authpf/authpf.conf" -compact
.It Pa /etc/authpf/authpf.conf
.It Pa /etc/authpf/authpf.allow
.It Pa /etc/authpf/authpf.rules
.It Pa /etc/authpf/authpf.message
.It Pa /etc/authpf/authpf.problem
.El
.Sh SEE ALSO
.Xr pf 4 ,
.Xr pf.conf 5 ,
.Xr securelevel 7 ,
.Xr ftp-proxy 8
.Sh HISTORY
The
.Nm
program first appeared in
.Ox 3.1 .
.Sh BUGS
Configuration issues are tricky.
The authenticating
.Xr ssh 1
connection may be secured, but if the network is not secured the user may
expose insecure protocols to attackers on the same network, or enable other
attackers on the network to pretend to be the user by spoofing their IP
address.
.Pp
.Nm
is not designed to prevent users from denying service to other users.
@


1.53
log
@Per group support for authpf rules files in /etc/authpf/groups.
largely by Frank Timmers <frankt@@smurfnet.eu> with fixups by me
and jmc@@.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.52 2010/01/27 21:36:58 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: January 27 2010 $
d151 1
a151 1
It is important to ensure that a user can not write or change
@


1.52
log
@tweak previous: there was a word missing, but i've just changed
the wording to match that of a similar piece of text already in this page;
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.51 2010/01/27 15:36:17 todd Exp $
d136 4
a139 2
.Pa /etc/authpf/users/$USER/
and then in
d141 1
a141 1
Only one of these files will be used if both are present.
d147 4
@


1.51
log
@search for authpf.message in $USER dirs also
from Rafal Bisingier ravbc at man dot pozman dot pl, ok beck@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.50 2009/10/26 22:06:13 sthen Exp $
d17 1
a17 1
.Dd $Mdocdate: October 26 2009 $
d183 1
a183 1
Only first of these files will be used if both are present.
@


1.50
log
@"rdr" -> "match in...rdr-to" in example.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.49 2009/09/08 07:34:48 sthen Exp $
d17 1
a17 1
.Dd $Mdocdate: September 8 2009 $
d177 7
a183 3
It will additionally display the contents of the file
.Pa /etc/authpf/authpf.message
if the file exists and is readable.
@


1.49
log
@Replace remaining occurrence of old PF syntax with "match...nat-to",
and just talk about "rules" rather than "filter and translation rules".
Spotted by/ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.48 2009/09/08 06:59:18 sthen Exp $
d453 2
a454 2
rdr on $internal_if proto tcp from $user_ip to any port 21 \e
      -> 127.0.0.1 port 8021
@


1.48
log
@Remove some nat-anchor, binat-anchor, rdr-anchor. Noticed by jmc@@.
ok henning@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.47 2009/01/06 03:11:50 mcbride Exp $
d17 1
a17 1
.Dd $Mdocdate: January 6 2009 $
d76 2
a77 2
syntax to change filter and translation rules for an individual
user or client IP address as long as a user maintains an active
d85 1
a85 2
reads a template file to determine what filter and translation rules
(if any) to add, and
d221 1
a221 2
maintains the changed filter rules as long as the user maintains an
active session.
d261 5
a265 4
can be used to modify the filter rules through the environment in
which it is run, and as such could be used to modify the filter rules
(based on the contents of the configuration files) by regular
users.
d278 2
a279 2
modifies the packet filter and address translation rules, and because
of this it needs to be configured carefully.
d475 1
a475 1
nat on $ext_if from $user_ip to any tag $user_ip -> $ext_addr
@


1.47
log
@Support group and login class in authpf.allow (%<group>, @@<class>)

ok beck
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.46 2008/03/18 23:03:14 merdely Exp $
d17 1
a17 1
.Dd $Mdocdate: March 18 2008 $
d106 1
a106 1
The following rules need to be added to the main ruleset
a111 3
nat-anchor "authpf/*"
rdr-anchor "authpf/*"
binat-anchor "authpf/*"
d119 2
a120 2
.Sh FILTER AND TRANSLATION RULES
Filter and translation rules for
d134 1
a134 1
Filter and translation rules are stored in a file called
a422 3
nat-anchor "authpf/*"
rdr-anchor "authpf/*"
binat-anchor "authpf/*"
a516 1
rdr-anchor "authpf/*" from <authpf_users>
@


1.46
log
@Fix mention of authpf_users table (s/authpf users/authpf_users/).

ok jmc@@, mcbride@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.45 2008/02/14 01:49:17 mcbride Exp $
d17 1
a17 1
.Dd $Mdocdate: February 14 2008 $
d205 3
d320 2
a321 1
which lists their login ids, one per line.
@


1.45
log
@Add authpf-noip, which allows multiple users to connect from a single IP;
forces users to write sane rulesets for this by not providing $user_ip or
updating the authpf table.

testing and prodding by mtu, manpage heavily worked over by jmc
ok beck dhartmei henning
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.44 2007/05/31 19:20:22 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
d59 1
a59 1
.Ar authpf users
@


1.44
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.43 2007/02/24 17:21:04 beck Exp $
d17 1
a17 1
.Dd $Mdocdate$
d21 2
a22 1
.Nm authpf
d26 1
a34 4
It is designed for changing filter and translation rules for an individual
source IP address as long as a user maintains an active
.Xr ssh 1
session.
d38 1
a39 3
logs the successful start and end of a session to
.Xr syslogd 8 .
This, combined with properly set up filter rules and secure switches,
d41 5
d47 18
d66 6
a71 10
can add filter and translation rules using the syntax described in
.Xr pf.conf 5 .
.Nm
requires that the
.Xr pf 4
system be enabled before use.
.Nm
can also maintain the list of IP address of connected users
in the "authpf_users"
.Pa table .
d74 4
a77 1
is meant to be used with users who can connect via
d79 2
a80 2
only.
On startup,
d86 6
a91 2
(if any) to add.
On session exit the same rules that were added at startup are removed.
d520 25
@


1.43
log
@license + copyright
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.42 2006/10/23 07:05:49 jmc Exp $
d17 1
a17 1
.Dd January 10, 2002
@


1.42
log
@no need to use "keep state" and "flags S/SA" in pf rules,
now that it is the default;

ok henning mcbride camield (ftp-proxy bits) deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.41 2006/01/07 16:42:16 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 2002 Bob Beck (beck@@openbsd.org>.  All rights reserved.
d5 3
a7 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d9 7
a15 10
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.41
log
@expand the section on ssh tunnelling machanisms;
from michael knudsen
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.40 2005/09/23 14:36:46 jmc Exp $
d430 1
a430 2
pass in log quick on $internal_if proto tcp from $user_ip to any \e
      keep state
d450 1
a450 1
      port { 21, 22, 80, 443 } flags S/SA
d453 1
a453 2
pass in quick proto udp from $user_ip to $ipsec_gw port = isakmp \e
      keep state
d468 1
a468 1
pass out log quick on $ext_if tagged $user_ip keep state
d494 1
a494 1
        to port { smtp imap } keep state
@


1.40
log
@default port for ftp-proxy is 8021;

from johnb (pr #4520);
ok deraadt@@ ian@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.39 2005/05/12 08:17:21 jmc Exp $
d228 2
a229 1
Also note that
d231 2
@


1.39
log
@Xr securelevel 7
from tamas tevesz;
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.38 2005/01/04 09:57:04 jmc Exp $
d443 1
a443 1
      -> 127.0.0.1 port 8081
@


1.38
log
@simplified FILTER AND TRANSLATION RULES;
from michael knudsen;
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.37 2004/09/15 23:24:13 jmc Exp $
d519 1
@


1.37
log
@AllowTcpForwarding should be disabled for authpf users;
plus a typo;
from michael knudsen;

ok beck@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.36 2004/08/15 10:40:50 canacar Exp $
d125 3
a127 1
Filter and nat rules will first be searched for in
d131 2
a139 5
Filter and translation rules are loaded from the file
.Pa /etc/authpf/users/$USER/authpf.rules .
If this file does not exist the file
.Pa /etc/authpf/authpf.rules
is used.
a144 5
.Pp
Translation rules are also loaded from this file.
The use of translation rules in an
.Pa authpf.rules
file is optional.
@


1.36
log
@document the use of "authpf/*" as anchor name for pf to process
sub rulesets added by authpf. ok dhartmei@@, oh yes! henning@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.35 2004/06/07 18:41:26 jmc Exp $
d234 6
d242 1
a242 1
will remove statetable entries that were created during a user's
@


1.35
log
@consistently refer to the authpf_users table;

noticed by die tuere;
ok beck@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.34 2004/04/28 07:46:38 jmc Exp $
d100 4
a103 4
nat-anchor authpf
rdr-anchor authpf
binat-anchor authpf
anchor authpf
d105 5
d407 3
a409 3
nat-anchor authpf
rdr-anchor authpf
binat-anchor authpf
d415 1
a415 1
anchor authpf
d505 2
a506 2
anchor authpf from <authpf_users>
rdr-anchor authpf from <authpf_users>
@


1.34
log
@kill whitespace and make example consistent w/ rest of page;
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.33 2004/04/28 06:55:57 cedric Exp $
d477 1
a477 1
.Sy Using authpf_user table
d480 1
a480 1
settings can be implemented without an anchor by just using the "authpf_user"
d491 1
a491 1
It is also possible to use the "authpf_user"
@


1.33
log
@speed up -> sped up, from tedu@@, ok beck@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.32 2004/04/28 05:06:12 cedric Exp $
d477 2
a478 2
.Sy Using "authpf_user" table.
Simple
d480 1
a480 1
settings can be implemented without anchor by just using the "authpf_user"
d494 1
a494 1
For example, 
@


1.32
log
@Put authpf user's IP addresses in the <authpf_users> table.
ok deraadt@@ dhartmei@@ markus@@ mcbride@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.31 2003/12/10 04:10:37 beck Exp $
d496 1
a496 1
processing can be speed up by looking up the anchor
@


1.31
log
@- fix a few exit cases that would exit with no log
- add username to added ruleset names when possible
- add much needed example to man page showing how to use NAT with tagging
  to track NATed authpfed connections.
ok henning@@ dhartmei@@, man page cleanup by jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.30 2003/08/17 23:24:47 henning Exp $
d63 4
d161 4
d475 27
@


1.30
log
@damn lies
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.29 2003/08/04 09:45:45 jmc Exp $
d87 1
a87 1
name "authpf" is used, and the ruleset names equal the PIDs of the
d89 1
a89 1
processes.
d266 2
a267 1
\fBControl Files\fP - To illustrate the user-specific access control
d302 2
a303 1
\fBDistributed Authentication\fP - It is often desirable to interface with a
d337 2
a338 1
\fBSSH Configuration\fP - As stated earlier,
d352 2
a353 1
\fBBanners\fP - Once authenticated, the user is shown the contents of
d373 2
a374 1
\fBPacket Filter Rules\fP - In areas where this gateway is used to protect a
a385 1
The examples below assume a switched wired net.
d392 2
a393 2
internal_if=\&"fxp1\&"
gateway_addr=\&"10.0.1.1\&"
d405 5
a409 2
Example
.Pa /etc/authpf/authpf.rules :
d411 2
a412 4
# no real restrictions here, basically turn the network jack off or on.

external_if = \&"xl0\&"
internal_if = \&"fxp0\&"
d419 2
a420 1
Another example
d422 1
a422 1
for an insecure network (such as a public wireless network) where
d425 2
a426 2
internal_if=\&"fxp1\&"
ipsec_gw=\&"10.2.3.4\&"
d441 26
@


1.29
log
@ClientAliveInterval requires Protocol 2;
noted by Marc Revial on misc@@;

ok markus@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.28 2003/06/23 13:41:41 henning Exp $
d146 1
a146 1
If the file is empty or does not exist, defaults are used for all
@


1.28
log
@authpf can handle binat nowadays; from Joel Knight
ok daniel
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.27 2003/06/12 12:59:49 jmc Exp $
d95 1
a95 1
.Bd -literal
d312 1
a312 1
.Bd -literal
d340 2
a341 1
.Bd -literal
@


1.27
log
@- section reorder
- macro fixes
- kill whitespace at EOL
- new sentence, new line
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.26 2003/03/20 01:29:17 david Exp $
a452 3
.Nm
does not support binat translation rules.
.Pp
@


1.26
log
@replace some .Pp inside .Bd -literal block with empty line
new sentence, new line
fix login.conf indentation

ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.25 2003/03/18 08:44:09 jmc Exp $
a100 1
.Pp
d333 1
a333 1
.Pa /bin/csh.
a347 1
.Pp
d447 5
a465 5
.Sh HISTORY
The
.Nm
program first appeared in
.Ox 3.1 .
@


1.25
log
@ip address -> IP address;
rtadvd.conf(5): positve -> positive;

ok miod@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.24 2003/03/11 09:24:57 jmc Exp $
d286 2
a287 2
wireless network which they would like to protect from unauthorized use. To
accomplish this, they create the file
d315 1
a315 1
.Pp
d317 3
a319 3
            ...
	    :shell=/usr/sbin/authpf
.Pp
d321 4
a324 4
	    ...
	    :shell=/bin/csh:\e
	    :tc=default:
.Pp
d326 3
a328 3
	    ...
	    :shell=/bin/csh:\e
	    :tc=default:
d406 1
a406 1
.Pp
d409 1
a409 1
.Pp
d422 1
a422 1
.Pp
d426 1
a426 1
.Pp
@


1.24
log
@removed .Ic's which were giving postscript trouble;

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.23 2003/03/10 15:37:29 jmc Exp $
d110 1
a110 1
which is assigned the connecting ip address whenever
@


1.23
log
@these pages all had bad section numbers in the .Xr's;

lots of help and ok millert@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.22 2003/03/06 04:07:38 david Exp $
d96 4
a99 4
.Ic nat-anchor authpf
.Ic rdr-anchor authpf
.Ic binat-anchor authpf
.Ic anchor authpf
d314 1
a314 1
.Ic shell-default:shell=/bin/csh
d316 13
a328 13
.Ic default:\e
.Ic \  \  \  \  ...
.Ic \  \  \  \  :shell=/usr/sbin/authpf
.Pp
.Ic daemon:\e
.Ic \  \  \  \  ...
.Ic \  \  \  \  :shell=/bin/csh:\e
.Ic \  \  \  \  :tc=default:
.Pp
.Ic staff:\e
.Ic \  \  \  \  ...
.Ic \  \  \  \  :shell=/bin/csh:\e
.Ic \  \  \  \  :tc=default:
d342 2
a343 2
.Ic ClientAliveInterval 15
.Ic ClientAliveCountMax 3
d357 2
a358 6
.Xo Ic This means you will be held accountable\ 
.Ic by the powers that be
.Xc
.Xo Ic for traffic originating from your machine,\ 
.Ic so please play nice.
.Xc
d365 3
a367 7
.Xo Ic Sorry, there appears to be some system\ 
.Ic problem. To report this
.Xc
.Xo Ic problem so we can fix it, please\ 
.Ic phone 1-900-314-1597 or send
.Xc
.Ic an email to remove@@bulkmailerz.net.
d389 11
a399 15
.Ic internal_if=\&"fxp1\&"
.Ic gateway_addr=\&"10.0.1.1\&"
.Ic nat-anchor authpf
.Ic rdr-anchor authpf
.Ic binat-anchor authpf
.Ic block in on $internal_if from any to any
.Xo Ic pass in quick on $internal_if proto tcp\ 
.Ic from any to $gateway_addr \e
.Xc
.Ic \  \  port = ssh
.Xo Ic pass in quick on $internal_if proto udp\ 
.Ic from any to $gateway_addr \e
.Xc
.Ic \  \  port = domain
.Ic anchor authpf
d407 2
a408 2
.Ic external_if = \&"xl0\&"
.Ic internal_if = \&"fxp0\&"
d410 3
a412 5
.Xo Ic pass in log quick on $internal_if proto\ 
.Ic tcp from $user_ip to any \e
.Xc
.Ic \  \  keep state
.Ic pass in quick on $internal_if from $user_ip to any
d420 2
a421 2
.Ic internal_if=\&"fxp1\&"
.Ic ipsec_gw=\&"10.2.3.4\&"
d424 2
a425 4
.Xo Ic rdr on $internal_if proto tcp from\ 
.Ic $user_ip to any port 21 \e
.Xc
.Ic \  \  -> 127.0.0.1 port 8081
d429 7
a435 13
.Xo Ic pass in log quick on $internal_if\ 
.Ic proto tcp from $user_ip to any \e
.Xc
.Ic \  \  port { 21, 22, 80, 443 } flags S/SA
.Xo Ic pass in quick on $internal_if proto\ 
.Ic tcp from $user_ip to any \e
.Xc
.Ic \  \  port { 21, 22, 80, 443 }
.Xo Ic pass in quick proto udp from $user_ip\ 
.Ic to $ipsec_gw port = isakmp \e
.Xc
.Ic \  \  keep state
.Ic pass in quick proto esp from $user_ip to $ipsec_gw
@


1.22
log
@date should be written formally: .Dd Month day, year
ok henning@@ jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.21 2003/01/28 10:40:20 jmc Exp $
d52 1
a52 1
.Xr syslog 8 .
d195 1
a195 1
.Xr syslog 8
@


1.21
log
@typos; added white boldface to examples

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.20 2002/12/29 22:23:37 dhartmei Exp $
d27 1
a27 1
.Dd Jan 10, 2002
@


1.20
log
@Mention $user_id, like $user_ip.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.19 2002/12/22 14:19:30 dhartmei Exp $
d53 1
a53 1
This, combined with properly set up filter rules and secure switches
d73 2
a74 2
reads a template file to determine what filter and translation (if
any) rules to add.
d96 4
a99 4
nat-anchor authpf
rdr-anchor authpf
binat-anchor authpf
anchor authpf
d109 1
a109 1
.Em user_ip
d150 1
a150 1
.Li name=value
d214 1
a214 1
.Dv ClientAliveInterval
d216 2
a217 2
.Dv ClientAliveCountMax
parameters to ensure that an ssh session is terminated quickly if
d282 1
a282 1
.Pa /etc/authpf/banned/bob.
d314 15
a328 15
shell-default:shell=/bin/csh

default:\\
	...
	:shell=/usr/sbin/authpf

daemon:\\
	...
	:shell=/bin/csh:\\
	:tc=default:

staff:\\
	...
	:shell=/bin/csh:\\
	:tc=default:
d340 1
a340 1
.Pa sshd_config :
d342 2
a343 2
ClientAliveInterval 15
ClientAliveCountMax 3
d351 1
a351 1
.Pa /etc/authpf/authpf.message.
d356 7
a362 3
.Bd -literal
    This means you will be held accountable by the powers that be
    for traffic originating from your machine, so please play nice.
d368 8
a375 4
.Bd -literal
    Sorry, there appears to be some system problem. To report this
    problem so we can fix it, please phone 1-900-314-1597 or send
    an email to remove@@bulkmailerz.net.
d379 1
a379 1
wireless network (a hub with several hundred ports) the default rule set as
d397 15
a411 11
internal_if="fxp1"
gateway_addr="10.0.1.1"
nat-anchor authpf
rdr-anchor authpf
binat-anchor authpf
block in on $internal_if from any to any
pass in quick on $internal_if proto tcp from any to $gateway_addr \\
 port = ssh
pass in quick on $internal_if proto udp from any to $gateway_addr \\
 port = domain
anchor authpf
d418 9
a426 7

external_if = "xl0"
internal_if = "fxp0"

pass in log quick on $internal_if proto tcp from $user_ip to any \\
 keep state
pass in quick on $internal_if from $user_ip to any
d434 3
a436 3
internal_if="fxp1"
ipsec_gw="10.2.3.4"

d438 5
a442 3
rdr on $internal_if proto tcp from $user_ip to any port 21 \\
 -> 127.0.0.1 port 8081

d445 13
a457 7
pass in log quick on $internal_if proto tcp from $user_ip to any \\
 port { 21, 22, 80, 443 } flags S/SA
pass in quick on $internal_if proto tcp from $user_ip to any \\
 port { 21, 22, 80, 443 }
pass in quick proto udp from $user_ip to $ipsec_gw port = isakmp \\
 keep state
pass in quick proto esp from $user_ip to $ipsec_gw
d480 2
a481 1
attackers on network to pretend to be the user by spoofing their IP address.
@


1.19
log
@Instead of inserting and removing rules at the top/bottom of the main
ruleset, make authpf manage its rules inside anchors.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.18 2002/10/25 18:34:53 camield Exp $
d113 3
@


1.18
log
@- spelling/grammar
- nat rules are no longer in a seperate file, combine nat example
- /32 on all addresses is clutter, since it's the default
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.17 2002/07/27 07:27:04 nordin Exp $
d76 4
a79 1
By default, filter rules are added at the end of the active
d81 21
a101 3
filter list, and translation rules are added at the start of the active
.Xr pf 4
nat and rdr lists.
d144 2
a145 4
This file is required to be present and readable for
.Nm
to run.
It may be empty if the default behavior does not need to be changed.
d151 4
a154 9
.It rule_action=[head|tail]
controls where filter rules are added, the default behavior is "tail"
meaning filter rules are added to the end of the active filter list.
.It Dv nat_action=[head|tail]
controls where nat rules are added, the default behavior is "head"
meaning filter rules are added to the start of the active nat list.
.It Dv rdr_action=[head|tail]
controls where rdr rules are added, the default behavior is "head"
meaning filter rules are added to the start of the active rdr list.
d388 3
d396 1
@


1.17
log
@Typo; spotted by cdjones@@novusordo.net.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.16 2002/06/24 09:59:54 dhartmei Exp $
d37 1
a37 1
is used as a user shell for authenticating gateways.
d42 1
a42 1
and to then undo the changes when the user's session exits.
d72 2
a73 2
environment variable, and after performing additional access checks,
a template file is read to determine what filter and translation (if
d89 1
a89 1
which is defined to the connecting ip address whenever
d93 1
a93 1
Filter and nat rules will be searched for first in
d102 1
a102 1
these configuration files in this case.
d157 3
a159 2
This is done by creating a file with the banned user's login name in
.Pa /etc/authpf/banned .
d191 1
a191 1
Because of this, it is important to both configure
d194 1
a194 1
by which users connect to use.
d200 1
a200 1
parameters to ensure than an ssh session is terminated quickly if
d207 1
a207 1
will remove state table entries that were created during a user's
d215 1
a215 1
is designed for gateway machines which don't typically have regular
d329 1
a329 1
This ensures that unresponsive or spoofed session are terminated in under a
d375 1
a375 1
pass in quick on $internal_if proto tcp from any to $gateway_addr/32 \\
d377 1
a377 1
pass in quick on $internal_if proto udp from any to $gateway_addr/32 \\
d389 1
a389 1
pass in log quick on $internal_if proto tcp from $user_ip/32 to any \\
d391 1
a391 10
pass in quick on $internal_if from $user_ip/32 to any
.Ed
.Pp
Example
.Pa /etc/authpf/authpf.nat :
.Bd -literal
# When the user authenticates, rdr ftp for proxying by ftp-proxy(8)
internal_if="fxp1"
rdr on $internal_if proto tcp from $user_ip/32 to any port 21 \\
 -> 127.0.0.1 port 8081
d401 5
d408 1
a408 1
pass in log quick on $internal_if proto tcp from $user_ip/32 to any \\
d410 1
a410 1
pass in quick on $internal_if proto tcp from $user_ip/32 to any \\
d412 1
a412 1
pass in quick proto udp from $user_ip/32 to $ipsec_gw/32 port = isakmp \\
d414 1
a414 1
pass in quick proto esp from $user_ip/32 to $ipsec_gw/32
a420 1
.It Pa /etc/authpf/authpf.nat
@


1.16
log
@Fix more example rules
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.15 2002/06/24 07:59:48 deraadt Exp $
d262 1
a262 1
Once bob has done suitable pennance, his access may be restored by moving or
@


1.15
log
@When the man page contains such obvious stupid TRIVIAL bugs as this
which I am fixing, it makes me wonder why the hell is the shown
example not something that someone has actually TRIED?  Is it not
possible people are yammering so much about it on the mailing lists
about problems because the people who wrote this don't even check if
the man page is CORRECT?  But No!  Instead of fixing it, the they get
email replies on the damned mailing list, and 8 hours later, someone
ELSE pipes up with another problem!  Why don't you lame asses take
responsibility for the problem at hand, CHECK IF THE MAN PAGE IS
RIGHT, and instead of replying to the people who post, instead JUST
FIX THE DOCUMENTATION PROBLEMS?  Or should I remove authpf before you
get the idea?
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.14 2002/06/24 07:43:10 dhartmei Exp $
d416 1
a416 1
 keep-state
@


1.14
log
@"quick log" -> "log quick" in example rules, from Rudolfo Munguia
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.13 2002/06/16 19:35:07 miod Exp $
d412 1
a412 1
 { port 21, 22, 80, 443 } flags S/SA
d414 1
a414 1
 { port 21, 22, 80, 443 }
@


1.13
log
@Remove nat.conf(5) reference.
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.12 2002/06/11 18:57:15 kjell Exp $
d388 1
a388 1
pass in quick log on $internal_if proto tcp from $user_ip/32 to any \\
d411 1
a411 1
pass in quick log on $internal_if proto tcp from $user_ip/32 to any \\
@


1.12
log
@Update man page to reality, grammar, and style fixes. from ckuethe@@ualberta.ca
ok beck@@
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.11 2002/05/21 07:13:37 deraadt Exp $
a429 1
.Xr nat.conf 5 ,
@


1.11
log
@clean
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.10 2002/04/15 05:55:48 pvalchev Exp $
d57 2
a58 4
can add and filter rules using the syntax of
.Xr pf.conf 5
and translation rules using the syntax of
.Xr nat.conf 5 .
d73 3
a75 4
a filter rule template file is read to determine what filter rules to add.
Optionally, a translation rule template file is read to determine translation
rules to add. On session exit the same rules that were added at startup are
removed.
d82 1
a82 1
Filter and Translation rules for
d85 1
a85 3
.Xr pf.conf 5
and
.Xr nat.conf 5 .
d100 3
a102 3
are needed on an individual user basis. It is important to ensure
that a user can not write or change these configuration files in
this case.
d104 1
a104 1
Filter rules are loaded from the file
d115 1
a115 5
Translation rules are loaded from the file
.Pa /etc/authpf/users/$USER/authpf.nat .
If this file does not exist the file
.Pa /etc/authpf/authpf.nat
is used.
d117 1
a117 1
.Pa authpf.nat
d145 1
a145 1
displays a message telling the user they have been authenticated.
@


1.10
log
@fix a typo; from andrew@@neep.com.au
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.9 2002/04/06 17:34:14 beck Exp $
d100 1
a100 1
and then in 
d102 1
a102 1
Per-user rules from the   
@


1.9
log
@root checks are removed now that we moved the per-user dir,
docs need to reflect this
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.8 2002/04/05 20:35:52 deraadt Exp $
d223 1
a223 1
is designed for gateway machines with don't typically have regular
@


1.8
log
@move location of per-user config files; beck ok
@
text
@d1 1
a1 1
.\" $OpenBSD: authpf.8,v 1.7 2002/04/05 03:06:52 beck Exp $
d118 1
a118 6
to run. Additionally, all directories on the path to the 
.Pa authpf.rules 
file as well as the file itself must be owned by root
and be writable only to root or
.Nm 
will not run.
d127 1
a127 7
file is optional, but if an
.Pa authpf.nat
file exists in either of the above locations, all directories on the path,
as well as the file itself must be 
owned by root and be writable only to root or
.Nm
will not run
@


1.7
log
@ensure that rules files are owned and writable only by root,
along their entire path, change docs accordingly. This ensures
that people don't accidentally use the $HOME config files to
override real settings unless root meant to do it.
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.6 2002/04/02 17:29:47 mpech Exp $
d99 1
a99 1
.Pa $HOME/.authpf/
d103 1
a103 1
.Pa $HOME/.authpf/
d110 1
a110 1
.Pa $HOME/.authpf/authpf.rules .
d126 1
a126 1
.Pa $HOME/.authpf/authpf.nat .
d178 1
a178 1
.Pa /var/authpf/banned .
d250 1
a250 1
.Pa /var/authpf/banned/
d275 1
a275 1
.Pa /var/authpf/banned/
d280 1
a280 1
.Pa /var/authpf/banned/bob
d284 1
a284 1
.Pa /var/authpf/banned/bob.
d299 1
a299 1
.Pa /var/authpf/banned/bob
@


1.6
log
@We don't like 'OPTIONS' anymore.
.Sh OPTIONS -> .Sh CONFIGURATION

millert@@ ok
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.5 2002/04/02 17:19:24 mpech Exp $
d98 11
d116 1
a116 5
file must exist in either the user's
.Pa $HOME/.authpf/
directory, or in
.Pa /etc/authpf ,
for
d118 6
a123 1
to run.
d132 7
a138 1
file is optional.
@


1.5
log
@My part of the help:
o) don't use .Pp before/after .Sh;
o) Start new sentence on a new line;
o) Remove extra space in the end of the sentence;
o) Fix .Pa usage;
o) Fix .Bd usage;
o) Use .Pp after .Ed, not blank line before .Ed;

millert@@ ok
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.4 2002/04/01 18:54:32 beck Exp $
d121 1
a121 1
.Sh OPTIONS
@


1.4
log
@-Tattling is bad, users should be allowed to run anything on the system
without it generating logs
-exit with 0 and 1 instead of EX_FOO
-make read_config (with the test and exit) the first thing that
happens in main, no openlog or memset first.
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.3 2002/04/01 18:36:27 mickey Exp $
d37 2
a38 2
is used as a user shell for authenticating gateways. It is used to
change 
d40 1
a40 1
rules when a user authenticates and starts a session with 
d42 3
a44 3
and to then undo the changes when the user's session exits. It is designed
for changing filter and translation rules for an individual source IP address
as long as a user maintains an active
d46 2
a47 1
session. Typical use would be for a gateway that authenticates users before
d59 1
a59 1
and translation rules using the syntax of 
d69 2
a70 1
only. On startup, 
d72 2
a73 2
retrieves the client's connecting IP address via the 
.Ev SSH_CLIENT 
d78 2
a79 1
removed. By default, filter rules are added at the end of the active
d85 1
a85 1
Filter and Translation rules for 
d87 1
a87 1
use the same format described in 
d89 1
a89 1
and 
d92 1
a92 1
the macro 
d100 1
a100 1
If this file does not exist the file 
d102 2
a103 1
is used. The
d107 1
a107 1
directory, or in 
d115 1
a115 1
If this file does not exist the file 
d117 2
a118 1
is used. The use of translation rules in an
d122 1
a122 1
Options are controlled by the 
d124 2
a125 1
file. This file is required to be present and readable for
d127 3
a129 2
to run. It may be empty if the default behavior does
not need to be changed. The file consists of pairs of the form
d131 2
a132 1
one per line. Currently, the allowed values are as follows:
d136 1
a136 1
meaning filter rules are added to the end of the active filter list. 
d145 1
a145 1
On successful invocation, 
d147 2
a148 2
displays a message telling the user they have been authenticated. It will
additionally display the contents of the file
d158 2
a159 2
and deny access to only a few troublesome individuals. This is done by
creating a file with the banned user's login name in
d163 2
a164 2
go and how to get there if they want to have their service restored. This is
the default behaviour.
d168 2
a169 2
to only allow specific users access. This is done by listing their login
names, one per line, in
d171 2
a172 1
If "*" is found on a line, then all usernames match. If
d175 2
a176 2
print a brief message and die. It should be noted that a ban takes precedence
over an allow.
d178 1
a178 1
On failure, messages will be logged to 
d180 3
a182 2
for the system administrator. The user does not see these, but
will be told the system is unavailable due to technical difficulties. 
d189 4
a192 3
active session. It is important to remember however, that the existence
of this session means the user is authenticated. Because of this, it
is important to both configure 
d195 1
a195 1
by which users connect to use. 
d197 1
a197 1
should be configured to use the 
d199 1
a199 1
and 
d203 3
a205 2
hijack the session. Note that TCP keepalives are not sufficient for
this, since they are not secure. 
d209 2
a210 1
session. This ensures that there will be no unauthenticated traffic
d217 2
a218 2
(non-administrative) users using the machine. An administrator
must remember that
d223 2
a224 1
users. In the case where a machine has regular users using it, as well
d245 1
a245 1
enable 
d252 2
a253 2
mechanisms, let us consider a typical user named bob. Normally, as long as
bob can authenticate himself, the
d255 2
a256 1
program will load the appropriate rules. Enter the
d258 2
a259 1
directory. If bob has somehow fallen from grace in the eyes of the
d261 1
a261 1
the file 
d268 2
a269 1
Now consider a workgroup containing alice, bob, carol and dave. They have a
d273 2
a274 2
which lists their login ids, one per line. At this point, even if eve could
authenticate to
d276 2
a277 1
she would not be allowed to use the gateway. Adding and removing users from
d282 2
a283 1
file. Though bob is listed in the allow file, he is prevented from using
d288 2
a289 1
number of local password files in sync. The
d293 2
a294 1
can be used to fork the right shell. To make that happen,
d322 2
a323 2
must be properly configured to detect and defeat network attacks. To that end,
the following options should be added to
d326 1
a326 1
ClientAliveInterval 15  
a327 1

d329 1
a340 1

d343 1
a343 1
.Ed 
a348 1
	
d352 1
a352 1
.Ed 
d363 4
a366 3
given authentication accounts, you might want to allow out everything. In
this context, a secure switch is one that tries to prevent address table
overflow attacks. The examples below assume a switched wired net.
d401 1
a401 1
 -> 127.0.0.1 port 8081 
d404 1
a404 1
Another example 
d406 1
a406 1
for an insecure network (such as a public wireless network) where 
d416 1
a416 1
 { port 21, 22, 80, 443 } 
a435 1
.Pp
d439 2
a440 1
Configuration issues are tricky. The authenticating
d446 2
a447 2
.Nm 
is not designed to prevent users from denying service to other users.  
@


1.3
log
@remove a redundant word remove
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.2 2002/04/01 18:26:04 beck Exp $
d223 6
a228 1
of this it needs to be configured carefully. After considering the effect
d235 1
a235 6
file. Should someone attempt to run
.Nm
when the 
.Pa /etc/authpf/authpf.conf
file does not exist, the attempt will be logged to 
.Xr syslog 8
@


1.2
log
@-Make the /etc/authpf/authpf.conf config file required.
-Change authpf to install setuid by default, and exit with a tattling
syslog message if a user runs it without a config file present.
-Change man page to reflect this.
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.1 2002/04/01 17:43:42 beck Exp $
d72 1
a72 1
environment variable, and after performing additional access checks, reads
@


1.1
log
@authpf - authenticating gateway shell for use with ssh(1) to make
authenticating gateway type firewalls.

caveats - needs to be setuid to opertate (but does not install that way)
consult the man page for configuration issues.
@
text
@d1 1
a1 1
\" $OpenBSD: authpf.8,v 1.1 2002/01/10 11:41:50 beck Exp $
d119 4
a122 2
file. This file is optional, is not needed unless the default behavior
needs to be changed. The file consists of pairs of the form
d222 5
a226 3
must be setuid-root in order to modify the packet filter and translation
rules, though it is not installed with the setuid bit turned on. After
considering the effect
d228 3
a230 2
may have on the main packet filter rules, the system administrator may run
the following command to enable
d232 4
a235 1
: "chmod +s /usr/sbin/authpf" .
@

