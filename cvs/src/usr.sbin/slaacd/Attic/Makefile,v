head	1.3;
access;
symbols
	OPENBSD_6_1:1.1.0.4
	OPENBSD_6_1_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2017.06.03.10.00.29;	author florian;	state dead;
branches;
next	1.2;
commitid	LiVl5Mw0RdD7hl8R;

1.2
date	2017.05.27.16.16.49;	author florian;	state Exp;
branches;
next	1.1;
commitid	InpiQgIeZGoa4tm8;

1.1
date	2017.03.18.17.33.13;	author florian;	state Exp;
branches;
next	;
commitid	i9cFcQyQLpZ2JRnR;


desc
@@


1.3
log
@Move slaacd to /sbin
jca points out that all the other interface configuration tools live
there (like ifconfig or dhclient). Furthermore it starts so early in
the boot process that /usr might not be mounted yet if it's a nfs
filesystem.
sthen and deraadt agree
@
text
@#	$OpenBSD: Makefile,v 1.2 2017/05/27 16:16:49 florian Exp $

PROG=	slaacd
SRCS=	control.c engine.c frontend.c log.c slaacd.c

MAN=	slaacd.8

#DEBUG=	-g -DDEBUG=3 -O0

CFLAGS+= -DSKIP_PROPOSAL

CFLAGS+= -Wall -I${.CURDIR}
CFLAGS+= -Wstrict-prototypes -Wmissing-prototypes
CFLAGS+= -Wmissing-declarations
CFLAGS+= -Wshadow -Wpointer-arith -Wcast-qual
CFLAGS+= -Wsign-compare
YFLAGS=
LDADD+=	-levent -lutil
DPADD+= ${LIBEVENT} ${LIBUTIL}

.include <bsd.prog.mk>
@


1.2
log
@Generate a fake ack (or is it an alternative ack?) internally.
This allows slaacd to configure addresses in the absence of
netcfgd and might be a less scary step forward to move
stateless address autoconfiguration out of the kernel.

This intentionally a compile time option and will go away
once we figure out how to do proposals.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2017/03/18 17:33:13 florian Exp $
@


1.1
log
@Add slaacd, a Stateless Address AutoConfiguration Daemon.

Based on krw's newd effort where he did all the heavy lifting to
extract a generic OpenBSD-style privsep daemon out of all the existing
daemons in tree.

It's at a point now where it makes sense to work on it in tree.

Sounds good to deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d9 2
@

