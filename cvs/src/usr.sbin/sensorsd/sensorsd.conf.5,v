head	1.25;
access;
symbols
	OPENBSD_6_0:1.25.0.6
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.24.0.10
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.14
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.12
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.8
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.24.0.6
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.4
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.2
	OPENBSD_5_0:1.23.0.14
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.12
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.10
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.6
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.8
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.4
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.2
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@.\" @;


1.25
date	2015.07.27.17.28.40;	author sobrado;	state Exp;
branches;
next	1.24;
commitid	a73SHFfjDK7MTyGx;

1.24
date	2011.12.03.23.01.21;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2008.03.15.01.08.08;	author cnst;	state Exp;
branches;
next	1.22;

1.22
date	2008.03.14.15.23.49;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2008.03.14.00.06.18;	author ckuethe;	state Exp;
branches;
next	1.20;

1.20
date	2008.03.13.21.29.51;	author ckuethe;	state Exp;
branches;
next	1.19;

1.19
date	2008.03.13.21.24.45;	author ckuethe;	state Exp;
branches;
next	1.18;

1.18
date	2007.08.14.17.10.02;	author cnst;	state Exp;
branches;
next	1.17;

1.17
date	2007.08.14.16.52.22;	author cnst;	state Exp;
branches;
next	1.16;

1.16
date	2007.08.10.20.30.14;	author cnst;	state Exp;
branches;
next	1.15;

1.15
date	2007.06.05.04.10.56;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.20.29;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.30.07.49.37;	author cnst;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.29.06.04.41;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.29.02.02.12;	author cnst;	state Exp;
branches;
next	1.10;

1.10
date	2006.12.28.10.04.27;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2006.12.23.17.49.53;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2006.08.23.14.30.27;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2006.08.23.11.49.15;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2006.08.23.11.18.00;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.07.11.14.02;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.02.09.25.08;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.01.22.15.40;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.01.22.10.23;	author hshoexer;	state Exp;
branches;
next	1.1;

1.1
date	2003.09.24.20.32.49;	author henning;	state Exp;
branches;
next	;


desc
@@


1.25
log
@use file system path (.Pa) semantic markup macros where appropriate.

ok jmc@@
@
text
@.\"	$OpenBSD: sensorsd.conf.5,v 1.24 2011/12/03 23:01:21 schwarze Exp $
.\"
.\" Copyright (c) 2003 Henning Brauer <henning@@openbsd.org>
.\" Copyright (c) 2005 Matthew Gream <matthew.gream@@pobox.com>
.\" Copyright (c) 2007 Constantine A. Murenin <cnst@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: December 3 2011 $
.Dt SENSORSD.CONF 5
.Os
.Sh NAME
.Nm sensorsd.conf
.Nd configuration file for sensorsd
.Sh DESCRIPTION
The
.Nm
file is read by
.Xr sensorsd 8
to configure hardware sensor monitoring.
Each sensor registered in the system
is matched by at most one entry in
.Nm ,
which may specify high and low limits,
and whether sensor status changes provided by the driver should be ignored.
If the limits are crossed or if the status provided by the driver changes,
.Xr sensorsd 8 Ns 's
alert functionality is triggered and a command, if specified, is
executed.
.Pp
.Nm
follows the syntax of configuration databases as documented in
.Xr getcap 3 .
Sensors may be specified by their full
.Va hw.sensors
.Xr sysctl 8
variable name or by type,
with the full name taking precedence.
For example, if an entry
.Dq hw.sensors.lm0.temp1
is not found, then an entry for
.Dq temp
will instead be looked for.
.Pp
The following attributes may be used:
.Pp
.Bl -tag -width "commandXX" -offset indent -compact
.It Li command
Specify a command to be executed on state change.
.It Li high
Specify an upper limit.
.It Li low
Specify a lower limit.
.It Li istatus
Ignore status provided by the driver.
.El
.Pp
The values for temperature sensors can be given in degrees Celsius or
Fahrenheit, for voltage sensors in volts, and fan speed sensors take a
unit-less number representing RPM.
Values for all other types of sensors can be specified
in the same units as they appear under the
.Xr sysctl 8
.Va hw.sensors
tree.
.Pp
Sensors that provide status (such as those from
.Xr bio 4 ,
.Xr esm 4 ,
or
.Xr ipmi 4 )
do not require boundary values specified
and simply trigger on status transitions.
If boundaries are specified nonetheless,
then they are used in addition to automatic status monitoring,
unless the
.Dq istatus
attribute is specified to ignore status values that are provided by the drivers.
.Pp
The command is executed when there is any change in sensor state.
Tokens in the command are substituted as follows:
.Pp
.Bl -tag -width Ds -offset indent -compact
.It %l
Whether the value exceeds or is within the user specified limits.
Can be one of: "below", "above", "within", "invalid", or "uninitialised".
.It %n
The sensor number.
.It %s
The sensor status.
.It %x
The xname of the device the sensor sits on.
.It %t
The type of sensor.
.It %2
The sensor's current value.
.It %3
The sensor's low limit.
.It %4
The sensor's high limit.
.El
.Pp
By default,
.Xr sensorsd 8
monitors status changes on all sensors that keep their state.
This behaviour may be altered by using the
.Dq istatus
attribute to ignore
status changes of sensors of a certain type
or individual sensors.
.Sh FILES
.Bl -tag -width "/etc/sensorsd.conf"
.It Pa /etc/sensorsd.conf
Configuration file for
.Xr sensorsd 8 .
.El
.Sh EXAMPLES
In the following configuration file,
if hw.sensors.ipmi0.temp0 transitions 80C or
if its status as provided by
.Xr ipmi 4
changes, the command
.Pa /etc/sensorsd/log_warning
will be executed,
with the sensor type, number and current value passed to it.
Alerts will be sent
if hw.sensors.lm0.volt3 transitions to being within or outside
a range of 4.8V and 5.2V;
if the speed of the fan attached to hw.sensors.lm0.fan1
transitions to being below or above 1000RPM;
if any RAID volume drive
changes its status from, for example,
.Dq OK ,
such as in the case of drive failure, rebuild, or a complete failure,
the command
.Pa /etc/sensorsd/drive
will be executed, with the sensor number passed to it; however,
no alerts will be generated for status changes on timedelta sensors.
For all other sensors whose drivers automatically provide
sensor status updates, alerts will be generated
each time those sensors undergo status transitions.
.Bd -literal -offset indent
# Comments are allowed
hw.sensors.ipmi0.temp0:high=80C:command=/etc/sensorsd/log_warning %t %n %2
hw.sensors.lm0.volt3:low=4.8V:high=5.2V
hw.sensors.lm0.fan1:low=1000
drive:command=/etc/sensorsd/drive %n
timedelta:istatus	#ignore status changes for timedelta
.Ed
.Sh SEE ALSO
.Xr getcap 3 ,
.Xr bio 4 ,
.Xr ipmi 4 ,
.Xr sensorsd 8 ,
.Xr sysctl 8
.Sh HISTORY
The
.Nm
file format first appeared in
.Ox 3.5 .
The format was altered in
.Ox 4.1
to accommodate hierarchical device-based sensor addressing.
The
.Dq istatus
attribute was introduced in
.Ox 4.2 .
.Sh CAVEATS
Alert functionality is triggered every time there is a change in sensor state;
for example, when
.Xr sensorsd 8
is started,
the status of each monitored sensor changes
from undefined to whatever it is.
One must keep this in mind when using commands
that may unconditionally perform adverse actions (e.g.\&
.Xr shutdown 8 ) ,
as they will be executed even when all sensors perform to specification.
If this is undesirable, then a wrapper shell script should be used instead.
@


1.24
log
@Remove an OpenBSD-specific tweak regarding .Xr spacing
and make it compatible with bsd.lv mandoc and with groff-1.21.
This tweak was originally added for compatibility with groff-1.15,
which is no longer needed.

ok jmc@@ kristaps@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.23 2008/03/15 01:08:08 cnst Exp $
d19 1
a19 1
.Dd $Mdocdate: March 15 2008 $
d123 1
a123 1
.It /etc/sensorsd.conf
@


1.23
log
@explicitly report whether the lower or upper limit is exceeded; ok sthen@@ ckuethe@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.22 2008/03/14 15:23:49 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: March 14 2008 $
d37 1
a37 1
.Xr sensorsd 8 's
@


1.22
log
@- punctuate and order the tokens list, to stop it looking scrappy
- it doesn;t make sense to list esm(4) in SEE ALSO
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.21 2008/03/14 00:06:18 ckuethe Exp $
d96 1
a96 1
Can be one of: "exceeds", "within", "invalid", or "uninitialised".
@


1.21
log
@Add a "%l" token to signal whether a sensor value is in or out of bounds,
without regard for the specific value. It's a big heavy binary hammer...
ok & style feedback from cnst
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.20 2008/03/13 21:29:51 ckuethe Exp $
d19 1
a19 1
.Dd $Mdocdate: March 13 2008 $
d94 7
d102 1
a102 1
the xname of the device the sensor sits on
d104 1
a104 8
the type of sensor
.It %n
the sensor number
.It %s
the sensor status
.It %l
whether the value exceeds or is within the user specified limits.
Can be one of: "exceeds", "within", "invalid" or "uninitialised".
d106 1
a106 1
the sensor's current value
d108 1
a108 1
the sensor's low limit
d110 1
a110 1
the sensor's high limit
a162 1
.Xr esm 4 ,
@


1.20
log
@document the just-committed %s token.
ok mbalmer
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.19 2008/03/13 21:24:45 ckuethe Exp $
d102 3
@


1.19
log
@Allow a program invoked on state change to receive sensor status. Perhaps
you might want to toggle an error light when a sensor is not OK. Perhaps
you might want to schedule a shutdown if a sensor is reporting bad news.
Now you can do this, and cancel that pending shutdown (or turn off the error
light) if the sensor decides all is well.

ok mbalmer (who came up with an almost identical diff months ago)
useful feedback and generally positive responses from deraadt, henning, msf
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.17 2007/08/14 16:52:22 cnst Exp $
d19 1
a19 1
.Dd $Mdocdate: August 14 2007 $
d100 2
@


1.18
log
@sync printing w/ sysctl(8) and add missing sensor types to conf parser;
document how values are parsed in sensorsd.conf(5).

ok deraadt@@; man-page ok/help jmc@@
@
text
@d19 1
a19 1
.Dd $Mdocdate$
@


1.17
log
@Commentary in the examples section was wrong from the start, because it gave
the impression that alerts are only issued when things go wrong, not when they
come back to specification -- but this was never the case with sensorsd.

Whilst here, also zip some useless examples, as we now have so many.

Discussed with jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.16 2007/08/10 20:30:14 cnst Exp $
d71 5
@


1.16
log
@sync sensorsd.conf.5 with reality, including:
* add myself to the copyright;	remove unneeded synopsis
* invalid sensors can now be monitored as such (since c2k7)
* manual boundaries for smart sensors are no longer ignored (since c2k7)
* populate history with 4.1 and 4.2 additions
* add caveats section documenting a long-standing misconception and a workaround

some help jmc@@;  ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.15 2007/06/05 04:10:56 jmc Exp $
d119 4
a122 1
if hw.sensors.ipmi0.temp0 goes above 80C, the command
d126 3
a128 2
Alerts will be sent if hw.sensors.ipmi0.temp1 goes above 170F;
if hw.sensors.lm0.volt3 goes below 4.8V or above 5.2V;
d130 1
a130 1
goes below 1000RPM or above 8000RPM;
d132 1
a132 1
goes into a state other than
d134 2
a135 1
such as drive failure, rebuild, or a complete failure, the command
a144 1
hw.sensors.ipmi0.temp1:high=170F
d146 1
a146 1
hw.sensors.lm0.fan1:low=1000:high=8000
@


1.15
log
@various grammar/text improvements;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.14 2007/05/31 19:20:29 jmc Exp $
d5 1
a24 2
.Sh SYNOPSIS
.Nm sensorsd.conf
d31 1
a31 1
Each valid sensor registered in the system
d59 1
a59 1
Specify a command to be executed if limits are crossed.
d72 1
a72 1
Sensors that provide status (such as from
d77 7
a83 2
do not require boundary values specified (that otherwise will be
ignored) and simply trigger on status transitions.
d85 1
a85 1
The command is executed on transitions out of, and back into, given limits.
d158 19
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.13 2007/05/30 07:49:37 cnst Exp $
d36 2
a37 2
and whether sensor status changes provided by driver should be ignored.
If the limits are crossed or if status provided by the driver changes,
d45 1
a45 1
Complete
d48 8
a55 8
variable names are used to find entries,
with a fallback to sensor types.
For example, if an entry with a full name of a certain temperature
sensor is not present in
.Nm ,
then an entry
.Va temp
will be looked at to determine the settings.
d66 1
a66 1
Specify to ignore status provided by the driver.
d104 3
a106 3
attribute,
for example, you may specify to ignore status changes of sensors with
certain type, or of any individual sensors.
d131 1
a131 1
sensor status updates, alerts will be generated 
@


1.13
log
@Major update to sensorsd.

Improves support for both 'smart' (those providing sensor status) and
'old-style' sensors.

Due to re-design, the following improvements are now present and many
flaws are now gone:


== for smart sensors ==

* automatically monitor all sensors that provide status by themselves,
  with the possibility to ignore certain individual sensors or sensors
  of certain type (appropriate template for sensorsd.conf is included)

* report actual sensor status as provided by the driver. Previously,
  WARN, CRITICAL and UNKNOWN statuses were considered the same, but
  now they are different and will be reported separately. This also
  improves readability of the log-files and consistency with sysctl
  output.

* ability to ignore status provided by the driver with the 'istatus'
  keyword ("ignore automatic status" or "I set the status"), with the
  possibility to set your own settings for acceptable limits.
  Previously, it was not possible to set any kind of user limits for
  those sensors that had their own status facilities.


== for old-style sensors ==

* previously, lm(4)-style fans that were flagged SENSOR_FINVALID during
  sensorsd startup were completely ignored, but now their invalid status
  is appropriately reported, and they are monitored again when they come
  out of their invalid mode

* previously, a sensor that had an empty entry in the configuration file
  was reported to be "within limits", but now it will not be monitored
  at all (unless, of cause, it provides its own status)


As a bonus, sensorsd syslog entries should now be shorter, and the
majority of them will fit on one line on 80-column terminals.


ok beck@@, henning@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.12 2007/05/29 06:04:41 jmc Exp $
d18 1
a18 1
.Dd May 28, 2007
@


1.12
log
@tweaks; help/ok cnst
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.11 2007/05/29 02:02:12 cnst Exp $
d35 3
a37 2
which may specify high and low limits.
If the limits are crossed,
d55 1
a55 1
will be looked at to determine the limits.
d65 2
d98 9
d123 1
a123 2
or if hw.sensors.ami0.drive0,
attached to raid volume sd0,
d126 7
a132 1
such as drive failure, rebuild, or a complete failure.
d139 2
a140 1
hw.sensors.ami0.drive0:		# raid volume status changes
@


1.11
log
@for sensorsd.conf entries, let's do matching by sensor type if maching by complete sysctl name does not yield anything;  ok henning, otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.10 2006/12/28 10:04:27 jmc Exp $
d33 2
a34 2
shall be matched by at most one entry in 
.Nm , 
d44 1
a44 1
Full
d47 5
a51 5
addresses are used to find entries,
with a fallback on sensor types.
For example, if an entry with a full name of a certain temperature 
sensor is not present in 
.Nm , 
@


1.10
log
@tweak;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.9 2006/12/23 17:49:53 deraadt Exp $
d18 1
a18 1
.Dd March 15, 2005
d32 4
a35 1
Each entry represents one sensor and may specify high and low limits.
d44 11
@


1.9
log
@adapt to new two-level sensor sysctl framework; by Constantine A. Murenin
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.8 2006/08/23 14:30:27 jmc Exp $
d69 1
a69 1
the xname of the device sensor sits on
d71 1
a71 1
the type of the sensor
@


1.8
log
@wording;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.7 2006/08/23 11:49:15 mickey Exp $
d68 5
a72 1
.It %1
d89 1
a89 1
if hw.sensors.0 goes above 80C, the command
d92 4
a95 4
with the sensor number and current value passed to it.
Alerts will be sent if hw.sensors.1 goes above 170F;
if hw.sensors.2 goes below 4.8V or above 5.2V;
if the speed of the fan attached to hw.sensors.3
d97 1
a97 1
or if hw.sensors.4,
d104 5
a108 5
hw.sensors.0:high=80C:command=/etc/sensorsd/log_warning %1 %2
hw.sensors.1:high=170F
hw.sensors.2:low=4.8V:high=5.2V
hw.sensors.3:low=1000:high=8000
hw.sensors.4:		# raid volume status changes
@


1.7
log
@esm(4) also gives status (sometimes ;)
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.6 2006/08/23 11:18:00 mickey Exp $
d58 1
a58 1
.Xr esm 4
d91 7
a97 6
and if the speed of the fan attached to hw.sensors.3
goes below 1000RPM or above 8000RPM; if hw.sensors.4
that is attached to the raid volume sd0 goes into
other than
.Dq OK
state, such as drive failure, rebuild or a complete failure.
@


1.6
log
@allow monitoring sensors with their own status reporting such as ipmi or raid controllers; marco@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.5 2006/03/07 11:14:02 jmc Exp $
d57 2
a58 1
.Xr ipmi 4
d60 1
a60 1
.Xr bio 4 )
d62 1
a62 1
ignored) and simply trigger status transitions.
d108 1
@


1.5
log
@beef up this file a little; ok grange
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.4 2005/04/02 09:25:08 jmc Exp $
d56 7
d88 1
a88 1
Alerts will be sent if hw.sensor.1 goes above 170F;
d91 5
a95 1
goes below 1000RPM or above 8000RPM.
d102 1
d106 2
@


1.4
log
@new sentence, new line;
change an article;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.3 2005/04/01 22:15:40 deraadt Exp $
d23 1
a23 2
.Nd configuration file for
.Xr sensorsd 8
d41 1
d43 8
a50 7
Example:
.Bd -literal -offset indent
hw.sensors.0:high=80C:command=/etc/sensorsd/log_warning %1 %2
hw.sensors.1:high=170F
hw.sensors.2:low=4.8V:high=5.2V
hw.sensors.3:low=1000:high=8000
.Ed
d57 12
a68 3
Tokens in the command are substituted as follows: %1 with
the sensor number, %2 with the sensor's current value, %3 with the
sensor's low limit, and %4 with the sensor's high limit.
d75 17
d93 3
a95 1
.Xr sensorsd 8
@


1.3
log
@spacing
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.2 2005/04/01 22:10:23 hshoexer Exp $
d36 1
a36 1
alert functionality is triggered and the command, if specified, is
d55 2
a56 2
The command is executed on transitions out of, and back into, given
limits. Tokens in the command are substituted as follows: %1 with
@


1.2
log
@sensorsd(8) execute command on exceeding limits
from matthew.gream@@pobox.com, thanks!

cleaning and ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sensorsd.conf.5,v 1.1 2003/09/24 20:32:49 henning Exp $
d9 1
a9 1
.\" 
d58 1
a58 1
sensor's low limit, and %4 with the sensor's high limit. 
@


1.1
log
@sensorsd monitors the hardware sensors as reported by sysctl in hw.sensors.
limits can be configured, out of range notifications through syslog.
config file parsing based on bob's hints, lots of hints from theo
feedback from grange, otto, mickey as well

ok deraadt@@; grange@@ on an earlier version
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d4 1
d18 1
a18 1
.Dd September 20, 2003
d34 1
a34 1
If the sensor data is out of range of the low and the high limits,
d36 2
a37 1
alert functionality is triggered.
d45 1
a45 1
hw.sensors.0:high=80C
d54 5
@

