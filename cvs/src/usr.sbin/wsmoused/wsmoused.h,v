head	1.12;
access;
symbols
	OPENBSD_6_1:1.12.0.8
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.8.0.22
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.18
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.16
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.14
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.12
	OPENBSD_5_0:1.8.0.10
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.8
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.6
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.6.0.4
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.4
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.2
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.4.0.22
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.20
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.18
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.16
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.14
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.12
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.10
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.8
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_9:1.1.0.2;
locks; strict;
comment	@ * @;


1.12
date	2015.10.26.09.58.18;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	BbXgg723CihRSyQL;

1.11
date	2014.05.14.18.23.22;	author shadchin;	state Exp;
branches;
next	1.10;

1.10
date	2014.05.14.18.18.01;	author shadchin;	state Exp;
branches;
next	1.9;

1.9
date	2014.05.14.18.14.09;	author shadchin;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.21.16.13.18;	author jacekm;	state Exp;
branches;
next	1.7;

1.7
date	2009.06.05.03.37.10;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.20.14.17.20;	author ragge;	state Exp;
branches;
next	1.5;

1.5
date	2007.04.10.22.40.02;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.15.02.18.39;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.01.12.01.15.37;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2001.12.11.21.10.50;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2001.04.14.04.47.41;	author aaron;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Stop writing a pidfile
ok benno jung
@
text
@/* $OpenBSD: wsmoused.h,v 1.11 2014/05/14 18:23:22 shadchin Exp $ */

/*
 * Copyright (c) 2001 Jean-Baptiste Marchand, Julien Montagne and Jerome Verdon
 *
 * Copyright (c) 1998 by Kazutaka Yokota
 *
 * Copyright (c) 1995 Michael Smith
 *
 * Copyright (c) 1993 by David Dawes <dawes@@xfree86.org>
 *
 * Copyright (c) 1990,91 by Thomas Roell, Dinkelscherben, Germany.
 *
 * All rights reserved.
 *
 * Most of this code was taken from the FreeBSD moused daemon, written by
 * Michael Smith. The FreeBSD moused daemon already contained code from the
 * Xfree Project, written by David Dawes and Thomas Roell and Kazutaka Yokota.
 *
 * Adaptation to OpenBSD was done by Jean-Baptiste Marchand, Julien Montagne
 * and Jerome Verdon.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by
 *      David Dawes, Jean-Baptiste Marchand, Julien Montagne, Thomas Roell,
 *      Michael Smith, Jerome Verdon and Kazutaka Yokota.
 * 4. The name authors may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHORS ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 *
 */

#define FALSE 0
#define TRUE 1

/* Logging macros */

#define debug(fmt, ...) \
	if (debug&&nodaemon) printf(fmt, __VA_ARGS__)

#define logerr(e, ...) 				\
	do {							\
		if (background) {				\
			syslog(LOG_ERR, __VA_ARGS__);		\
			exit(e);				\
		} else						\
			errx(e, __VA_ARGS__);			\
	} while (0)

#define logwarn(...)						\
	do {							\
		if (background)					\
			syslog(LOG_WARNING, __VA_ARGS__);	\
		else						\
			warnx(__VA_ARGS__);			\
	} while (0)

/* Daemon flags */

#define	ChordMiddle	0x0001 /* avoid bug reporting middle button as down
				  when left and right are pressed */
#define Emulate3Button	0x0002 /* option to emulate a third button */
#define ClearDTR	0x0004 /* for mousesystems protocol (3 button mouse) */
#define ClearRTS	0x0008 /* idem as above */
#define NoPnP		0x0010 /* disable PnP for PnP mice */

/* Devices corresponding to physical interfaces */

#define WSMOUSE_DEV "/dev/wsmouse" /* can be /dev/wsmouse, /dev/wsmouse0, ...*/

/* mouse structure : main structure */
typedef struct mouse_s {
	int flags;
	char *portname;		/* mouse device */
	char *ttyname;		/* wsdisplay control tty device */
	int proto;		/* MOUSE_PROTO_XXX */
	unsigned char rate;	/* report rate */
	unsigned int resolution;	/* MOUSE_RES_XXX or a positive number */
	int mfd;		/* mouse file descriptor */
	int cfd;		/* console file descriptor */
	long clickthreshold;	/* double click speed in msec */
} mouse_t;

/* Mouse buttons */

#define MOUSE_BUTTON1	0	/* left */
#define MOUSE_BUTTON2	1	/* middle */
#define MOUSE_BUTTON3	2	/* right */
#define MOUSE_BUTTON4	3
#define MOUSE_BUTTON5	4
#define MOUSE_BUTTON6	5
#define MOUSE_BUTTON7	6
#define MOUSE_BUTTON8	7
#define MOUSE_BUTTON9	8
#define MOUSE_BUTTON10	9
#define MOUSE_BUTTON11	10
#define MOUSE_BUTTON12	11
#define MOUSE_BUTTON13	12
#define MOUSE_BUTTON14	13
#define MOUSE_BUTTON15	14
#define MOUSE_BUTTON16	15
#define MOUSE_MAXBUTTON	16
@


1.11
log
@Remove mouse.baudrate, it is always 1200.

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.10 2014/05/14 18:18:01 shadchin Exp $ */
a57 2
extern char *pidfile;

a62 2
		if (pidfile != NULL)				\
			unlink(pidfile);			\
@


1.10
log
@Remove unused code.

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.9 2014/05/14 18:14:09 shadchin Exp $ */
a100 1
	int baudrate;
@


1.9
log
@Remove unused variables.

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.8 2009/06/21 16:13:18 jacekm Exp $ */
a101 1
	int old_baudrate;
@


1.8
log
@Support mouses with lots of buttons.  Also, fix a crash when pressing
a button that's outside of the hardcoded range; miod@@ ok
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.7 2009/06/05 03:37:10 miod Exp $ */
a104 2
	int zmap;		/* MOUSE_{X|Y}AXIS or a button number */
	int wmode;		/* wheel mode button number */
@


1.7
log
@Add the ability to attach wsmoused to a different wsdisplay than wsdisplay0
(i.e. ttyCcfg) with the new -D option.

While there, a lot of cleanup, including not creating a pidfile by default
(since there might be more than one wsmoused running on multiple wsdisplay
systems).
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.6 2008/06/20 14:17:20 ragge Exp $ */
d122 9
a130 1
#define MOUSE_MAXBUTTON	8
@


1.6
log
@Change gcc named variadics to c99 ones.  Ok otto@@
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.5 2007/04/10 22:40:02 miod Exp $ */
d65 2
a66 1
		unlink(pidfile);				\
d77 1
a77 1
		    syslog(LOG_WARNING, __VA_ARGS__);		\
d79 1
a79 1
		    warnx(__VA_ARGS__);				\
a93 4
#define SERIAL_DEV "/dev/cua0" /* can be /dev/cua00, /dev/cua01, ... */

#define IS_WSMOUSE_DEV(dev) (!(strncmp((dev), WSMOUSE_DEV,12)))
#define IS_SERIAL_DEV(dev) (!(strncmp((dev), SERIAL_DEV, 9)))
d97 14
a110 13
    int flags;
    char *portname;		/* /dev/XXX */
    int proto;			/* MOUSE_PROTO_XXX */
    int baudrate;
    int old_baudrate;
    unsigned char rate;			/* report rate */
    unsigned int resolution;		/* MOUSE_RES_XXX or a positive number */
    int zmap;			/* MOUSE_{X|Y}AXIS or a button number */
    int wmode;			/* wheel mode button number */
    int mfd;			/* mouse file descriptor */
    int cfd;			/* console file descriptor */
    long clickthreshold;	/* double click speed in msec */
} mouse_t ;
a122 1

@


1.5
log
@Use a larger type to store ``resolution'', so that comparisons against
values over 255 are actually meaningful.
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.4 2002/02/15 02:18:39 deraadt Exp $ */
d60 2
a61 2
#define debug(fmt,args...) \
	if (debug&&nodaemon) printf(fmt, ##args)
d63 1
a63 1
#define logerr(e, fmt, args...) 				\
d67 1
a67 1
			syslog(LOG_ERR, fmt, ##args);		\
d70 1
a70 1
			errx(e, fmt, ##args);			\
d73 1
a73 1
#define logwarn(fmt, args...)					\
d76 1
a76 1
		    syslog(LOG_WARNING, fmt, ##args);		\
d78 1
a78 1
		    warnx(fmt, ##args);				\
@


1.4
log
@KNF
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.3 2002/01/12 01:15:37 miod Exp $ */
d106 1
a106 1
    unsigned char resolution;		/* MOUSE_RES_XXX or a positive number */
@


1.3
log
@Make sure the daemon() call is harmless to file descriptors.
Problem reported by markus@@, fix by me, ok markus@@ millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.2 2001/12/11 21:10:50 miod Exp $ */
d5 1
a5 1
 * 
d9 1
a9 1
 * 
d17 1
a17 1
 * Michael Smith. The FreeBSD moused daemon already contained code from the 
d22 1
a22 1
 * 
d83 1
a83 1
#define	ChordMiddle	0x0001 /* avoid bug reporting middle button as down 
d97 1
a97 1
 
d124 1
a124 1
#define MOUSE_MAXBUTTON	8	
@


1.2
log
@This file was forgotten in the previous wsmouse commits.
@
text
@d1 1
a1 1
/* $OpenBSD: wsmoused.h,v 1.1 2001/04/14 04:47:41 aaron Exp $ */
d58 2
d63 17
a79 14
#define logerr(e, fmt, args...) {				\
	if (background) {					\
	    syslog(LOG_ERR, fmt, ##args);		\
	    exit(e);						\
	} else							\
	    errx(e, fmt, ##args);				\
}

#define logwarn(fmt, args...) {				\
	if (background)						\
	    syslog(LOG_WARNING, fmt, ##args);	\
	else							\
	    warnx(fmt, ##args);					\
}
@


1.1
log
@Userland daemon for wscons console mouse features.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d63 1
a63 1
	    syslog(LOG_DAEMON | LOG_ERR, fmt, ##args);		\
d71 1
a71 1
	    syslog(LOG_DAEMON | LOG_WARNING, fmt, ##args);	\
@

