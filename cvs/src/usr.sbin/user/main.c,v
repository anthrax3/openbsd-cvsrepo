head	1.11;
access;
symbols
	OPENBSD_6_1:1.11.0.2
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.10.0.2
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.7.0.18
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.10
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.14
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.12
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.8
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.6
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.4
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.2
	OPENBSD_5_0:1.6.0.34
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.32
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.30
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.26
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	NetBSD-20000425:1.1.1.1
	NetBSD:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.11.29.03.59.31;	author jsg;	state Exp;
branches;
next	1.10;
commitid	ySmBMsd4swrnMjIC;

1.10
date	2016.03.29.13.32.54;	author mestre;	state Exp;
branches;
next	1.9;
commitid	64hpZkpTZk6QuCLe;

1.9
date	2015.11.30.22.22.27;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	ulBqWhiha2jQ8Wzx;

1.8
date	2015.11.15.23.14.21;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	dgYZ9OC8Sqtuavig;

1.7
date	2011.12.31.14.05.51;	author ajacoutot;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.08.22.13.01;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.05.10.12.50;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.03.24.19.24.07;	author jakob;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.26.06.25.45;	author jakob;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.24.22.31.29;	author jakob;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.24.22.27.00;	author jakob;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.04.24.22.27.00;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Alistair Crooks rescinded the advertising clause of his user(8)
license in 2005 in NetBSD.

https://mail-index.netbsd.org/source-changes/2005/11/25/0002.html
@
text
@/* $OpenBSD: main.c,v 1.10 2016/03/29 13:32:54 mestre Exp $ */
/* $NetBSD: main.c,v 1.3 2002/07/09 10:34:16 tron Exp $ */

/*
 * Copyright (c) 1999 Alistair G. Crooks.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 * GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 * NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 * SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */
#include <err.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#include "usermgmt.h"

enum {
	MaxCmdWords = 2
};

/* this struct describes a command */
typedef struct cmd_t {
	int		c_wc;				/* word count */
	const char	*c_word[MaxCmdWords];		/* command words */
	int		(*c_func)(int, char **);	/* called function */
} cmd_t;

/* despatch table for commands */
static cmd_t	cmds[] = {
	{	1,	{ "useradd",	NULL },		useradd		},
	{	2,	{ "user",	"add" },	useradd		},
	{	1,	{ "usermod",	NULL },		usermod		},
	{	2,	{ "user",	"mod" },	usermod		},
	{	1,	{ "userdel",	NULL },		userdel		},
	{	2,	{ "user",	"del" },	userdel		},
	{	1,	{ "userinfo",	NULL },		userinfo	},
	{	2,	{ "user",	"info" },	userinfo	},
	{	1,	{ "groupadd",	NULL },		groupadd	},
	{	2,	{ "group",	"add" },	groupadd	},
	{	1,	{ "groupmod",	NULL },		groupmod	},
	{	2,	{ "group",	"mod" },	groupmod	},
	{	1,	{ "groupdel",	NULL },		groupdel	},
	{	2,	{ "group",	"del" },	groupdel	},
	{	1,	{ "groupinfo",	NULL },		groupinfo	},
	{	2,	{ "group",	"info" },	groupinfo	},
	{	0	}
};

extern char	*__progname;

int
main(int argc, char **argv)
{
	cmd_t	*cmdp;
	int	matched;
	int	i;

	for (cmdp = cmds ; cmdp->c_wc > 0 ; cmdp++) {
		for (matched = i = 0 ; i < cmdp->c_wc && i < MaxCmdWords ; i++) {
			if (argc > i) {
				if (strcmp((i == 0) ? __progname : argv[i],
				    cmdp->c_word[i]) == 0) {
					matched += 1;
				} else
					break;
			}
		}
		if (matched == cmdp->c_wc && cmdp->c_func != NULL)
			return (*cmdp->c_func)(argc - (matched - 1),
			    argv + (matched - 1));
	}
	usermgmt_usage(__progname);
}
@


1.10
log
@-Remove function #defines from defs.h and use the actual code accordingly in
user.c
-Remove MIN and MAX #defines which are not being in use since the last 16 years
-Move last #define to user.c and remove file defs.h
-Remove lint comments

OK natano@@ after his suggestions and also OK jung@@ on an earlier version
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.9 2015/11/30 22:22:27 deraadt Exp $ */
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Alistair G. Crooks.
 * 4. The name of the author may not be used to endorse or promote
@


1.9
log
@pledge regression: some operations appear to want to getpwent from
spwd, then apply to a new password database.  This runs into issues
also with the new shadow routines.  Needs to be looked at more, but
for now remove pledge to make the shadow issues easier to figure out..
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.8 2015/11/15 23:14:21 deraadt Exp $ */
a97 1
	/* NOTREACHED */
@


1.8
log
@pledge "stdio rpath wpath cpath fattr getpw flock id proc exec" at the
top.  It is a lot, maybe someone will take the time to find smaller
chunks later in the program.
tested by jca
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.7 2011/12/31 14:05:51 ajacoutot Exp $ */
a81 4

	if (pledge("stdio rpath wpath cpath fattr getpw flock id proc exec",
	    NULL) == -1)
		err(1, "pledge");
@


1.7
log
@Remove the EXTENSIONS ifdef danse; it might have made sense in the past
but user(8) behaviour has become OS specific in time so there's no
sense keeping this. We are OpenBSD and we use BSD EXTENSIONS
unconditionally.

ok miod@@ millert@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.6 2003/06/08 22:13:01 millert Exp $ */
d82 4
@


1.6
log
@Make c_word const; from NetBSD (tron)
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.5 2001/12/05 10:12:50 deraadt Exp $ */
a60 1
#ifdef EXTENSIONS
a62 1
#endif
a68 1
#ifdef EXTENSIONS
a70 1
#endif
@


1.5
log
@simplify
@
text
@d1 2
a2 2
/* $OpenBSD: main.c,v 1.4 2001/03/24 19:24:07 jakob Exp $ */
/* $NetBSD: main.c,v 1.1 1999/12/24 09:08:50 agc Exp $ */
d48 3
a50 3
	int	c_wc;					/* word count */
	char	*c_word[MaxCmdWords];			/* command words */
	int	(*c_func)(int argc, char **argv);	/* called function */
@


1.4
log
@fix usage when called as invalid binary name; <raj@@cerias.purdue.edu>
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.3 2000/04/26 06:25:45 jakob Exp $ */
d91 1
a91 1
						cmdp->c_word[i]) == 0) {
d93 1
a93 1
				} else {
a94 1
				}
d97 3
a99 3
		if (matched == cmdp->c_wc && cmdp->c_func != NULL) {
			return (*cmdp->c_func)(argc - (matched - 1), argv + (matched - 1));
		}
@


1.3
log
@usermgmt_usage doesnt return; eric jackson <shinobi@@monkey.org>
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.2 2000/04/24 22:31:29 jakob Exp $ */
d98 1
a98 1
		if (matched == cmdp->c_wc) {
@


1.2
log
@id-tags
@
text
@d1 1
a1 1
/* $OpenBSD: main.c,v 1.1 1999/12/24 09:08:50 agc Exp $ */
a102 1
	errx(EXIT_FAILURE, "Program `%s' not recognised", __progname);
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Initial import of user/group management tools from NetBSD.
@
text
@@
