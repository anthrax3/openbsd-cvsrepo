head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.22
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.18
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.14
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.16
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.8
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.12
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.10
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.6
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.4
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.2
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.24
	OPENBSD_5_0:1.8.0.22
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.20
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.18
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.14
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.16
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.4.0.14
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.12
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.10
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.8
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.6
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.9
date	2012.03.26.20.17.45;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2006.03.15.20.30.28;	author sturm;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.19.19.17.10;	author sturm;	state Exp;
branches;
next	1.6;

1.6
date	2005.12.02.04.27.52;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2005.11.23.08.02.58;	author sturm;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.04.07.31.16;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.28.00;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.23.01.00.41;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.04.29.13.08.43;	author hvozda;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Add hibernate request support.  Also installs a ZZZ binary for the
shortcut.
ok mlarkin miod
@
text
@/*	$OpenBSD: apm-proto.h,v 1.8 2006/03/15 20:30:28 sturm Exp $	*/

/*
 *  Copyright (c) 1996 John T. Kohl
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  3. The name of the author may not be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 */

enum apm_action {
	NONE,
	SUSPEND,
	STANDBY,
	HIBERNATE,
	GETSTATUS,
	SETPERF_LOW,
	SETPERF_HIGH,
	SETPERF_AUTO,
	SETPERF_COOL
};

enum apm_state {
	NORMAL,
	SUSPENDING,
	STANDING_BY,
	HIBERNATING
};

enum apm_perfmode {
	PERF_NONE = -1,
	PERF_MANUAL,
	PERF_AUTO,
	PERF_COOL
};

struct apm_command {
	int vno;
	enum apm_action action;
};

struct apm_reply {
	int vno;
	enum apm_state newstate;
	enum apm_perfmode perfmode;
	int cpuspeed;
	struct apm_power_info batterystate;
};

#define APMD_VNO	3

extern const char *battstate(int state);
extern const char *ac_state(int state);
extern const char *perf_mode(int mode);
@


1.8
log
@consistently use power *states* and performance *modes*

ok beck, mickey
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.7 2006/01/19 19:17:10 sturm Exp $	*/
d36 1
d47 2
a48 1
	STANDING_BY
@


1.7
log
@prompted by deraadt:
manual performance mode -> low/high performance mode
show cpuspeed in apm output

ok beck, weingart
man page bits ok jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.6 2005/12/02 04:27:52 beck Exp $	*/
d49 3
a51 4
enum apm_perfstate {
	PERF_NONE,
	PERF_LOW,
	PERF_HIGH,
d64 1
a64 1
	enum apm_perfstate perfstate;
d73 1
a73 1
extern const char *perf_state(int state);
@


1.6
log
@Modify automatic performance adjustment mode so that the cpu is set
to go fast if the power is connected and the battery is more than 15%
charged, and when on batteries keeps setperf low unless needed.
add a cool runnings mode option (-C) that does the previous behaviour
of keeping the CPU as low as possible unless needed.
ok deradt@@, sturm@@, "i like it's" djm@@ henning@@ and others.
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.5 2005/11/23 08:02:58 sturm Exp $	*/
d51 2
a52 1
	PERF_MANUAL,
d66 1
d70 1
a70 1
#define APMD_VNO	2
@


1.5
log
@permit apmd to run on systems without apm support
let apmd control hw.setperf manually or dynamically

tested by Chris Kuethe and beck@@, 'get it in' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.4 2002/07/04 07:31:16 deraadt Exp $	*/
d39 2
a40 1
	SETPERF_AUTO
d52 2
a53 1
	PERF_AUTO
@


1.4
log
@minor KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.3 2002/02/16 21:28:00 millert Exp $	*/
d36 4
a39 1
	GETSTATUS
d48 6
d62 1
d66 1
a66 1
#define APMD_VNO	1
d70 1
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: apm-proto.h,v 1.2 2001/03/23 01:00:41 mickey Exp $	*/
d33 4
a36 4
    NONE,
    SUSPEND,
    STANDBY,
    GETSTATUS
d40 3
a42 3
    NORMAL,
    SUSPENDING,
    STANDING_BY
d46 2
a47 2
    int vno;
    enum apm_action action;
d51 3
a53 3
    int vno;
    enum apm_state newstate;
    struct apm_power_info batterystate;
@


1.2
log
@ac on/off hooks; from angelos@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 2
a59 2
extern const char *battstate __P((int state));
extern const char *ac_state __P((int state));
@


1.1
log
@Pull in John Kohl's most recent (15Apr96) APM and PCMCIA work
(original PCMCIA framework  by Stefan Grefen).
@
text
@d1 2
@

