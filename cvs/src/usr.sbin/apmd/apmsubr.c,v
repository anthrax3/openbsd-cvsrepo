head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.48
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.46
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.42
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.38
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.40
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.32
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.36
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.34
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.30
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.28
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.26
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.24
	OPENBSD_5_0:1.8.0.22
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.20
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.18
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.14
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.16
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.12
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.10
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.8
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.6
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.2
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.3.0.18
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.16
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.14
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.12
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.10
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.8
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.6
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2006.03.15.20.30.28;	author sturm;	state Exp;
branches;
next	1.7;

1.7
date	2006.01.28.17.08.14;	author sturm;	state Exp;
branches;
next	1.6;

1.6
date	2006.01.19.19.17.10;	author sturm;	state Exp;
branches;
next	1.5;

1.5
date	2005.12.02.04.27.52;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2005.11.23.08.02.58;	author sturm;	state Exp;
branches;
next	1.3;

1.3
date	2001.07.07.01.10.42;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.23.01.00.41;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	96.04.29.13.08.48;	author hvozda;	state Exp;
branches;
next	;


desc
@@


1.8
log
@consistently use power *states* and performance *modes*

ok beck, mickey
@
text
@/*	$OpenBSD: apmsubr.c,v 1.7 2006/01/28 17:08:14 sturm Exp $	*/

/*
 *  Copyright (c) 1995,1996 John T. Kohl
 *  All rights reserved.
 * 
 *  Redistribution and use in source and binary forms, with or without
 *  modification, are permitted provided that the following conditions
 *  are met:
 *  1. Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *  2. Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in the
 *     documentation and/or other materials provided with the distribution.
 *  3. The name of the author may not be used to endorse or promote products
 *     derived from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR `AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 * 
 */

#include <sys/types.h>
#include <machine/apmvar.h>
#include "apm-proto.h"

const char *
battstate(int state)
{
	switch (state) {
	case APM_BATT_HIGH:
		return "high";
	case APM_BATT_LOW:
		return "low";
	case APM_BATT_CRITICAL:
		return "CRITICAL";
	case APM_BATT_CHARGING:
		return "charging";
	case APM_BATTERY_ABSENT:
		return "absent";
	case APM_BATT_UNKNOWN:
		return "unknown";
	default:
		return "invalid battery state";
	}
}

const char *
ac_state(int state)
{
	switch (state) {
	case APM_AC_OFF:
		return "not connected";
	case APM_AC_ON:
		return "connected";
	case APM_AC_BACKUP:
		return "backup power source";
	case APM_AC_UNKNOWN:
		return "not known";
	default:
		return "invalid AC status";
	}
}

const char *
perf_mode(int mode)
{
	switch (mode) {
	case PERF_MANUAL:
		return "manual";
	case PERF_AUTO:
		return "auto";
	case PERF_COOL:
		return "cool running";
	default:
		return "invalid";
	}
}
@


1.7
log
@be less verbose:
- status does not provide any information, remove it
- print battery status in one line
ok beck, drahn, i386 tested by bernd
@
text
@d1 1
a1 1
/*	$OpenBSD: apmsubr.c,v 1.6 2006/01/19 19:17:10 sturm Exp $	*/
d75 1
a75 1
perf_state(int state)
d77 3
a79 7
	switch (state) {
	case PERF_NONE:
		return "uninitialized";
	case PERF_LOW:
		return "low";
	case PERF_HIGH:
		return "high";
d85 1
a85 1
		return "invalid performance status";
@


1.6
log
@prompted by deraadt:
manual performance mode -> low/high performance mode
show cpuspeed in apm output

ok beck, weingart
man page bits ok jmc
@
text
@d1 1
a1 1
/*	$OpenBSD: apmsubr.c,v 1.5 2005/12/02 04:27:52 beck Exp $	*/
d51 1
a51 1
		return "unknown (absent?)";
@


1.5
log
@Modify automatic performance adjustment mode so that the cpu is set
to go fast if the power is connected and the battery is more than 15%
charged, and when on batteries keeps setperf low unless needed.
add a cool runnings mode option (-C) that does the previous behaviour
of keeping the CPU as low as possible unless needed.
ok deradt@@, sturm@@, "i like it's" djm@@ henning@@ and others.
@
text
@d1 1
a1 1
/*	$OpenBSD: apmsubr.c,v 1.4 2005/11/23 08:02:58 sturm Exp $	*/
d80 4
a83 2
	case PERF_MANUAL:
		return "manual";
@


1.4
log
@permit apmd to run on systems without apm support
let apmd control hw.setperf manually or dynamically

tested by Chris Kuethe and beck@@, 'get it in' deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: apmsubr.c,v 1.3 2001/07/07 01:10:42 mickey Exp $	*/
d84 2
@


1.3
log
@cleanup and knf, some are from Kevin Steves <stevesk@@pobox.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: apmsubr.c,v 1.2 2001/03/23 01:00:41 mickey Exp $	*/
d71 15
@


1.2
log
@ac on/off hooks; from angelos@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a31 6
#include <stdio.h>
#include <errno.h>
#include <syslog.h>
#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
a32 2
#include <sys/ioctl.h>
#include <sys/time.h>
a33 1
#include <err.h>
d39 16
a54 16
    switch (state) {
    case APM_BATT_HIGH:
	return "high";
    case APM_BATT_LOW:
	return "low";
    case APM_BATT_CRITICAL:
	return "CRITICAL";
    case APM_BATT_CHARGING:
	return "charging";
    case APM_BATTERY_ABSENT:
	return "absent";
    case APM_BATT_UNKNOWN:
	return "unknown (absent?)";
    default:
	return "invalid battery state";
    }
d60 12
a71 12
    switch (state) {
    case APM_AC_OFF:
	return "not connected";
    case APM_AC_ON:
	return "connected";
    case APM_AC_BACKUP:
	return "backup power source";
    case APM_AC_UNKNOWN:
	return "not known";
    default:
	return "invalid AC status";
    }
@


1.1
log
@Pull in John Kohl's most recent (15Apr96) APM and PCMCIA work
(original PCMCIA framework  by Stefan Grefen).
@
text
@d1 2
@

