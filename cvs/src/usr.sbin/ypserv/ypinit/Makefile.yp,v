head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.26
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.18
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.22
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.20
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.16
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.14.0.4
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.13.0.26
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.24
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.22
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.20
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.18
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.16
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.14
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.12
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.10
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.8
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.6
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.4
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.12
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.10
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.8
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_9:1.12.0.6
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.11.0.8
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.11.0.6
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.11.0.4
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.11.0.2
	OPENBSD_2_3_BASE:1.11
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.8.0.2
	OPENBSD_2_1_BASE:1.8
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@# @;


1.17
date	2015.11.29.15.20.46;	author rpe;	state Exp;
branches;
next	1.16;
commitid	t07fHICMiedEebSJ;

1.16
date	2010.01.20.23.20.28;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2009.12.20.13.08.40;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2009.04.12.21.03.28;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2002.11.01.23.54.18;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.18.15.34.18;	author turan;	state Exp;
branches;
next	1.11;

1.11
date	98.02.14.10.02.20;	author maja;	state Exp;
branches;
next	1.10;

1.10
date	97.07.28.12.42.59;	author niklas;	state Exp;
branches;
next	1.9;

1.9
date	97.07.26.22.23.45;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	97.04.20.10.00.22;	author maja;	state Exp;
branches;
next	1.7;

1.7
date	97.04.15.22.58.59;	author maja;	state Exp;
branches;
next	1.6;

1.6
date	97.03.13.09.50.26;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	96.05.30.09.53.17;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.03.02.03.01.40;	author dm;	state Exp;
branches;
next	1.3;

1.3
date	96.01.06.11.39.40;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.01.19.25;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	95.11.01.16.56.28;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Tedu stdethers and stdhosts from /usr/sbin, which are only used in Makefile.yp
for creating the hosts.byname, hosts.byaddr ethers.byname and ethers.byaddr YP
maps. Replace most of their functionality with sed/awk scripting directly in
Makefile.yp.

Suggested by and OK deraadt@@
Feedback from @@semarie
@
text
@#	$OpenBSD: Makefile.yp,v 1.16 2010/01/20 23:20:28 schwarze Exp $

# ----------------------------------------------------------------------
# User-configurable settings; see Makefile.yp(8) for details.
# ----------------------------------------------------------------------

# Select the source directories to build YP maps from.
DIR=/etc
AMDDIR=$(DIR)/amd

# Set this to disable automatic distribution of YP maps.
NOPUSH=""

# Unset this to exclude encrypted passwords from the passwd maps.
UNSECURE="True"

# Only include UIDs and GIDs inside certain ranges into the maps.
MINUID=1000
MAXUID=32765
MINGID=1000
MAXGID=32765

# Set this to -b to have ypserv ask DNS for unknown hosts.
USEDNS=

all: passwd group hosts ethers networks rpc services protocols netid netgroup amd.home aliases
	pkill -HUP ypserv

# ----------------------------------------------------------------------
# End of user-configurable settings; you may also add new targets, though.
# ----------------------------------------------------------------------

# The following is also hardcoded into ypserv(8) and other programs.
YPDBDIR=/var/yp

AWK=/usr/bin/awk
CAT=/bin/cat
CP=/bin/cp
CUT=/usr/bin/cut
ECHO=/bin/echo
MAKEDBM=/usr/sbin/makedbm
MAKEDBM-S=$(MAKEDBM) -s
MKALIAS=/usr/sbin/mkalias
MKNETID=/usr/sbin/mknetid
REVNETGROUP=/usr/sbin/revnetgroup
RM=/bin/rm
SED=/usr/bin/sed
SENDMAIL=/usr/sbin/sendmail
TOUCH=/usr/bin/touch
YPPUSH=/usr/sbin/yppush

DOMAIN="`/usr/bin/basename ${.CURDIR}`"

passwd.time: $(DIR)/master.passwd
	-@@if [ -f $(>) ]; then \
		if [ ! $(UNSECURE) ]; then \
			$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 | \
			$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
			'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ if (minuid <= $$3 && maxuid >= $$3) \
			print $$1, $$1":*:"$$3":"$$4":"$$5":"$$6":"$$7 }' -|\
			$(MAKEDBM) - passwd.byname; \
			$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 |\
			$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
			'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ if (minuid <= $$3 && maxuid >= $$3) \
			print $$3, $$1":*:"$$3":"$$4":"$$5":"$$6":"$$7 }' -|\
			$(MAKEDBM) - passwd.byuid; \
		else \
			$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 | \
			$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
			'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ if (minuid <= $$3 && maxuid >= $$3) \
			print $$1, $$0 }' - | \
			$(MAKEDBM) - passwd.byname; \
			$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 |\
			$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
			'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ if (minuid <= $$3 && maxuid >= $$3) \
			print $$3, $$0 }' - | \
			$(MAKEDBM) - passwd.byuid; \
		fi; \
		$(CAT) $(>) | \
		$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
		'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ if (minuid <= $$3 && maxuid >= $$3) \
		print $$1, $$0 }' - | $(MAKEDBM-S) - master.passwd.byname; \
		$(CAT) $(>) | \
		$(AWK) -v minuid=${MINUID} -v maxuid=${MAXUID} \
		'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ if (minuid <= $$3 && maxuid >= $$3) \
		print $$3, $$0 }' - | $(MAKEDBM-S) - master.passwd.byuid; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated passwd"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) passwd.byname; \
			$(YPPUSH) -d $(DOMAIN) passwd.byuid; \
			$(YPPUSH) -d $(DOMAIN) master.passwd.byname; \
			$(YPPUSH) -d $(DOMAIN) master.passwd.byuid; \
			$(ECHO) "pushed passwd"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


group.time: $(DIR)/group
	-@@if [ -f $(>) ]; then \
		$(AWK) -v mingid=${MINGID} -v maxgid=${MAXGID} \
		'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ if (mingid <= $$3 && maxgid >= $$3) print $$1, $$0 }' $(>) | \
		$(MAKEDBM) - group.byname; \
		$(AWK) -v mingid=${MINGID} -v maxgid=${MAXGID} \
		'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ if (mingid <= $$3 && maxgid >= $$3) print $$3, $$0 }' $(>) | \
		$(MAKEDBM) - group.bygid; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated group"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) group.byname; \
			$(YPPUSH) -d $(DOMAIN) group.bygid; \
			$(ECHO) "pushed group"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi

hosts.time: $(DIR)/hosts
	-@@if [ -f $(DIR)/hosts ]; then \
		$(SED) -E -e 's/[[:blank:]]*#.*$$//' -e '/^$$/d' $(>) | \
		$(AWK) 'BEGIN { OFS="\t" } \
		{ if (length() > 1024) next; for (i=2; i <= NF; i++) print $$i,$$0 }' | \
		$(MAKEDBM) $(USEDNS) - hosts.byname; \
		$(SED) -E -e 's/[[:blank:]]*#.*$$//' -e '/^$$/d' $(>) | \
		$(AWK) 'BEGIN { OFS="\t" } \
		{ if (length() > 1024) next; print $$1,$$0 }' | \
		$(MAKEDBM) $(USEDNS) - hosts.byaddr; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated hosts"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) hosts.byname; \
			$(YPPUSH) -d $(DOMAIN) hosts.byaddr; \
			$(ECHO) "pushed hosts"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi

ethers.time: $(DIR)/ethers
	-@@if [ -f $(DIR)/ethers ]; then \
		$(SED) -E -e 's/[[:blank:]]*#.*$$//' -e '/^$$/d' $(>) | \
		$(SED) -E -n '/^([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}[[:blank:]]/p' | \
		$(AWK) 'BEGIN { OFS="\t" } { if (length() > 1024) next; print $$1,$$0 }' | \
		$(MAKEDBM) - ethers.byaddr; \
		$(SED) -E -e 's/[[:blank:]]*#.*$$//' -e '/^$$/d' $(>) | \
		$(SED) -E -n '/^([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}[[:blank:]]/p' | \
		$(AWK) 'BEGIN { OFS="\t" } { if (length() > 1024) next; print $$2,$$0 }' | \
		$(MAKEDBM) - ethers.byname; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated ethers"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) ethers.byaddr; \
			$(YPPUSH) -d $(DOMAIN) ethers.byname; \
			$(ECHO) "pushed ethers"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi

networks.time: $(DIR)/networks
	-@@if [ -f $(>) ]; then \
		$(SED) -e "/^#/d" -e s/#.*$$// $(>) | \
		$(AWK) '{print $$1, $$0; for (i = 3;i <= NF;i++) print $$i,$$0}' | \
		$(MAKEDBM) - networks.byname; \
		$(AWK) 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' $(>) | \
		$(MAKEDBM) - networks.byaddr; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated networks"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) networks.byname; \
			$(YPPUSH) -d $(DOMAIN) networks.byaddr; \
			$(ECHO) "pushed networks"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi

rpc.time: $(DIR)/rpc
	-@@if [ -f $(>) ]; then \
		$(AWK) 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' $(>) | \
		$(MAKEDBM) - rpc.bynumber; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated rpc"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) rpc.bynumber; \
			$(ECHO) "pushed rpc"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


services.time: $(DIR)/services
	-@@if [ -f $(>) ]; then \
		$(AWK) 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' $(>) | \
		$(MAKEDBM) - services.byname; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated services"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) services.byname; \
			$(ECHO) "pushed services"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


protocols.time: $(DIR)/protocols
	-@@if [ -f $(>) ]; then \
		$(AWK) 'BEGIN { OFS="\t"; } $$1 !~ /^#/ { print $$2, $$0 }' $(>) | \
		$(MAKEDBM) - protocols.bynumber; \
		$(SED) -e "/^#/d" -e s/#.*$$// $(>) | \
		$(AWK) '{print $$1, $$0; for (i = 3;i <= NF;i++) print $$i,$$0}' | \
		$(MAKEDBM) - protocols.byname; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated protocols"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) protocols.bynumber; \
			$(YPPUSH) -d $(DOMAIN) protocols.byname; \
			$(ECHO) "pushed protocols"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


netid.time: $(DIR)/passwd $(DIR)/master.passwd $(DIR)/group $(DIR)/hosts $(DIR)/netid
	-@@$(MKNETID) -q -d $(DOMAIN) -p $(DIR)/passwd -P $(DIR)/master.passwd \
		-g $(DIR)/group -h $(DIR)/hosts -m $(DIR)/netid | \
	  $(MAKEDBM) - netid.byname; \
	  $(TOUCH) $(@@); \
	  $(ECHO) "updated netid"; \
	  if [ ! $(NOPUSH) ]; then \
		$(YPPUSH) -d $(DOMAIN) netid.byname; \
		$(ECHO) "pushed netid"; \
	  else \
		: ; \
	  fi


netgroup.time: $(DIR)/netgroup
	-@@if [ -f $(>) ]; then \
		$(CAT) $(>) | $(MAKEDBM) - netgroup; \
		$(CAT) $(>) | $(REVNETGROUP) -u -f - | \
		$(MAKEDBM) - netgroup.byuser; \
		$(CAT) $(>) | $(REVNETGROUP) -h -f - | \
		$(MAKEDBM) - netgroup.byhost; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated netgroup"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) netgroup; \
			$(YPPUSH) -d $(DOMAIN) netgroup.byuser; \
			$(YPPUSH) -d $(DOMAIN) netgroup.byhost; \
			$(ECHO) "pushed netgroup"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


amd.home.time: $(AMDDIR)/amd.home
	-@@if [ -f $(>) ]; then \
		$(SED) -e "s/#.*$$//" -e "/^$$/d" $(>) | \
		$(AWK) '{ \
			    for (i = 1; i <= NF; i++) \
				if (i == NF) { \
				    if (substr($$i, length($$i), 1) == "\\") { \
					printf("%s", substr($$i, 1, length($$i) - 1)); \
				    } \
				    else \
					printf("%s\n", $$i); \
				} \
				else \
				    printf("%s ", $$i); \
			}' | \
		$(MAKEDBM) - amd.home; \
		$(TOUCH) $(@@); \
		$(ECHO) "updated amd.home"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) amd.home; \
			$(ECHO) "pushed amd.home"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi


aliases.time: $(DIR)/mail/aliases
	-@@if [ -f $(>) ]; then \
		$(CP) -p $(>) $(DOMAIN)-aliases; \
		$(SENDMAIL) -bi -oA$(PWD)/$(DOMAIN)-aliases; \
		$(MAKEDBM) -U $(DOMAIN)-aliases | $(MAKEDBM) - mail.aliases; \
		$(MKALIAS) mail.aliases mail.byaddr; \
		$(TOUCH) $(@@); \
		$(RM) $(DOMAIN)-aliases.db $(DOMAIN)-aliases; \
		$(ECHO) "updated aliases"; \
		if [ ! $(NOPUSH) ]; then \
			$(YPPUSH) -d $(DOMAIN) mail.aliases; \
			$(YPPUSH) -d $(DOMAIN) mail.byaddr; \
			$(ECHO) "pushed aliases"; \
		else \
			: ; \
		fi \
	else \
		$(ECHO) "couldn't find $(>)"; \
	fi



passwd: passwd.time
group: group.time
hosts: hosts.time
ethers: ethers.time
networks: networks.time
rpc: rpc.time
services: services.time
protocols: protocols.time
netid: netid.time
netgroup: netgroup.time
amd.home: amd.home.time
aliases: aliases.time
$(DIR)/passwd:
$(DIR)/group:
$(DIR)/hosts:
$(DIR)/ethers:
$(DIR)/networks:
$(DIR)/rpc:
$(DIR)/services:
$(DIR)/protocols:
$(DIR)/netid:
$(DIR)/master.passwd:
$(DIR)/netgroup:
$(DIR)/mail/aliases:
$(AMDDIR)/amd.home:
@


1.16
log
@Make ypserv(8) reread its YP maps on SIGHUP
and use that in Makefile.yp(8) at the end of   cd /var/yp; make all
such that the new maps get used locally even when NOPUSH is set;
fixing a quirk reported by ian@@.

While here, polish the yppush(8) manual
and document a few related mini-bugs to be fixed later.

feedback and ok  ian@@ and jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.15 2009/12/20 13:08:40 schwarze Exp $
a48 2
STDETHERS=/usr/sbin/stdethers
STDHOSTS=/usr/sbin/stdhosts
d134 3
a136 2
		$(STDHOSTS) $(>) | $(SED) -e s/#.*$$// | \
		$(AWK) '{for (i = 2; i <= NF; i++) print $$i, $$0 }' | \
d138 3
a140 2
		$(STDHOSTS) $(>) | \
		$(AWK) 'BEGIN { OFS="\t"; } { print $$1, $$0 }' | \
d157 3
a159 2
		$(STDETHERS) $(>) | $(SED) -e s/#.*$$// | \
		$(AWK) 'BEGIN { FS="\t"; OFS="\t"; } { print $$1, $$0 }' | \
d161 3
a163 2
		$(STDETHERS) $(>) | \
		$(AWK) 'BEGIN { FS="\t"; OFS="\t"; } { print $$2, $$0 }' | \
@


1.15
log
@Make use of the new mknetid(8) -P flag.

Actually, i just realized this is *required* in case you are using
a non-standard DIR without a passwd(5) file, so i'm committing this
simple change right away.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.14 2009/04/12 21:03:28 schwarze Exp $
d27 1
@


1.14
log
@restrict YP UID and GID ranges

from NetBSD and Debian via ajacoutot@@
tweaks and documentation updates by myself with help from jmc@@
OK ajacoutot@@ jmc@@ "move ahead" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.13 2002/11/01 23:54:18 fgsch Exp $
d250 3
a252 2
netid.time: $(DIR)/passwd $(DIR)/group $(DIR)/hosts $(DIR)/netid
	-@@$(MKNETID) -q -d $(DOMAIN) -p $(DIR)/passwd -g $(DIR)/group -h $(DIR)/hosts -m $(DIR)/netid | \
@


1.13
log
@add a comment how to get secure maps built; millert@@ ok.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.11 1998/02/14 10:02:20 maja Exp $
d3 5
a7 1
YPDBDIR=/var/yp
d9 3
a11 1
AMDDIR=/etc/amd
d13 22
a34 1
#
a37 1
RM=/bin/rm
d41 5
d48 1
a49 4
STDETHERS=/usr/sbin/stdethers
MKALIAS=/usr/sbin/mkalias
MKNETID=/usr/sbin/mknetid
REVNETGROUP=/usr/sbin/revnetgroup
a50 1
DOMAIN="`/usr/bin/basename ${.CURDIR}`"
d53 1
a53 12
# Password maps in standard YP is unsecure. This is due to the fact that
# passwords are accessable for anyone. FreeBSD and now OpenBSD has a common
# solution to this, maps can be secure (makedbm -s). If a map is secure only
# a privileged user can access it.
# For secure maps, leave UNSECURE blank.
MAKEDBM-S=$(MAKEDBM) -s
UNSECURE="True"

# If you want ypserv to ask DNS for unknown hosts set USEDNS to -b
USEDNS=

all: passwd group hosts ethers networks rpc services protocols netid netgroup amd.home aliases
d59 4
a62 2
			$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ print $$1, $$1":*:"$$3":"$$4":"$$5":"$$6":"$$7 }' -|\
d65 4
a68 2
			$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ print $$3, $$1":*:"$$3":"$$4":"$$5":"$$6":"$$7 }' -|\
d72 5
a76 2
			$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ print $$1, $$0 }' - | $(MAKEDBM) - passwd.byname; \
d78 5
a82 2
			$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
			{ print $$3, $$0 }' - | $(MAKEDBM) - passwd.byuid; \
d85 4
a88 2
		$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ print $$1, $$0 }' - | $(MAKEDBM-S) - master.passwd.byname; \
d90 4
a93 2
		$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ print $$3, $$0 }' - | $(MAKEDBM-S) - master.passwd.byuid; \
d112 3
a114 2
		$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ print $$1, $$0 }' $(>) | \
d116 3
a118 2
		$(AWK) 'BEGIN { FS=":"; OFS="\t"; } /^[a-zA-Z0-9_]/ \
		{ print $$3, $$0 }' $(>) | \
@


1.12
log
@accesses /etc/aliases instead of /etc/mail/aliases. (ok millert)
@
text
@d30 1
@


1.11
log
@Add support for DNS host lookup. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.10 1997/07/28 12:42:59 niklas Exp $
d281 1
a281 1
aliases.time: $(DIR)/aliases
d326 1
a326 1
$(DIR)/aliases:
@


1.10
log
@When pushing ethers was done it said "pushed hosts"
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.9 1997/07/26 22:23:45 maja Exp $
d33 3
d104 1
a104 1
		$(MAKEDBM) - hosts.byname; \
d107 1
a107 1
		$(MAKEDBM) - hosts.byaddr; \
@


1.9
log
@Ok, the final part in the support for mail.aliases and mail.byaddr in
ypserv.

For this to have an effect the following must be done.
1) make install in src/usr.sbin/ypserv/ypinit will update
   /var/yp/Makefile.main.dist and /var/yp/Makefile.yp.dist.

2) merge changes from Makefile.main.dist into Makefile and Makefile.main
   in /var/yp. Don't forget to keep the SUBDIR line from Makefile.

3) merge changes from Makefile.yp.dist into Makefile.yp in /var/yp and
   Makefile in any domains directory. If no local maps exists it's normaly
   just to replace the files.

-moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.8 1997/04/20 10:00:22 maja Exp $
d131 1
a131 1
			$(ECHO) "pushed hosts"; \
@


1.8
log
@Added man page, support for amd.home and ypservers.
Integrated some code from ypinit in NetBSD (thorpej@@netbsd.org).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.7 1997/04/15 22:58:59 maja Exp $
d10 2
d16 1
d19 1
d33 1
a33 1
all: passwd group hosts ethers networks rpc services protocols netid netgroup amd.home
d278 22
d311 1
d323 1
@


1.7
log
@Added revnetgroup in ypserv's Makefile and added support for netgroup. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.6 1997/03/13 09:50:26 maja Exp $
d5 1
d29 1
a29 1
all: passwd group hosts ethers networks rpc services protocols netid netgroup
d245 29
d284 1
d296 1
a296 1

@


1.6
log
@Add support for secure maps and master.passwd. -moj
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.yp,v 1.5 1996/05/30 09:53:17 deraadt Exp $
d16 1
d28 1
a28 1
all: passwd group hosts ethers networks rpc services protocols netid
d222 22
d253 1
d264 2
@


1.5
log
@$OpenBSD$ tag and few spelling errors
@
text
@d1 1
a1 1
#	$OpenBSD$
d20 7
d31 18
a48 1
		$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 | \
d50 2
a51 2
		{ print $$1, $$0 }' - | $(MAKEDBM) - passwd.byname; \
		$(CAT) $(>) | $(CUT) -d: -f1-4,8-10 |\
d53 1
a53 1
		{ print $$3, $$0 }' - | $(MAKEDBM) - passwd.byuid; \
d59 2
d239 1
@


1.4
log
@Added in stuff from 960121.  Fixed several bugs in ypxfr.
@
text
@d1 1
a1 2
#	from: @@(#)Makefile	5.6.1.2 (Berkeley) 5/8/91
#	$Id: Makefile.yp,v 1.7 1996/01/20 13:20:25 moj Exp $
@


1.3
log
@resurrect Makefile.yp
@
text
@d2 1
a2 1
#	$Id: Makefile.yp,v 1.1 1995/11/01 16:56:28 deraadt Exp $
d15 2
d18 2
a19 1
YPPUSH=$(ECHO) "YPPUSH Not Yet Implemented: "
d21 1
a21 1
all: passwd group hosts networks rpc services protocols 
d34 2
a35 2
			$(YPPUSH) passwd.byname; \
			$(YPPUSH) passwd.byuid; \
d56 2
a57 2
			$(YPPUSH) group.byname; \
			$(YPPUSH) group.bygid; \
d77 23
a99 2
			$(YPPUSH) hosts.byname; \
			$(YPPUSH) hosts.byaddr; \
d118 2
a119 2
			$(YPPUSH) networks.byname; \
			$(YPPUSH) networks.byaddr; \
d135 1
a135 1
			$(YPPUSH) rpc.bynumber; \
d152 1
a152 1
			$(YPPUSH) services.byname; \
d172 2
a173 2
			$(YPPUSH) protocols.bynumber; \
			$(YPPUSH) protocols.byname; \
d183 13
d199 1
d204 1
d208 1
d213 1
@


1.2
log
@Makefile.yp not here anymore
@
text
@d2 1
a2 1
#	$Id: Makefile.yp,v 1.1 1995/11/01 16:56:28 deraadt Exp deraadt $
@


1.1
log
@+ full set of ypserv tools that compile
@
text
@d2 1
a2 1
#	$Id: Makefile.yp,v 1.2 1994/08/17 23:11:22 moj Exp $
@
