head	1.17;
access;
symbols
	OPENBSD_5_8:1.16.0.26
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.18
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.22
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.20
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.16
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.16
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.12
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.12.0.8
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.4.0.18
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_9:1.4.0.16
	OPENBSD_2_8:1.4.0.14
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.12
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.10
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.17
date	2015.11.29.15.20.46;	author rpe;	state dead;
branches;
next	1.16;
commitid	t07fHICMiedEebSJ;

1.16
date	2009.10.27.23.59.58;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2006.04.03.05.01.23;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2005.05.14.02.32.33;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.14.02.30.40;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2003.07.18.22.58.56;	author david;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.21.58.26;	author maja;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.05.08.37.05;	author avsm;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.11.01.08.27;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	2002.07.19.02.38.40;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.28.22.05.58;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2002.03.26.02.22.41;	author ericj;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.19.09.01.29;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.09.11.19.47.35;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.26.21.26.36;	author maja;	state Exp;
branches;
next	1.2;

1.2
date	96.05.30.09.53.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.11.01.16.56.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Tedu stdethers and stdhosts from /usr/sbin, which are only used in Makefile.yp
for creating the hosts.byname, hosts.byaddr ethers.byname and ethers.byaddr YP
maps. Replace most of their functionality with sed/awk scripting directly in
Makefile.yp.

Suggested by and OK deraadt@@
Feedback from @@semarie
@
text
@/*	$OpenBSD: stdhosts.c,v 1.16 2009/10/27 23:59:58 deraadt Exp $ */

/*
 * Copyright (c) 1994 Mats O Jansson <moj@@stacken.kth.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>
#include <err.h>

static int
read_line(FILE *fp, char *buf, int size)
{
	int done = 0;

	do {
		while (fgets(buf, size, fp)) {
			int len = strlen(buf);

			done += len;
			if (len > 1 && buf[len-2] == '\\' &&
			    buf[len-1] == '\n') {
				int ch;

				buf += len - 2;
				size -= len - 2;
				*buf = '\n';
				buf[1] = '\0';

				/*
				 * Skip leading white space on next line
				 */
				while ((ch = getc(fp)) != EOF &&
				    isascii(ch) && isspace(ch))
					;
				(void) ungetc(ch, fp);
			} else
				return done;
		}
	} while (size > 0 && !feof(fp));
	return done;
}

int
main(int argc, char *argv[])
{
	char	 data_line[1024], *p, *k, *v;
	int	 line_no = 0, len;
	struct in_addr host_addr;
	FILE	*data_file;

	if (argc > 2) {
		fprintf(stderr, "usage: stdhosts [file]\n");
		exit(1);
	}

	if (argc == 2) {
		if ((data_file = fopen(argv[argc-1], "r")) == NULL)
			err(1, "error opening %s", argv[argc-1]);
	} else
		data_file = stdin;

	while (read_line(data_file, data_line, sizeof(data_line))) {
		line_no++;
		len = strlen(data_line);
		if (len > 0) {
			if (data_line[0] == '#')
				continue;
		}

		/*
		 * Check if we have the whole line
		 */
		if (data_line[len-1] != '\n') {
			if (argc == 2)
				fprintf(stderr,
				    "line %d in \"%s\" is too long",
				    line_no, argv[1]);
			else
				fprintf(stderr,
				    "line %d in \"stdin\" is too long", line_no);
		} else
			data_line[len-1] = '\0';

		p = (char *) &data_line;
		k = p;			/* save start of key */
		while (!isspace(*p))	/* find first "space" */
			p++;
		while (isspace(*p))	/* replace space with <NUL> */
			*p++ = '\0';

		v = p;			/* save start of value */
		while (*p != '\0')	/* find end of string */
			p++;

		if (inet_aton(k, &host_addr))
			printf("%s %s\n", inet_ntoa(host_addr), v);
	}
	return(0);
}
@


1.16
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.15 2006/04/03 05:01:23 deraadt Exp $ */
@


1.15
log
@spreading the lint love (very minimal things..)
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.14 2005/05/14 02:32:33 deraadt Exp $ */
a27 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.14 2005/05/14 02:32:33 deraadt Exp $";
#endif
@


1.14
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.13 2005/05/14 02:30:40 deraadt Exp $ */
d29 2
a30 2
#ifndef LINT
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.13 2005/05/14 02:30:40 deraadt Exp $";
d129 1
a129 1
			printf("%s %s\n", inet_ntoa(host_addr),v);
@


1.13
log
@bug introduced by me in 1.4
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.12 2003/07/18 22:58:56 david Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.12 2003/07/18 22:58:56 david Exp $";
d43 2
a44 1
static int read_line(FILE *fp, char *buf, int size)
d51 1
d56 1
d61 1
d79 3
a82 5
	char	 data_line[1024];
	int	 line_no = 0;
	int	 len;
	char	*p, *k, *v;
	struct in_addr host_addr;
d118 1
a118 1
		k = p;				/* save start of key */
@


1.12
log
@add missing includes
ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.11 2003/06/02 21:58:26 maja Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.11 2003/06/02 21:58:26 maja Exp $";
d120 1
a120 1
			*p = '\0'; p++;
@


1.11
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.10 2003/05/05 08:37:05 avsm Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.10 2003/05/05 08:37:05 avsm Exp $";
d38 1
@


1.10
log
@-Wall cleanup: trim unused vars, better err() message in stdhosts,
and constify rcsid[]

deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.9 2003/02/11 01:08:27 maja Exp $ */
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdhosts.c,v 1.9 2003/02/11 01:08:27 maja Exp $";
@


1.9
log
@Fix bug 3088 in a different way. Reported by bob at cemetery dot homeunix
dot org. -moj ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.8 2002/07/19 02:38:40 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.8 2002/07/19 02:38:40 deraadt Exp $";
d93 1
a93 1
			err(1, "");
@


1.8
log
@4344 lines of KNF diff
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.7 2002/03/28 22:05:58 fgsch Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.7 2002/03/28 22:05:58 fgsch Exp $";
d130 2
a131 2
		(void)inet_aton(k, &host_addr);
		printf("%s %s\n", inet_ntoa(host_addr),v);
@


1.7
log
@unbreak; deraadt@@ ok.
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.6 2002/03/26 02:22:41 ericj Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.6 2002/03/26 02:22:41 ericj Exp $";
d45 1
d47 1
a47 4
static int read_line(fp, buf, size)
FILE *fp;
char *buf;
int size;
d77 1
a77 3
main(argc, argv)
	int argc;
	char *argv[];
d96 1
a96 1
  
d107 1
a107 2
		 */ 

d125 1
a125 1
		
d127 1
a127 1
		while(*p != '\0')	/* find end of string */
@


1.6
log
@
check that the fopen didnt fail
deraadt@@ OK
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.5 2001/11/19 09:01:29 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.5 2001/11/19 09:01:29 deraadt Exp $";
d95 1
a95 1
	if (argc == 2)
d98 1
a98 1
	else
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.4 1997/09/11 19:47:35 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.4 1997/09/11 19:47:35 deraadt Exp $";
a84 1
	int	 usage = 0;
d90 1
a90 4
	if (argc > 2)
		usage++;

	if (usage) {
d96 2
a97 1
		data_file = fopen(argv[argc-1], "r");
@


1.4
log
@need string.h
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.3 1996/06/26 21:26:36 maja Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.3 1996/06/26 21:26:36 maja Exp $";
d58 1
a58 1
					buf[len-1] == '\n') {
d62 2
a63 1
				*buf = '\n'; buf[1] = '\0';
d68 2
a69 2
					isascii(ch) && isspace(ch))
						;
d71 1
a71 1
			} else {
a72 1
			}
a74 1

d79 3
a81 3
main (argc,argv)
int argc;
char *argv[];
d83 20
a102 24
  FILE	*data_file;
  char	 data_line[1024];
  int	 usage = 0;
  int	 line_no = 0;
  int	 len;
  char	*p,*k,*v;
  struct in_addr host_addr;

  if (argc > 2) {
    usage++;
  }

  if (usage) {
    fprintf(stderr,
	    "%s",
	    "usage: stdhosts [file]\n");
    exit(1);
  }

  if (argc == 2) {
    data_file = fopen(argv[argc-1], "r");
  } else {
    data_file = stdin;
  }
d104 7
a110 35
  while (read_line(data_file,data_line,sizeof(data_line))) {
    
    line_no++;
    len = strlen(data_line);
    
    if (len > 0) {
      if (data_line[0] == '#')
	continue;
    }

    /*
     * Check if we have the whole line
     */ 

    if (data_line[len-1] != '\n') {
      if (argc == 2) {
	fprintf(stderr, "line %d in \"%s\" is too long", line_no, argv[1]);
      } else {
	fprintf(stderr, "line %d in \"stdin\" is too long", line_no);
      }
    } else {
      data_line[len-1] = '\0';
    }

    p = (char *) &data_line;

    k  = p;					/* save start of key */
    while (!isspace(*p)) { p++; };		/* find first "space" */
    while (isspace(*p)) { *p = '\0'; p++; };	/* replace space with <NUL> */
    
    v = p;					/* save start of value */
    while(*p != '\0') { p++; };			/* find end of string */

    (void)inet_aton(k,&host_addr);
    printf("%s %s\n",inet_ntoa(host_addr),v);
d112 30
a141 4
  }

  return(0);
  
@


1.3
log
@Same copyright all over, removed my name from ypdb.[ch], small bugfix
in ypserv_db.c /moj
@
text
@d1 1
a1 1
/*	$OpenBSD: stdhosts.c,v 1.2 1996/05/30 09:53:14 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdhosts.c,v 1.2 1996/05/30 09:53:14 deraadt Exp $";
d43 1
@


1.2
log
@$OpenBSD$ tag and few spelling errors
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d15 5
a19 3
 * 3. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
d35 1
a35 1
static char rcsid[] = "$OpenBSD$";
@


1.1
log
@+ full set of ypserv tools that compile
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: stdhosts.c,v 1.1 1994/05/28 14:23:44 moj Exp $";
@
