head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.60
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.62
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.58
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.54
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.56
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.48
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.52
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.50
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.46
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.44
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.42
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.40
	OPENBSD_5_0:1.8.0.38
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.36
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.34
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.30
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.32
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.28
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.26
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.24
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.22
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.20
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.18
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.16
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.14
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.12
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.10
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.8
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.6
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2002.07.19.02.38.40;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.03.14.16.44.25;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.19.19.39.41;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.08.09.22.44.04;	author maja;	state Exp;
branches;
next	1.4;

1.4
date	97.07.25.20.12.30;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.05.30.09.53.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.20.00.30.42;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	95.11.01.16.56.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@4344 lines of KNF diff
@
text
@/*	$OpenBSD: yplog.c,v 1.7 2002/03/14 16:44:25 mpech Exp $ */

/*
 * Copyright (c) 1996 Charles D. Cranor
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Charles D. Cranor.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * yplog.c: replacement yplog routines for
 * Mats O Jansson's ypserv program, as added by
 * Chuck Cranor.
 */

#include <stdio.h>
#include <unistd.h>
#include <sys/types.h>
#include <sys/stat.h>
#include <stdarg.h>
#include "yplog.h"

static FILE	*logfp = NULL;		/* the log file */

/*
 * yplog(): like a printf, but to the log file.   does the flush
 * and data for you.
 */
void
yplog(const char *fmt, ...)
{
	va_list ap;

	va_start(ap, fmt);
	vyplog(fmt, ap);
	va_end(ap);
}

/*
 * vyplog() support routine for yplog()
 */
void
vyplog(const char *fmt, va_list ap)
{
	time_t t;

	if (logfp == NULL)
		return;
	(void)time(&t);
	fprintf(logfp,"%.15s ", ctime(&t) + 4);
	vfprintf(logfp, fmt, ap);
	fprintf(logfp,"\n");
	fflush(logfp);
}

/*
 * open log
 */
void
ypopenlog(void)
{
	static char logfn[] = "/var/yp/ypserv.log";

	if (access(logfn, W_OK) == -1)
		return;
	logfp = fopen("/var/yp/ypserv.log", "a");
	if (logfp == NULL)
		return;
	yplog("yplog opened");
}

/*
 * close log
 */
void
ypcloselog(void)
{
	if (logfp) {
		yplog("yplog closed");
		fclose(logfp);
		logfp = NULL;
	}
}
@


1.7
log
@kill more registers.

millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: yplog.c,v 1.6 2002/02/19 19:39:41 millert Exp $ */
d34 1
a34 1
 * yplog.c: replacement yplog routines for 
a51 1

a64 1

d66 1
a66 3
vyplog(fmt, ap)
	const char *fmt;
	va_list ap;
d68 1
a68 1
        time_t t;
a81 1

d83 1
a83 1
ypopenlog()
a97 1

d99 1
a99 1
ypcloselog()
@


1.6
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: yplog.c,v 1.5 1997/08/09 22:44:04 maja Exp $ */
d69 1
a69 1
	register const char *fmt;
@


1.5
log
@NetBSD PR/3504 reported by Brian Baird.

Do as the man page says. Don't create /var/yp/ypserv.log if it doesn't
exist. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: yplog.c,v 1.4 1997/07/25 20:12:30 mickey Exp $ */
a42 1
#ifdef __STDC__
a43 3
#else
#include <varargs.h>
#endif
a53 1
#ifdef __STDC__
a54 5
#else
yplog(fmt, va_alist)
	char *fmt;
	va_dcl
#endif
a57 1
#ifdef __STDC__
a58 3
#else
	va_start(ap);
#endif
@


1.4
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d1 1
a1 1
/*	$OpenBSD: yplog.c,v 1.3 1996/05/30 09:53:03 deraadt Exp $ */
d42 1
a42 1

d88 2
a89 1
	if (!logfp) return;
d104 4
d109 2
a110 1
	if (!logfp) return;
@


1.3
log
@$OpenBSD$ tag and few spelling errors
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d43 1
a43 1
#if __STDC__
d58 1
a58 1
#if __STDC__
d68 1
a68 1
#if __STDC__
@


1.2
log
@Total re-write of yplog by Chuck Cranor
(made it more printf like)
@
text
@d1 1
a1 1
/* $Id: xd.c,v 1.10 1995/12/11 12:40:20 pk Exp $ */
a3 1
 *
@


1.1
log
@+ full set of ypserv tools that compile
@
text
@d1 2
d4 2
a5 1
 * Copyright (c) 1994 Mats O Jansson <moj@@stacken.kth.se>
d16 5
a20 3
 * 3. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
d22 10
a31 11
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d34 5
a38 3
#ifndef LINT
static char rcsid[] = "$Id: yplog.c,v 1.1 1994/07/02 16:47:52 moj Exp $";
#endif
d41 1
a42 7
#include <sys/stat.h>
#include <unistd.h>
#include <strings.h>
#include <rpc/rpc.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
d44 13
a56 1
FILE	*yplogfile;
d59 7
a65 2
yplog_date(line)
	char *line;
d67 1
a67 2
	char datestr[20];
	time_t t;
d69 7
a75 6
	if (yplogfile != NULL) {
	  (void)time(&t);
	  (void)strftime(datestr,20,"%b %d %T",localtime(&t));
	  fprintf(yplogfile,"%s %s\n",datestr,line);
	  fflush(yplogfile);
	}
d78 3
a80 9
void
yplog_line(line)
	char *line;
{
	if (yplogfile != NULL) {
	  fprintf(yplogfile,"                %s\n",line);
	  fflush(yplogfile);
	}
}
d83 12
a94 7
yplog_str(line)
	char *line;
{
	if (yplogfile != NULL) {
	  fprintf(yplogfile,"                %s",line);
	  fflush(yplogfile);
	}
d97 3
a99 9
void
yplog_cat(line)
	char *line;
{
	if (yplogfile != NULL) {
	  fprintf(yplogfile,"%s",line);
	  fflush(yplogfile);
	}
}
d102 1
a102 2
yplog_call(transp)
	SVCXPRT *transp;
d104 3
a106 9
	struct sockaddr_in *caller;

	if (yplogfile != NULL) {
	  caller = svc_getcaller(transp);
	  fprintf(yplogfile,"                  caller: %s %d\n",
		  inet_ntoa(caller->sin_addr),
		  ntohs(caller->sin_port));
	  fflush(yplogfile);
	}
d109 3
a111 15
void
yplog_init(progname)
	char *progname;
{
	char file_path[255];
	struct stat finfo;

	sprintf(file_path,"/var/yp/%s.log",progname);
	if ((stat(file_path, &finfo) == 0) &&
	    ((finfo.st_mode & S_IFMT) == S_IFREG)) {
	  yplogfile = fopen(file_path,"a");
	  sprintf(file_path,"%s[%d] : started",progname,getpid());
	  yplog_date(file_path);
	}
}
d114 1
a114 1
yplog_exit()
d116 4
a119 3
	if (yplogfile != NULL) {
	  yplog_date("controlled shutdown");
	  fclose(yplogfile);
a121 1

@
