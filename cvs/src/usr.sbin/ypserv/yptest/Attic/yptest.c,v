head	1.19;
access;
symbols
	OPENBSD_5_8:1.18.0.26
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.18
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.22
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.20
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.16
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.14
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.12
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.10
	OPENBSD_5_0:1.18.0.8
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.6
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.4
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.2
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.16.0.16
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.12
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.10
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.8
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.6
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.4
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.2
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.7.0.18
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_9:1.7.0.16
	OPENBSD_2_8:1.7.0.14
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.12
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.10
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.8
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.6
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.7.0.4
	OPENBSD_2_3_BASE:1.7
	OPENBSD_2_2:1.7.0.2
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5;
locks; strict;
comment	@ * @;


1.19
date	2015.11.17.15.22.55;	author deraadt;	state dead;
branches;
next	1.18;
commitid	cynwnQHKmT0agONi;

1.18
date	2009.11.21.19.31.40;	author ian;	state Exp;
branches;
next	1.17;

1.17
date	2009.10.27.23.59.58;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2006.04.03.05.01.24;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.21.58.27;	author maja;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.05.08.37.05;	author avsm;	state Exp;
branches;
next	1.13;

1.13
date	2003.01.04.14.00.01;	author maja;	state Exp;
branches;
next	1.12;

1.12
date	2002.07.19.16.28.48;	author maja;	state Exp;
branches;
next	1.11;

1.11
date	2002.07.19.02.38.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2002.02.13.23.10.46;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2002.01.20.23.37.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.11.19.09.02.18;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.08.18.03.11.35;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.07.26.11.59.03;	author maja;	state Exp;
branches;
next	1.5;

1.5
date	96.06.26.21.26.40;	author maja;	state Exp;
branches;
next	1.4;

1.4
date	96.05.30.09.53.33;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.04.24.22.00.41;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.20.00.37.58;	author chuck;	state Exp;
branches;
next	1.1;

1.1
date	95.11.01.16.56.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@off to the bitbucket in the sky
@
text
@/*	$OpenBSD: yptest.c,v 1.18 2009/11/21 19:31:40 ian Exp $ */

/*
 * Copyright (c) 1994 Mats O Jansson <moj@@stacken.kth.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <unistd.h>
#include <string.h>
#include <rpc/rpc.h>
#include <rpc/xdr.h>
#include <rpcsvc/yp.h>
#include <rpcsvc/ypclnt.h>

static int
yptest_foreach(u_long status, char *key, int keylen, char *val, int vallen,
    void *data)
{
	if (status == 2)
		return(0);

	key[keylen] = '\0';
	val[vallen] = '\0';
	printf("%s %s\n", key, val);
	return 0;
}

int
main(int argc, char *argv[])
{
	char *Domain, *Value, *Key2;
	char *Map = "hosts.byname", *Key = "localhost";
	int ValLen, Status, Order, KeyLen;
	struct ypall_callback Callback;
	struct ypmaplist *ypml, *y;

	Status = yp_get_default_domain(&Domain);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));

	printf("Test 1: yp_match %s %s\n", Key, Map);
	KeyLen = strlen(Key);
	Status = yp_match(Domain, Map, Key, KeyLen, &Value, &ValLen);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));
	else
		printf("%*.*s\n", ValLen, ValLen, Value);

	printf("\nTest 2: yp_first\n");
	Status = yp_first(Domain, Map, &Key2, &KeyLen, &Value, &ValLen);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));
	else
		printf("%*.*s %*.*s\n", KeyLen, KeyLen, Key2, ValLen, ValLen, Value);

	printf("\nTest 3: yp_next\n");
	while (Status == 0) {
		Status = yp_next(Domain, Map, Key2, KeyLen, &Key2,
		    &KeyLen, &Value, &ValLen);
		if (Status)
			printf("yp error: %s\n", yperr_string(Status));
		else
			printf("%*.*s %*.*s\n", KeyLen, KeyLen, Key2,
			    ValLen, ValLen, Value);
	}

	printf("\nTest 4: yp_master\n");
	Status = yp_master(Domain, Map, &Key2);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));
	else
		printf("%s\n", Key2);

	printf("\nTest 5: yp_order\n");
	Status = yp_order(Domain, Map, &Order);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));
	else
		printf("%d\n", Order);

	printf("\nTest 6: yp_maplist\n");
	ypml = NULL;
	switch (yp_maplist(Domain, &ypml)) {
	case 0:
		for (y = ypml; y; ) {
			ypml = y;
			printf("%s\n", ypml->map);
			y = ypml->next;
		}
		break;
	default:
		printf("yp error: %s\n", yperr_string(Status));
		break;
	}

	printf("\nTest 7: yp_all\n");
	Callback.foreach = yptest_foreach;
	Status = yp_all(Domain, Map, &Callback);
	if (Status)
		printf("yp error: %s\n", yperr_string(Status));
	return 0;
}
@


1.18
log
@MIN_UID in yp make removes root, so look for something that is
still likely: localhost in hosts map. ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.17 2009/10/27 23:59:58 deraadt Exp $ */
@


1.17
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.16 2006/04/03 05:01:24 deraadt Exp $ */
d54 1
a54 1
	char *Map = "passwd.byname", *Key = "root";
d63 1
a63 1
	printf("Test 1: yp_match\n");
@


1.16
log
@spreading the lint love (very minimal things..)
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.15 2003/06/02 21:58:27 maja Exp $ */
a27 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: yptest.c,v 1.15 2003/06/02 21:58:27 maja Exp $";
#endif
@


1.15
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.14 2003/05/05 08:37:05 avsm Exp $ */
d29 2
a30 2
#ifndef LINT
static const char rcsid[] = "$OpenBSD: yptest.c,v 1.14 2003/05/05 08:37:05 avsm Exp $";
@


1.14
log
@-Wall cleanup: trim unused vars, better err() message in stdhosts,
and constify rcsid[]

deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.13 2003/01/04 14:00:01 maja Exp $ */
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: yptest.c,v 1.13 2003/01/04 14:00:01 maja Exp $";
@


1.13
log
@Remove some debug output. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.12 2002/07/19 16:28:48 maja Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.12 2002/07/19 16:28:48 maja Exp $";
@


1.12
log
@Remove swedish comment. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.11 2002/07/19 02:38:40 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.11 2002/07/19 02:38:40 deraadt Exp $";
a68 3
	printf("Status %d\n", Status);
	printf("dom %s\n", Domain);
	printf("dom %d\n", Domain[0]);
@


1.11
log
@4344 lines of KNF diff
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.10 2002/02/13 23:10:46 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.10 2002/02/13 23:10:46 deraadt Exp $";
a52 2
	/* key avslutas med NUL */
	/* val avslutas med NUL */
@


1.10
log
@some more KNF and -Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.9 2002/01/20 23:37:27 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.9 2002/01/20 23:37:27 deraadt Exp $";
d47 2
a48 3
yptest_foreach(status, key, keylen, val, vallen, data)
int status, keylen, vallen;
char *key, *val, *data;
d52 1
d62 1
a62 3
main(argc, argv)
	int argc;
	char *argv[];
d64 3
a66 9
	char *Domain;
	char *Map = "passwd.byname";
	char *Key = "root";
	int	 KeyLen;
	char *Value;
	char *Key2;
	int	 ValLen;
	int	 Status;
	int	 Order;
d71 3
a73 3
printf("Status %d\n", Status);
printf("dom %s\n", Domain);
printf("dom %d\n", Domain[0]);
d76 1
a76 1
	
d84 1
a84 1
	
d119 1
a119 1
	switch(yp_maplist(Domain, &ypml)) {
d121 1
a121 1
		for(y = ypml; y; ) {
@


1.9
log
@do not dump core if errors; instead report issue
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.8 2001/11/19 09:02:18 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.8 2001/11/19 09:02:18 deraadt Exp $";
d61 1
d145 1
@


1.8
log
@KNFightmare
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.7 1997/08/18 03:11:35 millert Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.7 1997/08/18 03:11:35 millert Exp $";
d77 6
a82 1
	yp_get_default_domain(&Domain);
d87 4
a90 1
	printf("%*.*s\n", ValLen, ValLen, Value);
d94 4
a97 1
	printf("%*.*s %*.*s\n", KeyLen, KeyLen, Key2, ValLen, ValLen, Value);
d103 3
a105 1
		if (Status == 0)
d112 4
a115 1
	printf("%s\n", Key2);
d119 4
a122 1
	printf("%d\n", Order);
d133 4
d142 2
@


1.7
log
@#include <string.h> not <strings.h> -- Yes, I'm a weanie...
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.6 1997/07/26 11:59:03 maja Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.6 1997/07/26 11:59:03 maja Exp $";
d47 3
a49 3
yptest_foreach(status,key,keylen,val,vallen,data)
int status,keylen,vallen;
char *key,*val,*data;
d51 8
a58 8
  if (status == 2)
    return(0);
  /* key avslutas med NUL */
  /* val avslutas med NUL */
  key[keylen] = '\0';
  val[vallen] = '\0';
  printf("%s %s\n",key,val);
  return 0;
d61 3
a63 1
main()
d65 30
a94 47
  char *Domain;
  char *Map = "passwd.byname";
  char *Key = "root";
  int   KeyLen;
  char *Value;
  char *Key2;
  int   ValLen;
  int   Status;
  int   Order;
  struct ypall_callback Callback;
  struct ypmaplist *ypml,*y;

  yp_get_default_domain(&Domain);
  
  printf("Test 1: yp_match\n");
  KeyLen = strlen(Key);
  Status = yp_match(Domain,Map,Key,KeyLen,&Value,&ValLen);
  printf("%*.*s\n",ValLen,ValLen,Value);
  
  printf("\nTest 2: yp_first\n");
  Status = yp_first(Domain,Map,&Key2,&KeyLen,&Value,&ValLen);
  printf("%*.*s %*.*s\n",KeyLen,KeyLen,Key2,ValLen,ValLen,Value);

  printf("\nTest 3: yp_next\n");
  while (Status == 0) {
    Status = yp_next(Domain,Map,Key2,KeyLen,&Key2,&KeyLen,&Value,&ValLen);
    if (Status == 0) {
      printf("%*.*s %*.*s\n",KeyLen,KeyLen,Key2,ValLen,ValLen,Value);
    }
  }

  printf("\nTest 4: yp_master\n");
  Status = yp_master(Domain,Map,&Key2);
  printf("%s\n",Key2);

  printf("\nTest 5: yp_order\n");
  Status = yp_order(Domain,Map,&Order);
  printf("%d\n",Order);

  printf("\nTest 6: yp_maplist\n");
  ypml = NULL;
  switch(yp_maplist(Domain, &ypml)) {
  case 0:
  	for(y=ypml; y; ) {
		ypml=y;
		printf("%s\n",ypml->map);
		y=ypml->next;
a95 1
  }
d97 22
a118 3
  printf("\nTest 7: yp_all\n");
  Callback.foreach=yptest_foreach;
  Status = yp_all(Domain,Map,&Callback);
a119 1

@


1.6
log
@bug killed in NetBSD by thorpej.
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.5 1996/06/26 21:26:40 maja Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.5 1996/06/26 21:26:40 maja Exp $";
d40 1
a40 1
#include <strings.h>
@


1.5
log
@Same copyright all over, removed my name from ypdb.[ch], small bugfix
in ypserv_db.c /moj
@
text
@d1 1
a1 1
/*	$OpenBSD: yptest.c,v 1.4 1996/05/30 09:53:33 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: yptest.c,v 1.4 1996/05/30 09:53:33 deraadt Exp $";
d48 2
a49 2
int status,keylen,vallen,*data;
char *key,*val;
@


1.4
log
@$OpenBSD$ tag and few spelling errors
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d15 5
a19 3
 * 3. The name of the author may not be used to endorse or promote
 *    products derived from this software without specific prior written
 *    permission.
d35 1
a35 1
static char rcsid[] = "$OpenBSD$";
@


1.3
log
@use yp.h instead of yp_prot.h
@
text
@d1 2
d33 1
a33 1
static char rcsid[] = "$Id: yptest.c,v 1.2 1996/01/20 00:37:58 chuck Exp $";
@


1.2
log
@fixed string formatting, minor cleanup
@
text
@d31 1
a31 1
static char rcsid[] = "$Id: yptest.c,v 1.1 1995/11/01 16:56:40 deraadt Exp $";
d39 1
a39 1
#include <rpcsvc/yp_prot.h>
d104 2
a105 2
		printf("%s\n",ypml->ypml_name);
		y=ypml->ypml_next;
@


1.1
log
@+ full set of ypserv tools that compile
@
text
@d31 1
a31 1
static char rcsid[] = "$Id: yptest.c,v 1.0 1994/08/26 21:56:04 moj Exp $";
d76 1
a76 2
  printf("%*.*s\n",ValLen-1,ValLen-1,Value);
  /* yp_match: Value is terminated with LF NUL */
d80 1
a80 3
  printf("%*.*s %*.*s\n",KeyLen-1,KeyLen-1,Key2,ValLen-1,ValLen-1,Value);
  /* yp_first: Value is terminated with LF NUL */
  /*           Key2 is terminated with LF NUL */
a82 1
  
d86 1
a86 1
      printf("%*.*s %*.*s\n",KeyLen-1,KeyLen-1,Key2,ValLen,ValLen,Value);
a87 2
    /* yp_next: Value is terminated with LF NUL */
    /*          Key2 is terminated with LF NUL */
a90 1
  
a92 1
  /* yp_master: Key2 is terminated with NUL */
a107 1
  
@
