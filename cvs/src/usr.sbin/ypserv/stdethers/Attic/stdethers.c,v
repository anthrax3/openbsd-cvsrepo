head	1.16;
access;
symbols
	OPENBSD_5_8:1.15.0.26
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.18
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.22
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.20
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.16
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.14
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.12
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.10
	OPENBSD_5_0:1.15.0.8
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.6
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.4
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.2
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.14.0.16
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.12
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.10
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.8
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.6
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.4
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.2
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.16
date	2015.11.29.15.20.46;	author rpe;	state dead;
branches;
next	1.15;
commitid	t07fHICMiedEebSJ;

1.15
date	2009.10.27.23.59.58;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2006.04.03.05.01.23;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2005.05.14.02.32.33;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.28.06.19.58;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2003.07.18.22.58.56;	author david;	state Exp;
branches;
next	1.10;

1.10
date	2003.07.15.06.10.46;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.21.58.26;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.05.08.37.05;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.03.13.09.09.51;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.07.19.20.59.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.07.19.02.38.40;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.19.09.01.29;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.09.11.19.47.33;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.30.09.53.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.03.02.03.01.37;	author dm;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Tedu stdethers and stdhosts from /usr/sbin, which are only used in Makefile.yp
for creating the hosts.byname, hosts.byaddr ethers.byname and ethers.byaddr YP
maps. Replace most of their functionality with sed/awk scripting directly in
Makefile.yp.

Suggested by and OK deraadt@@
Feedback from @@semarie
@
text
@/*	$OpenBSD: stdethers.c,v 1.15 2009/10/27 23:59:58 deraadt Exp $ */

/*
 * Copyright (c) 1995 Mats O Jansson <moj@@stacken.kth.se>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/socket.h>
#include <net/if.h>
#include <netinet/in.h>
#include <netinet/if_ether.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <ctype.h>

#ifndef NTOA_FIX
#define	NTOA(x) (char *)ether_ntoa(x)
#else
#define NTOA(x) (char *) working_ntoa((u_char *) x)

/* As of 1995-12-02 NetBSD and OpenBSD has an SunOS 4 incompatible ether_ntoa.
   The code in usr/lib/libc/net/ethers seems to do the correct thing
   when asking YP but not when returning string from ether_ntoa.
 */

static char *
working_ntoa(u_char *e)
{
	static char a[] = "xx:xx:xx:xx:xx:xx";

	snprintf(a, sizeof a, "%x:%x:%x:%x:%x:%x",
	    e[0], e[1], e[2], e[3], e[4], e[5]);
	return a;
}
#endif

static int
read_line(FILE *fp, char *buf, int size)
{
	int done = 0;

	do {
		while (fgets(buf, size, fp)) {
			int len = strlen(buf);

			done += len;
			if (len > 1 && buf[len-2] == '\\' &&
			    buf[len-1] == '\n') {
				int ch;

				buf += len - 2;
				size -= len - 2;
				*buf = '\n';
				buf[1] = '\0';

				/*
				 * Skip leading white space on next line
				 */
				while ((ch = getc(fp)) != EOF &&
				    isascii(ch) && isspace(ch))
					;
				(void) ungetc(ch, fp);
			} else
				return done;
		}
	} while (size > 0 && !feof(fp));
	return (done);
}

static void
usage(void)
{
	fprintf(stderr, "usage: stdethers [file]\n");
	exit(1);
}

int
main(int argc, char *argv[])
{
	FILE	*data_file;
	char	 data_line[1024];
	int	 line_no = 0;
	int	 len;
	char	*p, *k, *v;
	struct ether_addr eth_addr;
	char	 hostname[256];

	if (argc > 2)
		usage();

	if (argc == 2) {
		data_file = fopen(argv[1], "r");
		if (data_file == NULL) {
			fprintf(stderr, "stdethers: can't open %s\n",
			    argv[1]);
			exit(1);
		}
	} else
		data_file = stdin;

	while (read_line(data_file, data_line, sizeof(data_line))) {
		line_no++;
		len = strlen(data_line);

		if (len > 0) {
			if (data_line[0] == '#')
				continue;
		}

		/*
		 * Check if we have the whole line
		 */
		if (data_line[len-1] != '\n') {
			if (argc == 2)
				fprintf(stderr,
				    "line %d in \"%s\" is too long",
				    line_no, argv[1]);
			else
				fprintf(stderr,
				    "line %d in \"stdin\" is too long",
				    line_no);
		} else
			data_line[len-1] = '\0';

		p = (char *) &data_line;

		k = p;				/* save start of key */
		while (!isspace(*p))		/* find first "space" */
			p++;
		while (isspace(*p))		/* move over "space" */
			p++;

		v = p;				/* save start of value */
		while (*p != '\0')		/* find end of string */
			p++;

		if (ether_line(data_line, &eth_addr, hostname) == 0)
			fprintf(stdout, "%s\t%s\n", NTOA(&eth_addr),
			    hostname);
		else
			fprintf(stderr, "stdethers: ignoring line %d: \"%s\"\n",
			    line_no, data_line);
	}
	return(0);
}
@


1.15
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.14 2006/04/03 05:01:23 deraadt Exp $ */
@


1.14
log
@spreading the lint love (very minimal things..)
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.13 2005/05/14 02:32:33 deraadt Exp $ */
a27 4

#ifndef lint
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.13 2005/05/14 02:32:33 deraadt Exp $";
#endif
@


1.13
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.12 2005/03/28 06:19:58 tedu Exp $ */
d29 2
a30 2
#ifndef LINT
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.12 2005/03/28 06:19:58 tedu Exp $";
@


1.12
log
@add some const to ether_*.  remove bonus prototypes this brought out.
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.11 2003/07/18 22:58:56 david Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.11 2003/07/18 22:58:56 david Exp $";
d141 1
a141 1
			if (argc == 2) {
d145 1
a145 1
			} else {
a148 1
			}
d154 1
a154 1
		k  = p;				/* save start of key */
d164 1
a164 1
		if (ether_line(data_line, &eth_addr, hostname) == 0) {
d167 1
a167 1
		} else {
a169 1
		}
@


1.11
log
@add missing includes
ok tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.10 2003/07/15 06:10:46 deraadt Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.10 2003/07/15 06:10:46 deraadt Exp $";
a41 3

extern int   ether_line(char *, struct ether_addr *, char *);
extern char *ether_ntoa(struct ether_addr *);
@


1.10
log
@protos and repairs
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.9 2003/06/02 21:58:26 maja Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.9 2003/06/02 21:58:26 maja Exp $";
d39 1
@


1.9
log
@remove clause 3 and 4. -moj
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.8 2003/05/05 08:37:05 avsm Exp $ */
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.8 2003/05/05 08:37:05 avsm Exp $";
d55 1
a55 1
char *
d99 1
a99 1
void
@


1.8
log
@-Wall cleanup: trim unused vars, better err() message in stdhosts,
and constify rcsid[]

deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.7 2003/03/13 09:09:51 deraadt Exp $ */
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mats O Jansson
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d30 1
a30 1
static const char rcsid[] = "$OpenBSD: stdethers.c,v 1.7 2003/03/13 09:09:51 deraadt Exp $";
@


1.7
log
@lots of sprintf -> snprintf and strcpy -> strlcpy; checked by tedu
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.6 2002/07/19 20:59:40 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdethers.c,v 1.6 2002/07/19 20:59:40 deraadt Exp $";
@


1.6
log
@bunch more careful tweaks
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.5 2002/07/19 02:38:40 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdethers.c,v 1.5 2002/07/19 02:38:40 deraadt Exp $";
d65 1
a65 1
	sprintf(a, "%x:%x:%x:%x:%x:%x",
@


1.5
log
@4344 lines of KNF diff
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.4 2001/11/19 09:01:29 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdethers.c,v 1.4 2001/11/19 09:01:29 deraadt Exp $";
a46 2
char *ProgramName = "stdethers";

d79 1
d101 8
a108 1
	return done;
a115 1
	int	 usage = 0;
d123 1
a123 6
		usage++;

	if (usage) {
		fprintf(stderr, "usage: %s [file]\n", ProgramName);
		exit(1);
	}
d128 2
a129 2
			fprintf(stderr, "%s: can't open %s\n",
			    ProgramName, argv[1]);
d176 2
a177 2
			fprintf(stderr, "%s: ignoring line %d: \"%s\"\n",
			    ProgramName, line_no, data_line);
@


1.4
log
@KNF
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.3 1997/09/11 19:47:33 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdethers.c,v 1.3 1997/09/11 19:47:33 deraadt Exp $";
d63 1
a63 2
working_ntoa(e)
	u_char	*e;
d73 2
a74 4
static int read_line(fp, buf, size)
FILE *fp;
char *buf;
int size;
d85 1
d106 1
a106 3
main(argc, argv)
	int argc;
	char *argv[];
d116 1
a116 1
	
d119 1
a119 1
	
d124 1
a124 1
	
d134 1
a134 1
	
d138 1
a138 1
		
d143 1
a143 1
		
d146 1
a146 1
		 */ 
d159 1
a159 1
		
d161 1
a161 1
		
d167 1
a167 1
		
d169 1
a169 1
		while(*p != '\0')		/* find end of string */
d171 1
a171 1
		
@


1.3
log
@need string.h
@
text
@d1 1
a1 1
/*	$OpenBSD: stdethers.c,v 1.2 1996/05/30 09:53:12 deraadt Exp $ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD: stdethers.c,v 1.2 1996/05/30 09:53:12 deraadt Exp $";
d69 1
a69 1
		e[0], e[1], e[2], e[3], e[4], e[5]);
d86 1
a86 1
					buf[len-1] == '\n') {
d90 3
a92 1
				*buf = '\n'; buf[1] = '\0';
d97 2
a98 2
					isascii(ch) && isspace(ch))
						;
d100 1
a100 1
			} else {
a101 1
			}
a103 1

d108 3
a110 3
main (argc,argv)
int argc;
char *argv[];
d117 1
a117 1
	char	*p,*k,*v;
d121 1
a121 1
	if (argc > 2) {
a122 1
	}
d125 1
a125 3
		fprintf(stderr,
			"usage: %s [file]\n",
			ProgramName);
d132 2
a133 4
			fprintf(stderr,
				"%s: can't open %s\n",
				ProgramName,
				argv[1]);
d136 1
a136 1
	} else {
a137 1
	}
d139 1
a139 2
	while (read_line(data_file,data_line,sizeof(data_line))) {
		
a150 1
		
d154 2
a155 2
					"line %d in \"%s\" is too long",
					line_no, argv[1]);
d158 2
a159 2
					"line %d in \"stdin\" is too long",
					line_no);
d161 1
a161 1
		} else {
a162 1
		}
d167 4
a170 2
		while (!isspace(*p)) { p++; };	/* find first "space" */
		while (isspace(*p)) { p++; };	/* move over "space" */
d173 2
a174 1
		while(*p != '\0') { p++; };	/* find end of string */
d177 2
a178 3
			fprintf(stdout, "%s\t%s\n",
				NTOA(&eth_addr),
				hostname);
d180 2
a181 5
			fprintf(stderr,
				"%s: ignoring line %d: \"%s\"\n",
				ProgramName,
				line_no,
				data_line);
a183 1
	
a184 1
	
@


1.2
log
@$OpenBSD$ tag and few spelling errors
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d35 1
a35 1
static char rcsid[] = "$OpenBSD$";
d44 1
@


1.1
log
@Added in stuff from 960121.  Fixed several bugs in ypxfr.
@
text
@d1 2
d35 1
a35 1
static char rcsid[] = "$Id: stdethers.c,v 1.3 1995/12/02 22:39:02 moj Exp $";
@
