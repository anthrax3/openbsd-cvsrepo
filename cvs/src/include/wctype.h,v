head	1.6;
access;
symbols
	OPENBSD_6_1:1.5.0.48
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.44
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.40
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.42
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.34
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.38
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.36
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.32
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.30
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.28
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.26
	OPENBSD_5_0:1.5.0.24
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.22
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.20
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.16
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.18
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.14
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.12
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.10
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4;
locks; strict;
comment	@ * @;


1.6
date	2017.09.05.03.16.13;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	ngpX0SPDX30tzjDf;

1.5
date	2006.01.06.18.53.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2005.07.01.08.59.27;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.30.09.14.23;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.14.20.59.10;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@New POSIX xlocale implementation written from scratch.
Complete in the sense that all POSIX *locale(3) and *_l(3) functions
are included, but in OpenBSD, we of course only really care about
LC_CTYPE and we only support ASCII and UTF-8.

With important help from kettenis@@, guenther@@, and jca@@.
Repeated testing in ports bulk builds by naddy@@.
Additional testing by jca@@, sebastia@@, dcoppa@@, and others.
OK kettenis@@ dcoppa@@, and guenther@@ on an earlier version.
Riding guenther@@'s libc/librthread major bump.
@
text
@/*	$OpenBSD: wctype.h,v 1.5 2006/01/06 18:53:04 millert Exp $	*/
/*	$NetBSD: wctype.h,v 1.5 2003/03/02 22:18:11 tshiozak Exp $	*/

/*-
 * Copyright (c)1999 Citrus Project,
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	citrus Id: wctype.h,v 1.4 2000/12/21 01:50:21 itojun Exp
 */

#ifndef _WCTYPE_H_
#define	_WCTYPE_H_

#include <sys/cdefs.h>
#include <machine/_types.h>

#ifndef	_WINT_T_DEFINED_
#define	_WINT_T_DEFINED_
typedef	__wint_t    wint_t;
#endif

#ifndef	_WCTRANS_T_DEFINED_
#define	_WCTRANS_T_DEFINED_
typedef	__wctrans_t	wctrans_t;
#endif

#ifndef	_WCTYPE_T_DEFINED_
#define	_WCTYPE_T_DEFINED_
typedef	__wctype_t	wctype_t;
#endif

#ifndef WEOF
#define	WEOF	((wint_t)-1)
#endif

#if __POSIX_VISIBLE >= 200809
#ifndef	_LOCALE_T_DEFINED_
#define	_LOCALE_T_DEFINED_
typedef void	*locale_t;
#endif
#endif

__BEGIN_DECLS
int	iswalnum(wint_t);
int	iswalpha(wint_t);
int	iswblank(wint_t);
int	iswcntrl(wint_t);
int	iswdigit(wint_t);
int	iswgraph(wint_t);
int	iswlower(wint_t);
int	iswprint(wint_t);
int	iswpunct(wint_t);
int	iswspace(wint_t);
int	iswupper(wint_t);
int	iswxdigit(wint_t);
int	iswctype(wint_t, wctype_t);
wint_t	towctrans(wint_t, wctrans_t);
wint_t	towlower(wint_t);
wint_t	towupper(wint_t);
wctrans_t wctrans(const char *);
wctype_t wctype(const char *);

#if __POSIX_VISIBLE >= 200809
int	iswalnum_l(wint_t, locale_t);
int	iswalpha_l(wint_t, locale_t);
int	iswblank_l(wint_t, locale_t);
int	iswcntrl_l(wint_t, locale_t);
int	iswdigit_l(wint_t, locale_t);
int	iswgraph_l(wint_t, locale_t);
int	iswlower_l(wint_t, locale_t);
int	iswprint_l(wint_t, locale_t);
int	iswpunct_l(wint_t, locale_t);
int	iswspace_l(wint_t, locale_t);
int	iswupper_l(wint_t, locale_t);
int	iswxdigit_l(wint_t, locale_t);
int	iswctype_l(wint_t, wctype_t, locale_t);
wint_t	towctrans_l(wint_t, wctrans_t, locale_t);
wint_t	towlower_l(wint_t, locale_t);
wint_t	towupper_l(wint_t, locale_t);
wctrans_t wctrans_l(const char *, locale_t);
wctype_t wctype_l(const char *, locale_t);
#endif

__END_DECLS

#endif		/* _WCTYPE_H_ */
@


1.5
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: wctype.h,v 1.4 2005/07/01 08:59:27 espie Exp $	*/
d57 7
d83 22
@


1.4
log
@Add a few missing functions so that wctype.h/wchar.h are more or less
uptodate, namely, wcsto(u)l(l) family, wcstod, stubs from wctrans/towctrans

crank minor.

okay millert@@, jmc@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: wctype.h,v 1.3 2005/05/11 18:44:12 espie Exp $	*/
d36 1
a36 1
#include <machine/ansi.h>
d38 3
a40 3
#ifdef	_BSD_WINT_T_
typedef	_BSD_WINT_T_    wint_t;
#undef	_BSD_WINT_T_
d43 3
a45 3
#ifdef	_BSD_WCTRANS_T_
typedef	_BSD_WCTRANS_T_	wctrans_t;
#undef	_BSD_WCTRANS_T_
d48 3
a50 3
#ifdef	_BSD_WCTYPE_T_
typedef	_BSD_WCTYPE_T_	wctype_t;
#undef	_BSD_WCTYPE_T_
@


1.3
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
/*	$OpenBSD: wctype.h,v 1.2 2005/04/30 09:14:23 espie Exp $	*/
d70 2
d74 2
a75 2
int	iswctype(wint_t, wctype_t);
wctype_t	wctype(const char *);
@


1.2
log
@isw* classification functions from citrus, with a `stub' implementation
for the default locale.

comments, tests, okay: kettenis@@, otto@@, jmc@@

functions addition -> Minor bump.

There's a large bump coming in a separate commit.
@
text
@d1 1
a1 1
/*	$OpenBSD: wctype.h,v 1.1 2005/04/14 20:59:10 espie Exp $	*/
d72 2
@


1.1
log
@introduce some wchar functions (from citrus and an itojun@@ diff)
okay deraadt@@, cloder@@, pvalchev@@
thanks to everyone who commented on that.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d56 17
@

