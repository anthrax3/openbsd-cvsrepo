head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.2
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2016.09.04.14.51.39;	author nicm;	state Exp;
branches;
next	1.3;
commitid	wVl0awA8w4AsBTm4;

1.3
date	2016.09.04.11.53.23;	author nicm;	state Exp;
branches;
next	1.2;
commitid	SpXdcEkPFhE7tFqe;

1.2
date	2015.11.18.17.59.56;	author tedu;	state Exp;
branches;
next	1.1;
commitid	d8rULDb44lVSWNos;

1.1
date	2015.11.18.16.46.49;	author tedu;	state Exp;
branches;
next	;
commitid	qwCbuLFcJROPeipS;


desc
@@


1.4
log
@Make the key sizes and offsets arrays const, ok tedu
@
text
@/* $OpenBSD: icdb.h,v 1.3 2016/09/04 11:53:23 nicm Exp $ */
/*
 * Copyright (c) 2015 Ted Unangst <tedu@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _ICDB_H_
#define _ICDB_H_

#include <sys/types.h>

__BEGIN_DECLS

struct icdb;

struct icdb *icdb_new(uint32_t version, uint32_t nentries, uint32_t entrysize,
    uint32_t nkeys, const uint32_t *keysizes, const uint32_t *keyoffsets);

struct icdb *icdb_open(const char *name, int flags, uint32_t version);
int icdb_get(struct icdb *db, void *entry, uint32_t idx);
int icdb_lookup(struct icdb *db, int keynum, const void *key, void *entry,
    uint32_t *idxp);
int icdb_nentries(struct icdb *db);
const void *icdb_entries(struct icdb *db);
int icdb_update(struct icdb *db, const void *entry, int offset);
int icdb_add(struct icdb *db, const void *entry);
int icdb_rehash(struct icdb *db);
int icdb_save(struct icdb *db, int fd);
int icdb_close(struct icdb *db);

__END_DECLS

#endif /* !_ICDB_H_ */
@


1.3
log
@Add the usual header stuff (#ifdef _ICDB_H_ etc) to icdb.h, ok tedu
@
text
@d1 1
a1 1
/* $OpenBSD: icdb.h,v 1.2 2015/11/18 17:59:56 tedu Exp $ */
d28 1
a28 1
    uint32_t nkeys, uint32_t *keysizes, uint32_t *keyoffsets);
@


1.2
log
@add a version field to prevent mayhem if different data gets stored
@
text
@d1 1
a1 1
/* $OpenBSD: icdb.h,v 1.1 2015/11/18 16:46:49 tedu Exp $ */
d18 6
d26 1
a26 1
	
d41 4
@


1.1
log
@Add icdb, the internal c database. A simpler replacement for the old
Berzerkeley DB code.
@
text
@d1 1
a1 1
/* $OpenBSD: rebound.c,v 1.28 2015/10/26 12:24:48 tedu Exp $ */
d21 1
a21 1
struct icdb *icdb_new(uint32_t nentries, uint32_t entrysize,
d24 1
a24 1
struct icdb *icdb_open(const char *name, int flags);
@

