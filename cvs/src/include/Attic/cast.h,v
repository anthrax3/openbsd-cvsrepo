head	1.3;
access;
symbols
	OPENBSD_4_8:1.2.0.50
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.46
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.48
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.44
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.42
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.40
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.38
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.36
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.34
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.32
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.30
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.28
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.26
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.24
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.22
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.20
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.18
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.16
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2010.10.28.08.34.37;	author mikeb;	state dead;
branches;
next	1.2;

1.2
date	98.07.21.22.42.01;	author provos;	state Exp;
branches;
next	1.1;

1.1
date	98.07.21.22.23.17;	author provos;	state Exp;
branches;
next	;


desc
@@


1.3
log
@remove skipjack and cast from the libc;  ok deraadt
@
text
@/*      $OpenBSD: cast.h,v 1.2 1998/07/21 22:42:01 provos Exp $       */
/*
 *	CAST-128 in C
 *	Written by Steve Reid <sreid@@sea-to-sky.net>
 *	100% Public Domain - no warranty
 *	Released 1997.10.11
 */

#ifndef _CAST_H_
#define _CAST_H_

typedef struct {
	u_int32_t xkey[32];	/* Key, after expansion */
	int rounds;		/* Number of rounds to use, 12 or 16 */
} cast_key;

void cast_setkey(cast_key* key, u_int8_t* rawkey, int keybytes);
void cast_encrypt(cast_key* key, u_int8_t* inblock, u_int8_t* outblock);
void cast_decrypt(cast_key* key, u_int8_t* inblock, u_int8_t* outblock);

#endif /* ifndef _CAST_H_ */

@


1.2
log
@s/u8/u_int8_t/, s/u32/u_int32_t, put castsb.h into cast.c and include
header files from the correct path.
@
text
@d1 1
a1 1
/*      $OpenBSD: cast.h,v 1.1 1998/07/21 22:23:17 provos Exp $       */
@


1.1
log
@Add CAST encryption, implementation by Steve Reid <sreid@@sea-to-sky.net>.
Man pages will come soon, I hope.
@
text
@d1 1
a1 1
/*      $OpenBSD: ip_cast.h,v 1.1 1997/11/04 09:11:06 provos Exp $       */
a11 3
typedef unsigned char u8;	/* 8-bit unsigned */
typedef unsigned long u32;	/* 32-bit unsigned */

d13 1
a13 1
	u32 xkey[32];	/* Key, after expansion */
d17 3
a19 3
void cast_setkey(cast_key* key, u8* rawkey, int keybytes);
void cast_encrypt(cast_key* key, u8* inblock, u8* outblock);
void cast_decrypt(cast_key* key, u8* inblock, u8* outblock);
@

