head	1.13;
access;
symbols
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.10.0.36
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.32
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.30
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.28
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.26
	OPENBSD_5_0:1.10.0.24
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.22
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.20
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.16
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.18
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.14
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.12
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.10
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.8
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.08.31.02.53.56;	author guenther;	state Exp;
branches;
next	1.12;
commitid	lTMF8Y3C9fQGd6jQ;

1.12
date	2014.04.22.00.33.02;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.21.16.13.24;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2006.01.06.18.53.04;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.19.34.12;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.17;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.08.07.21.34.42;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.07.19.15.06.22;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2001.07.19.14.08.33;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.06.17.18.42;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.09.21.10.45.32;	author niklas;	state Exp;
branches;
next	1.2;

1.2
date	97.08.24.21.28.03;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.12;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@/*	$OpenBSD: err.h,v 1.12 2014/04/22 00:33:02 guenther Exp $	*/
/*	$NetBSD: err.h,v 1.11 1994/10/26 00:55:52 cgd Exp $	*/

/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)err.h	8.1 (Berkeley) 6/2/93
 */

#ifndef _ERR_H_
#define	_ERR_H_

#include <sys/cdefs.h>
#include <machine/_types.h>		/* for __va_list */

__BEGIN_DECLS

__dead void	err(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
__dead void	verr(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
__dead void	errc(int, int, const char *, ...)
			__attribute__((__format__ (printf, 3, 4)));
__dead void	verrc(int, int, const char *, __va_list)
			__attribute__((__format__ (printf, 3, 0)));
__dead void	errx(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
__dead void	verrx(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
void		warn(const char *, ...)
			__attribute__((__format__ (printf, 1, 2)));
void		vwarn(const char *, __va_list)
			__attribute__((__format__ (printf, 1, 0)));
void		warnc(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
void		vwarnc(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
void		warnx(const char *, ...)
			__attribute__((__format__ (printf, 1, 2)));
void		vwarnx(const char *, __va_list)
			__attribute__((__format__ (printf, 1, 0)));

__END_DECLS

#endif /* !_ERR_H_ */
@


1.12
log
@Add errc/verrc/warnc/vwarnc family: versions of err/... that take the errno
value to use for the strerror() message as an argument.  Originally from
FreeBSD 3.0

Patch from Steffen Nurpmeso (sdaoden (at) gmail.com) with minor tweaks.
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.11 2014/04/21 16:13:24 guenther Exp $	*/
a65 28
			__attribute__((__format__ (printf, 1, 0)));

/*
 * The _* versions are for use inside libc only and will go away
 */
__dead void	_err(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
__dead void	_verr(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
__dead void	_errc(int, int, const char *, ...)
			__attribute__((__format__ (printf, 3, 4)));
__dead void	_verrc(int, int, const char *, __va_list)
			__attribute__((__format__ (printf, 3, 0)));
__dead void	_errx(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
__dead void	_verrx(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
void		_warn(const char *, ...)
			__attribute__((__format__ (printf, 1, 2)));
void		_vwarn(const char *, __va_list)
			__attribute__((__format__ (printf, 1, 0)));
void		_warnc(int, const char *, ...)
			__attribute__((__format__ (printf, 2, 3)));
void		_vwarnc(int, const char *, __va_list)
			__attribute__((__format__ (printf, 2, 0)));
void		_warnx(const char *, ...)
			__attribute__((__format__ (printf, 1, 2)));
void		_vwarnx(const char *, __va_list)
@


1.11
log
@Remove historical comment about <varargs.h> and warn people from using
the _* functions outside libc
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.10 2006/01/06 18:53:04 millert Exp $	*/
d47 4
d59 4
d75 4
d87 4
@


1.10
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.9 2003/06/02 19:34:12 millert Exp $	*/
a37 7
/*
 * Don't use va_list in the err/warn prototypes.   Va_list is typedef'd in two
 * places (<machine/varargs.h> and <machine/stdarg.h>), so if we include one
 * of them here we may collide with the utility's includes.  It's unreasonable
 * for utilities to have to include one of them to include err.h, so we get
 * __va_list from <machine/_types.h> and use it.
 */
d39 1
a39 1
#include <machine/_types.h>
d61 1
a61 2
 * The _* versions are for use in library functions so user-defined
 * versions of err*,warn* do not get used.
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.8 2002/02/16 21:27:17 millert Exp $	*/
d43 1
a43 1
 * _BSD_VA_LIST_ from <machine/ansi.h> and use it.
a44 1
#include <machine/ansi.h>
d46 1
d52 1
a52 1
__dead void	verr(int, const char *, _BSD_VA_LIST_)
d56 1
a56 1
__dead void	verrx(int, const char *, _BSD_VA_LIST_)
d60 1
a60 1
void		vwarn(const char *, _BSD_VA_LIST_)
d64 1
a64 1
void		vwarnx(const char *, _BSD_VA_LIST_)
d73 1
a73 1
__dead void	_verr(int, const char *, _BSD_VA_LIST_)
d77 1
a77 1
__dead void	_verrx(int, const char *, _BSD_VA_LIST_)
d81 1
a81 1
void		_vwarn(const char *, _BSD_VA_LIST_)
d85 1
a85 1
void		_vwarnx(const char *, _BSD_VA_LIST_)
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.7 2001/08/07 21:34:42 millert Exp $	*/
d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@remove redundant __noreturn__ attributes now that __dead is sane for modern gcc
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.6 2001/07/19 15:06:22 espie Exp $	*/
d54 1
a54 1
__dead void	err __P((int, const char *, ...))
d56 1
a56 1
__dead void	verr __P((int, const char *, _BSD_VA_LIST_))
d58 1
a58 1
__dead void	errx __P((int, const char *, ...))
d60 1
a60 1
__dead void	verrx __P((int, const char *, _BSD_VA_LIST_))
d62 1
a62 1
void		warn __P((const char *, ...))
d64 1
a64 1
void		vwarn __P((const char *, _BSD_VA_LIST_))
d66 1
a66 1
void		warnx __P((const char *, ...))
d68 1
a68 1
void		vwarnx __P((const char *, _BSD_VA_LIST_))
d75 1
a75 1
__dead void	_err __P((int, const char *, ...))
d77 1
a77 1
__dead void	_verr __P((int, const char *, _BSD_VA_LIST_))
d79 1
a79 1
__dead void	_errx __P((int, const char *, ...))
d81 1
a81 1
__dead void	_verrx __P((int, const char *, _BSD_VA_LIST_))
d83 1
a83 1
void		_warn __P((const char *, ...))
d85 1
a85 1
void		_vwarn __P((const char *, _BSD_VA_LIST_))
d87 1
a87 1
void		_warnx __P((const char *, ...))
d89 1
a89 1
void		_vwarnx __P((const char *, _BSD_VA_LIST_))
@


1.6
log
@typo in comment
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.5 2001/07/19 14:08:33 millert Exp $	*/
d55 1
a55 1
			__attribute__((__noreturn__, __format__ (printf, 2, 3)));
d57 1
a57 1
			__attribute__((__noreturn__, __format__ (printf, 2, 0)));
d59 1
a59 1
			__attribute__((__noreturn__, __format__ (printf, 2, 3)));
d61 1
a61 1
			__attribute__((__noreturn__, __format__ (printf, 2, 0)));
d76 1
a76 1
			__attribute__((__noreturn__, __format__ (printf, 2, 3)));
d78 1
a78 1
			__attribute__((__noreturn__, __format__ (printf, 2, 0)));
d80 1
a80 1
			__attribute__((__noreturn__, __format__ (printf, 2, 3)));
d82 1
a82 1
			__attribute__((__noreturn__, __format__ (printf, 2, 0)));
@


1.5
log
@Expose protos for _{err,warn}{,x} regardless of __indr_reference being
defined since in the notdef __indr_reference case they are still present,
just as real functions.  Fixes some alpha warnings.
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.4 2000/12/06 17:18:42 deraadt Exp $	*/
d72 1
a72 1
 * The _* versios are for use in library functions so user-defined
@


1.4
log
@use __x__ formats for __attribute__ arguments; guenther@@gac.edu
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.3 1997/09/21 10:45:32 niklas Exp $	*/
a70 1
#ifdef __indr_reference
a90 1
#endif
@


1.3
log
@Well, as we are heading for a release people are encouraged to rebuild their
entire trees for testing anyway, I might as well do this intrusive touching
of include files now.  Added openBSD tags.
@
text
@d1 1
a1 1
/*	$OpenBSD: err.h,v 1.11 1994/10/26 00:55:52 cgd Exp $	*/
d55 1
a55 1
			__attribute__((noreturn, format (printf, 2, 3)));
d57 1
a57 1
			__attribute__((noreturn, format (printf, 2, 0)));
d59 1
a59 1
			__attribute__((noreturn, format (printf, 2, 3)));
d61 1
a61 1
			__attribute__((noreturn, format (printf, 2, 0)));
d63 1
a63 1
			__attribute__((format (printf, 1, 2)));
d65 1
a65 1
			__attribute__((format (printf, 1, 0)));
d67 1
a67 1
			__attribute__((format (printf, 1, 2)));
d69 1
a69 1
			__attribute__((format (printf, 1, 0)));
d77 1
a77 1
			__attribute__((noreturn, format (printf, 2, 3)));
d79 1
a79 1
			__attribute__((noreturn, format (printf, 2, 0)));
d81 1
a81 1
			__attribute__((noreturn, format (printf, 2, 3)));
d83 1
a83 1
			__attribute__((noreturn, format (printf, 2, 0)));
d85 1
a85 1
			__attribute__((format (printf, 1, 2)));
d87 1
a87 1
			__attribute__((format (printf, 1, 0)));
d89 1
a89 1
			__attribute__((format (printf, 1, 2)));
d91 1
a91 1
			__attribute__((format (printf, 1, 0)));
@


1.2
log
@prototype _err* and _warn*
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d52 1
d69 24
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
