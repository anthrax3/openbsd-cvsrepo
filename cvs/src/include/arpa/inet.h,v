head	1.21;
access;
symbols
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.4
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.4
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.15.0.8
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.4
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.14
	OPENBSD_5_0:1.11.0.12
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.10
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.8
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.4
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.10.0.20
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.18
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.16
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.14
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.12
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.10
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.8
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.6
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.4
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2017.02.04.19.16.25;	author guenther;	state Exp;
branches;
next	1.20;
commitid	OC9z5EofO4ZHA8J4;

1.20
date	2017.02.04.02.54.33;	author guenther;	state Exp;
branches;
next	1.19;
commitid	9csrCwph526pp6vy;

1.19
date	2015.09.14.08.24.37;	author guenther;	state Exp;
branches;
next	1.18;
commitid	K0kt6qeJijTCMYoW;

1.18
date	2015.09.14.08.16.14;	author guenther;	state Exp;
branches;
next	1.17;
commitid	6SDgVrKiCVDNNKz2;

1.17
date	2014.08.31.04.04.01;	author guenther;	state Exp;
branches;
next	1.16;
commitid	KGf0hDmBrmxP3pql;

1.16
date	2014.07.12.16.25.08;	author guenther;	state Exp;
branches;
next	1.15;
commitid	r9gXh8PA6rI3P7q2;

1.15
date	2012.12.05.23.19.57;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2012.09.15.00.47.08;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2012.07.10.11.49.42;	author guenther;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.26.06.39.27;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.09.19.38.38;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.01.22.21.48.02;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2003.08.01.17.38.33;	author avsm;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.26.19.34.17;	author avsm;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.26.18.35.13;	author avsm;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.19.34.12;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.18;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.04.05.20.58.30;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.03.13.19.11.53;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.02.19.19.53.17;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@The macro versions of htonl et al don't require them, but POSIX says
<arpa/inet.h> needs to provide uint16_t and uint32_t.

ok millert@@ krw@@ naddy@@
@
text
@/*	$OpenBSD: inet.h,v 1.20 2017/02/04 02:54:33 guenther Exp $	*/

/*
 * ++Copyright++ 1983, 1993
 * -
 * Copyright (c) 1983, 1993
 *    The Regents of the University of California.  All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * -
 * Portions Copyright (c) 1993 by Digital Equipment Corporation.
 * 
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies, and that
 * the name of Digital Equipment Corporation not be used in advertising or
 * publicity pertaining to distribution of the document or software without
 * specific, written prior permission.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS" AND DIGITAL EQUIPMENT CORP. DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE, INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS.   IN NO EVENT SHALL DIGITAL EQUIPMENT
 * CORPORATION BE LIABLE FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL
 * DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR
 * PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS
 * ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS
 * SOFTWARE.
 * -
 * --Copyright--
 */

/*
 *	@@(#)inet.h	8.1 (Berkeley) 6/2/93
 *	$From: inet.h,v 8.6 1996/08/08 06:54:29 vixie Exp $
 */

#ifndef _INET_H_
#define	_INET_H_

/* External definitions for functions in inet(3) */

#include <sys/cdefs.h>
#include <sys/_endian.h>

#ifndef htons
#define htons(x)	__htobe16(x)
#define htonl(x)	__htobe32(x)
#define ntohs(x)	__htobe16(x)
#define ntohl(x)	__htobe32(x)
#endif

#ifndef	_UINT16_T_DEFINED_
#define	_UINT16_T_DEFINED_
typedef	__uint16_t	uint16_t;
#endif

#ifndef	_UINT32_T_DEFINED_
#define	_UINT32_T_DEFINED_
typedef	__uint32_t	uint32_t;
#endif

#ifndef	_SOCKLEN_T_DEFINED_
#define	_SOCKLEN_T_DEFINED_
typedef	__socklen_t	socklen_t;	/* length type for network syscalls */
#endif

#ifndef _IN_TYPES_DEFINED_
#define _IN_TYPES_DEFINED_
typedef __in_addr_t	in_addr_t;	/* base type for internet address */
typedef __in_port_t	in_port_t;	/* IP port type */
#endif

/*
 * Buffer lengths for strings containing printable IP addresses
 */
#ifndef INET_ADDRSTRLEN
#define INET_ADDRSTRLEN		16
#endif
#ifndef INET6_ADDRSTRLEN
#define INET6_ADDRSTRLEN	46
#endif

#ifndef _IN_ADDR_DECLARED
#define _IN_ADDR_DECLARED
/*
 * IP Version 4 Internet address (a structure for historical reasons)
 */
struct in_addr {
	in_addr_t s_addr;
};
#endif


#if __BSD_VISIBLE
/* need this for the non-standard stuff */
#ifndef _SIZE_T_DEFINED_
#define _SIZE_T_DEFINED_
typedef __size_t	size_t;
#endif
#endif


__BEGIN_DECLS
in_addr_t	 inet_addr(const char *);
char		*inet_ntoa(struct in_addr);
const char	*inet_ntop(int, const void *__restrict, char *__restrict,
		    socklen_t) __attribute__ ((__bounded__(__string__,3,4)));
int		 inet_pton(int, const char *__restrict, void *__restrict);

#if __BSD_VISIBLE
int		 inet_aton(const char *, struct in_addr *);
in_addr_t	 inet_lnaof(struct in_addr);
struct in_addr	 inet_makeaddr(in_addr_t , in_addr_t);
char *		 inet_neta(in_addr_t, char *, size_t)
			__attribute__((__bounded__(__string__,2,3)));
in_addr_t	 inet_netof(struct in_addr);
in_addr_t	 inet_network(const char *);
char		*inet_net_ntop(int, const void *, int, char *, size_t)
			__attribute__((__bounded__(__string__,4,5)));
int		 inet_net_pton(int, const char *, void *, size_t)
			__attribute__((__bounded__(__string__,3,4)));
#endif /* __BSD_VISIBLE */
__END_DECLS

#endif /* !_INET_H_ */
@


1.20
log
@Move the typedefs for in_{addr,port}_t from <sys/types.h> to
<netinet/in.h> and <arpa/inet.h>

ok and ports test naddy@@ (thanks!)
ok krw@@ beck@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.19 2015/09/14 08:24:37 guenther Exp $	*/
d72 10
@


1.19
log
@Revert: finger slip
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.17 2014/08/31 04:04:01 guenther Exp $	*/
d64 2
a65 1
#include <sys/types.h>
a66 1
/* <sys/_endian.h> is pulled in by <sys/types.h> */
d79 6
d103 9
@


1.18
log
@Prefer the standardized <poll.h> over <sys/poll.h>
@
text
@d64 1
a64 2
#include <sys/cdefs.h>
#include <sys/_endian.h>
d66 1
a78 6
#ifndef _IN_TYPES_DEFINED_
#define _IN_TYPES_DEFINED_
typedef __in_addr_t	in_addr_t;	/* base type for internet address */
typedef __in_port_t	in_port_t;	/* IP port type */
#endif

a96 9
#endif


#if __BSD_VISIBLE
/* need this for the non-standard stuff */
#ifndef _SIZE_T_DEFINED_
#define _SIZE_T_DEFINED_
typedef __size_t	size_t;
#endif
@


1.17
log
@inet_nsap_{addr,ntoa}() were removed on 2013/12/17
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.16 2014/07/12 16:25:08 guenther Exp $	*/
d64 2
a65 1
#include <sys/types.h>
a66 1
/* <sys/_endian.h> is pulled in by <sys/types.h> */
d79 6
d103 9
@


1.16
log
@Tackle the endian.h mess.  Make it so that:
 * you can #include <sys/endian.h> instead of <machine/endian.h>,
   and ditto <endian.h>  (fixes code that pulls in <sys/endian.h> first)

 * those will always export the symbols that POSIX specified for
   <endian.h>, including the new {be,le}{16,32,64}toh() set.  c.f.
	http://austingroupbugs.net/view.php?id=162

   if __BSD_VISIBLE then you also get the symbols that our <machine/endian.h>
   currently exports (ntohs, NTOHS, dlg's bemtoh*, etc)

 * when doing POSIX compiles (not __BSD_VISIBLE), then <netinet/in.h> and
   <arpa/inet.h> will *stop* exporting the extra symbols like BYTE_ORDER
   and betoh*

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.15 2012/12/05 23:19:57 deraadt Exp $	*/
a118 2
unsigned int	 inet_nsap_addr(const char *, unsigned char *, int);
char		*inet_nsap_ntoa(int, const unsigned char *, char *);
@


1.15
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.14 2012/09/15 00:47:08 guenther Exp $	*/
d65 8
a72 1
#include <machine/endian.h>
@


1.14
log
@Improve POSIX/SUS compliance of <netdb.h>, <sys/socket.h>, and <sys/un.h>.

Much ports testing of various versions by naddy@@ and jasper@@
ok matthew@@, miller@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.13 2012/07/10 11:49:42 guenther Exp $	*/
a63 1
#include <sys/cdefs.h>
@


1.13
log
@Instead of <arpa/inet.h> pulling in <netinet/in.h>, just copy in the
three things that it needed from there: INET_ADDRSTRLEN, INET6_ADDRSTRLEN,
and struct in_addr.  Add protecting #ifndefs to netinet6?/in6?.h for those.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.12 2012/06/26 06:39:27 guenther Exp $	*/
d67 5
@


1.12
log
@Improve compliance for <arpa/inet.h> and <netinet/in.h> to define/declare
all the symbols that POSIX says they must and fewer that they can't and,
most importantly, to not require a specific ordering of headers.

ports testing by naddy@@
ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.11 2008/12/09 19:38:38 otto Exp $	*/
a65 1
#include <netinet/in.h>
d67 21
@


1.11
log
@fix inet_ntop(3) prototype; ok millert@@ libc to be bumbed very soon
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.10 2004/01/22 21:48:02 espie Exp $	*/
a63 6
#include <sys/param.h>
#if (!defined(BSD)) || (BSD < 199306)
# include <sys/bitypes.h>
#else
# include <sys/types.h>
#endif
d65 3
d71 6
a87 4
char		*inet_ntoa(struct in_addr);
int		 inet_pton(int, const char *, void *);
const char	*inet_ntop(int, const void *, char *, socklen_t)
			__attribute__ ((__bounded__(__string__,3,4)));
d90 1
@


1.10
log
@Remove unnecessary typedef usage.

u_char -> unsigned char
u_short -> unsigned short
u_long -> unsigned long
u_int -> unsigned int

okay millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.9 2003/08/01 17:38:33 avsm Exp $	*/
d87 1
a87 1
const char	*inet_ntop(int, const void *, char *, size_t)
@


1.9
log
@add __bounded__ attributes for userland headers; enabled with -Wbounded
ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.8 2003/06/26 19:34:17 avsm Exp $	*/
d89 2
a90 2
u_int		 inet_nsap_addr(const char *, u_char *, int);
char		*inet_nsap_ntoa(int, const u_char *, char *);
@


1.8
log
@backout the __bounded__ attributes for a while; requested by deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.6 2003/06/02 19:34:12 millert Exp $	*/
d77 2
a78 1
char *		 inet_neta(in_addr_t, char *, size_t);
d81 4
a84 2
char		*inet_net_ntop(int, const void *, int, char *, size_t);
int		 inet_net_pton(int, const char *, void *, size_t);
d87 2
a88 1
const char	*inet_ntop(int, const void *, char *, size_t);
@


1.7
log
@Mark various standard library functions with the __bounded__ attribute.
You must have an up-to-date gcc for this!
deraadt@@ ok
@
text
@d77 1
a77 2
char *		 inet_neta(in_addr_t, char *, size_t)
			__attribute__((__bounded__(__string__,2,3)));
d80 2
a81 4
char		*inet_net_ntop(int, const void *, int, char *, size_t)
			__attribute__((__bounded__(__string__,4,5)));
int		 inet_net_pton(int, const char *, void *, size_t)
			__attribute__((__bounded__(__string__,3,4)));
d84 1
a84 2
const char	*inet_ntop(int, const void *, char *, size_t)
			__attribute__ ((__bounded__(__string__,3,4)));
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.5 2002/02/16 21:27:18 millert Exp $	*/
d77 2
a78 1
char *		 inet_neta(in_addr_t, char *, size_t);
d81 4
a84 2
char		*inet_net_ntop(int, const void *, int, char *, size_t);
int		 inet_net_pton(int, const char *, void *, size_t);
d87 2
a88 1
const char	*inet_ntop(int, const void *, char *, size_t);
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.4 1997/04/05 20:58:30 millert Exp $	*/
d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 * 	This product includes software developed by the University of
 * 	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Use in_addr_t not u_long.
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.3 1997/03/13 19:11:53 downsj Exp $	*/
d77 14
a90 14
in_addr_t	 inet_addr __P((const char *));
int		 inet_aton __P((const char *, struct in_addr *));
in_addr_t	 inet_lnaof __P((struct in_addr));
struct in_addr	 inet_makeaddr __P((in_addr_t , in_addr_t));
char *		 inet_neta __P((in_addr_t, char *, size_t));
in_addr_t	 inet_netof __P((struct in_addr));
in_addr_t	 inet_network __P((const char *));
char		*inet_net_ntop __P((int, const void *, int, char *, size_t));
int		 inet_net_pton __P((int, const char *, void *, size_t));
char		*inet_ntoa __P((struct in_addr));
int		 inet_pton __P((int, const char *, void *));
const char	*inet_ntop __P((int, const void *, char *, size_t));
u_int		 inet_nsap_addr __P((const char *, u_char *, int));
char		*inet_nsap_ntoa __P((int, const u_char *, char *));
@


1.3
log
@BIND 4.9.5 includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: inet.h,v 1.2 1997/03/12 11:21:16 downsj Exp $	*/
d77 1
a77 1
unsigned long	 inet_addr __P((const char *));
d79 5
a83 5
unsigned long	 inet_lnaof __P((struct in_addr));
struct in_addr	 inet_makeaddr __P((u_long , u_long));
char *		 inet_neta __P((u_long, char *, size_t));
unsigned long	 inet_netof __P((struct in_addr));
unsigned long	 inet_network __P((const char *));
@


1.2
log
@netbsd: bind 4.9.3
@
text
@d1 2
d60 1
a60 1
 *	$Id: inet.h,v 8.1 1994/12/15 06:24:07 vixie Exp 
d81 1
d84 2
d87 4
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: inet.h,v 1.4 1994/10/26 00:56:44 cgd Exp $	*/

d2 5
a6 3
 * Copyright (c) 1983 Regents of the University of California.
 * All rights reserved.
 *
d17 2
a18 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d22 1
a22 1
 *
d34 25
a58 2
 *
 *	@@(#)inet.h	5.7 (Berkeley) 4/3/91
d66 6
d75 6
a80 6
unsigned long	inet_addr __P((const char *));
int		inet_aton __P((const char *, struct in_addr *));
unsigned long	inet_lnaof __P((struct in_addr));
struct in_addr	inet_makeaddr __P((u_long, u_long));
unsigned long	inet_netof __P((struct in_addr));
unsigned long	inet_network __P((const char *));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
