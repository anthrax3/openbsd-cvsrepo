head	1.6;
access;
symbols
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	initial:1.1.1.1
	KTH/tholo:1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2000.02.25.15.14.44;	author hin;	state dead;
branches;
next	1.5;

1.5
date	98.08.12.23.09.05;	author art;	state Exp;
branches;
next	1.4;

1.4
date	97.12.17.09.59.44;	author art;	state Exp;
branches;
next	1.3;

1.3
date	97.11.21.04.23.43;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.09.15.23.28.08;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.06.52.41;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.14.06.52.41;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove old KerberosIV code. (art@@ ok)
@
text
@/*	$OpenBSD: ext_srvtab.c,v 1.5 1998/08/12 23:09:05 art Exp $	*/
/*      $KTH: ext_srvtab.c,v 1.13 1997/05/02 14:27:33 assar Exp $       */

/*-
 * Copyright 1987, 1988 by the Student Information Processing Board
 *	of the Massachusetts Institute of Technology
 *
 * Permission to use, copy, modify, and distribute this software
 * and its documentation for any purpose and without fee is
 * hereby granted, provided that the above copyright notice
 * appear in all copies and that both that copyright notice and
 * this permission notice appear in supporting documentation,
 * and that the names of M.I.T. and the M.I.T. S.I.P.B. not be
 * used in advertising or publicity pertaining to distribution
 * of the software without specific, written prior permission.
 * M.I.T. and the M.I.T. S.I.P.B. make no representations about
 * the suitability of this software for any purpose.  It is
 * provided "as is" without express or implied warranty.
 */

#include <sys/param.h>

#include <adm_locl.h>
#include <err.h>

static des_cblock master_key;
static des_cblock session_key;
static des_key_schedule master_key_schedule;
char progname[] = "ext_srvtab";
static char realm[REALM_SZ];

static void
usage(void)
{
    fprintf(stderr, 
	    "Usage: %s [-n] [-r realm] instance [instance ...]\n", progname);
    exit(1);
}

static void
StampOutSecrets(void)
{
    memset(master_key, 0, sizeof master_key);
    memset(session_key, 0, sizeof session_key);
    memset(master_key_schedule, 0, sizeof master_key_schedule);
}

static void
FWrite(void *p, int size, int n, FILE *f)
{
    if (fwrite(p, size, n, f) != n) {
        StampOutSecrets();
	errx(1, "Error writing output file.  Terminating.\n");
    }
}

int
main(int argc, char **argv)
{
    FILE *fout;
    char fname[MAXPATHLEN];
    int fopen_errs = 0;
    int arg;
    Principal princs[40];
    int more; 
    int prompt = KDB_GET_PROMPT;
    int n, i;
    
    memset(realm, 0, sizeof(realm));

    if (atexit(StampOutSecrets))
	errx(1, "Out of resources");
    
    /* Parse commandline arguments */
    if (argc < 2)
	usage();
    else {
	for (i = 1; i < argc; i++) {
	    if (strcmp(argv[i], "-n") == 0)
		prompt = FALSE;
	    else if (strcmp(argv[i], "-r") == 0) {
		if (++i >= argc)
		    usage();
		else {
		    strcpy(realm, argv[i]);
		    /* 
		     * This is to humor the broken way commandline
		     * argument parsing is done.  Later, this
		     * program ignores everything that starts with -.
		     */
		    argv[i][0] = '-';
		}
	    }
	    else if (argv[i][0] == '-')
		usage();
	    else
		if (!k_isinst(argv[i])) {
		    warnx("bad instance name: %s", argv[i]);
		    usage();
		}
	}
    }

    if (kdb_get_master_key (prompt, &master_key, master_key_schedule) != 0)
	errx (1, "Couldn't read master key.");

    if (kdb_verify_master_key (&master_key, master_key_schedule, stderr) < 0)
	exit(1);

    /* For each arg, search for instances of arg, and produce */
    /* srvtab file */
    if (!realm[0])
      if (krb_get_lrealm(realm, 1) != KSUCCESS) {
	  StampOutSecrets();
	  errx (1, "couldn't get local realm");
      }
    umask(077);

    for (arg = 1; arg < argc; arg++) {
	if (argv[arg][0] == '-')
	    continue;
	snprintf(fname, sizeof(fname), "%s-new-srvtab", argv[arg]);
	if ((fout = fopen(fname, "w")) == NULL) {
	    warn("Couldn't create file '%s'.", fname);
	    fopen_errs++;
	    continue;
	}
	printf("Generating '%s'....\n", fname);
	n = kerb_get_principal("*", argv[arg], &princs[0], 40, &more);
	if (more)
	    fprintf(stderr, "More than 40 found...\n");
	for (i = 0; i < n; i++) {
	    FWrite(princs[i].name, strlen(princs[i].name) + 1, 1, fout);
	    FWrite(princs[i].instance, strlen(princs[i].instance) + 1,
		   1, fout);
	    FWrite(realm, strlen(realm) + 1, 1, fout);
	    FWrite(&princs[i].key_version,
		sizeof(princs[i].key_version), 1, fout);
	    copy_to_key(&princs[i].key_low, &princs[i].key_high, session_key);
	    kdb_encrypt_key (&session_key, &session_key, 
			     &master_key, master_key_schedule, DES_DECRYPT);
	    FWrite(session_key, sizeof session_key, 1, fout);
	}
	fclose(fout);
    }
    StampOutSecrets();
    return fopen_errs;		/* 0 errors if successful */
}
@


1.5
log
@from kth-krb 0.9.9 (nothing new, just reducing the size of my diffs)
@
text
@d1 1
a1 1
/*	$OpenBSD: ext_srvtab.c,v 1.4 1997/12/17 09:59:44 art Exp $	*/
@


1.4
log
@ugly typo and an unnecessary call.
@
text
@d1 1
a1 1
/*	$OpenBSD: ext_srvtab.c,v 1.3 1997/11/21 04:23:43 art Exp $	*/
d51 2
a52 1
    if (fwrite(p, size, n, f) != n) 
d54 1
d66 2
a67 2
    int prompt = TRUE;
    register int n, i;
d113 5
a117 2
	if (krb_get_lrealm(realm, 1) != KSUCCESS)
	    errx (1, "couldn't get local realm");
a118 2
    umask(077);
    
d124 1
a124 1
	    fprintf(stderr, "Couldn't create file '%s'.\n", fname);
d138 1
a138 1
		   sizeof(princs[i].key_version), 1, fout);
d146 2
a147 2

    exit(fopen_errs);		/* 0 errors if successful */
a148 2


@


1.3
log
@Updated the code to reflect the changes in kth-krb-0.9.7
@
text
@d1 1
a1 1
/*	$OpenBSD: ext_srvtab.c,v 1.2 1996/09/15 23:28:08 millert Exp $	*/
a20 5
/*
 * This whole program is obsolete and should be replaced by ksrvutil
 * It's only kept as backwards-compatibilty.
 */

d70 1
a70 1
	errx(1, "Out of resurces");
a95 1
		    StampOutSecrets();
@


1.2
log
@more sprintf -> snprintf paranoia
@
text
@d1 2
a2 1
/*	$Id: ext_srvtab.c,v 1.1.1.1 1995/12/14 06:52:41 tholo Exp $	*/
d21 7
d29 1
d48 3
a50 3
    bzero(master_key, sizeof master_key);
    bzero(session_key, sizeof session_key);
    bzero(master_key_schedule, sizeof master_key_schedule);
d54 1
a54 1
Die(void)
d56 2
a57 11
    StampOutSecrets();
    exit(1);
}

static void
FWrite(char *p, int size, int n, FILE *f)
{
    if (fwrite(p, size, n, f) != n) {
	printf("Error writing output file.  Terminating.\n");
	Die();
    }
d64 1
a64 1
    char fname[1024];
d72 4
a75 1
    bzero(realm, sizeof(realm));
d101 4
a104 4
		fprintf(stderr, "%s: bad instance name: %s\n",
			progname, argv[i]);
		usage();
	    }
d108 2
a109 5
    if (kdb_get_master_key (prompt, &master_key, master_key_schedule) != 0) {
      fprintf (stderr, "Couldn't read master key.\n");
      fflush (stderr);
      exit(1);
    }
d111 2
a112 3
    if (kdb_verify_master_key (&master_key, master_key_schedule, stderr) < 0) {
      exit(1);
    }
d117 2
a118 5
	if (krb_get_lrealm(realm, 1) != KSUCCESS) {
	    fprintf(stderr, "%s: couldn't get local realm\n", progname);
	    exit(1);
	}
    (void) umask(077);
d120 2
d140 3
a142 5
	    FWrite((char*)&princs[i].key_version,
		sizeof(princs[i].key_version), 1, fout);
	    bcopy(&princs[i].key_low, session_key, sizeof(long));
	    bcopy(&princs[i].key_high, session_key + sizeof(long),
		  sizeof(long));
d145 1
a145 1
	    FWrite((char*)session_key, sizeof session_key, 1, fout);
d150 2
a151 1
    StampOutSecrets();
a152 1
    exit(fopen_errs);		/* 0 errors if successful */
a153 1
}
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$Id$	*/
d127 1
a127 1
	sprintf(fname, "%s-new-srvtab", argv[arg]);
@


1.1.1.1
log
@Kerberos IV code, based on a merge of fixed code from KTH and original
4.4BSD Lite code (international edition).  Provides all functionality
from the original 4.4BSD code plus standard Kerberos elements that were
omitted in the 4.4BSD code.
@
text
@@
