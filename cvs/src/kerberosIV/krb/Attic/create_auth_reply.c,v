head	1.5;
access;
symbols
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	initial:1.1.1.1
	KTH/tholo:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2000.02.25.15.15.00;	author hin;	state dead;
branches;
next	1.4;

1.4
date	98.07.07.19.06.44;	author art;	state Exp;
branches;
next	1.3;

1.3
date	97.12.09.07.57.11;	author art;	state Exp;
branches;
next	1.2;

1.2
date	97.11.28.12.48.52;	author art;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.06.52.40;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.14.06.52.40;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove old KerberosIV code. (art@@ ok)
@
text
@/*	$OpenBSD: create_auth_reply.c,v 1.4 1998/07/07 19:06:44 art Exp $	*/
/* $KTH: create_auth_reply.c,v 1.11 1997/04/01 08:18:20 joda Exp $ */

/*
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "krb_locl.h"

/*
 * This routine is called by the Kerberos authentication server
 * to create a reply to an authentication request.  The routine
 * takes the user's name, instance, and realm, the client's
 * timestamp, the number of tickets, the user's key version
 * number and the ciphertext containing the tickets themselves.
 * It constructs a packet and returns a pointer to it.
 *
 * Notes: The packet returned by this routine is static.  Thus, if you
 * intend to keep the result beyond the next call to this routine, you
 * must copy it elsewhere.
 *
 * The packet is built in the following format:
 * 
 * 			variable
 * type			or constant	   data
 * ----			-----------	   ----
 * 
 * unsigned char	KRB_PROT_VERSION   protocol version number
 * 
 * unsigned char	AUTH_MSG_KDC_REPLY protocol message type
 * 
 * [least significant	HOST_BYTE_ORDER	   sender's (server's) byte
 *  bit of above field]			   order
 * 
 * string		pname		   principal's name
 * 
 * string		pinst		   principal's instance
 * 
 * string		prealm		   principal's realm
 * 
 * unsigned long	time_ws		   client's timestamp
 * 
 * unsigned char	n		   number of tickets
 * 
 * unsigned long	x_date		   expiration date
 * 
 * unsigned char	kvno		   master key version
 * 
 * short		w_1		   cipher length
 * 
 * ---			cipher->dat	   cipher data
 */

KTEXT
create_auth_reply(char *pname,	/* Principal's name */
		  char *pinst,	/* Principal's instance */
		  char *prealm,	/* Principal's authentication domain */
		  int32_t time_ws, /* Workstation time */
		  int n,	/* Number of tickets */
		  u_int32_t x_date, /* Principal's expiration date */
		  int kvno,	/* Principal's key version number */
		  KTEXT cipher)	/* Cipher text with tickets and session keys */
{
    static  KTEXT_ST pkt_st;
    KTEXT pkt = &pkt_st;
    
    unsigned char *p = pkt->dat;

    if(n != 0)
	return NULL;

    p += krb_put_int(KRB_PROT_VERSION, p, 1);
    p += krb_put_int(AUTH_MSG_KDC_REPLY, p, 1);

    p += krb_put_nir(pname, pinst, prealm, p);

    p += krb_put_int(time_ws, p, 4);
    
    p += krb_put_int(n, p, 1);
    
    p += krb_put_int(x_date, p, 4);
    
    p += krb_put_int(kvno, p, 1);
    
    p += krb_put_int(cipher->length, p, 2);
    
    memcpy(p, cipher->dat, cipher->length);
    p += cipher->length;

    pkt->length = p - pkt->dat;

    return pkt;
}
@


1.4
log
@upgrade libkrb to 0.9.9
@
text
@d1 1
a1 1
/*	$OpenBSD: create_auth_reply.c,v 1.3 1997/12/09 07:57:11 art Exp $	*/
@


1.3
log
@Removed one expliotable hole, one possibly exploitable hole, many buffer
overflows and lots of unchecked pointers. Tags are nice too.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d103 3
a107 8

    if(n != 0){
	/* barf on old code */
	krb_warning("create_auth_reply: don't give me no krb3 crap!"
		    " (n == %d)\n", n);
	return NULL;
    }

@


1.2
log
@The first big step towards a complete upgrade to kth-krb4-0.9.7
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d1 2
d4 35
a38 5
 * This software may now be redistributed outside the US.
 *
 * $Source: /usr/src/kerberosIV/lib/krb/RCS/create_auth_reply.c,v $
 *
 * $Locker:  $
a40 21
/* 
  Copyright (C) 1989 by the Massachusetts Institute of Technology

   Export of this software from the United States of America is assumed
   to require a specific license from the United States Government.
   It is the responsibility of any person or organization contemplating
   export to obtain such a license before exporting.

WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
distribute this software and its documentation for any purpose and
without fee is hereby granted, provided that the above copyright
notice appear in all copies and that both that copyright notice and
this permission notice appear in supporting documentation, and that
the name of M.I.T. not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.  M.I.T. makes no representations about the suitability of
this software for any purpose.  It is provided "as is" without express
or implied warranty.

  */

d88 8
a95 10
create_auth_reply(pname, pinst, prealm, time_ws, n, x_date, kvno, cipher)
	char *pname;		/* Principal's name */
	char *pinst;		/* Principal's instance */
	char *prealm;		/* Principal's authentication domain */
	int32_t time_ws;	/* Workstation time */
	int n;			/* Number of tickets */
	u_int32_t x_date;	/* Principal's expiration date */
	int kvno;		/* Principal's key version number */
	KTEXT cipher;		/* Cipher text with tickets and
				 * session keys */
d99 30
a128 35
    unsigned char *v =  pkt->dat; /* Prot vers number */
    unsigned char *t = (pkt->dat+1); /* Prot message type */
    short w_l;			/* Cipher length */

    /* Create fixed part of packet */
    *v = (unsigned char) KRB_PROT_VERSION;
    *t = (unsigned char) AUTH_MSG_KDC_REPLY;
    *t |= HOST_BYTE_ORDER;

    if (n != 0)
	*v = 3;

    /* Add the basic info */
    (void) strcpy((char *) (pkt->dat+2), pname);
    pkt->length = 3 + strlen(pname);
    (void) strcpy((char *) (pkt->dat+pkt->length),pinst);
    pkt->length += 1 + strlen(pinst);
    (void) strcpy((char *) (pkt->dat+pkt->length),prealm);
    pkt->length += 1 + strlen(prealm);
    /* Workstation timestamp */
    bcopy((char *) &time_ws, (char *) (pkt->dat+pkt->length), 4);
    pkt->length += 4;
    *(pkt->dat+(pkt->length)++) = (unsigned char) n;
    /* Expiration date */
    bcopy((char *) &x_date, (char *) (pkt->dat+pkt->length),4);
    pkt->length += 4;

    /* Now send the ciphertext and info to help decode it */
    *(pkt->dat+(pkt->length)++) = (unsigned char) kvno;
    w_l = (short) cipher->length;
    bcopy((char *) &w_l,(char *) (pkt->dat+pkt->length),2);
    pkt->length += 2;
    bcopy((char *) (cipher->dat), (char *) (pkt->dat+pkt->length),
	  cipher->length);
    pkt->length += cipher->length;
a129 1
    /* And return the packet */
@


1.1.1.1
log
@Kerberos IV code, based on a merge of fixed code from KTH and original
4.4BSD Lite code (international edition).  Provides all functionality
from the original 4.4BSD code plus standard Kerberos elements that were
omitted in the 4.4BSD code.
@
text
@@
