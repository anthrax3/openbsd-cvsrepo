head	1.7;
access;
symbols
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	initial:1.1.1.1
	KTH/tholo:1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2000.02.25.15.15.05;	author hin;	state dead;
branches;
next	1.6;

1.6
date	98.02.25.15.51.35;	author art;	state Exp;
branches;
next	1.5;

1.5
date	97.12.22.15.02.12;	author art;	state Exp;
branches;
next	1.4;

1.4
date	97.12.12.05.30.30;	author art;	state Exp;
branches;
next	1.3;

1.3
date	97.12.09.07.57.35;	author art;	state Exp;
branches;
next	1.2;

1.2
date	97.11.28.12.49.26;	author art;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.06.52.37;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.14.06.52.37;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Remove old KerberosIV code. (art@@ ok)
@
text
@/*	$OpenBSD: read_service_key.c,v 1.6 1998/02/25 15:51:35 art Exp $	*/
/* $KTH: read_service_key.c,v 1.8 1997/03/23 03:53:16 joda Exp $ */

/*
 * This source code is no longer held under any constraint of USA
 * `cryptographic laws' since it was exported legally.  The cryptographic
 * functions were removed from the code and a "Bones" distribution was
 * made.  A Commodity Jurisdiction Request #012-94 was filed with the
 * USA State Department, who handed it to the Commerce department.  The
 * code was determined to fall under General License GTDA under ECCN 5D96G,
 * and hence exportable.  The cryptographic interfaces were re-added by Eric
 * Young, and then KTH proceeded to maintain the code in the free world.
 *
 */

/* 
 *  Copyright (C) 1989 by the Massachusetts Institute of Technology
 *
 *  Export of this software from the United States of America is assumed
 *  to require a specific license from the United States Government.
 *  It is the responsibility of any person or organization contemplating
 *  export to obtain such a license before exporting.
 *
 * WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
 * distribute this software and its documentation for any purpose and
 * without fee is hereby granted, provided that the above copyright
 * notice appear in all copies and that both that copyright notice and
 * this permission notice appear in supporting documentation, and that
 * the name of M.I.T. not be used in advertising or publicity pertaining
 * to distribution of the software without specific, written prior
 * permission.  M.I.T. makes no representations about the suitability of
 * this software for any purpose.  It is provided "as is" without express
 * or implied warranty.
 *
 */

#include "krb_locl.h"

/*
 * The private keys for servers on a given host are stored in a
 * "srvtab" file (typically "/etc/srvtab").  This routine extracts
 * a given server's key from the file.
 *
 * read_service_key() takes the server's name ("service"), "instance",
 * and "realm" and a key version number "kvno", and looks in the given
 * "file" for the corresponding entry, and if found, returns the entry's
 * key field in "key".
 * 
 * If "instance" contains the string "*", then it will match
 * any instance, and the chosen instance will be copied to that
 * string.  For this reason it is important that the there is enough
 * space beyond the "*" to receive the entry.
 *
 * If "kvno" is 0, it is treated as a wild card and the first
 * matching entry regardless of the "vno" field is returned.
 *
 * This routine returns KSUCCESS on success, otherwise KFAILURE.
 *
 * The format of each "srvtab" entry is as follows:
 *
 * Size			Variable		Field in file
 * ----			--------		-------------
 * string		serv			server name
 * string		inst			server instance
 * string		realm			server realm
 * 1 byte		vno			server key version #
 * 8 bytes		key			server's key
 * ...			...			...
 */


int
read_service_key(char *service,	/* Service Name */
		 char *instance, /* Instance name or "*" */
		 char *realm,	/* Realm */
		 int kvno,	/* Key version number */
		 char *file,	/* Filename */
		 char *key)	/* Pointer to key to be filled in */
{
    char serv[SNAME_SZ];
    char inst[INST_SZ];
    char rlm[REALM_SZ];
    unsigned char vno;          /* Key version number */
    int wcard;

    int stab;

    if ((stab = open(file, O_RDONLY, 0)) < 0)
        return KFAILURE;

    if (instance == NULL)
	return KFAILURE;

    wcard = (instance[0] == '*') && (instance[1] == '\0');

    while (getst(stab, serv, SNAME_SZ) > 0) { /* Read sname */
        getst(stab, inst, INST_SZ); /* Instance */
        getst(stab, rlm, REALM_SZ); /* Realm */
        /* Vers number */
        if (read(stab, &vno, 1) != 1) {
	    close(stab);
            return KFAILURE;
	}
        /* Key */
        if (read(stab, key, 8) != 8) {
	    close(stab);
            return KFAILURE;
	}
        /* Is this the right service */
        if (service != NULL && strcmp(serv, service))
            continue;
        /* How about instance */
        if (wcard == '\0' && strcmp(inst,instance))
            continue;
        if (wcard != 0) {
            strncpy(instance, inst, INST_SZ);
	    instance[INST_SZ - 1] = '\0';
	}
        /* Is this the right realm */
        if (realm != NULL && strcmp(rlm, realm)) 
	    continue;

        /* How about the key version number */
        if (kvno && kvno != (int) vno)
            continue;

        close(stab);
        return KSUCCESS;
    }

    /* Can't find the requested service */
    close(stab);
    return(KFAILURE);
}
@


1.6
log
@nicer copyrights explaining that we are not criminals.
@
text
@d1 1
a1 1
/*	$OpenBSD: read_service_key.c,v 1.5 1997/12/22 15:02:12 art Exp $	*/
@


1.5
log
@copyright cleanup.
@
text
@d1 1
a1 1
/*	$OpenBSD: read_service_key.c,v 1.4 1997/12/12 05:30:30 art Exp $	*/
d5 8
a12 1
 * This software may now be redistributed outside the US.
@


1.4
log
@Another upgrade of kth-krb + many fixes of strcpys and unchecked pointers.
@
text
@d1 1
a1 1
/*	$OpenBSD: read_service_key.c,v 1.3 1997/12/09 07:57:35 art Exp $	*/
d4 5
d10 19
a28 19
  Copyright (C) 1989 by the Massachusetts Institute of Technology

   Export of this software from the United States of America is assumed
   to require a specific license from the United States Government.
   It is the responsibility of any person or organization contemplating
   export to obtain such a license before exporting.

WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
distribute this software and its documentation for any purpose and
without fee is hereby granted, provided that the above copyright
notice appear in all copies and that both that copyright notice and
this permission notice appear in supporting documentation, and that
the name of M.I.T. not be used in advertising or publicity pertaining
to distribution of the software without specific, written prior
permission.  M.I.T. makes no representations about the suitability of
this software for any purpose.  It is provided "as is" without express
or implied warranty.

  */
@


1.3
log
@Removed one expliotable hole, one possibly exploitable hole, many buffer
overflows and lots of unchecked pointers. Tags are nice too.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d84 3
a86 3
    while (getst(stab,serv,SNAME_SZ) > 0) { /* Read sname */
        getst(stab,inst,INST_SZ); /* Instance */
        getst(stab,rlm,REALM_SZ); /* Realm */
d93 1
a93 1
        if (read(stab,key,8) != 8) {
d98 1
a98 1
        if (service != NULL && strcmp(serv,service))
d101 1
a101 1
        if (!wcard && strcmp(inst,instance))
d103 4
a106 2
        if (wcard)
            strncpy(instance,inst,INST_SZ);
d108 1
a108 1
        if (realm != NULL && strcmp(rlm,realm)) 
@


1.2
log
@The first big step towards a complete upgrade to kth-krb4-0.9.7
@
text
@d1 1
d77 4
a80 1
        return(KFAILURE);
d90 1
a90 1
            return(KFAILURE);
d95 1
a95 1
            return(KFAILURE);
d98 1
a98 1
        if (strcmp(serv,service))
d106 1
a106 1
        if (strcmp(rlm,realm)) 
d114 1
a114 1
        return(KSUCCESS);
@


1.1
log
@Initial revision
@
text
@d1 1
a1 7
/*
 * This software may now be redistributed outside the US.
 *
 * $Source: /usr/src/kerberosIV/lib/krb/RCS/read_service_key.c,v $
 *
 * $Locker:  $
 */
a58 1
/*ARGSUSED */
d60 6
a65 7
read_service_key(service, instance, realm, kvno, file, key)
	char *service;		/* Service Name */
	char *instance;		/* Instance name or "*" */
	char *realm;		/* Realm */
	int kvno;		/* Key version number */
	char *file;		/* Filename */
	char *key;		/* Pointer to key to be filled in */
d73 1
a73 1
    int stab, open(const char *, int, ...);
d75 1
a75 1
    if ((stab = open(file, 0, 0)) < 0)
d81 2
a82 2
        (void) getst(stab,inst,INST_SZ); /* Instance */
        (void) getst(stab,rlm,REALM_SZ); /* Realm */
d84 1
a84 1
        if (read(stab,(char *)&vno,1) != 1) {
d100 1
a100 1
            (void) strncpy(instance,inst,INST_SZ);
a101 8
#ifdef ATHENA_COMPAT
	/* XXX For backward compatibility:  if keyfile says "Athena"
	   and caller wants "ATHENA.MIT.EDU", call it a match */
        if (strcmp(rlm,realm) &&
	    (strcmp(rlm,"Athena") ||
	     strcmp(realm,"ATHENA.MIT.EDU")))
	    continue;
#else /* ! ATHENA_COMPAT */
a103 1
#endif /* ATHENA_COMPAT */
d109 1
a109 1
        (void) close(stab);
d114 1
a114 1
    (void) close(stab);
@


1.1.1.1
log
@Kerberos IV code, based on a merge of fixed code from KTH and original
4.4BSD Lite code (international edition).  Provides all functionality
from the original 4.4BSD code plus standard Kerberos elements that were
omitted in the 4.4BSD code.
@
text
@@

