head	1.5;
access;
symbols
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	initial:1.1.1.1
	KTH/tholo:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2000.02.25.15.15.03;	author hin;	state dead;
branches;
next	1.4;

1.4
date	97.12.09.07.57.24;	author art;	state Exp;
branches;
next	1.3;

1.3
date	97.11.28.12.49.12;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.01.29.19.18.45;	author tholo;	state dead;
branches;
next	1.1;

1.1
date	95.12.14.06.52.38;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.12.14.06.52.38;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove old KerberosIV code. (art@@ ok)
@
text
@/*	$OpenBSD: krb_equiv.c,v 1.4 1997/12/09 07:57:24 art Exp $	*/
/* $KTH: krb_equiv.c,v 1.13 1997/04/01 08:18:33 joda Exp $ */

/*
 * Copyright (c) 1995, 1996, 1997 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by the Kungliga Tekniska
 *      Högskolan and its contributors.
 * 
 * 4. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * int krb_equiv(u_int32_t ipaddr_a, u_int32_t ipaddr_b);
 *
 * Given two IP adresses return true if they match
 * or are considered to belong to the same host.
 *
 * For example if /etc/krb.equiv looks like
 *
 *    130.237.223.3   192.16.126.3    # alv alv1
 *    130.237.223.4   192.16.126.4    # byse byse1
 *    130.237.228.152 192.16.126.9    # topsy topsy1
 *
 * krb_equiv(alv, alv1) would return true but
 * krb_equiv(alv, byse1) would not.
 *
 * A comment starts with an '#' and ends with '\n'.
 *
 */
#include "krb_locl.h"

int krb_ignore_ip_address = 0;

int
krb_equiv(u_int32_t a, u_int32_t b)
{
  FILE *fil;
  char line[256];
  int hit_a, hit_b;
  int iscomment;
  
  if (a == b)			/* trivial match, also the common case */
    return 1;
  
  if (krb_ignore_ip_address)
    return 1;			/* if we have decided not to compare */

  a = ntohl(a);
  b = ntohl(b);

  fil = fopen(KRB_EQUIV, "r");
  if (fil == NULL)		/* open failed */
    return 0;
  
  hit_a = hit_b = 0;
  iscomment = 0;
  while (fgets(line, sizeof(line)-1, fil) != NULL) /* for each line */
    {
      char *t = line;
      int len = strlen(t);
      
      /* for each item on this line */
      while (*t != 0)		/* more addresses on this line? */
	if (*t == '\n') {
	  iscomment = hit_a = hit_b = 0;
	  break;
	} else if (iscomment)
	  t = line + len - 1;
	else if (*t == '#') {		/* rest is comment */
	  iscomment = 1;
	  ++t;
	} else if (*t == '\\' ) /* continuation */
	  break;
	else if (isspace(*t))	/* skip space */
	  t++;
	else if (isdigit(*t))	/* an address? */
	  {
	    u_int32_t tmp;
	    u_int32_t tmpa, tmpb, tmpc, tmpd;
	    
	    sscanf(t, "%d.%d.%d.%d", &tmpa, &tmpb, &tmpc, &tmpd);
	    tmp = (tmpa << 24) | (tmpb << 16) | (tmpc << 8) | tmpd;

	    while (*t == '.' || isdigit(*t)) /* done with this address */
	      t++;

	    if (tmp != -1) {	/* an address (and not broadcast) */
	      u_int32_t mask = (u_int32_t)~0;

	      if (*t == '/') {
		++t;
		mask <<= 32 - atoi(t);

		while(isdigit(*t))
		  ++t;
	      }

	      if ((tmp & mask) == (a & mask))
		hit_a = 1;
	      if ((tmp & mask) == (b & mask))
		hit_b = 1;
	      if (hit_a && hit_b) {
		fclose(fil);
		return 1;
	      }
	    }
	  }
	else
	  ++t;		/* garbage on this line, skip it */

    }

  fclose(fil);
  return 0;
}
@


1.4
log
@Removed one expliotable hole, one possibly exploitable hole, many buffer
overflows and lots of unchecked pointers. Tags are nice too.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3
log
@The first big step towards a complete upgrade to kth-krb4-0.9.7
@
text
@d1 1
@


1.2
log
@Make it work for multi-homed servers by default; remove need for krb.equiv
@
text
@d1 40
d61 2
d64 1
a64 3
krb_equiv(a, b)
	u_int32_t a;
	u_int32_t b;
a65 4
#ifdef NO_IPADDR_CHECK
  return 1;
#else

a66 1
  int result = 0;
d68 2
d71 1
a71 1
  if (a == b)			/* trivial match */
d74 6
d84 2
a87 1
      int hit_a = 0, hit_b = 0;
d89 1
d93 10
a102 2
	if (*t == '#')		/* rest is comment */
	  *t = 0;
d107 2
a108 7
	    u_int32_t tmp = inet_addr(t);
	    if (tmp == -1)
	      ;			/* not an address (or broadcast) */
	    else if (tmp == a)
	      hit_a = 1;
	    else if (tmp == b)
	      hit_b = 1;
d110 3
d115 21
d138 1
a138 1
	  *t = 0;		/* garbage on this line, skip it */
a139 6
      /* line is now parsed, if we found 2 matches were done */
      if (hit_a && hit_b)
	{
	  result = 1;
	  goto done;
	}
a141 1
 done:
d143 1
a143 2
  return result;
#endif /* !NO_IPADDR_CHECK */
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Kerberos IV code, based on a merge of fixed code from KTH and original
4.4BSD Lite code (international edition).  Provides all functionality
from the original 4.4BSD code plus standard Kerberos elements that were
omitted in the 4.4BSD code.
@
text
@@
