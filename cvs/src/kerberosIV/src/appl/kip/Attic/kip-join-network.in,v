head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.1.0.12
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.10
	OPENBSD_3_2_BASE:1.1.1.1
	KRB4_1_1_1:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.8
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.6
	OPENBSD_3_0_BASE:1.1.1.1
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.4
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.2
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.18.45.34;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.07.11.09.05.58;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.07.11.09.05.58;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@#!/bin/sh
# $Id: kip-join-network.in,v 1.1 2000/07/11 09:05:58 hin Exp $
#
# Join a network, see kipd-control from more comments.
#

PATH=/usr/sbin:/sbin:/usr/bin:/bin:%bindir%

endpointhost=130.237.43.201
thispointhost=130.237.43.17
fakepoint=10.0.0.1
dev=tun0

case $# in
    0)
        modprobe tun
	def=$(route -n | awk '$1 ~ /0.0.0.0/ && $3 ~ /0.0.0.0/ { print $2 }')

	if test "X$def" = "X" ; then
		echo "missing default route"
		exit 1
	fi

	exec kip -c $0 -a $def $endpointhost
	;;
    *)
	state=$1
	dev=$2
	host=$3
	arg=$4
	case $state in
	up)
		ifconfig $dev $thispointhost pointopoint $fakepoint
		route delete default

		route add -host $endpointhost gw $arg
		route add default gw $fakepoint
		;;
	down)

		echo $dev $arg > /tmp/kip-down

		ifconfig $dev down

		route delete default
		route delete $endpointhost
		route add default gw $arg
		;;
	*)
		exit 17
	;;
	esac
esac
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
# $Id$
@


1.1.1.1
log
@Import of KTH Kerberos4 1.0.2
@
text
@@
