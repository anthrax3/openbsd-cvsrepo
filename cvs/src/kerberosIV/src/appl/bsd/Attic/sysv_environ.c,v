head	1.5;
access;
symbols
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	KRB4_1_1_1:1.1.1.2
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.05.16.18.45.34;	author mho;	state dead;
branches;
next	1.4;

1.4
date	2002.06.08.21.49.00;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.19.09.29.24;	author assar;	state Exp;
branches;
next	1.2;

1.2
date	2000.09.15.19.55.51;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.15.32.38;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.32.38;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.08.21.07.17;	author hin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@/************************************************************************
* Copyright 1995 by Wietse Venema.  All rights reserved.  Some individual
* files may be covered by other copyrights.
*
* This material was originally written and compiled by Wietse Venema at
* Eindhoven University of Technology, The Netherlands, in 1990, 1991,
* 1992, 1993, 1994 and 1995.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that this entire copyright notice
* is duplicated in all such copies.
*
* This software is provided "as is" and without any expressed or implied
* warranties, including, without limitation, the implied warranties of
* merchantibility and fitness for any particular purpose.
************************************************************************/
/* Author: Wietse Venema <wietse@@wzv.win.tue.nl> */

#include "bsd_locl.h"

RCSID("$KTH: sysv_environ.c,v 1.25 2001/06/04 14:08:41 assar Exp $");

#ifdef HAVE_ULIMIT_H
#include <ulimit.h>
#endif

#ifndef UL_SETFSIZE
#define UL_SETFSIZE 2
#endif

#include "sysv_default.h"

/*
 * Set 
 */

static void
read_etc_environment (void)
{
    FILE *f;
    char buf[BUFSIZ];

    f = fopen(_PATH_ETC_ENVIRONMENT, "r");
    if (f) {
	char *val;

	while (fgets (buf, sizeof(buf), f) != NULL) {
	    if (buf[0] == '\n' || buf[0] == '#')
		continue;
	    buf[strlen(buf) - 1] = '\0';
	    val = strchr (buf, '=');
	    if (val == NULL)
		continue;
	    *val = '\0';
	    esetenv(buf, val + 1, 1);
	}
	fclose (f);
    }
}

 /*
  * Environment variables that are preserved (but may still be overruled by
  * other means). Only TERM and TZ appear to survive (SunOS 5.1). These are
  * typically inherited from the ttymon process.
  */

static struct preserved {
    char   *name;
    char   *value;
} preserved[] = {
    {"TZ", 0},
    {"TERM", 0},
    {0},
};

 /*
  * Environment variables that are not preserved and that cannot be specified
  * via commandline or stdin. Except for the LD_xxx (runtime linker) stuff,
  * the list applies to most SYSV systems. The manpage mentions only that
  * SHELL and PATH are censored. HOME, LOGNAME and MAIL are always
  * overwritten; they are in the list to make the censoring explicit.
  */

static struct censored {
    char   *prefix;
    int     length;
} censored[] = {
  {"SHELL=",	sizeof("SHELL=") - 1},
     {"HOME=",	sizeof("HOME=") - 1},
     {"LOGNAME=",	sizeof("LOGNAME=") - 1},
     {"MAIL=",	sizeof("MAIL=") - 1},
     {"CDPATH=",	sizeof("CDPATH=") - 1},
     {"IFS=",	sizeof("IFS=") - 1},
     {"PATH=",	sizeof("PATH=") - 1},
    {"LD_",	sizeof("LD_") - 1},
    {0},
};

/* sysv_newenv - set up final environment after logging in */

void sysv_newenv(int argc, char **argv, struct passwd *pwd,
		 char *term, int pflag)
{
    unsigned umask_val;
    char    buf[BUFSIZ];
    int     count = 0;
    struct censored *cp;
    struct preserved *pp;

    /* Preserve a selection of the environment. */

    for (pp = preserved; pp->name; pp++)
	pp->value = getenv(pp->name);

    /*
     * Note: it is a bad idea to assign a static array to the global environ
     * variable. Reason is that putenv() can run into problems when it tries
     * to realloc() the environment table. Instead, we just clear environ[0]
     * and let putenv() work things out.
     */

    if (!pflag && environ)
	environ[0] = 0;

    /* Restore preserved environment variables. */

    for (pp = preserved; pp->name; pp++)
	if (pp->value)
	    esetenv(pp->name, pp->value, 1);

    /* The TERM definition from e.g. rlogind can override an existing one. */

    if (term[0])
	esetenv("TERM", term, 1);

    /*
     * Environment definitions from the command line overrule existing ones,
     * but can be overruled by definitions from stdin. Some variables are
     * censored.
     * 
     * Omission: we do not support environment definitions from stdin.
     */

#define STREQN(x,y,l) (x[0] == y[0] && strncmp(x,y,l) == 0)

    while (argc && *argv) {
	if (strchr(*argv, '=') == 0) {
	    snprintf(buf, sizeof(buf), "L%d", count++);
	    esetenv(buf, *argv, 1);
	} else {
	    for (cp = censored; cp->prefix; cp++)
		if (STREQN(*argv, cp->prefix, cp->length))
		    break;
	    if (cp->prefix == 0)
		putenv(*argv);
	}
	argc--, argv++;
    }

    /* PATH is always reset. */

    esetenv("PATH", pwd->pw_uid ? default_path : default_supath, 1);

    /* Undocumented: HOME, MAIL and LOGNAME are always reset (SunOS 5.1). */

    esetenv("HOME", pwd->pw_dir, 1);
    {
	char *sep = "/";
	if(KRB4_MAILDIR[strlen(KRB4_MAILDIR) - 1] == '/')
	    sep = "";
	roken_concat(buf, sizeof(buf), KRB4_MAILDIR, sep, pwd->pw_name, NULL);
    }
    esetenv("MAIL", buf, 1);
    esetenv("LOGNAME", pwd->pw_name, 1);
    esetenv("USER", pwd->pw_name, 1);

    /*
     * Variables that may be set according to specifications in the defaults
     * file. HZ and TZ are set only if they are still uninitialized.
     * 
     * Extension: when ALTSHELL=YES, we set the SHELL variable even if it is
     * /bin/sh.
     */

    if (strcasecmp(default_altsh, "YES") == 0)
	esetenv("SHELL", pwd->pw_shell, 1);
    if (default_hz)
	esetenv("HZ", default_hz, 0);
    if (default_timezone)
	esetenv("TZ", default_timezone, 0);

    /* Non-environment stuff. */

    if (default_umask) {
	if (sscanf(default_umask, "%o", &umask_val) == 1 && umask_val)
	    umask(umask_val);
    }
#ifdef HAVE_ULIMIT
    if (default_ulimit) {
	long    limit_val;

	if (sscanf(default_ulimit, "%ld", &limit_val) == 1 && limit_val)
	    if (ulimit(UL_SETFSIZE, limit_val) < 0)
	        warn ("ulimit(UL_SETFSIZE, %ld)", limit_val);
    }
#endif
    read_etc_environment();
}

@


1.4
log
@Merge krb4-1.1.1
@
text
@@


1.3
log
@update Wietse Venema's copyright to update copyright to ftp://ftp.porcupine.org/pub/security/logdaemon_license
@
text
@d21 1
a21 1
RCSID("$KTH: sysv_environ.c,v 1.23 1997/12/14 23:50:44 assar Exp $");
d55 1
a55 2
	    if(setenv(buf, val + 1, 1) != 0)
		errx(1, "cannot set %s", buf);
d129 1
a129 2
	    if(setenv(pp->name, pp->value, 1) != 0)
		errx(1, "cannot set %s", pp->name);
d134 1
a134 2
	if(setenv("TERM", term, 1) != 0)
	    errx(1, "cannot set TERM");
d149 1
a149 2
	    if(setenv(buf, *argv, 1) != 0)
		errx(1, "cannot set %s", buf);
d162 1
a162 2
    if(setenv("PATH", pwd->pw_uid ? default_path : default_supath, 1) != 0)
	errx(1, "cannot set PATH");
d166 1
a166 2
    if(setenv("HOME", pwd->pw_dir, 1) != 0)
	errx(1, "cannot set HOME");
d173 3
a175 6
    if(setenv("MAIL", buf, 1) != 0)
	errx(1, "cannot set MAIL");
    if(setenv("LOGNAME", pwd->pw_name, 1) != 0)
	errx(1, "cannot set LOGNAME");
    if(setenv("USER", pwd->pw_name, 1) != 0)
	errx(1, "cannot set USER");
d186 1
a186 2
	if(setenv("SHELL", pwd->pw_shell, 1) != 0)
	    errx(1, "cannot set SHELL");
d188 1
a188 2
	if(setenv("HZ", default_hz, 0) != 0)
	    errx(1, "cannot set HZ");
d190 1
a190 2
	if(setenv("TZ", default_timezone, 0) != 0)
	    errx(1, "cannot set TZ");
@


1.2
log
@Check the return value from setenv().
(Noted by deraadt)
@
text
@d1 16
@


1.1
log
@Initial revision
@
text
@d39 2
a40 1
	    setenv(buf, val + 1, 1);
d114 2
a115 1
	    setenv(pp->name, pp->value, 1);
d120 2
a121 1
	setenv("TERM", term, 1);
d136 2
a137 1
	    setenv(buf, *argv, 1);
d150 2
a151 1
    setenv("PATH", pwd->pw_uid ? default_path : default_supath, 1);
d155 2
a156 1
    setenv("HOME", pwd->pw_dir, 1);
d163 6
a168 3
    setenv("MAIL", buf, 1);
    setenv("LOGNAME", pwd->pw_name, 1);
    setenv("USER", pwd->pw_name, 1);
d179 2
a180 1
	setenv("SHELL", pwd->pw_shell, 1);
d182 2
a183 1
	setenv("HZ", default_hz, 0);
d185 2
a186 1
	setenv("TZ", default_timezone, 0);
@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@


1.1.1.2
log
@Import of krb4-1.1.1
@
text
@a0 16
/************************************************************************
* Copyright 1995 by Wietse Venema.  All rights reserved.  Some individual
* files may be covered by other copyrights.
*
* This material was originally written and compiled by Wietse Venema at
* Eindhoven University of Technology, The Netherlands, in 1990, 1991,
* 1992, 1993, 1994 and 1995.
*
* Redistribution and use in source and binary forms, with or without
* modification, are permitted provided that this entire copyright notice
* is duplicated in all such copies.
*
* This software is provided "as is" and without any expressed or implied
* warranties, including, without limitation, the implied warranties of
* merchantibility and fitness for any particular purpose.
************************************************************************/
d5 1
a5 1
RCSID("$KTH: sysv_environ.c,v 1.25 2001/06/04 14:08:41 assar Exp $");
d39 1
a39 1
	    esetenv(buf, val + 1, 1);
d113 1
a113 1
	    esetenv(pp->name, pp->value, 1);
d118 1
a118 1
	esetenv("TERM", term, 1);
d133 1
a133 1
	    esetenv(buf, *argv, 1);
d146 1
a146 1
    esetenv("PATH", pwd->pw_uid ? default_path : default_supath, 1);
d150 1
a150 1
    esetenv("HOME", pwd->pw_dir, 1);
d157 3
a159 3
    esetenv("MAIL", buf, 1);
    esetenv("LOGNAME", pwd->pw_name, 1);
    esetenv("USER", pwd->pw_name, 1);
d170 1
a170 1
	esetenv("SHELL", pwd->pw_shell, 1);
d172 1
a172 1
	esetenv("HZ", default_hz, 0);
d174 1
a174 1
	esetenv("TZ", default_timezone, 0);
@

