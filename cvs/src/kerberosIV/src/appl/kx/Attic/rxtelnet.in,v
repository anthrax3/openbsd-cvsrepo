head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.2.0.4
	OPENBSD_3_3_BASE:1.1.1.2
	OPENBSD_3_2:1.1.1.2.0.2
	OPENBSD_3_2_BASE:1.1.1.2
	KRB4_1_1_1:1.1.1.2
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.18.45.35;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.02.25.15.34.04;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.34.04;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.08.21.07.28;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@#!/bin/sh
# $KTH: rxtelnet.in,v 1.26 1999/02/04 21:19:50 assar Exp $
#
usage="Usage: $0 [-l username] [-k] [-t args_to_telnet] [-x args_to_xterm] [-w term_emulator] [-n] [-v] [-h | --help] [--version] host [port]"
term=
kx_args=-P
while true
do
  case $1 in
  -l) telnet_args="${telnet_args} -l $2 "; kx_args="${kx_args} -l $2"; title="${2}@@"; shift 2;;
  -t) telnet_args="${telnet_args} $2 "; shift 2;;
  -x) xterm_args="${xterm_args} $2 "; shift 2;;
  -k) kx_args="${kx_args} -k"; shift;;
  -n) term=none; shift;;
  -w) term=$2; shift 2;;
  --version) echo "$0: %PACKAGE% %VERSION%"; exit 0;;
  -h) echo $usage; exit 0;;
  --help) echo $usage; exit 0;;
  -v) set -x; verb=1; shift;;
  -*) echo "$0: Bad option $1"; echo $usage; exit 1;;
  *) break;;
  esac
done
if test $# -lt 1; then
  echo $usage
  exit 1
fi
host=$1
port=$2
title="${title}${host}"
bindir=%bindir%
pdc_trams=`dirname $0`
PATH=$pdc_trams:$bindir:$PATH
export PATH
set -- `kx $kx_args $host`
if test $# -ne 3; then
  exit 1
fi
screen=`echo $DISPLAY | sed -ne 's/[^:]*:[0-9]*\(\.[0-9]*\)/\1/p'`
pid=$1
disp=${2}${screen}
auth=$3
oldifs=$IFS
IFS=:
set -- $PATH
IFS=$oldifs
if test -z "$term"; then
  for j in xterm dtterm aixterm dxterm hpterm; do
    for i in $*; do
      test -n "$i" || i="."
      if test -x $i/$j; then
	term=$j; break 2
      fi
    done
  done
fi
test "$verb" && echo "Telnet command used is `type telnet`."
if test -n "$term" -a "$term" != "none"; then
  ($term -title $title -n $title $xterm_args -e env DISPLAY=$disp XAUTHORITY=$auth telnet -D $telnet_args $host $port; kill -USR2 $pid) &
else
  env DISPLAY=$disp XAUTHORITY=$auth telnet -D $telnet_args $host $port
  kill -USR2 $pid
fi
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@


1.1.1.2
log
@Import of krb4-1.1.1
@
text
@d2 1
a2 1
# $KTH: rxtelnet.in,v 1.28 2001/07/12 09:28:11 assar Exp $
d4 1
a4 2
usage="Usage: $0 [-l username] [-k] [-t args_to_telnet] [-x args_to_xterm] [-K args_to_kx] [-w term_emulator] [-b telnet_binary] [-n] [-v] [-h | --help] [--version] host [port]"
binary=telnet
a13 1
  -K) kx_args="${kx_args} $2 "; shift 2;;
a15 1
  -b) binary=$2; shift 2;;
d57 1
a57 1
test "$verb" && echo "Telnet command used is `type $binary`."
d59 1
a59 1
  ($term -title $title -n $title $xterm_args -e env DISPLAY=$disp XAUTHORITY=$auth $binary -D $telnet_args $host $port; kill -USR2 $pid) &
d61 1
a61 1
  env DISPLAY=$disp XAUTHORITY=$auth $binary -D $telnet_args $host $port
@

