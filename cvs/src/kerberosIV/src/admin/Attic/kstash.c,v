head	1.5;
access;
symbols
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	KRB4_1_1_1:1.1.1.2
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.05.16.18.45.33;	author mho;	state dead;
branches;
next	1.4;

1.4
date	2002.06.12.02.30.53;	author jsyn;	state Exp;
branches;
next	1.3;

1.3
date	2002.06.08.21.49.00;	author hin;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.07.03.10.16;	author hin;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.25.15.32.26;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.32.26;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.06.08.21.07.15;	author hin;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@/*
 * Copyright 1985, 1986, 1987, 1988 by the Massachusetts Institute
 * of Technology 
 *
 * For copying and distribution information, please see the file
 * <mit-copyright.h>.
 *
 * Description.
 */

#include "adm_locl.h"

RCSID("$KTH: kstash.c,v 1.11 2001/02/20 23:07:49 assar Exp $");

/* change this later, but krblib_dbm needs it for now */

static des_cblock master_key;
static des_key_schedule master_key_schedule;

static void 
clear_secrets(void)
{
    memset(master_key_schedule, 0, sizeof(master_key_schedule));
    memset(master_key, 0, sizeof(master_key));
}

int
main(int argc, char **argv)
{
    long    n;
    int ret = 0;

    if ((n = kerb_init()))
        errx(1, "Kerberos db and cache init failed = %ld", n);

    if (kdb_get_master_key (KDB_GET_PROMPT, &master_key,
			    master_key_schedule) != 0) {
	clear_secrets();
	errx(1, "Couldn't read master key.");
    }

    if (kdb_verify_master_key (&master_key, master_key_schedule, stderr) < 0) {
	clear_secrets();
	return 1;
    }

    ret = kdb_kstash(&master_key, MKEYFILE);
    if(ret < 0)
        warn("writing master key");
    else
	fprintf(stderr, "Wrote master key to %s\n", MKEYFILE);
    
    clear_secrets();
    return ret;
}
@


1.4
log
@err(3) newline cleanup, krb pieces; ok hin@@
@
text
@@


1.3
log
@Merge krb4-1.1.1
@
text
@d34 1
a34 1
        errx(1, "Kerberos db and cache init failed = %ld\n", n);
@


1.2
log
@set_progname/get_progname cleanup
@
text
@d13 1
a13 1
RCSID("$KTH: kstash.c,v 1.10 1997/03/30 17:35:37 assar Exp $");
@


1.1
log
@Initial revision
@
text
@a31 1
    set_progname (argv[0]);
@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@


1.1.1.2
log
@Import of krb4-1.1.1
@
text
@d13 1
a13 1
RCSID("$KTH: kstash.c,v 1.11 2001/02/20 23:07:49 assar Exp $");
d32 1
a32 1
    setprogname (argv[0]);
@

