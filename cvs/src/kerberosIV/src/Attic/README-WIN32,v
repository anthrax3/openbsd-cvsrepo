head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.1.0.14
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.12
	OPENBSD_3_2_BASE:1.1.1.1
	KRB4_1_1_1:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.18.45.33;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.02.25.15.31.57;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.31.57;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@It should be possible to build several of the libraries and the GUI
telnet ``voodoo'' on Win95/NT.  In case you don't want to try there
are binaries available at
ftp://ftp.pdc.kth.se/pub/krb/binaries/i386-unknown-winnt4.0.

In case you want to build from source and possibly hack some on them
yourself here's a short guide:

You need to build the libraries (DLLs) first and in this order:

lib/roken
lib/des
lib/krb
lib/kclient

And then the two applications:

appl/krbmanager
appl/voodoo

In each case there is a Visual-C++ generated makefile with the name
*.mak in the corresponding directory.  You might be able to load that
into Microsoft whatever Studio and you might be able to just run nmake
on them.

Once you have ended up with 4 DLLs and 2 EXEs you only have to place
them in a directory in your PATH and start voodoo.

In case it doesn't work, you have discovered bugs or added some more
features the mail address to use is <kth-krb-bugs@@nada.kth.se>
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@
