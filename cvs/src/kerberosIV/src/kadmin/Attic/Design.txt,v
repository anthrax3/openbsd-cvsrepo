head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.1.0.14
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.12
	OPENBSD_3_2_BASE:1.1.1.1
	KRB4_1_1_1:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.10
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.8
	OPENBSD_3_0_BASE:1.1.1.1
	KRB4_1_0_8:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.18.45.37;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.02.25.15.34.54;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.34.54;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@// This file attempts to present the internal functioning of the new kerberos
// admin server and interface..

//
// The calling side
//

// Outer interface (programmers interface)
kadm_mod_entry(vals *old_dat, vals *new_dat) returns (vals *cur_dat)
    // sends a command telling the server to change all entries which match
    //   old_dat to entries matching new_dat
    // returns in cur_dat the actual current values of the modified records
    // implemented with calls to _vals_to_stream, _send_out, _take_in, and
    //   _stream_to_vals, _interpret_ret

// Inner calls
_vals_to_stream (vals *, unsigned char *)
    // converts a vals structure to a byte stream for transmission over the net

_stream_to_vals (unsigned char *, vals *)
    // converts a byte stream recieved into a vals structure


@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@
