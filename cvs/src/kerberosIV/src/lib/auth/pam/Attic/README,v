head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.3.0.4
	OPENBSD_3_3_BASE:1.1.1.3
	OPENBSD_3_2:1.1.1.3.0.2
	OPENBSD_3_2_BASE:1.1.1.3
	KRB4_1_1_1:1.1.1.3
	OPENBSD_3_1:1.1.1.2.0.4
	OPENBSD_3_1_BASE:1.1.1.2
	OPENBSD_3_0:1.1.1.2.0.2
	OPENBSD_3_0_BASE:1.1.1.2
	KRB4_1_0_8:1.1.1.2
	OPENBSD_2_9:1.1.1.1.0.6
	OPENBSD_2_9_BASE:1.1.1.1
	KRB4_1_0_4:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.4
	OPENBSD_2_8_BASE:1.1.1.1
	KRB4_1_0_2:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2003.05.16.18.45.38;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.02.25.15.36.57;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.36.57;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2001.05.14.13.31.55;	author hin;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.06.08.21.07.54;	author hin;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@
PAM
---

The PAM module was written more out of curiosity that anything else. It
has not been updated for quite a while, but it seems to mostly work on
both Linux and Solaris.

To use this module you should:

   * Make sure `pam_krb4.so' is available in `/usr/athena/lib'. You
     might actually want it on local disk, so `/lib/security' might be a
     better place if `/usr/athena' is not local.

   * Look at `pam.conf.add' for examples of what to add to
     `/etc/pam.conf'.

There is currently no support for changing kerberos passwords. Use
kpasswd instead.

See also Derrick J Brashear's `<shadow@@dementia.org>' Kerberos PAM
module at
<ftp://ftp.dementia.org/pub/pam>. It has a lot more features, and it is
also more in line with other PAM modules.

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@


1.1.1.2
log
@Import of krb4-1.0.8.

(ok art)
@
text
@d1 1
d23 1
a23 1
`ftp://ftp.dementia.org/pub/pam'. It has a lot more features, and it is
@


1.1.1.3
log
@Import of krb4-1.1.1
@
text
@a0 1

d4 20
a23 41
Currently the PAM module has only been tested under Linux and SunOS5
(aka Solaris). Probably it will also work on other systems but that has
not yet been tried by us.

To build the module the argument `--enable-shared' must be passed to
`configure'. This is necessary because PAM modules are loaded as shared
libraries. Note that the shared libraries must also be available during
runtime for the PAM module to operate correctly. You may pass the
argument `debug' to the PAM module to trace configuration errors.

As an alternative to building shared libraries it is possible to build a
stand-alone PAM module, i.e a module that does not depend on any of the
Kerberos shared-libraries. To do this archive (`.a') libraries
containing position independent code are required. The following steps
can be used to build a stand-alone PAM module:

     datan$ env CFLAGS=-fpic ./configure
     datan$ make
     datan$ cd lib/auth/pam
     datan$ make
     datan$ make install

Note that `--enable-shared' should not be passed to configure, setting
`CFLAGS' takes care of that. The module will be functional even if the
Kerberos libraries can not be loaded.

To use the module you should:

   * Make sure that `pam_krb4.so' is available in `/usr/athena/lib'.
     You might want to keep the module locally instead, `/lib/security'
     can be a better alternative if `/usr/athena' is not on local disk.

   * Look at `krb4-1.0.2/lib/auth/pam/pam.conf.add' for examples of what
     to add to `/etc/pam.conf' (or the files in `/etc/pam.d').

The PAM module currently has no support for changing kerberos
passwords. Use kpasswd instead.

The PAM module was greatly influenced by Derrick J Brashear's
`<shadow@@dementia.org>' Kerberos PAM module that can be found at
<ftp://ftp.dementia.org/pub/pam>.
@


