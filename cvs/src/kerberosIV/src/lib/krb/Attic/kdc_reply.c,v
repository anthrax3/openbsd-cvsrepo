head	1.2;
access;
symbols
	OPENBSD_3_3:1.1.1.4.0.4
	OPENBSD_3_3_BASE:1.1.1.4
	OPENBSD_3_2:1.1.1.4.0.2
	OPENBSD_3_2_BASE:1.1.1.4
	KRB4_1_1_1:1.1.1.4
	OPENBSD_3_1:1.1.1.3.0.6
	OPENBSD_3_1_BASE:1.1.1.3
	OPENBSD_3_0:1.1.1.3.0.4
	OPENBSD_3_0_BASE:1.1.1.3
	KRB4_1_0_8:1.1.1.3
	OPENBSD_2_9:1.1.1.3.0.2
	OPENBSD_2_9_BASE:1.1.1.3
	KRB4_1_0_4:1.1.1.3
	OPENBSD_2_8:1.1.1.2.0.2
	OPENBSD_2_8_BASE:1.1.1.2
	KRB4_1_0_2:1.1.1.2
	OPENBSD_2_7:1.1.1.1.0.2
	OPENBSD_2_7_BASE:1.1.1.1
	KRB4_1_0:1.1.1.1
	KTH:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	2003.05.16.18.45.40;	author mho;	state dead;
branches;
next	1.1;

1.1
date	2000.02.25.15.35.16;	author hin;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2000.02.25.15.35.16;	author hin;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2000.07.11.09.06.40;	author hin;	state Exp;
branches
	1.1.1.2.2.1;
next	1.1.1.3;

1.1.1.3
date	2000.12.10.19.05.29;	author hin;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.06.08.21.07.38;	author hin;	state Exp;
branches;
next	;

1.1.1.2.2.1
date	2000.12.11.01.36.11;	author jason;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Bye, bye, kerberosIV; ok hin@@
@
text
@/*
 * Copyright (c) 1995, 1996, 1997, 1998 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "krb_locl.h"

RCSID("$KTH: kdc_reply.c,v 1.12 1999/12/02 16:58:42 joda Exp $");

static int little_endian; /* XXX ugly */

int
kdc_reply_cred(KTEXT cip, CREDENTIALS *cred)
{
    unsigned char *p = cip->dat;
    
    memcpy(cred->session, p, 8);
    p += 8;
    
    if(p + strlen((char*)p) > cip->dat + cip->length)
	return INTK_BADPW;
    p += krb_get_string(p, cred->service, sizeof(cred->service));
    
    if(p + strlen((char*)p) > cip->dat + cip->length)
	return INTK_BADPW;
    p += krb_get_string(p, cred->instance, sizeof(cred->instance));
    
    if(p + strlen((char*)p) > cip->dat + cip->length)
	return INTK_BADPW;
    p += krb_get_string(p, cred->realm, sizeof(cred->realm));
    
    if(p + 3 > cip->dat + cip->length)
	return INTK_BADPW;
    cred->lifetime = *p++;
    cred->kvno = *p++;
    cred->ticket_st.length = *p++;
    
    if(p + cred->ticket_st.length + 4 > cip->dat + cip->length)
	return INTK_BADPW;
    memcpy(cred->ticket_st.dat, p, cred->ticket_st.length);
    p += cred->ticket_st.length;
    
    p += krb_get_int(p, (u_int32_t *)&cred->issue_date, 4, little_endian);
    
    return KSUCCESS;
}

int
kdc_reply_cipher(KTEXT reply, KTEXT cip)
{
    unsigned char *p;
    unsigned char pvno;
    unsigned char type;

    char aname[ANAME_SZ];
    char inst[INST_SZ];
    char realm[REALM_SZ];
    
    u_int32_t kdc_time;
    u_int32_t exp_date;
    u_int32_t clen;

    p = reply->dat;

    pvno = *p++;

    if (pvno != KRB_PROT_VERSION )
        return INTK_PROT;
    
    type = *p++;
    little_endian = type & 1;
    
    type &= ~1;

    if(type == AUTH_MSG_ERR_REPLY){
	u_int32_t code;
	/* skip these fields */
	p += strlen((char*)p) + 1; /* name */
	p += strlen((char*)p) + 1; /* instance */
	p += strlen((char*)p) + 1; /* realm */
	p += 4; /* time */
	p += krb_get_int(p, &code, 4, little_endian);
	if(code == 0)
	    code = KFAILURE; /* things will go bad otherwise */
	return code;
    }
    if(type != AUTH_MSG_KDC_REPLY)
	return INTK_PROT;

    p += krb_get_nir(p, aname, inst, realm);
    p += krb_get_int(p, &kdc_time, 4, little_endian);
    p++; /* number of tickets */
    p += krb_get_int(p, &exp_date, 4, little_endian);
    p++; /* master key version number */
    p += krb_get_int(p, &clen, 2, little_endian);
    cip->length = clen;
    memcpy(cip->dat, p, clen);
    p += clen;
    
    return KSUCCESS;
}
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Importing KTH Kerberos4 version 1.0
(art@@ ok)
@
text
@@


1.1.1.2
log
@Import of KTH Kerberos4 1.0.2
@
text
@d2 1
a2 1
 * Copyright (c) 1995 - 2000 Kungliga Tekniska Högskolan
d36 1
a36 1
RCSID("$KTH: kdc_reply.c,v 1.12.2.1 2000/06/23 03:30:42 assar Exp $");
d118 1
a118 4
    p += krb_get_nir(p,
		     aname, sizeof(aname),
		     inst, sizeof(inst),
		     realm, sizeof(realm));
@


1.1.1.2.2.1
log
@Pull in patch from current:
Errata 009:
Another problem exists in the kerberos libraries.
Fix (hin):
Import kth-krb 1.0.4, with important bugfixes.
@
text
@a126 3
    if (reply->length - (p - reply->dat) < clen)
	return INTK_PROT;

@


1.1.1.3
log
@Import kth-krb 1.0.4, with important bugfixes.
@
text
@d36 1
a36 1
RCSID("$KTH: kdc_reply.c,v 1.12.2.2 2000/12/04 14:34:28 assar Exp $");
a126 3
    if (reply->length - (p - reply->dat) < clen)
	return INTK_PROT;

@


1.1.1.4
log
@Import of krb4-1.1.1
@
text
@d36 1
a36 1
RCSID("$KTH: kdc_reply.c,v 1.14 2000/12/04 14:33:35 assar Exp $");
@


