head	1.4;
access;
symbols
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	EVENT00:1.1.1.1
	PROVOS00:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.06.20.07.59.46;	author markus;	state dead;
branches;
next	1.3;

1.3
date	2003.03.10.04.02.50;	author david;	state Exp;
branches;
next	1.2;

1.2
date	2002.06.25.15.50.16;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2002.06.15.18.01.39;	author provos;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.06.15.18.01.39;	author provos;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove old files; libevent is maintained elsewhere
@
text
@/*	$OpenBSD: test-eof.c,v 1.3 2003/03/10 04:02:50 david Exp $	*/

/*
 * Compile with:
 * cc -I/usr/local/include -o time-test time-test.c -L/usr/local/lib -levent
 */

#include <sys/types.h>
#include <sys/stat.h>
#include <sys/time.h>
#include <sys/socket.h>
#include <fcntl.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <errno.h>

#include <event.h>

int test_okay = 1;
int called = 0;

void
read_cb(int fd, short event, void *arg)
{
	char buf[256];
	int len;

	len = read(fd, buf, sizeof(buf));

	printf("%s: read %d%s\n", __FUNCTION__,
	    len, len ? "" : " - means EOF");

	if (len) {
		if (!called)
			event_add(arg, NULL);
	} else if (called == 1)
		test_okay = 0;

	called++;
}

int
main (int argc, char **argv)
{
	struct event ev;
	char *test = "test string";
	int pair[2];

	if (socketpair(AF_UNIX, SOCK_STREAM, 0, pair) == -1)
		return (1);

	
	write(pair[0], test, strlen(test)+1);
	shutdown(pair[0], SHUT_WR);

	/* Initialize the event library */
	event_init();

	/* Initialize one event */
	event_set(&ev, pair[1], EV_READ, read_cb, &ev);

	event_add(&ev, NULL);

	event_dispatch();

	return (test_okay);
}

@


1.3
log
@duplicate words and spelling fixes in comments
ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: test-eof.c,v 1.2 2002/06/25 15:50:16 mickey Exp $	*/
@


1.2
log
@rcsids
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d58 1
a58 1
	/* Initalize the event library */
d61 1
a61 1
	/* Initalize one event */
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@import libevent an event notification abstraction on top of select or kqueue
supporting timeout and signal callsbacks, too.  okay deraadt@@ millert@@
@
text
@@
