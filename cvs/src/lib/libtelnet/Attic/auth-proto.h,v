head	1.5;
access;
symbols
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.14
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.12
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.10
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.8
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.6
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.4
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2003.05.14.01.46.51;	author hin;	state dead;
branches;
next	1.4;

1.4
date	2001.05.25.10.23.05;	author hin;	state Exp;
branches;
next	1.3;

1.3
date	98.03.12.04.48.43;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.23.15.47;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Get rid of libtelnet, it is compiled into the tree programs
(telnetd, telnet and tn3270) that use them instead.
This gets rid of a really hairy dependency between telnet and libtelnet.

ok millert@@
@
text
@/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *     from: @@(#)auth-proto.h  8.1 (Berkeley) 6/4/93
 *     $OpenBSD: auth-proto.h,v 1.4 2001/05/25 10:23:05 hin Exp $
 *     $NetBSD: auth-proto.h,v 1.5 1996/02/24 01:15:16 jtk Exp $
 */

/*
 * This source code is no longer held under any constraint of USA
 * `cryptographic laws' since it was exported legally.  The cryptographic
 * functions were removed from the code and a "Bones" distribution was
 * made.  A Commodity Jurisdiction Request #012-94 was filed with the
 * USA State Department, who handed it to the Commerce department.  The
 * code was determined to fall under General License GTDA under ECCN 5D96G,
 * and hence exportable.  The cryptographic interfaces were re-added by Eric
 * Young, and then KTH proceeded to maintain the code in the free world.
 *
 */

/*
 * Copyright (C) 1990 by the Massachusetts Institute of Technology
 *
 * Export of this software from the United States of America is assumed
 * to require a specific license from the United States Government.
 * It is the responsibility of any person or organization contemplating
 * export to obtain such a license before exporting.
 * 
 * WITHIN THAT CONSTRAINT, permission to use, copy, modify, and
 * distribute this software and its documentation for any purpose and
 * without fee is hereby granted, provided that the above copyright
 * notice appear in all copies and that both that copyright notice and
 * this permission notice appear in supporting documentation, and that
 * the name of M.I.T. not be used in advertising or publicity pertaining
 * to distribution of the software without specific, written prior
 * permission.  M.I.T. makes no representations about the suitability of
 * this software for any purpose.  It is provided "as is" without express
 * or implied warranty.
 */

#include <sys/cdefs.h>
/* $KTH: auth-proto.h,v 1.10 2000/01/18 03:08:55 assar Exp $ */

#if	defined(AUTHENTICATION)
Authenticator *findauthenticator (int, int);

int auth_wait (char *, size_t);
void auth_disable_name (char *);
void auth_finished (Authenticator *, int);
void auth_gen_printsub (unsigned char *, int, unsigned char *, int);
void auth_init (const char *, int);
void auth_is (unsigned char *, int);
void auth_name (unsigned char*, int);
void auth_reply (unsigned char *, int);
void auth_request (void);
void auth_send (unsigned char *, int);
void auth_send_retry (void);
void auth_printsub (unsigned char*, int, unsigned char*, int);
int getauthmask (char *type, int *maskp);
int auth_enable (char *type);
int auth_disable (char *type);
int auth_onoff (char *type, int on);
int auth_togdebug (int on);
int auth_status (void);
int auth_sendname (unsigned char *cp, int len);
void auth_debug (int mode);
void auth_gen_printsub (unsigned char *data, int cnt,
		       unsigned char *buf, int buflen);

#ifdef UNSAFE
int unsafe_init (Authenticator *, int);
int unsafe_send (Authenticator *);
void unsafe_is (Authenticator *, unsigned char *, int);
void unsafe_reply (Authenticator *, unsigned char *, int);
int unsafe_status (Authenticator *, char *, int);
void unsafe_printsub (unsigned char *, int, unsigned char *, int);
#endif

#ifdef SRA
int sra_init (Authenticator *, int);
int sra_send (Authenticator *);
void sra_is (Authenticator *, unsigned char *, int);
void sra_reply (Authenticator *, unsigned char *, int);
int sra_status (Authenticator *, char *, int);
void sra_printsub (unsigned char *, int, unsigned char *, int);
#endif

#ifdef	KRB4
int kerberos4_init (Authenticator *, int);
int kerberos4_send_mutual (Authenticator *);
int kerberos4_send_oneway (Authenticator *);
void kerberos4_is (Authenticator *, unsigned char *, int);
void kerberos4_reply (Authenticator *, unsigned char *, int);
int kerberos4_status (Authenticator *, char *, size_t, int);
void kerberos4_printsub (unsigned char *, int, unsigned char *, int);
int kerberos4_forward (Authenticator *ap, void *);
#endif

#ifdef	KRB5
int kerberos5_init (Authenticator *, int);
int kerberos5_send_mutual (Authenticator *);
int kerberos5_send_oneway (Authenticator *);
void kerberos5_is (Authenticator *, unsigned char *, int);
void kerberos5_reply (Authenticator *, unsigned char *, int);
int kerberos5_status (Authenticator *, char *, size_t, int);
void kerberos5_printsub (unsigned char *, int, unsigned char *, int);
#endif
#endif
@


1.4
log
@KerberosV stuff taken from Heimdal.
@
text
@d34 1
a34 1
 *     $OpenBSD: auth-proto.h,v 1.3 1998/03/12 04:48:43 art Exp $
@


1.3
log
@support for encryption from kth-krb 0.9.8
@
text
@d33 3
a35 3
 *	from: @@(#)auth-proto.h	8.1 (Berkeley) 6/4/93
 *	$OpenBSD: auth-proto.h,v 1.2 1996/03/19 23:15:47 niklas Exp $
 *	$NetBSD: auth-proto.h,v 1.5 1996/02/24 01:15:16 jtk Exp $
d71 1
d74 1
a74 1
Authenticator *findauthenticator __P((int, int));
d76 40
a115 22
void auth_init __P((char *, int));
int auth_cmd __P((int, char **));
void auth_request __P((void));
void auth_send __P((unsigned char *, int));
void auth_send_retry __P((void));
void auth_is __P((unsigned char *, int));
void auth_reply __P((unsigned char *, int));
void auth_finished __P((Authenticator *, int));
int auth_wait __P((char *));
void auth_disable_name __P((char *));
void auth_gen_printsub __P((unsigned char *, int, unsigned char *, int));

int getauthmask __P((char *, int *));
int auth_enable __P((char *));
int auth_disable __P((char *));
int auth_onoff __P((char *, int));
int auth_togdebug __P((int));
int auth_status __P((void));
void auth_name __P((unsigned char *, int));
int auth_sendname __P((unsigned char *, int));
void auth_debug __P((int));
void auth_printsub __P((unsigned char *, int, unsigned char *, int));
d118 8
a125 8
int kerberos4_init __P((Authenticator *, int));
int kerberos4_forward __P((Authenticator *));
int kerberos4_send_oneway __P((Authenticator *));
int kerberos4_send_mutual __P((Authenticator *));
void kerberos4_is __P((Authenticator *, unsigned char *, int));
void kerberos4_reply __P((Authenticator *, unsigned char *, int));
int kerberos4_status __P((Authenticator *, char *, int));
void kerberos4_printsub __P((unsigned char *, int, unsigned char *, int));
d129 7
a135 7
int kerberos5_init __P((Authenticator *, int));
int kerberos5_send_mutual __P((Authenticator *));
int kerberos5_send_oneway __P((Authenticator *));
void kerberos5_is __P((Authenticator *, unsigned char *, int));
void kerberos5_reply __P((Authenticator *, unsigned char *, int));
int kerberos5_status __P((Authenticator *, char *, int));
void kerberos5_printsub __P((unsigned char *, int, unsigned char *, int));
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d34 1
a34 1
 *	$OpenBSD$
d39 12
a94 2
void auth_finished __P((Authenticator *, int));
int auth_wait __P((char *));
d100 3
a102 1
int kerberos4_send __P((Authenticator *));
d111 2
a112 1
int kerberos5_send __P((Authenticator *));
@


1.1
log
@Initial revision
@
text
@d34 2
a35 1
 *	$Id: auth-proto.h,v 1.4 1995/06/05 19:46:49 pk Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

