head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.6
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.28
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.24
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.22
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.20
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.18
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.18
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.16
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.14
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.12
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.10
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.8
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	initial:1.1.1.1
	ncurses:1.1.1;
locks; strict;
comment	@.\" @;


1.10
date	2015.11.14.01.35.38;	author jmc;	state Exp;
branches;
next	1.9;
commitid	QPckV5zpa4aG1OxK;

1.9
date	2010.01.12.23.22.07;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.16.08.48.27;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	99.01.22.03.30.53;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.07.24.02.37.12;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.12.14.23.19.29;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.12.03.05.46.31;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.40.05;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.04;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.21.37.53;	author tholo;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.06.02.21.37.53;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.10
log
@update the NAME section; ok nicm schwarze
@
text
@.\" $OpenBSD: form_field_validation.3,v 1.9 2010/01/12 23:22:07 nicm Exp $
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2003,2006 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: form_field_validation.3,v 1.9 2010/01/12 23:22:07 nicm Exp $
.TH form_field_validation 3 ""
.SH NAME
\fBset_field_type\fR, \fBfield_type\fR,
\fBfield_arg\fR - data type validation for fields
.SH SYNOPSIS
\fB#include <form.h>\fR
.br
int set_field_type(FIELD *field, FIELDTYPE *type, ...);
.br
FIELDTYPE *field_type(const FIELD *field);
.br
void *field_arg(const FIELD *field);
.sp
FIELDTYPE *TYPE_ALNUM;
.br
FIELDTYPE *TYPE_ALPHA;
.br
FIELDTYPE *TYPE_ENUM;
.br
FIELDTYPE *TYPE_INTEGER;
.br
FIELDTYPE *TYPE_NUMERIC;
.br
FIELDTYPE *TYPE_REGEXP;
.br
FIELDTYPE *TYPE_IPV4;
.br
.SH DESCRIPTION
The function \fBset_field_type\fR declares a data type for a given form field.
This is the type checked by validation functions.
The predefined types are as follows:
.TP 5
TYPE_ALNUM
Alphanumeric data.  Requires a third \fBint\fR argument, a minimum field width.
.TP 5
TYPE_ALPHA
Character data.  Requires a third \fBint\fR argument, a minimum field width.
.TP 5
TYPE_ENUM
Accept one of a specified set of strings.  Requires a third \fB(char **)\fR
argument pointing to a string list; a fourth \fBint\fR flag argument to enable
case-sensitivity; and a fifth \fBint\fR flag argument specifying whether a partial
match must be a unique one (if this flag is off, a prefix matches the first
of any set of more than one list elements with that prefix). Please notice
that the string list is not copied, only a reference to it is stored in the
field. So you should avoid using a list that lives in automatic variables
on the stack.
.TP 5
TYPE_INTEGER
Integer data, parsable to an integer by \fBatoi(3)\fR.  Requires a third
\fBint\fR argument controlling the precision, a fourth \fBlong\fR argument
constraining minimum value, and a fifth \fBlong\fR constraining maximum value.
If the maximum value is less than or equal to the minimum value, the range is
simply ignored. On return the field buffer is formatted according to the
\fBprintf\fR format specification ".*ld", where the '*' is replaced by the
precision argument.
For details of the precision handling see \fBprintf's\fR man-page.
.TP 5
TYPE_NUMERIC
Numeric data (may have a decimal-point part). Requires a third
\fBint\fR argument controlling the precision, a fourth \fBdouble\fR
argument constraining minimum value, and a fifth \fBdouble\fR constraining
maximum value. If your system supports locales, the decimal point character
to be used must be the one specified by your locale.
If the maximum value is less than or equal to the minimum value, the range is
simply ignored. On return the field buffer is formatted according to the
\fBprintf\fR format specification ".*f", where the '*' is replaced by the
precision argument.
For details of the precision handling see \fBprintf's\fR man-page.
.TP 5
TYPE_REGEXP
Regular expression data.  Requires a regular expression \fB(char *)\fR third argument;
the data is valid if the regular expression matches it.  Regular expressions
are in the format of \fBregcomp\fR and \fBregexec\fR. Please notice
that the regular expression must match the whole field. If you have for
example an eight character wide field, a regular expression "^[0-9]*$" always
means that you have to fill all eight positions with digits. If you want to
allow fewer digits, you may use for example "^[0-9]* *$" which is good for
trailing spaces (up to an empty field), or "^ *[0-9]* *$" which is good for
leading and trailing spaces around the digits.
.TP 5
TYPE_IPV4
An Internet Protocol Version 4 address. This requires no additional argument. It
is checked whether or not the buffer has the form a.b.c.d, where a,b,c and d are
numbers between 0 and 255. Trailing blanks in the buffer are ignored. The address
itself is not validated. Please note that this is an ncurses extension. This
field type may not be available in other curses implementations.
.PP
It is possible to set up new programmer-defined field types.  See the
\fBform_fieldtype\fR(3) manual page.
.SH RETURN VALUE
The functions \fBfield_type\fR and \fBfield_arg\fR return \fBNULL\fR on
error. The function \fBset_field_type\fR returns one of the following:
.TP 5
.B E_OK
The routine succeeded.
.TP 5
.B E_SYSTEM_ERROR
System error occurred (see \fBerrno\fR).
.SH SEE ALSO
\fBcurses\fR(3), \fBform\fR(3).
.SH NOTES
The header file \fB<form.h>\fR automatically includes the header file
\fB<curses.h>\fR.
.SH PORTABILITY
These routines emulate the System V forms library.  They were not supported on
Version 7 or BSD versions.
.SH AUTHORS
Juergen Pfeifer.  Manual pages and adaptation for new curses by Eric
S. Raymond.
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.9
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD$
d31 1
a31 1
.\" $Id: form_field_validation.3x,v 1.16 2006/12/24 16:08:08 tom Exp $
d34 2
a35 1
\fBform_field_validation\fR - data type validation for fields
@


1.8
log
@typos;

diffs passed on to curses people.
@
text
@d1 1
a1 1
.\" $OpenBSD: form_field_validation.3,v 1.7 1999/01/22 03:30:53 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998 Free Software Foundation, Inc.                        *
d31 1
a31 1
.'" $From: form_field_validation.3x,v 1.10 1998/03/11 21:12:53 juergen Exp $
d43 14
d60 2
a61 1
This is the type checked by validation functions.  The types are as follows:
d104 1
a104 1
are in the format of \fBregcomp\fR(3) and \fBregexec\fR(3). Please notice
d118 1
a118 1

d125 1
a125 1
\fBE_OK\fR
d128 1
a128 1
\fBE_SYSTEM_ERROR\fR
@


1.7
log
@cosmetic man page changes from latest ncurses
@
text
@d1 1
a1 1
.\" $OpenBSD: form_field_validation.3,v 1.6 1998/07/24 02:37:12 millert Exp $
d61 1
a61 1
field. So you should avoid to use a list that lives in automatic variables
d68 4
a71 3
If the maximum value is less or equal the minimum value, the range is simply
ignored. On return the field buffer is formatted according to the \fBprintf\fR
format specification ".*ld", where the '*' is replaced by the precision argument.
d78 1
a78 1
maximum value. If your system supports locale's, the decimal point character
d80 4
a83 3
If the maximum value is less or equal the minimum value, the range is simply
ignored. On return the field buffer is formatted according to the \fBprintf\fR
format specification ".*f", where the '*' is replaced by the precision argument.
@


1.6
log
@libform from ncurses-4.2-980718
@
text
@d1 1
a1 1
.\" $OpenBSD$
d34 1
a34 1
\fBform_field_validation\fR - data type validation for fields 
d66 1
a66 1
\fBint\fR argument controlling the precision, a fourth \fBlong\fR argument 
d76 1
a76 1
argument constraining minimum value, and a fifth \fBdouble\fR constraining 
@


1.5
log
@ncurses-4.1-971213
@
text
@d1 31
a31 3
'\" t
.\" $OpenBSD: form_field_validation.3,v 1.4 1997/12/03 05:46:31 millert Exp $
.\" Id: form_field_validation.3x,v 0.9 1997/12/06 22:08:27 tom Exp $
@


1.4
log
@3X -> 3
@
text
@d2 2
a3 1
.\" $OpenBSD: form_field_validation.3,v 1.3 1997/12/03 05:40:05 millert Exp $
d59 1
a59 1
are in the format of \fBregcomp\fR(3x) and \fBregexec\fR(3). Please notice
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@a0 1
.\" $OpenBSD$
d2 2
a3 1
.TH form_field_validation 3X ""
d58 1
a58 1
are in the format of \fBregcomp\fR(3x) and \fBregexec\fR(3X). Please notice
d74 1
a74 1
\fBform_fieldtype\fR(3X) manual page.
d85 1
a85 1
\fBcurses\fR(3X), \fBform\fR(3X).
@


1.2
log
@libform from ncurses 4.1.  Post 4.1 patches to be applied in a separate commit.
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
FIELDTYPE *field_type(FIELD *field);
d12 1
a12 1
char *field_arg(FIELD *field);
d19 1
a19 1
Alphanumeric data.  Requires a third argument, a minimum field width.
d22 1
a22 1
Character data.  Requires a third argument, a minimum field width.
d25 3
a27 3
Accept one of a specified set of strings.  Requires a third (char **)
argument pointing to a string list; a fourth flag argument to enable
case-sensitivity; and a fifth flag argument specifying whether a partial
d29 4
a32 1
of any set of more than one list elements with that prefix).
d36 6
a41 2
integer precision argument that sets zero-padding, a fourth argument 
constraining minimum value, and a fifth constraining maximum value.
d44 9
a52 2
Numeric data (may have a decimal-point part).  Requires following
arguments as for TYPE_INTEGER data.
d55 1
a55 1
Regular expression data.  Requires a regular expression third argument;
d57 14
a70 1
are in the format of \fBregcomp\fR(3x) and \fBregexec\fR(3X).
d75 1
a75 1
The functions \fBfield_type\fR and \fB\field_argfR return \fBNULL\fR on
@


1.1.1.1
log
@SYSV-style form library; from ncurses
@
text
@@
