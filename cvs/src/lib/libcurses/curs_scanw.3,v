head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.30
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.32
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.28
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.24
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.26
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.18
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.22
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.20
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.16
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.14
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.12
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.10
	OPENBSD_5_0:1.11.0.8
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.6
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.4
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.10.0.36
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.32
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.30
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.28
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.26
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.24
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.22
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.20
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.18
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.16
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.14
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.12
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.10
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.8
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.6
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.4
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.10;

1.10
date	2001.07.27.05.32.05;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.07.24.04.06.09;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.10.03.06.08;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.01.18.19.07.16;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.09.13.19.16.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.07.23.21.18.00;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.12.14.23.15.42;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.45.04;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.12.03.05.21.03;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.07;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@.\" $OpenBSD$
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2000,2006 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_scanw.3x,v 1.14 2006/12/24 16:05:49 tom Exp $
.TH curs_scanw 3 ""
.SH NAME
\fBscanw\fR,
\fBwscanw\fR,
\fBmvscanw\fR,
\fBmvwscanw\fR,
\fBvwscanw\fR, \fBvw_scanw\fR - convert formatted input from a \fBcurses\fR window
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBint scanw(char *fmt, ...);\fR
.br
\fBint wscanw(WINDOW *win, char *fmt, ...);\fR
.br
\fBint mvscanw(int y, int x, char *fmt, ...);\fR
.br
\fBint mvwscanw(WINDOW *win, int y, int x, char *fmt, ...);\fR
.br
\fBint vw_scanw(WINDOW *win, char *fmt, va_list varglist);\fR
.br
\fBint vwscanw(WINDOW *win, char *fmt, va_list varglist);\fR
.SH DESCRIPTION
The \fBscanw\fR, \fBwscanw\fR and \fBmvscanw\fR routines are analogous to
\fBscanf\fR [see \fBscanf\fR(3)].  The effect of these routines is as though
\fBwgetstr\fR were called on the window, and the resulting line used as input
for \fBsscanf\fR(3).  Fields which do not map to a variable in the \fIfmt\fR
field are lost.
.PP
The \fBvwscanw\fR and \fBvw_scanw\fR routines are analogous to \fBvscanf\fR.
They perform a \fBwscanw\fR using a variable argument list.
The third argument is a \fIva_list\fR,
a pointer to a list of arguments, as defined in \fB<stdarg.h>\fR.
.SH RETURN VALUE
\fBvwscanw\fR returns \fBERR\fR on failure and an integer equal to the
number of fields scanned on success.
.PP
Applications may use the return value from the \fBscanw\fR, \fBwscanw\fR,
\fBmvscanw\fR and \fBmvwscanw\fR routines to determine the number of fields
which were mapped in the call.
.SH PORTABILITY
The XSI Curses standard, Issue 4 describes these functions.  The function
\fBvwscanw\fR is marked TO BE WITHDRAWN, and is to be replaced by a function
\fBvw_scanw\fR using the \fB<stdarg.h>\fR interface.
The Single Unix Specification, Version 2 states that
\fBvw_scanw\fR  is preferred to \fBvwscanw\fR since the latter requires
including \fB<varargs.h>\fR, which
cannot be used in the same file as \fB<stdarg.h>\fR.
This implementation uses \fB<stdarg.h>\fR for both, because that header
is included in \fB<curses.h\fR>.
.LP
Both XSI and The Single Unix Specification, Version 2 state that these
functions return ERR or OK.
Since the underlying \fBscanf\fR can return the number of items scanned,
and the SVr4 code was documented to use this feature,
this is probably an editing error which was introduced in XSI,
rather than being done intentionally.
Portable applications should only test if the return value is ERR,
since the OK value (zero) is likely to be misleading.
One possible way to get useful results would be to use a "%n" conversion
at the end of the format string to ensure that something was processed.
.SH SEE ALSO
\fBcurses\fR(3), \fBcurs_getstr\fR(3), \fBcurs_printw\fR(3), \fBscanf\fR(3)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.10
log
@stdarg.h, not varargs.h
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_scanw.3,v 1.9 2000/07/24 04:06:09 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d31 1
a31 1
.\" $From: curs_scanw.3x,v 1.11 2000/07/15 21:48:17 tom Exp $
d41 2
a42 2

\fBint scanw(char *fmt\fR [\fB, arg\fR] \fB...);\fR
d44 1
a44 1
\fBint wscanw(WINDOW *win, char *fmt\fR [\fB, arg\fR] \fB...);\fR
d46 1
a46 1
\fBint mvscanw(int y, int x, char *fmt\fR [\fB, arg\fR] \fB...);\fR
d48 1
a48 2
\fBint mvwscanw(WINDOW *win, int y, int x,\fR
      \fBchar *fmt\fR [\fB, arg]\fR \fB...);\fR
d59 5
a63 5

The \fBvwscanw\fR routine is similar to \fBvwprintw\fR in that it performs a
\fBwscanw\fR using a variable argument list.  The third argument is a
\fIva\fR_\fIlist\fR, a pointer to a list of arguments, as defined in
\fB<stdarg.h>\fR.
d67 1
a67 1

d75 17
@


1.9
log
@Update to ncurses-5.1-20000722
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_scanw.3,v 1.8 2000/07/10 03:06:08 millert Exp $
d64 1
a64 1
\fB<varargs.h>\fR.
@


1.8
log
@ncurses 5.1
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_scanw.3,v 1.7 1999/01/18 19:07:16 millert Exp $
d31 1
a31 1
.\" $From: curs_scanw.3x,v 1.10 2000/07/01 20:06:29 tom Exp $
d34 5
a38 5
+ \fBscanw\fR,
+ \fBwscanw\fR,
+ \fBmvscanw\fR,
+ \fBmvwscanw\fR,
+ \fBvwscanw\fR, \fBvw_scanw\fR - convert formatted input from a \fBcurses\fR window
@


1.7
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_scanw.3,v 1.6 1998/09/13 19:16:22 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998 Free Software Foundation, Inc.                        *
d31 1
a31 1
.\" $From: curs_scanw.3x,v 1.8 1998/12/26 20:10:12 tom Exp $
d34 5
a38 3
\fBscanw\fR, \fBwscanw\fR, \fBmvscanw\fR,
\fBmvwscanw\fR, \fBvwscanw\fR - convert formatted input from a
\fBcurses\fR widow
d50 2
@


1.6
log
@ncurses-4.2-980905
@
text
@d1 1
a1 1
.\" $OpenBSD$
d31 1
a31 1
.\" $From: curs_scanw.3x,v 1.7 1998/03/11 21:12:53 juergen Exp $
d46 2
a47 2
\fBint mvwscanw(WINDOW *win, int y, int x,
      char *fmt\fR [\fB, arg]\fR \fB...);\fR
@


1.5
log
@ncurses-4.2-980718
@
text
@d1 2
a31 1
.\" $OpenBSD$
@


1.4
log
@ncurses-4.1-971213
@
text
@d1 30
a30 2
.\" $OpenBSD: curs_scanw.3,v 1.3 1997/12/03 05:45:04 millert Exp $
.\" Id: curs_scanw.3x,v 1.6 1997/12/14 01:04:36 tom Exp $
@


1.3
log
@3X-> 3
@
text
@d1 2
a2 1
.\" $OpenBSD: curs_scanw.3,v 1.2 1997/12/03 05:21:03 millert Exp $
d23 1
a23 1
\fBscanf\fR [see \fBscanf\fR(3S)].  The effect of these routines is as though
d44 1
a44 1
\fBcurses\fR(3), \fBcurs_getstr\fR, \fBcurs_printw\fR, \fBscanf\fR(3S)
@


1.2
log
@Merge of ncurses-4.1-971129
@
text
@d1 2
a2 2
.\" $OpenBSD$
.TH curs_scanw 3X ""
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d1 1
d43 1
a43 1
\fBcurses\fR(3X), \fBcurs_getstr\fR, \fBcurs_printw\fR, \fBscanf\fR(3S)
@
