head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.28
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.24
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.26
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.38
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.34
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.32
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.30
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.28
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.26
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.24
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.22
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.20
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.18
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.16
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.14
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.12
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.10
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.8
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.6
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2010.01.12.23.22.06;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.22.18.01.54;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.11.28.17.49.54;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.08.15.11.40.55;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.10.21;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2007,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/*
 *		def_prog_mode()
 *		def_shell_mode()
 *		reset_prog_mode()
 *		reset_shell_mode()
 *		savetty()
 *		resetty()
 */

#include <curses.priv.h>
#include <term.h>		/* cur_term */

MODULE_ID("$Id: lib_ttyflags.c,v 1.18 2008/08/03 22:10:44 tom Exp $")

NCURSES_EXPORT(int)
_nc_get_tty_mode(TTY * buf)
{
    int result = OK;

    if (buf == 0) {
	result = ERR;
    } else {
	if (cur_term == 0) {
	    result = ERR;
	} else {
	    for (;;) {
		if (GET_TTY(cur_term->Filedes, buf) != 0) {
		    if (errno == EINTR)
			continue;
		    result = ERR;
		}
		break;
	    }
	}

	if (result == ERR)
	    memset(buf, 0, sizeof(*buf));

	TR(TRACE_BITS, ("_nc_get_tty_mode(%d): %s",
			cur_term ? cur_term->Filedes : -1,
			_nc_trace_ttymode(buf)));
    }
    return (result);
}

NCURSES_EXPORT(int)
_nc_set_tty_mode(TTY * buf)
{
    int result = OK;

    if (buf == 0) {
	result = ERR;
    } else {
	if (cur_term == 0) {
	    result = ERR;
	} else {
	    for (;;) {
		if (SET_TTY(cur_term->Filedes, buf) != 0) {
		    if (errno == EINTR)
			continue;
		    if ((errno == ENOTTY) && (SP != 0))
			SP->_notty = TRUE;
		    result = ERR;
		}
		break;
	    }
	}
	TR(TRACE_BITS, ("_nc_set_tty_mode(%d): %s",
			cur_term ? cur_term->Filedes : -1,
			_nc_trace_ttymode(buf)));
    }
    return (result);
}

NCURSES_EXPORT(int)
def_shell_mode(void)
{
    int rc = ERR;

    T((T_CALLED("def_shell_mode()")));

    if (cur_term != 0) {
	/*
	 * If XTABS was on, remove the tab and backtab capabilities.
	 */
	if (_nc_get_tty_mode(&cur_term->Ottyb) == OK) {
#ifdef TERMIOS
	    if (cur_term->Ottyb.c_oflag & OFLAGS_TABS)
		tab = back_tab = NULL;
#else
	    if (cur_term->Ottyb.sg_flags & XTABS)
		tab = back_tab = NULL;
#endif
	    rc = OK;
	}
    }
    returnCode(rc);
}

NCURSES_EXPORT(int)
def_prog_mode(void)
{
    int rc = ERR;

    T((T_CALLED("def_prog_mode()")));

    if (cur_term != 0) {
	/*
	 * Turn off the XTABS bit in the tty structure if it was on.
	 */
	if (_nc_get_tty_mode(&cur_term->Nttyb) == OK) {
#ifdef TERMIOS
	    cur_term->Nttyb.c_oflag &= ~OFLAGS_TABS;
#else
	    cur_term->Nttyb.sg_flags &= ~XTABS;
#endif
	    rc = OK;
	}
    }
    returnCode(rc);
}

NCURSES_EXPORT(int)
reset_prog_mode(void)
{
    T((T_CALLED("reset_prog_mode()")));

    if (cur_term != 0) {
	if (_nc_set_tty_mode(&cur_term->Nttyb) == OK) {
	    if (SP) {
		if (SP->_keypad_on)
		    _nc_keypad(SP, TRUE);
		NC_BUFFERED(TRUE);
	    }
	    returnCode(OK);
	}
    }
    returnCode(ERR);
}

NCURSES_EXPORT(int)
reset_shell_mode(void)
{
    T((T_CALLED("reset_shell_mode()")));

    if (cur_term != 0) {
	if (SP) {
	    _nc_keypad(SP, FALSE);
	    _nc_flush();
	    NC_BUFFERED(FALSE);
	}
	returnCode(_nc_set_tty_mode(&cur_term->Ottyb));
    }
    returnCode(ERR);
}

static TTY *
saved_tty(void)
{
    TTY *result = 0;

    if (SP != 0) {
	result = &(SP->_saved_tty);
    } else {
	if (_nc_prescreen.saved_tty == 0) {
	    _nc_prescreen.saved_tty = typeCalloc(TTY, 1);
	}
	result = _nc_prescreen.saved_tty;
    }
    return result;
}

/*
**	savetty()  and  resetty()
**
*/

NCURSES_EXPORT(int)
savetty(void)
{
    T((T_CALLED("savetty()")));

    returnCode(_nc_get_tty_mode(saved_tty()));
}

NCURSES_EXPORT(int)
resetty(void)
{
    T((T_CALLED("resetty()")));

    returnCode(_nc_set_tty_mode(saved_tty()));
}
@


1.4
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ttyflags.c,v 1.3 1999/11/28 17:49:54 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d43 1
a43 17
MODULE_ID("$From: lib_ttyflags.c,v 1.5 2000/12/10 02:55:08 tom Exp $")

#undef tabs

#ifdef TAB3
# define tabs TAB3
#else
# ifdef XTABS
#  define tabs XTABS
# else
#  ifdef OXTABS
#   define tabs OXTABS
#  else
#   define tabs 0
#  endif
# endif
#endif
d48 26
a73 5
    if (cur_term == 0
	|| GET_TTY(cur_term->Filedes, buf) != 0)
	return (ERR);
    TR(TRACE_BITS, ("_nc_get_tty_mode: %s", _nc_tracebits()));
    return (OK);
d79 24
a102 5
    if (cur_term == 0
	|| SET_TTY(cur_term->Filedes, buf) != 0)
	return (ERR);
    TR(TRACE_BITS, ("_nc_set_tty_mode: %s", _nc_tracebits()));
    return (OK);
d108 2
d112 5
a116 7
    /*
     * Turn off the XTABS bit in the tty structure if it was on.  If XTABS
     * was on, remove the tab and backtab capabilities.
     */

    if (_nc_get_tty_mode(&cur_term->Ottyb) != OK)
	returnCode(ERR);
d118 2
a119 2
    if (cur_term->Ottyb.c_oflag & tabs)
	tab = back_tab = NULL;
d121 2
a122 2
    if (cur_term->Ottyb.sg_flags & XTABS)
	tab = back_tab = NULL;
d124 4
a127 1
    returnCode(OK);
d133 2
d137 5
a141 2
    if (_nc_get_tty_mode(&cur_term->Nttyb) != OK)
	returnCode(ERR);
d143 1
a143 1
    cur_term->Nttyb.c_oflag &= ~tabs;
d145 1
a145 1
    cur_term->Nttyb.sg_flags &= ~XTABS;
d147 4
a150 1
    returnCode(OK);
d159 7
a165 5
	_nc_set_tty_mode(&cur_term->Nttyb);
	if (SP) {
	    if (stdscr && stdscr->_use_keypad)
		_nc_keypad(TRUE);
	    NC_BUFFERED(TRUE);
a166 1
	returnCode(OK);
d178 1
a178 1
	    _nc_keypad(FALSE);
d187 16
a207 2
static TTY buf;

d213 1
a213 1
    returnCode(_nc_get_tty_mode(&buf));
d221 1
a221 1
    returnCode(_nc_set_tty_mode(&buf));
@


1.3
log
@update to ncurses-5.0-19991127
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ttyflags.c,v 1.2 1999/08/15 11:40:55 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
d41 1
a41 1
#include <term.h>	/* cur_term */
d43 1
a43 1
MODULE_ID("$From: lib_ttyflags.c,v 1.3 1999/10/22 21:38:55 tom Exp $")
d61 2
a62 1
int _nc_get_tty_mode(TTY *buf)
d64 5
a68 5
	if (cur_term == 0
	 || GET_TTY(cur_term->Filedes, buf) != 0)
		return(ERR);
	TR(TRACE_BITS,("_nc_get_tty_mode: %s", _nc_tracebits()));
	return (OK);
d71 2
a72 1
int _nc_set_tty_mode(TTY *buf)
d74 5
a78 5
	if (cur_term == 0
	 || SET_TTY(cur_term->Filedes, buf) != 0)
		return(ERR);
	TR(TRACE_BITS,("_nc_set_tty_mode: %s", _nc_tracebits()));
	return (OK);
d81 2
a82 1
int def_shell_mode(void)
d84 1
a84 1
	T((T_CALLED("def_shell_mode()")));
d86 4
a89 4
	/*
	 * Turn off the XTABS bit in the tty structure if it was on.  If XTABS
	 * was on, remove the tab and backtab capabilities.
	 */
d91 2
a92 2
	if (_nc_get_tty_mode(&cur_term->Ottyb) != OK)
		returnCode(ERR);
d94 2
a95 2
	if (cur_term->Ottyb.c_oflag & tabs)
		tab = back_tab = NULL;
d97 2
a98 2
	if (cur_term->Ottyb.sg_flags & XTABS)
		tab = back_tab = NULL;
d100 1
a100 1
	returnCode(OK);
d103 2
a104 1
int def_prog_mode(void)
d106 1
a106 1
	T((T_CALLED("def_prog_mode()")));
d108 2
a109 2
	if (_nc_get_tty_mode(&cur_term->Nttyb) != OK)
		returnCode(ERR);
d111 1
a111 1
	cur_term->Nttyb.c_oflag &= ~tabs;
d113 1
a113 1
	cur_term->Nttyb.sg_flags &= ~XTABS;
d115 1
a115 1
	returnCode(OK);
d118 2
a119 1
int reset_prog_mode(void)
d121 1
a121 1
	T((T_CALLED("reset_prog_mode()")));
d123 6
a128 8
	if (cur_term != 0) {
		_nc_set_tty_mode(&cur_term->Nttyb);
		if (SP) {
			if (stdscr && stdscr->_use_keypad)
				_nc_keypad(TRUE);
			NC_BUFFERED(TRUE);
		}
		returnCode(OK);
d130 3
a132 1
	returnCode(ERR);
d135 2
a136 1
int reset_shell_mode(void)
d138 1
a138 1
	T((T_CALLED("reset_shell_mode()")));
d140 5
a144 8
	if (cur_term != 0) {
		if (SP)
		{
			_nc_keypad(FALSE);
			_nc_flush();
			NC_BUFFERED(FALSE);
		}
		returnCode(_nc_set_tty_mode(&cur_term->Ottyb));
d146 3
a148 1
	returnCode(ERR);
d156 1
a156 1
static TTY   buf;
d158 2
a159 1
int savetty(void)
d161 1
a161 1
	T((T_CALLED("savetty()")));
d163 1
a163 1
	returnCode(_nc_get_tty_mode(&buf));
d166 2
a167 1
int resetty(void)
d169 1
a169 1
	T((T_CALLED("resetty()")));
d171 1
a171 1
	returnCode(_nc_set_tty_mode(&buf));
@


1.2
log
@Update to ncurses-5.0-990814
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ttyflags.c,v 1.1 1999/01/18 19:10:21 millert Exp $	*/
d43 1
a43 1
MODULE_ID("$From: lib_ttyflags.c,v 1.2 1999/07/24 22:36:12 tom Exp $")
d138 1
a138 1
			fflush(SP->_ofp);
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 1
a43 1
MODULE_ID("$From: lib_ttyflags.c,v 1.1 1998/12/20 00:49:19 tom Exp $")
d66 1
d75 1
@

