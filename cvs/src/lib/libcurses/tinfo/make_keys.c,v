head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.32
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.28
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.24
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.26
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.18
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.22
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.20
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.16
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.14
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.12
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.10
	OPENBSD_5_0:1.9.0.8
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.14
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.10
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.8
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.6
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.4
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.2
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.7.0.24
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.22
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.20
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.18
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.16
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.14
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.12
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2010.01.12.23.22.06;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.10.21.38.16;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.22.18.01.54;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.13.23.53.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.11.28.18.05.38;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.11.28.17.49.54;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.03.02.06.23.29;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.02.24.06.31.11;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.10.21;	author millert;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2007,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Thomas E. Dickey                    1997-on                     *
 ****************************************************************************/

/*
 * This replaces an awk script which translated keys.list into keys.tries by
 * making the output show the indices into the TERMTYPE Strings array.  Doing
 * it that way lets us cut down on the size of the init_keytry() function.
 */

#define USE_TERMLIB 1
#include <curses.priv.h>

MODULE_ID("$Id: make_keys.c,v 1.14 2008/08/03 21:57:22 tom Exp $")

#include <names.c>

#define UNKNOWN (SIZEOF(strnames) + SIZEOF(strfnames))

static size_t
lookup(const char *name)
{
    size_t n;
    bool found = FALSE;
    for (n = 0; strnames[n] != 0; n++) {
	if (!strcmp(name, strnames[n])) {
	    found = TRUE;
	    break;
	}
    }
    if (!found) {
	for (n = 0; strfnames[n] != 0; n++) {
	    if (!strcmp(name, strfnames[n])) {
		found = TRUE;
		break;
	    }
	}
    }
    return found ? n : UNKNOWN;
}

static void
make_keys(FILE *ifp, FILE *ofp)
{
    char buffer[BUFSIZ];
    char from[256];
    char to[256];
    int maxlen = 16;
    int scanned;

    while (fgets(buffer, sizeof(buffer), ifp) != NULL) {
	if (*buffer == '#')
	    continue;

	to[sizeof(to) - 1] = '\0';
	from[sizeof(from) - 1] = '\0';

	scanned = sscanf(buffer, "%255s %255s", to, from);
	if (scanned == 2) {
	    int code = lookup(from);
	    if (code == UNKNOWN)
		continue;
	    if ((int) strlen(from) > maxlen)
		maxlen = strlen(from);
	    fprintf(ofp, "\t{ %4d, %-*.*s },\t/* %s */\n",
		    code,
		    maxlen, maxlen,
		    to,
		    from);
	}
    }
}

static void
write_list(FILE *ofp, const char **list)
{
    while (*list != 0)
	fprintf(ofp, "%s\n", *list++);
}

int
main(int argc, char *argv[])
{
    static const char *prefix[] =
    {
	"#ifndef NCU_KEYS_H",
	"#define NCU_KEYS_H 1",
	"",
	"/* This file was generated by MAKE_KEYS */",
	"",
	"#if BROKEN_LINKER",
	"static",
	"#endif",
	"const struct tinfo_fkeys _nc_tinfo_fkeys[] = {",
	0
    };
    static const char *suffix[] =
    {
	"\t{ 0, 0} };",
	"",
	"#endif /* NCU_KEYS_H */",
	0
    };

    write_list(stdout, prefix);
    if (argc > 1) {
	int n;
	for (n = 1; n < argc; n++) {
	    FILE *fp = fopen(argv[n], "r");
	    if (fp != 0) {
		make_keys(fp, stdout);
		fclose(fp);
	    }
	}
    } else {
	make_keys(stdin, stdout);
    }
    write_list(stdout, suffix);
    return EXIT_SUCCESS;
}
@


1.8
log
@fgets(3) returns NULL on error, not 0. No functional change, but it makes
the code easier to read.
OK deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.7 2001/01/22 18:01:54 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d32 1
a32 1
 *  Author: Thomas E. Dickey <dickey@@clark.net> 1997                        *
d40 2
d44 1
a44 1
MODULE_ID("$From: make_keys.c,v 1.10 2000/12/10 02:55:08 tom Exp $")
d73 1
a73 1
make_keys(FILE * ifp, FILE * ofp)
d76 2
a77 2
    char from[BUFSIZ];
    char to[BUFSIZ];
d79 1
d84 6
a89 1
	if (sscanf(buffer, "%s %s", to, from) == 2) {
d105 1
a105 1
write_list(FILE * ofp, const char **list)
d124 1
a124 1
	"struct tinfo_fkeys _nc_tinfo_fkeys[] = {",
@


1.7
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.6 2000/03/13 23:53:40 millert Exp $	*/
d78 1
a78 1
    while (fgets(buffer, sizeof(buffer), ifp) != 0) {
@


1.6
log
@update to ncurses-5.0-20000311
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.5 1999/11/28 18:05:38 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
d42 1
a42 1
MODULE_ID("$From: make_keys.c,v 1.8 2000/03/12 02:55:50 Todd.C.Miller Exp $")
d48 2
a49 1
static size_t lookup(const char *name)
d51 6
a56 7
	size_t n;
	bool found = FALSE;
	for (n = 0; strnames[n] != 0; n++) {
		if (!strcmp(name, strnames[n])) {
			found = TRUE;
			break;
		}
d58 7
a64 7
	if (!found) {
		for (n = 0; strfnames[n] != 0; n++) {
			if (!strcmp(name, strfnames[n])) {
				found = TRUE;
				break;
			}
		}
d66 2
a67 1
	return found ? n : UNKNOWN;
d70 2
a71 1
static void make_keys(FILE *ifp, FILE *ofp)
d73 19
a91 20
	char buffer[BUFSIZ];
	char from[BUFSIZ];
	char to[BUFSIZ];
	int maxlen = 16;

	while (fgets(buffer, sizeof(buffer), ifp) != 0) {
		if (*buffer == '#')
			continue;
		if (sscanf(buffer, "%s %s", to, from) == 2) {
			int code = lookup(from);
			if (code == UNKNOWN)
				continue;
			if ((int)strlen(from) > maxlen)
				maxlen = strlen(from);
			fprintf(ofp, "\t{ %4d, %-*.*s },\t/* %s */\n",
				code,
				maxlen, maxlen,
				to,
				from);
		}
d93 1
d96 2
a97 1
static void write_list(FILE *ofp, const char **list)
d99 2
a100 2
	while (*list != 0)
		fprintf(ofp, "%s\n", *list++);
d103 2
a104 1
int main(int argc, char *argv[])
d106 30
a135 31
	static const char *prefix[] = {
		"#ifndef NCU_KEYS_H",
		"#define NCU_KEYS_H 1",
		"",
		"/* This file was generated by MAKE_KEYS */",
		"",
		"#if BROKEN_LINKER",
		"static",
		"#endif",
		"struct tinfo_fkeys _nc_tinfo_fkeys[] = {",
		0
	};
	static const char *suffix[] = {
		"\t{ 0, 0} };",
		"",
		"#endif /* NCU_KEYS_H */",
		0
	};

	write_list(stdout, prefix);
	if (argc > 1) {
		int n;
		for (n = 1; n < argc; n++) {
			FILE *fp = fopen(argv[n], "r");
			if (fp != 0) {
				make_keys(fp, stdout);
				fclose(fp);
			}
		}
	} else {
		make_keys(stdin, stdout);
d137 5
a141 2
	write_list(stdout, suffix);
	return EXIT_SUCCESS;
@


1.5
log
@#ifdef BROKEN_LINKER -> #if BROKEN_LINKER
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.4 1999/11/28 17:49:54 millert Exp $	*/
d42 1
a42 1
MODULE_ID("$From: make_keys.c,v 1.7 1999/09/11 17:32:57 Jeffrey.Honig Exp $")
@


1.4
log
@update to ncurses-5.0-19991127
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.3 1999/03/02 06:23:29 millert Exp $	*/
d108 1
a108 1
		"#ifdef BROKEN_LINKER",
@


1.3
log
@ncurses-4.2-990301
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.2 1999/02/24 06:31:11 millert Exp $	*/
d42 1
a42 1
MODULE_ID("$From: make_keys.c,v 1.6 1999/02/22 16:55:20 tom Exp $")
d108 3
@


1.2
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.1 1999/01/18 19:10:21 millert Exp $	*/
d42 1
a42 1
MODULE_ID("$From: make_keys.c,v 1.5 1999/02/18 22:38:41 tom Exp $")
d112 1
a112 1
		" { 0, 0} };",
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
/*	$OpenBSD: make_keys.c,v 1.1 1998/07/23 21:19:53 millert Exp $	*/
d42 1
a42 1
MODULE_ID("$From: make_keys.c,v 1.4 1998/02/11 12:13:57 tom Exp $")
d108 1
a108 4
		"static const struct {",
		"\tunsigned offset;",
		"\tchtype code;",
		"} table[] = {",
d112 1
a112 1
		"};",
@

