head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.32
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.28
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.24
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.26
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.18
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.22
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.20
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.16
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.14
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.38
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.34
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.32
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.30
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.28
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.26
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.24
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.22
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.20
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.18
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.16
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.14
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.12
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.8
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2010.01.12.23.22.06;	author nicm;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.22.18.01.51;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.13.23.53.40;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.11.28.18.05.38;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.11.28.17.49.53;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.02.24.06.31.10;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1999-2006,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

#include <curses.priv.h>

#include <term.h>
/* keypad_xmit, keypad_local, meta_on, meta_off */
/* cursor_visible,cursor_normal,cursor_invisible */

#include <tic.h>		/* struct tinfo_fkeys */

#include <term_entry.h>

MODULE_ID("$Id: init_keytry.c,v 1.12 2008/05/24 21:44:51 tom Exp $")

/*
**      _nc_init_keytry()
**
**      Construct the try for the current terminal's keypad keys.
**
*/

/*
 * Internal entrypoints use SCREEN* parameter to obtain capabilities rather
 * than cur_term.
 */
#undef CUR
#define CUR (sp->_term)->type.

#if	BROKEN_LINKER
#undef	_nc_tinfo_fkeys
#endif

/* LINT_PREPRO
#if 0*/
#include <init_keytry.h>
/* LINT_PREPRO
#endif*/

#if	BROKEN_LINKER
const struct tinfo_fkeys *
_nc_tinfo_fkeysf(void)
{
    return _nc_tinfo_fkeys;
}
#endif

NCURSES_EXPORT(void)
_nc_init_keytry(SCREEN *sp)
{
    size_t n;

    /* The sp->_keytry value is initialized in newterm(), where the sp
     * structure is created, because we can not tell where keypad() or
     * mouse_activate() (which will call keyok()) are first called.
     */

    if (sp != 0) {
	for (n = 0; _nc_tinfo_fkeys[n].code; n++) {
	    if (_nc_tinfo_fkeys[n].offset < STRCOUNT) {
		(void) _nc_add_to_try(&(sp->_keytry),
				      CUR Strings[_nc_tinfo_fkeys[n].offset],
				      _nc_tinfo_fkeys[n].code);
	    }
	}
#if NCURSES_XNAMES
	/*
	 * Add any of the extended strings to the tries if their name begins
	 * with 'k', i.e., they follow the convention of other terminfo key
	 * names.
	 */
	{
	    TERMTYPE *tp = &(sp->_term->type);
	    for (n = STRCOUNT; n < NUM_STRINGS(tp); ++n) {
		const char *name = ExtStrname(tp, n, strnames);
		char *value = tp->Strings[n];
		if (name != 0
		    && *name == 'k'
		    && value != 0
		    && key_defined(value) == 0) {
		    (void) _nc_add_to_try(&(sp->_keytry),
					  value,
					  n - STRCOUNT + KEY_MAX);
		}
	    }
	}
#endif
#ifdef TRACE
	_nc_trace_tries(sp->_keytry);
#endif
    }
}
@


1.5
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: init_keytry.c,v 1.4 2000/03/13 23:53:40 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999,2000 Free Software Foundation, Inc.                   *
d33 4
a36 2
#include <term.h>		/* keypad_xmit, keypad_local, meta_on, meta_off */
			/* cursor_visible,cursor_normal,cursor_invisible */
d39 3
a41 1
MODULE_ID("$From: init_keytry.c,v 1.5 2000/12/10 02:55:07 tom Exp $")
d50 7
d68 1
a68 1
struct tinfo_fkeys *
d76 1
a76 1
_nc_init_keytry(void)
d80 1
a80 1
    /* The SP->_keytry value is initialized in newterm(), where the SP
d85 30
a114 5
    for (n = 0; _nc_tinfo_fkeys[n].code; n++)
	if (_nc_tinfo_fkeys[n].offset < STRCOUNT)
	    _nc_add_to_try(&(SP->_keytry),
			   CUR Strings[_nc_tinfo_fkeys[n].offset],
			   _nc_tinfo_fkeys[n].code);
d116 1
a116 1
    _nc_trace_tries(SP->_keytry);
d118 1
@


1.4
log
@update to ncurses-5.0-20000311
@
text
@d1 1
a1 1
/*	$OpenBSD: init_keytry.c,v 1.3 1999/11/28 18:05:38 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999 Free Software Foundation, Inc.                        *
d33 1
a33 1
#include <term.h>	/* keypad_xmit, keypad_local, meta_on, meta_off */
d35 1
a35 1
#include <tic.h>	/* struct tinfo_fkeys */
d37 1
a37 1
MODULE_ID("$From: init_keytry.c,v 1.3 2000/03/12 02:55:50 Todd.C.Miller Exp $")
d57 2
a58 1
struct tinfo_fkeys *_nc_tinfo_fkeysf(void)
d60 1
a60 1
	return _nc_tinfo_fkeys;
d64 2
a65 1
void _nc_init_keytry(void)
d67 1
a67 1
	size_t n;
d69 10
a78 10
	/* The SP->_keytry value is initialized in newterm(), where the SP
	 * structure is created, because we can not tell where keypad() or
	 * mouse_activate() (which will call keyok()) are first called.
	 */

	for (n = 0; _nc_tinfo_fkeys[n].code; n++)
		if (_nc_tinfo_fkeys[n].offset < STRCOUNT)
		_nc_add_to_try(&(SP->_keytry),
			CUR Strings[_nc_tinfo_fkeys[n].offset],
			_nc_tinfo_fkeys[n].code);
d80 1
a80 1
	_nc_trace_tries(SP->_keytry);
@


1.3
log
@#ifdef BROKEN_LINKER -> #if BROKEN_LINKER
@
text
@d1 1
a1 1
/*	$OpenBSD: init_keytry.c,v 1.2 1999/11/28 17:49:53 millert Exp $	*/
d37 1
a37 1
MODULE_ID("$From: init_keytry.c,v 1.2 1999/09/11 17:32:57 Jeffrey.Honig Exp $")
@


1.2
log
@update to ncurses-5.0-19991127
@
text
@d1 1
a1 1
/*	$OpenBSD: init_keytry.c,v 1.1 1999/02/24 06:31:10 millert Exp $	*/
d46 1
a46 1
#ifdef	BROKEN_LINKER
d56 1
a56 1
#ifdef	BROKEN_LINKER
@


1.1
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
MODULE_ID("$From: init_keytry.c,v 1.1 1999/02/18 22:39:11 tom Exp $")
d46 4
d55 7
@

