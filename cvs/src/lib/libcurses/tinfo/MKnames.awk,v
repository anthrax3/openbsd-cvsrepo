head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.30
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.28
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.24
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.26
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.22
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.20
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.16
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.38
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.34
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.32
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.30
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.28
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.26
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.24
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.22
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.20
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.18
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.16
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.14
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.12
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2010.01.12.23.22.06;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.22.18.01.50;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.10.12;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@# $OpenBSD$
##############################################################################
# Copyright (c) 2007,2008 Free Software Foundation, Inc.                     #
#                                                                            #
# Permission is hereby granted, free of charge, to any person obtaining a    #
# copy of this software and associated documentation files (the "Software"), #
# to deal in the Software without restriction, including without limitation  #
# the rights to use, copy, modify, merge, publish, distribute, distribute    #
# with modifications, sublicense, and/or sell copies of the Software, and to #
# permit persons to whom the Software is furnished to do so, subject to the  #
# following conditions:                                                      #
#                                                                            #
# The above copyright notice and this permission notice shall be included in #
# all copies or substantial portions of the Software.                        #
#                                                                            #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    #
# THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    #
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        #
# DEALINGS IN THE SOFTWARE.                                                  #
#                                                                            #
# Except as contained in this notice, the name(s) of the above copyright     #
# holders shall not be used in advertising or otherwise to promote the sale, #
# use or other dealings in this Software without prior written               #
# authorization.                                                             #
##############################################################################
# $Id: MKnames.awk,v 1.20 2008/10/11 21:07:56 tom Exp $
function large_item(value) {
	result = sprintf("%d,", offset);
	offset = offset + length(value) + 1;
	offcol = offcol + length(result) + 2;
	if (offcol > 70) {
		result = result "\n";
		offcol = 0;
	} else {
		result = result " ";
	}
	bigstr = bigstr sprintf("\"%s\\0\" ", value);
	bigcol = bigcol + length(value) + 5;
	if (bigcol > 70) {
		bigstr = bigstr "\\\n";
		bigcol = 0;
	}
	return result;
}

function small_item(value) {
	return sprintf("\t\t\"%s\",\n", value);
}

function print_strings(name,value) {
	printf  "DCL(%s) = {\n", name
	print  value
	print  "\t\t(NCURSES_CONST char *)0,"
	print  "};"
	print  ""
}

function print_offsets(name,value) {
	printf  "static const short _nc_offset_%s[] = {\n", name
	printf "%s",  value
	print  "};"
	print  ""
	printf "static NCURSES_CONST char ** ptr_%s = 0;\n", name
	print  ""
}

BEGIN	{
		print  "/* This file was generated by MKnames.awk */"
		print  ""
		print  "#include <curses.priv.h>"
		print  ""
		print  "#define IT NCURSES_CONST char * const"
		print  ""
		offset = 0;
		offcol = 0;
		bigcol = 0;
	}

$1 ~ /^#/		{next;}

$1 == "SKIPWARN"	{next;}

$3 == "bool"	{
			small_boolnames = small_boolnames small_item($2);
			large_boolnames = large_boolnames large_item($2);
			small_boolfnames = small_boolfnames small_item($1);
			large_boolfnames = large_boolfnames large_item($1);
		}

$3 == "num"	{
			small_numnames = small_numnames small_item($2);
			large_numnames = large_numnames large_item($2);
			small_numfnames = small_numfnames small_item($1);
			large_numfnames = large_numfnames large_item($1);
		}

$3 == "str"	{
			small_strnames = small_strnames small_item($2);
			large_strnames = large_strnames large_item($2);
			small_strfnames = small_strfnames small_item($1);
			large_strfnames = large_strfnames large_item($1);
		}

END	{
		print  ""
		print  "#if BROKEN_LINKER || USE_REENTRANT"
		print  ""
		print  "#include <term.h>"
		print  ""
		if (bigstrings) {
			printf "static const char _nc_name_blob[] = \n"
			printf "%s;\n", bigstr;
			print_offsets("boolfnames", large_boolfnames);
			print_offsets("boolnames", large_boolnames);
			print_offsets("numfnames", large_numfnames);
			print_offsets("numnames", large_numnames);
			print_offsets("strfnames", large_strfnames);
			print_offsets("strnames", large_strnames);
			print  ""
			print  "static IT *"
			print  "alloc_array(NCURSES_CONST char ***value, const short *offsets, unsigned size)"
			print  "{"
			print  "	if (*value == 0) {"
			print  "		if ((*value = typeCalloc(NCURSES_CONST char *, size + 1)) != 0) {"
			print  "			unsigned n;"
			print  "			for (n = 0; n < size; ++n) {"
			print  "				(*value)[n] = (NCURSES_CONST char *) _nc_name_blob + offsets[n];"
			print  "			}"
			print  "		}"
			print  "	}"
			print  "	return *value;"
			print  "}"
			print  ""
			print  "#define FIX(it) NCURSES_IMPEXP IT * NCURSES_API _nc_##it(void) { return alloc_array(&ptr_##it, _nc_offset_##it, SIZEOF(_nc_offset_##it)); }"
		} else {
			print  "#define DCL(it) static IT data##it[]"
			print  ""
			print_strings("boolnames", small_boolnames);
			print_strings("boolfnames", small_boolfnames);
			print_strings("numnames", small_numnames);
			print_strings("numfnames", small_numfnames);
			print_strings("strnames", small_strnames);
			print_strings("strfnames", small_strfnames);
			print  "#define FIX(it) NCURSES_IMPEXP IT * NCURSES_API _nc_##it(void) { return data##it; }"
		}
		print  ""
		print  "FIX(boolnames)"
		print  "FIX(boolfnames)"
		print  "FIX(numnames)"
		print  "FIX(numfnames)"
		print  "FIX(strnames)"
		print  "FIX(strfnames)"
		print  ""
		print  ""
		print  "#define FREE_FIX(it) if (ptr_##it) { FreeAndNull(ptr_##it); }"
		print  ""
		print  "#if NO_LEAKS"
		print  "NCURSES_EXPORT(void)"
		print  "_nc_names_leaks(void)"
		print  "{"
		if (bigstrings) {
		print  "FREE_FIX(boolnames)"
		print  "FREE_FIX(boolfnames)"
		print  "FREE_FIX(numnames)"
		print  "FREE_FIX(numfnames)"
		print  "FREE_FIX(strnames)"
		print  "FREE_FIX(strfnames)"
		}
		print  "}"
		print  "#endif"
		print  ""
		print  "#else"
		print  ""
		print  "#define DCL(it) NCURSES_EXPORT_VAR(IT) it[]"
		print  ""
		print_strings("boolnames", small_boolnames);
		print_strings("boolfnames", small_boolfnames);
		print_strings("numnames", small_numnames);
		print_strings("numfnames", small_numfnames);
		print_strings("strnames", small_strnames);
		print_strings("strfnames", small_strfnames);
		print  ""
		print  "#endif /* BROKEN_LINKER */"
	}
@


1.2
log
@Update to ncurses-5.2-20010114
@
text
@d2 79
a80 30
# $From: MKnames.awk,v 1.11 2000/12/09 23:46:13 tom Exp $
BEGIN		{
			print  "/* This file was generated by MKnames.awk */" > "namehdr"
			print  ""				> "namehdr"
			print  "#include <curses.priv.h>"	> "namehdr"
			print  ""				> "namehdr"
			print  "#define IT NCURSES_CONST char * const"	> "namehdr"
			print  ""				> "namehdr"
			print  "#if BROKEN_LINKER"		> "namehdr"
			print  "#include <term.h>"		> "namehdr"
			print  "#define DCL(it) static IT data##it[]" > "namehdr"
			print  "#else"				> "namehdr"
			print  "#define DCL(it) NCURSES_EXPORT_VAR(IT) it[]"	> "namehdr"
			print  "#endif"				> "namehdr"
			print  ""				> "namehdr"
			print  "/*"				> "boolnames"
			print  " *	names.c - Arrays of capability names and codes"  > "boolnames"
			print  " *"				> "boolnames"
			print  " */"				> "boolnames"
			print  ""				> "boolnames"
			print  "DCL(boolnames)  = {"		> "boolnames"
			print  "DCL(boolfnames) = {"		> "boolfnames"
			print  "DCL(boolcodes)  = {"		> "boolcodes"
			print  "DCL(numnames)   = {"		> "numnames"
			print  "DCL(numfnames)  = {"		> "numfnames"
			print  "DCL(numcodes)   = {"		> "numcodes"
			print  "DCL(strnames)   = {"		> "strnames"
			print  "DCL(strfnames)  = {"		> "strfnames"
			print  "DCL(strcodes)   = {"		> "strcodes"
		}
d87 4
a90 3
			printf "\t\t\"%s\",\n", $2 > "boolnames"
			printf "\t\t\"%s\",\n", $1 > "boolfnames"
			printf "\t\t\"%s\",\n", $4 > "boolcodes"
d94 4
a97 3
			printf "\t\t\"%s\",\n", $2 > "numnames"
			printf "\t\t\"%s\",\n", $1 > "numfnames"
			printf "\t\t\"%s\",\n", $4 > "numcodes"
d101 4
a104 3
			printf "\t\t\"%s\",\n", $2 > "strnames"
			printf "\t\t\"%s\",\n", $1 > "strfnames"
			printf "\t\t\"%s\",\n", $4 > "strcodes"
d107 64
a170 44
END		{
			print  "\t\t(NCURSES_CONST char *)0," > "boolnames"
			print  "};" > "boolnames"
			print  "" > "boolnames"
			print  "\t\t(NCURSES_CONST char *)0," > "boolfnames"
			print  "};" > "boolfnames"
			print  "" > "boolfnames"
			print  "\t\t(NCURSES_CONST char *)0," > "boolcodes"
			print  "};" > "boolcodes"
			print  "" > "boolcodes"
			print  "\t\t(NCURSES_CONST char *)0," > "numnames"
			print  "};" > "numnames"
			print  "" > "numnames"
			print  "\t\t(NCURSES_CONST char *)0," > "numfnames"
			print  "};" > "numfnames"
			print  "" > "numfnames"
			print  "\t\t(NCURSES_CONST char *)0," > "numcodes"
			print  "};" > "numcodes"
			print  "" > "numcodes"
			print  "\t\t(NCURSES_CONST char *)0," > "strnames"
			print  "};" > "strnames"
			print  "" > "strnames"
			print  "\t\t(NCURSES_CONST char *)0," > "strfnames"
			print  "};" > "strfnames"
			print  "" > "strfnames"
			print  "\t\t(NCURSES_CONST char *)0," > "strcodes"
			print  "};"				> "strcodes"
			print  ""				> "strcodes"
			print  "#if BROKEN_LINKER"		> "nameftr"
			print  "#define FIX(it) NCURSES_IMPEXP IT * NCURSES_API _nc_##it(void) { return data##it; }" > "nameftr"
			print  "FIX(boolnames)"			> "nameftr"
			print  "FIX(boolfnames)"		> "nameftr"
			print  "FIX(numnames)"			> "nameftr"
			print  "FIX(numfnames)"			> "nameftr"
			print  "FIX(strnames)"			> "nameftr"
			print  "FIX(strfnames)"			> "nameftr"
			print  "#endif /* BROKEN_LINKER */"	> "nameftr"
			print  ""				> "codeftr"
			print  "#if BROKEN_LINKER"		> "codeftr"
			print  "#define FIX(it) NCURSES_IMPEXP IT * NCURSES_API _nc_##it(void) { return data##it; }" > "codeftr"
			print  "FIX(boolcodes)"			> "codeftr"
			print  "FIX(numcodes)"			> "codeftr"
			print  "FIX(strcodes)"			> "codeftr"
			print  "#endif /* BROKEN_LINKER */"	> "codeftr"
d172 16
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 2
a2 2
# $OpenBSD
# $From: MKnames.awk,v 1.10 1999/01/16 23:36:34 tom Exp $
d14 1
a14 1
			print  "#define DCL(it) IT it[]"	> "namehdr"
d84 1
a84 1
			print  "#define FIX(it) IT *_nc_##it(void) { return data##it; }" > "nameftr"
d94 1
a94 1
			print  "#define FIX(it) IT *_nc_##it(void) { return data##it; }" > "codeftr"
@

