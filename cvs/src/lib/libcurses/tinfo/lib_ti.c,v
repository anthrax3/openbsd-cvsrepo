head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.30
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.28
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.24
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.26
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.18
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.38
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.34
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.32
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.30
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.28
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.26
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.24
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.22
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.20
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.18
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.16
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.14
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.12
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.10
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.8
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.7
date	2010.01.12.23.22.06;	author nicm;	state Exp;
branches;
next	1.6;

1.6
date	2001.01.22.18.01.54;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2000.03.10.01.35.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.16.01.35.18;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.02.22.06.51;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.03.02.06.23.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.10.20;	author millert;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2000,2003 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 ****************************************************************************/

#include <curses.priv.h>

#include <term_entry.h>
#include <tic.h>

MODULE_ID("$Id: lib_ti.c,v 1.23 2003/05/24 21:10:28 tom Exp $")

NCURSES_EXPORT(int)
tigetflag(NCURSES_CONST char *str)
{
    unsigned i;

    T((T_CALLED("tigetflag(%s)"), str));

    if (cur_term != 0) {
	TERMTYPE *tp = &(cur_term->type);
	for_each_boolean(i, tp) {
	    const char *capname = ExtBoolname(tp, i, boolnames);
	    if (!strcmp(str, capname)) {
		/* setupterm forces invalid booleans to false */
		returnCode(tp->Booleans[i]);
	    }
	}
    }

    returnCode(ABSENT_BOOLEAN);
}

NCURSES_EXPORT(int)
tigetnum(NCURSES_CONST char *str)
{
    unsigned i;

    T((T_CALLED("tigetnum(%s)"), str));

    if (cur_term != 0) {
	TERMTYPE *tp = &(cur_term->type);
	for_each_number(i, tp) {
	    const char *capname = ExtNumname(tp, i, numnames);
	    if (!strcmp(str, capname)) {
		if (!VALID_NUMERIC(tp->Numbers[i]))
		    returnCode(ABSENT_NUMERIC);
		returnCode(tp->Numbers[i]);
	    }
	}
    }

    returnCode(CANCELLED_NUMERIC);	/* Solaris returns a -1 instead */
}

NCURSES_EXPORT(char *)
tigetstr(NCURSES_CONST char *str)
{
    unsigned i;

    T((T_CALLED("tigetstr(%s)"), str));

    if (cur_term != 0) {
	TERMTYPE *tp = &(cur_term->type);
	for_each_string(i, tp) {
	    const char *capname = ExtStrname(tp, i, strnames);
	    if (!strcmp(str, capname)) {
		/* setupterm forces cancelled strings to null */
		returnPtr(tp->Strings[i]);
	    }
	}
    }

    returnPtr(CANCELLED_STRING);
}
@


1.6
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.5 2000/03/10 01:35:04 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,1999,2000 Free Software Foundation, Inc.              *
d41 1
a41 1
MODULE_ID("$From: lib_ti.c,v 1.22 2000/12/10 02:55:08 tom Exp $")
d46 1
a46 1
    int i;
d67 1
a67 1
    int i;
d89 1
a89 1
    int i;
@


1.5
log
@Update to ncurses-5.0-20000304
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.4 2000/01/16 01:35:18 millert Exp $	*/
d41 1
a41 1
MODULE_ID("$From: lib_ti.c,v 1.20 2000/02/13 01:01:26 tom Exp $")
d43 1
a43 1
int
d64 1
a64 1
int
d86 1
a86 1
char *
@


1.4
log
@Update to ncurses-5.0-20000115:
+ additional fixes for non-bce terminals (handling of delete_character)
to work when assume_default_colors() is not specified.
+ modify warning message from _nc_parse_entry() regarding extended
capability names to print only if tic/infocmp/toe have the -v flag
set, and not at all in ordinary user applications.  Otherwise, this
warning would be shown for screen's extended capabilities in programs
that use the termcap interface.
+ modify use of _nc_tracing from programs such as tic so their debug
level is not in the same range as values set by trace() function.
+ small panel header cleanup (patch by Juergen Pfeifer).
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.3 2000/01/02 22:06:51 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2000 Free Software Foundation, Inc.                   *
d41 1
a41 1
MODULE_ID("$From: lib_ti.c,v 1.19 2000/01/15 20:47:37 tom Exp $")
@


1.3
log
@+ corrected conversion from terminfo rs2 to termcap rs (cf: 980704)
+ make conversion to termcap ug (underline glitch) more consistently applied.
+ modify read_termtype(), fixing 'toe', which could dump core when it
found an incomplete entry such as "dumb" because it did not
initialize its buffer for _nc_read_file_entry().
+ use explicit VALID_NUMERIC() checks in a few places that had been
overlooked, and add a check to ensure that init_tabs is nonzero,
to avoid divide-by-zero (reported by Todd C Miller).
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.2 1999/03/02 06:23:29 millert Exp $	*/
d41 1
a41 1
MODULE_ID("$From: lib_ti.c,v 1.18 2000/01/01 16:58:30 tom Exp $")
d77 1
a77 1
		    return ABSENT_NUMERIC;
@


1.2
log
@ncurses-4.2-990301
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.1 1999/01/18 19:10:20 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
a35 1

d41 1
a41 1
MODULE_ID("$From: lib_ti.c,v 1.16 1999/02/28 23:11:28 tom Exp $")
d43 2
a44 1
int tigetflag(NCURSES_CONST char *str)
d46 1
a46 1
int i;
d48 1
a48 1
	T((T_CALLED("tigetflag(%s)"), str));
d50 7
a56 8
	if (cur_term != 0) {
	    TERMTYPE *tp = &(cur_term->type);
	    for_each_boolean(i,tp) {
		const char *capname = ExtBoolname(tp, i, boolnames);
		if (!strcmp(str, capname)) {
		    /* setupterm forces invalid booleans to false */
		    returnCode(tp->Booleans[i]);
		}
d59 1
d61 1
a61 1
	returnCode(ABSENT_BOOLEAN);
d64 2
a65 1
int tigetnum(NCURSES_CONST char *str)
d67 1
a67 1
int i;
d69 1
a69 1
	T((T_CALLED("tigetnum(%s)"), str));
d71 8
a78 9
	if (cur_term != 0) {
	    TERMTYPE *tp = &(cur_term->type);
	    for_each_number(i, tp) {
		const char *capname = ExtNumname(tp, i, numnames);
		if (!strcmp(str, capname)) {
		    if (!VALID_NUMERIC(tp->Numbers[i]))
			return -1;
		    returnCode(tp->Numbers[i]);
		}
d81 1
d83 1
a83 1
	returnCode(CANCELLED_NUMERIC);	/* Solaris returns a -1 instead */
d86 2
a87 1
char *tigetstr(NCURSES_CONST char *str)
d89 1
a89 1
int i;
d91 1
a91 1
	T((T_CALLED("tigetstr(%s)"), str));
d93 7
a99 8
	if (cur_term != 0) {
	    TERMTYPE *tp = &(cur_term->type);
	    for_each_string(i, tp) {
		const char *capname = ExtStrname(tp, i, strnames);
		if (!strcmp(str, capname)) {
		    /* setupterm forces cancelled strings to null */
		    returnPtr(tp->Strings[i]);
		}
d102 1
d104 1
a104 1
	returnPtr(CANCELLED_STRING);
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_ti.c,v 1.2 1998/10/31 06:30:30 millert Exp $	*/
d39 1
a39 1
#include <term.h>
d42 1
a42 1
MODULE_ID("$From: lib_ti.c,v 1.13 1999/01/03 01:44:27 tom Exp $")
d51 6
a56 5
		for (i = 0; i < BOOLCOUNT; i++) {
			if (!strcmp(str, boolnames[i])) {
				/* setupterm forces invalid booleans to false */
				returnCode(cur_term->type.Booleans[i]);
			}
d58 1
d71 7
a77 6
		for (i = 0; i < NUMCOUNT; i++) {
			if (!strcmp(str, numnames[i])) {
				if (!VALID_NUMERIC(cur_term->type.Numbers[i]))
					return -1;
				returnCode(cur_term->type.Numbers[i]);
			}
d79 1
d92 6
a97 5
		for (i = 0; i < STRCOUNT; i++) {
			if (!strcmp(str, strnames[i])) {
				/* setupterm forces cancelled strings to null */
				returnPtr(cur_term->type.Strings[i]);
			}
d99 1
@

