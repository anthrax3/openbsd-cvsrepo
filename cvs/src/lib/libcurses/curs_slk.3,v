head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.28
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.24
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.26
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.18
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.28
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.24
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.22
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.20
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.10
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.8
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.14.08.55.19;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2001.02.25.17.00.08;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.07.10.03.06.09;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.09.13.19.16.23;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.07.23.21.18.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.12.03.05.45.05;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.21.04;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.17;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.08;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@.\" $OpenBSD$
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2006,2007 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_slk.3x,v 1.16 2007/06/02 20:40:07 tom Exp $
.TH curs_slk 3 ""
.na
.hy 0
.SH NAME
\fBslk_init\fR,
\fBslk_set\fR,
\fBslk_refresh\fR,
\fBslk_noutrefresh\fR,
\fBslk_label\fR,
\fBslk_clear\fR,
\fBslk_restore\fR,
\fBslk_touch\fR,
\fBslk_attron\fR,
\fBslk_attrset\fR,
\fBslk_attroff\fR,
\fBslk_attr_on\fR,
\fBslk_attr_set\fR,
\fBslk_attr_off\fR,
\fBslk_attr\fR,
\fBslk_color\fR - \fBcurses\fR soft label routines
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBint slk_init(int fmt);\fR
.br
\fBint slk_set(int labnum, const char *label, int fmt);\fR
.br
\fBint slk_refresh(void);\fR
.br
\fBint slk_noutrefresh(void);\fR
.br
\fBchar *slk_label(int labnum);\fR
.br
\fBint slk_clear(void);\fR
.br
\fBint slk_restore(void);\fR
.br
\fBint slk_touch(void);\fR
.br
\fBint slk_attron(const chtype attrs);\fR
.br
\fBint slk_attroff(const chtype attrs);\fR
.br
\fBint slk_attrset(const chtype attrs);\fR
.br
\fBint slk_attr_on(attr_t attrs, void* opts);\fR
.br
\fBint slk_attr_off(const attr_t attrs, void * opts);\fR
.br
\fBint slk_attr_set(const attr_t attrs,\fR
.br
	\fBshort color_pair_number, void* opts);\fR
.br
\fBattr_t slk_attr(void);\fR
.br
\fBint slk_color(short color_pair_number);\fR
.br
.SH DESCRIPTION
The slk* functions manipulate the set of soft function-key labels that exist on
many terminals.  For those terminals that do not have soft labels,
\fBcurses\fR takes over the bottom line of \fBstdscr\fR, reducing the size of
\fBstdscr\fR and the variable \fBLINES\fR.  \fBcurses\fR standardizes on eight
labels of up to eight characters each. In addition to this, the ncurses
implementation supports a mode where it simulates 12 labels of up to five
characters each. This is most common for todays PC like enduser devices.
Please note that ncurses simulates this mode by taking over up to two lines at
the bottom of the screen, it does not try to use any hardware support for this
mode.
.PP
The \fBslk_init\fR routine must be called before \fBinitscr\fR or \fBnewterm\fR
is called.  If \fBinitscr\fR eventually uses a line from \fBstdscr\fR to
emulate the soft labels, then \fIfmt\fR determines how the labels are arranged
on the screen.  Setting \fIfmt\fR to \fB0\fR indicates a 3-2-3 arrangement of
the labels, \fB1\fR indicates a 4-4 arrangement and \fB2\fR indicates the
PC like 4-4-4 mode. If \fBfmt\fR is set to \fB3\fR, it is again the PC like
4-4-4 mode, but in addition an index line is generated, helping the user to
identify the key numbers easily.
.PP
The \fBslk_set\fR routine requires \fIlabnum\fR to be a label number,
from \fB1\fR to \fB8\fR (resp. \fB12\fR); \fIlabel\fR must be the string
to be put on the label, up to eight (resp. five) characters in length.
A null string or a null pointer sets up a blank label. \fIfmt\fR is either
\fB0\fR, \fB1\fR, or \fB2\fR, indicating whether the label is  to be
left-justified, centered, or right-justified, respectively, within the
label.
.PP
The \fBslk_refresh\fR and \fBslk_noutrefresh\fR routines correspond to
the \fBwrefresh\fR and \fBwnoutrefresh\fR routines.
.PP
The \fBslk_label\fR routine returns the current label for label number
\fIlabnum\fR, with leading and trailing blanks stripped.
.PP
The \fBslk_clear\fR routine clears the soft labels from the screen.
.PP
The \fBslk_restore\fR routine restores the soft labels to the screen
after a \fBslk_clear\fR has been performed.
.PP
The \fBslk_touch\fR routine forces all the soft labels to be output
the next time a \fBslk_noutrefresh\fR is performed.
.PP
The \fBslk_attron\fR, \fBslk_attrset\fR, \fBslk_attroff\fR and \fBslk_attr\fR
routines correspond to \fBattron\fR, \fBattrset\fR, \fBattroff\fR and \fBattr_get\fR.
They have an effect only if soft labels are simulated on the bottom line of
the screen.  The default highlight for soft keys is A_STANDOUT (as in
System V curses, which does not document this fact).
.PP
The \fBslk_color\fR routine corresponds to \fBcolor_set\fR. It has an effect only
if soft labels are simulated on the bottom line of the screen.
.
.SH RETURN VALUE
These routines return \fBERR\fR upon failure and OK (SVr4 specifies only "an
integer value other than \fBERR\fR") upon successful completion.
.PP
X/Open defines no error conditions.
In this implementation
.RS
.TP 5
\fBslk_attr\fR
returns the attribute used for the soft keys.
.TP 5
.na
.hy 0
\fBslk_attroff\fP, \fBslk_attron\fP, \fBslk_clear\fP, \fBslk_noutrefresh\fP, \fBslk_refresh\fP, \fBslk_touch\fP
.ad
.hy
return an error
if the terminal or the softkeys were not initialized.
.TP 5
\fBslk_attrset\fP
returns an error
if the terminal or the softkeys were not initialized.
.TP 5
\fBslk_attr_set\fP
returns an error
if the terminal or the softkeys were not initialized, or
the color pair is outside the range 0..COLOR_PAIRS-1,
or opts is not null.
.TP 5
\fBslk_color\fP
returns an error
if the terminal or the softkeys were not initialized, or
the color pair is outside the range 0..COLOR_PAIRS-1.
.TP 5
\fBslk_init\fR
returns an error
if the format parameter is outside the range 0..3.
.TP 5
\fBslk_label\fR
returns \fBNULL\fR on error.
.TP 5
\fBslk_set\fP
returns an error
if the terminal or the softkeys were not initialized, or
the \fIlabnum\fP parameter is outside the range of label counts, or
if the format parameter is outside the range 0..2, or if
memory for the labels cannot be allocated.
.RE
.SH NOTES
Most applications would use \fBslk_noutrefresh\fR because a
\fBwrefresh\fR is likely to follow soon.
.SH PORTABILITY
The XSI Curses standard, Issue 4, describes these functions.  It changes the
argument type of the attribute-manipulation functions \fBslk_attron\fR,
\fBslk_attroff\fR, \fBslk_attrset\fR to be \fBattr_t\fR, and adds \fBconst\fR
qualifiers. The format codes \fB2\fR and \fB3\fR for \fBslk_init()\fR and the
function \fBslk_attr\fR are specific to ncurses.
.SH SEE ALSO
\fBcurses\fR(3), \fBcurs_attr\fR(3), \fBcurs_initscr\fR(3), \fBcurs_refresh\fR(3)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.9
log
@typos;

diffs passed on to curses people.
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_slk.3,v 1.8 2001/02/25 17:00:08 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d31 1
a31 1
.\" $From: curs_slk.3x,v 1.10 2000/07/01 17:52:44 tom Exp $
d33 2
d36 18
a53 6
\fBslk_init\fR, \fBslk_set\fR, \fBslk_refresh\fR,
\fBslk_noutrefresh\fR, \fBslk_label\fR,
\fBslk_clear\fR, \fBslk_restore\fR, \fBslk_touch\fR,
\fBslk_attron\fR, \fBslk_attrset\fR, \fBslk_attroff\fR,
\fBslk_attr_on\fR, \fBslk_attr_set\fR, \fBslk_attr_off\fR,
\fBslk_attr\fR, \fBslk_color\fR - \fBcurses\fR soft label routines
d56 1
a56 1

d100 1
a100 1
the bottom of the screen, it doesn't try to use any hardware support for this
d102 1
a102 1

d111 1
a111 1

d119 1
a119 1

d122 1
a122 1

d125 1
a125 1

d127 1
a127 1

d130 1
a130 1

d133 1
a133 1

d139 1
a139 1

d142 1
a142 1

d145 7
a151 1
integer value other than \fBERR\fR") upon successful completion. \fBslk_attr\fR
d153 38
a190 2

\fBslk_label\fR returns \fBNULL\fR on error.
@


1.8
log
@Missing commas in NAME section.  Found by an espie script ;-)
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_slk.3,v 1.7 2000/07/10 03:06:09 millert Exp $
d82 1
a82 1
labels of up to eight characters each. In addition to this, the ncurses 
d99 1
a99 1
from \fB1\fR to \fB8\fR (resp. \fB12\fR); \fIlabel\fR must be the string 
d102 1
a102 1
\fB0\fR, \fB1\fR, or \fB2\fR, indicating whether the label is  to be 
d114 1
a114 1
The \fBslk_restore\fR routine, restores the soft labels to the screen
d123 1
a123 1
the screen.  The default highlight for soft keys is A_STANDOUT (as in 
@


1.7
log
@ncurses 5.1
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_slk.3,v 1.6 1998/09/13 19:16:23 millert Exp $
d39 1
a39 1
\fBslk_attr\fR \fBslk_color\fR - \fBcurses\fR soft label routines
@


1.6
log
@ncurses-4.2-980905
@
text
@d1 1
a1 1
.\" $OpenBSD$
d4 1
a4 1
.\" Copyright (c) 1998 Free Software Foundation, Inc.                        *
d31 1
a31 1
.\" $From: curs_slk.3x,v 1.9 1998/03/11 21:12:53 juergen Exp $
d35 5
a39 3
\fBslk_noutrefresh\fR, \fBslk_label\fR, \fBslk_clear\fR, \fBslk_restore\fR,
\fBslk_touch\fR, \fBslk_attron\fR, \fBslk_attrset\fR, \fBslk_attroff\fR, \fBslk_color\fR -
\fBcurses\fR soft label routines
d61 2
d65 8
a73 2
.br
\fBint slk_attroff(const chtype attrs);\fR
@


1.5
log
@ncurses-4.2-980718
@
text
@d1 2
a31 1
.\" $OpenBSD$
d72 1
a72 1
labels of up to eight characters each. In addition to this, this curses 
d75 1
a75 1
Please note that curses simulates this mode by taking over up to two lines at
@


1.4
log
@3X-> 3
@
text
@d1 30
a30 1
.\" $OpenBSD: curs_slk.3,v 1.3 1997/12/03 05:21:04 millert Exp $
d35 1
a35 1
\fBslk_touch\fR, \fBslk_attron\fR, \fBslk_attrset\fR, \fBslk_attroff\fR -
d56 1
a56 1
\fBint slk_attron(attr_t attrs);\fR
d58 1
a58 1
\fBint slk_attrset(attr_t attrs);\fR
d62 3
a64 1
\fBint slk_attroff(attr_t attrs);\fR
d71 1
a71 1
labels of up to eight characters each. In addition to this, the curses 
d114 4
d132 1
a132 1
function \fBslk_attr\fR are specific to curses.
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d1 2
a2 2
.\" $OpenBSD$
.TH curs_slk 3X ""
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 1
d99 1
a99 1
\fBcurses\fR(3X), \fBcurs_attr\fR(3X), \fBcurs_initscr\fR(3X), \fBcurs_refresh\fR(3X)
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d30 2
d39 6
a44 1
labels of up to eight characters each.
d50 4
a53 1
the labels; \fB1\fR indicates a 4-4 arrangement.
d56 6
a61 5
from \fB1\fR to \fB8\fR; \fIlabel\fR must be the string to be put on the
label, up to eight characters in length.  A null string or a null
pointer sets up a blank label.  \fIfmt\fR is either \fB0\fR, \fB1\fR,
or \fB2\fR, indicating whether the label is to be left-justified,
centered, or right-justified, respectively, within the label.
d77 3
a79 3
The \fBslk_attron\fR, \fBslk_attrset\fR and \fBslk_attroff\fR routines
correspond to \fBattron\fR, \fBattrset\fR, and \fBattroff\fR.  They
have an effect only if soft labels are simulated on the bottom line of
d84 2
a85 1
integer value other than \fBERR\fR") upon successful completion.
d95 2
a96 1
qualifiers.
@
