head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.28
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.24
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.26
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.18
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.22
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.20
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.16
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.14
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.12
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.10
	OPENBSD_5_0:1.2.0.8
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.6
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.4
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.2
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.1.0.40
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.36
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.34
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.32
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.30
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.28
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.26
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.24
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.22
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.20
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.18
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.16
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.14
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.12
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.10
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.8
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.6
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.1;

1.1
date	2000.07.24.04.06.10;	author millert;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@.\" $OpenBSD$
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2005,2006 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" Author: Thomas E. Dickey 1997,1999,2000,2005
.\"
.\" $Id: default_colors.3x,v 1.20 2006/12/24 15:02:53 tom Exp $
.TH default_colors 3 ""
.SH NAME
\fBuse_default_colors\fR,
\fBassume_default_colors\fR \- use terminal's default colors
.SH SYNOPSIS
\fB#include <curses.h>\fP
.sp
\fBint use_default_colors(void);\fP
.br
\fBint assume_default_colors(int fg, int bg);\fP
.SH DESCRIPTION
The
.I use_default_colors()
and
.I assume_default_colors()
functions are extensions to the curses library.
They are used with terminals that support ISO 6429 color, or equivalent.
These terminals allow the application to reset color to an unspecified
default value (e.g., with SGR 39 or SGR 49).
.PP
Applications that paint a colored background over the whole screen
do not take advantage of SGR 39 and SGR 49.
Some applications are designed to work with the default background,
using colors only for text.
For example, there are several implementations of the \fBls\fP program
which use colors to denote different file types or permissions.
These "color ls" programs do not necessarily modify the background color,
typically using only the \fIsetaf\fP terminfo capability to set the
foreground color.
Full-screen applications that use default colors can achieve similar
visual effects.
.PP
The first function,
.I use_default_colors()
tells the curses library to assign terminal default
foreground/background colors to color number -1. So init_pair(x,COLOR_RED,-1)
will initialize pair x as red on default background and init_pair(x,-1,COLOR_BLUE) will
initialize pair x as default foreground on blue.
.PP
The other,
.I assume_default_colors()
is a refinement which tells which colors to paint for color pair 0.
This function recognizes a special color number -1,
which denotes the default terminal color.
.PP
The following are equivalent:
.RS
.br
.I use_default_colors();
.br
.I assume_default_colors(-1,-1);
.RE
.PP
These are ncurses extensions.
For other curses implementations, color
number -1 does not mean anything, just as for ncurses before a
successful call of \fIuse_default_colors()\fP or \fIassume_default_colors()\fP.
.PP
Other curses implementations do not allow an application to modify color pair 0.
They assume that the background is COLOR_BLACK,
but do not ensure that the color pair 0 is painted to match the
assumption.
If your application does not use either
.I use_default_colors()
or
.I assume_default_colors()
ncurses will paint a white foreground (text) with black background
for color pair 0.
.SH RETURN VALUE
These functions return the integer \fBERR\fP upon failure and \fBOK\fP on success.
They will fail if either the terminal does not support
the \fIorig_pair\fP or \fIorig_colors\fP capability.
If the \fIinitialize_pair\fP capability is found, this causes an
error as well.
.SH NOTES
Associated with this extension, the \fBinit_pair\fR function accepts
negative arguments to specify default foreground or background colors.
.PP
The \fIuse_default_colors()\fP function was added to support \fIded\fP.
This is a full-screen application which uses curses to manage only part
of the screen.  The bottom portion of the screen, which is of adjustable
size, is left uncolored to display the results from shell commands.
The top portion of the screen colors filenames using a scheme like the
"color ls" programs.
Attempting to manage the background color of the screen for this application
would give unsatisfactory results for a variety of reasons.
This extension was devised after
noting that color xterm (and similar programs) provides a background color
which does not necessarily correspond to any of the ANSI colors.
While a special terminfo entry could be constructed using nine colors,
there was no mechanism provided within curses to account for the related
\fIorig_pair\fP and \fIback_color_erase\fP capabilities.
.PP
The \fIassume_default_colors()\fP function was added to solve
a different problem: support for applications which would use
environment variables and other configuration to bypass curses'
notion of the terminal's default colors, setting specific values.
.SH PORTABILITY
These routines are specific to ncurses.  They were not supported on
Version 7, BSD or System V implementations.  It is recommended that
any code depending on them be conditioned using NCURSES_VERSION.
.SH SEE ALSO
\fBcurs_color\fR(3),
\fBded\fP(1).
.SH AUTHOR
Thomas Dickey (from an analysis of the requirements for color xterm
for XFree86 3.1.2C, February 1996).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.1
log
@Update to ncurses-5.1-20000722
@
text
@d1 1
a1 1
.\" $OpenBSD: dft_fgbg.3,v 1.6 2000/07/10 03:06:11 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998,1999,2000 Free Software Foundation, Inc.              *
d31 1
a31 1
.\" Author: Thomas E. Dickey <dickey@@clark.net> 1997,1999,2000
d33 1
a33 1
.\" $From: default_colors.3x,v 1.13 2000/07/15 22:06:50 tom Exp $
a35 1
\fBdefault_colors\fR,
a37 1
..
d40 1
a40 1

a43 1
..
a101 1
..
a107 1
..
d109 22
a130 4
Associated with this extension, the \fBinit_pair\fR(3) function accepts
negative arguments to specify default foreground or background
colors.
..
a134 1
..
a137 1
..
@

