head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.34
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.32
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.28
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.24
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.26
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.18
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.22
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.40
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.36
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.34
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.32
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.30
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.28
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.26
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.24
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.22
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.20
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.18
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.16
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.14
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.12
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.10
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.8
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2010.01.12.23.21.58;	author nicm;	state Exp;
branches;
next	1.6;

1.6
date	2000.07.10.03.06.04;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.09.13.19.16.16;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.23.21.17.28;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.44.54;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.12.03.05.20.50;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.04.57;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@.\" $OpenBSD$
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2003,2005 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_addstr.3x,v 1.13 2005/05/15 16:17:14 tom Exp $
.TH curs_addstr 3 ""
.na
.hy 0
.SH NAME
\fBaddstr\fR,
\fBaddnstr\fR,
\fBwaddstr\fR,
\fBwaddnstr\fR,
\fBmvaddstr\fR,
\fBmvaddnstr\fR,
\fBmvwaddstr\fR,
\fBmvwaddnstr\fR - add a string of characters to a \fBcurses\fR window and advance cursor
.ad
.hy
.SH SYNOPSIS
.nf
\fB#include <curses.h>\fR
.PP
\fBint addstr(const char *\fR\fIstr\fR\fB);\fR
.br
\fBint addnstr(const char *\fR\fIstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint waddstr(WINDOW *\fR\fIwin\fR\fB, const char *\fR\fIstr\fR\fB);\fR
.br
\fBint waddnstr(WINDOW *\fR\fIwin\fR\fB, const char *\fR\fIstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint mvaddstr(int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, const char *\fR\fIstr\fR\fB);\fR
.br
\fBint mvaddnstr(int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, const char *\fR\fIstr\fR\fB, int \fR\fIn\fR\fB);\fR
.br
\fBint mvwaddstr(WINDOW *\fR\fIwin\fR\fB, int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, const char *\fR\fIstr\fR\fB);\fR
.br
\fBint mvwaddnstr(WINDOW *\fR\fIwin\fR\fB, int \fR\fIy\fR\fB, int \fR\fIx\fR\fB, const char *\fR\fIstr, int \fR\fIn\fR\fB);\fR
.fi
.SH DESCRIPTION
These routines write the characters of the (null-terminated) character string
\fIstr\fR on the given window.
It is similar to calling \fBwaddch\fR once for each character in the string.
The four routines with \fIn\fR as the last argument
write at most \fIn\fR characters.
If \fIn\fR is -1, then the entire string will be added,
up to the maximum number of characters that will fit on the line,
or until a terminating null is reached.
.SH RETURN VALUE
All routines return the integer \fBERR\fR upon failure and \fBOK\fR on success
(the SVr4 manuals specify only "an integer value other than \fBERR\fR") upon
successful completion.
.PP
X/Open does not define any error conditions.
This implementation returns an error
if the window pointer is null or
if the string pointer is null or
if the corresponding calls to \fBwaddch\fP return an error.
.SH NOTES
Note that all of these routines except \fBwaddstr\fR and \fBwaddnstr\fR may be
macros.
.SH PORTABILITY
All these entry points are described in the XSI Curses standard, Issue 4.  The
XSI errors EILSEQ and EOVERFLOW, associated with extended-level conformance,
are not yet detected.
.SH SEE ALSO
\fBcurses\fR(3), \fBcurs_addch\fR(3).
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.6
log
@ncurses 5.1
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_addstr.3,v 1.5 1998/09/13 19:16:16 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d31 1
a31 1
.\" $From: curs_addstr.3x,v 1.9 2000/07/01 19:54:05 tom Exp $
d33 2
d44 2
d47 1
d49 2
a50 2

\fBint addstr(const char *str);\fR
d52 1
a52 1
\fBint addnstr(const char *str, int n);\fR
d54 1
a54 1
\fBint waddstr(WINDOW *win, const char *str);\fR
d56 1
a56 1
\fBint waddnstr(WINDOW *win, const char *str, int n);\fR
d58 1
a58 1
\fBint mvaddstr(int y, int x, const char *str);\fR
d60 1
a60 1
\fBint mvaddnstr(int y, int x, const char *str, int n);\fR
d62 1
a62 1
\fBint mvwaddstr(WINDOW *win, int y, int x, const char *str);\fR
d64 2
a65 1
\fBint mvwaddnstr(WINDOW *win, int y, int x, const char *str, int n);\fR
d68 7
a74 4
\fIstr\fR on the given window.  It is similar to calling \fBwaddch\fR once for
each character in the string.  The four routines with \fIn\fR as the last
argument write at most \fIn\fR characters.  If \fIn\fR is -1, then the
entire string will be added.
d79 6
@


1.5
log
@ncurses-4.2-980905
@
text
@d1 1
a1 1
.\" $OpenBSD$
d4 1
a4 1
.\" Copyright (c) 1998 Free Software Foundation, Inc.                        *
d31 1
a31 1
.\" $From: curs_addstr.3x,v 1.8 1998/03/11 21:12:53 juergen Exp $
d34 8
a41 3
\fBaddstr\fR, \fBaddnstr\fR, \fBwaddstr\fR, \fBwaddnstr\fR,
\fBmvaddstr\fR, \fBmvaddnstr\fR, \fBmvwaddstr\fR, \fBmvwaddnstr\fR - add a
string of characters to a \fBcurses\fR window and advance cursor
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 2
a31 1
.\" $OpenBSD$
@


1.3
log
@3X-> 3
@
text
@d1 30
a30 1
.\" $OpenBSD: curs_addstr.3,v 1.2 1997/12/03 05:20:50 millert Exp $
@


1.2
log
@Merge of ncurses-4.1-971129
@
text
@d1 2
a2 2
.\" $OpenBSD$
.TH curs_addstr 3X ""
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d1 1
d43 1
a43 1
\fBcurses\fR(3X), \fBcurs_addch\fR(3X).
@
