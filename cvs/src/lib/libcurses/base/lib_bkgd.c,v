head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.28
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.24
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.26
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.18
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.22
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.20
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.16
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.14
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.12
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.10
	OPENBSD_5_0:1.3.0.8
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.6
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.4
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.2
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.2.0.38
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.34
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.32
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.30
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.28
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.26
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.24
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.22
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.20
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.18
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.16
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.14
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.12
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2010.01.12.23.22.05;	author nicm;	state Exp;
branches;
next	1.2;

1.2
date	2001.01.22.18.01.37;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.09.36;	author millert;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2006,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 *     and: Juergen Pfeifer                         1997                    *
 *     and: Sven Verdoolaege                        2000                    *
 *     and: Thomas E. Dickey                        1996-on                 *
 ****************************************************************************/

#include <curses.priv.h>

MODULE_ID("$Id: lib_bkgd.c,v 1.36 2008/03/23 00:09:14 tom Exp $")

/*
 * Set the window's background information.
 */
#if USE_WIDEC_SUPPORT
NCURSES_EXPORT(void)
#else
static NCURSES_INLINE void
#endif
wbkgrndset(WINDOW *win, const ARG_CH_T ch)
{
    T((T_CALLED("wbkgdset(%p,%s)"), win, _tracech_t(ch)));

    if (win) {
	attr_t off = AttrOf(win->_nc_bkgd);
	attr_t on = AttrOf(CHDEREF(ch));

	toggle_attr_off(WINDOW_ATTRS(win), off);
	toggle_attr_on(WINDOW_ATTRS(win), on);

#if NCURSES_EXT_COLORS
	{
	    int pair;

	    if ((pair = GetPair(win->_nc_bkgd)) != 0)
		SET_WINDOW_PAIR(win, 0);
	    if ((pair = GetPair(CHDEREF(ch))) != 0)
		SET_WINDOW_PAIR(win, pair);
	}
#endif

	if (CharOf(CHDEREF(ch)) == L('\0')) {
	    SetChar(win->_nc_bkgd, BLANK_TEXT, AttrOf(CHDEREF(ch)));
	    if_EXT_COLORS(SetPair(win->_nc_bkgd, GetPair(CHDEREF(ch))));
	} else {
	    win->_nc_bkgd = CHDEREF(ch);
	}
#if USE_WIDEC_SUPPORT
	/*
	 * If we're compiled for wide-character support, _bkgrnd is the
	 * preferred location for the background information since it stores
	 * more than _bkgd.  Update _bkgd each time we modify _bkgrnd, so the
	 * macro getbkgd() will work.
	 */
	{
	    cchar_t wch;
	    int tmp;

	    wgetbkgrnd(win, &wch);
	    tmp = _nc_to_char((wint_t) CharOf(wch));

	    win->_bkgd = (((tmp == EOF) ? ' ' : (chtype) tmp)
			  | (AttrOf(wch) & ALL_BUT_COLOR)
			  | COLOR_PAIR(GET_WINDOW_PAIR(win)));
	}
#endif
    }
    returnVoid;
}

NCURSES_EXPORT(void)
wbkgdset(WINDOW *win, chtype ch)
{
    NCURSES_CH_T wch;
    SetChar2(wch, ch);
    wbkgrndset(win, CHREF(wch));
}

/*
 * Set the window's background information and apply it to each cell.
 */
#if USE_WIDEC_SUPPORT
NCURSES_EXPORT(int)
#else
static NCURSES_INLINE int
#undef wbkgrnd
#endif
wbkgrnd(WINDOW *win, const ARG_CH_T ch)
{
    int code = ERR;
    int x, y;
    NCURSES_CH_T new_bkgd = CHDEREF(ch);

    T((T_CALLED("wbkgd(%p,%s)"), win, _tracech_t(ch)));

    if (win) {
	NCURSES_CH_T old_bkgrnd;
	wgetbkgrnd(win, &old_bkgrnd);

	wbkgrndset(win, CHREF(new_bkgd));
	wattrset(win, AttrOf(win->_nc_bkgd));

	for (y = 0; y <= win->_maxy; y++) {
	    for (x = 0; x <= win->_maxx; x++) {
		if (CharEq(win->_line[y].text[x], old_bkgrnd)) {
		    win->_line[y].text[x] = win->_nc_bkgd;
		} else {
		    NCURSES_CH_T wch = win->_line[y].text[x];
		    RemAttr(wch, (~(A_ALTCHARSET | A_CHARTEXT)));
		    win->_line[y].text[x] = _nc_render(win, wch);
		}
	    }
	}
	touchwin(win);
	_nc_synchook(win);
	code = OK;
    }
    returnCode(code);
}

NCURSES_EXPORT(int)
wbkgd(WINDOW *win, chtype ch)
{
    NCURSES_CH_T wch;
    SetChar2(wch, ch);
    return wbkgrnd(win, CHREF(wch));
}
@


1.2
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_bkgd.c,v 1.1 1999/01/18 19:09:36 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d34 3
d41 1
a41 1
MODULE_ID("$From: lib_bkgd.c,v 1.14 2000/12/10 02:43:26 tom Exp $")
d43 4
d48 4
a51 1
wbkgdset(WINDOW *win, chtype ch)
d53 1
a53 1
    T((T_CALLED("wbkgdset(%p,%s)"), win, _tracechtype(ch)));
d56 5
a60 2
	chtype off = AttrOf(win->_bkgd);
	chtype on = AttrOf(ch);
d62 10
a71 2
	toggle_attr_off(win->_attrs, off);
	toggle_attr_on(win->_attrs, on);
d73 25
a97 3
	if (TextOf(ch) == 0)
	    ch |= BLANK;
	win->_bkgd = ch;
d102 12
d115 5
a119 1
wbkgd(WINDOW *win, const chtype ch)
d123 1
a123 1
    chtype new_bkgd = ch;
d125 1
a125 1
    T((T_CALLED("wbkgd(%p,%s)"), win, _tracechtype(new_bkgd)));
d128 2
a129 1
	chtype old_bkgd = getbkgd(win);
d131 2
a132 2
	wbkgdset(win, new_bkgd);
	wattrset(win, AttrOf(win->_bkgd));
d136 7
a142 7
		if (win->_line[y].text[x] == old_bkgd)
		    win->_line[y].text[x] = win->_bkgd;
		else
		    win->_line[y].text[x] =
			_nc_render(win, (A_ALTCHARSET &
					 AttrOf(win->_line[y].text[x]))
				   | TextOf(win->_line[y].text[x]));
d150 8
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_bkgd.c,v 1.4 1998/07/23 21:18:30 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
d38 1
a38 1
MODULE_ID("$From: lib_bkgd.c,v 1.12 1998/02/11 12:13:54 tom Exp $")
d40 2
a41 1
void wbkgdset(WINDOW *win, chtype ch)
d43 14
a56 14
  T((T_CALLED("wbkgdset(%p,%s)"), win, _tracechtype(ch)));
    
  if (win) {
    chtype off = AttrOf(win->_bkgd);
    chtype on  = AttrOf(ch);
    
    toggle_attr_off(win->_attrs,off);
    toggle_attr_on (win->_attrs,on);
    
    if (TextOf(ch)==0)
      ch |= BLANK;
    win->_bkgd = ch;
  }
  returnVoid;
d59 2
a60 1
int wbkgd(WINDOW *win, const chtype ch)
d62 26
a87 22
  int code = ERR;
  int x, y;
  chtype new_bkgd = ch;

  T((T_CALLED("wbkgd(%p,%s)"), win, _tracechtype(new_bkgd)));

  if (win) {
    chtype old_bkgd = getbkgd(win);

    wbkgdset(win, new_bkgd);
    wattrset(win, AttrOf(win->_bkgd));
    
    for (y = 0; y <= win->_maxy; y++) {
      for (x = 0; x <= win->_maxx; x++) {
	if (win->_line[y].text[x] == old_bkgd)
	  win->_line[y].text[x] = win->_bkgd;
	else 
	  win->_line[y].text[x] =
	    _nc_render(win,(A_ALTCHARSET & 
			    AttrOf(win->_line[y].text[x])) 
		       | TextOf(win->_line[y].text[x]));
      }
d89 1
a89 5
    touchwin(win);
    _nc_synchook(win);
    code = OK;
  }
  returnCode(code);
@

