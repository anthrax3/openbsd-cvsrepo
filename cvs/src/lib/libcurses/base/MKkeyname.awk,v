head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.28
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.24
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.26
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.30
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.26
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.24
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.22
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.20
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.18
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2010.01.12.23.22.05;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2003.03.17.21.54.44;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.01.22.18.01.36;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.02.24.06.31.07;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.01.18.19.09.31;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@# $OpenBSD$
# $Id: MKkeyname.awk,v 1.40 2008/07/12 18:40:00 tom Exp $
##############################################################################
# Copyright (c) 1999-2007,2008 Free Software Foundation, Inc.                #
#                                                                            #
# Permission is hereby granted, free of charge, to any person obtaining a    #
# copy of this software and associated documentation files (the "Software"), #
# to deal in the Software without restriction, including without limitation  #
# the rights to use, copy, modify, merge, publish, distribute, distribute    #
# with modifications, sublicense, and/or sell copies of the Software, and to #
# permit persons to whom the Software is furnished to do so, subject to the  #
# following conditions:                                                      #
#                                                                            #
# The above copyright notice and this permission notice shall be included in #
# all copies or substantial portions of the Software.                        #
#                                                                            #
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR #
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,   #
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL    #
# THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER      #
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING    #
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER        #
# DEALINGS IN THE SOFTWARE.                                                  #
#                                                                            #
# Except as contained in this notice, the name(s) of the above copyright     #
# holders shall not be used in advertising or otherwise to promote the sale, #
# use or other dealings in this Software without prior written               #
# authorization.                                                             #
##############################################################################
BEGIN {
	print "/* generated by MKkeyname.awk */"
	print ""
	print "#include <curses.priv.h>"
	print "#include <tic.h>"
	print "#include <term_entry.h>"
	print ""
	first = 1;
}

/^[^#]/ {
		if (bigstrings) {
			if (first)  {
				print "struct kn { short offset; int code; };"
				print "static const struct kn _nc_key_names[] = {"
			}
			printf "\t{ %d, %s },\n", offset, $1
			offset += length($1) + 1
			names = names"\n\t\""$1"\\0\""
		} else {
			if (first) {
				print "struct kn { const char *name; int code; };"
				print "static const struct kn _nc_key_names[] = {"
			}
			printf "\t{ \"%s\", %s },\n", $1, $1;
		}
		first = 0;
	}

END {
	if (bigstrings) {
		printf "\t{ -1, 0 }};\n"
		print ""
		print "static const char key_names[] = "names";"
	} else {
		printf "\t{ 0, 0 }};\n"
	}
	print ""
	print "#define SIZEOF_TABLE 256"
	print "#define MyTable _nc_globals.keyname_table"
	print ""
	print "NCURSES_EXPORT(NCURSES_CONST char *) _nc_keyname (SCREEN *sp, int c)"
	print "{"
	print "	int i;"
	print "	char name[20];"
	print "	char *p;"
	print "	size_t psize;"
	print "	NCURSES_CONST char *result = 0;"
	print ""
	print "	if (c == -1) {"
	print "		result = \"-1\";"
	print "	} else {"
	if (bigstrings) {
		print "		for (i = 0; _nc_key_names[i].offset != -1; i++) {"
		print "			if (_nc_key_names[i].code == c) {"
		print "				result = (NCURSES_CONST char *)key_names + _nc_key_names[i].offset;"
		print "				break;"
		print "			}"
		print "		}"
	} else {
		print "		for (i = 0; _nc_key_names[i].name != 0; i++) {"
		print "			if (_nc_key_names[i].code == c) {"
		print "				result = (NCURSES_CONST char *)_nc_key_names[i].name;"
		print "				break;"
		print "			}"
		print "		}"
	}
	print ""
	print "		if (result == 0 && (c >= 0 && c < SIZEOF_TABLE)) {"
	print "			if (MyTable == 0)"
	print "				MyTable = typeCalloc(char *, SIZEOF_TABLE);"
	print "			if (MyTable != 0) {"
	print "				if (MyTable[c] == 0) {"
	print "					int cc = c;"
	print "					p = name;"
	print "					psize = sizeof(name);"
	print "					if (cc >= 128 && (sp == 0 || sp->_use_meta)) {"
	print "						strlcpy(p, \"M-\", psize);"
	print "						p += 2;"
	print "						psize -= 2;"
	print "						cc -= 128;"
	print "					}"
	print "					if (cc < 32)"
	print "						snprintf(p, psize, \"^%c\", cc + '@@');"
	print "					else if (cc == 127)"
	print "						strlcpy(p, \"^?\", psize);"
	print "					else"
	print "						snprintf(p, psize, \"%c\", cc);"
	print "					MyTable[c] = strdup(name);"
	print "				}"
	print "				result = MyTable[c];"
	print "			}"
	print "#if NCURSES_EXT_FUNCS && NCURSES_XNAMES"
	print "		} else if (result == 0 && cur_term != 0) {"
	print "			int j, k;"
	print "			char * bound;"
	print "			TERMTYPE *tp = &(cur_term->type);"
	print "			int save_trace = _nc_tracing;"
	print ""
	print "			_nc_tracing = 0;	/* prevent recursion via keybound() */"
	print "			for (j = 0; (bound = keybound(c, j)) != 0; ++j) {"
	print "				for(k = STRCOUNT; k < (int) NUM_STRINGS(tp);  k++) {"
	print "					if (tp->Strings[k] != 0 && !strcmp(bound, tp->Strings[k])) {"
	print "						result = ExtStrname(tp, k, strnames);"
	print "						break;"
	print "					}"
	print "				}"
	print "				free(bound);"
	print "				if (result != 0)"
	print "					break;"
	print "			}"
	print "			_nc_tracing = save_trace;"
	print "#endif"
	print "		}"
	print "	}"
	print "	return result;"
	print "}"
	print ""
	print "NCURSES_EXPORT(NCURSES_CONST char *) keyname (int c)"
	print "{"
	print "\treturn _nc_keyname(SP, c);"
	print "}"
	print ""
	print "#if NO_LEAKS"
	print "void _nc_keyname_leaks(void)"
	print "{"
	print "	int j;"
	print "	if (MyTable != 0) {"
	print "		for (j = 0; j < SIZEOF_TABLE; ++j) {"
	print "			FreeIfNeeded(MyTable[j]);"
	print "		}"
	print "		FreeAndNull(MyTable);"
	print "	}"
	print "}"
	print "#endif /* NO_LEAKS */"
}
@


1.4
log
@Use snprintf() and strlcpy() in the generated lib_keyname.c
@
text
@d1 2
a2 2
# $OpenBSD: MKkeyname.awk,v 1.3 2001/01/22 18:01:36 millert Exp $
# $From: MKkeyname.awk,v 1.18 2000/12/10 02:25:23 tom Exp $
d4 1
a4 1
# Copyright (c) 1999,2000 Free Software Foundation, Inc.                     #
d33 1
a33 4
	print "#include <ncurses_cfg.h>"
	print "#include <stdlib.h>"
	print "#include <string.h>"
	print "#include <curses.h>"
d35 1
d37 1
a37 1
	print "const struct kn _nc_key_names[] = {"
d41 16
a56 1
	printf "\t{ \"%s\", %s },\n", $1, $1;
d60 87
a146 1
	printf "\t{ 0, 0 }};\n"
d150 13
a162 26
	print "\tint i;"
	print "\tstatic char name[20];"
	print "\tchar *p;"
	print "\tsize_t psize;"
	print ""
	print "\tfor (i = 0; _nc_key_names[i].name != 0; i++)"
	print "\t\tif (_nc_key_names[i].code == c)"
	print "\t\t\treturn (NCURSES_CONST char *)_nc_key_names[i].name;"
	print "\tif (c >= 256) return \"UNKNOWN KEY\";"
	print "\tp = name;"
	print "\tpsize = sizeof(name);"
	print "\tif (c >= 128) {"
	print "\t\tstrlcpy(p, \"M-\", psize);"
	print "\t\tp += 2;"
	print "\t\tpsize -= 2;"
	print "\t\tc -= 128;"
	print "\t}"
	print "\tif (c < 0)"
	print "\t\tsnprintf(p, psize, \"%d\", c);"
	print "\telse if (c < 32)"
	print "\t\tsnprintf(p, psize, \"^%c\", c + '@@');"
	print "\telse if (c == 127)"
	print "\t\tstrlcpy(p, \"^?\", psize);"
	print "\telse"
	print "\t\tsnprintf(p, psize, \"%c\", c);"
	print "\treturn (NCURSES_CONST char *)name;"
d164 1
@


1.3
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
# $OpenBSD: MKkeyname.awk,v 1.2 1999/02/24 06:31:07 millert Exp $
d51 4
a54 3
	print "int i;"
	print "static char name[20];"
	print "char *p;"
d61 1
d63 1
a63 1
	print "\t\tstrcpy(p, \"M-\");"
d65 1
d69 1
a69 1
	print "\t\tsprintf(p, \"%d\", c);"
d71 1
a71 1
	print "\t\tsprintf(p, \"^%c\", c + '@@');"
d73 1
a73 1
	print "\t\tstrcpy(p, \"^?\");"
d75 1
a75 1
	print "\t\tsprintf(p, \"%c\", c);"
@


1.2
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 2
a2 2
# $OpenBSD: MKkeyname.awk,v 1.1 1999/01/18 19:09:31 millert Exp $
# $From: MKkeyname.awk,v 1.17 1999/02/18 11:18:06 tom Exp $
d4 1
a4 1
# Copyright (c) 1999 Free Software Foundation, Inc.                          #
d49 1
a49 1
	print "NCURSES_CONST char *keyname(int c)"
@


1.1
log
@ncurses-4.2-990116
@
text
@d1 29
a29 2
# $OpenBSD: MKkeyname.awk,v 1.5 1998/11/17 03:16:20 millert Exp $
# $From: MKkeyname.awk,v 1.15 1999/01/16 22:56:44 tom Exp $
d37 1
d39 1
a39 6
	print "struct kn {"
	print "\tconst char *name;"
	print "\tint code;"
	print "};"
	print ""
	print "static const struct kn key_names[] = {"
d43 1
a43 2
#	printf "\t{ \"%s\",%*s%s },\n", $1, 16-length($1), " ", $1;
	printf "\t{ \"%s\",%s },\n", $1, $1;
d47 1
a47 1
	print "};"
d51 1
a51 1
	print "int i, size = sizeof(key_names)/sizeof(struct kn);"
d55 3
a57 3
	print "\tfor (i = 0; i < size; i++)"
	print "\t\tif (key_names[i].code == c)"
	print "\t\t\treturn (NCURSES_CONST char *)key_names[i].name;"
a74 1
	print "" 
@

