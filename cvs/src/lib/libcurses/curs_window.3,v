head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.30
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.28
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.24
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.26
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.18
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.22
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.20
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.16
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.14
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.12
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.10
	OPENBSD_5_0:1.10.0.8
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.28
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.24
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.22
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.20
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.18
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.16
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.14
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.12
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.10
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.12
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.10
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.8
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.6
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.4
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.2
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.10
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.14.08.55.19;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.10.03.06.09;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.03.28.18.01.04;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.01.18.19.07.16;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.09.13.19.16.23;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.23.21.18.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.45.07;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.12.03.05.21.06;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.09;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@.\" $OpenBSD$
.\"
.\"***************************************************************************
.\" Copyright (c) 1998-2005,2006 Free Software Foundation, Inc.              *
.\"                                                                          *
.\" Permission is hereby granted, free of charge, to any person obtaining a  *
.\" copy of this software and associated documentation files (the            *
.\" "Software"), to deal in the Software without restriction, including      *
.\" without limitation the rights to use, copy, modify, merge, publish,      *
.\" distribute, distribute with modifications, sublicense, and/or sell       *
.\" copies of the Software, and to permit persons to whom the Software is    *
.\" furnished to do so, subject to the following conditions:                 *
.\"                                                                          *
.\" The above copyright notice and this permission notice shall be included  *
.\" in all copies or substantial portions of the Software.                   *
.\"                                                                          *
.\" THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
.\" OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
.\" MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
.\" IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
.\" DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
.\" OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
.\" THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
.\"                                                                          *
.\" Except as contained in this notice, the name(s) of the above copyright   *
.\" holders shall not be used in advertising or otherwise to promote the     *
.\" sale, use or other dealings in this Software without prior written       *
.\" authorization.                                                           *
.\"***************************************************************************
.\"
.\" $Id: curs_window.3x,v 1.14 2006/02/25 21:49:19 tom Exp $
.TH curs_window 3 ""
.na
.hy 0
.SH NAME
\fBnewwin\fR,
\fBdelwin\fR,
\fBmvwin\fR,
\fBsubwin\fR,
\fBderwin\fR,
\fBmvderwin\fR,
\fBdupwin\fR,
\fBwsyncup\fR,
\fBsyncok\fR,
\fBwcursyncup\fR,
\fBwsyncdown\fR - create \fBcurses\fR windows
.ad
.hy
.SH SYNOPSIS
\fB#include <curses.h>\fR
.sp
\fBWINDOW *newwin(int nlines, int ncols, int begin_y,\fR
      \fBint begin_x);\fR
.br
\fBint delwin(WINDOW *win);\fR
.br
\fBint mvwin(WINDOW *win, int y, int x);\fR
.br
\fBWINDOW *subwin(WINDOW *orig, int nlines, int ncols,\fR
      \fBint begin_y, int begin_x);\fR
.br
\fBWINDOW *derwin(WINDOW *orig, int nlines, int ncols,\fR
      \fBint begin_y, int begin_x);\fR
.br
\fBint mvderwin(WINDOW *win, int par_y, int par_x);\fR
.br
\fBWINDOW *dupwin(WINDOW *win);\fR
.br
\fBvoid wsyncup(WINDOW *win);\fR
.br
\fBint syncok(WINDOW *win, bool bf);\fR
.br
\fBvoid wcursyncup(WINDOW *win);\fR
.br
\fBvoid wsyncdown(WINDOW *win);\fR
.br
.SH DESCRIPTION
Calling \fBnewwin\fR creates and returns a pointer to a new window with the
given number of lines and columns.  The upper left-hand corner of the window is
at line \fIbegin\fR_\fIy\fR, column \fIbegin\fR_\fIx\fR.  If either
\fInlines\fR or \fIncols\fR is zero, they default to \fBLINES -\fR
\fIbegin\fR_\fIy\fR and \fBCOLS -\fR \fIbegin\fR_\fIx\fR.  A new full-screen
window is created by calling \fBnewwin(0,0,0,0)\fR.
.PP
Calling \fBdelwin\fR deletes the named window, freeing all memory
associated with it (it does not actually erase the window's screen
image).  Subwindows must be deleted before the main window can be
deleted.
.PP
Calling \fBmvwin\fR moves the window so that the upper left-hand
corner is at position (\fIx\fR, \fIy\fR).  If the move would cause the
window to be off the screen, it is an error and the window is not
moved.  Moving subwindows is allowed, but should be avoided.
.PP
Calling \fBsubwin\fR creates and returns a pointer to a new window
with the given number of lines, \fInlines\fR, and columns,
\fIncols\fR.  The window is at position (\fIbegin\fR_\fIy\fR,
\fIbegin\fR_\fIx\fR) on the screen.  (This position is relative to the
screen, and not to the window \fIorig\fR.)  The window is made in the
middle of the window \fIorig\fR, so that changes made to one window
will affect both windows.  The subwindow shares memory with the window
\fIorig\fR.  When using this routine, it is necessary to call
\fBtouchwin\fR or \fBtouchline\fR on \fIorig\fR before calling
\fBwrefresh\fR on the subwindow.
.PP
Calling \fBderwin\fR is the same as calling \fBsubwin,\fR except that
\fIbegin\fR_\fIy\fR and \fIbegin\fR_\fIx\fR are relative to the origin
of the window \fIorig\fR rather than the screen.  There is no
difference between the subwindows and the derived windows.
.PP
Calling \fBmvderwin\fR moves a derived window (or subwindow)
inside its parent window.  The screen-relative parameters of the
window are not changed.  This routine is used to display different
parts of the parent window at the same physical position on the
screen.
.PP
Calling \fBdupwin\fR creates an exact duplicate of the window \fIwin\fR.
.PP
Calling \fBwsyncup\fR touches all locations in ancestors of \fIwin\fR that are
changed in \fIwin\fR.  If \fBsyncok\fR is called with second argument
\fBTRUE\fR then \fBwsyncup\fR is called automatically whenever there is a
change in the window.
.PP
The \fBwsyncdown\fR routine touches each location in \fIwin\fR that has been
touched in any of its ancestor windows.  This routine is called by
\fBwrefresh\fR, so it should almost never be necessary to call it manually.
.PP
The routine \fBwcursyncup\fR updates the current cursor position of all the
ancestors of the window to reflect the current cursor position of the
window.
.SH RETURN VALUE
Routines that return an integer return the integer \fBERR\fR upon failure and
\fBOK\fR (SVr4 only specifies "an integer value other than \fBERR\fR") upon
successful completion.
.PP
Routines that return pointers return \fBNULL\fR on error.
.PP
X/Open defines no error conditions.
In this implementation
.RS
.TP 5
\fBdelwin\fR
returns an error if the window pointer is null, or
if the window is the parent of another window.
.IP
This implementation also maintains a list of windows,
and checks that the pointer passed to \fBdelwin\fP is one that
it created, returning an error if it was not..
.TP 5
\fBmvderwin\fP
returns an error
if the window pointer is null, or
if some part of the window would be placed off-screen.
.TP 5
\fBmvwin\fP
returns an error
if the window pointer is null, or
if the window is really a pad, or
if some part of the window would be placed off-screen.
.TP 5
\fBsyncok\fP
returns an error
if the window pointer is null.
.RE
.SH NOTES
If many small changes are made to the window, the \fBwsyncup\fR option could
degrade performance.
.PP
Note that \fBsyncok\fR may be a macro.
.SH BUGS
The subwindow functions (\fIsubwin\fR, \fIderwin\fR, \fImvderwin\fR,
\fBwsyncup\fR, \fBwsyncdown\fR, \fBwcursyncup\fR, \fBsyncok\fR) are flaky,
incompletely implemented, and not well tested.
.PP
The System V curses documentation is very unclear about what \fBwsyncup\fR
and \fBwsyncdown\fR actually do.  It seems to imply that they are only
supposed to touch exactly those lines that are affected by ancestor changes.
The language here, and the behavior of the \fBcurses\fR implementation,
is patterned on the XPG4 curses standard.  The weaker XPG4 spec may result
in slower updates.
.SH PORTABILITY
The XSI Curses standard, Issue 4 describes these functions.
.SH SEE ALSO
\fBcurses\fR(3), \fBcurs_refresh\fR(3), \fBcurs_touch\fR(3)
.\"#
.\"# The following sets edit modes for GNU EMACS
.\"# Local Variables:
.\"# mode:nroff
.\"# fill-column:79
.\"# End:
@


1.9
log
@typos;

diffs passed on to curses people.
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_window.3,v 1.8 2000/07/10 03:06:09 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998,2000 Free Software Foundation, Inc.                   *
d31 1
a31 1
.\" $From: curs_window.3x,v 1.9 2000/07/01 20:08:37 tom Exp $
d33 2
d47 2
d51 1
a51 1

d84 1
a84 1

d89 1
a89 1

d94 1
a94 1

d105 1
a105 1

d110 1
a110 1

d116 1
a116 1

d118 1
a118 1

d123 1
a123 1

d127 1
a127 1

d135 1
a135 4

\fBdelwin\fR returns the integer \fBERR\fR upon failure and \fBOK\fR
upon successful completion.

d137 28
d168 1
a168 1

d174 1
a174 1

@


1.8
log
@ncurses 5.1
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_window.3,v 1.7 1999/03/28 18:01:04 millert Exp $
d147 1
a147 1
and \fBwsyncdown\fR actually do.  It seems to imply that they are only 
@


1.7
log
@ncurses-4.2-990327; just man page fixes
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_window.3,v 1.6 1999/01/18 19:07:16 millert Exp $
d4 1
a4 1
.\" Copyright (c) 1998 Free Software Foundation, Inc.                        *
d31 1
a31 1
.\" $From: curs_window.3x,v 1.8 1999/03/20 22:38:46 tom Exp $
d34 11
a44 4
\fBnewwin\fR, \fBdelwin\fR, \fBmvwin\fR,
\fBsubwin\fR, \fBderwin\fR, \fBmvderwin\fR, \fBdupwin\fR,
\fBwsyncup\fR, \fBsyncok\fR, \fBwcursyncup\fR, \fBwsyncdown\fR -
create \fBcurses\fR windows
@


1.6
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
.\" $OpenBSD: curs_window.3,v 1.5 1998/09/13 19:16:23 millert Exp $
d31 1
a31 1
.\" $From: curs_window.3x,v 1.7 1998/12/26 20:11:01 tom Exp $
d42 1
a42 1
      \fBintbegin_x);\fR
@


1.5
log
@ncurses-4.2-980905
@
text
@d1 1
a1 1
.\" $OpenBSD$
d31 1
a31 1
.\" $From: curs_window.3x,v 1.6 1998/03/11 21:12:53 juergen Exp $
d48 2
a49 2
\fBWINDOW *subwin(WINDOW *orig, int nlines, int ncols,
      int begin_y, int begin_x);\fR
d51 2
a52 2
\fBWINDOW *derwin(WINDOW *orig, int nlines, int ncols,
      int begin_y, int begin_x);\fR
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 2
a31 1
.\" $OpenBSD$
@


1.3
log
@3X-> 3
@
text
@d1 30
a30 1
.\" $OpenBSD: curs_window.3,v 1.2 1997/12/03 05:21:06 millert Exp $
@


1.2
log
@Merge of ncurses-4.1-971129
@
text
@d1 2
a2 2
.\" $OpenBSD$
.TH curs_window 3X ""
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d1 1
d118 1
a118 1
\fBcurses\fR(3X), \fBcurs_refresh\fR(3X), \fBcurs_touch\fR(3X)
@
