head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.32
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.28
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.24
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.26
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.18
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.22
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.20
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.16
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.14
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.34
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.30
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.28
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.26
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.24
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.22
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.20
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.18
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.16
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.14
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.12
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.10
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.8
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.6
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.13;

1.13
date	2002.02.18.22.24.32;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.22.04.37.53;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.22.18.01.35;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.08.22.46.56;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.26.16.45.03;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2000.01.16.01.35.17;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.11.28.17.59.28;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.11.28.17.53.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.03.12.04.36.02;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.02.24.06.31.07;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.01.24.20.06.45;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.10.31.06.30.31;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.07.23.21.20.06;	author millert;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2006,2007 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 *     and: Thomas E. Dickey 1996 on                                        *
 ****************************************************************************/

/*
 * $Id: tic.h,v 1.62 2007/08/11 16:12:43 tom Exp $
 *	tic.h - Global variables and structures for the terminfo
 *			compiler.
 */

#ifndef __TIC_H
#define __TIC_H

#ifdef __cplusplus
extern "C" {
#endif

#include <curses.h>	/* for the _tracef() prototype, ERR/OK, bool defs */

/*
** The format of compiled terminfo files is as follows:
**
**		Header (12 bytes), containing information given below
**		Names Section, containing the names of the terminal
**		Boolean Section, containing the values of all of the
**				boolean capabilities
**				A null byte may be inserted here to make
**				sure that the Number Section begins on an
**				even word boundary.
**		Number Section, containing the values of all of the numeric
**				capabilities, each as a short integer
**		String Section, containing short integer offsets into the
**				String Table, one per string capability
**		String Table, containing the actual characters of the string
**				capabilities.
**
**	NOTE that all short integers in the file are stored using VAX/PDP-style
**	byte-order, i.e., least-significant byte first.
**
**	There is no structure definition here because it would only confuse
**	matters.  Terminfo format is a raw byte layout, not a structure
**	dump.  If you happen to be on a little-endian machine with 16-bit
**	shorts that requires no padding between short members in a struct,
**	then there is a natural C structure that captures the header, but
**	not very helpfully.
*/

#define MAGIC		0432	/* first two bytes of a compiled entry */

#undef  BYTE
#define BYTE(p,n)	(unsigned char)((p)[n])

#define IS_NEG1(p)	((BYTE(p,0) == 0377) && (BYTE(p,1) == 0377))
#define IS_NEG2(p)	((BYTE(p,0) == 0376) && (BYTE(p,1) == 0377))
#define LOW_MSB(p)	(BYTE(p,0) + 256*BYTE(p,1))

#define IS_TIC_MAGIC(p)	(LOW_MSB(p) == MAGIC)

/*
 * The "maximum" here is misleading; XSI guarantees minimum values, which a
 * given implementation may exceed.
 */
#define MAX_NAME_SIZE	512	/* maximum legal name field size (XSI:127) */
#define MAX_ENTRY_SIZE	4096	/* maximum legal entry size */

/*
 * The maximum size of individual name or alias is guaranteed in XSI to be at
 * least 14, since that corresponds to the older filename lengths.  Newer
 * systems allow longer aliases, though not many terminal descriptions are
 * written to use them.  The MAX_ALIAS symbol is used for warnings.
 */
#if HAVE_LONG_FILE_NAMES
#define MAX_ALIAS	32	/* smaller than POSIX minimum for PATH_MAX */
#else
#define MAX_ALIAS	14	/* SVr3 filename length */
#endif

/* location of user's personal info directory */
#define PRIVATE_INFO	"%s/.terminfo"	/* plug getenv("HOME") into %s */

/*
 * Some traces are designed to be used via tic's verbose option (and similar in
 * infocmp and toe) rather than the 'trace()' function.  So we use the bits
 * above the normal trace() parameter as a debug-level.
 */

#define MAX_DEBUG_LEVEL 15
#define DEBUG_LEVEL(n)	((n) << TRACE_SHIFT)

#define set_trace_level(n) \
	_nc_tracing &= DEBUG_LEVEL(MAX_DEBUG_LEVEL), \
	_nc_tracing |= DEBUG_LEVEL(n)

#ifdef TRACE
#define DEBUG(n, a)	if (_nc_tracing >= DEBUG_LEVEL(n)) _tracef a
#else
#define DEBUG(n, a)	/*nothing*/
#endif

extern NCURSES_EXPORT_VAR(unsigned) _nc_tracing;
extern NCURSES_EXPORT(void) _nc_tracef (char *, ...) GCC_PRINTFLIKE(1,2);
extern NCURSES_EXPORT(const char *) _nc_visbuf (const char *);
extern NCURSES_EXPORT(const char *) _nc_visbuf2 (int, const char *);

/*
 * These are the types of tokens returned by the scanner.  The first
 * three are also used in the hash table of capability names.  The scanner
 * returns one of these values after loading the specifics into the global
 * structure curr_token.
 */

#define BOOLEAN 0		/* Boolean capability */
#define NUMBER 1		/* Numeric capability */
#define STRING 2		/* String-valued capability */
#define CANCEL 3		/* Capability to be cancelled in following tc's */
#define NAMES  4		/* The names for a terminal type */
#define UNDEF  5		/* Undefined */

#define NO_PUSHBACK	-1	/* used in pushtype to indicate no pushback */

	/*
	 *	The global structure in which the specific parts of a
	 *	scanned token are returned.
	 *
	 */

struct token
{
	char	*tk_name;		/* name of capability */
	int	tk_valnumber;	/* value of capability (if a number) */
	char	*tk_valstring;	/* value of capability (if a string) */
};

extern NCURSES_EXPORT_VAR(struct token)	_nc_curr_token;

	/*
	 * Offsets to string capabilities, with the corresponding functionkey
	 * codes.
	 */
struct tinfo_fkeys {
	unsigned offset;
	chtype code;
	};

#if	BROKEN_LINKER

#define	_nc_tinfo_fkeys	_nc_tinfo_fkeysf()
extern NCURSES_EXPORT(const struct tinfo_fkeys *) _nc_tinfo_fkeysf (void);

#else

extern NCURSES_EXPORT_VAR(const struct tinfo_fkeys) _nc_tinfo_fkeys[];

#endif

	/*
	 * The file comp_captab.c contains an array of these structures, one
	 * per possible capability.  These are indexed by a hash table array of
	 * pointers to the same structures for use by the parser.
	 */

struct name_table_entry
{
	const char *nte_name;	/* name to hash on */
	int	nte_type;	/* BOOLEAN, NUMBER or STRING */
	short	nte_index;	/* index of associated variable in its array */
	short	nte_link;	/* index in table of next hash, or -1 */
};

struct alias
{
	const char	*from;
	const char	*to;
	const char	*source;
};

extern NCURSES_EXPORT(const struct name_table_entry *) _nc_get_table (bool);
extern NCURSES_EXPORT(const short *) _nc_get_hash_table (bool);
extern NCURSES_EXPORT(const struct alias *) _nc_get_alias_table (bool);

#define NOTFOUND	((struct name_table_entry *) 0)

/* out-of-band values for representing absent capabilities */
#define ABSENT_BOOLEAN		((signed char)-1)	/* 255 */
#define ABSENT_NUMERIC		(-1)
#define ABSENT_STRING		(char *)0

/* out-of-band values for representing cancels */
#define CANCELLED_BOOLEAN	((signed char)-2)	/* 254 */
#define CANCELLED_NUMERIC	(-2)
#define CANCELLED_STRING	(char *)(-1)

#define VALID_BOOLEAN(s) ((unsigned char)(s) <= 1) /* reject "-1" */
#define VALID_NUMERIC(s) ((s) >= 0)
#define VALID_STRING(s)  ((s) != CANCELLED_STRING && (s) != ABSENT_STRING)

/* termcap entries longer than this may break old binaries */
#define MAX_TERMCAP_LENGTH	1023

/* this is a documented limitation of terminfo */
#define MAX_TERMINFO_LENGTH	4096

#ifndef TERMINFO
#define TERMINFO "/usr/share/terminfo"
#endif

/* access.c */
extern NCURSES_EXPORT(unsigned) _nc_pathlast (const char *);
extern NCURSES_EXPORT(bool) _nc_is_abs_path (const char *);
extern NCURSES_EXPORT(bool) _nc_is_dir_path (const char *);
extern NCURSES_EXPORT(bool) _nc_is_file_path (const char *);
extern NCURSES_EXPORT(char *) _nc_basename (char *);
extern NCURSES_EXPORT(char *) _nc_rootname (char *);

/* comp_hash.c: name lookup */
extern NCURSES_EXPORT(struct name_table_entry const *) _nc_find_entry
	(const char *, const short *);
extern NCURSES_EXPORT(struct name_table_entry const *) _nc_find_type_entry
	(const char *, int, const struct name_table_entry *);

/* comp_scan.c: lexical analysis */
extern NCURSES_EXPORT(int)  _nc_get_token (bool);
extern NCURSES_EXPORT(void) _nc_panic_mode (char);
extern NCURSES_EXPORT(void) _nc_push_token (int);
extern NCURSES_EXPORT(void) _nc_reset_input (FILE *, char *);
extern NCURSES_EXPORT_VAR(int) _nc_curr_col;
extern NCURSES_EXPORT_VAR(int) _nc_curr_line;
extern NCURSES_EXPORT_VAR(int) _nc_syntax;
extern NCURSES_EXPORT_VAR(long) _nc_comment_end;
extern NCURSES_EXPORT_VAR(long) _nc_comment_start;
extern NCURSES_EXPORT_VAR(long) _nc_curr_file_pos;
extern NCURSES_EXPORT_VAR(long) _nc_start_line;
#define SYN_TERMINFO	0
#define SYN_TERMCAP	1

/* comp_error.c: warning & abort messages */
extern NCURSES_EXPORT(const char *) _nc_get_source (void);
extern NCURSES_EXPORT(void) _nc_err_abort (const char *const,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;
extern NCURSES_EXPORT(void) _nc_get_type (char *name);
extern NCURSES_EXPORT(void) _nc_set_source (const char *const);
extern NCURSES_EXPORT(void) _nc_set_type (const char *const);
extern NCURSES_EXPORT(void) _nc_syserr_abort (const char *const,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;
extern NCURSES_EXPORT(void) _nc_warning (const char *const,...) GCC_PRINTFLIKE(1,2);
extern NCURSES_EXPORT_VAR(bool) _nc_suppress_warnings;

/* comp_expand.c: expand string into readable form */
extern NCURSES_EXPORT(char *) _nc_tic_expand (const char *, bool, int);

/* comp_scan.c: decode string from readable form */
extern NCURSES_EXPORT(int) _nc_trans_string (char *, char *);

/* captoinfo.c: capability conversion */
extern NCURSES_EXPORT(char *) _nc_captoinfo (const char *, const char *, int const);
extern NCURSES_EXPORT(char *) _nc_infotocap (const char *, const char *, int const);

/* home_terminfo.c */
extern NCURSES_EXPORT(char *) _nc_home_terminfo (void);

/* lib_tparm.c */
#define NUM_PARM 9

extern NCURSES_EXPORT_VAR(int) _nc_tparm_err;

extern NCURSES_EXPORT(int) _nc_tparm_analyze(const char *, char **, int *);

/* lib_tputs.c */
extern NCURSES_EXPORT_VAR(int) _nc_nulls_sent;		/* Add one for every null sent */

/* comp_main.c: compiler main */
extern const char * _nc_progname;

/* db_iterator.c */
typedef enum {
    dbdTIC = 0,
#if USE_DATABASE
    dbdEnvOnce,
    dbdHome,
    dbdEnvList,
    dbdCfgList,
    dbdCfgOnce,
#endif
#if USE_TERMCAP
    dbdEnvOnce2,
    dbdEnvList2,
    dbdCfgList2,
#endif
    dbdLAST
} DBDIRS;

extern NCURSES_EXPORT(const char *) _nc_next_db(DBDIRS *, int *);
extern NCURSES_EXPORT(const char *) _nc_tic_dir (const char *);
extern NCURSES_EXPORT(void) _nc_first_db(DBDIRS *, int *);
extern NCURSES_EXPORT(void) _nc_last_db(void);

/* write_entry.c */
extern NCURSES_EXPORT(int) _nc_tic_written (void);

#ifdef __cplusplus
}
#endif

#endif /* __TIC_H */
@


1.13
log
@make Booleans signed char, since char is unsigned on powerpc; millert ok
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.12 2001/02/22 04:37:53 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998-2000 Free Software Foundation, Inc.                   *
d34 1
d38 1
a38 1
 * $From: tic.h,v 1.36 2000/12/10 02:03:28 tom Exp $
d82 9
d98 5
a102 4
/* The maximum size of individual name or alias is guaranteed in XSI to
 * be 14, since that corresponds to the older filename lengths.  Newer
 * systems allow longer aliases, though not many terminal descriptions
 * are written to use them.
d105 1
a105 1
#define MAX_ALIAS	32	/* POSIX minimum for PATH_MAX */
d120 1
a120 1
#define DEBUG_LEVEL(n)	((n) << 12)	/* see TRACE_MAXIMUM */
d123 1
a123 1
 	_nc_tracing &= DEBUG_LEVEL(MAX_DEBUG_LEVEL), \
d135 1
a168 10
	 * List of keynames with their corresponding code.
	 */
struct kn {
	const char *name;
	int code;
};

extern NCURSES_EXPORT_VAR(const struct kn) _nc_key_names[];

	/*
d180 1
a180 1
extern NCURSES_EXPORT(struct tinfo_fkeys *) _nc_tinfo_fkeysf (void);
d184 1
a184 1
extern NCURSES_EXPORT_VAR(struct tinfo_fkeys) _nc_tinfo_fkeys[];
a208 6
extern NCURSES_EXPORT_VAR(const struct name_table_entry * const) _nc_info_hash_table[];
extern NCURSES_EXPORT_VAR(const struct name_table_entry * const) _nc_cap_hash_table[];

extern NCURSES_EXPORT_VAR(const struct alias) _nc_capalias_table[];
extern NCURSES_EXPORT_VAR(const struct alias) _nc_infoalias_table[];

d210 2
a211 1
extern NCURSES_EXPORT(const struct name_table_entry * const *) _nc_get_hash_table (bool);
d216 2
a217 2
#define ABSENT_BOOLEAN		-1
#define ABSENT_NUMERIC		-1
d221 3
a223 3
#define CANCELLED_BOOLEAN	(signed char)(-2)
#define CANCELLED_NUMERIC	-2
#define CANCELLED_STRING	(char *)-1
d225 1
a225 1
#define VALID_BOOLEAN(s) ((s) >= 0)
d227 1
a227 1
#define VALID_STRING(s) ((s) != CANCELLED_STRING && (s) != ABSENT_STRING)
d240 4
d245 1
d249 1
a249 1
	(const char *, const struct name_table_entry *const *);
d269 2
a270 1
extern NCURSES_EXPORT(void) _nc_set_source (const char *const name);
d272 2
a273 1
extern NCURSES_EXPORT(void) _nc_set_type (const char *const name);
a274 1
extern NCURSES_EXPORT(void) _nc_err_abort (const char *const,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;
d282 1
a282 1
extern NCURSES_EXPORT(char) _nc_trans_string (char *, char *);
d288 10
d304 19
a322 1
/* read_entry.c */
d324 2
@


1.12
log
@Make _nc_get_token() take a "silent" argument and only warn if it
is not set.  Propagate "silent" flag in _nc_parse_entry() to _nc_get_token().
Set the silent flag when reading termcap files, including $TERMCAP.
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.11 2001/01/22 18:01:35 millert Exp $	*/
d224 1
a224 1
#define CANCELLED_BOOLEAN	(char)(-2)
@


1.11
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.10 2000/10/08 22:46:56 millert Exp $	*/
d252 1
a252 1
extern NCURSES_EXPORT(int)  _nc_get_token (void);
@


1.10
log
@update to ncurses-5.1-20001007
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.9 2000/03/26 16:45:03 millert Exp $	*/
d37 1
a37 1
 * $From: tic.h,v 1.35 2000/09/09 19:47:16 tom Exp $
d121 3
a123 3
extern unsigned _nc_tracing;
extern void _nc_tracef(char *, ...) GCC_PRINTFLIKE(1,2);
extern const char *_nc_visbuf(const char *);
d154 1
a154 1
extern	struct token	_nc_curr_token;
d164 1
a164 1
extern const struct kn _nc_key_names[];
d178 1
a178 1
extern struct tinfo_fkeys *_nc_tinfo_fkeysf(void);
d182 1
a182 1
extern struct tinfo_fkeys _nc_tinfo_fkeys[];
d207 2
a208 2
extern const struct name_table_entry * const _nc_info_hash_table[];
extern const struct name_table_entry * const _nc_cap_hash_table[];
d210 2
a211 2
extern const struct alias _nc_capalias_table[];
extern const struct alias _nc_infoalias_table[];
d213 2
a214 2
extern const struct name_table_entry	*_nc_get_table(bool);
extern const struct name_table_entry	* const *_nc_get_hash_table(bool);
d243 1
a243 1
extern char *_nc_basename(char *);
d246 4
a249 5
struct name_table_entry	const *_nc_find_entry(const char *,
				    const struct name_table_entry *const *);
struct name_table_entry const *_nc_find_type_entry(const char *,
					 int,
					 const struct name_table_entry *);
d252 11
a262 10
extern int  _nc_get_token(void);
extern void _nc_push_token(int);
extern void _nc_reset_input(FILE *, char *);
extern void _nc_panic_mode(char);
extern int _nc_curr_line;
extern int _nc_curr_col;
extern long _nc_curr_file_pos;
extern long _nc_comment_start, _nc_comment_end;
extern int _nc_syntax;
extern long _nc_start_line;
d267 7
a273 7
extern void _nc_set_source(const char *const name);
extern void _nc_get_type(char *name);
extern void _nc_set_type(const char *const name);
extern void _nc_syserr_abort(const char *const,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;
extern void _nc_err_abort(const char *const,...) GCC_PRINTFLIKE(1,2) GCC_NORETURN;
extern void _nc_warning(const char *const,...) GCC_PRINTFLIKE(1,2);
extern bool _nc_suppress_warnings;
d276 1
a276 1
extern char *_nc_tic_expand(const char *, bool, int);
d279 1
a279 1
extern char _nc_trans_string(char *, char *);
d282 2
a283 2
extern char *_nc_captoinfo(const char *, const char *, int const);
extern char *_nc_infotocap(const char *, const char *, int const);
d286 1
a286 1
extern int _nc_nulls_sent;		/* Add one for every null sent */
d289 1
a289 1
extern const char *_nc_progname;
d292 1
a292 1
extern const char *_nc_tic_dir(const char *);
d295 1
a295 1
extern int _nc_tic_written(void);
@


1.9
log
@Update to ncurses-5.0-20000325
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.8 2000/01/16 01:35:17 millert Exp $	*/
d37 1
a39 1
 *
d241 3
@


1.8
log
@Update to ncurses-5.0-20000115:
+ additional fixes for non-bce terminals (handling of delete_character)
to work when assume_default_colors() is not specified.
+ modify warning message from _nc_parse_entry() regarding extended
capability names to print only if tic/infocmp/toe have the -v flag
set, and not at all in ordinary user applications.  Otherwise, this
warning would be shown for screen's extended capabilities in programs
that use the termcap interface.
+ modify use of _nc_tracing from programs such as tic so their debug
level is not in the same range as values set by trace() function.
+ small panel header cleanup (patch by Juergen Pfeifer).
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.7 1999/11/28 17:59:28 millert Exp $	*/
d276 1
a276 1
extern char _nc_trans_string(char *);
@


1.7
log
@#ifdef BROKEN_LINKER -> #if BROKEN_LINKER
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.6 1999/11/28 17:53:40 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
d102 13
d116 1
a116 1
#define DEBUG(n, a)	if (_nc_tracing & (1 << (n - 1))) _tracef a
@


1.6
log
@update to ncurses-5.0-19991127
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.5 1999/03/12 04:36:02 millert Exp $	*/
d162 1
a162 1
#ifdef	BROKEN_LINKER
@


1.5
log
@these somehow got missed in the earlier curses commit
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.4 1999/02/24 06:31:07 millert Exp $	*/
d162 7
d170 2
@


1.4
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.3 1999/01/24 20:06:45 millert Exp $	*/
d251 1
a251 1
extern char *_nc_tic_expand(const char *, bool, bool);
@


1.3
log
@ncurses-4.2-990123
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.2 1998/10/31 06:30:31 millert Exp $	*/
d142 21
@


1.2
log
@update to ncurses 4.2-981017
@
text
@d1 1
a1 1
/*	$OpenBSD: tic.h,v 1.1 1998/07/23 21:20:06 millert Exp $	*/
d103 1
a103 1
#define DEBUG(n, a)	if (_nc_tracing & (1 << (n - 1))) _tracef a 
d171 1
@


1.1
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d229 1
a229 1
extern char *_nc_tic_expand(const char *, bool);
@

