head	1.5;
access;
symbols
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	99.01.18.19.07.39;	author millert;	state dead;
branches;
next	1.4;

1.4
date	98.07.23.21.18.35;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.21.14;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.30;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.21;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ncurses-4.2-990116
@
text
@/*	$OpenBSD: lib_clreol.c,v 1.4 1998/07/23 21:18:35 millert Exp $	*/

/****************************************************************************
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 ****************************************************************************/


/*
**	lib_clreol.c
**
**	The routine wclrtoeol().
**
*/

#include <curses.priv.h>

MODULE_ID("$From: lib_clreol.c,v 1.15 1998/06/28 00:32:20 tom Exp $")

int  wclrtoeol(WINDOW *win)
{
int     code = ERR;

	T((T_CALLED("wclrtoeol(%p)"), win));

	if (win) {
		chtype	blank;
		chtype	*ptr, *end;
		struct ldat *line;
		short y = win->_cury;
		short x = win->_curx;

		/*
		 * If we have just wrapped the cursor, the clear applies to the
		 * new line, unless we are at the lower right corner.
		 */
		if (win->_flags & _WRAPPED
		 && y < win->_maxy) {
			win->_flags &= ~_WRAPPED;
		}

		/*
		 * There's no point in clearing if we're not on a legal
		 * position, either.
		 */
		if (win->_flags & _WRAPPED
		 || y > win->_maxy
		 || x > win->_maxx)
			returnCode(ERR);

		blank = _nc_background(win);
		line = &win->_line[y];
		CHANGED_TO_EOL(line, x, win->_maxx);

		ptr = &(line->text[x]);
		end = &(line->text[win->_maxx]);

		while (ptr <= end)
			*ptr++ = blank;

		_nc_synchook(win);
		code = OK;
	}
	returnCode(code);
}
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d3 32
a34 20

/***************************************************************************
*                            COPYRIGHT NOTICE                              *
****************************************************************************
*                ncurses is copyright (C) 1992-1995                        *
*                          Zeyd M. Ben-Halim                               *
*                          zmbenhal@@netcom.com                             *
*                          Eric S. Raymond                                 *
*                          esr@@snark.thyrsus.com                           *
*                                                                          *
*        Permission is hereby granted to reproduce and distribute ncurses  *
*        by any means and for any fee, whether alone or as part of a       *
*        larger distribution, in source or in binary form, PROVIDED        *
*        this notice is included with any such distribution, and is not    *
*        removed from any of its header files. Mention of ncurses in any   *
*        applications linked with it is highly appreciated.                *
*                                                                          *
*        ncurses comes AS IS with no warranty, implied or expressed.       *
*                                                                          *
***************************************************************************/
d46 1
a46 1
MODULE_ID("Id: lib_clreol.c,v 1.13 1997/09/20 15:02:34 juergen Exp $")
a50 3
chtype	blank;
chtype	*ptr, *end;
short	y, x;
d55 30
d86 2
a87 2
	  y = win->_cury;
	  x = win->_curx;
d89 2
a90 32
	  /*
	   * If we have just wrapped the cursor, the clear applies to the new
	   * line, unless we are at the lower right corner.
	   */
	  if (win->_flags & _WRAPPED
	      && y < win->_maxy) {
	    win->_flags &= ~_WRAPPED;
	  }
	  
	  /*
	   * There's no point in clearing if we're not on a legal position,
	   * either.
	   */
	  if (win->_flags & _WRAPPED
	      || y > win->_maxy
	      || x > win->_maxx)
	    returnCode(ERR);
	  
	  blank = _nc_background(win);
	  end = &win->_line[y].text[win->_maxx];
	  
	  for (ptr = &win->_line[y].text[x]; ptr <= end; ptr++)
	    *ptr = blank;
	  
	  if (win->_line[y].firstchar > win->_curx
	      || win->_line[y].firstchar == _NOCHANGE)
	    win->_line[y].firstchar = win->_curx;
	  
	  win->_line[y].lastchar = win->_maxx;
	  
	  _nc_synchook(win);
	  code = OK;
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 2
d34 1
a34 1
MODULE_ID("Id: lib_clreol.c,v 1.9 1997/02/01 23:22:54 tom Exp $")
d38 4
a41 2
chtype	*maxx, *ptr, *end;
short	y, x, minx;
d45 1
a45 26
	y = win->_cury;
	x = win->_curx;

	/*
	 * We don't want to clear if we just wrapped the cursor.  There's no
	 * point in clearing if we're not on a legal position, either.
	 */
	if (win->_flags & _WRAPPED
	 || y > win->_maxy
	 || x > win->_maxx)
		returnCode(ERR);

	end = &win->_line[y].text[win->_maxx];
	minx = _NOCHANGE;
	maxx = &win->_line[y].text[x];

	for (ptr = maxx; ptr <= end; ptr++) {
	    chtype blank = _nc_background(win);

	    if (*ptr != blank) {
			maxx = ptr;
			if (minx == _NOCHANGE)
			    minx = ptr - win->_line[y].text;
			*ptr = blank;
	    }
	}
d47 2
a48 3
	if (minx != _NOCHANGE) {
	    if (win->_line[y].firstchar > minx || win->_line[y].firstchar == _NOCHANGE)
			win->_line[y].firstchar = minx;
d50 32
a81 2
	    if (win->_line[y].lastchar < maxx - win->_line[y].text)
			win->_line[y].lastchar = maxx - win->_line[y].text;
d83 1
a83 2
	_nc_synchook(win);
	returnCode(OK);
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d30 3
a32 1
#include "curses.priv.h"
d39 1
a39 1
	T(("wclrtoeol(%p) called", win));
d43 6
a48 1
	if (win->_flags & _NEED_WRAP
d51 1
a51 1
	 	return ERR;
d58 1
a58 1
	    int blank = _nc_render(win, win->_line[y].text[x], BLANK);
d76 1
a76 1
	return(OK);
@
