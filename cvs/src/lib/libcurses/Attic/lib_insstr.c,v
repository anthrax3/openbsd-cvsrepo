head	1.5;
access;
symbols
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	99.01.18.19.08.00;	author millert;	state dead;
branches;
next	1.4;

1.4
date	98.07.23.21.18.55;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.21.21;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.38;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.26;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ncurses-4.2-990116
@
text
@/*	$OpenBSD: lib_insstr.c,v 1.4 1998/07/23 21:18:55 millert Exp $	*/

/****************************************************************************
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 ****************************************************************************/



/*
**	lib_insstr.c
**
**	The routine winsnstr().
**
*/

#include <curses.priv.h>
#include <ctype.h>

MODULE_ID("$From: lib_insstr.c,v 1.12 1998/02/23 12:12:16 tom Exp $")

int winsnstr(WINDOW *win, const char *s, int n)
{
int     code = ERR;
short	oy;
short	ox ;
const unsigned char *str = (const unsigned char *)s;
const unsigned char *cp;

        T((T_CALLED("winsnstr(%p,%s,%d)"), win, _nc_visbuf(str), n));

	if (win && str) {
	  oy = win->_cury; ox = win->_curx;
	  for (cp = str; *cp && (n <= 0 || (cp - str) < n); cp++) {
	    if (*cp == '\n' || *cp == '\r' || *cp == '\t' || *cp == '\b')
	      _nc_waddch_nosync(win, (chtype)(*cp));
	    else if (is7bits(*cp) && iscntrl(*cp)) {
	      winsch(win, ' ' + (chtype)(*cp));
	      winsch(win, '^');
	      win->_curx += 2;
	    } else {
	      winsch(win, (chtype)(*cp));
	      win->_curx++;
	    }
	    if (win->_curx > win->_maxx)
	      win->_curx = win->_maxx;
	  }
	  
	  win->_curx = ox;
	  win->_cury = oy;
	  _nc_synchook(win);
	  code = OK;
	}
	returnCode(code);
}
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d3 32
a34 20

/***************************************************************************
*                            COPYRIGHT NOTICE                              *
****************************************************************************
*                ncurses is copyright (C) 1992-1995                        *
*                          Zeyd M. Ben-Halim                               *
*                          zmbenhal@@netcom.com                             *
*                          Eric S. Raymond                                 *
*                          esr@@snark.thyrsus.com                           *
*                                                                          *
*        Permission is hereby granted to reproduce and distribute ncurses  *
*        by any means and for any fee, whether alone or as part of a       *
*        larger distribution, in source or in binary form, PROVIDED        *
*        this notice is included with any such distribution, and is not    *
*        removed from any of its header files. Mention of ncurses in any   *
*        applications linked with it is highly appreciated.                *
*                                                                          *
*        ncurses comes AS IS with no warranty, implied or expressed.       *
*                                                                          *
***************************************************************************/
d48 1
a48 1
MODULE_ID("Id: lib_insstr.c,v 1.10 1997/09/20 15:02:34 juergen Exp $")
d50 1
a50 1
int winsnstr(WINDOW *win, const char *str, int n)
d55 2
a56 1
const char *cp;
d58 1
a58 1
        T((T_CALLED("winsstr(%p,%s,%d)"), win, _nc_visbuf(str), n));
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 2
d36 1
a36 1
MODULE_ID("Id: lib_insstr.c,v 1.9 1997/02/15 16:09:53 tom Exp $")
d40 3
a42 2
short	oy = win->_cury;
short	ox = win->_curx;
d45 1
a45 1
	T((T_CALLED("winsstr(%p,%s,%d)"), win, _nc_visbuf(str), n));
d47 21
a67 13
	for (cp = str; *cp && (n <= 0 || (cp - str) < n); cp++) {
		if (*cp == '\n' || *cp == '\r' || *cp == '\t' || *cp == '\b')
			_nc_waddch_nosync(win, (chtype)(*cp));
		else if (is7bits(*cp) && iscntrl(*cp)) {
			winsch(win, ' ' + (chtype)(*cp));
			winsch(win, '^');
			win->_curx += 2;
		} else {
			winsch(win, (chtype)(*cp));
			win->_curx++;
		}
		if (win->_curx > win->_maxx)
			win->_curx = win->_maxx;
d69 1
a69 5

	win->_curx = ox;
	win->_cury = oy;
	_nc_synchook(win);
	returnCode(OK);
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d31 1
a31 1
#include "curses.priv.h"
d34 2
d40 1
a40 1
char	*cp;
d42 1
a42 1
	T(("winsstr(%p,'%s',%d) called", win, str, n));
d44 1
a44 1
	for (cp = (char *)str; *cp && (n <= 0 || (cp - str) < n); cp++) {
d58 1
a58 1
	
d62 1
a62 1
	return OK;
@
