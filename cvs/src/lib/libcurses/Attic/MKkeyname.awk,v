head	1.6;
access;
symbols
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	99.01.18.19.06.52;	author millert;	state dead;
branches;
next	1.5;

1.5
date	98.11.17.03.16.20;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.23.21.17.21;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.20.47;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.02;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.04.51;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@ncurses-4.2-990116
@
text
@# $OpenBSD: MKkeyname.awk,v 1.5 1998/11/17 03:16:20 millert Exp $
# $From: MKkeyname.awk,v 1.14 1998/05/10 17:00:39 tom Exp $
BEGIN {
	print "/* generated by MKkeyname.awk */"
	print ""
	print "#include <ncurses_cfg.h>"
	print "#include <stdlib.h>"
	print "#include <string.h>"
	print "#include <curses.h>"
	print ""
	print "struct kn {"
	print "\tconst char *name;"
	print "\tint code;"
	print "};"
	print ""
	print "const struct kn key_names[] = {"
}

/^[^#]/ {
#	printf "\t{ \"%s\",%*s%s },\n", $1, 16-length($1), " ", $1;
	printf "\t{ \"%s\",%s },\n", $1, $1;
	}

END {
	print "};"
	print ""
	print "NCURSES_CONST char *keyname(int c)"
	print "{"
	print "int i, size = sizeof(key_names)/sizeof(struct kn);"
	print "static char name[5];"
	print "char *p;"
	print ""
	print "\tfor (i = 0; i < size; i++)"
	print "\t\tif (key_names[i].code == c)"
	print "\t\t\treturn (NCURSES_CONST char *)key_names[i].name;"
	print "\tif (c >= 256) return \"UNKNOWN KEY\";"
	print "\tp = name;"
	print "\tif (c >= 128) {"
	print "\t\tstrcpy(p, \"M-\");"
	print "\t\tp += 2;"
	print "\t\tc -= 128;"
	print "\t}"
	print "\tif (c < 0)"
	print "\t\tsprintf(p, \"%d\", c);"
	print "\telse if (c < 32)"
	print "\t\tsprintf(p, \"^%c\", c + '@@');"
	print "\telse if (c == 127)"
	print "\t\tstrcpy(p, \"^?\");"
	print "\telse"
	print "\t\tsprintf(p, \"%c\", c);"
	print "\treturn (NCURSES_CONST char *)name;"
	print "}"
	print "" 
}
@


1.5
log
@update to ncurses-4.2-981114
@
text
@d1 1
a1 1
# $OpenBSD: MKkeyname.awk,v 1.4 1998/07/23 21:17:21 millert Exp $
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
# $OpenBSD$
a9 1
	print "#include <term.h>"
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d1 2
a2 1
# Id: MKkeyname.awk,v 1.12 1997/11/15 22:16:55 tom Exp $
d28 1
a28 1
	print "const char *keyname(int c)"
d36 1
a36 1
	print "\t\t\treturn key_names[i].name;"
d52 1
a52 1
	print "\treturn name;"
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 1
a1 1
# Id: MKkeyname.awk,v 1.6 1997/04/05 23:38:17 tom Exp $
d3 1
d7 2
a9 1
	print "#include <curses.h>"
d19 4
a22 1
{printf "\t{\"%s\", %s,},\n", $1, $2;}
d30 2
d33 9
a41 2
	print "\tfor (i = 0; i < size; i++) {"
	print "\t\tif (key_names[i].code == c) return key_names[i].name;"
d43 9
a51 1
	print "\treturn NULL;"
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d1 1
a1 1

d4 1
d6 2
a7 2
	print "#include \"curses.h\""
	print "#include \"term.h\""
d10 1
a10 1
	print "\tchar *name;"
@
