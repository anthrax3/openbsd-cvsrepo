head	1.6;
access;
symbols
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	99.01.18.19.08.10;	author millert;	state dead;
branches;
next	1.5;

1.5
date	98.07.23.21.19.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.12.14.23.15.47;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.21.24;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.43;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.29;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@ncurses-4.2-990116
@
text
@/*	$OpenBSD: lib_mvwin.c,v 1.5 1998/07/23 21:19:04 millert Exp $	*/

/****************************************************************************
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 ****************************************************************************/



/*
**	lib_mvwin.c
**
**	The routine mvwin().
**
*/

#include <curses.priv.h>

MODULE_ID("$From: lib_mvwin.c,v 1.7 1998/02/11 12:13:55 tom Exp $")

int mvwin(WINDOW *win, int by, int bx)
{
	T((T_CALLED("mvwin(%p,%d,%d)"), win, by, bx));

	if (!win || (win->_flags & _ISPAD))
	    returnCode(ERR);

	/* Copying subwindows is allowed, but it is expensive... */
	if (win->_flags & _SUBWIN) {
	  int err = ERR;
	  WINDOW *parent = win->_parent;
	  if (parent)
	    { /* Now comes the complicated and costly part, you should really
	       * try to avoid to move subwindows. Because a subwindow shares
	       * the text buffers with its parent, one can't do a simple
	       * memmove of the text buffers. One has to create a copy, then
	       * to relocate the subwindow and then to do a copy.
	       */
	      if ((by - parent->_begy == win->_pary) &&
		  (bx - parent->_begx == win->_parx))
		err=OK; /* we don't actually move */
	      else {
		WINDOW* clone = dupwin(win);  
		if (clone) {
		  /* now we have the clone, so relocate win */
		  
		  werase(win);             /* Erase the original place     */
		  wbkgd(win,parent->_bkgd);/* fill with parents background */
		  wsyncup(win);            /* Tell the parent(s)           */
		  
		  err = mvderwin(win,                   
				 by - parent->_begy,
				 bx - parent->_begx);
		  if (err!=ERR) {
		    err = copywin(clone,win,
				  0, 0, 0, 0, win->_maxy, win->_maxx, 0);
		    if (ERR!=err)
		      wsyncup(win);
		  }
		  if (ERR==delwin(clone))
		    err=ERR;
		}
	      }
	    }
	  returnCode(err);
	}

	if (by + win->_maxy > screen_lines - 1
	||  bx + win->_maxx > screen_columns - 1
	||  by < 0
	||  bx < 0)
	    returnCode(ERR);

	/*
	 * Whether or not the window is moved, touch the window's contents so
	 * that a following call to 'wrefresh()' will paint the window at the
	 * new location.  This ensures that if the caller has refreshed another
	 * window at the same location, that this one will be displayed.
	 */	
	win->_begy = by;
	win->_begx = bx;
	returnCode(touchwin(win));
}
@


1.5
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@ncurses-4.1-971213
@
text
@d1 1
a1 1
/*	$OpenBSD: lib_mvwin.c,v 1.3 1997/12/03 05:21:24 millert Exp $	*/
d3 32
a34 20

/***************************************************************************
*                            COPYRIGHT NOTICE                              *
****************************************************************************
*                ncurses is copyright (C) 1992-1995                        *
*                          Zeyd M. Ben-Halim                               *
*                          zmbenhal@@netcom.com                             *
*                          Eric S. Raymond                                 *
*                          esr@@snark.thyrsus.com                           *
*                                                                          *
*        Permission is hereby granted to reproduce and distribute ncurses  *
*        by any means and for any fee, whether alone or as part of a       *
*        larger distribution, in source or in binary form, PROVIDED        *
*        this notice is included with any such distribution, and is not    *
*        removed from any of its header files. Mention of ncurses in any   *
*        applications linked with it is highly appreciated.                *
*                                                                          *
*        ncurses comes AS IS with no warranty, implied or expressed.       *
*                                                                          *
***************************************************************************/
d47 1
a47 1
MODULE_ID("Id: lib_mvwin.c,v 1.6 1997/12/03 15:47:41 Alexander.V.Lukyanov Exp $")
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 1
a35 1
MODULE_ID("Id: lib_mvwin.c,v 1.5 1997/09/20 15:02:34 juergen Exp $")
d89 1
a89 28
	else { /* We have to clear the area on the virtual screen where the
		* window is currently. Actually the following code is
		* equivalent to erase() the window at it's current place and
		* then to call a wnoutrefresh(). We can't do it this easy way,
		* because we still need the content of the window at its new
		* place:-)
		* N.B.: Its not worth to think about an optimization to
		* clear only the parts that are not overlapped by the new
		* location of the window. The overlapped region will already
		* be replaced by the next wnoutrefresh() for this window.
		*/
	  int x,y;
	  for(y=0;y<=win->_maxy;y++) {
	    struct ldat* nline = &(newscr->_line[y+win->_begy+win->_yoffset]);
	    for(x=0;x<=win->_maxx;x++) {
	      nline->text[x+win->_begx] = newscr->_bkgd;
	    }
	    if (nline->firstchar==_NOCHANGE) {
	      nline->firstchar = win->_begx;
	      nline->lastchar  = win->_begx + win->_maxx;
	    } else {
	      if (nline->firstchar > win->_begx)
		nline->firstchar = win->_begx;
	      if (nline->lastchar < (win->_begx + win->_maxx))
		nline->lastchar = (win->_begx + win->_maxx);
	    }
	  }
	}
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 2
d35 1
a35 1
MODULE_ID("Id: lib_mvwin.c,v 1.3 1997/02/02 00:20:41 tom Exp $")
d41 1
a41 1
	if (win->_flags & _SUBWIN)
d44 40
d89 28
a116 1

d122 1
a122 1
	 */
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d31 3
a33 1
#include "curses.priv.h"
d37 1
a37 1
	T(("mvwin(%p,%d,%d) called", win, by, bx));
d40 1
a40 1
	    return(ERR);
d46 1
a46 1
	    return(ERR);
d56 1
a56 1
	return touchwin(win);
@
