head	1.5;
access;
symbols
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	99.01.18.19.07.33;	author millert;	state dead;
branches;
next	1.4;

1.4
date	98.07.23.21.18.31;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.12.03.05.21.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.11.26.04.01.28;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.05.19;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.5
log
@ncurses-4.2-990116
@
text
@/*	$OpenBSD: lib_box.c,v 1.4 1998/07/23 21:18:31 millert Exp $	*/

/****************************************************************************
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 ****************************************************************************/



/*
**	lib_box.c
**
**	The routine wborder().
**
*/

#include <curses.priv.h>

MODULE_ID("$From: lib_box.c,v 1.10 1998/02/11 12:13:56 tom Exp $")

int wborder(WINDOW *win, chtype ls, chtype rs, chtype ts,
	chtype bs, chtype tl, chtype tr, chtype bl, chtype br)
{
short i;
short endx, endy;

    T((T_CALLED("wborder(%p,%s,%s,%s,%s,%s,%s,%s,%s)"),
	win,
	_tracechtype2(1,ls),
	_tracechtype2(2,rs),
	_tracechtype2(3,ts),
	_tracechtype2(4,bs),
	_tracechtype2(5,tl),
	_tracechtype2(6,tr),
	_tracechtype2(7,bl),
	_tracechtype2(8,br)));

        if (!win)
          returnCode(ERR);

	if (ls == 0) ls = ACS_VLINE;
	if (rs == 0) rs = ACS_VLINE;
	if (ts == 0) ts = ACS_HLINE;
	if (bs == 0) bs = ACS_HLINE;
	if (tl == 0) tl = ACS_ULCORNER;
	if (tr == 0) tr = ACS_URCORNER;
	if (bl == 0) bl = ACS_LLCORNER;
	if (br == 0) br = ACS_LRCORNER;

	ls = _nc_render(win, ls);
	rs = _nc_render(win, rs);
	ts = _nc_render(win, ts);
	bs = _nc_render(win, bs);
	tl = _nc_render(win, tl);
	tr = _nc_render(win, tr);
	bl = _nc_render(win, bl);
	br = _nc_render(win, br);

	T(("using %#lx, %#lx, %#lx, %#lx, %#lx, %#lx, %#lx, %#lx", ls, rs, ts, bs, tl, tr, bl, br));

	endx = win->_maxx;
	endy = win->_maxy;

	for (i = 0; i <= endx; i++) {
		win->_line[0].text[i] = ts;
		win->_line[endy].text[i] = bs;
	}
	win->_line[endy].firstchar = win->_line[0].firstchar = 0;
	win->_line[endy].lastchar = win->_line[0].lastchar = endx;

	for (i = 0; i <= endy; i++) {
		win->_line[i].text[0] =  ls;
		win->_line[i].text[endx] =  rs;
		win->_line[i].firstchar = 0;
		win->_line[i].lastchar = endx;
	}
	win->_line[0].text[0] = tl;
	win->_line[0].text[endx] = tr;
	win->_line[endy].text[0] = bl;
	win->_line[endy].text[endx] = br;

	_nc_synchook(win);
	returnCode(OK);
}
@


1.4
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.3
log
@Merge of ncurses-4.1-971129
@
text
@d3 32
a34 20

/***************************************************************************
*                            COPYRIGHT NOTICE                              *
****************************************************************************
*                ncurses is copyright (C) 1992-1995                        *
*                          Zeyd M. Ben-Halim                               *
*                          zmbenhal@@netcom.com                             *
*                          Eric S. Raymond                                 *
*                          esr@@snark.thyrsus.com                           *
*                                                                          *
*        Permission is hereby granted to reproduce and distribute ncurses  *
*        by any means and for any fee, whether alone or as part of a       *
*        larger distribution, in source or in binary form, PROVIDED        *
*        this notice is included with any such distribution, and is not    *
*        removed from any of its header files. Mention of ncurses in any   *
*        applications linked with it is highly appreciated.                *
*                                                                          *
*        ncurses comes AS IS with no warranty, implied or expressed.       *
*                                                                          *
***************************************************************************/
d47 1
a47 1
MODULE_ID("Id: lib_box.c,v 1.9 1997/10/08 09:38:17 jtc Exp $")
@


1.2
log
@ncurses 4.1 + changes to work with our terminfo libs (instead of
the ncurses ones).  Changes are #ifdef EXTERN_TERMINFO.
Post 4.1 patches will be applied in a separate commit.
@
text
@d1 2
d29 1
a29 4
**	line drawing routines:
**	wborder()
**	whline()
**	wvline()
d35 1
a35 1
MODULE_ID("Id: lib_box.c,v 1.7 1997/04/12 17:51:49 tom Exp $")
d54 3
a100 62

int whline(WINDOW *win, chtype ch, int n)
{
short line;
short start;
short end;

	T((T_CALLED("whline(%p,%s,%d)"), win, _tracechtype(ch), n));

	line = win->_cury;
	start = win->_curx;
	end = start + n - 1;
	if (end > win->_maxx)
		end = win->_maxx;

	if (win->_line[line].firstchar == _NOCHANGE || win->_line[line].firstchar > start)
		win->_line[line].firstchar = start;
	if (win->_line[line].lastchar == _NOCHANGE || win->_line[line].lastchar < start)
		win->_line[line].lastchar = end;

	if (ch == 0)
		ch = ACS_HLINE;
	ch = _nc_render(win, ch);

	while ( end >= start) {
		win->_line[line].text[end] = ch;
		end--;
	}

	returnCode(OK);
}

int wvline(WINDOW *win, chtype ch, int n)
{
short row, col;
short end;

	T((T_CALLED("wvline(%p,%s,%d)"), win, _tracechtype(ch), n));

	row = win->_cury;
	col = win->_curx;
	end = row + n - 1;
	if (end > win->_maxy)
		end = win->_maxy;

	if (ch == 0)
		ch = ACS_VLINE;
	ch = _nc_render(win, ch);

	while(end >= row) {
		win->_line[end].text[col] = ch;
		if (win->_line[end].firstchar == _NOCHANGE || win->_line[end].firstchar > col)
			win->_line[end].firstchar = col;
		if (win->_line[end].lastchar == _NOCHANGE || win->_line[end].lastchar < col)
			win->_line[end].lastchar = col;
		end--;
	}

	_nc_synchook(win);
	returnCode(OK);
}

@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d34 3
a36 1
#include "curses.priv.h"
d44 10
a53 1
    T(("wborder() called"));
d64 8
a71 8
	ls |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	rs |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	ts |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	bs |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	tl |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	tr |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	bl |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
	br |= (win->_attrs ? win->_attrs : (win->_bkgd & A_ATTRIBUTES));
d73 1
a73 1
	T(("using %lx, %lx, %lx, %lx, %lx, %lx, %lx, %lx", ls, rs, ts, bs, tl, tr, bl, br));
d79 2
a80 2
		win->_line[0].text[i] = ts; 
		win->_line[endy].text[i] = bs; 
d97 1
a97 1
	return OK;
d106 1
a106 1
	T(("whline(%p,%lx,%d) called", win, ch, n));
d111 1
a111 1
	if (end > win->_maxx) 
d114 1
a114 1
	if (win->_line[line].firstchar == _NOCHANGE || win->_line[line].firstchar > start) 
d116 1
a116 1
	if (win->_line[line].lastchar == _NOCHANGE || win->_line[line].lastchar < start) 
d121 2
d124 1
a124 1
		win->_line[line].text[end] = ch | win->_attrs;
d128 1
a128 1
	return OK;
d136 1
a136 1
	T(("wvline(%p,%lx,%d) called", win, ch, n));
d141 1
a141 1
	if (end > win->_maxy) 
d146 1
d149 2
a150 2
		win->_line[end].text[col] = ch | win->_attrs;
		if (win->_line[end].firstchar == _NOCHANGE || win->_line[end].firstchar > col) 
d152 1
a152 1
		if (win->_line[end].lastchar == _NOCHANGE || win->_line[end].lastchar < col) 
d158 1
a158 1
	return OK;
d160 1
a160 1
	
@
