head	1.12;
access;
symbols
	OPENBSD_6_2:1.12.0.34
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.32
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.28
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.24
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.26
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.18
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.22
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.11.0.38
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.34
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.32
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.30
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.28
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.26
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.24
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.22
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.20
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.18
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.16
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.14
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.12
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.10
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.8
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.6
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.4
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.12
date	2010.01.12.23.21.59;	author nicm;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.22.18.01.35;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.26.16.45.03;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.13.23.53.39;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.05.17.03.03.57;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.03.02.06.23.27;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.02.24.06.31.07;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.02.01.20.55.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.01.23.18.31.02;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.01.22.04.50.43;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.01.18.19.09.16;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.07.23.21.20.05;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1998-2005,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Zeyd M. Ben-Halim <zmbenhal@@netcom.com> 1992,1995               *
 *     and: Eric S. Raymond <esr@@snark.thyrsus.com>                         *
 *     and: Thomas E. Dickey                        1998-on                 *
 ****************************************************************************/

/* $Id: term_entry.h,v 1.35 2008/08/16 16:16:03 tom Exp $ */

/*
 *	term_entry.h -- interface to entry-manipulation code
 */

#ifndef NCURSES_TERM_ENTRY_H_incl
#define NCURSES_TERM_ENTRY_H_incl 1

#ifdef __cplusplus
extern "C" {
#endif

#include <term.h>

#define MAX_USES	32
#define MAX_CROSSLINKS	16

typedef struct entry {
	TERMTYPE	tterm;
	unsigned	nuses;
	struct
        {
	    char		*name;
	    struct entry	*link;
	    long		line;
        }
	uses[MAX_USES];
	int		ncrosslinks;
	struct entry	*crosslinks[MAX_CROSSLINKS];
	long		cstart, cend;
	long		startline;
	struct entry	*next;
	struct entry	*last;
}
ENTRY;

#if NCURSES_XNAMES
#define NUM_BOOLEANS(tp) (tp)->num_Booleans
#define NUM_NUMBERS(tp)  (tp)->num_Numbers
#define NUM_STRINGS(tp)  (tp)->num_Strings
#define EXT_NAMES(tp,i,limit,index,table) (i >= limit) ? tp->ext_Names[index] : table[i]
#else
#define NUM_BOOLEANS(tp) BOOLCOUNT
#define NUM_NUMBERS(tp)  NUMCOUNT
#define NUM_STRINGS(tp)  STRCOUNT
#define EXT_NAMES(tp,i,limit,index,table) table[i]
#endif

#define NUM_EXT_NAMES(tp) ((tp)->ext_Booleans + (tp)->ext_Numbers + (tp)->ext_Strings)

#define for_each_boolean(n,tp) for(n = 0; n < NUM_BOOLEANS(tp); n++)
#define for_each_number(n,tp)  for(n = 0; n < NUM_NUMBERS(tp);  n++)
#define for_each_string(n,tp)  for(n = 0; n < NUM_STRINGS(tp);  n++)

#define ExtBoolname(tp,i,names) EXT_NAMES(tp, i, BOOLCOUNT, (i - (tp->num_Booleans - tp->ext_Booleans)), names)
#define ExtNumname(tp,i,names)  EXT_NAMES(tp, i, NUMCOUNT, (i - (tp->num_Numbers - tp->ext_Numbers)) + tp->ext_Booleans, names)
#define ExtStrname(tp,i,names)  EXT_NAMES(tp, i, STRCOUNT, (i - (tp->num_Strings - tp->ext_Strings)) + (tp->ext_Numbers + tp->ext_Booleans), names)

extern NCURSES_EXPORT_VAR(ENTRY *) _nc_head;
extern NCURSES_EXPORT_VAR(ENTRY *) _nc_tail;
#define for_entry_list(qp)	for (qp = _nc_head; qp; qp = qp->next)

#define MAX_LINE	132

#define NULLHOOK        (bool(*)(ENTRY *))0

/*
 * Note that WANTED and PRESENT are not simple inverses!  If a capability
 * has been explicitly cancelled, it's not considered WANTED.
 */
#define WANTED(s)	((s) == ABSENT_STRING)
#define PRESENT(s)	(((s) != ABSENT_STRING) && ((s) != CANCELLED_STRING))

#define ANDMISSING(p,q) \
		{if (PRESENT(p) && !PRESENT(q)) _nc_warning(#p " but no " #q);}

#define PAIRED(p,q) \
		{ \
		if (PRESENT(q) && !PRESENT(p)) \
			_nc_warning(#q " but no " #p); \
		if (PRESENT(p) && !PRESENT(q)) \
			_nc_warning(#p " but no " #q); \
		}

/* alloc_entry.c: elementary allocation code */
extern NCURSES_EXPORT(ENTRY *) _nc_copy_entry (ENTRY *oldp);
extern NCURSES_EXPORT(char *) _nc_save_str (const char *const);
extern NCURSES_EXPORT(void) _nc_init_entry (TERMTYPE *const);
extern NCURSES_EXPORT(void) _nc_merge_entry (TERMTYPE *const, TERMTYPE *const);
extern NCURSES_EXPORT(void) _nc_wrap_entry (ENTRY *const, bool);

/* alloc_ttype.c: elementary allocation code */
extern NCURSES_EXPORT(void) _nc_align_termtype (TERMTYPE *, TERMTYPE *);
extern NCURSES_EXPORT(void) _nc_copy_termtype (TERMTYPE *, TERMTYPE *);

/* free_ttype.c: elementary allocation code */
extern NCURSES_EXPORT(void) _nc_free_termtype (TERMTYPE *);

/* lib_acs.c */
extern NCURSES_EXPORT(void) _nc_init_acs (void);	/* corresponds to traditional 'init_acs()' */

/* lib_termcap.c: trim sgr0 string for termcap users */
extern NCURSES_EXPORT(char *) _nc_trim_sgr0 (TERMTYPE *);

/* parse_entry.c: entry-parsing code */
#if NCURSES_XNAMES
extern NCURSES_EXPORT_VAR(bool) _nc_user_definable;
extern NCURSES_EXPORT_VAR(bool) _nc_disable_period;
#endif
extern NCURSES_EXPORT(int) _nc_parse_entry (ENTRY *, int, bool);
extern NCURSES_EXPORT(int) _nc_capcmp (const char *, const char *);

/* write_entry.c: writing an entry to the file system */
extern NCURSES_EXPORT(void) _nc_set_writedir (char *);
extern NCURSES_EXPORT(void) _nc_write_entry (TERMTYPE *const);

/* comp_parse.c: entry list handling */
extern NCURSES_EXPORT(void) _nc_read_entry_source (FILE*, char*, int, bool, bool (*)(ENTRY*));
extern NCURSES_EXPORT(bool) _nc_entry_match (char *, char *);
extern NCURSES_EXPORT(int) _nc_resolve_uses (bool); /* obs 20040705 */
extern NCURSES_EXPORT(int) _nc_resolve_uses2 (bool, bool);
extern NCURSES_EXPORT(void) _nc_free_entries (ENTRY *);
extern NCURSES_IMPEXP void NCURSES_API (*_nc_check_termtype)(TERMTYPE *); /* obs 20040705 */
extern NCURSES_IMPEXP void NCURSES_API (*_nc_check_termtype2)(TERMTYPE *, bool);

/* trace_xnames.c */
extern NCURSES_EXPORT(void) _nc_trace_xnames (TERMTYPE *);

#ifdef __OpenBSD__
/* read_bsd_terminfo.c: terminfo.db reading */
extern int _nc_read_bsd_terminfo_entry(const char * const, char * const, TERMTYPE *const);
extern int _nc_read_bsd_terminfo_file(const char * const, TERMTYPE *const);
#endif /* __OpenBSD__ */

#ifdef __cplusplus
}
#endif

#endif /* NCURSES_TERM_ENTRY_H_incl */
@


1.11
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.10 2000/03/26 16:45:03 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998,1999,2000 Free Software Foundation, Inc.              *
d34 1
d37 1
a37 1
/* $From: term_entry.h,v 1.31 2001/01/13 22:44:41 tom Exp $ */
d43 2
a44 2
#ifndef _TERM_ENTRY_H
#define _TERM_ENTRY_H
d57 1
a57 1
	int		nuses;
d62 1
a62 1
	    long	line;
d139 3
d157 2
a158 1
extern NCURSES_EXPORT(int) _nc_resolve_uses (bool);
d160 2
a161 1
extern NCURSES_IMPEXP void NCURSES_API (*_nc_check_termtype)(TERMTYPE *);
d176 1
a176 1
#endif /* _TERM_ENTRY_H */
@


1.10
log
@Update to ncurses-5.0-20000325
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.9 2000/03/13 23:53:39 millert Exp $	*/
d36 1
a36 1
/* $From: term_entry.h,v 1.29 2000/03/19 02:04:15 tom Exp $ */
d95 2
a96 1
extern ENTRY	*_nc_head, *_nc_tail;
d122 5
a126 5
extern ENTRY *_nc_copy_entry(ENTRY *oldp);
extern char *_nc_save_str(const char *const);
extern void _nc_init_entry(TERMTYPE *const);
extern void _nc_merge_entry(TERMTYPE *const, TERMTYPE *const);
extern void _nc_wrap_entry(ENTRY *const);
d129 2
a130 2
extern void _nc_align_termtype(TERMTYPE *, TERMTYPE *);
extern void _nc_copy_termtype(TERMTYPE *, TERMTYPE *);
d133 1
a133 1
extern void _nc_free_termtype(TERMTYPE *);
d136 1
a136 1
extern void _nc_init_acs(void);	/* corresponds to traditional 'init_acs()' */
d140 2
a141 2
extern bool _nc_user_definable;
extern bool _nc_disable_period;
d143 2
a144 2
extern int _nc_parse_entry(ENTRY *, int, bool);
extern int _nc_capcmp(const char *, const char *);
d147 2
a148 2
extern void _nc_set_writedir(char *);
extern void _nc_write_entry(TERMTYPE *const);
d151 5
a155 5
extern void _nc_read_entry_source(FILE*, char*, int, bool, bool (*)(ENTRY*));
extern bool _nc_entry_match(char *, char *);
extern int _nc_resolve_uses(bool);
extern void _nc_free_entries(ENTRY *);
extern void (*_nc_check_termtype)(TERMTYPE *);
d158 7
a164 1
extern void _nc_trace_xnames(TERMTYPE *);
@


1.9
log
@update to ncurses-5.0-20000311
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.8 1999/05/17 03:03:57 millert Exp $	*/
d36 1
a36 1
/* $From: term_entry.h,v 1.28 2000/03/12 00:44:04 tom Exp $ */
d140 1
@


1.8
log
@ncurses-4.2-990516; no code changes
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.7 1999/03/02 06:23:27 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Free Software Foundation, Inc.                        *
d36 1
d52 1
d59 2
a60 1
	    void	*parent;	/* (char *) or (ENTRY *) */
d64 2
d151 1
a151 1
extern int _nc_resolve_uses(void);
a156 6

#ifdef __OpenBSD__
/* read_bsd_terminfo.c: terminfo.db reading */
extern int _nc_read_bsd_terminfo_entry(const char * const, char * const, TERMTYPE *const);
extern int _nc_read_bsd_terminfo_file(const char * const, TERMTYPE *const);
#endif /* __OpenBSD__ */
@


1.7
log
@ncurses-4.2-990301
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.6 1999/02/24 06:31:07 millert Exp $	*/
d128 3
@


1.6
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.5 1999/02/01 20:55:40 millert Exp $	*/
d48 2
d68 22
d116 2
a118 1
extern char *_nc_save_str(const char *const);
d122 7
d130 3
d147 2
@


1.5
log
@Bracket protos for _nc_read_bsd_terminfo_entry and _nc_read_bsd_terminfo_file
with #ifdef __OpenBSD__ to make it obvious they are OpenBSD extensions.
Update copyright years in tinfo/read_bsd_terminfo.c.
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.4 1999/01/23 18:31:02 millert Exp $	*/
d73 18
d110 2
@


1.4
log
@make _nc_read_file_entry() look in terminfo.db too.  Makes the -A and -B flags of infocmp more useful.
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.3 1999/01/22 04:50:43 millert Exp $	*/
d93 1
d97 1
@


1.3
log
@Move call to _nc_read_bsd_terminfo_entry() to _nc_read_entry() so reading
terminfo.db is transparent.  This requires us to be able to tell which
of the entries in pathvec held the terminfo entry.  To make that work
we only pass one pathname to cgetent(3) at a time.  This might be a
slight performance hit but should not be noticable in normal use.
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.2 1999/01/18 19:09:16 millert Exp $	*/
d95 1
@


1.2
log
@ncurses-4.2-990116
@
text
@d1 1
a1 1
/*	$OpenBSD: term_entry.h,v 1.1 1998/07/23 21:20:05 millert Exp $	*/
d92 3
@


1.1
log
@ncurses-4.2-980718
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d44 4
d93 4
a97 2

/* term_entry.h ends here */
@

