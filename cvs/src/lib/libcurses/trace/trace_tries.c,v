head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.34
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.32
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.28
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.24
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.26
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.38
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.34
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.32
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.30
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.28
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.26
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.24
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.22
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.20
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.18
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.16
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.14
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.12
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.10
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.8
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.6
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2010.01.12.23.22.07;	author nicm;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.22.18.01.59;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.03.11.21.03.58;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.03.02.06.23.30;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.02.24.06.31.11;	author millert;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Update to ncurses 5.7, with local changes reapplied.

This is around eight years worth of changes (previously we were around ncurses
5.2), too many to list - many bug fixes and also a few new functions.

A major bump for libcurses, libpanel, libform and libmenu.

ok deraadt
@
text
@/* $OpenBSD$ */

/****************************************************************************
 * Copyright (c) 1999-2007,2008 Free Software Foundation, Inc.              *
 *                                                                          *
 * Permission is hereby granted, free of charge, to any person obtaining a  *
 * copy of this software and associated documentation files (the            *
 * "Software"), to deal in the Software without restriction, including      *
 * without limitation the rights to use, copy, modify, merge, publish,      *
 * distribute, distribute with modifications, sublicense, and/or sell       *
 * copies of the Software, and to permit persons to whom the Software is    *
 * furnished to do so, subject to the following conditions:                 *
 *                                                                          *
 * The above copyright notice and this permission notice shall be included  *
 * in all copies or substantial portions of the Software.                   *
 *                                                                          *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS  *
 * OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF               *
 * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.   *
 * IN NO EVENT SHALL THE ABOVE COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,   *
 * DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR    *
 * OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR    *
 * THE USE OR OTHER DEALINGS IN THE SOFTWARE.                               *
 *                                                                          *
 * Except as contained in this notice, the name(s) of the above copyright   *
 * holders shall not be used in advertising or otherwise to promote the     *
 * sale, use or other dealings in this Software without prior written       *
 * authorization.                                                           *
 ****************************************************************************/

/****************************************************************************
 *  Author: Thomas E. Dickey <dickey@@clark.net> 1999                        *
 ****************************************************************************/
/*
 *	trace_tries.c - Tracing/Debugging buffers (keycode tries-trees)
 */

#include <curses.priv.h>

MODULE_ID("$Id: trace_tries.c,v 1.13 2008/08/03 15:43:30 tom Exp $")

#ifdef TRACE
#define my_buffer _nc_globals.tracetry_buf
#define my_length _nc_globals.tracetry_used

static void
recur_tries(TRIES * tree, unsigned level)
{
    if (level > my_length) {
	my_length = (level + 1) * 4;
	my_buffer = (unsigned char *) realloc(my_buffer, my_length);
    }

    while (tree != 0) {
	if ((my_buffer[level] = tree->ch) == 0)
	    my_buffer[level] = 128;
	my_buffer[level + 1] = 0;
	if (tree->value != 0) {
	    _tracef("%5d: %s (%s)", tree->value,
		    _nc_visbuf((char *) my_buffer), keyname(tree->value));
	}
	if (tree->child)
	    recur_tries(tree->child, level + 1);
	tree = tree->sibling;
    }
}

NCURSES_EXPORT(void)
_nc_trace_tries(TRIES * tree)
{
    my_buffer = typeMalloc(unsigned char, my_length = 80);
    _tracef("BEGIN tries %p", tree);
    recur_tries(tree, 0);
    _tracef(". . . tries %p", tree);
    free(my_buffer);
}

#else
NCURSES_EXPORT(void)
_nc_trace_tries(TRIES * tree)
{
}
#endif
@


1.4
log
@Update to ncurses-5.2-20010114
@
text
@d1 1
a1 1
/*	$OpenBSD: trace_tries.c,v 1.3 1999/03/11 21:03:58 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999,2000 Free Software Foundation, Inc.                   *
d40 1
a40 1
MODULE_ID("$From: trace_tries.c,v 1.8 2000/12/10 03:03:51 tom Exp $")
d43 2
a44 2
static unsigned char *buffer;
static unsigned len;
d47 1
a47 1
recur_tries(struct tries *tree, unsigned level)
d49 4
a52 2
    if (level > len)
	buffer = (unsigned char *) realloc(buffer, len = (level + 1) * 4);
d55 3
a57 3
	if ((buffer[level] = tree->ch) == 0)
	    buffer[level] = 128;
	buffer[level + 1] = 0;
d60 1
a60 1
		    _nc_visbuf((char *) buffer), keyname(tree->value));
d69 1
a69 1
_nc_trace_tries(struct tries *tree)
d71 1
a71 1
    buffer = typeMalloc(unsigned char, len = 80);
d75 1
a75 1
    free(buffer);
d80 1
a80 1
_nc_trace_tries(struct tries *tree GCC_UNUSED)
@


1.3
log
@ncurses-4.2-990307
@
text
@d1 1
a1 1
/*	$OpenBSD: trace_tries.c,v 1.2 1999/03/02 06:23:30 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 1999 Free Software Foundation, Inc.                        *
d40 1
a40 1
MODULE_ID("$From: trace_tries.c,v 1.6 1999/03/06 22:51:07 tom Exp $")
d46 2
a47 1
static void recur_tries(struct tries *tree, unsigned level)
d49 2
a50 2
	if (level > len)
		buffer = (unsigned char *)realloc(buffer, len = (level + 1) * 4);
d52 7
a58 10
	while (tree != 0) {
		if ((buffer[level] = tree->ch) == 0)
			buffer[level] = 128;
		buffer[level+1] = 0;
		if (tree->value != 0) {
			_tracef("%5d: %s (%s)", tree->value, _nc_visbuf((char *)buffer), keyname(tree->value));
		}
		if (tree->child)
			recur_tries(tree->child, level+1);
		tree = tree->sibling;
d60 4
d66 2
a67 1
void _nc_trace_tries(struct tries *tree)
d69 5
a73 5
	buffer = typeMalloc(unsigned char, len = 80);
	_tracef("BEGIN tries %p", tree);
	recur_tries(tree, 0);
	_tracef(". . . tries %p", tree);
	free(buffer);
d75 1
d77 2
a78 1
void _nc_trace_tries(struct tries *tree GCC_UNUSED)
@


1.2
log
@ncurses-4.2-990301
@
text
@d1 1
a1 1
/*	$OpenBSD: trace_tries.c,v 1.1 1999/02/24 06:31:11 millert Exp $	*/
d40 1
a40 1
MODULE_ID("$From: trace_tries.c,v 1.5 1999/02/28 23:42:28 tom Exp $")
d43 1
a43 1
static char *buffer;
d49 1
a49 1
		buffer = (char *)realloc(buffer, len = (level + 1) * 4);
d56 1
a56 1
			_tracef("%5d: %s (%s)", tree->value, _nc_visbuf(buffer), keyname(tree->value));
d66 1
a66 1
	buffer = typeMalloc(char, len = 80);
@


1.1
log
@ncurses-4.2-990220; this is a pre-release of 5.0
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
MODULE_ID("$From: trace_tries.c,v 1.3 1999/02/19 04:05:26 tom Exp $")
d49 1
a49 1
		buffer = realloc(buffer, len = (level + 1) * 4);
d66 1
a66 1
	buffer = malloc(len = 80);
@

