head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2014.05.20.13.22.06;	author syl;	state Exp;
branches;
next	1.3;

1.3
date	2014.01.21.22.26.11;	author jca;	state Exp;
branches;
next	1.2;

1.2
date	2013.07.11.11.41.13;	author syl;	state Exp;
branches;
next	1.1;

1.1
date	2013.06.12.22.36.06;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Add support for -o XXX or -oXXX options in libfuse.

inputs from tedu@@, ok tedu@@
@
text
@/* $OpenBSD: fuse_opt.h,v 1.3 2014/01/21 22:26:11 jca Exp $ */
/*
 * Copyright (c) 2013 Sylvestre Gallon <ccna.syl@@gmail.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _FUSE_OPT_H_
#define _FUSE_OPT_H_

#ifdef __cplusplus
extern "C" {
#endif

struct fuse_args {
	int argc;
	char **argv;
	int allocated;
};

struct fuse_opt {
	const char *templ;
	unsigned long off;
	int val;
};

typedef int (*fuse_opt_proc_t)(void *, const char *, int, struct fuse_args *);
int fuse_opt_add_arg(struct fuse_args *, const char *);
int fuse_opt_insert_arg(struct fuse_args *, int, const char *);
void fuse_opt_free_args(struct fuse_args *);
int fuse_opt_add_opt(char **, const char *);
int fuse_opt_add_opt_escaped(char **, const char *);
int fuse_opt_match(const struct fuse_opt *, const char *);
int fuse_opt_parse(struct fuse_args *, void *, const struct fuse_opt *,
    fuse_opt_proc_t);

#define FUSE_ARGS_INIT(ac, av)	{ ac, av, 0 }

#define FUSE_OPT_IS_OPT_KEY(t)	(t->off == (unsigned long)-1)

#define FUSE_OPT_KEY(t, k)	{ t, -1, k }
#define FUSE_OPT_END		{ NULL, 0, 0 }
#define FUSE_OPT_KEY_OPT	-1
#define FUSE_OPT_KEY_NONOPT	-2
#define FUSE_OPT_KEY_KEEP	-3
#define FUSE_OPT_KEY_DISCARD	-4

#ifdef __cplusplus
}
#endif

#endif /* _FUSE_OPT_H_ */
@


1.3
log
@Mark fuse_opt_parse()'s third argument as a point to const, to match the
reference FUSE implementation.  ok syl@@
@
text
@d1 1
a1 1
/* $OpenBSD: fuse_opt.h,v 1.2 2013/07/11 11:41:13 syl Exp $ */
d48 2
@


1.2
log
@Merge fuse_opt code with stsp@@ fuse_opt code.

ok tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: fuse_opt.h,v 1.1 2013/06/12 22:36:06 tedu Exp $ */
d44 1
a44 1
int fuse_opt_parse(struct fuse_args *, void *, struct fuse_opt *,
@


1.1
log
@fuse_opt support from Sylvestre
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d40 4
a43 1
int fuse_opt_free_args(struct fuse_args *);
d53 2
@

