head	1.30;
access;
symbols
	OPENBSD_6_1:1.30.0.4
	OPENBSD_6_1_BASE:1.30
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7;
locks; strict;
comment	@# @;


1.30
date	2017.01.25.23.53.18;	author schwarze;	state Exp;
branches;
next	1.29;
commitid	GgVnapTFE1VAcHHA;

1.29
date	2016.11.05.08.12.22;	author jsing;	state Exp;
branches;
next	1.28;
commitid	GQjBNMwBDcy2FY02;

1.28
date	2016.11.04.19.01.54;	author jsing;	state Exp;
branches;
next	1.27;
commitid	HfB08gbQJf1mFWiS;

1.27
date	2016.11.04.18.23.32;	author guenther;	state Exp;
branches;
next	1.26;
commitid	6ETMBoXiwmbf06wQ;

1.26
date	2016.11.02.15.18.42;	author beck;	state Exp;
branches;
next	1.25;
commitid	OsrmWrsuHXqdXb2Z;

1.25
date	2016.09.19.03.25.22;	author bcook;	state Exp;
branches;
next	1.24;
commitid	oEbqxDlL3ibozicj;

1.24
date	2016.09.04.12.26.43;	author bcook;	state Exp;
branches;
next	1.23;
commitid	pRMpDkZhqg5jtYzf;

1.23
date	2016.03.30.06.38.43;	author jmc;	state Exp;
branches;
next	1.22;
commitid	LN9ijdk9SEnzWAbM;

1.22
date	2015.10.07.23.33.38;	author beck;	state Exp;
branches;
next	1.21;
commitid	XcWxDTWtCyQY5Zhm;

1.21
date	2015.09.14.16.16.38;	author jsing;	state Exp;
branches;
next	1.20;
commitid	Fd6WDkwQWggESQVJ;

1.20
date	2015.09.14.14.29.30;	author jmc;	state Exp;
branches;
next	1.19;
commitid	zAMmqNqhWU0IcrLY;

1.19
date	2015.09.12.21.00.38;	author beck;	state Exp;
branches;
next	1.18;
commitid	iEhBM6X1bQFFdcQ1;

1.18
date	2015.09.11.15.17.46;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	3oQ8IOmwPrDzzmCG;

1.17
date	2015.09.11.13.59.20;	author beck;	state Exp;
branches;
next	1.16;
commitid	OUCA4bfXLXcZZOvB;

1.16
date	2015.09.11.12.56.55;	author beck;	state Exp;
branches;
next	1.15;
commitid	sb4du43rG1oa1RCm;

1.15
date	2015.09.11.11.28.01;	author jsing;	state Exp;
branches;
next	1.14;
commitid	9gnJ0qiKF3yMyFsb;

1.14
date	2015.09.11.07.07.23;	author jmc;	state Exp;
branches;
next	1.13;
commitid	hCYNV6au1kyTU0iO;

1.13
date	2015.09.10.15.47.25;	author beck;	state Exp;
branches;
next	1.12;
commitid	gyPzmytrGKWsN08K;

1.12
date	2015.09.10.14.19.01;	author jmc;	state Exp;
branches;
next	1.11;
commitid	qjTLtLKGc4DnFTgg;

1.11
date	2015.09.10.10.12.31;	author jmc;	state Exp;
branches;
next	1.10;
commitid	B1s8xULRpcxQqBHK;

1.10
date	2015.06.05.21.52.01;	author tobiasu;	state Exp;
branches;
next	1.9;
commitid	7Uz0e1wwtg5RhagA;

1.9
date	2015.05.17.22.39.39;	author kettenis;	state Exp;
branches;
next	1.8;
commitid	hPAjcz6hVT7CzV2p;

1.8
date	2015.03.31.14.03.38;	author jsing;	state Exp;
branches;
next	1.7;
commitid	eUtypBLBDknWtFkM;

1.7
date	2015.02.22.15.09.54;	author jsing;	state Exp;
branches;
next	1.6;
commitid	lRyL0pnPfoLbeA76;

1.6
date	2015.02.15.13.33.14;	author jsing;	state Exp;
branches;
next	1.5;
commitid	XU6U0i09thMk3SHA;

1.5
date	2015.02.11.07.01.10;	author jsing;	state Exp;
branches;
next	1.4;
commitid	ZUCrxL1FSxDDlrBb;

1.4
date	2015.02.07.23.45.06;	author reyk;	state Exp;
branches;
next	1.3;
commitid	eWy3eMJpU4IZSOWb;

1.3
date	2015.02.07.06.19.26;	author jsing;	state Exp;
branches;
next	1.2;
commitid	cwopaOfpwORA2vUX;

1.2
date	2015.01.22.09.29.04;	author reyk;	state Exp;
branches;
next	1.1;
commitid	TZD23zMCpm6V7YnU;

1.1
date	2014.10.31.13.46.17;	author jsing;	state Exp;
branches;
next	;
commitid	y63FmUITd26yVanM;


desc
@@


1.30
log
@split the tls_init(3) that had grown fat to allow healthy future growth;
suggested by jsing@@; "i would just chuck it in" jmc@@
@
text
@#	$OpenBSD: Makefile,v 1.29 2016/11/05 08:12:22 jsing Exp $

.include <bsd.own.mk>
.ifndef NOMAN
SUBDIR=	man
.endif

CFLAGS+= -Wall -Werror -Wimplicit
CFLAGS+= -DLIBRESSL_INTERNAL

CLEANFILES= ${VERSION_SCRIPT}

WARNINGS= Yes

LIB=	tls

DPADD=	${LIBCRYPTO} ${LIBSSL}

LDADD+= -L${BSDOBJDIR}/lib/libcrypto -lcrypto
LDADD+= -L${BSDOBJDIR}/lib/libssl -lssl

VERSION_SCRIPT=	Symbols.map
SYMBOL_LIST=	${.CURDIR}/Symbols.list

HDRS=	tls.h

SRCS=	tls.c \
	tls_bio_cb.c \
	tls_client.c \
	tls_config.c \
	tls_conninfo.c \
	tls_peer.c \
	tls_server.c \
	tls_util.c \
	tls_ocsp.c \
	tls_verify.c

includes:
	@@cd ${.CURDIR}; for i in $(HDRS); do \
	    j="cmp -s $$i ${DESTDIR}/usr/include/$$i || \
	    ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 $$i\
		${DESTDIR}/usr/include/"; \
	    echo $$j; \
	    eval "$$j"; \
	done;

${VERSION_SCRIPT}: ${SYMBOL_LIST}
	{ printf '{\n\tglobal:\n'; \
	  sed '/^[._a-zA-Z]/s/$$/;/; s/^/		/' ${SYMBOL_LIST}; \
	  printf '\n\tlocal:\n\t\t*;\n};\n'; } >$@@.tmp && mv $@@.tmp $@@

.include <bsd.lib.mk>
@


1.29
log
@Remove generated Symbols.map on make clean.

ok guenther@@
@
text
@d1 6
a6 1
#	$OpenBSD: Makefile,v 1.28 2016/11/04 19:01:54 jsing Exp $
a36 2

MAN=	tls_init.3
@


1.28
log
@Build with WARNINGS=Yes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2016/11/04 18:23:32 guenther Exp $
d5 2
@


1.27
log
@Add an explict list of exported symbols with just the functions declared
in <tls.h>, and use __{BEGIN,END}_HIDDEN_DECLS in tls_internal.h to
optimize internal functions

ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2016/11/02 15:18:42 beck Exp $
d5 2
@


1.26
log
@Add OCSP client side support to libtls.
   - Provide access to certificate OCSP URL
   - Provide ability to check a raw OCSP reply against an
     established TLS ctx
   - Check and validate OCSP stapling info in the TLS handshake
     if a stapled OCSP response is provided.`

Add example code to show OCSP URL and stapled info
into netcat.

ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.25 2016/09/19 03:25:22 bcook Exp $
d13 3
d39 5
@


1.25
log
@Update ld search path for libssl/libcrypto, fixes cross-build after source moved.

from Patrick Wildt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2016/09/04 12:26:43 bcook Exp $
d23 1
@


1.24
log
@Add callback-based interface to libtls.

This allows working with buffers and callback functions instead of directly on
sockets or file descriptors.
Original patch from Tobias Pape <tobias_at_netshed.de>.
ok beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2016/03/30 06:38:43 jmc Exp $
d10 2
a11 2
LDADD+= -L${BSDOBJDIR}/lib/libcrypto/crypto -lcrypto
LDADD+= -L${BSDOBJDIR}/lib/libssl/ssl -lssl
@


1.23
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2015/10/07 23:33:38 beck Exp $
d16 1
@


1.22
log
@Add tls_peer_cert_notbefore and tls_peer_cert_notafter to expose peer certificate
validity times for tls connections.
ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2015/09/14 16:16:38 jsing Exp $
a24 51

MLINKS+=tls_init.3 tls_error.3
MLINKS+=tls_init.3 tls_config_new.3
MLINKS+=tls_init.3 tls_config_free.3
MLINKS+=tls_init.3 tls_config_parse_protocols.3
MLINKS+=tls_init.3 tls_config_set_ca_file.3
MLINKS+=tls_init.3 tls_config_set_ca_path.3
MLINKS+=tls_init.3 tls_config_set_ca_mem.3
MLINKS+=tls_init.3 tls_config_set_cert_file.3
MLINKS+=tls_init.3 tls_config_set_cert_mem.3
MLINKS+=tls_init.3 tls_config_set_ciphers.3
MLINKS+=tls_init.3 tls_config_set_dheparams.3
MLINKS+=tls_init.3 tls_config_set_ecdhecurve.3
MLINKS+=tls_init.3 tls_config_set_key_file.3
MLINKS+=tls_init.3 tls_config_set_key_mem.3
MLINKS+=tls_init.3 tls_config_set_protocols.3
MLINKS+=tls_init.3 tls_config_set_verify_depth.3
MLINKS+=tls_init.3 tls_config_prefer_ciphers_client.3
MLINKS+=tls_init.3 tls_config_prefer_ciphers_server.3
MLINKS+=tls_init.3 tls_config_clear_keys.3
MLINKS+=tls_init.3 tls_config_insecure_noverifycert.3
MLINKS+=tls_init.3 tls_config_insecure_noverifyname.3
MLINKS+=tls_init.3 tls_config_insecure_noverifytime.3
MLINKS+=tls_init.3 tls_config_verify.3
MLINKS+=tls_init.3 tls_config_verify_client.3
MLINKS+=tls_init.3 tls_config_verify_client_optional.3
MLINKS+=tls_init.3 tls_peer_cert_provided.3
MLINKS+=tls_init.3 tls_peer_cert_contains_name.3
MLINKS+=tls_init.3 tls_peer_cert_issuer.3
MLINKS+=tls_init.3 tls_peer_cert_subject.3
MLINKS+=tls_init.3 tls_peer_cert_hash.3
MLINKS+=tls_init.3 tls_peer_cert_notbefore.3
MLINKS+=tls_init.3 tls_peer_cert_notafter.3
MLINKS+=tls_init.3 tls_conn_version.3
MLINKS+=tls_init.3 tls_conn_cipher.3
MLINKS+=tls_init.3 tls_load_file.3
MLINKS+=tls_init.3 tls_client.3
MLINKS+=tls_init.3 tls_server.3
MLINKS+=tls_init.3 tls_configure.3
MLINKS+=tls_init.3 tls_reset.3
MLINKS+=tls_init.3 tls_free.3
MLINKS+=tls_init.3 tls_connect.3
MLINKS+=tls_init.3 tls_connect_fds.3
MLINKS+=tls_init.3 tls_connect_servername.3
MLINKS+=tls_init.3 tls_connect_socket.3
MLINKS+=tls_init.3 tls_accept_fds.3
MLINKS+=tls_init.3 tls_accept_socket.3
MLINKS+=tls_init.3 tls_handshake.3
MLINKS+=tls_init.3 tls_read.3
MLINKS+=tls_init.3 tls_write.3
MLINKS+=tls_init.3 tls_close.3
@


1.21
log
@Provide tls_config_insecure_noverifytime() in order to be able to disable
certificate validity checking.

ok beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2015/09/14 14:29:30 jmc Exp $
d56 2
@


1.20
log
@some conn_version and conn_cipher bits;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2015/09/12 21:00:38 beck Exp $
d47 1
@


1.19
log
@Move connection info into it's own private structure allocated and filled in
at handshake time. change accessors to return const char * to remove need
for caller to free memory.
ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2015/09/11 15:17:46 deraadt Exp $
d55 2
@


1.18
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2015/09/11 13:59:20 beck Exp $
d18 1
@


1.17
log
@document tls_get_peer_subject, tls_get_peer_issuer, and tls_get_peer_hash
ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2015/09/11 12:56:55 beck Exp $
d51 1
a51 1
MLINKS+=tls_init.3 tls_peer_cert_issuer3
@


1.16
log
@add tls_peer functions for checking names and issuers of peer certificates.
ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2015/09/11 11:28:01 jsing Exp $
d51 3
@


1.15
log
@Provide tls_peer_cert_hash() which returns a hash of the raw certificate
that was presented by the peer. The hash used is currently SHA256, however
since we prefix the result with the hash name, we can change this in the
future as the need arises.

The same output can be generated by using:

 h=$(openssl x509 -outform der -in mycert.crt | sha256)
 printf "SHA256:${h}\n"

ok beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2015/09/11 07:07:23 jmc Exp $
d49 2
@


1.14
log
@sort MLINKS into the same order as the man page;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2015/09/10 15:47:25 beck Exp $
d18 1
@


1.13
log
@document client side certificate verification functionality.
ok jsing@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2015/09/10 14:19:01 jmc Exp $
d24 1
d34 1
a35 1
MLINKS+=tls_init.3 tls_config_set_dheparams.3
a51 1
MLINKS+=tls_init.3 tls_error.3
a53 1
MLINKS+=tls_init.3 tls_close.3
d63 1
@


1.12
log
@mlink tls_handshake;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2015/09/10 10:12:31 jmc Exp $
d45 2
@


1.11
log
@add MLINKS for _prefer_ciphers_*
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2015/06/05 21:52:01 tobiasu Exp $
d59 1
@


1.10
log
@Link ssl and crypto via BSDOBJDIR, works with native and cross builds

ok mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2015/05/17 22:39:39 kettenis Exp $
d39 2
@


1.9
log
@Record inter-library dependencies between libcrypto, libssl and libtls
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2015/03/31 14:03:38 jsing Exp $
d10 2
a11 2
LDADD+= -L${.CURDIR}/../../libcrypto/crypto/obj -lcrypto
LDADD+= -L${.CURDIR}/../../libssl/ssl/obj -lssl
@


1.8
log
@Provide a tls_accept_fds() function, which allows a TLS connection to be
accepted via an existing pair of file descriptors.

Based on a diff from Jan Klemkow.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2015/02/22 15:09:54 jsing Exp $
d9 3
@


1.7
log
@Rename tls_config_insecure_noverifyhost() to
tls_config_insecure_noverifyname(), so that it is more accurate and keeps
inline with the distinction between DNS hostname and server name.

Requested by tedu@@ during s2k15.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2015/02/15 13:33:14 jsing Exp $
d52 1
@


1.6
log
@Document tls_config_parse_protocols() and update documentation for
tls_config_set_protocols().
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2015/02/11 07:01:10 jsing Exp $
a36 1
MLINKS+=tls_init.3 tls_config_insecure_noverifyhost.3
d38 1
@


1.5
log
@Provide a tls_connect_servername() function that has the same behaviour
as tls_connect(), however allows the name to use for verification to be
explicitly provided, rather than being inferred from the host value.

Requested by reyk@@

ok reyk@@ tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2015/02/07 23:45:06 reyk Exp $
d23 1
@


1.4
log
@Add manpage bits for tls_load_file() and tls_accept_socket().

The tls_accept_socket() has been previously removed because the API is
not fixed yet; but it is also already used by httpd(8) and spamd(8) so
it is time to add it again and eventually change it later.

OK tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2015/02/07 06:19:26 jsing Exp $
d48 2
@


1.3
log
@Add tls_config_set_dheparams() to allow specification of the parameters to
use for DHE. This enables the use of DHE cipher suites.

Rename tls_config_set_ecdhcurve() to tls_config_set_ecdhecurve() since it
is only used to specify the curve for ephemeral ECDH.

Discussed with reyk@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2015/01/22 09:29:04 reyk Exp $
d39 1
d49 1
@


1.2
log
@Add MLINK for tls_config_set_ca_mem()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2014/10/31 13:46:17 jsing Exp $
d29 2
a30 1
MLINKS+=tls_init.3 tls_config_set_ecdhcurve.3
@


1.1
log
@Rename libressl to libtls to avoid confusion and to make it easier to
distinguish between LibreSSL (the project) and libressl (the library).

Discussed with many.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2014/10/08 19:01:40 tedu Exp $
d25 1
@

