head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3;
locks; strict;
comment	@.\" @;


1.5
date	2016.08.05.08.10.51;	author jmc;	state Exp;
branches;
next	1.4;
commitid	gGKBKB7Oc4eIul75;

1.4
date	2015.09.10.13.44.19;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	Gvn6hpU1kYhFb5zx;

1.3
date	2015.07.27.18.42.53;	author jmc;	state Exp;
branches;
next	1.2;
commitid	f5ctjwvyfiN8ArWa;

1.2
date	2015.07.27.03.01.22;	author yasuoka;	state Exp;
branches;
next	1.1;
commitid	mrcoUlPMyrdWNETi;

1.1
date	2015.07.27.02.27.32;	author yasuoka;	state Exp;
branches;
next	;
commitid	gmfHnlwtAhUqGoQz;


desc
@@


1.5
log
@grammar fix;
@
text
@.\" $OpenBSD: radius_new_request_packet.3,v 1.4 2015/09/10 13:44:19 schwarze Exp $
.\"
.\" Copyright (c) 2009 Internet Initiative Japan Inc.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt RADIUS_NEW_REQUEST_PACKET 3
.Os
.Sh NAME
.Nm radius_new_request_packet ,
.Nm radius_new_response_packet ,
.Nm radius_convert_packet ,
.Nm radius_delete_packet ,
.Nm radius_get_id ,
.Nm radius_get_code ,
.Nm radius_get_authenticator ,
.Nm radius_get_authenticator_retval ,
.Nm radius_get_length ,
.Nm radius_update_id ,
.Nm radius_set_id ,
.Nm radius_set_request_packet ,
.Nm radius_get_request_packet ,
.Nm radius_set_response_authenticator ,
.Nm radius_check_response_authenticator ,
.Nm radius_set_accounting_request_authenticator ,
.Nm radius_check_accounting_request_authenticator ,
.Nm radius_get_request_authenticator_retval ,
.Nm radius_get_data ,
.Nm radius_get_raw_attr ,
.Nm radius_put_raw_attr ,
.Nm radius_get_raw_attr_cat ,
.Nm radius_put_raw_attr_cat ,
.Nm radius_get_raw_attr_ptr ,
.Nm radius_set_raw_attr ,
.Nm radius_del_attr_all ,
.Nm radius_has_attr ,
.Nm radius_get_vs_raw_attr ,
.Nm radius_put_vs_raw_attr ,
.Nm radius_get_vs_raw_attr_cat ,
.Nm radius_put_vs_raw_attr_cat ,
.Nm radius_get_vs_raw_attr_ptr ,
.Nm radius_set_vs_raw_attr ,
.Nm radius_del_vs_attr_all ,
.Nm radius_has_vs_attr ,
.Nm radius_get_uint16_attr ,
.Nm radius_get_uint32_attr ,
.Nm radius_get_uint64_attr ,
.Nm radius_get_ipv4_attr ,
.Nm radius_get_ipv6_attr ,
.Nm radius_put_uint16_attr ,
.Nm radius_put_uint32_attr ,
.Nm radius_put_uint64_attr ,
.Nm radius_put_ipv4_attr ,
.Nm radius_put_ipv6_attr ,
.Nm radius_set_uint16_attr ,
.Nm radius_set_uint32_attr ,
.Nm radius_set_uint64_attr ,
.Nm radius_set_ipv4_attr ,
.Nm radius_set_ipv6_attr ,
.Nm radius_get_string_attr ,
.Nm radius_put_string_attr ,
.Nm radius_get_vs_uint16_attr ,
.Nm radius_get_vs_uint32_attr ,
.Nm radius_get_vs_uint64_attr ,
.Nm radius_get_vs_ipv4_attr ,
.Nm radius_get_vs_ipv6_attr ,
.Nm radius_put_vs_uint16_attr ,
.Nm radius_put_vs_uint32_attr ,
.Nm radius_put_vs_uint64_attr ,
.Nm radius_put_vs_ipv4_attr ,
.Nm radius_put_vs_ipv6_attr ,
.Nm radius_set_vs_uint16_attr ,
.Nm radius_set_vs_uint32_attr ,
.Nm radius_set_vs_uint64_attr ,
.Nm radius_set_vs_ipv4_attr ,
.Nm radius_set_vs_ipv6_attr ,
.Nm radius_get_vs_string_attr ,
.Nm radius_put_vs_string_attr ,
.Nm radius_put_message_authenticator ,
.Nm radius_set_message_authenticator ,
.Nm radius_check_message_authenticator ,
.Nm radius_encrypt_user_password_attr ,
.Nm radius_decrypt_user_password_attr ,
.Nm radius_encrypt_mppe_key_attr ,
.Nm radius_decrypt_mppe_key_attr ,
.Nm radius_get_user_password_attr ,
.Nm radius_put_user_password_attr ,
.Nm radius_get_mppe_send_key_attr ,
.Nm radius_put_mppe_send_key_attr ,
.Nm radius_get_mppe_recv_key_attr ,
.Nm radius_put_mppe_recv_key_attr ,
.Nm radius_get_eap_msk ,
.Nm radius_send ,
.Nm radius_sendmsg ,
.Nm radius_sendto ,
.Nm radius_recv ,
.Nm radius_recvfrom ,
.Nm radius_recvmsg ,
.Nm radius
.Nd manipulate RADIUS packets for RADIUS clients/servers
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In netinet/in.h
.In stdbool.h
.In radius.h
.Sh DESCRIPTION
.Nm radius
provides a facility to manipulate RADIUS packets and some helper functions.
.Sh CREATING AND DESTROYING PACKETS
RADIUS packet objects are created by
.Fn radius_new_request_packet ,
.Fn radius_new_response_packet
or
.Fn radius_convert_packet .
The authenticator field of the packet that is returned by
.Fn radius_new_request_packet
and
.Fn radius_new_response_packet
is filled with random bytes.
.Pp
You must call
.Fn radius_delete_packet
to free memory associated with the packet object.
.Sh HEADER ACCESSOR
.Fn radius_get_id ,
.Fn radius_get_code ,
.Fn radius_get_authenticator ,
.Fn radius_get_authenticator_retval
and
.Fn radius_get_length
retrieves the specified property of the packet.
.Fn radius_update_id
updates a packet's ID field with an internal ID counter.
.Fn radius_set_id
sets a packet's ID field.
.Pp
.Fn radius_set_request_packet
associates a request packet to a response packet.
The associated request packet can be retrieved by
.Fn radius_get_request_packet .
.Pp
.Fn radius_set_response_authenticator
sets a response authenticator to a response packet.
.Fn radius_check_response_authenticator
checks the response authenticator of a response packet.
The request packet must be associated with a response packet by
.Fn radius_new_response_packet
or
.Fn radius_set_request_packet .
.Pp
.Fn radius_set_accounting_request_authenticator
sets a request authenticator to an accounting request packet.
.Fn radius_check_accounting_request_authenticator
checks a request authenticator of an accounting request packet.
.Pp
.Fn radius_get_request_authenticator_retval
returns the authenticator field of the packet if the argument is
a request packet, and returns that of the associated request packet
if the argument is a response packet.
.Pp
.Fn radius_get_data
returns packet data itself.
.Sh RAW ATTRIBUTE ACCESSOR
.Fn radius_get_raw_attr
retrieves an attribute value.
.Fa length
is a value-result parameter, initially containing the size of the buffer
and modified on return to indicate the size of the value returned.
If the buffer size is not sufficient, the returned value is truncated.
.Pp
.Fn radius_put_raw_attr
appends attribute data to the end of the packet.
If buffer size is larger than the maximum size of a single attribute,
the function returns an error.
.Pp
.Fn radius_get_raw_attr_cat
retrieves an attribute value.
Unlike
.Fn radius_get_raw_attr ,
.Fn radius_get_raw_attr_cat
retrieves ALL attribute values that have the specified attribute type
concatenated.
If the buffer size is not sufficient, the function returns an error.
If
.Fa buf
is
.Dv NULL ,
the initial value of
.Fa length
is ignored and the actual size of concatenated values is returned.
.Pp
.Fn radius_put_raw_attr_cat
appends attribute data to the last of the packet.
Unlike
.Fn radius_put_raw_attr ,
.Fn radius_put_raw_attr_cat
divides data into multiple attributes and appends them if the buffer size is
larger than the maximum size of a single attribute.
Note that packet objects may be broken (but can be deleted normally by
.Fn radius_delete_packet )
if this function has returned an error.
.Pp
.Fn radius_get_raw_attr_ptr
retrieves a pointer and length of specified attribute.
The returned buffer must not be modified.
.Pp
.Fn radius_set_raw_attr
overwrites existing an attribute value.
If the specified attribute does not exist, this function returns an error.
If
.Fa length
is different from the length of the specified attribute,
the function returns an error.
.Pp
.Fn radius_del_attr_all
deletes all attributes matching its arguments.
.Pp
.Fn radius_has_attr
returns whether packet has a specified attribute.
.Pp
.Fn radius_get_vs_raw_attr ,
.Fn radius_put_vs_raw_attr ,
.Fn radius_get_vs_raw_attr_cat ,
.Fn radius_put_vs_raw_attr_cat ,
.Fn radius_get_vs_raw_attr_ptr ,
.Fn radius_set_vs_raw_attr ,
.Fn radius_del_vs_attr_all
and
.Fn radius_has_vs_attr
are vendor-specific versions of raw attribute accessors.
.Sh TYPED ATTRIBUTE ACCESSOR
To make code simple, there are many typed attribute accessors.
.Nm radius
provides typed accessors for
.Li uint16_t ,
.Li uint32_t ,
.Li uint64_t ,
.Li struct in_addr
and
.Li struct in6_addr .
Byte endian may be appropriately swapped for
.Li uint16_t ,
.Li uint32_t
and
.Li uint64_t .
.Pp
These typed accessors do not requires
.Fa length
parameters because length is implied by the type.
For "get" functions, if the actual attribute size is different from the size of
the type, the functions return an error.
.Pp
There are also typed accessors for string
.Pq Li char * .
For "get" functions for strings, the returned string is always NUL-terminated
even if buffer size is smaller than actual attribute size.
This behavior is similar to
.Fn strlcpy .
.Sh MESSAGE AUTHENTICATOR
There are helper functions for Message-Authenticator attributes.
.Pp
.Fn radius_put_message_authenticator
and
.Fn radius_set_message_authenticator
calculate a Message-Authenticator and put or set it to packet, respectively.
.Pp
.Fn radius_check_message_authenticator
checks a Message-Authenticator.
.Pp
The request packet must be associated with a response packet by
.Fn radius_new_response_packet
or
.Fn radius_set_request_packet ,
otherwise the packet is treated as a request packet.
.Sh ENCRYPTED ATTRIBUTE
There are helper functions for encrypted attributes.
.Pp
.Fn radius_encrypt_user_password_attr ,
.Fn radius_decrypt_user_password_attr ,
.Fn radius_encrypt_mppe_key_attr
and
.Fn radius_decrypt_mppe_key_attr
encrypt or decrypt User-Password attribute or MS-MPPE-{Send,Recv}-Key
attributes respectively.
.Pp
.Fn radius_get_user_password_attr ,
.Fn radius_put_user_password_attr ,
.Fn radius_get_mppe_send_key_attr ,
.Fn radius_put_mppe_send_key_attr ,
.Fn radius_get_mppe_recv_key_attr
and
.Fn radius_put_mppe_recv_key_attr
are shortcuts of combination of encrypt/decrypt functions
and get/put functions.
.Pp
.Fn radius_get_eap_msk
retrieves a Master Session Key (MSK) for Extensible Authentication Protocol
(EAP).
Currently retrieving an MSK from MS-MPPE key attributes is supported.
.Sh SENDING AND RECEIVING PACKETS
There are helper functions for sending and receiving packets.
.Pp
.Fn radius_send ,
.Fn radius_sendto ,
.Fn radius_sendmsg ,
.Fn radius_recv ,
.Fn radius_recvfrom
and
.Fn radius_recvmsg
are helper version of
.Fn send ,
.Fn sendto ,
.Fn sendmsg ,
.Fn recv ,
.Fn recvfrom
and
.Fn recvmsg ,
respectively.
.Pp
.Fn radius_send ,
.Fn radius_sendto
and
.Fn radius_sendmsg
return 0 on success and nonzero on failure.
.Pp
.Fn radius_recv
.Fn radius_recvfrom
and
.Fn radius_recvmsg
return the received packet on success and return NULL on failure.
.Pp
Note that
.Li msg_iov
must be
.Li NULL
and
.Li msg_iovlen
must be zero in case of
.Fn radius_sendmsg
and
.Fn radius_recvmsg .
.Sh RETURN VALUES
Functions that return int return 0 on success and nonzero on failure.
Functions that return pointer return non-NULL pointer on success and
NULL on failure.
.Sh HISTORY
The
.Nm radius+
library was first written by UMEZAWA Takeshi in 2002 for the ID gateway service
of Internet Initiative Japan.
YASUOKA Masahiko added support for Message-Authentication attributes in 2008.
.Ox
project rewrote C++ code to pure C code in 2010.
The
.Nm radius+
library was renamed
.Nm radius
and moved to
.Pa lib/
in 2013.
@


1.4
log
@missing commas at the end of .Nm lines in the NAME section
@
text
@d1 1
a1 1
.\" $OpenBSD: radius_new_request_packet.3,v 1.3 2015/07/27 18:42:53 jmc Exp $
d27 1
a27 1
.Dd $Mdocdate: July 27 2015 $
d273 1
a273 1
the type, the functions returns an error.
@


1.3
log
@some readability fixes;
@
text
@d1 1
a1 1
.\" $OpenBSD: radius_new_request_packet.3,v 1.2 2015/07/27 03:01:22 yasuoka Exp $
d119 1
a119 1
.Nm radius_recvmsg
@


1.2
log
@Add a description about radius_get_eap_msk().
@
text
@d1 1
a1 1
.\" $OpenBSD: radius_new_request_packet.3,v 1.1 2015/07/27 02:27:32 yasuoka Exp $
d137 1
a137 1
Authenticator field of the packet that is returned by
d153 1
a153 1
retreives specified property of the packet.
d155 1
a155 1
update packet's ID field with internal id counter.
d157 1
a157 1
sets packet's ID field.
d160 2
a161 2
associate request packet to response packet.
Associated request packet can be retrieved by
d165 1
a165 1
sets response authenticator to response packet.
d167 2
a168 2
checks response authenticator of response packet.
The request packet must be associated with response packet by
d174 1
a174 1
sets request authenticator to accounting request packet.
d176 1
a176 1
checks request authenticator of accounting request packet.
d179 1
a179 1
returns authenticator field of the packet if the argument is
d187 1
a187 1
retrieves attribute value.
d191 1
a191 1
If buffer size is not sufficient, returned value is truncated.
d194 3
a196 3
appends attribute data to the last of the packet.
If buffer size is larger than maximum size of single attribute, this
function returns error.
d199 1
a199 1
retrieves attrbute value.
d203 3
a205 2
retreives concatenated ALL attrbiute value that have specified attribute type.
If buffer size is not sufficient, this function returns error.
d212 1
a212 1
is not cared and the actual size of concatenated values is returned.
d219 3
a221 3
divides data into multiple attributes and append them if buffer size is
larger than maximum size of single attribute.
Note that packet object may be broken (but can be deleted normally by
d223 1
a223 1
if this function have returned error.
d226 2
a227 2
retreives pointer and length of specified attribute.
returned buffer must not be modified.
d230 2
a231 2
overwrite existing attribute value.
If specified attribute does not exist, this function returns error.
d234 2
a235 1
is different from length of the specified attribute, this function returns error.
d241 1
a241 1
returns whether packet has specified attribute.
d252 1
a252 1
are vendor-specific version of raw attribute accessors.
d272 2
a273 2
For "get" functions, if actual attribute size is different from the size of
the type, the functions return error.
d275 3
a277 3
There are also typed accessors for string (
.Li char * ).
For "get" function for string, returned string is always NUL-terminated
d282 1
a282 1
There exist helper functions for Message-Authenticator attribute.
d287 1
a287 1
calculate Message-Authenticator and put or set it to packet, respectively.
d290 1
a290 1
checks Message-Authenticator.
d292 1
a292 1
The request packet must be associated with response packet by
d296 1
a296 1
otherwise packet is treated as request packet.
d298 1
a298 1
There exist helper functions for encrypted attributes.
d321 1
a321 1
Currently retrieving a MSK from MS-MPPE key attributes is supported.
d323 1
a323 1
There exist helper functions to sending and receiving packets.
d352 1
a352 1
return received packet on success and return NULL on failure.
d369 1
d371 1
a371 1
library is first written by UMEZAWA Takeshi in 2002 for ID gateway service
d373 4
a376 2
YASUOKA Masahiko added support for Message-Authentication attribute in 2008.
OpenBSD project rewrite C++ code to pure C code in 2010.
d378 1
a378 1
library is renamed
d380 3
a382 1
library and moved to under lib/ in 2013.
@


1.1
log
@Rename radius.3 to radius_new_request_packet.3 to be named after a
function.  Also make all functions be listed in the NAME section and
have MLINKS in the makefile.

suggest jmc
ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: radius.3,v 1.1 2015/07/20 23:52:29 yasuoka Exp $
d27 1
a27 1
.Dd $Mdocdate: July 20 2015 $
d315 5
@

