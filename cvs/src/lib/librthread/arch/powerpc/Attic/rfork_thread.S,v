head	1.6;
access;
symbols
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.3.0.24
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.22
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.20
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.16
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.18
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2012.03.22.01.10.48;	author guenther;	state dead;
branches;
next	1.5;

1.5
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2011.10.17.06.39.20;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.05.16.09.39;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.25.00.46.08;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.04.04.09.33;	author brad;	state Exp;
branches;
next	;


desc
@@


1.6
log
@tfork_thread has been moved to libc
@
text
@/*	$OpenBSD: rfork_thread.S,v 1.5 2012/01/17 02:34:18 guenther Exp $	*/

/*
 * Copyright (c) 2005 Tim Wiess <tim@@nop.cx>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/syscall.h>
#include <machine/asm.h>

ENTRY(__tfork_thread)
	/* sanity check */
	cmpwi	%r4, 0
	beq	1f
	cmpwi	%r5, 0
	beq	1f
	
	mr	%r7,%r4
	
	/* call __tfork */
	li	%r0, SYS___tfork
	sc
	cmpwi	%r0, 0
	bne	2f
	
	/* check if we are parent or child */
	cmpwi	%r3, 0
	bnelr
	
	/* child */
	mtlr	%r5		/* fp */
	mr	%r3, %r6	/* arg */
	subi	%r1, %r7, 16	/* fixup sp to get headroom */
	blrl
	
	/* child returned, call _exit */
	li	%r0, SYS___threxit
	sc
1:
	li	%r3, -1
2:
	b PIC_PLT(_C_LABEL(__cerror))
@


1.5
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d1 1
a1 1
/*	$OpenBSD: rfork_thread.S,v 1.4 2011/10/17 06:39:20 guenther Exp $	*/
@


1.4
log
@Use __tfork, __get_tcb, and __set_tcb to have a real TCB and per-thread
errno.  The ASM bits for _cerror are sketchy or missing for some archs
but that can be corrected in-tree.
@
text
@d1 1
a1 1
/*	$OpenBSD: rfork_thread.S,v 1.3 2006/01/05 16:09:39 otto Exp $	*/
d48 1
a48 1
	li	%r0, SYS_threxit
@


1.3
log
@Fixup stack, it needs 16 bytes headroom. Help from miod@@ and drahn.
ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rfork_thread.S,v 1.2 2005/12/25 00:46:08 tedu Exp $	*/
d22 1
a22 1
ENTRY(rfork_thread)
d31 2
a32 2
	/* call rfork */
	li	%r0, SYS_rfork
@


1.2
log
@child calls threxit after thread return
@
text
@d1 1
a1 1
/*	$OpenBSD: rfork_thread.S,v 1.1 2005/12/04 04:09:33 brad Exp $	*/
d44 1
a44 1
	mr	%r1, %r7	/* new sp */
@


1.1
log
@add a powerpc implementation of rfork_thread().

From Tim Wiess <tim at nop dot cx>

ok drahn@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 1
a48 1
	li	%r0, SYS_exit
@

