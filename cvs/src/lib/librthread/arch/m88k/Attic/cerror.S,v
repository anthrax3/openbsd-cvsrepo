head	1.6;
access;
symbols
	OPENBSD_5_9:1.5.0.8
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.10
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.6
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.4
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.05.07.19.05.23;	author guenther;	state dead;
branches;
next	1.5;
commitid	d9R7VGw9CHTkwXE1;

1.5
date	2013.08.26.21.38.08;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2013.01.27.09.56.05;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2013.01.11.21.23.24;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2013.01.05.11.20.55;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2012.02.18.17.10.10;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@/*	$OpenBSD: cerror.S,v 1.5 2013/08/26 21:38:08 miod Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "DEFS.h"

	.globl	_C_LABEL(__errno)

/*
 * long long __cerror(register_t errcode)
 * stores `errcode' into the current thread's errno variable, and returns
 * -1LL.
 */

ASENTRY(__cerror)
	/* if %r26 has been initialized, don't bother setting up a frame */
	bcnd	ne0, %r26, has_r26

	subu	%r31,%r31,16
	st	%r25,%r0,%r31
	st	%r1,%r31,4

#ifdef __PIC__
	bsr.n	_C_LABEL(__errno)#plt
#else
	bsr.n	_C_LABEL(__errno)
#endif
	 or	%r25,%r0,%r2
	or	%r26,%r0,%r2	/* save errno ptr */
	or	%r2,%r0,%r25	/* and restore errno value */

	ld	%r1,%r31,4
	ld	%r25,%r0,%r31
	addu	%r31,%r31,16

has_r26:
	st	%r2,%r0,%r26
	subu	%r2,%r0,1
	jmp.n	%r1
	 or	%r3, %r0, %r2
END(__cerror)
@


1.5
log
@Use %r27 as the thread control block pointer, allowing for __get_tcb() calls
in libpthread to be optimized away.

While there, follow DG/UX's example of using more than one register for thread
purposes (after all, the ABI reserves four of them), and also use %r26 to store
a pointer to the current thread's errno.

Since it is not possible to initialize %r26 at thread creation without
intrusive and potentially race-prone changes, have __tfork() reset %r26 to
zero, and libpthread's __cerror lazy initialize it. As soon as %r26 is nonzero,
it will be used instead of calling __errno().

This means that binaries linked against HEAD libpthread need to run on HEAD
kernels, and we are belatedly jumping on the 64-bit time_t bump (since there
are no 64-bit time_t m88k snapshots yet).

Joint work with guenther@@; "Your love of asm is sick and wrong, and yet
beautiful." and ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.4 2013/01/27 09:56:05 miod Exp $	*/
@


1.4
log
@Make this PIC-aware.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.3 2013/01/11 21:23:24 miod Exp $	*/
d40 6
d47 3
d60 2
a61 4
	st	%r25,%r0,%r2

	subu	%r2,%r0,1
	or	%r3, %r0, %r2
d65 5
d71 1
a71 1
	 addu	%r31,%r31,16
@


1.3
log
@Add END() directives to the various functions.
Make the code PIC-aware when necessary (i.e. invoke other functions through
the PLT, and access global data through the GOT). No change for non-PIC
compilation.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.2 2013/01/05 11:20:55 miod Exp $	*/
d36 1
a36 1
#include <machine/asm.h>
d45 3
d49 1
@


1.2
log
@Switch m88k ports to ELF.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.1 2012/02/18 17:10:10 miod Exp $	*/
d56 1
@


1.1
log
@Missing cerror bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.9 2011/04/09 15:45:17 deraadt Exp $	*/
d41 3
a43 3
	subu	r31,r31,16
	st	r25,r0,r31
	st	r1,r31,4
d46 2
a47 2
	 or	r25,r0,r2
	st	r25,r0,r2
d49 2
a50 2
	subu	r2,r0,1
	or	r3, r0, r2
d52 4
a55 4
	ld	r1,r31,4
	ld	r25,r0,r31
	jmp.n	r1
	 addu	r31,r31,16
@

