head	1.5;
access;
symbols
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.2.0.24
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.22
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.20
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.16
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.18
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.14
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.12
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.10
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.8
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.6
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.4
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.2
	OPENBSD_3_9_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2012.03.22.01.10.48;	author guenther;	state dead;
branches;
next	1.4;

1.4
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2011.10.17.06.39.20;	author guenther;	state Exp;
branches;
next	1.2;

1.2
date	2005.12.31.21.11.49;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.14.19.42.25;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.5
log
@tfork_thread has been moved to libc
@
text
@/* $OpenBSD: rfork_thread.S,v 1.4 2012/01/17 02:34:18 guenther Exp $ */
/*
 * Copyright (c) 2005 Dale Rahn <drahn@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */
#include <sys/syscall.h>
#include <machine/asm.h>
#include "../../../libc/arch/arm/SYS.h"

/*
 *                r0     r1          r2         r3
 * __tfork_thread(param, stack_addr, start_fnc, start_arg);
 */

ENTRY(__tfork_thread)
	stmdb   sp!, {r4}
	mov	r4, r1


	SYSTRAP(__tfork)
	bcs	1f

	/* check if we are parent or child */
	cmp	r0, #0
	ldmneia   sp!, {r4}
	movne	pc, lr

	/* child */
	mov	sp, r4
	mov	r0, r3
	mov	lr, pc
	mov	pc, r2
	nop
	SYSTRAP(__threxit)
1:
	ldmia   sp!, {r4}
	b     PIC_SYM(CERROR, PLT)
@


1.4
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d1 1
a1 1
/* $OpenBSD: rfork_thread.S,v 1.3 2011/10/17 06:39:20 guenther Exp $ */
@


1.3
log
@Use __tfork, __get_tcb, and __set_tcb to have a real TCB and per-thread
errno.  The ASM bits for _cerror are sketchy or missing for some archs
but that can be corrected in-tree.
@
text
@d1 1
a1 1
/* $OpenBSD: rfork_thread.S,v 1.2 2005/12/31 21:11:49 drahn Exp $ */
d45 1
a45 1
	SYSTRAP(threxit)
@


1.2
log
@No point in saving a bunch of extra registers, and the child's state must
be fully saved in resisters, if left on the parents stack, it could be
overwritten before the child runs. pointed out by miod.
@
text
@d1 1
a1 1
/* $OpenBSD: rfork_thread.S,v 1.1 2005/12/14 19:42:25 drahn Exp $ */
d22 2
a23 2
 *              r0     r1          r2         r3
 * rfork_thread(flags, stack_addr, start_fnc, start_arg);
d26 1
a26 1
ENTRY(rfork_thread)
d31 1
a31 1
	SYSTRAP(rfork)
@


1.1
log
@Initial versions of arm code, in-tree development (not yet working).
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d27 2
a28 1
	stmdb   sp!, {r1-r4,sl,fp,lr}
d36 1
a36 1
	ldmia   sp!, {r1-r4,sl,fp,lr}
d40 1
a40 1
	mov	sp, r1
d44 2
a45 1
	SYSTRAP(exit)
d47 1
a47 1
	ldmia   sp!, {r1-r4,sl,fp,lr}
@

