head	1.6;
access;
symbols
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.14
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.12
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.24
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.22
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.20
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.16
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.18
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.14
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.12
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2017.09.05.02.40.54;	author guenther;	state dead;
branches;
next	1.5;
commitid	5DW3WOQF0YGGx8lJ;

1.5
date	2016.09.01.10.56.46;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	HzJta88xKCDy1q89;

1.4
date	2016.04.02.19.00.51;	author guenther;	state Exp;
branches;
next	1.3;
commitid	HcJGR3mYEiomHNg2;

1.3
date	2012.03.13.05.51.30;	author guenther;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.06.11.48.59;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.31.21.40.43;	author marc;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Move mutex, condvar, and thread-specific data routes, pthread_once, and
pthread_exit from libpthread to libc, along with low-level bits to
support them.  Major bump to both libc and libpthread.

Requested by libressl team.  Ports testing by naddy@@
ok kettenis@@
@
text
@/* $OpenBSD: rthread_debug.c,v 1.5 2016/09/01 10:56:46 deraadt Exp $ */

/* PUBLIC DOMAIN: No Rights Reserved. Marco S Hyman <marc@@snafu.org> */

#include <pthread.h>
#include <stdarg.h>
#include <stdlib.h>
#include <stdio.h>
#include <unistd.h>

#include "rthread.h"

REDIRECT_SYSCALL(issetugid);

int _rthread_debug_level;

/*
 * Note: messages truncated at 255 characters.   Could use vasprintf,
 * but don't want to use malloc here so the function can be used
 * in signal handlers.
 */
#define MAX_MSG_LEN 256
#define RTHREAD_ENV_DEBUG	"RTHREAD_DEBUG"

/*
 * format and send output to stderr if the given "level" is less than or
 * equal to the current debug level.   Messages with a level <= 0 will
 * always be printed.
 */
void
_rthread_debug(int level, const char *fmt, ...)
{
	char msg[MAX_MSG_LEN];
	char *p;
	int cnt;
	ssize_t c;

	if (_rthread_debug_level >= level) {
		va_list ap;
		va_start(ap, fmt);
		cnt = vsnprintf(msg, MAX_MSG_LEN, fmt, ap);
		va_end(ap);
		if (cnt > MAX_MSG_LEN - 1)
			cnt = MAX_MSG_LEN - 1;
		p = msg;
		do {
			c = write(STDERR_FILENO, p, cnt);
			if (c == -1)
				break;
			if (c != cnt)
				sched_yield();
			p += c;
			cnt -= c;
		} while (cnt > 0);
	}
}

/*
 * set the debug level from an environment string.  Bogus values are
 * silently ignored.
 */
void
_rthread_debug_init(void)
{
	char *envp;
	char *rem;

	if (issetugid())
		return;
	envp = getenv(RTHREAD_ENV_DEBUG);
	if (envp) {
		_rthread_debug_level = (int) strtol(envp, &rem, 0);
		if (*rem || _rthread_debug_level < 0)
			_rthread_debug_level = 0;
	}
}
@


1.5
log
@delete wrong cvs $ tags
@
text
@d1 1
a1 1
/* $OpenBSD: rthread_debug.c,v 1.4 2016/04/02 19:00:51 guenther Exp $ */
@


1.4
log
@Eliminate the need to explicitly invoke syscalls via their _thread_sys_*
aliases by using a macro REDIRECT_SYSCALL() to map the symbols.  Apply
that to getthrid(), sysctl(), and issetugid() as well.

ok mpi@@ beck@@
@
text
@d1 1
a1 2
/* $OpenBSD: rthread_debug.c,v 1.3 2012/03/13 05:51:30 guenther Exp $ */
/* $snafu: rthread_debug.c,v 1.2 2004/12/09 18:41:44 marc Exp $ */
@


1.3
log
@Don't trust the environment if issetugid()
@
text
@d1 1
a1 1
/* $OpenBSD: rthread_debug.c,v 1.2 2011/11/06 11:48:59 guenther Exp $ */
d13 2
@


1.2
log
@Move <machine/spinlock.h> into rthread.h; strip out unnecessary #includes
@
text
@d1 1
a1 1
/* $OpenBSD: rthread_debug.c,v 1.1 2005/12/31 21:40:43 marc Exp $ */
d67 2
@


1.1
log
@
Add "print debug foo" function safe to use in signal handlers, example:
_rthread_debug(3, "foo = %s", foo);
where output is to stderr and will only be printed if the current
debug level is >= 3.   Messages with a debug level of 0 are always
printed.  The level can be set from the environment (not enabled yet)
or with gdb by modifying variable _rthread_debug_level.
"Fine with me" -Otto
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a5 8
#define _POSIX_THREADS

#include <sys/param.h>
#include <sys/mman.h>
#include <sys/wait.h>

#include <machine/spinlock.h>

a9 1
#include <time.h>
@

