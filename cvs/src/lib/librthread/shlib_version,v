head	1.24;
access;
symbols
	OPENBSD_6_1:1.24.0.2
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.23.0.2
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.6
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.6
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.4
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.2
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.10
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.8
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.6
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.4
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.2
	OPENBSD_3_9_BASE:1.1;
locks; strict;
comment	@# @;


1.24
date	2016.09.01.10.41.31;	author otto;	state Exp;
branches;
next	1.23;
commitid	IQhyLDlKbP0DKO78;

1.23
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.22;
commitid	d9R7VGw9CHTkwXE1;

1.22
date	2016.03.21.22.41.28;	author bluhm;	state Exp;
branches;
next	1.21;
commitid	hneUpr7ZOJCeNeHP;

1.21
date	2015.11.10.04.30.59;	author guenther;	state Exp;
branches;
next	1.20;
commitid	GTAoVjpQRAdNHXVz;

1.20
date	2015.10.23.04.39.24;	author guenther;	state Exp;
branches;
next	1.19;
commitid	OrVNAJkzchWBNbO0;

1.19
date	2015.04.07.01.27.07;	author guenther;	state Exp;
branches;
next	1.18;
commitid	oQvh7XA3Kql35r0J;

1.18
date	2014.08.31.20.23.10;	author guenther;	state Exp;
branches;
next	1.17;
commitid	fzxbkcZqNIBa9TOj;

1.17
date	2013.08.13.05.52.15;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.17.19.11.54;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2013.06.01.09.49.53;	author miod;	state Exp;
branches;
next	1.14;

1.14
date	2013.04.29.17.06.20;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	2012.08.15.18.08.22;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	2012.06.21.00.56.59;	author guenther;	state Exp;
branches;
next	1.11;

1.11
date	2012.05.03.09.07.17;	author pirofti;	state Exp;
branches;
next	1.10;

1.10
date	2012.04.11.10.37.26;	author pirofti;	state Exp;
branches;
next	1.9;

1.9
date	2012.03.22.05.03.14;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2012.03.03.11.27.10;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2012.02.15.06.48.10;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2010.04.12.03.38.20;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2009.11.28.00.17.57;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2009.10.27.20.34.37;	author jasper;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.13.21.18.43;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2005.12.06.06.05.45;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.24
log
@bump
@
text
@major=23
minor=0
@


1.23
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
major=22
@


1.22
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@d1 1
a1 1
major=21
@


1.21
log
@Split the intra-thread functionality from kill(2) into its own syscall
thrkill(2), rolling the kill(2) syscall number with the ABI change to
avoid breaking binaries during during the transition.  thrkill(2) includes
a 'tcb' argument that eliminates the need for locking in pthread_kill()
and simplifies pthread_cancel().  Switch __stack_smash_handler() to use
thrkill(2) and explicitly unblock SIGABRT.

Minor bump to both libc and libpthread: make sure you install a new kernel!

ok semarie@@
@
text
@d1 2
a2 2
major=20
minor=1
@


1.20
log
@Merge the sigaction() and sigprocmask() overloads/wrappers from libpthread
into libc, and move pthread_sigmask() as well (just a trivial wrapper).
This provides consistent handling of SIGTHR between single- and multi-threaded
programs and is a step in the merge of all the libpthread overloads, providing
some ASM and Makefile bits that the other wrappers will need.

ok deraadt@@ millert@@
@
text
@d2 1
a2 1
minor=0
@


1.19
log
@Make pthread_atfork() track the DSO that called it like atexit() does,
unregistering callbacks if the DSO is unloaded.  Move the callback
handling from libpthread to libc, though libpthread still overrides the
inner call to handle locking and thread-library reinitialization.
Major version bump for both libc and libpthread.

verification that this fixes various ports ajacoutot@@
asm assistance miod@@; ok millert@@ deraadt@@
@
text
@d1 1
a1 1
major=19
@


1.18
log
@accept4() should be a cancellation point.
Update the list in the pthread_testcancel(3) manpage: several were missing.

noted by miod@@
@
text
@d1 2
a2 2
major=18
minor=1
@


1.17
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d2 1
a2 1
minor=0
@


1.16
log
@Add support for the _POSIX_CPUTIME and _POSIX_THREAD_CPUTIME options,
including CLOCK_{PROCESS,THREAD}_CPUTIME_ID constants and
{clock,pthread}_getcpuclockid() functions.

Worked out at t2k13 with help from tedu@@ and matthew@@ and testing by aja@@
ok matthew@@
@
text
@d1 2
a2 2
major=17
minor=3
@


1.15
log
@Add utrace(2), a system call allowing for userland to send its own ktrace
records. From FreeBSD via otto@@, with tweaks suggested by guenther@@.
Commite on behalf of otto@@ who is not around, to ride the libc minor bump.
Causes a librthread minor bump as well (new syscall).
@
text
@d2 1
a2 1
minor=2
@


1.14
log
@Extend P_SIGSUSPEND handling in userret() to properly restore the
sigmask even if there are no pending signals under the temporary
sigmask.

Refactor existing select() and poll() system calls to introduce the
pselect() and ppoll() system calls.

Add rthread wrappers for pselect() and ppoll().  While there, update
cancellation point comments to reflect recent fdatasync() addition.

Minor bumps for libc and librthread due to new symbols.

ok guenther, millert, deraadt, jmc
@
text
@d2 1
a2 1
minor=1
@


1.13
log
@A couple small but long anticipated changes:

  - Link libpthread.so with -znodlopen.  Because libpthread overrides
    the weak symbols in libc, we can't allow it to be dynamically
    loaded or else libc's weak symbols might have already been
    resolved by ld.so.  (Also, major bump because this is technically
    a backwards incompat change in behavior, although dlopen()ing
    libpthread never really worked.)

  - Link libc.so with -nodefaultlibs -lgcc.  This ensures that libc
    doesn't try to link against itself (which ld.so wouldn't like).

  - Change GCC 4 to link shared objects with -lpthread and -lc as
    appropriate, now that there's no issues with doing so.  This means
    that it's no longer necessary to patch software to use -pthread
    instead of -lpthread.  (Ports tree rejoice!)

Also, to preemptively answer this question: No, this does not
eliminate the need for LD_PRELOAD=libpthread.so.  That's a separate
issue that won't be resolved until we eliminate libc's weak symbols.

Discussed extensively on email and icb over the past few months.
ok deraadt
@
text
@d2 1
a2 1
minor=0
@


1.12
log
@__tfork() needs to set the stack address of the new thread in the kernel,
so that it can't get a signal while still running on the parent thread's
stack.  Also, pass in sizeof(struct __tfork) to provide forward compat
when more members are added.  This is an ABI change, so switch syscall
numbers and bump lib majors this time.

ok deraadt@@ matthew@@
@
text
@d1 1
a1 1
major=16
@


1.11
log
@Add pthread spinlock support.

Implementation, documentation and naive regression tests for:
- pthread_spin_init()
- pthread_spin_destroy()
- pthread_spin_lock()
- pthread_spin_trylock()
- pthread_spin_unlock()

Implementation okay guenther@@, documentation okay jmc@@.
@
text
@d1 2
a2 2
major=15
minor=2
@


1.10
log
@Minor bump after my previous commit. Noticed by deraadt@@.
@
text
@d2 1
a2 1
minor=1
@


1.9
log
@bump majors on libc and rthreads for the additions to libc and transfer
of __tfork_thread from rthreads to libc
@
text
@d2 1
a2 1
minor=0
@


1.8
log
@Bump minor for recent additions
@
text
@d1 2
a2 2
major=14
minor=1
@


1.7
log
@Bump major to be current libpthread major +1, so we can switch over cleanly.
If we have to revert to user-space threads, we'll do another major bump of
libpthread going back
@
text
@d2 1
a2 1
minor=0
@


1.6
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d1 1
a1 1
major=5
@


1.5
log
@New functions: bump the minor
@
text
@d1 2
a2 2
major=4
minor=1
@


1.4
log
@This might not be necessary, but Just In Case: since the underlying
syscall ABI has changed and everything is going to need to be relinked
anyway, bump the rthread major
@
text
@d2 1
a2 1
minor=0
@


1.3
log
@- bump the majors of libpthread and librthread, as they used to return an
aliased ENOTSUP. i should've done this earlier, but missed it. my bad.

as discussed with deraadt@@ guenther@@
@
text
@d1 1
a1 1
major=3
@


1.2
log
@remove _MALLOC_LOCK_INIT; major bump; ok deraadt@@
@
text
@d1 1
a1 1
major=2
@


1.1
log
@can't build shared lib without shlib_version
Maxim Bourmistrov noticed.
@
text
@d1 1
a1 1
major=1
@

