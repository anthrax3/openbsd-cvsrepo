head	1.17;
access;
symbols
	OPENBSD_4_8:1.16.0.30
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.26
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.28
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.24
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.22
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.20
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.18
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.16.0.16
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.14
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.12
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.10
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.15.0.8
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.6
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.4
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.15.0.2
	OPENBSD_3_0_BASE:1.15;
locks; strict;
comment	@ * @;


1.17
date	2010.10.17.08.45.17;	author djm;	state dead;
branches;
next	1.16;

1.16
date	2003.04.04.00.50.56;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.02.15.09.35;	author rees;	state Exp;
branches;
next	1.14;

1.14
date	2001.07.27.21.55.36;	author jakob;	state Exp;
branches;
next	1.13;

1.13
date	2001.07.26.22.15.04;	author rees;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.20.15.51.45;	author rees;	state Exp;
branches;
next	1.11;

1.11
date	2001.07.02.20.07.09;	author rees;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.28.21.27.54;	author rees;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.27.22.33.36;	author rees;	state Exp;
branches;
next	1.8;

1.8
date	2001.06.26.23.25.12;	author rees;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.26.21.32.47;	author rees;	state Exp;
branches;
next	1.6;

1.6
date	2001.06.25.23.14.29;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.25.20.03.26;	author rees;	state Exp;
branches;
next	1.4;

1.4
date	2001.06.25.19.59.38;	author rees;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.08.15.04.05;	author rees;	state Exp;
branches;
next	1.2;

1.2
date	2001.06.07.20.19.43;	author rees;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.07.15.17.33;	author rees;	state Exp;
branches;
next	;


desc
@@


1.17
log
@remove libsectok; it hasn't been updated in years and doesn't work
with the current generation of tokens; ok markus@@ deraadt@@
@
text
@/* $Id: sectok.h,v 1.16 2003/04/04 00:50:56 deraadt Exp $ */

/*
copyright 2001
the regents of the university of michigan
all rights reserved

permission is granted to use, copy, create derivative works 
and redistribute this software and such derivative works 
for any purpose, so long as the name of the university of 
michigan is not used in any advertising or publicity 
pertaining to the use or distribution of this software 
without specific, written prior authorization.  if the 
above copyright notice or any other identification of the 
university of michigan is included in any copy of any 
portion of this software, then the disclaimer below must 
also be included.

this software is provided as is, without representation 
from the university of michigan as to its fitness for any 
purpose, and without warranty by the university of 
michigan of any kind, either express or implied, including 
without limitation the implied warranties of 
merchantability and fitness for a particular purpose. the 
regents of the university of michigan shall not be liable 
for any damages, including special, indirect, incidental, or 
consequential damages, with respect to any claim arising 
out of or in connection with the use of the software, even 
if it has been or is hereafter advised of the possibility of 
such damages.
*/

/* Open flags */
#define STONOWAIT	0x1	/* don't wait for card present */
#define STOHUP		0x4	/* send signal on card removal */

/* Reset flags */
#define STRV		0x1	/* be verbose */
#define STRLEN		0x2	/* determine length by examing atr */
#define STRFORCE	0x8	/* Talk to card even if atr is bad */

/* Errors */
#define STEOK		0x9000
#define STENOTTY	0x0601	/* no such tty */
#define STENOMEM	0x0602	/* malloc (or similar) failed */
#define STTIMEO		0x0603	/* time out */
#define STESLAG		0x0604	/* slag (no atr) */
#define STENOSUPP	0x0605	/* card type not supported */
#define STENOCARD	0x0606	/* no card in reader */
#define STENOIMPL	0x0607
#define STEDRVR 	0x0608
#define STECOMM 	0x0609
#define STECLOSED	0x060a
#define STECNFFILES     0x060c      /* both config path and driver path are
				   specified.  thus conflict. */
#define STEUNKNOWN	0x060d
#define STENOFILE	0x6a82

/* Useful macros */
#define sectok_r1(sw) (((sw) >> 8) & 0xff)
#define sectok_r2(sw) ((sw) & 0xff)
#define sectok_mksw(r1, r2) (((r1) << 8) | (r2))
#define sectok_swOK(sw) (sectok_r1(sw) == 0x90 || sectok_r1(sw) == 0x61)

struct scparam {
    int t, etu, cwt, bwt, n;
};

extern unsigned char root_fid[];

/* Common card functions */
int sectok_open(int rn, int flags, int *swp);
int sectok_friendly_open(const char *rn, int flags, int *swp);
int sectok_xopen(int rn, int flags, char *config_path, char *driver_path, int *swp);
int sectok_reset(int fd, int flags, unsigned char *atr, int *swp);
int sectok_apdu(int fd, int cla, int ins, int p1, int p2,
		int ilen, unsigned char *ibuf, int olen, unsigned char *obuf, int *swp);
int sectok_cardpresent(int fd);
int sectok_close(int fd);
int sectok_selectfile(int fd, int cla, unsigned char *fid, int *swp);

/* Convenience functions */
void sectok_fmt_fid(char *fname, size_t fnamelen, unsigned char *fid);
int sectok_parse_atr(int fd, int flags, unsigned char *atr, int len, struct scparam *param);
void sectok_parse_fname(char *buf, unsigned char *fid);
int sectok_parse_input(char *ibuf, unsigned char *obuf, int olen);
#ifndef __palmos__
int sectok_get_input(FILE *f, unsigned char *obuf, int omin, int olen);
int sectok_fdump_reply(FILE *f, unsigned char *p, int n, int sw);
#endif
int sectok_dump_reply(unsigned char *p, int n, int sw);
void sectok_print_sw(int sw);
char *sectok_get_sw(int sw);
char *sectok_get_ins(int ins);

/* Cyberflex functions */
int cyberflex_create_file(int fd, int cla, unsigned char *fid, int size, int ftype, int *swp);
int cyberflex_create_file_acl(int fd, int cla, unsigned char *fid, int size, int ftype, unsigned char *acl, int *swp);
int cyberflex_delete_file(int fd, int cla, unsigned char *fid, int *swp);
int cyberflex_load_rsa_pub(int fd, int cla, unsigned char *key_fid,
			   int key_len, unsigned char *key_data, int *swp);
int cyberflex_load_rsa_priv(int fd, int cla, unsigned char *key_fid,
			    int nkey_elems, int key_len, unsigned char *key_elems[],
			    int *swp);
int cyberflex_verify_AUT0(int fd, int cla, unsigned char *aut0, int aut0len);
int cyberflex_inq_class(int fd);
void cyberflex_fill_key_block (unsigned char *dst, int key_num,
			       int alg_num, unsigned char *key);
@


1.16
log
@change sectok_fmt_fid() to accept a size_t for the pathname length;
must crank major, and update utils that use it
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.15 2001/08/02 15:09:35 rees Exp $ */
@


1.15
log
@add Palm version of sectok_dump_reply()
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.3 2001/08/01 21:51:52 rees Exp $ */
d83 1
a83 1
void sectok_fmt_fid(char *fname, unsigned char *fid);
@


1.14
log
@add sectok_friendly_open() - like sectok_open() but accepts
the reader as a string instead of an integer. ok rees@@
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.13 2001/07/26 22:15:04 rees Exp $ */
d90 1
a91 1
#endif
@


1.13
log
@sectok_fmt_fid now takes a proper fid
add cyberflex_create_file_acl
put proper acls on public and private rsa key files
bump major version
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.12 2001/07/20 15:51:45 rees Exp $ */
d73 1
@


1.12
log
@parse_atr -> sectok_parse_atr
remove sc7816.h from installed includes
move struct scparam to sectok.h
lookup_cmdname -> sectok_get_ins
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.11 2001/07/02 20:07:09 rees Exp $ */
d82 1
a82 1
void sectok_fmt_fid(char *fname, int f0, int f1);
d97 1
@


1.11
log
@separate sectok from sc7816 and give each its own include file
change status word to a single word instead of two bytes
add sc7816 layer for backward compatibility
other minor changes
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.9 2001/06/27 22:33:36 rees Exp $ */
d38 1
d65 4
d83 1
@


1.10
log
@remove printfs and add return codes
@
text
@d4 1
a4 1
copyright 1997, 2000
d33 3
a35 14
/* SCPERF - performance evaluation */
#ifdef SCPERF
#include <stdlib.h>
#include <sys/types.h>
#include <sys/time.h>
#endif /* SCPERF */

/* open flags */
#define SCODSR		0x1	/* wait for dsr */
#define SCODCD		0x2	/* wait for dcd */
#define SCOHUP		0x4	/* send signal on card removal */
#define SCOXCTS		0x8	/* wait for no cts (todos reader) */
#define SCOXDTR		0x10	/* invert dtr (todos reader) */
#define SCOINVRT	0x20	/* inverse convention */
d38 16
a53 19
#define SCRV	0x1	/* be verbose */
#define SCRLEN	0x2	/* determine length by examing atr */
#define SCRTODOS 0x4	/* Todos reader */
#define SCRFORCE 0x8	/* Talk to card even if atr is bad */

/* error codes */
#define SCEOK		0
#define SCENOTTY	1	/* no such tty */
#define SCENOMEM	2	/* malloc (or similar) failed */
#define SCTIMEO		3	/* time out */
#define SCESLAG		4	/* slag (no atr) */
#define SCENOSUPP	5	/* card type not supported */
#define SCENOCARD	6	/* no card in reader */
#define SCENOIMPL	7
#define SCEDRVR 	8
#define SCECOMM 	9
#define SCECLOSED	10
#define SCENOFILE       11      /* wrong config path or driver path */
#define SCECNFFILES     12      /* both config path and driver path are
d55 2
a56 1
#define SCEUNKNOWN	13
d58 5
a62 11
/* Extra tags for things they forgot to put in the ifd interface */
#define SCTAG_IFD_ATRLEN 0x6601
#define SCTAG_IFD_CARDPRESENT 0x301
#define SCTAG_OPEN_FLAGS  0x800
#define SCTAG_RESET_FLAGS 0x801

extern char *scerrtab[];

extern struct scparam {
    int t, etu, cwt, bwt, n;
} scparam[];
d66 9
a74 1
/* forward declarations */
d76 4
a79 24
int scopen(int ttyn, int flags, int *ep);
int scxopen(int ttyn, int flags, int *ep,
	char *config_path, char *driver_path); 
int scsetflags(int ttyn, int flags, int mask);
int scrw(int ttyn, int cla, int ins, int p1, int p2, int ilen, unsigned char *ibuf, int olen, unsigned char *obuf, int *sw1p, int *sw2p);
int scread(int ttyn, int cla, int ins, int p1, int p2, int p3, unsigned char *buf, int *sw1p, int *sw2p);
int scwrite(int ttyn, int cla, int ins, int p1, int p2, int p3, unsigned char *buf, int *sw1p, int *sw2p);
int sccardpresent(int ttyn);
int scdsr(int ttyn);
int scclose(int ttyn);
int screset(int ttyn, unsigned char *atr, int *ep);
int scxreset(int ttyn, int flags, unsigned char *atr, int *ep);
int scdtr(int ttyn, int cmd);
int scgetc(int ttyn, unsigned char *cp, int ms);
int scputc(int ttyn, int ic);
int scgetblk(int ttyn, unsigned char *bp, int n, int bwt, int cwt);
int scputblk(int ttyn, unsigned char *bp, int n);
void scsleep(int ms);
void scdrain(int ttyn);
int scioT1(int ttyn, int cla, int ins, int p1, int p2, int ilen, unsigned char *ibuf, int olen, unsigned char *obuf, int *sw1p, int *sw2p);
int scioT1Iblk(int ttyn, int ilen, unsigned char *ibuf, unsigned char *obuf);
int scioT1pkt(int ttyn, unsigned char *ibuf, unsigned char *obuf);
int parse_atr(int ttyn, int flags, unsigned char *atr, int len, struct scparam *param);
int parse_input(char *ibuf, unsigned char *obuf, int olen);
d81 3
a83 3
int get_input(FILE *f, unsigned char *obuf, int omin, int olen);
int fdump_reply(FILE *f, unsigned char *p, int n, int r1, int r2);
int dump_reply(unsigned char *p, int n, int r1, int r2);
d85 7
a91 14
void print_r1r2(int r1, int r2);
char *get_r1r2s(int r1, int r2);
char *scr1r2s(int r1, int r2);
char *lookup_cmdname(int ins);

/* Common card routines */
void sectok_fmt_fid(char *fname, int f0, int f1);
int sectok_selectfile(int fd, int cla, unsigned char *fid, int *r1p, int *r2p);
void sectok_parse_fname(char *buf, unsigned char *fid);

/* Cyberflex */
int cyberflex_create_file(int fd, int cla, unsigned char *fid, int size, int ftype,
			  int *r1p, int *r2p);
int cyberflex_delete_file(int fd, int cla, int f0, int f1, int *r1p, int *r2p);
d93 1
a93 1
			   int key_len, unsigned char *key_data, int *r1p, int *r2p);
d95 2
a96 2
			    int nkey_elems, int keylen, unsigned char *key_elems[],
			    int *r1p, int *r2p);
a100 70

/* SCPERF - performance evaluation */
#ifdef SCPERF
#ifdef SCPERF_FIRST_APPEARANCE

#define MAX_EVENTS 1024

struct timeval perf_tv[MAX_EVENTS];
char *perf_buf[MAX_EVENTS];
int perf_num = 0; 

void print_time ()
{
    int i;

    for (i = 0 ; i < perf_num ; i ++ ) {
	printf ("%ld.%06ld: %s\n",
		perf_tv[i].tv_sec, perf_tv[i].tv_usec, perf_buf[i]);
    }
    return; 
}

#define SetTime(x) \
  gettimeofday(&(perf_tv[perf_num]), NULL); \
  perf_buf[perf_num] = x; \
  perf_num++; \
  if (perf_num >= MAX_EVENTS) {\
    fprintf (stderr, "SetTime overflow %d\n", MAX_EVENTS); \
    exit (1); \
  }

#else /* !SCPERF_FIRST_APPEARANCE */
extern struct timeval perf_tv[];
extern char *perf_buf[];
extern int perf_num;

#define MAX_EVENTS 1024

#define SetTime(x) \
  gettimeofday(&(perf_tv[perf_num]), NULL); \
  perf_buf[perf_num] = x; \
  perf_num++; \
  if (perf_num >= MAX_EVENTS) {\
    fprintf (stderr, "SetTime overflow %d\n", MAX_EVENTS); \
    exit (1); \
  }
#endif /* SCPERF_FIRST_APPEARANCE */
void print_time (); 
#else /* !SCPERF */
#define SetTime(x)
#define print_time() ;
#endif /* SCPERF */

/* macros */
#ifdef SCFS
#define ADEBMISC        0x00000001	/* misc debugging */
#define MESSAGE1(x) arla_warnx (ADEBMISC,x)
#define MESSAGE2(x,y) arla_warnx (ADEBMISC,x,y)
#define MESSAGE3(x,y,z) arla_warnx (ADEBMISC,x,y,z)
#define MESSAGE4(x,y,z,u) arla_warnx (ADEBMISC,x,y,z,u)
#define MESSAGE5(x,y,z,u,v) arla_warnx (ADEBMISC,x,y,z,u,v)
#define MESSAGE6(x,y,z,u,v,w) arla_warnx (ADEBMISC,x,y,z,u,v,w)
#else 
#define MESSAGE1(x) fprintf(stderr,x)
#define MESSAGE2(x,y) fprintf(stderr,x,y)
#define MESSAGE3(x,y,z) fprintf(stderr,x,y,z)
#define MESSAGE4(x,y,z,u) fprintf(stderr,x,y,z,u)
#define MESSAGE5(x,y,z,u,v) fprintf(stderr,x,y,z,u,v)
#define MESSAGE6(x,y,z,u,v,w) fprintf(stderr,x,y,z,u,v,w)
#endif /* SCFS */
@


1.9
log
@add cyberflex_fill_key_block, root_fid
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.8 2001/06/26 23:25:12 rees Exp $ */
d123 1
a123 1
int sectok_selectfile(int fd, int cla, unsigned char *fid, int verbose);
d127 3
a129 2
int cyberflex_create_file(int fd, int cla, unsigned char *fid, int size);
int cyberflex_delete_file(int fd, int cla, int f0, int f1, int verbose);
d131 1
a131 1
			   int key_len, unsigned char *key_data);
d133 2
a134 1
			    int nkey_elems, int keylen, unsigned char *key_elems[]);
@


1.8
log
@add sectok_parse_fname()
add cyberflex_create_file()
add cyberflex_delete_file()
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.7 2001/06/26 21:32:47 rees Exp $ */
d83 2
d135 2
@


1.7
log
@add cyberflex_inq_class()
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.6 2001/06/25 23:14:29 markus Exp $ */
d122 1
d125 2
@


1.6
log
@add cyberflex_verify_AUT0()
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.5 2001/06/25 20:03:26 rees Exp $ */
d129 1
@


1.5
log
@add Cyberflex public key loading function
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.4 2001/06/25 19:59:38 rees Exp $ */
d128 1
@


1.4
log
@add key Cyberflex key loading functions
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.2 2001/06/08 14:51:12 rees Exp rees $ */
d124 4
a127 1
int cyberflex_load_rsa_priv(int fd, int cla, unsigned char *key_fid, int nkey_elems, int keylen, unsigned char *key_elems[]);
@


1.3
log
@Move copyright notice to top of file
@
text
@d1 1
a1 1
/* $Id: sectok.h,v 1.2 2001/06/08 14:51:12 rees Exp $ */
d118 7
@


1.2
log
@import latest from CITI with Palm support
@
text
@d1 2
d4 28
a31 4
 * See copyright notice at end of file
 *
 * $Id: sectok.h,v 1.1 2001/06/06 21:51:09 rees Exp $
 */
d134 1
a134 1
	printf ("%d.%06d: %s\n",
a187 30

/*
copyright 1997, 2000
the regents of the university of michigan
all rights reserved

permission is granted to use, copy, create derivative works 
and redistribute this software and such derivative works 
for any purpose, so long as the name of the university of 
michigan is not used in any advertising or publicity 
pertaining to the use or distribution of this software 
without specific, written prior authorization.  if the 
above copyright notice or any other identification of the 
university of michigan is included in any copy of any 
portion of this software, then the disclaimer below must 
also be included.

this software is provided as is, without representation 
from the university of michigan as to its fitness for any 
purpose, and without warranty by the university of 
michigan of any kind, either express or implied, including 
without limitation the implied warranties of 
merchantability and fitness for a particular purpose. the 
regents of the university of michigan shall not be liable 
for any damages, including special, indirect, incidental, or 
consequential damages, with respect to any claim arising 
out of or in connection with the use of the software, even 
if it has been or is hereafter advised of the possibility of 
such damages.
*/
@


1.1
log
@libsectok for secure tokens (smartcard, iButton, etc)
@
text
@d4 1
a4 1
 * $Id: sectok.h,v 1.1 2001/05/22 15:35:58 rees Exp $
@

