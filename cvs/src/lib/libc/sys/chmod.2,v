head	1.28;
access;
symbols
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.28.0.8
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.27.0.6
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.25.0.6
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.19.0.6
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.4
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.2
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.12
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.10
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.8
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.6
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.28
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	PeV7Ql0T6htfMjhP;

1.27
date	2015.01.19.15.54.11;	author millert;	state Exp;
branches;
next	1.26;
commitid	nJ2wjGsUe8RwMTRS;

1.26
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	sADK4BTCz4ZrHHo9;

1.25
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.11.19.23.39;	author espie;	state Exp;
branches;
next	1.23;

1.23
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2013.04.01.20.16.31;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2013.03.31.05.07.55;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2013.03.30.06.44.44;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2011.11.07.11.24.30;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2011.10.24.19.31.56;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.19.20.58.05;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.19.20.51.38;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.15.19.52.18;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.12.20.09.09.46;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.18.05.12.08;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.15.11.46.02;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.29.14.09.51;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.23.14.10.50;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.16.19.55.20;	author alex;	state Exp;
branches;
next	1.5;

1.5
date	99.02.27.21.56.09;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.11.18.07.10.08;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.11.17.06.00.50;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.11.17.05.47.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.24;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: chmod.2,v 1.27 2015/01/19 15:54:11 millert Exp $
.\"	$NetBSD: chmod.2,v 1.7 1995/02/27 12:32:06 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)chmod.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: January 19 2015 $
.Dt CHMOD 2
.Os
.Sh NAME
.Nm chmod ,
.Nm fchmodat ,
.Nm fchmod
.Nd change mode of file
.Sh SYNOPSIS
.In sys/stat.h
.Ft int
.Fn chmod "const char *path" "mode_t mode"
.Ft int
.Fn fchmod "int fd" "mode_t mode"
.In sys/stat.h
.In fcntl.h
.Ft int
.Fn fchmodat "int fd" "const char *path" "mode_t mode" "int flag"
.Sh DESCRIPTION
The
.Fn chmod
function sets the file permission bits of the file specified by the pathname
.Fa path
to
.Fa mode .
.Fn chmod
verifies that the process owner (user) either owns the specified file
or is the superuser.
.Pp
The
.Fa mode
argument is the bitwise OR of zero or more of the permission bit masks
from the following list:
.Bd -literal -offset indent
#define S_IRWXU 0000700    /* RWX mask for owner */
#define S_IRUSR 0000400    /* R for owner */
#define S_IWUSR 0000200    /* W for owner */
#define S_IXUSR 0000100    /* X for owner */

#define S_IRWXG 0000070    /* RWX mask for group */
#define S_IRGRP 0000040    /* R for group */
#define S_IWGRP 0000020    /* W for group */
#define S_IXGRP 0000010    /* X for group */

#define S_IRWXO 0000007    /* RWX mask for other */
#define S_IROTH 0000004    /* R for other */
#define S_IWOTH 0000002    /* W for other */
#define S_IXOTH 0000001    /* X for other */

#define S_ISUID 0004000    /* set user id on execution */
#define S_ISGID 0002000    /* set group id on execution */
#define S_ISVTX 0001000    /* save swapped text even after use */
.Ed
.Pp
If mode
.Dv ISVTX
(the
.Em sticky bit )
is set on a file, it is ignored.
.Pp
If mode
.Dv ISVTX
(the
.Em sticky bit )
is set on a directory, an unprivileged user may not delete or rename
files of other users in that directory.
The sticky bit may be set by any user on a directory which the user owns
or has appropriate permissions.
For more details of the properties of the sticky bit, see
.Xr sticky 8 .
.Pp
Writing or changing the owner of a file turns off the set-user-ID and
set-group-ID bits unless the user is the superuser.
This makes the system somewhat more secure by protecting
set-user-ID (set-group-ID) files from remaining set-user-ID (set-group-ID)
if they are modified, at the expense of a degree of compatibility.
.Pp
The
.Fn fchmodat
function is equivalent to
.Fn chmod
except in the case where
.Fa path
specifies a relative path.
In this case the file to be changed is determined relative to the directory
associated with the file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn fchmodat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used.
If
.Fa flag
is also zero, the behavior is identical to a call to
.Fn chmod .
.Pp
The
.Fa flag
argument is the bitwise OR of zero or more of the following values:
.Pp
.Bl -tag -width AT_SYMLINK_NOFOLLOW -offset indent -compact
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, then the mode of the symbolic link is changed.
.El
.Pp
The
.Fn fchmod
function is equivalent to
.Fn chmod
except that the file whose permissions are changed is specified
by the file descriptor
.Fa fd .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn chmod
and
.Fn fchmodat
functions will fail and the file mode will be unchanged if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EINVAL
.Fa mode
contains bits other than the file type and those described above.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the superuser.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
.Fa path
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
Additionally, the
.Fn fchmodat
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Fa flag
argument was neither zero nor
.Dv AT_SYMLINK_NOFOLLOW .
.It Bq Er EBADF
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EOPNOTSUPP
The
.Fa flag
argument specifies
.Dv AT_SYMLINK_NOFOLLOW
on a symbolic link and the file system does not support that operation.
.It Bq Er EACCES
The
.Fa path
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Pp
.Fn fchmod
will fail and the file mode will be unchanged if:
.Bl -tag -width Er
.It Bq Er EBADF
The descriptor is not valid.
.It Bq Er EINVAL
.Fa fd
refers to a socket, not to a file.
.It Bq Er EINVAL
.Fa mode
contains bits other than the file type and those described above.
.It Bq Er EPERM
The effective user ID does not match the owner of the file and
the effective user ID is not the superuser.
.It Bq Er EROFS
The file resides on a read-only file system.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr chmod 1 ,
.Xr chown 2 ,
.Xr open 2 ,
.Xr stat 2 ,
.Xr sticky 8
.Sh STANDARDS
The
.Fn chmod ,
.Fn fchmod ,
and
.Fn fchmodat
functions are expected to conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn chmod
system call first appeared in
.At v1 ;
.Fn fchmod
in
.Bx 4.1c ;
and
.Fn fchmodat
has been available since
.Ox 5.0 .
@


1.27
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.26 2014/12/10 19:19:00 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 10 2014 $
d42 1
a42 1
.Fd #include <sys/stat.h>
d47 2
a48 2
.Fd #include <sys/stat.h>
.Fd #include <fcntl.h>
@


1.26
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.25 2014/02/13 07:30:39 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: February 13 2014 $
d167 5
a171 4
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
@


1.25
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.24 2014/01/11 19:23:39 espie Exp $
d33 1
a33 1
.Dd $Mdocdate: January 11 2014 $
d155 1
a155 4
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
@


1.24
log
@fchownat is allowed to return EOPNOTSUPP
okay guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.23 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d62 1
a62 1
Values for
d64 2
a65 4
are constructed by bitwise-inclusive
.Tn OR Ns ing
permission bit masks from the following list defined in
.In sys/stat.h :
d136 1
a136 1
Values for
d138 1
a138 4
are constructed by bitwise-inclusive
.Tn OR Ns ing
flags from the following list defined in
.In fcntl.h :
@


1.23
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.22 2013/04/01 20:16:31 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 1 2013 $
d223 6
@


1.22
log
@When there are multiple groups of functions with their own #includes
listed, the #includes in each group are independent, so that users
don't need to guess at possible carry-over.

general idea ok otto@@ millert@@
actual diff ok jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.21 2013/03/31 05:07:55 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d272 1
a272 1
.Bx 4.2 ;
@


1.21
log
@Use consistent wording for the EINVAL, EBADF, ENOTDIR, and EACCES cases
of the various *at() functions.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.20 2013/03/30 06:44:44 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 30 2013 $
d47 1
@


1.20
log
@Various updates, mostly to SYNOPSIS, ERRORS, and STANDARDS, but
some other fixes included...

*at() function ERRORS description suggested by matthew@@

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.19 2011/11/07 11:24:30 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 7 2011 $
d203 5
@


1.19
log
@More .At v1 HISTORY.
All information from http://minnie.tuhs.org/cgi-bin/utree.pl .
All facts checked by sobrado@@.
Feedback and ok on an earlier version jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.18 2011/10/24 19:31:56 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: October 24 2011 $
a41 1
.Fd #include <sys/types.h>
a42 1
.Fd #include <fcntl.h>
d46 3
a49 2
.Ft int
.Fn fchmod "int fd" "mode_t mode"
d206 1
a206 1
argument does not specify an absolute path and the
d210 14
a223 1
nor a valid file descriptor open for reading.
@


1.18
log
@Update POSIX references for chdir(2) and chmod(2) from 1988 to 2008.
Add POSIX references for fchdir(2), fchmod(2), fchmodat(2),
fchown(2), lchown(2) and execve(2).
State that fchmod(2) can return EPERM as required by POSIX 2008 (tested).

Requested by sobrado@@; ok guenther@@ jmc@@ sobrado@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.17 2011/07/19 20:58:05 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 19 2011 $
d249 3
d253 6
a258 2
function call appeared in
.Bx 4.2 .
@


1.17
log
@Change "constructed by bitwise-inclusive OR'ing of flags from ..." to
"constructed by bitwise-inclusive ORing flags from ..."

Requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.16 2011/07/19 20:51:38 matthew Exp $
d225 3
d241 6
a246 3
.Fn chmod
function is expected to conform to
.St -p1003.1-88 .
@


1.16
log
@Change "If also flag is zero" to "If flag is also zero".

Requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.15 2011/07/18 23:04:40 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 18 2011 $
d65 2
a66 2
.Tn OR Ns 'ing
of permission bit masks from the following list defined in
d141 2
a142 2
.Tn OR Ns 'ing
of flags from the following list defined in
@


1.15
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.14 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d133 1
a133 1
If also
d135 1
a135 1
is zero, the behavior is identical to a call to
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.13 2004/04/15 19:52:18 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d38 1
d44 1
d48 2
d52 1
a52 1
The function
d54 1
a54 1
sets the file permission bits of the file specified by the pathname
a57 3
.Fn fchmod
sets the permission bits of the specified file descriptor
.Fa fd .
d59 1
a59 4
verifies that the process owner (user) either owns the file specified by
.Fa path
(or
.Fa fd ) ,
d61 7
a67 4
A mode is created from
.Em or'd
permission bit masks defined in
.Aq Pa sys/stat.h :
d111 48
d165 1
d167 3
a169 1
will fail and the file mode will be unchanged if:
d198 14
@


1.13
log
@various improvements to lists and displays:

.Pp removal
-compact removal for displays
other list/display errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.12 2003/12/20 09:09:46 jmc Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.12
log
@update sticky: note that setting the sticky bit on files is still possible,
but has no effect. Retain description of sticky files, but note that it is
historical.

Add small description of how current system works. Improve description of
sticky directories. Remove references to ld(1).

Remove no longer relevant BUG.

much assistance and ok otto@@ and tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.11 2003/06/02 20:18:39 millert Exp $
d67 1
a67 2
.Pp
.Bd -literal -offset indent -compact
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.10 2000/10/18 05:12:08 aaron Exp $
d89 1
a89 1
The
d93 1
a93 4
indicates to the system which executable files are shareable (the
default) and the system maintains the program text of the files
in the swap area.
The sticky bit may only be set by the superuser on shareable executable files.
d98 1
a98 1
.Dq sticky bit )
@


1.10
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.9 2000/04/15 11:46:02 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.8 1999/06/29 14:09:51 aaron Exp $
d54 1
a54 3
sets the file permission bits
of the file
specified by the pathname
d59 1
a59 2
sets the permission bits of the specified
file descriptor
d62 1
a62 2
verifies that the process owner (user) either owns
the file specified by
d66 1
a66 2
or
is the superuser.
d69 1
a69 2
permission bit masks
defined in
d99 2
a100 2
in the swap area. The sticky bit may only be set by the super user
on shareable executable files.
d104 6
a109 5
(the `sticky bit') is set on a directory,
an unprivileged user may not delete or rename
files of other users in that directory. The sticky bit may be
set by any user on a directory which the user owns or has appropriate
permissions.
d113 5
a117 7
Writing or changing the owner of a file
turns off the set-user-ID and set-group-ID bits
unless the user is the superuser.
This makes the system somewhat more secure
by protecting set-user-ID (set-group-ID) files
from remaining set-user-ID (set-group-ID) if they are modified,
at the expense of a degree of compatibility.
d186 1
a186 2
function call
appeared in
@


1.8
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.7 1999/05/23 14:10:50 aaron Exp $
d71 1
a71 1
is the super-user.
d119 2
a120 2
turns off the set-user-id and set-group-id bits
unless the user is the super-user.
d122 2
a123 2
by protecting set-user-id (set-group-id) files
from remaining set-user-id (set-group-id) if they are modified,
d153 1
a153 1
the effective user ID is not the super-user.
@


1.7
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.6 1999/05/16 19:55:20 alex Exp $
d127 1
a127 1
Otherwise, a value of -1 is returned and
d137 1
a137 1
A component of a pathname exceeded 
d139 1
a139 1
characters, or an entire path name exceeded 
d188 1
a188 1
function is expected to conform to 
@


1.6
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.5 1999/02/27 21:56:09 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.5
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: chmod.2,v 1.4 1997/11/18 07:10:08 millert Exp $
d181 1
a182 1
.Xr chown 2 ,
@


1.4
log
@clarify EINVAL
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d60 1
a60 1
.Fn Fchmod
d64 1
a64 1
.Fn Chmod
d131 1
a131 1
.Fn Chmod
d157 1
a157 1
.Fa Path
d163 1
a163 1
.Fn Fchmod
d169 1
a169 1
.Fa Fd
@


1.3
log
@make chmod() and fchmod() return EINVAL for bad mode bits
@
text
@d1 1
d146 3
d164 1
a164 1
will fail if:
d173 1
a173 1
is not valid, ie. contains extra bits.
@


1.2
log
@blank line
@
text
@d167 3
@


1.1
log
@Initial revision
@
text
@d76 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
