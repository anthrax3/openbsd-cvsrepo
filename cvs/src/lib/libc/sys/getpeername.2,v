head	1.26;
access;
symbols
	OPENBSD_6_1:1.26.0.6
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.26.0.4
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.25.0.12
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.4
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.25.0.8
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.6
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.25.0.2
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.24.0.12
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.10
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.8
	OPENBSD_5_0:1.24.0.6
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.4
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.24.0.2
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.22.0.10
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.12
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.6
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.2
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.20.0.10
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.20.0.8
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.20.0.6
	OPENBSD_3_6_BASE:1.20
	OPENBSD_3_5:1.20.0.4
	OPENBSD_3_5_BASE:1.20
	OPENBSD_3_4:1.20.0.2
	OPENBSD_3_4_BASE:1.20
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.16.0.6
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.16.0.4
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.14.0.4
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.14.0.2
	OPENBSD_2_8_BASE:1.14
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.26
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	PeV7Ql0T6htfMjhP;

1.25
date	2013.03.31.22.11.26;	author guenther;	state Exp;
branches;
next	1.24;

1.24
date	2010.07.01.20.48.37;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2010.07.01.19.15.30;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.10.19.18.27.05;	author jaredy;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.20.04.15.47;	author pjanzen;	state Exp;
branches;
next	1.18;

1.18
date	2003.03.18.00.55.50;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2003.02.21.09.14.37;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2001.06.26.19.56.52;	author dugsong;	state Exp;
branches;
next	1.15;

1.15
date	2001.06.25.00.13.22;	author pjanzen;	state Exp;
branches;
next	1.14;

1.14
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.01.22.12.00.42;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.07.21.07.18.26;	author kjell;	state Exp;
branches;
next	1.11;

1.11
date	99.07.21.05.39.55;	author kjell;	state Exp;
branches;
next	1.10;

1.10
date	99.06.29.14.10.00;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.10.51;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.26;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.21;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	99.02.15.21.48.57;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	99.02.15.19.04.20;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.06.18.27.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.06.08.17.23.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.21.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.26
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: getpeername.2,v 1.25 2013/03/31 22:11:26 guenther Exp $
.\"	$NetBSD: getpeername.2,v 1.6 1995/10/12 15:40:56 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)getpeername.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: March 31 2013 $
.Dt GETPEERNAME 2
.Os
.Sh NAME
.Nm getpeername
.Nd get name of connected peer
.Sh SYNOPSIS
.In sys/socket.h
.Ft int
.Fn getpeername "int s" "struct sockaddr *name" "socklen_t *namelen"
.Sh DESCRIPTION
.Fn getpeername
returns the address information of the peer connected to socket
.Fa s .
One common use occurs when a process inherits an open socket, such as
TCP servers forked from
.Xr inetd 8 .
In this scenario,
.Fn getpeername
is used to determine the connecting client's IP address.
.Pp
.Fn getpeername
takes three parameters:
.Pp
.Fa s
contains the file descriptor of the socket whose peer should be looked up.
.Pp
.Fa name
points to a
.Li sockaddr
structure that will hold the address information for the connected peer.
Normal use requires one to use a structure
specific to the protocol family in use, such as
.Li sockaddr_in
(IPv4) or
.Li sockaddr_in6
(IPv6), cast to a (struct sockaddr *).
.Pp
For greater portability, especially with the newer protocol families, the new
.Li struct sockaddr_storage
should be used.
.Li sockaddr_storage
is large enough to hold any of the other sockaddr_* variants.
On return, it can be cast to the correct sockaddr type,
based on the protocol family contained in its ss_family field.
.Pp
.Fa namelen
indicates the amount of space pointed to by
.Fa name ,
in bytes.
.Pp
If address information for the local end of the socket is required, the
.Xr getsockname 2
function should be used instead.
.Pp
If
.Fa name
does not point to enough space to hold the entire socket address, the
result will be truncated to
.Fa namelen
bytes.
.Sh RETURN VALUES
If the call succeeds, a 0 is returned and
.Fa namelen
is set to the actual size of the socket address returned in
.Fa name .
Otherwise,
.Va errno
is set and a value of \-1 is returned.
.Sh ERRORS
On failure,
.Va errno
is set to one of the following:
.Bl -tag -width Er
.It Bq Er EBADF
The argument
.Fa s
is not a valid descriptor.
.It Bq Er ENOTSOCK
The argument
.Fa s
is a file, not a socket.
.It Bq Er ENOTCONN
The socket is not connected.
.It Bq Er ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.It Bq Er EFAULT
The
.Fa name
or
.Fa namelen
parameter points to memory not in a valid part of the
process address space.
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr bind 2 ,
.Xr getsockname 2 ,
.Xr socket 2 ,
.Xr getpeereid 3
.Sh STANDARDS
The
.Fn getpeername
function conforms to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn getpeername
function call appeared in
.Bx 4.2 .
@


1.25
log
@More SYNOPSIS, ERRORS, and STANDARDS updates
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.24 2010/07/01 20:48:37 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: July 1 2010 $
d40 1
a40 1
.Fd #include <sys/socket.h>
@


1.24
log
@sort SEE ALSO;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.23 2010/07/01 19:15:30 deraadt Exp $
a39 1
.Fd #include <sys/types.h>
d134 5
@


1.23
log
@getpeereid() can now be a library routine using getsockopt() with
SOL_SOCKET and SO_PEERCRED, only issue being that it cannot return
EFAULT for a page fault.  The kernel code will soon be put into
compat, and then in 10 years or so tedu will delete it.
ok guenther millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.22 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
a131 1
.Xr getpeereid 3 ,
d133 2
a134 1
.Xr socket 2
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.21 2005/10/19 18:27:05 jaredy Exp $
d33 1
a33 1
.Dd $Mdocdate$
d132 1
a132 1
.Xr getpeereid 2 ,
@


1.21
log
@EFAULT corrections; ok millert and otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.20 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd July 17, 1999
@


1.20
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.19 2003/05/20 04:15:47 pjanzen Exp $
d124 2
@


1.19
log
@consistent non-capitalization of words not beginning sentences
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.18 2003/03/18 00:55:50 millert Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.18
log
@Do not capitalize "Indicates" as it does not start the sentence
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.17 2003/02/21 09:14:37 jmc Exp $
d63 1
a63 1
Contains the file descriptor of the socket whose peer should be looked up.
d66 1
a66 1
Points to a
@


1.17
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.16 2001/06/26 19:56:52 dugsong Exp $
d85 1
a85 1
Indicates the amount of space pointed to by
@


1.16
log
@implement djb's getpeereid(2), to allow local-domain servers to determine client credentials. mostly from superscript.com. deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.15 2001/06/25 00:13:22 pjanzen Exp $
d82 1
a82 1
based the protocol family contained in its ss_family field.
d134 1
a135 1
.Xr getpeereid 2 ,
@


1.15
log
@grammar
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.14 2000/10/18 05:12:09 aaron Exp $
d135 1
@


1.14
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.13 2000/01/22 12:00:42 aaron Exp $
d63 1
a63 1
Contains the file descriptor of the socket who's peer should be looked up.
@


1.13
log
@Use .Va macro when referring to the global variable errno.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.12 1999/07/21 07:18:26 kjell Exp $
d50 1
a50 2
returns the address information of the peer connected to
socket
d52 1
a52 2
One common
use occurs when a process inherits an open socket, such as
d66 3
a68 2
Points to a sockaddr structure that will hold the address information
for the connected peer.
d70 5
a74 2
specific to the protocol family in use, such as sockaddr_in (IPv4)
or sockaddr_in6 (IPv6), cast to a (struct sockaddr *).
d77 4
a80 2
struct sockaddr_storage should be used. sockaddr_storage is
large enough to hold any of the other sockaddr_* variants.
@


1.12
log
@Remove PARAMETERS section. Different bad. Kjell bad.
Add references to sockaddr_storage.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.11 1999/07/21 05:39:55 kjell Exp $
d100 3
a102 1
Otherwise, errno is set and a value of \-1 is returned.
d104 3
a106 1
On failure, errno is set to one of the following:
@


1.11
log
@Updated man pages to be useful. Include description of typical uses.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.10 1999/06/29 14:10:00 aaron Exp $
a47 13
.Sh PARAMETERS
.Bl -tag -width namelen
.It s
Contains the file descriptor of the socket who's peer should be looked up.
.It name
Points to a sockaddr structure that will hold the address information
for the connected peer. The format of this socket depends on the protocol family in use. See
.Xr socket 2
for details.
.It namelen
Indicates the amount of space pointed to by
.Fa name ,
in bytes.
d53 7
d62 22
a83 6
is useful in a variety of circumstances. The most common
use occurs when a process inherits an open socket, such as when
.Xr inetd 8
forks and execs a TCP server. In this scenario,
.Fn getpeername
is used to determine the connecting client's IP address.
d85 1
a85 1
If the local socket address is required, the
@


1.10
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.9 1999/05/23 14:10:51 aaron Exp $
d37 1
a37 1
.Dd February 15, 1999
d48 13
d63 1
a63 1
returns the name of the peer connected to
d66 17
a82 1
The
d84 5
a88 2
parameter should be initialized to indicate
the amount of space pointed to by
d90 1
a90 5
On return it contains the actual size of the name
returned (in bytes).
The name is truncated if the buffer provided is too small.
.Sh RETURN VALUES
A 0 is returned if the call succeeds, \-1 if it fails.
d92 1
a92 1
The call succeeds unless:
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.8 1999/05/16 19:55:26 alex Exp $
d62 1
a62 1
A 0 is returned if the call succeeds, -1 if it fails.
d80 1
a80 1
The 
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.7 1999/02/27 21:56:21 deraadt Exp $
d39 1
a39 1
.Os BSD 4.2
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.6 1999/02/15 21:48:57 millert Exp $
d88 2
a89 2
.Xr socket 2 ,
.Xr getsockname 2
@


1.6
log
@must include <sys/types.h> before <sys.socket.h>
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.5 1999/02/15 19:04:20 millert Exp $
d49 1
a49 1
.Fn Getpeername
@


1.5
log
@Use and document socklen_t
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.4 1998/07/06 18:27:32 deraadt Exp $
d44 1
@


1.4
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeername.2,v 1.6 1995/10/12 15:40:56 jtc Exp $
d37 1
a37 1
.Dd June 4, 1993
d46 1
a46 1
.Fn getpeername "int s" "struct sockaddr *name" "int *namelen"
@


1.3
log
@clean; kleink
@
text
@d1 1
@


1.2
log
@from netbsd:
add & fix a bunch of system call pages
@
text
@d59 1
a59 1
.Sh DIAGNOSTICS
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: getpeername.2,v 1.5 1995/02/27 12:33:06 cgd Exp $
d43 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
