head	1.27;
access;
symbols
	OPENBSD_6_1:1.27.0.2
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.26.0.4
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.2
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.25.0.6
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.22.0.8
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.19.0.6
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.4
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.2
	OPENBSD_5_0:1.18.0.18
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.16
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.14
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.10
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.12
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.8
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.8
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.6
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.4
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.2
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.16.0.6
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.4
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.11.0.12
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.10
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.8
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.27
date	2016.10.07.15.48.55;	author tedu;	state Exp;
branches;
next	1.26;
commitid	6763X8nPDQaVA0qz;

1.26
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	PeV7Ql0T6htfMjhP;

1.25
date	2014.12.10.19.30.22;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	Xu2EzSoikVOcLS0E;

1.24
date	2014.11.20.03.19.23;	author tedu;	state Exp;
branches;
next	1.23;
commitid	5lly8ibHfiLJoXrd;

1.23
date	2014.11.20.03.16.32;	author tedu;	state Exp;
branches;
next	1.22;
commitid	7qcEMLl8TDVTlZVd;

1.22
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2013.04.08.05.55.04;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2013.04.08.03.08.38;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2011.11.06.12.07.42;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2005.06.05.19.40.22;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2004.01.25.14.48.32;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.12.12.14.50.07;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.09.04.23.35.47;	author tdeval;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.05.12.14.40.13;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.15.11.46.03;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.29.14.10.00;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.23.14.10.52;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.22;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.07.06.18.27.36;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.07.17.08.52.27;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.13.10.08.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.09.15.03.45.01;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.21.13;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@rss limit is no longer enforced. noticed by Raimo Niskanen
@
text
@.\"	$OpenBSD: getrlimit.2,v 1.26 2015/09/10 17:55:21 schwarze Exp $
.\"	$NetBSD: getrlimit.2,v 1.8 1995/10/12 15:40:58 jtc Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)getrlimit.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt GETRLIMIT 2
.Os
.Sh NAME
.Nm getrlimit ,
.Nm setrlimit
.Nd control maximum system resource consumption
.Sh SYNOPSIS
.In sys/resource.h
.Ft int
.Fn getrlimit "int resource" "struct rlimit *rlp"
.Ft int
.Fn setrlimit "int resource" "const struct rlimit *rlp"
.Sh DESCRIPTION
Limits on the consumption of system resources by the current process
and each process it creates may be obtained with the
.Fn getrlimit
call, and set with the
.Fn setrlimit
call.
.Pp
The
.Fa resource
parameter is one of the following:
.Bl -tag -width RLIMIT_FSIZEAA
.It Li RLIMIT_CORE
The largest size (in bytes)
.Pa core
file that may be created.
.It Li RLIMIT_CPU
The maximum amount of CPU time (in seconds) to be used by
each process.
.It Li RLIMIT_DATA
The maximum size (in bytes) of the data segment for a process;
this includes memory allocated via
.Xr malloc 3
and all other anonymous memory mapped via
.Xr mmap 2 .
.It Li RLIMIT_FSIZE
The largest size (in bytes) file that may be created.
.It Li RLIMIT_MEMLOCK
The maximum size (in bytes) which a process may lock into memory
using the
.Xr mlock 2
function.
.It Li RLIMIT_NOFILE
The maximum number of open files for this process.
.It Li RLIMIT_NPROC
The maximum number of simultaneous processes for this user id.
.It Li RLIMIT_RSS
The maximum size (in bytes) to which a process's resident set size may
grow.
This setting is no longer enforced, but retained for compatibility.
.It Li RLIMIT_STACK
The maximum size (in bytes) of the stack segment for a process,
which defines how far a process's stack segment may be extended.
Stack extension is performed automatically by the system,
and is only used by the main thread of a process.
.El
.Pp
A resource limit is specified as a soft limit and a hard limit.
When a soft limit is exceeded a process may receive a signal (for example,
if the CPU time or file size is exceeded), but it will be allowed to
continue execution until it reaches the hard limit (or modifies
its resource limit).
The
.Em rlimit
structure is used to specify the hard and soft limits on a resource,
.Bd -literal -offset indent
struct rlimit {
	rlim_t	rlim_cur;	/* current (soft) limit */
	rlim_t	rlim_max;	/* hard limit */
};
.Ed
.Pp
Only the superuser may raise the maximum limits.
Other users may only alter
.Fa rlim_cur
within the range from 0 to
.Fa rlim_max
or (irreversibly) lower
.Fa rlim_max .
.Pp
An
.Dq infinite
value for a limit is defined as
.Dv RLIM_INFINITY .
.Pp
A value of
.Dv RLIM_SAVED_CUR
or
.Dv RLIM_SAVED_MAX
will be stored in
.Fa rlim_cur
or
.Fa rlim_max
respectively by
.Fn getrlimit
if the value for the current or maximum resource limit cannot be stored in an
.Li rlim_t .
The values
.Dv RLIM_SAVED_CUR
and
.Dv RLIM_SAVED_MAX
should not be used in a call to
.Fn setrlimit
unless they were returned by a previous call to
.Fn getrlimit .
.Pp
Because this information is stored in the per-process information,
this system call must be executed directly by the shell if it
is to affect all future processes created by the shell;
.Ic limit
is thus a built-in command to
.Xr csh 1
and
.Ic ulimit
is the
.Xr sh 1
equivalent.
.Pp
The system refuses to extend the data or stack space when the limits
would be exceeded in the normal way: a
.Xr brk 2
call fails if the data space limit is reached.
When the stack limit is reached, the process receives
a segmentation fault
.Pq Dv SIGSEGV ;
if this signal is not
caught by a handler using the signal stack, this signal
will kill the process.
.Pp
A file I/O operation that would create a file larger than the process'
soft limit will cause the write to fail and a signal
.Dv SIGXFSZ
to be
generated; this normally terminates the process, but may be caught.
When the soft CPU time limit is exceeded, a signal
.Dv SIGXCPU
is sent to the
offending process.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn getrlimit
and
.Fn setrlimit
will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The address specified for
.Fa rlp
is invalid.
.It Bq Er EINVAL
An unrecognized value for
.Fa resource
was specified.
.El
.Pp
In addition,
.Fn setrlimit
may return the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
The new
.Fa rlim_cur
is greater than the new
.Fa rlim_max .
.It Bq Er EPERM
The new
.Fa rlim_max
is greater than the current maximum limit value,
and the caller is not the superuser.
.El
.Sh SEE ALSO
.Xr csh 1 ,
.Xr sh 1 ,
.Xr quotactl 2 ,
.Xr sigaction 2 ,
.Xr sigaltstack 2 ,
.Xr sysctl 3
.Sh STANDARDS
The
.Fn getrlimit
and
.Fn setrlimit
functions conform to
.St -p1003.1-2008 .
.Pp
The
.Dv RLIMIT_MEMLOCK ,
.Dv RLIMIT_NPROC ,
and
.Dv RLIMIT_RSS
resources are non-standard extensions.
.Sh HISTORY
The
.Fn getrlimit
and
.Fn setrlimit
system calls first appeared in
.Bx 4.1c .
.Sh BUGS
The
.Dv RLIMIT_AS
resource is missing.
@


1.26
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.25 2014/12/10 19:30:22 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 10 2014 $
d85 1
a85 3
This imposes a limit on the amount of physical memory to be given to
a process; if memory is tight, the system will prefer to take memory
from processes that are exceeding their declared resident set size.
@


1.25
log
@use .Rv and simplify wording; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.24 2014/11/20 03:19:23 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: November 20 2014 $
d41 1
a41 1
.Fd #include <sys/resource.h>
@


1.24
log
@oops. malloc is in section 3.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.23 2014/11/20 03:16:32 tedu Exp $
d177 1
a177 5
A 0 return value indicates that the call succeeded, changing
or returning the resource limit.
A return value of \-1 indicates that an error occurred, and an error code
is stored in the global variable
.Va errno .
@


1.23
log
@sbrk is long dead. clarify that the data segment is malloc and anon mmap.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.22 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d68 1
a68 1
.Xr malloc 2
@


1.22
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.21 2013/04/08 05:55:04 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: April 8 2013 $
d67 4
a70 3
this defines how far a program may extend its break with the
.Xr sbrk 2
system call.
@


1.21
log
@zap trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.20 2013/04/08 03:08:38 guenther Exp $
d236 4
a239 2
function call appeared in
.Bx 4.2 .
@


1.20
log
@Updates to SYNOPSIS, ERRORS, and STANDARDS.
getrlimit(2) RLIMIT_STACK wording suggested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.19 2011/11/06 12:07:42 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: November 6 2011 $
d202 1
a202 1
The new 
@


1.19
log
@.Ev -> .Dv
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.18 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
a40 2
.Fd #include <sys/types.h>
.Fd #include <sys/time.h>
d88 4
a91 3
The maximum size (in bytes) of the stack segment for a process;
this defines how far a program's stack segment may be extended.
Stack extension is performed automatically by the system.
d191 15
d207 4
a210 3
The limit specified to
.Fn setrlimit
would have raised the maximum limit value, and the caller is not the superuser.
d224 9
a232 2
function calls are expected to conform to
.St -p1003.1-2004 .
d238 4
@


1.18
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.17 2005/06/05 19:40:22 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d124 1
a124 1
.Ev RLIM_SAVED_CUR
d126 1
a126 1
.Ev RLIM_SAVED_MAX
d136 1
a136 1
.Ev RLIM_SAVED_CUR
d138 1
a138 1
.Ev RLIM_SAVED_MAX
@


1.17
log
@s/-p1003.1-2003/-p1003.1-2004/g
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.16 2004/01/25 14:48:32 jmc Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.16
log
@use new .St macro;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.15 2003/12/12 14:50:07 millert Exp $
d210 1
a210 1
.St -p1003.1-2003 .
@


1.15
log
@Document RLIM_SAVED_CUR and RLIM_SAVED_MAX; jmc@@ OK
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.14 2003/09/04 23:35:47 tdeval Exp $
d210 1
a210 1
.St -p1003.1-03 .
@


1.14
log
@typo.
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.13 2003/06/02 20:18:39 millert Exp $
d123 21
d204 7
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.12 2003/05/12 14:40:13 jmc Exp $
d146 1
a146 1
A file I/O operation that would create a file larger that the process'
@


1.12
log
@cpu -> CPU
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.11 2000/10/18 05:12:09 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.10 2000/04/15 11:46:03 aaron Exp $
d69 1
a69 1
The maximum amount of cpu time (in seconds) to be used by
d101 1
a101 1
if the cpu time or file size is exceeded), but it will be allowed to
d155 1
a155 1
When the soft cpu time limit is exceeded, a signal
@


1.10
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.9 1999/06/29 14:10:00 aaron Exp $
d99 3
a101 3
A resource limit is specified as a soft limit and a hard limit.  When a
soft limit is exceeded a process may receive a signal (for example, if
the cpu time or file size is exceeded), but it will be allowed to
d103 2
a104 1
its resource limit).  The
d114 2
a115 2
Only the superuser may raise the maximum limits.  Other users
may only alter
d154 2
a155 2
generated; this normally terminates the process, but may be caught.  When
the soft cpu time limit is exceeded, a signal
d161 3
a163 3
or returning the resource limit.   A return value of \-1 indicates
that an error occurred, and an error code is stored in the global
location
d178 1
a178 2
would have
raised the maximum limit value, and the caller is not the superuser.
@


1.9
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.8 1999/05/23 14:10:52 aaron Exp $
d113 1
a113 1
Only the super-user may raise the maximum limits.  Other users
d178 1
a178 1
raised the maximum limit value, and the caller is not the super-user.
@


1.8
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.7 1999/02/27 21:56:22 deraadt Exp $
d58 1
a58 1
call.  
d103 1
a103 1
its resource limit).  The 
d114 1
a114 1
may only alter 
d116 1
a116 1
within the range from 0 to 
d160 1
a160 1
or returning the resource limit.   A return value of -1 indicates
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.6 1998/07/06 18:27:36 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.6
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: getrlimit.2,v 1.8 1995/10/12 15:40:58 jtc Exp $
d165 1
a165 1
.Fn Getrlimit
@


1.5
log
@.Xr fix
@
text
@d1 1
@


1.4
log
@fix lots of .Xr and other minor things
@
text
@d182 1
a182 1
.Xr quota 2 ,
@


1.3
log
@sh(1) has now has ulimit so that's no longer a bug.
@
text
@d65 1
a65 1
.Xr core
d139 1
a139 1
.Xr break
@


1.2
log
@from netbsd:
add & fix a bunch of system call pages
@
text
@d130 6
a135 1
.Xr csh 1 .
d181 1
a185 9
.Sh BUGS
There should be 
.Ic limit
and
.Ic unlimit
commands in
.Xr sh 1
as well as in
.Xr csh .
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: getrlimit.2,v 1.7 1995/02/27 12:33:19 cgd Exp $
d50 1
a50 1
.Fn setrlimit "int resource" "struct rlimit *rlp"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
