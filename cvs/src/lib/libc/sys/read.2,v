head	1.36;
access;
symbols
	OPENBSD_6_1:1.36.0.2
	OPENBSD_6_1_BASE:1.36
	OPENBSD_6_0:1.35.0.8
	OPENBSD_6_0_BASE:1.35
	OPENBSD_5_9:1.35.0.4
	OPENBSD_5_9_BASE:1.35
	OPENBSD_5_8:1.35.0.6
	OPENBSD_5_8_BASE:1.35
	OPENBSD_5_7:1.35.0.2
	OPENBSD_5_7_BASE:1.35
	OPENBSD_5_6:1.34.0.4
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.33.0.6
	OPENBSD_5_5_BASE:1.33
	OPENBSD_5_4:1.33.0.2
	OPENBSD_5_4_BASE:1.33
	OPENBSD_5_3:1.31.0.6
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.31.0.4
	OPENBSD_5_2_BASE:1.31
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.2
	OPENBSD_5_0:1.28.0.8
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.6
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.4
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.2
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.27.0.12
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.8
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.6
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.27.0.4
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.2
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.25.0.12
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.25.0.10
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.25.0.8
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.25.0.6
	OPENBSD_3_7_BASE:1.25
	OPENBSD_3_6:1.25.0.4
	OPENBSD_3_6_BASE:1.25
	OPENBSD_3_5:1.25.0.2
	OPENBSD_3_5_BASE:1.25
	OPENBSD_3_4:1.24.0.2
	OPENBSD_3_4_BASE:1.24
	OPENBSD_3_3:1.22.0.2
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.21.0.4
	OPENBSD_3_2_BASE:1.21
	OPENBSD_3_1:1.21.0.2
	OPENBSD_3_1_BASE:1.21
	OPENBSD_3_0:1.19.0.2
	OPENBSD_3_0_BASE:1.19
	OPENBSD_2_9:1.18.0.2
	OPENBSD_2_9_BASE:1.18
	OPENBSD_2_8:1.17.0.2
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.16.0.2
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.14.0.2
	OPENBSD_2_6_BASE:1.14
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.36
date	2016.09.30.10.53.11;	author jca;	state Exp;
branches;
next	1.35;
commitid	0vR6CgsTIrsXpLEf;

1.35
date	2015.02.05.02.33.09;	author schwarze;	state Exp;
branches;
next	1.34;
commitid	3DjwIM9vrpCmLhTQ;

1.34
date	2014.05.29.06.28.51;	author guenther;	state Exp;
branches;
next	1.33;

1.33
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.32;

1.32
date	2013.04.08.06.26.12;	author guenther;	state Exp;
branches;
next	1.31;

1.31
date	2011.11.06.17.22.20;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2011.11.06.12.07.22;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2011.11.05.17.55.49;	author guenther;	state Exp;
branches;
next	1.28;

1.28
date	2009.12.30.09.46.23;	author fgsch;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2006.10.11.09.58.31;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2003.10.21.20.00.17;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.01.21.23.15;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2003.02.28.21.34.37;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2002.01.24.21.18.36;	author mickey;	state Exp;
branches;
next	1.20;

1.20
date	2001.12.07.23.33.12;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2001.05.14.15.11.26;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2001.02.16.01.56.58;	author smart;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.18.05.12.11;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.04.20.06.34.37;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.12.21.48.02;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.09.26.16.05.01;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	99.09.26.16.00.35;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	99.09.26.14.16.31;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	99.07.02.20.58.01;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.06.29.14.10.15;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.10.55;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.02.27.21.56.40;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.08.17.17.35.13;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.08.05.16.49.34;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.07.28.19.47.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.28.04.13.34;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.07.06.18.28.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.12.13.21.20.50;	author michaels;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.36
log
@Make read(2) return EISDIR on directories.

Years ago Theo made read(2) return 0 on directories, instead of dumping
the directory content.  Another behavior is allowed as an extension by
POSIX, returning an EISDIR error, as used on a few other systems.  This
behavior is deemed more useful as it helps spotting errors.  This
implies that it might break some setups.

Ports bulk builds by ajacoutot@@ and naddy@@, ok millert@@ bluhm@@ naddy@@
deraadt@@
@
text
@.\"	$OpenBSD: read.2,v 1.35 2015/02/05 02:33:09 schwarze Exp $
.\"	$NetBSD: read.2,v 1.6 1995/02/27 12:35:47 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)read.2	8.4 (Berkeley) 2/26/94
.\"
.Dd $Mdocdate: February 5 2015 $
.Dt READ 2
.Os
.Sh NAME
.Nm read ,
.Nm readv ,
.Nm pread ,
.Nm preadv
.Nd read input
.Sh SYNOPSIS
.In unistd.h
.Ft ssize_t
.Fn read "int d" "void *buf" "size_t nbytes"
.Ft ssize_t
.Fn pread "int d" "void *buf" "size_t nbytes" "off_t offset"
.Pp
.In sys/uio.h
.Ft ssize_t
.Fn readv "int d" "const struct iovec *iov" "int iovcnt"
.In sys/types.h
.In sys/uio.h
.Ft ssize_t
.Fn preadv "int d" "const struct iovec *iov" "int iovcnt" "off_t offset"
.Sh DESCRIPTION
.Fn read
attempts to read
.Fa nbytes
of data from the object referenced by the descriptor
.Fa d
into the buffer pointed to by
.Fa buf .
.Fn readv
performs the same action, but scatters the input data into the
.Fa iovcnt
buffers specified by the members of the
.Fa iov
array: iov[0], iov[1], ..., iov[iovcnt-1].
.Fn pread
and
.Fn preadv
perform the same functions, but read from the specified position
.Fa offset
in the file without modifying the file pointer.
.Pp
For
.Fn readv
and
.Fn preadv ,
the
.Fa iovec
structure is defined as:
.Bd -literal -offset indent
struct iovec {
	void *iov_base;
	size_t iov_len;
};
.Ed
.Pp
Each
.Fa iovec
entry specifies the base address and length of an area
in memory where data should be placed.
.Fn readv
and
.Fn preadv
will always fill an area completely before proceeding to the next.
.Pp
On objects capable of seeking, the
.Fn read
starts at a position given by the pointer associated with
.Fa d
(see
.Xr lseek 2 ) .
Upon return from
.Fn read ,
the pointer is incremented by the number of bytes actually read.
.Pp
Objects that are not capable of seeking always read from the current
position.
The value of the pointer associated with such an object is undefined.
.Pp
Upon successful completion,
.Fn read ,
.Fn readv ,
.Fn pread ,
and
.Fn preadv
return the number of bytes actually read and placed in the buffer.
The system guarantees to read the number of bytes requested if
the descriptor references a normal file that has that many bytes left
before the end-of-file, but in no other case.
.Pp
Note that
.Fn readv
and
.Fn preadv
will fail if the value of
.Fa iovcnt
exceeds the constant
.Dv IOV_MAX .
.Sh RETURN VALUES
If successful, the
number of bytes actually read is returned.
Upon reading end-of-file, zero is returned.
Otherwise, a \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn read ,
.Fn readv ,
.Fn pread ,
and
.Fn preadv
will succeed unless:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa d
is not a valid file or socket descriptor open for reading.
.It Bq Er EFAULT
Part of
.Fa buf
points outside the process's allocated address space.
.It Bq Er EINTR
A read from a slow device
(i.e. one that might block for an arbitrary amount of time)
was interrupted by the delivery of a signal
before any data arrived.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.It Bq Er EISDIR
The underlying file is a directory.
.El
.Pp
In addition,
.Fn read
and
.Fn readv
may return the following errors:
.Bl -tag -width Er
.It Bq Er EAGAIN
The file was marked for non-blocking I/O,
and no data were ready to be read.
.It Bq Er ENOTCONN
The file is a socket associated with a connection-oriented protocol
and has not been connected.
.It Bq Er EIO
The process is a member of a background process attempting to read
from its controlling terminal, the process is ignoring or blocking
the
.Dv SIGTTIN
signal or the process group is orphaned.
.El
.Pp
.Fn read
and
.Fn pread
may return the following error:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa nbytes
was larger than
.Dv SSIZE_MAX .
.El
.Pp
.Fn pread
and
.Fn preadv
may return the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa offset
was negative.
.It Bq Er ESPIPE
.Fa d
is associated with a pipe, socket, FIFO, or tty.
.El
.Pp
.Fn readv
and
.Fn preadv
may return one of the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa iovcnt
was less than or equal to 0, or greater than
.Dv IOV_MAX .
.It Bq Er EINVAL
The sum of the
.Fa iov_len
values in the
.Fa iov
array overflowed an
.Vt ssize_t .
.It Bq Er EFAULT
Part of
.Fa iov
points outside the process's allocated address space.
.El
.Sh SEE ALSO
.Xr dup 2 ,
.Xr fcntl 2 ,
.Xr open 2 ,
.Xr pipe 2 ,
.Xr poll 2 ,
.Xr select 2 ,
.Xr socket 2 ,
.Xr socketpair 2
.Sh STANDARDS
The
.Fn read ,
.Fn readv ,
and
.Fn pread
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
A
.Fn read
system call first appeared in
.At v1 ;
.Fn readv
in
.Bx 4.1c ;
.Fn pread
in
.At V.4 ;
and
.Fn preadv
in
.Ox 2.7 .
.Sh CAVEATS
Error checks should explicitly test for \-1.
Code such as
.Bd -literal -offset indent
while ((nr = read(fd, buf, sizeof(buf))) > 0)
.Ed
.Pp
is not maximally portable, as some platforms allow for
.Fa nbytes
to range between
.Dv SSIZE_MAX
and
.Dv SIZE_MAX
\- 2, in which case the return value of an error-free
.Fn read
may appear as a negative number distinct from \-1.
Proper loops should use
.Bd -literal -offset indent
while ((nr = read(fd, buf, sizeof(buf))) != -1 && nr != 0)
.Ed
@


1.35
log
@macro fixes from Kaspars at Bankovskis dot net;
also fixing one typo in fts(3) while here
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.34 2014/05/29 06:28:51 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: May 29 2014 $
a154 2
.It Bq Er EIO
An I/O error occurred while reading from the file system.
d160 4
@


1.34
log
@Grammar
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.33 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d43 1
a43 1
.Fd #include <unistd.h>
d49 1
a49 1
.Fd #include <sys/uio.h>
d52 2
a53 2
.Fd #include <sys/types.h>
.Fd #include <sys/uio.h>
d223 1
a223 1
.Em ssize_t .
d269 1
a269 1
.Va nbytes
@


1.33
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.32 2013/04/08 06:26:12 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 8 2013 $
d198 1
a198 1
may return the following error:
@


1.32
log
@Updates to SYNOPSIS, ERRORS, and STANDARDS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.31 2011/11/06 17:22:20 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 6 2011 $
d253 1
a253 1
.Bx 4.2 ;
@


1.31
log
@Commemorate  research!dmr  by documenting the history of all
system calls existing since Version 1 AT&T UNIX (first batch).
All information taken from primary sources at the UNIX tree of the
UNIX heritage society, http://minnie.tuhs.org/cgi-bin/utree.pl .
The number of errors in the existing manuals is astonishing.
All facts checked by sobrado@@.
Feedback and ok on wording and formatting by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.30 2011/11/06 12:07:22 deraadt Exp $
a42 1
.Fd #include <sys/types.h>
a48 1
.Fd #include <sys/types.h>
a49 1
.Fd #include <unistd.h>
d52 2
d156 1
a156 4
An I/O error occurred while reading from the file system,
or the process is a member of a background process attempting to read
from its controlling terminal, the process is ignoring or blocking
the SIGTTIN signal or the process group is orphaned.
d168 1
a168 1
may return the following error:
d173 9
d240 2
a241 5
.Fn read
function conforms to
.St -p1003.1-90 .
The
.Fn readv
d245 1
a245 1
.St -xpg4.2 .
@


1.30
log
@repair documentation offset in the p*() versions of the calls and EINVAL;
plus merge differences between two pages.
ok guenther jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.29 2011/11/05 17:55:49 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: November 5 2011 $
d245 11
a255 1
The
d257 1
a257 1
function first appeared in
a258 12
The
.Fn pread
function appeared in
.At V.4 .
The
.Fn readv
function call appeared in
.Bx 4.2 .
The
.Fn read
function call appeared in
.At v2 .
@


1.29
log
@Move around the error cases to make clear that some don't apply to the
p* versions, as well as fix a couple other cases
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.28 2009/12/30 09:46:23 fgsch Exp $
d33 1
a33 1
.Dd $Mdocdate: December 30 2009 $
d66 1
a66 2
performs the same action, but scatters the input data
into the
d70 1
a70 1
array: iov[0], iov[1], ..., iov[iovcnt\|\-\|1].
d74 3
a76 2
perform the same functions, but read from the specified position in
the file without modifying the file pointer.
d97 3
a99 2
will always fill an area completely before proceeding
to the next.
d103 1
a103 2
starts at a position
given by the pointer associated with
a165 4
.It Bq Er EINVAL
The pointer associated with
.Fa d
was negative.
d195 3
d264 2
a265 2
.Bd -literal
	while ((nr = read(fd, buf, sizeof(buf))) > 0)
d278 2
a279 2
.Bd -literal
	while ((nr = read(fd, buf, sizeof(buf))) != -1 && nr != 0)
@


1.28
log
@Document ESPIPE and make EFAULT cover all functions.
jmc@@ deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.27 2007/05/31 19:19:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
a153 2
.Fa iov
or
d170 8
a182 1
In addition,
d201 1
a201 1
is associated with a pipe, socket, or FIFO.
d220 4
@


1.27
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.26 2006/10/11 09:58:31 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d153 3
d157 1
a157 1
points outside the allocated address space.
d189 10
a198 1
Also,
a214 4
.It Bq Er EFAULT
Part of the
.Fa iov
points outside the process's allocated address space.
@


1.26
log
@be specific about what we mean by a "slow device";

kick started by netbsd pr 19603 from kevin p. neal.
rillig@@netbsd seems to have adapted that, and i have in turn
adapted it again;

ok otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.25 2003/10/21 20:00:17 jmc Exp $
d33 1
a33 1
.Dd July 28, 1998
@


1.25
log
@exceedes -> exceeds; from Jared Yanovich;
also remove unnecessary .Pp and -compact from display;
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.24 2003/06/02 20:18:39 millert Exp $
d161 4
a164 2
A read from a slow device was interrupted before
any data arrived by the delivery of a signal.
@


1.24
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.23 2003/06/01 21:23:15 jmc Exp $
d85 1
a85 2
.Pp
.Bd -literal -offset indent -compact
d132 1
a132 1
exceedes the constant
@


1.23
log
@- section reorder
- macro cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.22 2003/02/28 21:34:37 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.22
log
@typos;

reboot(2), sigaction(2): help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.21 2002/01/24 21:18:36 mickey Exp $
d231 17
a267 17
.Sh HISTORY
The
.Fn preadv
function first appeared in
.Ox 2.7 .
The
.Fn pread
function appeared in
.At V.4 .
The
.Fn readv
function call appeared in
.Bx 4.2 .
The
.Fn read
function call appeared in
.At v2 .
@


1.21
log
@most of these is v2, not v6
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.20 2001/12/07 23:33:12 millert Exp $
d121 1
a121 1
.Fn read
d147 1
a147 1
.Fn read
@


1.20
log
@From XPG4.2: read(2) can return EIO if the process is a member of
a background process attempting to read from its controlling terminal,
the process is ignoring or blocking the SIGTTIN signal or the process
group is orphaned.  Verified against reality...
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.19 2001/05/14 15:11:26 espie Exp $
d267 1
a267 1
.At v6 .
@


1.19
log
@Split synopsis, plain read/write don't need uio.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.18 2001/02/16 01:56:58 smart Exp $
d161 4
a164 1
An I/O error occurred while reading from the file system.
@


1.18
log
@style(9) nit in examples, aaron@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.17 2000/10/18 05:12:11 aaron Exp $
a47 1
.Fd #include <sys/uio.h>
d52 6
a58 2
.Ft ssize_t
.Fn pread "int d" "void *buf" "size_t nbytes" "off_t offset"
@


1.17
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.16 2000/04/20 06:34:37 deraadt Exp $
d229 1
a229 1
	while ((nr = read(fd, buf, sizeof buf)) > 0)
d243 1
a243 1
	while ((nr = read(fd, buf, sizeof buf)) != -1 && nr != 0)
@


1.16
log
@p{read,write}{,v} man pages
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.15 2000/04/12 21:48:02 aaron Exp $
d114 2
a115 2
position.  The value of the pointer associated with such an
object is undefined.
d138 2
a139 2
number of bytes actually read is returned. Upon reading end-of-file,
zero is returned.
d256 1
a256 2
function call
appeared in
@


1.15
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.14 1999/09/26 16:05:01 espie Exp $
d42 3
a44 1
.Nm readv
d54 4
d66 1
a66 1
.Fn \ Readv
d73 5
d80 3
a82 1
.Fn readv ,
d119 2
d122 1
a122 1
.Fn readv
d130 2
d145 2
d148 1
a148 1
.Fn readv
d173 2
d185 2
d217 8
a224 2
function is expected to conform to
.St -p1003.1-88 .
d246 8
@


1.14
log
@.Nm -> .Fn
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.13 1999/09/26 16:00:35 espie Exp $
d203 1
a203 1
is not maximally portable, as some platforms allow for 
d206 1
a206 1
.Dv SSIZE_MAX 
d208 1
a208 1
.Dv SIZE_MAX 
@


1.13
log
@Proper coding idioms.

[yes, there ARE some systems where read and write >SSIZE_MAX work,
and physicists use those features to write huge files in one swoop]
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.12 1999/09/26 14:16:31 espie Exp $
d210 1
a210 1
.Nm read
@


1.12
log
@`may return following error' => `may return the following error'
`may return following errors' => `may return one of the following errors'
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.11 1999/07/02 20:58:01 aaron Exp $
d196 20
@


1.11
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.10 1999/06/29 14:10:15 aaron Exp $
d154 1
a154 1
may return following error:
@


1.10
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.9 1999/05/23 14:10:55 aaron Exp $
a118 1
.Pp
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.8 1999/02/27 21:56:40 deraadt Exp $
d62 1
a62 1
into the 
d68 1
a68 1
For 
d70 1
a70 1
the 
d81 1
a81 1
Each 
d84 1
a84 1
in memory where data should be placed. 
d115 1
a115 1
will fail if the value of 
d124 1
a124 1
Otherwise, a -1 is returned and the global variable
d153 1
a153 1
In addition, 
d176 1
a176 1
array overflowed an 
@


1.8
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.7 1998/08/17 17:35:13 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.7
log
@Xr poll
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.6 1998/08/05 16:49:34 millert Exp $
d53 1
a53 1
.Fn Read
d85 1
a85 1
.Fn Readv
d128 1
a128 1
.Fn Read
d134 1
a134 1
.Fa D
d137 1
a137 1
.Fa Buf
d168 1
a168 1
.Fa Iovcnt
@


1.6
log
@IOV_MAX, not UIO_MAXIOV
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.5 1998/07/28 19:47:10 millert Exp $
d188 1
@


1.5
log
@For read, write, send, sendto, recv, recvfrom return EINVAL is size arg > SSIZE_MAX.  For readv, writev, sendmsg, recvmsg return EINVAL if sum of the  over iov_len values overflows an ssize_t.  Based on what XPG 4.2 says (though XPG is not entirely consistent here).  Basically since the return value is ssize_t allowing size > SSIZE_MAX is bad since people who (incorrectly mind you) check the return value for < 0 instead of == -1 will have bad things happen to them.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.4 1998/07/28 04:13:34 millert Exp $
d118 1
a118 1
.Fa UIO_MAXIOV .
d160 1
a160 1
.Ev SSIZE_MAX .
d170 1
a170 2
.\".Dv {UIO_MAXIOV} .
.Fa UIO_MAXIOV
@


1.4
log
@Don't talk about the sum of the iov_len being negative since iov_len is unsigned.
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.3 1998/07/06 18:28:15 deraadt Exp $
d37 1
a37 1
.Dd February 26, 1994
d154 10
d177 2
a178 1
array overflowed an unsigned 32-bit integer.
@


1.3
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: read.2,v 1.6 1995/02/27 12:35:47 cgd Exp $
a162 6
One of the
.Fa iov_len
values in the
.Fa iov
array was negative.
.It Bq Er EINVAL
d167 1
a167 1
array overflowed a 32-bit integer.
@


1.2
log
@make UIO_MAXIOV note more prominent
@
text
@d1 1
@


1.1
log
@Initial revision
@
text
@d59 1
a59 1
.Fn Readv
d112 7
d159 2
a160 1
.Dv {UIO_MAXIOV} .
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
