head	1.56;
access;
symbols
	OPENBSD_6_2_BASE:1.56
	OPENBSD_6_1:1.54.0.4
	OPENBSD_6_1_BASE:1.54
	OPENBSD_6_0:1.52.0.2
	OPENBSD_6_0_BASE:1.52
	OPENBSD_5_9:1.51.0.6
	OPENBSD_5_9_BASE:1.51
	OPENBSD_5_8:1.51.0.8
	OPENBSD_5_8_BASE:1.51
	OPENBSD_5_7:1.51.0.2
	OPENBSD_5_7_BASE:1.51
	OPENBSD_5_6:1.51.0.4
	OPENBSD_5_6_BASE:1.51
	OPENBSD_5_5:1.43.0.4
	OPENBSD_5_5_BASE:1.43
	OPENBSD_5_4:1.42.0.2
	OPENBSD_5_4_BASE:1.42
	OPENBSD_5_3:1.40.0.2
	OPENBSD_5_3_BASE:1.40
	OPENBSD_5_2:1.39.0.2
	OPENBSD_5_2_BASE:1.39
	OPENBSD_5_1_BASE:1.38
	OPENBSD_5_1:1.38.0.4
	OPENBSD_5_0:1.38.0.2
	OPENBSD_5_0_BASE:1.38
	OPENBSD_4_9:1.37.0.12
	OPENBSD_4_9_BASE:1.37
	OPENBSD_4_8:1.37.0.10
	OPENBSD_4_8_BASE:1.37
	OPENBSD_4_7:1.37.0.6
	OPENBSD_4_7_BASE:1.37
	OPENBSD_4_6:1.37.0.8
	OPENBSD_4_6_BASE:1.37
	OPENBSD_4_5:1.37.0.4
	OPENBSD_4_5_BASE:1.37
	OPENBSD_4_4:1.37.0.2
	OPENBSD_4_4_BASE:1.37
	OPENBSD_4_3:1.36.0.4
	OPENBSD_4_3_BASE:1.36
	OPENBSD_4_2:1.36.0.2
	OPENBSD_4_2_BASE:1.36
	OPENBSD_4_1:1.35.0.2
	OPENBSD_4_1_BASE:1.35
	OPENBSD_4_0:1.34.0.10
	OPENBSD_4_0_BASE:1.34
	OPENBSD_3_9:1.34.0.8
	OPENBSD_3_9_BASE:1.34
	OPENBSD_3_8:1.34.0.6
	OPENBSD_3_8_BASE:1.34
	OPENBSD_3_7:1.34.0.4
	OPENBSD_3_7_BASE:1.34
	OPENBSD_3_6:1.34.0.2
	OPENBSD_3_6_BASE:1.34
	OPENBSD_3_5:1.32.0.4
	OPENBSD_3_5_BASE:1.32
	OPENBSD_3_4:1.32.0.2
	OPENBSD_3_4_BASE:1.32
	OPENBSD_3_3:1.29.0.2
	OPENBSD_3_3_BASE:1.29
	OPENBSD_3_2:1.28.0.2
	OPENBSD_3_2_BASE:1.28
	OPENBSD_3_1:1.27.0.2
	OPENBSD_3_1_BASE:1.27
	OPENBSD_3_0:1.25.0.2
	OPENBSD_3_0_BASE:1.25
	OPENBSD_2_9:1.20.0.4
	OPENBSD_2_9_BASE:1.20
	OPENBSD_2_8:1.20.0.2
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.19.0.4
	OPENBSD_2_7_BASE:1.19
	OPENBSD_2_6:1.19.0.2
	OPENBSD_2_6_BASE:1.19
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.56
date	2017.07.20.18.22.25;	author bluhm;	state Exp;
branches;
next	1.55;
commitid	eXLHJ8oEZQtPpKri;

1.55
date	2017.04.05.18.15.43;	author millert;	state Exp;
branches;
next	1.54;
commitid	qDE8j0fr0t3O2Nyn;

1.54
date	2017.03.11.22.58.46;	author jmc;	state Exp;
branches;
next	1.53;
commitid	3Wx5sY3PjUtTOUcj;

1.53
date	2017.03.11.05.54.30;	author deraadt;	state Exp;
branches;
next	1.52;
commitid	HdaVd8ZoSUBKlUY9;

1.52
date	2016.05.27.19.45.04;	author deraadt;	state Exp;
branches;
next	1.51;
commitid	nQEqvpt7rKDi6fz0;

1.51
date	2014.07.10.19.00.23;	author matthew;	state Exp;
branches;
next	1.50;
commitid	KpHnh5grKD2w2Asr;

1.50
date	2014.07.02.22.22.35;	author matthew;	state Exp;
branches;
next	1.49;
commitid	cXzdthTwYzgYTwmX;

1.49
date	2014.07.02.19.08.40;	author matthew;	state Exp;
branches;
next	1.48;
commitid	ukug7jO3A2aW5WqV;

1.48
date	2014.06.27.22.51.20;	author jmc;	state Exp;
branches;
next	1.47;
commitid	Ec0JR7El3t2IZybp;

1.47
date	2014.06.27.20.40.02;	author matthew;	state Exp;
branches;
next	1.46;
commitid	fwLzDL8ZlyUduTYY;

1.46
date	2014.06.27.19.26.36;	author matthew;	state Exp;
branches;
next	1.45;
commitid	LGIqWr21NYDUR2m0;

1.45
date	2014.06.27.19.02.54;	author matthew;	state Exp;
branches;
next	1.44;
commitid	lJY4ekv63JmFXU3b;

1.44
date	2014.06.26.18.30.36;	author matthew;	state Exp;
branches;
next	1.43;
commitid	d0dyiOVmUguljmZx;

1.43
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.42;

1.42
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.41;

1.41
date	2013.04.08.19.35.00;	author guenther;	state Exp;
branches;
next	1.40;

1.40
date	2012.10.17.05.46.51;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2012.04.12.12.53.27;	author ariane;	state Exp;
branches;
next	1.38;

1.38
date	2011.04.11.17.46.19;	author tedu;	state Exp;
branches;
next	1.37;

1.37
date	2008.06.30.05.46.46;	author otto;	state Exp;
branches;
next	1.36;

1.36
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2007.02.26.08.12.19;	author otto;	state Exp;
branches;
next	1.34;

1.34
date	2004.04.19.10.26.10;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2004.04.15.19.52.18;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2003.06.01.20.25.23;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2003.05.16.09.17.48;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2003.03.06.20.04.06;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.27;

1.27
date	2001.12.03.23.58.48;	author ericj;	state Exp;
branches;
next	1.26;

1.26
date	2001.10.24.14.09.52;	author jjbg;	state Exp;
branches;
next	1.25;

1.25
date	2001.09.05.06.23.01;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2001.08.20.05.57.55;	author mpech;	state Exp;
branches;
next	1.23;

1.23
date	2001.08.03.19.44.21;	author espie;	state Exp;
branches;
next	1.22;

1.22
date	2001.05.11.14.54.25;	author art;	state Exp;
branches;
next	1.21;

1.21
date	2001.05.11.13.59.33;	author art;	state Exp;
branches;
next	1.20;

1.20
date	2000.10.18.05.12.10;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	99.07.04.18.59.44;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	99.07.02.16.57.49;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	99.06.29.14.10.07;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	99.06.16.08.45.12;	author alex;	state Exp;
branches;
next	1.15;

1.15
date	99.06.05.04.47.42;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.05.30.02.26.09;	author pjanzen;	state Exp;
branches;
next	1.13;

1.13
date	99.05.27.16.54.23;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.05.27.16.21.00;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.23.14.10.55;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.02.27.21.56.33;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.08.21.16.38.10;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.07.06.18.27.59;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.06.06.08.21.12;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.01.02.05.32.50;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.11.14.20.56.12;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.13.10.08.34;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.02.11.09.14;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.05.30.07.48.31;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.27;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.56
log
@Accessing a mmap(2)ed file behind its end should result in a SIGBUS
according to POSIX.  Bring regression test and kernel in line for
amd64 and i386.  Other architectures have to follow.
OK deraadt@@ kettenis@@
@
text
@.\"	$OpenBSD: mmap.2,v 1.55 2017/04/05 18:15:43 millert Exp $
.\"	$NetBSD: mmap.2,v 1.5 1995/06/24 10:48:59 cgd Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)mmap.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: April 5 2017 $
.Dt MMAP 2
.Os
.Sh NAME
.Nm mmap
.Nd map files or devices into memory
.Sh SYNOPSIS
.In sys/mman.h
.Ft void *
.Fn mmap "void *addr" "size_t len" "int prot" "int flags" "int fd" "off_t offset"
.Sh DESCRIPTION
The
.Fn mmap
function causes the contents of
.Fa fd ,
starting at
.Fa offset ,
to be mapped in memory at the given
.Fa addr .
The mapping will extend at least
.Fa len
bytes, subject to page alignment restrictions.
.Pp
The
.Fa addr
argument describes the address where the system should place the mapping.
If the
.Dv MAP_FIXED
flag is specified, the allocation will happen at the specified address,
replacing any previously established mappings in its range.
Otherwise, the mapping will be placed at the available spot at
.Fa addr ;
failing that it will be placed "close by".
If
.Fa addr
is
.Dv NULL
the system can pick any address.
Except for
.Dv MAP_FIXED
mappings, the system will never replace existing mappings.
.Pp
The
.Fa len
argument describes the minimum amount of bytes the mapping will span.
Since
.Fn mmap
maps pages into memory,
.Fa len
may be rounded up to hit a page boundary.
If
.Fa len
is 0, the mapping will fail with
.Er EINVAL .
.Pp
If an
.Fa fd
and
.Fa offset
are specified, the resulting address may end up not on a page boundary,
in order to align the page offset in the
.Fa addr
to the page offset in
.Fa offset .
.Pp
The protections (region accessibility) are specified in the
.Fa prot
argument.
It should either be
.Dv PROT_NONE
.Pq no permissions
or the bitwise OR of one or more of the following values:
.Pp
.Bl -tag -width "PROT_WRITEXX" -offset indent -compact
.It Dv PROT_EXEC
Pages may be executed.
.It Dv PROT_READ
Pages may be read.
.It Dv PROT_WRITE
Pages may be written.
.El
.Pp
The
.Fa flags
parameter specifies the type of the mapped object, mapping options, and
whether modifications made to the mapped copy of the page are private
to the process or are to be shared with other references.
Sharing, mapping type, and options are specified in the
.Fa flags
argument by OR'ing the following values.
Exactly one of the first two values must be specified:
.Bl -tag -width MAP_ANONYMOUS -offset indent
.It Dv MAP_PRIVATE
Modifications are private.
.It Dv MAP_SHARED
Modifications are shared.
.El
.Pp
Any combination of the following flags may additionally be used:
.Bl -tag -width MAP_ANONYMOUS -offset indent
.It Dv MAP_ANON
Map anonymous memory not associated with any specific file.
The file descriptor used for creating
.Dv MAP_ANON
must currently be \-1 indicating no name is associated with the
region.
.It Dv MAP_ANONYMOUS
Synonym for
.Dv MAP_ANON .
.It Dv MAP_FIXED
Demand that the mapping is placed at
.Fa addr ,
rather than having the system select a location.
.Fa addr ,
.Fa len
and
.Fa offset
(in the case of
.Fa fd
mappings)
must be multiples of the page size.
Existing mappings in the address range will be replaced.
Use of this option is discouraged.
.El
.Pp
Finally, the following flags are also provided for
source compatibility with code written for other operating systems,
but are not recommended for use in new
.Ox
code:
.Bl -tag -width MAP_ANONYMOUS -offset indent
.It Dv MAP_COPY
Modifications are private and, unlike
.Dv MAP_PRIVATE ,
modifications made by others are not visible.
On
.Ox
this behaves just like
.Dv MAP_PRIVATE .
.It Dv MAP_FILE
Mapped from a regular file, character special file, or block special file
specified by file descriptor
.Fa fd .
On
.Ox
and all systems conforming to
.St -p1003.1-2008
this is the default mapping type and need not be specified.
.It Dv MAP_HASSEMAPHORE
Notify the kernel that the region may contain semaphores and that special
handling may be necessary.
On
.Ox
this flag is ignored.
.It Dv MAP_INHERIT
Permit regions to be inherited across
.Xr exec 3
system calls.
On
.Ox
this flag is ignored.
.It Dv MAP_TRYFIXED
Attempt to use the hint provided by
.Fa addr .
On
.Ox
this is the default behavior.
.El
.Pp
The
.Xr close 2
function does not unmap pages; see
.Xr munmap 2
for further information.
.Sh RETURN VALUES
The
.Fn mmap
function returns a pointer to the mapped region if successful;
otherwise the value
.Dv MAP_FAILED
is returned and the global variable
.Va errno
is set to indicate the error.
A successful return from
.Fn mmap
will never return the value
.Dv MAP_FAILED .
.Sh ERRORS
.Fn mmap
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
The flag
.Dv PROT_READ
was specified as part of the
.Fa prot
parameter and
.Fa fd
was not open for reading.
The flags
.Dv MAP_SHARED
and
.Dv PROT_WRITE
were specified as part
of the
.Fa flags
and
.Fa prot
parameters and
.Fa fd
was not open for writing.
.It Bq Er EBADF
.Fa fd
is not a valid open file descriptor.
.It Bq Er EINVAL
.Dv MAP_PRIVATE
and
.Dv MAP_SHARED
were both specified.
.It Bq Er EINVAL
.Dv MAP_FIXED
was specified and the
.Fa addr
parameter was not page aligned.
.It Bq Er EINVAL
.Fa addr
and
.Fa len
specified a region that would extend beyond the end of the address space.
.It Bq Er EINVAL
.Fa fd
did not specify a regular, character special, or block special file.
.It Bq Er EINVAL
.Fa fd
specified a character special or block special file and the underlying
device does not support memory mapping.
.It Bq Er EINVAL
The allocation
.Fa len
was 0.
.It Bq Er ENOMEM
.Dv MAP_FIXED
was specified and the
.Fa addr
parameter wasn't available.
.Dv MAP_ANON
was specified and insufficient memory was available.
.It Bq Er ENOTSUP
The accesses requested in the
.Ar prot
argument are not allowed.
In particular,
.Dv PROT_WRITE | PROT_EXEC
mappings are not permitted in most binaries (see
.Dv kern.wxabort
in
.Xr sysctl 3
for more information).
.El
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr mlock 2 ,
.Xr mprotect 2 ,
.Xr mquery 2 ,
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr getpagesize 3
.Sh STANDARDS
The
.Fn mmap
function conforms to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn mmap
system call first appeared in
.Bx 4.1c .
.Sh CAVEATS
.St -p1003.1-2008
specifies that references to pages beyond the end of a mapped object
shall generate a
.Dv SIGBUS
signal; however, on some architectures
.Ox
generates a
.Dv SIGSEGV
signal in this case instead.
.Pp
Additionally,
.St -p1003.1-2008
specifies that
.Fn mmap
shall fail with
.Er EINVAL
if neither
.Dv MAP_PRIVATE
nor
.Dv MAP_SHARED
is specified by
.Fa flags ;
however, for compatibility with old programs,
.Ox
instead defaults to
.Dv MAP_SHARED
for mappings of character special files, and to
.Dv MAP_PRIVATE
for all other mappings.
New programs should not rely on this behavior.
.Sh BUGS
Due to a limitation of the current vm system (see
.Xr uvm 9 ) ,
mapping descriptors
.Dv PROT_WRITE
without also specifying
.Dv PROT_READ
is useless
(results in a segmentation fault when first accessing the mapping).
This means that such descriptors must be opened with
.Dv O_RDWR ,
which requires both read and write permissions on the underlying
object.
@


1.55
log
@Not all devices support mmap, document EINVAL in this case too.
OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.54 2017/03/11 22:58:46 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: March 11 2017 $
d316 1
a316 1
signal; however,
@


1.54
log
@shuffle back: wxabort is described in sysctl(3);
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.53 2017/03/11 05:54:30 deraadt Exp $
d265 4
@


1.53
log
@repair Xr, and point to sysctl(8) instead because sysctl(3) fails to
document kern.wxabort
from michael reed
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.52 2016/05/27 19:45:04 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: May 27 2016 $
d285 1
a285 1
.Xr sysctl 8
@


1.52
log
@W^X violations are no longer permitted by default.  A kernel log message
is generated, and mprotect/mmap return ENOTSUP.  If the sysctl(8) flag
kern.wxabort is set then a SIGABRT occurs instead, for gdb use or coredump
creation.

W^X violating programs can be permitted on a ffs/nfs filesystem-basis,
using the "wxallowed" mount option.  One day far in the future
upstream software developers will understand that W^X violations are a
tremendously risky practice and that style of programming will be
banished outright.  Until then, we recommend most users need to use the
wxallowed option on their /usr/local filesystem.  At least your other
filesystems don't permit such programs.

ok jca kettenis mlarkin natano
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.51 2014/07/10 19:00:23 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 10 2014 $
d284 2
a285 1
in sysctl 3
@


1.51
log
@Add MAP_ANONYMOUS as a synonym for MAP_ANON, per POSIX proposal

ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.50 2014/07/02 22:22:35 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 2 2014 $
d276 10
@


1.50
log
@Various small typographic fixes for mman.h manual pages:

Use .Fn instead of .Nm as appropriate
Use .In for include lines
Use .Rv -std where possible
Use .Xr to refer to functions from other manual pages
Remove extraneous sys/types.h include

More substantive changes to follow.

Discussed with schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.49 2014/07/02 19:08:40 matthew Exp $
d124 1
a124 1
.Bl -tag -width MAP_PRIVATE -offset indent
d132 1
a132 1
.Bl -tag -width MAP_PRIVATE -offset indent
d139 3
d163 1
a163 1
.Bl -tag -width MAP_PRIVATE -offset indent
@


1.49
log
@Sync description of PROT_* flags between mmap.2 and mprotect.2

ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.48 2014/06/27 22:51:20 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: June 27 2014 $
d40 1
a40 2
.Fd #include <sys/types.h>
.Fd #include <sys/mman.h>
d45 1
a45 1
.Nm mmap
d79 1
a79 1
.Nm
d205 4
a208 4
Upon successful completion,
.Nm mmap
returns a pointer to the mapped region.
Otherwise, a value of
d210 1
a210 1
is returned and
a212 4
The symbol
.Dv MAP_FAILED
is defined in the header
.In sys/mman.h .
d214 1
a214 1
.Nm
d218 1
a218 1
.Nm
@


1.48
log
@zap unneccessary punctuation;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.47 2014/06/27 20:40:02 matthew Exp $
d101 5
a105 1
argument by OR'ing the following values:
d107 1
a107 1
.Bl -tag -width "PROT_WRITE  " -offset indent -compact
a113 2
.It Dv PROT_NONE
No permissions.
@


1.47
log
@OpenBSD supports mmap() on block special files too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.46 2014/06/27 19:26:36 matthew Exp $
d164 2
a165 2
(On
.Ox ,
d167 1
a167 1
.Dv MAP_PRIVATE ).
d172 1
a172 1
(On
d175 2
a176 2
.St -p1003.1-2008 ,
this is the default mapping type, and need not be specified.)
d180 3
a182 3
(On
.Ox ,
this flag is ignored.)
d187 3
a189 3
(On
.Ox ,
this flag is ignored.)
d193 3
a195 3
(On
.Ox ,
this is the default behavior.)
@


1.46
log
@Split out mmap's compatibility flags into a separate section, so users
aren't misled into thinking they're useful on OpenBSD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.45 2014/06/27 19:02:54 matthew Exp $
d169 3
a171 1
Mapped from a regular file or character-special device memory.
d264 1
a264 1
did not reference a regular or character special file.
@


1.45
log
@Revise wording to reflect that callers should always specify (exactly)
one of MAP_PRIVATE or MAP_SHARED, as required by POSIX.  However, also
caveat that currently OpenBSD doesn't strictly enforce this behavior.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.44 2014/06/26 18:30:36 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: June 26 2014 $
a137 3
.It Dv MAP_FILE
Mapped from a regular file or character-special device memory.
(This is the default mapping type, and need not be specified.)
d152 23
d178 3
d185 3
d191 3
a193 11
This is the default mapping type and need not be specified.
Use of
.Dv MAP_TRYFIXED
is discouraged, as it is a non-portable extension.
.It Dv MAP_COPY
Modifications are private and, unlike
.Dv MAP_PRIVATE ,
modifications made by others are not visible.
This option is deprecated, shouldn't be used and behaves just like
.Dv MAP_PRIVATE
in the current implementation.
@


1.44
log
@Document that mmap() confirms to POSIX 2008, except that we generate
SIGSEGV instead of SIGBUS for page references beyond the end of a
mapped object.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.43 2014/01/21 03:15:45 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2014 $
d121 11
a131 2
argument by OR'ing the following values:
.Bl -tag -width MAP_FIXEDX
a161 4
.It Dv MAP_PRIVATE
Modifications are private.
.It Dv MAP_SHARED
Modifications are shared.
d228 5
d286 21
@


1.43
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.42 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d256 5
d266 10
@


1.42
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.41 2013/04/08 19:35:00 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 8 2013 $
d190 1
a190 1
.Ao Pa sys/mman.h Ac .
@


1.41
log
@Use .Er for errno E* constants
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.40 2012/10/17 05:46:51 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 17 2012 $
d256 5
@


1.40
log
@reword this sentence to avoid ambiguity;
original diff from dawe; guenther pointed out another interpretation

while here, Fn -> Nm;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.39 2012/04/12 12:53:27 ariane Exp $
d33 1
a33 1
.Dd $Mdocdate: April 12 2012 $
d87 1
a87 1
.Dv EINVAL .
@


1.39
log
@mmap(2) updated

Add that len=0 will yield failure with EINVAL.
While here, rephrase some of the text.
Get rid of MAP_SWAP: its future came and went but nothing came of it.

Lots of hackroom input; including feedback from jmc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.38 2011/04/11 17:46:19 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: April 11 2011 $
d191 3
a193 3
No successful return from
.Fn mmap
will return the value
d196 1
a196 1
.Fn mmap
@


1.38
log
@document MAP_TRYFIXED.  short version: don't use it.  prodded by deraadt.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.37 2008/06/30 05:46:46 otto Exp $
d33 1
a33 1
.Dd $Mdocdate: June 30 2008 $
d47 1
a47 5
function causes the pages starting at
.Fa addr
and continuing for at most
.Fa len
bytes to be mapped from the object described by
d49 5
a53 5
starting at byte offset
.Fa offset .
If
.Fa offset
or
d55 1
a55 2
is not a multiple of the pagesize, the mapped region may extend past the
specified range.
d57 10
d69 15
a83 3
is non-zero, it is used as a hint to the system.
(As a convenience to the system, the actual address of the region may differ
from the address supplied.)
d85 10
d96 2
a97 5
is zero, an address will be selected by the system.
The actual starting address of the region is returned.
A successful
.Fa mmap
deletes any previous mapping in the allocated address range.
d133 12
a144 10
Do not permit the system to select a different address than the one
specified.
If the specified address cannot be used,
.Nm mmap
will fail.
If
.Dv MAP_FIXED
is specified,
.Fa addr
must be a multiple of the pagesize.
d159 5
a163 7
.Fa addr
even if the kernel would normally prefer a different address, but do not
fail if the address is not available.
This option is provided for compatibility with other operating systems
and its use in
.Ox
is discouraged.
a177 8
.Pp
The current design does not allow a process to specify the location of
swap space.
In the future we may define an additional mapping type,
.Dv MAP_SWAP ,
in which
the file descriptor argument specifies a file or device to which swapping
should be done.
d226 2
a227 1
parameter was not page aligned or
d230 3
a232 2
.Fa size
specify a region that would extend beyond the end of the address space.
d235 4
@


1.37
log
@xref mquery
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.36 2007/05/31 19:19:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d131 9
@


1.36
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.35 2007/02/26 08:12:19 otto Exp $
d221 1
@


1.35
log
@another EINVAL case documented
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.34 2004/04/19 10:26:10 jmc Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.34
log
@tidy up a list;
move `.Ts OR Ns 'ing' and `.Em or Ns 'ing' -> `OR'ing';
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.33 2004/04/15 19:52:18 jmc Exp $
d201 5
a205 1
parameter was not page aligned.
@


1.33
log
@various improvements to lists and displays:

.Pp removal
-compact removal for displays
other list/display errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.32 2003/06/02 20:18:39 millert Exp $
d77 3
a79 4
argument by
.Tn OR Ns 'ing
the following values:
.Bl -tag -width MAP_FIXEDX
d97 1
a97 3
argument by
.Em or Ns 'ing
the following values:
@


1.32
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.31 2003/06/01 20:25:23 jmc Exp $
a79 1
.Pp
a100 1
.Pp
@


1.31
log
@- section reorder
- merge COMPATIBILITY
- kill whitespace at EOL
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.30 2003/05/16 09:17:48 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.30
log
@typo from deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.29 2003/03/06 20:04:06 jmc Exp $
d221 8
a241 8
.Sh SEE ALSO
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr mlock 2 ,
.Xr mprotect 2 ,
.Xr msync 2 ,
.Xr munmap 2 ,
.Xr getpagesize 3
@


1.29
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.28 2002/04/30 16:31:42 mpech Exp $
d141 3
a143 3
Modifications are private and unlike
.Dv MAP_PRIVATE
Modifications made by others are not visible.
@


1.28
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.27 2001/12/03 23:58:48 ericj Exp $
d134 1
a134 1
.Xr exec 2
@


1.27
log
@
for MAP_ANON, dont mention giving an fd of anything but -1, this never worked.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.26 2001/10/24 14:09:52 jjbg Exp $
d227 2
a228 2
.Dv PROT_READ 
is useless 
@


1.26
log
@detail the different protections in mprotect(2) man page and add PROT_NONE
in mmap(2) man page. deraadt@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.25 2001/09/05 06:23:01 deraadt Exp $
d112 1
a112 2
regions is used only for
naming, and may be specified as \-1 if no name is associated with the
@


1.25
log
@avoid first person in manual pages
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.24 2001/08/20 05:57:55 mpech Exp $
d92 2
@


1.24
log
@Powered by @@mantoya.
o) fix bogus .Xr usage;

millert@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.23 2001/08/03 19:44:21 espie Exp $
d142 1
a142 1
you don't see modifications made by others.
d231 1
a231 1
for which you need both read and write permissions on the underlying
@


1.23
log
@Acknowledge VM's limitations.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.22 2001/05/11 14:54:25 art Exp $
d222 1
a222 1
.Xr uvm 9 ),
@


1.22
log
@Add back MAP_COPY. Just describe why it shouldn't be used.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.20 2000/10/18 05:12:10 aaron Exp $
d220 13
@


1.21
log
@Remove MAP_COPY. It shouldn't be used anymore.
@
text
@d139 7
@


1.20
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.19 1999/07/04 18:59:44 aaron Exp $
a138 4
.It Dv MAP_COPY
Modifications are private and unlike
.Dv MAP_PRIVATE
you don't see modifications made by others.
@


1.19
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.18 1999/07/02 16:57:49 aaron Exp $
d114 2
a115 2
Mapped from a regular file or character-special device memory.  (This is
the default mapping type, and need not be specified.)
@


1.18
log
@remove extra comma from .Dd arguments: "Month ##, ####" is the correct format,
not "Month, ##, ####"
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.17 1999/06/29 14:10:07 aaron Exp $
d205 1
a205 1
.I addr
@


1.17
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.16 1999/06/16 08:45:12 alex Exp $
d37 1
a37 1
.Dd June, 4, 1993
@


1.16
log
@More xref sorting under SEE ALSO.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.15 1999/06/05 04:47:42 aaron Exp $
d122 3
a124 1
If MAP_FIXED is specified,
d145 1
a145 1
The 
@


1.15
log
@use .Tn instead of .Em for logical/bitwise OR + AND
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.14 1999/05/30 02:26:09 pjanzen Exp $
d216 4
a219 1
.Xr getpagesize 3 ,
d222 1
a222 4
.Xr mprotect 2 ,
.Xr madvise 2 ,
.Xr mincore 2 ,
.Xr mlock 2
@


1.14
log
@grammar and punctuation
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.13 1999/05/27 16:54:23 aaron Exp $
d82 1
a82 1
.Em OR Ns 'ing
@


1.13
log
@add missing .El macros (which properly terminate .Bl macro lists)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.12 1999/05/27 16:21:00 aaron Exp $
d96 1
a96 1
parameter specifies the type of the mapped object, mapping options and
d99 1
a99 1
Sharing, mapping type and options are specified in the
d145 1
a145 1
function does not unmap pages, see
@


1.12
log
@or'ing -> OR'ing
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.11 1999/05/23 14:10:55 aaron Exp $
d214 2
a215 1
.Sh "SEE ALSO"
@


1.11
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.10 1999/02/27 21:56:33 deraadt Exp $
d82 1
a82 1
.Em or Ns 'ing
@


1.10
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.9 1998/08/21 16:38:10 millert Exp $
d39 1
a39 1
.Os BSD 4
@


1.9
log
@document MAP_COPY
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.8 1998/07/06 18:27:59 deraadt Exp $
d174 1
a174 1
.Fn Mmap
d198 1
a198 1
.Fa Fd
d205 1
a205 1
.Fa Fd
@


1.8
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: mmap.2,v 1.5 1995/06/24 10:48:59 cgd Exp $
d137 4
@


1.7
log
@MAP_FAILED; kleink
@
text
@d1 1
@


1.6
log
@make mmap() return void *, add MAP_FAILED
@
text
@d155 3
a157 1
Otherwise, a value of -1 is returned and
d160 8
@


1.5
log
@convert to void *addr
@
text
@d45 1
a45 1
.Ft caddr_t
@


1.4
log
@fix lots of .Xr and other minor things
@
text
@d46 1
a46 1
.Fn mmap "caddr_t addr" "size_t len" "int prot" "int flags" "int fd" "off_t offset"
@


1.3
log
@no MAP_WRITE, fix like freebsd; spotted by bgrayson@@ece.utexas.edu
@
text
@d200 1
a200 1
.Xr getpagesize 2 ,
@


1.2
log
@for i in `find . -name \*.[123456789] -exec grep '^.Dd ' {} /dev/null \; | \
	grep '"' | cut -d':' -f1`; do
sed -e '/^.Dd /s/"//g' -e '/^.Dd /s/\(^.Dd [A-Za-z]*\) \(.*\)$/\1, \2/' <$i >x
cat x > $i
done
@
text
@a170 1
.Dv PROT_WRITE ,
d173 1
a173 1
.Dv MAP_WRITE
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
.Dd "June 4, 1993"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
