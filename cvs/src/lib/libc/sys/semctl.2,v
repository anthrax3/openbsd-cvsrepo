head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.10
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.12
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.10
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.8
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.6
	OPENBSD_5_0:1.14.0.4
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.2
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.13.0.14
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.10
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.28
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.26
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.24
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.22
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.20
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.18
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.16
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.14
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.12
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.10
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.8
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.6
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.16
date	2014.11.15.22.19.53;	author guenther;	state Exp;
branches;
next	1.15;
commitid	GguL5OiT55XFPGr2;

1.15
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2011.02.02.09.37.09;	author fgsch;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.12.11;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.15.11.46.04;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.06.29.14.10.17;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.05.04.16.08;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.27.14.05.10;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.10.17.56.29;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.06.11.18.32.10;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.06.10.08.46.20;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.11.24.02.07.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.03.30.18.49.49;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.10.08.01.20.13;	author michaels;	state Exp;
branches;
next	1.1;

1.1
date	95.12.14.02.21.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Per POSIX, we now only require <sys/msg.h>, <sys/sem.h>, or <sys/shm.h>
@
text
@.\"	$OpenBSD: semctl.2,v 1.15 2014/01/21 03:15:45 schwarze Exp $
.\"	$NetBSD: semctl.2,v 1.2 1997/03/27 08:20:40 mikel Exp $
.\"
.\" Copyright (c) 1995 Frank van der Linden
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"      This product includes software developed for the NetBSD Project
.\"      by Frank van der Linden
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"/
.Dd $Mdocdate: January 21 2014 $
.Dt SEMCTL 2
.Os
.Sh NAME
.Nm semctl
.Nd semaphore control operations
.Sh SYNOPSIS
.In sys/sem.h
.Ft int
.Fn semctl "int semid" "int semnum" "int cmd" "union semun arg"
.Sh DESCRIPTION
The
.Fn semctl
system call provides a number of control operations on the semaphore specified
by
.Fa semnum
and
.Fa semid .
The operation to be performed is specified in
.Fa cmd
(see below).
.Fa arg
is a union of the following fields:
.Bd -literal
	int     val;			/* value for SETVAL */
	struct  semid_ds *buf;		/* buffer for IPC_{STAT,SET} */
	u_short *array;			/* array for GETALL & SETALL */
.Ed
.Pp
The
.Bf -literal
semid_ds
.Ef
structure used in the
.Dv IPC_SET
and
.Dv IPC_STAT
commands is defined as follows in
.In sys/sem.h :
.Bd -literal
struct semid_ds {
	struct ipc_perm sem_perm;	/* operation permissions */
	struct  sem *sem_base;		/* semaphore set */
	u_short sem_nsems;		/* number of sems in set */
	time_t  sem_otime;		/* last operation time */
	time_t  sem_ctime;		/* last change time */
};
.Ed
.Pp
The
.Bf -literal
ipc_perm
.Ef
structure used inside the
.Bf -literal
semid_ds
.Ef
structure is defined in
.In sys/ipc.h
and looks like this:
.Bd -literal
struct ipc_perm {
	uid_t	cuid;		/* creator user id */
	gid_t	cgid;		/* creator group id */
	uid_t	uid;		/* user id */
	gid_t	gid;		/* group id */
	mode_t	mode;		/* r/w permission (see chmod(2)) */
	u_short seq;		/* sequence # (to generate unique msg/sem/shm id) */
	key_t key;		/* user specified msg/sem/shm key */
};
.Ed
.Pp
.Fn semctl
provides the following operations:
.Bl -tag -width IPC_RMIDX
.It Dv GETVAL
Return the value of the semaphore.
.It Dv SETVAL
Set the value of the semaphore to
.Va arg.val .
.It Dv GETPID
Return the pid of the last process that did an operation on this semaphore.
.It Dv GETNCNT
Return the number of processes waiting to acquire the semaphore.
.It Dv GETZCNT
Return the number of processes waiting for the value of the semaphore to
reach 0.
.It Dv GETALL
Return the values for all the semaphores associated with
.Fa semid .
.It Dv SETALL
Set the values for all the semaphores that are associated with the semaphore
identifier
.Fa semid
to the corresponding values in
.Va arg.array .
.It Dv IPC_STAT
Gather statistics about a semaphore and place the information in the
.Bf -literal
semid_ds
.Ef
structure pointed to by
.Fa arg.buf
(see above).
.It Dv IPC_SET
Set the value of the
.Va sem_perm.uid ,
.Va sem_perm.gid
and
.Va sem_perm.mode
fields in the structure associated with the semaphore.
The values are taken from the corresponding fields in the structure
pointed to by
.Fa arg.buf .
This operation can only be executed by the superuser, or a process that
has an effective user ID equal to either
.Va sem_perm.cuid
or
.Va sem_perm.uid
in the data structure associated with the message queue.
.It Dv IPC_RMID
Remove the semaphores associated with
.Fa semid
from the system and destroy the data structures associated with it.
Only the superuser or a process with an effective UID equal to the
.Va sem_perm.cuid
or
.Va sem_perm.uid
values in the data structure associated with the semaphore can do this.
.El
.Pp
The permission to read or change a message queue (see
.Xr semop 2 )
is determined by the
.Va sem_perm.mode
field in the same way as is
done with files (see
.Xr chmod 2 ) ,
but the effective UID can match either the
.Va sem_perm.cuid
field or the
.Va sem_perm.uid
field, and the
effective GID can match either
.Va sem_perm.cgid
or
.Va sem_perm.gid .
.Sh RETURN VALUES
For the
.Dv GETVAL ,
.Dv GETPID ,
.Dv GETNCNT ,
and
.Dv GETZCNT
operations,
.Fn semctl
returns one of the values described above if successful.
All other operations will make
.Fn semctl
return 0 if no errors occur.
Otherwise \-1 is returned and
.Va errno
set to reflect the error.
.Sh ERRORS
.Fn semctl
will fail if:
.Bl -tag -width Er
.It Bq Er EPERM
.Fa cmd
is equal to
.Dv IPC_SET
or
.Dv IPC_RMID
and the caller is not the superuser, nor does
the effective UID match either the
.Va sem_perm.uid
or
.Va sem_perm.cuid
fields of the data structure associated with the message queue.
.It Bq Er EACCES
The caller has no operation permission for this semaphore.
.It Bq Er EINVAL
.Fa semid
is not a valid message semaphore identifier.
.Pp
.Va cmd
is not a valid command.
.It Bq Er EFAULT
.Fa arg.buf
or
.Fa arg.array
specify an invalid address.
.It Bq Er ERANGE
.Fa cmd
is equal to
.Dv SETVAL
or
.Dv SETALL
and
.Va arg.val
or the values in
.Va arg.array
are greater than the system-imposed limit.
.El
.Sh SEE ALSO
.Xr semget 2 ,
.Xr semop 2
@


1.15
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.14 2011/02/02 09:37:09 fgsch Exp $
d33 1
a33 1
.Dd $Mdocdate: February 2 2011 $
d40 1
a40 3
.Fd #include <sys/types.h>
.Fd #include <sys/ipc.h>
.Fd #include <sys/sem.h>
@


1.14
log
@Update after fix for kernel/6547. SETVAL and SETALL can return ERANGE now.
jmc@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.13 2007/05/31 19:19:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d73 1
a73 1
.Aq Pa sys/sem.h :
d93 1
a93 1
.Aq Pa sys/ipc.h
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.12 2000/10/18 05:12:11 aaron Exp $
d33 1
a33 1
.Dd $Mdocdate$
d224 14
a237 1
specifies an invalid address.
@


1.12
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.11 2000/04/15 11:46:04 aaron Exp $
d33 1
a33 1
.Dd August 17, 1995
@


1.11
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.10 1999/06/29 14:10:17 aaron Exp $
d158 2
a159 2
from the system and destroy the data structures associated with it. Only the
superuser or a process with an effective UID equal to the
d191 2
a192 2
returns one of the values described above if successful. All other operations
will make
d194 2
a195 1
return 0 if no errors occur. Otherwise \-1 is returned and
@


1.10
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.9 1999/06/05 04:16:08 aaron Exp $
d149 1
a149 1
This operation can only be executed by the super-user, or a process that
d159 1
a159 1
super-user or a process with an effective UID equal to the
d207 1
a207 1
and the caller is not the super-user, nor does
@


1.9
log
@capitalize the acronym ID
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.8 1999/05/27 14:05:10 aaron Exp $
d123 1
a123 1
Return the values for all the semaphores associated with 
d150 1
a150 1
has an effective user ID equal to either 
d159 1
a159 1
super-user or a process with an effective UID equal to the 
d194 1
a194 1
return 0 if no errors occur. Otherwise -1 is returned and
@


1.8
log
@add some .Dv and .Er, replace blank lines with .Pp
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.7 1999/05/10 17:56:29 aaron Exp $
d150 1
a150 1
has an effective user id equal to either 
@


1.7
log
@correct some Xr's which referred to the wrong man page sections
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.6 1998/06/11 18:32:10 deraadt Exp $
d63 1
a63 1

d68 5
a72 2
structure used in the IPC_SET and IPC_STAT commands is defined
as follows in
d83 1
a83 1

d106 1
a106 1

d159 1
a159 1
super-user or a process with an effective uid equal to the 
d165 1
a165 1

d173 1
a173 1
but the effective uid can match either the
d178 1
a178 1
effective gid can match either
d183 7
a189 1
For the GETVAL, GETPID, GETNCNT and GETZCNT operations,
d203 6
a208 2
is equal to IPC_SET or IPC_RMID and the caller is not the super-user, nor does
the effective uid match either the
d218 1
a218 1

@


1.6
log
@change ipc.h to use uid_t and friends, and then build compat system calls for the old ushort based ipc.h
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.5 1998/06/10 08:46:20 deraadt Exp $
d169 1
a169 1
.Xr chmod 2 ),
@


1.5
log
@XPG says 4th arg is optional
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.4 1997/11/24 02:07:31 deraadt Exp $
d94 6
a99 6
	ushort cuid;		/* creator user id */
	ushort cgid;		/* creator group id */
	ushort uid;		/* user id */
	ushort gid;		/* group id */
	ushort mode;		/* r/w permission (see chmod(2)) */
	ushort seq;		/* sequence # (to generate unique msg/sem/shm id) */
@


1.4
log
@fix mispelling of EACCES; bde
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.3 1997/03/30 18:49:49 millert Exp $
d59 3
a61 3
    int     val;            /* value for SETVAL */
    struct  semid_ds *buf;  /* buffer for IPC_{STAT,SET} */
    u_short *array;         /* array for GETALL & SETALL */
d73 5
a77 5
    struct ipc_perm sem_perm;  /* operation permissions */
    struct  sem *sem_base;     /* semaphore set */
    u_short sem_nsems;         /* number of sems in set */
    time_t  sem_otime;         /* last operation time */
    time_t  sem_ctime;         /* last change time */
d94 7
a100 7
    ushort cuid; /* creator user id */
    ushort cgid; /* creator group id */
    ushort uid;	 /* user id */
    ushort gid;	 /* group id */
    ushort mode; /* r/w permission (see chmod(2)) */
    ushort seq;	 /* sequence # (to generate unique msg/sem/shm id) */
    key_t key;	 /* user specified msg/sem/shm key */
@


1.3
log
@We run OpenBSD not NetBSD
From NetBSD:
    Fix includes specified for shmctl(2)
    Make xrefs consistent
@
text
@d1 1
a1 1
.\"	$OpenBSD: semctl.2,v 1.2 1996/10/08 01:20:13 michaels Exp $
d200 1
a200 1
.It Bq Er EACCESS
@


1.2
log
@Attempt at cleanup.
@
text
@d1 2
a2 2
.\"   $OpenBSD$
.\"	$NetBSD: semctl.2,v 1.1 1995/10/16 23:49:26 jtc Exp $	
d213 1
a214 1
.Xr semget 2
@


1.1
log
@properly add them...
@
text
@d1 1
d35 1
a35 1
.Os NetBSD
@
