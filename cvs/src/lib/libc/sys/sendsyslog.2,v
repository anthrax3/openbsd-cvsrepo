head	1.11;
access;
symbols
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.8.0.6
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2;
locks; strict;
comment	@.\" @;


1.11
date	2017.09.27.15.09.48;	author bluhm;	state Exp;
branches;
next	1.10;
commitid	GjgMVxn7EIiawb15;

1.10
date	2017.09.25.23.00.33;	author espie;	state Exp;
branches;
next	1.9;
commitid	vl8MegKTD7zWuRDb;

1.9
date	2017.07.18.22.22.19;	author bluhm;	state Exp;
branches;
next	1.8;
commitid	8qNCsXIiA61JFmo1;

1.8
date	2016.03.22.13.09.08;	author bluhm;	state Exp;
branches;
next	1.7;
commitid	5RKyKTAWdGTr1VZt;

1.7
date	2016.03.22.07.13.16;	author jmc;	state Exp;
branches;
next	1.6;
commitid	kDb2Lo2z6eic3aLS;

1.6
date	2016.03.21.22.41.28;	author bluhm;	state Exp;
branches;
next	1.5;
commitid	hneUpr7ZOJCeNeHP;

1.5
date	2016.02.22.22.22.30;	author bluhm;	state Exp;
branches;
next	1.4;
commitid	uo7OWS5qpwSuDvtv;

1.4
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	PeV7Ql0T6htfMjhP;

1.3
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	sADK4BTCz4ZrHHo9;

1.2
date	2014.07.12.17.06.06;	author jmc;	state Exp;
branches;
next	1.1;
commitid	z6hjGK8iKHJL4jDx;

1.1
date	2014.07.12.02.28.56;	author deraadt;	state Exp;
branches;
next	;
commitid	i8KQc1IoSdH1xTUE;


desc
@@


1.11
log
@Document how ioctl(2) LIOCSFD on /dev/klog registers a socket pair
to receive sendsyslog(2) messages.
discussed with martijn@@; OK jmc@@ deraadt@@
@
text
@.\"	$OpenBSD: sendsyslog.2,v 1.10 2017/09/25 23:00:33 espie Exp $
.\"
.\" Copyright (c) 2017 Alexander Bluhm <bluhm@@openbsd.org>
.\" Copyright (c) 2014 Theo de Raadt
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: September 25 2017 $
.Dt SENDSYSLOG 2
.Os
.Sh NAME
.Nm sendsyslog
.Nd send a message to syslogd
.Sh SYNOPSIS
.In sys/syslog.h
.In sys/types.h
.Ft int
.Fn sendsyslog "const char *msg" "size_t len" "int flags"
.Sh DESCRIPTION
The
.Fn sendsyslog
function is used to transmit a
.Xr syslog 3
formatted message direct to
.Xr syslogd 8
without requiring the allocation of a socket.
The
.Fa msg
is not NUL terminated and its
.Fa len
is limited to 8192 bytes.
If
.Dv LOG_CONS
is specified in the
.Fa flags
argument, and
.Xr syslogd 8
is not accepting messages, the message will be sent to the console.
This is used internally by
.Xr syslog_r 3 ,
so that messages can be sent during difficult situations.
If sending to
.Xr syslogd 8
fails, dropped messages are counted.
When
.Xr syslogd 8
works again, a warning with the counter and error number is logged.
.Pp
To receive messages from the kernel,
.Xr syslogd 8
has to create a datagram socket pair and register one end.
This registration is done by opening the
.Pa /dev/klog
device and passing one file descriptor of the socket pair as argument
to
.Xr ioctl 2 Dv LIOCSFD
invoked on the klog file descriptor.
After that the messages can be be read from the other end of the
socket pair.
By utilizing
.Pa /dev/klog
the access to log messages is limited to processes that may open
this device.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn sendsyslog
can fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
An invalid user space address was specified for a parameter.
.It Bq Er EMSGSIZE
The socket requires that message be sent atomically,
and the size of the message to be sent made this impossible.
.It Bq Er ENOBUFS
The system was unable to allocate an internal buffer.
The operation may succeed when buffers become available.
.It Bq Er ENOTCONN
The message cannot be sent, likely because
.Xr syslogd 8
is not running.
.El
.Sh SEE ALSO
.Xr syslog_r 3 ,
.Xr syslogd 8
.Sh HISTORY
The
.Fn sendsyslog
function call appeared in
.Ox 5.6 .
The
.Fa flags
argument was added in
.Ox 6.0 .
@


1.10
log
@sendsyslog should take a const char * everywhere.

okay bluhm@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.9 2017/07/18 22:22:19 bluhm Exp $
d3 1
d18 1
a18 1
.Dd $Mdocdate: July 18 2017 $
d58 16
@


1.9
log
@Both syslog(3) and syslogd(8) truncate the message at 8192 bytes.
Do the same in sendsyslog(2) and document the behavior.
reported by Ilja Van Sprundel; OK millert@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.8 2016/03/22 13:09:08 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: March 22 2016 $
d27 1
a27 1
.Fn sendsyslog "const void *msg" "size_t len" "int flags"
@


1.8
log
@Improve the sendsyslog(2) man page.
OK deraadt@@ guenther@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.7 2016/03/22 07:13:16 jmc Exp $
d36 5
@


1.7
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.6 2016/03/21 22:41:28 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: March 21 2016 $
a35 8
.Pp
The
.Fa flags
argument of
.Fn sendsyslog
accepts the
.Dv LOG_CONS
flag.
d38 3
a40 1
is specified, and
d42 1
a42 2
is not accepting messages, the message will be sent directly to the
console.
d46 6
d58 8
d79 4
@


1.6
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.5 2016/02/22 22:22:30 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: February 22 2016 $
d21 1
a21 1
.Nm sendsyslog ,
d31 1
a31 1
functions is used to transmit a
@


1.5
log
@Document sendsyslog2(2) in man page.
from Rafael Neves; input jmc@@; OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.4 2015/09/10 17:55:21 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: September 10 2015 $
a21 1
.Nm sendsyslog2
d27 1
a27 3
.Fn sendsyslog "const void *msg" "size_t len"
.Ft int
.Fn sendsyslog2 "const void *msg" "size_t len" "int flags"
d31 1
a31 3
and
.Fn sendsyslog2
functions are used to transmit a
d40 1
a40 1
.Fn sendsyslog2
a71 4
The
.Fn sendsyslog2
function call appeared in
.Ox 5.9 .
@


1.4
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.3 2014/12/10 19:19:00 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 10 2014 $
d21 2
a22 1
.Nm sendsyslog
d25 1
d29 2
d32 1
d34 3
a36 1
is used to transmit a
d41 14
d77 4
@


1.3
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.2 2014/07/12 17:06:06 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: July 12 2014 $
d24 1
a24 1
.Fd #include <sys/types.h>
@


1.2
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sendsyslog.2,v 1.1 2014/07/12 02:28:56 deraadt Exp $
d38 1
a38 2
The call returns 0 on success, or \-1
if an error occurred.
@


1.1
log
@document sendsyslog(2); ok guenther tedu matthew
@
text
@d1 1
a1 1
.\"	$OpenBSD: send.2,v 1.30 2014/04/07 10:04:17 mpi Exp $
d17 1
a17 1
.Dd $Mdocdate: June 15 2014 $
d21 1
a21 1
.Nm sendsyslog ,
a36 1
.Pp
d42 1
a42 1
fail if:
@

