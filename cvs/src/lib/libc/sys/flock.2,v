head	1.20;
access;
symbols
	OPENBSD_6_0:1.20.0.8
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.4
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.18.0.6
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.24
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.22
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.20
	OPENBSD_5_0:1.16.0.18
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.16
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.14
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.10
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.12
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.8
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.16
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.8
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.6
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.4
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	sADK4BTCz4ZrHHo9;

1.19
date	2014.11.30.19.56.12;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	pPi0sEiBd7MCAVu7;

1.18
date	2013.08.14.06.32.28;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.21.09.14.37;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.06.29.14.09.54;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.23.14.10.51;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.16.19.55.24;	author alex;	state Exp;
branches;
next	1.8;

1.8
date	99.02.27.21.56.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.07.06.18.27.19;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.05.12.07.25.46;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.02.22.12.07.33;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.09.17.11.54.32;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.17.52.03;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.07.03.07.20.25;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@.\"	$OpenBSD: flock.2,v 1.19 2014/11/30 19:56:12 schwarze Exp $
.\"	$NetBSD: flock.2,v 1.5 1995/02/27 12:32:32 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)flock.2	8.2 (Berkeley) 12/11/93
.\"
.Dd $Mdocdate: November 30 2014 $
.Dt FLOCK 2
.Os
.Sh NAME
.Nm flock
.Nd apply or remove an advisory lock on an open file
.Sh SYNOPSIS
.In fcntl.h
.Ft int
.Fn flock "int fd" "int operation"
.Sh DESCRIPTION
.Fn flock
applies or removes an
.Em advisory
lock on the file associated with the file descriptor
.Fa fd .
The
.Fa operation
argument is one of:
.Pp
.Bl -tag -width LOCK_SH -offset indent -compact
.It Dv LOCK_SH
Apply a shared lock.
.It Dv LOCK_EX
Apply an exclusive lock.
.It Dv LOCK_UN
Remove an existing lock.
.El
.Pp
.Dv LOCK_SH
and
.Dv LOCK_EX
may be combined with the optional
.Dv LOCK_NB
for nonblocking mode.
.Pp
Advisory locks allow cooperating processes to perform
consistent operations on files, but do not guarantee
consistency (i.e., processes may still access files
without using advisory locks possibly resulting in
inconsistencies).
.Pp
The locking mechanism allows two types of locks:
.Em shared
locks and
.Em exclusive
locks.
At any time multiple shared locks may be applied to a file,
but at no time are multiple exclusive, or both shared and exclusive,
locks allowed simultaneously on a file.
.Pp
A shared lock may be
.Em upgraded
to an exclusive lock, and vice versa, simply by specifying
the appropriate lock type; this results in the previous
lock being released and the new lock applied (possibly
after other processes have gained and released the lock).
.Pp
Requesting a lock on an object that is already locked normally causes
the caller to be blocked until the lock may be acquired.
If
.Fa operation
is the bitwise OR of
.Dv LOCK_NB
and
.Dv LOCK_SH
or
.Dv LOCK_EX ,
then this will not happen; instead the call will fail and the error
.Er EWOULDBLOCK
will be returned.
.Sh NOTES
Locks are on files, not file descriptors.
That is, file descriptors duplicated through
.Xr dup 2
or
.Xr fork 2
do not result in multiple instances of a lock, but rather multiple
references to a single lock.
If a process holding a lock on a file forks and the child explicitly
unlocks the file, the parent will lose its lock.
.Pp
Processes blocked awaiting a lock may be awakened by signals.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn flock
call fails if:
.Bl -tag -width Er
.It Bq Er EWOULDBLOCK
The file is locked and the
.Dv LOCK_NB
option was specified.
.It Bq Er EBADF
The argument
.Fa fd
is an invalid descriptor.
.It Bq Er EINVAL
The argument
.Fa operation
has an invalid value.
.It Bq Er EOPNOTSUPP
The referenced descriptor is not of the correct type.
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr dup 2 ,
.Xr execve 2 ,
.Xr fcntl 2 ,
.Xr fork 2 ,
.Xr open 2
.Sh HISTORY
The
.Fn flock
system call first appeared in
.Bx 4.1c .
@


1.19
log
@move the description of flags from the SYNOPSIS to the DESCRIPTION;
from <kaspars at bankovskis dot net>, minimally tweaked by me;
ok guenther@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.18 2013/08/14 06:32:28 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: August 14 2013 $
d117 1
a117 4
Zero is returned if the operation was successful;
on an error a \-1 is returned and an error code is left in
the global location
.Va errno .
@


1.18
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.17 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d40 1
a40 6
.Fd #include <fcntl.h>
.Pp
.Fd #define	LOCK_SH	1	/* shared lock */
.Fd #define	LOCK_EX	2	/* exclusive lock */
.Fd #define	LOCK_NB	4	/* don't block when locking */
.Fd #define	LOCK_UN	8	/* unlock */
d49 1
a49 1
A lock is applied by specifying an
d51 11
a61 1
parameter that is one of
d63 1
a63 1
or
d65 3
a67 6
with the optional addition of
.Dv LOCK_NB .
To unlock an existing lock,
.Fa operation
should be
.Dv LOCK_UN .
d94 2
d97 4
a100 2
is included in
.Fa operation ,
@


1.17
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.16 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d38 1
a38 1
.Nd "apply or remove an advisory lock on an open file"
@


1.16
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.15 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd $Mdocdate$
d145 2
a146 2
function call appeared in
.Bx 4.2 .
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.14 2003/02/21 09:14:37 jmc Exp $
d33 1
a33 1
.Dd December 11, 1993
@


1.14
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.13 2002/04/30 16:31:42 mpech Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.13
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.12 2000/10/18 05:12:09 aaron Exp $
d66 2
a67 2
To unlock an existing lock
.Dv operation
d135 1
a135 1
have an invalid value.
@


1.12
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.11 1999/06/29 14:09:54 aaron Exp $
d45 1
a45 1

@


1.11
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.10 1999/05/23 14:10:51 aaron Exp $
d66 1
a66 2
To unlock
an existing lock
d93 3
a95 3
Requesting a lock on an object that is already locked
normally causes the caller to be blocked until the lock may be
acquired.  If
d99 1
a99 2
then this will not happen; instead the call will fail and
the error
d103 2
a104 2
Locks are on files, not file descriptors.  That is, file descriptors
duplicated through
d109 3
a111 3
references to a single lock.  If a process holding a lock on a file
forks and the child explicitly unlocks the file, the parent will
lose its lock.
@


1.10
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.9 1999/05/16 19:55:24 alex Exp $
d85 1
a85 1
locks allowed simultaneously on a file.  
d118 1
a118 1
on an error a -1 is returned and an error code is left in
@


1.9
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.8 1999/02/27 21:56:15 deraadt Exp $
d39 1
a39 1
.Os BSD 4.2
@


1.8
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.7 1998/07/06 18:27:19 deraadt Exp $
a141 1
.Xr open 2 ,
d146 2
a147 1
.Xr fork 2
@


1.7
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: flock.2,v 1.5 1995/02/27 12:32:32 cgd Exp $
d53 1
a53 1
.Fn Flock
@


1.6
log
@recommend fcntl.h not sys/file.h; kleink
@
text
@d1 1
@


1.5
log
@Xr fcntl; pjanzen@@foatdi.harvard.edu
@
text
@d43 1
a43 1
.Fd #include <sys/file.h>
@


1.4
log
@pretty
@
text
@d145 1
@


1.3
log
@document EINVAL per kern_descr.c:sys_flock() change
@
text
@d44 1
@


1.2
log
@document EOPNOTSUPP error return; from kgor@@ksg.com
@
text
@d134 2
a135 2
.Fa fd
refers to an object other than a file.
@


1.1
log
@Initial revision
@
text
@d136 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
