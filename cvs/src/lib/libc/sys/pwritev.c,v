head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.18
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.10
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.14
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.12
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.8
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.6
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.4
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.2
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.10;
commitid	d9R7VGw9CHTkwXE1;

1.10
date	2015.09.11.13.26.20;	author guenther;	state Exp;
branches;
next	1.9;
commitid	BD9IK85aqntd1MJv;

1.9
date	2011.10.16.06.29.56;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.08.08.05.37;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.06.16.56.45;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.11.21.03.10;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.17.21.16.01;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.17.12.57.50;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.05.05.22.58.30;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2000.04.20.06.34.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@/*	$OpenBSD: pwritev.c,v 1.10 2015/09/11 13:26:20 guenther Exp $	*/

/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/syscall.h>
#include <sys/uio.h>

ssize_t	__syscall(quad_t, ...);
PROTO_NORMAL(__syscall);


DEF_SYS(pwritev);

/*
 * This function provides 64-bit offset padding that
 * is not supplied by GCC 1.X but is supplied by GCC 2.X.
 */
ssize_t
HIDDEN(pwritev)(int fd, const struct iovec *iovp, int iovcnt, off_t offset)
{

	return (__syscall(SYS_pwritev, fd, iovp, iovcnt, 0, offset));
}
@


1.10
log
@Use PROTO_NORMAL() on __syscall to go direct, adjusting the declaration
to eliminate some casts.
Retire some uses of old-style STUB* macros where superseded by namespace.h bits

tweaks and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.9 2011/10/16 06:29:56 guenther Exp $	*/
d32 1
a34 2
#include <unistd.h>
#include "thread_private.h"
d40 1
a40 3
STUB_PROTOTYPE(pwritev);

STUB_ALIAS(pwritev);
d47 1
a47 1
STUB_NAME(pwritev)(int fd, const struct iovec *iovp, int iovcnt, off_t offset)
@


1.9
log
@Make consistent the syscall stubs for the syscalls that got special
handling to fix up the alignment of 64bit arguments so that they do
the same dance where _thread_sys_FOO is the real stub and FOO is a
weak alias.  For some of them, this is needed for cancellation handling.

From discussions with fgsch@@, ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.8 2005/08/08 08:05:37 espie Exp $	*/
a31 1
#include <sys/types.h>
d37 2
a38 1
register_t __syscall(quad_t, ...);
a39 1
/* pwritev is weak to support libpthread cancellation */
d53 1
a53 1
	return (__syscall((quad_t)SYS_pwritev, fd, iovp, iovcnt, 0, offset));
@


1.8
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.7 2005/04/06 16:56:45 millert Exp $	*/
d36 1
d40 6
d51 1
a51 1
pwritev(int fd, const struct iovec *iovp, int iovcnt, off_t offset)
@


1.7
log
@Make __syscall prototypes more consistent.  Use register_t as the
return value for system calls that return size_t or ssize_t and
quad_t for those that return off_t.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.6 2003/06/11 21:03:10 deraadt Exp $	*/
a30 4

#if defined(SYSLIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: pwritev.c,v 1.6 2003/06/11 21:03:10 deraadt Exp $";
#endif /* SYSLIBC_SCCS and not lint */
@


1.6
log
@ansification; checked by pval
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.5 2003/06/02 20:18:39 millert Exp $	*/
d33 1
a33 1
static char rcsid[] = "$OpenBSD: pwritev.c,v 1.5 2003/06/02 20:18:39 millert Exp $";
d41 2
d50 2
a51 11
	extern off_t __syscall();
	quad_t q;
	int rv;

	q = __syscall((quad_t)SYS_pwritev, fd, iovp, iovcnt, 0, offset);
	if (/* LINTED constant */ sizeof (quad_t) == sizeof (register_t) ||
	    /* LINTED constant */ BYTE_ORDER == LITTLE_ENDIAN)
		rv = (int)q;
	else
		rv = (int)((u_quad_t)q >> 32);
	return rv;
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.4 2002/09/17 21:16:01 deraadt Exp $	*/
d33 1
a33 1
static char rcsid[] = "$OpenBSD: pwritev.c,v 1.4 2002/09/17 21:16:01 deraadt Exp $";
d46 1
a46 5
pwritev(fd, iovp, iovcnt, offset)
	int fd;
	const struct iovec *iovp;
	int iovcnt;
	off_t offset;
@


1.4
log
@uncommit, since it breaks macppc libc.  millert and miod have now said they
did NOT approve those for commit.  why did mickey feel he was ok to go
commiting a set of diffs which had not been passed around and tested by people?
we don't know.  mickey, have you got something to say for yourself?
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.2 2001/05/05 22:58:30 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d33 1
a33 1
static char rcsid[] = "$OpenBSD: pwritev.c,v 1.2 2001/05/05 22:58:30 millert Exp $";
@


1.3
log
@move __syscall prototype into unistd.h (like everybody else) and avoid private protos for it everywhere; millert@@ ok
@
text
@d56 1
d60 1
a60 1
	q = __syscall(SYS_pwritev, fd, iovp, iovcnt, 0, offset);
@


1.2
log
@Add missing __syscall() proto to fix pread() & friends on big endian
machines.  Found by me, solved by Theo ;-)
@
text
@d1 1
a1 1
/*	$OpenBSD: pwritev.c,v 1.1 2000/04/20 06:34:37 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: pwritev.c,v 1.1 2000/04/20 06:34:37 deraadt Exp $";
a55 1
	extern off_t __syscall();
d59 1
a59 1
	q = __syscall((quad_t)SYS_pwritev, fd, iovp, iovcnt, 0, offset);
@


1.1
log
@p{read,write}{,v} man pages
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: lseek.c,v 1.6 1998/11/20 11:18:53 d Exp $";
d56 1
@

