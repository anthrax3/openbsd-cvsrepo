head	1.49;
access;
symbols
	OPENBSD_6_1:1.49.0.10
	OPENBSD_6_1_BASE:1.49
	OPENBSD_6_0:1.49.0.8
	OPENBSD_6_0_BASE:1.49
	OPENBSD_5_9:1.49.0.4
	OPENBSD_5_9_BASE:1.49
	OPENBSD_5_8:1.49.0.6
	OPENBSD_5_8_BASE:1.49
	OPENBSD_5_7:1.49.0.2
	OPENBSD_5_7_BASE:1.49
	OPENBSD_5_6:1.47.0.4
	OPENBSD_5_6_BASE:1.47
	OPENBSD_5_5:1.46.0.4
	OPENBSD_5_5_BASE:1.46
	OPENBSD_5_4:1.45.0.2
	OPENBSD_5_4_BASE:1.45
	OPENBSD_5_3:1.42.0.2
	OPENBSD_5_3_BASE:1.42
	OPENBSD_5_2:1.40.0.4
	OPENBSD_5_2_BASE:1.40
	OPENBSD_5_1_BASE:1.40
	OPENBSD_5_1:1.40.0.2
	OPENBSD_5_0:1.39.0.2
	OPENBSD_5_0_BASE:1.39
	OPENBSD_4_9:1.36.0.2
	OPENBSD_4_9_BASE:1.36
	OPENBSD_4_8:1.33.0.14
	OPENBSD_4_8_BASE:1.33
	OPENBSD_4_7:1.33.0.10
	OPENBSD_4_7_BASE:1.33
	OPENBSD_4_6:1.33.0.12
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.8
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.6
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.33.0.4
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.32.0.6
	OPENBSD_4_1_BASE:1.32
	OPENBSD_4_0:1.32.0.4
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.32.0.2
	OPENBSD_3_9_BASE:1.32
	OPENBSD_3_8:1.31.0.10
	OPENBSD_3_8_BASE:1.31
	OPENBSD_3_7:1.31.0.8
	OPENBSD_3_7_BASE:1.31
	OPENBSD_3_6:1.31.0.6
	OPENBSD_3_6_BASE:1.31
	OPENBSD_3_5:1.31.0.4
	OPENBSD_3_5_BASE:1.31
	OPENBSD_3_4:1.31.0.2
	OPENBSD_3_4_BASE:1.31
	OPENBSD_3_3:1.27.0.4
	OPENBSD_3_3_BASE:1.27
	OPENBSD_3_2:1.27.0.2
	OPENBSD_3_2_BASE:1.27
	OPENBSD_3_1:1.25.0.2
	OPENBSD_3_1_BASE:1.25
	OPENBSD_3_0:1.24.0.2
	OPENBSD_3_0_BASE:1.24
	OPENBSD_2_9:1.22.0.2
	OPENBSD_2_9_BASE:1.22
	OPENBSD_2_8:1.18.0.2
	OPENBSD_2_8_BASE:1.18
	OPENBSD_2_7:1.15.0.2
	OPENBSD_2_7_BASE:1.15
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.49
date	2015.01.19.15.54.11;	author millert;	state Exp;
branches;
next	1.48;
commitid	nJ2wjGsUe8RwMTRS;

1.48
date	2014.11.25.15.02.13;	author schwarze;	state Exp;
branches;
next	1.47;
commitid	fs1SE28DgegtJk7b;

1.47
date	2014.05.29.06.30.12;	author guenther;	state Exp;
branches;
next	1.46;

1.46
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.45;

1.45
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.44;

1.44
date	2013.03.31.05.07.55;	author guenther;	state Exp;
branches;
next	1.43;

1.43
date	2013.03.30.06.44.44;	author guenther;	state Exp;
branches;
next	1.42;

1.42
date	2013.01.19.07.57.21;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2013.01.19.07.18.15;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2011.11.06.17.22.20;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.38;

1.38
date	2011.07.12.18.41.38;	author matthew;	state Exp;
branches;
next	1.37;

1.37
date	2011.07.12.18.36.23;	author matthew;	state Exp;
branches;
next	1.36;

1.36
date	2011.02.18.13.22.53;	author millert;	state Exp;
branches;
next	1.35;

1.35
date	2010.09.07.21.26.51;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2010.09.07.19.07.43;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2005.09.12.20.06.26;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2003.07.09.21.29.40;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2003.05.20.18.39.41;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2003.04.02.19.00.26;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2002.07.11.19.21.08;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.25;

1.25
date	2002.01.24.21.18.36;	author mickey;	state Exp;
branches;
next	1.24;

1.24
date	2001.09.29.15.44.22;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2001.08.05.21.08.06;	author hugh;	state Exp;
branches;
next	1.22;

1.22
date	2001.03.11.05.34.00;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	2001.03.11.05.18.01;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2001.02.22.22.53.55;	author avsm;	state Exp;
branches;
next	1.19;

1.19
date	2000.11.15.23.51.38;	author provos;	state Exp;
branches;
next	1.18;

1.18
date	2000.10.18.05.12.10;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.09.30.16.17.20;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2000.09.25.20.24.33;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2000.04.21.15.47.27;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.10.19.36.02;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.06.29.14.10.11;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.06.05.04.47.42;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.27.16.21.00;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.27.14.05.10;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.10.55;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.32;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.37;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.07.06.18.28.07;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.10.24.09.04.27;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.07.17.07.38.21;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.22.23.47.56;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.06.13.10.08.35;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.49
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@.\"	$OpenBSD: open.2,v 1.48 2014/11/25 15:02:13 schwarze Exp $
.\"	$NetBSD: open.2,v 1.8 1995/02/27 12:35:14 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)open.2	8.2 (Berkeley) 11/16/93
.\"
.Dd $Mdocdate: November 25 2014 $
.Dt OPEN 2
.Os
.Sh NAME
.Nm open ,
.Nm openat
.Nd open or create a file for reading or writing
.Sh SYNOPSIS
.In fcntl.h
.Ft int
.Fn open "const char *path" "int flags" ...
.Ft int
.Fn openat "int fd" "const char *path" "int flags" ...
.Sh DESCRIPTION
The file name specified by
.Fa path
is opened
for reading and/or writing as specified by the
argument
.Fa flags
and the file descriptor returned to the calling process.
The
.Fa flags
argument may indicate the file is to be
created if it does not exist (by specifying the
.Dv O_CREAT
flag), in which case the file is created with a mode
specified by an additional argument of type
.Vt mode_t
as described in
.Xr chmod 2
and modified by the process' umask value (see
.Xr umask 2 ) .
.Pp
The
.Fa flags
specified are a bitwise OR of the following values.
Exactly one of the first three values (file access modes) must be specified:
.Pp
.Bl -tag -width O_DIRECTORY -offset indent -compact
.It Dv O_RDONLY
Open for reading only.
.It Dv O_WRONLY
Open for writing only.
.It Dv O_RDWR
Open for reading and writing.
.El
.Pp
Any combination of the following flags may additionally be used:
.Pp
.Bl -tag -width O_DIRECTORY -offset indent -compact
.It Dv O_NONBLOCK
Do not block on open or for data to become available.
.It Dv O_APPEND
Append on each write.
.It Dv O_CREAT
Create file if it does not exist.
An additional argument of type
.Vt mode_t
must be supplied to the call.
.It Dv O_TRUNC
Truncate size to 0.
.It Dv O_EXCL
Error if
.Dv O_CREAT
is set and file exists.
.It Dv O_SYNC
Perform synchronous I/O operations.
.It Dv O_SHLOCK
Atomically obtain a shared lock.
.It Dv O_EXLOCK
Atomically obtain an exclusive lock.
.It Dv O_NOFOLLOW
If last path element is a symlink, don't follow it.
.It Dv O_CLOEXEC
Set
.Dv FD_CLOEXEC
(the close-on-exec flag)
on the new file descriptor.
.It Dv O_DIRECTORY
Error if
.Fa path
does not name a directory.
.El
.Pp
Opening a file with
.Dv O_APPEND
set causes each write on the file
to be appended to the end.
If
.Dv O_TRUNC
and a writing mode are specified and the
file exists, the file is truncated to zero length.
If
.Dv O_EXCL
is set with
.Dv O_CREAT
and the file already
exists,
.Fn open
returns an error.
This may be used to implement a simple exclusive access locking mechanism.
If either of
.Dv O_EXCL
or
.Dv O_NOFOLLOW
are set and the last component of the pathname is
a symbolic link,
.Fn open
will fail even if the symbolic
link points to a non-existent name.
If the
.Dv O_NONBLOCK
flag is specified, do not wait for the device or file to be ready or
available.
If the
.Fn open
call would result
in the process being blocked for some reason (e.g., waiting for
carrier on a dialup line),
.Fn open
returns immediately.
This flag also has the effect of making all subsequent I/O on the open file
non-blocking.
If the
.Dv O_SYNC
flag is set, all I/O operations on the file will be done synchronously.
.Pp
A FIFO should either be opened with
.Dv O_RDONLY
or with
.Dv O_WRONLY .
The behavior for opening a FIFO with
.Dv O_RDWR
is undefined.
.Pp
When opening a file, a lock with
.Xr flock 2
semantics can be obtained by setting
.Dv O_SHLOCK
for a shared lock, or
.Dv O_EXLOCK
for an exclusive lock.
If creating a file with
.Dv O_CREAT ,
the request for the lock will never fail
(provided that the underlying filesystem supports locking).
.Pp
If
.Fn open
is successful, the file pointer used to mark the current position within
the file is set to the beginning of the file.
.Pp
When a new file is created it is given the group of the directory
which contains it.
.Pp
The new descriptor is set to remain open across
.Xr execve 2
system calls; see
.Xr close 2
and
.Xr fcntl 2 .
.Pp
The system imposes a limit on the number of file descriptors
open simultaneously by one process.
.Xr getdtablesize 3
returns the current system limit.
.Pp
The
.Fn openat
function is equivalent to
.Fn open
except that where
.Fa path
specifies a relative path,
the file to be opened is determined relative to
the directory associated with file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn openat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used
and the behavior is identical to a call to
.Fn open .
.Sh RETURN VALUES
If successful,
.Fn open
returns a non-negative integer, termed a file descriptor.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
.Sh ERRORS
The
.Fn open
and
.Fn openat
functions will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENOTDIR
.Dv O_DIRECTORY
is specified and
.Fa path
does not name a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
.Dv O_CREAT
is not set and the named file does not exist.
.It Bq Er ENOENT
A component of the path name that must exist does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EACCES
The required permissions (for reading and/or writing)
are denied for the given
.Fa flags .
.It Bq Er EACCES
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which it is to be created
does not permit writing.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname,
or the
.Dv O_NOFOLLOW
flag was specified and the target is a symbolic link.
.It Bq Er EISDIR
The named file is a directory, and the arguments specify
it is to be opened for writing.
.It Bq Er EINVAL
The
.Fa flags
specified for opening the file are not valid.
.It Bq Er EROFS
The named file resides on a read-only file system,
and the file is to be modified.
.It Bq Er EMFILE
The process has already reached its limit for open file descriptors.
.It Bq Er ENFILE
The system file table is full.
.It Bq Er ENXIO
The named file is a character special or block
special file, and the device associated with this special file
does not exist.
.It Bq Er ENXIO
The named file is a FIFO, the
.Dv O_NONBLOCK
and
.Dv O_WRONLY
flags are set, and no process has the file open for reading.
.It Bq Er EINTR
The
.Fn open
operation was interrupted by a signal.
.It Bq Er EOPNOTSUPP
.Dv O_SHLOCK
or
.Dv O_EXLOCK
is specified but the underlying filesystem does not support locking.
.It Bq Er EWOULDBLOCK
.Dv O_NONBLOCK
and one of
.Dv O_SHLOCK
or
.Dv O_EXLOCK
is specified and the file is already locked.
.It Bq Er ENOSPC
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which the entry for the new file is being placed
cannot be extended because there is no space left on the file
system containing the directory.
.It Bq Er ENOSPC
.Dv O_CREAT
is specified,
the file does not exist,
and there are no free inodes on the file system on which the
file is being created.
.It Bq Er EDQUOT
.Dv O_CREAT
is specified,
the file does not exist,
and the directory in which the entry for the new file
is being placed cannot be extended because the
user's quota of disk blocks on the file system
containing the directory has been exhausted.
.It Bq Er EDQUOT
.Dv O_CREAT
is specified,
the file does not exist,
and the user's quota of inodes on the file system on
which the file is being created has been exhausted.
.It Bq Er EIO
An I/O error occurred while making the directory entry or
allocating the inode for
.Dv O_CREAT .
.It Bq Er ETXTBSY
The file is a pure procedure (shared text) file that is being
executed and the
.Fn open
call requests write access.
.It Bq Er EFAULT
.Fa path
points outside the process's allocated address space.
.It Bq Er EEXIST
.Dv O_CREAT
and
.Dv O_EXCL
were specified and the file exists.
.It Bq Er EPERM
The file named by
.Fa path
is flagged append-only but
.Dv O_APPEND
was not specified in
.Fa flags .
.It Bq Er EOPNOTSUPP
An attempt was made to open a socket (not currently implemented).
.It Bq Er EBUSY
An attempt was made to open a terminal device that requires exclusive
access and the specified device has already be opened.
.El
.Pp
Additionally, the
.Fn openat
function will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa path
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Sh SEE ALSO
.Xr chflags 2 ,
.Xr chmod 2 ,
.Xr close 2 ,
.Xr dup 2 ,
.Xr flock 2 ,
.Xr lseek 2 ,
.Xr read 2 ,
.Xr umask 2 ,
.Xr write 2 ,
.Xr getdtablesize 3
.Sh STANDARDS
The
.Fn open
and
.Fn openat
functions conform to
.St -p1003.1-2008 .
.Pp
.Dv POSIX
specifies three different flavors for synchronous I/O:
.Dv O_SYNC ,
.Dv O_DSYNC ,
and
.Dv O_RSYNC .
In
.Ox ,
these are all equivalent.
.Pp
The
.Dv O_SHLOCK
and
.Dv O_EXLOCK
flags are non-standard extensions and should not be used if portability
is of concern.
.Sh HISTORY
An
.Fn open
system call first appeared in
.At v1 .
The
.Fa flags
argument has been supported since
.Bx 4.2 .
Before that, a dedicated
.Fn creat
system call had to be used to create new files;
it appeared in
.At v1 ,
was deprecated in
.Bx 4.3 Reno ,
and removed in
.Ox 5.0 .
.Pp
The
.Fn openat
system call has been available since
.Ox 5.0 .
.Sh CAVEATS
The
.Dv O_TRUNC
flag requires that one of
.Dv O_RDWR
or
.Dv O_WRONLY
also be specified, else
.Er EINVAL
is returned.
@


1.48
log
@macro and typo fixes from kaspars at bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.47 2014/05/29 06:30:12 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: May 29 2014 $
d247 5
a251 4
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
@


1.47
log
@Use .Er for errnos
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.46 2014/02/13 07:30:39 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: February 13 2014 $
d41 1
a41 1
.Fd #include <fcntl.h>
d67 3
a69 1
The flags specified are a bitwise OR of the following values.
d96 3
a98 1
Error if create and file exists.
d260 2
a261 1
are denied for the given flags.
d277 3
a279 1
The flags specified for opening the file are not valid.
d439 1
a439 1
arguments has been supported since
@


1.46
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.45 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d456 1
a456 1
.Dv EINVAL
@


1.45
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.44 2013/03/31 05:07:55 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d67 1
a67 4
The flags specified are formed by bitwise-inclusive
.Tn OR Ns 'ing
the following values defined in
.In fcntl.h .
@


1.44
log
@Use consistent wording for the EINVAL, EBADF, ENOTDIR, and EACCES cases
of the various *at() functions.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.43 2013/03/30 06:44:44 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 30 2013 $
d437 10
d449 1
a449 1
function call appeared in
@


1.43
log
@Various updates, mostly to SYNOPSIS, ERRORS, and STANDARDS, but
some other fixes included...

*at() function ERRORS description suggested by matthew@@

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.42 2013/01/19 07:57:21 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: January 19 2013 $
d374 1
a374 1
argument does not specify an absolute path and the
d378 14
a391 1
nor a valid file descriptor open for reading.
@


1.42
log
@partially re-instate previous; requested by deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.41 2013/01/19 07:18:15 jmc Exp $
d43 1
a43 1
.Fn open "const char *path" "int flags" "mode_t mode"
d45 1
a45 1
.Fn openat "int fd" "const char *path" "int flags" "mode_t mode"
d59 3
a61 2
flag), in which case the file is created with mode
.Fa mode
d91 3
@


1.41
log
@better description of O_CLOEXEC; from russell
ok guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.40 2011/11/06 17:22:20 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 6 2011 $
d103 4
a106 1
Set new file descriptor to close on exec.
@


1.40
log
@Commemorate  research!dmr  by documenting the history of all
system calls existing since Version 1 AT&T UNIX (first batch).
All information taken from primary sources at the UNIX tree of the
UNIX heritage society, http://minnie.tuhs.org/cgi-bin/utree.pl .
The number of errors in the existing manuals is astonishing.
All facts checked by sobrado@@.
Feedback and ok on wording and formatting by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.39 2011/07/18 23:04:40 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 18 2011 $
d103 1
a103 1
Set FD_CLOEXEC on the new file descriptor.
@


1.39
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.38 2011/07/12 18:41:38 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 12 2011 $
d411 6
a416 2
function call appeared in
.At v2 .
@


1.38
log
@Clarify that exactly one of O_RDONLY, O_WRONLY, and O_RDWR must be
specified when calling open(2).
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.37 2011/07/12 18:36:23 matthew Exp $
d37 2
a38 1
.Nm open
d44 2
d68 2
a69 1
the following values.
d192 24
d224 5
a228 1
The named file is opened unless:
d359 14
d387 3
a389 1
function conforms to
d413 4
@


1.37
log
@document O_CLOEXEC and O_DIRECTORY
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.36 2011/02/18 13:22:53 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: February 18 2011 $
d63 1
a63 1
The flags specified are formed by
d65 2
a66 1
the following values:
d75 5
@


1.36
log
@An attempt to open an append-only file without O_APPEND results in EPERM.
OK jmc@@ guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.35 2010/09/07 21:26:51 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: September 7 2010 $
d67 1
a67 1
.Bl -tag -width O_NONBLOCK -offset indent -compact
d92 6
d194 5
@


1.35
log
@Document EBUSY return when attempting to open a cua device that
someone else already has open.  OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.34 2010/09/07 19:07:43 jmc Exp $
d297 7
d311 1
@


1.34
log
@- O_NOFOLLOW is no longer non-posix; from thomas klausner
- bump posix revision and remove xpg; from millert

ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.33 2007/05/31 19:19:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d299 3
@


1.33
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.32 2005/09/12 20:06:26 miod Exp $
d33 1
a33 1
.Dd $Mdocdate$
d314 1
a314 3
.St -p1003.1-90
and
.St -xpg4.2 .
d327 1
a327 2
.Dv O_SHLOCK ,
.Dv O_EXLOCK ,
d329 1
a329 1
.Dv O_NOFOLLOW
@


1.32
log
@Missing colons.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.31 2003/07/09 21:29:40 jmc Exp $
d33 1
a33 1
.Dd November 16, 1993
@


1.31
log
@open() is not ANSI;
pointed out by Pedro Bastos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.30 2003/06/02 20:18:39 millert Exp $
d65 1
a65 1
the following values
@


1.30
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.29 2003/05/20 18:39:41 millert Exp $
a313 1
.St -ansiC ,
@


1.29
log
@Document ENXIO error condicion when the named file is a FIFO and
flags include O_NONBLOCK|O_WRONLY.  Closes PR 3265.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.28 2003/04/02 19:00:26 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.28
log
@fifo -> FIFO

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.27 2002/07/11 19:21:08 millert Exp $
d235 6
@


1.27
log
@Back out revision 1.3; we return EWOULDBLOCK on lock failure, not EAGAIN.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.26 2002/04/30 16:31:42 mpech Exp $
d141 1
a141 1
A fifo should either be opened with
d145 1
a145 1
The behavior for opening a fifo with
@


1.26
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.25 2002/01/24 21:18:36 mickey Exp $
d250 1
a250 1
is specified and the file is locked.
a296 7
.It Bq Er EAGAIN
.Dv O_NONBLOCK
and either
.Dv O_EXLOCK
or
.Dv O_SHLOCK
are set and the file is already locked.
@


1.25
log
@most of these is v2, not v6
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.24 2001/09/29 15:44:22 millert Exp $
d135 2
a136 1
This flag also has the effect of making all subsequent I/O on the open file non-blocking.
@


1.24
log
@Move return value info into its own "RETURN VALUES" section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.23 2001/08/05 21:08:06 hugh Exp $
d344 1
a344 1
.At v6 .
@


1.23
log
@Spelling corrections per PR 1988 by Andrew Hoerter.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.22 2001/03/11 05:34:00 aaron Exp $
d160 1
a160 1
If successful,
d162 2
a163 4
returns a non-negative integer, termed a file descriptor.
It returns \-1 on failure.
The file pointer used to mark the current position within the
file is set to the beginning of the file.
d179 7
@


1.22
log
@Convert flags list from a literal display to a nicely formatted list.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.21 2001/03/11 05:18:01 aaron Exp $
d89 1
a89 1
Perform syncronous I/O operations.
d138 1
a138 1
flag is set, all I/O operations on the file will be done syncronously.
d319 1
a319 1
specifies three different flavors for syncronous I/O:
@


1.21
log
@Better grammar, move HISTORY before CAVEATS, and add some missing commas.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.20 2001/02/22 22:53:55 avsm Exp $
d71 26
a96 14
.Bd -literal -offset indent -compact
O_RDONLY	open for reading only
O_WRONLY	open for writing only
O_RDWR		open for reading and writing
O_NONBLOCK	do not block on open or for data to become available
O_APPEND	append on each write
O_CREAT		create file if it does not exist
O_TRUNC		truncate size to 0
O_EXCL		error if create and file exists
O_SYNC		perform syncronous I/O operations
O_SHLOCK	atomically obtain a shared lock
O_EXLOCK	atomically obtain an exclusive lock
O_NOFOLLOW	if last path element is a symlink, don't follow it
.Ed
@


1.20
log
@Add a caveat about our O_TRUNC paranoia; art@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.19 2000/11/15 23:51:38 provos Exp $
d285 1
a285 2
are set and the file
is already locked.
d309 1
a309 1
.Dv O_DSYNC
d318 1
a318 1
.Dv O_EXLOCK
d323 5
d331 1
a331 1
flag requires that
d335 1
a335 1
are specified, or else
a337 5
.Sh HISTORY
An
.Fn open
function call appeared in
.At v6 .
@


1.19
log
@do not open fifos with O_RDWR, either use O_RDONLY or O_WRONLY. okay aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.18 2000/10/18 05:12:10 aaron Exp $
d324 10
@


1.18
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.17 2000/09/30 16:17:20 millert Exp $
d127 8
@


1.17
log
@Make it obvious that open(2) returns ELOOP if O_NOFOLLOW was specified
and the target is a symlink.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.16 2000/09/25 20:24:33 deraadt Exp $
d89 2
a90 1
to be appended to the end.  If
d101 2
a102 2
returns an error.  This may be used to
implement a simple exclusive access locking mechanism.
d115 2
a116 1
available.  If the
@


1.16
log
@doc that O_TRUNC needs a write mode
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.15 2000/04/21 15:47:27 millert Exp $
d187 4
a190 1
Too many symbolic links were encountered in translating the pathname.
@


1.15
log
@Change kernel-only open flag FNOSYMLINK to userland-visible O_NOFOLLOW;
adapated from FreeBSD.  Also change O_FSYNC to the more standard O_SYNC
and document it.  open(2) needs some real examples for proper usage,
to come later.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.14 2000/04/10 19:36:02 deraadt Exp $
d91 1
a91 1
is specified and the
@


1.14
log
@document EWOULDBLOCK; freebsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.13 1999/06/29 14:10:11 aaron Exp $
d80 1
d83 1
d102 1
a102 1
If
d104 3
a106 1
is set and the last component of the pathname is
d122 3
d285 26
@


1.13
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.12 1999/06/05 04:47:42 aaron Exp $
d206 7
@


1.12
log
@use .Tn instead of .Em for logical/bitwise OR + AND
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.11 1999/05/27 16:21:00 aaron Exp $
d134 1
a134 1
It returns -1 on failure.
d158 1
a158 1
A component of a pathname exceeded 
d160 1
a160 1
characters, or an entire path name exceeded 
d274 1
a274 1
function call appeared in 
@


1.11
log
@or'ing -> OR'ing
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.10 1999/05/27 14:05:10 aaron Exp $
d68 1
a68 1
.Em OR Ns 'ing
@


1.10
log
@add some .Dv and .Er, replace blank lines with .Pp
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.9 1999/05/23 14:10:55 aaron Exp $
d68 1
a68 1
.Em or Ns 'ing
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.8 1999/05/16 19:55:32 alex Exp $
d253 6
a258 1
O_NONBLOCK and either O_EXLOCK or O_SHLOCK are set and the file
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.7 1999/02/27 21:56:37 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.6 1998/07/06 18:28:07 deraadt Exp $
a260 1
.Xr getdtablesize 3 ,
d263 1
d265 1
a265 1
.Xr umask 2
@


1.6
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: open.2,v 1.8 1995/02/27 12:35:14 cgd Exp $
d150 1
a150 1
.Xr Getdtablesize 3
d243 1
a243 1
.Fa Path
@


1.5
log
@prevent open() with wrong flags
@
text
@d1 1
@


1.4
log
@fix Xr
@
text
@d183 2
@


1.3
log
@errno can be set to EAGAIN in conjunction with O_SHLOCK/O_EXLOCK
@
text
@d149 1
a149 1
.Xr Getdtablesize 2
d258 1
a258 1
.Xr getdtablesize 2 ,
@


1.2
log
@fix lots of .Xr and other minor things
@
text
@d249 3
d257 1
@


1.1
log
@Initial revision
@
text
@d141 1
a141 1
.Xr execve
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
