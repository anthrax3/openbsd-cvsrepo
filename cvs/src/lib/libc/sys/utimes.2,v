head	1.27;
access;
symbols
	OPENBSD_6_1:1.27.0.8
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.25.0.4
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.6
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.4
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.10.0.6
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.4
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.16
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.14
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.12
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.10
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.14
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.12
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.10
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.8
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.6
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.27
date	2016.01.05.17.40.26;	author millert;	state Exp;
branches;
next	1.26;
commitid	DmqbXG9eHh9uSvya;

1.26
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	PeV7Ql0T6htfMjhP;

1.25
date	2015.04.17.04.43.20;	author guenther;	state Exp;
branches;
next	1.24;
commitid	zOwbm07fp3gPB2qr;

1.24
date	2015.02.27.23.56.03;	author millert;	state Exp;
branches;
next	1.23;
commitid	FxB63qc0N32kgUsf;

1.23
date	2015.01.19.15.54.12;	author millert;	state Exp;
branches;
next	1.22;
commitid	nJ2wjGsUe8RwMTRS;

1.22
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	sADK4BTCz4ZrHHo9;

1.21
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.02.17.25.34;	author espie;	state Exp;
branches;
next	1.18;

1.18
date	2013.03.31.05.07.55;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2011.11.17.14.26.14;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.19.20.58.05;	author matthew;	state Exp;
branches;
next	1.15;

1.15
date	2011.07.19.07.10.38;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2011.07.19.06.48.20;	author matthew;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.19.03.37.40;	author matthew;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.18.23.21.19;	author matthew;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.10;

1.10
date	2009.12.29.16.12.28;	author sobrado;	state Exp;
branches;
next	1.9;

1.9
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.15.11.46.04;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.06.29.14.10.28;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.23.14.10.57;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.02.27.21.56.59;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.13.10.08.37;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.01.11.08.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Use "path" not "file" as the function arg to utimes() and utimensat().
The DESCRIPTION section already referred to "path" in some places.
@
text
@.\"	$OpenBSD: utimes.2,v 1.26 2015/09/10 17:55:21 schwarze Exp $
.\"	$NetBSD: utimes.2,v 1.9 1996/04/23 10:34:16 mycroft Exp $
.\"
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)utimes.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt UTIMES 2
.Os
.Sh NAME
.Nm utimes ,
.Nm futimes ,
.Nm utimensat ,
.Nm futimens
.Nd set file access and modification times
.Sh SYNOPSIS
.In sys/time.h
.Ft int
.Fn utimes "const char *path" "const struct timeval *times"
.Ft int
.Fn futimes "int fd" "const struct timeval *times"
.In sys/stat.h
.In fcntl.h
.Ft int
.Fn utimensat "int fd" "const char *path" "const struct timespec times[2]" "int flag"
.Ft int
.Fn futimens "int fd" "const struct timespec times[2]"
.Sh DESCRIPTION
The access and modification times of the file named by
.Fa path
or referenced by
.Fa fd
are changed as specified by the argument
.Fa times .
.Pp
If
.Fa times
is
.Dv NULL ,
the access and modification times are set to the current time.
The caller must be the owner of the file, have permission to
write the file, or be the superuser.
.Pp
If
.Fa times
is non-null,
it is assumed to point to an array of two timeval structures.
The access time is set to the value of the first element, and the
modification time is set to the value of the second element.
The caller must be the owner of the file or be the superuser.
.Pp
In either case, the file status change time is set to the current time.
.Pp
The
.Fn utimensat
and
.Fn futimens
are equivalent to
.Fn utimes
and
.Fn futimes ,
respectively, with the following differences.
.Pp
Both
.Fn utimensat
and
.Fn futimens
take two timespec values instead of two timeval values.
Further, either of the
.Fa tv_nsec
fields can be set to one of the following special values defined in
.In sys/stat.h ,
in which case the value of
.Fa tv_sec
is ignored:
.Pp
.Bl -tag -width UTIME_OMIT -offset indent -compact
.It Dv UTIME_NOW
Set the respective timestamp to the greatest value supported
that is not greater than the current time.
.It Dv UTIME_OMIT
Do not change the respective timestamp.
.El
.Pp
Additionally, if the
.Fa path
argument to
.Fn utimensat
specifies a relative path,
the file whose timestamps are changed is determined relative to
the directory associated with file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn utimensat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used.
.Pp
The
.Fa flag
argument is the bitwise OR of zero or more of the following values:
.Pp
.Bl -tag -width AT_SYMLINK_NOFOLLOW -offset indent -compact
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, then the timestamps of the symbolic link are changed.
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn utimes
and
.Fn utimensat
will fail if:
.Bl -tag -width Er
.It Bq Er EACCES
Search permission is denied for a component of the path prefix;
or the
.Fa times
argument is
.Dv NULL
and the effective user ID of the process does not
match the owner of the file, and is not the superuser, and write
access is denied.
.It Bq Er EFAULT
.Fa path
or
.Fa times
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading or writing the affected inode.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er EPERM
The
.Fa times
argument is not
.Dv NULL
and the calling process's effective user ID
does not match the owner of the file and is not the superuser.
.It Bq Er EROFS
The file system containing the file is mounted read-only.
.El
.Pp
Additionally,
.Fn utimensat
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Fa flag
argument was neither zero nor
.Dv AT_SYMLINK_NOFOLLOW .
.It Bq Er EBADF
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa path
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Pp
.Fn futimes
and
.Fn futimens
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
does not refer to a valid descriptor.
.It Bq Er EACCES
The
.Fa times
argument is
.Dv NULL
and the effective user ID of the process does not
match the owner of the file, and is not the superuser, and write
access is denied.
.It Bq Er EFAULT
.Fa times
points outside the process's allocated address space.
.It Bq Er EIO
An I/O error occurred while reading or writing the affected inode.
.It Bq Er EPERM
The
.Fa times
argument is not
.Dv NULL
and the calling process's effective user ID
does not match the owner of the file and is not the superuser.
.It Bq Er EROFS
The file system containing the file is mounted read-only.
.El
.Sh SEE ALSO
.Xr clock_gettime 2 ,
.Xr stat 2 ,
.Xr utime 3
.Sh STANDARDS
The
.Fn utimes ,
.Fn utimensat ,
and
.Fn futimens
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The predecessors of
.Fn utimes
were
.Fn smdate
in
.At v1 ,
.Fn mdate
in
.At v3 ,
and
.Fn utime
in
.At v7 ;
the latter first supported the concept of an access time
in addition to the modification time.
.Pp
The
.Fn utimes
function call appeared in
.Bx 4.2 .
The
.Fn futimes
function call appeared in
.Nx 1.2 .
The
.Fn utimensat
and
.Fn futimens
function calls appeared in
.Ox 5.0 .
.Sh CAVEATS
Some filesystems, such as FAT, use the same timestamp for both
modification and file status change;
on those filesystems, the file status change timestamp will not be
updated if
.Dv UTIME_OMIT
is specified for the modification timestamp argument.
Similarly, on NFS the file status change timestamp will not be
updated if
.Dv UTIME_OMIT
is specified for both the access and the modification timestamp arguments.
@


1.26
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.25 2015/04/17 04:43:20 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 17 2015 $
d45 1
a45 1
.Fn utimes "const char *file" "const struct timeval *times"
d51 1
a51 1
.Fn utimensat "int fd" "const char *file" "const struct timespec times[2]" "int flag"
d159 1
a159 1
.Fa file
d200 1
a200 1
.Fa file
d208 1
a208 1
.Fa file
d214 1
a214 1
.Fa file
@


1.25
log
@Tweaks utimensat/futimens handling to always update ctime, even when both
atime and mtime are UTIME_OMIT (at least for ufs, tmpfs, and ext2fs), and
to correctly handle a timestamp of -1.

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.24 2015/02/27 23:56:03 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: February 27 2015 $
d43 1
a43 1
.Fd #include <sys/time.h>
d48 2
a49 2
.Fd #include <sys/stat.h>
.Fd #include <fcntl.h>
@


1.24
log
@Be clear that when tv_nsec is set to UTIME_*, tv_sec is ignored.
OK guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.23 2015/01/19 15:54:12 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: January 19 2015 $
d78 1
a78 2
In either case, the inode-change-time of the file is set to the current
time.
d296 4
a299 10
.St -p1003.1-2008
specifies that
.Fn utimensat
and
.Fn futimens
shall mark the last file status change timestamp (i.e.\&
.Fa st_ctim )
for update upon successful completion.
However, currently some filesystems (e.g. UFS)
will not do so if
d302 4
@


1.23
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.22 2014/12/10 19:19:00 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 10 2014 $
d99 4
a102 1
.In sys/stat.h :
@


1.22
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.21 2014/02/13 07:30:39 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: February 13 2014 $
d167 5
a171 4
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
@


1.21
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.20 2014/01/21 03:15:45 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2014 $
d140 1
a140 4
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
@


1.20
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.19 2013/11/02 17:25:34 espie Exp $
d33 1
a33 1
.Dd $Mdocdate: November 2 2013 $
d129 1
a129 1
Values for
d131 1
a131 4
are constructed by bitwise-inclusive
.Tn OR Ns ing
flags from the following list defined in
.In fcntl.h :
@


1.19
log
@.Xr clock_gettime
okay deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.18 2013/03/31 05:07:55 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d163 1
a163 1
.Pa File
@


1.18
log
@Use consistent wording for the EINVAL, EBADF, ENOTDIR, and EACCES cases
of the various *at() functions.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.17 2011/11/17 14:26:14 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 17 2011 $
d256 1
@


1.17
log
@Complete the HISTORY of all syscalls that exist since Version 1 AT&T UNIX.
All facts from http://minnie.tuhs.org/cgi-bin/utree.pl, checked by sobrado@@.
Feedback and ok jmc@@ jmc@@ (sic, Jason checked and ok'ed this twice).
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.16 2011/07/19 20:58:05 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 19 2011 $
d196 5
d203 2
a204 2
.Fa path
argument does not specify an absolute path and the
d208 14
a221 1
nor a valid file descriptor open for reading.
@


1.16
log
@Change "constructed by bitwise-inclusive OR'ing of flags from ..." to
"constructed by bitwise-inclusive ORing flags from ..."

Requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.15 2011/07/19 07:10:38 jmc Exp $
d249 16
@


1.15
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.14 2011/07/19 06:48:20 matthew Exp $
d132 2
a133 2
.Tn OR Ns 'ing
of flags from the following list defined in
@


1.14
log
@Fix two typos pointed out by guenther@@ during our libpthread micro
hackathon.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.13 2011/07/19 03:37:40 matthew Exp $
d269 1
a269 1
shall mark the last file status change timestamp (i.e.,
d272 1
a272 1
However, currently some filesystems (e.g., UFS)
d275 1
a275 1
specified for the modification timestamp argument.
@


1.13
log
@document that we don't currently handle UTIME_OMIT correctly for the mtime timestamp
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.12 2011/07/18 23:21:19 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 18 2011 $
d38 1
a38 1
.Nm futimens ,
d53 1
a53 1
.Fn futimes "int fd" "const struct timespec times[2]"
@


1.12
log
@oops, forget a critical "not"
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.11 2011/07/18 23:04:40 matthew Exp $
d263 13
@


1.11
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.10 2009/12/29 16:12:28 sobrado Exp $
d33 1
a33 1
.Dd $Mdocdate: December 29 2009 $
d106 1
a106 1
Do change the respective timestamp.
@


1.10
log
@add missing paragraph break (.Pp) macro.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.9 2007/05/31 19:19:34 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d37 4
a40 1
.Nm utimes
d48 6
d80 62
d149 2
d192 14
d207 2
d240 8
d257 6
@


1.9
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.8 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd $Mdocdate$
d118 1
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.7 2000/04/15 11:46:04 aaron Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.7
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.6 1999/06/29 14:10:28 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.5 1999/05/23 14:10:57 aaron Exp $
d63 1
a63 1
write the file, or be the super-user.
d71 1
a71 1
The caller must be the owner of the file or be the super-user.
d91 1
a91 1
match the owner of the file, and is not the super-user, and write
d118 1
a118 1
does not match the owner of the file and is not the super-user.
d134 1
a134 1
match the owner of the file, and is not the super-user, and write
d147 1
a147 1
does not match the owner of the file and is not the super-user.
@


1.5
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.4 1999/02/27 21:56:59 deraadt Exp $
d57 1
a57 1
If 
d59 1
a59 1
is 
d67 1
a67 2
is
.Pf non- Dv NULL , 
d77 1
a77 1
Otherwise, a value of -1 is returned and
d103 1
a103 1
A component of a pathname exceeded 
d105 1
a105 1
characters, or an entire path name exceeded 
@


1.4
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: utimes.2,v 1.3 1997/06/13 10:08:37 deraadt Exp $
d39 1
a39 1
.Os BSD 4
@


1.3
log
@fix lots of .Xr and other minor things
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d82 1
a82 1
.Fn Utimes
d123 1
a123 1
.Fn Futimes
d127 1
a127 1
.Fa Fd
d138 1
a138 1
.Fa Times
@


1.2
log
@from netbsd; Document futimes()
@
text
@d95 1
a95 1
.Xr File
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
.\"	$NetBSD: utimes.2,v 1.8 1995/07/12 07:18:31 cgd Exp $
d47 2
d50 6
a55 3
The
.Fn utimes
function sets the access and modification times of the named file.
d123 29
d160 4
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
