head	1.20;
access;
symbols
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.12
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.8
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.4
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.8
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.6
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.18.0.10
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.8
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.6
	OPENBSD_5_0:1.18.0.4
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.17.0.6
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.4
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.16.0.8
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.6
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.14
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.12
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.10
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.8
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.6
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2014.12.16.00.06.49;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	V04BuZyu1wULJQGU;

1.19
date	2013.07.20.19.33.34;	author naddy;	state Exp;
branches;
next	1.18;

1.18
date	2010.10.16.18.12.25;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2009.06.05.23.31.34;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2005.05.15.18.10.50;	author pedro;	state Exp;
branches;
next	1.14;

1.14
date	2003.11.21.10.45.48;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.03.24.19.07.49;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	99.12.31.03.43.23;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	99.06.29.14.09.58;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.01.15.32.53;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	99.05.31.17.34.41;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.18;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.07.06.18.27.26;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.06.15.17.55.19;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	97.12.09.05.17.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.06.13.10.08.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.07.17.19.49;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@use .In and delete .Tn; from Kaspars at Bankovskis dot net
@
text
@.\"	$OpenBSD: getfsstat.2,v 1.19 2013/07/20 19:33:34 naddy Exp $
.\"	$NetBSD: getfsstat.2,v 1.6 1995/06/29 11:40:44 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)getfsstat.2	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: July 20 2013 $
.Dt GETFSSTAT 2
.Os
.Sh NAME
.Nm getfsstat
.Nd get list of all mounted file systems
.Sh SYNOPSIS
.In sys/param.h
.In sys/mount.h
.Ft int
.Fn getfsstat "struct statfs *buf" "size_t bufsize" "int flags"
.Sh DESCRIPTION
.Fn getfsstat
returns information about all mounted file systems.
.Fa buf
is a pointer to an array of
.Xr statfs 2
structures defined as follows:
.Bd -literal
typedef struct { int32_t val[2]; } fsid_t;

#define MFSNAMELEN   16 /* length of fs type name, including nul */
#define MNAMELEN     90	/* length of buffer for returned name */

struct statfs {
    u_int32_t  f_flags;	/* copy of mount flags */
    u_int32_t  f_bsize;	/* file system block size */
    u_int32_t  f_iosize;	/* optimal transfer block size */

    				/* unit is f_bsize */
    u_int64_t  f_blocks;	/* total data blocks in file system */
    u_int64_t  f_bfree;	/* free blocks in fs */
    int64_t    f_bavail;	/* free blocks avail to non-superuser */

    u_int64_t  f_files;	/* total file nodes in file system */
    u_int64_t  f_ffree;	/* free file nodes in fs */
    int64_t    f_favail;	/* free file nodes avail to non-root */

    u_int64_t  f_syncwrites;	/* count of sync writes since mount */
    u_int64_t  f_syncreads;	/* count of sync reads since mount */
    u_int64_t  f_asyncwrites;	/* count of async writes since mount */
    u_int64_t  f_asyncreads;	/* count of async reads since mount */

    fsid_t     f_fsid;		/* file system id */
    u_int32_t  f_namemax;	/* maximum filename length */
    uid_t      f_owner;	/* user that mounted the file system */
    u_int64_t  f_ctime;	/* last mount [-u] time */

    char f_fstypename[MFSNAMELEN];	/* fs type name */
    char f_mntonname[MNAMELEN];	/* directory on which mounted */
    char f_mntfromname[MNAMELEN];	/* mounted file system */
    char f_mntfromspec[MNAMELEN];	/* special for mount request */
    union mount_info mount_info;	/* per-filesystem mount options */
};
.Ed
.Pp
The buffer is filled with an array of
.Fa statfs
structures, one for each mounted file system
up to the size specified by
.Fa bufsize .
.Pp
If
.Fa buf
is
.Dv NULL ,
.Fn getfsstat
returns just the number of mounted file systems.
.Pp
Normally
.Fa flags
should be specified as
.Dv MNT_WAIT .
If
.Fa flags
is set to
.Dv MNT_NOWAIT ,
.Fn getfsstat
will return the information it has available without requesting
an update from each file system.
Thus, some of the information will be out of date, but
.Fn getfsstat
will not block waiting for information from a file system that is
unable to respond.
If no flags are provided,
.Dv MNT_WAIT
is assumed.
.Pp
Note that
.Fa f_fsid
will be empty unless the user is the superuser.
.Sh RETURN VALUES
Upon successful completion, the number of
.Fa statfs
structures is returned.
Otherwise, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn getfsstat
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa buf
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr statfs 2 ,
.Xr fstab 5 ,
.Xr mount 8
.Sh HISTORY
The
.Fn getfsstat
function first appeared in
.Bx 4.4 .
@


1.19
log
@sync with the actual definition of struct statfs in <sys/mount.h>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.18 2010/10/16 18:12:25 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 16 2010 $
d40 2
a41 2
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
d139 1
a139 3
An
.Tn I/O
error occurred while reading from or writing to the file system.
@


1.18
log
@update struct statfs; from Vladimir Kirillov
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.17 2009/06/05 23:31:34 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: June 5 2009 $
d79 1
a79 2
    u_int32_t  f_ctime;	/* last mount [-u] time */
    u_int32_t  f_spare[3];	/* spare for later */
d84 1
@


1.17
log
@Note that f_fsid gets cleared when caller is not the superuser.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.16 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d58 28
a85 18
    u_int32_t  f_flags;       /* copy of mount flags */
    int32_t    f_bsize;       /* fundamental file system block size */
    u_int32_t  f_iosize;      /* optimal transfer block size */
    u_int32_t  f_blocks;      /* total data blocks in file system */
    u_int32_t  f_bfree;       /* free blocks in fs */
    int32_t    f_bavail;      /* free blocks avail to non-superuser */
    u_int32_t  f_files;       /* total file nodes in file system */
    u_int32_t  f_ffree;       /* free file nodes in fs */
    fsid_t     f_fsid;        /* file system id */
    uid_t      f_owner;       /* user that mounted the file system */
    u_int32_t  f_syncwrites;  /* count of sync writes since mount */
    u_int32_t  f_asyncwrites; /* count of async writes since mount */
    u_int32_t  f_ctime;       /* last mount [-u] time */
    u_int32_t  f_spare[3];    /* spare for later */
    char       f_fstypename[MFSNAMELEN]; /* fs type name */
    char       f_mntonname[MNAMELEN];    /* directory on which mounted */
    char       f_mntfromname[MNAMELEN];  /* mounted file system */
    union mount_info mount_info;         /* per-filesystem mount options */
@


1.16
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.15 2005/05/15 18:10:50 pedro Exp $
d33 1
a33 1
.Dd $Mdocdate$
d110 4
@


1.15
log
@document getfsstat(2)'s behaviour when no flags are specified, okay jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.14 2003/11/21 10:45:48 jmc Exp $
d33 1
a33 1
.Dd June 9, 1993
@


1.14
log
@sync with <mount.h>; from FreeBSD;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.13 2003/06/02 20:18:39 millert Exp $
d107 3
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.12 2000/03/24 19:07:49 millert Exp $
d54 2
a55 2
#define MFSNAMELEN   16 /* length of fs type name, including NUL */
#define MNAMELEN     32	/* length of buffer for returned name */
d70 2
a71 1
    u_int32_t  f_spare[4];    /* spare for later */
@


1.12
log
@Make f_bsize signed.  Having it unsigned causes surprising (and unwanted)
type coercions.  With this fixed I can back out the hack in df.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.11 1999/12/31 03:43:23 millert Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@f_bavail is signed (sync with sys/mount.h)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.10 1999/06/29 14:09:58 aaron Exp $
d63 1
a63 1
    u_int32_t  f_bsize;       /* fundamental file system block size */
@


1.10
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.9 1999/06/01 15:32:53 millert Exp $
d67 1
a67 1
    u_int32_t  f_bavail;      /* free blocks avail to non-superuser */
@


1.9
log
@getfsstat/getmntinfo do not require inclusion of <sys/ucred.h>
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.8 1999/05/31 17:34:41 millert Exp $
d90 2
a91 1
is given as NULL,
d111 1
a111 1
Upon successful completion, the number of 
d114 1
a114 1
Otherwise, -1 is returned and the global variable
@


1.8
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.7 1999/02/27 21:56:18 deraadt Exp $
a44 1
.Fd #include <sys/ucred.h>
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.6 1998/07/06 18:27:26 deraadt Exp $
d48 1
a48 1
.Fn getfsstat "struct statfs *buf" "long bufsize" "int flags"
d59 1
a59 1
#define MFSNAMELEN   16 /* length of fs type name, including nul */
d63 17
a79 17
    short   f_type;	/* type of file system (unused; zero) */
    short   f_flags;	/* copy of mount flags */
    long    f_bsize;	/* fundamental file system block size */
    long    f_iosize;	/* optimal transfer block size */
    long    f_blocks;	/* total data blocks in file system */
    long    f_bfree;	/* free blocks in fs */
    long    f_bavail;	/* free blocks avail to non-superuser */
    long    f_files;	/* total file nodes in file system */
    long    f_ffree;	/* free file nodes in fs */
    fsid_t  f_fsid;	/* file system id */
    uid_t   f_owner;	/* user that mounted the file system */
    long    f_syncwrites; /* count of sync writes since mount */
    long    f_asyncwrites; /* count of async writes since mount */
    long    f_spare[2];	/* spare for later */
    char    f_fstypename[MFSNAMELEN]; /* fs type name */
    char    f_mntonname[MNAMELEN];    /* directory on which mounted */
    char    f_mntfromname[MNAMELEN];  /* mounted file system */
a82 1
Fields that are undefined for a particular file system are set to -1.
@


1.6
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: getfsstat.2,v 1.6 1995/06/29 11:40:44 cgd Exp $
d50 1
a50 1
.Fn Getfsstat
d52 1
a52 1
.Fa Buf
d119 1
a119 1
.Fn Getfsstat
d123 1
a123 1
.Fa Buf
@


1.5
log
@use Bx macro for BSD versions
@
text
@d1 1
@


1.4
log
@make struct statfs reflect reality.
@
text
@d136 2
a137 1
function first appeared in 4.4BSD.
@


1.3
log
@fix lots of .Xr and other minor things
@
text
@d73 3
a75 1
    long    f_spare[4];	/* spare for later */
@


1.2
log
@nroff mistakes; netbsd pr#2677; kstailey@@dol-esa.gov
@
text
@d53 1
a53 1
.Xr statfs
@


1.1
log
@Initial revision
@
text
@d52 1
a52 1
is a pointer to
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
