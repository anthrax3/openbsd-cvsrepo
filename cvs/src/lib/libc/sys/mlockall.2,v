head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.5.0.20
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.18
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.16
	OPENBSD_5_0:1.5.0.14
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.12
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.10
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.6
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.8
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.4
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.2
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.24
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.22
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.20
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.18
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.16
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.14
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.12
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.10
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.8
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2;
locks; strict;
comment	@.\" @;


1.9
date	2014.12.14.07.42.50;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	4RSteAc4BFbAOGs6;

1.8
date	2014.07.02.22.22.35;	author matthew;	state Exp;
branches;
next	1.7;
commitid	cXzdthTwYzgYTwmX;

1.7
date	2013.03.30.09.00.06;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.30.06.44.44;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2007.02.26.07.44.06;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.11.05.23.18;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2001.03.09.15.13.48;	author art;	state Exp;
branches;
next	;


desc
@@


1.9
log
@macro cleanup; from Kaspars at Bankovskis dot net
@
text
@.\"	$OpenBSD: mlockall.2,v 1.8 2014/07/02 22:22:35 matthew Exp $
.\"	$NetBSD: mlockall.2,v 1.6 2000/06/26 17:00:02 kleink Exp $
.\"
.\" Copyright (c) 1999 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jason R. Thorpe of the Numerical Aerospace Simulation Facility,
.\" NASA Ames Research Center.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 2 2014 $
.Dt MLOCKALL 2
.Os
.Sh NAME
.Nm mlockall ,
.Nm munlockall
.Nd lock (unlock) the address space of a process
.Sh SYNOPSIS
.In sys/mman.h
.Ft int
.Fn mlockall "int flags"
.Ft int
.Fn munlockall "void"
.Sh DESCRIPTION
The
.Fn mlockall
system call locks into memory the physical pages associated with the
address space of a process until the address space is unlocked, the
process exits, or execs another program image.
.Pp
The following flags affect the behavior of
.Fn mlockall :
.Bl -tag -width MCL_CURRENT
.It Dv MCL_CURRENT
Lock all pages currently mapped into the process's address space.
.It Dv MCL_FUTURE
Lock all pages mapped into the process's address space in the future,
at the time the mapping is established.
Note that this may cause future mappings to fail if those mappings
cause resource limits to be exceeded.
.El
.Pp
Since physical memory is a potentially scarce resource, processes are
limited in how much they can lock down.
A single process can lock the minimum of a system-wide
.Dq wired pages
limit and the per-process
.Dv RLIMIT_MEMLOCK
resource limit.
.Pp
The
.Fn munlockall
call unlocks any locked memory regions in the process address space.
Any regions mapped after an
.Fn munlockall
call will not be locked.
.Sh RETURN VALUES
.Rv -std mlockall munlockall
.Sh ERRORS
.Fn mlockall
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa flags
argument is zero or includes unimplemented flags.
.It Bq Er ENOMEM
Locking all of the pages currently mapped would exceed either
the system or per-process
limit for locked memory.
.It Bq Er EAGAIN
Some or all of the memory mapped into the process's address space
could not be locked when the call was made.
.It Bq Er EPERM
The calling process does not have the appropriate privileges to perform
the requested operation.
.El
.Sh SEE ALSO
.Xr mincore 2 ,
.Xr mlock 2 ,
.Xr mmap 2 ,
.Xr munmap 2 ,
.Xr setrlimit 2
.Sh STANDARDS
The
.Fn mlockall
and
.Fn munlockall
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn mlockall
and
.Fn munlockall
functions first appeared in
.Ox 2.9 .
.Sh BUGS
The per-process resource limit is a limit on the amount of virtual
memory locked, while the system-wide limit is for the number of locked
physical pages.
Hence a process with two distinct locked mappings of the same physical page
counts as 2 pages against the per-process limit and only as a single page
in the system limit.
@


1.8
log
@Various small typographic fixes for mman.h manual pages:

Use .Fn instead of .Nm as appropriate
Use .In for include lines
Use .Rv -std where possible
Use .Xr to refer to functions from other manual pages
Remove extraneous sys/types.h include

More substantive changes to follow.

Discussed with schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.7 2013/03/30 09:00:06 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: March 30 2013 $
d86 1
a86 1
.Ar flags
@


1.7
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.6 2013/03/30 06:44:44 guenther Exp $
d40 1
a40 1
.Fd #include <sys/mman.h>
d47 1
a47 1
.Nm mlockall
d53 1
a53 1
.Nm mlockall :
d73 1
a73 1
.Nm munlockall
d76 1
a76 1
.Nm munlockall
d79 1
a79 7
A return value of 0 indicates that the call
succeeded and all pages in the range have either been locked or unlocked.
A return value of -1 indicates an error occurred and the locked
status of all pages in the range remains unchanged.
In this case, the global location
.Va errno
is set to indicate the error.
@


1.6
log
@Various updates, mostly to SYNOPSIS, ERRORS, and STANDARDS, but
some other fixes included...

*at() function ERRORS description suggested by matthew@@

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.5 2008/06/26 05:42:05 ray Exp $
d32 1
a32 1
.Dd $Mdocdate: June 26 2008 $
d95 1
a95 1
Locking the all of the pages currently mapped would exceed either
@


1.5
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.4 2007/05/31 19:19:33 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
a39 1
.Fd #include <sys/types.h>
d93 1
a93 5
argument is zero or includes unimplemented flags or
.Fa addr
and
.Fa size
specify a region that would extend beyond the end of the address space.
d95 2
a96 1
Locking the indicated range would exceed either the system or per-process
d117 1
a117 1
.St -p1003.1b-93 .
@


1.4
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.3 2007/02/26 07:44:06 otto Exp $
a18 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d32 1
a32 1
.Dd $Mdocdate$
@


1.3
log
@Now that the code is consistent, make the descriptions of EINVAL
consisten also. ok millert@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mlockall.2,v 1.2 2001/03/11 05:23:18 aaron Exp $
d39 1
a39 1
.Dd June 12, 1999
@


1.2
log
@Add cvs tag, remove incompatible LIBRARY section, plus other OpenBSD'ifications
typical when importing a new man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d101 5
a105 1
argument is zero or includes unimplemented flags.
@


1.1
log
@Add mlockall and munlockall. man-page from NetBSD.
@
text
@d1 1
a45 2
.Sh LIBRARY
.Lb libc
d67 3
a69 3
at the time the mapping is established.  Note that this may cause
future mappings to fail if those mappings cause resource limits to
be exceeded.
d71 1
a71 1
.Pp 
d77 1
a77 1
.Li RLIMIT_MEMLOCK 
d101 1
a101 1
argument is zero, or includes unimplemented flags.
d109 1
a109 1
The calling process does not have the appropriate privilege to perform
d137 1
a137 1
counts as 2 pages against the per-process limit and as only a single page
@

