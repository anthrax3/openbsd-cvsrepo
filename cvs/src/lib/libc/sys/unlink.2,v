head	1.27;
access;
symbols
	OPENBSD_6_2:1.27.0.4
	OPENBSD_6_2_BASE:1.27
	OPENBSD_6_1:1.27.0.6
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.2
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.26.0.4
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.26.0.6
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.23.0.6
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.4
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.20.0.6
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.4
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.16.0.10
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.8
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.4
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.6
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.2
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.12.0.4
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.11.0.6
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.27
date	2016.06.01.23.00.40;	author millert;	state Exp;
branches;
next	1.26;
commitid	KP5R5EyRJ702SDK9;

1.26
date	2015.01.19.15.54.12;	author millert;	state Exp;
branches;
next	1.25;
commitid	nJ2wjGsUe8RwMTRS;

1.25
date	2014.09.09.07.36.42;	author guenther;	state Exp;
branches;
next	1.24;
commitid	D5VwHFfPSfuDoRts;

1.24
date	2014.09.09.07.23.19;	author guenther;	state Exp;
branches;
next	1.23;
commitid	2tzlIiGNWTJQIUz1;

1.23
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.22;

1.22
date	2013.04.01.20.16.31;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2013.03.31.05.07.55;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2011.11.06.17.22.20;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2011.07.26.20.49.40;	author matthew;	state Exp;
branches;
next	1.18;

1.18
date	2011.07.19.20.58.05;	author matthew;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.16;

1.16
date	2008.10.24.14.34.39;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.02.28.21.34.37;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2002.01.24.21.18.36;	author mickey;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.18.05.12.12;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.07.07.18.21.37;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.15.11.46.04;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.29.14.10.28;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.23.14.10.57;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.56.58;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.12.31.00.01.57;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.06.18.28.55;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.07.03.17.50.36;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.03.26.02.29.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@Document EINVAL when unlinking "." with the AT_REMOVEDIR flag.
@
text
@.\"	$OpenBSD: unlink.2,v 1.26 2015/01/19 15:54:12 millert Exp $
.\"	$NetBSD: unlink.2,v 1.7 1995/02/27 12:39:13 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)unlink.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: January 19 2015 $
.Dt UNLINK 2
.Os
.Sh NAME
.Nm unlink ,
.Nm unlinkat
.Nd remove directory entry
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn unlink "const char *path"
.In fcntl.h
.In unistd.h
.Ft int
.Fn unlinkat "int fd" "const char *path" "int flag"
.Sh DESCRIPTION
The
.Fn unlink
function removes the link named by
.Fa path
from its directory and decrements the link count of the
file which was referenced by the link.
If that decrement reduces the link count of the file
to zero,
and no process has the file open, then
all resources associated with the file are reclaimed.
If one or more processes have the file open when the last link is removed,
the link is removed, but the removal of the file is delayed until
all references to it have been closed.
.Pp
The
.Fn unlinkat
function is equivalent to either the
.Fn unlink
or
.Xr rmdir 2
function depending on the value of
.Fa flag
(see below), except that where
.Fa path
specifies a relative path,
the directory entry to be removed is determined relative to
the directory associated with file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn unlinkat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used
and the behavior is identical to a call to
.Fn unlink
or
.Xr rmdir 2 ,
depending on whether or not the
.Dv AT_REMOVEDIR
bit is set in
.Fa flag .
.Pp
The
.Fa flag
argument is the bitwise OR of zero or more of the following values:
.Pp
.Bl -tag -width AT_REMOVEDIR -offset indent -compact
.It Dv AT_REMOVEDIR
Remove the directory entry specified by
.Fa path
as a directory, not a normal file.
.El
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn unlink
and
.Fn unlinkat
functions will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The named file does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EACCES
Write permission is denied on the directory containing the link
to be removed.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EPERM
The named file is a directory and the effective user ID
of the process is not the superuser, or the file system
containing the file does not permit the use of
.Fn unlink
on a directory.
.It Bq Er EPERM
The directory containing the file is marked sticky,
and neither the containing directory nor the file to be removed
are owned by the effective user ID.
.It Bq Er EPERM
The named file or the directory containing it has its immutable or
append-only flag set (see
.Xr chflags 2 ) .
.It Bq Er EBUSY
The entry to be unlinked is the mount point for a
mounted file system.
.It Bq Er EIO
An I/O error occurred while deleting the directory entry
or deallocating the inode.
.It Bq Er EROFS
The named file resides on a read-only file system.
.It Bq Er EFAULT
.Fa path
points outside the process's allocated address space.
.El
.Pp
Additionally,
.Fn unlinkat
will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
The
.Dv AT_REMOVEDIR
flag bit is set and
.Fa path
does not name a directory.
.It Bq Er ENOTEMPTY
The
.Dv AT_REMOVEDIR
flag bit is set and the named directory contains files other than
.Ql \&.
and
.Ql \&..
in it.
.It Bq Er EINVAL
The value of the
.Fa flag
argument was neither zero nor
.Dv AT_REMOVEDIR .
.It Bq Er EINVAL
The value of the
.Fa flag
argument was
.Dv AT_REMOVEDIR
and the last element of
.Ar path
consists of
.Ql \&. .
.It Bq Er EBADF
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa path
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Sh SEE ALSO
.Xr rm 1 ,
.Xr chflags 2 ,
.Xr close 2 ,
.Xr link 2 ,
.Xr rmdir 2 ,
.Xr symlink 7
.Sh STANDARDS
The
.Fn unlink
and
.Fn unlinkat
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn unlink
system call first appeared in
.At v1 .
The
.Fn unlinkat
function appeared in
.Ox 5.0 .
@


1.26
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.25 2014/09/09 07:36:42 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: September 9 2014 $
d184 9
@


1.25
log
@Don't need to mention names on .Rv line here
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.24 2014/09/09 07:23:19 guenther Exp $
d120 5
a124 4
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
@


1.24
log
@Various updates and corrections to SYNOPSIS, ERRORS, and STANDARDS
Mention that unlinkat() serves the role of rmdirat().
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.23 2014/02/13 07:30:39 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: February 13 2014 $
d108 1
a108 1
.Rv -std unlink unlinkat
@


1.23
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.22 2013/04/01 20:16:31 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: April 1 2013 $
d41 1
a41 1
.Fd #include <unistd.h>
d44 2
a45 2
.Fd #include <fcntl.h>
.Fd #include <unistd.h>
d108 1
a108 4
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
d144 2
a145 1
The named file has its immutable or append-only flag set (see
d207 1
@


1.22
log
@When there are multiple groups of functions with their own #includes
listed, the #includes in each group are independent, so that users
don't need to guess at possible carry-over.

general idea ok otto@@ millert@@
actual diff ok jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.21 2013/03/31 05:07:55 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d97 1
a97 1
Values for
d99 1
a99 4
are constructed by bitwise-inclusive
.Tn OR Ns ing
flags from the following list defined in
.In fcntl.h :
@


1.21
log
@Use consistent wording for the EINVAL, EBADF, ENOTDIR, and EACCES cases
of the various *at() functions.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.20 2011/11/06 17:22:20 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 6 2011 $
a40 1
.Fd #include <fcntl.h>
d44 2
@


1.20
log
@Commemorate  research!dmr  by documenting the history of all
system calls existing since Version 1 AT&T UNIX (first batch).
All information taken from primary sources at the UNIX tree of the
UNIX heritage society, http://minnie.tuhs.org/cgi-bin/utree.pl .
The number of errors in the existing manuals is astonishing.
All facts checked by sobrado@@.
Feedback and ok on wording and formatting by jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.19 2011/07/26 20:49:40 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 26 2011 $
a167 8
.It Bq Er EBADF
The
.Fa path
argument does not specify an absolute path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor open for reading.
d182 26
@


1.19
log
@.Fn rmdir -> .Xr rmdir 2
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.18 2011/07/19 20:58:05 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 19 2011 $
d205 1
a205 1
An
d207 2
a208 2
function call appeared in
.At v2 .
@


1.18
log
@Change "constructed by bitwise-inclusive OR'ing of flags from ..." to
"constructed by bitwise-inclusive ORing flags from ..."

Requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.17 2011/07/18 23:04:40 matthew Exp $
d33 1
a33 1
.Dd $Mdocdate: July 18 2011 $
d90 1
a90 1
.Fn rmdir ,
@


1.17
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.16 2008/10/24 14:34:39 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 24 2008 $
d99 2
a100 2
.Tn OR Ns 'ing
of flags from the following list defined in
@


1.16
log
@some SEE ALSO additions from Ingo Schwarze;
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.15 2007/05/31 19:19:34 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d37 2
a38 1
.Nm unlink
d41 1
d45 2
d61 48
d117 3
a119 1
succeeds unless:
d163 28
d197 7
d209 4
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.14 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd $Mdocdate$
d110 1
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.13 2003/02/28 21:34:37 jmc Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.13
log
@typos;

reboot(2), sigaction(2): help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.12 2002/01/24 21:18:36 mickey Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@most of these is v2, not v6
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.11 2000/10/18 05:12:12 aaron Exp $
d58 1
a58 1
If one or more process have the file open when the last link is removed,
@


1.11
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.10 2000/07/07 18:21:37 aaron Exp $
d122 1
a122 1
.At v6 .
@


1.10
log
@Note that EPERM is returned if the named file to be unlinked has its immutable
or append-only flag set (see chflags(2)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.9 2000/04/15 11:46:04 aaron Exp $
d50 1
a50 2
function
removes the link named by
@


1.9
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.8 1999/06/29 14:10:28 aaron Exp $
d99 3
@


1.8
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.7 1999/05/23 14:10:57 aaron Exp $
d91 1
a91 1
of the process is not the super-user, or the file system
@


1.7
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.6 1999/02/27 21:56:58 deraadt Exp $
d64 1
a64 1
Otherwise, a value of -1 is returned and
d75 1
a75 1
A component of a pathname exceeded 
d77 1
a77 1
characters, or an entire path name exceeded 
d119 1
a119 1
function call appeared in 
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.5 1998/12/31 00:01:57 millert Exp $
d39 1
a39 1
.Os BSD 4
@


1.5
log
@typo; matter@@suspicious.org
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.4 1998/07/06 18:28:55 deraadt Exp $
d108 1
a108 1
.Fa Path
@


1.4
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: unlink.2,v 1.7 1995/02/27 12:39:13 cgd Exp $
a90 1
of the process is not the super-user.
@


1.3
log
@doc EPERM properly; kleink
@
text
@d1 1
@


1.2
log
@fix *link.2 Xr thingies; bgrayson@@r2d2.ece.utexas.edu + more
@
text
@d91 4
@


1.1
log
@Initial revision
@
text
@d110 1
a110 1
.Xr rmdir 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
