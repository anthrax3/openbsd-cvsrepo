head	1.46;
access;
symbols
	OPENBSD_6_1:1.46.0.6
	OPENBSD_6_1_BASE:1.46
	OPENBSD_6_0:1.46.0.4
	OPENBSD_6_0_BASE:1.46
	OPENBSD_5_9:1.46.0.2
	OPENBSD_5_9_BASE:1.46
	OPENBSD_5_8:1.44.0.6
	OPENBSD_5_8_BASE:1.44
	OPENBSD_5_7:1.44.0.2
	OPENBSD_5_7_BASE:1.44
	OPENBSD_5_6:1.40.0.6
	OPENBSD_5_6_BASE:1.40
	OPENBSD_5_5:1.40.0.4
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.35.0.2
	OPENBSD_5_4_BASE:1.35
	OPENBSD_5_3:1.32.0.4
	OPENBSD_5_3_BASE:1.32
	OPENBSD_5_2:1.32.0.2
	OPENBSD_5_2_BASE:1.32
	OPENBSD_5_1_BASE:1.31
	OPENBSD_5_1:1.31.0.2
	OPENBSD_5_0:1.30.0.2
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.28.0.6
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.4
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.2
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.27.0.6
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.2
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.24.0.4
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.24.0.2
	OPENBSD_4_3_BASE:1.24
	OPENBSD_4_2:1.23.0.2
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.22.0.2
	OPENBSD_4_1_BASE:1.22
	OPENBSD_4_0:1.19.0.6
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.4
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.18.0.4
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.2
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.6
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.4
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.46
date	2015.11.07.22.57.52;	author jmc;	state Exp;
branches;
next	1.45;
commitid	NJ1naRj4HulCkLlB;

1.45
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.44;
commitid	PeV7Ql0T6htfMjhP;

1.44
date	2015.01.19.15.54.11;	author millert;	state Exp;
branches;
next	1.43;
commitid	nJ2wjGsUe8RwMTRS;

1.43
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.42;
commitid	sADK4BTCz4ZrHHo9;

1.42
date	2014.11.20.18.44.10;	author krw;	state Exp;
branches;
next	1.41;
commitid	MjmKBVr3Zxxr46JV;

1.41
date	2014.08.22.23.05.15;	author krw;	state Exp;
branches;
next	1.40;
commitid	Brlni1H9a1B2EXRZ;

1.40
date	2014.02.13.07.30.39;	author guenther;	state Exp;
branches;
next	1.39;

1.39
date	2013.11.02.21.36.50;	author guenther;	state Exp;
branches;
next	1.38;

1.38
date	2013.11.02.20.06.59;	author guenther;	state Exp;
branches;
next	1.37;

1.37
date	2013.11.02.19.03.36;	author deraadt;	state Exp;
branches;
next	1.36;

1.36
date	2013.11.02.17.25.34;	author espie;	state Exp;
branches;
next	1.35;

1.35
date	2013.04.01.20.16.31;	author guenther;	state Exp;
branches;
next	1.34;

1.34
date	2013.03.30.09.00.06;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2013.03.30.06.44.44;	author guenther;	state Exp;
branches;
next	1.32;

1.32
date	2012.07.17.07.48.47;	author matthew;	state Exp;
branches;
next	1.31;

1.31
date	2011.11.17.14.26.14;	author schwarze;	state Exp;
branches;
next	1.30;

1.30
date	2011.07.19.20.58.05;	author matthew;	state Exp;
branches;
next	1.29;

1.29
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.28;

1.28
date	2009.11.10.07.25.32;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2009.01.30.18.43.21;	author guenther;	state Exp;
branches;
next	1.26;

1.26
date	2009.01.30.08.01.16;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2009.01.29.22.15.14;	author guenther;	state Exp;
branches;
next	1.24;

1.24
date	2007.11.05.14.52.46;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2006.10.14.14.20.24;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2006.10.05.07.08.18;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2006.10.05.05.05.57;	author ray;	state Exp;
branches;
next	1.19;

1.19
date	2005.06.15.17.48.52;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.15.19.52.18;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.09.21.32;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.17.09.52.21;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.24.21.18.36;	author mickey;	state Exp;
branches;
next	1.13;

1.13
date	2000.06.29.00.57.02;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.15.11.46.04;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.12.04.22.16.39;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.07.05.06.08.05;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.29.14.10.24;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.25.21.16.26;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.23.14.10.56;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.56.53;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	97.06.13.10.08.36;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.03.31.02.23.40;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.02.13.05.20.55;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.01.29.02.05.40;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.46
log
@add missing NAME entries;
@
text
@.\"	$OpenBSD: stat.2,v 1.45 2015/09/10 17:55:21 schwarze Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993, 1994
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)stat.2	8.3 (Berkeley) 4/19/94
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt STAT 2
.Os
.Sh NAME
.Nm stat ,
.Nm lstat ,
.Nm fstatat ,
.Nm fstat ,
.Nm S_ISBLK ,
.Nm S_ISCHR ,
.Nm S_ISDIR ,
.Nm S_ISFIFO ,
.Nm S_ISLNK ,
.Nm S_ISREG ,
.Nm S_ISSOCK
.Nd get file status
.Sh SYNOPSIS
.In sys/stat.h
.Ft int
.Fn stat "const char *path" "struct stat *sb"
.Ft int
.Fn lstat "const char *path" "struct stat *sb"
.Ft int
.Fn fstat "int fd" "struct stat *sb"
.In sys/stat.h
.In fcntl.h
.Ft int
.Fn fstatat "int fd" "const char *path" "struct stat *sb" "int flag"
.Sh DESCRIPTION
The
.Fn stat
function obtains information about the file pointed to by
.Fa path .
Read, write, or execute
permission of the named file is not required, but all directories
listed in the path name leading to the file must be searchable.
.Pp
The
.Fn lstat
function is identical to
.Fn stat
except when the named file is a symbolic link,
in which case
.Fn lstat
returns information about the link itself, not the file the link references.
.Pp
The
.Fn fstatat
function is equivalent to either the
.Fn stat
or
.Fn lstat
function depending on the value of
.Fa flag
(see below), except that where
.Fa path
specifies a relative path,
the file whose information is returned is determined relative to
the directory associated with file descriptor
.Fa fd
instead of the current working directory.
.Pp
If
.Fn fstatat
is passed the special value
.Dv AT_FDCWD
(defined in
.In fcntl.h )
in the
.Fa fd
parameter, the current working directory is used
and the behavior is identical to a call to
.Fn stat
or
.Fn lstat ,
depending on whether or not the
.Dv AT_SYMLINK_NOFOLLOW
bit is set in
.Fa flag .
.Pp
The
.Fa flag
argument is the bitwise OR of zero or more of the following values:
.Pp
.Bl -tag -width AT_SYMLINK_NOFOLLOW -offset indent -compact
.It Dv AT_SYMLINK_NOFOLLOW
If
.Fa path
names a symbolic link, then the status of the symbolic link is returned.
.El
.Pp
The
.Fn fstat
function obtains the same information about an open file
known by the file descriptor
.Fa fd .
.Pp
The
.Fa sb
argument is a pointer to a
.Fn stat
structure
as defined by
.In sys/stat.h
(shown below)
and into which information is placed concerning the file.
.Bd -literal
struct stat {
    dev_t      st_dev;    /* inode's device */
    ino_t      st_ino;    /* inode's number */
    mode_t     st_mode;   /* inode protection mode */
    nlink_t    st_nlink;  /* number of hard links */
    uid_t      st_uid;    /* user ID of the file's owner */
    gid_t      st_gid;    /* group ID of the file's group */
    dev_t      st_rdev;   /* device type */
    struct timespec st_atim;  /* time of last access */
    struct timespec st_mtim;  /* time of last data modification */
    struct timespec st_ctim;  /* time of last file status change */
    off_t      st_size;   /* file size, in bytes */
    blkcnt_t   st_blocks; /* blocks allocated for file */
    blksize_t  st_blksize;/* optimal blocksize for I/O */
    u_int32_t  st_flags;  /* user defined flags for file */
    u_int32_t  st_gen;    /* file generation number */
};
.Ed
.Pp
The time-related fields of
.Li struct stat
are represented in
.Li struct timespec
format, which has nanosecond precision.
However, the actual precision is generally limited by the file
system holding the file.
The fields are as follows:
.Bl -tag -width XXXst_mtim
.It Fa st_atim
Time when file data was last accessed.
Set when the file system object was created and updated by the
.Xr utimes 2
and
.Xr read 2
system calls.
.It Fa st_mtim
Time when file data was last modified.
Changed by the
.Xr truncate 2 ,
.Xr utimes 2 ,
and
.Xr write 2
system calls.
For directories, changed by any system call that alters which files are
in the directory, such as the
.Xr unlink 2 ,
.Xr rename 2 ,
.Xr mkdir 2 ,
and
.Xr symlink 2
system calls.
.It Fa st_ctim
Time when file status was last changed (inode data modification).
Changed by the
.Xr chmod 2 ,
.Xr chown 2 ,
.Xr link 2 ,
.Xr rename 2 ,
.Xr unlink 2 ,
.Xr utimes 2 ,
and
.Xr write 2
system calls.
.El
.Pp
In addition, all the time fields are set to the current time when
a file system object is first created by the
.Xr mkdir 2 ,
.Xr mkfifo 2 ,
.Xr mknod 2 ,
.Xr open 2 ,
and
.Xr symlink 2
system calls.
.Pp
For compatibility with previous standards,
.Fa st_atime ,
.Fa st_mtime ,
and
.Fa st_ctime
macros are provided that expand to the
.Fa tv_secs
member of their respective
.Li struct timespec
member.
Deprecated macros are also provided for some transitional names:
.Fa st_atimensec ,
.Fa st_mtimensec ,
.Fa st_ctimensec ,
.Fa st_atimespec ,
.Fa st_mtimespec ,
and
.Fa st_ctimespec
.Pp
The size-related fields of the
.Li struct stat
are as follows:
.Bl -tag -width XXXst_blksize
.It Fa st_blksize
The optimal I/O block size for the file.
.It Fa st_blocks
The actual number of blocks allocated for the file in 512-byte units.
As short symbolic links are stored in the inode, this number may
be zero.
.El
.Pp
The status information word
.Fa st_mode
has the following bits:
.Bd -literal -offset indent
#define S_IFMT   0170000  /* type of file mask */
#define S_IFIFO  0010000  /* named pipe (fifo) */
#define S_IFCHR  0020000  /* character special */
#define S_IFDIR  0040000  /* directory */
#define S_IFBLK  0060000  /* block special */
#define S_IFREG  0100000  /* regular */
#define S_IFLNK  0120000  /* symbolic link */
#define S_IFSOCK 0140000  /* socket */
#define S_ISUID  0004000  /* set-user-ID on execution */
#define S_ISGID  0002000  /* set-group-ID on execution */
#define S_ISVTX  0001000  /* save swapped text even after use */
#define S_IRWXU  0000700  /* RWX mask for owner */
#define S_IRUSR  0000400  /* R for owner */
#define S_IWUSR  0000200  /* W for owner */
#define S_IXUSR  0000100  /* X for owner */
#define S_IRWXG  0000070  /* RWX mask for group */
#define S_IRGRP  0000040  /* R for group */
#define S_IWGRP  0000020  /* W for group */
#define S_IXGRP  0000010  /* X for group */
#define S_IRWXO  0000007  /* RWX mask for other */
#define S_IROTH  0000004  /* R for other */
#define S_IWOTH  0000002  /* W for other */
#define S_IXOTH  0000001  /* X for other */
.Ed
.Pp
The following macros test a file's type.
If the file is of that type, a non-zero value is returned;
otherwise, 0 is returned.
.Bd -literal -offset indent
S_ISBLK(st_mode m)  /* block special */
S_ISCHR(st_mode m)  /* char special */
S_ISDIR(st_mode m)  /* directory */
S_ISFIFO(st_mode m) /* fifo */
S_ISLNK(st_mode m)  /* symbolic link */
S_ISREG(st_mode m)  /* regular file */
S_ISSOCK(st_mode m) /* socket */
.Ed
.Pp
For a list of access modes, see
.In sys/stat.h ,
.Xr access 2 ,
and
.Xr chmod 2 .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn stat ,
.Fn lstat ,
and
.Fn fstatat
will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
A component of
.Em name
does not exist or
.Em name
is the empty path.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EFAULT
.Fa sb
or
.Em name
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
Additionally,
.Fn fstatat
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of the
.Fa flag
argument was neither zero nor
.Dv AT_SYMLINK_NOFOLLOW .
.It Bq Er EBADF
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is neither
.Dv AT_FDCWD
nor a valid file descriptor.
.It Bq Er ENOTDIR
The
.Fa path
argument specifies a relative path and the
.Fa fd
argument is a valid file descriptor but it does not reference a directory.
.It Bq Er EACCES
The
.Fa path
argument specifies a relative path but search permission is denied
for the directory which the
.Fa fd
file descriptor references.
.El
.Pp
.Fn fstat
will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
is not a valid open file descriptor.
.It Bq Er EFAULT
.Fa sb
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.El
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr chown 2 ,
.Xr clock_gettime 2 ,
.Xr utimes 2 ,
.Xr symlink 7
.Sh STANDARDS
Previous versions of the system used different types for the
.Fa st_dev ,
.Fa st_uid ,
.Fa st_gid ,
.Fa st_rdev ,
.Fa st_size ,
.Fa st_blksize ,
and
.Fa st_blocks
fields.
.Pp
The
.Fn fstat ,
.Fn fstatat ,
.Fn lstat ,
and
.Fn stat
functions are intended to conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn stat
and
.Fn fstat
system calls first appeared in
.At v1 .
The
.In sys/stat.h
header file and the
.Vt "struct stat"
were introduced in
.At v7 .
.Pp
An
.Fn lstat
function call appeared in
.Bx 4.2 .
The
.Fn fstatat
function appeared in
.Ox 5.0 .
.Sh CAVEATS
The file generation number,
.Fa st_gen ,
is only available to the superuser.
.Pp
Certain programs written when the timestamps were just of type
.Li time_t
assumed that the members were consecutive (and could therefore
be treated as an array and have their address passed directly to
.Xr utime 3 ) .
The transition to timestamps of type
.Li struct timespec
broke them irrevocably.
.Sh BUGS
Applying
.Fn fstat
to a pipe or socket
fails to fill in a unique device and inode number pair.
Applying
.Fn fstat
to a socket
also fails to fill in the time fields.
@


1.45
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.44 2015/01/19 15:54:11 millert Exp $
d32 1
a32 1
.Dd $Mdocdate: January 19 2015 $
d39 8
a46 1
.Nm fstat
@


1.44
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.43 2014/12/10 19:19:00 schwarze Exp $
d32 1
a32 1
.Dd $Mdocdate: December 10 2014 $
d42 1
a42 1
.Fd #include <sys/stat.h>
d49 2
a50 2
.Fd #include <sys/stat.h>
.Fd #include <fcntl.h>
@


1.43
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.42 2014/11/20 18:44:10 krw Exp $
d32 1
a32 1
.Dd $Mdocdate: November 20 2014 $
d299 2
a300 1
characters, or an entire path name exceeded
d302 1
a302 1
characters.
@


1.42
log
@Be more POSIXy by using blksize_t (a.k.a. int32) for st_blksize, rather than the current uint32_t.

ok guenther@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.41 2014/08/22 23:05:15 krw Exp $
d32 1
a32 1
.Dd $Mdocdate: August 22 2014 $
d286 1
a286 4
Upon successful completion a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
@


1.41
log
@POSIX/FreeBSD/NetBSD/Linux/etc agree -- blk[size|cnt]_t is the bomb.

So add the types blksize_t (a.k.a. int32_t) and blkcnt_t (a.k.a.
int64_t). Use blkcnt_t in stat.h since the base type (int64_t) does
not change. blksize_t in stat.h will follow after the tree is audited
for signed issues, since the base type will change from u_int32_t
to a POSIX compliant int32_t.

Guidance and feedback from guenther@@

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.40 2014/02/13 07:30:39 guenther Exp $
d32 1
a32 1
.Dd $Mdocdate: February 13 2014 $
d145 1
a145 1
    u_int32_t  st_blksize;/* optimal blocksize for I/O */
@


1.40
log
@Don't use use .Tn with AND/OR/NOT
Phrase any "The _flags_ argument is the ..." line consistently,
eliminating unnecessary use of 'inclusive' and saying "zero or more"
or "one or more" as appropriate

ok millert@@ jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.39 2013/11/02 21:36:50 guenther Exp $
d32 1
a32 1
.Dd $Mdocdate: November 2 2013 $
d144 1
a144 1
    int64_t    st_blocks; /* blocks allocated for file */
@


1.39
log
@Oops, utime() is section 3, not 2

noted by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.38 2013/11/02 20:06:59 guenther Exp $
d105 1
a105 1
Values for
d107 1
a107 4
are constructed by bitwise-inclusive
.Tn OR Ns ing
flags from the following list defined in
.In fcntl.h :
@


1.38
log
@Fix lie that predated NetBSD: the struct stat time padding affected
utime() usage, not utimes()

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.37 2013/11/02 19:03:36 deraadt Exp $
d428 1
a428 1
.Xr utime 2 ) .
@


1.37
log
@out of place word; discussed with jmc and guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.36 2013/11/02 17:25:34 espie Exp $
d427 2
a428 2
be passed directly to
.Xr utimes 2 ) .
@


1.36
log
@.Xr clock_gettime
okay deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.35 2013/04/01 20:16:31 guenther Exp $
d32 1
a32 1
.Dd $Mdocdate: April 1 2013 $
d427 1
a427 1
be placed directly to
@


1.35
log
@When there are multiple groups of functions with their own #includes
listed, the #includes in each group are independent, so that users
don't need to guess at possible carry-over.

general idea ok otto@@ millert@@
actual diff ok jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.34 2013/03/30 09:00:06 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: March 30 2013 $
d374 1
@


1.34
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.33 2013/03/30 06:44:44 guenther Exp $
a41 1
.Fd #include <sys/types.h>
a42 1
.Fd #include <fcntl.h>
d48 4
a52 2
.Ft int
.Fn fstat "int fd" "struct stat *sb"
@


1.33
log
@Various updates, mostly to SYNOPSIS, ERRORS, and STANDARDS, but
some other fixes included...

*at() function ERRORS description suggested by matthew@@

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.32 2012/07/17 07:48:47 matthew Exp $
d32 1
a32 1
.Dd $Mdocdate: July 17 2012 $
d311 1
a311 1
does not exist or 
@


1.32
log
@Remove outdated reference to BSD 4.4 symlink behavior.  Equivalent
text was removed from symlink.7 over 16 years ago.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.31 2011/11/17 14:26:14 schwarze Exp $
d32 1
a32 1
.Dd $Mdocdate: November 17 2011 $
d309 5
a313 1
The named file does not exist.
d331 5
d339 1
a339 1
argument does not specify an absolute path and the
d343 14
a356 1
nor a valid file descriptor open for reading.
d369 1
a369 1
An I/O error occurred while reading from or writing to the file system.
d389 2
a390 1
.Fn stat ,
a391 1
.Fn fstatat ,
d393 3
a395 3
.Fn fstat
function calls are expected to conform to
.St -p1003.1-88 .
d434 6
a439 4
to a socket (and thus to a pipe)
returns a zeroed buffer,
except for the blocksize field,
and a unique device and inode number.
@


1.31
log
@Complete the HISTORY of all syscalls that exist since Version 1 AT&T UNIX.
All facts from http://minnie.tuhs.org/cgi-bin/utree.pl, checked by sobrado@@.
Feedback and ok jmc@@ jmc@@ (sic, Jason checked and ok'ed this twice).
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.30 2011/07/19 20:58:05 matthew Exp $
d32 1
a32 1
.Dd $Mdocdate: July 19 2011 $
a69 9
Unlike other file system objects,
symbolic links do not have an owner, group, access mode, times, etc.
Instead, these attributes are taken from the directory that
contains the link.
The only attributes returned from an
.Fn lstat
that refer to the symbolic link itself are the file type
.Pq Dv S_IFLNK ,
size, blocks, and link count.
@


1.30
log
@Change "constructed by bitwise-inclusive OR'ing of flags from ..." to
"constructed by bitwise-inclusive ORing flags from ..."

Requested by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.29 2011/07/18 23:04:40 matthew Exp $
d32 1
a32 1
.Dd $Mdocdate: July 18 2011 $
d384 1
a384 1
A
d386 11
a396 2
function appeared in
.At v2 .
@


1.29
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.28 2009/11/10 07:25:32 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: November 10 2009 $
d117 2
a118 2
.Tn OR Ns 'ing
of flags from the following list defined in
@


1.28
log
@ctim -> ctime; from ca (pr #6256)
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.27 2009/01/30 18:43:21 guenther Exp $
d32 1
a32 1
.Dd $Mdocdate: January 30 2009 $
d38 1
d44 1
d50 2
d78 49
a126 1
size, blocks, and link count (always 1).
d140 1
a140 1
.Aq Pa sys/stat.h
d293 1
a293 1
.Aq Pa sys/stat.h ,
d303 2
a304 1
.Fn stat
d306 1
a306 1
.Fn lstat
d332 14
d376 3
a378 1
.Fn stat
d392 4
@


1.27
log
@Change section: we're talking about the symlink system call, not the
generic symlink info

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.26 2009/01/30 08:01:16 jmc Exp $
d143 1
a143 1
.It Fa st_ctime
@


1.26
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.25 2009/01/29 22:15:14 guenther Exp $
d32 1
a32 1
.Dd $Mdocdate: January 29 2009 $
d141 1
a141 1
.Xr symlink 7
@


1.25
log
@Update to reflect renaming of the st_[acm]timespec members to st_[acm]tim
per the POSIX 1003.1-2008 spec.  Also, tweak the information about what
system calls hit which timestamps

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.24 2007/11/05 14:52:46 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: November 5 2007 $
d141 1
a141 1
.Xr symlink
d180 1
a180 1
.Fa st_ctimensec , 
@


1.24
log
@sync the comments for struct stat w/ <sys/stat.h>;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.23 2007/05/31 19:19:34 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
d100 3
a102 3
    struct timespec st_atimespec;  /* time of last access */
    struct timespec st_mtimespec;  /* time of last data modification */
    struct timespec st_ctimespec;  /* time of last file status change */
d113 8
a120 3
are as follows:
.Bl -tag -width XXXst_mtime
.It Fa st_atime
d122 2
a123 3
Changed by the
.Xr mknod 2 ,
.Xr utimes 2 ,
d127 1
a127 1
.It Fa st_mtime
d130 1
a130 1
.Xr mknod 2 ,
d135 8
a148 1
.Xr mknod 2 ,
d157 29
d328 4
a331 8
The fields in the stat structure currently marked
.Fa st_spare1 ,
.Fa st_spare2 ,
and
.Fa st_spare3
are present in preparation for inode time stamps expanding to 64 bits.
This, however, can break certain programs that
depend on the time stamps being contiguous (in calls to
d333 3
@


1.23
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.22 2006/10/14 14:20:24 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
d93 1
a93 1
    dev_t      st_dev;    /* device inode resides on */
d95 5
a99 5
    mode_t     st_mode;   /* inode's mode */
    nlink_t    st_nlink;  /* number of hard links to the file */
    uid_t      st_uid;    /* user ID of owner */
    gid_t      st_gid;    /* group ID of owner */
    dev_t      st_rdev;   /* device type, for special file inode */
d105 1
a105 1
    u_int32_t  st_blksize;/* optimal file sys I/O ops blocksize */
@


1.22
log
@sync with <sys/stat.h>;

from simon barner (freebsd pr #57153);
ok millert deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.21 2006/10/05 07:08:18 jmc Exp $
d32 1
a32 1
.Dd April 19, 1994
@


1.21
log
@supply -indent to another display, to make the page match;
kill some trailing whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.20 2006/10/05 05:05:57 ray Exp $
d162 1
a162 1
#define S_IFMT   0170000  /* type of file */
d173 12
a184 3
#define S_IRUSR  0000400  /* read permission, owner */
#define S_IWUSR  0000200  /* write permission, owner */
#define S_IXUSR  0000100  /* execute/search permission, owner */
@


1.20
log
@Add S_ISBLK(), S_ISCHR(), S_ISDIR(), S_ISFIFO(), S_ISLNK(), S_ISREG(),
and S_ISSOCK() macros.

OK deraadt@@, OK and help from jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.19 2005/06/15 17:48:52 millert Exp $
d161 1
a161 1
.Bd -literal
d185 1
a185 1
S_ISFIFO(st_mode m) /* fifo */        
d187 2
a188 2
S_ISREG(st_mode m)  /* regular file */ 
S_ISSOCK(st_mode m) /* socket */       
@


1.19
log
@bye bye whiteouts
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.18 2004/04/15 19:52:18 jmc Exp $
d176 13
@


1.18
log
@various improvements to lists and displays:

.Pp removal
-compact removal for displays
other list/display errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.17 2003/06/02 20:18:39 millert Exp $
a169 1
#define S_IFWHT  0160000  /* whiteout */
@


1.17
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.16 2003/06/02 09:21:32 jmc Exp $
a217 1
.Bl -tag -width Er
d220 1
@


1.16
log
@section reorder;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.15 2003/03/17 09:52:21 jmc Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.15
log
@some small typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.14 2002/01/24 21:18:36 mickey Exp $
a192 11
.Sh COMPATIBILITY
Previous versions of the system used different types for the
.Fa st_dev ,
.Fa st_uid ,
.Fa st_gid ,
.Fa st_rdev ,
.Fa st_size ,
.Fa st_blksize ,
and
.Fa st_blocks
fields.
d234 32
a279 5
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr chown 2 ,
.Xr utimes 2 ,
.Xr symlink 7
a286 16
.Sh STANDARDS
The
.Fn stat
and
.Fn fstat
function calls are expected to conform to
.St -p1003.1-88 .
.Sh HISTORY
A
.Fn stat
function appeared in
.At v2 .
An
.Fn lstat
function call appeared in
.Bx 4.2 .
@


1.14
log
@most of these is v2, not v6
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.13 2000/06/29 00:57:02 aaron Exp $
d268 1
a268 1
returns a zero'd buffer,
@


1.13
log
@Repairs, some from NetBSD PR/10472.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.12 2000/04/15 11:46:04 aaron Exp $
d279 4
@


1.12
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.11 1999/12/04 22:16:39 aaron Exp $
d58 1
a58 1
Read, write or execute
d62 1
d64 1
a64 1
is like
d66 1
a66 1
except in the case where the named file is a symbolic link,
d69 2
a70 5
returns information about the link,
while
.Fn stat
returns information about the file the link references.
Unlike other filesystem objects,
d99 2
a100 2
    mode_t     st_mode;   /* inode protection mode */
    nlink_t    st_nlink;  /* number or hard links to the file */
d123 1
a123 1
.Xr utimes 2
d131 1
a131 1
.Xr utimes 2
d144 1
a144 1
.Xr utimes 2
d175 2
a176 2
#define S_ISUID  0004000  /* set user id on execution */
#define S_ISGID  0002000  /* set group id on execution */
d185 1
a185 1
.Xr access 2
d200 1
a200 1
.Fa st_blksize
d255 2
a256 2
are present in preparation for inode time stamps expanding
to 64 bits.  This, however, can break certain programs that
@


1.11
log
@Formatting fixes, suggested by ericj@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.10 1999/07/05 06:08:05 aaron Exp $
d103 2
a104 2
    uid_t      st_uid;    /* user-id of owner */
    gid_t      st_gid;    /* group-id of owner */
d250 1
a250 1
is only available to the super-user.
@


1.10
log
@use .Li to refer to data types
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.9 1999/06/29 14:10:24 aaron Exp $
d78 2
a79 1
that refer to the symbolic link itself are the file type (S_IFLNK),
d121 1
a121 1
.It st_atime
d129 1
a129 1
.It st_mtime
d137 1
a137 1
.It st_ctime
d156 1
a156 1
.It st_blksize
d158 1
a158 1
.It st_blocks
d168 15
a182 15
#define S_IFMT 0170000           /* type of file */
#define        S_IFIFO  0010000  /* named pipe (fifo) */
#define        S_IFCHR  0020000  /* character special */
#define        S_IFDIR  0040000  /* directory */
#define        S_IFBLK  0060000  /* block special */
#define        S_IFREG  0100000  /* regular */
#define        S_IFLNK  0120000  /* symbolic link */
#define        S_IFSOCK 0140000  /* socket */
#define        S_IFWHT  0160000  /* whiteout */
#define S_ISUID 0004000  /* set user id on execution */
#define S_ISGID 0002000  /* set group id on execution */
#define S_ISVTX 0001000  /* save swapped text even after use */
#define S_IRUSR 0000400  /* read permission, owner */
#define S_IWUSR 0000200  /* write permission, owner */
#define S_IXUSR 0000100  /* execute/search permission, owner */
d197 6
a202 6
.Li st_dev ,
.Li st_uid ,
.Li st_gid ,
.Li st_rdev ,
.Li st_size ,
.Li st_blksize
d204 1
a204 1
.Li st_blocks
d216 1
a216 1
.Dv {NAME_MAX}
d218 1
a218 1
.Dv {PATH_MAX}
@


1.9
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.8 1999/05/25 21:16:26 aaron Exp $
d117 1
a117 1
.Fa struct stat
d152 1
a152 1
.Fa struct stat
@


1.8
log
@kill some old macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.7 1999/05/23 14:10:56 aaron Exp $
d191 1
a191 1
Otherwise, a value of -1 is returned and
d214 1
a214 1
A component of a pathname exceeded 
d216 1
a216 1
characters, or an entire path name exceeded 
d277 1
a277 1
function calls are expected to conform to 
@


1.7
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.6 1999/02/27 21:56:53 deraadt Exp $
d250 1
a250 1
.br
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.5 1997/06/13 10:08:36 deraadt Exp $
d38 1
a38 1
.Os BSD 4
@


1.5
log
@fix lots of .Xr and other minor things
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.4 1997/03/31 02:23:40 deraadt Exp $
d62 1
a62 1
.Fn Lstat
d206 1
a206 1
.Fn Stat
d226 1
a226 1
.Fa Sb
d235 1
a235 1
.Fn Fstat
d241 1
a241 1
.Fa Sb
@


1.4
log
@sync with stat.h; spotted by todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.3 1997/02/13 05:20:55 millert Exp $
d83 1
a83 1
obtains the same information about an open file
d121 1
a121 1
Time when file data last accessed.
d129 1
a129 1
Time when file data last modified.
d263 1
a263 1
.Xr utimes 2
d267 1
a267 1
.Xr fstat
@


1.3
log
@Mention that certain fields are accessible to the super-user only.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stat.2,v 1.9 1996/01/17 02:15:28 jtc Exp $
d98 7
a104 7
    dev_t    st_dev;    /* device inode resides on */
    ino_t    st_ino;    /* inode's number */
    mode_t   st_mode;   /* inode protection mode */
    nlink_t  st_nlink;  /* number or hard links to the file */
    uid_t    st_uid;    /* user-id of owner */
    gid_t    st_gid;    /* group-id of owner */
    dev_t    st_rdev;   /* device type, for special file inode */
d108 5
a112 5
    off_t    st_size;   /* file size, in bytes */
    quad_t   st_blocks; /* blocks allocated for file */
    u_long   st_blksize;/* optimal file sys I/O ops blocksize */
    u_long   st_flags;  /* user defined flags for file */
    u_long   st_gen;    /* file generation number */
@


1.2
log
@from netbsd; add S_IFWHT
@
text
@d1 1
a1 1
.\"	$NetBSD: stat.2,v 1.9 1996/01/17 02:15:28 jtc Exp $
d246 5
a250 1
.Sh CAVEAT
d280 1
a280 1
A
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: stat.2,v 1.8 1995/02/27 12:38:08 cgd Exp $
d175 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
