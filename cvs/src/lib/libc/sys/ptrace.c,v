head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.40
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.42
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.34
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.38
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.36
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.32
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.30
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.28
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.26
	OPENBSD_5_0:1.4.0.24
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.22
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.20
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.6
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.4
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.2
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.1.0.12
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.10
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.8
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.6
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.03.30.07.55.36;	author guenther;	state Exp;
branches;
next	1.4;
commitid	ydrb2vgFKtK8TXi5;

1.4
date	2005.12.21.01.40.23;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.11.21.03.10;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.16.21.27.24;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	99.02.01.08.13.01;	author d;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Turd polish: use HIDDEN= instead of PSEUDO= for ptrace syscall stub, to
make its underlying symbol name look like others.
@
text
@/*	$OpenBSD: ptrace.c,v 1.4 2005/12/21 01:40:23 millert Exp $	*/
/* David Leonard <d@@openbsd.org>, 1999. Public domain. */

#include <sys/types.h>
#include <sys/ptrace.h>
#include <errno.h>

int
WRAP(ptrace)(int request, pid_t pid, caddr_t addr, int data)
{

	/* ptrace(2) is documented to clear errno on success: */
	errno = 0;
	return (ptrace(request, pid, addr, data));
}
DEF_WRAP(ptrace);
@


1.4
log
@Userland programs should include <errno.h> not <sys/errno.h>
OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ptrace.c,v 1.3 2003/06/11 21:03:10 deraadt Exp $	*/
a7 2
int _ptrace(int, pid_t, caddr_t, int);

d9 1
a9 1
ptrace(int request, pid_t pid, caddr_t addr, int data)
d14 1
a14 1
	return (_ptrace(request, pid, addr, data));
d16 1
@


1.3
log
@ansification; checked by pval
@
text
@d1 1
a1 1
/*	$OpenBSD: ptrace.c,v 1.2 2002/02/16 21:27:24 millert Exp $	*/
d6 1
a6 1
#include <sys/errno.h>
@


1.2
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: ptrace.c,v 1.1 1999/02/01 08:13:01 d Exp $	*/
d11 1
a11 5
ptrace(request, pid, addr, data)
	int request;
	pid_t pid;
	caddr_t addr;
	int data;
@


1.1
log
@mi ptrace
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d8 1
a8 1
int _ptrace __P((int, pid_t, caddr_t, int));
@

