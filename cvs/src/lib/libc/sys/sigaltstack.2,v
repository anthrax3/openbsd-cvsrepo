head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.10
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.6
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.16.0.10
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.8
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.4
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.2
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.14.0.12
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.10
	OPENBSD_5_0:1.14.0.8
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.6
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.4
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.14
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.12
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.10
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.8
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.19
date	2015.05.31.23.54.25;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	zjg8ueH5pm88cPnS;

1.18
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.17;
commitid	HuCemPIiOkto0SJD;

1.17
date	2014.09.09.08.17.59;	author guenther;	state Exp;
branches;
next	1.16;
commitid	hrgOvZZTOpUJ6Lpz;

1.16
date	2012.11.17.13.09.21;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2012.11.17.09.19.16;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2009.07.09.10.14.41;	author eric;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.14.05.56.40;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.22.12.05.49;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.29.14.10.21;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.23.14.10.56;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.50;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.12.05.17.55.52;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	98.07.06.18.28.35;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.02.03.20.08.22;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.11.24.07.24.57;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.09.17.11.54.26;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Simple macro fixes (Fd -> In, Nm -> Fn) from Kaspars at Bankovskis dot net.
No content change.
@
text
@.\"	$OpenBSD: sigaltstack.2,v 1.18 2014/11/15 14:41:02 bentley Exp $
.\"	$NetBSD: sigaltstack.2,v 1.3 1995/02/27 10:41:52 cgd Exp $
.\"
.\" Copyright (c) 1983, 1991, 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)sigaltstack.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: November 15 2014 $
.Dt SIGALTSTACK 2
.Os
.Sh NAME
.Nm sigaltstack
.Nd set and/or get signal stack context
.Sh SYNOPSIS
.In signal.h
.Bd -literal
typedef struct sigaltstack {
	void	*ss_sp;
	size_t	ss_size;
	int	ss_flags;
} stack_t;
.Ed
.Ft int
.Fn sigaltstack "const stack_t *ss" "stack_t *oss"
.Sh DESCRIPTION
.Fn sigaltstack
allows users to define an alternate stack on which signals
delivered to this thread
are to be processed.
If
.Fa ss
is non-zero and
.Dv SS_DISABLE
is set in
.Fa ss_flags ,
the signal stack will be disabled.
A disabled stack will cause all signals to be
taken on the regular user stack.
Trying to disable an active stack will cause
.Fn sigaltstack
to return \-1 with
.Va errno
set to
.Er EPERM .
.Pp
Otherwise,
.Fa ss_sp
specifies a pointer to a space to be used as the signal stack and
.Fa ss_size
specifies the size of that space.
When a signal's action indicates its handler
should execute on the signal stack (specified with a
.Xr sigaction 2
call), the system checks to see
if the thread is currently executing on that stack.
If the thread is not currently executing on the signal stack,
the system arranges a switch to the signal stack for the
duration of the signal handler's execution.
.Pp
If
.Fa oss
is non-zero, the current signal stack state is returned.
The
.Fa ss_flags
field will contain the value
.Dv SS_ONSTACK
if the thread is currently on a signal stack and
.Dv SS_DISABLE
if the signal stack is currently disabled.
.Sh NOTES
The value
.Dv SIGSTKSZ
is defined to be the number of bytes/chars that would be used to cover
the usual case when allocating an alternate stack area.
The following code fragment is typically used to allocate an alternate stack.
.Bd -literal -offset indent
if ((sigstk.ss_sp = malloc(SIGSTKSZ)) == NULL)
	/* error return */
sigstk.ss_size = SIGSTKSZ;
sigstk.ss_flags = 0;
if (sigaltstack(&sigstk, 0) == -1)
	perror("sigaltstack");
.Ed
.Pp
An alternative approach is provided for programs with signal handlers
that require a specific amount of stack space other than the default size.
The value
.Dv MINSIGSTKSZ
is defined to be the number of bytes/chars that is required by
the operating system to implement the alternate stack feature.
In computing an alternate stack size,
programs should add
.Dv MINSIGSTKSZ
to their stack requirements to allow for the operating system overhead.
.Pp
Signal stacks are automatically adjusted for the direction of stack
growth and alignment requirements.
Signal stacks may or may not be protected by the hardware and
are not
.Dq grown
automatically as is done for the normal stack.
If the stack overflows and this space is not protected
unpredictable results may occur.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn sigaltstack
will fail and the signal stack context will remain unchanged
if one of the following occurs.
.Bl -tag -width [ENOMEM]
.It Bq Er EFAULT
Either
.Fa ss
or
.Fa oss
points to memory that is not a valid part of the process
address space.
.It Bq Er EINVAL
The
.Fa ss_flags
member pointed to by the
.Fa ss
argument contains flags other than
.Dv SS_DISABLE .
.It Bq Er ENOMEM
Size of alternate stack area is less than or equal to
.Dv MINSIGSTKSZ .
.It Bq Er EPERM
An attempt was made to disable an active stack.
.El
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr setjmp 3
.Sh STANDARDS
The
.Fn sigaltstack
function conforms to
.St -p1003.1-2008 .
.Sh HISTORY
The predecessor to
.Fn sigaltstack ,
the
.Fn sigstack
system call, appeared in
.Bx 4.2 .
@


1.18
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.17 2014/09/09 08:17:59 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: September 9 2014 $
d65 1
a65 1
.Nm
d161 1
a161 1
.Nm
d166 1
a166 1
.Nm sigaltstack ,
@


1.17
log
@Various updates and corrections to SYNOPSIS, ERRORS, and STANDARDS
Mention that unlinkat() serves the role of rmdirat().
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.16 2012/11/17 13:09:21 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: November 17 2012 $
d124 3
a126 1
are not ``grown'' automatically as is done for the normal stack.
@


1.16
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.15 2012/11/17 09:19:16 guenther Exp $
d40 1
a40 2
.Fd #include <sys/types.h>
.Fd #include <signal.h>
d128 1
a128 4
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
@


1.15
log
@Clarify ss_sp's meaning and that alt stacks are per-thread
Correct EPERM vs EINVAL bits, mention posix and stack_t

ok miod@@ beck@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.14 2009/07/09 10:14:41 eric Exp $
d33 1
a33 1
.Dd $Mdocdate: July 9 2009 $
d61 1
a61 1
.Fa ss_flags
d149 1
a149 1
.Fa ss 
@


1.14
log
@promote correct style for error checking

ok tedu@@ deraadt@@ krw@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.13 2007/05/31 19:19:34 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d43 1
a43 2

struct sigaltstack {
d47 1
a47 1
};
d50 1
a50 1
.Fn sigaltstack "const struct sigaltstack *ss" "struct sigaltstack *oss"
d54 1
d58 1
a58 16
is non-zero,
it specifies a pointer to and the size of a
.Em "signal stack"
on which to deliver signals,
and tells the system if the process is currently executing
on that stack.
When a signal's action indicates its handler
should execute on the signal stack (specified with a
.Xr sigaction 2
call), the system checks to see
if the process is currently executing on that stack.
If the process is not currently executing on the signal stack,
the system arranges a switch to the signal stack for the
duration of the signal handler's execution.
.Pp
If
d61 4
a64 5
.Fa ss_flags ,
.Fa ss_sp
and
.Fa ss_size
are ignored and the signal stack will be disabled.
d70 15
a84 5
.Er EINVAL .
A disabled stack will cause all signals to be
taken on the regular user stack.
If the stack is later re-enabled then all signals that were specified
to be processed on an alternate stack will resume doing so.
d93 1
a93 1
if the process is currently on a signal stack and
d146 6
a151 1
An attempt was made to disable an active stack.
d155 2
d161 5
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.12 2004/01/14 05:56:40 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate$
d113 1
a113 1
if (sigaltstack(&sigstk,0) < 0)
@


1.12
log
@update struct, noted by deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.11 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd June 4, 1993
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.10 2000/01/22 12:05:49 aaron Exp $
d46 1
a46 1
	int	ss_size;
@


1.10
log
@Use .Er macro when referring to errno error names.
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.9 1999/06/29 14:10:21 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.8 1999/05/23 14:10:56 aaron Exp $
d90 1
a90 1
.Dv EINVAL .
@


1.8
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.7 1999/02/27 21:56:50 deraadt Exp $
d75 1
a75 1
duration of the signal handler's execution. 
d87 1
a87 1
to return -1 with
d140 1
a140 1
Otherwise, a value of -1 is returned and 
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.6 1998/12/05 17:55:52 espie Exp $
d39 1
a39 1
.Os BSD 4.2
@


1.6
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.5 1998/07/06 18:28:35 deraadt Exp $
d57 1
a57 1
.Fn Sigaltstack
d144 1
a144 1
.Fn Sigaltstack
@


1.5
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: sigaltstack.2,v 1.3 1995/02/27 10:41:52 cgd Exp $
d144 1
a144 1
.Fn Sigstack
@


1.4
log
@void *ss_sp; XPG
@
text
@d1 1
@


1.3
log
@missing blank lines
@
text
@d48 1
a48 1
	char   *ss_sp;
d50 1
a50 1
	int     ss_flags;
@


1.2
log
@use SS_* symbols instead
@
text
@d119 1
@


1.1
log
@Initial revision
@
text
@d46 1
d77 1
a77 1
.Dv SA_DISABLE
d101 1
a101 1
.Dv SA_ONSTACK
d103 1
a103 1
.Dv SA_DISABLE
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
