head	1.29;
access;
symbols
	OPENBSD_6_0:1.29.0.4
	OPENBSD_6_0_BASE:1.29
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.27.0.6
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.26.0.4
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.21.0.24
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.22
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.20
	OPENBSD_5_0:1.21.0.18
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.16
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.14
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.10
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.12
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.8
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.6
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.20.0.8
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.6
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.4
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.19.0.8
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.6
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.17.0.4
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.17.0.2
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.16.0.4
	OPENBSD_3_1_BASE:1.16
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.13.0.2
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.4
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.29
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.28;
commitid	QU70QaxjyBAtj4Rv;

1.28
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	PeV7Ql0T6htfMjhP;

1.27
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	sADK4BTCz4ZrHHo9;

1.26
date	2014.07.13.23.12.02;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	vICsqgFlOY92YD3I;

1.25
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2013.11.02.02.32.51;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2013.03.31.22.11.26;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.08.14.06.24.55;	author jaredy;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2003.06.01.20.02.40;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.16;

1.16
date	2001.09.07.14.35.59;	author niklas;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2001.07.25.20.56.13;	author stevesk;	state Exp;
branches;
next	1.13;

1.13
date	2000.12.23.03.04.34;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.07.02.20.58.01;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.06.29.14.09.59;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.10.51;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.26;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.03.02.10.30.34;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.56.19;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.08.17.17.35.09;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.07.06.18.27.29;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.09.17.11.54.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.21.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.29
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: getitimer.2,v 1.28 2015/09/10 17:55:21 schwarze Exp $
.\"	$NetBSD: getitimer.2,v 1.6 1995/10/12 15:40:54 jtc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)getitimer.2	8.2 (Berkeley) 12/11/93
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt GETITIMER 2
.Os
.Sh NAME
.Nm getitimer ,
.Nm setitimer ,
.Nm timerclear ,
.Nm timerisset ,
.Nm timercmp ,
.Nm timersub ,
.Nm timeradd
.Nd get/set value of interval timer
.Sh SYNOPSIS
.In sys/time.h
.Pp
.Fd #define ITIMER_REAL		0
.Fd #define ITIMER_VIRTUAL	1
.Fd #define ITIMER_PROF		2
.Ft int
.Fn getitimer "int which" "struct itimerval *value"
.Ft int
.Fn setitimer "int which" "const struct itimerval *value" "struct itimerval *ovalue"
.Ft void
.Fn timerclear "struct timeval *"
.Ft int
.Fn timerisset "struct timeval *"
.Ft int
.Fn timercmp "struct timeval *a" "struct timeval *b" CMP
.Ft void
.Fn timersub "struct timeval *a" "struct timeval *b" "struct timeval *res"
.Ft void
.Fn timeradd "struct timeval *a" "struct timeval *b" "struct timeval *res"
.Sh DESCRIPTION
The system provides each process with three interval timers,
defined in
.In sys/time.h .
The
.Fn getitimer
call returns the current value for the timer specified in
.Fa which
in the structure at
.Fa value .
The
.Fn setitimer
call sets a timer to the specified
.Fa value
(returning the previous value of the timer if
.Fa ovalue
is non-null).
.Pp
A timer value is defined by the
.Fa itimerval
structure:
.Bd -literal -offset indent
struct itimerval {
	struct	timeval it_interval;	/* timer interval */
	struct	timeval it_value;	/* current value */
};
.Ed
.Pp
If
.Fa it_value
is non-zero, it indicates the time to the next timer expiration.
If
.Fa it_interval
is non-zero, it specifies a value to be used in reloading
.Fa it_value
when the timer expires.
Setting
.Fa it_value
to 0 disables a timer.
Setting
.Fa it_interval
to 0 causes a timer to be disabled after its next expiration (assuming
.Fa it_value
is non-zero).
.Pp
Time values smaller than the resolution of the
system clock are rounded up to this resolution
(typically 10 milliseconds).
.Pp
The
.Dv ITIMER_REAL
timer decrements in real time.
A
.Dv SIGALRM
signal is
delivered when this timer expires.
.Pp
The
.Dv ITIMER_VIRTUAL
timer decrements in process virtual time.
It runs only when the process is executing.
A
.Dv SIGVTALRM
signal is delivered when it expires.
.Pp
The
.Dv ITIMER_PROF
timer decrements both in process virtual time and
when the system is running on behalf of the process.
It is designed to be used by interpreters in statistically profiling
the execution of interpreted programs.
Each time the
.Dv ITIMER_PROF
timer expires, the
.Dv SIGPROF
signal is delivered.
Because this signal may interrupt in-progress
system calls, programs using this timer must be prepared to
restart interrupted system calls.
.Pp
The remaining five functions are in fact macros for manipulating time
values, defined in
.In sys/time.h .
.Pp
.Fn timerclear "a"
sets the time value in
.Fa a
to zero.
.Pp
.Fn timerisset "a"
tests if the time value in
.Fa a
is non-zero.
.Pp
.Fn timercmp a b CMP
compares two time values in the form
.Fa a
CMP
.Fa b ,
where
.Fa CMP
is <, <=, ==, !=, >=, or > .
.Pp
.Fn timersub a b res
subtracts
.Fa a
-
.Fa b
and stores the result in
.Fa res .
.Pp
.Fn timeradd a b res
adds two timers and stores the result in
.Fa res .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn getitimer
and
.Fn setitimer
will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa value
parameter specified a bad address.
.It Bq Er EINVAL
An unrecognized value for
.Fa which
was specified.
.El
.Pp
In addition,
.Fn setitimer
may return the following error:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa value
or
.Fa ovalue
specified a time that was too large to be handled.
.El
.Sh SEE ALSO
.Xr clock_gettime 2 ,
.Xr gettimeofday 2 ,
.Xr poll 2 ,
.Xr select 2 ,
.Xr sigaction 2
.Sh STANDARDS
The
.Fn getitimer
and
.Fn setitimer
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn getitimer
and
.Fn setitimer
system calls first appeared in
.Bx 4.1c .
@


1.28
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.27 2014/12/10 19:19:00 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 10 2014 $
d38 6
a43 1
.Nm setitimer
@


1.27
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.26 2014/07/13 23:12:02 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 13 2014 $
d41 1
a41 1
.Fd #include <sys/time.h>
@


1.26
log
@one .Fn argument per function argument
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.25 2014/01/21 03:15:45 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2014 $
d175 1
a175 4
If the calls succeed, a value of 0 is returned.
If an error occurs, the value \-1 is returned, and a more precise
error code is placed in the global variable
.Va errno .
@


1.25
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.24 2013/11/02 02:32:51 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: November 2 2013 $
d55 1
a55 1
.Fn timercmp "struct timeval *a, struct timeval *b, CMP"
d57 1
a57 1
.Fn timersub "struct timeval *a, struct timeval *b, struct timeval *res"
d59 1
a59 1
.Fn timeradd "struct timeval *a, struct timeval *b, struct timeval *res"
d154 1
a154 1
.Fn timercmp "a, b, CMP"
d163 1
a163 1
.Fn timersub "a, b, res"
d171 1
a171 1
.Fn timeradd "a, b, res"
@


1.24
log
@finish xref linking clock_gettime and getitimer
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.23 2013/07/17 05:42:11 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: July 17 2013 $
d63 1
a63 1
.Ao Pa sys/time.h Ac .
d142 1
a142 1
.Ao Pa sys/time.h Ac .
@


1.23
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.22 2013/03/31 22:11:26 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 31 2013 $
d206 1
@


1.22
log
@More SYNOPSIS, ERRORS, and STANDARDS updates
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.21 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d220 4
a223 2
function call appeared in
.Bx 4.2 .
@


1.21
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.20 2005/08/14 06:24:55 jaredy Exp $
d33 1
a33 1
.Dd $Mdocdate$
a189 4
A
.Fa value
parameter specified a time that was too large to be handled.
.It Bq Er EINVAL
d194 11
d210 7
@


1.20
log
@document EINVAL return bad values as "which"; ok deraadt, millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.19 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd December 11, 1993
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.18 2003/06/01 20:02:40 jmc Exp $
d193 4
@


1.18
log
@- section reorder
- merge COMPATIBILITY
- kill whitespace at EOL
- tidy up macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.17 2002/04/30 16:31:42 mpech Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.16 2001/09/07 14:35:59 niklas Exp $
d162 1
a162 1
.Fa b Ns ,
d173 1
a173 1
.Fa res Ns .
d177 1
a177 1
.Fa res Ns .
@


1.16
log
@Remove bogus warning and correct the operator enumeration for timercmp
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.15 2001/08/06 10:42:26 mpech Exp $
d46 1
a46 1

@


1.15
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.14 2001/07/25 20:56:13 stevesk Exp $
d165 1
a165 2
is <, =, or > .
Beware that >= and <= do not work with this macro.
@


1.14
log
@typo in arg name; ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.13 2000/12/23 03:04:34 deraadt Exp $
a178 1
.Pp
@


1.13
log
@create proper docs for timer{add,clear,sub,isset,cmp}
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.12 2000/10/18 05:12:09 aaron Exp $
d63 1
a63 1
.Fn timeradd "struct timeval *a, struct timeval *a, struct timeval *res"
d176 1
a176 1
.Fn timeradd "a, a, res"
@


1.12
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.11 1999/07/02 20:58:01 aaron Exp $
d54 10
d143 18
a160 12
.Sh NOTES
Five macros for manipulating time values are defined in
.Ao Pa sys/time.h Ac :
.Pp
.Bl -tag -width xxxx
.It Fn timerclear "struct timeval *"
Sets a time value to zero.
.It Fn timerisset "struct timeval *"
Tests if a time value is non-zero.
.It Fn timercmp "struct timeval *a, struct timeval *b, CMP"
Compares two time values in the form
.Va a
d162 9
a170 6
.Va b Ns ,
where CMP is <, =, or >
(beware that >= and <= do not work with this macro).
.It Fn timersub "struct timeval *a, struct timeval *b, struct timeval *res"
Subtracts
.Va a
d172 1
a172 1
.Va b
d174 6
a179 5
.Va res Ns .
.It Fn timeradd "struct timeval *a, struct timeval *a, struct timeval *res"
Adds two timers and stores the result in
.Va res Ns .
.El
@


1.11
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.10 1999/06/29 14:09:59 aaron Exp $
d92 2
a93 1
to 0 disables a timer.  Setting
d105 2
a106 1
timer decrements in real time.  A
d114 2
a115 1
It runs only when the process is executing.  A
d117 1
a117 2
signal
is delivered when it expires.
d122 3
a124 3
when the system is running on behalf of the process.  It is designed
to be used by interpreters in statistically profiling the execution
of interpreted programs.
d129 2
a130 2
signal is
delivered.  Because this signal may interrupt in-progress
d161 3
a163 3
If the calls succeed, a value of 0 is returned.  If an error occurs,
the value \-1 is returned, and a more precise error code is placed
in the global variable
d178 1
a178 2
parameter specified a time that was too large
to be handled.
@


1.10
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.9 1999/05/23 14:10:51 aaron Exp $
a157 1
.Pp
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.8 1999/05/16 19:55:26 alex Exp $
d70 1
a70 1
is non-nil).
d72 1
a72 1
A timer value is defined by the 
d84 1
a84 1
is non-zero, it indicates the time to the next timer expiration. 
d87 1
a87 1
is non-zero, it specifies a value to be used in reloading 
d90 1
a90 1
Setting 
d92 1
a92 1
to 0 disables a timer.  Setting 
d161 1
a161 1
the value -1 is returned, and a more precise error code is placed
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.7 1999/03/02 10:30:34 deraadt Exp $
d39 1
a39 1
.Os BSD 4.2
@


1.7
log
@doc timer{clear,add,sub,cmp,isset}
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.6 1999/02/27 21:56:19 deraadt Exp $
d181 1
d184 1
a184 2
.Xr sigaction 2 ,
.Xr gettimeofday 2
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.5 1998/08/17 17:35:09 deraadt Exp $
d132 27
a158 9
Three macros for manipulating time values are defined in
.Ao Pa sys/time.h Ac .
.Fa timerclear
sets a time value to zero,
.Fa timerisset
tests if a time value is non-zero, and
.Fa timercmp
compares two time values (beware that >= and <= do not
work with this macro).
@


1.5
log
@Xr poll
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.4 1998/07/06 18:27:29 deraadt Exp $
d134 1
a134 1
.Fa Timerclear
d147 1
a147 1
.Fn Getitimer
@


1.4
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: getitimer.2,v 1.6 1995/10/12 15:40:54 jtc Exp $
d163 1
@


1.3
log
@pretty
@
text
@d1 1
@


1.2
log
@from netbsd:
add & fix a bunch of system call pages
@
text
@d45 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: getitimer.2,v 1.5 1995/02/27 12:33:00 cgd Exp $
d51 1
a51 1
.Fn setitimer "int which" "struct itimerval *value" "struct itimerval *ovalue"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
