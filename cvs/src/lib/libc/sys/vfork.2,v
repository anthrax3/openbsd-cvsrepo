head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.10
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.8
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.4
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.2
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.19.0.4
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.28
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.26
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.22
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.20
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.18
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.16
	OPENBSD_5_0:1.17.0.14
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.12
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.10
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.6
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.8
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.4
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.2
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.16
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.14
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.12
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.10
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.12
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.10
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.8
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.6
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.4
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.4
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	PeV7Ql0T6htfMjhP;

1.19
date	2015.03.21.22.22.03;	author jmc;	state Exp;
branches;
next	1.18;
commitid	zwsic07EMLLOIcCV;

1.18
date	2014.09.07.20.18.16;	author guenther;	state Exp;
branches;
next	1.17;
commitid	idwEWBsDNEmdig8v;

1.17
date	2008.04.24.20.43.20;	author kurt;	state Exp;
branches;
next	1.16;

1.16
date	2008.04.04.19.30.41;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.10.18.05.12.12;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.09.27.02.00.13;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.06.29.14.10.28;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.23.14.10.57;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.16.19.55.41;	author alex;	state Exp;
branches;
next	1.8;

1.8
date	99.04.02.16.21.35;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.56.59;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.07.06.18.28.56;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.06.08.17.24.02;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.11.04.08.36.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.05.13.21;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.06.13.10.08.38;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: vfork.2,v 1.19 2015/03/21 22:22:03 jmc Exp $
.\"	$NetBSD: vfork.2,v 1.8 1997/07/10 07:54:13 mikel Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)vfork.2	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: March 21 2015 $
.Dt VFORK 2
.Os
.Sh NAME
.Nm vfork
.Nd spawn new process and block parent
.Sh SYNOPSIS
.In unistd.h
.Ft pid_t
.Fn vfork void
.Sh DESCRIPTION
.Fn vfork
was originally used to create new processes without fully copying the address
space of the old process, which is horrendously inefficient in a paged
environment.
It was useful when the purpose of
.Xr fork 2
would have been to create a new system context for an
.Xr execve 2 .
Since
.Xr fork 2
is now efficient, even in the above case, the need for
.Fn vfork
has diminished.
.Fn vfork
differs from
.Xr fork 2
in that the parent is suspended until the child makes a call to
.Xr execve 2
or an exit (either by a call to
.Xr _exit 2
or abnormally).
In addition, fork handlers established using
.Xr pthread_atfork 3
are not called when a multithreaded program calls
.Fn vfork .
.Pp
.Fn vfork
returns 0 in the child's context and (later) the PID of the child in
the parent's context.
.Sh RETURN VALUES
Same as for
.Xr fork 2 .
.Sh SEE ALSO
.Xr execve 2 ,
.Xr fork 2 ,
.Xr sigaction 2 ,
.Xr wait 2
.Sh HISTORY
The
.Fn vfork
function call appeared in
.Bx 3.0
with the additional semantics that the child process ran in the
memory of the parent until it called
.Xr execve 2
or exited.
That sharing of memory was removed in
.Bx 4.4 ,
leaving just the semantics of blocking the parent until the child calls
.Xr execve 2
or exits.
On many other systems the original behavior has been restored,
making this interface particularly unportable.
.Sh BUGS
To avoid a possible deadlock situation, processes that are children
in the middle of a
.Fn vfork
are never sent
.Dv SIGTTOU
or
.Dv SIGTTIN
signals; rather, output or
.Xr ioctl 2
calls are allowed and input attempts result in an end-of-file indication.
@


1.19
log
@according to javad kouhi, freebsd pr #198612, vfork appeared first in bsd 3.0;
thanks sobrado for verifying (and okaying this)
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.18 2014/09/07 20:18:16 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: September 7 2014 $
d40 1
a40 1
.Fd #include <unistd.h>
@


1.18
log
@Document that 4.4BSD changed the semantics but that others have restored
the original ones

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.17 2008/04/24 20:43:20 kurt Exp $
d33 1
a33 1
.Dd $Mdocdate: April 24 2008 $
d85 1
a85 1
.Bx 2.9
@


1.17
log
@- correct brk(2) prototype and man page to match implementation and POSIX.
brk(2) returns an int value not a void *. brk(2) returns 0 upon success not
a pointer to the new end of memory. okay millert@@, kettenis@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.16 2008/04/04 19:30:41 kurt Exp $
d33 1
a33 1
.Dd $Mdocdate$
d85 12
a96 1
.Bx 2.9 .
@


1.16
log
@- do not call pthread_atfork(3) handlers when a multithreaded program
calls vfork(2). "untested, but looks OK" marc@@
- document vfork(2), popen(3) and system(3) don't call atfork handlers
in multithreaded programs. okay jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.15 2007/05/31 19:19:34 jmc Exp $
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.14 2003/06/02 20:18:39 millert Exp $
d65 4
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.13 2000/10/18 05:12:12 aaron Exp $
d33 1
a33 1
.Dd June 30, 1997
@


1.13
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.12 1999/09/27 02:00:13 aaron Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@Formatting and grammar.
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.11 1999/06/29 14:10:28 aaron Exp $
d51 2
a52 1
environment.  It was useful when the purpose of
d87 2
a88 3
To avoid a possible deadlock situation,
processes that are children in the middle
of a
d94 1
a94 2
signals; rather,
output or
d96 1
a96 3
calls
are allowed
and input attempts result in an end-of-file indication.
@


1.11
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.10 1999/05/23 14:10:57 aaron Exp $
d54 4
a57 4
.Xr execve .
It is the case that
.Xr fork
is now efficient, even in the above case, so that the need for
d59 1
a59 1
is diminished.
d62 1
a62 1
.Xr fork
d67 1
a67 1
or abnormally.)
d70 1
a70 1
returns 0 in the child's context and (later) the pid of the child in
d72 3
d80 5
a84 3
.Sh RETURN VALUES
Same as for
.Xr fork 2 .
a99 5
.Sh HISTORY
The
.Fn vfork
function call appeared in
.Bx 2.9 .
@


1.10
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.9 1999/05/16 19:55:41 alex Exp $
d55 1
a55 1
It is the case that 
@


1.9
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.8 1999/04/02 16:21:35 aaron Exp $
d39 1
a39 1
.Os BSD 4
@


1.8
log
@.Pp macros do not belong immiedately after .Sh section header lines
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.7 1999/02/27 21:56:59 deraadt Exp $
d73 1
a74 1
.Xr execve 2 ,
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.6 1998/07/06 18:28:56 deraadt Exp $
a80 1
.Pp
@


1.6
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: vfork.2,v 1.8 1997/07/10 07:54:13 mikel Exp $
d48 1
a48 1
.Fn Vfork
d60 1
a60 1
.Fn Vfork
d69 1
a69 1
.Fn Vfork
@


1.5
log
@clean; kleink
@
text
@d1 1
@


1.4
log
@cleanup
@
text
@d76 1
a76 1
.Sh DIAGNOSTICS
@


1.3
log
@update to reality from netbsd
@
text
@d75 1
a75 1
.Xr wait 2 ,
@


1.2
log
@fix lots of .Xr and other minor things
@
text
@d1 1
a1 1
.\"	$NetBSD: vfork.2,v 1.6 1995/02/27 12:39:30 cgd Exp $
d36 1
a36 1
.Dd June 4, 1993
d41 1
a41 1
.Nd spawn new process in a virtual memory efficient way
d48 1
a48 1
can be used to create new processes without fully copying the address
d50 1
a50 1
environment.  It is useful when the purpose of
d53 6
a58 1
.Xr execve 2 .
d61 2
a62 3
.Xr fork 2
in that the child borrows the parent's memory and thread of
control until a call to
d65 1
a65 1
.Xr exit 2
a66 1
The parent process is suspended while the child is using its resources.
a70 25
.Pp
.Fn Vfork
can normally be used just like
.Xr fork 2 .
It does not work, however, to return while running in the childs context
from the procedure that called
.Fn vfork
since the eventual return from
.Fn vfork
would then return to a no longer existent stack frame.
Be careful, also, to call
.Xr _exit 2
rather than
.Xr exit 3
if you can't
.Xr execve 2 ,
since
.Xr exit 3
will flush and close standard I/O channels, and thereby mess up the
parent processes standard I/O data structures.
(Even with
.Xr fork 2
it is wrong to call
.Xr exit 3
since buffered data would then be flushed twice.)
a71 2
.Xr _exit 2 ,
.Xr exit 3 ,
a79 7
This system call will be eliminated when proper system sharing
mechanisms are implemented. 
Users should not depend on the memory
sharing semantics of
.Xr vfork 2
as it will, in that case, be made synonymous to
.Xr fork 2 .
d99 1
a99 1
.Bx 3.0 .
@


1.1
log
@Initial revision
@
text
@d53 1
a53 1
.Xr execve .
d56 1
a56 1
.Xr fork
d71 1
a71 1
.Xr fork .
d79 1
a79 1
.Xr _exit
d81 1
a81 1
.Xr exit
d83 1
a83 1
.Xr execve ,
d85 1
a85 1
.Xr exit
d89 1
a89 1
.Xr fork
d91 1
a91 1
.Xr exit
d94 2
d102 1
a102 1
.Xr fork .
d108 1
a108 1
.Xr vfork
d110 1
a110 1
.Xr fork .
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
