head	1.21;
access;
symbols
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.12
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.4
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.8
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.6
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.19.0.6
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.4
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.2
	OPENBSD_5_0:1.18.0.18
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.16
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.14
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.10
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.12
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.8
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.10
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.8
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.6
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.4
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.2
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.11.0.4
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.21
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	PeV7Ql0T6htfMjhP;

1.20
date	2013.03.30.06.44.44;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2011.11.06.12.07.42;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.01.20.02.40;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.12.02.15.54.14;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2002.02.23.00.31.22;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2001.04.09.18.31.35;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.02.01.01.43.24;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.15.11.46.03;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.29.14.09.59;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.10.51;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.02.27.21.56.20;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.07.06.18.27.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.06.15.17.55.20;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	97.08.24.06.50.43;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: getlogin.2,v 1.20 2013/03/30 06:44:44 guenther Exp $
.\"	$NetBSD: getlogin.2,v 1.4 1995/02/27 12:33:03 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)getlogin.2	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: March 30 2013 $
.Dt GETLOGIN 2
.Os
.Sh NAME
.Nm getlogin ,
.Nm getlogin_r ,
.Nm setlogin
.Nd get/set login name
.Sh SYNOPSIS
.In unistd.h
.Ft char *
.Fn getlogin void
.Ft int
.Fn getlogin_r "char *name" "size_t namelen"
.Ft int
.Fn setlogin "const char *name"
.Sh DESCRIPTION
The
.Fn getlogin
routine returns the login name of the user associated with the current
session, as previously set by
.Fn setlogin .
The name is normally associated with a login shell
at the time a session is created,
and is inherited by all processes descended from the login shell.
(This is true even if some of those processes assume another user ID,
for example when
.Xr su 1
is used.)
.Pp
The
.Fn getlogin_r
routine is a reentrant version of
.Fn getlogin .
It is functionally identical to
.Fn getlogin
except that the caller must provide a buffer,
.Fa name ,
in which to store the user's login name and a corresponding
length parameter,
.Fa namelen ,
that specifies the size of the buffer.
The buffer should be large enough to store the login name and a trailing NUL
(typically
.Dv LOGIN_NAME_MAX
bytes).
.Pp
.Fn setlogin
sets the login name of the user associated with the current session to
.Fa name .
This call is restricted to the superuser, and
is normally used only when a new session is being created on behalf
of the named user
(for example, at login time, or when a remote shell is invoked).
.Pp
.Em NOTE :
There is only one login name per session.
.Pp
It is
.Em CRITICALLY
important to ensure that
.Fn setlogin
is only ever called after the process has taken adequate steps to ensure
that it is detached from its parent's session.
The
.Em ONLY
way to do this is via the
.Fn setsid
function.
The
.Fn daemon
function calls
.Fn setsid
which is an ideal way of detaching from a controlling terminal and
forking into the background.
.Pp
In particular, neither
.Fn ioctl ttyfd TIOCNOTTY ...\&
nor
.Fn setpgrp ...\&
is sufficient to create a new session.
.Pp
Once a parent process has called
.Fn setsid ,
it is acceptable for some child of that process to then call
.Fn setlogin ,
even though it is not the session leader.
Beware, however, that
.Em ALL
processes in the session will change their login name at the same time,
even the parent.
.Pp
This is different from traditional
.Ux
privilege inheritance and as such can be counter-intuitive.
.Pp
Since the
.Fn setlogin
routine is restricted to the super-user, it is assumed that (like
all other privileged programs) the programmer has taken adequate
precautions to prevent security violations.
.Sh RETURN VALUES
If a call to
.Fn getlogin
succeeds, it returns a pointer to a NUL-terminated string in a static buffer.
If the name has not been set, it returns
.Dv NULL .
If a call to
.Fn getlogin_r
succeeds, a value of 0 is returned, else the error number is returned.
If a call to
.Fn setlogin
succeeds, a value of 0 is returned.
If
.Fn setlogin
fails, a value of \-1 is returned and an error code is
placed in the global location
.Va errno .
.Sh ERRORS
.Fn getlogin_r
and
.Fn setlogin
will succeed unless:
.Bl -tag -width Er
.It Bq Er EFAULT
The
.Fa name
parameter points to an
invalid address.
.El
.Pp
In addition,
.Fn getlogin_r
may return the following error:
.Bl -tag -width Er
.It Bq Er ERANGE
The value of
.Fa namelen
is not large enough to store the user's login name and a trailing NUL.
.El
.Pp
.Fn setlogin
may return the following errors:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa name
parameter
pointed to a string that was too long.
Login names are limited to
.Dv LOGIN_NAME_MAX-1
characters, currently 31.
.It Bq Er EPERM
The caller tried to set the login name and was not the superuser.
.El
.Sh SEE ALSO
.Xr setsid 2
.Sh STANDARDS
The
.Fn getlogin
and
.Fn getlogin_r
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn getlogin
function first appeared in
.Bx 4.2 .
.Sh BUGS
In earlier versions of the system,
.Fn getlogin
failed unless the process was associated with a login terminal.
The current implementation (using
.Fn setlogin )
allows getlogin to succeed even when the process has no controlling terminal.
In earlier versions of the system, the value returned by
.Fn getlogin
could not be trusted without checking the user ID.
Portable programs should probably still make this check.
@


1.20
log
@Various updates, mostly to SYNOPSIS, ERRORS, and STANDARDS, but
some other fixes included...

*at() function ERRORS description suggested by matthew@@

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.19 2011/11/06 12:07:42 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: November 6 2011 $
d42 1
a42 1
.Fd #include <unistd.h>
@


1.19
log
@.Ev -> .Dv
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.18 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d38 1
d152 4
a155 1
The following errors may be returned by these calls:
d160 1
a160 1
parameter gave an
d162 15
d183 1
a183 3
.Dv MAXLOGNAME-1
(from
.Ao Pa sys/param.h Ac )
a186 4
.It Bq Er ERANGE
The buffer passed to
.Fn getlogin_r
is not large enough to store the user's login name.
d190 7
@


1.18
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.17 2005/02/25 03:12:44 cloder Exp $
d33 1
a33 1
.Dd $Mdocdate$
d76 1
a76 1
.Ev LOGIN_NAME_MAX
@


1.17
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.16 2003/06/02 20:18:39 millert Exp $
d33 1
a33 1
.Dd June 9, 1993
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.15 2003/06/01 20:02:40 jmc Exp $
d136 1
a136 1
succeeds, it returns a pointer to a null-terminated string in a static buffer.
@


1.15
log
@- section reorder
- merge COMPATIBILITY
- kill whitespace at EOL
- tidy up macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.14 2002/12/02 15:54:14 millert Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@Document getlogin_r()
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.13 2002/04/30 16:31:42 mpech Exp $
d181 5
a196 5
.Sh HISTORY
The
.Fn getlogin
function first appeared in
.Bx 4.2 .
@


1.13
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.12 2002/02/23 00:31:22 millert Exp $
d49 2
d66 17
d144 3
d174 4
@


1.12
log
@Add a big fat warning that setlogin() changes the login name for all
processes in the session.  Adapted from FreeBSD.

Also remove the paragraph in BUGS about the kernel login name being larger
than what is in utmp--we now have login usernames in utmp.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.11 2001/04/09 18:31:35 deraadt Exp $
d84 1
a84 1
.Fn setsid  
@


1.11
log
@31 vs 32; ianm@@cit.uws.edu.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.10 2001/02/01 01:43:24 deraadt Exp $
d71 47
a155 7
Login names are limited in length by
.Fn setlogin .
However, lower limits are placed on login names elsewhere in the system
.Pf ( Dv UT_NAMESIZE
in
.Ao Pa utmp.h Ac ) .
.Pp
@


1.10
log
@MAXLOGNAME defn changed
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.9 2000/10/18 05:12:09 aaron Exp $
d99 1
a99 1
.Dv MAXLOGNAME
d102 1
a102 1
characters, currently 32.
@


1.9
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.8 2000/04/15 11:46:03 aaron Exp $
d102 1
a102 1
characters, currently 12.
@


1.8
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.7 1999/06/29 14:09:59 aaron Exp $
d53 2
a54 3
routine
returns the login name of the user associated with the current session,
as previously set by
d79 2
a80 1
succeeds, a value of 0 is returned.  If
@


1.7
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.6 1999/05/23 14:10:51 aaron Exp $
d68 1
a68 1
This call is restricted to the super-user, and
d104 1
a104 1
The caller tried to set the login name and was not the super-user.
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.5 1999/02/27 21:56:20 deraadt Exp $
d82 1
a82 1
fails, a value of -1 is returned and an error code is
@


1.5
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.4 1998/07/06 18:27:31 deraadt Exp $
d39 1
a39 1
.Os BSD 4.2
@


1.4
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: getlogin.2,v 1.4 1995/02/27 12:33:03 cgd Exp $
d65 1
a65 1
.Fn Setlogin
@


1.3
log
@use Bx macro for BSD versions
@
text
@d1 1
@


1.2
log
@4.2BSD had this first
@
text
@d128 2
a129 1
function first appeared in 4.2BSD.
@


1.1
log
@Initial revision
@
text
@d128 1
a128 1
function first appeared in 4.4BSD.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
