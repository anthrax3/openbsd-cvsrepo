head	1.25;
access;
symbols
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.25.0.12
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.8
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.4
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.25.0.6
	OPENBSD_5_8_BASE:1.25
	OPENBSD_5_7:1.25.0.2
	OPENBSD_5_7_BASE:1.25
	OPENBSD_5_6:1.22.0.8
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.2
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.20.0.14
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.12
	OPENBSD_5_0:1.20.0.10
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.8
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.6
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.4
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.19.0.4
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.2
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.16.0.12
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.10
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.8
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.6
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.4
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.2
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.8
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.6
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.25
date	2015.01.19.15.54.12;	author millert;	state Exp;
branches;
next	1.24;
commitid	nJ2wjGsUe8RwMTRS;

1.24
date	2014.12.16.00.06.49;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	V04BuZyu1wULJQGU;

1.23
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	sADK4BTCz4ZrHHo9;

1.22
date	2013.07.20.19.33.34;	author naddy;	state Exp;
branches;
next	1.21;

1.21
date	2012.12.05.19.21.39;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2009.06.05.23.31.34;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2008.03.16.20.24.14;	author otto;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2007.02.03.17.13.07;	author espie;	state Exp;
branches;
next	1.16;

1.16
date	2003.11.21.10.45.48;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.01.15.18.47.26;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.03.24.19.07.49;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	99.12.31.03.43.24;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	99.06.29.14.10.25;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.31.17.34.41;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	99.04.18.17.26.52;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	99.02.27.21.56.53;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.07.06.18.28.44;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.06.15.17.55.31;	author mickey;	state Exp;
branches;
next	1.5;

1.5
date	97.11.06.20.34.49;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.13.10.08.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.02.13.05.20.53;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.07.17.19.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.29;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@.\"	$OpenBSD: statfs.2,v 1.24 2014/12/16 00:06:49 schwarze Exp $
.\"	$NetBSD: statfs.2,v 1.10 1995/06/29 11:40:48 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)statfs.2	8.3 (Berkeley) 2/11/94
.\"
.Dd $Mdocdate: December 16 2014 $
.Dt STATFS 2
.Os
.Sh NAME
.Nm statfs ,
.Nm fstatfs
.Nd get file system statistics
.Sh SYNOPSIS
.In sys/param.h
.In sys/mount.h
.Ft int
.Fn statfs "const char *path" "struct statfs *buf"
.Ft int
.Fn fstatfs "int fd" "struct statfs *buf"
.Sh DESCRIPTION
.Fn statfs
returns information about a mounted file system.
.Fa path
is the path name of any file within the mounted file system.
.Fa buf
is a pointer to a
.Nm statfs
structure defined as follows:
.Bd -literal
typedef struct { int32_t val[2]; } fsid_t;

#define MFSNAMELEN   16 /* length of fs type name, including nul */
#define MNAMELEN     90	/* length of buffer for returned name */

struct statfs {
   u_int32_t       f_flags;        /* copy of mount flags */
   u_int32_t       f_bsize;        /* file system block size */
   u_int32_t       f_iosize;       /* optimal transfer block size */

                                   /* unit is f_bsize */
   u_int64_t       f_blocks;       /* total data blocks in file system */
   u_int64_t       f_bfree;        /* free blocks in fs */
   int64_t         f_bavail;       /* free blocks avail to non-superuser */

   u_int64_t       f_files;        /* total file nodes in file system */
   u_int64_t       f_ffree;        /* free file nodes in fs */
   int64_t         f_favail;       /* free file nodes avail to non-root */

   u_int64_t       f_syncwrites;   /* count of sync writes since mount */
   u_int64_t       f_syncreads;    /* count of sync reads since mount */
   u_int64_t       f_asyncwrites;  /* count of async writes since mount */
   u_int64_t       f_asyncreads;   /* count of async reads since mount */

   fsid_t          f_fsid;         /* file system id */
   u_int32_t       f_namemax;      /* maximum filename length */
   uid_t           f_owner;        /* user that mounted the file system */
   u_int64_t       f_ctime;        /* last mount [-u] time */

   char f_fstypename[MFSNAMELEN];  /* fs type name */
   char f_mntonname[MNAMELEN];     /* directory on which mounted */
   char f_mntfromname[MNAMELEN];   /* mounted file system */
   char f_mntfromspec[MNAMELEN];   /* special for mount request */
   union mount_info mount_info;    /* per-filesystem mount options */
};
.Ed
.Pp
.Fn fstatfs
returns the same information about an open file referenced by descriptor
.Fa fd .
.Pp
Note that
.Fa f_fsid
will be empty unless the user is the superuser.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn statfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix of
.Fa path
is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The file referred to by
.Fa path
does not exist.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix of
.Fa path .
.It Bq Er ELOOP
Too many symbolic links were encountered in translating
.Fa path .
.It Bq Er EFAULT
.Fa buf
or
.Fa path
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Pp
.Fn fstatfs
fails if one or more of the following are true:
.Bl -tag -width Er
.It Bq Er EBADF
.Fa fd
is not a valid open file descriptor.
.It Bq Er EFAULT
.Fa buf
points to an invalid address.
.It Bq Er EIO
An I/O error occurred while reading from or writing to the file system.
.El
.Sh SEE ALSO
.Xr df 1 ,
.Xr getfsstat 2 ,
.Xr mount 2 ,
.Xr stat 2
.Sh HISTORY
The
.Fn statfs
function first appeared in
.Bx 4.4 .
@


1.24
log
@use .In and delete .Tn; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.23 2014/12/10 19:19:00 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: December 10 2014 $
d112 6
a117 9
The length of a component of
.Fa path
exceeds
.Dv {NAME_MAX}
characters, or the length of
.Fa path
exceeds
.Dv {PATH_MAX}
characters.
@


1.23
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.22 2013/07/20 19:33:34 naddy Exp $
d33 1
a33 1
.Dd $Mdocdate: July 20 2013 $
d41 2
a42 2
.Fd #include <sys/param.h>
.Fd #include <sys/mount.h>
d137 1
a137 3
An
.Tn I/O
error occurred while reading from or writing to the file system.
d150 1
a150 3
An
.Tn I/O
error occurred while reading from or writing to the file system.
@


1.22
log
@sync with the actual definition of struct statfs in <sys/mount.h>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.21 2012/12/05 19:21:39 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: December 5 2012 $
d102 1
a102 4
Upon successful completion, a value of 0 is returned.
Otherwise, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
@


1.21
log
@Cross-reference getfsstat(2); OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.20 2009/06/05 23:31:34 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: June 5 2009 $
d66 1
d71 1
d75 1
d80 1
d84 2
a85 2
   u_int32_t       f_ctime;        /* last mount [-u] time */
   u_int32_t       f_spare[3];     /* spare for later */
d89 1
@


1.20
log
@Note that f_fsid gets cleared when caller is not the superuser.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.19 2008/03/16 20:24:14 otto Exp $
d33 1
a33 1
.Dd $Mdocdate: March 16 2008 $
d156 1
@


1.19
log
@sync with sys/statfs.h; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.18 2007/05/31 19:19:34 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d92 4
@


1.18
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.17 2007/02/03 17:13:07 espie Exp $
d33 1
a33 1
.Dd $Mdocdate$
d63 23
a85 18
    u_int32_t  f_flags;       /* copy of mount flags */
    int32_t    f_bsize;       /* fundamental file system block size */
    u_int32_t  f_iosize;      /* optimal transfer block size */
    u_int32_t  f_blocks;      /* total data blocks in file system */
    u_int32_t  f_bfree;       /* free blocks in fs */
    int32_t    f_bavail;      /* free blocks avail to non-superuser */
    u_int32_t  f_files;       /* total file nodes in file system */
    u_int32_t  f_ffree;       /* free file nodes in fs */
    fsid_t     f_fsid;        /* file system id */
    uid_t      f_owner;       /* user that mounted the file system */
    u_int32_t  f_syncwrites;  /* count of sync writes since mount */
    u_int32_t  f_asyncwrites; /* count of async writes since mount */
    u_int32_t  f_ctime;       /* last mount [-u] time */
    u_int32_t  f_spare[3];    /* spare for later */
    char       f_fstypename[MFSNAMELEN]; /* fs type name */
    char       f_mntonname[MNAMELEN];    /* directory on which mounted */
    char       f_mntfromname[MNAMELEN];  /* mounted file system */
    union mount_info mount_info;         /* per-filesystem mount options */
@


1.17
log
@fix NAME, ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.16 2003/11/21 10:45:48 jmc Exp $
d33 1
a33 1
.Dd February 11, 1994
@


1.16
log
@sync with <mount.h>; from FreeBSD;
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.15 2003/06/02 20:18:39 millert Exp $
d37 2
a38 1
.Nm statfs
@


1.15
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.14 2002/01/15 18:47:26 millert Exp $
d58 1
a58 1
#define MFSNAMELEN   16 /* length of fs type name, including NUL */
d74 2
a75 1
    u_int32_t  f_spare[4];    /* spare for later */
@


1.14
log
@MNAMELEN is 90, not 32; peterw AT ifost.org.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.13 2000/03/24 19:07:49 millert Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.13
log
@Make f_bsize signed.  Having it unsigned causes surprising (and unwanted)
type coercions.  With this fixed I can back out the hack in df.
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.12 1999/12/31 03:43:24 millert Exp $
d63 1
a63 1
#define MNAMELEN     32	/* length of buffer for returned name */
@


1.12
log
@f_bavail is signed (sync with sys/mount.h)
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.11 1999/06/29 14:10:25 aaron Exp $
d67 1
a67 1
    u_int32_t  f_bsize;       /* fundamental file system block size */
@


1.11
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.10 1999/05/31 17:34:41 millert Exp $
d71 1
a71 1
    u_int32_t  f_bavail;      /* free blocks avail to non-superuser */
@


1.10
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.9 1999/04/18 17:26:52 espie Exp $
d91 1
a91 1
Otherwise, -1 is returned and the global variable
d105 1
a105 1
exceeds 
d109 1
a109 1
exceeds 
@


1.9
log
@Add Xrefs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.8 1999/02/27 21:56:53 deraadt Exp $
d62 1
a62 1
#define MFSNAMELEN   16 /* length of fs type name, including nul */
d66 17
a82 17
    short   f_type;	/* type of file system (unused; zero) */
    short   f_flags;	/* copy of mount flags */
    long    f_bsize;	/* fundamental file system block size */
    long    f_iosize;	/* optimal transfer block size */
    long    f_blocks;	/* total data blocks in file system */
    long    f_bfree;	/* free blocks in fs */
    long    f_bavail;	/* free blocks avail to non-superuser */
    long    f_files;	/* total file nodes in file system */
    long    f_ffree;	/* free file nodes in fs */
    fsid_t  f_fsid;	/* file system id (super-user only) */
    uid_t   f_owner;	/* user that mounted the file system */
    long    f_syncwrites; /* count of sync writes since mount */
    long    f_asyncwrites; /* count of async writes since mount */
    long    f_spare[2];	/* spare for later */
    char    f_fstypename[MFSNAMELEN]; /* fs type name */
    char    f_mntonname[MNAMELEN];    /* directory on which mounted */
    char    f_mntfromname[MNAMELEN];  /* mounted file system */
a85 1
Fields that are undefined for a particular file system are set to -1.
@


1.8
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.7 1998/07/06 18:28:44 deraadt Exp $
d148 4
@


1.7
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: statfs.2,v 1.10 1995/06/29 11:40:48 cgd Exp $
d51 1
a51 1
.Fn Statfs
d53 1
a53 1
.Fa Path
d55 1
a55 1
.Fa Buf
d87 1
a87 1
.Fn Fstatfs
d96 1
a96 1
.Fn Statfs
d101 1
a101 1
.Fa Path
d124 1
a124 1
.Fa Buf
d134 1
a134 1
.Fn Fstatfs
d138 1
a138 1
.Fa Fd
d141 1
a141 1
.Fa Buf
@


1.6
log
@use Bx macro for BSD versions
@
text
@d1 1
@


1.5
log
@Document f_syncwrites/f_asyncwrites.
@
text
@d150 2
a151 1
function first appeared in 4.4BSD.
@


1.4
log
@fix lots of .Xr and other minor things
@
text
@d76 3
a78 1
    long    f_spare[4];	/* spare for later */
@


1.3
log
@Mention that certain fields are accessible to the super-user only.
@
text
@d55 3
a57 1
is a pointer to a statfs structure defined as follows:
@


1.2
log
@nroff mistakes; netbsd pr#2677; kstailey@@dol-esa.gov
@
text
@d72 1
a72 1
    fsid_t  f_fsid;	/* file system id */
@


1.1
log
@Initial revision
@
text
@d55 1
a55 3
is a pointer to a
.Fn statfs
structure defined as follows:
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
