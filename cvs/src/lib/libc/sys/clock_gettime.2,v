head	1.27;
access;
symbols
	OPENBSD_6_1:1.27.0.8
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.6
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.24.0.6
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.19.0.8
	OPENBSD_5_3_BASE:1.19
	OPENBSD_5_2:1.19.0.6
	OPENBSD_5_2_BASE:1.19
	OPENBSD_5_1_BASE:1.19
	OPENBSD_5_1:1.19.0.4
	OPENBSD_5_0:1.19.0.2
	OPENBSD_5_0_BASE:1.19
	OPENBSD_4_9:1.18.0.14
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.18.0.12
	OPENBSD_4_8_BASE:1.18
	OPENBSD_4_7:1.18.0.8
	OPENBSD_4_7_BASE:1.18
	OPENBSD_4_6:1.18.0.10
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.6
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.4
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.2
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.8
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.6
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.4
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.15.0.6
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.4
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.2
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.12.0.12
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.10
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.8
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.6
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4;
locks; strict;
comment	@# @;


1.27
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	PeV7Ql0T6htfMjhP;

1.26
date	2014.12.10.19.19.00;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	sADK4BTCz4ZrHHo9;

1.25
date	2014.10.16.15.50.49;	author millert;	state Exp;
branches;
next	1.24;
commitid	v4FGBPzPVsAIziqV;

1.24
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.11.02.02.32.51;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2013.10.06.01.27.50;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2013.06.17.19.11.54;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2013.03.31.08.34.27;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2011.07.07.21.00.59;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2007.12.09.10.30.14;	author brad;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2005.08.10.01.18.11;	author jaredy;	state Exp;
branches;
next	1.15;

1.15
date	2003.12.09.11.05.09;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.11.05.38.02;	author kevlo;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.12.08;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.15.11.46.03;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.15.02.15.24;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.10.05.17.12.26;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.08.31.16.52.35;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.29.14.09.52;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.10.50;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	97.05.29.14.54.09;	author kstailey;	state Exp;
branches;
next	1.4;

1.4
date	97.05.08.20.21.16;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	97.05.08.20.19.35;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	97.05.08.20.05.05;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	97.05.08.20.02.46;	author kstailey;	state Exp;
branches;
next	;


desc
@@


1.27
log
@use .In rather than .Fd #include
@
text
@.\"	$OpenBSD: clock_gettime.2,v 1.26 2014/12/10 19:19:00 schwarze Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 10 2014 $
.Dt CLOCK_GETTIME 2
.Os
.Sh NAME
.Nm clock_gettime ,
.Nm clock_settime ,
.Nm clock_getres
.Nd get/set/calibrate date and time
.Sh SYNOPSIS
.In time.h
.Ft int
.Fn clock_gettime "clockid_t clock_id" "struct timespec *tp"
.Ft int
.Fn clock_settime "clockid_t clock_id" "const struct timespec *tp"
.Ft int
.Fn clock_getres "clockid_t clock_id" "struct timespec *tp"
.Sh DESCRIPTION
The
.Fn clock_gettime
and
.Fn clock_settime
functions
allow the calling process to retrieve or set the value used by a clock
which is specified by
.Fa clock_id .
.Pp
.Fa clock_id
can be a value from
.Xr clock_getcpuclockid 3
or
.Xr pthread_getcpuclockid 3
or one of five predefined values:
.Bl -tag -width CLOCK_MONOTONIC
.It Dv CLOCK_REALTIME
time that increments as a wall clock should
.It Dv CLOCK_PROCESS_CPUTIME_ID
time that increments when the CPU is running in user or kernel mode
on behalf of the calling process
.It Dv CLOCK_THREAD_CPUTIME_ID
time that increments when the CPU is running in user or kernel mode
on behalf of the calling thread
.It Dv CLOCK_MONOTONIC
time that increments as a wall clock should but whose absolute value
is meaningless and cannot jump,
providing accurate realtime interval measurement,
even across suspend and resume
.It Dv CLOCK_UPTIME
time whose absolute value is the time the system has been running
and not suspended,
providing accurate uptime measurement, both absolute and interval
.El
.Pp
The structure pointed to by
.Fa tp
is defined in
.In sys/time.h
as:
.Bd -literal -offset indent
struct timespec {
	time_t	tv_sec;		/* seconds */
	long	tv_nsec;	/* and nanoseconds */
};
.Ed
.Pp
Only the
.Dv CLOCK_REALTIME
clock can be set, and only the superuser may do so.
If the system securelevel is greater than 1 (see
.Xr init 8 ) ,
the time may only be advanced.
This limitation is imposed to prevent a malicious superuser
from setting arbitrary time stamps on files.
The system time can still be adjusted backwards using the
.Xr adjtime 2
system call even when the system is secure.
.Pp
The resolution (granularity) of a clock is returned by the
.Fn clock_getres
call.
This value is placed in a (non-null)
.Fa *tp .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn clock_gettime ,
.Fn clock_settime ,
and
.Fn clock_getres
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa clock_id
is not a valid value.
.It Bq Er EFAULT
The
.Fa tp
argument address referenced invalid memory.
.El
.Pp
In addition,
.Fn clock_settime
may return the following errors:
.Bl -tag -width Er
.It Bq Er EPERM
A user other than the superuser attempted to set the time.
.It Bq Er EINVAL
.Fa clock_id
specifies a clock that isn't settable,
.Fa tp
specifies a nanosecond value less than zero or greater than 1000 million,
or a value outside the range of the specified clock.
.El
.Sh SEE ALSO
.Xr date 1 ,
.Xr adjtime 2 ,
.Xr getitimer 2 ,
.Xr gettimeofday 2 ,
.Xr clock_getcpuclockid 3 ,
.Xr ctime 3 ,
.Xr pthread_getcpuclockid 3
.Sh STANDARDS
The
.Fn clock_getres ,
.Fn clock_gettime ,
and
.Fn clock_settime
functions conform to
.St -p1003.1-2008 .
.Pp
The
.Dv CLOCK_UPTIME
clock is an extension to that.
.Sh HISTORY
The
.Dv CLOCK_PROCESS_CPUTIME_ID
and
.Dv CLOCK_THREAD_CPUTIME_ID
clocks appeared in
.Ox 5.4 .
The
.Dv CLOCK_UPTIME
clock first appeared in
.Fx 7.0
and was added to
.Ox
in
.Ox 5.5 .
@


1.26
log
@use .Rv; no change of meaning; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.25 2014/10/16 15:50:49 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: October 16 2014 $
d39 1
a39 1
.Fd #include <time.h>
@


1.25
log
@Remove references to unimplemented CLOCK_VIRTUAL.  It is non-standard
and existing implementations vary as to whether it returns time for
the calling thread or the entire process.  OK kettenis@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.24 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
d112 1
a112 4
A 0 return value indicates that the call succeeded.
A \-1 return value indicates an error occurred, and in this
case an error code is stored into the global variable
.Va errno .
@


1.24
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.23 2013/11/02 02:32:51 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: November 2 2013 $
a64 3
.It Dv CLOCK_VIRTUAL
time that increments only when
the CPU is running in user mode on behalf of the calling process
@


1.23
log
@finish xref linking clock_gettime and getitimer
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.22 2013/10/06 01:27:50 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: October 6 2013 $
d88 1
a88 1
.Aq Pa sys/time.h
@


1.22
log
@Add CLOCK_UPTIME, a clock which measures time-running-not-suspended, so
that mlarkin@@ can fix programs that report rates-over-uptime.

ok kettenis@@
manpage corrections jmc@@ (which I've probably broken again)
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.21 2013/06/17 19:11:54 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: June 17 2013 $
d151 2
@


1.21
log
@Add support for the _POSIX_CPUTIME and _POSIX_THREAD_CPUTIME options,
including CLOCK_{PROCESS,THREAD}_CPUTIME_ID constants and
{clock,pthread}_getcpuclockid() functions.

Worked out at t2k13 with help from tedu@@ and matthew@@ and testing by aja@@
ok matthew@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.20 2013/03/31 08:34:27 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: March 31 2013 $
d76 7
a82 1
is meaningless and cannot jump, providing accurate interval measurement
d162 19
@


1.20
log
@Updates to SYNOPSIS, ERRORS, and STANDARDS

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.19 2011/07/07 21:00:59 deraadt Exp $
d30 1
a30 1
.Dd $Mdocdate: July 7 2011 $
d51 1
d57 21
a77 11
can be one of four values:
.Dv CLOCK_REALTIME
for time that increments as
a wall clock should,
.Dv CLOCK_VIRTUAL
for time that increments only when
the CPU is running in user mode on behalf of the calling process,
.Dv CLOCK_PROF
for time that increments when the CPU is running in user or kernel mode, or
.Dv CLOCK_MONOTONIC
for time that increments at a steady rate (monotonically).
d91 3
a93 1
Only the superuser may set the time of day.
d145 3
a147 1
.Xr ctime 3
@


1.19
log
@timed's time is up.  use ntpd(8).  Even our own fossil developers
switched a while back.
ok miod, kettenis
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.18 2007/12/09 10:30:14 brad Exp $
d30 1
a30 1
.Dd $Mdocdate: December 9 2007 $
d39 1
a39 1
.Fd #include <sys/time.h>
d101 5
a105 2
The following error codes may be set in
.Va errno :
a107 1
The
d109 1
a109 1
was not a valid value.
d114 6
d122 6
d135 1
a136 1
.Fn clock_settime ,
d138 1
a138 1
.Fn clock_getres
d140 1
a140 1
.St -p1003.1b-93 .
@


1.18
log
@correct the STANDARDS section to mention clock_getres() instead of
clock_setres().

ok jmc@@ dlg@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.17 2007/05/31 19:19:32 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d118 1
a118 2
.Xr ctime 3 ,
.Xr timed 8
@


1.17
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.16 2005/08/10 01:18:11 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d125 1
a125 1
.Fn clock_setres
@


1.16
log
@- standard ERRORS layout
- refer to formal parameters correctly

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.15 2003/12/09 11:05:09 jmc Exp $
d30 1
a30 1
.Dd May 8, 1997
@


1.15
log
@clock_id has 4 possible values, not 3; from Alistair Kerr (PR 3600);
also, .Aq instead of .Ao/.Ac;
indent display and remove .Pp;
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.14 2003/08/11 05:38:02 kevlo Exp $
d103 1
a103 1
.Bl -tag -width [EFAULT]
d110 1
a110 1
.Fa *tp
@


1.14
log
@implement CLOCK_MONOTONIC from NetBSD; ok marc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.13 2003/06/02 20:18:39 millert Exp $
d56 1
a56 1
can be one of three values:
d71 1
a71 1
.Ao Pa sys/time.h Ac
d73 1
a73 2
.Pp
.Bd -literal
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.12 2000/10/18 05:12:08 aaron Exp $
d62 1
a62 1
the CPU is running in user mode on behalf of the calling process, or
d64 3
a66 1
for time that increments when the CPU is running in user or kernel mode.
@


1.12
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.11 2000/04/15 11:46:03 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.10 2000/04/15 02:15:24 aaron Exp $
d95 2
a96 1
call.  This value is placed in a (non-null)
d126 3
a128 1
etc.
@


1.10
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.9 1999/10/05 17:12:26 aaron Exp $
d83 1
a83 1
Only the super-user may set the time of day.
d87 1
a87 1
This limitation is imposed to prevent a malicious super-user
d115 1
a115 1
A user other than the super-user attempted to set the time.
@


1.9
log
@specifed -> specified
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.8 1999/08/31 16:52:35 aaron Exp $
d85 1
a85 1
.Xr init 8 ),
@


1.8
log
@Consistify naming of RETURN VALUES section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.7 1999/06/29 14:09:52 aaron Exp $
d56 1
a56 1
which is specifed by
@


1.7
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.6 1999/05/23 14:10:50 aaron Exp $
d97 1
a97 1
.Sh RETURN
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.5 1997/05/29 14:54:09 kstailey Exp $
d60 6
a65 2
can be one of three values: CLOCK_REALTIME for time that increments as
a wall clock should, CLOCK_VIRTUAL for time that increments only when
d67 2
a68 2
CLOCK_PROF for time that increments when the CPU is running in user or
kernel mode.
d72 1
a72 1
is defined in 
d95 1
a95 1
call.  This value is placed in a (non-NULL)
d99 1
a99 1
A -1 return value indicates an error occurred, and in this
@


1.5
log
@3rd arg to clock_getres() is not a const ptr
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.4 1997/05/08 20:21:16 kstailey Exp $
d36 1
a36 1
.Os BSD 4
@


1.4
log
@delete line left in by accident.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.3 1997/05/08 20:19:35 kstailey Exp $
d49 1
a49 1
.Fn clock_getres "clockid_t clock_id" "const struct timespec *tp"
@


1.3
log
@subject/verb pluralization correction.
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.2 1997/05/08 20:05:05 kstailey Exp $
a57 1
The format of the value is
@


1.2
log
@STANDARDS not HISTORY
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_gettime.2,v 1.1 1997/05/08 20:02:46 kstailey Exp $
d123 1
a123 1
functions conforms to
@


1.1
log
@documentation for POSIX version of gettimeofday(2) -- the horizon leans forward offering you space for new steps of change
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d119 1
a119 1
.Sh HISTORY
d121 4
a124 3
.Fn gettimeofday
function call appeared in
.Bx 4.2 .
@
