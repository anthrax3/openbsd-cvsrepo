head	1.23;
access;
symbols
	OPENBSD_6_2:1.23.0.8
	OPENBSD_6_2_BASE:1.23
	OPENBSD_6_1:1.23.0.10
	OPENBSD_6_1_BASE:1.23
	OPENBSD_6_0:1.23.0.6
	OPENBSD_6_0_BASE:1.23
	OPENBSD_5_9:1.23.0.2
	OPENBSD_5_9_BASE:1.23
	OPENBSD_5_8:1.23.0.4
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.30
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.20.0.26
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.20.0.24
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.22
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.20
	OPENBSD_5_0:1.20.0.18
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.16
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.14
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.10
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.12
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.8
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.17.0.14
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.12
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.17.0.10
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.17.0.8
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.17.0.6
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.4
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.10
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.8
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.6
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.4
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.23
date	2015.05.31.23.54.25;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	zjg8ueH5pm88cPnS;

1.22
date	2014.12.16.00.06.49;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	V04BuZyu1wULJQGU;

1.21
date	2014.03.24.01.54.58;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.31.19.19.33;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.28.18.47.54;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.27.21.14.41;	author thib;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.22.04.45.54;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.28.10.14.27;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.02.27.07.55.34;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2000.05.25.06.09.50;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.15.11.46.04;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.22.12.05.49;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.22.12.00.43;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.04.18.59.44;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.29.14.10.11;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.16.19.55.31;	author alex;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.56.36;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.06.18.28.06;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.06.15.17.55.29;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.04.08.22.47.34;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.03.31.02.30.26;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.28;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Simple macro fixes (Fd -> In, Nm -> Fn) from Kaspars at Bankovskis dot net.
No content change.
@
text
@.\"	$OpenBSD: nfssvc.2,v 1.22 2014/12/16 00:06:49 schwarze Exp $
.\"	$NetBSD: nfssvc.2,v 1.6 1995/02/27 12:35:08 cgd Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)nfssvc.2	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: December 16 2014 $
.Dt NFSSVC 2
.Os
.Sh NAME
.Nm nfssvc
.Nd NFS services
.Sh SYNOPSIS
.In unistd.h
.In nfs/nfs.h
.Ft int
.Fn nfssvc "int flags" "void *argstructp"
.Sh DESCRIPTION
The
.Fn nfssvc
function is used by NFS daemons to pass information into the kernel
and also to enter the kernel as a server daemon.
The
.Fa flags
argument consists of several bits that show what action is to be taken
once in the kernel and the
.Fa argstructp
points to one of two structures depending on which bits are set in
flags.
.Pp
To enter an
.Xr nfsd 8
daemon into the kernel,
.Fn nfssvc
is called with the flag
.Dv NFSSVC_NFSD
and a pointer to a structure:
.Bd -literal
struct nfsd_srvargs {
        struct nfsd     *nsd_nfsd;   /* Pointer to in kernel nfsd struct */
        uid_t           nsd_uid;        /* Effective uid mapped to cred */
        u_int32_t       nsd_haddr;      /* IP address of client */
        struct xucred   nsd_cr;         /* Cred. uid maps to */
        int             nsd_authlen;    /* Length of auth string (ret) */
        u_char          *nsd_authstr;   /* Auth string (ret) */
        int             nsd_verflen;    /* and the verifier */
        u_char          *nsd_verfstr;
        struct timeval  nsd_timestamp;  /* timestamp from verifier */
        u_int32_t       nsd_ttl;        /* credential ttl (sec) */
};
.Ed
.Pp
To add further sockets for processing by the
.Xr nfsd 8
server daemons the master
.Xr nfsd 8
daemon  calls
.Fn nfssvc
with the flag
.Dv NFSSVC_ADDSOCK
and a pointer to a structure:
.Bd -literal
struct nfsd_args {
        int     sock;     /* Socket to serve */
        caddr_t name;     /* Client address for connection based sockets */
        int     namelen;  /* Length of name */
};
.Ed
.Sh RETURN VALUES
Normally
.Fn nfssvc
does not return unless the server
is terminated by a signal when a value of 0 is returned.
Otherwise, \-1 is returned and the global variable
.Va errno
is set to specify the error.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EPERM
The caller is not the superuser.
.It Bq Er EINVAL
The flag argument consisted of incompatible or otherwise
unsupported bits.
.El
.Sh SEE ALSO
.Xr mount_nfs 8 ,
.Xr nfsd 8 ,
.Xr sysctl 8
.Sh HISTORY
The
.Fn nfssvc
function first appeared in
.Bx 4.4 .
.Sh BUGS
The
.Fn nfssvc
system call is designed specifically for the NFS
support daemons and as such is specific to their requirements.
Several fields of the argument structures are assumed to be valid and
sometimes to be unchanged from a previous call, such that
.Fn nfssvc
must be used with extreme care.
@


1.22
log
@use .In and delete .Tn; from Kaspars at Bankovskis dot net
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.21 2014/03/24 01:54:58 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: March 24 2014 $
d97 1
a97 1
.Nm nfssvc
d117 1
a117 1
.Nm nfssvc
d122 1
a122 1
.Nm nfssvc
@


1.21
log
@Update to match header
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.20 2007/05/31 19:19:33 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d40 2
a41 2
.Fd #include <unistd.h>
.Fd #include <nfs/nfs.h>
d123 1
a123 2
system call is designed specifically for the
.Tn NFS
@


1.20
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.19 2007/05/28 18:47:54 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d69 1
a69 1
        struct ucred    nsd_cr;         /* Cred. uid maps to */
a75 1
        NFSKERBKEY_T    nsd_key;        /* Session key */
@


1.19
log
@tweaks; ok thib
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.18 2007/05/27 21:14:41 thib Exp $
d33 1
a33 1
.Dd June 9, 1993
@


1.18
log
@cleanup the nfssvc() system call.
* Remove alot of dead kerberos code like
  the options for NFSSVC_AUTHIN and NFSSVC_AUTHFAIL wich where
  originally to get the kerberos auth info into the kernel.
  (that hasnt worked for long, if ever.)
  Also remove some helper functions and associated goo, however
  theres still alot of it left.
* Remove NFSSVC_BIOD, biod's where replaced with kernel threads
  a long time ago.
* NFSSVC_MNTD wich was is NQNFS leftover.

Update the man page and nfsd(8).

nfssvc(2) besides being special has only one user in the tree
nfsd(8), therefore no library bumps are needed.
(discussed with deraadt@@).

ok beck@@, "go a head" deraadt@@
Tested by ckuethe@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.17 2003/10/22 04:45:54 jmc Exp $
d47 1
a47 1
function is used by the NFS daemons to pass information into the kernel
d59 1
a59 1
daemon into the kernel
d63 1
a63 1
and a pointer to a
a78 1
structure.
d88 1
a88 1
and a pointer to a
a95 2
structure.
.Pp
@


1.17
log
@typos from Jared Yanovich;
also sync with header, and change spacing a little to prevent
line breaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.16 2003/06/02 20:18:39 millert Exp $
d47 2
a48 2
function is used by the NFS daemons to pass information into and out
of the kernel and also to enter the kernel as a server daemon.
d54 1
a54 1
points to one of three structures depending on which bits are set in
d57 1
a57 10
On the client side, there is no longer a need to call
.Fn nfssvc
with the
.Fa flags
argument set to
.Dv NFSSVC_BIOD
since this functionality has been replaced by a
.Nm nfsiod
implementation using kernel threads.
See
d59 1
a59 67
and
.Xr sysctl 8
for further discussion.
For
.Nm NQNFS ,
.Xr mount_nfs 8
calls
.Fn nfssvc
with the
.Dv NFSSVC_MNTD
flag, optionally or'd with the flags
.Dv NFSSVC_GOTAUTH
and
.Dv NFSSVC_AUTHINFAIL
along with a pointer to a
.Bd -literal
struct nfsd_cargs {
        char            *ncd_dirp;      /* Mount dir path */
        uid_t           ncd_authuid;    /* Effective uid */
        int             ncd_authtype;   /* Type of authenticator */
        u_int           ncd_authlen;   /* Length of authenticator string */
        u_char          *ncd_authstr;   /* Authenticator string */
        u_int           ncd_verflen;    /* and the verifier */
        u_char          *ncd_verfstr;
        NFSKERBKEY_T    ncd_key;        /* Session key */
};
.Ed
.Pp
structure.
The initial call has only the
.Dv NFSSVC_MNTD
flag set to specify service for the mount point.
If the mount point is using Kerberos, then the
.Xr mount_nfs 8
daemon will return from
.Fn nfssvc
with
.Va errno
set to
.Er ENEEDAUTH
whenever the client side requires an
.Dq rcmd
authentication ticket for the user.
.Xr mount_nfs 8
will attempt to get the Kerberos ticket, and if successful will call
.Fn nfssvc
with the flags
.Dv NFSSVC_MNTD
and
.Dv NFSSVC_GOTAUTH
after filling the ticket into the
ncd_authstr field
and
setting the ncd_authlen and ncd_authtype
fields of the nfsd_cargs structure.
If
.Xr mount_nfs 8
failed to get the ticket,
.Fn nfssvc
will be called with the flags
.Dv NFSSVC_MNTD ,
.Dv NFSSVC_GOTAUTH
and
.Dv NFSSVC_AUTHINFAIL
to denote a failed authentication attempt.
.Pp
On the server side,
d79 1
d81 1
a81 4
to enter the kernel as an
.Xr nfsd 8
daemon.
Whenever an
d83 1
a83 37
daemon receives a Kerberos authentication ticket, it will return from
.Fn nfssvc
with
.Va errno
set to
.Er ENEEDAUTH .
The
.Xr nfsd 8
will attempt to authenticate the ticket and generate a set of credentials
on the server for the user ID specified in the field nsd_uid.
This is done by first authenticating the Kerberos ticket and then mapping
the Kerberos principal to a local name and getting a set of credentials for
that user via
.Xr getpwnam 3
and
.Xr getgrouplist 3 .
If successful, the
.Xr nfsd 8
will call
.Fn nfssvc
with the
.Dv NFSSVC_NFSD
and
.Dv NFSSVC_AUTHIN
flags set to pass the credential mapping in nsd_cr into the
kernel to be cached on the server socket for that client.
If the authentication failed,
.Xr nfsd 8
calls
.Fn nfssvc
with the flags
.Dv NFSSVC_NFSD
and
.Dv NFSSVC_AUTHINFAIL
to denote an authentication failure.
.Pp
The master
d85 1
a85 1
server daemon calls
d97 1
a98 5
to pass a server side
.Tn NFS
socket into the kernel for servicing by the
.Xr nfsd 8
daemons.
a108 4
.It Bq Er ENEEDAUTH
This special error value
is really used for authentication support, particularly Kerberos,
as explained above.
d111 3
a129 4
It should really return values to indicate the need for authentication
support, since
.Er ENEEDAUTH
is not really an error.
d132 1
a132 1
.Nm nfssvc
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.15 2003/03/28 10:14:27 jmc Exp $
d70 1
a70 1
for futher discussion.
d88 1
a88 1
        int             ncd_authlen;    /* Length of authenticator string */
d90 1
a90 1
        int             ncd_verflen;    /* and the verifier */
d141 1
a141 1
        struct nfsd     *nsd_nfsd;      /* Pointer to in kernel nfsd struct */
d147 1
a147 1
        int             nsd_verflen;    /* and the verfier */
d205 3
a207 3
        int     sock;           /* Socket to serve */
        caddr_t name;           /* Client address for connection based sockets */
        int     namelen;        /* Length of name */
@


1.15
log
@Ip -> IP;

ok miod@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.14 2003/02/27 07:55:34 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.13 2000/05/25 06:09:50 deraadt Exp $
d147 1
a147 1
        u_int32_t       nsd_haddr;      /* Ip address of client */
@


1.13
log
@no more nfsiod; mickey
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.12 2000/04/15 11:46:04 aaron Exp $
d176 1
a176 1
that user via.
@


1.12
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.11 2000/01/22 12:05:49 aaron Exp $
d61 1
a61 3
On the client side,
.Xr nfsiod 8
calls
d67 5
d73 2
a74 4
.Fa argstructp
set to
.Dv NULL
to enter the kernel as a block I/O server daemon.
d240 1
a240 1
.Xr nfsiod 8
@


1.11
log
@Use .Er macro when referring to errno error names.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.10 2000/01/22 12:00:43 aaron Exp $
d234 1
a234 1
The caller is not the super-user.
@


1.10
log
@Use .Va macro when referring to the global variable errno.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.9 1999/07/04 18:59:44 aaron Exp $
d253 1
a253 1
.Dv ENEEDAUTH
@


1.9
log
@trash some old leftover macros and replace them with -mdoc macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.8 1999/06/29 14:10:11 aaron Exp $
d107 3
a109 1
with errno set to
d165 3
a167 1
with errno set to
@


1.8
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.7 1999/05/16 19:55:31 alex Exp $
d98 1
a98 1
.sp
d155 1
a155 1
.sp
d209 1
a209 1
.sp
@


1.7
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.6 1999/02/27 21:56:36 deraadt Exp $
d107 4
a110 1
with errno == ENEEDAUTH whenever the client side requires an ``rcmd''
d119 1
a119 1
after filling the ticket into the 
d163 2
a164 1
with errno == ENEEDAUTH.
d168 1
a168 1
on the server for the ``user id'' specified in the field nsd_uid.
d220 1
a220 1
Otherwise, -1 is returned and the global variable
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.5 1998/07/06 18:28:06 deraadt Exp $
d229 1
a230 1
.Xr mount_nfs 8 ,
@


1.5
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: nfssvc.2,v 1.6 1995/02/27 12:35:08 cgd Exp $
d109 1
a109 1
.Xr Mount_nfs 8
@


1.4
log
@use Bx macro for BSD versions
@
text
@d1 1
@


1.3
log
@pretty
@
text
@d234 2
a235 1
function first appeared in 4.4BSD.
@


1.2
log
@sync to nfs.h
@
text
@d87 5
a91 5
	char		*ncd_dirp;	/* Mount dir path */
	uid_t		ncd_authuid;	/* Effective uid */
	int		ncd_authtype;	/* Type of authenticator */
	int		ncd_authlen;	/* Length of authenticator string */
	u_char		*ncd_authstr;	/* Authenticator string */
d138 6
a143 6
	struct nfsd	*nsd_nfsd;	/* Pointer to in kernel nfsd struct */
	uid_t		nsd_uid;	/* Effective uid mapped to cred */
	u_int32_t	nsd_haddr;	/* Ip address of client */
	struct ucred	nsd_cr;		/* Cred. uid maps to */
	int		nsd_authlen;	/* Length of auth string (ret) */
	u_char		*nsd_authstr;	/* Auth string (ret) */
d199 3
a201 3
	int	sock;		/* Socket to serve */
	caddr_t	name;		/* Client address for connection based sockets */
	int	namelen;	/* Length of name */
@


1.1
log
@Initial revision
@
text
@d91 4
a94 1
	char		*ncd_authstr;	/* Authenticator string */
d140 1
a140 1
	u_long		nsd_haddr;	/* Ip address of client */
d143 6
a148 1
	char		*nsd_authstr;	/* Auth string (ret) */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
