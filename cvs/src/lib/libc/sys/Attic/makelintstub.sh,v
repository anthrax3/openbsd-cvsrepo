head	1.11;
access;
symbols
	OPENBSD_5_2:1.9.0.10
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.8
	OPENBSD_5_0:1.9.0.6
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.4
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.7.0.10
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.8
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.2
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.18
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.16
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.14
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.12
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.10
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.8
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.6
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.4
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.11
date	2012.09.04.03.10.42;	author okan;	state dead;
branches;
next	1.10;

1.10
date	2012.08.23.06.19.48;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2010.07.24.23.32.52;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2009.06.03.14.45.47;	author jj;	state Exp;
branches;
next	1.7;

1.7
date	2006.09.22.16.20.35;	author pedro;	state Exp;
branches;
next	1.6;

1.6
date	2006.03.13.18.59.32;	author moritz;	state Exp;
branches;
next	1.5;

1.5
date	2006.03.12.20.12.14;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.17.07.02.29;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.22.00.45.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2002.07.06.19.14.20;	author nordin;	state Exp;
branches;
next	1.1;

1.1
date	98.02.08.22.45.15;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove lint leftovers; ok guenther@@
@
text
@#!/bin/sh -
#	$OpenBSD: makelintstub.sh,v 1.10 2012/08/23 06:19:48 deraadt Exp $
#	$NetBSD: makelintstub,v 1.2 1997/11/05 05:46:18 thorpej Exp $
#
# Copyright (c) 1996, 1997 Christopher G. Demetriou.  All rights reserved.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#      This product includes software developed for the NetBSD Project
#      by Christopher G. Demetriou.
# 4. The name of the author may not be used to endorse or promote products
#    derived from this software without specific prior written permission
#
# THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
# IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
# OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
# IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
# INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
# NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
# DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
# THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
# (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
# THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

usage()
{

	echo "usage: $0 [-n|-p] [-o filename] object ..."
	exit 1
}

header()
{

	cat <<- __EOF__
	/*
	 * THIS IS AN AUTOMATICALLY GENERATED FILE.  DO NOT EDIT.
	 */

	#include <sys/param.h>
	#include <sys/time.h>
	#include <sys/mount.h>
	#include <sys/stat.h>
	#include <ufs/ufs/quota.h>
	#include <ufs/ufs/inode.h>
	#include <sys/resource.h>
	#include <sys/poll.h>
	#include <sys/uio.h>
	#include <sys/ipc.h>
	#include <sys/msg.h>
	#include <sys/sem.h>
	#include <sys/shm.h>
	#include <sys/socket.h>
	#include <sys/ioctl.h>
	#include <sys/ktrace.h>
	#include <sys/mman.h>
	#include <sys/event.h>
	#include <sys/wait.h>
	#include <stdio.h>
	#undef DIRBLKSIZ
	#include <dirent.h>
	#include <fcntl.h>
	#include <signal.h>
	#include <unistd.h>
	#ifdef __STDC__
	#include <stdarg.h>
	#else
	#include <varargs.h>
	#endif
	#include <err.h>

	__EOF__
}

syscall_stub()
{

	syscallhdr="$1"
	syscallname="$2"
	funcname="$3"

	arglist=$(printf '#include "%s"\n' "$syscallhdr" | cpp -C | \
    	grep '^/\* syscall: "'"$syscallname"'" ' | \
    	sed -e 's,^/\* syscall: ,,;s, \*/$,,')

	eval set -f -- "$arglist"

	if [ $# -lt 4 ]; then
		echo syscall $syscallname not found! 1>&2
		exit 1
	fi

	syscallname=$1
	shift 2			# kill name and "ret:"
	returntype=$1
	shift 2			# kill return type and "args:"

	if [ "`eval echo -n \\$$#`" = "..." ]; then
		varargs=YES
		nargs=$(($# - 1))
	else
		varargs=NO
		nargs=$#
	fi
	nargswithva=$#

	echo "/*ARGSUSED*/"
	echo "$returntype"

	# do ANSI C function header

	echo -n	"$funcname("
	if [ $nargs -eq 0 ]; then
		echo -n "void"
	else
		i=1
		while [ $i -le $nargs ]; do
			eval echo -n \""\$$i"\"
			echo -n	" arg$i"
			if [ $i -lt $nargswithva ]; then
				echo -n	", "
			fi
			i=$(($i + 1))
		done
	fi
	if [ $varargs = YES ]; then
		echo -n "..."
	fi
	echo	")"
	echo	"{"
	if [ "$returntype" != "void" ]; then
		echo "        return (($returntype)0);"
	fi
	echo	"}"
}

trailer()
{

	cat <<- __EOF__
	/* END */
	__EOF__
}

pflag=NO
nflag=NO
oarg=""
syscallhdr=/usr/include/sys/syscall.h

args=`getopt no:ps: $*`
if test $? -ne 0; then
	usage
fi
set -- $args

for i; do
	case "$i" in
	-n)	nflag=YES; shift;;
	-o)	oarg=$2; shift; shift;;
	-p)	pflag=YES; shift;;
	-s)	syscallhdr=$2; shift; shift;;
	--)	shift; break;;
	esac
done

if [ $pflag = YES ] && [ $nflag = YES ]; then
	echo "$0: -n flag and -p flag may not be used together"
	echo ""
	usage
fi

if [ "X$oarg" != "X" ]; then
	exec > $oarg
fi

header
for syscall; do
	fnname=`echo $syscall | sed -e 's,\.o$,,'`
	if [ $pflag = YES ]; then
		scname=`echo $fnname | sed -e 's,^_,,'`
	else
		scname=$fnname
	fi
	syscall_stub $syscallhdr $scname $fnname
	echo ""
done
trailer

exit 0
@


1.10
log
@no more nnpfspioctl() system call; ok guenther
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.9 2010/07/24 23:32:52 guenther Exp $
@


1.9
log
@Add a newline to the input we feed to cpp to get rid of its 'no newline
at end of file' warnings.  Simplify the shell quoting to make it easier
to read while we're at it

"looks allright" beck@@
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.8 2009/06/03 14:45:47 jj Exp $
a65 1
	#include <nnpfs/nnpfs_pioctl.h>
@


1.8
log
@Arla client rename from xfs to nnpfs for later upgrades. Tested on various arches. ok todd@@ beck@@
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.7 2006/09/22 16:20:35 pedro Exp $
d91 1
a91 1
	arglist="`printf '#include "'"$syscallhdr"'"' | cpp -C | \
d93 1
a93 1
    	sed -e 's,^/\* syscall: ,,;s, \*/$,,'`"
@


1.7
log
@Remove reference to LFS, okay deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.6 2006/03/13 18:59:32 moritz Exp $
d66 1
a66 1
	#include <xfs/xfs_pioctl.h>
@


1.6
log
@Correctly check for the exit value of getopt(1) and don't
overwrite it with the value from ``set''. ok millert@@
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.5 2006/03/12 20:12:14 deraadt Exp $
a53 1
	#include <ufs/lfs/lfs.h>
@


1.5
log
@if a system call has no arguments, declare it (void), so that lint is
happier; ok moritz
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.4 2004/07/17 07:02:29 deraadt Exp $
a154 2
set -- `getopt no:ps: $*`

d160 1
d164 2
@


1.4
log
@remove K&R stub support
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.3 2003/06/22 00:45:58 deraadt Exp $
a107 5
	cat <<- __EOF__
	/*ARGSUSED*/
	$returntype
	__EOF__

d117 3
d123 13
a135 9
	i=1
	while [ $i -le $nargs ]; do
		eval echo -n \""\$$i"\"
		echo -n	" arg$i"
		if [ $i -lt $nargswithva ]; then
			echo -n	", "
		fi
		i=$(($i + 1))
	done
@


1.3
log
@3 missing header files
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.2 2002/07/06 19:14:20 nordin Exp $
a122 21
	if [ $varargs = YES ]; then
		echo	"#ifdef __STDC__"

		echo -n	"$funcname("
		i=1
		while [ $i -le $nargs ]; do
			eval echo -n \""\$$i"\"
			echo -n	" arg$i"
			if [ $i -lt $nargswithva ]; then
				echo -n	", "
			fi
			i=$(($i + 1))
		done
		if [ $varargs = YES ]; then
			echo -n "..."
		fi
		echo	")"

		# do K&R C function header
		echo	"#else"
	fi
d127 2
a128 1
		echo -n	"arg$i"
d135 1
a135 1
		echo -n "va_alist"
a137 14
	i=1
	while [ $i -le $nargs ]; do
		eval echo -n \""        \$$i"\"
		echo	" arg$i;"
		i=$(($i + 1))
	done
	if [ $varargs = YES ]; then
		echo	"        va_dcl"
	fi

	# do function body
	if [ $varargs = YES ]; then
		echo	"#endif"
	fi
@


1.2
log
@Remove kernel support for NTP. ok deraadt@@ and tholo@@
@
text
@d2 1
a2 1
#	$OpenBSD: makelintstub.sh,v 1.1 1998/02/08 22:45:15 tholo Exp $
d66 2
d80 1
@


1.1
log
@Better lint(1) framework.  Mostly from cgd@@NetBSD
@
text
@d2 1
a2 1
#	$OpenBSD$
a61 1
	#include <sys/timex.h>
@

