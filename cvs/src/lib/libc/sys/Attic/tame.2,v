head	1.32;
access;
symbols
	OPENBSD_5_8:1.15.0.4
	OPENBSD_5_8_BASE:1.15;
locks; strict;
comment	@.\" @;


1.32
date	2015.10.09.01.24.57;	author deraadt;	state dead;
branches;
next	1.31;
commitid	JNaUtIMteCgesqPo;

1.31
date	2015.10.04.20.47.16;	author djm;	state Exp;
branches;
next	1.30;
commitid	i9es2VIcBYhLZaOO;

1.30
date	2015.09.30.11.36.07;	author semarie;	state Exp;
branches;
next	1.29;
commitid	TMIPnGR2J26p7mlU;

1.29
date	2015.09.26.17.16.10;	author jmc;	state Exp;
branches;
next	1.28;
commitid	UpDfsW3hpmxC79Y8;

1.28
date	2015.09.26.15.41.31;	author semarie;	state Exp;
branches;
next	1.27;
commitid	9jEwAdt2P2jxFR0b;

1.27
date	2015.09.11.09.01.16;	author deraadt;	state Exp;
branches;
next	1.26;
commitid	vsvB6RlQ8hqJtVht;

1.26
date	2015.09.09.21.54.02;	author jmc;	state Exp;
branches;
next	1.25;
commitid	5ymApMJmq9pJOovA;

1.25
date	2015.09.09.17.56.59;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	LR11yk102SoyZdKV;

1.24
date	2015.09.07.05.23.30;	author tim;	state Exp;
branches;
next	1.23;
commitid	L5rXY0GDER42P7HT;

1.23
date	2015.09.06.19.13.38;	author jmc;	state Exp;
branches;
next	1.22;
commitid	LOKeHmz7XwVX2Tvi;

1.22
date	2015.09.06.19.03.37;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	CmhZvEtRVjXjpQ6Q;

1.21
date	2015.08.26.15.17.06;	author jmc;	state Exp;
branches;
next	1.20;
commitid	kqNIlLIGZVALwt1a;

1.20
date	2015.08.26.14.46.22;	author semarie;	state Exp;
branches;
next	1.19;
commitid	AxoeFxjeSo4N2gfv;

1.19
date	2015.08.26.05.55.53;	author doug;	state Exp;
branches;
next	1.18;
commitid	GKmxn2JABuE79Vad;

1.18
date	2015.08.26.05.20.06;	author doug;	state Exp;
branches;
next	1.17;
commitid	B5zLNz9UGGYolarc;

1.17
date	2015.08.22.20.18.50;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	6NDuzTPjBp2GqkfQ;

1.16
date	2015.08.21.07.26.09;	author doug;	state Exp;
branches;
next	1.15;
commitid	REKU4QrYg7M2FSKo;

1.15
date	2015.07.28.18.20.41;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	FlZio3UWKO5TFZHo;

1.14
date	2015.07.28.18.12.57;	author jmc;	state Exp;
branches;
next	1.13;
commitid	21KQ6YVrT5BzRE7i;

1.13
date	2015.07.23.05.44.40;	author doug;	state Exp;
branches;
next	1.12;
commitid	9xPMn5POXkvC5edp;

1.12
date	2015.07.21.07.35.28;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	LtGcFNlawzRM27o4;

1.11
date	2015.07.20.18.04.05;	author schwarze;	state Exp;
branches;
next	1.10;
commitid	g9Ja86yiGSNNq64y;

1.10
date	2015.07.20.15.26.28;	author nicm;	state Exp;
branches;
next	1.9;
commitid	yQHLRdGikSs6Lpyj;

1.9
date	2015.07.19.17.08.35;	author jmc;	state Exp;
branches;
next	1.8;
commitid	oKpCjqY3xH4Z4txz;

1.8
date	2015.07.19.16.33.12;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	wJ0fIcI5OhJOflDC;

1.7
date	2015.07.19.14.26.38;	author jmc;	state Exp;
branches;
next	1.6;
commitid	dH0zuR4OS9KrwHr7;

1.6
date	2015.07.19.13.41.07;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	oQ6ZbAx1R5Y8ixlr;

1.5
date	2015.07.19.10.14.43;	author jmc;	state Exp;
branches;
next	1.4;
commitid	7rSYnRpAeaLQSJKe;

1.4
date	2015.07.19.10.11.16;	author jmc;	state Exp;
branches;
next	1.3;
commitid	hg8FodR348q5jLuI;

1.3
date	2015.07.19.07.16.22;	author nicm;	state Exp;
branches;
next	1.2;
commitid	z8fbySF4iHUpFqvP;

1.2
date	2015.07.19.07.12.58;	author nicm;	state Exp;
branches;
next	1.1;
commitid	RuYkBcp9zVTVzB1a;

1.1
date	2015.07.19.02.37.29;	author deraadt;	state Exp;
branches;
next	;
commitid	oLWWNhdF2IpRGxdg;


desc
@@


1.32
log
@tame -> pledge conversion, in libc.  I should crank libc, but am cheating
hoping things go well.  The old symbol is faked via a stupid stub function,
until next major crank when it can be removed.  I am expecting guenther
to scream at me.
@
text
@.\" $OpenBSD: tame.2,v 1.31 2015/10/04 20:47:16 djm Exp $
.\"
.\" Copyright (c) 2015 Nicholas Marriott <nicm@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: October 4 2015 $
.Dt TAME 2
.Os
.Sh NAME
.Nm tame
.Nd restrict system operations
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn tame "const char *request" "const char *paths[]"
.Sh DESCRIPTION
The current process is forced into a restricted-service operating mode.
A few subsets are available, roughly described as computation, memory
management, read-write operations on file descriptors, opening of files,
networking.
In general, these modes were selected by studying the operation
of many programs using libc and other such interfaces, and setting
.Ar request
or
.Ar paths .
.Pp
Use of
.Fn tame
in an application will require at least some study and understanding
of the interfaces called.
Subsequent calls to
.Fn tame
can reduce the abilities further, but abilities can never be regained.
.Pp
A process which attempts a restricted operation is killed with
.Dv SIGKILL .
If
.Va "abort"
is set, then a non-blockable
.Dv SIGABRT
is delivered instead, possibly resulting in a
.Xr core 5
file.
.Pp
A
.Fa request
value of "" restricts the process to the
.Xr _exit 2
system call.
This can be used for pure computation operating on memory shared
with another process.
.Pp
All
.Dv requests
below (with the exception of
.Va "abort" )
permit the following system calls:
.Bd -ragged -offset indent
.Xr clock_getres 2 ,
.Xr clock_gettime 2 ,
.Xr fchdir 2 ,
.Xr getdtablecount 2 ,
.Xr getegid 2 ,
.Xr geteuid 2 ,
.Xr getgid 2 ,
.Xr getgroups 2 ,
.Xr getitimer 2 ,
.Xr getlogin 2 ,
.Xr getpgid 2 ,
.Xr getpgrp 2 ,
.Xr getpid 2 ,
.Xr getppid 2 ,
.Xr getresgid 2 ,
.Xr getresuid 2 ,
.Xr getrlimit 2 ,
.Xr getsid 2 ,
.Xr getthrid 2 ,
.Xr gettimeofday 2 ,
.Xr getuid 2 ,
.Xr getuid 2 ,
.Xr issetugid 2 ,
.Xr nanosleep 2 ,
.Xr sendsyslog 2 ,
.Xr setitimer 2 ,
.Xr sigaction 2 ,
.Xr sigprocmask 2 ,
.Xr sigreturn 2 ,
.Xr umask 2 ,
.Xr wait4 2 .
.Ed
.Pp
Some system calls, when allowed, have restrictions applied to them:
.Pp
.Bl -tag -width "readlink(2)" -offset indent -compact
.It Xr access 2
May check for existence of
.Pa /etc/localtime .
.Pp
.It Xr adjtime 2
Read-only, for
.Xr ntpd 8 .
.Pp
.It Xr chmod 2
.It Xr fchmod 2
.It Xr fchmodat 2
.It Xr chown 2
.It Xr lchown 2
.It Xr fchown 2
.It Xr fchownat 2
Setuid/setgid/sticky bits are ignored.
The user or group cannot be changed on a file.
.Pp
.It Xr mmap 2
.It Xr mprotect 2
.Dv PROT_EXEC
isn't allowed.
.Pp
.It Xr open 2
May open
.Pa /etc/localtime ,
any files below
.Pa /usr/share/zoneinfo
and files ending in
.Pa libc.cat
below the directory
.Pa /usr/share/nls/ .
.Pp
.It Xr readlink 2
May operate on
.Pa /etc/malloc.conf .
.Pp
.It Xr sysctl 3
A small set of read-only operations are allowed, sufficient to
support:
.Xr getdomainname 3 ,
.Xr gethostname 3 ,
.Xr getifaddrs 3 ,
.Xr uname 3 ,
system sensor readings.
.Pp
.It Xr tame 2
Can only reduce permissions; can only set a list of
.Pa paths
once.
.El
.Pp
The
.Ar request
is specified as a string, with space separate keywords:
.Bl -tag -width "tmppath" -offset indent
.It Va "malloc"
To allow use of the
.Xr malloc 3
family of functions, the following system calls are permitted:
.Pp
.Xr getentropy 2 ,
.Xr madvise 2 ,
.Xr minherit 2 ,
.Xr mmap 2 ,
.Xr mprotect 2 ,
.Xr mquery 2 ,
.Xr munmap 2 .
.It Va "rw"
The following system calls are permitted to allow most types of IO
operations on previously allocated file descriptors, including
libevent or handwritten async IO loops:
.Pp
.Xr poll 2 ,
.Xr kevent 2 ,
.Xr kqueue 2 ,
.Xr select 2 ,
.Xr close 2 ,
.Xr dup 2 ,
.Xr dup2 2 ,
.Xr dup3 2 ,
.Xr closefrom 2 ,
.Xr shutdown 2 ,
.Xr read 2 ,
.Xr readv 2 ,
.Xr pread 2 ,
.Xr preadv 2 ,
.Xr write 2 ,
.Xr writev 2 ,
.Xr pwrite 2 ,
.Xr pwritev 2 ,
.Xr ftruncate 2 ,
.Xr lseek 2 ,
.Xr fcntl 2 ,
.Xr fsync 2 ,
.Xr pipe 2 ,
.Xr pipe2 2 ,
.Xr socketpair 2 ,
.Xr getdents 2 ,
.Xr sendto 2 ,
.Xr sendmsg 2 ,
.Xr recvmsg 2 ,
.Xr recvfrom 2 ,
.Xr fstat 2 .
.Pp
Note that
.Xr sendto 2
is only permitted if its destination socket address is
.Dv NULL .
.It Va "stdio"
This subset is simply the combination of
.Va "malloc"
and
.Va "rw" .
As a result, all the expected functionalities of libc
stdio work.
.It Va "rpath"
A number of system calls are allowed if they only cause
read-only effects on the filesystem:
.Pp
.Xr chdir 2 ,
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 ,
.Xr getfsstat 2 .
.It Va "wpath"
A number of system calls are allowed and may cause
write-effects on the filesystem:
.Pp
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 .
.It Va "cpath"
A number of system calls and sub-modes are allowed, which may
create new files or directories in the filesystem:
.Pp
.Xr rename 2 ,
.Xr rmdir 2 ,
.Xr renameat 2 ,
.Xr link 2 ,
.Xr linkat 2 ,
.Xr symlink 2 ,
.Xr unlink 2 ,
.Xr unlinkat 2 ,
.Xr mkdir 2 ,
.Xr mkdirat 2 .
.It Va "tmppath"
A number of system calls are allowed to do operations in the
.Pa /tmp
directory, including create, read, or write:
.Pp
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr chflags 2 ,
.Xr chown 2 ,
.Xr unlink 2 ,
.Xr fstat 2 .
.It Va "inet"
The following system calls are allowed to operate in the
.Dv AF_INET
and
.Dv AF_INET6
domains:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.Pp
.Xr setsockopt 2
has been reduced in functionality substantially.
.It Va "fattr"
The following system calls are allowed to make explicit changes
to fields in
.Va struct stat
relating to a file:
.Pp
.Xr utimes 2 ,
.Xr futimes 2 ,
.Xr utimensat 2 ,
.Xr futimens 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchownat 2 ,
.Xr lchown 2 ,
.Xr fchown 2 ,
.Xr utimes 2 .
.It Va "unix"
The following system calls are allowed to operate in the
.Dv AF_UNIX
domain:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.It Va "dns"
Subsequent to a successful
.Xr open 2
of
.Pa /etc/resolv.conf ,
a few system calls become able to allow DNS network transactions:
.Pp
.Xr sendto 2 ,
.Xr recvfrom 2 ,
.Xr socket 2 ,
.Xr connect 2 .
.It Va "getpw"
This allows read-only opening of files in
.Pa /etc
for the
.Xr getpwnam 3 ,
.Xr getgrnam 3 ,
.Xr getgrouplist 3 ,
and
.Xr initgroups 3
family of functions.
They may also need to operate in a
.Xr yp 8
environment, so a successful
.Xr open 2
of
.Pa /var/run/ypbind.lock
enables
.Va "inet"
operations.
.It Va "cmsg"
Allows passing of file descriptors using the
.Xr sendmsg 2
and
.Xr recvmsg 2
functions.
.It Va "ioctl"
Allows a subset of
.Xr ioctl 2
operations:
.Pp
.Dv FIOCLEX ,
.Dv FIONCLEX ,
.Dv FIONREAD ,
.Dv FIONBIO ,
.Dv FIOGETOWN ,
.Dv TIOCGETA ,
.Dv TIOCGPGRP ,
.Dv TIOCGWINSZ ,
.Dv TIOCSTI .
.It Va "proc"
Allows the following process relationship operations:
.Pp
.Xr fork 2 ,
.Xr vfork 2 ,
.Xr kill 2 ,
.Xr setgroups 2 ,
.Xr setresgid 2 ,
.Xr setresuid 2 .
.It Va "prot_exec"
Allows the use of
.Dv PROT_EXEC
with
.Xr mmap 2
and
.Xr mprotect 2 .
.It Va "abort"
Deliver an unblockable
.Dv SIGABRT
upon violation instead of
.Dv SIGKILL .
.El
.Pp
A whitelist of permitted paths may be provided in
.Ar paths .
All other paths will return
.Er ENOENT .
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn tame
will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa paths
points outside the process's allocated address space.
.It Bq Er ENAMETOOLONG
An element of
.Fa paths
is too large, or prepending
.Fa cwd
to it would exceed
.Dv PATH_MAX
bytes.
.It Bq Er EPERM
This process is attempting to increase permissions.
.It Bq Er E2BIG
The
.Ar paths
array is too large, or the total number of bytes exceeds a
system-imposed limit.
The limit in the system as released is 262144 bytes
.Pf ( Dv ARG_MAX ) .
.El
.Sh HISTORY
The
.Fn tame
system call appeared in
.Ox 5.8 .
.Sh CAVEATS
It is not possible to
.Xr systrace 4
a
.Fn tame
program.
@


1.31
log
@mention sendto(2) destination address restriction for "rw"
subset; ok deraadt, feedback & ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.30 2015/09/30 11:36:07 semarie Exp $
d17 1
a17 1
.Dd $Mdocdate: September 30 2015 $
@


1.30
log
@implement new "prot_exec" tame(2) request:
- by default, a tamed-program don't have the possibility to use PROT_EXEC for
  mmap(2) or mprotect(2)
- for that, use the request "prot_exec" (that could be dropped later)

initial idea from deraadt@@ and kettenis@@

"make complete sense" beck@@
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.29 2015/09/26 17:16:10 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2015 $
d210 5
@


1.29
log
@oops - avoid Xr to self; sorry sebastien...
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.28 2015/09/26 15:41:31 semarie Exp $
d124 5
d395 8
a402 1
.Xr setresuid 2 ,
@


1.28
log
@mentions that using systrace(4) on a tame(2) program isn't possible.

with big help from jmc for phrasing.

ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.27 2015/09/11 09:01:16 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: September 11 2015 $
d438 1
a438 1
.Xr tame 2
@


1.27
log
@change remaining mentions of "flags" to "request" and adapt text
nearby.  Spotted by Ross Richardson.
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.26 2015/09/09 21:54:02 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 9 2015 $
d434 6
@


1.26
log
@seperate->separate;
while here, i've adjusted the formatting of one list
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.25 2015/09/09 17:56:59 deraadt Exp $
d34 1
a34 1
.Ar flags
d57 2
a58 2
.Fa flags
value of 0 restricts the process to the
d359 1
a359 1
enables the
d361 1
a361 1
flag.
@


1.25
log
@Move to next tame() API.  The flags are now passed as a very simple string,
which results in tame() code placements being much more recognizeable.
tame() can be moved to unistd.h and does not need cpp symbols to turn the
bits on and off.  The resulting API is a bit unexpected, but simplifies the
mapping to enabling bits in the kernel substantially.
vague ok's from various including guenther doug semarie
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.25 2015/09/09 17:49:31 deraadt Exp $
d105 1
a105 1
.Bl -tag -width "tmppath" -offset indent -compact
d109 1
d113 1
d123 1
d133 1
d137 1
d146 1
d155 1
a155 1
is specified as a string, with space seperate keywords:
@


1.24
log
@Add getfsstat(2) to TAME_RPATH; OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.23 2015/09/06 19:13:38 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 6 2015 $
d24 1
a24 1
.In sys/tame.h
d26 1
a26 1
.Fn tame "int flags" "const char *paths[]"
d49 1
a49 1
.Dv TAME_ABORT
d65 3
a67 3
.Dv TAME_*
options below (with the exception of
.Dv TAME_ABORT )
d105 1
a105 1
.Bl -tag -width TAME_TMPPATH -offset indent -compact
d119 2
a120 2
Setuid/setgid bits do not work, nor can the user or group be changed
on a file.
d148 4
a151 4
.Ar flags
are specified as a bitwise OR of the following values:
.Bl -tag -width TAME_TMPPATH -offset indent
.It Dv TAME_MALLOC
d163 1
a163 1
.It Dv TAME_RW
d199 1
a199 1
.It Dv TAME_STDIO
d201 1
a201 1
.Dv TAME_MALLOC
d203 1
a203 1
.Dv TAME_RW .
d206 1
a206 1
.It Dv TAME_RPATH
d227 1
a227 1
.It Dv TAME_WPATH
d246 1
a246 1
.It Dv TAME_CPATH
d260 1
a260 1
.It Dv TAME_TMPPATH
d271 1
a271 1
.It Dv TAME_INET
d291 1
a291 1
.It Dv TAME_FATTR
d309 3
a311 2
.Xr fchown 2 .
.It Dv TAME_UNIX
d326 1
a326 1
.It Dv TAME_DNS
d337 1
a337 1
.It Dv TAME_GETPW
d354 1
a354 1
.Dv TAME_INET
d356 1
a356 1
.It Dv TAME_CMSG
d362 1
a362 1
.It Dv TAME_IOCTL
d376 1
a376 1
.It Dv TAME_PROC
d385 1
a385 1
.It Dv TAME_ABORT
@


1.23
log
@spacing required before punctuation;
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.22 2015/09/06 19:03:37 deraadt Exp $
d225 2
a226 1
.Xr fstat 2 .
@


1.22
log
@remove excessive Xr; from rob pierce
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.21 2015/08/26 15:17:06 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: August 26 2015 $
d308 1
a308 1
.Xr fchown 2.
@


1.21
log
@tweak previous;
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.20 2015/08/26 14:46:22 semarie Exp $
a243 1
.Xr fstat 2 ,
d308 1
a308 2
.Xr fchown 2 ,
.Xr utimes 2 .
@


1.20
log
@use ENAMETOOLONG instead of EINVAL for errno when string overflow occurs.
document tame.2 according.

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.19 2015/08/26 05:55:53 doug Exp $
d406 1
a406 1
A element of
d410 3
a412 1
to it would exceeded PATH_MAX bytes.
@


1.19
log
@Add TIOCGETA to the tame list for TAME_IOCTL.

This is used by readpassphrase() and curses.

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.18 2015/08/26 05:20:06 doug Exp $
d405 6
@


1.18
log
@Convert paths argument of tame(2) to const char **.

The path will not be modified and this reduces casts.  Discussed with many.

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.17 2015/08/22 20:18:50 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: August 22 2015 $
d372 1
@


1.17
log
@Move to tame(int flags, char *paths[]) API/ABI.

The pathlist is a whitelist of dirs and files; anything else returns ENOENT.
Recommendation is to use a narrowly defined list.  Also add TAME_FATTR, which
permits explicit change operations against "struct stat" fields.  Some
other TAME_ flags are refined slightly.

Not cranking libc now, since nothing commited in base uses this and the
timing is uncomfortable for others.  Discussed with many; thanks for a
few bug fixes from semarie, doug, guenther.
ok guenther
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.16 2015/08/21 07:26:09 doug Exp $
d17 1
a17 1
.Dd $Mdocdate: August 21 2015 $
d26 1
a26 1
.Fn tame "int flags" "char *paths[]"
@


1.16
log
@Whitelist TIOCGPGRP (for tcgetpgrp()) in TAME_IOCTL.

Requested by Sunil Nimmagadda to help tame http.

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.15 2015/07/28 18:20:41 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: July 28 2015 $
d26 1
a26 1
.Fn tame "int flags"
d33 4
a36 1
of many programs using libc and other such interfaces.
a41 1
.Pp
d44 1
a44 1
can reduce abilities further, but abilities can never be regained.
d103 1
a103 1
Calls allowed with restrictions include:
d112 9
d142 3
a144 1
Can only reduce permissions.
a187 4
.Xr utimes 2 ,
.Xr futimes 2 ,
.Xr utimensat 2 ,
.Xr futimens 2 ,
d204 2
a205 2
As a result, all functionalities of libc
stdio works.
d291 20
d390 5
d401 3
d406 7
@


1.15
log
@describe CPATH before TMPPATH
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.14 2015/07/28 18:12:57 jmc Exp $
d343 1
@


1.14
log
@unsort: requested by deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.13 2015/07/23 05:44:40 doug Exp $
d17 1
a17 1
.Dd $Mdocdate: July 23 2015 $
a236 11
.It Dv TAME_TMPPATH
A number of system calls are allowed to do operations in the
.Pa /tmp
directory, including create, read, or write:
.Pp
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr chflags 2 ,
.Xr chown 2 ,
.Xr unlink 2 ,
.Xr fstat 2 .
d251 11
@


1.13
log
@Sync with kernel TIOCGWINSZ change.
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.12 2015/07/21 07:35:28 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 21 2015 $
a137 87
.It Dv TAME_ABORT
Deliver an unblockable
.Dv SIGABRT
upon violation instead of
.Dv SIGKILL .
.It Dv TAME_CMSG
Allows passing of file descriptors using the
.Xr sendmsg 2
and
.Xr recvmsg 2
functions.
.It Dv TAME_CPATH
A number of system calls and sub-modes are allowed, which may
create new files or directories in the filesystem:
.Pp
.Xr rename 2 ,
.Xr rmdir 2 ,
.Xr renameat 2 ,
.Xr link 2 ,
.Xr linkat 2 ,
.Xr symlink 2 ,
.Xr unlink 2 ,
.Xr unlinkat 2 ,
.Xr mkdir 2 ,
.Xr mkdirat 2 .
.It Dv TAME_DNS
Subsequent to a successful
.Xr open 2
of
.Pa /etc/resolv.conf ,
a few system calls become able to allow DNS network transactions:
.Pp
.Xr sendto 2 ,
.Xr recvfrom 2 ,
.Xr socket 2 ,
.Xr connect 2 .
.It Dv TAME_GETPW
This allows read-only opening of files in
.Pa /etc
for the
.Xr getpwnam 3 ,
.Xr getgrnam 3 ,
.Xr getgrouplist 3 ,
and
.Xr initgroups 3
family of functions.
They may also need to operate in a
.Xr yp 8
environment, so a successful
.Xr open 2
of
.Pa /var/run/ypbind.lock
enables the
.Dv TAME_INET
flag.
.It Dv TAME_INET
The following system calls are allowed to operate in the
.Dv AF_INET
and
.Dv AF_INET6
domains:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.Pp
.Xr setsockopt 2
has been reduced in functionality substantially.
.It Dv TAME_IOCTL
Allows a subset of
.Xr ioctl 2
operations:
.Pp
.Dv FIOCLEX ,
.Dv FIONCLEX ,
.Dv FIONREAD ,
.Dv FIONBIO ,
.Dv FIOGETOWN ,
.Dv TIOCGWINSZ ,
.Dv TIOCSTI .
a149 29
.It Dv TAME_PROC
Allows the following process relationship operations:
.Pp
.Xr fork 2 ,
.Xr vfork 2 ,
.Xr kill 2 ,
.Xr setgroups 2 ,
.Xr setresgid 2 ,
.Xr setresuid 2 ,
.It Dv TAME_RPATH
A number of system calls are allowed if they only cause
read-only effects on the filesystem:
.Pp
.Xr chdir 2 ,
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 .
d197 40
d248 34
d297 50
a346 3
.It Dv TAME_WPATH
A number of system calls are allowed and may cause
write-effects on the filesystem:
d348 11
a358 16
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 ,
.Xr fstat 2 .
@


1.12
log
@basic macro cleanup, mostly converting to .Dv where appropriate
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.11 2015/07/20 18:04:05 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 20 2015 $
d223 1
a223 1
.Dv TIOCSWINSZ ,
@


1.11
log
@In _TM_SELF, permit uname(3); OK deraadt@@.
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.10 2015/07/20 15:26:28 nicm Exp $
d36 1
a36 1
.Nm tame
d47 4
a50 3
.Va TAME_ABORT
is set, then a non-blockable SIGABRT is delivered instead, possibly
resulting in a
d63 1
a63 1
.Ar TAME_*
d65 1
a65 1
.Ar TAME_ABORT )
d117 1
a117 1
in below the directory
d138 6
a143 3
.It Ar TAME_ABORT
Deliver an unblockable SIGABRT upon violation instead of SIGKILL.
.It Ar TAME_CMSG
d149 1
a149 1
.It Ar TAME_CPATH
d163 1
a163 1
.It Ar TAME_DNS
d174 1
a174 1
.It Ar TAME_GETPW
d191 1
a191 1
.Ar TAME_INET
d193 1
a193 1
.It Ar TAME_INET
d195 1
a195 1
.Ar AF_INET
d197 1
a197 1
.Ar AF_INET6
d213 1
a213 1
.It Ar TAME_IOCTL
d218 8
a225 8
.Va FIOCLEX ,
.Va FIONCLEX ,
.Va FIONREAD ,
.Va FIONBIO ,
.Va FIOGETOWN ,
.Va TIOCSWINSZ ,
.Va TIOCSTI .
.It Ar TAME_MALLOC
d237 1
a237 1
.It Ar TAME_PROC
d246 1
a246 1
.It Ar TAME_RPATH
d266 1
a266 1
.It Ar TAME_RW
d306 1
a306 1
.It Ar TAME_STDIO
d308 1
a308 1
.Ar TAME_MALLOC
d310 1
a310 1
.Ar TAME_RW .
d313 1
a313 1
.It Ar TAME_TMPPATH
d324 1
a324 1
.It Ar TAME_UNIX
d326 1
a326 1
.Ar AF_UNIX
d339 1
a339 1
.It Ar TAME_WPATH
@


1.10
log
@Add setgroups(2) to TAME_PROC, ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.9 2015/07/19 17:08:35 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: July 19 2015 $
a123 1
.Xr getifaddrs 3 ,
d126 2
@


1.9
log
@sort; ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.8 2015/07/19 16:33:12 deraadt Exp $
d238 1
@


1.8
log
@typo; ralf horstmann
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.7 2015/07/19 14:26:38 jmc Exp $
a102 7
.It Xr sysctl 3
A small set of read-only operations are allowed, sufficient to
support:
.Xr getifaddrs 3 ,
.Xr getdomainname 3 ,
.Xr gethostname 3 ,
system sensor readings.
d121 7
d136 84
d232 28
a306 40
.It Ar TAME_RPATH
A number of system calls are allowed if they only cause
read-only effects on the filesystem:
.Pp
.Xr chdir 2 ,
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 .
.It Ar TAME_WPATH
A number of system calls are allowed and may cause
write-effects on the filesystem:
.Pp
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 ,
.Xr fstat 2 .
a317 34
.It Ar TAME_CPATH
A number of system calls and sub-modes are allowed, which may
create new files or directories in the filesystem:
.Pp
.Xr rename 2 ,
.Xr rmdir 2 ,
.Xr renameat 2 ,
.Xr link 2 ,
.Xr linkat 2 ,
.Xr symlink 2 ,
.Xr unlink 2 ,
.Xr unlinkat 2 ,
.Xr mkdir 2 ,
.Xr mkdirat 2 .
.It Ar TAME_INET
The following system calls are allowed to operate in the
.Ar AF_INET
and
.Ar AF_INET6
domains:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.Pp
.Xr setsockopt 2
has been reduced in functionality substantially.
d333 3
a335 6
.It Ar TAME_DNS
Subsequent to a successful
.Xr open 2
of
.Pa /etc/resolv.conf ,
a few system calls become able to allow DNS network transactions:
d337 16
a352 51
.Xr sendto 2 ,
.Xr recvfrom 2 ,
.Xr socket 2 ,
.Xr connect 2 .
.It Ar TAME_GETPW
This allows read-only opening of files in
.Pa /etc
for the
.Xr getpwnam 3 ,
.Xr getgrnam 3 ,
.Xr getgrouplist 3 ,
and
.Xr initgroups 3
family of functions.
They may also need to operate in a
.Xr yp 8
environment, so a successful
.Xr open 2
of
.Pa /var/run/ypbind.lock
enables the
.Ar TAME_INET
flag.
.It Ar TAME_CMSG
Allows passing of file descriptors using the
.Xr sendmsg 2
and
.Xr recvmsg 2
functions.
.It Ar TAME_IOCTL
Allows a subset of
.Xr ioctl 2
operations:
.Pp
.Va FIOCLEX ,
.Va FIONCLEX ,
.Va FIONREAD ,
.Va FIONBIO ,
.Va FIOGETOWN ,
.Va TIOCSWINSZ ,
.Va TIOCSTI .
.It Ar TAME_PROC
Allows the following process relationship operations:
.Pp
.Xr fork 2 ,
.Xr vfork 2 ,
.Xr kill 2 ,
.Xr setresgid 2 ,
.Xr setresuid 2 ,
.It Ar TAME_ABORT
Deliver an unblockable SIGABRT upon violation instead of SIGKILL.
@


1.7
log
@word fix;
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.6 2015/07/19 13:41:07 deraadt Exp $
d295 1
a295 1
.It Ar TAME_DNSPATH
@


1.6
log
@oops, SYS_ prefix stayed; noted by jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.5 2015/07/19 10:14:43 jmc Exp $
d300 1
a300 1
a few system calls become to allow DNS network transactions:
@


1.5
log
@no need for -compact;
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.4 2015/07/19 10:11:16 jmc Exp $
d350 1
a350 1
.Xr SYS_setresuid 2 ,
@


1.4
log
@some basic tweaks;
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.3 2015/07/19 07:16:22 nicm Exp $
d135 1
a135 2
.Bl -tag -width TAME_TMPPATH -offset indent -compact
.Pp
a147 1
.Pp
a187 1
.Pp
a194 1
.Pp
a214 1
.Pp
a234 1
.Pp
a245 1
.Pp
a259 1
.Pp
a294 1
.Pp
a305 1
.Pp
a324 1
.Pp
a330 1
.Pp
a342 1
.Pp
a350 1
.Pp
@


1.3
log
@Trailing spaces and missing .Pp.
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.2 2015/07/19 07:12:58 nicm Exp $
d31 2
a32 1
networking.  In general, these modes were selected by studying the operation
a65 1
.Pp
d111 1
a111 1
May check for existance of
d305 1
a305 1
Subsequent to a succesful
d321 1
a321 1
.Xr getgrnam 3,
d328 1
a328 1
environment, so a succesful
@


1.2
log
@succesfull -> succesful, from Ross L Richardson
@
text
@d1 1
a1 1
.\" $OpenBSD: tame.2,v 1.1 2015/07/19 02:37:29 deraadt Exp $
d64 1
a64 1
permit the following system calls: 
d101 1
d196 1
a196 1
As a result, all functionalities of libc 
@


1.1
log
@manual page for tame(2).  not very good, so i will be hearing from jmc
@
text
@d1 1
a1 1
.\" $OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
d304 1
a304 1
Subsequent to a succesfull
d327 1
a327 1
environment, so a succesfull
@

