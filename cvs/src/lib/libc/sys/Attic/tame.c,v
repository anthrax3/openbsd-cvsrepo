head	1.4;
access;
symbols;
locks; strict;
comment	@ * @;


1.4
date	2015.10.19.23.13.38;	author deraadt;	state dead;
branches;
next	1.3;
commitid	V7jRG86TpRD8KFIt;

1.3
date	2015.10.09.06.10.57;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	jHN29oiuVXOrTVF4;

1.2
date	2015.10.09.04.38.54;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	x5FVDciQWJQ3WU1W;

1.1
date	2015.10.09.01.24.57;	author deraadt;	state Exp;
branches;
next	;
commitid	JNaUtIMteCgesqPo;


desc
@@


1.4
log
@Remove old tame() stub
@
text
@/*	$OpenBSD: tame.c,v 1.3 2015/10/09 06:10:57 deraadt Exp $	*/
/*
 *	Written by Artur Grabowski <art@@openbsd.org> Public Domain
 */

#include <sys/types.h>
#include <sys/syscall.h>
#include <unistd.h>

int tame(const char *req, const char **paths);

int
tame(const char *req, const char **paths)
{
	return (pledge(req, paths));
}
@


1.3
log
@do not use weak; plus this dies next week
@
text
@d1 1
a1 1
/*	$OpenBSD: tame.c,v 1.2 2015/10/09 04:38:54 deraadt Exp $	*/
@


1.2
log
@oops, typo spotted in temporary .c file, by semarie
@
text
@d1 1
a1 1
/*	$OpenBSD: tame.c,v 1.1 2015/10/09 01:24:57 deraadt Exp $	*/
a16 1
DEF_WEAK(tame);
@


1.1
log
@tame -> pledge conversion, in libc.  I should crank libc, but am cheating
hoping things go well.  The old symbol is faked via a stupid stub function,
until next major crank when it can be removed.  I am expecting guenther
to scream at me.
@
text
@d1 1
a1 1
/*	$OpenBSD: mquery.c,v 1.8 2015/09/11 13:26:20 guenther Exp $	*/
d17 1
a17 1
DEF_WEAK(mquery);
@

