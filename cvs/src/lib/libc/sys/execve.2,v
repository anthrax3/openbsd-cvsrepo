head	1.49;
access;
symbols
	OPENBSD_6_0:1.48.0.2
	OPENBSD_6_0_BASE:1.48
	OPENBSD_5_9:1.47.0.2
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.44.0.4
	OPENBSD_5_8_BASE:1.44
	OPENBSD_5_7:1.43.0.2
	OPENBSD_5_7_BASE:1.43
	OPENBSD_5_6:1.41.0.4
	OPENBSD_5_6_BASE:1.41
	OPENBSD_5_5:1.40.0.4
	OPENBSD_5_5_BASE:1.40
	OPENBSD_5_4:1.38.0.8
	OPENBSD_5_4_BASE:1.38
	OPENBSD_5_3:1.38.0.6
	OPENBSD_5_3_BASE:1.38
	OPENBSD_5_2:1.38.0.4
	OPENBSD_5_2_BASE:1.38
	OPENBSD_5_1_BASE:1.38
	OPENBSD_5_1:1.38.0.2
	OPENBSD_5_0:1.34.0.8
	OPENBSD_5_0_BASE:1.34
	OPENBSD_4_9:1.34.0.6
	OPENBSD_4_9_BASE:1.34
	OPENBSD_4_8:1.34.0.4
	OPENBSD_4_8_BASE:1.34
	OPENBSD_4_7:1.34.0.2
	OPENBSD_4_7_BASE:1.34
	OPENBSD_4_6:1.33.0.12
	OPENBSD_4_6_BASE:1.33
	OPENBSD_4_5:1.33.0.8
	OPENBSD_4_5_BASE:1.33
	OPENBSD_4_4:1.33.0.6
	OPENBSD_4_4_BASE:1.33
	OPENBSD_4_3:1.33.0.4
	OPENBSD_4_3_BASE:1.33
	OPENBSD_4_2:1.33.0.2
	OPENBSD_4_2_BASE:1.33
	OPENBSD_4_1:1.32.0.8
	OPENBSD_4_1_BASE:1.32
	OPENBSD_4_0:1.32.0.6
	OPENBSD_4_0_BASE:1.32
	OPENBSD_3_9:1.32.0.4
	OPENBSD_3_9_BASE:1.32
	OPENBSD_3_8:1.32.0.2
	OPENBSD_3_8_BASE:1.32
	OPENBSD_3_7:1.30.0.2
	OPENBSD_3_7_BASE:1.30
	OPENBSD_3_6:1.29.0.2
	OPENBSD_3_6_BASE:1.29
	OPENBSD_3_5:1.27.0.2
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.25.0.2
	OPENBSD_3_4_BASE:1.25
	OPENBSD_3_3:1.21.0.2
	OPENBSD_3_3_BASE:1.21
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.18.0.2
	OPENBSD_3_1_BASE:1.18
	OPENBSD_3_0:1.17.0.4
	OPENBSD_3_0_BASE:1.17
	OPENBSD_2_9:1.17.0.2
	OPENBSD_2_9_BASE:1.17
	OPENBSD_2_8:1.16.0.2
	OPENBSD_2_8_BASE:1.16
	OPENBSD_2_7:1.14.0.2
	OPENBSD_2_7_BASE:1.14
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.49
date	2016.09.12.00.54.30;	author schwarze;	state Exp;
branches;
next	1.48;
commitid	eIVFCFtqm6OEWhoc;

1.48
date	2016.03.27.02.07.46;	author millert;	state Exp;
branches;
next	1.47;
commitid	8ifH2AkM9zAZC8iv;

1.47
date	2015.10.11.09.51.26;	author guenther;	state Exp;
branches;
next	1.46;
commitid	0izyLHkBROuZkWoO;

1.46
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.45;
commitid	PeV7Ql0T6htfMjhP;

1.45
date	2015.08.26.01.54.09;	author guenther;	state Exp;
branches;
next	1.44;
commitid	ZWoe9OaBBikaM1w5;

1.44
date	2015.07.28.22.48.31;	author deraadt;	state Exp;
branches;
next	1.43;
commitid	QCjhGzhWJRiWXcc0;

1.43
date	2015.02.07.08.52.37;	author tedu;	state Exp;
branches;
next	1.42;
commitid	lFOuLxCMPrLRaj70;

1.42
date	2015.01.19.15.54.11;	author millert;	state Exp;
branches;
next	1.41;
commitid	nJ2wjGsUe8RwMTRS;

1.41
date	2014.05.30.04.38.43;	author guenther;	state Exp;
branches;
next	1.40;

1.40
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.39;

1.39
date	2013.10.20.07.40.39;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2011.11.17.12.55.05;	author schwarze;	state Exp;
branches;
next	1.37;

1.37
date	2011.10.24.19.31.56;	author schwarze;	state Exp;
branches;
next	1.36;

1.36
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2011.08.19.19.59.51;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2009.10.27.08.26.20;	author nicm;	state Exp;
branches;
next	1.33;

1.33
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.32;

1.32
date	2005.05.12.07.57.22;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2005.05.08.21.08.00;	author jmc;	state Exp;
branches;
next	1.30;

1.30
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.29;

1.29
date	2004.07.05.23.04.43;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2004.04.15.19.52.18;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2003.12.28.21.14.18;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2003.12.28.20.12.41;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2003.09.04.22.14.42;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2003.07.02.08.38.05;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.02.20.18.39;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2003.06.01.20.02.39;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.03.18.12.58.21;	author david;	state Exp;
branches;
next	1.20;

1.20
date	2003.03.10.22.51.53;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.16.01.41.39;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.01.02.06.16.10;	author nordin;	state Exp;
branches;
next	1.17;

1.17
date	2001.03.14.04.01.59;	author aaron;	state Exp;
branches;
next	1.16;

1.16
date	2000.10.18.05.12.09;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	2000.09.25.07.06.26;	author fgsch;	state Exp;
branches;
next	1.14;

1.14
date	2000.04.28.20.51.26;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.15.11.46.03;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.07.06.18.21.03;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	99.06.29.14.09.54;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.25.13.06.46;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.10.51;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.23;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.05.10.17.56.29;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.56.12;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.06.18.27.16;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.07.02.09.08.53;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.13.13.19.46;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.06.13.10.08.30;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.49
log
@document that running a W^X violating binary from file system mounted
without wxallowed causes EACCES
@
text
@.\"	$OpenBSD: execve.2,v 1.48 2016/03/27 02:07:46 millert Exp $
.\"	$NetBSD: execve.2,v 1.9 1995/02/27 12:32:25 cgd Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)execve.2	8.3 (Berkeley) 1/24/94
.\"
.Dd $Mdocdate: March 27 2016 $
.Dt EXECVE 2
.Os
.Sh NAME
.Nm execve
.Nd execute a file
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn execve "const char *path" "char *const argv[]" "char *const envp[]"
.Sh DESCRIPTION
.Fn execve
transforms the calling process into a new process.
The new process is constructed from an ordinary file,
whose name is pointed to by
.Fa path ,
called the
.Em new process file .
This file is either an executable object file,
or a file of data for an interpreter.
An executable object file consists of an identifying header,
followed by pages of data representing the initial program (text)
and initialized data pages.
Additional pages may be specified by the header to be initialized
with zero data; see
.Xr elf 5 .
.Pp
An interpreter file begins with a line of the form:
.Bd -filled -offset indent
.Sy #!\&
.Em interpreter
.Bq Em arg
.Ed
.Pp
When an interpreter file is passed to
.Fn execve
the system instead calls
.Fn execve
with the specified
.Em interpreter .
If the optional
.Em arg
is specified, it becomes the first argument to the
.Em interpreter ,
and the original
.Ar path
becomes the second argument;
otherwise,
.Ar path
becomes the first argument.
The original arguments are shifted over to become the subsequent arguments.
The zeroth argument, normally the name of the file being executed, is left
unchanged.
.Pp
The argument
.Fa argv
is a pointer to a null-terminated array of
character pointers to NUL-terminated character strings.
These strings construct the argument list to be made available to the new
process.
At least one non-null argument must be present in the array;
by custom, the first element should be
the name of the executed program (for example, the last component of
.Fa path ) .
.Pp
The argument
.Fa envp
is also a pointer to a null-terminated array of
character pointers to NUL-terminated strings.
A pointer to this array is normally stored in the global variable
.Va environ .
These strings pass information to the
new process that is not directly an argument to the command (see
.Xr environ 7 ) .
.Pp
File descriptors open in the calling process image remain open in
the new process image, except for those for which the close-on-exec
flag is set (see
.Xr close 2
and
.Xr fcntl 2 ) .
Descriptors that remain open are unaffected by
.Fn execve .
In the case of a new setuid or setgid executable being executed, if
file descriptors 0, 1, or 2 (representing stdin, stdout, and stderr)
are currently unallocated, these descriptors will be opened to point to
some system file like
.Pa /dev/null .
The intent is to ensure these descriptors are not unallocated, since
many libraries make assumptions about the use of these 3 file descriptors.
.Pp
Signals set to be ignored in the calling process,
with the exception of
.Dv SIGCHLD ,
are set to be ignored in
the
new process.
Other signals
are set to default action in the new process image.
Blocked signals remain blocked regardless of changes to the signal action.
The signal stack is reset to be undefined (see
.Xr sigaction 2
for more information).
.Pp
If the set-user-ID mode bit of the new process image file is set
(see
.Xr chmod 2 ) ,
the effective user ID of the new process image is set to the owner ID
of the new process image file.
If the set-group-ID mode bit of the new process image file is set,
the effective group ID of the new process image is set to the group ID
of the new process image file.
(The effective group ID is the first element of the group list.)
The real user ID, real group ID and
other group IDs of the new process image remain the same as the calling
process image.
After any set-user-ID and set-group-ID processing,
the effective user ID is recorded as the saved set-user-ID,
and the effective group ID is recorded as the saved set-group-ID.
These values may be used in changing the effective IDs later (see
.Xr setuid 2 ) .
The set-user-ID and set-group-ID bits have no effect if the
new process image file is located on a file system mounted with
the nosuid flag.
The process will be started without the new permissions.
.Pp
The new process also inherits the following attributes from
the calling process:
.Pp
.Bl -tag -width parent_process_ID -offset indent -compact
.It process ID
see
.Xr getpid 2
.It parent process ID
see
.Xr getppid 2
.It process group ID
see
.Xr getpgrp 2
.It session ID
see
.Xr getsid 2
.It access groups
see
.Xr getgroups 2
.It working directory
see
.Xr chdir 2
.It root directory
see
.Xr chroot 2
.It control terminal
see
.Xr termios 4
.It resource usages
see
.Xr getrusage 2
.It interval timers
see
.Xr getitimer 2
(unless process image file is setuid or setgid,
in which case all timers are disabled)
.It resource limits
see
.Xr getrlimit 2
.It file mode mask
see
.Xr umask 2
.It signal mask
see
.Xr sigaction 2 ,
.Xr sigsetmask 3
.El
.Pp
When a program is executed as a result of an
.Fn execve
call, it is entered as follows:
.Bd -literal -offset indent
main(int argc, char **argv, char **envp)
.Ed
.Pp
where
.Fa argc
is the number of elements in
.Fa argv
(the
.Dq arg count )
and
.Fa argv
points to the array of character pointers
to the arguments themselves.
.Sh RETURN VALUES
As the
.Fn execve
function overlays the current process image
with a new process image the successful call
has no process to return to.
If
.Fn execve
does return to the calling process an error has occurred; the
return value will be \-1 and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn execve
will fail and return to the calling process if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
A component of the path prefix is not a directory.
.It Bq Er ENAMETOOLONG
A component of a pathname exceeded
.Dv NAME_MAX
characters, or an entire pathname (including the terminating NUL)
exceeded
.Dv PATH_MAX
bytes.
.It Bq Er ENOENT
The new process file does not exist.
.It Bq Er ELOOP
Too many symbolic links were encountered in translating the pathname.
.It Bq Er EISDIR
The new process file is a directory.
.It Bq Er EACCES
Search permission is denied for a component of the path prefix.
.It Bq Er EACCES
The new process file is not an ordinary file.
.It Bq Er EACCES
The new process file mode denies execute permission.
.It Bq Er EACCES
The new process file is on a filesystem mounted with execution
disabled
.Pf ( Dv MNT_NOEXEC
in
.In sys/mount.h ) .
.It Bq Er EACCES
The new process file is marked with
.Xr ld 1
.Fl z Cm wxneeded
to perform W^X violating operations, but it is located on a file
system not allowing such operations, being mounted without the
.Xr mount 8
.Fl o Cm wxallowed
flag.
.It Bq Er ENOEXEC
The new process file has the appropriate access
permission, but has an invalid magic number in its header.
.It Bq Er ETXTBSY
The new process file is a pure procedure (shared text)
file that is currently open for writing by some process.
.It Bq Er ENOMEM
The new process requires more virtual memory than
is allowed by the imposed maximum
.Pq Xr getrlimit 2 .
.It Bq Er E2BIG
The number of bytes in the new process's argument list
is larger than the system-imposed limit.
The limit in the system as released is 262144 bytes
.Pf ( Dv ARG_MAX ) .
.It Bq Er EFAULT
The new process file is not as long as indicated by
the size values in its header.
.It Bq Er EFAULT
.Fa path ,
.Fa argv ,
or
.Fa envp
point
to an illegal address.
.It Bq Er EINVAL
.Fa argv
did not contain at least one element.
.It Bq Er EIO
An I/O error occurred while reading from the file system.
.It Bq Er ENFILE
During startup of an
.Em interpreter ,
the system file table was found to be full.
.El
.Sh SEE ALSO
.Xr _exit 2 ,
.Xr fork 2 ,
.Xr execl 3 ,
.Xr exit 3 ,
.Xr elf 5 ,
.Xr environ 7
.Sh STANDARDS
The
.Fn execve
function is expected to conform to
.St -p1003.1-2008 .
.Sh HISTORY
The predecessor of these functions, the former
.Fn exec
system call, first appeared in
.At v1 .
The
.Fn execve
function first appeared in
.At v7 .
.Sh CAVEATS
If a program is
.Em setuid
to a non-superuser, but is executed when the real
.Em uid
is
.Dq root ,
then the process has some of the powers of a superuser as well.
.Pp
.St -p1003.1-2008
permits
.Nm
to leave
.Dv SIGCHLD
as ignored in the new process; portable programs cannot rely on
.Nm
resetting it to the default disposition.
@


1.48
log
@Add EISDIR to ERRORS and fix ETXTBSY description; from Piotr Durlej.
OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.47 2015/10/11 09:51:26 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: October 11 2015 $
d267 9
@


1.47
log
@Document that execve(2) resets SIGCHLD to SIG_DFL

wordsmithing and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.46 2015/09/10 17:55:21 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: September 10 2015 $
d253 2
d272 1
a272 1
file that is currently open for writing or reading by some process.
@


1.46
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.45 2015/08/26 01:54:09 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: August 26 2015 $
d124 4
a127 1
Signals set to be ignored in the calling process are set to be ignored in
d130 1
a130 1
Signals which are set to be caught in the calling process image
d329 9
@


1.45
log
@Hide many (194!) symbols that nothing should be using.
Delete exect(2); it wasn't portable across archs and nothing used it.

ports test build by naddy@@
ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.44 2015/07/28 22:48:31 deraadt Exp $
d33 1
a33 1
.Dd $Mdocdate: July 28 2015 $
d40 1
a40 1
.Fd #include <unistd.h>
@


1.44
log
@ARG_MAX is the standard name (not NCARGS); probab[l]y guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.43 2015/02/07 08:52:37 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: February 7 2015 $
d37 1
a37 2
.Nm execve ,
.Nm exect
a42 2
.Ft int
.Fn exect "const char *path" "char *const argv[]" "char *const envp[]"
a220 8
.Pp
The
.Fn exect
function is equivalent to
.Fn execve
with the additional property that it executes the file with the process
tracing facilities enabled (see
.Xr ptrace 2 ) .
a308 3
The
.Fn exect
function should not be used in portable applications.
@


1.43
log
@document restriction on argv having one element
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.42 2015/01/19 15:54:11 millert Exp $
d33 1
a33 1
.Dd $Mdocdate: January 19 2015 $
d287 1
a287 3
.Pf ( Dv NCARGS
in
.In sys/param.h ) .
@


1.42
log
@Explicitly mention that PATH_MAX includes the NUL in the ENAMETOOLONG
description.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.41 2014/05/30 04:38:43 guenther Exp $
d33 1
a33 1
.Dd $Mdocdate: May 30 2014 $
d96 1
a96 1
At least one argument must be present in the array;
d300 3
@


1.41
log
@A program is the thing you run; a process is an instance of something
running

ok millert@@ sobrado@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.40 2014/01/21 03:15:45 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: January 21 2014 $
d252 5
a256 4
.Dv {NAME_MAX}
characters, or an entire path name exceeded
.Dv {PATH_MAX}
characters.
@


1.40
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.39 2013/10/20 07:40:39 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: October 20 2013 $
d229 1
a229 1
with the additional property that it executes the file with the program
d337 1
a337 1
then the program has some of the powers of a superuser as well.
@


1.39
log
@catch up with elf(5)/stab(5) removal;
ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.38 2011/11/17 12:55:05 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: November 17 2011 $
d271 1
a271 1
.Ao Pa sys/mount.h Ac ) .
d288 1
a288 1
.Ao Pa sys/param.h Ac ) .
@


1.38
log
@Fix HISTORY:
Mention the predecessor exec() in v1, and remove the bogus "appeared
in 3BSD", just leave "execve() appeared in v7", because:

(1) There is a direct line of inheritance from v7 (Bell, Jan 1979)
via 32v (Bell, May 1979) to 3BSD (UCB, Feb 1980), and it goes without
saying that children include code from their grandparents.

(2) It is impossible that there was parallel development of execve()
at Bell and UCB.  The only UCB release before v7 was 1BSD (May 1978),
and even 2BSD (May 1979) did not include any kernel parts but fully
relied on the Bell v6 kernel.  When Bell released 32v, the UCB did
not even own a VAX, and Bill Joy was still are pure userland hacker.
Only after the original UCBVAX arrived at Berkeley, Richard Fateman
involved Domenico Ferrari who involved Ozalp Babaoglu who started
kernel work at UCB, based on Bell 32v, later involving Bill Joy.

(3) Genetic analysis of the source code confirms this.
All kernel code involved is in sys1.c.  Regarding this file,
the first two UCB releases, VAX 3BSD (based on Bell 32v)
and PDP-11 2.8BSD (Dec 1981, based on Bell v7) are more similar
to their respective Bell parents than to each other.
The Berkeley versions are cousins, not siblings:
v7  -> 32v: 523  +71  -60 = 534
v7  -> 2.8: 523 +305  -24 = 804
32v -> 3:   534 +169 -110 = 593
3   -> 2.8: 593 +413 -202 = 804

References:
http://oreilly.com/catalog/opensources/book/kirkmck.html
http://minnie.tuhs.org/cgi-bin/utree.pl?file=32V
http://minnie.tuhs.org/cgi-bin/utree.pl?file=V7/usr/sys/sys/sys1.c
http://minnie.tuhs.org/cgi-bin/utree.pl?file=32V/usr/src/sys/sys/sys1.c
http://minnie.tuhs.org/cgi-bin/utree.pl?file=3BSD/usr/src/sys/sys/sys1.c
https://www.mckusick.com/csrg/ - /cdrom1/2.8/usr/kernel/sys/sys/sys1.c

facts checked and ok sobrado@@, style and formatting ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.37 2011/10/24 19:31:56 schwarze Exp $
d33 1
a33 1
.Dd $Mdocdate: October 24 2011 $
d60 1
a60 3
with zero data;  see
.Xr a.out 5
and
a310 1
.Xr a.out 5 ,
@


1.37
log
@Update POSIX references for chdir(2) and chmod(2) from 1988 to 2008.
Add POSIX references for fchdir(2), fchmod(2), fchmodat(2),
fchown(2), lchown(2) and execve(2).
State that fchmod(2) can return EPERM as required by POSIX 2008 (tested).

Requested by sobrado@@; ok guenther@@ jmc@@ sobrado@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.36 2011/09/03 22:59:07 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: September 3 2011 $
d325 4
d331 2
a332 4
function call first appeared in
.At v7
and
.Bx 3 .
@


1.36
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.35 2011/08/19 19:59:51 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: August 19 2011 $
d317 4
@


1.35
log
@as with other list types, column lists generally do not need a Pp/-compact
construct;

this also sidesteps what seems to be a problem with mandoc, in that
"-column -compact" seems to mess up the formatting. thus these pages should
now have their lists formatted nicely (i.e. correctly aligned and with indent
applied);

as a side note, the fact that headers are not properly marked up is another
issue which will be addressed separately (a mandoc fix is needed, i think).
i have fudged a few of these to mark up properly, since the workaround does
make sense for some pages.

as another side note, i haven;t fixed man7, as i need to prepare a separate
diff for kristaps and ingo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.34 2009/10/27 08:26:20 nicm Exp $
d33 1
a33 1
.Dd $Mdocdate: October 27 2009 $
d163 32
a194 11
.Bl -column parent_process_ID -offset indent
.It process ID Ta see Xr getpid 2
.It parent process ID Ta see Xr getppid 2
.It process group ID Ta see Xr getpgrp 2
.It session ID Ta see Xr getsid 2
.It access groups Ta see Xr getgroups 2
.It working directory Ta see Xr chdir 2
.It root directory Ta see Xr chroot 2
.It control terminal Ta see Xr termios 4
.It resource usages Ta see Xr getrusage 2
.It interval timers Ta see Xr getitimer 2
d197 9
a205 3
.It resource limits Ta see Xr getrlimit 2
.It file mode mask Ta see Xr umask 2
.It signal mask Ta see Xr sigaction 2 ,
@


1.34
log
@We don't have an "Ap" macro so ".Fn execve() Ap d" is wrong, reword to remove
it.

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.33 2007/05/31 19:19:32 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d163 1
a163 2
.Pp
.Bl -column parent_process_ID -offset indent -compact
@


1.33
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.32 2005/05/12 07:57:22 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d72 5
a76 5
When an interpreter file is
.Fn execve Ap d ,
the system
.Fn execve Ap s
runs the specified
d82 6
a87 6
and the name of the originally
.Fn execve Ap d
file becomes the second argument;
otherwise, the name of the originally
.Fn execve Ap d
file becomes the first argument.
d89 2
a90 3
The zeroth argument, normally the name of the
.Fn execve Ap d
file, is left unchanged.
@


1.32
log
@credit .Bx 3 in HISTORY too;
agreed w/ otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.31 2005/05/08 21:08:00 jmc Exp $
d33 1
a33 1
.Dd January 24, 1994
@


1.31
log
@from perry@@netbsd -r1.35:
execve() first appeared in At v7, not Bx 4.2;
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.30 2005/02/25 03:12:44 cloder Exp $
d299 3
a301 1
.At v7 .
@


1.30
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.29 2004/07/05 23:04:43 jmc Exp $
d298 2
a299 2
function call appeared in
.Bx 4.2 .
@


1.29
log
@typo from jared yanovich;
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.28 2004/04/15 19:52:18 jmc Exp $
d96 1
a96 1
character pointers to nul-terminated character strings.
d107 1
a107 1
character pointers to nul-terminated strings.
@


1.28
log
@various improvements to lists and displays:

.Pp removal
-compact removal for displays
other list/display errors
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.27 2003/12/28 21:14:18 millert Exp $
d206 1
a206 1
with the additional property that is executes the file with the program
@


1.27
log
@Mention session ID; OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.26 2003/12/28 20:12:41 jmc Exp $
d66 1
a66 2
.Pp
.Bd -filled -offset indent -compact
@


1.26
log
@elf(5) is relevant here too;
from Mathias K. Straede (PR 3619);

ok miod@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.25 2003/09/04 22:14:42 jmc Exp $
d170 1
@


1.25
log
@put escapes in the right place;
(i.e. stuff I got wrong the first time, or missed)

this includes some .Cd's with missing quotes and .Nm abuse in man4;
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.24 2003/07/02 08:38:05 tedu Exp $
d61 3
a63 1
.Xr a.out 5 .
d288 2
@


1.24
log
@the arrays are null terminated, but the strings are only nul terminated.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.23 2003/06/02 20:18:39 millert Exp $
d66 1
a66 1
.Sy \&#!
@


1.23
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.22 2003/06/01 20:02:39 jmc Exp $
d95 1
a95 1
character pointers to null-terminated character strings.
d106 1
a106 1
character pointers to null-terminated strings.
@


1.22
log
@- section reorder
- merge COMPATIBILITY
- kill whitespace at EOL
- tidy up macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.21 2003/03/18 12:58:21 david Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.21
log
@duplicate words: and and, the the
ok miod@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.20 2003/03/10 22:51:53 tedu Exp $
d291 1
a291 1
.Sh COMPATIBILITY
@


1.20
log
@add some notes about nosuid mounted file systems.  suggested by deraadt@@

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.19 2002/07/16 01:41:39 deraadt Exp $
d160 1
a160 1
The set-user-ID and and set-group-ID bits have no effect if the
@


1.19
log
@ansi
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.18 2002/01/02 06:16:10 nordin Exp $
d160 4
@


1.18
log
@Move the const qualifier to the right place. deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.17 2001/03/14 04:01:59 aaron Exp $
d186 1
a186 3
main(argc, argv, envp)
int argc;
char **argv, **envp;
@


1.17
log
@Move description of exect() to execve(2) man page. Add a note about exect() not
being portable.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.16 2000/10/18 05:12:09 aaron Exp $
d47 1
a47 1
.Fn execve "const char *path" "const char *argv[]" "const char *envp[]"
@


1.16
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.15 2000/09/25 07:06:26 fgsch Exp $
d41 2
a42 1
.Nm execve
d48 2
d201 8
d289 4
@


1.15
log
@char const* -> const char *
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.14 2000/04/28 20:51:26 deraadt Exp $
d59 3
a61 2
and initialized data pages.  Additional pages may be specified
by the header to be initialized with zero data;  see
d87 3
a89 2
file becomes the first argument.  The original arguments are shifted over to
become the subsequent arguments.  The zeroth argument, normally the name of the
d98 3
a100 2
process.  At least one argument must be present in
the array; by custom, the first element should be
d132 2
a133 1
new process. Signals which are set to be caught in the calling process image
a271 9
.Sh CAVEAT
If a program is
.Em setuid
to a non-superuser, but is executed when
the real
.Em uid
is
.Dq root ,
then the program has some of the powers of a superuser as well.
d283 8
@


1.14
log
@NCARGS is bigger these days; akr@@m17n.org
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.13 2000/04/15 11:46:03 aaron Exp $
d46 1
a46 1
.Fn execve "const char *path" "char *const argv[]" "char *const envp[]"
@


1.13
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.12 1999/07/06 18:21:03 deraadt Exp $
d247 1
a247 1
The limit in the system as released is 20480 bytes
@


1.12
log
@these can also return ENFILE
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.11 1999/06/29 14:09:54 aaron Exp $
d188 2
a189 1
(the ``arg count'')
d271 1
a271 1
to a non-super-user, but is executed when
d274 3
a276 2
is ``root'', then the program has some of the powers
of a super-user as well.
@


1.11
log
@- change references to nil to null; tschroed@@acm.org
- remove trailing spaces from end of lines
- add some .Dv
- change -1 to \-1, so `-' is taken as a negative sign
- other misc formatting fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.10 1999/05/25 13:06:46 aaron Exp $
d262 4
@


1.10
log
@punctuation
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.9 1999/05/23 14:10:51 aaron Exp $
d196 1
a196 1
function overlays the current process image 
d202 1
a202 1
return value will be -1 and the global variable
d212 1
a212 1
A component of a pathname exceeded 
d214 1
a214 1
characters, or an entire path name exceeded 
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.8 1999/05/16 19:55:23 alex Exp $
d106 1
a106 1
.Va environ.
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.7 1999/05/10 17:56:29 aaron Exp $
d39 1
a39 1
.Os BSD 4
@


1.7
log
@correct some Xr's which referred to the wrong man page sections
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.6 1999/02/27 21:56:12 deraadt Exp $
a272 1
.Xr exit 3 ,
d275 1
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.5 1998/07/06 18:27:16 deraadt Exp $
d172 1
a172 1
.Xr sigsetmask 2
@


1.5
log
@fix openbsd tag
@
text
@d1 1
a1 1
.\"	$OpenBSD: execve.2,v 1.9 1995/02/27 12:32:25 cgd Exp $
d48 1
a48 1
.Fn Execve
d206 1
a206 1
.Fn Execve
d254 1
a254 1
.Fa Path ,
@


1.4
log
@document fd 0-2 scheme for setuid/setgid
@
text
@d1 1
@


1.3
log
@doc execve & setitimer setuid side effect
@
text
@d118 7
@


1.2
log
@fix lots of .Xr and other minor things
@
text
@d159 2
@


1.1
log
@Initial revision
@
text
@d262 2
a263 1
.Xr exit 2 ,
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
