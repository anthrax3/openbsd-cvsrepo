head	1.45;
access;
symbols
	OPENBSD_6_2:1.45.0.2
	OPENBSD_6_2_BASE:1.45
	OPENBSD_6_1:1.41.0.4
	OPENBSD_6_1_BASE:1.41
	OPENBSD_6_0:1.33.0.2
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25;
locks; strict;
comment	@.\" @;


1.45
date	2017.07.05.11.43.09;	author schwarze;	state Exp;
branches;
next	1.44;
commitid	fW5clqZ9xo1DCcFX;

1.44
date	2017.06.11.18.56.09;	author jmc;	state Exp;
branches;
next	1.43;
commitid	BBptap1ftsYKXubR;

1.43
date	2017.06.07.20.53.59;	author bluhm;	state Exp;
branches;
next	1.42;
commitid	LIcASwnR6ZAP0y3z;

1.42
date	2017.05.30.16.46.04;	author deraadt;	state Exp;
branches;
next	1.41;
commitid	hX76TFqFrEfGF6kQ;

1.41
date	2017.03.28.16.07.07;	author bluhm;	state Exp;
branches;
next	1.40;
commitid	FZW9fz58bZVRG1rs;

1.40
date	2017.01.29.18.03.12;	author jmc;	state Exp;
branches;
next	1.39;
commitid	RXRaBCZiU7dIIloP;

1.39
date	2017.01.23.07.19.39;	author jmc;	state Exp;
branches;
next	1.38;
commitid	W7Ys2hiwjhpW4c3X;

1.38
date	2017.01.23.04.25.05;	author deraadt;	state Exp;
branches;
next	1.37;
commitid	NeJrtXDNhZqhGXfa;

1.37
date	2016.10.27.10.48.25;	author schwarze;	state Exp;
branches;
next	1.36;
commitid	FxmBgvltNmLwfH0K;

1.36
date	2016.09.13.17.02.12;	author deraadt;	state Exp;
branches;
next	1.35;
commitid	iZVRIVsNJKQ3WynJ;

1.35
date	2016.09.05.11.17.24;	author deraadt;	state Exp;
branches;
next	1.34;
commitid	U8tB4V0ClkVTqZfP;

1.34
date	2016.09.01.10.06.30;	author ratchov;	state Exp;
branches;
next	1.33;
commitid	cxW7P5KfX2JFj0IS;

1.33
date	2016.07.03.04.36.08;	author semarie;	state Exp;
branches;
next	1.32;
commitid	sZFqhpjiVWq1IcpS;

1.32
date	2016.04.13.14.24.30;	author tb;	state Exp;
branches;
next	1.31;
commitid	ciiEo02VIdLdIm6b;

1.31
date	2016.04.12.21.11.50;	author jmc;	state Exp;
branches;
next	1.30;
commitid	AzJ2YYEp410IAT14;

1.30
date	2016.04.12.18.04.17;	author semarie;	state Exp;
branches;
next	1.29;
commitid	WICSI67FugjdBiGq;

1.29
date	2016.04.12.12.47.46;	author semarie;	state Exp;
branches;
next	1.28;
commitid	nE9oNqh75o8CzGAO;

1.28
date	2016.04.10.18.52.07;	author tb;	state Exp;
branches;
next	1.27;
commitid	8r7OScDLJAUFxova;

1.27
date	2016.03.11.06.36.51;	author jmc;	state Exp;
branches;
next	1.26;
commitid	H3Wn8AUK5RTcOdU1;

1.26
date	2016.03.11.05.57.16;	author semarie;	state Exp;
branches;
next	1.25;
commitid	goPKoPASETuT6gCA;

1.25
date	2016.02.11.16.30.35;	author tim;	state Exp;
branches;
next	1.24;
commitid	yaDwNazrscz5Ut6k;

1.24
date	2016.01.18.23.29.37;	author deraadt;	state Exp;
branches;
next	1.23;
commitid	snt6tDESFEgfPCc2;

1.23
date	2016.01.09.06.13.43;	author semarie;	state Exp;
branches;
next	1.22;
commitid	dcaV4x1VpVc8yivT;

1.22
date	2016.01.06.18.47.02;	author tedu;	state Exp;
branches;
next	1.21;
commitid	5LpuhYR7I13LkcZE;

1.21
date	2015.12.16.17.08.17;	author semarie;	state Exp;
branches;
next	1.20;
commitid	X06Z8yIxMtepsI0n;

1.20
date	2015.12.16.08.27.32;	author semarie;	state Exp;
branches;
next	1.19;
commitid	MqPT11x46Aeq2eiI;

1.19
date	2015.12.03.16.50.44;	author bluhm;	state Exp;
branches;
next	1.18;
commitid	ku8NxdT795Pqq7fK;

1.18
date	2015.12.01.15.14.24;	author millert;	state Exp;
branches;
next	1.17;
commitid	jnbMMZYNYkbGKBeg;

1.17
date	2015.11.29.01.15.48;	author benno;	state Exp;
branches;
next	1.16;
commitid	w9LQyEzvPFgBiJ80;

1.16
date	2015.11.18.05.22.04;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	o900oSXC5vQFAqJO;

1.15
date	2015.11.16.19.26.21;	author jmc;	state Exp;
branches;
next	1.14;
commitid	WKpFZ9zmOfNxtdfb;

1.14
date	2015.11.16.18.29.34;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	2cmB9LfHejDl4UoQ;

1.13
date	2015.11.06.06.46.52;	author mmcc;	state Exp;
branches;
next	1.12;
commitid	ttGBeDrvTZXjxnSr;

1.12
date	2015.11.03.16.31.54;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	QKmdwgZIWagmNhQH;

1.11
date	2015.11.03.01.51.33;	author tedu;	state Exp;
branches;
next	1.10;
commitid	2mijekhR66zB9ehR;

1.10
date	2015.10.24.08.46.05;	author jmc;	state Exp;
branches;
next	1.9;
commitid	7RMBHEIA560jGfRe;

1.9
date	2015.10.23.01.10.01;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	KqW7FHnhlWUon4U2;

1.8
date	2015.10.22.09.23.41;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	j0QMyoKTUVBhKzKF;

1.7
date	2015.10.14.22.39.04;	author millert;	state Exp;
branches;
next	1.6;
commitid	SPFEDng45goF8ymm;

1.6
date	2015.10.13.07.23.49;	author jmc;	state Exp;
branches;
next	1.5;
commitid	uvEguNugbooP9kLP;

1.5
date	2015.10.12.23.32.55;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	kkBfsSjNZhos4FZv;

1.4
date	2015.10.12.21.40.38;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	iDC5a18JySEFpU2Q;

1.3
date	2015.10.12.15.59.26;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	hHpNUaGlmq7XqNRG;

1.2
date	2015.10.12.01.17.08;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	CvR2NWoJi3HTz7ZU;

1.1
date	2015.10.09.01.24.57;	author deraadt;	state Exp;
branches;
next	;
commitid	JNaUtIMteCgesqPo;


desc
@@


1.45
log
@fix cross references to self; found with mandoc -Tlint
@
text
@.\" $OpenBSD: pledge.2,v 1.44 2017/06/11 18:56:09 jmc Exp $
.\"
.\" Copyright (c) 2015 Nicholas Marriott <nicm@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: June 11 2017 $
.Dt PLEDGE 2
.Os
.Sh NAME
.Nm pledge
.Nd restrict system operations
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn pledge "const char *promises" "const char *paths[]"
.Sh DESCRIPTION
The current process is forced into a restricted-service operating mode.
A few subsets are available, roughly described as computation, memory
management, read-write operations on file descriptors, opening of files,
networking.
In general, these modes were selected by studying the operation
of many programs using libc and other such interfaces, and setting
.Ar promises
or
.Ar paths .
.Pp
Use of
.Fn pledge
in an application will require at least some study and understanding
of the interfaces called.
Subsequent calls to
.Fn pledge
can reduce the abilities further, but abilities can never be regained.
.Pp
A process which attempts a restricted operation is killed with an uncatchable
.Dv SIGABRT ,
delivering a core file if possible.
A process currently running with pledge has state
.Sq p
in
.Xr ps 1
output; a process that was terminated due to a pledge violation
is accounted by
.Xr lastcomm 1
with the
.Sq P
flag.
.Pp
A
.Fa promises
value of "" restricts the process to the
.Xr _exit 2
system call.
This can be used for pure computation operating on memory shared
with another process.
.Pp
Passing
.Dv NULL
to
.Fa promises
or
.Fa paths
specifies to not change the current value.
.Pp
Some system calls, when allowed, have restrictions applied to them:
.Pp
.Bl -tag -width "readlink(2)" -offset indent -compact
.It Xr access 2
May check for existence of
.Pa /etc/localtime .
.Pp
.It Xr adjtime 2
Read-only, for
.Xr ntpd 8 .
.Pp
.It Xr ioctl 2
Only the
.Dv FIONREAD ,
.Dv FIONBIO ,
.Dv FIOCLEX ,
and
.Dv FIONCLEX
operations are allowed by default.
Various ioctl requests are allowed against specific file descriptors
based upon the requests
.Va audio ,
.Va bpf ,
.Va disklabel ,
.Va drm ,
.Va inet ,
.Va pf ,
.Va route ,
.Va tape ,
.Va tty ,
and
.Va vmm .
.Pp
.It Xr chmod 2
.It Xr fchmod 2
.It Xr fchmodat 2
.It Xr chown 2
.It Xr lchown 2
.It Xr fchown 2
.It Xr fchownat 2
.It Xr mkfifo 2
.It Xr mknod 2
Setuid/setgid/sticky bits are ignored.
The user or group cannot be changed on a file.
.Pp
.It Xr mmap 2
.It Xr mprotect 2
.Dv PROT_EXEC
isn't allowed.
.Pp
.It Xr open 2
May open
.Pa /etc/localtime
and any files below
.Pa /usr/share/zoneinfo .
.Pp
.It Xr readlink 2
May operate on
.Pa /etc/malloc.conf .
.Pp
.It Xr sysctl 3
A small set of read-only operations are allowed, sufficient to
support:
.Xr getdomainname 3 ,
.Xr gethostname 3 ,
.Xr getifaddrs 3 ,
.Xr uname 3 ,
system sensor readings.
.Pp
.It Fn pledge
Can only reduce permissions; can only set a list of
.Pa paths
once.
.El
.Pp
The
.Ar promises
is specified as a string, with space separated keywords:
.Bl -tag -width "tmppath" -offset indent
.It Va stdio
The following system calls are permitted to allow most basic functions
in libc, including memory allocation, most types of IO operations on
previously allocated file descriptors:
.Pp
.Xr clock_getres 2 ,
.Xr clock_gettime 2 ,
.Xr close 2 ,
.Xr closefrom 2 ,
.Xr dup 2 ,
.Xr dup2 2 ,
.Xr dup3 2 ,
.Xr fchdir 2 ,
.Xr fcntl 2 ,
.Xr fstat 2 ,
.Xr fsync 2 ,
.Xr ftruncate 2 ,
.Xr getdents 2 ,
.Xr getdtablecount 2 ,
.Xr getegid 2 ,
.Xr getentropy 2 ,
.Xr geteuid 2 ,
.Xr getgid 2 ,
.Xr getgroups 2 ,
.Xr getitimer 2 ,
.Xr getlogin 2 ,
.Xr getpgid 2 ,
.Xr getpgrp 2 ,
.Xr getpid 2 ,
.Xr getppid 2 ,
.Xr getresgid 2 ,
.Xr getresuid 2 ,
.Xr getrlimit 2 ,
.Xr getrtable 2 ,
.Xr getsid 2 ,
.Xr getthrid 2 ,
.Xr gettimeofday 2 ,
.Xr getuid 2 ,
.Xr getuid 2 ,
.Xr issetugid 2 ,
.Xr kevent 2 ,
.Xr kqueue 2 ,
.Xr lseek 2 ,
.Xr madvise 2 ,
.Xr minherit 2 ,
.Xr mmap 2 ,
.Xr mprotect 2 ,
.Xr mquery 2 ,
.Xr munmap 2 ,
.Xr nanosleep 2 ,
.Xr pipe 2 ,
.Xr pipe2 2 ,
.Xr poll 2 ,
.Xr pread 2 ,
.Xr preadv 2 ,
.Xr pwrite 2 ,
.Xr pwritev 2 ,
.Xr read 2 ,
.Xr readv 2 ,
.Xr recvfrom 2 ,
.Xr recvmsg 2 ,
.Xr select 2 ,
.Xr sendmsg 2 ,
.Xr sendsyslog 2 ,
.Xr sendto 2 ,
.Xr setitimer 2 ,
.Xr shutdown 2 ,
.Xr sigaction 2 ,
.Xr sigprocmask 2 ,
.Xr sigreturn 2 ,
.Xr socketpair 2 ,
.Xr umask 2 ,
.Xr wait4 2 ,
.Xr write 2 ,
.Xr writev 2 .
.Pp
Note that
.Xr sendto 2
is only permitted if its destination socket address is
.Dv NULL .
As a result, all the expected functionalities of libc stdio work.
.It Va rpath
A number of system calls are allowed if they only cause
read-only effects on the filesystem:
.Pp
.Xr chdir 2 ,
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 ,
.Xr getfsstat 2 .
.It Va wpath
A number of system calls are allowed and may cause
write-effects on the filesystem:
.Pp
.Xr getcwd 3 ,
.Xr openat 2 ,
.Xr fstatat 2 ,
.Xr faccessat 2 ,
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 .
.It Va cpath
A number of system calls and sub-modes are allowed, which may
create new files or directories in the filesystem:
.Pp
.Xr rename 2 ,
.Xr renameat 2 ,
.Xr link 2 ,
.Xr linkat 2 ,
.Xr symlink 2 ,
.Xr symlinkat 2 ,
.Xr unlink 2 ,
.Xr unlinkat 2 ,
.Xr mkdir 2 ,
.Xr mkdirat 2 ,
.Xr rmdir 2 .
.It Va dpath
A number of system calls are allowed to create special files:
.Pp
.Xr mkfifo 2 ,
.Xr mknod 2 .
.It Va tmppath
A number of system calls are allowed to do operations in the
.Pa /tmp
directory, including create, read, or write:
.Pp
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr chflags 2 ,
.Xr chown 2 ,
.Xr unlink 2 ,
.Xr fstat 2 .
.It Va inet
The following system calls are allowed to operate in the
.Dv AF_INET
and
.Dv AF_INET6
domains:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.Pp
.Xr setsockopt 2
has been reduced in functionality substantially.
.It Va mcast
In combination with
.Va inet
give back functionality to
.Xr setsockopt 2
for operating on multicast sockets.
.It Va fattr
The following system calls are allowed to make explicit changes
to fields in
.Va struct stat
relating to a file:
.Pp
.Xr utimes 2 ,
.Xr futimes 2 ,
.Xr utimensat 2 ,
.Xr futimens 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchownat 2 ,
.Xr lchown 2 ,
.Xr fchown 2 ,
.Xr utimes 2 .
.It Va chown
The
.Xr chown 2
family is allowed to change the user or group on a file.
.It Va flock
File locking via
.Xr fcntl 2 ,
.Xr flock 2 ,
.Xr lockf 3 ,
and
.Xr open 2
is allowed.
No distinction is made between shared and exclusive locks.
This promise is required for unlock as well as lock.
.It Va unix
The following system calls are allowed to operate in the
.Dv AF_UNIX
domain:
.Pp
.Xr socket 2 ,
.Xr listen 2 ,
.Xr bind 2 ,
.Xr connect 2 ,
.Xr accept4 2 ,
.Xr accept 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr setsockopt 2 ,
.Xr getsockopt 2 .
.It Va dns
Subsequent to a successful
.Xr open 2
of
.Pa /etc/resolv.conf ,
a few system calls become able to allow DNS network transactions:
.Pp
.Xr sendto 2 ,
.Xr recvfrom 2 ,
.Xr socket 2 ,
.Xr connect 2 .
.It Va getpw
This allows read-only opening of files in
.Pa /etc
for the
.Xr getpwnam 3 ,
.Xr getgrnam 3 ,
.Xr getgrouplist 3 ,
and
.Xr initgroups 3
family of functions.
They may also need to operate in a
.Xr yp 8
environment, so a successful
.Xr open 2
of
.Pa /var/run/ypbind.lock
enables
.Va inet
operations.
.It Va sendfd
Allows sending of file descriptors using
.Xr sendmsg 2 .
File descriptors referring to directories may not be passed.
.It Va recvfd
Allows receiving of file descriptors using
.Xr recvmsg 2 .
File descriptors referring to directories may not be passed.
.It Va tape
Allow
.Dv MTIOCGET
and
.Dv MTIOCTOP
operations against tape drives.
.It Va tty
In addition to allowing read-write operations on
.Pa /dev/tty ,
this opens up a variety of
.Xr ioctl 2
requests used by tty devices.
The following
.Xr ioctl 2
requests are permitted:
.Dv TIOCSPGRP ,
.Dv TIOCGETA ,
.Dv TIOCGPGRP ,
.Dv TIOCGWINSZ ,
.Dv TIOCSWINSZ ,
.Dv TIOCSBRK ,
.Dv TIOCCDTR ,
.Dv TIOCSETA ,
.Dv TIOCSETAW
and
.Dv TIOCSETAF .
.Pp
If
.Va tty
is accompanied with
.Va rpath ,
.Xr revoke 2
is permitted.
.It Va proc
Allows the following process relationship operations:
.Pp
.Xr fork 2 ,
.Xr vfork 2 ,
.Xr kill 2 ,
.Xr getpriority 2 ,
.Xr setpriority 2 ,
.Xr setrlimit 2 ,
.Xr setpgid 2 ,
.Xr setsid 2 .
.It Va exec
Allows a process to call
.Xr execve 2 .
Coupled with the
.Va proc
promise, this allows a process to fork and execute another program.
The new program starts running without pledge active and hopefully
makes a new
.Fn pledge .
.It Va prot_exec
Allows the use of
.Dv PROT_EXEC
with
.Xr mmap 2
and
.Xr mprotect 2 .
.It Va settime
Allows the setting of system time, via the
.Xr settimeofday 2 ,
.Xr adjtime 2 ,
and
.Xr adjfreq 2
system calls.
.It Va ps
Allows enough
.Xr sysctl 3
interfaces to allow inspection of processes operating on the system using
programs like
.Xr ps 1 .
.It Va vminfo
Allows enough
.Xr sysctl 3
interfaces to allow inspection of the system's virtual memory by
programs like
.Xr top 1
and
.Xr vmstat 8 .
.It Va id
Allows the following system calls which can change the rights of a
process:
.Pp
.Xr setuid 2 ,
.Xr seteuid 2 ,
.Xr setreuid 2 ,
.Xr setresuid 2 ,
.Xr setgid 2 ,
.Xr setegid 2 ,
.Xr setregid 2 ,
.Xr setresgid 2 ,
.Xr setgroups 2 ,
.Xr setlogin 2 ,
.Xr setrlimit 2 ,
.Xr getpriority 2 ,
.Xr setpriority 2 .
.It Va pf
Allows a subset of
.Xr ioctl 2
operations on the
.Xr pf 4
device:
.Pp
.Dv DIOCADDRULE ,
.Dv DIOCGETSTATUS ,
.Dv DIOCNATLOOK ,
.Dv DIOCRADDTABLES ,
.Dv DIOCRCLRADDRS ,
.Dv DIOCRCLRTABLES ,
.Dv DIOCRCLRTSTATS ,
.Dv DIOCRGETTSTATS ,
.Dv DIOCRSETADDRS ,
.Dv DIOCXBEGIN ,
.Dv DIOCXCOMMIT .
.It Va audio
Allows a subset of
.Xr ioctl 2
operations on
.Xr audio 4
devices:
.Pp
.Dv AUDIO_GETPOS ,
.Dv AUDIO_GETPAR ,
.Dv AUDIO_SETPAR ,
.Dv AUDIO_START ,
.Dv AUDIO_STOP .
.Pp
See
.Xr sio_open 3
for more information on using the sndio API in combination with
.Fn pledge .
.It Va bpf
Allow
.Dv BIOCGSTATS
operation for statistics collection from a bpf device.
.El
.Pp
A whitelist of permitted paths may be provided in
.Ar paths .
All other paths will return
.Er ENOENT .
At least one promise is required to be pledged in order to activate a whitelist.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
.Fn pledge
will fail if:
.Bl -tag -width Er
.It Bq Er EFAULT
.Fa paths
or one of its elements, or
.Fa promises
points outside the process's allocated address space.
.It Bq Er EINVAL
.Ar promises
is malformed or contains invalid keywords.
.It Bq Er ENAMETOOLONG
An element of
.Fa paths
is too large, prepending
.Fa cwd
to it would exceed
.Dv PATH_MAX
bytes, or
.Fa promises
is too long.
.It Bq Er EPERM
This process is attempting to increase permissions.
.It Bq Er E2BIG
The
.Ar paths
array is too large, or the total number of bytes exceeds a
system-imposed limit.
The limit in the system as released is 262144 bytes
.Pf ( Dv ARG_MAX ) .
.El
.Sh HISTORY
The
.Fn pledge
system call first appeared in
.Ox 5.9 .
.Sh BUGS
The path whitelist feature is not available at this time.
@


1.44
log
@request -> promises; from scott cheloha
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.43 2017/06/07 20:53:59 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: June 7 2017 $
d145 1
a145 1
.It Xr pledge 2
@


1.43
log
@Add an acct(5) flag for pledge violations.  Then lastcomm(1) shows
when something went wrong.  This allows to monitor whether the
system is under attack and that the attack has been prevented by
OpenBSD pledge(2).
OK deraadt@@ millert@@ jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.42 2017/05/30 16:46:04 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: May 30 2017 $
d576 1
a576 1
.Ar request
@


1.42
log
@getrlimit is now allowed by "stdio"
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.41 2017/03/28 16:07:07 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: March 28 2017 $
d49 10
@


1.41
log
@Document the mcast pledge(2) as an addition to inet.
OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.40 2017/01/29 18:03:12 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: January 29 2017 $
d178 1
@


1.40
log
@return the sio_open notes to the audio section; from michael reed
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.39 2017/01/23 07:19:39 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: January 23 2017 $
d316 6
@


1.39
log
@whitespace between macro args and punctuation, and zap a ton
of unneccessary quoting; ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.38 2017/01/23 04:25:05 deraadt Exp $
a530 4
.It Va bpf
Allow
.Dv BIOCGSTATS
operation for statistics collection from a bpf device.
d536 4
@


1.38
log
@Split pledge "ioctl" into "tape" and "bpf", and allow SIOCGIFGROUP only
upon "inet".  Adjust the 4 programs that care about this.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.37 2016/10/27 10:48:25 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: October 27 2016 $
d87 9
a95 9
.Va "audio" ,
.Va "bpf" ,
.Va "disklabel" ,
.Va "drm" ,
.Va "inet" ,
.Va "pf" ,
.Va "route" ,
.Va "tape" ,
.Va "tty" ,
d97 1
a97 1
.Va "vmm".
d145 1
a145 1
.It Va "stdio"
d225 1
a225 1
.It Va "rpath"
d246 1
a246 1
.It Va "wpath"
d265 1
a265 1
.It Va "cpath"
d280 1
a280 1
.It Va "dpath"
d285 1
a285 1
.It Va "tmppath"
d296 1
a296 1
.It Va "inet"
d316 1
a316 1
.It Va "fattr"
d336 1
a336 1
.It Va "chown"
d340 1
a340 1
.It Va "flock"
d350 1
a350 1
.It Va "unix"
d365 1
a365 1
.It Va "dns"
d376 1
a376 1
.It Va "getpw"
d393 1
a393 1
.Va "inet"
d395 1
a395 1
.It Va "sendfd"
d399 1
a399 1
.It Va "recvfd"
d403 1
a403 1
.It Va "tape"
d409 1
a409 1
.It Va "tty"
d431 1
a431 1
.Va "tty"
d433 1
a433 1
.Va "rpath" ,
d436 1
a436 1
.It Va "proc"
d447 1
a447 1
.It Va "exec"
d451 1
a451 1
.Va "proc"
d456 1
a456 1
.It Va "prot_exec"
d463 1
a463 1
.It Va "settime"
d470 1
a470 1
.It Va "ps"
d476 1
a476 1
.It Va "vminfo"
d484 1
a484 1
.It Va "id"
d501 1
a501 1
.It Va "pf"
d519 1
a519 1
.It Va "audio"
d531 1
a531 1
.It Va "bpf"
@


1.37
log
@For consistency, allow symlinkat(2) in the same way as symlink(2);
no need to wait until the first program using it breaks...
"could make sense" semarie@@ (and thanks for the cluestick)
OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.36 2016/09/13 17:02:12 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: September 13 2016 $
d79 3
a81 1
.Dv FIONREAD
d83 1
a83 1
.Dv FIONBIO
d85 13
a97 1
Use of the "tty" and "ioctl" promises receive more ioctl requests.
d403 3
a405 16
.It Va "ioctl"
Allows a subset of
.Xr ioctl 2
operations:
.Pp
.Dv FIOCLEX ,
.Dv FIONCLEX ,
.Dv FIOASYNC ,
.Dv FIOGETOWN ,
and
.Dv FIOSETOWN .
On a tty device
.Dv TIOCGETA will succeed otherwise fail with
.Er EPERM .
On a tty device,
.Dv TIOCGPGRP
d407 2
a408 3
.Dv TIOCGWINSZ
are allowed.
A few other operations are allowed, but not listed here.
d531 4
@


1.36
log
@spelling; from Frank Schoep
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.35 2016/09/05 11:17:24 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: September 5 2016 $
a255 1
.Xr rmdir 2 ,
d260 1
d264 2
a265 1
.Xr mkdirat 2 .
@


1.35
log
@correct wording; from rob@@2keys.ca
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.34 2016/09/01 10:06:30 ratchov Exp $
d17 1
a17 1
.Dd $Mdocdate: September 1 2016 $
d383 1
a383 1
File descriptors referering to directories may not be passed.
d387 1
a387 1
File descriptors referering to directories may not be passed.
@


1.34
log
@Update list of ioctls for the audio promise. Suggested by jmc@@, thanks.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.32 2016/04/13 14:24:30 tb Exp $
d17 1
a17 1
.Dd $Mdocdate: April 13 2016 $
d129 1
a129 1
is specified as a string, with space separate keywords:
@


1.33
log
@introduces new promise "chown" to allow changing owner/group with *chown(2) family

it splits PLEDGE_FATTR in two ("fattr" stills grant the 2 flags, so no functional changes):
  - PLEDGE_CHOWN : to be able to call *chown(2) syscalls
  - PLEDGE_FATTR : the rest

it introduces "chown" which grant:
  - PLEDGE_CHOWN : be able to call *chown(2)
  - PLEDGE_CHOWNUID : be able to modifying owner/group

ok deraadt@@ tedu@@
@
text
@d526 4
a529 5
.Dv AUDIO_SETINFO ,
.Dv AUDIO_GETINFO ,
.Dv AUDIO_GETENC ,
.Dv AUDIO_SETFD ,
.Dv AUDIO_GETPROPS .
@


1.32
log
@Revert the recent changes to pledge.2.

Requested by deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.27 2016/03/11 06:36:51 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate$
d321 4
@


1.31
log
@tweak previous;
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.30 2016/04/12 18:04:17 semarie Exp $
d17 1
a17 1
.Dd $Mdocdate: April 12 2016 $
d83 1
a83 2
The "audio", "ioctl", "pf", "route", and "tty" promises permit more ioctl
requests.
a135 1
.Xr brk 2 ,
a144 1
.Xr fpathconf 2 ,
d148 1
a156 1
.Xr getlogin_r 2 ,
a163 1
.Xr getrusage 2 ,
d168 1
a178 1
.Xr msync 2 ,
a182 1
.Xr ppoll 2 ,
a184 1
.Xr pselect 2 ,
a197 2
.Xr sigaltstack 2 ,
.Xr sigpending 2 ,
a199 1
.Xr sigsuspend 2 ,
a200 1
.Xr stat 2 ,
d218 1
d220 10
a230 3
.Xr fstatat 2 ,
.Xr fstatfs 2 ,
.Xr getdents 2 ,
a231 4
.Xr lstat 2 ,
.Xr pathconf 2 ,
.Xr readlinkat 2 ,
.Xr statfs 2 .
d238 1
d240 10
a250 4
.Xr fstatat 2 ,
.Xr lstat 2 ,
.Xr readlinkat 2 ,
.Xr truncate 2 .
d256 1
a257 1
.Xr rmdir 2 ,
d276 1
a277 1
.Xr chmod 2 ,
d279 2
a280 2
.Xr fstat 2 ,
.Xr unlink 2 .
a300 15
.It Va "mcast"
Allows the configuration of an interface from which multicast packets will
be sent and to join or leave a multicast group.
The following options of
.Xr getsockopt 2
and
.Xr setsockopt 2
are permitted:
.Pp
.Dv IP_MULTICAST_IF ,
.Dv IP_ADD_MEMBERSHIP ,
.Dv IP_DROP_MEMBERSHIP ,
.Dv IPV6_MULTICAST_IF ,
.Dv IPV6_JOIN_GROUP ,
.Dv IPV6_LEAVE_GROUP .
a310 2
.Xr chflags 2 ,
.Xr chflagsat 2 ,
d314 2
a316 1
.Xr fchown 2 ,
d319 1
d356 1
a356 3
.Xr bind 2 ,
.Xr connect 2 ,
.Xr getsockname 2 .
d379 1
a379 1
File descriptors referring to directories may not be passed.
d383 1
a383 1
File descriptors referring to directories may not be passed.
a478 2
Also allows
.Xr swapctl 2 .
a495 19
.It Va "route"
Allows a subset of read-only
.Xr ioctl 2
operations on network interfaces:
.Pp
.Dv SIOCGIFADDR ,
.Dv SIOCGIFFLAGS ,
.Dv SIOCGIFMETRIC ,
.Dv SIOCGIFGMEMB ,
.Dv SIOCGIFRDOMAIN ,
.Dv SIOCGIFDSTADDR_IN6 ,
.Dv SIOCGIFNETMASK_IN6 ,
.Dv SIOCGNBRINFO_IN6 ,
.Dv SIOCGIFINFO_IN6 ,
.Dv SIOCGIFMEDIA .
.Pp
It also allows read access to some
.Xr sysctl 3
nodes for inspection of routing table.
@


1.30
log
@documents "mcast" promise

with few nits from and ok schwarze@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.29 2016/04/12 12:47:46 semarie Exp $
d301 1
a301 1
Allows to configure an interface from which multicast packets will
@


1.29
log
@documents "route" promise

initial diff from Rob Pierce rob ! 2keys. ca
with some enhancements from jmc@@, schwarze@@ and me

ok jmc@@ schwarze@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.28 2016/04/10 18:52:07 tb Exp $
d17 1
a17 1
.Dd $Mdocdate: April 10 2016 $
d300 15
@


1.28
log
@Clean up and complete the lists of allowed syscalls.
With input from schwarze@@ and semarie@@.

"go ahead" schwarze@@
(documentation perspective only, without checking factual accuracy)

ok semarie@@ on an earlier version
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.27 2016/03/11 06:36:51 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: March 11 2016 $
d83 2
a84 1
Use of the "tty" and "ioctl" promises receive more ioctl requests.
d499 19
@


1.27
log
@missing article in previous;
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.26 2016/03/11 05:57:16 semarie Exp $
d136 1
d146 1
a149 1
.Xr getdents 2 ,
d158 1
d166 1
a170 1
.Xr getuid 2 ,
d181 1
d186 1
d189 1
d203 2
d207 1
d209 1
a226 1
.Xr fstatat 2 ,
a227 10
.Xr readlinkat 2 ,
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
d229 3
d233 4
d243 2
d246 1
a246 1
.Xr faccessat 2 ,
d248 1
a248 10
.Xr lstat 2 ,
.Xr chmod 2 ,
.Xr fchmod 2 ,
.Xr fchmodat 2 ,
.Xr chflags 2 ,
.Xr chflagsat 2 ,
.Xr chown 2 ,
.Xr fchown 2 ,
.Xr fchownat 2 ,
.Xr fstat 2 .
d254 1
a255 1
.Xr renameat 2 ,
d274 1
a275 1
.Xr chflags 2 ,
d277 2
a278 2
.Xr unlink 2 ,
.Xr fstat 2 .
d309 2
a313 2
.Xr chflags 2 ,
.Xr chflagsat 2 ,
d315 1
a317 1
.Xr fchown 2 ,
d354 3
a356 1
.Xr connect 2 .
d379 1
a379 1
File descriptors referering to directories may not be passed.
d383 1
a383 1
File descriptors referering to directories may not be passed.
d479 2
@


1.26
log
@pledge: define the meaning of passing NULL to one arguments of pledge(2) as "I
don't want to change the current value"

it changes only the `request' argument behaviour when NULL is passed:
previously it was traited as "" was passed.

with help from jmc@@ for man-page
OK tb@@ on previous version
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.25 2016/02/11 16:30:35 tim Exp $
d17 1
a17 1
.Dd $Mdocdate: February 11 2016 $
d538 1
a538 1
At least one promise is required to be pledged in order to activate whitelist.
@


1.25
log
@Document how to use sndio in pledged programs.

Input and OK jmc@@ ratchov@@ semarie@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.24 2016/01/18 23:29:37 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: January 18 2016 $
d58 8
d538 1
@


1.24
log
@adjust some syscalls in proc & id; from Carlin Bingham
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.23 2016/01/09 06:13:43 semarie Exp $
d17 1
a17 1
.Dd $Mdocdate: January 9 2016 $
d506 18
@


1.23
log
@drop "abort" promise, and make it the default behaviour.
The current code has already setted it by default since 1.74

any pledge failure tries to make a coredump (default rules for coredump still
applies: so setuid binaries don't create them locally).

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.22 2016/01/06 18:47:02 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: January 6 2016 $
d429 5
a433 3
.Xr setgroups 2 ,
.Xr setresgid 2 ,
.Xr setresuid 2 .
d477 1
d481 1
@


1.22
log
@add a bug that the path whitelist is not available at this time.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.21 2015/12/16 17:08:17 semarie Exp $
d17 1
a17 1
.Dd $Mdocdate: December 16 2015 $
d46 1
a46 1
A process which attempts a restricted operation is killed with
@


1.21
log
@documents pledge(2) "dpath" promise

with inputs from jmc@@

ok jmc@@ deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.20 2015/12/16 08:27:32 semarie Exp $
d547 2
@


1.20
log
@in pledged process, setuid/setgid/sticky bits should be ignored.

enforce it for mkfifo(2) and mknod(2) (with "dpath" promise).

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.19 2015/12/03 16:50:44 bluhm Exp $
d17 1
a17 1
.Dd $Mdocdate: December 3 2015 $
d257 5
@


1.19
log
@Remove the /usr/share/nls/ exception from pledge(2).  The libc
native language support was deleted a month ago at u2k15.
OK semarie@@ deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.18 2015/12/01 15:14:24 millert Exp $
d17 1
a17 1
.Dd $Mdocdate: December 1 2015 $
d84 2
@


1.18
log
@Document that "tty" provides read-write access to /dev/tty too.
OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.17 2015/11/29 01:15:48 benno Exp $
d17 1
a17 1
.Dd $Mdocdate: November 29 2015 $
d94 3
a96 7
.Pa /etc/localtime ,
any files below
.Pa /usr/share/zoneinfo
and files ending in
.Pa libc.cat
below the directory
.Pa /usr/share/nls/ .
@


1.17
log
@Add pledge "pf" which allows ioctls on pf(4). This will be used by
relayd and other programs manipulating the packet filter.
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.16 2015/11/18 05:22:04 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: November 18 2015 $
d394 3
a396 1
This opens up a variety of
d398 4
a401 1
used by tty devices:
@


1.16
log
@rob pierce spotted a mistake left by jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.15 2015/11/16 19:26:21 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 16 2015 $
d476 18
@


1.15
log
@minor tweaks;
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.14 2015/11/16 18:29:34 deraadt Exp $
d475 1
a475 1
.Xr setpriority 2
@


1.14
log
@Permit revoke(2) for a pledge "rpath tty"
ok millert semarie tedu guenther
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.13 2015/11/06 06:46:52 mmcc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 6 2015 $
d412 1
a412 1
.Va "rpath",
@


1.13
log
@Remove needless comma.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.12 2015/11/03 16:31:54 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: November 3 2015 $
d408 7
@


1.12
log
@Improve explanations throughout
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.11 2015/11/03 01:51:33 tedu Exp $
d451 1
a451 1
.Xr top 1 ,
@


1.11
log
@systrace should work now
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.10 2015/10/24 08:46:05 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: October 24 2015 $
d26 1
a26 1
.Fn pledge "const char *request" "const char *paths[]"
d34 1
a34 1
.Ar request
d47 2
a48 8
.Dv SIGKILL .
If
.Va "abort"
is set, then a non-blockable
.Dv SIGABRT
is delivered instead, possibly resulting in a
.Xr core 5
file.
d51 1
a51 1
.Fa request
a57 39
All
.Dv requests
below (with the exception of
.Va "abort" )
permit the following system calls:
.Bd -ragged -offset indent
.Xr clock_getres 2 ,
.Xr clock_gettime 2 ,
.Xr fchdir 2 ,
.Xr getdtablecount 2 ,
.Xr getegid 2 ,
.Xr geteuid 2 ,
.Xr getgid 2 ,
.Xr getgroups 2 ,
.Xr getitimer 2 ,
.Xr getlogin 2 ,
.Xr getpgid 2 ,
.Xr getpgrp 2 ,
.Xr getpid 2 ,
.Xr getppid 2 ,
.Xr getresgid 2 ,
.Xr getresuid 2 ,
.Xr getrlimit 2 ,
.Xr getsid 2 ,
.Xr getthrid 2 ,
.Xr gettimeofday 2 ,
.Xr getuid 2 ,
.Xr getuid 2 ,
.Xr issetugid 2 ,
.Xr nanosleep 2 ,
.Xr sendsyslog 2 ,
.Xr setitimer 2 ,
.Xr sigaction 2 ,
.Xr sigprocmask 2 ,
.Xr sigreturn 2 ,
.Xr umask 2 ,
.Xr wait4 2 .
.Ed
.Pp
d75 1
a75 1
Use of the "tty" and "ioctl" requests will enable more ioctl requests.
d122 1
a122 1
.Ar request
d125 4
a128 4
.It Va "malloc"
To allow use of the
.Xr malloc 3
family of functions, the following system calls are permitted:
d130 15
d146 21
d172 4
a175 6
.Xr munmap 2 .
.It Va "rw"
The following system calls are permitted to allow most types of IO
operations on previously allocated file descriptors, including
libevent or handwritten async IO loops:
.Pp
a176 11
.Xr kevent 2 ,
.Xr kqueue 2 ,
.Xr select 2 ,
.Xr close 2 ,
.Xr dup 2 ,
.Xr dup2 2 ,
.Xr dup3 2 ,
.Xr closefrom 2 ,
.Xr shutdown 2 ,
.Xr read 2 ,
.Xr readv 2 ,
a178 2
.Xr write 2 ,
.Xr writev 2 ,
d181 13
a193 6
.Xr ftruncate 2 ,
.Xr lseek 2 ,
.Xr fcntl 2 ,
.Xr fsync 2 ,
.Xr pipe 2 ,
.Xr pipe2 2 ,
d195 4
a198 6
.Xr getdents 2 ,
.Xr sendto 2 ,
.Xr sendmsg 2 ,
.Xr recvmsg 2 ,
.Xr recvfrom 2 ,
.Xr fstat 2 .
d204 1
a204 9
.It Va "stdio"
This subset is simply the combination of
.Va "malloc"
and
.Va "rw" .
As a result, all the expected functionalities of libc
stdio work.
Use of "stdio" is recommended instead of "malloc rw",
to better express the intent of the program.
d319 1
a319 1
This request is required for unlock as well as lock.
d368 1
d372 1
d396 1
a396 1
requests used by tty devices:
d422 1
a422 1
request, this allows a process to fork and execute another program.
d455 2
a456 1
Allows the following system calls:
a468 5
.It Va "abort"
Deliver an unblockable
.Dv SIGABRT
upon violation instead of
.Dv SIGKILL .
d484 1
a484 1
.Fa request
d497 1
a497 1
.Fa request
@


1.10
log
@remove a paste error and get section numbers right for sysctl(3);
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.9 2015/10/23 01:10:01 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: October 23 2015 $
a542 6
.Sh CAVEATS
It is not possible to
.Xr systrace 4
a
.Fn pledge
program.
@


1.9
log
@Add 3 new pledge requests.  "ps" exposes enough sysctl information for
ps-style programs (there are quite a few in the tree, including tmux).
"vminfo" exposes a bit more system operation information, which many
observation programs want (such as top).  settime allows setting the system
time, and will be used to pledge-protect the last ntpd process.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.8 2015/10/22 09:23:41 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: October 22 2015 $
d467 1
a467 1
.Xr sysctl 2
a470 1
Allows the following system calls:
d473 1
a473 1
.Xr sysctl 2
@


1.8
log
@document "id" request; from Gregor Best
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.7 2015/10/14 22:39:04 millert Exp $
d17 1
a17 1
.Dd $Mdocdate: October 14 2015 $
d458 22
@


1.7
log
@Document flock request
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.6 2015/10/13 07:23:49 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: October 13 2015 $
d458 14
@


1.6
log
@new sentence, new line;
do not Xr self;
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.5 2015/10/12 23:32:55 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: October 12 2015 $
d337 10
@


1.5
log
@satisfy jmc!
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.4 2015/10/12 21:40:38 deraadt Exp $
d229 3
a231 2
stdio work.  Use of "stdio" is recommended instead of "malloc rw", to
better express the intent of the program.
d440 1
a440 1
.Xr pledge 2 .
@


1.4
log
@Add details about a variety of semantics; going to keep adding and then
reevaluate the direction of this manual page a bit later.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.3 2015/10/12 15:59:26 schwarze Exp $
d436 4
a439 5
request, this allows a process to fork and execute another program;
that new environment will become un-pledged.
Hopefully this new program uses
.Xr pledge 2
soon to reinstantiate the rules it promises to follow.
@


1.3
log
@pledge wasn't called pledge in 5.8, and it was disabled;
issue noticed by tim@@, solution suggested by deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.2 2015/10/12 01:17:08 schwarze Exp $
d114 8
d229 2
a230 1
stdio work.
d381 6
a386 6
.It Va "cmsg"
Allows passing of file descriptors using the
.Xr sendmsg 2
and
.Xr recvmsg 2
functions.
d394 1
a394 2
.Dv FIONREAD ,
.Dv FIONBIO ,
d396 16
d415 7
a421 1
.Dv TIOCSTI .
d431 10
@


1.2
log
@make description of ERRORS more complete;
diff from Benny Lofgren <bl dash lists at lofgren dot biz>;
ok nicm@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.1 2015/10/09 01:24:57 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: October 9 2015 $
d456 2
a457 2
system call appeared in
.Ox 5.8 .
@


1.1
log
@tame -> pledge conversion, in libc.  I should crank libc, but am cheating
hoping things go well.  The old symbol is faked via a stupid stub function,
until next major crank when it can be removed.  I am expecting guenther
to scream at me.
@
text
@d1 1
a1 1
.\" $OpenBSD: pledge.2,v 1.31 2015/10/04 20:47:16 djm Exp $
d17 1
a17 1
.Dd $Mdocdate: October 4 2015 $
d427 2
d430 3
d436 1
a436 1
is too large, or prepending
d440 3
a442 1
bytes.
@

