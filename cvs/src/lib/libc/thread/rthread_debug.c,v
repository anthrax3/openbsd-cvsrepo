head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.4
	OPENBSD_6_2_BASE:1.3;
locks; strict;
comment	@ * @;


1.3
date	2017.09.05.02.40.54;	author guenther;	state Exp;
branches;
next	1.2;
commitid	5DW3WOQF0YGGx8lJ;

1.2
date	2017.08.15.06.38.41;	author guenther;	state Exp;
branches;
next	1.1;
commitid	TU99Y0Z5Kx7X2p3e;

1.1
date	2017.08.15.06.13.24;	author guenther;	state Exp;
branches;
next	;
commitid	2ly112pNJTEbf5qJ;


desc
@@


1.3
log
@Move mutex, condvar, and thread-specific data routes, pthread_once, and
pthread_exit from libpthread to libc, along with low-level bits to
support them.  Major bump to both libc and libpthread.

Requested by libressl team.  Ports testing by naddy@@
ok kettenis@@
@
text
@/* $OpenBSD: rthread_debug.c,v 1.2 2017/08/15 06:38:41 guenther Exp $ */

/* PUBLIC DOMAIN: No Rights Reserved. Marco S Hyman <marc@@snafu.org> */

#include <pthread.h>
#include <stdarg.h>
#include <stdio.h>
#include <unistd.h>

#include "rthread.h"

/*
 * format and send output to stderr if the given "level" is less than or
 * equal to the current debug level.   Messages with a level <= 0 will
 * always be printed.
 */
void
_rthread_debug(int level, const char *fmt, ...)
{
	if (_rthread_debug_level >= level) {
		va_list ap;
		va_start(ap, fmt);
		vdprintf(STDERR_FILENO, fmt, ap);
		va_end(ap);
	}
}
DEF_STRONG(_rthread_debug);

@


1.2
log
@Sort headers per style(9)
@
text
@d1 1
a1 1
/* $OpenBSD: rthread_debug.c,v 1.1 2017/08/15 06:13:24 guenther Exp $ */
a7 1
#include <stdlib.h>
a11 12
REDIRECT_SYSCALL(issetugid);

int _rthread_debug_level;

/*
 * Note: messages truncated at 255 characters.   Could use vasprintf,
 * but don't want to use malloc here so the function can be used
 * in signal handlers.
 */
#define MAX_MSG_LEN 256
#define RTHREAD_ENV_DEBUG	"RTHREAD_DEBUG"

a19 5
	char msg[MAX_MSG_LEN];
	char *p;
	int cnt;
	ssize_t c;

d23 1
a23 1
		cnt = vsnprintf(msg, MAX_MSG_LEN, fmt, ap);
a24 12
		if (cnt > MAX_MSG_LEN - 1)
			cnt = MAX_MSG_LEN - 1;
		p = msg;
		do {
			c = write(STDERR_FILENO, p, cnt);
			if (c == -1)
				break;
			if (c != cnt)
				sched_yield();
			p += c;
			cnt -= c;
		} while (cnt > 0);
d27 1
a28 19
/*
 * set the debug level from an environment string.  Bogus values are
 * silently ignored.
 */
void
_rthread_debug_init(void)
{
	char *envp;
	char *rem;

	if (issetugid())
		return;
	envp = getenv(RTHREAD_ENV_DEBUG);
	if (envp) {
		_rthread_debug_level = (int) strtol(envp, &rem, 0);
		if (*rem || _rthread_debug_level < 0)
			_rthread_debug_level = 0;
	}
}
@


1.1
log
@Copy files from ../librthread in preparation for moving functionality
from libpthread to libc.  No changes to the build yet, just making it
easier to review the substantive diffs.

ok beck@@ kettenis@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: rthread_debug.c,v 1.5 2016/09/01 10:56:46 deraadt Exp $ */
d7 1
a8 1
#include <stdio.h>
@

