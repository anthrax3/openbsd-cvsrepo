head	1.10;
access;
symbols
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.12
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.10
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.8
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.6
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.4
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.2
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2007.11.19.03.01.18;	author kurt;	state dead;
branches;
next	1.9;

1.9
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.8;

1.8
date	2004.06.07.21.11.23;	author marc;	state Exp;
branches;
next	1.7;

1.7
date	2002.11.05.22.19.55;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	2002.11.03.23.58.39;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.03.20.36.43;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.04.22.17.45;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.30.17.47.57;	author todd;	state Exp;
branches;
next	1.2;

1.2
date	2001.08.30.07.38.27;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.06.07.27.33;	author d;	state Exp;
branches;
next	;


desc
@@


1.10
log
@remove unused zero length file.
@
text
@@


1.9
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@@


1.8
log
@
major bump to libc and libpthread to break the dependency of a
particular implementation of libpthread for libc.  libc no longer
needs pthread.h to compile.
OK millert@@, brad@@, tedu@@
@
text
@a0 22
/*	$OpenBSD: thread_fd.c,v 1.7 2002/11/05 22:19:55 marc Exp $	*/

#include <sys/time.h>
#include "thread_private.h"

WEAK_PROTOTYPE(_thread_fd_lock);
WEAK_PROTOTYPE(_thread_fd_unlock);

WEAK_ALIAS(_thread_fd_lock);
WEAK_ALIAS(_thread_fd_unlock);

int     
WEAK_NAME(_thread_fd_lock)(int fd, int lock_type, struct timespec *timeout)
{
	return 0;
}

void
WEAK_NAME(_thread_fd_unlock)(int fd, int lock_type)
{
}

@


1.7
log
@
thread safe libc -- 2nd try.   OK miod@@, millert@@
Thanks to miod@@ for m68k and vax fixes
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.6 2002/11/03 23:58:39 marc Exp $	*/
a3 1
#include <pthread.h>
d13 1
a13 2
WEAK_NAME(_thread_fd_lock)(int fd, int lock_type, struct timespec *timeout,
			   const char *fname, int lineno)
d19 1
a19 2
WEAK_NAME(_thread_fd_unlock)(int fd, int lock_type, const char *fname,
			     int lineno)
@


1.6
log
@back out previous patch.. there are still some vax/m68k issues
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.5 2002/11/03 20:36:43 marc Exp $	*/
a7 1
WEAK_PROTOTYPE(_thread_fd_lock_debug);
a8 1
WEAK_PROTOTYPE(_thread_fd_unlock_debug);
a10 1
WEAK_ALIAS(_thread_fd_lock_debug);
a11 1
WEAK_ALIAS(_thread_fd_unlock_debug);
d14 2
a15 4
WEAK_NAME(_thread_fd_lock)(fd, lock_type, timeout)
	int	fd;
	int	lock_type;
	struct timespec *timeout;
a19 18
int     
WEAK_NAME(_thread_fd_lock_debug)(fd, lock_type, timeout, fname, lineno)
	int	fd;
	int	lock_type;
	struct timespec *timeout;
	char	*fname;
	int	lineno;
{
	return 0;
}

void
WEAK_NAME(_thread_fd_unlock)(fd, lock_type)
	int	fd;
	int	lock_type;
{
}

d21 2
a22 5
WEAK_NAME(_thread_fd_unlock_debug)(fd, lock_type, fname, lineno)
	int	fd;
	int	lock_type;
	char	*fname;
	int	lineno;
@


1.5
log
@
libc changes for thread safety.  Tested on:
alpha (millert@@), i386 (marc@@), m68k (millert@@ and miod@@),
powerpc (drahn@@ and dhartmei@@), sparc (millert@@ and marc@@),
sparc64 (marc@@), and vax (millert@@ and miod@@).
Thanks to millert@@, miod@@, and mickey@@ for fixes along the way.
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.4 2001/09/04 22:17:45 fgsch Exp $	*/
d8 1
d10 1
d13 1
d15 1
d18 4
a21 2
WEAK_NAME(_thread_fd_lock)(int fd, int lock_type, struct timespec *timeout,
			   const char *fname, int lineno)
d26 18
d45 5
a49 2
WEAK_NAME(_thread_fd_unlock)(int fd, int lock_type, const char *fname,
			     int lineno)
@


1.4
log
@put changes back, this time ALL the files.
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.3 2001/08/30 17:47:57 todd Exp $	*/
a7 1
WEAK_PROTOTYPE(_thread_fd_lock_debug);
a8 1
WEAK_PROTOTYPE(_thread_fd_unlock_debug);
a10 1
WEAK_ALIAS(_thread_fd_lock_debug);
a11 1
WEAK_ALIAS(_thread_fd_unlock_debug);
d14 2
a15 4
WEAK_NAME(_thread_fd_lock)(fd, lock_type, timeout)
	int	fd;
	int	lock_type;
	struct timespec *timeout;
a19 18
int     
WEAK_NAME(_thread_fd_lock_debug)(fd, lock_type, timeout, fname, lineno)
	int	fd;
	int	lock_type;
	struct timespec *timeout;
	char	*fname;
	int	lineno;
{
	return 0;
}

void
WEAK_NAME(_thread_fd_unlock)(fd, lock_type)
	int	fd;
	int	lock_type;
{
}

d21 2
a22 5
WEAK_NAME(_thread_fd_unlock_debug)(fd, lock_type, fname, lineno)
	int	fd;
	int	lock_type;
	char	*fname;
	int	lineno;
@


1.3
log
@Back out fgsch@@'s tree breaking commits.
Test next time, ok?
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.2 2001/08/30 07:38:27 fgsch Exp $	*/
d31 1
a31 1
	const char *fname;
d48 1
a48 1
	const char *fname;
@


1.2
log
@fix some const warnings
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_fd.c,v 1.1 2000/01/06 07:27:33 d Exp $	*/
d31 1
a31 1
	char	*fname;
d48 1
a48 1
	char	*fname;
@


1.1
log
@thread specific storage and fd locking for single-threaded libc (ie, no-ops)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
	const char *fname;
d48 1
a48 1
	const char *fname;
@

