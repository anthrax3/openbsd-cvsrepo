head	1.2;
access;
symbols;
locks; strict;
comment	@ * @;


1.2
date	2000.01.06.15.07.06;	author d;	state dead;
branches;
next	1.1;

1.1
date	2000.01.06.07.27.33;	author d;	state Exp;
branches;
next	;


desc
@@


1.2
log
@rename thread_storage to unithread_storage to avoid object name conflict
@
text
@/*	$OpenBSD: thread_storage.c,v 1.1 2000/01/06 07:27:33 d Exp $	*/
/*
 * 
 */
/* unthreaded storage allocation helper functions */

#include <sys/cdefs.h>
#include <pthread.h>
#include "thread_private.h"

WEAK_PROTOTYPE(_libc_private_storage_lock);
WEAK_PROTOTYPE(_libc_private_storage_unlock);
WEAK_PROTOTYPE(_libc_private_storage);

WEAK_ALIAS(_libc_private_storage_lock);
WEAK_ALIAS(_libc_private_storage_unlock);
WEAK_ALIAS(_libc_private_storage);

void
WEAK_NAME(_libc_private_storage_lock)(mutex)
	pthread_mutex_t *mutex;
{
}

void
WEAK_NAME(_libc_private_storage_unlock)(mutex)
	pthread_mutex_t *mutex;
{
}

void *
WEAK_NAME(_libc_private_storage)(key, init, initsz, error)
	volatile struct _thread_private_key_struct * key;
	void *init;
	size_t initsz;
	void *error;
{

	return init;
}
@


1.1
log
@thread specific storage and fd locking for single-threaded libc (ie, no-ops)
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@

