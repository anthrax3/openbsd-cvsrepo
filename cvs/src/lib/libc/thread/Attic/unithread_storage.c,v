head	1.2;
access;
symbols
	OPENBSD_3_5:1.1.0.18
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.16
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.14
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2004.06.07.21.11.23;	author marc;	state dead;
branches;
next	1.1;

1.1
date	2000.01.06.15.07.06;	author d;	state Exp;
branches;
next	;


desc
@@


1.2
log
@
major bump to libc and libpthread to break the dependency of a
particular implementation of libpthread for libc.  libc no longer
needs pthread.h to compile.
OK millert@@, brad@@, tedu@@
@
text
@/*	$OpenBSD: unithread_storage.c,v 1.1 2000/01/06 15:07:06 d Exp $	*/
/*
 * 
 */
/* unthreaded storage allocation helper functions */

#include <sys/cdefs.h>
#include <pthread.h>
#include "thread_private.h"

WEAK_PROTOTYPE(_libc_private_storage_lock);
WEAK_PROTOTYPE(_libc_private_storage_unlock);
WEAK_PROTOTYPE(_libc_private_storage);

WEAK_ALIAS(_libc_private_storage_lock);
WEAK_ALIAS(_libc_private_storage_unlock);
WEAK_ALIAS(_libc_private_storage);

void
WEAK_NAME(_libc_private_storage_lock)(mutex)
	pthread_mutex_t *mutex;
{
}

void
WEAK_NAME(_libc_private_storage_unlock)(mutex)
	pthread_mutex_t *mutex;
{
}

void *
WEAK_NAME(_libc_private_storage)(key, init, initsz, error)
	volatile struct _thread_private_key_struct * key;
	void *init;
	size_t initsz;
	void *error;
{

	return init;
}
@


1.1
log
@rename thread_storage to unithread_storage to avoid object name conflict
@
text
@d1 1
a1 1
/*	$OpenBSD: thread_storage.c,v 1.1 2000/01/06 07:27:33 d Exp $	*/
@

