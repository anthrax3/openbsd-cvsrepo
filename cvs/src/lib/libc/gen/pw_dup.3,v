head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.14
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.12
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.8
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.10
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.6
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.4
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.24
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.22
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.20
	OPENBSD_5_0:1.7.0.18
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.16
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.8
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.6
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.4
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2;
locks; strict;
comment	@.\" @;


1.9
date	2013.11.22.15.41.05;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.17.21.56.23;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.01.52.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.07.18.19.09.19;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.24.00.30.50;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.21.00.49.58;	author millert;	state Exp;
branches;
next	;


desc
@@


1.9
log
@doc nit okay millert@@
@
text
@.\"	$OpenBSD: pw_dup.3,v 1.8 2013/06/05 03:39:22 tedu Exp $
.\"
.\" Copyright (c) 2000 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt PW_DUP 3
.Os
.Sh NAME
.Nm pw_dup
.Nd make a copy of a struct passwd
.Sh SYNOPSIS
.In pwd.h
.Ft struct passwd *
.Fn pw_dup "const struct passwd *pw"
.Sh DESCRIPTION
The
.Fn pw_dup
function allocates sufficient memory for a copy of the struct passwd
.Fa pw ,
does the copy, and returns a pointer to it.
This is useful as subsequent calls to
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwuid
will overwrite the data they returned from previous calls.
.Pp
The returned pointer should be deallocated by a single call to
.Xr free 3 .
Since
.Fn pw_dup
allocates space for the copy in one chunk, it is not necessary to free
the individual strings contained in the returned struct passwd.
.Pp
If insufficient memory is available,
.Dv NULL
is returned.
.Sh EXAMPLES
The following will make a copy of the struct passwd for root and
store it in
.Qq pw_save :
.Bd -literal -offset indent
struct passwd *pw, *pw_save;

if ((pw = getpwnam("root")) == NULL) {
	fprintf(stderr, "Cannot find root in the password file.\en");
	exit(1);
}
if ((pw_save = pw_dup(pw)) == NULL) {
	fprintf(stderr, "Out of memory.\en");
	exit(1);
}
.Ed
.Sh ERRORS
.Fn pw_dup
function may fail and set the external variable
.Va errno
for any of the errors specified for the library function
.Xr malloc 3 .
.Sh SEE ALSO
.Xr free 3 ,
.Xr getpwent 3 ,
.Xr malloc 3
.Sh HISTORY
The
.Fn pw_dup
function first appeared in
.Ox 2.9 .
@


1.8
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.7 2007/05/31 19:19:28 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
d40 1
a40 1
The returned pointer may be deallocated by a single call to
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.6 2005/07/22 03:16:58 jaredy Exp $
d17 1
a17 1
.Dd $Mdocdate$
d24 1
a24 1
.Fd #include <pwd.h>
@


1.6
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.5 2003/06/17 21:56:23 millert Exp $
d17 1
a17 1
.Dd November 15, 2000
@


1.5
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.4 2003/06/03 01:52:39 millert Exp $
d38 1
a38 1
will overwrite the data from previous calls.
d44 1
a44 1
allocates space for the copy in one chunk it is not necessary to free
@


1.4
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.3 2002/07/18 19:09:19 millert Exp $
d9 7
a15 7
.\" THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
.\" FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
.\" OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.3
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.2 2000/12/24 00:30:50 aaron Exp $
a3 1
.\" All rights reserved.
d5 3
a7 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d9 7
a15 10
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.2
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: pw_dup.3,v 1.1 2000/11/21 00:49:58 millert Exp $
d37 1
a37 1
.Fn pw_dup "cost struct passwd *pw"
@


1.1
log
@Add pw_dup(3), a function to copy 'struct passwd'.  It is allocated as
a single chunk with the strings pointing elsewhere in the buffer so
a simple free() of the struct passwd * is all that is needed to decallocate.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d43 2
a44 2
does the copy, and returns a pointer to it.  This is useful as
subsequent calls to
@

