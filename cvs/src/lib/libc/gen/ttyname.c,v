head	1.19;
access;
symbols
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.18.0.2
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.4
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.13.0.28
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.32
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.30
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.26
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.24
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.22
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.20
	OPENBSD_5_0:1.13.0.18
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.16
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.14
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.10
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.6
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.8
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.6
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2016.11.09.19.09.52;	author millert;	state Exp;
branches;
next	1.18;
commitid	jRhPpeX9VtPsk71X;

1.18
date	2016.06.27.16.52.30;	author espie;	state Exp;
branches;
next	1.17;
commitid	hVp9e2E4VNj4eYyu;

1.17
date	2016.06.27.06.10.04;	author espie;	state Exp;
branches;
next	1.16;
commitid	TLwDlKXicI2p63m9;

1.16
date	2015.10.12.19.53.58;	author naddy;	state Exp;
branches;
next	1.15;
commitid	yXgQyaGLaI6XEl0e;

1.15
date	2015.09.12.14.56.50;	author guenther;	state Exp;
branches;
next	1.14;
commitid	BXATo6E2rFBuIXKr;

1.14
date	2015.06.19.23.54.15;	author jca;	state Exp;
branches;
next	1.13;
commitid	QLClBZ8QGhad3yOg;

1.13
date	2007.05.23.18.30.07;	author kurt;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.08.08.05.34;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.03.25.15.38.47;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2004.05.18.02.05.52;	author jfb;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.16.21.27.23;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.01.06.08.24.16;	author d;	state Exp;
branches;
next	1.6;

1.6
date	98.11.20.11.18.40;	author d;	state Exp;
branches;
next	1.5;

1.5
date	98.08.27.06.42.16;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.07.09.00.28.25;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.15.09.31.07;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.27.02;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.59;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.59;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Fix a use after free error introduced in rev 1.18 by only calling
closedir() outside the loop.  OK deraadt@@ guenther@@ markus@@
@
text
@/*	$OpenBSD: ttyname.c,v 1.18 2016/06/27 16:52:30 espie Exp $ */
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/stat.h>
#include <fcntl.h>
#include <dirent.h>
#include <db.h>
#include <string.h>
#include <unistd.h>
#include <paths.h>
#include <limits.h>
#include <errno.h>
#include "thread_private.h"

static char buf[TTY_NAME_MAX];
static int oldttyname(struct stat *, char *, size_t);

char *
ttyname(int fd)
{
	_THREAD_PRIVATE_KEY(ttyname);
	char *bufp = (char *) _THREAD_PRIVATE(ttyname, buf, NULL);
	int err;

	if (bufp == NULL)
		return NULL;

	err = ttyname_r(fd, bufp, sizeof buf);
	if (err) {
		errno = err;
		return NULL;
	}

	return bufp;
}
DEF_WEAK(ttyname);

int
ttyname_r(int fd, char *buf, size_t len)
{
	struct stat sb;
	DB *db;
	DBT data, key;
	struct {
		mode_t type;
		dev_t dev;
	} bkey;

	/* Must be a terminal. */
	if (!isatty(fd))
		return (errno);
	/* Must be a character device. */
	if (fstat(fd, &sb))
		return (errno);
	if (!S_ISCHR(sb.st_mode))
		return (ENOTTY);
	if (len < sizeof(_PATH_DEV))
		return (ERANGE);

	memcpy(buf, _PATH_DEV, sizeof(_PATH_DEV));

	if ((db = dbopen(_PATH_DEVDB, O_RDONLY, 0, DB_HASH, NULL))) {
		memset(&bkey, 0, sizeof(bkey));
		bkey.type = S_IFCHR;
		bkey.dev = sb.st_rdev;
		key.data = &bkey;
		key.size = sizeof(bkey);
		if (!(db->get)(db, &key, &data, 0)) {
			if (data.size > len - (sizeof(_PATH_DEV) - 1)) {
				(void)(db->close)(db);
				return (ERANGE);
			}
			memcpy(buf + sizeof(_PATH_DEV) - 1, data.data,
			    data.size);
			(void)(db->close)(db);
			return (0);
		}
		(void)(db->close)(db);
	}
	return (oldttyname(&sb, buf, len));
}
DEF_WEAK(ttyname_r);

static int
oldttyname(struct stat *sb, char *buf, size_t len)
{
	struct dirent *dirp;
	DIR *dp;
	struct stat dsb;
	int error = ENOTTY;

	if ((dp = opendir(_PATH_DEV)) == NULL)
		return (errno);

	while ((dirp = readdir(dp))) {
		if (dirp->d_type != DT_CHR && dirp->d_type != DT_UNKNOWN)
			continue;
		if (fstatat(dirfd(dp), dirp->d_name, &dsb, AT_SYMLINK_NOFOLLOW) 
		    || !S_ISCHR(dsb.st_mode) || sb->st_rdev != dsb.st_rdev)
			continue;
		if (dirp->d_namlen > len - sizeof(_PATH_DEV)) {
			error = ERANGE;
		} else {
			memcpy(buf + sizeof(_PATH_DEV) - 1, dirp->d_name,
			    dirp->d_namlen + 1);
			error = 0;
		}
		break;
	}
	(void)closedir(dp);
	return (error);
}
@


1.18
log
@make proper use of fstatat, as suggested by guenther@@
okay millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.17 2016/06/27 06:10:04 espie Exp $ */
d118 1
d129 8
a136 6
		(void)closedir(dp);
		if (dirp->d_namlen > len - sizeof(_PATH_DEV))
			return (ERANGE);
		memcpy(buf + sizeof(_PATH_DEV) - 1, dirp->d_name,
		    dirp->d_namlen + 1);
		return (0);
d139 1
a139 1
	return (ENOTTY);
@


1.17
log
@make the fallback code more accurate (in particular, it should return names
based on the actual device, not any kind of inode equality which won't hold
for duplicates of the dev tree in a chroot)

no bump as it doesn't change any API.

okay and improvements guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.16 2015/10/12 19:53:58 naddy Exp $ */
d125 5
a129 2
		if (dirp->d_namlen > len - sizeof(_PATH_DEV)) {
			(void)closedir(dp);
a130 1
		}
a132 4
		if (lstat(buf, &dsb) || !S_ISCHR(dsb.st_mode) ||
		    sb->st_rdev != dsb.st_rdev)
			continue;
		(void)closedir(dp);
@


1.16
log
@When isatty() was switched to F_ISATTY, the inline copy in ttyname()
was forgotten.  Just call isatty().  ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.15 2015/09/12 14:56:50 guenther Exp $ */
d123 1
a123 1
		if (dirp->d_fileno != sb->st_ino)
d131 2
a132 2
		if (stat(buf, &dsb) || sb->st_dev != dsb.st_dev ||
		    sb->st_ino != dsb.st_ino)
@


1.15
log
@Wrap <unistd.h> so that internal calls go direct and they're all weak symbols
Delete unused 'fd' argument from internal function oldttyname()
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.14 2015/06/19 23:54:15 jca Exp $ */
a34 1
#include <termios.h>
a69 1
	struct termios ttyb;
d78 1
a78 1
	if (tcgetattr(fd, &ttyb) < 0)
@


1.14
log
@Tweak whitespace and remove dangling, unneeded "else".

No functional change.
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.13 2007/05/23 18:30:07 kurt Exp $ */
d45 1
a45 1
static int oldttyname(int, struct stat *, char *, size_t);
d65 1
d110 1
a110 1
	return (oldttyname(fd, &sb, buf, len));
d112 1
a113 1
/* ARGSUSED */
d115 1
a115 1
oldttyname(int fd, struct stat *sb, char *buf, size_t len)
@


1.13
log
@Remove unnecessary locking. There is no need for serializing calls to
these functions and each use of the fd is already protected. No externally
visible changes. okay marc@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ttyname.c,v 1.12 2005/08/08 08:05:34 espie Exp $ */
d51 1
a51 1
	char * bufp = (char*) _THREAD_PRIVATE(ttyname, buf, NULL);
d54 1
a54 1
	if (bufp == NULL) 
d56 1
d62 1
a62 1
	else
@


1.12
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a45 13
static int __ttyname_r_basic(int, char *, size_t);

int
ttyname_r(int fd, char *buf, size_t buflen)
{
	int ret;

	if ((ret = _FD_LOCK(fd, FD_READ, NULL)) == 0) {
		ret = __ttyname_r_basic(fd, buf, buflen);
		_FD_UNLOCK(fd, FD_READ);
	}
	return ret;
}
d65 2
a66 2
static int
__ttyname_r_basic(int fd, char *buf, size_t len)
@


1.11
log
@deregister (and deauto!). ok millert@@ marco@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.10 2004/05/18 02:05:52 jfb Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.10
log
@ansify function definitions and zap some `register'

ok millert@@
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.9 2003/06/02 20:18:35 millert Exp $";
d131 2
a132 2
	register struct dirent *dirp;
	register DIR *dp;
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.8 2002/02/16 21:27:23 millert Exp $";
d82 1
a82 4
__ttyname_r_basic(fd, buf, len)
	int fd;
	char *buf;
	size_t len;
d129 1
a129 5
oldttyname(fd, sb, buf, len)
	int fd;
	struct stat *sb;
	char *buf;
	size_t len;
@


1.8
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.7 2000/01/06 08:24:16 d Exp $";
@


1.7
log
@_THREAD_PRIVATE_* macros changed
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.6 1998/11/20 11:18:40 d Exp $";
d52 2
a53 2
static int oldttyname __P((int, struct stat *, char *, size_t));
static int __ttyname_r_basic __P((int, char *, size_t));
@


1.6
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.5 1998/08/27 06:42:16 deraadt Exp $";
d70 1
a70 1
	_THREAD_PRIVATE_KEY(ttyname)
@


1.5
log
@re-initialize the tty buffer with "/dev/" everytime through; spotted by d
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.4 1997/07/09 00:28:25 millert Exp $";
d47 7
d55 11
a65 2
static char buf[sizeof(_PATH_DEV) + MAXNAMLEN];
static char *oldttyname __P((int, struct stat *));
d68 19
a86 1
ttyname(fd)
d88 2
d102 1
a102 1
		return (NULL);
d104 6
a109 2
	if (fstat(fd, &sb) || !S_ISCHR(sb.st_mode))
		return (NULL);
d120 4
d127 1
a127 1
			return (buf);
d131 1
a131 1
	return (oldttyname(fd, &sb));
d135 2
a136 2
static char *
oldttyname(fd, sb)
d139 2
d147 1
a147 1
		return (NULL);
d152 4
d162 1
a162 1
		return (buf);
d165 1
a165 1
	return (NULL);
@


1.4
log
@Clean up some -Wall complaints.
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.3 1996/09/15 09:31:07 tholo Exp $";
d48 1
a48 1
static char buf[sizeof(_PATH_DEV) + MAXNAMLEN] = _PATH_DEV;
d71 2
d80 2
a81 2
			bcopy(data.data,
			    buf + sizeof(_PATH_DEV) - 1, data.size);
d106 1
a106 1
		bcopy(dirp->d_name, buf + sizeof(_PATH_DEV) - 1,
@


1.3
log
@Remove dead code
Remove unused variables
Silence some warnings
lint(1) is your friend
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.2 1996/08/19 08:27:02 tholo Exp $";
d71 1
a71 1
	if (db = dbopen(_PATH_DEVDB, O_RDONLY, 0, DB_HASH, NULL)) {
d101 1
a101 1
	while (dirp = readdir(dp)) {
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: ttyname.c,v 1.9 1995/05/02 01:45:33 mycroft Exp $";
d88 1
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: ttyname.c,v 1.9 1995/05/02 01:45:33 mycroft Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)ttyname.c	8.2 (Berkeley) 1/27/94";
#else
static char rcsid[] = "$NetBSD: ttyname.c,v 1.9 1995/05/02 01:45:33 mycroft Exp $";
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
