head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.42
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.44
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.36
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.40
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.5;
commitid	d9R7VGw9CHTkwXE1;

1.5
date	2005.08.08.08.05.34;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.07.17.20.38.43;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2004.07.13.21.03.35;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.22.34;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@/*	$OpenBSD: errno.c,v 1.5 2005/08/08 08:05:34 espie Exp $ */
/* PUBLIC DOMAIN: No Rights Reserved.   Marco S Hyman <marc@@snafu.org> */

#include <tib.h>
#include <errno.h>
#include <unistd.h>
#include "thread_private.h"


#ifdef TCB_HAVE_MD_GET
/*
 * If there's an MD TCB_GET() macro, then getting the TCB address is
 * cheap enough that we can do it even in single-threaded programs,
 * so the tc_errnoptr and tc_tcb callbacks will be unused, and __errno()
 * can just use TIB_GET().
 */
int *
__errno(void)
{
	return (&TIB_GET()->tib_errno);
}
DEF_STRONG(__errno);

#else /* ! TCB_HAVE_MD_GET */
/*
 * Otherwise, getting the TCB address requires the __get_tcb()
 * syscall.  Rather than pay that cost for single-threaded programs,
 * the syscall stubs will invoke the tc_errnoptr callback to set errno
 * and other code will invoke the tc_tcb callback to get the TCB
 * for cancelation checks, etc.  The default callbacks will just
 * work from the cached location of the initial thread's TCB;
 * libpthread can override them to the necessary more expensive
 * versions that use __get_tcb().
 */

/* cached pointer to the TCB of the only thread in single-threaded programs */
void	*_libc_single_tcb = NULL;

static inline void *
single_threaded_tcb(void)
{
	if (__predict_false(_libc_single_tcb == NULL))
		_libc_single_tcb = TCB_GET();
	return (_libc_single_tcb);
}

static int *
single_threaded_errnoptr(void)
{
	return &TCB_TO_TIB(single_threaded_tcb())->tib_errno;
}

/*
 * __errno(): just use the callback to get the applicable current method
 */
int *
__errno(void)
{
	return (_thread_cb.tc_errnoptr());
}
DEF_STRONG(__errno);

#endif /* !TCB_HAVE_MD_GET */


struct thread_callbacks _thread_cb =
{
#ifndef	TCB_HAVE_MD_GET
	.tc_errnoptr	= &single_threaded_errnoptr,
	.tc_tcb		= &single_threaded_tcb,
#endif
};
@


1.5
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d4 1
d6 2
a7 1
#undef errno
d9 2
d12 4
a15 1
 * global errno for unthreaded programs.
d17 6
a22 1
int errno;
d24 1
d26 29
a54 1
 * weak version of function used by unthreaded programs.
d57 1
a57 1
___errno(void)
d59 1
a59 1
	return &errno;
d61 3
d65 8
a72 1
__weak_alias(__errno, ___errno);
@


1.4
log
@add PD statement.   Requested by espie@@, OK millert@@
@
text
@d1 1
a2 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: errno.c,v 1.3 2004/07/13 21:03:35 marc Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.3
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d1 2
d4 1
a4 1
static char rcsid[] = "$OpenBSD: errno.c,v 1.2 1996/08/19 08:22:34 tholo Exp $";
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d2 1
a2 1
static char rcsid[] = "$OpenBSD$";
d5 6
d12 11
@


1.1
log
@Initial revision
@
text
@d1 3
a3 1
/*	$NetBSD: errno.c,v 1.2 1995/02/27 03:42:51 cgd Exp $	*/
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
