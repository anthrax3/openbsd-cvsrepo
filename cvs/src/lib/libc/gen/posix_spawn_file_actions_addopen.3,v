head	1.8;
access;
symbols
	OPENBSD_6_2:1.8.0.14
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.12
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.4
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.6.0.8
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.4
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5;
locks; strict;
comment	@.\" @;


1.8
date	2014.11.30.02.41.43;	author schwarze;	state Exp;
branches;
next	1.7;
commitid	uY3eMfQCqsZHEu4G;

1.7
date	2014.08.31.02.21.18;	author guenther;	state Exp;
branches;
next	1.6;
commitid	ByaPhxsk4NZYxbFu;

1.6
date	2013.07.16.15.21.11;	author schwarze;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.11.14.32.38;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.11.09.38.45;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.11.08.11.30;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.23.12.58.48;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.21.23.20.35;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Even though not callable, "Ed" is a macro name, so for clarity,
escape it when it appears on a macro line.
@
text
@.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.7 2014/08/31 02:21:18 guenther Exp $
.\"
.\" Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: August 31 2014 $
.Dt POSIX_SPAWN_FILE_ACTIONS_ADDOPEN 3
.Os
.Sh NAME
.Nm posix_spawn_file_actions_addclose ,
.Nm posix_spawn_file_actions_adddup2 ,
.Nm posix_spawn_file_actions_addopen
.Nd add action to close, dup2 or open file descriptor to file actions object
.Sh SYNOPSIS
.In spawn.h
.Ft int
.Fn posix_spawn_file_actions_addclose "posix_spawn_file_actions_t *file_actions" "int fildes"
.Ft int
.Fn posix_spawn_file_actions_adddup2 "posix_spawn_file_actions_t *file_actions" "int fildes" "int newfildes"
.Ft int
.Fn posix_spawn_file_actions_addopen "posix_spawn_file_actions_t *file_actions" "int fildes" "const char *restrict path" "int oflag" "mode_t mode"
.Sh DESCRIPTION
These function add an action to
.Xr close 2 ,
.Xr dup2 2 ,
or
.Xr open 2
a file descriptor
to a
.Xr posix_spawn 3
file actions object.
.Pp
Actions are executed in order in the child process:
.Bl -dash
.It
The
.Fn posix_spawn_file_actions_addclose
function adds an action that causes
.Bd -literal -offset indent
close(fildes);
.Ed
.Pp
to be called.
.It
The
.Fn posix_spawn_file_actions_adddup2
function adds an action that causes
.Bd -literal -offset indent
dup2(fildes, newfildes);
.Ed
.Pp
to be called.
In addition, the action will cause the close-on-exec flag to be cleared on
.Fa newfildes ,
even if
.Fa newfildes
equals
.Fa fildes .
.It
The
.Fn posix_spawn_file_actions_addopen
adds an action that causes
.Bd -literal -offset indent
open(path, oflag, mode);
.Ed
.Pp
to be called and the result to be forced as
.Fa fildes
(if
.Fa fildes
was already open before this action, the old file descriptor
is closed before the action is performed).
.Pp
Note that
.Fn posix_spawn_file_actions_addopen
makes a copy of the
.Fa path
argument.
.El
.Sh RETURN VALUES
Upon successful completion, these functions return zero.
Otherwise they may return
.Er EINVAL
for negative file descriptors, or
.Er ENOMEM
if they run out of memory.
.Sh SEE ALSO
.Xr posix_spawn 3 ,
.Xr posix_spawn_file_actions_init 3 ,
.Xr posix_spawnp 3
.Sh STANDARDS
These functions conform to
.St -p1003.1-2001 .
.Sh AUTHORS
.An \&Ed Schouten Aq Mt ed@@FreeBSD.org
@


1.7
log
@Add additional userland interfaces for setting close-on-exec on fds
when creating them: mkostemp(), mkostemps(), the 'e' mode letter for
fopen(), freopen(), fdopen(), and popen().  The close-on-exec flag will
be cleared by the action created by posix_spawn_file_actions_adddup2().

Also, add support for the C11 'x' mode letter for fopen() and freopen(),
setting O_EXCL when possibly creating files.

Note: this requires kernel support for pipe2() and dup3()!

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.6 2013/07/16 15:21:11 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 16 2013 $
d106 1
a106 1
.An Ed Schouten Aq Mt ed@@FreeBSD.org
@


1.6
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.5 2012/04/11 14:32:38 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 11 2012 $
d64 6
@


1.5
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.4 2012/04/11 09:38:45 espie Exp $
d100 1
a100 1
.An Ed Schouten Aq ed@@FreeBSD.org
@


1.4
log
@fuss with details
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.3 2012/04/11 08:11:30 espie Exp $
d21 1
a21 1
.Nm posix_spawn_file_actions_addclose
d23 2
a24 2
.Nm posix_spawn_file_actions_addopen ,
.Nd "add action to close, dup2 or open file descriptor to file actions object"
d73 2
a74 3
.Fa fildes .
.Po
If
d77 1
a77 2
is closed before the action is performed
.Pc
d97 1
a97 2
Those functions
functions conform to
@


1.3
log
@new clean-room manpages for posix_spawn, unencumbered by any POSIX bullshit.
"just commit it" deraadt@@

(nits to be fixed soon)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
d34 2
a35 2
These function add an action to 
.Xr close 2 , 
d37 1
a37 1
or 
d67 1
a67 1
adds an action that causes 
d86 1
@


1.2
log
@we don't mention LIBRARY: c
"of course" deraadt@@
@
text
@d1 1
a1 3
.\"	$OpenBSD: posix_spawn_file_actions_addopen.3,v 1.1 2012/03/21 23:20:35 matthew Exp $
.\" Copyright (c) 2008 Ed Schouten <ed@@FreeBSD.org>
.\" All rights reserved.
d3 1
a3 8
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
d5 3
a7 11
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
d9 7
a15 9
.\" Portions of this text are reprinted and reproduced in electronic form
.\" from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology --
.\" Portable Operating System Interface (POSIX), The Open Group Base
.\" Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of
.\" Electrical and Electronics Engineers, Inc and The Open Group.  In the
.\" event of any discrepancy between this version and the original IEEE and
.\" The Open Group Standard, the original IEEE and The Open Group Standard is
.\" the referee document.  The original Standard can be obtained online at
.\"	http://www.opengroup.org/unix/online.html.
d17 1
a17 1
.Dd Mar 24, 2008
d21 2
d24 1
a24 3
.Nm posix_spawn_file_actions_adddup2 ,
.Nm posix_spawn_file_actions_addclose
.Nd "add open, dup2 or close action to spawn file actions object"
d28 1
a28 1
.Fn posix_spawn_file_actions_addopen "posix_spawn_file_actions_t *file_actions" "int fildes" "const char *restrict path" "int oflag" "mode_t mode"
d32 1
a32 1
.Fn posix_spawn_file_actions_addclose "posix_spawn_file_actions_t *file_actions" "int fildes"
d34 8
a41 1
These functions add an open, dup2 or close action to a spawn
d44 3
a46 27
A spawn file actions object is of type
.Vt posix_spawn_file_actions_t
(defined in
.In spawn.h )
and is used to specify a series of actions to be performed by a
.Fn posix_spawn
or
.Fn posix_spawnp
operation in order to arrive at the set of open file descriptors for the
child process given the set of open file descriptors of the parent.
.Pp
A spawn file actions object, when passed to
.Fn posix_spawn
or
.Fn posix_spawnp ,
specify how the set of open file descriptors in the calling
process is transformed into a set of potentially open file descriptors
for the spawned process.
This transformation is as if the specified sequence of actions was
performed exactly once, in the context of the spawned process (prior to
execution of the new process image), in the order in which the actions
were added to the object; additionally, when the new process image is
executed, any file descriptor (from this new set) which has its
.Dv FD_CLOEXEC
flag set is closed (see
.Fn posix_spawn ) .
.Pp
d48 2
a49 6
.Fn posix_spawn_file_actions_addopen
function adds an open action to the object referenced by
.Fa file_actions
that causes the file named by
.Fa path
to be opened (as if
d51 1
a51 1
open(path, oflag, mode)
d54 2
a55 16
had been called, and the returned file descriptor, if not
.Fa fildes ,
had been changed to
.Fa fildes )
when a new process is spawned using this file actions object.
If
.Fa fildes
was already an open file descriptor, it is closed before the new
file is opened.
.Pp
The string described by
.Fa path
is copied by the
.Fn posix_spawn_file_actions_addopen
function.
.Pp
d58 1
a58 7
function adds a dup2 action to the object referenced by
.Fa file_actions
that causes the file descriptor
.Fa fildes
to be duplicated as
.Fa newfildes
(as if
d60 1
a60 1
dup2(fildes, newfildes)
d63 2
a64 2
had been called) when a new process is spawned using this file actions object.
.Pp
d66 2
a67 6
.Fn posix_spawn_file_actions_addclose
function adds a close action to the object referenced by
.Fa file_actions
that causes the file descriptor
.Fa fildes
to be closed (as if
d69 1
a69 1
close(fildes)
d72 14
a85 2
had been called) when a new process is spawned using this file actions
object.
d87 6
a92 15
Upon successful completion, these functions return zero;
otherwise, an error number is returned to indicate the error.
.Sh ERRORS
These
functions fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value specified by
.Fa fildes
or
.Fa newfildes
is negative.
.It Bq Er ENOMEM
Insufficient memory exists to add to the spawn file actions object.
.El
a93 3
.Xr close 2 ,
.Xr dup2 2 ,
.Xr open 2 ,
a94 1
.Xr posix_spawn_file_actions_destroy 3 ,
d98 1
a98 5
The
.Fn posix_spawn_file_actions_addopen ,
.Fn posix_spawn_file_actions_adddup2
and
.Fn posix_spawn_file_actions_addclose
@


1.1
log
@Implement execvpe(3) and posix_spawn(3) and family.  Based on
FreeBSD's implementation via Frank Denis, with various cleanups and
tweaks by me.

ok deraadt@@, guenther@@; discussions and tweaks from many others
jmc@@ promises to help me further with the man pages in tree
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a43 2
.Sh LIBRARY
.Lb libc
@

