head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.26
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.24
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.22
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.20
	OPENBSD_5_0:1.9.0.18
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.16
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.14
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.10
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.12
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.8
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.6
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.4
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.2
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.8.0.4
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.2
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.09.12.13.34.22;	author guenther;	state Exp;
branches;
next	1.12;
commitid	TusJDQRjqkLPFiPJ;

1.12
date	2014.03.10.07.54.14;	author schwarze;	state Exp;
branches;
next	1.11;

1.11
date	2013.11.06.20.35.25;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.05.20.36.51;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.8;

1.8
date	2006.04.01.18.06.59;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2005.08.08.08.05.34;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.18.02.05.52;	author jfb;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.23;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.09.22.05.09.39;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.25.43;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Wrap <dirent.h> so that internal calls go direct and they're all weak symbols
@
text
@/*	$OpenBSD: seekdir.c,v 1.12 2014/03/10 07:54:14 schwarze Exp $ */
/*
 * Copyright (c) 2013 Ingo Schwarze <schwarze@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <dirent.h>
#include <unistd.h>

#include "thread_private.h"
#include "telldir.h"

/*
 * Seek to an entry in a directory.
 * Only values returned by "telldir" should be passed to seekdir.
 */
void
seekdir(DIR *dirp, long loc)
{
	struct dirent *dp;

	/*
	 * First check whether the directory entry to seek for
	 * is still buffered in the directory structure in memory.
	 */

	_MUTEX_LOCK(&dirp->dd_lock);
	if (dirp->dd_size && dirp->dd_bufpos == loc) {
		dirp->dd_loc = 0;
		dirp->dd_curpos = loc;
		_MUTEX_UNLOCK(&dirp->dd_lock);
		return;
	}

	for (dirp->dd_loc = 0;
	     dirp->dd_loc < dirp->dd_size;
	     dirp->dd_loc += dp->d_reclen) {
		dp = (struct dirent *)(dirp->dd_buf + dirp->dd_loc);
		if (dp->d_off != loc)
			continue;

		/*
		 * Entry found in the buffer, use it.  If readdir(3)
		 * follows, this will save us a getdents(2) syscall.
		 * Note that d_off is the offset of the _next_ entry,
		 * so advance dd_loc.
		 */

		dirp->dd_loc += dp->d_reclen;
		dirp->dd_curpos = loc;
		_MUTEX_UNLOCK(&dirp->dd_lock);
		return;
	}

	/*
	 * The entry is not in the buffer, prepare a call to getdents(2).
	 * In particular, invalidate dd_loc.
	 */

	dirp->dd_loc = dirp->dd_size;
	dirp->dd_bufpos = dirp->dd_curpos = lseek(dirp->dd_fd, loc, SEEK_SET);
	_MUTEX_UNLOCK(&dirp->dd_lock);
}
DEF_WEAK(seekdir);
@


1.12
log
@Optimization, no functional change:
Save a cookie pointing to the very first entry in the DIR.dd_buf
cache buffer and use that to speed up seekdir(3) when rewinding
to that first entry.
No libc bump because DIR is an opaque struct.

When the optimization applies, which in particular it always does
for rewinddir(3) after reading less than about 500 entries,
seekdir(3) execution time drops from 100 to 0.05 milliseconds
on my i386 notebook.  Other cases are not slowed down.

Based on an idea from and ok by guenther@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: seekdir.c,v 1.11 2013/11/06 20:35:25 schwarze Exp $ */
d75 1
@


1.11
log
@Search the userland buffer of dirent structures before falling back to
getdents(2).  No functional change, but considerable speedup in many
cases, see http://marc.info/?l=openbsd-tech&m=138369623117934 for some
approximate numbers.
ok guenther@@,  "good diagnosis" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: seekdir.c,v 1.10 2013/11/05 20:36:51 schwarze Exp $ */
d39 7
d71 2
a72 2
	dirp->dd_loc = 0;
	dirp->dd_curpos = lseek(dirp->dd_fd, loc, SEEK_SET);
@


1.10
log
@Cleanup, no functional change:
1. avoid code duplication in rewinddir() by calling seekdir() directly
2. move __seekdir() into seekdir() and _telldir_unlocked() into telldir()
Both functions were called from nowhere else.
3. remove some unused #include directives and one unused function prototype
ok otto@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: seekdir.c,v 1.9 2007/06/05 18:11:48 kurt Exp $ */
d3 1
a3 2
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
d5 3
a7 11
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
d9 7
a15 11
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d31 7
d39 25
@


1.9
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD: seekdir.c,v 1.8 2006/04/01 18:06:59 otto Exp $ */
a30 1
#include <sys/param.h>
d32 2
d39 1
a39 1
 * __seekdir is in telldir.c so that it can share opaque data structures.
d45 2
a46 1
	__seekdir(dirp, loc);
@


1.8
log
@- Plug huge mem leak; mostly samba was suffering.
- Fix semantics: seekdir(pos); telldir() shoud return pos. The code
that implements this will be made faster in a later commit.
- We loose documented behaviour (after closedir() the telldir()
positions are not valid anymore). This was never in Posix, and most
other systems have nothing like it.

Diff originally from Paul Thorn, rewritten by me using some FreeBSD
code.  "slap it in" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: seekdir.c,v 1.7 2005/08/08 08:05:34 espie Exp $ */
d33 1
d43 1
a43 1

d45 1
@


1.7
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d33 1
a33 2

void __seekdir(DIR *, long);
@


1.6
log
@ansify function definitions and zap some `register'

ok millert@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: seekdir.c,v 1.5 2003/06/02 20:18:34 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: seekdir.c,v 1.4 2002/02/16 21:27:23 millert Exp $";
d44 1
a44 3
seekdir(dirp, loc)
	DIR *dirp;
	long loc;
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char rcsid[] = "$OpenBSD: seekdir.c,v 1.3 1997/09/22 05:09:39 millert Exp $";
@


1.3
log
@Prototype __seekdir() before using.
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: seekdir.c,v 1.2 1996/08/19 08:25:43 tholo Exp $";
d41 1
a41 1
void __seekdir __P((DIR *, long));
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: seekdir.c,v 1.4 1995/02/25 08:51:44 cgd Exp $";
d40 2
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: seekdir.c,v 1.4 1995/02/25 08:51:44 cgd Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)seekdir.c	8.1 (Berkeley) 6/4/93";
#else
static char rcsid[] = "$NetBSD: seekdir.c,v 1.4 1995/02/25 08:51:44 cgd Exp $";
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
