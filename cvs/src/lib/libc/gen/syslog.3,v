head	1.34;
access;
symbols
	OPENBSD_6_1:1.33.0.6
	OPENBSD_6_1_BASE:1.33
	OPENBSD_6_0:1.33.0.2
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.32.0.6
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.32.0.8
	OPENBSD_5_8_BASE:1.32
	OPENBSD_5_7:1.32.0.2
	OPENBSD_5_7_BASE:1.32
	OPENBSD_5_6:1.32.0.4
	OPENBSD_5_6_BASE:1.32
	OPENBSD_5_5:1.31.0.6
	OPENBSD_5_5_BASE:1.31
	OPENBSD_5_4:1.31.0.2
	OPENBSD_5_4_BASE:1.31
	OPENBSD_5_3:1.28.0.20
	OPENBSD_5_3_BASE:1.28
	OPENBSD_5_2:1.28.0.18
	OPENBSD_5_2_BASE:1.28
	OPENBSD_5_1_BASE:1.28
	OPENBSD_5_1:1.28.0.16
	OPENBSD_5_0:1.28.0.14
	OPENBSD_5_0_BASE:1.28
	OPENBSD_4_9:1.28.0.12
	OPENBSD_4_9_BASE:1.28
	OPENBSD_4_8:1.28.0.10
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.28.0.6
	OPENBSD_4_7_BASE:1.28
	OPENBSD_4_6:1.28.0.8
	OPENBSD_4_6_BASE:1.28
	OPENBSD_4_5:1.28.0.4
	OPENBSD_4_5_BASE:1.28
	OPENBSD_4_4:1.28.0.2
	OPENBSD_4_4_BASE:1.28
	OPENBSD_4_3:1.27.0.4
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.2
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.26.0.2
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.25.0.6
	OPENBSD_4_0_BASE:1.25
	OPENBSD_3_9:1.25.0.4
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.25.0.2
	OPENBSD_3_8_BASE:1.25
	OPENBSD_3_7:1.24.0.4
	OPENBSD_3_7_BASE:1.24
	OPENBSD_3_6:1.24.0.2
	OPENBSD_3_6_BASE:1.24
	OPENBSD_3_5:1.23.0.4
	OPENBSD_3_5_BASE:1.23
	OPENBSD_3_4:1.23.0.2
	OPENBSD_3_4_BASE:1.23
	OPENBSD_3_3:1.20.0.2
	OPENBSD_3_3_BASE:1.20
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.15.0.2
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.7.0.4
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.34
date	2017.08.29.18.23.01;	author millert;	state Exp;
branches;
next	1.33;
commitid	ZZmqR8NBKu4ywo8S;

1.33
date	2016.03.30.06.58.06;	author jmc;	state Exp;
branches;
next	1.32;
commitid	nFeMLhYWGqPPjE4B;

1.32
date	2014.07.10.09.08.39;	author deraadt;	state Exp;
branches;
next	1.31;
commitid	X0RndgwZr3PbN7Pt;

1.31
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.30;

1.30
date	2013.06.01.16.57.51;	author espie;	state Exp;
branches;
next	1.29;

1.29
date	2013.03.11.13.26.35;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2008.05.07.12.05.35;	author claudio;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2006.10.26.13.52.06;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.24;

1.24
date	2004.04.16.10.48.39;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2003.05.30.17.21.06;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.04.30.06.28.10;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2003.01.19.23.13.04;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.05.04.21.06;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2002.07.02.01.59.42;	author stevesk;	state Exp;
branches;
next	1.17;

1.17
date	2002.07.01.04.47.12;	author deraadt;	state Exp;
branches;
next	1.16;

1.16
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.15;

1.15
date	2001.11.08.11.12.09;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2001.11.05.09.48.30;	author jjbg;	state Exp;
branches;
next	1.13;

1.13
date	2001.10.24.08.16.42;	author jjbg;	state Exp;
branches;
next	1.12;

1.12
date	2001.07.27.16.41.20;	author marc;	state Exp;
branches;
next	1.11;

1.11
date	2001.02.17.17.15.23;	author pjanzen;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.24.00.30.52;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.25.17.43.14;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.07.16.22.44.58;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.07.09.13.35.19;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.06.06.06.57.45;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.06.05.03.44.54;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.29.20.07.14;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.05.23.14.11.00;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.26.30;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.58;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.58;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.34
log
@It is confusing to talk about priorities being ordered from high
to low when they are actually numbered in the opposite (numerical)
order.  Use "ordered by decreasing importance" instead.  Also try
to make it clear that LOG_UPTO uses the numerical priorities where
a larger value means a lower priority.  OK jmc@@
@
text
@.\"	$OpenBSD: syslog.3,v 1.33 2016/03/30 06:58:06 jmc Exp $
.\"
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 30 2016 $
.Dt SYSLOG 3
.Os
.Sh NAME
.Nm syslog ,
.Nm syslog_r ,
.Nm vsyslog ,
.Nm vsyslog_r ,
.Nm openlog ,
.Nm openlog_r ,
.Nm closelog ,
.Nm closelog_r ,
.Nm setlogmask ,
.Nm setlogmask_r
.Nd control system log
.Sh SYNOPSIS
.In syslog.h
.In stdarg.h
.Ft void
.Fn syslog "int priority" "const char *message" "..."
.Ft void
.Fn syslog_r "int priority" "struct syslog_data *data" "const char *message" "..."
.Ft void
.Fn vsyslog "int priority" "const char *message" "va_list args"
.Ft void
.Fn vsyslog_r "int priority" "struct syslog_data *data" "const char *message" "va_list args"
.Ft void
.Fn openlog "const char *ident" "int logopt" "int facility"
.Ft void
.Fn openlog_r "const char *ident" "int logopt" "int facility" "struct syslog_data *data"
.Ft void
.Fn closelog void
.Ft void
.Fn closelog_r "struct syslog_data *data"
.Ft int
.Fn setlogmask "int maskpri"
.Ft int
.Fn setlogmask_r "int maskpri" "struct syslog_data *data"
.Sh DESCRIPTION
The
.Fn syslog
function writes
.Fa message
to the system message logger.
The message is then written to the system console, log files,
logged-in users, or forwarded to other machines as appropriate (see
.Xr syslogd 8 ) .
.Pp
The message is identical to a
.Xr printf 3
format string, except that
.Ql %m
is replaced by the current error
message (as denoted by the global variable
.Va errno ;
see
.Xr strerror 3 ) .
A trailing newline is added if none is present.
.Pp
The
.Fn syslog_r
function is a reentrant version of the
.Fn syslog
function.
It takes a pointer to a
.Fa syslog_data
structure which is used to store
information.
This parameter must be initialized before
.Fn syslog_r
is called.
The
.Dv SYSLOG_DATA_INIT
constant is used for this purpose.
.Pp
The
.Fn vsyslog
function is an alternate form in which the arguments have already been captured
using the variable-length argument facilities of
.Xr stdarg 3 .
.Pp
The message is tagged with
.Fa priority .
Priorities are encoded as a
.Fa facility
and a
.Fa level .
The
.Fa facility
describes the part of the system
generating the message:
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_AUTH
The authorization system:
.Xr login 1 ,
.Xr su 1 ,
.Xr getty 8 ,
etc.
.It Dv LOG_AUTHPRIV
The same as
.Dv LOG_AUTH ,
but logged to a file readable only by
selected individuals.
.It Dv LOG_CRON
The cron daemon,
.Xr cron 8 .
.It Dv LOG_DAEMON
System daemons, such as
.Xr dhcpd 8 ,
that are not provided for explicitly by other facilities.
.It Dv LOG_FTP
The file transfer protocol daemon,
.Xr ftpd 8 .
.It Dv LOG_KERN
Messages generated by the kernel.
These cannot be generated by any user processes.
.It Dv LOG_LPR
The line printer spooling system:
.Xr lpr 1 ,
.Xr lpc 8 ,
.Xr lpd 8 ,
etc.
.It Dv LOG_MAIL
The mail system.
.It Dv LOG_NEWS
The network news system.
.It Dv LOG_SYSLOG
Messages generated internally by
.Xr syslogd 8 .
.It Dv LOG_USER
Messages generated by random user processes.
This is the default facility identifier if none is specified.
.It Dv LOG_UUCP
The UUCP system.
.It Dv LOG_LOCAL0
Reserved for local use.
Similarly for
.Dv LOG_LOCAL1
through
.Dv LOG_LOCAL7 .
.El
.Pp
The
.Fa level
(ORed with the
.Fa facility )
is selected from the following list, ordered by decreasing importance:
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_EMERG
A panic condition.
This is normally broadcast to all users.
.It Dv LOG_ALERT
A condition that should be corrected immediately, such as a corrupted
system database.
.It Dv LOG_CRIT
Critical conditions, e.g., hard device errors.
.It Dv LOG_ERR
Errors.
.It Dv LOG_WARNING
Warning messages.
.It Dv LOG_NOTICE
Conditions that are not error conditions,
but should possibly be handled specially.
.It Dv LOG_INFO
Informational messages.
.It Dv LOG_DEBUG
Messages that contain information
normally of use only when debugging a program.
.El
.Pp
The
.Fn vsyslog_r
function is used the same way as
.Fn vsyslog
except that it takes an additional pointer to a
.Fa syslog_data
structure.
It is a reentrant version of the
.Fn vsyslog
function described above.
.Pp
The
.Fn openlog
function provides for more specialized processing of the messages sent by
.Fn syslog
and
.Fn vsyslog .
The parameter
.Fa ident
is a string that will be prepended to every message.
The
.Fa logopt
argument
is a bit field specifying logging options, which is formed by
.Tn OR Ns 'ing
one or more of the following values:
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_CONS
If
.Fn syslog
cannot pass the message to
.Xr syslogd 8
it will attempt to write the message to the console
.Pq Pa /dev/console .
.It Dv LOG_NDELAY
Open the connection to
.Xr syslogd 8
immediately.
Normally the open is delayed until the first message is logged.
Useful for programs that need to manage the order in which file
descriptors are allocated.
This option must be used in programs that call
.Xr chroot 2
where the new root does not have its own log socket.
.It Dv LOG_ODELAY
Delay opening the connection to
.Xr syslogd 8
until the first message is logged.
This is the opposite of
.Dv LOG_NDELAY
and is the default behaviour when neither option is specified.
.It Dv LOG_PERROR
Write the message to standard error output as well as to the system log.
.It Dv LOG_PID
Log the process ID with each message; useful for identifying
instantiations of daemons.
.El
.Pp
The
.Fa facility
parameter encodes a default facility to be assigned to all messages
that do not have an explicit facility encoded.
.Pp
The
.Fn openlog_r
function is the reentrant version of the
.Fn openlog
function.
It takes an additional pointer to a
.Fa syslog_data
structure.
This function must be used in conjunction with the other
reentrant functions.
.Pp
The
.Fn closelog
function can be used to close the log file.
.Fn closelog_r
does the same thing but in a reentrant way and takes an additional
pointer to a
.Fa syslog_data
structure.
.Pp
The
.Fn setlogmask
function sets the log priority mask to
.Fa maskpri
and returns the previous mask.
Calls to
.Fn syslog
with a priority not set in
.Fa maskpri
are rejected.
The mask for an individual priority
.Fa pri
is calculated by the macro
.Fn LOG_MASK pri ;
the mask for all priorities up to and including
.Fa toppri
is given by the macro
.Fn LOG_UPTO toppri .
The default allows all priorities to be logged, which
corresponds to
.Li setlogmask(LOG_UPTO(LOG_DEBUG)) .
.Pp
The
.Fn setlogmask_r
function is the reentrant version of
.Fn setlogmask .
It takes an additional pointer to a
.Fa syslog_data
structure.
.Sh RETURN VALUES
The
.Fn closelog ,
.Fn closelog_r ,
.Fn openlog ,
.Fn openlog_r ,
.Fn syslog ,
.Fn syslog_r ,
.Fn vsyslog ,
and
.Fn vsyslog_r
functions return no value.
.Pp
The routines
.Fn setlogmask
and
.Fn setlogmask_r
always return the previous log mask level.
.Sh EXAMPLES
.Bd -literal -offset indent
syslog(LOG_ALERT, "who: internal error 23");

openlog("ftpd", LOG_PID | LOG_NDELAY, LOG_FTP);

setlogmask(LOG_UPTO(LOG_ERR));

syslog(LOG_INFO, "Connection from host %d", CallingHost);

syslog(LOG_INFO|LOG_LOCAL2, "foobar error: %m");
.Ed
.Pp
For the reentrant functions:
.Bd -literal -offset indent
struct syslog_data sdata = SYSLOG_DATA_INIT;

syslog_r(LOG_INFO|LOG_LOCAL2, &sdata, "foobar error: %m");
.Ed
.Sh SEE ALSO
.Xr logger 1 ,
.Xr syslogd 8
.Sh HISTORY
These
functions appeared in
.Bx 4.2 .
The reentrant functions appeared in
.Ox 3.1 .
.Sh CAVEATS
It is important never to pass a string with user-supplied data as a
format without using
.Ql %s .
An attacker can put format specifiers in the string to mangle the stack,
leading to a possible security hole.
This holds true even if the string has been built
.Dq by hand
using a function like
.Fn snprintf ,
as the resulting string may still contain user-supplied conversion specifiers
for later interpolation by
.Fn syslog .
.Pp
Always be sure to use the proper secure idiom:
.Bd -literal -offset indent
syslog(priority, "%s", string);
.Ed
.Pp
.Fn syslog_r
and the other reentrant functions should only be used where
reentrancy is required (for instance, in a signal handler).
.Fn syslog
being not reentrant, only
.Fn syslog_r
should be used here.
For more information about reentrancy and signal handlers, see
.Xr signal 3 .
@


1.33
log
@some Xr adjustment to catch up with MLINKS removal;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.32 2014/07/10 09:08:39 deraadt Exp $
d30 1
a30 1
.Dd $Mdocdate: July 10 2014 $
d176 1
a176 3
is selected from the following
.Em ordered
(high to low) list:
d301 3
a303 1
The default allows all priorities to be logged.
@


1.32
log
@Don't document the guts of struct syslog_data.  This man page only needs
to demonstrate to use it with syslog_r.
pointed out by millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.31 2013/06/05 03:39:22 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d109 1
a109 1
.Xr varargs 3 .
@


1.31
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.30 2013/06/01 16:57:51 espie Exp $
d30 1
a30 1
.Dd $Mdocdate: June 1 2013 $
a67 14
.Bd -literal

struct syslog_data {
        int             log_file;
        int             connected;
        int             opened;
        int             log_stat;
        const char     *log_tag;
        int             log_fac;
        int             log_mask;
};

#define SYSLOG_DATA_INIT {-1, 0, 0, 0, NULL, LOG_USER, 0xff}
.Ed
a103 22
The
.Fa syslog_data
structure is composed of the following elements:
.Bl -tag -width connected
.It Dv log_file
contains the file descriptor of the file where the message is logged
.It Dv connected
indicates if connect has been done
.It Dv opened
indicates if
.Fn openlog_r
has been called
.It Dv log_stat
status bits, set by
.Fn openlog_r
.It Dv log_tag
string to tag the entry with
.It Dv log_fac
facility code
.It Dv log_mask
mask of priorities to be logged
.El
@


1.30
log
@reorder syslog params descr to make sense, and minor tweaks, plus jmc@@'s
input.
okay jmc@@, schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.29 2013/03/11 13:26:35 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: March 11 2013 $
d46 2
a47 2
.Fd #include <syslog.h>
.Fd #include <stdarg.h>
@


1.29
log
@document LOG_ODELAY; from Daniel Dickman
ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.28 2008/05/07 12:05:35 claudio Exp $
d30 1
a30 1
.Dd $Mdocdate: May 7 2008 $
d152 61
a212 4
.Dq level .
The facility describes the part of the system
generating the message.
The level is selected from the following
d240 1
a240 1
is used the same way as
d299 1
a299 53
that do not have an explicit facility encoded:
.Bl -tag -width LOG_AUTHPRIV
.It Dv LOG_AUTH
The authorization system:
.Xr login 1 ,
.Xr su 1 ,
.Xr getty 8 ,
etc.
.It Dv LOG_AUTHPRIV
The same as
.Dv LOG_AUTH ,
but logged to a file readable only by
selected individuals.
.It Dv LOG_CRON
The cron daemon,
.Xr cron 8 .
.It Dv LOG_DAEMON
System daemons, such as
.Xr dhcpd 8 ,
that are not provided for explicitly by other facilities.
.It Dv LOG_FTP
The file transfer protocol daemon,
.Xr ftpd 8 .
.It Dv LOG_KERN
Messages generated by the kernel.
These cannot be generated by any user processes.
.It Dv LOG_LPR
The line printer spooling system:
.Xr lpr 1 ,
.Xr lpc 8 ,
.Xr lpd 8 ,
etc.
.It Dv LOG_MAIL
The mail system.
.It Dv LOG_NEWS
The network news system.
.It Dv LOG_SYSLOG
Messages generated internally by
.Xr syslogd 8 .
.It Dv LOG_USER
Messages generated by random user processes.
This is the default facility identifier if none is specified.
.It Dv LOG_UUCP
The
.Tn UUCP
system.
.It Dv LOG_LOCAL0
Reserved for local use.
Similarly for
.Dv LOG_LOCAL1
through
.Dv LOG_LOCAL7 .
.El
@


1.28
log
@routed is no more so use dhcpd in these examples instead. OK norby@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.27 2007/05/31 19:19:29 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d225 7
@


1.27
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.26 2006/10/26 13:52:06 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate$
d253 1
a253 1
.Xr routed 8 ,
@


1.26
log
@various fixes from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.25 2005/07/22 03:16:58 jaredy Exp $
d30 1
a30 1
.Dd June 4, 1993
@


1.25
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.24 2004/04/16 10:48:39 jmc Exp $
d128 1
a128 1
.Xr openlog_r 3
d132 1
a132 1
.Xr openlog_r 3
d185 1
a185 1
except that it takes an additional pointer on a
d294 1
a294 1
It takes an additional pointer on a
d305 1
a305 1
pointer on a
d333 1
a333 1
It takes an additional pointer on a
@


1.24
log
@more display/list fixes, and a little whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.23 2003/06/02 20:18:35 millert Exp $
d115 3
a117 1
The SYSLOG_DATA_INIT constant is used for this purpose.
d226 1
a226 1
Write the message to standard error output as well to the system log.
d304 1
a304 1
do the same thing but in a reentrant way and takes an additional
d344 1
a344 1
.Fn vsyslog
d386 1
a386 1
An attacker can put format specifiers in the string to mangle your stack,
d388 1
a388 1
This holds true even if you have built the string
d403 1
a403 1
reentrancy is required (for instance in a signal handler).
@


1.23
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.22 2003/05/30 17:21:06 jmc Exp $
d69 1
a69 1
.Pp
d79 1
a79 1
.Pp
d353 1
a353 1
.Bd -literal -offset indent -compact
d363 1
a364 1
.Ed
d366 1
a366 2
.Pp
.Bd -literal -offset indent -compact
@


1.22
log
@- correct macro usage
- section reorder
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.21 2003/04/30 06:28:10 jmc Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.21
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.20 2003/01/19 23:13:04 millert Exp $
d39 1
a39 1
.Nm syslog_r,
d41 1
a41 1
.Nm vsyslog_r,
d43 1
a43 1
.Nm openlog_r,
d45 2
a46 2
.Nm closelog_r,
.Nm setlogmask,
d110 1
a110 1
.Xr syslog 3
@


1.20
log
@programs that chroot must use LOG_NDELAY; deraadt@@ OK
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.19 2002/07/05 04:21:06 deraadt Exp $
d125 1
a125 1
contains the file descriptor of the file where the message is logged.
d131 1
a131 1
has been called.
d185 1
a185 1
is used the same way than
d187 1
a187 1
except than it takes an additional pointer on a
d328 1
a328 1
.Fn LOG_UPTO toppri ; .
@


1.19
log
@more refinement
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.18 2002/07/02 01:59:42 stevesk Exp $
d224 3
@


1.18
log
@missing priority argument in example; ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.17 2002/07/01 04:47:12 deraadt Exp $
d73 1
d75 7
a81 7
        int     log_file;
        int     connected;
        int     opened;
        int     log_stat;
        const char      *log_tag;
        int     log_fac;
        int     log_mask;
d83 1
a83 1

@


1.17
log
@indent
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.16 2002/04/30 16:31:42 mpech Exp $
d397 1
a397 1
syslog("%s", string);
@


1.16
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.15 2001/11/08 11:12:09 mpech Exp $
d366 1
@


1.15
log
@My part of help, while i'm here:
o) better -mdoc design;
o) add section number to .Xr;
o) close .Bd;
o) start new sentence on a new line;

jjbg@@, millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.14 2001/11/05 09:48:30 jjbg Exp $
d107 1
a107 1
.Fn syslog_r 
d111 1
a111 1
It takes a pointer to a 
d118 2
a119 2
The SYSLOG_DATA_INIT constant is used for this purpose. 
The 
d128 2
a129 2
indicates if 
.Xr openlog_r 3 
d184 1
a184 1
is used the same way than 
d189 2
a190 2
It is a reentrant version of the 
.Fn vsyslog 
d192 1
a192 1
.Pp 
d289 2
a290 2
function is the reentrant version of the 
.Fn openlog 
d292 1
a292 1
It takes an additional pointer on a 
d296 1
a296 1
reentrant functions. 
d300 1
a300 1
function can be used to close the log file. 
d303 1
a303 1
pointer on a 
d399 2
a400 2
.Fn syslog_r 
and the other reentrant functions should only be used where 
d403 2
a404 2
being not reentrant, only 
.Fn syslog_r 
d406 1
a406 1
For more information about reentrancy and signal handlers, see 
@


1.14
log
@Some examples of how to use syslog_r() and why it is useful. deraadt@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.13 2001/10/24 08:16:42 jjbg Exp $
a72 1

d84 1
d110 2
a111 1
function. It takes a pointer to a 
d114 2
a115 1
information. This parameter must be initialized before
d117 2
a118 1
is called. The SYSLOG_DATA_INIT constant is used for this purpose. 
d188 2
a189 1
structure. It is a reentrant version of the 
d213 1
a213 1
.Xr syslogd
d218 1
a218 1
.Xr syslogd
d291 2
a292 1
function. It takes an additional pointer on a 
d294 2
a295 1
structure. This function must be used in conjunction with the other
d405 2
a406 2
should be used here. For more information about reentrancy and signal
handlers, see 
@


1.13
log
@syslog_r() implementation. deraadt@@ ok.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.12 2001/07/27 16:41:20 marc Exp $
d357 7
d392 10
@


1.12
log
@varargs.h -> stdarg.h
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.11 2001/02/17 17:15:23 pjanzen Exp $
d39 1
d41 1
d43 1
d45 3
a47 1
.Nm setlogmask
d55 2
d59 2
d63 2
d66 2
d70 15
d107 33
d180 10
d284 9
d294 6
a299 1
function can be used to close the log file.
d320 8
d331 1
d333 1
d335 2
d338 1
a338 1
.Fn vsyslog
d341 1
a341 1
The routine
d343 3
a345 1
always returns the previous log mask level.
d365 2
@


1.11
log
@It's not that I mind split infinitives.  I just like to save'em for when
they're really needed.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.10 2000/12/24 00:30:52 aaron Exp $
d46 1
a46 1
.Fd #include <varargs.h>
@


1.10
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.9 2000/08/25 17:43:14 aaron Exp $
d267 1
a267 1
It is important to never pass a string with user-supplied data as a
d280 1
a280 1
Be sure to always use the proper secure idiom:
@


1.9
log
@In the format string bug description under CAVEATS, clarify what we mean by
building the string ``by hand'' using a function like snprintf(); deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.8 2000/07/16 22:44:58 millert Exp $
d60 1
a60 2
function
writes
d80 1
a80 2
function
is an alternate form in which the arguments have already been captured
d120 1
a120 3
function
provides for more specialized processing of the messages sent
by
d214 1
a214 2
function
can be used to close the log file.
d218 1
a218 2
function
sets the log priority mask to
@


1.8
log
@Stronger caveat wrt stack smashing via % escapes.  Each man page
carries the same caveat...
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.7 1999/07/09 13:35:19 aaron Exp $
d274 2
a275 1
format without using %s.
d282 1
a282 2
as the attacker can escape the percent sign
.Pq Sq %
@


1.7
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.6 1999/06/06 06:57:45 pjanzen Exp $
d272 18
@


1.6
log
@Grammatical, spelling, and format fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.5 1999/06/05 03:44:54 aaron Exp $
d145 1
a145 1
.It Dv LOG_NDELAY 
d214 1
a214 1
.El 
d270 1
a270 1
functions appeared in 
@


1.5
log
@change some .Em/.Va to .Li, looks nicer
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.4 1999/05/29 20:07:14 aaron Exp $
d256 1
d258 1
d260 1
d262 1
@


1.4
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.3 1999/05/23 14:11:00 aaron Exp $
d65 2
a66 2
logged-in users, or forwarded to other machines as appropriate. (See
.Xr syslogd 8 . )
d73 1
a73 1
message. (As denoted by the global variable
d76 1
a76 1
.Xr strerror 3 . )
d91 1
a91 1
.Em level .
d135 1
a135 1
.Em OR Ns 'ing
d144 1
a144 1
.Pq Dq Pa /dev/console.
d155 1
a155 1
Log the process id with each message: useful for identifying
d176 1
a176 1
The cron daemon:
d183 1
a183 1
The file transfer protocol daemon:
d205 3
a207 1
The uucp system.
d242 1
a242 1
The routines
d245 1
a245 1
.Fn syslog
d248 1
a248 1
return no value.
a255 1

a256 1

a257 1

a258 1

@


1.3
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.2 1996/08/19 08:26:30 tholo Exp $
d135 1
a135 1
.Tn OR Ns 'ing
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: syslog.3,v 1.5 1995/08/12 05:02:46 jtc Exp $
d36 1
a36 1
.Os BSD 4.2
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: syslog.3,v 1.5 1995/08/12 05:02:46 jtc Exp $
a32 2
.\"
.\"     @@(#)syslog.3	8.1 (Berkeley) 6/4/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
