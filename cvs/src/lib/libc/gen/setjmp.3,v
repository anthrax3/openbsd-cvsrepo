head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.8
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.25.0.6
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.2
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.24.0.10
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.24.0.12
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.4
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.24.0.8
	OPENBSD_5_6_BASE:1.24
	OPENBSD_5_5:1.24.0.6
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.22.0.24
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.22
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.20
	OPENBSD_5_0:1.22.0.18
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.16
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.14
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.10
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.12
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.8
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.6
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.4
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.22.0.2
	OPENBSD_4_2_BASE:1.22
	OPENBSD_4_1:1.21.0.8
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.6
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.4
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.21.0.2
	OPENBSD_3_8_BASE:1.21
	OPENBSD_3_7:1.20.0.6
	OPENBSD_3_7_BASE:1.20
	OPENBSD_3_6:1.20.0.4
	OPENBSD_3_6_BASE:1.20
	OPENBSD_3_5:1.20.0.2
	OPENBSD_3_5_BASE:1.20
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.15.0.2
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.25
date	2016.05.23.00.18.56;	author guenther;	state Exp;
branches;
next	1.24;
commitid	NDWaRB3omHTr2Q6W;

1.24
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.20;

1.20
date	2004.03.02.19.11.38;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2004.03.02.15.56.24;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2004.03.01.19.55.59;	author otto;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.04.30.06.28.10;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.03.06.19.54.52;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.13;

1.13
date	2001.11.20.18.59.08;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.01.12.21.28.19;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.24.00.30.51;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.18.03.01.27;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.18;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.06.06.57.45;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	99.06.05.03.44.54;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.29.21.24.19;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.23.14.11.00;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.10.17.56.28;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.03.10.21.25.26;	author pjanzen;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.25.50;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.57;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.57;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Stop supporting longjmperror(); it's not used, not portable, and the checks
longjmp performs can't really be relied upon, even after we got rid of the
false positives...

ok millert@@ deraadt@@
@
text
@.\"	$OpenBSD: setjmp.3,v 1.24 2013/07/17 05:42:11 schwarze Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: July 17 2013 $
.Dt SETJMP 3
.Os
.Sh NAME
.Nm sigsetjmp ,
.Nm siglongjmp ,
.Nm setjmp ,
.Nm longjmp ,
.Nm _setjmp ,
.Nm _longjmp
.Nd non-local jumps
.Sh SYNOPSIS
.In setjmp.h
.Ft int
.Fn sigsetjmp "sigjmp_buf env" "int savemask"
.Ft void
.Fn siglongjmp "sigjmp_buf env" "int val"
.Ft int
.Fn setjmp "jmp_buf env"
.Ft void
.Fn longjmp "jmp_buf env" "int val"
.Ft int
.Fn _setjmp "jmp_buf env"
.Ft void
.Fn _longjmp "jmp_buf env" "int val"
.Sh DESCRIPTION
The
.Fn sigsetjmp ,
.Fn setjmp ,
and
.Fn _setjmp
functions save their calling environment in
.Fa env .
Each of these functions returns 0.
.Pp
The corresponding
.Fn longjmp
functions restore the environment saved by the most recent
invocation of the respective
.Fn setjmp
function.
They then return so that program execution continues as if the corresponding
invocation of the
.Fn setjmp
call had just returned the value specified by
.Fa val ,
instead of 0.
The value specified by
.Fa val
must be non-zero; a 0 value is treated as 1 to allow the programmer
to differentiate between a direct invocation of
.Fn setjmp
and a return via
.Fn longjmp .
.Pp
Pairs of calls may be intermixed; i.e., both
.Fn sigsetjmp
and
.Fn siglongjmp
as well as
.Fn setjmp
and
.Fn longjmp
combinations may be used in the same program.
However, individual calls may not \(em e.g., the
.Fa env
argument to
.Fn setjmp
may not be passed to
.Fn siglongjmp .
.Pp
The
.Fn longjmp
routines may not be called after the routine which called the
.Fn setjmp
routines returns.
.Pp
All accessible objects have values as of the time the
.Fn longjmp
routine was called, except that the values of objects of automatic storage
invocation duration that do not have the
.Li volatile
type and have been changed between the
.Fn setjmp
invocation and
.Fn longjmp
call are indeterminate.
.Pp
The
.Fn setjmp Ns / Ns Fn longjmp
function pairs save and restore the signal mask while the
.Fn _setjmp Ns / Ns Fn _longjmp
function pairs save and restore only the register set and the stack (see
.Xr sigprocmask 2 ) .
.Pp
The
.Fn sigsetjmp Ns / Ns Fn siglongjmp
function pairs save and restore the signal mask if the argument
.Fa savemask
is non-zero.
Otherwise, only the register set and the stack are saved.
.Pp
In other words,
.Fn setjmp Ns / Ns Fn longjmp
are functionally equivalent to
.Fn sigsetjmp Ns / Ns Fn siglongjmp
when
.Fn sigsetjmp
is called with a non-zero
.Fa savemask
argument.
Conversely,
.Fn _setjmp Ns / Ns Fn _longjmp
are functionally equivalent to
.Fn sigsetjmp Ns / Ns Fn siglongjmp
when
.Fn sigsetjmp
is called with a zero-value
.Fa savemask .
.Pp
The
.Fn sigsetjmp Ns / Ns Fn siglongjmp
interfaces are preferred for maximum portability.
.Sh SEE ALSO
.Xr sigprocmask 2
.Sh STANDARDS
The
.Fn setjmp
and
.Fn longjmp
functions conform to
.St -ansiC .
The
.Fn sigsetjmp
and
.Fn siglongjmp
functions conform to
.St -p1003.1-90 .
.Sh HISTORY
The
.Fn setjmp
and
.Fn longjmp
functions first appeared in the Programmer's Workbench (PWB/UNIX).
.Sh CAVEATS
Historically, on
.At V ,
the
.Fn setjmp Ns / Ns Fn longjmp
functions have been equivalent to the
.Bx
.Fn _setjmp Ns / Ns Fn _longjmp
functions and do not restore the signal mask.
Because of this discrepancy, the
.Fn sigsetjmp Ns / Ns Fn siglongjmp
interfaces should be used if portability is desired.
.Pp
Use of
.Fn longjmp
or
.Fn siglongjmp
from inside a signal handler is not as easy as it might seem.
Generally speaking, all possible code paths between the
.Fn setjmp
and
.Fn longjmp
must be signal race safe, as discussed in
.Xr signal 3 .
Furthermore, the code paths must not do resource management
(such as
.Xr open 2
or
.Xr close 2 )
without blocking the signal in question, or resources might
be mismanaged.
Obviously this makes
.Fn longjmp
much less useful than previously thought.
@


1.24
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.23 2013/06/05 03:39:22 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2013 $
d43 1
a43 2
.Nm _longjmp ,
.Nm longjmperror
a58 2
.Ft void
.Fn longjmperror void
d127 1
a127 1
.Xr sigmask 3 ) .
a156 20
.Sh ERRORS
If the contents of the
.Fa env
are corrupted or correspond to an environment that has already returned,
the
.Fn longjmp
routine calls the routine
.Xr longjmperror 3 .
If
.Fn longjmperror
returns, the program is aborted (see
.Xr abort 3 ) .
The default version of
.Fn longjmperror
prints the message
.Dq Li longjmp botch
to standard error and returns.
User programs wishing to exit more gracefully should write their own
versions of
.Fn longjmperror .
d158 1
a158 3
.Xr sigaction 2 ,
.Xr sigaltstack 2 ,
.Xr signal 3
@


1.23
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.22 2007/05/31 19:19:28 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d197 6
@


1.22
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.21 2005/07/22 03:16:58 jaredy Exp $
d34 1
a34 1
.Dd $Mdocdate$
d47 1
a47 1
.Fd #include <setjmp.h>
@


1.21
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.20 2004/03/02 19:11:38 millert Exp $
d34 1
a34 1
.Dd June 4, 1993
@


1.20
log
@fix typo; fgsch@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.19 2004/03/02 15:56:24 millert Exp $
d114 1
a114 1
All accessible objects have values as of the time
d127 1
a127 1
function pairs save and restore the signal mask while
@


1.19
log
@Better wording for the longjmp(X, 0) case.  OK otto@@, deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.18 2004/03/01 19:55:59 otto Exp $
d87 1
a87 1
to differentiate between a direct invovation of
@


1.18
log
@Be explicit about the return value of setjmp() when longjmp(..., 0) is called.
ok tedu@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.17 2003/06/02 20:18:34 millert Exp $
d84 1
a84 3
In this case
.Fn setjmp
never returns 0; if the value of the
d86 2
a87 3
argument to
.Fn longjmp
is 0,
d89 2
a90 1
returns 1.
@


1.17
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.16 2003/04/30 06:28:10 jmc Exp $
d84 9
@


1.16
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.15 2003/03/06 19:54:52 jmc Exp $
d18 1
a18 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.15
log
@.Xr's;
typos in man page section

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.14 2002/04/30 16:31:42 mpech Exp $
d164 1
a164 1
.Fn longjmperror 3 .
d167 1
a167 1
returns the program is aborted (see
@


1.14
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.13 2001/11/20 18:59:08 deraadt Exp $
d127 1
a127 1
.Xr sigmask 2 ) .
@


1.13
log
@a few thoughts about longjmp in signal handlers
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.12 2001/01/12 21:28:19 millert Exp $
d149 1
a149 1
when 
@


1.12
log
@Clarify sigsetjmp vs. setjmp vs. _setjmp.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.11 2000/12/24 00:30:51 aaron Exp $
d206 22
@


1.11
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.10 2000/04/18 03:01:27 aaron Exp $
d135 22
d194 12
@


1.10
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.9 1999/07/09 13:35:18 aaron Exp $
d131 1
a131 2
function
pairs save and restore the signal mask if the argument
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.8 1999/06/06 06:57:45 pjanzen Exp $
d97 2
a98 2
combinations may be used in the same program.  However, individual
calls may not \(em e.g., the
d134 2
a135 1
is non-zero.  Otherwise, only the register set and the stack are saved.
@


1.8
log
@Grammatical, spelling, and format fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.6 1999/05/29 21:24:19 aaron Exp $
d166 1
a166 1
The 
@


1.7
log
@change some .Em/.Va to .Li, looks nicer
@
text
@d74 1
a74 1
Each of these functions return 0.
d78 2
a79 3
functions restore the environment saved by their most recent respective
invocations
of the
d89 1
a89 1
Pairs of calls may be intermixed, i.e., both
d98 1
a98 1
calls may not, e.g., the
d134 1
a134 1
is non-zero, otherwise only the register set and the stack are saved.
d138 1
a138 1
are corrupted, or correspond to an environment that has already returned,
@


1.6
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.5 1999/05/23 14:11:00 aaron Exp $
d116 1
a116 1
.Em volatile
@


1.5
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.4 1999/05/10 17:56:28 aaron Exp $
d74 1
a74 1
Each of these functions returns 0.
d86 1
a86 1
call had just returned  the value specified by
d90 1
a90 1
Pairs of calls may be intermixed, i.e. both
d94 1
a94 1
and
d99 1
a99 1
calls may not, e.g. the
d125 1
a125 1
pairs save and restore the signal mask while
d127 2
a128 3
pairs save and restore only the register set and the stack.
(See
.Fn sigmask 2 . )
@


1.4
log
@correct some Xr's which referred to the wrong man page sections
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.3 1999/03/10 21:25:26 pjanzen Exp $
d40 1
a40 1
.Os BSD 4
@


1.3
log
@fix comma splices involving 'however'
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.2 1996/08/19 08:25:50 tholo Exp $
d148 1
a148 1
.Xr abort 2 ) .
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: setjmp.3,v 1.5 1995/02/27 05:50:26 cgd Exp $
d98 1
a98 1
combinations may be used in the same program, however, individual
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: setjmp.3,v 1.5 1995/02/27 05:50:26 cgd Exp $
a36 2
.\"
.\"     @@(#)setjmp.3	8.1 (Berkeley) 6/4/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
