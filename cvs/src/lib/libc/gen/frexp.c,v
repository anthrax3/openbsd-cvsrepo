head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.18
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.1.0.2
	OPENBSD_3_7_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2013.07.03.04.46.36;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2012.12.05.23.19.59;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.08.22.28.33;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.08.19.21.42;	author martynas;	state dead;
branches;
next	1.5;

1.5
date	2011.05.30.17.28.15;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.10.01.15.02;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.09.20.32.06;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.08.08.05.34;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.02.01.15.12.28;	author millert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@test LDBL_MANT_DIG == DBL_MANT_DIG instead of hardcoding 53.
-> test becomes meaningful on vax
No actual change, no bump
okay martynas@@
@
text
@/*	$OpenBSD: frexp.c,v 1.9 2013/03/28 18:09:38 martynas Exp $	*/

/*-
 * Copyright (c) 2004 David Schultz <das@@FreeBSD.ORG>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: frexp.c,v 1.1 2004/07/18 21:23:39 das Exp $
 */

#include <sys/types.h>
#include <machine/ieee.h>
#include <float.h>
#include <math.h>

double
frexp(double v, int *ex)
{
	union  {
		double v;
		struct ieee_double s;
	} u;

	u.v = v;
	switch (u.s.dbl_exp) {
	case 0:		/* 0 or subnormal */
		if ((u.s.dbl_fracl | u.s.dbl_frach) == 0) {
			*ex = 0;
		} else {
			/*
			 * The power of 2 is arbitrary, any value from 54 to
			 * 1024 will do.
			 */
			u.v *= 0x1.0p514;
			*ex = u.s.dbl_exp - (DBL_EXP_BIAS - 1 + 514);
			u.s.dbl_exp = DBL_EXP_BIAS - 1;
		}
		break;
	case DBL_EXP_INFNAN:	/* Inf or NaN; value of *ex is unspecified */
		break;
	default:	/* normal */
		*ex = u.s.dbl_exp - (DBL_EXP_BIAS - 1);
		u.s.dbl_exp = DBL_EXP_BIAS - 1;
		break;
	}
	return (u.v);
}

#if	LDBL_MANT_DIG == DBL_MANT_DIG
__strong_alias(frexpl, frexp);
#endif	/* LDBL_MANT_DIG == DBL_MANT_DIG */
@


1.9
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.8 2012/12/05 23:19:59 deraadt Exp $	*/
d69 1
a69 1
#if	LDBL_MANT_DIG == 53
d71 1
a71 1
#endif	/* LDBL_MANT_DIG == 53 */
@


1.8
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.7 2011/07/08 22:28:33 martynas Exp $	*/
a30 2
/* LINTLIBRARY */

d70 1
a70 6
#ifdef	lint
/* PROTOLIB1 */
long double frexpl(long double, int *);
#else	/* lint */
__weak_alias(frexpl, frexp);
#endif	/* lint */
@


1.7
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.5 2011/05/30 17:28:15 martynas Exp $	*/
a33 1
#include <sys/cdefs.h>
@


1.6
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@@


1.5
log
@Trick lint into recording the right prototypes in the llib-lc.ln
database on platforms without extended-precision floating-point
support.

Seems like a reasonable approach to millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.4 2008/12/10 01:15:02 martynas Exp $	*/
@


1.4
log
@use sys/cdefs.h;  pointed out by theo
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.3 2008/12/09 20:32:06 martynas Exp $	*/
d31 2
d72 5
a76 2
#if LDBL_MANT_DIG == 53
#ifdef __weak_alias
d78 2
a79 2
#endif /* __weak_alias */
#endif /* LDBL_MANT_DIG == 53 */
@


1.3
log
@ditto frexpl and ldexpl
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.2 2005/08/08 08:05:34 espie Exp $	*/
d32 1
a32 1
#include <machine/cdefs.h>
@


1.2
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: frexp.c,v 1.1 2005/02/01 15:12:28 millert Exp $	*/
d32 1
d34 1
d69 6
@


1.1
log
@Replace broken frexp() with a working one from FreeBSD.  There's
no need to have a copy for each platform with ieee floating point,
only vax needs a special version (which probably has similar bugs).
OK and with help from otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: frexp.c,v 1.6 2003/06/25 21:15:04 deraadt Exp $";
#endif /* LIBC_SCCS and not lint */
@

