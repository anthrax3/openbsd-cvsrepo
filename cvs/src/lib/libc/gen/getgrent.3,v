head	1.22;
access;
symbols
	OPENBSD_6_2:1.22.0.10
	OPENBSD_6_2_BASE:1.22
	OPENBSD_6_1:1.22.0.8
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.22.0.4
	OPENBSD_6_0_BASE:1.22
	OPENBSD_5_9:1.22.0.2
	OPENBSD_5_9_BASE:1.22
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.20
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.18
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.16
	OPENBSD_5_0:1.16.0.14
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.12
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.10
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.6
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.8
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.12
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.10
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.8
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.6
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.10.0.10
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.8
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.6
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.4
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.2
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.22
date	2015.11.04.08.36.10;	author jmc;	state Exp;
branches;
next	1.21;
commitid	b0twtHW9NWLVX2MQ;

1.21
date	2015.10.30.03.12.33;	author guenther;	state Exp;
branches;
next	1.20;
commitid	MrKC7Lv5XAKEU8fC;

1.20
date	2015.01.15.03.19.43;	author millert;	state Exp;
branches;
next	1.19;
commitid	03UbFv1UIycIAMP6;

1.19
date	2014.03.12.11.36.06;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2008.07.28.20.19.32;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2008.07.28.16.27.39;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.09.04.00.19.38;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.30.14.00.32;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.24.00.30.48;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.18.03.01.26;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.23.22.14.03;	author d;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.23.22.09.01;	author d;	state Exp;
branches;
next	1.6;

1.6
date	99.07.09.13.35.16;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.06.05.03.44.53;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.04.01.30.11;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.05.29.19.11.11;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.23.27;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.54;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.54;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@clean up HISTORY;
@
text
@.\"	$OpenBSD: getgrent.3,v 1.21 2015/10/30 03:12:33 guenther Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 30 2015 $
.Dt GETGRENT 3
.Os
.Sh NAME
.Nm getgrent ,
.Nm getgrnam ,
.Nm getgrnam_r ,
.Nm getgrgid ,
.Nm getgrgid_r ,
.Nm setgroupent ,
.Nm setgrent ,
.Nm endgrent
.Nd group database operations
.Sh SYNOPSIS
.In grp.h
.Ft struct group *
.Fn getgrent void
.Ft struct group *
.Fn getgrnam "const char *name"
.Ft int
.Fn getgrnam_r "const char *name" "struct group *grp" "char *buf" "size_t bufsize" "struct group **result"
.Ft struct group *
.Fn getgrgid "gid_t gid"
.Ft int
.Fn getgrgid_r "gid_t gid" "struct group *grp" "char *buf" "size_t bufsize" "struct group **result"
.Ft int
.Fn setgroupent "int stayopen"
.Ft void
.Fn setgrent void
.Ft void
.Fn endgrent void
.Sh DESCRIPTION
These functions operate on the group database file
.Pa /etc/group
which is described
in
.Xr group 5 .
Each line of the database is defined by the structure
.Li struct group
found in the include
file
.In grp.h :
.Bd -literal -offset indent
struct group {
	char	*gr_name;	/* group name */
	char	*gr_passwd;	/* group password */
	gid_t	gr_gid;		/* group id */
	char	**gr_mem;	/* group members */
};
.Ed
.Pp
The functions
.Fn getgrnam
and
.Fn getgrgid
search the group database for the given group name pointed to by
.Fa name
or the group ID pointed to by
.Fa gid ,
respectively, returning the first one encountered.
Identical group names or group GIDs may result in undefined behavior.
.Pp
.Fn getgrent
sequentially reads the group database and is intended for programs
that wish to step through the complete list of groups.
.Pp
All three routines will open the group file for reading, if necessary.
.Pp
.Fn setgroupent
opens the file, or rewinds it if it is already open.
If
.Fa stayopen
is non-zero, file descriptors are left open, significantly speeding
subsequent function calls.
This functionality is unnecessary for
.Fn getgrent
as it doesn't close its file descriptors by default.
It should also
be noted that it is dangerous for long-running programs to use this
functionality as the group file may be updated.
.Pp
.Fn setgrent
is equivalent to
.Fn setgroupent
with an argument of zero.
.Pp
The
.Fn endgrent
function closes any open files.
.Pp
The
.Fn getgrgid_r
and
.Fn getgrnam_r
functions both update the group structure pointed to by
.Fa grp
and store a pointer to that structure at the location pointed to by
.Fa result .
The structure is filled with an entry from the group database with a
matching
.Fa gid
or
.Fa name .
Storage referenced by the group structure will be allocated from the memory
provided with the
.Fa buf
parameter, which is
.Fa bufsiz
characters in size.
The maximum size needed for this buffer can be determined with
.Fn sysconf _SC_GETGR_R_SIZE_MAX .
.Ss YP support
If YP is active, the functions
.Fn getgrent
and
.Fn getgrnam
also use the
.Pa group.byname
YP map and the function
.Fn getgrgid
also uses the
.Pa group.bygid
YP map in addition to the group file,
respecting the order of normal and YP entries in the group file.
.Sh RETURN VALUES
The functions
.Fn getgrent ,
.Fn getgrnam ,
and
.Fn getgrgid
return a pointer to the group entry if successful; if end-of-file
is reached or an error occurs a
.Dv NULL
pointer is returned.
.Pp
The
.Fn setgroupent
function returns the value 1 if successful, otherwise 0.
.Pp
The
.Fn endgrent
and
.Fn setgrent
functions have no return value.
.Pp
The functions
.Fn getgrgid_r
and
.Fn getgrnam_r
update
.Ar result
to point to
.Ar grp
if a match is found or set it to
.Dv NULL
if no match is found or an error occurs.
They return 0 on success, even if no match is found,
or an error number if an error occurs; see
.Sx ERRORS .
.Sh FILES
.Bl -tag -width /etc/group -compact
.It Pa /etc/group
group database file
.El
.Sh ERRORS
The
.Fn getgruid_r
and
.Fn getgrnam_r
functions may fail if:
.Bl -tag -width Er
.It Bq Er ERANGE
The storage supplied via
.Fa buf
and
.Fa bufsize
is too small and cannot contain all the strings to be returned in
.Fa grp .
.El
.Pp
The
.Fn getgrent ,
.Fn getgrgid ,
.Fn getgrgid_r ,
.Fn getgrnam ,
and
.Fn getgrnam_r
functions may also fail for any of the errors specified for
.Xr fgets 3 ,
.Xr getc 3 ,
and
.Xr strtoul 3 .
If YP is active, they may also fail due to errors caused by the YP subsystem.
.Pp
The
.Fn setgroupent
function may fail for any of the errors specified for
.Xr fopen 3 .
.Pp
The
.Fn endgrent ,
.Fn getgrgid_r ,
.Fn getgrnam_r ,
and
.Fn setgrent
functions do not set errno.
.Sh SEE ALSO
.Xr getpwent 3 ,
.Xr sysconf 3 ,
.Xr ypclnt 3 ,
.Xr group 5 ,
.Xr yp 8
.Sh STANDARDS
The functions
.Fn getgrgid ,
.Fn getgrgid_r ,
.Fn getgrnam ,
and
.Fn getgrnam_r
are compliant with the
.St -p1003.1-2008
specification.
.Pp
The functions
.Fn endgrent ,
.Fn getgrent ,
and
.Fn setgrent
are compliant with the X/Open System Interfaces option of the
.St -p1003.1-2008
specification.
.Pp
.Sx YP support
and the
.Fn setgroupent
function are extensions to that specification.
.Sh HISTORY
The functions
.Fn endgrent ,
.Fn getgrent ,
.Fn getgrnam ,
.Fn getgrgid ,
and
.Fn setgrent
appeared in
.At v7 .
The
.Fn setgroupent
function appeared in
.Bx 4.3 Reno .
.Pp
The historic function
.Fn setgrfile ,
which allowed the specification of alternate group databases, has
been deprecated and is no longer available.
.Sh BUGS
The functions
.Fn getgrent ,
.Fn getgrnam ,
.Fn getgrgid ,
.Fn setgroupent ,
and
.Fn setgrent
leave their results in an internal static object and return
a pointer to that object.
Subsequent calls to the same function will modify the same object.
.Pp
The functions
.Fn getgrent ,
.Fn endgrent ,
.Fn setgroupent ,
and
.Fn setgrent
are fairly useless in a networked environment and should be
avoided, if possible.
@


1.21
log
@For getgrent.3:
  - delete the commented out setgrfile bits, as well as the MLINK
  - rename getgr{nam,gid}_r()'s 'buffer' parameters to 'buf' to be
    consistent with getpwnam(3) and practically all other section 3 manpages
  - we have sysconf(_SC_GETGR_R_SIZE_MAX) now, so uncomment and revise the text
For getpwnam.3:
 - rename buflen to bufsize for consistency
 - rewrite the description of the getpw{nam,uid}_r functions to
   match the better getgr{nam,gid}_r() description, adding sysconf() bits
Add sysconf(3) to SEE ALSO for both

encouraged by schwarze@@
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.20 2015/01/15 03:19:43 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: January 15 2015 $
d276 1
a276 3
The functions
.Fn setgrfile
and
d278 1
a278 1
appeared in
@


1.20
log
@POSIX does not require an explicit inclusion of sys/types.h to get
uid_t or gid_t (and neither do we).  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.19 2014/03/12 11:36:06 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: March 12 2014 $
a39 1
.\" .Nm setgrfile ,
d50 1
a50 1
.Fn getgrnam_r "const char *name" "struct group *grp" "char *buffer" "size_t bufsize" "struct group **result"
d54 1
a54 1
.Fn getgrgid_r "gid_t gid" "struct group *grp" "char *buffer" "size_t bufsize" "struct group **result"
a56 2
.\" .Ft void
.\" .Fn setgrfile "const char *name"
d135 1
a135 1
.Fa buffer
d139 2
a140 4
.\" The maximum size needed for this buffer can be determined with the
.\" .Dv _SC_GETGR_R_SIZE_MAX
.\" .Xr sysconf 2
.\" parameter.
d203 1
a203 1
.Fa buffer
d238 1
d284 1
a284 1
.Xr setgrfile 3 ,
@


1.19
log
@Add ERRORS and STANDARDS, thanks to brad@@ for the reminder.
Fix the description of the RETURN VALUES of get*_r().
Minor polishing while here.
Feedback and ok jmc@@, ok millert@@ jca@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.18 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
a44 1
.In sys/types.h
@


1.18
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.17 2013/06/05 03:39:22 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d147 1
a147 1
.Sh YP SUPPORT
d167 4
a170 1
is reached or an error occurs a null pointer is returned.
d174 1
d180 1
d185 10
a194 4
store a null pointer at the location pointed to by
.Fa result
and return the error number
if an error occurs, or the requested entry is not found.
d200 42
d247 24
@


1.17
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.16 2008/07/28 20:19:32 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: July 28 2008 $
d75 1
a75 1
.Aq Pa grp.h :
@


1.16
log
@some SEE ALSO fixes;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.15 2008/07/28 16:27:39 deraadt Exp $
d45 2
a46 2
.Fd #include <sys/types.h>
.Fd #include <grp.h>
@


1.15
log
@document which functions use which YP maps; Ingo Schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.14 2007/05/31 19:19:28 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d191 1
d193 1
a193 2
.Xr yp 8 ,
.Xr ypclnt 3
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.13 2004/09/04 00:19:38 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate$
d147 13
d191 3
a193 1
.Xr group 5
@


1.13
log
@password databases -> group databases;
from netbsd -r 1.20;

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.12 2003/06/02 20:18:34 millert Exp $
d30 1
a30 1
.Dd April 19, 1994
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.11 2003/05/30 14:00:32 jmc Exp $
d198 1
a198 1
which allowed the specification of alternate password databases, has
@


1.11
log
@- clean up macro abuse
- section reorder
- merge COMPATIBILITY
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.10 2000/12/24 00:30:48 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.9 2000/04/18 03:01:26 aaron Exp $
d199 1
a199 1
.Sh COMPATIBILITY
@


1.9
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.8 2000/03/23 22:14:03 d Exp $
d126 1
a126 2
function
closes any open files.
d209 1
a209 1
.Fn setgroupent
@


1.8
log
@oops, return values are int
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.7 2000/03/23 22:09:01 d Exp $
d97 2
a98 2
respectively, returning the first one encountered.  Identical group
names or group GIDs may result in undefined behavior.
d107 2
a108 1
opens the file, or rewinds it if it is already open.  If
d111 2
a112 1
subsequent function calls.  This functionality is unnecessary for
d114 2
a115 1
as it doesn't close its file descriptors by default.  It should also
d214 2
a215 3
a pointer to that object. Subsequent calls to
the same function
will modify the same object.
@


1.7
log
@getgrnam_r, getgrgid_r. ok aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.6 1999/07/09 13:35:16 aaron Exp $
d55 1
a55 1
.Ft struct group *
d59 1
a59 1
.Ft struct group *
d171 1
@


1.6
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.5 1999/06/05 03:44:53 aaron Exp $
d40 1
d42 1
d56 2
d59 2
d125 24
d165 7
@


1.5
log
@change some .Em/.Va to .Li, looks nicer
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.4 1999/06/04 01:30:11 aaron Exp $
d130 1
a130 1
The 
@


1.4
log
@After some constructive criticism from pjanzen@@ and some e-mail tag:

   - only use the .Dv NULL form when referring explicitly to a function
     argument or return value
   - otherwise, use these forms:
        o non-null
        o null-terminated (hyphenated form for predicate adjective)
        o else, null terminated, or null terminate, whichever the case
        o null pointer, null byte, null string, etc.
   - may use NUL to refer to an ASCII NUL, but it doesn't need a .Tn macro

In general, capitalizing the word "null" everywhere is unnecessary and makes
the man pages harder to read. The above is consistent with popular programming
texts (i.e., K&R, Stevens).
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.3 1999/05/29 19:11:11 aaron Exp $
d70 1
a70 1
.Em group
@


1.3
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.2 1996/08/19 08:23:27 tholo Exp $
d126 1
a126 3
is reached or an error occurs a
.Dv NULL
pointer is returned.
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: getgrent.3,v 1.8 1995/02/27 04:12:36 cgd Exp $
d70 1
a70 1
.Ar group
d88 3
a90 3
.Ar name
or the group id pointed to by
.Ar gid ,
d92 1
a92 1
names or group gids may result in undefined behavior.
a93 1
The
a94 1
function
a99 1
The
a100 1
function
d104 1
a104 1
functions subsequent calls.  This functionality is unnecessary for
a109 1
The
a110 1
function
d124 1
a124 1
.Fn getgrgid ,
d126 3
a128 1
is reached or an error occurs a null pointer is returned.
d131 1
a131 2
function returns the value 1 if successful, otherwise the value
0 is returned.
d163 1
a163 1
.Fn setgrfile ,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: getgrent.3,v 1.8 1995/02/27 04:12:36 cgd Exp $
a32 2
.\"
.\"     @@(#)getgrent.3	8.2 (Berkeley) 4/19/94
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
