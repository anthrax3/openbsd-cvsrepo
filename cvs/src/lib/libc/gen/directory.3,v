head	1.25;
access;
symbols
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.10
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.6
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.4
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.8
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.18.0.12
	OPENBSD_4_6_BASE:1.18
	OPENBSD_4_5:1.18.0.8
	OPENBSD_4_5_BASE:1.18
	OPENBSD_4_4:1.18.0.6
	OPENBSD_4_4_BASE:1.18
	OPENBSD_4_3:1.18.0.4
	OPENBSD_4_3_BASE:1.18
	OPENBSD_4_2:1.18.0.2
	OPENBSD_4_2_BASE:1.18
	OPENBSD_4_1:1.17.0.4
	OPENBSD_4_1_BASE:1.17
	OPENBSD_4_0:1.17.0.2
	OPENBSD_4_0_BASE:1.17
	OPENBSD_3_9:1.16.0.12
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.10
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.15.0.10
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.8
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.6
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.15.0.4
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.25
date	2017.09.18.15.57.02;	author millert;	state Exp;
branches;
next	1.24;
commitid	EoyqoR9DUGUPb5Hy;

1.24
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.23;
commitid	QU70QaxjyBAtj4Rv;

1.23
date	2013.10.07.01.50.25;	author guenther;	state Exp;
branches;
next	1.22;

1.22
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2011.07.18.23.04.40;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	2010.01.19.17.43.39;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2009.11.23.23.08.35;	author mk;	state Exp;
branches;
next	1.18;

1.18
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2006.04.01.18.06.59;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2001.01.20.17.57.09;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.12.21.17.25.25;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.18.03.01.25;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.15.02.15.22;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.23.22.09.39;	author d;	state Exp;
branches;
next	1.10;

1.10
date	99.07.09.13.35.16;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.04.01.30.10;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.03.10.03.19;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.29.16.08.54;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.10.59;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.16.19.54.50;	author alex;	state Exp;
branches;
next	1.4;

1.4
date	97.07.24.00.40.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.22.21;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.04.23.11.47.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@Document readdir_r() return value and update style of the example
code.  Adapted from a diff by Ross L Richardson.
@
text
@.\"	$OpenBSD: directory.3,v 1.24 2015/11/10 23:48:18 jmc Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 10 2015 $
.Dt OPENDIR 3
.Os
.Sh NAME
.Nm opendir ,
.Nm fdopendir ,
.Nm readdir ,
.Nm readdir_r ,
.Nm telldir ,
.Nm seekdir ,
.Nm rewinddir ,
.Nm closedir ,
.Nm dirfd
.Nd directory operations
.Sh SYNOPSIS
.In sys/types.h
.In dirent.h
.Ft DIR *
.Fn opendir "const char *filename"
.Ft DIR *
.Fn fdopendir "int fd"
.Ft struct dirent *
.Fn readdir "DIR *dirp"
.Ft int
.Fn readdir_r "DIR *dirp" "struct dirent *entry" "struct dirent **result"
.Ft long
.Fn telldir "const DIR *dirp"
.Ft void
.Fn seekdir "DIR *dirp" "long loc"
.Ft void
.Fn rewinddir "DIR *dirp"
.Ft int
.Fn closedir "DIR *dirp"
.Ft int
.Fn dirfd "DIR *dirp"
.Sh DESCRIPTION
The
.Fn opendir
function opens the directory named by
.Fa filename ,
associates a directory stream with it, and returns a pointer to be used
to identify the directory stream in subsequent operations.
On failure,
.Dv NULL
is returned and
.Va errno
is set to indicate the error.
.Pp
The
.Fn fdopendir
function is equivalent to
.Fn opendir
except that the directory is specified by file descriptor rather than by name.
The file offset associated with the file descriptor at the time of the call
determines which entries are returned.
.Pp
Upon successful return from
.Fn fdopendir ,
the file descriptor is under the control of the system,
and if any attempt is made to close the file descriptor
or to modify the state of the associated directory,
other than by means of
.Fn closedir ,
.Fn readdir ,
.Fn readdir_r ,
or
.Fn rewinddir ,
the behavior is undefined.
Upon calling
.Fn closedir
the file descriptor shall be closed.
.Pp
The
.Fn readdir
function returns a pointer to the next directory entry in the named
directory stream
.Fa dirp .
It returns
.Dv NULL
upon reaching the end of the directory or detecting an invalid
.Fn seekdir
operation.
.Pp
The
.Fn readdir_r
function (much like
.Fn readdir )
initializes the
.Li dirent
structure referenced by
.Fa entry
to represent the next directory entry in the named directory stream
.Fa dirp ,
and stores a pointer to this structure at the location referenced by
.Fa result .
The storage pointed to by
.Fa entry
must be large enough for a dirent with a
.Fa d_name
array member containing at least
.Dv NAME_MAX
plus one elements.
.Fn readdir_r
returns 0 on success, or an error number if an error occurs; see
.Sx ERRORS .
On successful return, the pointer returned at
.Fa "*result"
will have the same value as the argument
.Fa entry .
Upon reaching the end of the directory stream, this pointer shall have the value
.Dv NULL .
.Pp
The
.Fn telldir
function returns the current location associated with the named
directory stream
.Fa dirp .
On failure, \-1 is returned and
.Va errno
is set to indicate the error.
.Pp
The
.Fn seekdir
function sets the position of the next
.Fn readdir
operation on the named directory stream
.Fa dirp .
The new position reverts to the one associated with the
directory stream when the
.Fn telldir
operation was performed.
Values returned by
.Fn telldir
are good only for the lifetime of the
.Dv DIR
pointer,
.Fa dirp ,
from which they are derived.
If the directory is closed and then reopened, the
.Fn telldir
value may be invalidated due to undetected directory compaction.
.Pp
The
.Fn rewinddir
function resets the position of the named directory stream
.Fa dirp
to the beginning of the directory.
.Pp
The
.Fn closedir
function closes the named directory stream and frees the structure
associated with the
.Fa dirp
pointer, returning 0 on success.
On failure, \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Pp
The
.Fn dirfd
function returns the integer file descriptor associated with the named
directory stream
.Fa dirp
(see
.Xr open 2 ) .
.Sh EXAMPLES
Sample code which searches a directory for entry
.Dq name
is:
.Bd -literal -offset indent
len = strlen(name);
dirp = opendir(".");
if (dirp) {
	while ((dp = readdir(dirp)) != NULL)
		if (dp->d_namlen == len &&
		    !strcmp(dp->d_name, name)) {
			closedir(dirp);
			return FOUND;
		}
	closedir(dirp);
}
return NOT_FOUND;
.Ed
.Sh ERRORS
The
.Fn opendir
function will fail if:
.Bl -tag -width Er
.It Bq Er ENOTDIR
The supplied
.Fa filename
is not a directory.
.El
.Pp
The
.Fn opendir
function may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr fcntl 2 ,
.Xr fstat 2 ,
.Xr open 2 ,
and
.Xr malloc 3 .
.Pp
The
.Fn fdopendir
function will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa fd
argument is not a valid file descriptor open for reading.
.It Bq Er ENOTDIR
The descriptor
.Fa fd
is not associated with a directory.
.El
.Pp
The
.Fn readdir
and
.Fn readdir_r
functions may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr getdents 2 .
.Pp
The
.Fn telldir
function may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr realloc 3 .
.Pp
The
.Fn closedir
function may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr close 2 .
.Sh SEE ALSO
.Xr close 2 ,
.Xr getdents 2 ,
.Xr lseek 2 ,
.Xr open 2 ,
.Xr dir 5
.Sh STANDARDS
The
.Fn opendir ,
.Fn fdopendir ,
.Fn readdir ,
.Fn readdir_r ,
.Fn telldir ,
.Fn seekdir ,
.Fn rewinddir ,
.Fn closedir ,
and
.Fn dirfd
functions conform to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn opendir ,
.Fn readdir ,
.Fn telldir ,
.Fn seekdir ,
.Fn rewinddir ,
.Fn closedir ,
and
.Fn dirfd
functions appeared in
.Bx 4.2 .
The
.Fn fdopendir
function appeared in
.Ox 5.0 .
@


1.24
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.23 2013/10/07 01:50:25 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: October 7 2013 $
d132 3
d206 2
a207 2
			(void)closedir(dirp);
			return (FOUND);
d209 1
a209 1
	(void)closedir(dirp);
d211 1
a211 1
return (NOT_FOUND);
@


1.23
log
@getdirentries(2) is dead; long live getdents(2)!

confirmation that getdirentries(2) is unused by ports from sthen@@ and naddy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.22 2013/06/05 03:39:22 tedu Exp $
d30 2
a31 2
.Dd $Mdocdate: June 5 2013 $
.Dt DIRECTORY 3
@


1.22
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.21 2011/07/18 23:04:40 matthew Exp $
d30 1
a30 1
.Dd $Mdocdate: July 18 2011 $
d253 1
a253 1
.Xr getdirentries 2 .
d270 1
a270 1
.Xr getdirentries 2 ,
@


1.21
log
@Add (rough draft) documentation for fdopendir(3) and the 15 new
XXXat(2) system calls from POSIX 2008.  Editing will be done in tree.

General style discussed with jmc@@, schwarze@@, and deraadt@@
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.20 2010/01/19 17:43:39 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: January 19 2010 $
d45 2
a46 2
.Fd #include <sys/types.h>
.Fd #include <dirent.h>
@


1.20
log
@Better ERRORS section info; from Tim van der Molen.  POSIX documents
other common errno values for opendir() whereas we just point the
user to open() et al.  OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.20 2010/01/19 17:30:19 millert Exp $
d35 1
d49 2
d79 24
d233 14
d274 14
d300 4
@


1.19
log
@Make the code example fit on an 80 char screen without wrapping.

ok guenther (no word from the sunshine girls on the matter, though)
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.18 2007/05/31 19:19:28 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d69 5
a73 5
A null pointer is returned if
.Fa filename
cannot be accessed, or if
.Xr malloc 3
cannot allocate enough memory to hold the entire structure.
d117 3
d183 44
@


1.18
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.17 2006/04/01 18:06:59 otto Exp $
d30 1
a30 1
.Dd $Mdocdate$
d171 2
a172 1
		if (dp->d_namlen == len && !strcmp(dp->d_name, name)) {
@


1.17
log
@- Plug huge mem leak; mostly samba was suffering.
- Fix semantics: seekdir(pos); telldir() shoud return pos. The code
that implements this will be made faster in a later commit.
- We loose documented behaviour (after closedir() the telldir()
positions are not valid anymore). This was never in Posix, and most
other systems have nothing like it.

Diff originally from Paul Thorn, rewritten by me using some FreeBSD
code.  "slap it in" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.16 2003/06/02 20:18:34 millert Exp $
d30 1
a30 1
.Dd June 4, 1993
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.15 2001/01/20 17:57:09 aaron Exp $
a137 6
It is safe to use a previous
.Fn telldir
value immediately after a call to
.Fn opendir
and before any calls to
.Fn readdir .
@


1.15
log
@style(9) in example code.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.14 2000/12/21 17:25:25 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@typo; initalizes -> intializes. Some other fixes while I'm here.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.13 2000/04/18 03:01:25 aaron Exp $
d183 1
a183 1
			return FOUND;
d187 1
a187 1
return NOT_FOUND;
@


1.13
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.12 2000/04/15 02:15:22 aaron Exp $
d69 1
a69 2
function
opens the directory named by
d71 2
a72 6
associates a directory stream
with it
and
returns a pointer to be used to identify the
directory stream
in subsequent operations.
d81 2
a82 3
function
returns a pointer to the next directory entry in the named directory
stream
d94 3
a96 1
initalizes the dirent structure referenced by
d118 1
a118 2
function
returns the current location associated with the named
d124 1
a124 2
function
sets the position of the next
d151 1
a151 3
function
resets the position of the named
directory stream
d157 2
a158 3
function
closes the named directory stream
and frees the structure associated with the
d160 1
a160 2
pointer,
returning 0 on success.
d167 1
a167 2
function
returns the integer file descriptor associated with the named
@


1.12
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.11 2000/03/23 22:09:39 d Exp $
d59 1
a59 1
.Fn seekdir "DIR *dirp" "long  loc"
d77 2
a78 1
in subsequent operations.  A null pointer is returned if
d137 2
a138 1
operation was performed.  Values returned by
@


1.11
log
@readdir_r. ok aaron@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.10 1999/07/09 13:35:16 aaron Exp $
d117 1
a117 1
.Dv NULL.
@


1.10
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.9 1999/06/04 01:30:10 aaron Exp $
d40 1
d54 2
d94 24
@


1.9
log
@After some constructive criticism from pjanzen@@ and some e-mail tag:

   - only use the .Dv NULL form when referring explicitly to a function
     argument or return value
   - otherwise, use these forms:
        o non-null
        o null-terminated (hyphenated form for predicate adjective)
        o else, null terminated, or null terminate, whichever the case
        o null pointer, null byte, null string, etc.
   - may use NUL to refer to an ASCII NUL, but it doesn't need a .Tn macro

In general, capitalizing the word "null" everywhere is unnecessary and makes
the man pages harder to read. The above is consistent with popular programming
texts (i.e., K&R, Stevens).
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.8 1999/06/03 10:03:19 aaron Exp $
d116 1
a116 1
If the directory is closed and then reopened, the 
@


1.8
log
@use \-1, not -1, to change the meaning of `-' to minus sign from hyphen;
pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.7 1999/05/29 16:08:54 aaron Exp $
d74 1
a74 3
in subsequent operations.  The pointer
.Dv NULL
is returned if
@


1.7
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.6 1999/05/23 14:10:59 aaron Exp $
d144 1
a144 1
On failure, -1 is returned and the global variable
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.5 1999/05/16 19:54:50 alex Exp $
d69 1
a69 2
associates a
.Em directory stream
d73 1
a73 1
.Em directory stream
d78 1
a78 1
cannot be accessed, or if it cannot
d80 1
a80 1
enough memory to hold the whole thing.
d85 4
a88 1
returns a pointer to the next directory entry.  It returns
d98 2
a99 1
.Em directory stream .
d106 2
a107 2
operation on the
.Em directory stream .
d109 1
a109 2
.Em directory stream
when the
d132 2
a133 1
.Em directory stream
d139 1
a139 2
closes the named
.Em directory stream
d144 1
a144 1
On failure, \-1 is returned and the global variable
d152 8
a159 5
.Em directory stream ,
see
.Xr open 2 .
.Pp
Sample code which searchs a directory for entry ``name'' is:
@


1.5
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.4 1997/07/24 00:40:37 deraadt Exp $
d36 1
a36 1
.Os BSD 4.2
@


1.4
log
@does not use read(2)
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.3 1996/08/19 08:22:21 tholo Exp $
a168 1
.Xr open 2 ,
d172 1
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: directory.3,v 1.7 1995/02/25 08:51:10 cgd Exp $
d171 1
a171 1
.Xr read 2 ,
@


1.2
log
@do not assume "." exists -- it might have gotten unlink()'ed -- we
don't want closedir() to SIGSEGV. as well, sample code in man pages
should be very robust and not hint that closedir() might survive being
passed opendir()'s failure code.
@
text
@d1 1
a1 1
.\"	$NetBSD: directory.3,v 1.7 1995/02/25 08:51:10 cgd Exp $
a32 2
.\"
.\"     @@(#)directory.3	8.1 (Berkeley) 6/4/93
@


1.1
log
@Initial revision
@
text
@d160 8
a167 6
while ((dp = readdir(dirp)) != NULL)
	if (dp->d_namlen == len && !strcmp(dp->d_name, name)) {
		(void)closedir(dirp);
		return FOUND;
	}
(void)closedir(dirp);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
