head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.4
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.11.0.10
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.24
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.22
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.20
	OPENBSD_5_0:1.8.0.18
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.16
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.14
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.10
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.4
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.2
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3;
locks; strict;
comment	@.\" @;


1.12
date	2015.10.11.21.23.24;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	ufKmsZZw1K3YVwkB;

1.11
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.10;

1.10
date	2014.01.19.05.21.12;	author schwarze;	state Exp;
branches;
next	1.9;

1.9
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2006.03.31.19.37.32;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.5;

1.5
date	2004.01.25.14.48.32;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.10.30.18.52.58;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2003.07.23.06.55.52;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2003.07.21.21.15.32;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.21.20.17.53;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Fix empty .No macros, use .Pf to prefix delimiters to macros.
Based on a patch from guenther@@, tweaked by me.
OK jmc@@ guenther@@
@
text
@.\"	$OpenBSD: ftw.3,v 1.11 2014/01/21 03:15:45 schwarze Exp $
.\"
.\" Copyright (c) 2003 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Sponsored in part by the Defense Advanced Research Projects
.\" Agency (DARPA) and Air Force Research Laboratory, Air Force
.\" Materiel Command, USAF, under agreement number F39502-99-1-0512.
.\"
.Dd $Mdocdate: January 21 2014 $
.Dt FTW 3
.Os
.Sh NAME
.Nm ftw ,
.Nm nftw
.Nd traverse (walk) a file tree
.Sh SYNOPSIS
.In ftw.h
.Ft int
.Fo ftw
.Fa "const char *path"
.Fa "int (*fn)(const char *, const struct stat *, int)"
.Fa "int maxfds"
.Fc
.Ft int
.Fo nftw
.Fa "const char *path"
.Fa "int (*fn)(const\ char\ *, const\ struct\ stat\ *, int, struct\ FTW\ *)"
.Fa "int maxfds"
.Fa "int flags"
.Fc
.Sh DESCRIPTION
.Bf -symbolic
These functions are provided for compatibility with legacy code.
New code should use the
.Xr fts 3
functions.
.Ef
.Pp
The
.Fn ftw
and
.Fn nftw
functions traverse (walk) the directory hierarchy rooted in
.Fa path .
For each object in the hierarchy, these functions call the function
pointed to by
.Fa fn .
The
.Fn ftw
function passes this function a pointer to a NUL-terminated string containing
the name of the object, a pointer to a stat structure corresponding to the
object, and an integer flag.
The
.Fn nftw
function passes the aforementioned arguments plus a pointer to a
.Dv FTW
structure as defined by
.In ftw.h
(shown below):
.Bd -literal -offset indent
struct FTW {
	int base;  /* offset of basename into pathname */
	int level; /* directory depth relative to starting point */
};
.Ed
.Pp
Possible values for the flag passed to
.Fa fn
are:
.Bl -tag -width FTW_DNR
.It Dv FTW_F
A regular file.
.It Dv FTW_D
A directory being visited in pre-order.
.It Dv FTW_DNR
A directory which cannot be read.
The directory will not be descended into.
.It Dv FTW_DP
A directory being visited in post-order
.Pf ( Fn nftw
only).
.It Dv FTW_NS
A file for which no
.Xr stat 2
information was available.
The contents of the stat structure are undefined.
.It Dv FTW_SL
A symbolic link.
.It Dv FTW_SLN
A symbolic link with a non-existent target
.Pf ( Fn nftw
only).
.El
.Pp
The
.Fn ftw
function traverses the tree in pre-order.
That is, it processes the directory before the directory's contents.
.Pp
The
.Fa maxfds
argument specifies the maximum number of file descriptors
to keep open while traversing the tree.
It has no effect in this implementation.
.Pp
The
.Fn nftw
function has an additional
.Fa flags
argument with the following possible values:
.Bl -tag -width FTW_MOUNT
.It Dv FTW_PHYS
Physical walk: don't follow symbolic links.
.It Dv FTW_MOUNT
The walk will not cross a mount point.
.It FTW_DEPTH
Process directories in post-order.
Contents of a directory are visited before the directory itself.
By default,
.Fn nftw
traverses the tree in pre-order.
.It FTW_CHDIR
Change to a directory before reading it.
By default,
.Fn nftw
will change its starting directory.
The current working directory will be restored to its original value before
.Fn nftw
returns.
.El
.Sh RETURN VALUES
If the tree was traversed successfully, the
.Fn ftw
and
.Fn nftw
functions return 0.
If the function pointed to by
.Fa fn
returns a non-zero value,
.Fn ftw
and
.Fn nftw
will stop processing the tree and return the value from
.Fa fn .
Both functions return \-1 if an error is detected.
.Sh ERRORS
The
.Fn ftw
and
.Fn nftw
functions may fail and set
.Va errno
for any of the errors specified for the library functions
.Xr close 2 ,
.Xr open 2 ,
.Xr stat 2 ,
.Xr malloc 3 ,
.Xr opendir 3
and
.Xr readdir 3 .
If the
.Dv FTW_CHDIR
flag is set, the
.Fn nftw
function may fail and set
.Va errno
for any of the errors specified for
.Xr chdir 2 .
In addition, either function may fail and set
.Va errno
as follows:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa maxfds
argument is less than 1 or, in the case of
.Nm ftw
only, greater than
.Dv OPEN_MAX .
.El
.Sh SEE ALSO
.Xr chdir 2 ,
.Xr close 2 ,
.Xr open 2 ,
.Xr stat 2 ,
.Xr fts 3 ,
.Xr malloc 3 ,
.Xr opendir 3 ,
.Xr readdir 3
.Sh STANDARDS
The
.Fn ftw
and
.Fn nftw
functions conform to
.St -p1003.1-2001 .
.Sh BUGS
The
.Fa maxfds
argument is currently ignored.
@


1.11
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.10 2014/01/19 05:21:12 schwarze Exp $
d21 1
a21 1
.Dd $Mdocdate: January 19 2014 $
d92 1
a92 1
.No ( Ns Fn nftw
d103 1
a103 1
.No ( Ns Fn nftw
@


1.10
log
@Punctuation after macro arguments needs to be in a separate argument.
Found while testing mandocdb(8).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.9 2013/06/05 03:39:22 tedu Exp $
d21 1
a21 1
.Dd $Mdocdate: June 5 2013 $
d70 1
a70 1
.Aq Pa ftw.h
@


1.9
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.8 2007/05/31 19:19:28 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: May 31 2007 $
d25 2
a26 1
.Nm ftw, nftw
@


1.8
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.7 2006/03/31 19:37:32 millert Exp $
d21 1
a21 1
.Dd $Mdocdate$
d28 1
a28 1
.Fd #include <ftw.h>
@


1.7
log
@nfds is not constrained by OPEN_MAX for nftw(), only ftw()
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.6 2005/07/22 03:16:58 jaredy Exp $
d21 1
a21 1
.Dd May 20, 2003
@


1.6
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.5 2004/01/25 14:48:32 jmc Exp $
d187 3
a189 1
argument is less than 1 or greater than
@


1.5
log
@use new .St macro;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.4 2003/10/30 18:52:58 jmc Exp $
d71 1
a71 1
.Bd -literal
d73 2
a74 2
    int base;	/* offset of basename into pathname */
    int level;	/* directory depth relative to starting point */
d124 1
a124 1
Physical walk, don't follow symbolic links.
d173 1
a173 1
.Dv FGTW_CHDIR
@


1.4
log
@double words from Tom Cosgrove;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.3 2003/07/23 06:55:52 jmc Exp $
d205 1
a205 1
.St -p1003.1-01 .
@


1.3
log
@kill a whitespace at EOL;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.2 2003/07/21 21:15:32 millert Exp $
d180 1
a180 1
In addition, either function may may fail and set
a201 1
and
@


1.2
log
@updated license
@
text
@d1 1
a1 1
.\"	$OpenBSD: ftw.3,v 1.1 2003/07/21 20:17:53 millert Exp $
d150 1
a150 1
returns a non-zero value, 
@


1.1
log
@ftw(3) and nftw(3) for XPG compliance; emulated via fts(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a3 1
.\" All rights reserved.
d5 3
a7 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d9 11
a19 10
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@

