head	1.20;
access;
symbols
	OPENBSD_6_2:1.20.0.16
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.14
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.10
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.6
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.8
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.24
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.22
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.20
	OPENBSD_5_0:1.16.0.18
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.16
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.14
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.10
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.12
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.8
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.8
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.6
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.4
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.6
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.4.0.8
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2014.04.23.16.26.33;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2014.04.23.13.58.55;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2014.04.22.00.33.02;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.14;

1.14
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.17.17.01.03;	author pjanzen;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.31.13.35.33;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.06.29.16.13.59;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	99.10.06.02.30.43;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.09.13.35.16;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.02.16.57.48;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.29.16.08.54;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.23.14.10.59;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	97.08.08.23.14.51;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.05.30.07.48.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.22.28;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@tweak previous; sorry ingo, my review was pretty poor;
@
text
@.\"	$OpenBSD: err.3,v 1.19 2014/04/23 13:58:55 schwarze Exp $
.\"
.\" Copyright (c) 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: April 23 2014 $
.Dt ERR 3
.Os
.Sh NAME
.Nm err ,
.Nm verr ,
.Nm errc ,
.Nm verrc ,
.Nm errx ,
.Nm verrx ,
.Nm warn ,
.Nm vwarn ,
.Nm warnc ,
.Nm vwarnc ,
.Nm warnx ,
.Nm vwarnx
.Nd formatted error messages
.Sh SYNOPSIS
.In err.h
.Ft void
.Fn err "int eval" "const char *fmt" "..."
.Ft void
.Fn verr "int eval" "const char *fmt" "va_list args"
.Ft void
.Fn errc "int eval" "int code" "const char *fmt" "..."
.Ft void
.Fn verrc "int eval" "int code" "const char *fmt" "va_list args"
.Ft void
.Fn errx "int eval" "const char *fmt" "..."
.Ft void
.Fn verrx "int eval" "const char *fmt" "va_list args"
.Ft void
.Fn warn "const char *fmt" "..."
.Ft void
.Fn vwarn "const char *fmt" "va_list args"
.Ft void
.Fn warnc "int code" "const char *fmt" "..."
.Ft void
.Fn vwarnc "int code" "const char *fmt" "va_list args"
.Ft void
.Fn warnx "const char *fmt" "..."
.Ft void
.Fn vwarnx "const char *fmt" "va_list args"
.Sh DESCRIPTION
The
.Fn err
and
.Fn warn
family of functions display a formatted error message on the standard
error output.
In all cases, the last component of the program name, followed by
a colon
.Pq Sq \&:
character and a space, are output.
The text that follows depends on the function being called.
The
.Fa fmt
specification (and associated arguments) may be any format allowed by
.Xr printf 3
or
.Dv NULL .
If the
.Fa fmt
argument is not
.Dv NULL ,
the formatted error message is output.
.Pp
In the case of the
.Fn errx ,
.Fn verrx ,
.Fn warnx ,
and
.Fn vwarnx
functions only, no additional text is output,
so the output looks like the following:
.Bd -literal -offset indent
progname: fmt
.Ed
.Pp
The other functions all output an error message string affiliated with
an error value (see
.Xr strerror 3 ) ,
preceded by a colon character and a space if
.Fa fmt
is not
.Dv NULL .
That is, the output is as follows:
.Bd -literal -offset indent
progname: fmt: error message string
.Ed
.Pp
if
.Fa fmt
is not
.Dv NULL ,
or:
.Bd -literal -offset indent
progname: error message string
.Ed
.Pp
if it is.
.Pp
In the case of the
.Fn err ,
.Fn verr ,
.Fn warn ,
and
.Fn vwarn
functions, the error value used is the current value of the global variable
.Va errno ,
while for the
.Fn errc ,
.Fn verrc ,
.Fn warnc ,
and
.Fn vwarnc
function the argument
.Fa code
is used.
.Pp
In all cases, the output is followed by a newline character.
.Pp
The
.Fn err ,
.Fn verr ,
.Fn errc ,
.Fn verrc ,
.Fn errx ,
and
.Fn verrx
functions do not return, but exit with the value of the argument
.Fa eval .
.Sh EXAMPLES
Display the current
.Va errno
information string and exit:
.Bd -literal -offset indent
if ((p = malloc(size)) == NULL)
	err(1, NULL);
if ((fd = open(file_name, O_RDONLY, 0)) == -1)
	err(1, "%s", file_name);
.Ed
.Pp
Display an error message and exit:
.Bd -literal -offset indent
if (tm.tm_hour < START_TIME)
	errx(1, "too early, wait until %s", start_time_string);
.Ed
.Pp
Warn of an error:
.Bd -literal -offset indent
if ((fd = open(raw_device, O_RDONLY, 0)) == -1)
	warnx("%s: %s: trying the block device",
	    raw_device, strerror(errno));
if ((fd = open(block_device, O_RDONLY, 0)) == -1)
	err(1, "%s", block_device);
.Ed
.Sh SEE ALSO
.Xr exit 3 ,
.Xr perror 3 ,
.Xr printf 3 ,
.Xr strerror 3
.Sh HISTORY
The functions
.Fn err ,
.Fn errx ,
.Fn verr ,
.Fn verrx ,
.Fn warn ,
.Fn warnx ,
.Fn vwarn ,
and
.Fn vwarnx
first appeared in
.Bx 4.4 .
The functions
.Fn errc ,
.Fn verrc ,
.Fn warnc ,
and
.Fn vwarnc
first appeared in
.Fx 3.0
and were ported to
.Ox 5.6 .
.Sh CAVEATS
It is important never to pass a string with user-supplied data as a
format without using
.Ql %s .
An attacker can put format specifiers in the string to mangle the stack,
leading to a possible security hole.
This holds true even if the string has been built
.Dq by hand
using a function like
.Fn snprintf ,
as the resulting string may still contain user-supplied conversion specifiers
for later interpolation by the
.Fn err
and
.Fn warn
functions.
.Pp
Always be sure to use the proper secure idiom:
.Bd -literal -offset indent
err(1, "%s", string);
.Ed
@


1.19
log
@more info about HISTORY; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.18 2014/04/22 00:33:02 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: April 22 2014 $
d196 1
a196 1
.Fn verr,
d207 1
a207 1
.Fn verrc,
d211 1
a211 1
functions first appeared in
d213 1
a213 1
and have been ported to
@


1.18
log
@Add errc/verrc/warnc/vwarnc family: versions of err/... that take the errno
value to use for the strerror() message as an argument.  Originally from
FreeBSD 3.0

Patch from Steffen Nurpmeso (sdaoden (at) gmail.com) with minor tweaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.17 2013/06/05 03:39:22 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d193 16
a208 2
The
.Fn err
d210 1
a210 1
.Fn warn
d212 3
a214 1
.Bx 4.4 .
@


1.17
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.16 2007/05/31 19:19:28 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d36 2
d42 2
d54 4
d66 4
d88 2
a89 2
.Xr printf 3 ,
a simple string, or
d98 3
a100 3
.Fn err ,
.Fn verr ,
.Fn warn ,
d102 9
a110 5
.Fn vwarn
functions only, the error message string affiliated with the current value of
the global variable
.Va errno
is output (see
d132 12
a143 4
The counterpart functions,
.Fn errx ,
.Fn verrx ,
.Fn warnx ,
d145 4
a148 5
.Fn vwarnx ,
do not output the error message string, so the output looks like the following:
.Bd -literal -offset indent
progname: fmt
.Ed
d155 2
@


1.16
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.15 2005/07/22 03:16:58 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d44 1
a44 1
.Fd #include <err.h>
@


1.15
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.14 2003/06/02 20:18:34 millert Exp $
d30 1
a30 1
.Dd August 8, 1997
@


1.14
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.13 2002/04/30 16:31:42 mpech Exp $
d178 1
a178 1
An attacker can put format specifiers in the string to mangle your stack,
d180 1
a180 1
This holds true even if you have built the string
@


1.13
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.12 2001/02/17 17:01:03 pjanzen Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.12
log
@Document behaviour with a NULL format string, and try to not split infinitives
that don't have to be split.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.11 2000/08/31 13:35:33 aaron Exp $
d83 1
a83 1
If the  
@


1.11
log
@Put the CAVEATS section explaining format string issues in this man page too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.10 2000/06/29 16:13:59 millert Exp $
d80 8
a87 2
.Xr printf 3
or a simple string.
d99 6
a104 2
.Xr strerror 3 ) ;
that is, the output is as follows:
d109 11
d179 1
a179 1
It is important to never pass a string with user-supplied data as a
d195 1
a195 1
Be sure to always use the proper secure idiom:
@


1.10
log
@Fix a bad example.  We don't want to suggest that people pass
a string to err that could have % escapes in it.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.9 1999/10/06 02:30:43 aaron Exp $
d157 21
@


1.9
log
@Make this man page much clearer.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.8 1999/07/09 13:35:16 aaron Exp $
d128 1
a128 1
	err(1, file_name);
@


1.8
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.7 1999/07/02 16:57:48 aaron Exp $
d75 2
a76 5
character and a space, are output, provided
that
.Fa fmt
is not
.Dv NULL .
d79 1
a79 1
argument (and associated arguments) may be any format allowed by
d92 18
a109 1
is output.
@


1.7
log
@remove extra comma from .Dd arguments: "Month ##, ####" is the correct format,
not "Month, ##, ####"
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.6 1999/05/29 16:08:54 aaron Exp $
d94 1
a94 1
.Va errno 
d141 1
a141 1
functions first appeared in 
@


1.6
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.5 1999/05/23 14:10:59 aaron Exp $
d34 1
a34 1
.Dd August, 8, 1997
@


1.5
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.4 1997/08/08 23:14:51 millert Exp $
d72 10
a81 7
In all cases, the last component of the program name, a colon character,
and a space are output.
If the
.Va fmt
argument is not NULL, the formatted error message, a colon character,
and a space are output.  The
.Va fmt
@


1.4
log
@Clarify a bit.
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.3 1997/05/30 07:48:23 deraadt Exp $
d36 1
a36 1
.Os BSD 4
@


1.3
log
@for i in `find . -name \*.[123456789] -exec grep '^.Dd ' {} /dev/null \; | \
	grep '"' | cut -d':' -f1`; do
sed -e '/^.Dd /s/"//g' -e '/^.Dd /s/\(^.Dd [A-Za-z]*\) \(.*\)$/\1, \2/' <$i >x
cat x > $i
done
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.2 1996/08/19 08:22:28 tholo Exp $
d34 1
a34 1
.Dd June, 9, 1993
d77 6
a82 1
and a space are output.
d89 1
a89 1
functions, the error message string affiliated with the current value of
d104 3
a106 1
Display the current errno information string and exit:
d111 1
a111 1
	err(1, "%s", file_name);
d129 3
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: err.3,v 1.5 1995/02/25 13:40:57 cgd Exp $
d34 1
a34 1
.Dd "June 9, 1993"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: err.3,v 1.5 1995/02/25 13:40:57 cgd Exp $
a32 2
.\"
.\"	@@(#)err.3	8.1 (Berkeley) 6/9/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
