head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.12
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.10
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.6
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.8
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.4
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.24
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.22
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.20
	OPENBSD_5_0:1.17.0.18
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.16
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.14
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.10
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.12
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.8
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.6
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.8
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.6
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.4
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.15.0.2
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.9.0.4
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2;
locks; strict;
comment	@.\" @;


1.20
date	2014.03.06.23.03.18;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2014.01.22.22.54.14;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.15;

1.15
date	2005.02.25.03.12.43;	author cloder;	state Exp;
branches;
next	1.14;

1.14
date	2004.04.16.10.48.39;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.17.21.56.23;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.03.01.52.39;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.30.17.21.06;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.03.19.04.40;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.28.01.43.58;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.09.16.47.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2001.12.15.15.37.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.12.07.23.55.35;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.07.22.16.48;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.07.20.21.17;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.08.06.10.42.25;	author mpech;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.24.00.30.50;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.11.21.00.48.37;	author millert;	state Exp;
branches;
next	;


desc
@@


1.20
log
@If RPP_STDIN is set the prompt is not displayed.
Use explicit_bzero in the example code.
@
text
@.\"	$OpenBSD: readpassphrase.3,v 1.19 2014/01/22 22:54:14 guenther Exp $
.\"
.\" Copyright (c) 2000, 2002 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" Sponsored in part by the Defense Advanced Research Projects
.\" Agency (DARPA) and Air Force Research Laboratory, Air Force
.\" Materiel Command, USAF, under agreement number F39502-99-1-0512.
.\"
.Dd $Mdocdate: January 22 2014 $
.Dt READPASSPHRASE 3
.Os
.Sh NAME
.Nm readpassphrase
.Nd get a passphrase from the user
.Sh SYNOPSIS
.In readpassphrase.h
.Ft char *
.Fn readpassphrase "const char *prompt" "char *buf" "size_t bufsiz" "int flags"
.Sh DESCRIPTION
The
.Fn readpassphrase
function displays a prompt to, and reads in a passphrase from,
.Pa /dev/tty .
If this file is inaccessible
and the
.Dv RPP_REQUIRE_TTY
flag is not set,
.Fn readpassphrase
displays the prompt on the standard error output and reads from the standard
input.
In this case it is generally not possible to turn off echo.
.Pp
Up to
.Fa bufsiz
- 1 characters (one is for the NUL) are read into the provided buffer
.Fa buf .
Any additional
characters and the terminating newline (or return) character are discarded.
.Pp
The
.Fa flags
argument is the bitwise
.Tn OR
of zero or more of the following values:
.Bd -literal -offset indent
RPP_ECHO_OFF		turn off echo (default behavior)
RPP_ECHO_ON		leave echo on
RPP_REQUIRE_TTY		fail if there is no tty
RPP_FORCELOWER		force input to lower case
RPP_FORCEUPPER		force input to upper case
RPP_SEVENBIT		strip the high bit from input
RPP_STDIN		read passphrase from stdin; ignore prompt
.Ed
.Pp
The calling process should zero the passphrase as soon as possible to
avoid leaving the cleartext passphrase visible in the process's address
space.
.Sh RETURN VALUES
Upon successful completion,
.Fn readpassphrase
returns a pointer to the NUL-terminated passphrase.
If an error is encountered, the terminal state is restored and
a null pointer is returned.
.Sh FILES
.Bl -tag -width /dev/tty -compact
.It Pa /dev/tty
.El
.Sh EXAMPLES
The following code fragment will read a passphrase from
.Pa /dev/tty
into the buffer
.Fa passbuf .
.Bd -literal -offset indent
char passbuf[1024];

\&...

if (readpassphrase("Response: ", passbuf, sizeof(passbuf),
    RPP_REQUIRE_TTY) == NULL)
	errx(1, "unable to read passphrase");

if (compare(transform(passbuf), epass) != 0)
	errx(1, "bad passphrase");

\&...

explicit_bzero(passbuf, sizeof(passbuf));
.Ed
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINTR
The
.Fn readpassphrase
function was interrupted by a signal.
.It Bq Er EINVAL
The
.Ar bufsiz
argument was zero.
.It Bq Er EIO
The process is a member of a background process attempting to read
from its controlling terminal, the process is ignoring or blocking
the
.Dv SIGTTIN
signal, or the process group is orphaned.
.It Bq Er EMFILE
The process has already reached its limit for open file descriptors.
.It Bq Er ENFILE
The system file table is full.
.It Bq Er ENOTTY
There is no controlling terminal and the
.Dv RPP_REQUIRE_TTY
flag was specified.
.El
.Sh SIGNALS
.Fn readpassphrase
will catch the following signals:
.Bd -literal -offset indent
SIGALRM		SIGHUP		SIGINT
SIGPIPE		SIGQUIT		SIGTERM
SIGTSTP		SIGTTIN		SIGTTOU
.Ed
.Pp
When one of the above signals is intercepted, terminal echo will
be restored if it had previously been turned off.
If a signal handler was installed for the signal when
.Fn readpassphrase
was called, that handler is then executed.
If no handler was previously installed for the signal then the
default action is taken as per
.Xr sigaction 2 .
.Pp
The
.Dv SIGTSTP ,
.Dv SIGTTIN ,
and
.Dv SIGTTOU
signals (stop signals generated from keyboard or due to terminal I/O
from a background process) are treated specially.
When the process is resumed after it has been stopped,
.Fn readpassphrase
will reprint the prompt and the user may then enter a passphrase.
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr getpass 3
.Sh STANDARDS
The
.Fn readpassphrase
function is an
.Ox
extension and should not be used if portability is desired.
.Sh HISTORY
The
.Fn readpassphrase
function first appeared in
.Ox 2.9 .
@


1.19
log
@Use consistent phrasing for bitmask flags.

tweaking and ok millert@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.18 2013/06/05 03:39:22 tedu Exp $
d21 1
a21 1
.Dd $Mdocdate: June 5 2013 $
d64 1
a64 1
RPP_STDIN		force read of passphrase from stdin
d99 1
a99 1
memset(passbuf, 0, sizeof(passbuf));
@


1.18
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.17 2007/05/31 19:19:28 jmc Exp $
d21 1
a21 1
.Dd $Mdocdate: May 31 2007 $
d52 5
a56 3
.Fn readpassphrase
takes the following optional
.Fa flags :
@


1.17
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.16 2005/07/22 03:16:58 jaredy Exp $
d21 1
a21 1
.Dd $Mdocdate$
d28 1
a28 1
.Fd #include <readpassphrase.h>
@


1.16
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.15 2005/02/25 03:12:43 cloder Exp $
d21 1
a21 1
.Dd June 28, 2002
@


1.15
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.14 2004/04/16 10:48:39 jmc Exp $
d112 3
a114 1
the SIGTTIN signal or the process group is orphaned.
d128 3
a130 9
SIGALRM
SIGHUP
SIGINT
SIGPIPE
SIGQUIT
SIGTERM
SIGTSTP
SIGTTIN
SIGTTOU
d137 1
a137 1
was called that handler is then executed.
d144 1
a144 1
.Dv SIGTTIN
@


1.14
log
@more display/list fixes, and a little whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.13 2003/06/17 21:56:23 millert Exp $
d71 1
a71 1
returns a pointer to the null-terminated passphrase.
@


1.13
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.12 2003/06/03 01:52:39 millert Exp $
d55 1
a55 2
.Pp
.Bd -literal -offset indent -compact
d125 1
a125 2
.Pp
.Bd -literal -offset indent -compact
@


1.12
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.11 2003/05/30 17:21:06 jmc Exp $
d3 1
a3 1
.\" Copyright (c) 2000 Todd C. Miller <Todd.Miller@@courtesan.com>
d9 7
a15 7
.\" THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
.\" FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
.\" OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d17 5
a21 1
.Dd December 7, 2001
@


1.11
log
@- correct macro usage
- section reorder
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.10 2003/05/03 19:04:40 jmc Exp $
a3 1
.\" All rights reserved.
d5 3
a7 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d9 7
a15 10
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.10
log
@typos;
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.9 2002/06/28 01:43:58 millert Exp $
d82 25
a129 21
.Sh EXAMPLES
The following code fragment will read a passphrase from
.Pa /dev/tty
into the buffer
.Fa passbuf.
.Bd -literal -offset indent
char passbuf[1024];

\&...

if (readpassphrase("Response: ", passbuf, sizeof(passbuf),
    RPP_REQUIRE_TTY) == NULL)
	errx(1, "unable to read passphrase");

if (compare(transform(passbuf), epass) != 0)
	errx(1, "bad passphrase");

\&...

memset(passbuf, 0, sizeof(passbuf));
.Ed
a164 4
.Sh FILES
.Bl -tag -width /dev/tty -compact
.It Pa /dev/tty
.El
@


1.9
log
@Add RPP_STDIN flag which acts as the converse of RPP_REQUIRE_TTY.
Based on a patch from Brett Eldridge.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.8 2002/05/09 16:47:07 millert Exp $
d153 5
a157 4
.Dv SIGTTIN ,
.Dv SIGTTOU ,
signals (stop signal generated from keyboard or due to terminal I/O
from a background proccess) are treated specially.
@


1.8
log
@now catches SIGALRM and SIGPIPE too
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.7 2001/12/15 15:37:51 millert Exp $
d70 1
@


1.7
log
@Document SIGTTIN and SIGTTOU now that we deal with them too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.6 2001/12/07 23:55:35 millert Exp $
d130 2
d133 1
a133 1
SIGHUP
@


1.6
log
@o Turn off ECHONL in addition to ECHO
o Return NULL of read(2) returns -1
o Add ERRORS and STANDARDS sections
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.5 2001/12/07 22:16:48 millert Exp $
d135 2
d149 5
a153 2
.Dv SIGTSTP
signal (stop signal generated from keyboard) is treated specially.
@


1.5
log
@Instead of restoring the tty mode, restoring the signal handler,
unblocking the signal and redelivering it just make all our
signal handler interupt system calls and set a flag.  We can just
deliver the signal at the end right before we would normally return.
This solves the SIG_IGN problem nicely and causes readpassphrase() to
return when someone hits ^C even if the handler is SIG_IGN.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.4 2001/12/07 20:21:17 millert Exp $
d28 1
a28 1
.Dd November 20, 2000
d76 1
a76 1
On success,
d79 22
a100 1
If the
d102 2
a103 5
flag is set and
.Pa /dev/tty
is inaccessible,
.Fn readpassphrase
returns a null pointer.
d159 6
@


1.4
log
@Document signal handling in readpassphrase(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.3 2001/08/06 10:42:25 mpech Exp $
a133 16
.Pp
Note: if the handler for a signal was
.Dv SIG_IGN
(ignore signal) when
.Fn readpassphrase
was called, terminal echo will not be restored to its previous value
(since there is no other handler to call).
This is only a problem when the program that calls
.Fn readpassphrase
is running as a child process of another program that also
receives the signal (and exits or suspends due to it).
Because of this it is suggested that these signals be blocked
instead of ignored.
See
.Xr sigprocmask 3
for details on blocking signal receipt.
d140 1
a140 2
.Xr getpass 3 ,
.Xr sigprocmask 3
@


1.3
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.2 2000/12/24 00:30:50 aaron Exp $
d107 43
d155 3
a157 1
.Xr getpass 3
@


1.2
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.1 2000/11/21 00:48:37 millert Exp $
d106 1
@


1.1
log
@Add readpasasphrase(3), a more flexible getpass(3) replacement.
getpass(3) is now implemented in terms of readpasasphrase(3).
@
text
@d1 1
a1 1
.\"	$OpenBSD: readpassphrase.3,v 1.6 1999/06/04 01:30:11 aaron Exp $
d49 2
a50 1
input.  In this case it is generally not possible to turn off echo.
d78 2
a79 1
returns a pointer to the NUL-terminated passphrase.  If the
d85 1
a85 2
returns the
.Dv NULL pointer.
@

