head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.8
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.20
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.12
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.16
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.14
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.10
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.8
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.12
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.10
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.6
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.8
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.4
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2;
locks; strict;
comment	@.\" @;


1.5
date	2016.03.10.08.38.34;	author jmc;	state Exp;
branches;
next	1.4;
commitid	7Fm5NV7bj8RabI5A;

1.4
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.3;
commitid	QU70QaxjyBAtj4Rv;

1.3
date	2011.07.07.13.30.28;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2008.07.29.20.11.45;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2008.07.29.18.19.17;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.5
log
@un-vax;
@
text
@.\"	$OpenBSD: fpclassify.3,v 1.4 2015/11/10 23:48:18 jmc Exp $
.\"
.\" Copyright (c) 2003 Mike Barcroft <mike@@FreeBSD.org>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc/gen/fpclassify.3,v 1.6 2005/01/27 05:46:16 das Exp $
.\"
.Dd $Mdocdate: November 10 2015 $
.Dt FPCLASSIFY 3
.Os
.Sh NAME
.Nm fpclassify ,
.Nm isfinite ,
.Nm isinf ,
.Nm isnan ,
.Nm isnormal ,
.Nm signbit ,
.Nm finite ,
.Nm finitef ,
.Nm isinff ,
.Nm isnanf
.Nd classify a floating-point number
.Sh SYNOPSIS
.In math.h
.Ft int
.Fn fpclassify "real-floating x"
.Ft int
.Fn isfinite "real-floating x"
.Ft int
.Fn isinf "real-floating x"
.Ft int
.Fn isnan "real-floating x"
.Ft int
.Fn isnormal "real-floating x"
.Ft int
.Fn signbit "real-floating x"
.Sh DESCRIPTION
The
.Fn fpclassify
macro takes an argument of
.Fa x
and returns one of the following manifest constants:
.Pp
.Bl -tag -width "FP_SUBNORMALXXX" -offset indent -compact
.It Dv FP_INFINITE
Indicates that
.Fa x
is an infinite number.
.It Dv FP_NAN
Indicates that
.Fa x
is not a number (NaN).
.It Dv FP_NORMAL
Indicates that
.Fa x
is a normalized number.
.It Dv FP_SUBNORMAL
Indicates that
.Fa x
is a denormalized number.
.It Dv FP_ZERO
Indicates that
.Fa x
is zero (0 or \-0).
.El
.Pp
The
.Fn isfinite
macro returns a non-zero value if and only if its argument has
a finite (zero, subnormal, or normal) value.
.Pp
The
.Fn isinf ,
.Fn isnan ,
and
.Fn isnormal
macros return non-zero if and only if
.Fa x
is an infinity, NaN,
or a non-zero normalized number, respectively.
.Pp
The
.Fn signbit
macro takes an argument of
.Fa x
and returns non-zero if the value of its sign is negative, otherwise 0.
.Sh SEE ALSO
.Xr isgreater 3
.Sh STANDARDS
The
.Fn fpclassify ,
.Fn isfinite ,
.Fn isinf ,
.Fn isnan ,
.Fn isnormal ,
and
.Fn signbit
macros conform to
.St -isoC-99 .
.Pp
The symbols
.Fn isinff ,
and
.Fn isnanf
are provided as compatibility aliases to
.Fn isinf ,
and
.Fn isnan ,
respectively, and their uses are deprecated.
Similarly,
.Fn finite
and
.Fn finitef
are deprecated versions of
.Fn isfinite .
.Sh HISTORY
The
.Fn fpclassify ,
.Fn isfinite ,
.Fn isinf ,
.Fn isnan ,
.Fn isnormal ,
and
.Fn signbit
macros were added in
.Ox 4.4 .
.Bx 3
introduced
.Fn isinf
and
.Fn isnan
functions, which accepted
.Vt double
arguments; these have been superseded by the macros
described above.
@


1.4
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: fpclassify.3,v 1.3 2011/07/07 13:30:28 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: July 7 2011 $
a156 15
.Sh BUGS
.Tn VAX
floating point does not have distinguished values
for either infinity or not-a-number.
.Fn isinf ,
.Fn isinff ,
.Fn isnan ,
and
.Fn isnanf
routines always return 0 on that architecture.
Similarly,
.Fn finite ,
and
.Fn isfinite
always return 1.
@


1.3
log
@no more math(3);
@
text
@d1 1
a1 1
.\"	$OpenBSD: fpclassify.3,v 1.2 2008/07/29 20:11:45 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: July 29 2008 $
d38 5
a42 1
.Nm signbit
@


1.2
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fpclassify.3,v 1.1 2008/07/29 18:19:17 martynas Exp $
d105 1
a105 2
.Xr isgreater 3 ,
.Xr math 3
@


1.1
log
@- man pages for fpclassify, isfinite, isinf, isnan, isnormal, signbit,
mostly from freebsd
- also describe deprecated aliases for isinff, isnanf, finite,
finitef
- describe behavior on vax
- add mlinks for finite, finitef, isfinite, isinf, isinff, isnan,
isnanf, isnormal, signbit
- add man pages for isgreater, isgreaterequal, isless, islessequal,
islessgreater, isunordered;  from freebsd
looked over by jmc@@, it's better for him to work on when they are in tree
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d29 1
a29 1
.Dd $Mdocdate$
d39 1
a39 1
.Nd "classify a floating-point number"
d59 3
a61 2
and returns one of the following manifest constants.
.Bl -tag -width ".Dv FP_SUBNORMAL"
@

