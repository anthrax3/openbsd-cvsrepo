head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.14
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.6.0.4
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6;
locks; strict;
comment	@.\" @;


1.9
date	2014.11.30.02.41.43;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	uY3eMfQCqsZHEu4G;

1.8
date	2013.08.14.06.32.27;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2013.07.16.15.21.11;	author schwarze;	state Exp;
branches;
next	1.6;

1.6
date	2012.04.11.14.44.35;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2012.04.11.14.32.38;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2012.04.11.09.38.45;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2012.04.11.08.11.30;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2012.03.23.12.58.48;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.21.23.20.35;	author matthew;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Even though not callable, "Ed" is a macro name, so for clarity,
escape it when it appears on a macro line.
@
text
@.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.8 2013/08/14 06:32:27 jmc Exp $
.\"
.\" Copyright (c) 2012 Marc Espie <espie@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: August 14 2013 $
.Dt POSIX_SPAWNATTR_GETFLAGS 3
.Os
.Sh NAME
.Nm posix_spawnattr_getflags ,
.Nm posix_spawnattr_setflags
.Nd get and set flags of a posix_spawn attributes object
.Sh SYNOPSIS
.In spawn.h
.Ft int
.Fn posix_spawnattr_getflags "const posix_spawnattr_t *restrict attr" "short *restrict flags"
.Ft int
.Fn posix_spawnattr_setflags "posix_spawnattr_t *attr" "short flags"
.Sh DESCRIPTION
The
.Fn posix_spawnattr_getflags
and
.Fn posix_spawnattr_setflags
functions are used to get or set the flags part of a
.Xr posix_spawn 3
attribute object referenced by
.Fa attr .
.Pp
Flag values are OR-ed from the following flags:
.Bl -tag -width POSIX_SPAWN
.It Dv POSIX_SPAWN_RESETIDS
Reset the effective user and group ID of the child process to the parent's
real user and group ID;
see
.Xr setegid 2 .
.Pp
If the new process is created from a set-user-ID or set-group-ID file, usual
.Xr execve 2
semantics take precedence.
.It Dv POSIX_SPAWN_SETPGROUP
Set the process group of the child process according to the pgroup attribute
of the object; see
.Xr posix_spawnattr_getpgroup 3
and
.Xr setpgid 2 .
.It Dv POSIX_SPAWN_SETSIGDEF
Reset signals set by
.Xr posix_spawnattr_setsigdefault 3
to their default value in the child process.
.It Dv POSIX_SPAWN_SETSIGMASK
Set the signal mask of the child process according
to the value set by
.Xr posix_spawnattr_setsigmask 3 ,
using
.Xr sigprocmask 2 .
.It Dv POSIX_SPAWN_SETSCHEDPARAM
Set the scheduling parameter of the child process
according to the value set by
.Xr posix_spawnattr_setschedparam 3
.Po
mandated by
.St -p1003.1-2001 ,
this implementation currently does nothing
.Pc .
.It Dv POSIX_SPAWN_SETSCHEDULER
Set the scheduler policy of the child process
according to the value set by
.Xr posix_spawnattr_setschedpolicy 3
.Po
mandated by
.St -p1003.1-2001 ,
this implementation currently does nothing
.Pc .
.El
.Pp
.Xr posix_spawnattr_init 3
initializes this value to no flags set.
.Sh RETURN VALUES
Both functions return 0.
.Sh SEE ALSO
.Xr posix_spawn 3 ,
.Xr posix_spawnattr_init 3
.Sh STANDARDS
Both functions conform to
.St -p1003.1-2001 .
.Sh AUTHORS
.An \&Ed Schouten Aq Mt ed@@FreeBSD.org
@


1.8
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.7 2013/07/16 15:21:11 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 16 2013 $
d98 1
a98 1
.An Ed Schouten Aq Mt ed@@FreeBSD.org
@


1.7
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.6 2012/04/11 14:44:35 espie Exp $
d17 1
a17 1
.Dd $Mdocdate: April 11 2012 $
d23 1
a23 1
.Nd "get and set flags of a posix_spawn attributes object"
@


1.6
log
@complete function name.
This shit is so silly, length-wise, that it still makes some sense if
you forget to write half of it.

(noticed by jmc@@)
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.5 2012/04/11 14:32:38 jmc Exp $
d98 1
a98 1
.An Ed Schouten Aq ed@@FreeBSD.org
@


1.5
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.4 2012/04/11 09:38:45 espie Exp $
d59 1
a59 1
.Xr posix_spawn_setsigdefault 3
@


1.4
log
@fuss with details
@
text
@d1 1
a1 1
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.3 2012/04/11 08:11:30 espie Exp $
d44 1
a44 1
real user and group ID,
d46 1
a46 3
.Xr setegid 3
and
.Xr seteuid 3 .
d53 1
a53 1
of the object, see
d56 1
a56 1
.Xr setpgid 3 .
d66 1
a66 1
.Xr sigprocmask 3 .
d87 1
a87 1
.Fn posix_spawnattr_init 3
d93 1
a93 2
.Xr posix_spawnattr_init 3 ,
.Xr posix_spawnp 3
@


1.3
log
@new clean-room manpages for posix_spawn, unencumbered by any POSIX bullshit.
"just commit it" deraadt@@

(nits to be fixed soon)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
d36 2
a37 1
posix_spawn attribute object referenced by
d43 6
a48 2
Reset the effective user and group ID of the spawned process to the parent's
real user and group ID.
d50 1
a50 1
If the new process is created from a setuid or setgid file, usual
d54 1
a54 1
Set process group of the spawned process according to the pgroup attribute
d66 3
a68 1
.Xr posix_spawnattr_setsigmask 3 .
@


1.2
log
@we don't mention LIBRARY: c
"of course" deraadt@@
@
text
@d1 1
a1 3
.\"	$OpenBSD: posix_spawnattr_getflags.3,v 1.1 2012/03/21 23:20:35 matthew Exp $
.\" Copyright (c) 2008 Ed Schouten <ed@@FreeBSD.org>
.\" All rights reserved.
d3 1
a3 8
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
d5 3
a7 11
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
d9 7
a15 9
.\" Portions of this text are reprinted and reproduced in electronic form
.\" from IEEE Std 1003.1, 2004 Edition, Standard for Information Technology --
.\" Portable Operating System Interface (POSIX), The Open Group Base
.\" Specifications Issue 6, Copyright (C) 2001-2004 by the Institute of
.\" Electrical and Electronics Engineers, Inc and The Open Group.  In the
.\" event of any discrepancy between this version and the original IEEE and
.\" The Open Group Standard, the original IEEE and The Open Group Standard is
.\" the referee document.  The original Standard can be obtained online at
.\"	http://www.opengroup.org/unix/online.html.
d17 1
a17 1
.Dd Mar 24, 2008
d23 1
a23 1
.Nd "get and set the spawn-flags attribute of a spawn attributes object"
d33 1
a33 5
function obtains the value of the spawn-flags attribute from the
attributes object referenced by
.Fa attr .
.Pp
The
d35 2
a36 2
function sets the spawn-flags attribute in an initialized
attributes object referenced by
d39 2
a40 9
The spawn-flags attribute is used to indicate which process attributes
are to be changed in the new process image when invoking
.Fn posix_spawn
or
.Fn posix_spawnp .
It is the bitwise-inclusive OR of zero or more of the following flags
(see
.Fn posix_spawn ) :
.Bl -tag -offset indent
d42 6
d49 5
d55 3
d59 3
d63 8
d72 8
d82 2
a83 3
These flags are defined in
.In spawn.h .
The default value of this attribute is as if no flags were set.
d85 1
a85 5
The
.Fn posix_spawnattr_getflags
and
.Fn posix_spawnattr_setflags
functions return zero.
a87 1
.Xr posix_spawnattr_destroy 3 ,
d91 1
a91 5
The
.Fn posix_spawnattr_getflags
and
.Fn posix_spawnattr_setflags
functions conform to
@


1.1
log
@Implement execvpe(3) and posix_spawn(3) and family.  Based on
FreeBSD's implementation via Frank Denis, with various cleanups and
tweaks by me.

ok deraadt@@, guenther@@; discussions and tweaks from many others
jmc@@ promises to help me further with the man pages in tree
@
text
@d1 1
a1 1
.\"	$OpenBSD$
a42 2
.Sh LIBRARY
.Lb libc
@

