head	1.28;
access;
symbols
	OPENBSD_6_2:1.28.0.6
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.28.0.8
	OPENBSD_6_1_BASE:1.28
	OPENBSD_6_0:1.28.0.4
	OPENBSD_6_0_BASE:1.28
	OPENBSD_5_9:1.28.0.2
	OPENBSD_5_9_BASE:1.28
	OPENBSD_5_8:1.27.0.6
	OPENBSD_5_8_BASE:1.27
	OPENBSD_5_7:1.27.0.2
	OPENBSD_5_7_BASE:1.27
	OPENBSD_5_6:1.25.0.6
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.25.0.4
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.21.0.4
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.2
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.20
	OPENBSD_5_0:1.20.0.18
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.16
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.14
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.10
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.12
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.8
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.8
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.6
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.4
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.2
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.17.0.2
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.8
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.6
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.4
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.28
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.27;
commitid	QU70QaxjyBAtj4Rv;

1.27
date	2014.08.18.04.48.22;	author guenther;	state Exp;
branches;
next	1.26;
commitid	laPq9zMTzvjPndgx;

1.26
date	2014.08.16.21.09.36;	author guenther;	state Exp;
branches;
next	1.25;
commitid	ty8eBihrYgsDwcMB;

1.25
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2014.01.20.08.46.45;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.22;

1.22
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2012.03.21.23.20.35;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.18;

1.18
date	2005.07.22.02.47.28;	author jaredy;	state Exp;
branches;
next	1.17;

1.17
date	2005.02.25.03.12.43;	author cloder;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.30.14.00.32;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.23.03.52.13;	author pjanzen;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.06.10.42.25;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2001.03.14.04.02.00;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.08.31.16.24.38;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.18.03.01.26;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.04.01.30.10;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.03.10.03.19;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.29.22.38.33;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.29.16.08.54;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.16.19.54.51;	author alex;	state Exp;
branches;
next	1.4;

1.4
date	99.02.27.21.55.02;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.06.27.18.29.52;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.22.38;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.53;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: exec.3,v 1.27 2014/08/18 04:48:22 guenther Exp $
.\"
.\" Copyright (c) 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: August 18 2014 $
.Dt EXECL 3
.Os
.Sh NAME
.Nm execl ,
.Nm execlp ,
.Nm execle ,
.Nm execv ,
.Nm execvp ,
.Nm execvpe
.Nd execute a file
.Sh SYNOPSIS
.In unistd.h
.Vt extern char **environ;
.Ft int
.Fn execl "const char *path" "const char *arg" ...
.Ft int
.Fn execlp "const char *file" "const char *arg" ...
.Ft int
.Fn execle "const char *path" "const char *arg" ... "char *const envp[]"
.Ft int
.Fn execv "const char *path" "char *const argv[]"
.Ft int
.Fn execvp "const char *file" "char *const argv[]"
.Ft int
.Fn execvpe "const char *file" "char *const argv[]" "char *const envp[]"
.Sh DESCRIPTION
The
.Nm exec
family of functions replace the current process image with a
new process image.
The functions described in this manual page are front-ends for the
.Xr execve 2
system call; see that manual page for detailed information
about the replacement of the current process.
.Pp
The initial argument for these functions is the pathname of a file which
is to be executed.
.Pp
The
.Fa "const char *arg"
and subsequent ellipses in the
.Fn execl ,
.Fn execlp ,
and
.Fn execle
functions can be thought of as
.Fa arg0 ,
.Fa arg1 ,
\&...,
.Fa argn .
Together they describe a list of one or more pointers to
NUL-terminated
strings that represent the argument list available to the executed program.
The first argument, by convention, should point to the file name associated
with the file being executed.
The list of arguments
.Em must
be terminated by a null pointer.
.Pp
The
.Fn execv ,
.Fn execvp
and
.Fn execvpe
functions provide an array of pointers to
NUL-terminated strings that
represent the argument list available to the new program.
The first argument, by convention, should point to the file name associated
with the file being executed.
The array of pointers
.Em must
be terminated by a null pointer itself.
.Pp
The
.Fn execle
and
.Fn execvpe
functions also specify the environment of the executed process by following
the null
pointer that terminates the list of arguments in the parameter list
or the pointer to the
.Va argv
array with an additional parameter.
This additional parameter is an array of pointers to NUL-terminated
strings and
.Em must
be terminated by a null pointer itself.
The other functions take the environment for the new process image from the
external variable
.Va environ
in the current process.
.Pp
Some of these functions have special semantics.
.Pp
The functions
.Fn execlp ,
.Fn execvp
and
.Fn execvpe
will duplicate the actions of the shell in searching for an executable file
if the specified file name does not contain a slash
.Pq Sq \&/
character.
The search path is the path specified in the environment by
.Ev PATH
variable.
If this variable isn't specified,
.Dv _PATH_DEFPATH
from
.In paths.h
is used instead, its value being:
.Pa /usr/bin:/bin:/usr/sbin:/sbin:/usr/X11R6/bin:/usr/local/bin
.Pp
In addition, certain errors are treated specially.
.Pp
If permission is denied for a file (the attempted
.Xr execve 2
returned
.Er EACCES ) ,
these functions will continue searching the rest of
the search path.
If no other file is found, however, they will return with the global variable
.Va errno
set to
.Er EACCES .
.Pp
If the header of a file isn't recognized (the attempted
.Xr execve 2
returned
.Er ENOEXEC ) ,
these functions will execute the shell with the path of
the file as its first argument.
(If this attempt fails, no further searching is done.)
.Sh RETURN VALUES
If any of the
.Nm exec
functions return, an error has occurred.
The return value is \-1, and the global variable
.Va errno
will be set to indicate the error.
.Sh FILES
.Bl -tag -width /bin/sh -compact
.It Pa /bin/sh
default shell program
.El
.Sh ERRORS
.Fn execl ,
.Fn execle ,
.Fn execlp ,
.Fn execvp ,
and
.Fn execvpe
may fail and set
.Va errno
for any of the errors specified for the library functions
.Xr execve 2
and
.Xr malloc 3 .
.Pp
.Fn execv
may fail and set
.Va errno
for any of the errors specified for the library function
.Xr execve 2 .
.Sh SEE ALSO
.Xr sh 1 ,
.Xr execve 2 ,
.Xr fork 2 ,
.Xr ktrace 2 ,
.Xr ptrace 2 ,
.Xr environ 7
.Sh STANDARDS
Historically, the default path for the
.Fn execlp
and
.Fn execvp
functions was
.Pa \&.:/bin:/usr/bin .
This was changed to improve security and behaviour.
.Pp
The behavior of
.Fn execlp
and
.Fn execvp
when errors occur while attempting to execute the file is historic
practice, but has not traditionally been documented and is not specified
by the
.Tn POSIX
standard.
.Pp
Traditionally, the functions
.Fn execlp
and
.Fn execvp
ignored all errors except for the ones described above and
.Er ENOMEM
and
.Er E2BIG ,
upon which they returned.
They now return if any error other than the ones described above occurs.
.Pp
.Fn execl ,
.Fn execv ,
.Fn execle ,
.Fn execlp
and
.Fn execvp
conform to
.St -p1003.1-88 .
.Fn execvpe
is a GNU extension.
.Sh HISTORY
The functions
.Fn execl
and
.Fn execv
first appeared in
.At v2 .
A predecessor to
.Fn execvp ,
.Fn pexec ,
first appeared in the Programmer's Workbench (PWB/UNIX).
The functions
.Fn execle ,
.Fn execlp ,
.Fn execve ,
and
.Fn execvp
first appeared in
.At v7 .
@


1.27
log
@Add mention of execvpe() setting errno on failure.

from Justus Baumgartner (meddev50 (at) gmail.com)
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.26 2014/08/16 21:09:36 guenther Exp $
d30 2
a31 2
.Dd $Mdocdate: August 16 2014 $
.Dt EXEC 3
@


1.26
log
@Cover execvpe() in the description of what the envp arg means.

from Justus Baumgartner (meddev50 (at) gmail.com)
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.25 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
d180 1
d182 1
a182 1
.Fn execvp
@


1.25
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.24 2014/01/20 08:46:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 20 2014 $
d106 3
a108 1
function also specifies the environment of the executed process by following
@


1.24
log
@Add missing section numbers to .Xr; found while testing mandocdb(8).
While here, improve the wording at one place.
OK jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.23 2013/07/17 05:42:11 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: July 17 2013 $
d138 1
a138 1
.Aq Pa paths.h
@


1.23
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.22 2013/06/05 03:39:22 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d61 4
a64 5
The functions described in this manual page are front-ends for the function
.Xr execve 2 .
(See the manual page for
.Xr execve
for detailed information about the replacement of the current process.)
d145 1
a145 1
.Xr execve
d156 1
a156 1
.Xr execve
@


1.22
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.21 2012/03/21 23:20:35 matthew Exp $
d30 1
a30 1
.Dd $Mdocdate: March 21 2012 $
d240 19
@


1.21
log
@Implement execvpe(3) and posix_spawn(3) and family.  Based on
FreeBSD's implementation via Frank Denis, with various cleanups and
tweaks by me.

ok deraadt@@, guenther@@; discussions and tweaks from many others
jmc@@ promises to help me further with the man pages in tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.20 2007/05/31 19:19:28 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d42 1
a42 1
.Fd #include <unistd.h>
@


1.20
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.19 2005/07/22 03:16:58 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d38 2
a39 1
.Nm execvp
d54 2
d92 2
a93 1
.Fn execv
d95 1
a95 1
.Fn execvp
d125 2
a126 1
.Fn execlp
d128 1
a128 1
.Fn execvp
d238 2
@


1.19
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.18 2005/07/22 02:47:28 jaredy Exp $
d30 1
a30 1
.Dd January 24, 1994
@


1.18
log
@exec* no longer sleep on ETXTBUSY; ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.17 2005/02/25 03:12:43 cloder Exp $
d132 1
a132 1
.Va _PATH_DEFPATH
@


1.17
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.16 2003/06/02 20:18:34 millert Exp $
a157 7
.Pp
If the file is currently busy (the attempted
.Xr execve
returned
.Er ETXTBUSY ) ,
these functions will sleep for several seconds,
periodically re-attempting to execute the file.
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.15 2003/05/30 14:00:32 jmc Exp $
d80 1
a80 1
null-terminated
d93 1
a93 1
null-terminated strings that
d109 1
a109 1
This additional parameter is an array of pointers to null-terminated
@


1.15
log
@- clean up macro abuse
- section reorder
- merge COMPATIBILITY
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.14 2001/08/23 03:52:13 pjanzen Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@typo fix from NetBSD (groo@@netbsd.org)
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.13 2001/08/06 10:42:25 mpech Exp $
d136 3
a138 2
.Va _PATH_DEFPATH from
.Pa <paths.h>
d171 1
a171 1
.Xr exec
d206 1
a206 1
.Sh COMPATIBILITY
d235 1
a235 1
.Sh STANDARDS
@


1.13
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.12 2001/03/14 04:02:00 aaron Exp $
d100 1
a100 1
with the file begin executed.
@


1.12
log
@Move description of exect() to execve(2) man page. Add a note about exect() not
being portable.
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.11 2000/08/31 16:24:38 deraadt Exp $
a167 1
.Pp
@


1.11
log
@fix _PATH_DEFPATH; sigh@@kuzirabekon.econ.nagasaki-u.ac.jp
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.10 2000/04/18 03:01:26 aaron Exp $
a40 1
.Nm exect ,
a53 2
.Fn exect "const char *path" "char *const argv[]" "char *const envp[]"
.Ft int
d93 1
a93 2
.Fn exect ,
.Fn execv ,
d107 1
a107 3
and
.Fn exect
functions also specify the environment of the executed process by following
a168 4
The function
.Fn exect
executes a file with the program tracing facilities enabled (see
.Xr ptrace 2 ) .
d184 1
a184 1
.Fn execlp
a193 2
.Fn exect
and
@


1.10
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.9 1999/06/04 01:30:10 aaron Exp $
d141 6
a146 3
If this variable isn't specified, the default path
.Pa /bin:/usr/bin:\&.
is used.
d225 1
a225 2
This was changed to place the current directory last to enhance system
security.
@


1.9
log
@After some constructive criticism from pjanzen@@ and some e-mail tag:

   - only use the .Dv NULL form when referring explicitly to a function
     argument or return value
   - otherwise, use these forms:
        o non-null
        o null-terminated (hyphenated form for predicate adjective)
        o else, null terminated, or null terminate, whichever the case
        o null pointer, null byte, null string, etc.
   - may use NUL to refer to an ASCII NUL, but it doesn't need a .Tn macro

In general, capitalizing the word "null" everywhere is unnecessary and makes
the man pages harder to read. The above is consistent with popular programming
texts (i.e., K&R, Stevens).
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.8 1999/06/03 10:03:19 aaron Exp $
d55 1
a55 1
.Fn exect "const char *path" "char *const argv[]"  "char *const envp[]"
d83 1
a83 1
.Fa  arg1 ,
@


1.8
log
@use \-1, not -1, to change the meaning of `-' to minus sign from hyphen;
pjanzen@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.7 1999/05/29 22:38:33 aaron Exp $
d87 1
a87 1
NUL-terminated
d93 1
a93 3
be terminated by a
.Dv NULL
pointer.
d100 2
a101 2
functions provide an array of pointers to NUL-terminated
strings that
d107 1
a107 3
be terminated by a
.Dv NULL
pointer.
d114 1
a114 2
the
.Dv NULL
d119 1
a119 1
This additional parameter is an array of pointers to NUL-terminated
d122 1
a122 3
be terminated by a
.Dv NULL
pointer itself.
@


1.7
log
@repairs; go back over some old files, because we should properly distinguish
between NUL and NULL, i.e., don't use the .Dv (defined variable) macro when
referring to an ASCII NUL
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.6 1999/05/29 16:08:54 aaron Exp $
d187 1
a187 1
The return value is -1, and the global variable
@


1.6
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.5 1999/05/16 19:54:51 alex Exp $
d87 1
a87 1
.Dv NULL Ns -terminated
d102 1
a102 2
functions provide an array of pointers to
.Dv NULL Ns -terminated
d124 2
a125 3
This additional parameter is an array of pointers to 
.Dv NULL Ns -terminated strings
and
@


1.5
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.4 1999/02/27 21:55:02 deraadt Exp $
d63 1
a63 1
family of functions replaces the current process image with a
d82 2
a83 2
.Em arg0 ,
.Em arg1 ,
d85 3
a87 2
.Em argn .
Together they describe a list of one or more pointers to null-terminated
d102 3
a104 1
functions provide an array of pointers to null-terminated strings that
d109 1
a109 1
.Sy must
d122 5
a126 2
or the pointer to the argv array with an additional parameter.
This additional parameter is an array of pointers to null-terminated strings
d131 1
a131 1
pointer.
d145 1
a145 1
.Dq Li /
d148 1
a148 1
.Dq Ev PATH
d151 2
a152 3
.Dq Ev /bin:/usr/bin:
is
used.
d188 2
a189 2
functions returns, an error will have occurred.
The return value is \-1, and the global variable
d195 1
a195 1
The shell.
d230 1
a230 1
.Dq Pa :/bin:/usr/bin .
@


1.4
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.3 1998/06/27 18:29:52 art Exp $
a216 1
.Xr environ 7 ,
d218 1
a218 1
.Xr environ 7 ,
@


1.3
log
@ktrace not trace
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.2 1996/08/19 08:22:38 tholo Exp $
d193 1
a193 1
.Fn Execl ,
d205 1
a205 1
.Fn Exect
d251 1
a251 1
.Fn Execl ,
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: exec.3,v 1.5 1995/02/27 03:42:53 cgd Exp $
d216 1
a216 1
.Xr trace 2 ,
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: exec.3,v 1.5 1995/02/27 03:42:53 cgd Exp $
a32 2
.\"
.\"     @@(#)exec.3	8.3 (Berkeley) 1/24/94
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
