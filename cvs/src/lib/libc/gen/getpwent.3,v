head	1.31;
access;
symbols
	OPENBSD_6_0:1.30.0.4
	OPENBSD_6_0_BASE:1.30
	OPENBSD_5_9:1.30.0.2
	OPENBSD_5_9_BASE:1.30
	OPENBSD_5_8:1.29.0.6
	OPENBSD_5_8_BASE:1.29
	OPENBSD_5_7:1.29.0.2
	OPENBSD_5_7_BASE:1.29
	OPENBSD_5_6:1.28.0.4
	OPENBSD_5_6_BASE:1.28
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.25.0.2
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.24.0.16
	OPENBSD_5_3_BASE:1.24
	OPENBSD_5_2:1.24.0.14
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.12
	OPENBSD_5_0:1.24.0.10
	OPENBSD_5_0_BASE:1.24
	OPENBSD_4_9:1.24.0.8
	OPENBSD_4_9_BASE:1.24
	OPENBSD_4_8:1.24.0.6
	OPENBSD_4_8_BASE:1.24
	OPENBSD_4_7:1.24.0.2
	OPENBSD_4_7_BASE:1.24
	OPENBSD_4_6:1.24.0.4
	OPENBSD_4_6_BASE:1.24
	OPENBSD_4_5:1.23.0.2
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.22.0.2
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.20.0.8
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.6
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.4
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.19.0.8
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.6
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.4
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.19.0.2
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.17.0.2
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.15.0.8
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.6
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.15.0.4
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.31
date	2016.08.14.14.57.16;	author tb;	state Exp;
branches;
next	1.30;
commitid	OxxZUs1rAQG7HgKY;

1.30
date	2015.10.27.04.41.18;	author guenther;	state Exp;
branches;
next	1.29;
commitid	WO8KZh0g90cGqq5o;

1.29
date	2015.01.15.03.19.43;	author millert;	state Exp;
branches;
next	1.28;
commitid	03UbFv1UIycIAMP6;

1.28
date	2014.03.12.12.54.45;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2014.03.12.11.36.06;	author schwarze;	state Exp;
branches;
next	1.26;

1.26
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.25;

1.25
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.24;

1.24
date	2009.06.01.21.52.03;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2008.10.22.20.31.20;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2008.06.24.14.27.24;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.07.22.03.16.58;	author jaredy;	state Exp;
branches;
next	1.19;

1.19
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2003.05.30.14.00.32;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2002.11.21.22.15.22;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2002.11.21.21.25.19;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2000.12.24.00.30.49;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.11.21.00.49.58;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.25.19.11.48;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.25.12.21.05;	author d;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.18.03.01.27;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.15.02.15.22;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.17;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.05.03.44.53;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.04.01.30.11;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.29.19.11.11;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	97.07.15.16.30.59;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.13.13.06.37;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.04.04.22.20.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.23.59;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.31
log
@Refer to /etc/passwd consistently as the "legacy password file" and
remove some references to differences between versions 6 and 7.

ok jmc, millert, tedu
@
text
@.\"	$OpenBSD: getpwent.3,v 1.30 2015/10/27 04:41:18 guenther Exp $
.\"
.\" Copyright (c) 1988, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 27 2015 $
.Dt GETPWENT 3
.Os
.Sh NAME
.Nm getpwent ,
.Nm setpwent ,
.Nm endpwent
.Nd sequential password database access
.Sh SYNOPSIS
.In pwd.h
.Ft struct passwd *
.Fn getpwent void
.Ft void
.Fn setpwent void
.Ft void
.Fn endpwent void
.Sh DESCRIPTION
These functions operate on the password database file which is described in
.Xr passwd 5 .
Each entry in the database is defined by the structure
.Li struct passwd
found in the include file
.In pwd.h :
.Bd -literal -offset indent
struct passwd {
	char	*pw_name;	/* user name */
	char	*pw_passwd;	/* encrypted password */
	uid_t	pw_uid;		/* user uid */
	gid_t	pw_gid;		/* user gid */
	time_t	pw_change;	/* password change time */
	char	*pw_class;	/* user access class */
	char	*pw_gecos;	/* Honeywell login info */
	char	*pw_dir;	/* home directory */
	char	*pw_shell;	/* default shell */
	time_t	pw_expire;	/* account expiration */
};
.Ed
.Pp
The
.Fn getpwent
function sequentially reads the password database and is intended for programs
that wish to process the complete list of users.
.Pp
It is dangerous for long-running programs to keep the file descriptors
open as the database will become out of date if it is updated while the
program is running.
However the file descriptors are automatically closed when
.Xr execve 2
is called.
.Pp
.Fn setpwent
causes
.Fn getpwent
to
.Dq rewind
to the beginning of the database.
.Pp
The
.Fn endpwent
function closes any file descriptors opened by
.Fn setpwent
or
.Fn getpwent .
.Pp
These routines have been written to
.Dq shadow
the password file, that is,
allow only certain programs to have access to the encrypted password.
If the process which calls them has an effective UID of 0 or has the
.Dq _shadow
group in its group vector, the encrypted password will be returned, otherwise,
the password field of the returned structure will point to the string
.Ql * .
.Sh YP SUPPORT
If YP is active,
.Fn getpwent
also uses the
.Pa master.passwd.byname
YP map (if available) or the
.Pa passwd.byname
YP map.
This is in addition to the passwd file,
and respects the order of both normal and YP
entries in the passwd file.
.Sh RETURN VALUES
The
.Fn getpwent
function returns a valid pointer to a passwd structure on success
or a null pointer if end-of-file is reached or an error occurs.
.Pp
The
.Fn endpwent
and
.Fn setpwent
functions have no return value.
.Sh FILES
.Bl -tag -width /etc/master.passwd -compact
.It Pa /etc/pwd.db
insecure password database file
.It Pa /etc/spwd.db
secure password database file
.It Pa /etc/master.passwd
current password file
.It Pa /etc/passwd
legacy password file
.El
.Sh ERRORS
The
.Fn getpwent
function may fail for any of the errors specified for
.Xr dbopen 3
and its
.Fn get
routine.
.Pp
If YP is active, it may also fail due to errors caused by the YP subsystem.
.Sh SEE ALSO
.Xr getlogin 2 ,
.Xr getgrent 3 ,
.Xr getgrouplist 3 ,
.Xr getpwnam 3 ,
.Xr pw_dup 3 ,
.Xr passwd 5 ,
.Xr Makefile.yp 8 ,
.Xr pwd_mkdb 8 ,
.Xr vipw 8 ,
.Xr yp 8
.Sh STANDARDS
These functions are compliant with the X/Open System Interfaces option of the
.St -p1003.1-2008
specification.
.Sh HISTORY
The
.Fn getpwent ,
.Fn setpwent ,
and
.Fn endpwent
functions appeared in
.At v7 .
.Pp
The historic function
.Fn setpwfile ,
which allowed the specification of alternate password databases,
has been deprecated and is no longer available.
.Sh BUGS
The
.Fn getpwent
function stores its results in an internal static buffer and returns
a pointer to that buffer.
Subsequent calls to
.Fn getpwent ,
.Fn getpwnam ,
or
.Fn getpwuid
will overwrite the same buffer.
.Pp
The routines
.Fn getpwent ,
.Fn endpwent ,
and
.Fn setpwent
are fairly useless in a networked environment and should be
avoided, if possible.
@


1.30
log
@The fd of the passwd database is marked close-on-exec now

Incorrect text pointed out by tedu@@
ok deraadt@@ millert@@ tedu@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.29 2015/01/15 03:19:43 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: January 15 2015 $
d134 1
a134 1
a Version 7 format password file
@


1.29
log
@POSIX does not require an explicit inclusion of sys/types.h to get
uid_t or gid_t (and neither do we).  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.28 2014/03/12 12:54:45 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: March 12 2014 $
d76 1
a76 3
Furthermore, programs that run child processes should be careful to call
.Fn endpwent
to close these descriptors before calling
d78 1
a78 2
or
.Xr system 3 .
@


1.28
log
@since we are documenting that setpwfile() is no longer available, maybe
don;t cross reference (Xr) its also no longer available man page: use Fn
instead;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.27 2014/03/12 11:36:06 schwarze Exp $
a38 1
.In sys/types.h
@


1.27
log
@Add ERRORS and STANDARDS, thanks to brad@@ for the reminder.
Fix the description of the RETURN VALUES of get*_r().
Minor polishing while here.
Feedback and ok jmc@@, ok millert@@ jca@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.26 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
d175 1
a175 1
.Xr setpwfile 3 ,
@


1.26
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.25 2013/06/05 03:39:22 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d140 10
d161 4
@


1.25
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.24 2009/06/01 21:52:03 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: June 1 2009 $
d53 1
a53 1
.Aq Pa pwd.h :
@


1.24
log
@Split getpw{nam,uid} off into their own man page.  Hopefully, this
will help people understand that endpwent() is not normally needed.
OK deraadt@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.23 2008/10/22 20:31:20 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: October 22 2008 $
d39 2
a40 2
.Fd #include <sys/types.h>
.Fd #include <pwd.h>
@


1.23
log
@man page for Makefile.yp, and associated bits; from Ingo Schwarze
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.22 2008/06/24 14:27:24 deraadt Exp $
d30 1
a30 1
.Dd $Mdocdate: June 24 2008 $
a34 5
.Nm getpwnam ,
.Nm getpwuid ,
.Nm getpwnam_r ,
.Nm getpwuid_r ,
.Nm setpassent ,
d37 1
a37 1
.Nd password database operations
a42 10
.Ft struct passwd *
.Fn getpwnam "const char *login"
.Ft struct passwd *
.Fn getpwuid "uid_t uid"
.Ft int
.Fn getpwnam_r "const char *login" "struct passwd *pwstore" "char *buf" "size_t buflen" "struct passwd **result"
.Ft int
.Fn getpwuid_r "uid_t uid" "struct passwd *pwstore" "char *buf" "size_t buflen" "struct passwd **result"
.Ft int
.Fn setpassent "int stayopen"
d69 1
a69 19
The functions
.Fn getpwnam
and
.Fn getpwuid
search the password database for the given login name or user ID,
respectively, always returning the first one encountered.
.Pp
The re-entrant functions
.Fn getpwnam_r
and
.Fn getpwuid_r
search the password database for the given login name or user ID,
respectively, always returning the first one encountered.
The various strings associated with the result are stored in
.Va buf ,
and
.Va pwstore
is updated to point at those strings.
.Pp
d71 1
a71 1
sequentially reads the password database and is intended for programs
a73 15
.Fn setpassent
accomplishes two purposes.
First, it causes
.Fn getpwent
to
.Dq rewind
to the beginning of the database.
Additionally, if
.Fa stayopen
is non-zero, file descriptors are left open, significantly speeding
up subsequent accesses for all of the routines.
(This latter functionality is unnecessary for
.Fn getpwent
as it doesn't close its file descriptors by default.)
.Pp
d77 6
d85 5
a89 3
is equivalent to
.Fn setpassent
with an argument of zero.
d93 4
a96 1
function closes any open files.
d100 1
a100 1
the password file, i.e.,
d108 3
a110 6
If YP is active, the functions
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwnam_r
also use the
a113 8
YP map; and the functions
.Fn getpwuid
and
.Fn getpwuid_r
also use the
.Pa master.passwd.byuid
YP map (if available) or the
.Pa passwd.byuid
d119 3
a121 6
The functions
.Fn getpwent ,
.Fn getpwnam ,
and
.Fn getpwuid
return a valid pointer to a passwd structure on success
a123 13
The functions
.Fn getpwnam_r
and
.Fn getpwuid_r
update
.Va result
to point to
.Va pwstore
and then return 0 on success.
.Pp
The
.Fn setpassent
function returns 0 on failure or 1 on success.
d144 1
a153 2
.Fn getpwnam ,
.Fn getpwuid ,
a158 4
The
.Fn setpassent
function appeared in
.Bx 4.3 Reno .
d165 5
a169 1
The functions
d172 1
a172 1
and
d174 1
a174 3
leave their results in an internal static object and return
a pointer to that object.
Subsequent calls to any of these functions will modify the same object.
a178 1
.Fn setpassent ,
@


1.22
log
@implement getpwnam_r() and getpwuid_r() -- very nearly a rewrite of the
entire file.  much help from kurt, and tested by many
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.21 2007/05/31 19:19:28 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d144 22
d210 1
d212 2
a213 1
.Xr vipw 8
@


1.21
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.20 2005/07/22 03:16:58 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d37 2
d53 4
d91 12
d152 11
d185 1
@


1.20
log
@- sync prototypes and header file excerpts to reality
- many grammar, punctuation, macro, layout, spelling/typos,
  rewording, etc. fixes
- avoid first person
- sprinkle crossrefs where relevant

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.19 2003/06/02 20:18:34 millert Exp $
d30 1
a30 1
.Dd December 11, 1993
@


1.19
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.18 2003/05/30 14:00:32 jmc Exp $
d119 1
a119 1
the password file, e.g.,
@


1.18
log
@- clean up macro abuse
- section reorder
- merge COMPATIBILITY
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.17 2002/11/21 22:15:22 millert Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.17
log
@shadow -> _shadow
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.16 2002/11/21 21:25:19 millert Exp $
d178 5
a200 5
.Sh COMPATIBILITY
The historic function
.Xr setpwfile 3 ,
which allowed the specification of alternate password databases,
has been deprecated and is no longer available.
@


1.16
log
@Add a "shadow" group and make the shadow passwd db readable by that
group.  This changes getpw* to always try the shadow db first and
then fall back to the db w/o password hashes.  In the future,
/usr/libexec/auth/login_passwd (and others) will be setgid shadow
instead of setuid root.  OK deraadt@@

If you track -current you should do the following:
 o add group shadow to /etc/group
 o chgrp shadow /etc/spwd.db
 o chmod 640 /etc/spwd.db
 o rebuild and install src/usr.sbin/pwd_mkdb

You do not need to rebuild libc yet, but it would't hurt to do so.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.15 2000/12/24 00:30:49 aaron Exp $
d126 1
a126 1
.Dq shadow
@


1.15
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.14 2000/11/21 00:49:58 millert Exp $
d125 4
a128 3
If the process which calls them has an effective UID of 0, the encrypted
password will be returned, otherwise, the password field of the returned
structure will point to the string
@


1.14
log
@Add pw_dup(3), a function to copy 'struct passwd'.  It is allocated as
a single chunk with the strings pointing elsewhere in the buffer so
a simple free() of the struct passwd * is all that is needed to decallocate.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.13 2000/04/25 19:11:48 deraadt Exp $
d61 1
a61 3
These functions
operate on the password database file
which is described in
d119 1
a119 2
function
closes any open files.
d144 1
a144 2
functions
have no return value.
@


1.13
log
@well if you cannot do a libc commit properly a week before 2.7 tree lock, surely it can wait till after 2.7
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.11 2000/04/18 03:01:27 aaron Exp $
d163 1
@


1.12
log
@getpw*_r()
@
text
@a39 1
.Nm getpwnam_r ,
a40 1
.Nm getpwuid_r ,
a51 2
.Ft int
.Fn getpwnam_r "const char *login" "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
a54 2
.Fn getpwuid_r "uid_t uid" "struct passwd *pwd" "char *buffer" "size_t bufsize" "struct passwd **result"
.Ft int
a131 23
.Pp
The
.Fn getpwuid_r
and
.Fn getpwnam_r
functions both update the passwd structure pointed to by
.Fa pwd
and store a pointer to that structure at the location pointed to by
.Fa result .
The structure shall contain an entry from the user database with a matching
.Fa uid
or
.Fa login .
Storage referenced by the structure shall be allocated from the memory
provided with the
.Fa buffer
parameter, which is
.Fa bufsize
characters in size.
.\" The maximum size needed for this buffer can be determined with the
.\" _SC_GETPW_R_SIZE_MAX
.\" .Xr sysconf 2
.\" parameter.
a148 14
The functions
.Fn getpwuid_r
and
.Fn getpwnam_r
return a null pointer in the location pointed to by
.Fa result
and return the error number
on error or if the requested entry is not found.
The error value
.Ev ERANGE
is returned if insufficient storage was supplied via
.Fa buffer
and
.Fa bufsize.
@


1.11
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.10 2000/04/15 02:15:22 aaron Exp $
d40 1
d42 1
d54 2
d59 2
d138 23
d178 14
@


1.10
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.9 1999/07/09 13:35:17 aaron Exp $
d55 1
a55 1
.Fn setpassent "int  stayopen"
d187 2
a188 3
a pointer to that object. Subsequent calls to
any of these functions
will modify the same object.
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.8 1999/06/05 03:44:53 aaron Exp $
d171 1
a171 1
.Fn setpwent,
@


1.8
log
@change some .Em/.Va to .Li, looks nicer
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.7 1999/06/04 01:30:11 aaron Exp $
d53 1
a53 1
.Fn getpwuid "uid_t uid" 
d145 1
a145 1
and 
@


1.7
log
@After some constructive criticism from pjanzen@@ and some e-mail tag:

   - only use the .Dv NULL form when referring explicitly to a function
     argument or return value
   - otherwise, use these forms:
        o non-null
        o null-terminated (hyphenated form for predicate adjective)
        o else, null terminated, or null terminate, whichever the case
        o null pointer, null byte, null string, etc.
   - may use NUL to refer to an ASCII NUL, but it doesn't need a .Tn macro

In general, capitalizing the word "null" everywhere is unnecessary and makes
the man pages harder to read. The above is consistent with popular programming
texts (i.e., K&R, Stevens).
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.6 1999/05/29 19:11:11 aaron Exp $
d66 1
a66 1
.Em passwd
@


1.6
log
@repairs
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.5 1997/07/15 16:30:59 deraadt Exp $
d139 1
a139 3
or a
.Dv NULL
pointer if end-of-file is reached or an error occurs.
@


1.5
log
@Xr repair
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.4 1997/06/13 13:06:37 deraadt Exp $
d63 1
a63 2
which is described
in
d66 2
a67 3
.Ar passwd
found in the include
file
d88 1
a88 1
search the password database for the given login name or user uid,
a90 1
The
a91 1
function
a94 1
The
a95 1
function
d99 3
a101 1
to ``rewind'' to the beginning of the database.
a113 1
The
a114 1
function
d124 3
a126 1
These routines have been written to ``shadow'' the password file, e.g.
d128 1
a128 1
If the process which calls them has an effective uid of 0, the encrypted
d137 1
a137 1
.Fn getpwuid ,
d139 3
a141 1
and a null pointer if end-of-file is reached or an error occurs.
d144 1
a144 1
function returns 0 on failure and 1 on success.
d154 1
a154 1
The insecure password database file
d156 1
a156 1
The secure password database file
d158 1
a158 1
The current password file
d160 1
a160 1
A Version 7 format password file
d170 4
a173 4
.Nm getpwent ,
.Nm getpwnam ,
.Nm getpwuid ,
.Nm setpwent,
d175 1
a175 1
.Nm endpwent
d179 1
a179 1
.Nm setpassent
d187 1
a187 1
.Fn getpwuid ,
@


1.4
log
@the any typo; netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.3 1997/04/04 22:20:00 deraadt Exp $
d165 1
a165 1
.Xr getlogin 3 ,
@


1.3
log
@clarify
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.2 1996/08/19 08:23:59 tholo Exp $
d192 1
a192 1
the any of these functions
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpwent.3,v 1.7 1995/02/27 04:13:01 cgd Exp $
d192 1
a192 1
the same function
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: getpwent.3,v 1.7 1995/02/27 04:13:01 cgd Exp $
a32 2
.\"
.\"     @@(#)getpwent.3	8.2 (Berkeley) 12/11/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
