head	1.14;
access;
symbols
	OPENBSD_6_1:1.14.0.4
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.2
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.12.0.10
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.2
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.6
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.4
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.11.0.32
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.30
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.28
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.26
	OPENBSD_5_0:1.11.0.24
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.22
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.20
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.16
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.18
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.14
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.12
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.10
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.8
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2016.03.30.07.52.47;	author guenther;	state Exp;
branches;
next	1.13;
commitid	rAfkqKGUk60crxhW;

1.13
date	2015.09.12.14.56.50;	author guenther;	state Exp;
branches;
next	1.12;
commitid	BXATo6E2rFBuIXKr;

1.12
date	2013.09.30.12.02.33;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.19.19.10.32;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.08.08.05.34;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.11.21.03.10;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.16.21.27.22;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2002.01.23.21.02.41;	author fgsch;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.06.08.24.16;	author d;	state Exp;
branches;
next	1.4;

1.4
date	98.11.20.11.18.39;	author d;	state Exp;
branches;
next	1.3;

1.3
date	97.07.09.00.28.21;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.23.41;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.55;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Eliminate userspace caching by getlogin_r/setlogin; make the getlogin
syscall behave exactly like userspace getlogin_r() and rename it to
match.  Eliminate the reduced-to-no-op wrappers of the syscalls.
Eliminate the unnecessary per-thread static buffering by getlogin().

ok kettenis@@ deraadt@@
@
text
@/*	$OpenBSD: getlogin.c,v 1.13 2015/09/12 14:56:50 guenther Exp $ */
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <errno.h>
#include <limits.h>
#include <string.h>
#include <unistd.h>

#include "thread_private.h"

static char logname[LOGIN_NAME_MAX];

char *
getlogin(void)
{
	int err;

	if ((err = getlogin_r(logname, sizeof logname)) != 0) {
		errno = err;
		return NULL;
	}
	if (*logname == '\0') {
		errno = ENOENT;  /* well? */
		return NULL;
	}
	return logname;
}
@


1.13
log
@Wrap <unistd.h> so that internal calls go direct and they're all weak symbols
Delete unused 'fd' argument from internal function oldttyname()
@
text
@d1 1
a1 1
/*	$OpenBSD: getlogin.c,v 1.12 2013/09/30 12:02:33 millert Exp $ */
a32 2
#include <pwd.h>
#include <stdio.h>
a34 1
#include <utmp.h>
d38 1
a38 6
_THREAD_PRIVATE_MUTEX(logname);
static int  logname_valid = 0;
static char logname[LOGIN_NAME_MAX + 1];

int	_getlogin(char *, size_t);
int	_setlogin(const char *);
d43 1
a43 2
	_THREAD_PRIVATE_KEY(getlogin);
	char * name = (char *)_THREAD_PRIVATE(getlogin, logname, NULL);
d45 2
a46 1
	if ((errno = getlogin_r(name, sizeof logname)) != 0)
d48 2
a49 1
	if (*name == '\0') {
d53 1
a53 39
	return name;
}

int
getlogin_r(char *name, size_t namelen)
{
	int logname_size;

	_THREAD_PRIVATE_MUTEX_LOCK(logname);
	if (!logname_valid) {
		if (_getlogin(logname, sizeof(logname) - 1) < 0) {
			_THREAD_PRIVATE_MUTEX_UNLOCK(logname);
			return errno;
		}
		logname_valid = 1;
		logname[LOGIN_NAME_MAX] = '\0';	/* paranoia */
	}
	logname_size = strlen(logname) + 1;
	if (namelen < logname_size) {
		_THREAD_PRIVATE_MUTEX_UNLOCK(logname);
		return ERANGE;
	}
	memcpy(name, logname, logname_size);
	_THREAD_PRIVATE_MUTEX_UNLOCK(logname);
	return 0;
}
DEF_WEAK(getlogin_r);

int
setlogin(const char *name)
{
	int ret;

	_THREAD_PRIVATE_MUTEX_LOCK(logname);
	ret = _setlogin(name);
	if (ret == 0)
		logname_valid = 0;
	_THREAD_PRIVATE_MUTEX_UNLOCK(logname);
	return ret;
@


1.12
log
@Use PATH_MAX, NAME_MAX and LOGIN_NAME_MAX not MAXPATHNAMELEN,
MAXNAMLEN or MAXLOGNAME where possible.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getlogin.c,v 1.11 2005/10/19 19:10:32 deraadt Exp $ */
d86 1
@


1.11
log
@once again: library routines should not check pointers and what errno
with EFAULT. programmers ignore the error returns.  please, please,
please -- we want to crash so that the programmer will become aware of
the bug and fix it instead. ok otto
@
text
@d1 1
a1 1
/*	$OpenBSD: getlogin.c,v 1.10 2005/08/08 08:05:34 espie Exp $ */
d31 2
a32 1
#include <sys/param.h>
a33 1
#include <utmp.h>
d37 2
a38 1
#include <errno.h>
d43 1
a43 1
static char logname[MAXLOGNAME + 1];
d75 1
a75 1
		logname[MAXLOGNAME] = '\0';	/* paranoia */
@


1.10
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a65 3

	if (name == NULL)
		return EFAULT;
@


1.9
log
@ansification; checked by pval
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.8 2003/06/02 20:18:34 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.7 2002/02/16 21:27:22 millert Exp $";
d51 1
a51 1
getlogin()
d66 1
a66 3
getlogin_r(name, namelen)
	char *name;
	size_t namelen;
d93 1
a93 2
setlogin(name)
	const char *name;
@


1.7
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.6 2002/01/23 21:02:41 fgsch Exp $";
@


1.6
log
@_THREAD_PRIVATE_MUTEX_UNLOCK() on error before returning; millert@@ ok.
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.5 2000/01/06 08:24:16 d Exp $";
d51 2
a52 2
int	_getlogin __P((char *, size_t));
int	_setlogin __P((const char *));
@


1.5
log
@_THREAD_PRIVATE_* macros changed
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.4 1998/11/20 11:18:39 d Exp $";
d89 2
a90 1
	if (namelen < logname_size)
d92 1
@


1.4
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.3 1997/07/09 00:28:21 millert Exp $";
d47 1
a47 1
_THREAD_PRIVATE_MUTEX(logname)
d57 1
a57 1
	_THREAD_PRIVATE_KEY(getlogin)
@


1.3
log
@Clean up some -Wall complaints.
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.2 1996/08/19 08:23:41 tholo Exp $";
d44 6
a50 1
int	__logname_valid;		/* known to setlogin() */
d52 1
d57 2
a58 1
	static char logname[MAXLOGNAME + 1];
d60 5
a64 4
	if (__logname_valid == 0) {
		if (_getlogin(logname, sizeof(logname) - 1) < 0)
			return ((char *)NULL);
		__logname_valid = 1;
d66 42
a107 1
	return (*logname ? logname : (char *)NULL);
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getlogin.c,v 1.6 1995/02/27 04:12:47 cgd Exp $";
d46 1
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: getlogin.c,v 1.6 1995/02/27 04:12:47 cgd Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)getlogin.c	8.1 (Berkeley) 6/4/93";
#else
static char rcsid[] = "$NetBSD: getlogin.c,v 1.6 1995/02/27 04:12:47 cgd Exp $";
#endif
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
