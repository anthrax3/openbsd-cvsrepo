head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.12
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.40
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.38
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.34
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.32
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.30
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.28
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.28
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.26
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.24
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.22
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.20
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.18
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.16
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.14
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.12
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.10
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.8
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.6
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.4
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2015.01.16.16.48.51;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	0DYulI8hhujBHMcR;

1.8
date	2005.08.08.08.05.33;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.25.15.38.47;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2004.05.18.02.05.52;	author jfb;	state Exp;
branches;
next	1.5;

1.5
date	97.07.01.05.53.29;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.29.05.46.50;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.22.26;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.29.03.05.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.28.14.11.20;	author etheisen;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Move to the <limits.h> universe.
review by millert, binary checking process with doug, concept with guenther
@
text
@/*	$OpenBSD: elf_hash.c,v 1.8 2005/08/08 08:05:33 espie Exp $ */
/*
 * Copyright (c) 1995, 1996 Erik Theisen
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/types.h>
#include <sys/mman.h>
#include <sys/stat.h>
#include <sys/file.h>

#include <errno.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>
#include <sys/exec.h>

#include <elf_abi.h>

/*
 * Standard ELF ABI hash function.
 * DO NOT MODIFY THIS FUNCTION -- INVALID
 * HASH TABLES WILL BE GENERATED!
 */
unsigned int
elf_hash(const unsigned char *name)
{
	unsigned int h = 0, g;

	while (*name) {
		h = (h << 4) + *name++;
		if ((g = h & 0xf0000000))
			h ^= g >> 24;
		h &= ~g;
	}
	return h;
}
@


1.8
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a29 1
#include <sys/param.h>
@


1.7
log
@deregister (and deauto!). ok millert@@ marco@@
@
text
@d1 1
a27 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: elf_hash.c,v 1.6 2004/05/18 02:05:52 jfb Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.6
log
@ansify function definitions and zap some `register'

ok millert@@
@
text
@d29 1
a29 1
static char rcsid[] = "$OpenBSD: elf_hash.c,v 1.5 1997/07/01 05:53:29 millert Exp $";
d54 1
a54 1
	register unsigned int h = 0, g;
@


1.5
log
@-Wall cleanliness
@
text
@d29 1
a29 1
static char rcsid[] = "$OpenBSD: elf_hash.c,v 1.4 1997/06/29 05:46:50 deraadt Exp $";
d52 1
a52 2
elf_hash(name)
	const unsigned char *name;
@


1.4
log
@surely not a long
@
text
@d29 1
a29 1
static char rcsid[] = "$OpenBSD: elf_hash.c,v 1.3 1996/08/19 08:22:26 tholo Exp $";
d59 1
a59 1
		if (g = h & 0xf0000000)
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d29 1
a29 1
static char rcsid[] = "$OpenBSD$";
d51 1
a51 1
unsigned long
d55 1
a55 1
	register unsigned long h = 0, g;
@


1.2
log
@enable ELF/a.out/ECOFF in machine/exec.h
@
text
@a0 1
/*	$OpenBSD: elf_hash.c,v 1.1 1996/05/28 14:11:20 etheisen Exp $	*/
d27 4
@


1.1
log
@All platforms get elf_nlist().  Hidden __elf_is_okay__() function is
now present for ELF platforms.  This function is not ABI compliant and
it's use should be restricted.  exec_sup.h now determines the target
OMF for various platforms.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d28 13
d50 1
a50 1
        const unsigned char *name;
d52 1
a52 1
        register unsigned long h = 0, g;
d54 8
a61 9
        while(*name)
        {
                h = (h << 4) + *name++;
                if (g = h & 0xf0000000)
                        h ^= g >> 24;
                h &= ~g;
        }
        return h;
} /* end elf_hash() */
@
