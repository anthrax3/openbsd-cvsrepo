head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.12
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.4
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.1.0.8
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.6
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.2
	OPENBSD_5_4_BASE:1.1;
locks; strict;
comment	@.\" @;


1.3
date	2015.01.15.19.26.27;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	rrjYdXukaa8jU0N3;

1.2
date	2014.11.30.21.35.46;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	NGHnmbSPLLe2InS1;

1.1
date	2013.06.17.19.11.54;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.3
log
@use .In where appropriate; from Kaspars at Bankovskis dot net
@
text
@.\"	$OpenBSD: clock_getcpuclockid.3,v 1.2 2014/11/30 21:35:46 schwarze Exp $
.\"
.\" Copyright (c) 2013 Philip Guenther <guenther@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: November 30 2014 $
.Dt CLOCK_GETCPUCLOCKID 3
.Os
.Sh NAME
.Nm clock_getcpuclockid
.Nd get a clock measuring process CPU time
.Sh SYNOPSIS
.In time.h
.Ft int
.Fn clock_getcpuclockid "pid_t pid" "clockid_t *clock_id"
.Sh DESCRIPTION
The
.Fn clock_getcpuclockid
function allows the calling process to get a
.Vt clockid_t
value that measures the time spent by CPUs running in user or kernel mode
on behalf of the process specified by
.Fa pid .
If
.Fa pid
is zero, then a clock for the calling process will be returned.
.Sh RETURN VALUES
If successful,
.Fn clock_getcpuclockid
will return zero.
Otherwise an error number will be returned to indicate the error.
.Sh ERRORS
.Fn clock_getcpuclockid
will fail if:
.Bl -tag -width Er
.It Bq Er EPERM
.Fa pid
is neither zero nor the PID of the calling process.
.El
.Sh SEE ALSO
.Xr clock_gettime 2 ,
.Xr pthread_getcpuclockid 3
.Sh STANDARDS
The
.Fn clock_getcpuclockid
function conforms to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn clock_getcpuclockid
function first appeared in IEEE Std 1003.1d-1999
.Pq Dq POSIX.1d
and has been available since
.Ox 5.4 .
@


1.2
log
@do not use .St -p1003.1d-99 which is used in exactly two pages;
im going to delete support for it from mandoc(1)
@
text
@d1 1
a1 1
.\"	$OpenBSD: clock_getcpuclockid.3,v 1.1 2013/06/17 19:11:54 guenther Exp $
d17 1
a17 1
.Dd $Mdocdate: June 17 2013 $
d24 1
a24 1
.Fd #include <time.h>
@


1.1
log
@Add support for the _POSIX_CPUTIME and _POSIX_THREAD_CPUTIME options,
including CLOCK_{PROCESS,THREAD}_CPUTIME_ID constants and
{clock,pthread}_getcpuclockid() functions.

Worked out at t2k13 with help from tedu@@ and matthew@@ and testing by aja@@
ok matthew@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mdoc.template,v 1.13 2012/09/06 01:01:58 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: March 31 2013 $
d62 2
a63 2
function first appeared in
.St -p1003.1d-99
@

