head	1.9;
access;
symbols
	OPENBSD_6_0:1.9.0.6
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.2
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8;
locks; strict;
comment	@.\" @;


1.9
date	2015.07.23.22.20.02;	author tedu;	state Exp;
branches;
next	1.8;
commitid	7kX7VmQMpungv8OH;

1.8
date	2015.02.24.19.22.12;	author tedu;	state Exp;
branches;
next	1.7;
commitid	5ohPLXZMfinpUCvG;

1.7
date	2015.02.11.07.21.10;	author jmc;	state Exp;
branches;
next	1.6;
commitid	b9gyBpm1EHiL4vuG;

1.6
date	2015.02.11.04.02.23;	author tedu;	state Exp;
branches;
next	1.5;
commitid	hvZqq5bBRQ7Ri0PO;

1.5
date	2014.12.02.07.39.58;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	FRRNhJVDlLmRqp6w;

1.4
date	2014.11.21.12.52.54;	author jmc;	state Exp;
branches;
next	1.3;
commitid	ACpKBpKAqXFERdBy;

1.3
date	2014.11.21.12.44.18;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	A0LDE3wl8kur9YNz;

1.2
date	2014.11.21.05.13.44;	author tedu;	state Exp;
branches;
next	1.1;
commitid	H7AJhZvkXj2g8HJk;

1.1
date	2014.11.20.19.18.25;	author tedu;	state Exp;
branches;
next	;
commitid	pSPKVvpW84eVdee6;


desc
@@


1.9
log
@call it bcrypt in the man page too
@
text
@.\" $OpenBSD: crypt_checkpass.3,v 1.8 2015/02/24 19:22:12 tedu Exp $
.\"
.\" Copyright (c) 2014 Ted Unangst <tedu@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: February 24 2015 $
.Dt CRYPT_CHECKPASS 3
.Os
.Sh NAME
.Nm crypt_checkpass ,
.Nm crypt_newhash
.Nd password hashing
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn crypt_checkpass "const char *password" "const char *hash"
.Ft int
.Fn crypt_newhash "const char *password" "const char *pref" "char *hash" "size_t hashsize"
.Sh DESCRIPTION
The
.Fn crypt_checkpass
function is provided to simplify checking a user's password.
If both the
.Fa hash
and the
.Fa password
are the empty string, authentication
is a success.
Otherwise, the
.Fa password
is hashed and compared to the provided
.Fa hash .
If the
.Fa hash
is
.Dv NULL ,
authentication will always fail, but a default
amount of work is performed to simulate the hashing operation.
A successful match will return 0.
A failure will return \-1 and set
.Xr errno 2 .
.Pp
The
.Fn crypt_newhash
function is provided to simplify the creation of new password hashes.
The provided
.Fa password
is randomly salted and hashed and stored in
.Fa hash .
The
.Fa pref
argument identifies the preferred hashing algorithm and parameters.
Possible values are:
.Bl -tag -width Ds
.It Dq bcrypt,<rounds>
The bcrypt algorithm, where the value of rounds can be between 4 and 31 and
specifies the base 2 logarithm of the number of rounds.
The special rounds value
.Sq a
automatically selects rounds based on system performance.
.El
.Sh RETURN VALUES
.Rv -std crypt_checkpass crypt_newhash
.Sh ERRORS
The
.Fn crypt_checkpass
function sets
.Va errno
to
.Er EACCESS
when authentication fails.
.Pp
The
.Fn crypt_newhash
function sets
.Va errno
to
.Er EINVAL
if
.Fa pref
is unsupported.
.Sh SEE ALSO
.Xr crypt 3 ,
.Xr login.conf 5 ,
.Xr passwd 5
.Sh HISTORY
The function
.Fn crypt_checkpass
first appeared in
.Ox 5.6 ,
and
.Fn crypt_newhash
in
.Ox 5.7 .
.Sh AUTHORS
.An Ted Unangst Aq Mt tedu@@openbsd.org
@


1.8
log
@we don't let strtonum errors bleed through now.
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.7 2015/02/11 07:21:10 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: February 11 2015 $
d66 1
a66 1
.It Dq blowfish,<rounds>
@


1.7
log
@use a width specifier for lists, and Sq rather than Dq for single letters
to avoid swamping it;
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.6 2015/02/11 04:02:23 tedu Exp $
a89 2
or any of the errors specified for
.Xr strtonum 3
@


1.6
log
@the possible algos for pref should be documented here
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.5 2014/12/02 07:39:58 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: December 2 2014 $
d65 1
a65 1
.Bl -tag
d70 1
a70 1
.Dq a
@


1.5
log
@macro cleanup; kaspars at bankovskis dot net
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.4 2014/11/21 12:52:54 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 21 2014 $
d64 9
a72 2
Refer to
.Xr login.conf 5 .
@


1.4
log
@space needed between macro args and punctuation;
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.3 2014/11/21 12:44:18 schwarze Exp $
d34 5
a38 1
If both the hash and the password are the empty string, authentication
d40 7
a46 2
Otherwise, the password is hashed and compared to the provided hash.
If the hash is
@


1.3
log
@add ERRORS, HISTORY, AUTHORS, Copyright year, and some missing macros;
ok tedu@@ on a previous version
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.2 2014/11/21 05:13:44 tedu Exp $
d38 1
a38 1
.Dv NULL,
@


1.2
log
@change prototype for crypt_newhash. the login_cap_t is a holdover from its
pwd_gensalt origins, but a string argument works equally work and is more
friendly to consumers beyond local user accounts.
ok deraadt
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt_checkpass.3,v 1.1 2014/11/20 19:18:25 tedu Exp $
d3 1
a3 1
.\" Copyright (c) Ted Unangst <tedu@@openbsd.org>
d17 1
a17 1
.Dd $Mdocdate: November 20 2014 $
d37 3
a39 1
If the hash is NULL, authentication will always fail, but a default
d42 2
a43 1
A failure will return \-1 and set errno.
d58 21
a78 2
These functions
return 0 on success and -1 on failure.
d83 11
@


1.1
log
@split crypt_checkpass off into a new file
@
text
@d1 1
a1 1
.\" $OpenBSD: crypt.3,v 1.39 2014/11/17 16:47:28 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: November 17 2014 $
a27 1
.In login_cap.h
d29 1
a29 1
.Fn crypt_newhash "const char *password" "login_cap_t *lc" "char *hash" "size_t hashsize"
d49 3
a51 3
The login class argument
.Fa lc
is used to identify the preferred hashing algorithm and parameters.
@

