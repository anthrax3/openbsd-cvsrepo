head	1.27;
access;
symbols
	OPENBSD_6_2:1.27.0.8
	OPENBSD_6_2_BASE:1.27
	OPENBSD_6_1:1.27.0.6
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.2
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.26.0.4
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.26.0.6
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.22.0.4
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.19.0.4
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.18.0.12
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.10
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.8
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.6
	OPENBSD_5_0:1.18.0.4
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.18.0.2
	OPENBSD_4_9_BASE:1.18
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.16.0.8
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.15.0.20
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.18
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.16
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.14
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.12
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.13.0.14
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.12
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.10
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.8
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.6
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.12.0.4
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.12.0.2
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.10.0.2
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.9.0.6
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.4
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.9.0.2
	OPENBSD_2_1_BASE:1.9
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4;
locks; strict;
comment	@# @;


1.27
date	2016.03.30.06.38.41;	author jmc;	state Exp;
branches;
next	1.26;
commitid	LN9ijdk9SEnzWAbM;

1.26
date	2014.12.08.20.46.04;	author tedu;	state Exp;
branches;
next	1.25;
commitid	jyPn8wRChCdNuuDz;

1.25
date	2014.12.08.20.36.18;	author tedu;	state Exp;
branches;
next	1.24;
commitid	uwfz8fEq8CcGyq06;

1.24
date	2014.11.20.19.18.25;	author tedu;	state Exp;
branches;
next	1.23;
commitid	pSPKVvpW84eVdee6;

1.23
date	2014.11.18.22.17.50;	author jmc;	state Exp;
branches;
next	1.22;
commitid	d0REcHhUxt13IEl7;

1.22
date	2014.07.12.13.24.54;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	tFieA8IV4MiGXT0e;

1.21
date	2014.05.16.22.11.00;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2014.05.12.19.13.14;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2013.10.21.20.33.23;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2010.10.28.08.34.37;	author mikeb;	state Exp;
branches;
next	1.17;

1.17
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.16;

1.16
date	2008.03.16.22.08.12;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	2003.08.12.01.22.17;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	2003.08.07.00.32.12;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.11.17.05.22.36;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	99.02.26.00.54.00;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.11.20.11.18.33;	author d;	state Exp;
branches;
next	1.10;

1.10
date	98.07.21.22.23.20;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	97.04.16.12.11.27;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.04.15.13.06.54;	author provos;	state Exp;
branches;
next	1.7;

1.7
date	97.02.16.20.58.11;	author provos;	state Exp;
branches;
next	1.6;

1.6
date	97.02.13.16.59.53;	author provos;	state Exp;
branches;
next	1.5;

1.5
date	96.12.28.06.33.00;	author dm;	state Exp;
branches;
next	1.4;

1.4
date	96.06.03.22.20.33;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.30.02.36.32;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.22.31.44;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.12.16.12.55.27;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@#	$OpenBSD: Makefile.inc,v 1.26 2014/12/08 20:46:04 tedu Exp $

.PATH: ${LIBCSRCDIR}/arch/${MACHINE_CPU}/crypt ${LIBCSRCDIR}/crypt

SRCS+=	crypt.c cryptutil.c arc4random.c arc4random_uniform.c \
	blowfish.c bcrypt.c

MAN+=	crypt.3 crypt_checkpass.3 blowfish.3 arc4random.3
@


1.26
log
@delete documentation for deleted DES interfaces
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.25 2014/12/08 20:36:18 tedu Exp $
a8 7
MLINKS+=crypt.3 bcrypt_gensalt.3 crypt.3 bcrypt.3
MLINKS+=crypt_checkpass.3 crypt_newhash.3
MLINKS+=blowfish.3 blf_key.3 blowfish.3 blf_enc.3
MLINKS+=blowfish.3 blf_dec.3 blowfish.3 blf_ecb_encrypt.3
MLINKS+=blowfish.3 blf_ecb_decrypt.3 blowfish.3 blf_cbc_encrypt.3
MLINKS+=blowfish.3 blf_cbc_decrypt.3
MLINKS+=arc4random.3 arc4random_buf.3 arc4random.3 arc4random_uniform.3
@


1.25
log
@remove setkey and encrypt interfaces. they are useless and dangerous.
ok deraadt naddy
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.24 2014/11/20 19:18:25 tedu Exp $
a8 2
MLINKS+=crypt.3 setkey.3 crypt.3 encrypt.3
MLINKS+=crypt.3 des_setkey.3 crypt.3 des_cipher.3
@


1.24
log
@split crypt_checkpass off into a new file
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.23 2014/11/18 22:17:50 jmc Exp $
d5 1
a5 1
SRCS+=	crypt.c crypt2.c cryptutil.c arc4random.c arc4random_uniform.c \
@


1.23
log
@add crypt_newhash to NAME and add an MLINK;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.22 2014/07/12 13:24:54 deraadt Exp $
d8 2
a9 3
MAN+=	crypt.3 blowfish.3 arc4random.3
MLINKS+=crypt.3 setkey.3 crypt.3 crypt_checkpass.3
MLINKS+=crypt.3 crypt_newhash.3 crypt.3 encrypt.3
d12 1
@


1.22
log
@Split arc4random_uniform into it's own file, to assist other projects
now using this as upstream code.  The particular problem is systems
that contain older arc4random derivations lacking arc4random_uniform().
ok tedu miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.21 2014/05/16 22:11:00 jmc Exp $
d9 2
a10 1
MLINKS+=crypt.3 setkey.3 crypt.3 crypt_checkpass.3 crypt.3 encrypt.3
@


1.21
log
@update NAME and MLINKS for previous;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.20 2014/05/12 19:13:14 tedu Exp $
d5 2
a6 1
SRCS+=	crypt.c crypt2.c cryptutil.c arc4random.c blowfish.c bcrypt.c
@


1.20
log
@remove md5crypt.
while changing things, add a crypt_checkpass wrapper that handles most of
the edge cases. (not quite ready for production, though.)
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.19 2013/10/21 20:33:23 deraadt Exp $
d8 2
a9 1
MLINKS+=crypt.3 encrypt.3 crypt.3 setkey.3 crypt.3 des_cipher.3
d11 1
a11 1
MLINKS+=crypt.3 des_setkey.3 blowfish.3 blf_key.3 blowfish.3 blf_enc.3
@


1.19
log
@Remove arc4random_stir() and arc4random_addrandom(), which none should
be using directly.  Well, a few rare people cloned it upstream and it
will take a bit of time for them to learn.
ok various
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.18 2010/10/28 08:34:37 mikeb Exp $
d5 1
a5 1
SRCS+=	crypt.c crypt2.c md5crypt.c arc4random.c blowfish.c bcrypt.c
d9 1
a9 1
MLINKS+=crypt.3 bcrypt_gensalt.3 crypt.3 bcrypt.3 crypt.3 md5crypt.3
@


1.18
log
@remove skipjack and cast from the libc;  ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.17 2010/02/03 20:49:00 miod Exp $
a13 1
MLINKS+=arc4random.3 arc4random_stir.3 arc4random.3 arc4random_addrandom.3
@


1.17
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 2008/03/16 22:08:12 deraadt Exp $
d5 1
a5 2
SRCS+=	cast.c crypt.c crypt2.c md5crypt.c arc4random.c blowfish.c
SRCS+=  bcrypt.c skipjack.c
@


1.16
log
@Add missing MLINKS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 2003/08/12 01:22:17 deraadt Exp $
d3 1
a3 1
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_ARCH}/crypt ${LIBCSRCDIR}/crypt
@


1.15
log
@Split crypto routine sup again, but differently.  This should make the
mail floppy parts a fair bit smaller.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 2003/08/07 00:32:12 deraadt Exp $
d16 1
@


1.14
log
@unsplice crypt.c and morecrypt.c; start to document some bcrypt and md5crypt
things in crypt.3, and create MLINKS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 1999/11/17 05:22:36 millert Exp $
d5 1
a5 1
SRCS+=	cast.c crypt.c md5crypt.c arc4random.c blowfish.c
@


1.13
log
@Add missing MLINKs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 1999/02/26 00:54:00 deraadt Exp $
d5 1
a5 1
SRCS+=	cast.c crypt.c morecrypt.c md5crypt.c arc4random.c blowfish.c
d10 1
@


1.12
log
@skipjack in libc; isakmpd and such will want it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 1998/11/20 11:18:33 d Exp $
d11 3
a13 1
MLINKS+=blowfish.3 blf_dec.3
@


1.11
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 1998/07/21 22:23:20 provos Exp $
d6 1
a6 1
SRCS+=  bcrypt.c
@


1.10
log
@Add CAST encryption, implementation by Steve Reid <sreid@@sea-to-sky.net>.
Man pages will come soon, I hope.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 1997/04/16 12:11:27 deraadt Exp $
d3 1
a3 1
.PATH: ${.CURDIR}/arch/${MACHINE_ARCH}/crypt ${.CURDIR}/crypt
@


1.9
log
@typo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 1997/04/15 13:06:54 provos Exp $
d5 1
a5 1
SRCS+=	crypt.c morecrypt.c md5crypt.c arc4random.c blowfish.c
@


1.8
log
@documentation for arc4random. this is out of memory, might need
some corrections.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 1997/02/16 20:58:11 provos Exp $
d12 1
a12 1
MLINKS+=arc4ranom.3 arc4random_stir.3 arc4random.3 arc4random_addrandom.3
@


1.7
log
@prelim manpage, cleanup, fixed crippled plaintext: sed does a nice
job on replacing everything, just wouldnt skip it
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1997/02/13 16:59:53 provos Exp $
d8 1
a8 1
MAN+=	crypt.3 blowfish.3
d12 1
@


1.6
log
@added bcrypt + blowfish
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1996/12/28 06:33:00 dm Exp $
d8 1
a8 1
MAN+=	crypt.3
d10 2
a11 1
MLINKS+=crypt.3 des_setkey.3
@


1.5
log
@arc4random() number generator, for use with things like RPC xid's.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1996/06/03 22:20:33 niklas Exp $
d5 2
a6 1
SRCS+=	crypt.c morecrypt.c md5crypt.c arc4random.c
@


1.4
log
@Add md[245] routines in libc/md, remove md5 from libc/crypt.  Add $OpenBSD$
@
text
@d1 1
a1 1
#	$OpenBSD$
d5 1
a5 1
SRCS+=	crypt.c morecrypt.c md5crypt.c
@


1.3
log
@add md5crypt()
@
text
@d1 1
a1 1
#	$Id: Makefile.inc,v 1.2 1996/03/25 22:31:44 tholo Exp $
d5 1
a5 1
SRCS+=	crypt.c morecrypt.c md5crypt.c md5c.c
@


1.2
log
@Update prototypes to match declarations
Remove unused variables
Install all man-page links
@
text
@d1 1
a1 1
#	$Id: Makefile.inc,v 1.1 1995/12/16 12:55:27 deraadt Exp $
d5 1
a5 1
SRCS+=	crypt.c morecrypt.c
@


1.1
log
@non-USA crypto code by davidb@@werj.com.au.  The source has been split
& copied into two pieces so that use of crypt() pulls in a crypt.o
that contains only that one programmer interface -- this permits USA
export of binaries that use crypt() for authentication purposes.
morecrypt.c contains the other DES programmer interfaces commonly
used.
@
text
@d1 1
a1 1
#	$Id$
d8 2
a9 1
MLINKS+=crypt.3 encrypt.3 crypt.3 setkey.3
@
