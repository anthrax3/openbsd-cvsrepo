head	1.38;
access;
symbols
	OPENBSD_6_1:1.38.0.8
	OPENBSD_6_1_BASE:1.38
	OPENBSD_6_0:1.38.0.4
	OPENBSD_6_0_BASE:1.38
	OPENBSD_5_9:1.38.0.2
	OPENBSD_5_9_BASE:1.38
	OPENBSD_5_8:1.37.0.4
	OPENBSD_5_8_BASE:1.37
	OPENBSD_5_7:1.35.0.2
	OPENBSD_5_7_BASE:1.35
	OPENBSD_5_6:1.26.0.4
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.25.0.8
	OPENBSD_5_5_BASE:1.25
	OPENBSD_5_4:1.25.0.4
	OPENBSD_5_4_BASE:1.25
	OPENBSD_5_3:1.25.0.2
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.24.0.4
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.2
	OPENBSD_5_0:1.23.0.2
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.22.0.14
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.12
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.8
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.10
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.6
	OPENBSD_4_5_BASE:1.22
	OPENBSD_4_4:1.22.0.4
	OPENBSD_4_4_BASE:1.22
	OPENBSD_4_3:1.22.0.2
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.4
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.2
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.17.0.2
	OPENBSD_3_8_BASE:1.17
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.14.0.10
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.8
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.14.0.6
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.4
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.2
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.13.0.6
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.4
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.2
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.11.0.4
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.11.0.2
	OPENBSD_2_5_BASE:1.11
	OPENBSD_2_4:1.10.0.4
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.6.0.4
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.2
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.38
date	2015.10.24.18.13.18;	author guenther;	state Exp;
branches;
next	1.37;
commitid	3UUG5rCiAaQfZxGj;

1.37
date	2015.04.07.01.47.04;	author millert;	state Exp;
branches;
next	1.36;
commitid	WuVjttMIVorUAdZQ;

1.36
date	2015.03.13.17.23.37;	author deraadt;	state Exp;
branches;
next	1.35;
commitid	rzt00JpJWCZGbg5Q;

1.35
date	2015.02.10.05.44.50;	author tedu;	state Exp;
branches;
next	1.34;
commitid	cfVEtDCW9pIcWSA2;

1.34
date	2015.02.09.14.00.03;	author tedu;	state Exp;
branches;
next	1.33;
commitid	d4VCCcG9HT8Wy2HB;

1.33
date	2015.02.09.13.46.22;	author tedu;	state Exp;
branches;
next	1.32;
commitid	lqdxXphiTozivn2t;

1.32
date	2015.02.09.13.42.03;	author tedu;	state Exp;
branches;
next	1.31;
commitid	tEJYsctuW7dx3cGd;

1.31
date	2015.02.09.13.39.16;	author tedu;	state Exp;
branches;
next	1.30;
commitid	dfCzFltGsoBkcZKk;

1.30
date	2015.02.09.13.27.36;	author tedu;	state Exp;
branches;
next	1.29;
commitid	EtttF6hpFy1XXPY2;

1.29
date	2015.02.09.13.03.59;	author tedu;	state Exp;
branches;
next	1.28;
commitid	hM2fRR2l9wlf7blE;

1.28
date	2015.02.09.11.29.19;	author tedu;	state Exp;
branches;
next	1.27;
commitid	tJvDnNK0SzmBKgN8;

1.27
date	2015.02.09.08.25.11;	author tedu;	state Exp;
branches;
next	1.26;
commitid	1GKby7MIpIVNqvkA;

1.26
date	2014.05.06.15.49.45;	author tedu;	state Exp;
branches;
next	1.25;

1.25
date	2012.09.13.11.14.20;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2011.10.10.13.53.24;	author ajacoutot;	state Exp;
branches;
next	1.23;

1.23
date	2011.07.01.13.34.18;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2008.01.07.01.09.37;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2007.12.29.22.26.51;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2007.06.30.13.20.42;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2007.02.06.19.35.16;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2006.02.18.21.54.17;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2005.07.05.13.40.51;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2004.10.18.22.33.43;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2004.06.28.14.47.41;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.04.19.12.09;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2000.09.06.23.05.11;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.16.16.24.04;	author d;	state Exp;
branches;
next	1.11;

1.11
date	99.01.29.07.04.05;	author d;	state Exp;
branches;
next	1.10;

1.10
date	98.01.23.19.33.51;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	98.01.19.00.45.30;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.01.19.00.07.39;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.01.18.23.24.55;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.01.14.03.16.48;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.10.30.00.20.12;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.08.19.08.34.51;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.01.29.02.08.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.11.17.46.24;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.38
log
@Move #includes from private.h to the .c files that need them, getting rid of
several.  Switch from FILENAME_MAX to PATH_MAX (it's for open(), not fopen()).

ok deraadt@@ tedu@@ krw@@
@
text
@/*	$OpenBSD: private.h,v 1.37 2015/04/07 01:47:04 millert Exp $	*/
#ifndef PRIVATE_H

#define PRIVATE_H

/*
** This file is in the public domain, so clarified as of
** 1996-06-05 by Arthur David Olson.
*/

/* OpenBSD defaults */
#define TM_GMTOFF		tm_gmtoff
#define TM_ZONE			tm_zone
#define PCTS			1
#define ALL_STATE		1
#define STD_INSPIRED		1
#define USG_COMPAT		1

/*
** This header is for use ONLY with the time conversion code.
** There is no guarantee that it will remain unchanged,
** or that it will remain at all.
** Do NOT copy it to any system include directory.
** Thank you!
*/

#define GRANDPARENTED	"Local time zone must be set--see zic manual page"

/*
** Nested includes
*/

#include <limits.h>	/* for CHAR_BIT et al. */
#include <time.h>

/*
** Finally, some convenience items.
*/

#ifndef TRUE
#define TRUE	1
#endif /* !defined TRUE */

#ifndef FALSE
#define FALSE	0
#endif /* !defined FALSE */

#ifndef TYPE_BIT
#define TYPE_BIT(type)	(sizeof (type) * CHAR_BIT)
#endif /* !defined TYPE_BIT */

#ifndef TYPE_SIGNED
#define TYPE_SIGNED(type) (((type) -1) < 0)
#endif /* !defined TYPE_SIGNED */

#ifndef INT_STRLEN_MAXIMUM
/*
** 302 / 1000 is log10(2.0) rounded up.
** Subtract one for the sign bit if the type is signed;
** add one for integer division truncation;
** add one more for a minus sign if the type is signed.
*/
#define INT_STRLEN_MAXIMUM(type) \
	((TYPE_BIT(type) - TYPE_SIGNED(type)) * 302 / 1000 + \
	1 + TYPE_SIGNED(type))
#endif /* !defined INT_STRLEN_MAXIMUM */

#define _(msgid) msgid

#ifndef TZ_DOMAIN
#define TZ_DOMAIN "tz"
#endif /* !defined TZ_DOMAIN */

#ifndef YEARSPERREPEAT
#define YEARSPERREPEAT		400	/* years before a Gregorian repeat */
#endif /* !defined YEARSPERREPEAT */

/*
** The Gregorian year averages 365.2425 days, which is 31556952 seconds.
*/

#ifndef AVGSECSPERYEAR
#define AVGSECSPERYEAR		31556952L
#endif /* !defined AVGSECSPERYEAR */

#ifndef SECSPERREPEAT
#define SECSPERREPEAT		((int_fast64_t) YEARSPERREPEAT * (int_fast64_t) AVGSECSPERYEAR)
#endif /* !defined SECSPERREPEAT */

#ifndef SECSPERREPEAT_BITS
#define SECSPERREPEAT_BITS	34	/* ceil(log2(SECSPERREPEAT)) */
#endif /* !defined SECSPERREPEAT_BITS */

#endif /* !defined PRIVATE_H */
@


1.37
log
@Remove obsolete timezone() function.
Add timezone and daylight symbols for XSI compatibility.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.36 2015/03/13 17:23:37 deraadt Exp $	*/
a32 4
#include <sys/types.h>	/* for time_t */
#include <stdio.h>
#include <errno.h>
#include <string.h>
a34 8
#include <stdlib.h>


#include <sys/wait.h>	/* for WIFEXITED and WEXITSTATUS */

#include <unistd.h>	/* for F_OK, R_OK, and other POSIX goodness */

#include <stdint.h>
@


1.36
log
@delete useless comment about Open Group
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.35 2015/02/10 05:44:50 tedu Exp $	*/
d17 1
@


1.35
log
@move scheck.c into zic.c
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.34 2015/02/09 14:00:03 tedu Exp $	*/
a103 4

/*
** UNIX was a registered trademark of The Open Group in 2003.
*/
@


1.34
log
@the one true type of time_t is a signed integer
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.33 2015/02/09 13:46:22 tedu Exp $	*/
a45 6

/*
** Private function declarations.
*/

const char *	scheck(const char * string, const char * format);
@


1.33
log
@remove INITIALIZE macro and do it the hard way.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.32 2015/02/09 13:42:03 tedu Exp $	*/
a71 9

/*
** Since the definition of TYPE_INTEGRAL contains floating point numbers,
** it cannot be used in preprocessor directives.
*/

#ifndef TYPE_INTEGRAL
#define TYPE_INTEGRAL(type) (((type) 0.5) != 0.5)
#endif /* !defined TYPE_INTEGRAL */
@


1.32
log
@unifdef the rest of the HAVEs and HAVE nots
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.31 2015/02/09 13:39:16 tedu Exp $	*/
a93 31
/*
** INITIALIZE(x)
*/

#ifndef GNUC_or_lint
#ifdef lint
#define GNUC_or_lint
#endif /* defined lint */
#ifndef lint
#ifdef __GNUC__
#define GNUC_or_lint
#endif /* defined __GNUC__ */
#endif /* !defined lint */
#endif /* !defined GNUC_or_lint */

#ifndef INITIALIZE
#ifdef GNUC_or_lint
#define INITIALIZE(x)	((x) = 0)
#endif /* defined GNUC_or_lint */
#ifndef GNUC_or_lint
#define INITIALIZE(x)
#endif /* !defined GNUC_or_lint */
#endif /* !defined INITIALIZE */

/*
** For the benefit of GNU folk...
** `_(MSGID)' uses the current locale's message library string for MSGID.
** The default is to use gettext if available, and use MSGID otherwise.
*/

#ifndef _
a94 1
#endif /* !defined _ */
@


1.31
log
@unifdef have gettext. don't have it, won't have it.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.30 2015/02/09 13:27:36 tedu Exp $	*/
a16 2
#define HAVE_STRERROR		1
#define HAVE_STDINT_H		1
a27 14
#define HAVE_ADJTIME		1

#define HAVE_SETTIMEOFDAY	3

#define HAVE_SYMLINK		1

#define HAVE_SYS_STAT_H		1

#define HAVE_SYS_WAIT_H		1

#define HAVE_UNISTD_H		1

#define HAVE_UTMPX_H		0

a45 13

#ifndef INT_FAST64_MAX
/* Pre-C99 GCC compilers define __LONG_LONG_MAX__ instead of LLONG_MAX.  */
#if defined LLONG_MAX || defined __LONG_LONG_MAX__
typedef long long	int_fast64_t;
#else /* ! (defined LLONG_MAX || defined __LONG_LONG_MAX__) */
#if (LONG_MAX >> 31) < 0xffffffff
Please use a compiler that supports a 64-bit integer type (or wider);
you may need to compile with "-DHAVE_STDINT_H".
#endif /* (LONG_MAX >> 31) < 0xffffffff */
typedef long		int_fast64_t;
#endif /* ! (defined LLONG_MAX || defined __LONG_LONG_MAX__) */
#endif /* !defined INT_FAST64_MAX */
@


1.30
log
@trim down some of the ifndef redefine madness
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.29 2015/02/09 13:03:59 tedu Exp $	*/
a31 2
#define HAVE_GETTEXT		0

a55 3
#if HAVE_GETTEXT
#include "libintl.h"
#endif /* HAVE_GETTEXT */
a153 3
#if HAVE_GETTEXT
#define _(msgid) gettext(msgid)
#else /* !HAVE_GETTEXT */
a154 1
#endif /* !HAVE_GETTEXT */
@


1.29
log
@replace homegrown is_digit with correct calls to isdigit()
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.28 2015/02/09 11:29:19 tedu Exp $	*/
a29 6
/*
** Defaults for preprocessor symbols.
** You can override these in your C compiler options, e.g. `-DHAVE_ADJTIME=0'.
*/

#ifndef HAVE_ADJTIME
a30 1
#endif /* !defined HAVE_ADJTIME */
a31 1
#ifndef HAVE_GETTEXT
a32 5
#endif /* !defined HAVE_GETTEXT */

#ifndef HAVE_INCOMPATIBLE_CTIME_R
#define HAVE_INCOMPATIBLE_CTIME_R	0
#endif /* !defined INCOMPATIBLE_CTIME_R */
a33 1
#ifndef HAVE_SETTIMEOFDAY
a34 1
#endif /* !defined HAVE_SETTIMEOFDAY */
a35 1
#ifndef HAVE_SYMLINK
a36 1
#endif /* !defined HAVE_SYMLINK */
a37 1
#ifndef HAVE_SYS_STAT_H
a38 1
#endif /* !defined HAVE_SYS_STAT_H */
a39 1
#ifndef HAVE_SYS_WAIT_H
a40 1
#endif /* !defined HAVE_SYS_WAIT_H */
a41 1
#ifndef HAVE_UNISTD_H
a42 1
#endif /* !defined HAVE_UNISTD_H */
a43 1
#ifndef HAVE_UTMPX_H
a44 12
#endif /* !defined HAVE_UTMPX_H */

#if 0
#ifndef LOCALE_HOME
#define LOCALE_HOME		"/usr/share/locale"
#endif /* !defined LOCALE_HOME */
#endif

#if HAVE_INCOMPATIBLE_CTIME_R
#define asctime_r _incompatible_asctime_r
#define ctime_r _incompatible_ctime_r
#endif /* HAVE_INCOMPATIBLE_CTIME_R */
d50 7
a56 7
#include "sys/types.h"	/* for time_t */
#include "stdio.h"
#include "errno.h"
#include "string.h"
#include "limits.h"	/* for CHAR_BIT et al. */
#include "time.h"
#include "stdlib.h"
d64 1
a64 15
#ifndef WIFEXITED
#define WIFEXITED(status)	(((status) & 0xff) == 0)
#endif /* !defined WIFEXITED */
#ifndef WEXITSTATUS
#define WEXITSTATUS(status)	(((status) >> 8) & 0xff)
#endif /* !defined WEXITSTATUS */

#include "unistd.h"	/* for F_OK, R_OK, and other POSIX goodness */

#ifndef F_OK
#define F_OK	0
#endif /* !defined F_OK */
#ifndef R_OK
#define R_OK	4
#endif /* !defined R_OK */
d66 1
a66 1
#include "stdint.h"
a80 23
#ifndef INT32_MAX
#define INT32_MAX 0x7fffffff
#endif /* !defined INT32_MAX */
#ifndef INT32_MIN
#define INT32_MIN (-1 - INT32_MAX)
#endif /* !defined INT32_MIN */

/*
** Workarounds for compilers/systems.
*/

#if 0
/*
** Some time.h implementations don't declare asctime_r.
** Others might define it as a macro.
** Fix the former without affecting the latter.
*/

#ifndef asctime_r
extern char *	asctime_r(struct tm const *, char *);
#endif
#endif

a168 7

#if HAVE_INCOMPATIBLE_CTIME_R
#undef asctime_r
#undef ctime_r
char *asctime_r(struct tm const *, char *);
char *ctime_r(time_t const *, char *);
#endif /* HAVE_INCOMPATIBLE_CTIME_R */
@


1.28
log
@stop trying to workaround malloc bugs that have not existed for 20 years.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.27 2015/02/09 08:25:11 tedu Exp $	*/
a114 3

/* Unlike <ctype.h>'s isdigit, this also works if c < 0 | c > UCHAR_MAX. */
#define is_digit(c) ((unsigned)(c) - '0' <= 9)
@


1.27
log
@this removes just a few ifdef checks for things that should always be enabled,
and which we definitely don't want to workaround. no change in the compiled
code (yet).
some of these, like the first chunk are plain silly. the compiler used to
compile asctime has nothing to do with the format strings strftime should
support.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.26 2014/05/06 15:49:45 tedu Exp $	*/
a160 7
char *		icalloc(int nelem, int elsize);
char *		icatalloc(char * old, const char * new);
char *		icpyalloc(const char * string);
char *		imalloc(int n);
void *		irealloc(void * pointer, int size);
void		icfree(char * pointer);
void		ifree(char * pointer);
@


1.26
log
@enh@@google reported a warning in crufty y2k code. just delete it.
ok deraadt stsp
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.25 2012/09/13 11:14:20 millert Exp $	*/
a97 1
#if HAVE_SYS_WAIT_H
a98 1
#endif /* HAVE_SYS_WAIT_H */
a106 1
#if HAVE_UNISTD_H
a107 1
#endif /* HAVE_UNISTD_H */
a118 1
#if HAVE_STDINT_H
a119 1
#endif /* !HAVE_STDINT_H */
@


1.25
log
@Update to tzcode2012f.  Now that tzcode is in git there are no moe
SCCS ids.  No actual code changes.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.24 2011/10/10 13:53:24 ajacoutot Exp $	*/
a18 1
#define NO_RUN_TIME_WARNINGS_ABOUT_YEAR_2000_PROBLEMS_THANK_YOU	1
@


1.24
log
@Stop defining XPG4_1994_04_09.

As kettenis@@ pointed at,
http://pubs.opengroup.org/onlinepubs/009695399/functions/strftime.html
has the following:
The Open Group Corrigendum U033/8 is applied. The %V conversion
specifier is changed from "Otherwise, it is week 53 of the previous
year, and the next week is week 1" to "Otherwise, it is the last
week of the previous year, and the next week is week 1".

In effect, strftime(3) with the "%V" format will now return "52" instead
of "53" for days in January before the first Monday, when January 1st
falls on a Friday, Saturday, or Sunday.

ok kettenis@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.23 2011/07/01 13:34:18 millert Exp $	*/
a27 12

/*
** ID
*/

#if 0
#ifndef lint
#ifndef NOID
static char	privatehid[] = "@@(#)private.h	8.6";
#endif /* !defined NOID */
#endif /* !defined lint */
#endif
@


1.23
log
@Enable the knob to dynamically allocate (large) state structures.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.22 2008/01/07 01:09:37 millert Exp $	*/
a14 1
#define XPG4_1994_04_09		1
@


1.22
log
@update to tzcode2007k from elsie.nci.nih.gov
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.21 2007/12/29 22:26:51 millert Exp $	*/
d16 1
@


1.21
log
@update to tzcode2007j from elsie.nci.nih.gov; mostly ANSIfication
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.20 2007/06/30 13:20:42 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	8.5";
a62 4

#ifndef HAVE_STRERROR
#define HAVE_STRERROR		1
#endif /* !defined HAVE_STRERROR */
@


1.20
log
@Update to tzcode2007f from elsie.nci.nih.gov
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.19 2007/02/06 19:35:16 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	8.3";
d127 1
a127 1
#include "unistd.h"	/* for F_OK and R_OK */
a129 1
#if !HAVE_UNISTD_H
a135 1
#endif /* !HAVE_UNISTD_H */
a167 45
/*
** If your compiler lacks prototypes, "#define P(x) ()".
*/

#ifndef P
#define P(x)	x
#endif /* !defined P */

/*
** SunOS 4.1.1 headers lack EXIT_SUCCESS.
*/

#ifndef EXIT_SUCCESS
#define EXIT_SUCCESS	0
#endif /* !defined EXIT_SUCCESS */

/*
** SunOS 4.1.1 headers lack EXIT_FAILURE.
*/

#ifndef EXIT_FAILURE
#define EXIT_FAILURE	1
#endif /* !defined EXIT_FAILURE */

/*
** SunOS 4.1.1 headers lack FILENAME_MAX.
*/

#ifndef FILENAME_MAX

#ifndef MAXPATHLEN
#ifdef unix
#include "sys/param.h"
#endif /* defined unix */
#endif /* !defined MAXPATHLEN */

#ifdef MAXPATHLEN
#define FILENAME_MAX	MAXPATHLEN
#endif /* defined MAXPATHLEN */
#ifndef MAXPATHLEN
#define FILENAME_MAX	1024		/* Pure guesswork */
#endif /* !defined MAXPATHLEN */

#endif /* !defined FILENAME_MAX */

a169 18
** SunOS 4.1.1 libraries lack remove.
*/

#ifndef remove
extern int	unlink P((const char * filename));
#define remove	unlink
#endif /* !defined remove */

/*
** Some ancient errno.h implementations don't declare errno.
** But some newer errno.h implementations define it as a macro.
** Fix the former without affecting the latter.
*/
#ifndef errno
extern int errno;
#endif /* !defined errno */

/*
d176 1
a176 1
extern char * asctime_r();
d184 8
a191 8
char *		icalloc P((int nelem, int elsize));
char *		icatalloc P((char * old, const char * new));
char *		icpyalloc P((const char * string));
char *		imalloc P((int n));
void *		irealloc P((void * pointer, int size));
void		icfree P((char * pointer));
void		ifree P((char * pointer));
const char *	scheck P((const char * string, const char * format));
d279 2
a280 2
char *asctime_r P((struct tm const *, char *));
char *ctime_r P((time_t const *, char *));
@


1.19
log
@Update to tzcode2007a.  This adds support for 64bit time_t in case
we need it in the future.  All of our platforms currently have 32bit
time_t types.  This also extends the timezone data file format to
support both 32bit and 64bit data.  The 64bit data is located after
the 32bit data so binaries linked with the older tzcode simply won't
look at it.  A version field in the file header is used to determine
whether the data file is the old or extended format.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.18 2006/02/18 21:54:17 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	8.2";
d363 1
a363 1
 
@


1.18
log
@Update to tzcode2006a; primarily just cast and const fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.17 2005/07/05 13:40:51 millert Exp $	*/
d18 1
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.55";
d107 1
a107 1
#include "limits.h"	/* for CHAR_BIT */
d142 24
d171 1
a171 1
** SunOS 4.1.1 cc lacks prototypes.
a174 1
#ifdef __STDC__
a175 4
#endif /* defined __STDC__ */
#ifndef __STDC__
#define P(x)	()
#endif /* !defined __STDC__ */
d249 8
a256 8
char *	icalloc P((int nelem, int elsize));
char *	icatalloc P((char * old, const char * new));
char *	icpyalloc P((const char * string));
char *	imalloc P((int n));
void *	irealloc P((void * pointer, int size));
void	icfree P((char * pointer));
void	ifree P((char * pointer));
const char *scheck P((const char *string, const char *format));
d347 20
@


1.17
log
@Update to tzcode2005j.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.16 2004/10/18 22:33:43 millert Exp $	*/
d8 1
a8 1
** 1996-06-05 by Arthur David Olson (arthur_david_olson@@nih.gov).
d236 1
a236 1
char *	scheck P((const char *string, char *format));
@


1.16
log
@Update to tzcode2004e from elsie.nci.nih.gov
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.15 2004/06/28 14:47:41 millert Exp $	*/
a16 1
#define HAVE_LONG_DOUBLE	1
d35 1
a35 1
static char	privatehid[] = "@@(#)private.h	7.54";
d40 2
d110 1
a110 1
#if HAVE_GETTEXT - 0
d112 1
a112 1
#endif /* HAVE_GETTEXT - 0 */
d114 1
a114 1
#if HAVE_SYS_WAIT_H - 0
d116 1
a116 1
#endif /* HAVE_SYS_WAIT_H - 0 */
d125 1
a125 1
#if HAVE_UNISTD_H - 0
d127 1
a127 1
#endif /* HAVE_UNISTD_H - 0 */
d129 1
a129 1
#if !(HAVE_UNISTD_H - 0)
d136 1
a136 1
#endif /* !(HAVE_UNISTD_H - 0) */
d138 1
a138 1
/* Unlike <ctype.h>'s isdigit, this also works if c < 0 | c > UCHAR_MAX.  */
d228 1
d236 1
a236 2
char *	scheck P((const char *string, const char *format));

d258 9
d275 2
a276 1
    ((TYPE_BIT(type) - TYPE_SIGNED(type)) * 302 / 1000 + 1 + TYPE_SIGNED(type))
d310 1
a310 1
#if HAVE_GETTEXT - 0
d312 1
a312 1
#else /* !(HAVE_GETTEXT - 0) */
d314 1
a314 1
#endif /* !(HAVE_GETTEXT - 0) */
@


1.15
log
@merge in tzcode2004a
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.14 2002/04/04 19:12:09 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.53";
d194 1
a203 1
#if 0
d212 10
@


1.14
log
@Minor updates from tzcode2002c
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.13 2000/09/06 23:05:11 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.52";
d308 1
a308 1
** UNIX was a registered trademark of UNIX System Laboratories in 1993.
@


1.13
log
@Update to tzcode2000f from ftp://elsie.nci.nih.gov/pub/
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.12 2000/04/16 16:24:04 d Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.51";
d70 4
a142 10

/*
** SunOS 4.1.1 cc lacks const.
*/

#ifndef const
#ifndef __STDC__
#define const
#endif /* !defined __STDC__ */
#endif /* !defined const */
@


1.12
log
@sync with ftp://elsie.nci.nih.gov/pub/tzcode2000c.tar.gz, millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.11 1999/01/29 07:04:05 d Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.49";
d54 4
d63 1
a63 1
#define HAVE_STRERROR		0
d88 5
d305 7
@


1.11
log
@tzcode1999a from ftp://elsie.nci.nih.gov/pub
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.10 1998/01/23 19:33:51 millert Exp $	*/
d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.48";
d66 4
d99 11
@


1.10
log
@Don't try to use our locale stuff, it hoses strftime(3).
@
text
@d1 1
a1 2
/*	$OpenBSD: private.h,v 1.9 1998/01/19 00:45:30 millert Exp $	*/

d36 1
a36 1
static char	privatehid[] = "@@(#)private.h	7.46";
d62 4
d237 1
a237 1
    ((TYPE_BIT(type) - TYPE_SIGNED(type)) * 302 / 100 + 1 + TYPE_SIGNED(type))
@


1.9
log
@We want XPG4 behavior.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.8 1998/01/19 00:07:39 millert Exp $	*/
d71 1
d75 1
@


1.8
log
@use tzcode strftime(3) as it is kept up to date.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.7 1998/01/18 23:24:55 millert Exp $	*/
d16 1
@


1.7
log
@tzcode1998b from ftp://elsie.nci.nih.gov/pub
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.6 1997/01/14 03:16:48 millert Exp $	*/
d19 1
d71 1
a71 1
#define LOCALE_HOME		"/usr/lib/locale"
@


1.6
log
@Update to tzcode1996o + our fixes.  Fixes problem pointed out
by cross@@va.pubnix.com.
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.5 1996/10/30 00:20:12 tholo Exp $	*/
d35 1
a35 1
static char	privatehid[] = "@@(#)private.h	7.44";
d188 13
@


1.5
log
@iUpdate to pass FIPS 151-2 tests
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.4 1996/08/19 08:34:51 tholo Exp $	*/
d4 1
d7 5
d13 6
a18 5
#define TM_GMTOFF	tm_gmtoff
#define TM_ZONE		tm_zone
#define PCTS		1
#define STD_INSPIRED	1
#define HAVE_LONG_DOUBLE 1
d29 12
d49 4
d57 4
d85 4
d178 11
d243 18
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
/*	$OpenBSD: private.h,v 1.5 1996/01/20 02:31:20 jtc Exp $	*/
d6 1
a6 1
/* NetBSD defaults */
d9 1
@


1.3
log
@new common tz code
@
text
@d1 1
a1 1
/*	$NetBSD: private.h,v 1.5 1996/01/20 02:31:20 jtc Exp $	*/
a18 10

/*
** ID
*/

#ifndef lint
#ifndef NOID
static char	privatehid[] = "@@(#)private.h	7.39";
#endif /* !defined NOID */
#endif /* !defined lint */
@


1.2
log
@from netbsd; sync with tzcode96a
@
text
@d1 1
a1 1
/*	$NetBSD: private.h,v 1.4 1996/01/08 22:50:57 jtc Exp $	*/
d26 1
a26 1
static char	privatehid[] = "@@(#)private.h	7.35";
d47 4
d168 8
d179 3
a181 8
** If type is signed:
**	subtract one for the sign bit;
**	add one for integer division truncation;
**	add one more for a minus sign.
** If type is unsigned:
**	do not subtract one since there is no sign bit;
**	add one for integer division truncation;
**	do not add one more for a minus sign.
d184 1
a184 3
		((((type) -1) < 0) ? \
			((sizeof(type) * CHAR_BIT - 1) * 302 / 1000 + 2) : \
			((sizeof(type) * CHAR_BIT) * 302 / 1000 + 1))
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: private.h,v 1.3 1995/03/14 18:49:49 jtc Exp $	*/
d26 1
a26 1
static char	privatehid[] = "@@(#)private.h	7.33";
a56 1
#include "ctype.h"
d76 3
d167 8
a174 3
** Subtract one for the sign bit;
** add one for integer division truncation;
** add one more for a minus sign.
d177 3
a179 1
	((sizeof(type) * CHAR_BIT - 1) * 302 / 1000 + 2)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
