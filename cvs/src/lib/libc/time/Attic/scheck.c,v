head	1.12;
access;
symbols
	OPENBSD_5_6:1.10.0.34
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.32
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.28
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.26
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.24
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.22
	OPENBSD_5_0:1.10.0.20
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.18
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.16
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.12
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.14
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.10
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.8
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.6
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.4
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.2
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.10
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.5.0.20
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.18
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.16
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.14
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.12
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.10
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.8
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2015.02.09.12.37.47;	author tedu;	state dead;
branches;
next	1.11;
commitid	IrOn8khkOGvoGgaT;

1.11
date	2015.02.09.11.29.19;	author tedu;	state Exp;
branches;
next	1.10;
commitid	tJvDnNK0SzmBKgN8;

1.10
date	2007.02.06.19.35.16;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2006.02.18.21.54.17;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.08.08.05.38;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.07.05.13.40.51;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.14.18.24.53;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.01.18.23.24.56;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.14.03.16.49;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.34.51;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.01.11.17.46.27;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@move zic and zdump source to appropriate directories
@
text
@/*	$OpenBSD: scheck.c,v 1.11 2015/02/09 11:29:19 tedu Exp $ */
/*
** This file is in the public domain, so clarified as of
** 2006-07-17 by Arthur David Olson.
*/

/*LINTLIBRARY*/

#include "private.h"

const char *
scheck(string, format)
const char * const	string;
const char * const	format;
{
	register char *		fbuf;
	register const char *	fp;
	register char *		tp;
	register int		c;
	register const char *	result;
	char			dummy;

	result = "";
	if (string == NULL || format == NULL)
		return result;
	fbuf = malloc((int) (2 * strlen(format) + 4));
	if (fbuf == NULL)
		return result;
	fp = format;
	tp = fbuf;
	while ((*tp++ = c = *fp++) != '\0') {
		if (c != '%')
			continue;
		if (*fp == '%') {
			*tp++ = *fp++;
			continue;
		}
		*tp++ = '*';
		if (*fp == '*')
			++fp;
		while (is_digit(*fp))
			*tp++ = *fp++;
		if (*fp == 'l' || *fp == 'h')
			*tp++ = *fp++;
		else if (*fp == '[')
			do *tp++ = *fp++;
				while (*fp != '\0' && *fp != ']');
		if ((*tp++ = *fp++) == '\0')
			break;
	}
	*(tp - 1) = '%';
	*tp++ = 'c';
	*tp = '\0';
	if (sscanf(string, fbuf, &dummy) != 1)
		result = (char *) format;
	free(fbuf);
	return result;
}
@


1.11
log
@stop trying to workaround malloc bugs that have not existed for 20 years.
ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: scheck.c,v 1.10 2007/02/06 19:35:16 millert Exp $ */
@


1.10
log
@Update to tzcode2007a.  This adds support for 64bit time_t in case
we need it in the future.  All of our platforms currently have 32bit
time_t types.  This also extends the timezone data file format to
support both 32bit and 64bit data.  The 64bit data is located after
the 32bit data so binaries linked with the older tzcode simply won't
look at it.  A version field in the file header is used to determine
whether the data file is the old or extended format.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: scheck.c,v 1.9 2006/02/18 21:54:17 millert Exp $ */
d26 1
a26 1
	fbuf = imalloc((int) (2 * strlen(format) + 4));
d56 1
a56 1
	ifree(fbuf);
@


1.9
log
@Update to tzcode2006a; primarily just cast and const fixes.
@
text
@d1 1
a1 1
/*	$OpenBSD: scheck.c,v 1.8 2005/08/08 08:05:38 espie Exp $ */
d4 1
a4 1
** Feb 14, 2003 by Arthur David Olson.
@


1.8
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d4 1
a4 1
** Feb 14, 2003 by Arthur David Olson (arthur_david_olson@@nih.gov).
d11 1
a11 1
char *
d14 1
a14 1
char * const		format;
d20 1
a20 1
	register char *		result;
a21 1
	static char		nada;
d23 1
a23 1
	result = &nada;
@


1.7
log
@Update to tzcode2005j.
@
text
@d1 1
a5 5

#if defined(LIBC_SCCS) && !defined(lint) && !defined(NOID)
static char elsieid[] = "@@(#)scheck.c	8.16";
static char rcsid[] = "$OpenBSD: scheck.c,v 1.6 2003/02/14 18:24:53 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.6
log
@license clarifications; arthur_david_olson@@nih.gov
@
text
@d7 2
a8 2
static char elsieid[] = "@@(#)scheck.c	8.15";
static char rcsid[] = "$OpenBSD: scheck.c,v 1.5 1998/01/18 23:24:56 millert Exp $";
d18 1
a18 1
const char * const	format;
@


1.5
log
@tzcode1998b from ftp://elsie.nci.nih.gov/pub
@
text
@d1 5
d8 1
a8 1
static char rcsid[] = "$OpenBSD: scheck.c,v 1.4 1997/01/14 03:16:49 millert Exp $";
@


1.4
log
@Update to tzcode1996o + our fixes.  Fixes problem pointed out
by cross@@va.pubnix.com.
@
text
@d1 3
a3 6
#if defined(LIBC_SCCS) && !defined(lint)
#if 0
static char	elsieid[] = "@@(#)scheck.c	8.13";
#else
static char rcsid[] = "$OpenBSD: scheck.c,v 1.3 1996/08/19 08:34:51 tholo Exp $";
#endif
a9 3
extern char *	imalloc P((int n));
extern void	ifree P((char * p));

d13 1
a13 1
char * const		format;
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d2 5
a6 1
static char rcsid[] = "$OpenBSD$";
@


1.2
log
@from netbsd; sync with tzcode96a
@
text
@d1 3
a3 7
/*	$NetBSD: scheck.c,v 1.3 1996/01/08 22:50:58 jtc Exp $	*/

#ifndef lint
#ifndef NOID
static char	elsieid[] = "@@(#)scheck.c	8.13";
#endif /* !defined lint */
#endif /* !defined NOID */
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: scheck.c,v 1.2 1995/03/10 18:12:42 jtc Exp $	*/
d5 1
a5 1
static char	elsieid[] = "@@(#)scheck.c	8.12";
d47 1
a47 1
		while (isascii(*fp) && isdigit(*fp))
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
