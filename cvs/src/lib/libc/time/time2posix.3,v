head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.10
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.8
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.4
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.8
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.19.0.6
	OPENBSD_5_5_BASE:1.19
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.18.0.2
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.17.0.8
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.6
	OPENBSD_5_0:1.17.0.4
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.12
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.10
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.8
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.6
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2015.02.23.19.05.36;	author bentley;	state Exp;
branches;
next	1.19;
commitid	ELy9zaEFIB1FDBy2;

1.19
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2012.09.13.11.14.20;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2010.08.23.22.35.34;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2010.01.03.13.24.09;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.06.19.35.16;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2005.07.22.03.23.37;	author jaredy;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.19.15.51.29;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.07.08.52.42;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2000.08.09.15.56.44;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.21;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.25.00.49.41;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.20.15.22.53;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	98.09.07.16.44.35;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.01.18.23.24.58;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.14.03.16.50;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.34.52;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.10.28.00.55.54;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.32;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@Convert a table unsupported by mandoc to a columnated list.

While here, correctly mark up time_t as a variable type and use prettier
double quotes.

ok schwarze@@
@
text
@.\"	$OpenBSD: time2posix.3,v 1.19 2013/06/05 03:39:23 tedu Exp $
.Dd $Mdocdate: June 5 2013 $
.Dt TIME2POSIX 3
.Os
.Sh NAME
.Nm time2posix ,
.Nm posix2time
.Nd convert seconds since the Epoch
.Sh SYNOPSIS
.In sys/types.h
.In time.h
.Ft time_t
.Fn time2posix "time_t t"
.Ft time_t
.Fn posix2time "time_t t"
.Sh DESCRIPTION
.St -p1003.1
legislates that a
.Vt time_t
value of
536457599 shall correspond to
.Dq Wed Dec 31 23:59:59 UTC 1986 .
This effectively implies that a POSIX
.Vt time_t
cannot include leap seconds and, therefore,
that the system time must be adjusted as each leap occurs.
.Pp
If the time package is configured with leap-second support
enabled,
however,
no such adjustment is needed and
.Vt time_t
values continue to increase over leap events
.Po
as a true
.Sq seconds since...
value
.Pc .
This means that these values will differ from those required by POSIX
by the net number of leap seconds inserted since the Epoch.
.Pp
Typically this is not a problem as the type
.Vt time_t
is intended to be
.Pq mostly
opaque.
.Vt time_t
values should only be obtained from and
passed to functions such as
.Xr time 3 ,
.Xr localtime 3 ,
.Xr mktime 3 ,
and
.Xr difftime 3 .
However,
POSIX gives an arithmetic
expression for directly computing a
.Vt time_t
value from a given date/time,
and the same relationship is assumed by some
.Pq usually older
applications.
Any programs creating/dissecting
.Vt time_t
values
using such a relationship will typically not handle intervals
over leap seconds correctly.
.Pp
The
.Fn time2posix
and
.Fn posix2time
functions are provided to address this
.Vt time_t
mismatch by converting
between local
.Vt time_t
values and their POSIX equivalents.
This is done by accounting for the number of time-base changes that
would have taken place on a POSIX system as leap seconds were inserted
or deleted.
These converted values can then be used in lieu of correcting the older
applications,
or when communicating with POSIX-compliant systems.
.Pp
.Fn time2posix
is single-valued.
That is,
every local
.Vt time_t
corresponds to a single POSIX
.Vt time_t .
.Fn posix2time
is less well-behaved:
for a positive leap second hit the result is not unique,
and for a negative leap second hit the corresponding
POSIX
.Vt time_t
doesn't exist so an adjacent value is returned.
Both of these are good indicators of the inferiority of the
POSIX representation.
.Pp
The following table summarizes the relationship between a time
T and its conversion to,
and back from,
the POSIX representation over the leap second inserted at the end of June,
1993.
.Bl -column 93/06/30 23:59:59 A+0 X=time2posix(T) posix2time(X) -offset indent
.It Em DATE Ta Em TIME Ta Em T Ta Em X=time2posix(T) Ta Em posix2time(X)
.It 93/06/30 Ta 23:59:59 Ta A+0 Ta B+0 Ta A+0
.It 93/06/30 Ta 23:59:60 Ta A+1 Ta B+1 Ta A+1 or A+2
.It 93/07/01 Ta 00:00:00 Ta A+2 Ta B+1 Ta A+1 or A+2
.It 93/07/01 Ta 00:00:01 Ta A+3 Ta B+2 Ta A+3
.El
.Pp
A leap second deletion would look like...
.Bl -column ??/06/30 23:59:58 A+0 X=time2posix(T) posix2time(X) -offset indent
.It Em DATE Ta Em TIME Ta Em T Ta Em X=time2posix(T) Ta Em posix2time(X)
.It ??/06/30 Ta 23:59:58 Ta A+0 Ta B+0 Ta A+0
.It ??/07/01 Ta 00:00:00 Ta A+1 Ta B+2 Ta A+1
.It ??/07/01 Ta 00:00:01 Ta A+2 Ta B+3 Ta A+2
.El
.Pp
[Note: posix2time(B+1) => A+0 or A+1]
.Pp
If leap-second support is not enabled, local
.Vt time_t
and
POSIX
.Vt time_t
are equivalent, and both
.Fn time2posix
and
.Fn posix2time
degenerate to the identity function.
.Sh SEE ALSO
.Xr difftime 3 ,
.Xr localtime 3 ,
.Xr mktime 3 ,
.Xr time 3
.\" This file is in the public domain, so clarified as of
.\" 1996-06-05 by Arthur David Olson.
@


1.19
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.18 2012/09/13 11:14:20 millert Exp $
.Dd $Mdocdate: September 13 2012 $
d19 1
a19 1
.Fa time_t
d21 2
a22 1
536457599 shall correspond to "Wed Dec 31 23:59:59 UTC 1986."
d24 1
a24 1
.Fa time_t
d32 1
a32 1
.Fa time_t
d43 1
a43 1
.Fa time_t
d47 1
a47 1
.Fa time_t
d58 1
a58 1
.Fa time_t
d64 1
a64 1
.Fa time_t
d74 1
a74 1
.Fa time_t
d77 1
a77 1
.Fa time_t
d90 1
a90 1
.Fa time_t
d92 1
a92 1
.Fa time_t .
d98 1
a98 1
.Fa time_t
d108 8
a115 8
.Bd -ragged -offset indent
.ta \w'93/06/30 'u +\w'23:59:59 'u +\w'A+0 'u +\w'X=time2posix(T) 'u
DATE	TIME	T	X=time2posix(T)	posix2time(X)
93/06/30	23:59:59	A+0	B+0	A+0
93/06/30	23:59:60	A+1	B+1	A+1 or A+2
93/07/01	00:00:00	A+2	B+1	A+1 or A+2
93/07/01	00:00:01	A+3	B+2	A+3
.sp
d117 8
a124 9
.sp
DATE	TIME	T	X=time2posix(T)	posix2time(X)
??/06/30	23:59:58	A+0	B+0	A+0
??/07/01	00:00:00	A+1	B+2	A+1
??/07/01	00:00:01	A+2	B+3	A+2
.sp
.ce
	[Note: posix2time(B+1) => A+0 or A+1]
.Ed
d127 1
a127 1
.Fa time_t
d130 1
a130 1
.Fa time_t
@


1.18
log
@Update to tzcode2012f.  Now that tzcode is in git there are no moe
SCCS ids.  No actual code changes.
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.17 2010/08/23 22:35:34 millert Exp $
.Dd $Mdocdate: August 23 2010 $
d10 2
a11 2
.Fd #include <sys/types.h>
.Fd #include <time.h>
@


1.17
log
@update to tzcode2010k from elsie.nci.nih.gov; OK miod@@
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.16 2010/01/03 13:24:09 schwarze Exp $
.Dd $Mdocdate: January 3 2010 $
a140 1
.\" @@(#)time2posix.3	8.2
@


1.16
log
@blank lines not allowed outside literal context;
syntax errors found by mandoc(1), also required to fix the mandoc build;
ok jmc@@
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.15 2007/05/31 19:19:34 jmc Exp $
.Dd $Mdocdate: May 31 2007 $
d141 1
a141 1
.\" @@(#)time2posix.3	8.1
@


1.15
log
@convert to new .Dd format;
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.14 2007/02/06 19:35:16 millert Exp $
.Dd $Mdocdate$
d114 1
a114 1

d116 1
a116 1

@


1.14
log
@Update to tzcode2007a.  This adds support for 64bit time_t in case
we need it in the future.  All of our platforms currently have 32bit
time_t types.  This also extends the timezone data file format to
support both 32bit and 64bit data.  The 64bit data is located after
the 32bit data so binaries linked with the older tzcode simply won't
look at it.  A version field in the file header is used to determine
whether the data file is the old or extended format.  OK miod@@
@
text
@d1 2
a2 2
.\"	$OpenBSD: time2posix.3,v 1.13 2005/07/22 03:23:37 jaredy Exp $
.Dd May 24, 1999
@


1.13
log
@- sync prototypes and header excerpts to reality
- punctuation, rewording, typos/spelling, macro, and layout fixes
- add crossrefs where relevant

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.12 2005/07/19 15:51:29 millert Exp $
d141 1
a141 1
.\" @@(#)time2posix.3	7.8
@


1.12
log
@update to tzcode2005k
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.11 2003/05/07 08:52:42 jmc Exp $
d17 1
a17 2
IEEE Standard 1003.1
(POSIX)
@


1.11
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.10 2000/08/09 15:56:44 aaron Exp $
d142 1
a142 1
.\" @@(#)time2posix.3	7.7
d144 1
a144 1
.\" 1996-06-05 by Arthur David Olson (arthur_david_olson@@nih.gov).
@


1.10
log
@More of the same.
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.9 1999/07/09 13:35:21 aaron Exp $
d48 3
a50 3
values should only be obtained-from and
passed-to functions such as
.Xr time 3  ,
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.8 1999/05/25 00:49:41 aaron Exp $
d6 2
a7 1
.Nm time2posix , posix2time
@


1.8
log
@out with old macros, in with new mdoc; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.7 1999/05/20 15:22:53 aaron Exp $
d33 2
a34 2
.Po 
as a true 
d75 1
a75 1
between local 
d88 1
a88 1
every local 
d90 1
a90 1
corresponds to a single POSIX 
d96 1
a96 1
POSIX 
@


1.7
log
@repair SYNOPSIS
@
text
@d1 15
a15 18
.\"	$OpenBSD: time2posix.3,v 1.6 1998/09/07 16:44:35 aaron Exp $
.TH TIME2POSIX 3
.SH NAME
time2posix, posix2time \- convert seconds since the Epoch
.SH SYNOPSIS
.nf
.B #include <sys/types.h>
.B #include <time.h>
.PP
.B time_t
.br
.B time2posix(time_t t)
.PP
.B time_t
.br
.B posix2time(time_t t)
.fi
.SH DESCRIPTION
d18 3
a20 1
legislates that a time_t value of
d22 3
a24 3
This effectively implies that POSIX time_t's cannot include leap
seconds and,
therefore,
d26 1
a26 1
.PP
d31 7
a37 2
time_t values continue to increase over leap events
(as a true `seconds since...' value).
d40 8
a47 5
.PP
Typically this is not a problem as the type time_t is intended
to be
(mostly)
opaque\(emtime_t values should only be obtained-from and
d49 3
a51 3
.IR time(3) ,
.IR localtime(3) ,
.IR mktime(3) ,
d53 1
a53 1
.IR difftime(3) .
d56 3
a58 1
expression for directly computing a time_t value from a given date/time,
d60 1
a60 1
(usually older)
d62 3
a64 1
Any programs creating/dissecting time_t's
d67 1
a67 1
.PP
d69 1
a69 1
.I time2posix
d71 7
a77 3
.I posix2time
functions are provided to address this time_t mismatch by converting
between local time_t values and their POSIX equivalents.
d84 2
a85 2
.PP
.I Time2posix
d88 5
a92 3
every local time_t
corresponds to a single POSIX time_t.
.I Posix2time
d96 3
a98 1
POSIX time_t doesn't exist so an adjacent value is returned.
d101 1
a101 1
.PP
d107 1
a107 1
.nf
d124 4
a127 7
.fi
.PP
If leap-second support is not enabled,
local time_t's and
POSIX time_t's are equivalent,
and both
.I time2posix
d129 6
a134 1
.I posix2time
d136 5
a140 5
.SH SEE ALSO
difftime(3),
localtime(3),
mktime(3),
time(3)
@


1.6
log
@More man page fixes. Particularly fix uses of it's/its, affect/effect,
then/than and such. Other miscellaneous problems fixed across these source
files.
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.5 1998/01/18 23:24:58 millert Exp $
d10 3
a12 2
.B time_t time2posix(t)
.B time_t t
d14 3
a16 2
.B time_t posix2time(t)
.B time_t t
@


1.5
log
@tzcode1998b from ftp://elsie.nci.nih.gov/pub
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.4 1997/01/14 03:16:50 millert Exp $
d82 1
a82 1
T and it's conversion to,
@


1.4
log
@Update to tzcode1996o + our fixes.  Fixes problem pointed out
by cross@@va.pubnix.com.
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.3 1996/08/19 08:34:52 tholo Exp $
a14 2
.PP
.B cc ... -lz
d20 1
a20 1
536457599 shall correspond to "Wed Dec 31 23:59:59 GMT 1986."
d118 1
a118 1
.\" @@(#)time2posix.3	7.5
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: time2posix.3,v 1.3.4.1 1995/10/26 05:24:49 jtc Exp $
d16 1
d120 3
a122 1
.\" @@(#)time2posix.3	7.3
@


1.2
log
@update from NetBSD
@
text
@d1 1
a1 1
.\"	$NetBSD: time2posix.3,v 1.3.4.1 1995/10/26 05:24:49 jtc Exp $
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: time2posix.3,v 1.3 1995/03/10 18:21:27 jtc Exp $
d41 1
a41 1
.IR time(2) ,
d118 1
a118 1
time(2)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
