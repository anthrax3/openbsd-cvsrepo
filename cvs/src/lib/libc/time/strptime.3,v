head	1.25;
access;
symbols
	OPENBSD_6_2:1.25.0.6
	OPENBSD_6_2_BASE:1.25
	OPENBSD_6_1:1.25.0.8
	OPENBSD_6_1_BASE:1.25
	OPENBSD_6_0:1.25.0.4
	OPENBSD_6_0_BASE:1.25
	OPENBSD_5_9:1.25.0.2
	OPENBSD_5_9_BASE:1.25
	OPENBSD_5_8:1.24.0.6
	OPENBSD_5_8_BASE:1.24
	OPENBSD_5_7:1.24.0.2
	OPENBSD_5_7_BASE:1.24
	OPENBSD_5_6:1.22.0.8
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.2
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.20.0.4
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.2
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.13.0.2
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.12.0.4
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.11.0.2
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.8
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.12
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.10
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.8
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.6
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.4
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.2.0.2
	OPENBSD_2_3_BASE:1.2;
locks; strict;
comment	@# @;


1.25
date	2016.02.08.20.05.43;	author tedu;	state Exp;
branches;
next	1.24;
commitid	jFqiUxzXaYFMhvJd;

1.24
date	2014.12.04.00.10.40;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	f2u36BRnQnZ1kuQo;

1.23
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.22;
commitid	HuCemPIiOkto0SJD;

1.22
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2012.08.18.16.25.20;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2011.09.16.19.36.07;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2011.09.16.15.01.58;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2011.09.16.09.44.50;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2011.08.31.08.49.42;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2011.01.19.12.04.23;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2010.11.08.20.23.12;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2010.11.08.19.16.16;	author jasper;	state Exp;
branches;
next	1.13;

1.13
date	2010.04.12.01.17.33;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2008.10.19.11.50.35;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2005.07.22.03.23.37;	author jaredy;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.07.08.52.42;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.18.05.12.12;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	2000.03.04.22.19.32;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.07.10.50.04;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.04.25.08.10.44;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.04.25.08.08.24;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.03.15.06.49.00;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.02.04.22.22.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.25
log
@mention mktime, since that is where struct tm is described. ok schwarze
@
text
@.\"	$OpenBSD: strptime.3,v 1.24 2014/12/04 00:10:40 schwarze Exp $
.\"
.\" Copyright (c) 1997, 1998, 2005, 2008 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This file was contributed to The NetBSD Foundation by Klaus Klein.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 4 2014 $
.Dt STRPTIME 3
.Os
.Sh NAME
.Nm strptime
.Nd converts a character string to a time value
.Sh SYNOPSIS
.In time.h
.Ft char *
.Fn strptime "const char *buf" "const char *format" "struct tm *tm"
.Sh DESCRIPTION
The
.Nm
function parses the string
.Fa buf
according to the specified
.Fa format
and fills matching data into the structure
.Fa tm
(described in
.Xr mktime 3 ) .
.Pp
The
.Fa format
string consists of zero or more directives.
A directive is composed of either one or more whitespace characters as
defined by
.Xr isspace 3 ,
an ordinary character (neither
.Sq %
nor a whitespace), or a conversion
specification.
A conversion specification consists of a percent sign
.Pq Sq %
followed by one or two conversion characters which specify the
replacement required.
There must be whitespace or other
non-alphanumeric characters between any two conversion specifications.
.Pp
The
.Dv LC_TIME
category defines the locale values for the conversion
specifications.
The following conversion specifications are supported:
.Bl -tag -width "xxxx"
.It Cm \&%a
the day of week, using the locale's weekday names;
either the abbreviated or full name may be specified.
.It Cm \&%A
the same as
.Cm \&%a .
.It Cm \&%b
the month, using the locale's month names;
either the abbreviated or full name may be specified.
.It Cm \&%B
the same as
.Cm \&%b .
.It Cm \&%c
the date and time, using the locale's date and time format.
.It Cm \&%C
the century number [0,99]; leading zeros are permitted but not required.
Note that the converted value is added to the current value of the
.Fa tm_year
field (in order that the "\&%y" conversion be useful).
.It Cm \&%d
the day of month [1,31];
leading zeros are permitted but not required.
.It Cm \&%D
the date as %m/%d/%y.
.It Cm \&%e
the same as
.Cm \&%d .
.It Cm \&%F
the date as %Y-%m-%d
(the
.St -iso8601
date format).
.It Cm \&%g
the year corresponding to the ISO week number, without the century.
.It Cm \&%G
the year corresponding to the ISO week number, with the century.
.It Cm \&%h
the same as
.Cm \&%b .
.It Cm \&%H
the hour (24-hour clock) [0,23];
leading zeros are permitted but not required.
.It Cm \&%I
the hour (12-hour clock) [1,12];
leading zeros are permitted but not required.
.It Cm \&%j
the day number of the year [1,366];
leading zeros are permitted but not required.
.It Cm \&%k
the same as
.Cm \&%H .
.It Cm \&%l
the same as
.Cm \&%I .
.It Cm \&%m
the month number [1,12];
leading zeros are permitted but not required.
.It Cm \&%M
the minute [0,59];
leading zeros are permitted but not required.
.It Cm \&%n
any whitespace.
.It Cm \&%p
the locale's equivalent of
.Dq AM
or
.Dq PM .
.It Cm \&%r
the time as %I:%M:%S %p.
.It Cm \&%R
the time as %H:%M.
.It Cm \&%S
the seconds [0,60];
leading zeros are permitted but not required.
.It Cm \&%t
any whitespace.
.It Cm \&%T
the time as %H:%M:%S.
.It Cm \&%u
the day of the week as a decimal number, where Monday = 1.
.It Cm \&%U
the week number of the year (Sunday as the first day of the week)
as a decimal number [0,53];
leading zeros are permitted but not required.
All days in a year preceding the first Sunday are considered to be in week 0.
.It Cm \&%V
the
.St -iso8601
week number as a decimal number.
If the week (starting on Monday) that contains January 1 has more than
three days in the new year, then it is considered the first week of the
year.
If it has fewer than four days in the new year, then it is considered
the last week of the previous year.
Weeks are numbered from 1 to 53.
.It Cm \&%w
the weekday as a decimal number [0,6], with 0 representing Sunday;
leading zeros are permitted but not required.
.It Cm \&%W
the week number of the year (Monday as the first day of the week)
as a decimal number [0,53];
leading zeros are permitted but not required.
All days in a year preceding the first Monday are considered to be in week 0.
.It Cm \&%x
the date, using the locale's date format.
.It Cm \&%X
the time, using the locale's time format.
.It Cm \&%y
the year within the current century.
When a century is not otherwise
specified, values in the range 69\-99 refer to years in the twentieth
century (1969 to 1999 inclusive); values in the range 00\-68 refer
to years in the twenty-first century (2000 to 2068 inclusive).
Leading zeros are permitted but not required.
.It Cm \&%Y
the year, including the century (i.e., 1998).
.It Cm \&%z
an
.St -iso8601
or RFC 5322 timezone specification.
This is one of the following:
the offset from
Coordinated Universal Time
.Pq Ql UTC
specified as:
.Dq [+-]hhmm ,
.Dq [+-]hh:mm ,
or
.Dq [+-]hh ;
.Ql UTC
specified as:
.Dq GMT
.Pq Ql Greenwich Mean Time ,
.Dq UT
.Pq Ql Universal Time ,
or
.Dq Z
.Pq Ql Zulu Time ;
a three character US timezone specified as:
.Dq EDT ,
.Dq EST ,
.Dq CDT ,
.Dq CST ,
.Dq MDT ,
.Dq MST ,
.Dq PDT ,
or
.Dq PST ,
with the first letter standing for
.Ql Eastern
.Pq Dq E ,
.Ql Central
.Pq Dq C ,
.Ql Mountain
.Pq Dq M
or
.Ql Pacific
.Pq Dq P ,
and the second letter standing for
.Ql Daylight
.Po
.Dq D
or summer
.Pc
time
or
.Ql Standard
.Pq Dq S
time;
a single letter military timezone specified as:
.Dq A
through
.Dq I
and
.Dq K
through
.Dq Y .
.It Cm \&%Z
timezone name or no characters when timezone information is unavailable.
.It Cm \&%%
A `%' is read.
No argument is converted.
.El
.Pp
There is no way to specify whether Daylight Saving Time is in effect when
calling
.Nm .
To use the resulting
.Fa tm
structure with functions that check the
.Fa tm_isdst
field, either set it to a negative value, which will cause
.Xr mktime 3
to attempt to divine whether Daylight Saving Time would be in effect
for the given time, or compute the value manually.
.Ss Modified conversion specifications
For compatibility, certain conversion specifications can be modified
by the
.Cm E
and
.Cm O
modifier characters to indicate that an alternative format or
specification should be used rather than the one normally used by the
unmodified conversion specification.
As there are currently neither
alternative formats nor specifications supported by the system, the
behavior will be as if the unmodified conversion specification were
used.
.Pp
Case is ignored when matching string items in
.Fa buf ,
such as month and weekday names.
.Sh RETURN VALUES
If successful, the
.Nm
function returns a pointer to the character following the last character
parsed.
Otherwise, a null pointer is returned.
.Sh SEE ALSO
.Xr mktime 3 ,
.Xr strftime 3
.Sh STANDARDS
The
.Fn strptime
function conforms to
.St -xpg4.2 .
.Pp
The
.Ql \&%G ,
.Ql \&%g ,
.Ql \&%u ,
.Ql \&%V ,
.Ql \&%Y ,
and
.Ql \&%Z
conversion specifications are extensions.
.Sh BUGS
The
.Cm \&%Z
format specifier only accepts timezone
abbreviations of the local timezone,
or the value
.Dq GMT .
This limitation is caused by the ambiguity
of overloaded timezone abbreviations,
for example EST is both Eastern Standard
Time and Eastern Australia Summer Time.
@


1.24
log
@simplify wording; triggered by a shorter diff from Kaspars Bankovskis;
OK jmc@@ jasper@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.23 2014/11/15 14:41:02 bentley Exp $
d29 1
a29 1
.Dd $Mdocdate: November 15 2014 $
d47 3
a49 1
.Fa tm .
@


1.23
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.22 2013/06/05 03:39:23 tedu Exp $
d29 1
a29 1
.Dd $Mdocdate: June 5 2013 $
d42 1
a42 1
function converts the character string pointed to by
d44 4
a47 4
to values which are stored in the ``tm'' structure pointed to by
.Fa tm ,
using the format specified by
.Fa format .
@


1.22
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.21 2012/08/18 16:25:20 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: August 18 2012 $
d89 2
a90 1
``tm_year'' field (in order that the "\&%y" conversion be useful).
@


1.21
log
@RFC updates:
5322 obsoletes 2822
5321 obsoletes 821 and 2821
6409 obsoletes 2476 and 4409
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.20 2011/09/16 19:36:07 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: September 16 2011 $
d36 1
a36 1
.Fd #include <time.h>
@


1.20
log
@after some thought, i think it unlikely that we will need to specify
a revision number for ISO 8601; in addition, the revision number makes
the text unwieldy when discussing the standard in a casual manner.

therefore change the macro from -8601-4 to simply -8601, which will output
"ISO 8601". i'll get kristaps or ingo to make the change upstream to mandoc.

discussed with/ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.19 2011/09/16 15:01:58 jmc Exp $
d190 1
a190 1
or RFC 2822 timezone specification.
@


1.19
log
@use .St here for ISO 8601 references; ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.18 2011/09/16 09:44:50 jmc Exp $
d101 1
a101 1
.St -iso8601-4
d158 1
a158 1
.St -iso8601-4
d189 1
a189 1
.St -iso8601-4
@


1.18
log
@RFC-2822 -> RFC 2822
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.17 2011/08/31 08:49:42 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: August 31 2011 $
d100 3
a102 1
(the ISO 8601 date format).
d157 3
a159 1
the ISO 8601:1988 week number as a decimal number.
d188 3
a190 1
an ISO 8601 or RFC 2822 timezone specification.
@


1.17
log
@only one leap second is permitted, not two; from guenther
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.16 2011/01/19 12:04:23 jasper Exp $
d29 1
a29 1
.Dd $Mdocdate: January 19 2011 $
d184 1
a184 1
an ISO 8601 or RFC-2822 timezone specification.
@


1.16
log
@- missing leading '.' before 'It'.

spotted by landry@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.15 2010/11/08 20:23:12 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: November 8 2010 $
d141 1
a141 1
the seconds [0,61];
@


1.15
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.14 2010/11/08 19:16:16 jasper Exp $
d244 1
a244 1
It Cm \&%%
@


1.14
log
@Add %F, %g, %G, %u, %z (extended) and %Z.
This is mostly a sync with NetBSD.

tested in a bulk build by landry@@
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.13 2010/04/12 01:17:33 tedu Exp $
d29 1
a29 1
.Dd $Mdocdate: April 12 2010 $
d238 1
a238 1
and 
d243 1
a243 1
timezone name or no characters when time zone information is unavailable.
@


1.13
log
@clarify that strptime reads, not writes, strings when handling %%.
ok deraadt jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.12 2008/10/19 11:50:35 millert Exp $
d3 1
a3 1
.\" Copyright (c) 1997, 1998 The NetBSD Foundation, Inc.
d29 1
a29 1
.Dd $Mdocdate: October 19 2008 $
d98 7
d147 2
d154 8
d183 62
a244 1
.It Cm \&%%
d291 21
@


1.12
log
@Document that strptime doesn't set the dst flag.
Based on a diff from Mark Bucc.  OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.11 2008/06/26 05:42:05 ray Exp $
d29 1
a29 1
.Dd $Mdocdate: June 26 2008 $
d167 1
a167 1
A `%' is written.
@


1.11
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.10 2007/05/31 19:19:34 jmc Exp $
d29 1
a29 1
.Dd $Mdocdate: May 31 2007 $
d170 12
d206 1
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.9 2005/07/22 03:23:37 jaredy Exp $
a15 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d29 1
a29 1
.Dd $Mdocdate$
@


1.9
log
@- sync prototypes and header excerpts to reality
- punctuation, rewording, typos/spelling, macro, and layout fixes
- add crossrefs where relevant

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.8 2003/05/07 08:52:42 jmc Exp $
d36 1
a36 1
.Dd March 14, 1998
@


1.8
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.7 2000/10/18 05:12:12 aaron Exp $
d61 4
a64 2
.Fn isspace ,
an ordinary character (neither `%' nor a whitespace), or a conversion
d66 2
a67 1
A conversion specification consists of a percent sign `%'
d73 3
a75 1
The LC_TIME category defines the locale values for the conversion
d167 2
a168 2
specified, values in the range 69-99 refer to years in the twentieth
century (1969 to 1999 inclusive); values in the range 00-68 refer
@


1.7
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.6 2000/03/04 22:19:32 aaron Exp $
d59 2
a60 1
A directive is composed of either one or more whitespace as defined by
d125 1
a125 1
any whitespace
d127 4
a130 1
the locale's equivalent of a.m. or p.m..
d139 1
a139 1
any whitespace
@


1.6
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.5 1999/07/07 10:50:04 aaron Exp $
d58 2
a59 2
string consists of zero or more directives. A directive is composed
of either one or more whitespace as defined by
d62 2
a63 1
specification. A conversion specification consists of a percent sign `%'
d65 2
a66 1
replacement required.  There must be whitespace or other
d70 2
a71 1
specifications.  The following conversion specifications are supported:
d156 2
a157 1
the year within the current century.  When a century is not otherwise
d165 2
a166 1
A `%' is written.  No argument is converted.
d176 2
a177 1
unmodified conversion specification.  As there are currently neither
d189 2
a190 1
parsed.  Otherwise, a null pointer is returned.
@


1.5
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.4 1998/04/25 08:10:44 deraadt Exp $
d59 1
a59 1
of either one or more white-space as defined by
d61 1
a61 1
an ordinary character (neither `%' nor a white-space), or a conversion
d64 1
a64 1
replacement required.  There must be white-space or other
d121 1
a121 1
any white-space
d132 1
a132 1
any white-space
@


1.4
log
@correct first paragraph of description; jpo@@EasternGraphics.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.3 1998/04/25 08:08:24 deraadt Exp $
d37 1
a38 1
.Dt STRPTIME 3
@


1.3
log
@month/weekday names are case insensitive; jpo@@EasternGraphics.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: strptime.3,v 1.2 1998/03/15 06:49:00 millert Exp $
d58 5
a62 3
string consists of zero or more conversion specifications and ordinary
characters.  All ordinary characters are copied directly into the
buffer.  A conversion specification consists of a percent sign `%'
@


1.2
log
@Fix %m, %I, %S, %y, %C, and %j conversions.  Fixes by nakayosh@@kcn.or.jp
and myself.  Some bugs noted by woods@@most.weird.com.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d173 4
@


1.1
log
@+ strptime, from netbsd
@
text
@d1 1
a1 1
.\"	$NetBSD: strptime.3,v 1.4 1998/01/20 21:10:08 mycroft Exp $
d36 1
a36 1
.Dd January 20, 1998
d58 6
a63 6
string consists of zero or more conversion specifications and
ordinary characters.  All ordinary characters are copied directly into
the buffer.  A conversion specification consists of a percent sign `%'
followed by one or two conversion characters which specify the replacement
required. There must be white-space or other non-alphanumeric characters
between any two conversion specifications.
d66 1
a66 1
specifications. The following conversion specifications are supported:
d83 3
a85 2
the century number [0,99];
leading zeros are permitted but not required.
d88 1
a88 1
leading zeros are permitted but required.
d123 1
a123 1
the time (12-hour clock) with %p, using the locale's time format.
d151 5
a155 2
the year within the 20th century [69,99] or the 21st century [0,68];
leading zeros are permitted but not required.
d157 1
a157 1
the year, including the century (i.e., 1996).
d159 1
a159 1
A `%' is written. No argument is converted.
d167 6
a172 5
modifier characters to indicate that an alternative format or specification
should be used rather than the one normally used by the unmodified
conversion specification. As there are currently neither alternative formats
nor specifications supported by the system, the behavior will be as if the
unmodified conversion specification were used.
d177 1
a177 1
parsed. Otherwise, a null pointer is returned.
d184 1
a184 1
.St -xpg4 .
@

