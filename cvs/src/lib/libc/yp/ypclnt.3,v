head	1.27;
access;
symbols
	OPENBSD_6_0:1.27.0.4
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.27.0.2
	OPENBSD_5_9_BASE:1.27
	OPENBSD_5_8:1.26.0.6
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.25.0.4
	OPENBSD_5_6_BASE:1.25
	OPENBSD_5_5:1.24.0.4
	OPENBSD_5_5_BASE:1.24
	OPENBSD_5_4:1.23.0.2
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.22.0.16
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.14
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.12
	OPENBSD_5_0:1.22.0.10
	OPENBSD_5_0_BASE:1.22
	OPENBSD_4_9:1.22.0.8
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.6
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.4
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.20.0.2
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.19.0.2
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.16
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.14
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.12
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.16.0.10
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.4
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.8.0.2
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.27
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.26;
commitid	QU70QaxjyBAtj4Rv;

1.26
date	2014.09.08.01.27.54;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	cPoapLAXYNe1fcgV;

1.25
date	2014.07.13.23.25.09;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	ISE6qvgi8rxH5y7J;

1.24
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2009.06.12.16.28.49;	author schwarze;	state Exp;
branches;
next	1.21;

1.21
date	2009.06.04.21.02.33;	author schwarze;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.22.19.09.29;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.18;

1.18
date	2008.05.24.13.59.09;	author sobrado;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.31.19.19.34;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.07.07.15.46.37;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.07.08.52.43;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.09.04.10.14.38;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.18.05.12.13;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.03.14.21.31.45;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.11.30.00.46.19;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.21;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.03.11.01.35.02;	author pjanzen;	state Exp;
branches;
next	1.7;

1.7
date	99.02.27.21.57.07;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.06.13.10.09.37;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.12.28.09.06.29;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.08.19.08.35.11;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.07.01.07.09.15;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.23.15.20;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.33;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.33;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.27
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: ypclnt.3,v 1.26 2014/09/08 01:27:54 schwarze Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Jason R. Thorpe.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 8 2014 $
.Dt YP_BIND 3
.Os
.Sh NAME
.Nm yp_all ,
.Nm yp_bind ,
.Nm yp_first ,
.Nm yp_get_default_domain ,
.Nm yp_maplist ,
.Nm yp_master ,
.Nm yp_match ,
.Nm yp_next ,
.Nm yp_order ,
.Nm yp_unbind ,
.Nm yperr_string ,
.Nm ypprot_err
.Nd Interface to the YP subsystem
.Sh SYNOPSIS
.In sys/types.h
.In rpc/rpc.h
.In rpcsvc/ypclnt.h
.In rpcsvc/yp_prot.h
.Ft int
.Fn yp_all "char *indomain" "char *inmap" "struct ypall_callback *incallback"
.Ft int
.Fn yp_bind "char *dom"
.Ft int
.Fn yp_first "char *indomain" "char *inmap" "char **outkey" "int *outkeylen" "char **outval" "int *outvallen"
.Ft int
.Fn yp_get_default_domain "char **domp"
.Ft int
.Fn yp_maplist "char *indomain" "struct ypmaplist **outmaplist"
.Ft int
.Fn yp_master "char *indomain" "char *inmap" "char **outname"
.Ft int
.Fn yp_match "char *indomain" "char *inmap" "const char *inkey" "int inkeylen" "char **outval" "int *outvallen"
.Ft int
.Fn yp_next "char *indomain" "char *inmap" "char *inkey" "int inkeylen" "char **outkey" "int *outkeylen" "char **outval" "int *outvallen"
.Ft int
.Fn yp_order "char *indomain" "char *inmap" "char *outorder"
.Ft void
.Fn yp_unbind "char *dom"
.Ft char *
.Fn yperr_string "int incode"
.Ft int
.Fn ypprot_err "unsigned int incode"
.Sh DESCRIPTION
The
.Nm ypclnt
suite provides an interface to the YP subsystem.
For a general description of the YP subsystem, see
.Xr yp 8 .
.Pp
For all functions, input values begin with
.Sq in
and output values begin with
.Sq out .
Any output values of type
.Em char **
should be the addresses of uninitialized character pointers.
Only if a call succeeds will memory be allocated by the YP client routines
using
.Fn malloc .
This memory can later be freed by the user if there is no additional need for
the data stored there.
For
.Fa outkey
and
.Fa outval ,
two extra bytes of memory are allocated for a
.Ql \en
and
.Ql \e0 ,
which are not
reflected in the values of
.Fa outkeylen
or
.Fa outvallen .
All occurrences of
.Fa indomain
and
.Fa inmap
must be non-null, NUL-terminated strings.
All input strings which also have
a corresponding length parameter cannot be null unless the corresponding
length value is zero.
Such strings need not be NUL-terminated.
.Pp
All YP lookup calls (the functions
.Fn yp_all ,
.Fn yp_first ,
.Fn yp_master ,
.Fn yp_match ,
.Fn yp_next ,
.Fn yp_order )
require a YP domain name and a YP map name.
The default domain name may be obtained by calling
.Fn yp_get_default_domain ,
and should thus be used before all other YP calls in a client program.
The value it places
.Fa outdomain
is suitable for use as the
.Fa indomain
parameter to all subsequent YP calls.
.Pp
In order for YP lookup calls to succeed, the client process must be bound
to a YP server process.
The client process need not explicitly bind to the server, as it happens
automatically whenever a lookup occurs.
The function
.Fn yp_bind
is provided for a backup strategy, e.g., a local file, when a YP server process
is not available.
Each binding uses one socket descriptor on the client process, which may
be explicitly freed using
.Fn yp_unbind ,
which frees all per-process and per-node resources to bind the domain and
marks the domain unbound.
.Pp
If, during a YP lookup, an RPC failure occurs, the domain used in the lookup
is automatically marked unbound and the
.Nm ypclnt
layer retries the lookup as long as
.Xr ypbind 8
is running and either the client process cannot bind to a server for the domain
specified in the lookup, or RPC requests to the YP server process fail.
If an error is not RPC-related, one of the YP error codes described below
is returned and control given back to the user code.
.Pp
The
.Nm ypclnt
suite provides the following functionality:
.Bl -tag -width "yperr_string()"
.It Fn yp_match
Provides the value associated with the given key.
.It Fn yp_first
Provides the first key-value pair from the given map in the named domain.
.It Fn yp_next
Provides the next key-value pair in the given map.
To obtain the second pair, the
.Fa inkey
value should be the
.Fa outkey
value provided by the initial call to
.Fn yp_first .
In the general case, the next key-value pair may be obtained by using the
.Fa outkey
value from the previous call to
.Fn yp_next
as the value for
.Fa inkey .
.Pp
Of course, the notions of
.Dq first
and
.Dq next
are particular to the
type of YP map being accessed, and thus there is no guarantee of lexical
order.
The only guarantees provided with
.Fn yp_first
and
.Fn yp_next ,
providing that the same map on the same server is polled repeatedly
until
.Fn yp_next
returns YPERR_NOMORE, are that all key-value pairs in that map will be accessed
exactly once, and if the entire procedure is repeated, the order will be
the same.
.Pp
If the server is heavily loaded or the server fails for some reason, the
domain being used may become unbound.
If this happens, and the client process
re-binds, the retrieval rules will break: some entries may be seen twice, and
others not at all.
For this reason, the function
.Fn yp_all
provides a better solution for reading all of the entries in a particular
map.
.It Fn yp_all
This function provides a way to transfer an entire map from
the server to the client process with a single request.
This transfer uses TCP, unlike all other functions in the
.Nm ypclnt
suite, which use UDP.
The entire transaction occurs in a single RPC request-response.
The third argument to this function provides a way to supply the name
of a function to process each key-value pair in the map.
.Fn yp_all
returns after the entire transaction is complete, or the
.Fn foreach
function decides that it does not want any more key-value pairs.
The third argument to
.Fn yp_all
is:
.Bd -literal -offset indent
struct ypall_callback *incallback {
	int (*foreach)();
	char *data;
};
.Ed
.Pp
The
.Vt char * Ns Va data
argument is an opaque pointer for use by the callback function.
The
.Fn foreach
function should return non-zero when it no longer wishes to process
key-value pairs, at which time
.Fn yp_all
returns a value of 0, and is called with the following arguments:
.Bd -literal -offset indent
int foreach (
	unsigned long instatus,
	char *inkey,
	int inkeylen,
	char *inval,
	int invallen,
	char *indata
);
.Ed
.Pp
Where:
.Bl -tag -width "inkey, inval"
.It Fa instatus
Holds one of the return status values described in
.In rpcsvc/yp_prot.h :
see
.Fn ypprot_err
below for a function that will translate YP protocol errors into a
.Nm ypclnt
layer error code as described in
.In rpcsvc/ypclnt.h .
.It Fa inkey , inval
The key and value arguments are somewhat different here than described
above.
In this case, the memory pointed to by
.Fa inkey
and
.Fa inval
is private to
.Fn yp_all ,
and is overwritten with each subsequent key-value pair; therefore, the
.Fn foreach
function should do something useful with the contents of that memory during
each iteration.
If the key-value pairs are not terminated with either
.Ql \en
or
.Ql \e0
in the map, then they will not be terminated as such when given to the
.Fn foreach
function, either.
.It Fa indata
This is the contents of the
.Fa incallback Ns -> Ns Va data
element of the callback structure.
It is provided as a means to share state between the
.Fn foreach
function and the user code.
Its use is completely optional: cast it to something useful or simply
ignore it.
.El
.It Fn yp_order
Returns the order number for a map.
.It Fn yp_master
Returns the hostname for the machine on which the master YP server process for
a map is running.
.It Fn yp_maplist
Returns a singly-linked list of the names of all the maps available in the
named domain.
The second argument to
.Fn yp_maplist
is:
.Bd -literal -offset indent
struct ypmaplist {
	char *map;
	struct ypmaplist *next;
};
.Ed
.It Fn yperr_string
Returns a pointer to a NUL-terminated error string that does not contain a
.Ql \&.
or
.Ql \en .
.It Fn ypprot_err
Converts a YP protocol error code to a
.Nm ypclnt
error code suitable for
.Fn yperr_string .
.El
.Sh RETURN VALUES
All functions in the
.Nm ypclnt
suite which are of type
.Em int
return 0 upon success or one of the following error codes upon failure:
.Bl -tag -width "YPERR_BADARGS   "
.It Bq Er YPERR_BADARGS
The passed arguments to the function are invalid.
.It Bq Er YPERR_BADDB
The YP map that was polled is defective.
.It Bq Er YPERR_DOMAIN
Client process cannot bind to server on this YP domain.
.It Bq Er YPERR_KEY
The key passed does not exist.
.It Bq Er YPERR_MAP
There is no such map in the server's domain.
.It Bq Er YPERR_NODOM
The local YP domain is not set.
.It Bq Er YPERR_NOMORE
There are no more records in the queried map.
.It Bq Er YPERR_PMAP
Cannot communicate with portmap.
.It Bq Er YPERR_RESRC
A resource allocation failure occurred.
.It Bq Er YPERR_RPC
An RPC failure has occurred.
The domain has been marked unbound.
.It Bq Er YPERR_VERS
Client/server version mismatch.
If the server is running version 1 of the YP protocol,
.Fn yp_all
functionality does not exist.
.It Bq Er YPERR_YPBIND
Cannot communicate with
.Xr ypbind 8 .
.It Bq Er YPERR_YPERR
An internal server or client error has occurred.
.It Bq Er YPERR_YPSERV
The client cannot communicate with the YP server process.
.El
.Sh SEE ALSO
.Xr malloc 3 ,
.Xr yp 8 ,
.Xr ypbind 8 ,
.Xr ypserv 8
.Sh AUTHORS
.An Theo de Raadt
@


1.26
log
@obvious cases of missing .An;
found with the new mandoc(1) MANDOCERR_AN_MISSING warning;
no text changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.25 2014/07/13 23:25:09 schwarze Exp $
d30 2
a31 2
.Dd $Mdocdate: July 13 2014 $
.Dt YPCLNT 3
@


1.25
log
@add missing whitespace between .Fa macro argument and trailing punctuation
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.24 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
d368 1
a368 1
Theo de Raadt
@


1.24
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.23 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d263 1
a263 1
.It Fa inkey, inval
@


1.23
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.22 2009/06/12 16:28:49 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: June 12 2009 $
d84 1
a84 1
.Pa in
d86 1
a86 1
.Pa out .
d96 1
a96 1
.Pa outkey
d98 1
a98 1
.Pa outval ,
d105 1
a105 1
.Pa outkeylen
d107 1
a107 1
.Pa outvallen .
d109 1
a109 1
.Pa indomain
d111 1
a111 1
.Pa inmap
d130 1
a130 1
.Pa outdomain
d132 1
a132 1
.Pa indomain
d170 1
a170 1
.Pa inkey
d172 1
a172 1
.Pa outkey
d176 1
a176 1
.Pa outkey
d180 1
a180 1
.Pa inkey .
d220 1
a220 1
.Pa foreach
d233 1
a233 1
.Em char *data
d236 1
a236 1
.Pa foreach
d256 1
a256 1
.Aq Pa rpcsvc/yp_prot.h :
d262 1
a262 1
.Aq Pa rpcsvc/ypclnt.h .
d273 1
a273 1
.Pa foreach
d281 1
a281 1
.Pa foreach
d285 1
a285 1
.Pa incallback->data
d288 1
a288 1
.Pa foreach
@


1.22
log
@YP client functions do not allocate memory when they fail;
wording tweaked by jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.21 2009/06/04 21:02:33 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: June 4 2009 $
d48 4
a51 4
.Fd #include <sys/types.h>
.Fd #include <rpc/rpc.h>
.Fd #include <rpcsvc/ypclnt.h>
.Fd #include <rpcsvc/yp_prot.h>
@


1.21
log
@fix two obvious typos
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.20 2008/12/22 19:09:29 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: December 22 2008 $
d90 2
a91 1
Memory will be allocated by the YP client routines using
@


1.20
log
@document yp_maplist(); from Ingo Schwarze
ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.19 2008/06/26 05:42:05 ray Exp $
d30 1
a30 1
.Dd $Mdocdate: June 26 2008 $
d337 1
a337 1
.It Bq Er YPERR_DOM
d353 1
a353 1
.It Bq Er YPERR_BIND
@


1.19
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.18 2008/05/24 13:59:09 sobrado Exp $
d30 1
a30 1
.Dd $Mdocdate: May 24 2008 $
d38 1
d61 2
d242 1
a242 1
	int instatus,
d297 12
@


1.18
log
@typo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.17 2007/05/31 19:19:34 jmc Exp $
a16 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
@


1.17
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.16 2003/07/07 15:46:37 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate$
d359 1
a359 1
Theo De Raadt
@


1.16
log
@- fix a list
- remove .Pp before .Bd
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.15 2003/05/07 08:52:43 jmc Exp $
d37 1
a37 1
.Dd October 26, 1994
@


1.15
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.14 2002/09/04 10:14:38 deraadt Exp $
d165 1
a165 1
.Bl -tag -width Fn yp_match
a243 1
.Pp
@


1.14
log
@spelling
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.13 2001/08/06 10:42:26 mpech Exp $
d260 1
a260 1
.Nm <rpcsvc/yp_prot.h> :
d266 1
a266 1
.Nm <rpcsvc/ypclnt.h> .
d321 1
a321 1
The passed arguments to the function are invalid
@


1.13
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.12 2000/10/18 05:12:13 aaron Exp $
d203 1
a203 1
If the server is heaviliy loaded or the server fails for some reason, the
@


1.12
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.11 2000/03/14 21:31:45 aaron Exp $
d359 1
a359 1
.Sh AUTHOR
@


1.11
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.10 1999/11/30 00:46:19 deraadt Exp $
d83 2
a84 2
suite provides an interface to the YP subsystem.  For a general description
of the YP subsystem, see
d93 2
a94 2
should be the addresses of uninitialized character pointers.  Memory will be
allocated by the YP client routines using
d97 2
a98 1
the data stored there.  For
d115 2
a116 1
must be non-null, NUL-terminated strings.  All input strings which also have
d118 2
a119 1
length value is zero.  Such strings need not be NUL-terminated.
d128 2
a129 2
require a YP domain name and a YP map name.  The default domain name may be
obtained by calling
d139 3
a141 2
to a YP server process.  The client process need not explicitly bind to
the server, as it happens automatically whenever a lookup occurs.
d145 3
a147 2
is not available.  Each binding uses one socket descriptor on the client
process, which may be explicitly freed using
d171 2
a172 2
Provides the next key-value pair in the given map.  To obtain the second pair,
the
d191 2
a192 1
order.  The only guarantees provided with
d204 2
a205 1
domain being used may become unbound.  If this happens, and the client process
d207 2
a208 1
others not at all.  For this reason, the function
d214 2
a215 2
the server to the client process with a single request.  This transfer
uses TCP, unlike all other functions in the
d217 4
a220 4
suite, which use UDP.  The entire transaction occurs in a single RPC
request-response.  The third argument to this function provides a way
to supply the name of a function to process each key-value pair in the
map.
d224 2
a225 2
function decides that it does not want any more key-value pairs.  The third
argument to
d237 2
a238 1
argument is an opaque pointer for use by the callback function.  The
d269 2
a270 1
above.  In this case, the memory pointed to by
d279 2
a280 1
each iteration.  If the key-value pairs are not terminated with either
d290 2
a291 2
element of the callback structure.  It is provided as a means to share
state between the
d293 3
a295 2
function and the user code.  Its use is completely optional: cast it to
something useful or simply ignore it.
d339 2
a340 1
An RPC failure has occurred.  The domain has been marked unbound.
d342 2
a343 2
Client/server version mismatch.  If the server is running version 1
of the YP protocol,
@


1.10
log
@fix include list; dogcow@@redback.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.9 1999/07/09 13:35:21 aaron Exp $
d140 1
a140 1
is provided for a backup strategy, e.g. a local file, when a YP server process
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.8 1999/03/11 01:35:02 pjanzen Exp $
d55 1
@


1.8
log
@fix more comma splices that involve misuse of conjunctive adverbs
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.7 1999/02/27 21:57:07 deraadt Exp $
d124 1
a124 1
require a YP domain name and a YP map name.  The default domain name may be 
@


1.7
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.6 1997/06/13 10:09:37 deraadt Exp $
d265 1
a265 1
and is overwritten with each subsequent key-value pair, thus the
@


1.6
log
@null/NUL; lukem
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.5 1996/12/28 09:06:29 downsj Exp $
d212 1
a212 1
.Fn Yp_all
@


1.5
log
@an entire an entire
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.4 1996/08/19 08:35:11 tholo Exp $
d113 1
a113 1
must be non-null, null-terminated strings.  All input strings which also have
d115 1
a115 1
length value is zero.  Such strings need not be null-terminated.
d179 5
a183 1
Of course, the notions of ``first'' and ``next'' are particular to the
d290 1
a290 1
Returns a pointer to a null-terminated error string that does not contain a
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: ypclnt.3,v 1.3 1996/07/01 07:09:15 deraadt Exp $
d200 1
a200 1
This function provides a way to transfer an entire an entire map from
@


1.3
log
@update rcsid
@
text
@d1 1
a1 2
.\"	$OpenBSD$
.\"	$NetBSD: ypclnt.3,v 1.5 1996/02/28 00:57:22 thorpej Exp $
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d339 1
d341 1
a341 1
.Xr yp 8
@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
.\"	$NetBSD: ypclnt.3,v 1.4 1995/09/12 19:33:03 thorpej Exp $
d4 1
a4 1
.\" Copyright (c) 1994 Jason R. Thorpe
d7 3
d20 5
a24 4
.\"	This product includes software developed by Jason Thorpe.
.\" 4. Neither the name of the author nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
d26 11
a36 11
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
