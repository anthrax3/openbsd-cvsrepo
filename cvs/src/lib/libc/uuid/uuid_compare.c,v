head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.10
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.8
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2015.09.10.18.13.46;	author guenther;	state Exp;
branches;
next	1.2;
commitid	qU49tm8AgtP7HwZE;

1.2
date	2014.08.31.19.59.18;	author miod;	state Exp;
branches;
next	1.1;
commitid	SiWgEP9Xh7N7pWzK;

1.1
date	2014.08.31.09.36.39;	author miod;	state Exp;
branches;
next	;
commitid	YFYjcCv9iW12xVv5;


desc
@@


1.3
log
@Pull in namespace.h when building all .c files using gcc's -include option,
so that we can provide asm labels for the memcpy/memset/__stack_smash_handler
calls that it generates ab initio.  Eliminate direct #includes of it.  Make
sure it's a dependency of all objects (unnecessary for asm, but close enough).

ok deraadt@@
@
text
@/*	$OpenBSD: uuid_compare.c,v 1.2 2014/08/31 19:59:18 miod Exp $	*/
/*	$NetBSD: uuid_compare.c,v 1.2 2008/04/23 07:52:32 plunky Exp $	*/

/*-
 * Copyright (c) 2002,2005 Marcel Moolenaar
 * Copyright (c) 2002 Hiten Mahesh Pandya
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: src/lib/libc/uuid/uuid_compare.c,v 1.6 2007/04/05 02:07:33 delphij Exp $
 */

#include <string.h>
#include <uuid.h>

/* A macro used to improve the readability of uuid_compare(). */
#define DIFF_RETURN(a, b, field)	do {			\
	if ((a)->field != (b)->field)				\
		return (((a)->field < (b)->field) ? -1 : 1);	\
} while (0)

/*
 * uuid_compare() - compare two UUIDs.
 * See also:
 *	http://www.opengroup.org/onlinepubs/009629399/uuid_compare.htm
 *
 * NOTE: Either UUID can be NULL, meaning a nil UUID. nil UUIDs are smaller
 *	 than any non-nil UUID.
 */
int32_t
uuid_compare(const uuid_t *a, const uuid_t *b, uint32_t *status)
{
	int res;

	if (status != NULL)
		*status = uuid_s_ok;

	/* Deal with NULL or equal pointers. */
	if (a == b)
		return (0);
	if (a == NULL)
		return ((uuid_is_nil(b, NULL)) ? 0 : -1);
	if (b == NULL)
		return ((uuid_is_nil(a, NULL)) ? 0 : 1);

	/* We have to compare the hard way. */
	DIFF_RETURN(a, b, time_low);
	DIFF_RETURN(a, b, time_mid);
	DIFF_RETURN(a, b, time_hi_and_version);
	DIFF_RETURN(a, b, clock_seq_hi_and_reserved);
	DIFF_RETURN(a, b, clock_seq_low);

	res = memcmp(a->node, b->node, sizeof(a->node));
	if (res)
		return ((res < 0) ? -1 : 1);
	return (0);
}

#undef DIFF_RETURN
@


1.2
log
@Sync with FreeBSD. No functional change but more readable code.
@
text
@d1 1
a1 1
/*	$OpenBSD: uuid_compare.c,v 1.1 2014/08/31 09:36:39 miod Exp $	*/
a31 2

#include "namespace.h"
@


1.1
log
@Add uuid support routines to libc. From FreeBSD via NetBSD via Bitrig via
Markus Mueller.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d4 2
a5 2
/*
 * Copyright (c) 2002 Marcel Moolenaar
d30 1
a30 1
 * $FreeBSD: src/lib/libc/uuid/uuid_compare.c,v 1.3 2003/08/08 19:18:43 marcel Exp $
d38 6
d69 6
a74 16
	res = (int)((int64_t)a->time_low - (int64_t)b->time_low);
	if (res)
		return ((res < 0) ? -1 : 1);
	res = (int)a->time_mid - (int)b->time_mid;
	if (res)
		return ((res < 0) ? -1 : 1);
	res = (int)a->time_hi_and_version - (int)b->time_hi_and_version;
	if (res)
		return ((res < 0) ? -1 : 1);
	res = (int)a->clock_seq_hi_and_reserved -
	    (int)b->clock_seq_hi_and_reserved;
	if (res)
		return ((res < 0) ? -1 : 1);
	res = (int)a->clock_seq_low - (int)b->clock_seq_low;
	if (res)
		return ((res < 0) ? -1 : 1);
d80 2
@

