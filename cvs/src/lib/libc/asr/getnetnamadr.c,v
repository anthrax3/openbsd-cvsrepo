head	1.9;
access;
symbols
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.6.0.4
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2015.01.16.16.48.51;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	0DYulI8hhujBHMcR;

1.8
date	2014.03.26.18.13.15;	author eric;	state Exp;
branches;
next	1.7;

1.7
date	2014.03.25.19.48.11;	author eric;	state Exp;
branches;
next	1.6;

1.6
date	2013.07.12.14.36.22;	author eric;	state Exp;
branches;
next	1.5;

1.5
date	2013.05.27.17.31.01;	author eric;	state Exp;
branches;
next	1.4;

1.4
date	2013.04.04.17.50.19;	author eric;	state Exp;
branches;
next	1.3;

1.3
date	2013.04.01.15.49.54;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2012.11.24.15.12.48;	author eric;	state Exp;
branches;
next	1.1;

1.1
date	2012.09.08.11.08.21;	author eric;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Move to the <limits.h> universe.
review by millert, binary checking process with doug, concept with guenther
@
text
@/*	$OpenBSD: getnetnamadr.c,v 1.8 2014/03/26 18:13:15 eric Exp $	*/
/*
 * Copyright (c) 2012 Eric Faurot <eric@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/param.h>	/* ALIGN */
#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>
#include <netdb.h>

#include <asr.h>
#include <errno.h>
#include <resolv.h>
#include <stdlib.h>
#include <string.h>

static void _fillnetent(const struct netent *, struct netent *, char *buf,
    size_t);

static struct netent	 _netent;
static char		 _entbuf[4096];

static char *_empty[] = { NULL, };

static void
_fillnetent(const struct netent *e, struct netent *r, char *buf, size_t len)
{
	char	**ptr, *end, *pos;
	size_t	n, i;
	int	naliases;

	bzero(buf, len);
	bzero(r, sizeof(*r));
	r->n_aliases = _empty;

	end = buf + len;
	ptr = (char **)ALIGN(buf);

	if ((char *)ptr >= end)
		return;

	for (naliases = 0; e->n_aliases[naliases]; naliases++)
		;

	r->n_name = NULL;
	r->n_addrtype = e->n_addrtype;
	r->n_net = e->n_net;
	r->n_aliases = ptr;

	pos = (char *)(ptr + (naliases + 1));
	if (pos > end)
		r->n_aliases = _empty;

	n = strlcpy(pos, e->n_name, end - pos);
	if (n >= end - pos)
		return;
	r->n_name = pos;
	pos += n + 1;

	for (i = 0; i < naliases; i++) {
		n = strlcpy(pos, e->n_aliases[i], end - pos);
		if (n >= end - pos)
			return;
		r->n_aliases[i] = pos;
		pos += n + 1;
	}
}

struct netent *
getnetbyname(const char *name)
{
	struct asr_query *as;
	struct asr_result ar;

	res_init();

	as = getnetbyname_async(name, NULL);
	if (as == NULL) {
		h_errno = NETDB_INTERNAL;
		return (NULL);
	}

	asr_run_sync(as, &ar);

	errno = ar.ar_errno;
	h_errno = ar.ar_h_errno;
	if (ar.ar_netent == NULL)
		return (NULL);

	_fillnetent(ar.ar_netent, &_netent, _entbuf, sizeof(_entbuf));
	free(ar.ar_netent);

	return (&_netent);
}

struct netent *
getnetbyaddr(in_addr_t net, int type)
{
	struct asr_query *as;
	struct asr_result ar;

	res_init();

	as = getnetbyaddr_async(net, type, NULL);
	if (as == NULL) {
		h_errno = NETDB_INTERNAL;
		return (NULL);
	}

	asr_run_sync(as, &ar);

	errno = ar.ar_errno;
	h_errno = ar.ar_h_errno;
	if (ar.ar_netent == NULL)
		return (NULL);

	_fillnetent(ar.ar_netent, &_netent, _entbuf, sizeof(_entbuf));
	free(ar.ar_netent);

	return (&_netent);
}
@


1.8
log
@Make the asr API public.  Install asr.h to /usr/include.h and manpages.
Include tweaks suggested by mpi@@

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.7 2014/03/25 19:48:11 eric Exp $	*/
d18 1
@


1.7
log
@Cleanup and simplify the API to be exposed.  Use better names for
structures, functions and defines.

discussed with and ok deraadt@@ guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.6 2013/07/12 14:36:22 eric Exp $	*/
d19 1
d21 1
d23 1
a27 2

#include "asr.h"
@


1.6
log
@Make some symbols static and prefix all visible symbols with asr_
to prevent collisions with third-party programs.

suggested by sthen@@, ok theo@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.5 2013/05/27 17:31:01 eric Exp $	*/
d83 2
a84 2
	struct async	*as;
	struct async_res ar;
d94 1
a94 1
	asr_async_run_sync(as, &ar);
d110 2
a111 2
	struct async	*as;
	struct async_res ar;
d121 1
a121 1
	asr_async_run_sync(as, &ar);
@


1.5
log
@Add minimal support for _res setup and update.

Change res_init() to initialize the _res structure on first call, and
udpate the global async context if changes were made by the user. All
resolver functions now call res_init() internally.

fixes issue spotted by otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.4 2013/04/04 17:50:19 eric Exp $	*/
d94 1
a94 1
	async_run_sync(as, &ar);
d121 1
a121 1
	async_run_sync(as, &ar);
@


1.4
log
@fix alignment issue in getnetby{addr,name}() too.
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.3 2013/04/01 15:49:54 deraadt Exp $	*/
d86 2
d112 2
@


1.3
log
@space cleanup; ok eric
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.2 2012/11/24 15:12:48 eric Exp $	*/
d43 4
d48 4
a51 1
	ptr = (char **)buf; /* XXX align */
d62 1
a62 1
	if (pos > end) {
a63 3
		return;
	}
	bzero(ptr, pos - (char *)ptr);
@


1.2
log
@knf
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetnamadr.c,v 1.1 2012/09/08 11:08:21 eric Exp $	*/
d44 1
a44 1
	ptr = (char**)buf; /* XXX align */
@


1.1
log
@split asr_resolver.c into different files to overlay the libc/net
resolver implementation.
@
text
@d1 1
a1 1
/*	$OpenBSD: asr_resolver.c,v 1.10 2012/08/19 17:59:15 eric Exp $	*/
d67 1
a67 1
	for(i = 0; i < naliases; i++) {
@

