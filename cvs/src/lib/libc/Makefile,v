head	1.40;
access;
symbols
	OPENBSD_6_1:1.40.0.2
	OPENBSD_6_1_BASE:1.40
	OPENBSD_6_0:1.39.0.2
	OPENBSD_6_0_BASE:1.39
	OPENBSD_5_9:1.38.0.2
	OPENBSD_5_9_BASE:1.38
	OPENBSD_5_8:1.34.0.8
	OPENBSD_5_8_BASE:1.34
	OPENBSD_5_7:1.34.0.2
	OPENBSD_5_7_BASE:1.34
	OPENBSD_5_6:1.34.0.4
	OPENBSD_5_6_BASE:1.34
	OPENBSD_5_5:1.32.0.6
	OPENBSD_5_5_BASE:1.32
	OPENBSD_5_4:1.32.0.2
	OPENBSD_5_4_BASE:1.32
	OPENBSD_5_3:1.31.0.2
	OPENBSD_5_3_BASE:1.31
	OPENBSD_5_2:1.29.0.12
	OPENBSD_5_2_BASE:1.29
	OPENBSD_5_1_BASE:1.29
	OPENBSD_5_1:1.29.0.10
	OPENBSD_5_0:1.29.0.8
	OPENBSD_5_0_BASE:1.29
	OPENBSD_4_9:1.29.0.6
	OPENBSD_4_9_BASE:1.29
	OPENBSD_4_8:1.29.0.4
	OPENBSD_4_8_BASE:1.29
	OPENBSD_4_7:1.29.0.2
	OPENBSD_4_7_BASE:1.29
	OPENBSD_4_6:1.26.0.16
	OPENBSD_4_6_BASE:1.26
	OPENBSD_4_5:1.26.0.12
	OPENBSD_4_5_BASE:1.26
	OPENBSD_4_4:1.26.0.10
	OPENBSD_4_4_BASE:1.26
	OPENBSD_4_3:1.26.0.8
	OPENBSD_4_3_BASE:1.26
	OPENBSD_4_2:1.26.0.6
	OPENBSD_4_2_BASE:1.26
	OPENBSD_4_1:1.26.0.4
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.26.0.2
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.25.0.2
	OPENBSD_3_9_BASE:1.25
	OPENBSD_3_8:1.23.0.2
	OPENBSD_3_8_BASE:1.23
	OPENBSD_3_7:1.22.0.6
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.4
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.2
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.19.0.6
	OPENBSD_3_4_BASE:1.19
	OPENBSD_3_3:1.19.0.4
	OPENBSD_3_3_BASE:1.19
	OPENBSD_3_2:1.19.0.2
	OPENBSD_3_2_BASE:1.19
	OPENBSD_3_1:1.18.0.4
	OPENBSD_3_1_BASE:1.18
	OPENBSD_3_0:1.18.0.2
	OPENBSD_3_0_BASE:1.18
	OPENBSD_2_9:1.17.0.4
	OPENBSD_2_9_BASE:1.17
	OPENBSD_2_8:1.17.0.2
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.16.0.6
	OPENBSD_2_7_BASE:1.16
	OPENBSD_2_6:1.16.0.4
	OPENBSD_2_6_BASE:1.16
	OPENBSD_2_5:1.16.0.2
	OPENBSD_2_5_BASE:1.16
	OPENBSD_2_4:1.15.0.2
	OPENBSD_2_4_BASE:1.15
	OPENBSD_2_3:1.14.0.4
	OPENBSD_2_3_BASE:1.14
	OPENBSD_2_2:1.14.0.2
	OPENBSD_2_2_BASE:1.14
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.10.0.2
	OPENBSD_2_0_BASE:1.10
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.40
date	2017.01.22.23.56.44;	author jsg;	state Exp;
branches;
next	1.39;
commitid	jTeWD1PiHsn1cvv7;

1.39
date	2016.04.26.14.49.53;	author deraadt;	state Exp;
branches;
next	1.38;
commitid	P06kDe7plk8pojtn;

1.38
date	2015.11.10.04.14.03;	author guenther;	state Exp;
branches;
next	1.37;
commitid	SlaqG0vnitmMjAjz;

1.37
date	2015.10.25.10.22.09;	author bluhm;	state Exp;
branches;
next	1.36;
commitid	7mBkOAMje05PhuEO;

1.36
date	2015.08.29.06.08.49;	author deraadt;	state Exp;
branches;
next	1.35;
commitid	eFsRNM74fWZVKWZ3;

1.35
date	2015.08.22.19.40.06;	author guenther;	state Exp;
branches;
next	1.34;
commitid	AYAtrj0Fi0ATVHuv;

1.34
date	2014.06.09.20.47.10;	author miod;	state Exp;
branches;
next	1.33;
commitid	iQ7uGgiNX7UaiPtF;

1.33
date	2014.05.21.01.17.52;	author tedu;	state Exp;
branches;
next	1.32;

1.32
date	2013.06.01.21.26.17;	author stsp;	state Exp;
branches;
next	1.31;

1.31
date	2012.08.15.18.08.22;	author matthew;	state Exp;
branches;
next	1.30;

1.30
date	2012.08.02.13.38.38;	author okan;	state Exp;
branches;
next	1.29;

1.29
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2009.11.24.20.11.08;	author mk;	state Exp;
branches;
next	1.27;

1.27
date	2009.10.27.23.59.59;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	2006.03.14.09.19.37;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2005.11.24.20.49.14;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2005.09.29.12.37.35;	author uwe;	state Exp;
branches;
next	1.23;

1.23
date	2005.06.29.14.05.08;	author mickey;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.28.17.58.12;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2004.01.28.13.53.09;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2003.11.20.23.23.09;	author avsm;	state Exp;
branches;
next	1.19;

1.19
date	2002.07.15.19.41.10;	author mickey;	state Exp;
branches;
next	1.18;

1.18
date	2001.06.18.18.08.14;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2000.10.04.06.06.00;	author d;	state Exp;
branches;
next	1.16;

1.16
date	98.11.20.11.18.28;	author d;	state Exp;
branches;
next	1.15;

1.15
date	98.08.08.04.12.16;	author form;	state Exp;
branches;
next	1.14;

1.14
date	97.06.18.10.17.44;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	97.04.27.20.56.07;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	97.04.19.21.26.17;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	96.12.08.15.22.24;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	96.09.30.05.32.42;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	96.09.15.10.09.06;	author tholo;	state Exp;
branches;
next	1.8;

1.8
date	96.09.05.12.56.10;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.09.04.22.52.00;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.19.08.10.10;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.06.03.22.20.31;	author niklas;	state Exp;
branches;
next	1.4;

1.4
date	96.03.25.23.31.14;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	95.12.15.02.39.07;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.00.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.19;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.40
log
@Link libc with compiler_rt not libgcc if COMPILER_VERSION is clang.

This is not a list of archs with compiler_rt as it is intended that
any arch switching to clang will have the required md bits added to
compiler_rt first.

ok kettenis@@ patrick@@
@
text
@#	$OpenBSD: Makefile,v 1.39 2016/04/26 14:49:53 deraadt Exp $
#
# The YP functions are always in libc. To choose that getpwent() and friends
# actually call the YP functions, put -DYP on the CFLAGS line below.

.include <bsd.own.mk>

LIB=c
LIBREBUILD=y
CLEANFILES+=tags Symbols.map
CFLAGS+=-Wimplicit
#CFLAGS+=-Werror
LDADD=-nostdlib
.if ${COMPILER_VERSION:L} == "clang"
LDADD+=-lcompiler_rt
.else
LDADD+=-lgcc
.endif

VERSION_SCRIPT=	Symbols.map
SYMBOL_LISTS=	${LIBCSRCDIR}/Symbols.list \
		${LIBCSRCDIR}/arch/${MACHINE_CPU}/Symbols.list


LIBCSRCDIR=${.CURDIR}
.include "${LIBCSRCDIR}/Makefile.inc"

all: tags
tags: ${SRCS}
	ctags -w ${.ALLSRC:M*.c}
	egrep "^SYSENTRY(.*)|^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" \
	    /dev/null ${.ALLSRC:M*.S} | \
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3	\1	/^\2(\3\4$$/;" \
	    >> tags; sort -o tags tags

beforeinstall:
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 tags \
		${DESTDIR}/var/db/lib${LIB}.tags

${VERSION_SCRIPT}: ${SYMBOL_LISTS}
	{ printf '{\n\tglobal:\n'; \
	  sed '/^[._a-zA-Z]/s/$$/;/; s/^/		/' ${SYMBOL_LISTS}; \
	  printf '\n\tlocal:\n\t\t*;\n};\n'; } >$@@.tmp && mv $@@.tmp $@@

.include <bsd.lib.mk>
@


1.39
log
@Enable LIBREBUILD to construct libc.so.*.a
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.38 2015/11/10 04:14:03 guenther Exp $
d13 6
a18 1
LDADD=-nostdlib -lgcc
@


1.38
log
@libc.so can't be unloaded, so move the hidden atexit() and pthread_atfork()
stubs for the executable from crtbegin.o into libc, which lets them be
excluded from static links that don't use them.
For this, drop the normal crt{begin,end}S.o from libc.so: the .init and .fini
sections for libc aren't called at the right times anyway, so it's good that
they're unused.  libc.so just needs __guard_local and the .note.openbsd.ident
section, so add them to stack_protector.c for now (this will be improved)

"good time" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.37 2015/10/25 10:22:09 bluhm Exp $
d9 1
@


1.37
log
@The only thing that was translated into multiple languages in OpenBSD
are the errno messages and signal names.  Everything else is in
English.  We are not planning to translate more text.  Running a
mixed system with less than 1% of the text in native language makes
no sense.  So remove the NLS support from libc messages.  The
catopen(3) functions stay as they are.
OK stsp@@ mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.36 2015/08/29 06:08:49 deraadt Exp $
d12 1
a12 1
LDADD=-nodefaultlibs -lgcc
@


1.36
log
@Add Symbols.map to CLEANFILES
@
text
@d1 1
a1 5
#	$OpenBSD: Makefile,v 1.35 2015/08/22 19:40:06 guenther Exp $
#
# The NLS (message catalog) functions are always in libc.  To choose that
# strerror(), perror(), strsignal(), psignal(), etc. actually call the NLS
# functions, put -DNLS on the CFLAGS line below.
a20 6

NLS= 	C.msg Pig.msg da.ISO8859-1.msg da.UTF-8.msg de.ISO8859-1.msg \
	de.UTF-8.msg es.ISO8859-1.msg es.UTF-8.msg fi.ISO8859-1.msg \
	fi.UTF-8.msg fr.ISO8859-1.msg fr.UTF-8.msg it.UTF-8.msg \
	nl.ISO8859-1.msg nl.UTF-8.msg no.ISO8859-1.msg no.UTF-8.msg \
	ru.KOI8-R.msg ru.UTF-8.msg sv.ISO8859-1.msg sv.UTF-8.msg
@


1.35
log
@Explicitly list the symbols permitted to be exported by libc.
This is primed with the current list of exported symbols so it doesn't
change the ABI yet, but will prevent unintentional additions in the future
and sets the stage for reductions.

ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.34 2014/06/09 20:47:10 miod Exp $
d13 1
a13 1
CLEANFILES+=tags
@


1.34
log
@Nuke the machinery to sync libkern with libc, it's not been used in the
last 15 years and there is no point to use it in the future.

From Jean-Philippe Ouellet
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.33 2014/05/21 01:17:52 tedu Exp $
d18 5
d43 5
@


1.33
log
@warn about implicit. misspelled function names in libc are deadly.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.32 2013/06/01 21:26:17 stsp Exp $
a25 24

copy-to-libkern:	copy-to-libkern-machind copy-to-libkern-machdep

.if make(copy-to-libkern)
copy-to-libkern-machind: ${KSRCS}
	cp -p ${.ALLSRC} ${LIBKERN}
.if defined(KINCLUDES) && !empty(KINCLUDES)
	(cd ${.CURDIR} ; cp -p ${KINCLUDES} ${LIBKERN})
.endif

copy-to-libkern-machdep: ${KMSRCS}
.if defined(KMSRCS) && !empty(KMSRCS)
	cp -p ${.ALLSRC} ${LIBKERN}/arch/${MACHINE_CPU}
.endif
.if defined(KMINCLUDES) && !empty(KMINCLUDES)
	(cd ${.CURDIR} ; cp -p ${KMINCLUDES} ${LIBKERN}/arch/${MACHINE_CPU})
.endif

rm-from-libkern:
	for i in ${KSRCS}; do rm -f ${LIBKERN}/$$i; done
.if defined(KMSRCS) && !empty(KMSRCS)
	for i in ${KMSRCS}; do rm -f ${LIBKERN}/arch/${MACHINE_CPU}/$$i; done
.endif
.endif
@


1.32
log
@Fix catopen(3) for UTF-8 locales and update the implementation to POSIX-2008.

Catalogs had an arbitrary character set which was used regardless of locale.
Add UTF-8-encoded catalogs for libc error messages, and rename existing ones
to indicate their character sets. catopen(3) now chooses a catalog which
matches the locale's encoding, if available.

help & ok matthew, man page bits ok jmc, input from naddy and bluhm
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.31 2012/08/15 18:08:22 matthew Exp $
d14 1
@


1.31
log
@A couple small but long anticipated changes:

  - Link libpthread.so with -znodlopen.  Because libpthread overrides
    the weak symbols in libc, we can't allow it to be dynamically
    loaded or else libc's weak symbols might have already been
    resolved by ld.so.  (Also, major bump because this is technically
    a backwards incompat change in behavior, although dlopen()ing
    libpthread never really worked.)

  - Link libc.so with -nodefaultlibs -lgcc.  This ensures that libc
    doesn't try to link against itself (which ld.so wouldn't like).

  - Change GCC 4 to link shared objects with -lpthread and -lc as
    appropriate, now that there's no issues with doing so.  This means
    that it's no longer necessary to patch software to use -pthread
    instead of -lpthread.  (Ports tree rejoice!)

Also, to preemptively answer this question: No, this does not
eliminate the need for LD_PRELOAD=libpthread.so.  That's a separate
issue that won't be resolved until we eliminate libc's weak symbols.

Discussed extensively on email and icb over the past few months.
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.30 2012/08/02 13:38:38 okan Exp $
d20 5
a24 1
NLS=	C.msg Pig.msg da.msg de.msg es.msg fi.msg fr.msg nl.msg no.msg ru.msg sv.msg it.msg
@


1.30
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.29 2010/02/03 20:49:00 miod Exp $
d15 1
@


1.29
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.28 2009/11/24 20:11:08 mk Exp $
a12 2
WANTLINT=
LINTFLAGS=-z
@


1.28
log
@Add `da.msg'.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.27 2009/10/27 23:59:59 deraadt Exp $
d34 1
a34 1
	cp -p ${.ALLSRC} ${LIBKERN}/arch/${MACHINE_ARCH}
d37 1
a37 1
	(cd ${.CURDIR} ; cp -p ${KMINCLUDES} ${LIBKERN}/arch/${MACHINE_ARCH})
d43 1
a43 1
	for i in ${KMSRCS}; do rm -f ${LIBKERN}/arch/${MACHINE_ARCH}/$$i; done
@


1.27
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.26 2006/03/14 09:19:37 deraadt Exp $
d21 1
a21 1
NLS=	C.msg Pig.msg de.msg es.msg fi.msg fr.msg nl.msg no.msg ru.msg sv.msg it.msg
@


1.26
log
@add italian nls; from jwk@@xtf.it
@
text
@d1 1
a1 7
#	$OpenBSD: Makefile,v 1.25 2005/11/24 20:49:14 deraadt Exp $
#
# All library objects contain sccsid strings by default; they may be
# excluded as a space-saving measure.  To produce a library that does
# not contain these strings, delete -DLIBC_SCCS and -DSYSLIBC_SCCS
# from CFLAGS below.  To remove these strings from just the system call
# stubs, remove just -DSYSLIBC_SCCS from CFLAGS.
@


1.25
log
@use WANTLINT= (on all architectures)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2005/09/29 12:37:35 uwe Exp $
d27 1
a27 1
NLS=	C.msg Pig.msg de.msg es.msg fi.msg fr.msg nl.msg no.msg ru.msg sv.msg
@


1.24
log
@use tabs instead of spaces in tags file
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2005/06/29 14:05:08 mickey Exp $
d19 1
@


1.23
log
@only include copy-to-libkern-* targets if making copy-to-libkern to avoid zombie dependancies elsewhere
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2004/01/28 17:58:12 deraadt Exp $
d57 1
a57 1
	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
@


1.22
log
@oops
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2004/01/28 13:53:09 deraadt Exp $
d30 1
d49 1
@


1.21
log
@toast long line
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2003/11/20 23:23:09 avsm Exp $
d53 1
a53 1
	egrep "^SYSENTRY(.*)|^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" | \
@


1.20
log
@remove -Werror from userland builds, to give us a chance to
use more verbose warning options if desired.
ok millert@@, henning@@, david@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2002/07/15 19:41:10 mickey Exp $
d53 2
a54 1
	egrep "^SYSENTRY(.*)|^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" /dev/null ${.ALLSRC:M*.S} | \
@


1.19
log
@suppress ctags warnings; millert@@ ok
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2001/06/18 18:08:14 millert Exp $
d21 1
a21 1
CFLAGS+=-Werror
@


1.18
log
@compile libc with -Werror since any warnings gcc produces without extra -Wfoo directives is something we care about
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2000/10/04 06:06:00 d Exp $
d52 1
a52 1
	ctags ${.ALLSRC:M*.c}
@


1.17
log
@teach tags about SYSENTRY
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 1998/11/20 11:18:28 d Exp $
d21 1
@


1.16
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 1998/08/08 04:12:16 form Exp $
d52 1
a52 1
	egrep "^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" /dev/null ${.ALLSRC:M*.S} | \
@


1.15
log
@add russian messages support
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 1997/06/18 10:17:44 deraadt Exp $
a18 4
CFLAGS+=-DNLS -DLIBC_SCCS -DSYSLIBC_SCCS -I${.CURDIR}/include
.if (${YP} == "yes")
CFLAGS+=-DYP -I${.CURDIR}/yp
.endif
a19 5
LLIBS=
AINC=	-I${.CURDIR}/arch/${MACHINE_ARCH}
.if defined(DESTDIR)
AINC+=	-nostdinc -idirafter ${DESTDIR}/usr/include
.endif
d22 2
a23 29
.if exists (${.CURDIR}/arch/${MACHINE_ARCH}/Makefile.inc)
.PATH:	${.CURDIR}/arch/${MACHINE_ARCH}
.include "${.CURDIR}/arch/${MACHINE_ARCH}/Makefile.inc"
.endif

.include "${.CURDIR}/db/Makefile.inc"
.include "${.CURDIR}/compat-43/Makefile.inc"
.include "${.CURDIR}/gen/Makefile.inc"
.include "${.CURDIR}/crypt/Makefile.inc"
.include "${.CURDIR}/gmon/Makefile.inc"
.include "${.CURDIR}/hash/Makefile.inc"
.include "${.CURDIR}/locale/Makefile.inc"
.include "${.CURDIR}/md/Makefile.inc"
.include "${.CURDIR}/net/Makefile.inc"
.include "${.CURDIR}/nls/Makefile.inc"
.if (${MACHINE_ARCH} != "alpha")
.include "${.CURDIR}/quad/Makefile.inc"
.endif
.include "${.CURDIR}/regex/Makefile.inc"
.include "${.CURDIR}/rpc/Makefile.inc"
.include "${.CURDIR}/stdio/Makefile.inc"
.include "${.CURDIR}/stdlib/Makefile.inc"
.include "${.CURDIR}/string/Makefile.inc"
.include "${.CURDIR}/termios/Makefile.inc"
.include "${.CURDIR}/time/Makefile.inc"
.include "${.CURDIR}/sys/Makefile.inc"
.if (${YP} == "yes")
.include "${.CURDIR}/yp/Makefile.inc"
.endif
a26 11
LIBKERN=	${.CURDIR}/../../sys/lib/libkern

KSRCS=	bcmp.c bzero.c ffs.c strcat.c strcmp.c strcpy.c strlen.c strncmp.c \
	strncpy.c htonl.c htons.c ntohl.c ntohs.c
.if (${MACHINE_ARCH} != "alpha")
KSRCS+=	adddi3.c anddi3.c ashldi3.c ashrdi3.c cmpdi2.c divdi3.c iordi3.c \
	lshldi3.c lshrdi3.c moddi3.c muldi3.c negdi2.c notdi2.c qdivrem.c \
	subdi3.c  ucmpdi2.c udivdi3.c umoddi3.c xordi3.c
KINCLUDES+=	quad/quad.h
.endif

d58 1
a58 1
		${DESTDIR}/var/db/libc.tags
@


1.14
log
@catalogs from netbsd
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 1997/04/27 20:56:07 millert Exp $
d61 1
a61 1
NLS=	C.msg Pig.msg de.msg es.msg fi.msg fr.msg nl.msg no.msg sv.msg
@


1.13
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 1997/04/19 21:26:17 millert Exp $
d61 1
a61 1
NLS=	C.msg Pig.msg de.msg es.msg fr.msg
@


1.12
log
@Changed ``defined(KERBEROS)'' to ``(${KERBEROS} == "yes")''
Same change doen for SKEY, YP, and KERBEROS5.  This allows
people to override those setting in /etc/mk.conf.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 1996/12/08 15:22:24 downsj Exp $
d104 1
a104 1
	${INSTALL} ${COPY} -o ${BINOWN} -g ${BINGRP} -m 444 tags \
@


1.11
log
@install -> ${INSTALL}, -c -> ${COPY}
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 1996/09/30 05:32:42 millert Exp $
d20 1
a20 1
.if defined(YP)
d57 1
a57 1
.if defined(YP)
@


1.10
log
@Added subdir "hash"
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 1996/09/15 10:09:06 tholo Exp $
d104 1
a104 1
	install -c -o ${BINOWN} -g ${BINGRP} -m 444 tags \
@


1.9
log
@Add a couple of syscalls; bring more prototypes into scope
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 1996/09/05 12:56:10 deraadt Exp $
d41 1
@


1.8
log
@bsd.own.mk before YP test
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 1996/09/04 22:52:00 deraadt Exp $
d21 1
a21 1
CFLAGS+=-DYP
@


1.7
log
@permit YP to be compiled out using flag in bsd.own.mk; pr#15, peter@@demon.net
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 1996/08/19 08:10:10 tholo Exp $
d15 2
@


1.6
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1996/06/03 22:20:31 niklas Exp $
d17 4
a20 1
CFLAGS+=-DNLS -DYP -DLIBC_SCCS -DSYSLIBC_SCCS -I${.CURDIR}/include
d54 1
d56 1
@


1.5
log
@Add md[245] routines in libc/md, remove md5 from libc/crypt.  Add $OpenBSD$
@
text
@d1 1
a1 2
#	$OpenBSD$
#	$NetBSD: Makefile,v 1.47 1995/11/23 02:20:59 jtc Exp $
@


1.4
log
@Add support for building lint(1) library
@
text
@d1 1
a2 1
#	@@(#)Makefile	8.2 (Berkeley) 2/3/94
d38 1
@


1.3
log
@look for additional sources in crypt/
@
text
@d19 2
@


1.2
log
@from netbsd:
Added spanish language message catalog from Jesus M. Gonzalez <jgb@@ordago.uc3m.es>
@
text
@d33 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile,v 1.46 1995/10/09 03:58:02 jtc Exp $
d50 1
a50 1
NLS=	C.msg Pig.msg de.msg fr.msg
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
