head	1.20;
access;
symbols
	OPENBSD_6_0:1.20.0.2
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.12
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.4
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.8
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.16.0.24
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.22
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.20
	OPENBSD_5_0:1.16.0.18
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.16
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.14
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.10
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.12
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.8
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.6
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.16.0.4
	OPENBSD_4_3_BASE:1.16
	OPENBSD_4_2:1.16.0.2
	OPENBSD_4_2_BASE:1.16
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.12.0.14
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.12
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.10
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.8
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.6
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.4
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.2
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3;
locks; strict;
comment	@.\" @;


1.20
date	2016.05.07.23.35.45;	author naddy;	state Exp;
branches;
next	1.19;
commitid	fBLMzWMJgk4zBUCU;

1.19
date	2015.11.30.17.03.05;	author jmc;	state Exp;
branches;
next	1.18;
commitid	34hNwlxcxhcYPM8K;

1.18
date	2015.11.10.23.48.17;	author jmc;	state Exp;
branches;
next	1.17;
commitid	QU70QaxjyBAtj4Rv;

1.17
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2007.05.31.19.19.28;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2005.07.17.09.10.36;	author jaredy;	state Exp;
branches;
next	1.14;

1.14
date	2004.05.03.17.27.50;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2003.10.21.20.30.16;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2000.10.25.16.44.08;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.10.18.05.12.07;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.18.02.31.36;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.07.09.13.35.15;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.07.10.50.04;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.23.14.10.58;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.16.19.54.47;	author alex;	state Exp;
branches;
next	1.5;

1.5
date	99.04.18.17.08.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.02.15.05.11.25;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.05.15.14.30.15;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.05.13.17.15.32;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.05.13.12.41.02;	author d;	state Exp;
branches;
next	;


desc
@@


1.20
log
@remove more dbm pieces
@
text
@.\" David Leonard, 1998. Placed in the public domain.
.\" $OpenBSD: ndbm.3,v 1.19 2015/11/30 17:03:05 jmc Exp $
.Dd $Mdocdate: November 30 2015 $
.Dt DBM_OPEN 3
.Os
.Sh NAME
.Nm dbm_clearerr ,
.Nm dbm_close ,
.Nm dbm_delete ,
.Nm dbm_dirfno ,
.Nm dbm_error ,
.Nm dbm_fetch ,
.Nm dbm_firstkey ,
.Nm dbm_nextkey ,
.Nm dbm_open ,
.Nm dbm_pagfno ,
.Nm dbm_rdonly ,
.Nm dbm_store
.Nd database access methods
.Sh SYNOPSIS
.In ndbm.h
.Ft int
.Fn dbm_clearerr "DBM *db"
.Ft void
.Fn dbm_close "DBM *db"
.Ft int
.Fn dbm_delete "DBM *db" "datum key"
.Ft int
.Fn dbm_dirfno "DBM *db"
.Ft int
.Fn dbm_error "DBM *db"
.Ft datum
.Fn dbm_fetch "DBM *db" "datum key"
.Ft datum
.Fn dbm_firstkey "DBM *db"
.Ft datum
.Fn dbm_nextkey "DBM *db"
.Ft "DBM *"
.Fn dbm_open "const char *file" "int flags" "mode_t mode"
.Ft int
.Fn dbm_pagfno "DBM *db"
.Ft int
.Fn dbm_rdonly "DBM *db"
.Ft int
.Fn dbm_store "DBM *db" "datum key" "datum content" "int store_mode"
.Sh DESCRIPTION
These functions provide a ndbm-compatible interface to the
database access methods described in
.Xr dbopen 3 .
Each unique record in the database is a key/content pair,
the components of which may be any arbitrary binary data.
The key and the content data are described by the
.Ft datum
data structure:
.Bd -literal -offset indent
typedef struct {
	void *dptr;
	size_t dsize;
} datum;
.Ed
.Pp
The
.Fn dbm_open
function is used to open a database in the file named by
.Fa file ,
suffixed with
.Dv DBM_SUFFIX
.Pq Sq Pa .db .
If necessary, the file is created with mode
.Ar mode .
Access to this file depends on the
.Fa flags
parameter (see
.Xr open 2 ) .
Read-only access may be indicated by specifying
.Dv DBM_RDONLY .
The
.Fn dbm_rdonly
function may be used to determine if a database is opened for read-only
access.
.Pp
Once the database is open,
.Fn dbm_fetch
is used to retrieve the data content associated with the key
.Fa key .
Similarly,
.Fn dbm_store
is used to store the
.Fa content
data with the key
.Fa key .
When storing, the
.Fa store_mode
parameter must be one of:
.Bl -tag -width DBM_REPLACE -offset indent
.It Dv DBM_INSERT
Only insert new keys into the database.
Existing key/content pairs are untouched.
.It Dv DBM_REPLACE
Replace any existing entry with the same key.
Any previously stored records with the same key are lost.
.El
.Pp
The
.Fn dbm_delete
function removes the key
.Fa key
and its associated content from the database.
.Pp
The functions
.Fn dbm_firstkey
and
.Fn dbm_nextkey
are used to iterate over all of the records in the database.
Each record will be reached exactly once, but in no particular order.
The
.Fn dbm_firstkey
function returns the first record of the database, and thereafter
.Fn dbm_nextkey
returns the following records.
The following code traverses the entire database:
.Bd -literal -offset indent
for (key = dbm_firstkey(db); key.dptr != NULL;
    key = dbm_nextkey(db))
.Ed
.Pp
The behaviour of
.Fn dbm_nextkey
is undefined if the database is modified after a call to
.Fn dbm_firstkey .
.Pp
The
.Fn dbm_error
function returns the last error condition of the database,
or 0 if no error had occurred or had been cleared.
The
.Fn dbm_clearerr
function clears the error condition of the database.
.Pp
The
.Fn dbm_dirfno
function is used to find the file descriptor associated with the
directory file of an open database.
Since a directory bitmap file is not used in this implementation,
this function returns the file descriptor of the database file opened with
.Fn dbm_open .
.Pp
The
.Fn dbm_pagfno
function is used to find the file descriptor associated with the
page file of an open database.
Since a page file is not used in this implementation, this function
is implemented as a macro that always returns the (undefined) value
.Dv DBM_PAGFNO_NOT_AVAILABLE .
.Pp
The database is closed with the
.Fn dbm_close
function.
Thereafter, the
.Fa db
handle is invalid.
.Ss Implementation notes
The underlying database is a
.Xr hash 3
database with a
bucket size of 4096,
a filling factor of 40,
default hashing function and cache size,
and uses the host's native byte order.
.Sh RETURN VALUES
Upon successful completion, all functions that return
.Ft int
return a value of 0, otherwise a negative value is returned.
.Pp
Routines that return a
.Ft datum
indicate errors by setting the
.Va dptr
field to
.Dv NULL .
.Pp
The
.Fn dbm_open
function returns
.Dv NULL
on error, and sets
.Va errno
appropriately.
On success, it returns a handle to the database that should be
used as the
.Fa db
argument in the other functions.
.Pp
The
.Fn dbm_store
function returns 1 when it is called with a
.Fa flags
value of
.Dv DBM_INSERT
and a record with the specified key already exists.
.Sh ERRORS
If an error occurs, the error can be retrieved with
.Fn dbm_error
and corresponds to those errors described in
.Xr dbopen 3 .
.Sh SEE ALSO
.Xr open 2 ,
.Xr dbopen 3 ,
.Xr hash 3
@


1.19
log
@change Xrs from now-defunct db(3) to dbopen(3); this wasn;t a
straight replace: thanks both to schwarze and maja for feedback
on how to rewrite parts;

i've snuck in an rcs id->openbsd id change in dev_mkdb too;
@
text
@d2 2
a3 2
.\" $OpenBSD: ndbm.3,v 1.18 2015/11/10 23:48:17 jmc Exp $
.Dd $Mdocdate: November 10 2015 $
a207 1
.Xr dbm 3 ,
@


1.18
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@d2 2
a3 2
.\" $OpenBSD: ndbm.3,v 1.17 2013/06/05 03:39:22 tedu Exp $
.Dd $Mdocdate: June 5 2013 $
d49 1
a49 1
.Xr db 3 .
d205 1
a205 1
.Xr db 3 .
a207 1
.Xr db 3 ,
d209 1
@


1.17
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d2 3
a4 3
.\" $OpenBSD: ndbm.3,v 1.16 2007/05/31 19:19:28 jmc Exp $
.Dd $Mdocdate: May 31 2007 $
.Dt NDBM 3
@


1.16
log
@convert to new .Dd format;
@
text
@d2 2
a3 2
.\" $OpenBSD: ndbm.3,v 1.15 2005/07/17 09:10:36 jaredy Exp $
.Dd $Mdocdate$
d21 1
a21 1
.Fd #include <ndbm.h>
@


1.15
log
@- punctuation, macro, layout, wording improvements
- avoid first person
- document dbm_rdonly
- update some error return values in the mpool(3) routines
- sync header file excerpts

ok jmc
@
text
@d2 2
a3 2
.\" $OpenBSD: ndbm.3,v 1.14 2004/05/03 17:27:50 millert Exp $
.Dd May 13, 1998
@


1.14
log
@Make ndbm match POSIX.  A datum consists of a void *dptr and a size_t dsize.
Also make the open functions take a mode_t, not int.  OK deraadt@@
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.13 2003/10/21 20:30:16 jmc Exp $
d17 1
d43 2
d59 1
a59 1
} datum
d77 4
d122 3
a124 2
.Bd -literal
  for (key = dbm_firstkey(db); key.dptr != NULL; key = dbm_nextkey(db))
@


1.13
log
@datbase -> database; from Jared Yanovich
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.12 2000/10/25 16:44:08 aaron Exp $
d38 1
a38 1
.Fn dbm_open "const char *file" "int flags" "int mode"
d54 2
a55 2
	char *dptr;
	int dsize;
d201 1
@


1.12
log
@DBM_READONLY -> DBM_RDONLY; dugsong@@
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.11 2000/10/18 05:12:07 aaron Exp $
d137 1
a137 1
this function returns the file descriptor of the datbase file opened with
@


1.11
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.10 2000/04/18 02:31:36 aaron Exp $
d73 1
a73 1
.Dv DBM_READONLY .
@


1.10
log
@Repairs.
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.9 1999/07/09 13:35:15 aaron Exp $
d90 2
a91 2
Only insert new keys into the database. Existing key/content pairs
are untouched.
d93 2
a94 2
Replace any existing entry with the same key. Any previously
stored records with the same key are lost.
@


1.9
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.8 1999/07/07 10:50:04 aaron Exp $
d7 11
a17 1
.Nm ndbm
d135 2
a136 2
directory file of an open database. Since a directory bitmap file is
not used in this implementation,
d143 2
a144 3
page file of an open database. Since a page file is not used in
this implementation,
this function
d150 2
a151 1
function. Thereafter, the
@


1.8
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.7 1999/05/23 14:10:58 aaron Exp $
d78 1
a78 1
.Bl -tag -width DBM_REPLACE -offset indent 
@


1.7
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.6 1999/05/16 19:54:47 alex Exp $
d4 1
a5 1
.Dt NDBM 3
@


1.6
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.5 1999/04/18 17:08:10 millert Exp $
d4 1
a4 1
.Os OpenBSD
@


1.5
log
@o Opening a zero-length hash file should not be an error
o Correct odbm support
o Add man links for ndbm and odbm
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.4 1999/02/15 05:11:25 millert Exp $
d189 1
d191 1
a191 2
.Xr hash 3 ,
.Xr open 2
@


1.4
log
@ o Minor changes from db.1.86 (sleepycat).  Does not include the new hash
   routines since they cannot read a hashed .db file from the old code.
   Most of these files just have their RCS/SCCS tags standardized.
   Note that mpool.3 has not been updated to reflect the new mpool interface.
 o Add a real dbm(3) manpage
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.3 1998/05/15 14:30:15 d Exp $
d161 1
a161 1
field set to
@


1.3
log
@bit nicer description, plus add missing return desc
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.2 1998/05/13 17:15:32 deraadt Exp $
d34 1
a34 1
These functions provide a dbm- and ndbm-compatible interface to the
d191 1
a191 1
.Xr open 2 .
@


1.2
log
@use .Ft
@
text
@d2 1
a2 1
.\" $OpenBSD: ndbm.3,v 1.1 1998/05/13 12:41:02 d Exp $
d39 1
a39 1
Both the key and the content are passed about in the following
d159 1
a159 1
indicate errors with the
d171 4
@


1.1
log
@first cut
@
text
@d2 1
a2 1
.\" $OpenBSD$
d11 22
a32 11
.Fn "int dbm_clearerr" "DBM *db"
.Fn "void dbm_close" "DBM *db"
.Fn "int dbm_delete" "DBM *db" "datum key"
.Fn "int dbm_dirfno" "DBM *db"
.Fn "int dbm_error" "DBM *db"
.Fn "datum dbm_fetch" "DBM *db" "datum key"
.Fn "datum dbm_firstkey" "DBM *db"
.Fn "datum dbm_nextkey" "DBM *db"
.Fn "DBM *dbm_open" "const char *file" "int flags" "int mode"
.Fn "int dbm_pagfno" "DBM *db"
.Fn "int dbm_store" "DBM *db" "datum key" "datum content" "int store_mode"
@

