head	1.17;
access;
symbols
	OPENBSD_5_8:1.16.0.12
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.4
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.24
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.22
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.20
	OPENBSD_5_0:1.15.0.18
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.8
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.6
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.4
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.12.0.14
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.12
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.10
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.8
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.6
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.17
date	2015.09.13.08.50.10;	author guenther;	state dead;
branches;
next	1.16;
commitid	zuzq7DJGOI5Suen0;

1.16
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.27;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2005.07.17.09.10.36;	author jaredy;	state Exp;
branches;
next	1.13;

1.13
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.18.02.31.36;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.22.12.00.42;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.07.08.09.41.43;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	99.07.07.14.22.24;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.07.10.50.04;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.05.04.47.41;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.27.16.20.59;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.16.19.54.47;	author alex;	state Exp;
branches;
next	1.4;

1.4
date	99.02.27.21.54.57;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.02.26.06.54.50;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.02.26.01.20.41;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@mpool(3) is no longer installed; delete it.  prodded by jmc@@
@
text
@.\"	$OpenBSD: mpool.3,v 1.16 2013/06/05 03:39:22 tedu Exp $
.\"
.\" Copyright (c) 1990, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)mpool.3	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt MPOOL 3
.Os
.Sh NAME
.Nm mpool_open ,
.Nm mpool_filter ,
.Nm mpool_new ,
.Nm mpool_delete ,
.Nm mpool_get ,
.Nm mpool_put ,
.Nm mpool_sync ,
.Nm mpool_close
.Nd shared memory buffer pool
.Sh SYNOPSIS
.In db.h
.In mpool.h
.Ft MPOOL *
.Fn mpool_open "void *key" "int fd" "pgno_t pagesize" "pgno_t maxcache"
.Ft void
.Fn mpool_filter "MPOOL *mp" "void (*pgin)(void *, pgno_t, void *)" \
    "void (*pgout)(void *, pgno_t, void *)" "void *pgcookie"
.Ft void *
.Fn mpool_new "MPOOL *mp" "pgno_t *pgnoaddr" "unsigned int flags"
.Ft int
.Fn mpool_delete "MPOOL *mp" "void *page"
.Ft void *
.Fn mpool_get "MPOOL *mp" "pgno_t pgno" "unsigned int flags"
.Ft int
.Fn mpool_put "MPOOL *mp" "void *pgaddr" "unsigned int flags"
.Ft int
.Fn mpool_sync "MPOOL *mp"
.Ft int
.Fn mpool_close "MPOOL *mp"
.Sh DESCRIPTION
.Nm mpool
is the library interface intended to provide page-oriented buffer management
of files.
The buffers may be shared between processes.
.Pp
The function
.Fn mpool_open
initializes a memory pool.
The
.Fa key
argument is the byte string used to negotiate between multiple
processes wishing to share buffers.
If the file buffers are mapped in shared memory, all processes using
the same key will share the buffers.
If
.Fa key
is
.Dv NULL ,
the buffers are mapped into private memory.
The
.Fa fd
argument is a file descriptor for the underlying file, which must be seekable.
If
.Fa key
is non-NULL and matches a file already being mapped, the
.Fa fd
argument is ignored.
.Pp
The
.Fa pagesize
argument is the size, in bytes, of the pages into which the file is broken up.
The
.Fa maxcache
argument is the maximum number of pages from the underlying file to cache
at any one time.
This value is not relative to the number of processes which share a file's
buffers, but will be the largest value specified by any of the processes
sharing the file.
.Pp
The
.Fn mpool_filter
function is intended to make transparent input and output processing of the
pages possible.
If the
.Fa pgin
function is specified, it is called each time a buffer is read into the memory
pool from the backing file.
If the
.Fa pgout
function is specified, it is called each time a buffer is written into the
backing file.
Both functions are called with the
.Fa pgcookie
pointer, the page number, and a pointer to the page being read or written.
.Pp
The function
.Fn mpool_new
takes an
.Dv MPOOL
pointer, an address, and a set of flags as arguments.
If a new page can be allocated, a pointer to the page is returned and
the page number is stored into the
.Fa pgnoaddr
address.
Otherwise,
.Dv NULL
is returned and
.Va errno
is set.
The flags value is formed by
.Tn OR Ns 'ing
the following values:
.Bl -tag -width Ds
.It Dv MPOOL_PAGE_REQUEST
Allocate a new page with a specific page number.
.It Dv MPOOL_PAGE_NEXT
Allocate a new page with the next page number.
.El
.Pp
The function
.Fn mpool_delete
deletes the specified page from a pool and frees the page.
It takes an
.Dv MPOOL
pointer and a page as arguments.
The page must have been generated by
.Fn mpool_new .
.Pp
The function
.Fn mpool_get
takes an
.Dv MPOOL
pointer and a page number as arguments.
If the page exists, a pointer to the page is returned.
Otherwise,
.Dv NULL
is returned and
.Va errno
is set.
The flags parameter is not currently used.
.Pp
The function
.Fn mpool_put
unpins the page referenced by
.Fa pgaddr .
.Fa pgaddr
must be an address previously returned by
.Fn mpool_get
or
.Fn mpool_new .
The flags value is formed by
.Tn OR Ns 'ing
the following values:
.Bl -tag -width Ds
.It Dv MPOOL_DIRTY
The page has been modified and needs to be written to the backing file.
.El
.Pp
.Fn mpool_put
returns 0 on success and \-1 if an error occurs.
.Pp
The function
.Fn mpool_sync
writes all modified pages associated with the
.Dv MPOOL
pointer to the backing file.
.Fn mpool_sync
returns 0 on success and \-1 if an error occurs.
.Pp
The
.Fn mpool_close
function frees up any allocated memory associated with the memory pool
cookie.
Modified pages are
.Em not
written to the backing file.
.Fn mpool_close
returns 0 on success and \-1 if an error occurs.
.Sh ERRORS
The
.Fn mpool_open
function may fail and set
.Va errno
for any of the errors specified for the library routines
.Xr fstat 2
and
.Xr malloc 3 ,
or the following:
.Bl -tag -width Er
.It Bq Er ESPIPE
The given file descriptor is a pipe.
.El
.Pp
The
.Fn mpool_get
function may fail and set
.Va errno
for the following:
.Bl -tag -width Er
.It Bq Er EINVAL
The requested record doesn't exist.
.El
.Pp
The
.Fn mpool_new
and
.Fn mpool_get
functions may fail and set
.Va errno
for any of the errors specified for the library routines
.Xr pread 2 ,
.Xr pwrite 2 ,
and
.Xr malloc 3 .
.Pp
The
.Fn mpool_sync
function may fail and set
.Va errno
for any of the errors specified for the library routine
.Xr pwrite 2 .
.Pp
The
.Fn mpool_close
function may fail and set
.Va errno
for any of the errors specified for the library routine
.Xr free 3 .
.Pp
The
.Fn mpool_delete
always acts as if it succeeded.
.Sh SEE ALSO
.Xr btree 3 ,
.Xr dbopen 3 ,
.Xr hash 3 ,
.Xr recno 3
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.15 2007/05/31 19:19:27 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.14 2005/07/17 09:10:36 jaredy Exp $
d32 1
a32 1
.Dd $Mdocdate$
d46 2
a47 2
.Fd #include <db.h>
.Fd #include <mpool.h>
@


1.14
log
@- punctuation, macro, layout, wording improvements
- avoid first person
- document dbm_rdonly
- update some error return values in the mpool(3) routines
- sync header file excerpts

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.13 2003/06/02 20:18:34 millert Exp $
d32 1
a32 1
.Dd February 25, 1999
@


1.13
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.12 2000/04/18 02:31:36 aaron Exp $
d49 1
a49 1
.Fn mpool_open "DBT *key" "int fd" "pgno_t pagesize" "pgno_t maxcache"
d51 2
a52 1
.Fn mpool_filter "MPOOL *mp" "void (*pgin)(void *, pgno_t, void *)" "void (*pgout)(void *, pgno_t, void *)" "void *pgcookie"
d54 1
a54 1
.Fn mpool_new "MPOOL *mp" "pgno_t *pgnoaddr" "u_int flags"
d58 1
a58 1
.Fn mpool_get "MPOOL *mp" "pgno_t pgno" "u_int flags"
d60 1
a60 1
.Fn mpool_put "MPOOL *mp" "void *pgaddr" "u_int flags"
d67 1
a67 1
is the library interface intended to provide page oriented buffer management
d119 1
a119 1
pointer, the page number and a pointer to the page to being read or written.
d197 1
a197 1
function free's up any allocated memory associated with the memory pool
d209 9
a217 2
for any of the errors specified for the library routine
.Xr malloc 3 .
d236 2
a237 2
.Xr read 2 ,
.Xr write 2 ,
d246 1
a246 1
.Xr write 2 .
@


1.12
log
@Repairs.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.11 2000/01/22 12:00:42 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.11
log
@Use .Va macro when referring to the global variable errno.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.10 1999/07/08 09:41:43 hugh Exp $
d40 8
a47 1
.Nm mpool
d69 1
a69 1
.Nm
d126 3
a128 1
takes an MPOOL pointer, an address, and a set of flags as arguments.
d137 2
a138 1
is set.  The flags value is formed by
d142 1
a142 1
.It MPOOL_PAGE_REQUEST
d144 1
a144 1
.It MPOOL_PAGE_NEXT
d150 5
a154 3
deletes the specified page from a pool and frees the page.  It takes
an MPOOL pointer and a page as arguments.  The page must have been
generated by
d159 5
a163 2
takes an MPOOL pointer and a page number as arguments.  If the page
exists, a pointer to the page is returned.  Otherwise,
d167 2
a168 1
is set.  The flags parameter is not currently used.
d183 1
a183 1
.It MPOOL_DIRTY
d192 3
a194 2
writes all modified pages associated with the MPOOL pointer to the
backing file.
@


1.10
log
@spurious words and misc fixes
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.9 1999/07/07 14:22:24 aaron Exp $
d126 3
a128 1
is returned and errno is set.  The flags value is formed by
d150 3
a152 1
is returned and errno is set.  The flags parameter is not currently used.
d194 1
a194 1
.Li errno
d201 1
a201 1
.Li errno
d213 1
a213 1
.Li errno
d223 1
a223 1
.Li errno
d230 1
a230 1
.Li errno
@


1.9
log
@when using `-' as a negative sign, escape it with a backslash so troff knows
it's not supposed to be a hyphen/dash
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.8 1999/07/07 10:50:04 aaron Exp $
d113 1
a113 1
Both functions are are called with the
@


1.8
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.7 1999/06/05 04:47:41 aaron Exp $
d168 1
a168 1
returns 0 on success and -1 if an error occurs.
d175 1
a175 1
returns 0 on success and -1 if an error occurs.
d185 1
a185 1
returns 0 on success and -1 if an error occurs.
@


1.7
log
@use .Tn instead of .Em for logical/bitwise OR + AND
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.6 1999/05/27 16:20:59 aaron Exp $
d37 1
a38 1
.Dt MPOOL 3
@


1.6
log
@or'ing -> OR'ing
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.5 1999/05/16 19:54:47 alex Exp $
d127 1
a127 1
.Em OR Ns 'ing
d160 1
a160 1
.Em OR Ns 'ing
@


1.5
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.4 1999/02/27 21:54:57 deraadt Exp $
d127 1
a127 1
.Em or Ns 'ing
d160 1
a160 1
.Em or Ns 'ing
@


1.4
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.3 1999/02/26 06:54:50 millert Exp $
d234 1
a235 1
.Xr btree 3 ,
@


1.3
log
@.Ar -> .Fa and NULL is Dv
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.2 1999/02/26 01:20:41 millert Exp $
d154 1
a154 1
.Fa Pgaddr
d167 1
a167 1
.Fn Mpool_put
d174 1
a174 1
.Fn Mpool_sync
d184 1
a184 1
.Fn Mpool_close
@


1.2
log
@convert to mdoc, document changes from db 1.8.6
@
text
@d1 1
a1 1
.\"	$OpenBSD: mpool.3,v 1.4 1995/02/27 13:23:35 cgd Exp $
d71 1
a71 1
.Ar key
d77 4
a80 2
.Ar key
is NULL, the buffers are mapped into private memory.
d82 1
a82 1
.Ar fd
d85 1
a85 1
.Ar key
d87 1
a87 1
.Ar fd
d91 1
a91 1
.Ar pagesize
d94 1
a94 1
.Ar maxcache
d106 1
a106 1
.Ar pgin
d110 1
a110 1
.Ar pgout
d114 1
a114 1
.Ar pgcookie
d122 1
a122 1
.Ar pgnoaddr
d124 3
a126 2
Otherwise, NULL is returned and errno is set.
The flags value is formed by
d145 4
a148 4
takes an MPOOL pointer and a page number as arguments.
If the page exists, a pointer to the page is returned.
Otherwise, NULL is returned and errno is set.
The flags parameter is not currently used.
d153 2
a154 2
.Ar pgaddr .
.Ar Pgaddr
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: mpool.3,v 1.4 1995/02/27 13:23:35 cgd Exp $
d36 27
a62 36
.TH MPOOL 3 "June 4, 1993"
.UC 7
.SH NAME
mpool \- shared memory buffer pool
.SH SYNOPSIS
.nf
.ft B
#include <db.h>
#include <mpool.h>

MPOOL *
mpool_open (DBT *key, int fd, pgno_t pagesize, pgno_t maxcache);

void
mpool_filter (MPOOL *mp, void (*pgin)(void *, pgno_t, void *),
.ti +5
void (*pgout)(void *, pgno_t, void *), void *pgcookie);

void *
mpool_new (MPOOL *mp, pgno_t *pgnoaddr);

void *
mpool_get (MPOOL *mp, pgno_t pgno, u_int flags);

int
mpool_put (MPOOL *mp, void *pgaddr, u_int flags);

int
mpool_sync (MPOOL *mp);

int
mpool_close (MPOOL *mp);
.ft R
.fi
.SH DESCRIPTION
.IR Mpool
d66 1
a66 1
.PP
d68 1
a68 1
.I mpool_open
d71 1
a71 1
.I key
d77 1
a77 1
.I key
d80 1
a80 1
.I fd
d83 1
a83 1
.I key
d85 1
a85 1
.I fd
d87 1
a87 1
.PP
d89 1
a89 1
.I pagesize
d92 1
a92 1
.I maxcache
d98 1
a98 1
.PP
d100 1
a100 1
.I mpool_filter
d104 1
a104 1
.I pgin
d108 1
a108 1
.I pgout
d112 1
a112 1
.I pgcookie
d114 1
a114 1
.PP
d116 2
a117 2
.I mpool_new
takes an MPOOL pointer and an address as arguments.
d120 1
a120 1
.I pgnoaddr
d123 10
a132 1
.PP
d134 9
a142 2
.I mpool_get
takes a MPOOL pointer and a page number as arguments.
d146 1
a146 1
.PP
d148 1
a148 1
.I mpool_put
d150 2
a151 2
.IR pgaddr .
.I Pgaddr
d153 1
a153 1
.I mpool_get
d155 6
a160 6
.IR mpool_new .
The flag value is specified by
.IR or 'ing
any of the following values:
.TP
MPOOL_DIRTY
d162 3
a164 2
.PP
.I Mpool_put
d166 1
a166 1
.PP
d168 1
a168 1
.I mpool_sync
d171 1
a171 1
.I Mpool_sync
d173 1
a173 1
.PP
d175 1
a175 1
.I mpool_close
d179 1
a179 1
.B not
d181 1
a181 1
.I Mpool_close
d183 1
a183 1
.SH ERRORS
d185 1
a185 1
.I mpool_open
d187 1
a187 1
.I errno
d189 2
a190 2
.IR malloc (3).
.PP
d192 1
a192 1
.I mpool_get
d194 1
a194 1
.I errno
d196 2
a197 2
.TP 15
[EINVAL]
d199 2
a200 1
.PP
d202 1
a202 1
.I mpool_new
d204 1
a204 1
.I mpool_get
d206 1
a206 1
.I errno
d208 2
a209 2
.IR read (2) ,
.IR write (2) ,
d211 2
a212 2
.IR malloc (3).
.PP
d214 1
a214 1
.I mpool_sync
d216 1
a216 1
.I errno
d218 2
a219 2
.IR write (2).
.PP
d221 1
a221 1
.I mpool_close
d223 1
a223 1
.I errno
d225 10
a234 6
.IR free (3).
.SH "SEE ALSO"
.IR dbopen (3),
.IR btree (3),
.IR hash (3),
.IR recno (3)
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
