head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.50
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.46
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.42
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.44
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.36
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.40
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.38
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.34
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.32
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.30
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.28
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.18
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.16
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.14
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.12
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.10
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.8
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.6
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.4
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2005.08.05.13.03.00;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.23.19.34.59;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.01.20.23.40;	author avsm;	state Exp;
branches;
next	1.4;

1.4
date	99.02.15.05.11.25;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.21.10;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.09.02.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@zap rcsid
@
text
@/*	$OpenBSD: rec_seq.c,v 1.7 2005/03/23 19:34:59 otto Exp $	*/

/*-
 * Copyright (c) 1991, 1993, 1994
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <errno.h>
#include <limits.h>
#include <stdio.h>
#include <string.h>

#include <db.h>
#include "recno.h"

/*
 * __REC_SEQ -- Recno sequential scan interface.
 *
 * Parameters:
 *	dbp:	pointer to access method
 *	key:	key for positioning and return value
 *	data:	data return value
 *	flags:	R_CURSOR, R_FIRST, R_LAST, R_NEXT, R_PREV.
 *
 * Returns:
 *	RET_ERROR, RET_SUCCESS or RET_SPECIAL if there's no next key.
 */
int
__rec_seq(const DB *dbp, DBT *key, DBT *data, u_int flags)
{
	BTREE *t;
	EPG *e;
	recno_t nrec;
	int status;

	t = dbp->internal;

	/* Toss any page pinned across calls. */
	if (t->bt_pinned != NULL) {
		mpool_put(t->bt_mp, t->bt_pinned, 0);
		t->bt_pinned = NULL;
	}

	switch(flags) {
	case R_CURSOR:
		if ((nrec = *(recno_t *)key->data) == 0)
			goto einval;
		break;
	case R_NEXT:
		if (F_ISSET(&t->bt_cursor, CURS_INIT)) {
			nrec = t->bt_cursor.rcursor + 1;
			break;
		}
		/* FALLTHROUGH */
	case R_FIRST:
		nrec = 1;
		break;
	case R_PREV:
		if (F_ISSET(&t->bt_cursor, CURS_INIT)) {
			if ((nrec = t->bt_cursor.rcursor - 1) == 0)
				return (RET_SPECIAL);
			break;
		}
		/* FALLTHROUGH */
	case R_LAST:
		if (!F_ISSET(t, R_EOF | R_INMEM) &&
		    t->bt_irec(t, MAX_REC_NUMBER) == RET_ERROR)
			return (RET_ERROR);
		nrec = t->bt_nrecs;
		break;
	default:
einval:		errno = EINVAL;
		return (RET_ERROR);
	}
	
	if (t->bt_nrecs == 0 || nrec > t->bt_nrecs) {
		if (!F_ISSET(t, R_EOF | R_INMEM) &&
		    (status = t->bt_irec(t, nrec)) != RET_SUCCESS)
			return (status);
		if (t->bt_nrecs == 0 || nrec > t->bt_nrecs)
			return (RET_SPECIAL);
	}

	if ((e = __rec_search(t, nrec - 1, SEARCH)) == NULL)
		return (RET_ERROR);

	F_SET(&t->bt_cursor, CURS_INIT);
	t->bt_cursor.rcursor = nrec;

	status = __rec_ret(t, e, nrec, key, data);
	if (F_ISSET(t, B_DB_LOCK))
		mpool_put(t->bt_mp, e->page, 0);
	else
		t->bt_pinned = e->page;
	return (status);
}
@


1.7
log
@ansify. ok deraadt@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_seq.c,v 1.6 2003/06/02 20:18:34 millert Exp $	*/
a30 8

#ifndef lint
#if 0
static char sccsid[] = "@@(#)rec_utils.c	8.6 (Berkeley) 7/16/94";
#else
static const char rcsid[] = "$OpenBSD: rec_seq.c,v 1.6 2003/06/02 20:18:34 millert Exp $";
#endif
#endif /* not lint */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_seq.c,v 1.5 2003/05/01 20:23:40 avsm Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_seq.c,v 1.5 2003/05/01 20:23:40 avsm Exp $";
d63 1
a63 4
__rec_seq(dbp, key, data, flags)
	const DB *dbp;
	DBT *key, *data;
	u_int flags;
@


1.5
log
@-Wall cleanup, make rcsid variables const
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_seq.c,v 1.4 1999/02/15 05:11:25 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_seq.c,v 1.4 1999/02/15 05:11:25 millert Exp $";
@


1.4
log
@ o Minor changes from db.1.86 (sleepycat).  Does not include the new hash
   routines since they cannot read a hashed .db file from the old code.
   Most of these files just have their RCS/SCCS tags standardized.
   Note that mpool.3 has not been updated to reflect the new mpool interface.
 o Add a real dbm(3) manpage
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: rec_seq.c,v 1.3 1996/08/19 08:21:10 tholo Exp $";
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 2
d37 5
a41 1
static char rcsid[] = "$OpenBSD: rec_seq.c,v 1.7 1996/05/03 21:38:53 cgd Exp $";
@


1.2
log
@db release 1.85
@
text
@a0 2
/*	$NetBSD: rec_seq.c,v 1.7 1996/05/03 21:38:53 cgd Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)rec_seq.c	8.3 (Berkeley) 7/14/94";
#else
static char rcsid[] = "$NetBSD: rec_seq.c,v 1.7 1996/05/03 21:38:53 cgd Exp $";
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: rec_seq.c,v 1.6 1995/02/27 13:25:24 cgd Exp $	*/
d4 1
a4 1
 * Copyright (c) 1991, 1993
d38 1
a38 1
static char sccsid[] = "@@(#)rec_seq.c	8.2 (Berkeley) 9/7/93";
d40 1
a40 1
static char rcsid[] = "$NetBSD: rec_seq.c,v 1.6 1995/02/27 13:25:24 cgd Exp $";
d91 2
a92 2
		if (ISSET(t, B_SEQINIT)) {
			nrec = t->bt_rcursor + 1;
d100 2
a101 2
		if (ISSET(t, B_SEQINIT)) {
			if ((nrec = t->bt_rcursor - 1) == 0)
d107 1
a107 1
		if (!ISSET(t, R_EOF | R_INMEM) &&
d118 1
a118 1
		if (!ISSET(t, R_EOF | R_INMEM) &&
d128 2
a129 2
	SET(t, B_SEQINIT);
	t->bt_rcursor = nrec;
d132 1
a132 1
	if (ISSET(t, B_DB_LOCK))
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
