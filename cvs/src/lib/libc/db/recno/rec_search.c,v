head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.46
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.42
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.44
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.36
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.40
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.38
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.34
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.32
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.30
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.28
	OPENBSD_5_0:1.11.0.26
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.24
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.22
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.18
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.20
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.16
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.14
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.12
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.10
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.8
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.18
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.16
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.14
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.12
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.10
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.8
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.6
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.4
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.4.0.6
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2005.08.05.13.03.00;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.23.19.34.59;	author otto;	state Exp;
branches;
next	1.9;

1.9
date	2005.01.03.22.46.43;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2005.01.03.22.30.29;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.20.18.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.01.20.23.40;	author avsm;	state Exp;
branches;
next	1.5;

1.5
date	99.02.15.05.11.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.07.23.21.00.30;	author kstailey;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.21.08;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.07.09.02.10;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@zap rcsid
@
text
@/*	$OpenBSD: rec_search.c,v 1.10 2005/03/23 19:34:59 otto Exp $	*/

/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <errno.h>
#include <stdio.h>

#include <db.h>
#include "recno.h"

/*
 * __REC_SEARCH -- Search a btree for a key.
 *
 * Parameters:
 *	t:	tree to search
 *	recno:	key to find
 *	op: 	search operation
 *
 * Returns:
 *	EPG for matching record, if any, or the EPG for the location of the
 *	key, if it were inserted into the tree.
 *
 * Returns:
 *	The EPG for matching record, if any, or the EPG for the location
 *	of the key, if it were inserted into the tree, is entered into
 *	the bt_cur field of the tree.  A pointer to the field is returned.
 */
EPG *
__rec_search(BTREE *t, recno_t recno, enum SRCHOP op)
{
	indx_t idx;
	PAGE *h;
	EPGNO *parent;
	RINTERNAL *r;
	pgno_t pg;
	indx_t top;
	recno_t total;
	int sverrno;

	BT_CLR(t);
	for (pg = P_ROOT, total = 0;;) {
		if ((h = mpool_get(t->bt_mp, pg, 0)) == NULL)
			goto err;
		if (h->flags & P_RLEAF) {
			t->bt_cur.page = h;
			t->bt_cur.index = recno - total;
			return (&t->bt_cur);
		}
		for (idx = 0, top = NEXTINDEX(h);;) {
			r = GETRINTERNAL(h, idx);
			if (++idx == top || total + r->nrecs > recno)
				break;
			total += r->nrecs;
		}

		BT_PUSH(t, pg, idx - 1);
		
		pg = r->pgno;
		switch (op) {
		case SDELETE:
			--GETRINTERNAL(h, (idx - 1))->nrecs;
			mpool_put(t->bt_mp, h, MPOOL_DIRTY);
			break;
		case SINSERT:
			++GETRINTERNAL(h, (idx - 1))->nrecs;
			mpool_put(t->bt_mp, h, MPOOL_DIRTY);
			break;
		case SEARCH:
			mpool_put(t->bt_mp, h, 0);
			break;
		}

	}
	/* Try and recover the tree. */
err:	sverrno = errno;
	if (op != SEARCH)
		while  ((parent = BT_POP(t)) != NULL) {
			if ((h = mpool_get(t->bt_mp, parent->pgno, 0)) == NULL)
				break;
			if (op == SINSERT)
				--GETRINTERNAL(h, parent->index)->nrecs;
			else
				++GETRINTERNAL(h, parent->index)->nrecs;
			mpool_put(t->bt_mp, h, MPOOL_DIRTY);
		}
	errno = sverrno;
	return (NULL);
}
@


1.10
log
@ansify. ok deraadt@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_search.c,v 1.9 2005/01/03 22:46:43 millert Exp $	*/
a30 8

#if defined(LIBC_SCCS) && !defined(lint)
#if 0
static char sccsid[] = "@@(#)rec_search.c	8.4 (Berkeley) 7/14/94";
#else
static const char rcsid[] = "$OpenBSD: rec_search.c,v 1.9 2005/01/03 22:46:43 millert Exp $";
#endif
#endif /* LIBC_SCCS and not lint */
@


1.9
log
@deregister
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_search.c,v 1.8 2005/01/03 22:30:29 millert Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_search.c,v 1.8 2005/01/03 22:30:29 millert Exp $";
d66 1
a66 4
__rec_search(t, recno, op)
	BTREE *t;
	recno_t recno;
	enum SRCHOP op;
@


1.8
log
@Avoid namespace pollution by renaming index variables -> idx.
Idea from NetBSD; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_search.c,v 1.7 2003/06/02 20:18:34 millert Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_search.c,v 1.7 2003/06/02 20:18:34 millert Exp $";
d71 2
a72 2
	register indx_t idx;
	register PAGE *h;
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_search.c,v 1.6 2003/05/01 20:23:40 avsm Exp $	*/
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_search.c,v 1.6 2003/05/01 20:23:40 avsm Exp $";
d71 1
a71 1
	register indx_t index;
d89 3
a91 3
		for (index = 0, top = NEXTINDEX(h);;) {
			r = GETRINTERNAL(h, index);
			if (++index == top || total + r->nrecs > recno)
d96 1
a96 1
		BT_PUSH(t, pg, index - 1);
d101 1
a101 1
			--GETRINTERNAL(h, (index - 1))->nrecs;
d105 1
a105 1
			++GETRINTERNAL(h, (index - 1))->nrecs;
@


1.6
log
@-Wall cleanup, make rcsid variables const
millert@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: rec_search.c,v 1.5 1999/02/15 05:11:25 millert Exp $	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
static const char rcsid[] = "$OpenBSD: rec_search.c,v 1.5 1999/02/15 05:11:25 millert Exp $";
@


1.5
log
@ o Minor changes from db.1.86 (sleepycat).  Does not include the new hash
   routines since they cannot read a hashed .db file from the old code.
   Most of these files just have their RCS/SCCS tags standardized.
   Note that mpool.3 has not been updated to reflect the new mpool interface.
 o Add a real dbm(3) manpage
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 1
static char rcsid[] = "$OpenBSD: rec_search.c,v 1.4 1997/07/23 21:00:30 kstailey Exp $";
@


1.4
log
@tabify
@
text
@d1 2
d37 5
a41 1
static char rcsid[] = "$OpenBSD: rec_search.c,v 1.3 1996/08/19 08:21:08 tholo Exp $";
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: rec_search.c,v 1.7 1996/05/03 21:38:52 cgd Exp $";
d122 2
a123 2
                        mpool_put(t->bt_mp, h, MPOOL_DIRTY);
                }
@


1.2
log
@db release 1.85
@
text
@a0 2
/*	$NetBSD: rec_search.c,v 1.7 1996/05/03 21:38:52 cgd Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)rec_search.c	8.4 (Berkeley) 7/14/94";
#else
static char rcsid[] = "$NetBSD: rec_search.c,v 1.7 1996/05/03 21:38:52 cgd Exp $";
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: rec_search.c,v 1.6 1995/02/27 13:25:17 cgd Exp $	*/
d38 1
a38 1
static char sccsid[] = "@@(#)rec_search.c	8.3 (Berkeley) 2/21/94";
d40 1
a40 1
static char rcsid[] = "$NetBSD: rec_search.c,v 1.6 1995/02/27 13:25:17 cgd Exp $";
d100 1
a100 2
		if (__bt_push(t, pg, index - 1) == RET_ERROR)
			return (NULL);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
