head	1.3;
access;
symbols
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.24
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.22
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.3
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: mblen.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
.\" $NetBSD: mblen.3,v 1.4 2003/04/16 13:34:40 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt MBLEN 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm mblen
.Nd get number of bytes in a multibyte character
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.In stdlib.h
.Ft int
.Fn mblen "const char *s" "size_t n"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
The
.Fn mblen
function usually determines the number of bytes in
a multibyte character pointed to by
.Fa s
and returns it.
This function shall only examine max n bytes of the array beginning from
.Fa s .
.Pp
In state-dependent encodings,
.Fa s
may point the special sequence bytes to change the shift-state.
Although such sequence bytes corresponds to no individual
wide-character code,
the
.Fn mblen
changes the own state by them and treats them
as if they are a part of the subsequent multibyte character.
.Pp
Unlike
.Xr mbrlen 3 ,
the first
.Fa n
bytes pointed to by
.Fa s
need to form an entire multibyte character.
Otherwise, this function causes an error.
.Pp
.Fn mblen
is equivalent to the following call, except the internal state of the
.Xr mbtowc 3
function is not affected:
.Bd -literal -offset indent
mbtowc(NULL, s, n);
.Ed
.Pp
Calling any other functions in
.Em libc
never change the internal
state of the
.Fn mblen ,
except for calling
.Xr setlocale 3
with the
.Dv LC_CTYPE
category changed to that of the current locale.
Such
.Xr setlocale 3
calls cause the internal state of this function to be indeterminate.
.Pp
The behaviour of
.Fn mblen
is affected by the
.Dv LC_CTYPE
category of the current locale.
.Pp
There are special cases:
.Bl -tag -width 0123456789
.It "s == NULL"
.Fn mblen
initializes its own internal state to an initial state, and
determines whether the current encoding is state-dependent.
This function returns 0 if the encoding is state-independent,
otherwise non-zero.
.It "n == 0"
In this case,
the first
.Fa n
bytes of the array pointed to by
.Fa s
never form a complete character.
Thus,
.Fn mblen
always fails.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
Normally,
.Fn mblen
returns:
.Bl -tag -width 0123456789
.It "0"
.Fa s
points to a null byte
.Pq Sq \e0 .
.It "positive"
The value returned is
a number of bytes for the valid multibyte character pointed to by
.Fa s .
There are no cases when this value is greater than
.Fa n
or the value of the
.Dv MB_CUR_MAX
macro.
.It "-1"
.Fa s
points an invalid or incomplete multibyte character.
The
.Fn mblen
also sets
.Va errno
to indicate the error.
.El
.Pp
When
.Fa s
is equal to
.Dv NULL ,
.Fn mblen
returns:
.Bl -tag -width 0123456789
.It "0"
The current encoding is state-independent.
.It "non-zero"
The current encoding is state-dependent.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
The
.Fn mblen
may causes an error in the following case:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa s
points to an invalid or incomplete multibyte character.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr mbrlen 3 ,
.Xr mbtowc 3 ,
.Xr setlocale 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn mblen
function conforms to
.St -ansiC .
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: mblen.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd $Mdocdate$
d37 1
a37 1
.Fd #include <stdlib.h>
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d28 1
a28 1
.Dd February 3, 2002
@

