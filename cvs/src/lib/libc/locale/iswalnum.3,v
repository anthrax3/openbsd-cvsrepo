head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.2
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.18
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.6
date	2017.09.05.03.16.13;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	ngpX0SPDX30tzjDf;

1.5
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.29.11.24.24;	author stsp;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.10.18.38.19;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.30.09.14.23;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@New POSIX xlocale implementation written from scratch.
Complete in the sense that all POSIX *locale(3) and *_l(3) functions
are included, but in OpenBSD, we of course only really care about
LC_CTYPE and we only support ASCII and UTF-8.

With important help from kettenis@@, guenther@@, and jca@@.
Repeated testing in ports bulk builds by naddy@@.
Additional testing by jca@@, sebastia@@, dcoppa@@, and others.
OK kettenis@@ dcoppa@@, and guenther@@ on an earlier version.
Riding guenther@@'s libc/librthread major bump.
@
text
@.\"	$OpenBSD: iswalnum.3,v 1.5 2013/06/05 03:39:22 tedu Exp $
.\"	$NetBSD: iswalnum.3,v 1.8 2003/09/08 17:54:31 wiz Exp $
.\"
.\" Copyright (c) 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)isalnum.3	5.2 (Berkeley) 6/29/91
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt ISWALNUM 3
.Os
.Sh NAME
.Nm iswalnum ,
.Nm iswalnum_l ,
.Nm iswalpha ,
.Nm iswalpha_l ,
.Nm iswblank ,
.Nm iswblank_l ,
.Nm iswcntrl ,
.Nm iswcntrl_l ,
.Nm iswdigit ,
.Nm iswdigit_l ,
.Nm iswgraph ,
.Nm iswgraph_l ,
.Nm iswlower ,
.Nm iswlower_l ,
.Nm iswprint ,
.Nm iswprint_l ,
.Nm iswpunct ,
.Nm iswpunct_l ,
.Nm iswspace ,
.Nm iswspace_l ,
.Nm iswupper ,
.Nm iswupper_l ,
.Nm iswxdigit ,
.Nm iswxdigit_l
.Nd wide-character classification utilities
.Sh SYNOPSIS
.In wctype.h
.Ft int
.Fn iswalnum "wint_t wc"
.Ft int
.Fn iswalnum_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswalpha "wint_t wc"
.Ft int
.Fn iswalpha_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswblank "wint_t wc"
.Ft int
.Fn iswblank_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswcntrl "wint_t wc"
.Ft int
.Fn iswcntrl_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswdigit "wint_t wc"
.Ft int
.Fn iswdigit_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswgraph "wint_t wc"
.Ft int
.Fn iswgraph_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswlower "wint_t wc"
.Ft int
.Fn iswlower_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswprint "wint_t wc"
.Ft int
.Fn iswprint_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswpunct "wint_t wc"
.Ft int
.Fn iswpunct_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswspace "wint_t wc"
.Ft int
.Fn iswspace_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswupper "wint_t wc"
.Ft int
.Fn iswupper_l "wint_t wc" "locale_t locale"
.Ft int
.Fn iswxdigit "wint_t wc"
.Ft int
.Fn iswxdigit_l "wint_t wc" "locale_t locale"
.Sh DESCRIPTION
The functions are character classification utility functions,
for use with wide characters
.Po
.Fa wchar_t
or
.Fa wint_t
.Pc .
See the description of singlebyte classification functions, like
.Xr isalnum 3 ,
for details.
.Pp
The two-argument variants use the specified
.Fa locale ,
while the others use the thread-specific locale set with
.Xr uselocale 3 ,
falling back to the global locale set with
.Xr setlocale 3 .
.Sh RETURN VALUES
The functions return zero if the character tests false and
return non-zero if the character tests true.
.Sh SEE ALSO
.Xr isalnum 3 ,
.Xr isalpha 3 ,
.Xr isblank 3 ,
.Xr iscntrl 3 ,
.Xr isdigit 3 ,
.Xr isgraph 3 ,
.Xr islower 3 ,
.Xr isprint 3 ,
.Xr ispunct 3 ,
.Xr isspace 3 ,
.Xr isupper 3 ,
.Xr iswctype 3 ,
.Xr isxdigit 3 ,
.Xr newlocale 3 ,
.Xr setlocale 3 ,
.Xr towlower 3
.Sh STANDARDS
The one-argument functions conform to
.St -isoC-99 ,
the two-argument functions to
.St -p1003.1-2008 .
.Sh CAVEATS
The argument
.Fa wc
must be
.Dv WEOF
or a valid
.Fa wchar_t
value with the current locale; otherwise, the result is undefined.
@


1.5
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: iswalnum.3,v 1.4 2011/04/29 11:24:24 stsp Exp $
d37 1
a37 1
.Dd $Mdocdate: April 29 2011 $
d42 1
d44 1
d46 1
d48 1
d50 1
d52 1
d54 1
d56 1
d58 1
d60 1
d62 3
a64 1
.Nm iswxdigit
d71 2
d75 2
d79 2
d83 2
d87 2
d91 2
d95 2
d99 2
d103 2
d107 2
d111 2
d114 2
d127 7
d149 5
a153 1
.Xr isxdigit 3
d155 4
a158 4
The functions conform to
.\" .St -isoC99 .
ISO/IEC 9899:1999
.Pq Dq ISO C99 .
d160 3
a162 1
The argument to these functions must be
a166 3
.Sh BUGS
In a UTF-8 locale these functions return wrong answers for some characters
because they do not cover the entire Unicode character set.
@


1.4
log
@Add BUGS section explaining that these functions do not cover the entire
Unicode character set in a UTF-8 locale and can therefore return wrong answers.
@
text
@d1 1
a1 1
.\"	$OpenBSD: iswalnum.3,v 1.3 2010/09/10 18:38:19 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: September 10 2010 $
d55 1
a55 1
.Fd #include <wctype.h>
@


1.3
log
@observe the following spelling:
- wide character (noun)
- wide-character (adjective)

this is the "fix of least resistance", and appears to be in line with
posix style; a tiny fix still needed for curses, but i'll mail that
upstream;
@
text
@d1 1
a1 1
.\"	$OpenBSD: iswalnum.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: May 31 2007 $
d118 3
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: iswalnum.3,v 1.1 2005/04/30 09:14:23 espie Exp $
d37 1
a37 1
.Dd $Mdocdate$
d53 1
a53 1
.Nd wide character classification utilities
@


1.1
log
@isw* classification functions from citrus, with a `stub' implementation
for the default locale.

comments, tests, okay: kettenis@@, otto@@, jmc@@

functions addition -> Minor bump.

There's a large bump coming in a separate commit.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d37 1
a37 1
.Dd December 22, 2000
@

