head	1.8;
access;
symbols
	OPENBSD_6_2_BASE:1.8
	OPENBSD_6_1:1.8.0.8
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.8
date	2015.10.24.23.07.41;	author mmcc;	state Exp;
branches;
next	1.7;
commitid	tBdBtf7uqCWNJ4NR;

1.7
date	2015.03.22.17.52.31;	author stsp;	state Exp;
branches;
next	1.6;
commitid	sN9lbe0aGZx9Pww8;

1.6
date	2015.03.19.12.41.51;	author jmc;	state Exp;
branches;
next	1.5;
commitid	B2v6OfVb4D2jgnHJ;

1.5
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2011.11.16.13.06.21;	author stsp;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.10.18.38.19;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.8
log
@typo
@
text
@.\" $OpenBSD: mbstowcs.3,v 1.7 2015/03/22 17:52:31 stsp Exp $
.\" $NetBSD: mbstowcs.3,v 1.6 2003/09/08 17:54:31 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 22 2015 $
.Dt MBSTOWCS 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm mbstowcs
.Nd converts a multibyte character string to a wide-character string
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.In stdlib.h
.Ft size_t
.Fn mbstowcs "wchar_t * restrict pwcs" "const char * restrict s" "size_t n"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
.Fn mbstowcs
converts a null-terminated multibyte character string pointed to by
.Fa s
to the corresponding wide-character string and stores up to
.Fa n
wide characters in the array pointed to by
.Fa pwcs .
Each character will be converted as if
.Xr mbtowc 3
is continuously called, except the internal state of
.Xr mbtowc 3
will not be affected.
.Pp
For state-dependent encoding,
.Fn mbstowcs
implies the multibyte character string pointed to by
.Fa s
always begin with an initial state.
.Pp
These are the special cases:
.Bl -tag -width 012345678901
.It pwcs == NULL
.Fn mbstowcs
returns the number of elements to store the whole wide-character string
corresponding to the multibyte character string pointed to by
.Fa s .
In this case,
.Fa n
is ignored.
.It s == NULL
Undefined (may cause the program to crash).
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
.Fn mbstowcs
returns:
.Bl -tag -width 012345678901
.It 0 or positive
The value returned is the number of elements stored in the array pointed to by
.Fa pwcs ,
except for a terminating null wide character (if any).
If
.Fa pwcs
is not null and the value returned is equal to
.Fa n ,
the wide-character string pointed to by
.Fa pwcs
is not null terminated.
If
.Fa pwcs
is a null pointer, the value returned is the number of elements to contain
the whole string converted, except for a terminating null wide character.
.It (size_t)-1
The array indirectly pointed to by
.Fa s
contains a byte sequence forming invalid character.
In this case,
.Fn mbstowcs
sets
.Va errno
to indicate the error.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
.Fn mbstowcs
may cause an error in the following cases:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa s
points to the string containing invalid or incomplete multibyte character.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr mbtowc 3 ,
.Xr setlocale 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn mbstowcs
function conforms to
.St -ansiC .
The restrict qualifier is added at
.\" .St -isoC99 .
ISO/IEC 9899/199
.Pq Dq ISO C99 .
@


1.7
log
@More wide character string function man page improvements based on feedback
by Kaspars Bankovskis. ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.6 2015/03/19 12:41:51 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: March 19 2015 $
d72 1
a72 1
Undefined (may causes the program to crash).
@


1.6
log
@better wording, from andre smagin; ok stsp
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.5 2013/06/05 03:39:22 tedu Exp $
d28 1
a28 1
.Dd $Mdocdate: June 5 2013 $
a41 1
The
d45 1
a45 4
to the corresponding wide-character string and stores it in the array
pointed to by
.Fa pwcs .
Up to
d47 1
a47 1
elements are stored in
@


1.5
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.4 2011/11/16 13:06:21 stsp Exp $
d28 1
a28 1
.Dd $Mdocdate: November 16 2011 $
d49 1
a49 1
This function may modify the first at most
d51 1
a51 1
elements of the array pointed to by
@


1.4
log
@Fix mbstowcs return value documentation. New text based on mbsrtowcs page.
ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.3 2010/09/10 18:38:19 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: September 10 2010 $
d37 1
a37 1
.Fd #include <stdlib.h>
@


1.3
log
@observe the following spelling:
- wide character (noun)
- wide-character (adjective)

this is the "fix of least resistance", and appears to be in line with
posix style; a tiny fix still needed for curses, but i'll mail that
upstream;
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d84 4
a87 5
Number of elements stored in the array pointed to by
.Fa pwcs .
There are no cases where the value returned is greater than
.Fa n
(unless
d89 1
a89 4
is a null pointer) or the value of the
.Dv MB_CUR_MAX
macro.
If the return value is equal to
d91 4
a94 1
the string pointed to by
d96 2
a97 1
will not be null-terminated.
d99 1
d101 2
a102 2
points to the string containing invalid or incomplete multibyte character.
The
d104 3
a106 1
also sets errno to indicate the error.
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: mbstowcs.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd $Mdocdate$
d34 1
a34 1
.Nd converts a multibyte character string to a wide character string
d46 1
a46 1
to the corresponding wide character string and stores it in the array
d69 1
a69 1
returns the number of elements to store the whole wide character string
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d28 1
a28 1
.Dd February 3, 2002
@

