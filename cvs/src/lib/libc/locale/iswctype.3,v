head	1.5;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.8
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.4
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.24
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.22
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.20
	OPENBSD_5_0:1.2.0.18
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.16
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.5
date	2017.09.05.03.16.13;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	ngpX0SPDX30tzjDf;

1.4
date	2014.11.30.15.54.18;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	nZxMuJzTkYXZD3To;

1.3
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@New POSIX xlocale implementation written from scratch.
Complete in the sense that all POSIX *locale(3) and *_l(3) functions
are included, but in OpenBSD, we of course only really care about
LC_CTYPE and we only support ASCII and UTF-8.

With important help from kettenis@@, guenther@@, and jca@@.
Repeated testing in ports bulk builds by naddy@@.
Additional testing by jca@@, sebastia@@, dcoppa@@, and others.
OK kettenis@@ dcoppa@@, and guenther@@ on an earlier version.
Riding guenther@@'s libc/librthread major bump.
@
text
@.\" $OpenBSD: iswctype.3,v 1.4 2014/11/30 15:54:18 schwarze Exp $
.\" $NetBSD: iswctype.3,v 1.5 2003/04/16 13:34:40 wiz Exp $
.\"
.\" Copyright (c) 2017 Ingo Schwarze <schwarze@@openbsd.org>
.\" Copyright (c) 2003 Citrus Project
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 30 2014 $
.Dt ISWCTYPE 3
.Os
.Sh NAME
.Nm iswctype ,
.Nm iswctype_l
.Nd test whether a wide character belongs to a character class
.Sh SYNOPSIS
.In wctype.h
.Ft int
.Fn iswctype "wint_t wc" "wctype_t charclass"
.Ft int
.Fn iswctype_l "wint_t wc" "wctype_t charclass" "locale_t locale"
.Sh DESCRIPTION
These functions test whether the wide character
.Fa wc
belongs to
.Fa charclass .
.Pp
The behaviour is undefined if
.Fa charclass
or
.Fa wc
is invalid.
When
.Fa charclass
is retrieved with
.Xr wctype 3 ,
it becomes invalid when the thread-specific character encoding locale
is changed with
.Xr uselocale 3
or when the global character encoding locale is changed with
.Xr setlocale 3 .
When
.Fa charclass
is retrieved with
.Xr wctype_l 3 ,
it is only valid for use with the same
.Fa locale
argument.
.Sh RETURN VALUES
These functions return zero if the character tests false
or non-zero if the character tests true.
.Sh SEE ALSO
.Xr iswalnum 3 ,
.Xr newlocale 3 ,
.Xr setlocale 3 ,
.Xr towctrans 3 ,
.Xr wctype 3
.Sh STANDARDS
The
.Fn iswctype
function conforms to
.St -isoC-amd1 ,
and
.Fn iswctype_l
to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn iswctype
function has been available since
.Ox 3.8 ,
and
.Fn iswctype_l
since
.Ox 6.2 .
@


1.4
log
@mandoc -Tlint fixes from <kaspars at bankovskis dot net>
@
text
@d1 1
a1 1
.\" $OpenBSD: iswctype.3,v 1.3 2013/06/05 03:39:22 tedu Exp $
d4 2
a5 1
.\" Copyright (c)2003 Citrus Project,
d29 1
a29 1
.Dd $Mdocdate: June 5 2013 $
a31 1
.\" ----------------------------------------------------------------------
d33 3
a35 3
.Nm iswctype
.Nd test a character for character class identifier
.\" ----------------------------------------------------------------------
d40 2
a41 1
.\" ----------------------------------------------------------------------
d43 1
a43 3
The
.Fn iswctype
function returns a boolean value that indicates whether a wide character
d45 1
a45 1
is in
d48 15
a62 5
The behaviour of the
.Fn iswctype
is undefined if the
.Fn iswctype
function is called with an invalid
d64 5
a68 13
(changes of
.Dv LC_CTYPE
category invalidate
.Fa charclass )
or invalid wide character
.Fa wc .
.Pp
The behaviour of the
.Fn iswctype
is affected by the
.Dv LC_CTYPE
category of the current locale.
.\" ----------------------------------------------------------------------
d70 2
a71 17
The
.Fn iswcttype
returns:
.Bl -tag -width 012345678901
.It 0
.Fa wc
is not in
.Fa charclass .
.It non-zero
.Fa wc
is in
.Fa charclass .
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
No errors are defined.
.\" ----------------------------------------------------------------------
d73 2
a76 1
.Xr wctrans 3 ,
a77 1
.\" ----------------------------------------------------------------------
d82 14
a95 3
.\" .St -isoC-amd1 .
ISO/IEC 9899/AMD1:1995
.Pq Dq ISO C90, Amendment 1 .
@


1.3
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: iswctype.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
a81 1
.Pp
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: iswctype.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd $Mdocdate$
d37 1
a37 1
.Fd #include <wctype.h>
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d28 1
a28 1
.Dd March 4, 2003
@

