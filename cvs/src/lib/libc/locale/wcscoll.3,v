head	1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1;
locks; strict;
comment	@.\" @;


1.1
date	2017.09.05.03.16.13;	author schwarze;	state Exp;
branches;
next	;
commitid	ngpX0SPDX30tzjDf;


desc
@@


1.1
log
@New POSIX xlocale implementation written from scratch.
Complete in the sense that all POSIX *locale(3) and *_l(3) functions
are included, but in OpenBSD, we of course only really care about
LC_CTYPE and we only support ASCII and UTF-8.

With important help from kettenis@@, guenther@@, and jca@@.
Repeated testing in ports bulk builds by naddy@@.
Additional testing by jca@@, sebastia@@, dcoppa@@, and others.
OK kettenis@@ dcoppa@@, and guenther@@ on an earlier version.
Riding guenther@@'s libc/librthread major bump.
@
text
@.\"	$OpenBSD$
.\"
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" Copyright (c) 2017 Ingo Schwarze <schwarze@@openbsd.org>
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt WCSCOLL 3
.Os
.Sh NAME
.Nm wcscoll ,
.Nm wcscoll_l
.Nd compare wide strings according to the current collation
.Sh SYNOPSIS
.In wchar.h
.Ft int
.Fn wcscoll "const wchar_t *s1" "const wchar_t *s2"
.Ft int
.Fn wcscoll_l "const wchar_t *s1" "const wchar_t *s2" "locale_t locale"
.Sh DESCRIPTION
The
.Fn wcscoll
and
.Fn wcscoll_l
functions lexicographically compare the NUL-terminated wide strings
.Fa s1
and
.Fa s2
according to the current locale collation
and return an integer greater than, equal to, or less than 0,
according to whether
.Fa s1
is greater than, equal to, or less than
.Fa s2 .
.Pp
On
.Ox ,
they have the same effect as
.Xr wcscmp 3 ,
and the global locale, the thread-specific locale, and the
.Fa locale
argument are ignored.
.Sh ENVIRONMENT
On other operating systems, the behaviour of
.Fn wcscoll
may depend on the
.Dv LC_CTYPE
.Xr locale 1 .
.Sh SEE ALSO
.Xr newlocale 3 ,
.Xr setlocale 3 ,
.Xr wcscmp 3 ,
.Xr wcsxfrm 3
.Sh STANDARDS
The
.Fn wcscoll
function conforms to
.St -isoC-99 ,
and
.Fn wcscoll_l
to
.St -p1003.1-2008 .
.Sh HISTORY
The
.Fn wcscoll
function has been available since
.Ox 4.8 ,
and
.Fn wcscoll_l
since
.Ox 6.2 .
@
