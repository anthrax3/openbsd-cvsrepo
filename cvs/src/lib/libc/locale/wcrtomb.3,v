head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.8
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.10
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.6
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.4
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.7.0.2
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.6
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.4
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.12
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.10
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	OPENBSD_5_0:1.4.0.6
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.4
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.2
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.10
date	2015.03.22.18.02.11;	author stsp;	state Exp;
branches;
next	1.9;
commitid	swCEfwMxiimixe6a;

1.9
date	2015.03.22.17.52.31;	author stsp;	state Exp;
branches;
next	1.8;
commitid	sN9lbe0aGZx9Pww8;

1.8
date	2015.03.19.12.41.51;	author jmc;	state Exp;
branches;
next	1.7;
commitid	B2v6OfVb4D2jgnHJ;

1.7
date	2013.08.28.16.24.07;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2013.08.28.13.55.23;	author stsp;	state Exp;
branches;
next	1.5;

1.5
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2010.03.26.19.30.41;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2007.02.09.09.19.34;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Resolve a mandoc -Tlint warning about trailing whitespace.
@
text
@.\" $OpenBSD: wcrtomb.3,v 1.9 2015/03/22 17:52:31 stsp Exp $
.\" $NetBSD: wcrtomb.3,v 1.4 2003/09/08 17:54:31 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 22 2015 $
.Dt WCRTOMB 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm wcrtomb
.Nd converts a wide character to a multibyte character (restartable)
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.In wchar.h
.Ft size_t
.Fn wcrtomb "const char * restrict s" "wchar_t wc" "mbstate_t * restrict ps"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
.Fn wcrtomb
converts the wide character given by
.Fa wc
to the corresponding multibyte character, and stores up to
.Dv MB_CUR_MAX
bytes in the array pointed to by
.Fa s
if
.Fa s
is not a null pointer.
.Pp
The behaviour of
.Fn wcrtomb
is affected by the
.Dv LC_CTYPE
category of the current locale.
.Pp
These are the special cases:
.Bl -tag -width 012345678901
.It "wc == 0"
For state-dependent encodings,
.Fn wcrtomb
stores a null byte preceded by a special byte sequence (if any)
to return to an initial state to the array pointed by
.Fa s ,
and the state object pointed by
.Fa ps
also returned to an initial state.
.It "s == NULL"
.Fn wcrtomb
just places
.Fa ps
into an initial state.
It is equivalent to the following call:
.Bd -literal -offset indent
wcrtomb(buf, L'\e0', ps);
.Ed
.Pp
Here,
.Fa buf
is a dummy buffer.
In this case,
.Fa wc
is ignored.
.It "ps == NULL"
.Fn mbrtowc
uses its own internal state object to keep the conversion state,
instead of
.Fa ps
mentioned in this manual page.
.Pp
Calling any other functions in
.Em libc
never change the internal
state of
.Fn mbrtowc ,
which is initialized at startup time of the program.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
.Fn wcrtomb
returns the number of bytes (including any shift sequences)
which are stored in the array pointed to by
.Fa s .
If
.Fa wc
is not a valid wide character,
.Fn wcrtomb
returns (size_t)-1
and sets
.Va errno
to indicate error.
.\" ----------------------------------------------------------------------
.Sh ERRORS
.Fn wcrtomb
may cause an error in the following cases:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa wc
is not a valid wide character.
.It Bq Er EINVAL
.Fa ps
points to an invalid or uninitialized mbstate_t object.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr setlocale 3 ,
.Xr wctomb 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn wcrtomb
function conforms to
.\" .St -isoC-amd1 .
ISO/IEC 9899/AMD1:1995
.Pq Dq ISO C90, Amendment 1 .
The restrict qualifier is added at
.\" .St -isoC99 .
ISO/IEC 9899/1999
.Pq Dq ISO C99 .
@


1.9
log
@More wide character string function man page improvements based on feedback
by Kaspars Bankovskis. ok jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.8 2015/03/19 12:41:51 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: March 19 2015 $
d49 1
a49 1
if 
@


1.8
log
@better wording, from andre smagin; ok stsp
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.7 2013/08/28 16:24:07 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: August 28 2013 $
d45 3
a47 2
to the corresponding multibyte character, and stores it in the array
pointed to by
d49 1
a49 1
unless
d51 1
a51 5
is a null pointer.
Up to
.Dv MB_CUR_MAX
bytes are stored in
.Fa s .
@


1.7
log
@oops, we forgot to remove the .El in previous; sorry stefan (though you
should have run this through mandoc -Tlint ;)
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.6 2013/08/28 13:55:23 stsp Exp $
d51 1
a51 1
This function will modify the first at most
d53 1
a53 1
bytes of the array pointed by
@


1.6
log
@Cosmetic tweaks of wcrtomb(3) RETURN VALUES section. ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.5 2013/06/05 03:39:22 tedu Exp $
d28 1
a28 1
.Dd $Mdocdate: June 5 2013 $
a116 1
.El
@


1.5
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.4 2010/03/26 19:30:41 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: March 26 2010 $
d106 4
a109 6
returns:
.Bl -tag -width 012345678901
.It "positive"
The number of bytes (including any shift sequences)
which are stored in the array.
.It "(size_t)-1"
d111 1
a111 2
is not a valid wide character.
In this case,
d113 2
a114 1
also sets
@


1.4
log
@dispense with some wacky escape sequences;
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.3 2007/05/31 19:19:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d37 1
a37 1
.Fd #include <wchar.h>
@


1.3
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.2 2007/02/09 09:19:34 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate$
d80 1
a80 1
wcrtomb(buf, L'\\0', ps);
@


1.2
log
@grammar;
@
text
@d1 1
a1 1
.\" $OpenBSD: wcrtomb.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd February 4, 2002
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d72 1
a72 1
also returned to a initial state.
d77 1
a77 1
into a initial state.
@

