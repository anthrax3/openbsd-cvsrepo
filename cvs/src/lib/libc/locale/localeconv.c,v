head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.4
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.3.0.32
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.30
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.28
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.26
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.24
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.22
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.20
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.18
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.05.23.00.05.15;	author guenther;	state Exp;
branches;
next	1.7;
commitid	93KfkbbTTGrOENTw;

1.7
date	2015.09.14.12.21.03;	author guenther;	state Exp;
branches;
next	1.6;
commitid	r2G6Pc81mZSKzBEM;

1.6
date	2014.07.14.07.22.07;	author pelikan;	state Exp;
branches;
next	1.5;
commitid	2T7dYu6PlirmmPvO;

1.5
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2005.03.23.21.13.28;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	97.07.23.21.14.40;	author kstailey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.28.20;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Stop exposing <sys/localedef.h> and various symbols internal to the libc
locale implementation: _{Current,Default}*Locale, __[mn]locale_changed,
__mb_len_max_runtime

ok millert@@ schwarze@@ deraadt@@
@
text
@/*	$OpenBSD: localeconv.c,v 1.7 2015/09/14 12:21:03 guenther Exp $ */
/*
 * Written by J.T. Conklin <jtc@@netbsd.org>.
 * Public domain.
 */

#include <locale.h>
#include "localedef.h"

/*
 * The localeconv() function constructs a struct lconv from the current
 * monetary and numeric locales.
 *
 * Because localeconv() may be called many times (especially by library
 * routines like printf() & strtod()), the approprate members of the
 * lconv structure are computed only when the monetary or numeric
 * locale has been changed.
 */
static int __mlocale_changed = 1;
static int __nlocale_changed = 1;

/*
 * Return the current locale conversion.
 */
struct lconv *
localeconv(void)
{
    static struct lconv ret;

    if (__mlocale_changed) {
	/* LC_MONETARY */
	ret.int_curr_symbol	= _CurrentMonetaryLocale->int_curr_symbol;
	ret.currency_symbol	= _CurrentMonetaryLocale->currency_symbol;
	ret.mon_decimal_point	= _CurrentMonetaryLocale->mon_decimal_point;
	ret.mon_thousands_sep	= _CurrentMonetaryLocale->mon_thousands_sep;
	ret.mon_grouping	= _CurrentMonetaryLocale->mon_grouping;
	ret.positive_sign	= _CurrentMonetaryLocale->positive_sign;
	ret.negative_sign	= _CurrentMonetaryLocale->negative_sign;
	ret.int_frac_digits	= _CurrentMonetaryLocale->int_frac_digits;
	ret.frac_digits		= _CurrentMonetaryLocale->frac_digits;
	ret.p_cs_precedes	= _CurrentMonetaryLocale->p_cs_precedes;
	ret.p_sep_by_space	= _CurrentMonetaryLocale->p_sep_by_space;
	ret.n_cs_precedes	= _CurrentMonetaryLocale->n_cs_precedes;
	ret.n_sep_by_space	= _CurrentMonetaryLocale->n_sep_by_space;
	ret.p_sign_posn		= _CurrentMonetaryLocale->p_sign_posn;
	ret.n_sign_posn		= _CurrentMonetaryLocale->n_sign_posn;
	ret.int_p_cs_precedes	= _CurrentMonetaryLocale->int_p_cs_precedes;
	ret.int_p_sep_by_space	= _CurrentMonetaryLocale->int_p_sep_by_space;
	ret.int_n_cs_precedes	= _CurrentMonetaryLocale->int_n_cs_precedes;
	ret.int_n_sep_by_space	= _CurrentMonetaryLocale->int_n_sep_by_space;
	ret.int_p_sign_posn	= _CurrentMonetaryLocale->int_p_sign_posn;
	ret.int_n_sign_posn	= _CurrentMonetaryLocale->int_n_sign_posn;
	__mlocale_changed = 0;
    }

    if (__nlocale_changed) {
	/* LC_NUMERIC */
	ret.decimal_point	= (char *) _CurrentNumericLocale->decimal_point;
	ret.thousands_sep	= (char *) _CurrentNumericLocale->thousands_sep;
	ret.grouping		= (char *) _CurrentNumericLocale->grouping;
	__nlocale_changed = 0;
    }

    return (&ret);
}
DEF_STRONG(localeconv);
@


1.7
log
@Wrap <locale.h> so internal calls go direct
@
text
@d1 1
a1 1
/*	$OpenBSD: localeconv.c,v 1.6 2014/07/14 07:22:07 pelikan Exp $ */
a6 1
#include <sys/localedef.h>
d8 1
d19 2
a20 2
int __mlocale_changed = 1;
int __nlocale_changed = 1;
@


1.6
log
@international currency locale rules as per POSIX.1-2008

required for libc++

ok guenther afresh1
@
text
@d1 1
a1 1
/*	$OpenBSD: localeconv.c,v 1.5 2005/08/08 08:05:35 espie Exp $ */
d66 1
@


1.5
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d47 6
@


1.4
log
@ansify. ok deraadt@@ millert@@
@
text
@d1 1
a5 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: localeconv.c,v 1.3 1997/07/23 21:14:40 kstailey Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.3
log
@tabify + trailing blanks
@
text
@d7 1
a7 1
static char *rcsid = "$OpenBSD: localeconv.c,v 1.2 1996/08/19 08:28:20 tholo Exp $";
d29 1
a29 1
localeconv()
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d7 1
a7 1
static char *rcsid = "$OpenBSD: localeconv.c,v 1.1.1.1 1995/10/18 08:42:01 deraadt Exp $";
d13 1
a13 1
/* 
d18 2
a19 2
 * routines like printf() & strtod()), the approprate members of the 
 * lconv structure are computed only when the monetary or numeric 
@


1.1
log
@Initial revision
@
text
@d7 1
a7 1
static char *rcsid = "$Id: localeconv.c,v 1.6 1995/04/28 23:19:32 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
