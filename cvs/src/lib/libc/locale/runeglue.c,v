head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.4.0.8
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.14
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.6
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.10
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.0.24
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.22
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.18
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.20
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.16
	OPENBSD_4_5_BASE:1.1
	OPENBSD_4_4:1.1.0.14
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.12
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.10
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2017.08.05.15.16.32;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	OlemQmHeQF93n0Vu;

1.4
date	2015.10.01.02.32.07;	author guenther;	state Exp;
branches;
next	1.3;
commitid	DA03ltgCTpoknko0;

1.3
date	2012.12.05.23.20.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.03.21.07.34;	author stsp;	state Exp;
branches;
next	1.1;

1.1
date	2005.08.07.10.16.24;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@We only support ASCII and UTF-8, so we never need to
change _ctype_, _tolower_tab_, and _toupper_tab_.
No functional change.
Suggested by and OK kettenis@@
@
text
@/*	$OpenBSD: runeglue.c,v 1.4 2015/10/01 02:32:07 guenther Exp $ */
/*	$NetBSD: runeglue.c,v 1.10 2003/03/10 21:18:49 tshiozak Exp $	*/

/*-
 * Copyright (c)1999 Citrus Project,
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	Id: runeglue.c,v 1.7 2000/12/22 22:52:29 itojun Exp
 */

/*
 * Glue code to hide "rune" facility from user programs.
 * This is important to keep backward/future compatibility.
 */

#include <assert.h>
#include <limits.h>
#include <stdio.h>
#include <sys/types.h>
#include <ctype.h>
#include <stdlib.h>
#include <string.h>
#include <wchar.h>
#include "rune.h"
#include "rune_local.h"
#include "ctype_private.h"

#if EOF != -1
#error "EOF != -1"
#endif
#if _CACHED_RUNES != 256
#error "_CACHED_RUNES != 256"
#endif

int
__make_ctype_tabs(_RuneLocale *rl)
{
	int i, limit;
	struct old_tabs *p;

	p = malloc(sizeof *p);
	if (!p)
		return -1;

	/* By default, fill the ctype tab completely. */
	limit = CTYPE_NUM_CHARS;

	/* In UTF-8-encoded locales, the single-byte ctype functions
	 * must only return non-zero values for ASCII characters.
	 * Any non-ASCII single-byte character is not a valid UTF-8 sequence.
	 */
	if (strcmp(rl->rl_encoding, "UTF8") == 0)
		limit = 128;

	rl->rl_tabs = p;
	p->ctype_tab[0] = 0;
	p->toupper_tab[0] = EOF;
	p->tolower_tab[0] = EOF;
	for (i = 0; i < limit; i++) {
		p->ctype_tab[i + 1] = 0;
		if (rl->rl_runetype[i] & _CTYPE_U)
			p->ctype_tab[i + 1] |= _U;
		if (rl->rl_runetype[i] & _CTYPE_L)
			p->ctype_tab[i + 1] |= _L;
		if (rl->rl_runetype[i] & _CTYPE_D)
			p->ctype_tab[i + 1] |= _N;
		if (rl->rl_runetype[i] & _CTYPE_S)
			p->ctype_tab[i + 1] |= _S;
		if (rl->rl_runetype[i] & _CTYPE_P)
			p->ctype_tab[i + 1] |= _P;
		if (rl->rl_runetype[i] & _CTYPE_C)
			p->ctype_tab[i + 1] |= _C;
		if (rl->rl_runetype[i] & _CTYPE_X)
			p->ctype_tab[i + 1] |= _X;
		/*
		 * _B has been used incorrectly (or with older declaration)
		 * in ctype.h isprint() macro.
		 * _B does not mean isblank, it means "isprint && !isgraph".
		 * the following is okay since isblank() was hardcoded in
		 * function (i.e. isblank() is inherently locale unfriendly).
		 */
		if ((rl->rl_runetype[i] & (_CTYPE_R | _CTYPE_G))
		    == _CTYPE_R)
			p->ctype_tab[i + 1] |= _B;

		p->toupper_tab[i + 1] = (short)rl->rl_mapupper[i];
		p->tolower_tab[i + 1] = (short)rl->rl_maplower[i];
	}
	for (i = limit; i < CTYPE_NUM_CHARS; i++)
		p->ctype_tab[i + 1] = 0;

	return 0;
}
@


1.4
log
@Eliminate the last of the LINTEDn and PRINTFLIKEn comments.  In one
case, by deleting some useless '& of an array' we also eliminate the need
for the casts which prompted the original lint warnings

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: runeglue.c,v 1.3 2012/12/05 23:20:00 deraadt Exp $ */
a113 14
}

void
__install_currentrunelocale_ctype()
{
	if (_CurrentRuneLocale->rl_tabs != NULL) {
		_ctype_       = _CurrentRuneLocale->rl_tabs->ctype_tab;
		_toupper_tab_ = _CurrentRuneLocale->rl_tabs->toupper_tab;
		_tolower_tab_ = _CurrentRuneLocale->rl_tabs->tolower_tab;
	} else {
		_ctype_ = _C_ctype_;
		_toupper_tab_ = _C_toupper_;
		_tolower_tab_ = _C_tolower_;
	}
@


1.3
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: runeglue.c,v 1.2 2011/04/03 21:07:34 stsp Exp $ */
d120 3
a122 9
		/* LINTED const cast */
		_ctype_ = (const unsigned char *)
		    &(_CurrentRuneLocale->rl_tabs->ctype_tab);
		/* LINTED const cast */
		_toupper_tab_ = (const short *)
		    &(_CurrentRuneLocale->rl_tabs->toupper_tab);
		/* LINTED const cast */
		_tolower_tab_ = (const short *)
		    &(_CurrentRuneLocale->rl_tabs->tolower_tab);
@


1.2
log
@Don't fill the ctype tab with Latin-1 information in UTF-8 locales.
Single byte sequences other than ASCII are not valid UTF-8, so they should
test false in single-byte ctype functions like isprint().
Remove some dead #ifdef'd code while here.
ok phessler nicm mikeb
@
text
@d1 1
a1 1
/*	$OpenBSD: runeglue.c,v 1.1 2005/08/07 10:16:24 espie Exp $ */
a35 2

#include <sys/cdefs.h>
@


1.1
log
@commit LC_CTYPE files from NetBSD/citrus, not yet linked in.
okay deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d61 1
a61 1
	int i;
d68 10
d82 2
a83 2
	for (i = 0; i < CTYPE_NUM_CHARS; i++) {
		p->ctype_tab[i + 1]=0;
d99 2
a100 2
		 * TWEAK!  _B has been used incorrectly (or with older
		 * declaration) in ctype.h isprint() macro.
a104 1
#if 1
d108 1
a108 4
#else
		if (rl->rl_runetype[i] & _CTYPE_B)
			p->ctype_tab[i + 1] |= _B;
#endif
d112 3
@

