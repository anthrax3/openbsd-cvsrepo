head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.10
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.8
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.6
date	2016.02.27.14.07.04;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	X44j4Ev13eUiJAsw;

1.5
date	2015.10.28.08.45.49;	author stsp;	state Exp;
branches;
next	1.4;
commitid	Q6eM6HST0NKzd7wM;

1.4
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2010.11.20.18.23.19;	author stsp;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Fix STANDARDS: use the appropriate .St argument and add the information
that setting errno is required by POSIX, but not by ISO C.
@
text
@.\" $OpenBSD: mbtowc.3,v 1.5 2015/10/28 08:45:49 stsp Exp $
.\" $NetBSD: mbtowc.3,v 1.5 2003/09/08 17:54:31 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: October 28 2015 $
.Dt MBTOWC 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm mbtowc
.Nd converts a multibyte character to a wide character
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.In stdlib.h
.Ft int
.Fn mbtowc "wchar_t * restrict pwc" "const char * restrict s" "size_t n"
.Sh DESCRIPTION
The
.Fn mbtowc
function converts the multibyte character pointed to by
.Fa s
to a wide character, and stores it in the wchar_t object pointed to by
.Fa pwc .
This function may inspect at most
.Fa n
bytes of the array pointed to by
.Fa s .
.Pp
Unlike
.Xr mbrtowc 3 ,
the first
.Fa n
bytes pointed to by
.Fa s
need to form an entire multibyte character.
Otherwise, this function returns an error and the internal state will
be undefined.
.Pp
If a call to
.Fn mbtowc
resulted in an undefined internal state,
.Fn mbtowc
must be called with
.Ar s
set to
.Dv NULL
to reset the internal state before it can safely be used again.
.Pp
The behaviour of
.Fn mbtowc
is affected by the
.Dv LC_CTYPE
category of the current locale.
Calling any other functions in
.Em libc
never changes the internal
state of
.Fn mbtowc ,
except for calling
.Xr setlocale 3
with the
.Dv LC_CTYPE
category set to a different locale.
Such
.Xr setlocale 3
calls cause the internal state of this function to be undefined.
.Pp
In state-dependent encodings such as ISO/IEC 2022-JP,
.Fa s
may point to the special sequence of bytes to change the shift-state.
Because such sequence bytes do not correspond to any individual wide character,
.Fn mbtowc
treats them as if they were part of the subsequent multibyte character.
.Pp
The following special cases apply to the arguments:
.Bl -tag -width 012345678901
.It s == NULL
.Fn mbtowc
initializes its own internal state to the initial state, and
determines whether the current encoding is state-dependent.
.Fn mbtowc
returns 0 if the encoding is state-independent,
otherwise non-zero.
.Fa pwc
is ignored.
.It pwc == NULL
.Fn mbtowc
behaves just as if
.Fa pwc
was not
.Dv NULL ,
including modifications to internal state,
except that the result of the conversion is discarded.
This can be used to determine the size of the wide character
representation of a multibyte string.
Another use case is a check for illegal or incomplete multibyte sequences.
.It n == 0
In this case,
the first
.Fa n
bytes of the array pointed to by
.Fa s
never form a complete character and
.Fn mbtowc
always fails.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
Normally,
.Fn mbtowc
returns:
.Bl -tag -width 012345678901
.It 0
.Fa s
points to a null byte
.Pq Sq \e0 .
.It positive
Number of bytes for the valid multibyte character pointed to by
.Fa s .
There are no cases where the value returned is greater than
the value of the
.Dv MB_CUR_MAX
macro.
.It -1
.Fa s
points to an invalid or an incomplete multibyte character.
.Va errno
is set to indicate the error.
.El
.Pp
When
.Fa s
is
.Dv NULL ,
.Fn mbtowc
returns:
.Bl -tag -width 0123456789
.It 0
The current encoding is state-independent.
.It non-zero
The current encoding is state-dependent.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
.Fn mbtowc
will set
.Va errno
in the following cases:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa s
points to an invalid or incomplete multibyte character.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr mblen 3 ,
.Xr mbrtowc 3 ,
.Xr setlocale 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn mbtowc
function conforms to
.St -ansiC .
The restrict qualifier is added at
.St -isoC-99 .
Setting
.Va errno
is an
.St -p1003.1-2008
extension.
.Sh CAVEATS
On error, callers of
.Fn mbtowc
cannot tell whether the multibyte character was invalid or incomplete.
To treat incomplete data differently from invalid data the
.Xr mbrtowc 3
function can be used instead.
@


1.5
log
@Rewrite the mbtowc(3) page for clarity. Explain what needs to be done on error.
With input from jmc, zhuk, schwarze, and bentley.
ok jmc zhuk bentley
@
text
@d1 1
a1 1
.\" $OpenBSD: mbtowc.3,v 1.4 2013/06/05 03:39:22 tedu Exp $
d28 1
a28 1
.Dd $Mdocdate: June 5 2013 $
d189 6
a194 3
.\" .St -isoC99 .
ISO/IEC 9899/1999
.Pq Dq ISO C99 .
@


1.4
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: mbtowc.3,v 1.3 2010/11/20 18:23:19 stsp Exp $
d28 1
a28 1
.Dd $Mdocdate: November 20 2010 $
d43 1
a43 1
usually converts the multibyte character pointed to by
d46 4
a49 7
.Fa pwc
if
.Fa pwc
is non-null and
.Fa s
points to a valid character.
This function may inspect at most n bytes of the array beginning from
a51 9
In state-dependent encodings,
.Fa s
may point to the special sequence bytes to change the shift-state.
Although such sequence bytes correspond to no individual
wide-character code,
.Fn mbtowc
changes its own state by the sequence bytes and treats them
as if they are a part of the subsequence multibyte character.
.Pp
d59 12
a70 1
Otherwise, this function causes an error.
d72 5
d79 2
a80 2
never change the internal
state of the
d86 1
a86 1
category changed to that of the current locale.
d89 1
a89 1
calls cause the internal state of this function to be indeterminate.
d91 4
a94 1
The behaviour of
d96 1
a96 3
is affected by the
.Dv LC_CTYPE
category of the current locale.
d98 1
a98 1
These are the special cases:
d102 1
a102 1
initializes its own internal state to an initial state, and
d104 2
a105 1
This function returns 0 if the encoding is state-independent,
a106 1
In this case,
d108 1
a108 1
is completely ignored.
d111 1
a111 1
executes the conversion as if
d113 7
a119 1
is non-null, but a result of the conversion is discarded.
d126 1
a126 2
never form a complete character.
Thus, the
d150 2
a151 3
The
.Fn mbtowc
also sets errno to indicate the error.
d156 2
a157 1
is equal to NULL,
d169 3
a171 1
may cause an error in the following cases:
@


1.3
log
@Add CAVEATS section documenting error handling caveats.
tweak and ok jmc, tedu
@
text
@d1 1
a1 1
.\" $OpenBSD: mbtowc.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d37 1
a37 1
.Fd #include <stdlib.h>
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: mbtowc.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd $Mdocdate$
d180 7
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d28 1
a28 1
.Dd February 3, 2002
@

