head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.6
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.14
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.10
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.12
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.8
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.6
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.4
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.2
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.1.0.8
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.6
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.4
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.2
	OPENBSD_3_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.5
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.07.19.47.40;	author matthew;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.10.18.38.19;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2007.05.31.19.19.29;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: wcsrtombs.3,v 1.4 2012/06/07 19:47:40 matthew Exp $
.\" $NetBSD: wcsrtombs.3,v 1.6 2003/09/08 17:54:32 wiz Exp $
.\"
.\" Copyright (c)2002 Citrus Project,
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 7 2012 $
.Dt WCSRTOMBS 3
.Os
.\" ----------------------------------------------------------------------
.Sh NAME
.Nm wcsrtombs ,
.Nm wcsnrtombs
.Nd converts a wide-character string to a multibyte character string \
(restartable)
.\" ----------------------------------------------------------------------
.Sh SYNOPSIS
.In wchar.h
.Ft size_t
.Fn wcsrtombs "const char * restrict dst" "const wchar_t ** restrict src" \
"size_t len" "mbstate_t * restrict ps"
.Ft size_t
.Fn wcsnrtombs "const char * restrict dst" "const wchar_t ** restrict src" \
"size_t nwc" "size_t len" "mbstate_t * restrict ps"
.\" ----------------------------------------------------------------------
.Sh DESCRIPTION
The
.Fn wcsrtombs
function converts the wide-character string indirectly pointed to by
.Fa src
to the corresponding multibyte character string
and stores it to the array pointed to by
.Fa dst .
The conversion stops due to the following reasons:
.Bl -bullet
.It
The conversion reaches a null wide character.
In this case, the null wide character is also converted.
.It
The conversion has already stored
.Fa len
bytes to the array pointed to by
.Fa dst .
.It
The conversion encounters an invalid character.
.El
.Pp
The
.Fn wcsnrtombs
function is equivalent to
.Fn wcsrtombs
except that it additionally stops the conversion after processing
.Fa nwc
wide characters.
.Pp
Each character will be converted as if
.Xr wcrtomb 3
is continuously called, except the internal state of
.Xr wcrtomb 3
will not be affected.
.Pp
After conversion,
if
.Fa dst
is not a null pointer,
the pointer object pointed to by
.Fa src
is a null pointer (if the conversion is stopped due to reaching a null wide character)
or the address just past the last wide character processed.
.Pp
If
.Fa dst
is not a null pointer and the conversion is stopped due to reaching
a null wide character,
the state object pointed to by
.Fa ps
is set to an initial state after the conversion has taken place.
.Pp
The behaviour of the
.Fn wcsrtombs
and
.Fn wcsnrtombs
functions is affected by the
.Dv LC_CTYPE
category of the current locale.
.Pp
There are two special cases:
.Bl -tag -width 012345678901
.It "dst == NULL"
The conversion takes place, but the resulting multibyte string is discarded.
In this case, the pointer object pointed to by
.Fa src
is not modified and
.Fa len
is ignored.
.It "ps == NULL"
The
.Fn wcsrtombs
and
.Fn wcsnrtombs
functions use their own internal state objects to keep the conversion state,
instead of
.Fa ps
as mentioned in this manual page.
.Pp
Calling any other functions in
.Em libc
never change these internal states,
which are initialized at startup time of the program.
.El
.\" ----------------------------------------------------------------------
.Sh RETURN VALUES
The
.Fn wcsrtombs
and
.Fn wcsnrtombs
functions return:
.Bl -tag -width 012345678901
.It 0 or positive
Number of bytes stored to the array pointed to by
.Fa dst ,
except for a null byte.
There is no cases that the value returned is greater than
.Fa len
(unless
.Fa dst
is a null pointer).
If the return value is equal to
.Fa len ,
the string pointed to by
.Fa dst
will not be null-terminated.
.It (size_t)-1
.Fa src
points to the string containing invalid wide character.
In this case,
.Va errno
is set to indicate the error.
.El
.\" ----------------------------------------------------------------------
.Sh ERRORS
The
.Fn wcsrtombs
and
.Fn wcsnrtombs
functions may return the following errors:
.Bl -tag -width Er
.It Bq Er EILSEQ
.Fa src
points to the string containing an invalid wide character.
.It Bq Er EINVAL
.Fa ps
points to an invalid or uninitialized mbstate_t object.
.El
.\" ----------------------------------------------------------------------
.Sh SEE ALSO
.Xr setlocale 3 ,
.Xr wcrtomb 3 ,
.Xr wcstombs 3
.\" ----------------------------------------------------------------------
.Sh STANDARDS
The
.Fn wcsrtombs
function conforms to
.St -ansiC .
The restrict qualifier is added at
.\" .St -isoC99 .
ISO/IEC 9899/AMD1:1995
.Pq Dq ISO C99 .
.Pp
The
.Fn wcsnrtombs
function conforms to
.St -p1003.1-2008 .
@


1.4
log
@Document mbsnrtowcs() and wcsnrtombs().

ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: wcsrtombs.3,v 1.3 2010/09/10 18:38:19 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: September 10 2010 $
d39 1
a39 1
.Fd #include <wchar.h>
@


1.3
log
@observe the following spelling:
- wide character (noun)
- wide-character (adjective)

this is the "fix of least resistance", and appears to be in line with
posix style; a tiny fix still needed for curses, but i'll mail that
upstream;
@
text
@d1 1
a1 1
.\" $OpenBSD: wcsrtombs.3,v 1.2 2007/05/31 19:19:29 jmc Exp $
d28 1
a28 1
.Dd $Mdocdate: May 31 2007 $
d33 2
a34 1
.Nm wcsrtombs
d39 1
a39 1
.Fd #include <stdlib.h>
d41 5
a45 2
.Fn wcsrtombs "const char * restrict s" "const wchar_t ** restrict pwcs" \
"size_t n" "mbstate_t * restrict ps"
d50 5
a54 5
converts the null-terminated wide-character string indirectly pointed to by
.Fa pwcs
to the corresponding multibyte character string,
and store it to the array pointed to by
.Fa s .
d61 2
a62 4
The
.Fn wcsrtombs
has already stored
.Fa n
d64 1
a64 1
.Fa s .
d69 9
a77 1
Each characters will be converted as if
d85 2
a86 4
.Fa s
is not a
.Dv NULL
pointer,
d88 3
a90 5
.Fa pwcs
is a
.Dv NULL
pointer (if the conversion is stopped due to reaching a null wide character)
or the first byte of the character just after the last character converted.
d93 1
a93 1
.Fa s
d95 2
a96 3
a null wide character, the
.Fn wcsrtombs
places the state object pointed to by
d98 1
a98 1
to an initial state after the conversion is taken place.
d102 3
a104 1
is affected by the
d108 1
a108 1
These are the special cases:
d110 6
a115 8
.It "s == NULL"
.Fn wcsrtombs
returns the number of bytes to store the whole multibyte character string
corresponding to the wide-character string pointed to by
.Fa pwcs ,
not including the terminating null byte.
In this case,
.Fa n
a116 2
.It "pwcs == NULL || *pwcs == NULL"
Undefined (may causes the program to crash).
d118 1
d120 3
a122 1
uses its own internal state object to keep the conversion state,
d125 1
a125 1
mentioned in this manual page.
d129 2
a130 4
never change the internal
state of
.Fn wcsrtombs ,
that is initialized at startup time of the program.
d134 1
d136 3
a138 1
returns:
d142 1
a142 1
.Fa s ,
d145 1
a145 1
.Fa n
d147 1
a147 1
.Fa s
d150 1
a150 1
.Fa n ,
d152 1
a152 1
.Fa s
d155 1
a155 1
.Fa pwcs
d157 3
a159 3
The
.Fn wcsrtombs
also sets errno to indicate the error.
d163 1
d165 3
a167 1
may cause an error in the following cases:
d170 1
a170 1
.Fa pwcs
d172 3
d191 5
@


1.2
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: wcsrtombs.3,v 1.1 2005/05/11 18:44:12 espie Exp $
d28 1
a28 1
.Dd $Mdocdate$
d34 1
a34 1
.Nd converts a wide character string to a multibyte character string \
d46 1
a46 1
converts the null-terminated wide character string indirectly pointed to by
d106 1
a106 1
corresponding to the wide character string pointed to by
@


1.1
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
.\" $OpenBSD$
d28 1
a28 1
.Dd February 4, 2002
@

