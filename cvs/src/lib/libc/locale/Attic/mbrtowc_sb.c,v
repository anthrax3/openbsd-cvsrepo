head	1.5;
access;
symbols
	OPENBSD_4_7:1.4.0.16
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.18
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.14
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.12
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.10
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.8
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.6
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.4
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.2
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3;
locks; strict;
comment	@ * @;


1.5
date	2010.07.27.16.59.04;	author stsp;	state dead;
branches;
next	1.4;

1.4
date	2005.11.27.20.03.06;	author cloder;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.11.20.51.56;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.07.24.09.50.49;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Replace the single-byte placeholders for the multi-byte/wide-character
conversion interfaces of libc (mbrtowc(3) and friends) with new
implementations that internally call an API based on NetBSD's citrus.
This allows us to support locales with multi-byte character encodings.

Provide two implementations of the citrus-based API: one based on the old
single-byte placeholders for use with our existing single-byte character
locales (C, ISO8859-*, KOI8, CP1251, etc.), and one that provides support
for UTF-8 encoded characters (code based on FreeBSD's implementation).

Install the en_US.UTF-8 ctype locale support file, and allow the UTF-8
ctype locale to be enabled via setlocale(3) (export LC_CTYPE='en_US.UTF-8').

A lot of programs, especially from ports, will now start using UTF-8 if the
UTF-8 locale is enabled. Use at your own risk, and please report any breakage.
Note that ncurses-based programs cannot display UTF-8 right now, this is being
worked on.

To prevent install media growth, add vfprintf(3) and mbrtowc(3) to libstubs.
The mbrtowc stub was copied unchanged from its old single-byte placeholder.
vfprintf.c doesn't need to be copied, just put in .PATH (hint by fgsch@@).

Testing by myself, naddy, sthen, nicm, espie, armani, Dmitrij D. Czarkoff.

ok matthieu espie millert sthen nicm deraadt
@
text
@/*	$OpenBSD: mbrtowc_sb.c,v 1.4 2005/11/27 20:03:06 cloder Exp $	*/
/*	$NetBSD: multibyte_sb.c,v 1.4 2003/08/07 16:43:04 agc Exp $	*/

/*
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <errno.h>
#include <stdlib.h>
#include <wchar.h>

/*ARGSUSED*/
size_t
mbrtowc(wchar_t *pwc, const char *s, size_t n, mbstate_t *ps)
{

	/* pwc may be NULL */
	/* s may be NULL */
	/* ps appears to be unused */

	if (s == NULL)
		return 0;
	if (n == 0)
		return (size_t)-1;
	if (pwc)
		*pwc = (wchar_t)(unsigned char)*s;
	return (*s != '\0');
}

int
mbtowc(wchar_t *pwc, const char *s, size_t n)
{

	/* pwc may be NULL */
	/* s may be NULL */

	return mbrtowc(pwc, s, n, NULL);
}

@


1.4
log
@Add a cast for (size_t)-1 because we know what we're doing, the ISO std.
says this is what we're supposed to return.  Makes lint happy.
OK deraadt, espie
@
text
@d1 1
a1 1
/*	$OpenBSD: mbrtowc_sb.c,v 1.3 2005/08/11 20:51:56 espie Exp $	*/
@


1.3
log
@fix conversion to match iswctype.

`why didn't you just commit' deraadt@@
okay millert@@, otto@@...
@
text
@d1 1
a1 1
/*	$OpenBSD: mbrtowc_sb.c,v 1.2 2005/08/08 08:05:35 espie Exp $	*/
d49 1
a49 1
		return -1;
@


1.2
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: mbrtowc_sb.c,v 1.1 2005/07/24 09:50:49 espie Exp $	*/
d51 1
a51 1
		*pwc = (wchar_t) *s;
@


1.1
log
@split off mbrtowc functions, so that vfprintf won't pull the whole
multibyte_sb.c contents.

okay millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: multibyte_sb.c,v 1.2 2005/06/17 20:40:32 espie Exp $	*/
a31 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: multibyte_sb.c,v 1.2 2005/06/17 20:40:32 espie Exp $";
#endif /* LIBC_SCCS and not lint */
@

