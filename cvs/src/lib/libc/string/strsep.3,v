head	1.14;
access;
symbols
	OPENBSD_6_0:1.14.0.14
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.8
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.6
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.12.0.16
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.14
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.16
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.14
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.12
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.10
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.6
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.4
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.2
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.14
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.25.00.38.53;	author schwarze;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.11.21.14.32.45;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2001.06.14.20.38.38;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.21.15.24.20;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.04.22.19.32;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.07.04.15.59.50;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.06.04.19.14.56;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.06.15.17.55.14;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	97.08.20.04.28.13;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.34.24;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: strsep.3,v 1.13 2011/07/25 00:38:53 schwarze Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	@@(#)strsep.3	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: July 25 2011 $
.Dt STRSEP 3
.Os
.Sh NAME
.Nm strsep
.Nd separate strings
.Sh SYNOPSIS
.In string.h
.Ft char *
.Fn strsep "char **stringp" "const char *delim"
.Sh DESCRIPTION
The
.Fn strsep
function locates, in the string referenced by
.Fa *stringp ,
the first occurrence of any character in the string
.Fa delim
(or the terminating
.Ql \e0
character) and replaces it with a
.Ql \e0 .
The location of the next character after the delimiter character
(or
.Dv NULL ,
if the end of the string was reached) is stored in
.Fa *stringp .
The original value of
.Fa *stringp
is returned.
.Pp
An
.Dq empty
field, i.e., one caused by two adjacent delimiter characters,
can be detected by comparing the location referenced by the pointer returned
by
.Fn strsep
to
.Ql \e0 .
.Pp
If
.Fa *stringp
is initially
.Dv NULL ,
.Fn strsep
returns
.Dv NULL .
.Sh EXAMPLES
The following uses
.Fn strsep
to parse a string, containing tokens delimited by whitespace, into an
argument vector:
.Bd -literal -offset indent
char **ap, *argv[10], *inputstring;

for (ap = argv; ap < &argv[9] &&
    (*ap = strsep(&inputstring, " \et")) != NULL;) {
	if (**ap != '\e0')
		ap++;
}
*ap = NULL;
.Ed
.Sh HISTORY
The
.Fn strsep
function first appeared in
.Bx 4.3 Reno .
It is intended as a replacement for the
.Xr strtok 3
function.
While the
.Xr strtok 3
function should be preferred for portability reasons (it conforms to
.St -ansiC )
it is unable to handle empty fields, i.e., detect fields delimited by
two adjacent delimiter characters, or to be used for more than a single
string at a time.
@


1.13
log
@update HISTORY and SEE ALSO for all of string(3), together with various
smaller improvements; jmc@@ and nicm@@ both ask me to get this in because
further tweaking will be easier in-tree
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.12 2007/05/31 19:19:32 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 31 2007 $
d42 1
a42 1
.Fd #include <string.h>
@


1.12
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.11 2003/06/02 20:18:38 millert Exp $
d35 1
a35 1
.Dd $Mdocdate$
d99 4
a102 2
function is intended as a replacement for the
.Fn strtok
d105 1
a105 1
.Fn strtok
a110 4
The
.Fn strsep
function first appeared in
.Bx 4.4 .
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.10 2001/11/21 14:32:45 deraadt Exp $
d35 1
a35 1
.Dd June 9, 1993
@


1.10
log
@2nd param is const
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.9 2001/06/14 20:38:38 aaron Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@Fix a buf oflow in EXAMPLES code; millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.8 2000/04/21 15:24:20 aaron Exp $
d48 1
a48 1
.Fn strsep "char **stringp" "char *delim"
@


1.8
log
@Flesh out libc string function man pages.
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.7 2000/03/04 22:19:32 aaron Exp $
d93 2
a94 1
for (ap = argv; (*ap = strsep(&inputstring, " \et")) != NULL;)
d96 3
a98 1
		++ap;
@


1.7
log
@In Unix land we prefer "whitespace" to "white space" or "white-space". At
least, this is the impression I get from looking at a lot of Perl docs.
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.6 1999/07/04 15:59:50 aaron Exp $
d100 1
a100 2
function
is intended as a replacement for the
@


1.6
log
@better wording
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.5 1999/06/04 19:14:56 aaron Exp $
d88 1
a88 1
to parse a string, containing tokens delimited by white space, into an
@


1.5
log
@some repairs, add example to strdup(3) page
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.4 1998/06/15 17:55:14 mickey Exp $
d73 2
a74 2
in
.Fa *stringp
@


1.4
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.3 1997/08/20 04:28:13 millert Exp $
d61 3
a63 1
(or NULL, if the end of the string was reached) is stored in
d69 3
a71 1
An ``empty'' field, i.e. one caused by two adjacent delimiter characters,
d108 1
a108 1
it is unable to handle empty fields, i.e. detect fields delimited by
@


1.3
log
@Update from lite2.
@
text
@d1 1
a1 1
.\" $OpenBSD: strsep.3,v 1.2 1996/08/19 08:34:24 tholo Exp $
d109 2
a110 1
function first appeared in 4.4BSD.
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 4
a4 2
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
d8 1
d37 1
a37 1
.\"	$OpenBSD: strsep.3,v 1.1.1.1 1995/10/18 08:42:23 deraadt Exp $
d39 1
a39 1
.Dd April 19, 1991
d52 3
a54 3
locates in the null-terminated string at
.Fa *stringp
the first occurrence of any character in
d56 6
a61 5
and replaces this with a
.Ql \e0 ,
records the location of the immediate following character in
.Fa *stringp ,
then returns the original value of
d63 7
a69 3
If no delimiter characters are found,
.Fn strsep
sets
d72 3
a74 2
.Dv NULL ;
if
d84 2
a85 2
to parse strings containing runs of white space,
making up an argument vector:
d87 5
a91 8
char inputstring[100];
char **argv[51], **ap = argv, *p, *val;
/* set up inputstring */
for (p = inputstring; p != NULL; ) {
	while ((val = strsep(&p, " \et")) != NULL && *val == '\e0');
	*ap++ = val;
}
*ap = 0;
d96 14
a109 2
function is
.Ud .
@


1.1
log
@Initial revision
@
text
@d34 1
a34 2
.\"     from: @@(#)strsep.3	5.3 (Berkeley) 4/19/91
.\"	$Id: strsep.3,v 1.3 1994/01/10 23:59:03 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
