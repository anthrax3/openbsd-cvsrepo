head	1.14;
access;
symbols
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.20
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.18
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.16
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.14
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.12
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.10
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.8
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.6
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.14
date	2004.05.03.17.35.07;	author millert;	state dead;
branches;
next	1.13;

1.13
date	2004.05.03.05.07.34;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.01.10.52.59;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.30.17.13.02;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.13.15.47.33;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.08.20.37.32;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.06.27.00.58.56;	author lebel;	state Exp;
branches;
next	1.6;

1.6
date	96.09.25.08.17.30;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.09.16.05.43.38;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.09.15.09.31.53;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.33.55;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.01.29.02.04.11;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.14
log
@No longer need __strerror(3) now that we use strerror_r() inside libc.
@
text
@/*
 * Copyright (c) 1988 Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: __strerror.c,v 1.13 2004/05/03 05:07:34 espie Exp $";
#endif /* LIBC_SCCS and not lint */

#include <limits.h>
#include <string.h>

/*
 * __strerror() has been deprecated in favor of strerror_r()
 * and is provided for source compatibility only.
 */
char *
__strerror(int num, char *buf)
{
	(void)strerror_r(num, buf, NL_TEXTMAX);
	return (buf);
}
@


1.13
log
@build the error message in strerror_r.c directly, avoiding one copy there.
handle a few subtle details caught by the regression tests: correct
termination, non copying if buffer length == 0, errno setting.
let all former users of __strerror go through strerror_r.

Work by Todd Miller and I. Okay millert@@.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.12 2004/05/01 10:52:59 espie Exp $";
@


1.12
log
@let __strerror fill precisely the part of the buffer it can.
okay millert@@
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.11 2004/04/30 17:13:02 espie Exp $";
a33 11
#ifdef NLS
#define catclose	_catclose
#define catgets		_catgets
#define catopen		_catopen
#include <nl_types.h>
#endif

#define sys_errlist	_sys_errlist
#define sys_nerr	_sys_nerr

#include <errno.h>
a34 1
#include <stdio.h>
a36 50
static size_t
__digits10(unsigned int num)
{
	size_t i = 0;

	do {
		num /= 10;
		i++;
	} while (num != 0);

	return i;
}

void
__itoa(int num, char *buffer, size_t start, size_t end)
{
	size_t pos;
	unsigned int a;
	int neg;

	if (num < 0) {
		a = -num;
		neg = 1;
	}
	else {
		a = num;
		neg = 0;
	}

	pos = start + __digits10(a);
	if (neg)
	    pos++;

	if (pos < end)
		buffer[pos] = '\0';
	else 
		buffer[end-1] = '\0';
	pos--;
	do {
		
		if (pos < end)
			buffer[pos] = (a % 10) + '0';
		pos--;
		a /= 10;
	} while (a != 0);
	if (neg)
	    if (pos < end)
		    buffer[pos] = '-';
}

d38 2
a39 3
 * Since perror() is not allowed to change the contents of strerror()'s
 * static buffer, both functions supply their own buffers to the
 * internal function __strerror().
a40 1

d44 2
a45 33
#define	UPREFIX	"Unknown error: "
	int len;
#ifdef NLS
	int save_errno;
	nl_catd catd;

	catd = catopen("libc", 0);
#endif

	if (num >= 0 && num < sys_nerr) {
#ifdef NLS
		strlcpy(buf, catgets(catd, 1, num,
		    (char *)sys_errlist[num]), NL_TEXTMAX);
#else
		return(sys_errlist[num]);
#endif
	} else {
#ifdef NLS
		len = strlcpy(buf, catgets(catd, 1, 0xffff, UPREFIX), NL_TEXTMAX);
#else
		len = strlcpy(buf, UPREFIX, NL_TEXTMAX);
#endif
		__itoa(num, buf, len, NL_TEXTMAX);
		errno = EINVAL;
	}

#ifdef NLS
	save_errno = errno;
	catclose(catd);
	errno = save_errno;
#endif

	return buf;
@


1.11
log
@Let __strerror work by fixing a number of problems. Work by tholo and I,
okay millert@@.

- atoi was bogus.
- atoi was not reentrant.
- there's no reason to cast stuff to unsigned int.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.10 2003/06/02 20:18:38 millert Exp $";
d62 2
a63 2
static char *
__itoa(int num, char *buffer, size_t maxlen)
d65 1
a65 2
	char *p;
	size_t len;
d78 1
a78 1
	len = __digits10(a);
d80 1
a80 1
	    len++;
d82 5
a86 4
	if (len >= maxlen)
		return NULL;

	buffer[len--] = '\0';
d88 4
a91 1
		buffer[len--] = (a % 10) + '0';
d95 2
a96 3
	    *buffer = '-';

	return buffer;
d130 1
a130 2
		if (len < NL_TEXTMAX)
			__itoa(num, buf + len, NL_TEXTMAX - len);
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.9 2003/03/13 15:47:33 deraadt Exp $";
d49 13
d63 1
a63 2
itoa(num)
	int num;
a64 1
	static char buffer[11];
d66 27
d94 1
a94 7
	p = buffer + 4;
	while (num >= 10) {
		*--p = (num % 10) + '0';
		num /= 10;
	}
	*p = (num % 10) + '0';
	return p;
d104 1
a104 3
__strerror(num, buf)
	int num;
	char *buf;
d107 1
a107 1
	register unsigned int errnum;
d115 1
a115 2
	errnum = num;				/* convert to unsigned */
	if (errnum < sys_nerr) {
d117 2
a118 2
		strlcpy(buf, catgets(catd, 1, errnum,
		    (char *)sys_errlist[errnum]), NL_TEXTMAX);
d120 1
a120 1
		return(sys_errlist[errnum]);
d124 1
a124 1
		strlcpy(buf, catgets(catd, 1, 0xffff, UPREFIX), NL_TEXTMAX);
d126 1
a126 1
		strlcpy(buf, UPREFIX, NL_TEXTMAX);
d128 2
a129 1
		strlcat(buf, itoa(errnum), NL_TEXTMAX);
@


1.9
log
@a few more strlcy; ok from beck & ho
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.8 2001/12/08 20:37:32 deraadt Exp $";
@


1.8
log
@when strerror() has an Unknown error, also set EINVAL
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.7 2001/06/27 00:58:56 lebel Exp $";
d101 1
a101 1
		strcpy(buf, UPREFIX);
d103 1
a103 1
		strncat(buf, itoa(errnum), NL_TEXTMAX-strlen(buf)-1);
@


1.7
log
@use strlcpy vs strncpy+a[len-1]='\0'.  millert@@ ok.
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.6 1996/09/25 08:17:30 deraadt Exp $";
d53 2
a54 1
static char *itoa(num)
a81 1

d83 1
d85 1
d104 1
d108 1
d110 1
@


1.6
log
@nls buffers are NL_TEXTMAX long -- not a security hole; netbsd pr#2780, mike.long@@analog.com
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.5 1996/09/16 05:43:38 tholo Exp $";
d90 2
a91 3
		strncpy(buf, catgets(catd, 1, errnum,
		    (char *)sys_errlist[errnum]), NL_TEXTMAX-1);
		buf[NL_TEXTMAX - 1] = '\0';
d97 1
a97 2
		strncpy(buf, catgets(catd, 1, 0xffff, UPREFIX), NL_TEXTMAX-1);
		buf[NL_TEXTMAX - 1] = '\0';
@


1.5
log
@Avoid pulling in stdio
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.4 1996/09/15 09:31:53 tholo Exp $";
d49 1
d90 3
a92 2
		strcpy(buf, catgets(catd, 1, errnum,
		    (char *)sys_errlist[errnum])); 
d98 2
a99 1
		strcpy(buf, catgets(catd, 1, 0xffff, UPREFIX));
d103 1
a103 1
		strcat(buf, itoa(errnum));
@


1.4
log
@Remove dead code
Remove unused variables
Silence some warnings
lint(1) is your friend
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.3 1996/08/19 08:33:55 tholo Exp $";
d52 15
d78 1
a78 1
#define	UPREFIX	"Unknown error: %u"
d96 1
a96 1
		sprintf(buf, catgets(catd, 1, 0xffff, UPREFIX), errnum);
d98 1
a98 1
		sprintf(buf, UPREFIX, errnum);
d100 1
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: __strerror.c,v 1.2 1996/01/29 02:04:11 deraadt Exp $";
d67 1
a67 1
	nl_catd catd ;
@


1.2
log
@need errno.h because err declerations have moved
@
text
@d35 1
a35 2
/*static char *sccsid = "from: @@(#)strerror.c	5.6 (Berkeley) 5/4/91";*/
static char *rcsid = "$Id: __strerror.c,v 1.7 1996/01/20 01:41:51 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
static char *rcsid = "$Id: __strerror.c,v 1.6 1995/04/24 16:37:31 cgd Exp $";
d49 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
