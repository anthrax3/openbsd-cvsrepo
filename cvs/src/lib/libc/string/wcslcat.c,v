head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.8
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2015.09.12.16.23.14;	author guenther;	state Exp;
branches;
next	1.5;
commitid	crCjb99r4AuxzOpl;

1.5
date	2015.01.15.03.54.12;	author millert;	state Exp;
branches;
next	1.4;
commitid	dx6jav0aq2bmUdtD;

1.4
date	2011.07.24.15.21.28;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.08.08.05.37;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2005.06.19.22.12.07;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.13.16.35.58;	author espie;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Wrap <inttypes.h> and finish wrapping of <wchar.h> so that calls go direct
and the symbols not in the C standard are weak
@
text
@/*	$OpenBSD: wcslcat.c,v 1.5 2015/01/15 03:54:12 millert Exp $	*/

/*
 * Copyright (c) 1998, 2015 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <wchar.h>

/*
 * Appends src to string dst of size dsize (unlike strncat, dsize is the
 * full size of dst, not space left).  At most dsize-1 characters
 * will be copied.  Always NUL terminates (unless dsize <= wcslen(dst)).
 * Returns wcslen(src) + MIN(dsize, wcslen(initial dst)).
 * If retval >= siz, truncation occurred.
 */
size_t
wcslcat(wchar_t *dst, const wchar_t *src, size_t dsize)
{
	const wchar_t *odst = dst;
	const wchar_t *osrc = src;
	size_t n = dsize;
	size_t dlen;

	/* Find the end of dst and adjust bytes left but don't go past end. */
	while (n-- != 0 && *dst != L'\0')
		dst++;
	dlen = dst - odst;
	n = dsize - dlen;

	if (n-- == 0)
		return(dlen + wcslen(src));
	while (*src != L'\0') {
		if (n != 0) {
			*dst++ = *src;
			n--;
		}
		src++;
	}
	*dst = L'\0';

	return(dlen + (src - osrc));	/* count does not include NUL */
}
DEF_WEAK(wcslcat);
@


1.5
log
@Make strlcpy/strlcat slightly easier to read.
@
text
@d1 1
a1 1
/*	$OpenBSD: wcslcat.c,v 1.4 2011/07/24 15:21:28 millert Exp $	*/
d56 1
@


1.4
log
@Sync wcslcpy and wcslcat with strlcpy and strlcat.  OK deraadt@@
@
text
@d1 1
a1 2
/*	$OpenBSD: wcslcat.c,v 1.3 2005/08/08 08:05:37 espie Exp $	*/
/*	$NetBSD: wcslcat.c,v 1.2 2001/01/03 14:33:02 lukem Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
d23 4
a26 4
 * Appends src to string dst of size siz (unlike wcsncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= wcslen(dst)).
 * Returns wcslen(src) + MIN(siz, wcslen(initial dst)).
d30 1
a30 1
wcslcat(wchar_t *dst, const wchar_t *src, size_t siz)
d32 3
a34 3
	wchar_t *d = dst;
	const wchar_t *s = src;
	size_t n = siz;
d37 11
a47 11
	/* Find the end of dst and adjust bytes left but don't go past end */
	while (n-- != 0 && *d != '\0')
		d++;
	dlen = d - dst;
	n = siz - dlen;

	if (n == 0)
		return(dlen + wcslen(s));
	while (*s != '\0') {
		if (n != 1) {
			*d++ = *s;
d50 1
a50 1
		s++;
d52 1
a52 1
	*d = '\0';
d54 1
a54 1
	return(dlen + (s - src));	/* count does not include NUL */
@


1.3
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: wcslcat.c,v 1.2 2005/06/19 22:12:07 espie Exp $	*/
a2 1
/*	from OpenBSD: strlcat.c,v 1.3 2000/11/24 11:10:02 itojun Exp 	*/
a5 1
 * All rights reserved.
d7 3
a9 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d11 7
a17 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d26 3
a28 3
 * will be copied.  Always NUL terminates (unless siz == 0).
 * Returns wcslen(initial dst) + wcslen(src); if retval >= siz,
 * truncation occurred.
d39 1
a39 1
	while (*d != '\0' && n-- != 0)
@


1.2
log
@K&R -> ANSI
APIWARN
okay millert@@, otto@@
@
text
@d1 1
a1 1
/*	$OpenBSD: wcslcat.c,v 1.1 2005/04/13 16:35:58 espie Exp $	*/
a30 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: wcslcat.c,v 1.1 2005/04/13 16:35:58 espie Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.1
log
@Import w* functions so that I can send smaller diffs around.

(Nothing activated yet, of course)

okay deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d33 1
a33 1
static char *rcsid = "$OpenBSD$";
d47 1
a47 4
wcslcat(dst, src, siz)
	wchar_t *dst;
	const wchar_t *src;
	size_t siz;
@

