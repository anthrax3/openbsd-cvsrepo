head	1.26;
access;
symbols
	OPENBSD_6_0:1.26.0.12
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.26.0.8
	OPENBSD_5_9_BASE:1.26
	OPENBSD_5_8:1.26.0.10
	OPENBSD_5_8_BASE:1.26
	OPENBSD_5_7:1.26.0.2
	OPENBSD_5_7_BASE:1.26
	OPENBSD_5_6:1.26.0.6
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.4
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.24.0.2
	OPENBSD_5_4_BASE:1.24
	OPENBSD_5_3:1.22.0.4
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.22.0.2
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.4
	OPENBSD_5_0:1.20.0.2
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.19.0.16
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.14
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.10
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.8
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.6
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.4
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.4
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.2
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2;
locks; strict;
comment	@.\" @;


1.26
date	2013.09.30.12.02.35;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2013.09.25.21.49.31;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2013.07.16.15.21.11;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.22;

1.22
date	2012.04.03.14.01.55;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2012.04.02.17.33.11;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2011.07.25.00.38.53;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.08.06.03.24.19;	author jaredy;	state Exp;
branches;
next	1.17;

1.17
date	2005.08.06.03.21.36;	author jaredy;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.12.21.56.39;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.18.22.29.59;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.05.07.15.51.54;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2000.11.16.23.27.41;	author angelos;	state Exp;
branches;
next	1.10;

1.10
date	2000.11.06.01.03.25;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.10.18.05.12.07;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.01.04.02.05;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.21.15.24.20;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.09.04.02.22.46;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	99.06.06.15.17.32;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.16.19.55.18;	author alex;	state Exp;
branches;
next	1.3;

1.3
date	98.11.11.17.12.02;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	98.07.06.19.17.21;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.07.01.01.29.45;	author millert;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Use PATH_MAX, NAME_MAX and LOGIN_NAME_MAX not MAXPATHNAMELEN,
MAXNAMLEN or MAXLOGNAME where possible.  OK deraadt@@
@
text
@.\"	$OpenBSD: strlcpy.3,v 1.25 2013/09/25 21:49:31 millert Exp $
.\"
.\" Copyright (c) 1998, 2000 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: September 25 2013 $
.Dt STRLCPY 3
.Os
.Sh NAME
.Nm strlcpy ,
.Nm strlcat
.Nd size-bounded string copying and concatenation
.Sh SYNOPSIS
.In string.h
.Ft size_t
.Fn strlcpy "char *dst" "const char *src" "size_t dstsize"
.Ft size_t
.Fn strlcat "char *dst" "const char *src" "size_t dstsize"
.Sh DESCRIPTION
The
.Fn strlcpy
and
.Fn strlcat
functions copy and concatenate strings with the
same input parameters and output result as
.Xr snprintf 3 .
They are designed to be safer, more consistent, and less error
prone replacements for the easily misused functions
.Xr strncpy 3
and
.Xr strncat 3 .
.Pp
.Fn strlcpy
and
.Fn strlcat
take the full size of the destination buffer and guarantee
NUL-termination if there is room.
Note that room for the NUL should be included in
.Fa dstsize .
.Pp
.Fn strlcpy
copies up to
.Fa dstsize
\- 1 characters from the string
.Fa src
to
.Fa dst ,
NUL-terminating the result if
.Fa dstsize
is not 0.
.Pp
.Fn strlcat
appends string
.Fa src
to the end of
.Fa dst .
It will append at most
.Fa dstsize
\- strlen(dst) \- 1 characters.
It will then NUL-terminate, unless
.Fa dstsize
is 0 or the original
.Fa dst
string was longer than
.Fa dstsize
(in practice this should not happen
as it means that either
.Fa dstsize
is incorrect or that
.Fa dst
is not a proper string).
.Pp
If the
.Fa src
and
.Fa dst
strings overlap, the behavior is undefined.
.Sh RETURN VALUES
Besides quibbles over the return type
.Pf ( Va size_t
versus
.Va int )
and signal handler safety
.Pf ( Xr snprintf 3
is not entirely safe on some systems), the
following two are equivalent:
.Bd -literal -offset indent
n = strlcpy(dst, src, len);
n = snprintf(dst, len, "%s", src);
.Ed
.Pp
Like
.Xr snprintf 3 ,
the
.Fn strlcpy
and
.Fn strlcat
functions return the total length of the string they tried to create.
For
.Fn strlcpy
that means the length of
.Fa src .
For
.Fn strlcat
that means the initial length of
.Fa dst
plus
the length of
.Fa src .
.Pp
If the return value is
.Cm >=
.Va dstsize ,
the output string has been truncated.
It is the caller's responsibility to handle this.
.Sh EXAMPLES
The following code fragment illustrates the simple case:
.Bd -literal -offset indent
char *s, *p, buf[BUFSIZ];

\&...

(void)strlcpy(buf, s, sizeof(buf));
(void)strlcat(buf, p, sizeof(buf));
.Ed
.Pp
To detect truncation, perhaps while building a pathname, something
like the following might be used:
.Bd -literal -offset indent
char *dir, *file, pname[PATH_MAX];

\&...

if (strlcpy(pname, dir, sizeof(pname)) >= sizeof(pname))
	goto toolong;
if (strlcat(pname, file, sizeof(pname)) >= sizeof(pname))
	goto toolong;
.Ed
.Pp
Since it is known how many characters were copied the first time, things
can be sped up a bit by using a copy instead of an append:
.Bd -literal -offset indent
char *dir, *file, pname[PATH_MAX];
size_t n;

\&...

n = strlcpy(pname, dir, sizeof(pname));
if (n >= sizeof(pname))
	goto toolong;
if (strlcpy(pname + n, file, sizeof(pname) - n) >= sizeof(pname) - n)
	goto toolong;
.Ed
.Pp
However, one may question the validity of such optimizations, as they
defeat the whole purpose of
.Fn strlcpy
and
.Fn strlcat .
As a matter of fact, the first version of this manual page got it wrong.
.Sh SEE ALSO
.Xr snprintf 3 ,
.Xr strncat 3 ,
.Xr strncpy 3 ,
.Xr wcslcpy 3
.Sh HISTORY
.Fn strlcpy
and
.Fn strlcat
first appeared in
.Ox 2.4 .
.Sh AUTHORS
.Fn strlcpy
and
.Fn strlcat
were created by
.An Todd C. Miller Aq Mt Todd.Miller@@courtesan.com .
@


1.25
log
@According to POSIX, if the src and dst strings overlap, the behavior
is undefined.  Add a warning to that effect.  OK deraadt@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.24 2013/07/16 15:21:11 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 16 2013 $
d141 1
a141 1
char *dir, *file, pname[MAXPATHLEN];
d154 1
a154 1
char *dir, *file, pname[MAXPATHLEN];
@


1.24
log
@use .Mt for email addresses; from Jan Stary <hans at stare dot cz>; ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.23 2013/06/05 03:39:23 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: June 5 2013 $
d83 6
@


1.23
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.22 2012/04/03 14:01:55 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: April 3 2012 $
d182 1
a182 1
.An Todd C. Miller Aq Todd.Miller@@courtesan.com .
@


1.22
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.21 2012/04/02 17:33:11 deraadt Exp $
d17 1
a17 1
.Dd $Mdocdate: April 2 2012 $
d25 1
a25 1
.Fd #include <string.h>
@


1.21
log
@simplify the strlcpy/strlcat manual page substantially.  do less
explaining of "what a C string is", and make it more clear that these
functiosn BEHAVE EXACTLY LIKE snprintf with "%s"!  (anyone who wants
to write a 'strlcpy considered harmful' paper should probably write a
'strlcpy and snprintf considered harmful' paper instead).

note to those from other projects reading this commit message: It would
be very good if this new manual was picked up in your project.

ok jmc millert krw
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.20 2011/07/25 00:38:53 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: July 25 2011 $
d89 1
a89 1
.Xr ( snprintf 3
@


1.20
log
@update HISTORY and SEE ALSO for all of string(3), together with various
smaller improvements; jmc@@ and nicm@@ both ask me to get this in because
further tweaking will be easier in-tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: strlcpy.3,v 1.19 2007/05/31 19:19:32 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
d27 1
a27 1
.Fn strlcpy "char *dst" "const char *src" "size_t size"
d29 1
a29 1
.Fn strlcat "char *dst" "const char *src" "size_t size"
d35 5
a39 3
functions copy and concatenate strings respectively.
They are designed
to be safer, more consistent, and less error prone replacements for
d43 1
a43 14
Unlike those functions,
.Fn strlcpy
and
.Fn strlcat
take the full size of the buffer (not just the length) and guarantee to
NUL-terminate the result (as long as
.Fa size
is larger than 0 or, in the case of
.Fn strlcat ,
as long as there is at least one byte free in
.Fa dst ) .
Note that a byte for the NUL should be included in
.Fa size .
Also note that
d47 4
a50 13
only operate on true
.Dq C
strings.
This means that for
.Fn strlcpy
.Fa src
must be NUL-terminated and for
.Fn strlcat
both
.Fa src
and
.Fa dst
must be NUL-terminated.
a51 1
The
d53 3
a55 3
function copies up to
.Fa size
- 1 characters from the NUL-terminated string
d59 3
a61 1
NUL-terminating the result.
a62 1
The
d64 1
a64 1
function appends the NUL-terminated string
d69 14
a82 2
.Fa size
- strlen(dst) - 1 bytes, NUL-terminating the result.
d84 16
a99 1
The
a114 2
While this may seem somewhat confusing, it was done to make
truncation detection simple.
d116 5
a120 20
Note, however, that if
.Fn strlcat
traverses
.Fa size
characters without finding a NUL, the length of the string is considered
to be
.Fa size
and the destination string will not be NUL-terminated (since there was
no space for the NUL).
This keeps
.Fn strlcat
from running off the end of a string.
In practice this should not happen (as it means that either
.Fa size
is incorrect or that
.Fa dst
is not a proper
.Dq C
string).
The check exists to prevent potential security problems in incorrect code.
a171 1
The
d175 1
a175 1
functions first appeared in
a177 1
The
d181 1
a181 1
functions were created by
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.18 2005/08/06 03:24:19 jaredy Exp $
d17 1
a17 1
.Dd $Mdocdate$
d179 2
a180 1
.Xr strncpy 3
d188 7
@


1.18
log
@add HISTORY; ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.17 2005/08/06 03:21:36 jaredy Exp $
d17 1
a17 1
.Dd June 22, 1998
@


1.17
log
@- macro, punctuation, and rewording tweaks
- avoid first person.

ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.16 2003/06/17 21:56:24 millert Exp $
d180 7
@


1.16
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.15 2003/04/12 21:56:39 millert Exp $
d52 1
a52 1
Note that you should include a byte for the NUL in
d108 1
a108 1
While this may seem somewhat confusing it was done to make
d111 1
a111 1
Note however, that if
d155 2
a156 2
Since we know how many characters we copied the first time, we can
speed things up a bit by using a copy instead of an append:
@


1.15
log
@Change copyright to a less restrictive ISC-style license to encourage
people to bundle this code.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.14 2002/04/30 16:31:42 mpech Exp $
d9 7
a15 7
.\" THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
.\" FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
.\" OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
@


1.14
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.13 2001/06/18 22:29:59 millert Exp $
a3 1
.\" All rights reserved.
d5 3
a7 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d9 7
a15 10
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
@


1.13
log
@Clarify that if strlcat() does not find a NUL within siz byte it
will not NUL terminate either.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.12 2001/05/07 15:51:54 millert Exp $
d66 1
a66 1
.Fn strlcpy  
@


1.12
log
@Document boundary condition when size < strlen(dst).
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.11 2000/11/16 23:27:41 angelos Exp $
d128 3
a130 1
.Fa size .
@


1.11
log
@"of", not "on" (from Henric Jungheim)
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.10 2000/11/06 01:03:25 aaron Exp $
d121 19
@


1.10
log
@The constant's name is MAXPATHLEN, not MAXPATHNAMELEN; closes PR/1491.
From ianm@@kashmir.cit.nepean.uws.edu.au.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.9 2000/10/18 05:12:07 aaron Exp $
d146 1
a146 1
speed things up a bit by using a copy instead on an append:
@


1.9
log
@Another round of man page cleanup, this time to remove more hard sentence
breaks and getting rid of short lines, making these files easier to work with.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.8 2000/06/01 04:02:05 millert Exp $
d135 1
a135 1
char *dir, *file, pname[MAXPATHNAMELEN];
d148 1
a148 1
char *dir, *file, pname[MAXPATHNAMELEN];
@


1.8
log
@State explicitly that strlc{py,at} only work on real C strings.
Clarify point about always NUL-terminating.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.7 2000/04/21 15:24:20 aaron Exp $
d71 2
a72 1
strings.  This means that for
@


1.7
log
@Flesh out libc string function man pages.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.6 1999/09/04 02:22:46 pjanzen Exp $
d3 1
a3 1
.\" Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
d59 4
a62 1
is larger than 0).
d65 16
@


1.6
log
@Using .Li inside a .Bd -literal block messes up the fonts thereafter;
.Li ... -> \&...
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.5 1999/06/06 15:17:32 aaron Exp $
d46 2
a47 1
functions copy and concatenate strings respectively.  They are designed
d59 2
a60 1
is larger than 0).  Note that you should include a byte for the NUL in
d87 2
a88 2
functions return the total length of the string they tried to
create.  For
@


1.5
log
@some NAME section cleanup
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.4 1999/05/16 19:55:18 alex Exp $
d104 1
a104 1
.Li ...
d115 1
a115 1
.Li ...
d129 1
a129 1
.Li ...
@


1.4
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.3 1998/11/11 17:12:02 espie Exp $
d32 1
a32 1
.Nm strlcpy,
@


1.3
log
@Fix `typo', proves that strlcpy/strlcat is a very good idea.
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.2 1998/07/06 19:17:21 millert Exp $
d146 2
a147 2
.Xr strncpy 3 ,
.Xr strncat 3
@


1.2
log
@strlxx() return size_t not char *
@
text
@d1 1
a1 1
.\" $OpenBSD: strlcpy.3,v 1.1 1998/07/01 01:29:45 millert Exp $
d134 1
a134 1
if (strlcpy(pname + n, file, sizeof(pname)) >= sizeof(pname) - n)
d137 7
@


1.1
log
@add strlcpy/strlcat, safe and sensible string copy/append
@
text
@d1 1
a1 1
.\" $OpenBSD$
d37 1
a37 1
.Ft char *
d39 1
a39 1
.Ft char *
@

