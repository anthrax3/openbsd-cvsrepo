head	1.22;
access;
symbols
	OPENBSD_6_1:1.21.0.18
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.14
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.10
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.12
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.4
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.8
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.6
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.21.0.2
	OPENBSD_5_4_BASE:1.21
	OPENBSD_5_3:1.20.0.8
	OPENBSD_5_3_BASE:1.20
	OPENBSD_5_2:1.20.0.6
	OPENBSD_5_2_BASE:1.20
	OPENBSD_5_1_BASE:1.20
	OPENBSD_5_1:1.20.0.4
	OPENBSD_5_0:1.20.0.2
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.19.0.16
	OPENBSD_4_9_BASE:1.19
	OPENBSD_4_8:1.19.0.14
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.10
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.10
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.8
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.6
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.4
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.4
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.2
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.15.0.8
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.6
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.4
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.15.0.2
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.14.0.4
	OPENBSD_2_9_BASE:1.14
	OPENBSD_2_8:1.14.0.2
	OPENBSD_2_8_BASE:1.14
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.22
date	2017.08.31.10.57.47;	author jca;	state Exp;
branches;
next	1.21;
commitid	8OIiKqDkdxt5rlMs;

1.21
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.20;

1.20
date	2011.07.25.00.38.53;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.20.06.06.48;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.14;

1.14
date	2000.08.09.15.56.44;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.08.09.12.57.54;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.24.16.55.44;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.21.15.24.20;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.11.09.11.20.13;	author art;	state Exp;
branches;
next	1.9;

1.9
date	99.09.21.16.44.01;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	99.07.03.16.21.31;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.03.15.58.50;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.06.29.18.01.34;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.06.04.19.14.56;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.05.23.14.11.03;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.04.28.07.36.55;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.34.27;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.23;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.23;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Mention strtok_r in STANDARDS

POSIX 2001 instead of POSIX.1c suggested by millert@@ and jmc@@, ok jmc@@
@
text
@.\"	$OpenBSD: strtok.3,v 1.21 2013/06/05 03:39:23 tedu Exp $
.\"
.\" Copyright (c) 1988, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt STRTOK 3
.Os
.Sh NAME
.Nm strtok ,
.Nm strtok_r
.Nd string token operations
.Sh SYNOPSIS
.In string.h
.Ft char *
.Fn strtok "char *str" "const char *sep"
.Ft char *
.Fn strtok_r "char *str" "const char *sep" "char **last"
.Sh DESCRIPTION
.Bf -symbolic
This interface is obsoleted by
.Xr strsep 3 .
.Ef
.Pp
The
.Fn strtok
function is used to isolate sequential tokens in a NUL-terminated string,
.Fa str .
These tokens are separated in the string by at least one of the
characters in
.Fa sep .
The first time that
.Fn strtok
is called,
.Fa str
should be specified; subsequent calls, wishing to obtain further tokens
from the same string, should pass a null pointer instead.
The separator string,
.Fa sep ,
must be supplied each time, and may change between calls.
.Pp
The
.Fn strtok_r
function is a version of
.Fn strtok
that takes an explicit context argument and is reentrant.
.Pp
Since
.Fn strtok
and
.Fn strtok_r
modify the string,
.Fa str
should not point to an area in the initialized data segment.
.Sh RETURN VALUES
The
.Fn strtok
and
.Fn strtok_r
functions return a pointer to the beginning of each subsequent token
in the string, after replacing the separator character itself with an
.Tn ASCII NUL
character.
When no more tokens remain, a null pointer is returned.
.Sh EXAMPLES
The following will construct an array of pointers to each individual word in
the string
.Va s :
.Bd -literal -offset indent
#define MAXTOKENS	128

char s[512], *p, *tokens[MAXTOKENS];
char *last;
int i = 0;

snprintf(s, sizeof(s), "cat dog horse cow");

for ((p = strtok_r(s, " ", &last)); p;
    (p = strtok_r(NULL, " ", &last))) {
	if (i < MAXTOKENS - 1)
		tokens[i++] = p;
}
tokens[i] = NULL;
.Ed
.Pp
That is,
.Li tokens[0]
will point to
.Qq cat ,
.Li tokens[1]
will point to
.Qq dog ,
.Li tokens[2]
will point to
.Qq horse ,
and
.Li tokens[3]
will point to
.Qq cow .
.Sh SEE ALSO
.Xr memchr 3 ,
.Xr strchr 3 ,
.Xr strcspn 3 ,
.Xr strpbrk 3 ,
.Xr strrchr 3 ,
.Xr strsep 3 ,
.Xr strspn 3 ,
.Xr strstr 3 ,
.Xr wcstok 3
.Sh STANDARDS
The
.Fn strtok
function conforms to
.St -ansiC .
The
.Fn strtok_r
function conforms to
.St -p1003.1-2001 .
.Sh HISTORY
The
.Fn strtok
function first appeared in
.At III
and was reimplemented for
.Bx 4.3 Tahoe .
The
.Fn strtok_r
function first appeared in
.Nx 1.3
and was reimplemented for
.Ox 2.7 .
.Sh BUGS
The System V
.Fn strtok ,
if handed a string containing only delimiter characters,
will not alter the next starting point, so that a call to
.Fn strtok
with a different (or empty) delimiter string
may return a non-null value.
Since this implementation always alters the next starting point,
such a sequence of calls would always return
.Dv NULL .
@


1.21
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: strtok.3,v 1.20 2011/07/25 00:38:53 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 25 2011 $
d143 4
@


1.20
log
@update HISTORY and SEE ALSO for all of string(3), together with various
smaller improvements; jmc@@ and nicm@@ both ask me to get this in because
further tweaking will be easier in-tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: strtok.3,v 1.19 2007/05/31 19:19:32 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d42 1
a42 1
.Fd #include <string.h>
@


1.19
log
@convert to new .Dd format;
@
text
@d1 2
d34 1
a34 3
.\"	$OpenBSD: strtok.3,v 1.18 2005/02/25 03:12:44 cloder Exp $
.\"
.Dd $Mdocdate$
d76 8
a92 8
.Pp
Since
.Fn strtok
and
.Fn strtok_r
modify the string,
.Fa str
should not point to an area in the initialized data segment.
d136 2
a137 1
.Xr strstr 3
d143 13
@


1.18
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtok.3,v 1.17 2004/01/20 06:06:48 millert Exp $
d34 1
a34 1
.Dd June 29, 1991
@


1.17
log
@Fix the example code.  The loop invariant 'i' was not bound by MAXTOKENS
which could result in writing a NUL byte outside of tokens[].  A fix, from
Patrick Latifi, is to move the increment into the "i < MAXTOKENS - 1" block.
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtok.3,v 1.16 2003/06/02 20:18:38 millert Exp $
d55 1
a55 1
function is used to isolate sequential tokens in a null-terminated string,
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtok.3,v 1.15 2001/08/06 10:42:26 mpech Exp $
d107 1
a107 1
    (p = strtok_r(NULL, " ", &last)), i++) {
d109 1
a109 1
		tokens[i] = p;
@


1.15
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d16 1
a16 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
.\"	$OpenBSD: strtok.3,v 1.14 2000/08/09 15:56:44 aaron Exp $
@


1.14
log
@More of the same.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.13 2000/08/09 12:57:54 aaron Exp $
a96 1
.Pp
@


1.13
log
@Remove trailing blank lines.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.12 2000/04/24 16:55:44 deraadt Exp $
d42 2
a43 1
.Nm strtok, strtok_r
@


1.12
log
@correct example
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.11 2000/04/21 15:24:20 aaron Exp $
a156 1

@


1.11
log
@Flesh out libc string function man pages.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.10 1999/11/09 11:20:13 art Exp $
d110 4
a113 3
for ((p = strtok_r(s, " ", &last)); p; (p = strtok_r(NULL, " ", &last)), i++) {
    if (i < MAXTOKENS - 1)
        tokens[i] = p;
d115 1
a115 1
tokens[i] = '\e0';
@


1.10
log
@Document strtok_r.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.9 1999/09/21 16:44:01 espie Exp $
d58 1
a58 2
function
is used to isolate sequential tokens in a null-terminated string,
d83 2
a84 3
functions
return a pointer to the beginning of each subsequent token in the string,
after replacing the separator character itself with an
d117 3
a119 1
That is, tokens[0] will point to
d121 2
a122 1
tokens[1] will point to
d124 2
a125 1
tokens[2] will point to
d127 3
a129 1
and tokens[3] will point to
d143 1
a143 2
function
conforms to
@


1.9
log
@index/rindex as deprecated synonyms to strchr/strrchr.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.8 1999/07/03 16:21:31 aaron Exp $
d42 1
a42 1
.Nm strtok
d48 2
d75 6
d82 4
a85 2
function
returns a pointer to the beginning of each subsequent token in the string,
d93 3
a95 1
modifies the string,
d107 1
d112 1
a112 1
for ((p = strtok(s, " ")); p; (p = strtok(NULL, " ")), i++) {
a142 2
There is no way to get tokens from multiple strings simultaneously.
.Pp
@


1.8
log
@whoops, fix a bug in my example :)
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.7 1999/07/03 15:58:50 aaron Exp $
a114 1
.Xr index 3 ,
a115 1
.Xr rindex 3 ,
@


1.7
log
@add an example
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.6 1999/06/29 18:01:34 aaron Exp $
d100 1
a100 1
    if (i < MAXTOKENS)
@


1.6
log
@repairs
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.5 1999/06/04 19:14:56 aaron Exp $
d76 2
a77 2
after replacing the separator character itself with a
.Dv NUL
d80 34
d144 1
@


1.5
log
@some repairs, add example to strdup(3) page
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.4 1999/05/23 14:11:03 aaron Exp $
d50 1
a50 1
This interface is obsoleted by 
@


1.4
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.3 1998/04/28 07:36:55 deraadt Exp $
d42 1
a42 2
.Nm strtok ,
.Nm strsep
d106 1
a106 3
may return a
.Pf non- Dv NULL
value.
@


1.3
log
@use Xr more often
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.2 1996/08/19 08:34:27 tholo Exp $
d40 1
a40 1
.Os BSD 3
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d36 1
a36 1
.\"	$OpenBSD: strtok.3,v 1.1.1.1 1995/10/18 08:42:23 deraadt Exp $
d51 2
a52 1
This interface is obsoleted by strsep(3).
@


1.1
log
@Initial revision
@
text
@d36 1
a36 2
.\"     from: @@(#)strtok.3	5.8 (Berkeley) 6/29/91
.\"	$Id: strtok.3,v 1.3 1995/05/13 07:41:35 jtc Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
