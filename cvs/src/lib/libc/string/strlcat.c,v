head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.6
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.6
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.13.0.40
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.38
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.34
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.32
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.30
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.28
	OPENBSD_5_0:1.13.0.26
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.24
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.22
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.18
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.20
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.16
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.14
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.12
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.10
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.8
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.11.0.8
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.6
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.4
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.6
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.18
date	2016.10.16.17.37.39;	author dtucker;	state Exp;
branches;
next	1.17;
commitid	kJsJHw9RVPn8qSrV;

1.17
date	2016.10.14.18.19.04;	author dtucker;	state Exp;
branches;
next	1.16;
commitid	bSnHI7WXBcGpa9XK;

1.16
date	2015.08.31.02.53.57;	author guenther;	state Exp;
branches;
next	1.15;
commitid	lTMF8Y3C9fQGd6jQ;

1.15
date	2015.03.02.21.41.08;	author millert;	state Exp;
branches;
next	1.14;
commitid	EUvEmnMspV8UdITY;

1.14
date	2015.01.15.03.54.12;	author millert;	state Exp;
branches;
next	1.13;
commitid	dx6jav0aq2bmUdtD;

1.13
date	2005.08.08.08.05.37;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.03.30.20.13.52;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.12.21.56.39;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.14.14.35.29;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.13.15.40.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.07.15.42.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2001.05.07.15.18.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.01.13.16.17.24;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.01.12.22.55.23;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2000.11.24.11.10.02;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	99.06.17.16.28.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.07.01.01.29.45;	author millert;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Roll back uintptr_t cast changes after discussions with tedu, otto and
others.

C11 6.5.6.9 says:
When two pointers are subtracted, both shall point to elements of the
same array object, or one past the last element of the array object; the
result is the difference of the subscripts of the two array elements.

In these cases the objects are arrays of char so the result is defined,
and we believe that the report is based on a compiler incorrectly trapping
on defined behaviour.
@
text
@/*	$OpenBSD: strlcat.c,v 1.16 2015/08/31 02:53:57 guenther Exp $	*/

/*
 * Copyright (c) 1998, 2015 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <sys/types.h>
#include <string.h>

/*
 * Appends src to string dst of size dsize (unlike strncat, dsize is the
 * full size of dst, not space left).  At most dsize-1 characters
 * will be copied.  Always NUL terminates (unless dsize <= strlen(dst)).
 * Returns strlen(src) + MIN(dsize, strlen(initial dst)).
 * If retval >= dsize, truncation occurred.
 */
size_t
strlcat(char *dst, const char *src, size_t dsize)
{
	const char *odst = dst;
	const char *osrc = src;
	size_t n = dsize;
	size_t dlen;

	/* Find the end of dst and adjust bytes left but don't go past end. */
	while (n-- != 0 && *dst != '\0')
		dst++;
	dlen = dst - odst;
	n = dsize - dlen;

	if (n-- == 0)
		return(dlen + strlen(src));
	while (*src != '\0') {
		if (n != 0) {
			*dst++ = *src;
			n--;
		}
		src++;
	}
	*dst = '\0';

	return(dlen + (src - osrc));	/* count does not include NUL */
}
DEF_WEAK(strlcat);
@


1.17
log
@Cast pointers to uintptr_t to avoid potential signedness errors.
Based on patch from yuanjie.huang at windriver.com via OpenSSH bz#2608,
with & ok millert, ok deraadt.
@
text
@a20 1
#include <stdint.h>
d40 1
a40 1
	dlen = (uintptr_t)dst - (uintptr_t)odst;
d54 1
a54 6
        /*
	 * Cast pointers to unsigned type before calculation, to avoid signed
	 * overflow when the string ends where the MSB has changed.
	 * Return value does not include NUL.
	 */
	return (dlen + ((uintptr_t)src - (uintptr_t)osrc));
@


1.16
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.15 2015/03/02 21:41:08 millert Exp $	*/
d21 1
d41 1
a41 1
	dlen = dst - odst;
d55 6
a60 1
	return(dlen + (src - osrc));	/* count does not include NUL */
@


1.15
log
@Update comment to match code; Caspar Schutijser
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.14 2015/01/15 03:54:12 millert Exp $	*/
d56 1
@


1.14
log
@Make strlcpy/strlcat slightly easier to read.
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.13 2005/08/08 08:05:37 espie Exp $	*/
d27 1
a27 1
 * If retval >= siz, truncation occurred.
@


1.13
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.12 2005/03/30 20:13:52 otto Exp $	*/
d4 1
a4 1
 * Copyright (c) 1998 Todd C. Miller <Todd.Miller@@courtesan.com>
d23 4
a26 4
 * Appends src to string dst of size siz (unlike strncat, siz is the
 * full size of dst, not space left).  At most siz-1 characters
 * will be copied.  Always NUL terminates (unless siz <= strlen(dst)).
 * Returns strlen(src) + MIN(siz, strlen(initial dst)).
d30 1
a30 1
strlcat(char *dst, const char *src, size_t siz)
d32 3
a34 3
	char *d = dst;
	const char *s = src;
	size_t n = siz;
d37 11
a47 11
	/* Find the end of dst and adjust bytes left but don't go past end */
	while (n-- != 0 && *d != '\0')
		d++;
	dlen = d - dst;
	n = siz - dlen;

	if (n == 0)
		return(dlen + strlen(s));
	while (*s != '\0') {
		if (n != 1) {
			*d++ = *s;
d50 1
a50 1
		s++;
d52 1
a52 1
	*d = '\0';
d54 1
a54 1
	return(dlen + (s - src));	/* count does not include NUL */
@


1.12
log
@ansify + deregister. no binary change on i386. ok deraadt@@ pat@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $	*/
a17 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: strlcat.c,v 1.11 2003/06/17 21:56:24 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.11
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.10 2003/04/12 21:56:39 millert Exp $	*/
d20 1
a20 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.10 2003/04/12 21:56:39 millert Exp $";
d36 3
a38 3
	register char *d = dst;
	register const char *s = src;
	register size_t n = siz;
@


1.10
log
@Change copyright to a less restrictive ISC-style license to encourage
people to bundle this code.
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.9 2003/03/14 14:35:29 millert Exp $	*/
d10 7
a16 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d20 1
a20 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.9 2003/03/14 14:35:29 millert Exp $";
@


1.9
log
@ANSI function headers
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.8 2001/05/13 15:40:15 deraadt Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.8 2001/05/13 15:40:15 deraadt Exp $";
@


1.8
log
@type of function on seperate line
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.7 2001/05/07 15:42:46 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.7 2001/05/07 15:42:46 millert Exp $";
d45 1
a45 4
strlcat(dst, src, siz)
	char *dst;
	const char *src;
	size_t siz;
@


1.7
log
@Back out last change, it is intended behavior and update the block
comment to reflect this fact.  Too early in the morning for me I guess.
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.6 2001/05/07 15:18:30 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.6 2001/05/07 15:18:30 millert Exp $";
d44 2
a45 1
size_t strlcat(dst, src, siz)
@


1.6
log
@strlcat() should return strlen(dst) + strlen(src) when size parameter
<= strlen(dst).  Bug report by mark.murnane@@ireland.sun.com via the
GNOME folks.
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.5 2001/01/13 16:17:24 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.5 2001/01/13 16:17:24 millert Exp $";
d41 2
a42 2
 * Returns strlen(initial dst) + strlen(src); if retval >= siz,
 * truncation occurred.
d61 1
a61 1
		return(strlen(dst) + strlen(s));
@


1.5
log
@Sync function comment with man page; fanf@@covalent.net
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.4 2001/01/12 22:55:23 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.4 2001/01/12 22:55:23 millert Exp $";
d61 1
a61 1
		return(dlen + strlen(s));
@


1.4
log
@Reverse the order of two loop invariant to make 'strlcat(0, "foo", 0)'
not get a SEGV; Richard Kettlewell <rjk@@greenend.org.uk>
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.3 2000/11/24 11:10:02 itojun Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.3 2000/11/24 11:10:02 itojun Exp $";
d40 1
a40 1
 * will be copied.  Always NUL terminates (unless siz == 0).
@


1.3
log
@comment fix; strlcat returns strlen(initial dst) + strlen(src).
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.2 1999/06/17 16:28:58 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.2 1999/06/17 16:28:58 millert Exp $";
d55 1
a55 1
	while (*d != '\0' && n-- != 0)
@


1.2
log
@When finding the end of dst, never traverse more than siz bytes.  This
keeps us from misbehaving if the user gives us a src string that is not
NUL-terminated.  This is one of those "should not happen" cases but it
is good to play it safe.  Pointed out by Casper Dik <casper@@holland.sun.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: strlcat.c,v 1.1 1998/07/01 01:29:45 millert Exp $	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD: strlcat.c,v 1.1 1998/07/01 01:29:45 millert Exp $";
d41 2
a42 1
 * Returns strlen(src); if retval >= siz, truncation occurred.
@


1.1
log
@add strlcpy/strlcat, safe and sensible string copy/append
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d31 1
a31 1
static char *rcsid = "$OpenBSD$";
d53 2
a54 2
	/* Find the end of dst and adjust bytes left */
	while (*d != '\0' && n != 0)
d57 1
a57 1
	n -= dlen;
@

