head	1.21;
access;
symbols
	OPENBSD_6_1:1.21.0.14
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.10
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.6
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.21.0.8
	OPENBSD_5_8_BASE:1.21
	OPENBSD_5_7:1.21.0.2
	OPENBSD_5_7_BASE:1.21
	OPENBSD_5_6:1.21.0.4
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.16.0.8
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.6
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.4
	OPENBSD_5_0:1.16.0.2
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.6
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.4
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.11.0.4
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.10
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.8
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.5.0.2
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.21
date	2014.04.19.11.30.40;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2013.12.19.20.52.37;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2013.09.25.21.49.31;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.16;

1.16
date	2011.07.25.00.38.53;	author schwarze;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.32;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2005.08.06.03.21.36;	author jaredy;	state Exp;
branches;
next	1.13;

1.13
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.13.17.04.43;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.21.15.24.20;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.06.29.18.01.33;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.06.06.15.17.32;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.06.04.19.14.56;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.11.03;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.03.06.23.36.27;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.03.05.23.16.05;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.11.28.14.51.34;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.34.13;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.22;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.22;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Use somewhat harsher language and better examples; demonstrate that
non-dangerous use functions is difficult.
ok guenther
@
text
@.\"	$OpenBSD: strcpy.3,v 1.20 2013/12/19 20:52:37 millert Exp $
.\"
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 19 2013 $
.Dt STRCPY 3
.Os
.Sh NAME
.Nm strcpy
.Nd copy a string without bounds checking
.Sh SYNOPSIS
.In string.h
.Ft char *
.Fn strcpy "char *dst" "const char *src"
.Sh DESCRIPTION
The
.Fn strcpy
function copies the string
.Fa src
(including the terminating
.Ql \e0
character) to the buffer
.Fa dst .
.Pp
No bounds checking is performed.
If the buffer
.Fa dst
is not large enough to hold the result,
subsequent memory will be damaged.
.Pp
If the
.Fa src
string is inside the
.Fa dst
buffer, the behavior is undefined.
.Sh RETURN VALUES
The
.Fn strcpy
function returns
.Fa dst .
.Sh SEE ALSO
.Xr strlcpy 3 ,
.Xr wcscpy 3 ,
.Xr wcslcpy 3
.Sh STANDARDS
The
.Fn strcpy
function conforms to
.St -ansiC .
.Sh HISTORY
The
.Fn strcpy
function first appeared in the Programmer's Workbench (PWB/UNIX)
and was ported to
.At v7 .
@


1.20
log
@Split out strncpy and strncat from strcpy and strcat manuals.
Requested by deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strcpy.3,v 1.19 2013/09/25 21:49:31 millert Exp $
d34 1
a34 1
.Dd $Mdocdate: September 25 2013 $
d39 1
a39 1
.Nd copy a string
a48 2
to
.Fa dst
d51 5
a55 2
character).
The string
d57 2
a58 3
must be at least as large as
.Fa src
to hold the result.
d62 1
a62 1
and
d64 1
a64 1
strings overlap, the behavior is undefined.
a70 5
.Xr bcopy 3 ,
.Xr memccpy 3 ,
.Xr memcpy 3 ,
.Xr memmove 3 ,
.Xr strcat 3 ,
a71 1
.Xr strncpy 3 ,
d77 1
a77 3
and
.Fn strncpy
functions conform to
@


1.19
log
@According to POSIX, if the src and dst strings overlap, the behavior
is undefined.  Add a warning to that effect.  OK deraadt@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strcpy.3,v 1.18 2013/07/17 05:42:11 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 17 2013 $
d38 2
a39 3
.Nm strcpy ,
.Nm strncpy
.Nd copy strings
a43 2
.Ft char *
.Fn strncpy "char *dst" "const char *src" "size_t len"
d47 1
a47 3
and
.Fn strncpy
functions copy the string
d54 1
a54 16
.Pp
The
.Fn strncpy
function copies not more than
.Fa len
characters into
.Fa dst ,
appending
.Ql \e0
characters if
.Fa src
is less than
.Fa len
characters long, and
.Em not
terminating
d56 1
a56 1
if the length of
d58 1
a58 2
is greater than or equal to
.Fa len .
d68 1
a68 3
and
.Fn strncpy
functions return
a69 53
.Sh EXAMPLES
The following sets
.Va chararray
to
.Dq abc\e0\e0\e0 :
.Bd -literal -offset indent
(void)strncpy(chararray, "abc", 6);
.Ed
.Pp
The following sets
.Va chararray
to
.Dq abcdef
and does
.Em not
NUL terminate
.Va chararray
because the length of the source string is greater than or equal to the
length parameter.
.Fn strncpy
.Em only
NUL terminates the destination string when the length of the source
string is less than the length parameter.
.Bd -literal -offset indent
(void)strncpy(chararray, "abcdefgh", 6);
.Ed
.Pp
The following copies as many characters from
.Va input
to
.Va buf
as will fit and NUL terminates the result.
Because
.Fn strncpy
does
.Em not
guarantee to NUL terminate the string itself, it must be done by hand.
.Bd -literal -offset indent
char buf[BUFSIZ];

(void)strncpy(buf, input, sizeof(buf) - 1);
buf[sizeof(buf) - 1] = '\e0';
.Ed
.Pp
Note that
.Xr strlcpy 3
is a better choice for this kind of operation.
The equivalent using
.Xr strlcpy 3
is simply:
.Bd -literal -offset indent
(void)strlcpy(buf, input, sizeof(buf));
.Ed
d77 1
a91 3
.At v7 ;
.Fn strncpy
first appeared in
@


1.18
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: strcpy.3,v 1.17 2013/06/05 03:39:23 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2013 $
d80 6
@


1.17
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: strcpy.3,v 1.16 2011/07/25 00:38:53 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 25 2011 $
d159 3
a161 1
and
d163 1
a163 1
functions first appeared in
@


1.16
log
@update HISTORY and SEE ALSO for all of string(3), together with various
smaller improvements; jmc@@ and nicm@@ both ask me to get this in because
further tweaking will be easier in-tree
@
text
@d1 1
a1 1
.\"	$OpenBSD: strcpy.3,v 1.15 2007/05/31 19:19:32 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d42 1
a42 1
.Fd #include <string.h>
@


1.15
log
@convert to new .Dd format;
@
text
@d1 2
d34 1
a34 3
.\"	$OpenBSD: strcpy.3,v 1.14 2005/08/06 03:21:36 jaredy Exp $
.\"
.Dd $Mdocdate$
d60 1
d62 1
a62 1
copies not more than
d145 4
a148 1
.Xr strlcpy 3
d156 7
@


1.14
log
@- macro, punctuation, and rewording tweaks
- avoid first person.

ok jmc
@
text
@d32 1
a32 1
.\"	$OpenBSD: strcpy.3,v 1.13 2005/02/25 03:12:44 cloder Exp $
d34 1
a34 1
.Dd June 29, 1991
@


1.13
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d32 1
a32 1
.\"	$OpenBSD: strcpy.3,v 1.12 2003/06/02 20:18:38 millert Exp $
d103 2
a104 1
because the source string is >= the length parameter.
d122 1
a122 1
guarantee to NUL terminate the string itself, we must do this by hand.
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d32 1
a32 1
.\"	$OpenBSD: strcpy.3,v 1.11 2002/05/13 17:04:43 millert Exp $
d101 1
a101 1
null terminate
d106 1
a106 1
null terminates the destination string when the length of the source
d116 1
a116 1
as will fit and null terminates the result.
d121 1
a121 1
guarantee to null terminate the string itself, we must do this by hand.
@


1.11
log
@For strncpy(), dst is not NUL terminated if strlen(src) >= len.
Also fix a typo; adapted from a patch by Moritz Jodeit
@
text
@d16 1
a16 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
.\"	$OpenBSD: strcpy.3,v 1.10 2000/04/21 15:24:20 aaron Exp $
@


1.10
log
@Flesh out libc string function man pages.
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.9 1999/06/29 18:01:33 aaron Exp $
d79 1
a79 1
if
d81 2
a82 3
is more than
.Fa len
characters long.
d110 1
a110 1
null terminates the destination string when then length of the source
@


1.9
log
@repairs
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.8 1999/06/06 15:17:32 aaron Exp $
d56 1
a56 2
functions
copy the string
d89 1
a89 2
functions
return
d121 2
a122 1
as will fit and null terminates the result.  Because
d136 2
a137 1
is a better choice for this kind of operation.  The equivalent using
d154 1
a154 2
functions
conform to
@


1.8
log
@some NAME section cleanup
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.7 1999/06/04 19:14:56 aaron Exp $
d95 1
a95 1
.Dq Li chararray
d97 1
a97 1
.Dq Li abc\e0\e0\e0 :
d103 1
a103 1
.Dq Li chararray
d105 1
a105 1
.Dq Li abcdef
d108 3
a110 1
null terminate chararray because the source string is >= the length parameter.
d120 1
a120 1
.Dq Li input
d122 1
a122 1
.Dq Li buf
d148 1
a148 1
.Xr strlcpy 3 
@


1.7
log
@some repairs, add example to strdup(3) page
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.6 1999/05/23 14:11:03 aaron Exp $
d42 1
a42 1
.Nm strcpy,
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.5 1999/03/06 23:36:27 millert Exp $
d42 2
a43 1
.Nm strcpy
a64 1
The
d108 1
a108 1
NUL-terminate chararray because the source string is >= the length parameter.
d111 1
a111 1
NUL-terminates the destination string when then length of the source
d121 1
a121 1
as will fit and NUL-terminates the result.  Because
d125 1
a125 1
guarantee to NUL-terminate the string itself, we must do this by hand.
@


1.5
log
@typo
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.4 1999/03/05 23:16:05 millert Exp $
d40 1
a40 1
.Os BSD 4
@


1.4
log
@better examples section wrt strncpy()
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.3 1998/11/28 14:51:34 espie Exp $
d130 1
a130 1
buf[sizeof(buf) - 1] = '\\0';
d139 1
a139 1
(void)strncpy(buf, input, sizeof(buf));
@


1.3
log
@.Xr strlcat, strlcpy
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.2 1996/08/19 08:34:13 tholo Exp $
d99 1
a99 1
(void)strncpy(chararray, "abc", 6).
d105 8
a112 1
.Dq Li abcdef :
d115 25
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d36 1
a36 1
.\"	$OpenBSD: strcpy.3,v 1.1.1.1 1995/10/18 08:42:22 deraadt Exp $
d113 2
a114 1
.Xr memmove 3
@


1.1
log
@Initial revision
@
text
@d36 1
a36 2
.\"     from: @@(#)strcpy.3	5.4 (Berkeley) 6/29/91
.\"	$Id: strcpy.3,v 1.2 1993/08/01 07:43:51 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
