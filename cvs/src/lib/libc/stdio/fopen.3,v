head	1.32;
access;
symbols
	OPENBSD_6_1:1.32.0.12
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.32.0.8
	OPENBSD_6_0_BASE:1.32
	OPENBSD_5_9:1.32.0.4
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.32.0.6
	OPENBSD_5_8_BASE:1.32
	OPENBSD_5_7:1.32.0.2
	OPENBSD_5_7_BASE:1.32
	OPENBSD_5_6:1.27.0.8
	OPENBSD_5_6_BASE:1.27
	OPENBSD_5_5:1.27.0.6
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.27.0.2
	OPENBSD_5_4_BASE:1.27
	OPENBSD_5_3:1.26.0.2
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.25.0.4
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.2
	OPENBSD_5_0:1.23.0.2
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.22.0.4
	OPENBSD_4_9_BASE:1.22
	OPENBSD_4_8:1.22.0.2
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.21.0.2
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.20.0.12
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.8
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.6
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.4
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.2
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.16.0.8
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.16.0.6
	OPENBSD_3_6_BASE:1.16
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.4
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.13.0.2
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.12.0.4
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.2
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.32
date	2015.01.15.19.20.59;	author schwarze;	state Exp;
branches;
next	1.31;
commitid	ULOko59g1vrk9TNA;

1.31
date	2015.01.13.14.02.30;	author schwarze;	state Exp;
branches;
next	1.30;
commitid	vuDIxCTQQireD6ui;

1.30
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.29;
commitid	HuCemPIiOkto0SJD;

1.29
date	2014.08.31.06.36.30;	author jmc;	state Exp;
branches;
next	1.28;
commitid	Uj9lgYoKH3BtNCeH;

1.28
date	2014.08.31.02.21.18;	author guenther;	state Exp;
branches;
next	1.27;
commitid	ByaPhxsk4NZYxbFu;

1.27
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.26;

1.26
date	2012.10.03.06.27.14;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2012.01.22.13.02.45;	author schwarze;	state Exp;
branches;
next	1.24;

1.24
date	2012.01.15.21.03.05;	author schwarze;	state Exp;
branches;
next	1.23;

1.23
date	2011.05.02.11.14.11;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2010.03.26.19.30.41;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2009.09.10.16.09.22;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2005.11.14.23.57.35;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.07.26.03.30.25;	author jaredy;	state Exp;
branches;
next	1.17;

1.17
date	2005.07.26.03.06.09;	author jaredy;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.04.22.18.29.09;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.06.20.48.35;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2001.12.07.23.07.35;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2001.02.12.16.08.43;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.12.24.00.30.58;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.18.14.33.36;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.20.01.39.31;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.12.21.48.01;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.09.28.22.17.51;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	99.09.26.14.54.10;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	99.05.24.16.37.16;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	96.12.04.02.14.27;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.11.19.23.44.28;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.32.39;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.12;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.12;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.32
log
@typo; from Kaspars at Bankovskis dot net
@
text
@.\"	$OpenBSD: fopen.3,v 1.31 2015/01/13 14:02:30 schwarze Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: January 13 2015 $
.Dt FOPEN 3
.Os
.Sh NAME
.Nm fopen ,
.Nm fdopen ,
.Nm freopen
.Nd stream open functions
.Sh SYNOPSIS
.In stdio.h
.Ft FILE *
.Fn fopen "const char *path" "const char *mode"
.Ft FILE *
.Fn fdopen "int fildes" "const char *mode"
.Ft FILE *
.Fn freopen "const char *path" "const char *mode" "FILE *stream"
.Sh DESCRIPTION
The
.Fn fopen
function opens the file whose name is the string pointed to by
.Fa path
and associates a stream with it.
.Pp
The argument
.Fa mode
points to a string beginning with one of the following
sequences (additional characters may follow these sequences):
.Bl -tag -width indent
.It Do Li r Dc or Do Li rb Dc
Open file for reading.
.It Do Li r+ Dc or Do Li rb+ Dc or Do Li r+b Dc
Open for reading and writing.
.It Do Li w Dc or Do Li wb Dc
Open for writing.
The file is created if it does not exist, otherwise it is truncated.
.It Do Li w+ Dc or Do Li wb+ Dc or Do Li w+b Dc
Open for reading and writing.
The file is created if it does not exist, otherwise it is truncated.
.It Do Li a Dc or Do Li ab Dc
Open for writing.
The file is created if it does not exist.
.It Do Li a+ Dc or Do Li ab+ Dc or Do Li a+b Dc
Open for reading and writing.
The file is created if it does not exist.
.El
.Pp
The letter
.Dq b
in the
.Fa mode
strings above is strictly for compatibility with
.St -ansiC
and has no effect; the
.Dq b
is ignored.
.Pp
After any of the above prefixes, the
.Fa mode
string can also include zero or more of the following:
.Bl -tag -width indent
.It Dq Li e
The close-on-exec flag is set on the underlying file descriptor of the new
.Vt FILE .
.It Dq Li x
If the
.Fa mode
string starts with
.Dq w
or
.Dq a
then the function shall fail if the file specified by
.Fa path
already exists, as if the
.Dv O_EXCL
flag was passed to the
.Xr open 2
function.
It has no effect if used with
.Fn fdopen
or the
.Fa mode
string begins with
.Dq r .
.El
.Pp
The
.Fn fopen
and
.Fn freopen
functions initially position the stream at the start of the file
unless the file is opened in append mode
.Po
.Sq a
or
.Sq a+
.Pc ,
in which case the stream is initially positioned at the end of the file.
.Pp
Opening a file in append mode causes all subsequent writes to it
to be forced to the current end-of-file, regardless of intervening
repositioning of the stream.
.Pp
Any created files will have mode
.Qq Dv S_IRUSR | S_IWUSR | S_IRGRP | S_IWGRP | S_IROTH | S_IWOTH
.Pq Li 0666 ,
as modified by the process'
umask value (see
.Xr umask 2 ) .
.Pp
Reads and writes cannot be arbitrarily intermixed on read/write streams.
ANSI C requires that
a file positioning function intervene between output and input, unless
an input operation encounters end-of-file.
.Pp
The
.Fn fdopen
function associates a stream with the existing file descriptor
.Fa fildes .
The
.Fa mode
of the stream must be compatible with the mode of the file descriptor.
The stream is positioned at the file offset of the file descriptor.
If
.Fn fdopen
fails, the file descriptor
.Fa fildes
is not affected in any way.
.Pp
The
.Fn freopen
function opens the file whose name is the string pointed to by
.Fa path
and associates the stream pointed to by
.Fa stream
with it.
The original stream (if it exists) is always closed, even if
.Fn freopen
fails.
The
.Fa mode
argument is used just as in the
.Fn fopen
function.
The primary use of the
.Fn freopen
function is to change the file associated with a standard text stream
.Pf ( Em stderr ,
.Em stdin ,
or
.Em stdout ) .
.Sh RETURN VALUES
Upon successful completion,
.Fn fopen ,
.Fn fdopen ,
and
.Fn freopen
return a
.Vt FILE
pointer.
Otherwise,
.Dv NULL
is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa mode
provided to
.Fn fopen ,
.Fn fdopen ,
or
.Fn freopen
was invalid.
.El
.Pp
The
.Fn fopen ,
.Fn fdopen
and
.Fn freopen
functions may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr malloc 3 .
.Pp
The
.Fn fopen
function may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr open 2 .
.Pp
The
.Fn fdopen
function may also fail and set
.Va errno
for any of the errors specified for the routine
.Xr fcntl 2 .
.Pp
The
.Fn freopen
function may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr open 2 ,
.Xr fclose 3 ,
and
.Xr fflush 3 .
.Sh SEE ALSO
.Xr open 2 ,
.Xr fclose 3 ,
.Xr fseek 3 ,
.Xr funopen 3
.Sh STANDARDS
The
.Fn fopen
and
.Fn freopen
functions conform to
.St -ansiC .
The
.Fn fdopen
function conforms to
.St -p1003.1-88 .
.Sh HISTORY
The
.Fn fopen
function first appeared in
.At v1 .
The
.Fn fdopen
and
.Fn freopen
functions first appeared in
.At v7 .
.Pp
Opening a file for both reading and writing has been possible since
.Bx 2 .
.Pp
Support for the
.Dq e
and
.Dq x
mode letters appeared in
.Ox 5.7 .
.Sh AUTHORS
.An Dennis Ritchie
originally implemented
.Fn fopen
in PDP-11 assembler.
.An Keith Sklower
first implemented read-write access.
.Sh CAVEATS
Proper code using
.Fn fdopen
with error checking should
.Xr close 2
.Fa fildes
in case of failure, and
.Xr fclose 3
the resulting
.Vt FILE *
in case of success.
.Bd -literal
	FILE *file;
	int fd;

	if ((file = fdopen(fd, "r")) != NULL) {
		/* perform operations on the FILE * */
		fclose(file);
	} else {
		/* failure, report the error */
		close(fd);
	}
.Ed
@


1.31
log
@remove .Tn from stdio manuals; Kaspars Bankovskis found one of these
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.30 2014/11/15 14:41:02 bentley Exp $
d34 1
a34 1
.Dd $Mdocdate: November 15 2014 $
d104 1
a104 1
then the function shall fail if file
d106 1
a106 1
already exist, as if the
@


1.30
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.29 2014/08/31 06:36:30 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: August 31 2014 $
d144 1
a144 2
.Tn ANSI C
requires that
@


1.29
log
@provide section numbers for xrs;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.28 2014/08/31 02:21:18 guenther Exp $
d80 3
a82 1
The letter ``b'' in the
d86 3
a88 1
and has no effect; the ``b'' is ignored.
@


1.28
log
@Add additional userland interfaces for setting close-on-exec on fds
when creating them: mkostemp(), mkostemps(), the 'e' mode letter for
fopen(), freopen(), fdopen(), and popen().  The close-on-exec flag will
be cleared by the action created by posix_spawn_file_actions_adddup2().

Also, add support for the C11 'x' mode letter for fopen() and freopen(),
setting O_EXCL when possibly creating files.

Note: this requires kernel support for pipe2() and dup3()!

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.27 2013/06/05 03:39:23 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2013 $
d105 1
a105 1
.Xr open
@


1.27
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.26 2012/10/03 06:27:14 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: October 3 2012 $
d62 1
a62 1
.It Dq Li r
d64 1
a64 1
.It Dq Li r+
d66 1
a66 1
.It Dq Li w
d69 1
a69 1
.It Dq Li w+
d72 1
a72 1
.It Dq Li a
d75 1
a75 1
.It Dq Li a+
d80 1
a80 1
The
d82 1
a82 4
string can also include the letter ``b'' either as the last character or
as a character between the characters in any of the two-character strings
described above.
This is strictly for compatibility with
d86 29
d271 7
@


1.26
log
@tweak text for consistency; from artturi alm
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.25 2012/01/22 13:02:45 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: January 22 2012 $
d43 1
a43 1
.Fd #include <stdio.h>
@


1.25
log
@Credit Keith Sklower and 2BSD for the first implementation of read-write
access; information found in the 2bsd directory of the CSRG archive CDs.
feedback and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.24 2012/01/15 21:03:05 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: January 15 2012 $
d67 2
a68 1
Truncate file to zero length or create text file for writing.
@


1.24
log
@Document early history of a few functions specifically mentioned in 2BSD
manuals; however, it turned out all of these actually predate 2BSD.
All information from http://minnie.tuhs.org/cgi-bin/utree.pl.
ok jmc@@ sobrado@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.23 2011/05/02 11:14:11 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 2 2011 $
d241 3
d249 2
@


1.23
log
@no need to escape `|'; as discussed with schwartze
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.22 2010/03/26 19:30:41 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: March 26 2010 $
d230 16
@


1.22
log
@dispense with some wacky escape sequences;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.21 2009/09/10 16:09:22 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: September 10 2009 $
d106 1
a106 11
.Pf \*q Dv S_IRUSR
\&|
.Dv S_IWUSR
\&|
.Dv S_IRGRP
\&|
.Dv S_IWGRP
\&|
.Dv S_IROTH
\&|
.Dv S_IWOTH Ns \*q
@


1.21
log
@cvs log message from ed@@freebsd, revision 197045:

	Make the description of `b' a little better.

	If you have a one-byte sequence, `w', `b' is the second
	character. Not the third.

	Submitted by: Christoph Mallon

checked by otto
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.20 2007/05/31 19:19:31 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d106 1
a106 1
.Pf \\*q Dv S_IRUSR
d116 1
a116 1
.Dv S_IWOTH Ns \\*q
@


1.20
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.19 2005/11/14 23:57:35 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate$
d81 1
a81 1
string can also include the letter ``b'' either as a third character or
@


1.19
log
@clarify the description of append mode;

this comes originally from a mail from mpech@@;
ok otto@@, and no one else objected;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.18 2005/07/26 03:30:25 jaredy Exp $
d34 1
a34 1
.Dd June 4, 1993
@


1.18
log
@- typos, punctuation, spacing, macro, layout, etc. fixes
- avoid first person

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.17 2005/07/26 03:06:09 jaredy Exp $
d93 6
a98 1
unless the file is opened in append mode,
@


1.17
log
@- simplify descriptions of stream positioning in various open modes
- mention that append mode always forces the stream position to EOF
  on writes

from NetBSD -r 1.9

ok millert, jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.16 2003/06/02 20:18:37 millert Exp $
d162 1
a162 1
.Fn fdopen
d166 1
a166 1
.Tn FILE
d216 1
a216 1
.Xr fclose 3
d243 3
a245 1
the resulting FILE * in case of success.
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.15 2003/04/22 18:29:09 millert Exp $
d63 1
a63 2
Open text file for reading.
The stream is positioned at the beginning of the file.
a65 1
The stream is positioned at the beginning of the file.
a67 1
The stream is positioned at the beginning of the file.
a70 1
The stream is positioned at the beginning of the file.
a73 1
The stream is positioned at the end of the file.
a76 1
The stream is positioned at the end of the file.
d88 12
d130 1
@


1.15
log
@char * in prototypes should be const; Kamo Hiroyasu
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.14 2003/03/06 20:48:35 jmc Exp $
d18 1
a18 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@.Xr typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.13 2001/12/07 23:07:35 millert Exp $
d49 1
a49 1
.Fn fopen "char *path" "char *mode"
d51 1
a51 1
.Fn fdopen "int fildes" "char *mode"
d53 1
a53 1
.Fn freopen "char *path" "char *mode" "FILE *stream"
@


1.13
log
@missing comma
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.12 2001/02/12 16:08:43 aaron Exp $
d147 1
a147 1
.Xr fopen
@


1.12
log
@capitalization
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.11 2000/12/24 00:30:58 aaron Exp $
d157 1
a157 1
Upon successful completion
@


1.11
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.10 2000/10/18 14:33:36 aaron Exp $
d64 1
a64 1
sequences (Additional characters may follow these sequences.):
@


1.10
log
@fdopen(3) takes two args, not one; spotted by fries@@. Also, move the CAVEATS
section to the end like most man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.9 2000/04/20 01:39:31 aaron Exp $
d57 1
a57 2
function
opens the file whose name is the string pointed to by
d136 1
a136 2
function
opens the file whose name is the string pointed to by
d151 1
a151 3
function
is to change the file associated with a
standard text stream
d188 1
a188 2
functions
may also fail and set
d195 1
a195 2
function
may also fail and set
d202 1
a202 2
function
may also fail and set
d209 1
a209 2
function
may also fail and set
d226 1
a226 2
functions
conform to
d230 1
a230 2
function
conforms to
@


1.9
log
@Flesh out all of the stdio man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.8 2000/04/12 21:48:01 aaron Exp $
d224 18
d255 1
a255 1
	if ((file = fdopen(fd)) != NULL) {
a262 18
.Sh SEE ALSO
.Xr open 2 ,
.Xr fclose 3 ,
.Xr fseek 3 ,
.Xr funopen 3
.Sh STANDARDS
The
.Fn fopen
and
.Fn freopen
functions
conform to
.St -ansiC .
The
.Fn fdopen
function
conforms to
.St -p1003.1-88 .
@


1.8
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.7 1999/09/28 22:17:51 espie Exp $
a223 18
.Sh SEE ALSO
.Xr open 2 ,
.Xr fclose 3 ,
.Xr fseek 3 ,
.Xr funopen 3
.Sh STANDARDS
The
.Fn fopen
and
.Fn freopen
functions
conform to
.St -ansiC .
The
.Fn fdopen
function
conforms to
.St -p1003.1-88 .
d245 18
a262 1
		
@


1.7
log
@Nail down semantics in case of failure.
example for fdopen.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.6 1999/09/26 14:54:10 espie Exp $
d129 1
a129 1
If 
d143 2
a144 2
The original stream (if it exists) is always closed, even if 
.Fn freopen 
d244 1
a244 1
.Fn fdopen 
d248 1
a248 1
in case of failure, and 
@


1.6
log
@Remove extraneous comma
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.5 1999/05/24 16:37:16 aaron Exp $
d129 5
d143 3
a145 1
The original stream (if it exists) is closed.
d242 22
@


1.5
log
@don't lie about being able to arbitrarily intermix reads and writes in stdio
file streams; gson@@araneus.fi - NetBSD PR/6072
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.4 1996/12/04 02:14:27 deraadt Exp $
d124 1
a124 1
function associates a stream with the existing file descriptor,
@


1.4
log
@formatting error
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.3 1996/11/19 23:44:28 millert Exp $
d116 1
a116 4
Reads and writes may be intermixed on read/write streams in any order,
and do not require an intermediate seek as in previous versions of
.Em stdio .
This is not portable to other systems, however;
@


1.3
log
@Formatting error spotted by Theo
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.2 1996/08/19 08:32:39 tholo Exp $
d76 1
a76 1
.No Dq Li w+
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: fopen.3,v 1.4 1995/02/02 01:15:39 jtc Exp $
d76 1
a76 1
.No It Dq Li w+
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: fopen.3,v 1.4 1995/02/02 01:15:39 jtc Exp $
a36 2
.\"
.\"     @@(#)fopen.3	8.1 (Berkeley) 6/4/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
