head	1.31;
access;
symbols
	OPENBSD_6_2_BASE:1.31
	OPENBSD_6_1:1.31.0.14
	OPENBSD_6_1_BASE:1.31
	OPENBSD_6_0:1.31.0.10
	OPENBSD_6_0_BASE:1.31
	OPENBSD_5_9:1.31.0.6
	OPENBSD_5_9_BASE:1.31
	OPENBSD_5_8:1.31.0.8
	OPENBSD_5_8_BASE:1.31
	OPENBSD_5_7:1.31.0.2
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.31.0.4
	OPENBSD_5_6_BASE:1.31
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.2
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.25.0.2
	OPENBSD_5_3_BASE:1.25
	OPENBSD_5_2:1.23.0.2
	OPENBSD_5_2_BASE:1.23
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.2
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.12
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.8
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.8
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.6
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.4
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.18.0.2
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.17.0.4
	OPENBSD_3_7_BASE:1.17
	OPENBSD_3_6:1.17.0.2
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.16.0.4
	OPENBSD_3_5_BASE:1.16
	OPENBSD_3_4:1.16.0.2
	OPENBSD_3_4_BASE:1.16
	OPENBSD_3_3:1.14.0.4
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.2
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.13.0.10
	OPENBSD_3_1_BASE:1.13
	OPENBSD_3_0:1.13.0.8
	OPENBSD_3_0_BASE:1.13
	OPENBSD_2_9:1.13.0.6
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.10.0.2
	OPENBSD_2_6_BASE:1.10
	OPENBSD_2_5:1.5.0.6
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.31
date	2014.07.03.06.08.06;	author jmc;	state Exp;
branches;
next	1.30;
commitid	LEqGm498gLbYjAUy;

1.30
date	2014.03.25.15.23.27;	author tedu;	state Exp;
branches;
next	1.29;

1.29
date	2013.12.04.22.58.24;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2013.06.29.09.08.41;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.26;

1.26
date	2013.03.04.01.50.01;	author brad;	state Exp;
branches;
next	1.25;

1.25
date	2013.01.31.12.18.46;	author brad;	state Exp;
branches;
next	1.24;

1.24
date	2013.01.30.00.08.13;	author brad;	state Exp;
branches;
next	1.23;

1.23
date	2012.04.12.08.26.38;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2011.09.03.23.24.51;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2010.01.03.14.31.01;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.07.26.03.30.25;	author jaredy;	state Exp;
branches;
next	1.17;

1.17
date	2004.06.20.21.09.30;	author jfb;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2003.06.01.18.56.04;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2002.07.24.22.59.03;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2000.04.20.01.39.32;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.18.03.01.35;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.15.02.15.24;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.07.09.13.35.23;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.11.02;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.11;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.05.12.13.26.48;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.10.17.56.29;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	98.03.09.06.36.30;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.03.09.06.09.08;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.33.07;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.27.07.53.04;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.15;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.15;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.31
log
@rework some fflush text, as requested
From: Edward
tweaks
From: Tim van der Molen
@
text
@.\"	$OpenBSD: stdio.3,v 1.30 2014/03/25 15:23:27 tedu Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: March 25 2014 $
.Dt STDIO 3
.Os
.Sh NAME
.Nm stdio
.Nd standard input/output library functions
.Sh SYNOPSIS
.In stdio.h
.Pp
.Fd FILE *stdin;
.Fd FILE *stdout;
.Fd FILE *stderr;
.Sh DESCRIPTION
The standard I/O library
provides a simple and efficient buffered stream I/O interface.
Input and output is mapped into logical data streams and the physical I/O
characteristics are concealed.
The functions and macros are listed below;
more information is available from the individual man pages.
.Pp
A stream is associated with an external file (which may be a physical
device) by
.Dq opening
a file, which may involve creating a new file.
Creating an existing file causes its former contents to be discarded.
If a file can support positioning requests (such as a disk file, as opposed
to a terminal) then a
.Dq file position indicator
associated with the stream is positioned at the start of the file (byte
zero), unless the file is opened with append mode.
If append mode
is used, the position indicator will be placed at the end-of-file.
The position indicator is maintained by subsequent reads, writes,
and positioning requests.
All input occurs as if the characters
were read by successive calls to the
.Xr fgetc 3
function; all output takes place as if all characters were
written by successive calls to the
.Xr fputc 3
function.
.Pp
A file is disassociated from a stream by
.Dq closing
it.
Output streams are flushed (any unwritten buffer contents are transferred
to the host environment) before the stream is disassociated from the file.
The value of a pointer to a
.Dv FILE
object is indeterminate (garbage) after a file is closed.
.Pp
A file may be subsequently reopened, by the same or another program
execution, and its contents reclaimed or modified (if it can be repositioned
at the start).
If the main function returns to its original caller, or the
.Xr exit 3
function is called, all open files are closed (hence all output
streams are flushed) before program termination.
Other methods of program termination may not close files properly and hence
buffered output may be lost.
In particular,
.Xr _exit 2
does not flush
.Nm
files.
Neither does an exit due to a signal.
Buffers are flushed by
.Xr abort 3 ,
as required by POSIX, although in previous implementations they were not.
.Pp
This implementation needs and makes
no distinction between
.Dq text
and
.Dq binary
streams.
In effect, all streams are binary.
No translation is performed and no extra padding appears on any stream.
.Pp
At program startup, three streams are predefined and need not be
opened explicitly:
.Pp
.Bl -bullet -compact -offset indent
.It
.Em standard input
(for reading conventional input),
.It
.Em standard output
(for writing conventional output), and
.It
.Em standard error
(for writing diagnostic output).
.El
.Pp
These streams are abbreviated
.Em stdin ,
.Em stdout ,
and
.Em stderr .
Initially, the standard error stream
is unbuffered; the standard input and output streams are
fully buffered if and only if the streams do not refer to
an interactive or
.Dq terminal
device, as determined by the
.Xr isatty 3
function.
In fact,
.Em all
freshly opened streams that refer to terminal devices
default to line buffering, and
pending output to such streams is written automatically
whenever such an input stream is read.
Note that this applies only to
.Dq "true reads" ;
if the read request can be satisfied by existing buffered data,
no automatic flush will occur.
In these cases,
or when a large amount of computation is done after printing
part of a line on an output terminal, it is necessary to
.Xr fflush 3
the standard output so that the output will appear immediately.
Alternatively, these defaults may be modified via the
.Xr setvbuf 3
function.
.Pp
The
.Nm stdio
library is a part of the library libc
and routines are automatically loaded as needed by the compiler.
The SYNOPSIS
sections of the following manual pages indicate which include files
are to be used, what the compiler declaration for the function
looks like, and which external variables are of interest.
.Pp
The following are defined as macros;
these names may not be re-used
without first removing their current definitions with
.Dv #undef :
.Dv BUFSIZ ,
.Dv EOF ,
.Dv FILENAME_MAX ,
.Dv FOPEN_MAX ,
.Dv L_ctermid ,
.Dv L_tmpnam ,
.Dv NULL ,
.Dv SEEK_END ,
.Dv SEEK_SET ,
.Dv SEEK_CUR ,
.Dv TMP_MAX ,
.Dv clearerr ,
.Dv feof ,
.Dv ferror ,
.Dv fileno ,
.Dv freopen ,
.Dv fwopen ,
.Dv getc ,
.Dv getchar ,
.Dv putc ,
.Dv putchar ,
.Dv stderr ,
.Dv stdin ,
.Dv stdout .
Function versions of the macro functions
.Xr feof 3 ,
.Xr ferror 3 ,
.Xr clearerr 3 ,
.Xr fileno 3 ,
.Xr getc 3 ,
.Xr getchar 3 ,
.Xr putc 3 ,
and
.Xr putchar 3
exist and will be used if the macro
definitions are explicitly removed.
.Sh LIST OF FUNCTIONS
.Bl -column "sys_errlist" "Description"
.It Sy Function Ta Sy Description
.It asprintf Ta "formatted output conversion with allocation"
.It clearerr Ta "check and reset stream status"
.It dprintf Ta "formatted output conversion"
.It fclose Ta "close a stream"
.It fdopen Ta "stream open functions"
.It feof Ta "check and reset stream status"
.It ferror Ta "check and reset stream status"
.It fflush Ta "flush a stream"
.It fgetc Ta "get next character or word from input stream"
.It fgetln Ta "get a line from a stream"
.It fgetpos Ta "reposition a stream"
.It fgets Ta "get a line from a stream"
.It fgetwc Ta "get next wide character from input stream"
.It fgetws Ta "get a line of wide characters from a stream"
.It fileno Ta "get a stream's underlying file descriptor"
.It fopen Ta "stream open functions"
.It fprintf Ta "formatted output conversion"
.It fpurge Ta "flush a stream"
.It fputc Ta "output a character or word to a stream"
.It fputs Ta "output a line to a stream"
.It fputwc Ta "output a wide character to a stream"
.It fputws Ta "output a line of wide characters to a stream"
.It fread Ta "binary stream input/output"
.It freopen Ta "stream open functions"
.It fropen Ta "open a stream"
.It fscanf Ta "input format conversion"
.It fseek Ta "reposition a stream"
.It fsetpos Ta "reposition a stream"
.It ftell Ta "reposition a stream"
.It funopen Ta "open a stream"
.It fwide Ta "set/get orientation of stream"
.It fwopen Ta "open a stream"
.It fwprintf Ta "formatted wide character output conversion"
.It fwrite Ta "binary stream input/output"
.It getc Ta "get next character or word from input stream"
.It getchar Ta "get next character or word from input stream"
.It getdelim Ta "read a delimited record from a stream"
.It getline Ta "read a delimited record from a stream"
.It getw Ta "get next character or word from input stream"
.It getwc Ta "get next wide character from input stream"
.It getwchar Ta "get next wide character from input stream"
.It mkdtemp Ta "create unique temporary directory"
.It mkstemp Ta "create unique temporary file"
.It mktemp Ta "create unique temporary file"
.It perror Ta "system error messages"
.It printf Ta "formatted output conversion"
.It putc Ta "output a character or word to a stream"
.It putchar Ta "output a character or word to a stream"
.It puts Ta "output a line to a stream"
.It putw Ta "output a character or word to a stream"
.It putwc Ta "output a wide character to a stream"
.It putwchar Ta "output a wide character to a stream"
.It remove Ta "remove directory entry"
.It rewind Ta "reposition a stream"
.It scanf Ta "input format conversion"
.It setbuf Ta "stream buffering operations"
.It setbuffer Ta "stream buffering operations"
.It setlinebuf Ta "stream buffering operations"
.It setvbuf Ta "stream buffering operations"
.It snprintf Ta "formatted output conversion"
.It sprintf Ta "formatted output conversion"
.It sscanf Ta "input format conversion"
.It strerror Ta "system error messages"
.It swprintf Ta "formatted wide character output conversion"
.It sys_errlist Ta "system error messages"
.It sys_nerr Ta "system error messages"
.It tempnam Ta "temporary file routines"
.It tmpfile Ta "temporary file routines"
.It tmpnam Ta "temporary file routines"
.It ungetc Ta "un-get character from input stream"
.It ungetwc Ta "un-get wide character from input stream"
.It vasprintf Ta "formatted output conversion with allocation"
.It vdprintf Ta "formatted output conversion"
.It vfprintf Ta "formatted output conversion"
.It vfscanf Ta "input format conversion"
.It vfwprintf Ta "formatted wide character output conversion"
.It vprintf Ta "formatted output conversion"
.It vscanf Ta "input format conversion"
.It vsnprintf Ta "formatted output conversion"
.It vsprintf Ta "formatted output conversion"
.It vsscanf Ta "input format conversion"
.It vswprintf Ta "formatted wide character output conversion"
.It vwprintf Ta "formatted wide character output conversion"
.It wprintf Ta "formatted wide character output conversion"
.El
.Sh SEE ALSO
.Xr close 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2
.Sh STANDARDS
The
.Nm stdio
library conforms to
.St -isoC-99 .
.Sh BUGS
The standard buffered functions do not interact well with certain other
library and system functions, especially
.Xr vfork 2
and
.Xr abort 3 .
@


1.30
log
@no gets
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.29 2013/12/04 22:58:24 deraadt Exp $
d30 1
a30 1
.Dd $Mdocdate: December 4 2013 $
d151 1
a151 2
the standard output before going off and computing so that the output
will appear.
@


1.29
log
@express final disapproval of the interfaces in libcompat, such as
them ftime(), gtty(), stty(), re_comp(), cuserid() and others.
Discussion and ongoing work to fix the ports tree from many, especially
naddy.
ok naddy
[There is a bit more cleanup possible after that, but this is considered
the current safe step]
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.28 2013/06/29 09:08:41 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: June 29 2013 $
a246 1
.It gets Ta "get a line from a stream"
@


1.28
log
@do not use Sx for sections outwith the page;
man4 still to go...
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.27 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
a173 1
.Dv L_cuserid ,
@


1.27
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.26 2013/03/04 01:50:01 brad Exp $
d30 1
a30 1
.Dd $Mdocdate: March 4 2013 $
d161 1
a161 2
The
.Sx SYNOPSIS
@


1.26
log
@Update STANDARDS section as appropriate for C99.

ok guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.25 2013/01/31 12:18:46 brad Exp $
d30 1
a30 1
.Dd $Mdocdate: January 31 2013 $
d37 1
a37 1
.Fd #include <stdio.h>
@


1.25
log
@Add a bunch of missing functions.

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.24 2013/01/30 00:08:13 brad Exp $
d30 1
a30 1
.Dd $Mdocdate: January 30 2013 $
d306 1
a306 1
.St -ansiC .
@


1.24
log
@Add support for POSIX.1-2008 functions dprintf(3) and vdprintf(3).

Feedback from millert@@ guenther@@
OK guenther@@ man page bits OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.23 2012/04/12 08:26:38 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: April 12 2012 $
d223 2
d231 2
d241 1
d243 1
d251 3
d262 2
d275 1
d282 1
d287 1
d293 3
@


1.23
log
@document getdelim() and getline(), and a grammar fix whilst here;
from Jan Stary

ok fgsch
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.22 2011/09/03 23:24:51 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: September 3 2011 $
d213 1
d271 1
@


1.22
log
@some minor tweaks;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.21 2011/09/03 22:59:07 jmc Exp $
d97 2
a98 2
.Xr abort 3
as required by POSIX, although previous implementations did not.
d240 2
@


1.21
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.20 2010/01/03 14:31:01 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 3 2010 $
d43 3
a45 7
The standard
.Tn I/O
library provides a simple and efficient buffered stream
.Tn I/O
interface.
Input and output is mapped into logical data streams and the physical
.Tn I/O
d159 1
a159 2
library is a part of the library
.Xr libc
d162 1
a162 1
.Tn SYNOPSIS
@


1.20
log
@.Bl always requires .It, even in .Bl -column;
syntax errors found by mandoc(1), also required to fix the mandoc build;
feedback and ok jmc@@ and sobrado@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.19 2007/05/31 19:19:31 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d214 66
a279 66
.Bl -column "Description"
.It Sy Function	Description
.It asprintf	formatted output conversion with allocation
.It clearerr	check and reset stream status
.It fclose	close a stream
.It fdopen	stream open functions
.It feof	check and reset stream status
.It ferror	check and reset stream status
.It fflush	flush a stream
.It fgetc	get next character or word from input stream
.It fgetln	get a line from a stream
.It fgetpos	reposition a stream
.It fgets	get a line from a stream
.It fileno	get a stream's underlying file descriptor
.It fopen	stream open functions
.It fprintf	formatted output conversion
.It fpurge	flush a stream
.It fputc	output a character or word to a stream
.It fputs	output a line to a stream
.It fread	binary stream input/output
.It freopen	stream open functions
.It fropen	open a stream
.It fscanf	input format conversion
.It fseek	reposition a stream
.It fsetpos	reposition a stream
.It ftell	reposition a stream
.It funopen	open a stream
.It fwopen	open a stream
.It fwrite	binary stream input/output
.It getc	get next character or word from input stream
.It getchar	get next character or word from input stream
.It gets	get a line from a stream
.It getw	get next character or word from input stream
.It mkstemp	create unique temporary file
.It mktemp	create unique temporary file
.It perror	system error messages
.It printf	formatted output conversion
.It putc	output a character or word to a stream
.It putchar	output a character or word to a stream
.It puts	output a line to a stream
.It putw	output a character or word to a stream
.It remove	remove directory entry
.It rewind	reposition a stream
.It scanf	input format conversion
.It setbuf	stream buffering operations
.It setbuffer	stream buffering operations
.It setlinebuf	stream buffering operations
.It setvbuf	stream buffering operations
.It snprintf	formatted output conversion
.It sprintf	formatted output conversion
.It sscanf	input format conversion
.It strerror	system error messages
.It sys_errlist	system error messages
.It sys_nerr	system error messages
.It tempnam	temporary file routines
.It tmpfile	temporary file routines
.It tmpnam	temporary file routines
.It ungetc	un-get character from input stream
.It vasprintf	formatted output conversion with allocation
.It vfprintf	formatted output conversion
.It vfscanf	input format conversion
.It vprintf	formatted output conversion
.It vscanf	input format conversion
.It vsnprintf	formatted output conversion
.It vsprintf	formatted output conversion
.It vsscanf	input format conversion
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.18 2005/07/26 03:30:25 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
d215 65
a279 65
.Sy Function	Description
asprintf	formatted output conversion with allocation
clearerr	check and reset stream status
fclose	close a stream
fdopen	stream open functions
feof	check and reset stream status
ferror	check and reset stream status
fflush	flush a stream
fgetc	get next character or word from input stream
fgetln	get a line from a stream
fgetpos	reposition a stream
fgets	get a line from a stream
fileno	get a stream's underlying file descriptor
fopen	stream open functions
fprintf	formatted output conversion
fpurge	flush a stream
fputc	output a character or word to a stream
fputs	output a line to a stream
fread	binary stream input/output
freopen	stream open functions
fropen	open a stream
fscanf	input format conversion
fseek	reposition a stream
fsetpos	reposition a stream
ftell	reposition a stream
funopen	open a stream
fwopen	open a stream
fwrite	binary stream input/output
getc	get next character or word from input stream
getchar	get next character or word from input stream
gets	get a line from a stream
getw	get next character or word from input stream
mkstemp	create unique temporary file
mktemp	create unique temporary file
perror	system error messages
printf	formatted output conversion
putc	output a character or word to a stream
putchar	output a character or word to a stream
puts	output a line to a stream
putw	output a character or word to a stream
remove	remove directory entry
rewind	reposition a stream
scanf	input format conversion
setbuf	stream buffering operations
setbuffer	stream buffering operations
setlinebuf	stream buffering operations
setvbuf	stream buffering operations
snprintf	formatted output conversion
sprintf	formatted output conversion
sscanf	input format conversion
strerror	system error messages
sys_errlist	system error messages
sys_nerr	system error messages
tempnam	temporary file routines
tmpfile	temporary file routines
tmpnam	temporary file routines
ungetc	un-get character from input stream
vasprintf	formatted output conversion with allocation
vfprintf	formatted output conversion
vfscanf	input format conversion
vprintf	formatted output conversion
vscanf	input format conversion
vsnprintf	formatted output conversion
vsprintf	formatted output conversion
vsscanf	input format conversion
@


1.18
log
@- typos, punctuation, spacing, macro, layout, etc. fixes
- avoid first person

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.17 2004/06/20 21:09:30 jfb Exp $
d30 1
a30 1
.Dd April 19, 1994
@


1.17
log
@Fix the short description for fileno()
ok otto@@, millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.16 2003/06/02 20:18:37 millert Exp $
d66 1
a66 1
The position indicator is maintained by subsequent reads, writes
d96 3
a98 1
does not flush stdio files.
d170 1
a170 1
looks like and which external variables are of interest.
d186 1
a186 1
.Dv SEE_CUR ,
d202 7
a208 7
.Xr feof ,
.Xr ferror ,
.Xr clearerr ,
.Xr fileno ,
.Xr getc ,
.Xr getchar ,
.Xr putc ,
d210 1
a210 1
.Xr putchar
d294 1
a294 1
.Xr vfork
d296 1
a296 1
.Xr abort .
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.15 2003/06/01 18:56:04 jmc Exp $
d225 1
a225 1
fileno	check and reset stream status
@


1.15
log
@- section reorder
- kill unnecessary .Ns macros
- add some man page section numbers to .Xr's
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.14 2002/07/24 22:59:03 deraadt Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@add *asprintf
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.13 2000/04/20 01:39:32 aaron Exp $
d288 5
a298 5
.Sh STANDARDS
The
.Nm stdio
library conforms to
.St -ansiC .
@


1.13
log
@Flesh out all of the stdio man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.12 2000/04/18 03:01:35 aaron Exp $
d218 1
d274 1
@


1.12
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.11 2000/04/15 02:15:24 aaron Exp $
d42 1
d52 1
a52 2
Input and output is mapped into logical data streams
and the physical
d55 2
a56 2
The functions and macros are listed
below; more information is available from the individual man pages.
d60 1
a60 1
.Em opening
d65 1
a65 1
.Em file position indicator
d81 2
a82 2
.Em closing
the file.
d117 1
d129 1
d131 2
a132 1
.Em stdin , stdout
a214 16
.Sh SEE ALSO
.Xr close 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2
.Sh BUGS
The standard buffered functions do not interact well with certain other
library and system functions, especially
.Xr vfork
and
.Xr abort .
.Sh STANDARDS
The
.Nm stdio
library conforms to
.St -ansiC .
d281 16
@


1.11
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.10 1999/07/09 13:35:23 aaron Exp $
d54 2
a55 1
characteristics are concealed. The functions and macros are listed
d61 2
a62 2
a file, which may involve creating a new file. Creating an
existing file causes its former contents to be discarded.
d67 2
a68 1
zero), unless the file is opened with append mode. If append mode
d71 2
a72 1
and positioning requests. All input occurs as if the characters
d91 2
a92 2
at the start).  If the main function returns to its original caller, or
the
d95 4
a98 3
streams are flushed) before program termination.  Other methods
of program termination may not close files properly and hence
buffered output may be lost.  In particular,
d100 2
a101 1
does not flush stdio files.  Neither does an exit due to a signal.
@


1.10
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.9 1999/05/23 14:11:02 aaron Exp $
d176 1
a176 1
.Dv L_tmpnam,
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.8 1999/05/16 19:55:11 alex Exp $
d114 1
a114 1
.Em standard input 
d117 1
a117 1
.Em standard output 
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.7 1999/05/12 13:26:48 aaron Exp $
d36 1
a36 1
.Os BSD 4
@


1.7
log
@grammar police: do not hyphenate compound words that act as adjectives if the
first word ends in -ly

i.e., fully-qualified, newly-created, globally-visible, etc. are wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.6 1999/05/10 17:56:29 aaron Exp $
d208 1
a209 1
.Xr close 2 ,
@


1.6
log
@correct some Xr's which referred to the wrong man page sections
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.5 1998/03/09 06:36:30 deraadt Exp $
d137 1
a137 1
freshly-opened streams that refer to terminal devices
@


1.5
log
@POSIX behaviour of abort; mckay
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.4 1998/03/09 06:09:08 deraadt Exp $
d159 1
a159 4
and routines are automatically loaded as needed by the compilers
.Xr cc 1
and
.Xr pc 1 .
@


1.4
log
@grammar fixes by mckay
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.3 1996/08/19 08:33:07 tholo Exp $
d93 5
a97 1
of program termination, such as
d99 1
a99 1
do not bother about closing files properly.
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: stdio.3,v 1.5 1996/05/05 19:21:20 pk Exp $
d67 1
a67 1
is used, the position indicator will be placed the end-of-file.
d73 1
a73 1
read by successive calls to the
d84 1
a84 1
object is indeterminate after a file is closed (garbage).
d136 1
a136 1
whenever an such an input stream is read.
d204 1
a204 1
exist and will be used if the macros
@


1.2
log
@whoops
@
text
@d1 1
a1 1
.\"	$NetBSD: stdio.3,v 1.5 1996/05/05 19:21:20 pk Exp $
a32 2
.\"
.\"     @@(#)stdio.3	8.7 (Berkeley) 4/19/94
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: stdio.3,v 1.4 1995/02/02 01:15:55 jtc Exp $
d174 1
a174 1
.DV FOPEN_MAX ,
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

