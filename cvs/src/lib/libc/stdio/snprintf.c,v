head	1.19;
access;
symbols
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.8
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.20
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.12
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.16
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.14
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.10
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.8
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.6
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.4
	OPENBSD_5_0:1.18.0.2
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.17.0.6
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.4
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.2
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.14.0.18
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.14
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.12
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.10
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.8
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.6
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.4
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.2
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.6
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.4
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.2
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.6.0.16
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.14
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.12
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.10
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.8
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.6
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.4
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.2
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2015.08.31.02.53.57;	author guenther;	state Exp;
branches;
next	1.18;
commitid	lTMF8Y3C9fQGd6jQ;

1.18
date	2011.05.30.18.48.33;	author martynas;	state Exp;
branches;
next	1.17;

1.17
date	2009.11.09.00.18.27;	author kurt;	state Exp;
branches;
next	1.16;

1.16
date	2009.10.22.01.23.16;	author guenther;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.21.16.04.23;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2005.10.10.12.00.52;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.05.28.00.54.50;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.30.09.25.17;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.31.18.36.29;	author pat;	state Exp;
branches;
next	1.9;

1.9
date	2004.04.10.19.34.44;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.02.19.19.39.37;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.01.12.06.20.56;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.01.12.06.14.31;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.11.29.19.28.29;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.20.30.11;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.33.06;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@/*	$OpenBSD: snprintf.c,v 1.18 2011/05/30 18:48:33 martynas Exp $ */
/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <limits.h>
#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#include "local.h"

int
snprintf(char *str, size_t n, const char *fmt, ...)
{
	va_list ap;
	int ret;
	char dummy;
	FILE f;
	struct __sfileext fext;

	/* While snprintf(3) specifies size_t stdio uses an int internally */
	if (n > INT_MAX)
		n = INT_MAX;
	/* Stdio internals do not deal correctly with zero length buffer */
	if (n == 0) {
		str = &dummy;
		n = 1;
	}
	_FILEEXT_SETUP(&f, &fext);
	f._file = -1;
	f._flags = __SWR | __SSTR;
	f._bf._base = f._p = (unsigned char *)str;
	f._bf._size = f._w = n - 1;
	va_start(ap, fmt);
	ret = __vfprintf(&f, fmt, ap);
	va_end(ap);
	*f._p = '\0';
	return (ret);
}
DEF_STRONG(snprintf);
@


1.18
log
@Make printf-like and scanf-like functions marked as such in llib-lc.ln
and llib-lwrap.ln databases;  so that the lint features doing format
strings checks are enabled by default.

Looks good to millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: snprintf.c,v 1.17 2009/11/09 00:18:27 kurt Exp $ */
a39 1
/* PRINTFLIKE3 */
d68 1
@


1.17
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

committing on behalf of and okay guenther@@ now that we have install
media space available.
@
text
@d1 1
a1 1
/*	$OpenBSD: snprintf.c,v 1.16 2009/10/22 01:23:16 guenther Exp $ */
d40 1
@


1.16
log
@Back out previous commit, as it caused too much growth for the install
media to fit
@
text
@d1 1
a1 1
/*	$OpenBSD: snprintf.c,v 1.15 2009/10/21 16:04:23 guenther Exp $ */
d63 1
a63 1
	ret = vfprintf(&f, fmt, ap);
@


1.15
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

ok kurt@@, earlier version tested by sthen@@ and jj@@
@
text
@d1 1
a1 1
/*	$OpenBSD: snprintf.c,v 1.14 2005/10/10 12:00:52 espie Exp $ */
d63 1
a63 1
	ret = __vfprintf(&f, fmt, ap);
@


1.14
log
@Remove a few warnings. Those were not apparent thanks to a bug in gcc 2.95.

Patch by Leonardo Chiquitto Filho <leonardo@@iken.com.br>
Thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: snprintf.c,v 1.13 2005/08/08 08:05:36 espie Exp $ */
d63 1
a63 1
	ret = vfprintf(&f, fmt, ap);
@


1.13
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d36 1
@


1.12
log
@Move the va_start()/va_end() pair such that it directly backets the call
to vfprintf() like the rest of the *printf functions.  This is clearer
and makes the error case in asprintf() simpler.  From Andrey Matveev.
@
text
@d1 1
a32 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.11 2005/04/30 09:25:17 espie Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.11
log
@Change internals of FILE: reuse the unget buffer field to access an
extended attribute data structure (pimpl idiom). Idea taken from citrus.
Much discussion with deraadt@@, otto@@, millert@@...

This is the least disruptive way to extend FILE, since its size can't really
change without this being a flag day. So the size doesn't change.

Actual additions to the structure will come in separate steps, since this
change is nasty enough on its own.

Tests by otto@@ and others, careful reading of code by otto@@ and millert@@.

This is definitely a major bump, and has been checked to not impact a
full ports build.
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.10 2005/03/31 18:36:29 pat Exp $";
a58 1
	va_start(ap, fmt);
d64 1
d66 1
a67 1
	va_end(ap);
@


1.10
log
@make sure the implementation matches the prototype..
char const * -> const char *

ok otto@@ deraadt@@
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.9 2004/04/10 19:34:44 millert Exp $";
d40 1
d49 1
d60 1
@


1.9
log
@Apply change from vsnprintf.c rev. 1.5.  Use a single character
buffer for the size==0 case.  Stdio internals do not deal correctly
with zero size buffer and NULL pointer.  From torek@@bsdi.com; Ok henning@@
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.8 2003/06/02 20:18:37 millert Exp $";
d42 1
a42 1
snprintf(char *str, size_t n, char const *fmt, ...)
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.7 2002/02/19 19:39:37 millert Exp $";
d44 1
d46 1
a46 1
	va_list ap;
d52 5
d61 1
a61 1
	f._bf._size = f._w = n ? n - 1 : 0;
d63 1
a63 2
	if (n)
		*f._p = '\0';
@


1.7
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d34 1
a34 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.6 1998/01/12 06:20:56 millert Exp $";
@


1.6
log
@Oops, missed a 0 vs. '\0'
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.5 1998/01/12 06:14:31 millert Exp $";
a42 1
#ifdef __STDC__
a43 3
#else
#include <varargs.h>
#endif
a45 1
#ifdef __STDC__
a46 7
#else
snprintf(str, n, fmt, va_alist)
	char *str;
	size_t n;
	char *fmt;
	va_dcl
#endif
a54 1
#ifdef __STDC__
a55 3
#else
	va_start(ap);
#endif
@


1.5
log
@Based on some FreeBSD changes:
    For *s*printf, set f._file to -1 like the comments in stdio.h say.
    Use '\0', not 0, where appropriate.
    Don't error out on size of '0' for v?snprintf().
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.4 1997/11/29 19:28:29 millert Exp $";
d78 1
a78 1
		*f._p = 0;
@


1.4
log
@Return -1, not EOF for size < 1.  XPG4.2 specifies the return value
should be < 1.  While EOF is currently defined as -1 it is bad form
to assume this.
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.3 1997/07/25 20:30:11 mickey Exp $";
d41 1
d64 3
a66 2
	if ((int)n < 1)
		return (-1);
d72 1
d75 1
a75 1
	f._bf._size = f._w = n - 1;
d77 2
a78 1
	*f._p = 0;
@


1.3
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.2 1996/08/19 08:33:06 tholo Exp $";
d48 1
d64 1
a64 1
		return (EOF);
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: snprintf.c,v 1.4 1995/02/02 02:10:35 jtc Exp $";
d42 1
a42 1
#if __STDC__
d48 1
a48 1
#if __STDC__
d64 1
a64 1
#if __STDC__
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: snprintf.c,v 1.4 1995/02/02 02:10:35 jtc Exp $	*/

d38 1
a38 4
#if 0
static char sccsid[] = "@@(#)snprintf.c	8.1 (Berkeley) 6/4/93";
#endif
static char rcsid[] = "$NetBSD: snprintf.c,v 1.4 1995/02/02 02:10:35 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
