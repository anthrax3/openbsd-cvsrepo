head	1.18;
access;
symbols
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.20
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.12
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.16
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.14
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.13.0.18
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.16
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.14
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.12
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.10
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.8
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.6
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.4
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.2
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2015.10.01.02.32.07;	author guenther;	state Exp;
branches;
next	1.17;
commitid	DA03ltgCTpoknko0;

1.17
date	2011.05.30.18.48.33;	author martynas;	state Exp;
branches;
next	1.16;

1.16
date	2009.11.09.00.18.27;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.22.01.23.16;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.21.16.04.23;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2005.10.10.12.00.52;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.30.09.25.17;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.31.18.36.29;	author pat;	state Exp;
branches;
next	1.9;

1.9
date	2003.07.24.01.15.42;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.11.21.05.09;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.11.21.03.10;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.19.19.39.37;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.01.12.06.14.31;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.07.25.20.30.11;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.33.06;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.15;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.15;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Eliminate the last of the LINTEDn and PRINTFLIKEn comments.  In one
case, by deleting some useless '& of an array' we also eliminate the need
for the casts which prompted the original lint warnings

ok deraadt@@
@
text
@/*	$OpenBSD: sprintf.c,v 1.17 2011/05/30 18:48:33 martynas Exp $ */
/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include <string.h>
#include <stdarg.h>
#include <limits.h>
#include "local.h"

#if defined(APIWARN)
__warn_references(sprintf,
    "warning: sprintf() is often misused, please use snprintf()");
#endif

int
sprintf(char *str, const char *fmt, ...)
{
	int ret;
	va_list ap;
	FILE f;
	struct __sfileext fext;

	_FILEEXT_SETUP(&f, &fext);
	f._file = -1;
	f._flags = __SWR | __SSTR;
	f._bf._base = f._p = (unsigned char *)str;
	f._bf._size = f._w = INT_MAX;
	va_start(ap, fmt);
	ret = __vfprintf(&f, fmt, ap);
	va_end(ap);
	*f._p = '\0';
	return (ret);
}
@


1.17
log
@Make printf-like and scanf-like functions marked as such in llib-lc.ln
and llib-lwrap.ln databases;  so that the lint features doing format
strings checks are enabled by default.

Looks good to millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: sprintf.c,v 1.16 2009/11/09 00:18:27 kurt Exp $ */
a44 1
/* PRINTFLIKE2 */
@


1.16
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

committing on behalf of and okay guenther@@ now that we have install
media space available.
@
text
@d1 1
a1 1
/*	$OpenBSD: sprintf.c,v 1.15 2009/10/22 01:23:16 guenther Exp $ */
d45 1
@


1.15
log
@Back out previous commit, as it caused too much growth for the install
media to fit
@
text
@d1 1
a1 1
/*	$OpenBSD: sprintf.c,v 1.14 2009/10/21 16:04:23 guenther Exp $ */
d59 1
a59 1
	ret = vfprintf(&f, fmt, ap);
@


1.14
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

ok kurt@@, earlier version tested by sthen@@ and jj@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sprintf.c,v 1.13 2005/10/10 12:00:52 espie Exp $ */
d59 1
a59 1
	ret = __vfprintf(&f, fmt, ap);
@


1.13
log
@Remove a few warnings. Those were not apparent thanks to a bug in gcc 2.95.

Patch by Leonardo Chiquitto Filho <leonardo@@iken.com.br>
Thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: sprintf.c,v 1.12 2005/08/08 08:05:36 espie Exp $ */
d59 1
a59 1
	ret = vfprintf(&f, fmt, ap);
@


1.12
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d35 1
@


1.11
log
@Change internals of FILE: reuse the unget buffer field to access an
extended attribute data structure (pimpl idiom). Idea taken from citrus.
Much discussion with deraadt@@, otto@@, millert@@...

This is the least disruptive way to extend FILE, since its size can't really
change without this being a flag day. So the size doesn't change.

Actual additions to the structure will come in separate steps, since this
change is nasty enough on its own.

Tests by otto@@ and others, careful reading of code by otto@@ and millert@@.

This is definitely a major bump, and has been checked to not impact a
full ports build.
@
text
@d1 1
a32 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.10 2005/03/31 18:36:29 pat Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.10
log
@make sure the implementation matches the prototype..
char const * -> const char *

ok otto@@ deraadt@@
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.9 2003/07/24 01:15:42 deraadt Exp $";
d53 1
d55 1
@


1.9
log
@warn about unsafe APIs at link time.  Conditional on libc/Makefile defining
APIWARN; disabled by default.  In use by many developers for quite some time,
now they have a common knob to enable/disable this
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.7 2003/06/11 21:03:10 deraadt Exp $";
d48 1
a48 1
sprintf(char *str, char const *fmt, ...)
@


1.8
log
@oops
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.6 2003/06/02 20:18:37 millert Exp $";
d41 5
@


1.7
log
@ansification; checked by pval
@
text
@a41 2
__warn_references(sprintf, "warning: sprintf() is often misused, please use snprintf()");

@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.5 2002/02/19 19:39:37 millert Exp $";
d41 2
@


1.5
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d34 1
a34 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.4 1998/01/12 06:14:31 millert Exp $";
@


1.4
log
@Based on some FreeBSD changes:
    For *s*printf, set f._file to -1 like the comments in stdio.h say.
    Use '\0', not 0, where appropriate.
    Don't error out on size of '0' for v?snprintf().
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.3 1997/07/25 20:30:11 mickey Exp $";
a41 1
#ifdef __STDC__
a42 3
#else
#include <varargs.h>
#endif
a46 1
#ifdef __STDC__
a47 6
#else
sprintf(str, fmt, va_alist)
	char *str;
	char *fmt;
	va_dcl
#endif
a56 1
#ifdef __STDC__
a57 3
#else
	va_start(ap);
#endif
@


1.3
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.2 1996/08/19 08:33:06 tholo Exp $";
d64 1
d75 1
a75 1
	*f._p = 0;
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: sprintf.c,v 1.5 1995/02/02 02:10:37 jtc Exp $";
d42 1
a42 1
#if __STDC__
d51 1
a51 1
#if __STDC__
d67 1
a67 1
#if __STDC__
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: sprintf.c,v 1.5 1995/02/02 02:10:37 jtc Exp $	*/

d38 1
a38 4
#if 0
static char sccsid[] = "@@(#)sprintf.c	8.1 (Berkeley) 6/4/93";
#endif
static char rcsid[] = "$NetBSD: sprintf.c,v 1.5 1995/02/02 02:10:37 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
