head	1.13;
access;
symbols
	OPENBSD_5_5:1.12.0.20
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.16
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.14
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.12
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.10
	OPENBSD_5_0:1.12.0.8
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.6
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.4
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.2
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.9.0.20
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.16
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.14
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.12
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.10
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.26
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.24
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.22
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.20
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.18
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.16
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.14
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.12
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.10
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.8
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.6
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.5.0.4
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2014.03.23.23.15.58;	author tedu;	state dead;
branches;
next	1.12;

1.12
date	2009.11.09.00.18.27;	author kurt;	state Exp;
branches;
next	1.11;

1.11
date	2009.10.22.01.23.16;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2009.10.21.16.04.23;	author guenther;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2005.05.28.04.34.05;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.28.18.12.44;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.01.20.07.46.56;	author graichen;	state Exp;
branches;
next	1.4;

1.4
date	97.01.19.22.32.21;	author graichen;	state Exp;
branches;
next	1.3;

1.3
date	96.12.28.02.30.58;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.32.52;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@c11 compliance: remove gets()
@
text
@/*	$OpenBSD: gets.c,v 1.12 2009/11/09 00:18:27 kurt Exp $ */
/*-
 * Copyright (c) 1990, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdio.h>
#include "local.h"

__warn_references(gets,
    "warning: gets() is very unsafe; consider using fgets()");

char *
gets(char *buf)
{
	int c;
	char *s;

	FLOCKFILE(stdin);
	for (s = buf; (c = getchar_unlocked()) != '\n';)
		if (c == EOF)
			if (s == buf) {
				FUNLOCKFILE(stdin);
				return (NULL);
			} else
				break;
		else
			*s++ = c;
	*s = '\0';
	FUNLOCKFILE(stdin);
	return (buf);
}
@


1.12
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

committing on behalf of and okay guenther@@ now that we have install
media space available.
@
text
@d1 1
a1 1
/*	$OpenBSD: gets.c,v 1.11 2009/10/22 01:23:16 guenther Exp $ */
@


1.11
log
@Back out previous commit, as it caused too much growth for the install
media to fit
@
text
@d1 1
a1 1
/*	$OpenBSD: gets.c,v 1.10 2009/10/21 16:04:23 guenther Exp $ */
d35 1
d46 2
a47 1
	for (s = buf; (c = getchar()) != '\n';)
d49 2
a50 1
			if (s == buf)
d52 1
a52 1
			else
d57 1
@


1.10
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

ok kurt@@, earlier version tested by sthen@@ and jj@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gets.c,v 1.9 2005/08/08 08:05:36 espie Exp $ */
a34 1
#include "local.h"
d45 1
a45 2
	FLOCKFILE(stdin);
	for (s = buf; (c = getchar_unlocked()) != '\n';)
d47 1
a47 2
			if (s == buf) {
				FUNLOCKFILE(stdin);
d49 1
a49 1
			} else
a53 1
	FUNLOCKFILE(stdin);
@


1.9
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d35 1
d46 2
a47 1
	for (s = buf; (c = getchar()) != '\n';)
d49 2
a50 1
			if (s == buf)
d52 1
a52 1
			else
d57 1
@


1.8
log
@Use '\0' not 0 when storing as a char, part from Andrey Matveev.
@
text
@d1 1
a32 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: gets.c,v 1.7 2004/09/28 18:12:44 otto Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.7
log
@deregister + ansify, no change in object code. ok deraadt@@ millert@@
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.6 2003/06/02 20:18:37 millert Exp $";
d56 1
a56 1
	*s = 0;
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d34 1
a34 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.5 1997/01/20 07:46:56 graichen Exp $";
d43 1
a43 2
gets(buf)
	char *buf;
d45 2
a46 2
	register int c;
	register char *s;
@


1.5
log
@back out my last change to avoid the __warn_references on the mips - it's
now done for the pmax like for the arc in machine/cdefs.h
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d34 1
a34 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.4 1997/01/19 22:32:21 graichen Exp $";
@


1.4
log
@put all the __warn_references behind a #ifndef NO_WARN_REFERENCES which
is then set in the libc Makefile for the mips (the mips linker can't
handle them)
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.3 1996/12/28 02:30:58 deraadt Exp $";
a42 1
#ifndef NO_WARN_REFERENCES
a44 1
#endif
@


1.3
log
@suggest alternative in ld warn message
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.2 1996/08/19 08:32:52 tholo Exp $";
d43 1
d46 1
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d38 1
a38 1
static char rcsid[] = "$OpenBSD: gets.c,v 1.7 1995/02/02 02:09:57 jtc Exp $";
d43 2
a44 1
__warn_references(gets, "warning: this program uses gets(), which is unsafe.");
@


1.1
log
@Initial revision
@
text
@a0 2
/*	$NetBSD: gets.c,v 1.7 1995/02/02 02:09:57 jtc Exp $	*/

d38 1
a38 4
#if 0
static char sccsid[] = "@@(#)gets.c	8.1 (Berkeley) 6/4/93";
#endif
static char rcsid[] = "$NetBSD: gets.c,v 1.7 1995/02/02 02:09:57 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
