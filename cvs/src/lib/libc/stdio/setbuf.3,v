head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.8
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.4
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.16.0.6
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.12.0.24
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.22
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.20
	OPENBSD_5_0:1.12.0.18
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.16
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.14
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.8
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.14
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.12
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.10
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.8
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.9.0.6
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.4
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.16
date	2014.11.25.19.08.14;	author millert;	state Exp;
branches;
next	1.15;
commitid	cObbwPOrUjdgYnhK;

1.15
date	2014.11.25.17.01.49;	author millert;	state Exp;
branches;
next	1.14;
commitid	LEcWDoj0Woh6YXJI;

1.14
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.26.03.30.25;	author jaredy;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.20.01.39.32;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.07.09.13.35.23;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.05.23.14.11.02;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.16.19.55.10;	author alex;	state Exp;
branches;
next	1.5;

1.5
date	99.05.12.13.26.48;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.02.24.08.22.31;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.07.08.17.25.54;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.33.04;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@C99 says setvbuf() returns non-zero, not EOF.  Also, POSIX documents
that it returns an error for invalid mode which matches our behavior.
OK jmc@@ deraadt@@
@
text
@.\"	$OpenBSD: setbuf.3,v 1.15 2014/11/25 17:01:49 millert Exp $
.\"
.\" Copyright (c) 1980, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 25 2014 $
.Dt SETBUF 3
.Os
.Sh NAME
.Nm setbuf ,
.Nm setbuffer ,
.Nm setlinebuf
.Nd stream buffering operations
.Sh SYNOPSIS
.In stdio.h
.Ft void
.Fn setbuf "FILE *stream" "char *buf"
.Ft void
.Fn setbuffer "FILE *stream" "char *buf" "size_t size"
.Ft int
.Fn setlinebuf "FILE *stream"
.Sh DESCRIPTION
.Bf -symbolic
These interfaces are obsoleted by
.Xr setvbuf 3 .
.Ef
.Pp
The
.Fn setbuf ,
.Fn setbuffer ,
and
.Fn setlinebuf
functions are used to modify the buffering of a stream.
These functions are provided for compatibility with legacy code.
New code should use
.Xr setvbuf 3
instead.
.Pp
Except for the lack of a return value, the
.Fn setbuf
function is exactly equivalent to the call
.Pp
.Dl "setvbuf(stream, buf, buf ? _IOFBF : _IONBF, BUFSIZ);"
.Pp
The
.Fn setbuffer
function is the same, except that the size of the buffer is up to the caller,
rather than being determined by the default
.Dv BUFSIZ .
.Pp
The
.Fn setlinebuf
function is exactly equivalent to the call:
.Pp
.Dl "setvbuf(stream, NULL, _IOLBF, 0);"
.Sh RETURN VALUES
Upon successful completion, the
.Fn setlinebuf
function returns 0.
If the request cannot be honored, a non-zero value is returned,
possibly setting
.Va errno
to indicate the error.
The stream is not modified in the error case.
.Sh ERRORS
The
.Fn setbuf ,
.Fn setbuffer ,
and
.Fn setlinebuf
functions will fail if:
.Bl -tag -width Er
.It Bq Er EBADF
The
.Fa stream
specified is not associated with a valid file descriptor.
.El
.Sh SEE ALSO
.Xr fclose 3 ,
.Xr fopen 3 ,
.Xr fread 3 ,
.Xr malloc 3 ,
.Xr printf 3 ,
.Xr puts 3 ,
.Xr setvbuf 3
.Sh STANDARDS
The
.Fn setbuf
function conforms to
.St -isoC-99 .
The
.Fn setbuffer
and
.Fn setlinebuf
functions are non-standard and should not be used if portability is required.
.Sh HISTORY
The
.Fn setbuf
function first appeared in
.At v7 .
The
.Fn setbuffer
function first appeared in
.Bx 4.1c .
The
.Fn setlinebuf
function first appeared in
.Bx 4.2 .
.Sh BUGS
The
.Fn setbuf
function usually uses a suboptimal buffer size and should be avoided.
@


1.15
log
@Move guts of setbuf.3 into setvbuf.3 to make it clear which one
should be used in new code.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.14 2013/07/17 05:42:11 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 17 2013 $
d85 9
d95 3
d99 7
a105 4
function returns 0 on success, or
.Dv EOF
if the request cannot be honored
(note that the stream is still functional in this case).
@


1.14
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.13 2013/06/05 03:39:23 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2013 $
d40 1
a40 2
.Nm setlinebuf ,
.Nm setvbuf
a49 2
.Ft int
.Fn setvbuf "FILE *stream" "char *buf" "int mode" "size_t size"
d51 15
a65 82
The three types of stream buffering available are unbuffered, block buffered,
and line buffered.
When an output stream is unbuffered, information appears on the
destination file or terminal as soon as written;
when it is block buffered, many characters are saved up and written as a block;
when line buffered, characters are saved up until a newline
.Pq Ql \en
is output or input is read from any stream attached to a terminal device
(typically
.Em stdin ) .
.Pp
The
.Xr fflush 3
function may be used to force the block out early.
.Pp
Normally, all files are block buffered.
When the first
.Tn I/O
operation occurs on a file,
.Xr malloc 3
is called,
and an optimally sized buffer is obtained.
If a stream refers to a terminal
(as
.Em stdout
normally does), it is line buffered.
.Pp
The standard error stream
.Em stderr
is initially unbuffered.
.Pp
The
.Fn setvbuf
function may be used to alter the buffering behavior of a stream.
The
.Fa mode
parameter must be one of the following three macros:
.Pp
.Bl -tag -width _IOFBF -offset indent -compact
.It Dv _IONBF
unbuffered
.It Dv _IOLBF
line buffered
.It Dv _IOFBF
fully buffered
.El
.Pp
The
.Fa size
parameter may be given as zero
to obtain deferred optimal-size buffer allocation as usual.
If it is not zero, then except for unbuffered files, the
.Fa buf
argument should point to a buffer at least
.Fa size
bytes long;
this buffer will be used instead of the current buffer.
(If the
.Fa size
argument
is not zero but
.Fa buf
is
.Dv NULL ,
a buffer of the given size will be allocated immediately,
and released on close.
This is an extension to ANSI C;
portable code should use a size of 0 with any
.Dv NULL
buffer.)
.Pp
The
.Fn setvbuf
function may be used at any time,
but may have peculiar side effects
(such as discarding input or flushing output)
if the stream is
.Dq active .
Portable applications should call it only once on any given stream,
and before any
.Tn I/O
is performed.
a66 2
The other three calls are, in effect, simply aliases for calls to
.Fn setvbuf .
d78 1
d86 1
a86 1
.Fn setvbuf
a90 6
.Pp
The
.Fn setlinebuf
function returns what the equivalent
.Fn setvbuf
would have returned.
d97 2
a98 1
.Xr puts 3
d102 4
d107 2
a108 3
.Fn setvbuf
functions conform to
.St -ansiC .
d110 1
a110 1
The function
d112 1
a112 1
first appeared in
a113 1
.Sh BUGS
d116 3
a118 1
and
d120 1
a120 3
functions are not portable to versions of
.Bx
before
d122 2
a123 5
On
.Bx 4.2
and
.Bx 4.3
systems,
d125 1
a125 1
always uses a suboptimal buffer size and should be avoided.
@


1.13
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.12 2007/05/31 19:19:31 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d182 5
@


1.12
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.11 2005/07/26 03:30:25 jaredy Exp $
d34 1
a34 1
.Dd $Mdocdate$
d44 1
a44 1
.Fd #include <stdio.h>
@


1.11
log
@- typos, punctuation, spacing, macro, layout, etc. fixes
- avoid first person

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.10 2003/06/02 20:18:37 millert Exp $
d34 1
a34 1
.Dd June 4, 1993
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.9 2000/04/20 01:39:32 aaron Exp $
d91 2
a92 1
.Bl -tag -width _IOFBF -offset indent
@


1.9
log
@Flesh out all of the stdio man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.8 1999/07/09 13:35:23 aaron Exp $
d18 1
a18 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.7 1999/05/23 14:11:02 aaron Exp $
d58 1
a58 1
The three types of buffering available are unbuffered, block buffered,
d62 8
a69 5
when it is block buffered many characters are saved up and written as a block;
when it is line buffered characters are saved up until a newline is
output or input is read from any stream attached to a terminal device
(typically stdin).
The function
d71 1
a71 3
may be used to force the block out early.
(See
.Xr fclose 3 . )
d73 1
a73 1
Normally all files are block buffered.
d83 2
a84 1
normally does) it is line buffered.
d91 1
a91 2
function
may be used to alter the buffering behavior of a stream.
d108 1
a108 2
If it is not zero,
then except for unbuffered files, the
d133 2
a134 1
if the stream is ``active''.
d150 1
a150 2
function
is the same, except that the size of the buffer is up to the caller,
d155 1
a155 2
function
is exactly equivalent to the call:
d183 1
a183 2
functions
conform to
@


1.7
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.6 1999/05/16 19:55:10 alex Exp $
d69 1
a69 1
(See 
d108 1
a108 1
then except for unbuffered files, the 
d135 1
a135 1
and before any 
@


1.6
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.5 1999/05/12 13:26:48 aaron Exp $
d40 1
a40 1
.Os BSD 4
@


1.5
log
@grammar police: do not hyphenate compound words that act as adjectives if the
first word ends in -ly

i.e., fully-qualified, newly-created, globally-visible, etc. are wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.4 1999/02/24 08:22:31 deraadt Exp $
d173 1
a174 1
.Xr fclose 3 ,
d177 2
a178 2
.Xr puts 3 ,
.Xr printf 3
@


1.4
log
@stderr is not always unbuffered... only initially; kleink
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.3 1997/07/08 17:25:54 millert Exp $
d78 1
a78 1
and an optimally-sized buffer is obtained.
@


1.3
log
@Don't tell people to cast NULL to a specific pointer type.
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.2 1996/08/19 08:33:04 tholo Exp $
d85 1
a85 1
is always unbuffered.
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: setbuf.3,v 1.3 1995/02/02 01:15:54 jtc Exp $
d158 1
a158 1
.Dl "setvbuf(stream, (char *)NULL, _IOLBF, 0);"
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: setbuf.3,v 1.3 1995/02/02 01:15:54 jtc Exp $
a36 2
.\"
.\"     @@(#)setbuf.3	8.1 (Berkeley) 6/4/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
