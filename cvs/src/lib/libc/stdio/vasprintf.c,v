head	1.22;
access;
symbols
	OPENBSD_6_1:1.22.0.4
	OPENBSD_6_1_BASE:1.22
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.16.0.26
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.18
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.22
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.20
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.16
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.14
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.12
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.10
	OPENBSD_5_0:1.16.0.8
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.13.0.18
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.20
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.18
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.16
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.14
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.12
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.10
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.8
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.6
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.4
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.2
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.3.0.2
	OPENBSD_2_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.22
date	2017.03.17.14.53.08;	author deraadt;	state Exp;
branches;
next	1.21;
commitid	bQ84PWVgZi7suGTT;

1.21
date	2017.03.16.14.32.02;	author millert;	state Exp;
branches;
next	1.20;
commitid	50suLMdNCdqQZO4j;

1.20
date	2017.03.14.16.46.05;	author millert;	state Exp;
branches;
next	1.19;
commitid	WfOHQl25br2keMFj;

1.19
date	2015.12.28.22.08.18;	author mmcc;	state Exp;
branches;
next	1.18;
commitid	0uXuF2O13NH9q2e1;

1.18
date	2015.08.31.02.53.57;	author guenther;	state Exp;
branches;
next	1.17;
commitid	lTMF8Y3C9fQGd6jQ;

1.17
date	2015.08.20.21.49.29;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	jeIpGH0zlTW3huPH;

1.16
date	2009.11.09.00.18.27;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2009.10.22.01.23.16;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2009.10.21.16.04.23;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.06.18.53.04;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.10.12.00.52;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.30.09.25.17;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2004.09.28.18.12.44;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.01.52.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.10.16.16.11.56;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.08.14.21.39.41;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	98.06.21.22.13.47;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	98.02.07.20.51.21;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	98.01.12.06.14.32;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.11.29.19.54.47;	author millert;	state Exp;
branches;
next	;


desc
@@


1.22
log
@Use recallocarray() to avoid leaving detritus in memory when resizing
buffers.  We don't bother doing this for objects containing pointers,
but focus on controllable data.
ok millert
@
text
@/*	$OpenBSD: vasprintf.c,v 1.21 2017/03/16 14:32:02 millert Exp $	*/

/*
 * Copyright (c) 1997 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <errno.h>
#include <unistd.h>
#include "local.h"

#define	INITIAL_SIZE	128

int
vasprintf(char **str, const char *fmt, __va_list ap)
{
	int ret;
	FILE f;
	struct __sfileext fext;
	const int pgsz = getpagesize();

	_FILEEXT_SETUP(&f, &fext);
	f._file = -1;
	f._flags = __SWR | __SSTR | __SALC;
	f._bf._base = f._p = malloc(INITIAL_SIZE);
	if (f._bf._base == NULL)
		goto err;
	f._bf._size = f._w = INITIAL_SIZE - 1;	/* leave room for the NUL */
	ret = __vfprintf(&f, fmt, ap);
	if (ret == -1)
		goto err;
	*f._p = '\0';
	if (ret + 1 > INITIAL_SIZE && ret + 1 < pgsz / 2) {
		/* midsize allocations can try to conserve memory */
		unsigned char *_base = recallocarray(f._bf._base,
		    f._bf._size + 1, ret + 1, 1);

		if (_base == NULL)
			goto err;
		*str = (char *)_base;
	} else
		*str = (char *)f._bf._base;
	return (ret);

err:
	free(f._bf._base);
	f._bf._base = NULL;
	*str = NULL;
	errno = ENOMEM;
	return (-1);
}
DEF_WEAK(vasprintf);
@


1.21
log
@Only reallocate the buffer to fit for medium-size allocations where
we expanded the buffer to a single page.  The final realloc() can
be expensive for large buffers and is not realled needed.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.20 2017/03/14 16:46:05 millert Exp $	*/
d49 3
a51 1
		unsigned char *_base = realloc(f._bf._base, ret + 1);
@


1.20
log
@Use a macro for the initial length of the buffer instead of 127; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.19 2015/12/28 22:08:18 mmcc Exp $	*/
d23 1
d26 1
a26 1
#define	INITIAL_LEN	127			/* plus one for the NUL */
d34 1
a34 1
	unsigned char *_base;
d39 1
a39 1
	f._bf._base = f._p = malloc(INITIAL_LEN + 1);
d42 1
a42 1
	f._bf._size = f._w = INITIAL_LEN;
d47 8
a54 4
	_base = realloc(f._bf._base, ret + 1);
	if (_base == NULL)
		goto err;
	*str = (char *)_base;
@


1.19
log
@Remove NULL-checks before free() and a few related dead assignments.

ok and valuable input from millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.18 2015/08/31 02:53:57 guenther Exp $	*/
d25 2
d38 1
a38 1
	f._bf._base = f._p = malloc(128);
d41 1
a41 1
	f._bf._size = f._w = 127;		/* Leave room for the NUL */
@


1.18
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.17 2015/08/20 21:49:29 deraadt Exp $	*/
d51 2
a52 4
	if (f._bf._base) {
		free(f._bf._base);
		f._bf._base = NULL;
	}
@


1.17
log
@All these files include <stdlib.h>, so do not need to cast
malloc/calloc/realloc* returns.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.16 2009/11/09 00:18:27 kurt Exp $	*/
d59 1
@


1.16
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

committing on behalf of and okay guenther@@ now that we have install
media space available.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.15 2009/10/22 01:23:16 guenther Exp $	*/
d36 1
a36 1
	f._bf._base = f._p = (unsigned char *)malloc(128);
@


1.15
log
@Back out previous commit, as it caused too much growth for the install
media to fit
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.14 2009/10/21 16:04:23 guenther Exp $	*/
d40 1
a40 1
	ret = vfprintf(&f, fmt, ap);
@


1.14
log
@Fix the handle locking in stdio to use flockfile/funlockfile
internally when and where required.  Macros in <stdio.h> are updated
to automatically call the underlying functions when the process is
threaded to obtain the necessary locking.  A private mutex is added
to protect __sglue, the internal list of FILE handles, and another
to protect the one-time initialization.  Some routines in libc that
use getc() change to use getc_unlocked() as they're either protected
by their own lock or aren't thread-safe routines anyway.

ok kurt@@, earlier version tested by sthen@@ and jj@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.13 2006/01/06 18:53:04 millert Exp $	*/
d40 1
a40 1
	ret = __vfprintf(&f, fmt, ap);
@


1.13
log
@Adapt things to use __type_t instead of _BSD_TYPE_T_
Add new sys/_types.h header
Include machine/_types.h or sys/_types.h where applicable
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.12 2005/10/10 12:00:52 espie Exp $	*/
d40 1
a40 1
	ret = vfprintf(&f, fmt, ap);
@


1.12
log
@Remove a few warnings. Those were not apparent thanks to a bug in gcc 2.95.

Patch by Leonardo Chiquitto Filho <leonardo@@iken.com.br>
Thanks.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.11 2005/08/08 08:05:36 espie Exp $	*/
d26 1
a26 1
vasprintf(char **str, const char *fmt, _BSD_VA_LIST_ ap)
@


1.11
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.10 2005/04/30 09:25:17 espie Exp $	*/
d21 1
@


1.10
log
@Change internals of FILE: reuse the unget buffer field to access an
extended attribute data structure (pimpl idiom). Idea taken from citrus.
Much discussion with deraadt@@, otto@@, millert@@...

This is the least disruptive way to extend FILE, since its size can't really
change without this being a flag day. So the size doesn't change.

Actual additions to the structure will come in separate steps, since this
change is nasty enough on its own.

Tests by otto@@ and others, careful reading of code by otto@@ and millert@@.

This is definitely a major bump, and has been checked to not impact a
full ports build.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.9 2004/09/28 18:12:44 otto Exp $	*/
a17 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.9 2004/09/28 18:12:44 otto Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.9
log
@deregister + ansify, no change in object code. ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.8 2003/06/17 21:56:24 millert Exp $	*/
d20 1
a20 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.8 2003/06/17 21:56:24 millert Exp $";
d26 1
d33 1
d36 1
@


1.8
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.7 2003/06/03 01:52:40 millert Exp $	*/
d20 1
a20 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.7 2003/06/03 01:52:40 millert Exp $";
d28 1
a28 4
vasprintf(str, fmt, ap)
	char **str;
	const char *fmt;
	_BSD_VA_LIST_ ap;
@


1.7
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.6 1998/10/16 16:11:56 millert Exp $	*/
d10 7
a16 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d20 1
a20 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.6 1998/10/16 16:11:56 millert Exp $";
@


1.6
log
@Make sure we free the buffer in all error cases.  Do the final
realloc(3) to the size of the string, not the size of the buffer
allocated for the string (which is a noop).  mycroft@@netbsd.org
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.5 1998/08/14 21:39:41 deraadt Exp $	*/
a4 1
 * All rights reserved.
d6 3
a8 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.5 1998/08/14 21:39:41 deraadt Exp $";
@


1.5
log
@realloc repair
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.4 1998/06/21 22:13:47 millert Exp $	*/
d31 1
a31 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.4 1998/06/21 22:13:47 millert Exp $";
d51 3
a53 6
	if (f._bf._base == NULL) {
		*str = NULL;
		errno = ENOMEM;
		return (-1);
	}
	f._bf._size = f._w = 127;		/* Leave room for the NULL */
d55 2
d58 9
a66 4
	_base = realloc(f._bf._base, f._bf._size + 1);
	if (_base == NULL) {
		if (f._bf._base)
			free(f._bf._base);
a67 2
		errno = ENOMEM;
		ret = -1;
d69 3
a71 3
	f._bf._base = _base;
	*str = (char *)f._bf._base;
	return (ret);
@


1.4
log
@Remove the advertising clause in my old license, it impedes free use
of the code as a large number of similar clauses makes it impossible
to write an ad for a product using the code...
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.3 1998/02/07 20:51:21 tholo Exp $	*/
d31 1
a31 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.3 1998/02/07 20:51:21 tholo Exp $";
d46 1
d59 5
a63 2
	f._bf._base = realloc(f._bf._base, f._bf._size + 1);
	if (f._bf._base == NULL) {
d67 1
@


1.3
log
@Cast pointer in assignment
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.2 1998/01/12 06:14:32 millert Exp $	*/
d15 1
a15 4
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Todd C. Miller.
 * 4. The name of the author may not be used to endorse or promote products
d31 1
a31 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.2 1998/01/12 06:14:32 millert Exp $";
@


1.2
log
@Based on some FreeBSD changes:
    For *s*printf, set f._file to -1 like the comments in stdio.h say.
    Use '\0', not 0, where appropriate.
    Don't error out on size of '0' for v?snprintf().
@
text
@d1 1
a1 1
/*	$OpenBSD: vasprintf.c,v 1.1 1997/11/29 19:54:47 millert Exp $	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD: vasprintf.c,v 1.1 1997/11/29 19:54:47 millert Exp $";
d66 1
a66 1
	*str = f._bf._base;
@


1.1
log
@Implement asprintf(3) and vasprintf(3) functions similar to the
ones in the glibc.  Some man pages changes from FreeBSD
(asprintf.c/vasprintf.c are not based on GNU or FreeBSD code).
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d34 1
a34 1
static char rcsid[] = "$OpenBSD$";
d50 1
@
