head	1.54;
access;
symbols
	OPENBSD_6_2:1.54.0.14
	OPENBSD_6_2_BASE:1.54
	OPENBSD_6_1:1.54.0.12
	OPENBSD_6_1_BASE:1.54
	OPENBSD_6_0:1.54.0.8
	OPENBSD_6_0_BASE:1.54
	OPENBSD_5_9:1.54.0.4
	OPENBSD_5_9_BASE:1.54
	OPENBSD_5_8:1.54.0.6
	OPENBSD_5_8_BASE:1.54
	OPENBSD_5_7:1.54.0.2
	OPENBSD_5_7_BASE:1.54
	OPENBSD_5_6:1.51.0.8
	OPENBSD_5_6_BASE:1.51
	OPENBSD_5_5:1.51.0.6
	OPENBSD_5_5_BASE:1.51
	OPENBSD_5_4:1.51.0.2
	OPENBSD_5_4_BASE:1.51
	OPENBSD_5_3:1.49.0.4
	OPENBSD_5_3_BASE:1.49
	OPENBSD_5_2:1.49.0.2
	OPENBSD_5_2_BASE:1.49
	OPENBSD_5_1_BASE:1.48
	OPENBSD_5_1:1.48.0.6
	OPENBSD_5_0:1.48.0.4
	OPENBSD_5_0_BASE:1.48
	OPENBSD_4_9:1.48.0.2
	OPENBSD_4_9_BASE:1.48
	OPENBSD_4_8:1.44.0.2
	OPENBSD_4_8_BASE:1.44
	OPENBSD_4_7:1.43.0.2
	OPENBSD_4_7_BASE:1.43
	OPENBSD_4_6:1.43.0.4
	OPENBSD_4_6_BASE:1.43
	OPENBSD_4_5:1.42.0.2
	OPENBSD_4_5_BASE:1.42
	OPENBSD_4_4:1.41.0.6
	OPENBSD_4_4_BASE:1.41
	OPENBSD_4_3:1.41.0.4
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.41.0.2
	OPENBSD_4_2_BASE:1.41
	OPENBSD_4_1:1.39.0.6
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.39.0.4
	OPENBSD_4_0_BASE:1.39
	OPENBSD_3_9:1.39.0.2
	OPENBSD_3_9_BASE:1.39
	OPENBSD_3_8:1.37.0.2
	OPENBSD_3_8_BASE:1.37
	OPENBSD_3_7:1.34.0.6
	OPENBSD_3_7_BASE:1.34
	OPENBSD_3_6:1.34.0.4
	OPENBSD_3_6_BASE:1.34
	OPENBSD_3_5:1.34.0.2
	OPENBSD_3_5_BASE:1.34
	OPENBSD_3_4:1.33.0.2
	OPENBSD_3_4_BASE:1.33
	OPENBSD_3_3:1.27.0.2
	OPENBSD_3_3_BASE:1.27
	OPENBSD_3_2:1.25.0.8
	OPENBSD_3_2_BASE:1.25
	OPENBSD_3_1:1.25.0.6
	OPENBSD_3_1_BASE:1.25
	OPENBSD_3_0:1.25.0.4
	OPENBSD_3_0_BASE:1.25
	OPENBSD_2_9:1.25.0.2
	OPENBSD_2_9_BASE:1.25
	OPENBSD_2_8:1.23.0.2
	OPENBSD_2_8_BASE:1.23
	OPENBSD_2_7:1.22.0.2
	OPENBSD_2_7_BASE:1.22
	OPENBSD_2_6:1.18.0.2
	OPENBSD_2_6_BASE:1.18
	OPENBSD_2_5:1.13.0.2
	OPENBSD_2_5_BASE:1.13
	OPENBSD_2_4:1.11.0.2
	OPENBSD_2_4_BASE:1.11
	OPENBSD_2_3:1.10.0.2
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.5.0.2
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.54
date	2014.10.26.12.54.18;	author millert;	state Exp;
branches;
next	1.53;
commitid	1wQhScS09ZuDF1BT;

1.53
date	2014.08.31.06.36.30;	author jmc;	state Exp;
branches;
next	1.52;
commitid	Uj9lgYoKH3BtNCeH;

1.52
date	2014.08.31.02.21.18;	author guenther;	state Exp;
branches;
next	1.51;
commitid	ByaPhxsk4NZYxbFu;

1.51
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.50;

1.50
date	2013.03.12.16.47.11;	author guenther;	state Exp;
branches;
next	1.49;

1.49
date	2012.06.01.01.01.57;	author guenther;	state Exp;
branches;
next	1.48;

1.48
date	2011.01.10.22.37.45;	author jmc;	state Exp;
branches;
next	1.47;

1.47
date	2011.01.10.20.59.14;	author millert;	state Exp;
branches;
next	1.46;

1.46
date	2011.01.07.21.57.01;	author nicm;	state Exp;
branches;
next	1.45;

1.45
date	2010.12.27.21.18.44;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2010.03.22.20.18.12;	author schwarze;	state Exp;
branches;
next	1.43;

1.43
date	2009.03.01.16.30.26;	author millert;	state Exp;
branches;
next	1.42;

1.42
date	2009.01.10.15.24.32;	author tobias;	state Exp;
branches;
next	1.41;

1.41
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.40;

1.40
date	2007.05.10.22.46.36;	author espie;	state Exp;
branches;
next	1.39;

1.39
date	2006.01.06.10.03.28;	author jmc;	state Exp;
branches;
next	1.38;

1.38
date	2006.01.06.10.01.25;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2005.07.26.03.30.25;	author jaredy;	state Exp;
branches;
next	1.36;

1.36
date	2005.07.26.03.17.31;	author jaredy;	state Exp;
branches;
next	1.35;

1.35
date	2005.05.27.17.45.56;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2003.10.17.09.50.18;	author jmc;	state Exp;
branches;
next	1.33;

1.33
date	2003.07.02.20.44.46;	author avsm;	state Exp;
branches;
next	1.32;

1.32
date	2003.07.02.06.36.38;	author pvalchev;	state Exp;
branches;
next	1.31;

1.31
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2003.06.01.18.56.04;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2003.05.03.19.08.21;	author jmc;	state Exp;
branches;
next	1.28;

1.28
date	2003.04.02.19.00.26;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2003.03.06.19.54.52;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.02.16.01.56.46;	author deraadt;	state Exp;
branches;
next	1.25;

1.25
date	2000.12.24.00.30.58;	author aaron;	state Exp;
branches;
next	1.24;

1.24
date	2000.11.22.18.13.23;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	2000.09.11.01.30.49;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	2000.04.20.01.39.32;	author aaron;	state Exp;
branches;
next	1.21;

1.21
date	2000.04.18.03.01.34;	author aaron;	state Exp;
branches;
next	1.20;

1.20
date	2000.01.27.04.42.48;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2000.01.22.12.00.42;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	99.09.14.06.21.23;	author pjanzen;	state Exp;
branches;
next	1.17;

1.17
date	99.08.11.02.32.08;	author todd;	state Exp;
branches;
next	1.16;

1.16
date	99.06.06.15.17.31;	author aaron;	state Exp;
branches;
next	1.15;

1.15
date	99.05.25.21.16.26;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	99.05.16.19.55.09;	author alex;	state Exp;
branches;
next	1.13;

1.13
date	98.12.15.19.31.17;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.12.15.19.19.50;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	98.06.30.23.03.11;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	98.03.16.22.32.31;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.03.12.20.03.52;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.03.09.23.24.27;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	98.03.07.22.18.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.02.23.19.33.01;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.10.07.22.21.33;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.06.20.04.10.18;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.21.19.03.29;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.32.55;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.14;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.54
log
@The open flags param to mkostemps() should be "flags" not "oflags"
for consistency with the rest of the manual.
@
text
@.\"	$OpenBSD: mktemp.3,v 1.53 2014/08/31 06:36:30 jmc Exp $
.\"
.\" Copyright (c) 1989, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: August 31 2014 $
.Dt MKTEMP 3
.Os
.Sh NAME
.Nm mktemp ,
.Nm mkstemp ,
.Nm mkostemp ,
.Nm mkstemps ,
.Nm mkostemps ,
.Nm mkdtemp
.Nd make temporary file name (unique)
.Sh SYNOPSIS
.In stdlib.h
.Ft char *
.Fn mktemp "char *template"
.Ft int
.Fn mkstemp "char *template"
.Ft int
.Fn mkstemps "char *template" "int suffixlen"
.Ft char *
.Fn mkdtemp "char *template"
.In stdlib.h
.In fcntl.h
.Ft int
.Fn mkostemp "char *template" "int flags"
.Ft int
.Fn mkostemps "char *template" "int suffixlen" "int flags"
.Sh DESCRIPTION
The
.Fn mktemp
family of functions take the given file name template and overwrite
a portion of it to create a new file name.
This file name is unique and suitable for use by the application.
The template may be any file name with at least six trailing
.Em X Ns s ,
for example
.Pa /tmp/temp.XXXXXXXX .
The trailing
.Em X Ns s
are replaced with a unique digit and letter combination.
The number of unique file names that can be returned
depends on the number of
.Em X Ns s
provided;
.Fn mktemp
will try at least 2 ** 31 combinations before giving up.
At least six
.Em X Ns s
must be used, though 10 is much better.
.Pp
The
.Fn mktemp
function generates a temporary file name based on a template as
described above.
Because
.Fn mktemp
does not actually create the temporary file there is a window of
opportunity during which another process can open the file instead.
Because of this race condition,
.Fn mktemp
should not be used where
.Fn mkstemp
can be used instead.
.Fn mktemp
was marked as a legacy interface in
.St -p1003.1-2001 .
.Pp
The
.Fn mkstemp
function makes the same replacement to the template and creates the template
file, mode 0600, returning a file descriptor opened for reading and writing.
This avoids the race between testing for a file's existence and opening it
for use.
.Pp
The
.Fn mkostemp
function acts the same as
.Fn mkstemp ,
except that the
.Fa flags
argument may contain zero or more of the following flags for the underlying
.Xr open 2
system call:
.Pp
.Bl -tag -width "O_CLOEXECXX" -offset indent -compact
.It Dv O_APPEND
Append on each write.
.It Dv O_CLOEXEC
Set the close-on-exec flag on the new file descriptor.
.It Dv O_SYNC
Perform synchronous I/O operations.
.El
.Pp
The
.Fn mkstemps
and
.Fn mkostemps
functions act the same as
.Fn mkstemp
and
.Fn mkostemp ,
except they permit a suffix to exist in the template.
The template should be of the form
.Pa /tmp/tmpXXXXXXXXXXsuffix .
.Fn mkstemps
and
.Fn mkostemps
are told the length of the suffix string, i.e.,
.Li strlen("suffix") .
.Pp
The
.Fn mkdtemp
function makes the same replacement to the template as in
.Fn mktemp
and creates the template directory, mode 0700.
.Sh RETURN VALUES
The
.Fn mktemp
and
.Fn mkdtemp
functions return a pointer to the template on success and
.Dv NULL
on failure.
The
.Fn mkstemp ,
.Fn mkostemp ,
.Fn mkstemps ,
and
.Fn mkostemps
functions return \-1 if no suitable file could be created.
If any call fails, an error code is placed in the global variable
.Va errno .
.Sh EXAMPLES
Quite often a programmer will want to replace a use of
.Fn mktemp
with
.Fn mkstemp ,
usually to avoid the problems described above.
Doing this correctly requires a good understanding of the code in question.
.Pp
For instance, code of this form:
.Bd -literal -offset indent
char sfn[19];
FILE *sfp;

strlcpy(sfn, "/tmp/ed.XXXXXXXXXX", sizeof(sfn));
if (mktemp(sfn) == NULL || (sfp = fopen(sfn, "w+")) == NULL) {
	warn("%s", sfn);
	return (NULL);
}
return (sfp);
.Ed
.Pp
should be rewritten like this:
.Bd -literal -offset indent
char sfn[19];
FILE *sfp;
int fd;

strlcpy(sfn, "/tmp/ed.XXXXXXXXXX", sizeof(sfn));
if ((fd = mkstemp(sfn)) == -1 ||
    (sfp = fdopen(fd, "w+")) == NULL) {
	if (fd != -1) {
		unlink(sfn);
		close(fd);
	}
	warn("%s", sfn);
	return (NULL);
}
return (sfp);
.Ed
.Pp
Often one will find code which uses
.Fn mktemp
very early on, perhaps to globally initialize the template nicely, but the
code which calls
.Xr open 2
or
.Xr fopen 3
on that file name will occur much later.
(In almost all cases, the use of
.Xr fopen 3
will mean that the flags
.Dv O_CREAT
|
.Dv O_EXCL
are not given to
.Xr open 2 ,
and thus a symbolic link race becomes possible, hence making
necessary the use of
.Xr fdopen 3
as seen above.)
Furthermore, one must be careful about code which opens, closes, and then
re-opens the file in question.
Finally, one must ensure that upon error the temporary file is
removed correctly.
.Pp
There are also cases where modifying the code to use
.Fn mktemp ,
in concert with
.Xr open 2
using the flags
.Dv O_CREAT
|
.Dv O_EXCL ,
is better, as long as the code retries a new template if
.Xr open 2
fails with an
.Va errno
of
.Er EEXIST .
.Sh ERRORS
The
.Fn mktemp ,
.Fn mkstemp ,
.Fn mkostemp ,
and
.Fn mkdtemp
functions may set
.Va errno
to one of the following values:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Ar template
argument has fewer than six trailing
.Em X Ns s .
.It Bq Er EEXIST
All file names tried are already in use.
Consider appending more
.Em X Ns s to the
.Ar template .
.El
.Pp
The
.Fn mkstemps
and
.Fn mkostemps
functions may set
.Va errno
to
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Ar template
argument length is less than
.Ar suffixlen
or it has fewer than six
.Em X Ns s
before the suffix.
.It Bq Er EEXIST
All file names tried are already in use.
Consider appending more
.Em X Ns s to the
.Ar template .
.El
.Pp
In addition, the
.Fn mkostemp
and
.Fn mkostemps
functions may also set
.Va errno
to
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa flags
is invalid.
.El
.Pp
The
.Fn mktemp
function may also set
.Va errno
to any value specified by the
.Xr lstat 2
function.
.Pp
The
.Fn mkstemp ,
.Fn mkostemp ,
.Fn mkstemps ,
and
.Fn mkostemps
functions may also set
.Va errno
to any value specified by the
.Xr open 2
function.
.Pp
The
.Fn mkdtemp
function may also set
.Va errno
to any value specified by the
.Xr mkdir 2
function.
.Sh SEE ALSO
.Xr chmod 2 ,
.Xr lstat 2 ,
.Xr mkdir 2 ,
.Xr open 2 ,
.Xr tempnam 3 ,
.Xr tmpfile 3 ,
.Xr tmpnam 3
.Sh STANDARDS
The
.Fn mkdtemp
and
.Fn mkstemp
functions conform to the
.St -p1003.1-2008
specification.
The ability to specify more than six
.Em X Ns s
is an extension to that standard.
The
.Fn mkostemp
function is expected to conform to a future revision of that standard.
.Pp
The
.Fn mktemp
function conforms to
.St -p1003.1-2001 ;
as of
.St -p1003.1-2008
it is no longer a part of the standard.
.Pp
The
.Fn mkstemps
and
.Fn mkostemps
functions are non-standard and should not be used if portability is required.
.Sh HISTORY
A
.Fn mktemp
function appeared in
.At v7 .
The
.Fn mkdtemp
function appeared in
.Ox 2.2 .
The
.Fn mkstemp
function appeared in
.Bx 4.4 .
The
.Fn mkstemps
function appeared in
.Ox 2.3 .
The
.Fn mkostemp
and
.Fn mkostemps
functions appeared in
.Ox 5.7 .
.Sh BUGS
For
.Fn mktemp
there is an obvious race between file name selection and file
creation and deletion: the program is typically written to call
.Xr tmpnam 3 ,
.Xr tempnam 3 ,
or
.Fn mktemp .
Subsequently, the program calls
.Xr open 2
or
.Xr fopen 3
and erroneously opens a file (or symbolic link, FIFO or other
device) that the attacker has created in the expected file location.
Hence
.Fn mkstemp
is recommended, since it atomically creates the file.
An attacker can guess the file names produced by
.Fn mktemp .
Whenever it is possible,
.Fn mkstemp
or
.Fn mkdtemp
should be used instead.
.Pp
For this reason,
.Xr ld 1
will output a warning message whenever it links code that uses
.Fn mktemp .
@


1.53
log
@provide section numbers for xrs;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.52 2014/08/31 02:21:18 guenther Exp $
d56 1
a56 1
.Fn mkostemps "char *template" "int suffixlen" "int oflags"
@


1.52
log
@Add additional userland interfaces for setting close-on-exec on fds
when creating them: mkostemp(), mkostemps(), the 'e' mode letter for
fopen(), freopen(), fdopen(), and popen().  The close-on-exec flag will
be cleared by the action created by posix_spawn_file_actions_adddup2().

Also, add support for the C11 'x' mode letter for fopen() and freopen(),
setting O_EXCL when possibly creating files.

Note: this requires kernel support for pipe2() and dup3()!

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.51 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d111 1
a111 1
.Xr open
@


1.51
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.50 2013/03/12 16:47:11 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: March 12 2013 $
d36 1
d38 1
d51 6
d63 2
a64 1
The template may be any file name with at least six trailing Xs,
d67 3
a69 1
The trailing Xs are replaced with a unique digit and letter combination.
d71 3
a73 1
depends on the number of Xs provided;
d76 3
a78 1
At least six Xs must be used, though 10 is much better.
d105 1
a105 1
.Fn mkstemps
d108 24
a131 1
except it permits a suffix to exist in the template.
d135 3
a137 1
is told the length of the suffix string, i.e.,
d154 3
a156 1
.Fn mkstemp
d158 1
a158 1
.Fn mkstemps
d245 1
d255 2
a256 1
argument has fewer than six trailing Xs.
d259 2
a260 1
Consider appending more Xs to the
d265 36
d309 6
a314 2
.Fn mkstemp
function may also set
a320 16
.Fn mkstemps
function may also set
.Va errno
to any value specified by the
.Xr open 2
function or,
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Ar template
argument length is less than
.Ar suffixlen
or it has fewer than six Xs before the suffix.
.El
.Pp
The
d343 6
a348 1
The ability to specify more than six Xs is an extension to that standard.
d360 3
a362 1
function is non-standard and should not be used if portability is required.
d380 6
@


1.50
log
@Return EINVAL if there are fewer than six template Xs in the path.

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.49 2012/06/01 01:01:57 guenther Exp $
d30 1
a30 1
.Dd $Mdocdate: June 1 2012 $
d40 1
a40 1
.Fd #include <stdlib.h>
@


1.49
log
@Improve standards conformance: ecvt(), fcvt(), gcvt(), mktemp(), ttyslot(),
and valloc() are not in the current version, while posix_memalign() mkstemp(),
and mkdtemp() are, and setstate()'s argument has lost a bogus 'const'.

ok millert@@ jmc@@ espie@@ kettenis@@; ports build testing by naddy@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.48 2011/01/10 22:37:45 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: January 10 2011 $
d55 3
a57 3
The template may be any file name with some number of Xs appended
to it, for example
.Pa /tmp/temp.XXXXXX .
d60 1
a60 1
depends on the number of Xs provided; six Xs will result in
d62 2
a63 5
testing roughly 62 ** 6 combinations.
At least 6 Xs should be used, though 10 is much better.
Some
.No non- Ns Bx
implementations return an error if fewer than 6 Xs are used.
d200 6
a205 1
These functions may set
d212 1
a212 1
argument is an empty string.
d244 5
a248 1
The suffix length is longer than the template length.
d274 1
a274 3
The ability to specify more than six Xs and setting
.Xr errno 2
in case of errors are extensions to that standard.
@


1.48
log
@tweak previous; ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.47 2011/01/10 20:59:14 millert Exp $
d271 8
@


1.47
log
@mkdtemp() is present in POSIX 1003.1-2008
Add a warning about using less than 6 Xs causing an error on some systems
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.46 2011/01/07 21:57:01 nicm Exp $
d30 1
a30 1
.Dd $Mdocdate: January 7 2011 $
d266 2
a267 1
.St -p1003.1-2008 .
d270 1
a270 1
in case of errors are extensions to the standard.
@


1.46
log
@mktemp(3) can be used, but not where mkstemp(3) is an alternative. Also
trim an inaccurate comment about its future removal.

ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.45 2010/12/27 21:18:44 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: December 27 2010 $
d64 3
d262 1
a262 1
.Fn mktemp
d266 1
a266 4
.St -xpg4 ,
but
.Fn mktemp
is marked as legacy.
d269 1
a269 1
in case of errors are extensions to this standard.
a271 2
.Fn mkdtemp
and
d273 1
a273 1
functions are non-standard and should not be used if portability is required.
@


1.45
log
@mktemp(3) (and thus mktemp(1)) no longer use the process ID when
replacing the Xs, it is now purely random.
Also replace a use of .Fn that should be .Xr.
OK jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.44 2010/03/22 20:18:12 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: March 22 2010 $
d75 3
a77 1
should not be used in new code.
d80 1
a80 3
.St -p1003.1-2001
and may be removed in a future release of
.Ox .
@


1.44
log
@Various improvements, mainly regarding ERRORS.

* Document EINVAL and EEXIST.
* Neither mkstemp nor mkdtemp use lstat, but mktemp does.
* Documenting ENOTDIR is useless, it is documented in lstat(2), mkdir(2)
  and open(2), and it's just one thing out of several that could go wrong.
* Refer to lstat(2) instead of stat(2), which is actually used here.
* State that two of these functions are standardized in the XPG.
* Move the sentence about mkdtemp and mkstemps to the new STANDARDS section.
* Get rid of the ugly ".So Li X Sc Ns s", just use "Xs" (suggested by jmc@@).

tweaks and ok  jmc@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.43 2009/03/01 16:30:26 millert Exp $
d30 1
a30 1
.Dd $Mdocdate: March 1 2009 $
a250 1
.Xr getpid 2 ,
@


1.43
log
@Update to match mktemp.c changes
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.42 2009/01/10 15:24:32 tobias Exp $
d30 1
a30 1
.Dd $Mdocdate: January 10 2009 $
d55 1
a55 4
The template may be any file name with some number of
.So Li X
.Sc Ns s
appended
d58 3
a60 11
The trailing
.So Li X Sc Ns s
are replaced with a unique digit and letter combination.
The number of unique file names that
can be returned depends on the number of
.So Li X Sc Ns s
provided; six
.So Li X
.Sc Ns s
will
result in
d63 1
a63 4
At least 6
.So Li X
.Sc Ns s
should be used, though 10 is much better.
d200 1
a200 5
The
.Fn mkstemp
and
.Fn mkdtemp
functions may set
d204 8
a211 2
.It Bq Er ENOTDIR
The path name portion of the template is not an existing directory.
d215 2
a216 4
.Fn mkstemp
and
.Fn mkdtemp
functions may also set
d219 1
a219 1
.Xr stat 2
d252 1
a254 1
.Xr stat 2 ,
d258 19
a323 6
.Pp
The
.Fn mkdtemp
and
.Fn mkstemps
functions are non-standard and should not be used if portability is required.
@


1.42
log
@The process number is longer used to replace trailing 'Xs'.

ok jmc, millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.41 2007/05/31 19:19:31 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d63 1
a63 1
are replaced with a unique letter combination.
d73 1
a73 1
testing roughly 26 ** 6 combinations.
@


1.41
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.40 2007/05/10 22:46:36 espie Exp $
d30 1
a30 1
.Dd $Mdocdate$
d63 1
a63 2
are replaced with the current process number and/or a
unique letter combination.
@


1.40
log
@grammar,
okay jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.39 2006/01/06 10:03:28 jmc Exp $
d30 1
a30 1
.Dd June 4, 1993
@


1.39
log
@fix the mkstemps .Fn;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.38 2006/01/06 10:01:25 jmc Exp $
d88 1
a88 1
Because of this race condition the
@


1.38
log
@in code fragment:

- allocate enough space for sfn.
- remove variable initializations that get overwritten anyway.
- change spaces to tabs.
- change "sizeof sfn" to "sizeof(sfn)".
- change fprintf(stderr) to warn().

from ray lai;
ok millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.37 2005/07/26 03:30:25 jaredy Exp $
d46 1
a46 1
.Fn mkstemps "char *template, int suffixlen"
@


1.37
log
@- typos, punctuation, spacing, macro, layout, etc. fixes
- avoid first person

ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.36 2005/07/26 03:17:31 jaredy Exp $
d145 1
a145 1
char sfn[15] = "";
d148 1
a148 1
strlcpy(sfn, "/tmp/ed.XXXXXXXXXX", sizeof sfn);
d150 2
a151 2
        fprintf(stderr, "%s: %s\en", sfn, strerror(errno));
        return (NULL);
d158 1
a158 1
char sfn[15] = "";
d160 1
a160 1
int fd = -1;
d162 1
a162 1
strlcpy(sfn, "/tmp/ed.XXXXXXXXXX", sizeof sfn);
d165 6
a170 6
        if (fd != -1) {
                unlink(sfn);
                close(fd);
        }
        fprintf(stderr, "%s: %s\en", sfn, strerror(errno));
        return (NULL);
@


1.36
log
@note error return of mkstemps; ok millert, jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.35 2005/05/27 17:45:56 millert Exp $
d62 1
a62 2
.So Li X
.Sc Ns s
d67 1
a67 2
.So Li X
.Sc Ns s
d112 2
a113 1
is told the length of the suffix string, i.e., strlen("suffix");
@


1.35
log
@mktemp(3) et al. go in stdlib.h, not unistd.h.  While there be more
explicit about mktemp(3) in the man page.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.34 2003/10/17 09:50:18 jmc Exp $
d131 4
a134 2
function returns \-1 if no suitable file could be created.
If either call fails an error code is placed in the global variable
@


1.34
log
@typo;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.33 2003/07/02 20:44:46 avsm Exp $
d40 1
a40 1
.Fd #include <unistd.h>
d52 2
a53 2
function takes the given file name template and overwrites a portion of it
to create a file name.
d60 1
a60 1
.Pa /tmp/temp.XXXX .
d66 2
a67 3
The number of unique file names
.Fn mktemp
can return depends on the number of
d83 17
d181 1
a181 1
on that filename will occur much later.
d223 1
a223 1
The pathname portion of the template is not an existing directory.
d307 1
a307 1
An attacker can guess the filenames produced by
@


1.33
log
@nonstandard->non-standard
jmc@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.32 2003/07/02 06:36:38 pvalchev Exp $
d177 1
a177 1
as seen above).
@


1.32
log
@6 X's -> 10 X's in all examples, per avsm's idea, millert agrees
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.31 2003/06/02 20:18:37 millert Exp $
d308 1
a308 1
functions are nonstandard and should not be used if portability is required.
@


1.31
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.30 2003/06/01 18:56:04 jmc Exp $
d96 1
a96 1
.Pa /tmp/tmpXXXXXXsuffix .
d131 1
a131 1
strlcpy(sfn, "/tmp/ed.XXXXXX", sizeof sfn);
d145 1
a145 1
strlcpy(sfn, "/tmp/ed.XXXXXX", sizeof sfn);
@


1.30
log
@- section reorder
- kill unnecessary .Ns macros
- add some man page section numbers to .Xr's
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.29 2003/05/03 19:08:21 jmc Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.29
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.28 2003/04/02 19:00:26 jmc Exp $
d107 1
a107 1
.Xr mktemp 3
a121 86
.Sh ERRORS
The
.Fn mkstemp
and
.Fn mkdtemp
functions may set
.Va errno
to one of the following values:
.Bl -tag -width Er
.It Bq Er ENOTDIR
The pathname portion of the template is not an existing directory.
.El
.Pp
The
.Fn mkstemp
and
.Fn mkdtemp
functions may also set
.Va errno
to any value specified by the
.Xr stat 2
function.
.Pp
The
.Fn mkstemp
function may also set
.Va errno
to any value specified by the
.Xr open 2
function.
.Pp
The
.Fn mkstemps
function may also set
.Va errno
to any value specified by the
.Xr open 2
function or,
.Bl -tag -width Er
.It Bq Er EINVAL
The suffix length is longer than the template length.
.El
.Pp
The
.Fn mkdtemp
function may also set
.Va errno
to any value specified by the
.Xr mkdir 2
function.
.Sh BUGS
For
.Fn mktemp
there is an obvious race between file name selection and file
creation and deletion: the program is typically written to call
.Xr tmpnam 3 ,
.Xr tempnam 3 ,
or
.Fn mktemp .
Subsequently, the program calls
.Xr open 2
or
.Xr fopen 3
and erroneously opens a file (or symbolic link, FIFO or other
device) that the attacker has created in the expected file location.
Hence
.Fn mkstemp
is recommended, since it atomically creates the file.
An attacker can guess the filenames produced by
.Fn mktemp .
Whenever it is possible,
.Fn mkstemp
or
.Fn mkdtemp
should be used instead.
.Pp
For this reason,
.Xr ld 1
will output a warning message whenever it links code that uses
.Fn mktemp .
.Pp
The
.Fn mkdtemp
and
.Fn mkstemps
functions are nonstandard and should not be used if portability is required.
d201 50
d277 36
@


1.28
log
@fifo -> FIFO

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.27 2003/03/06 19:54:52 jmc Exp $
d200 1
a200 1
will output a warning message whenever it links code that uses the
@


1.27
log
@.Xr's;
typos in man page section

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.26 2003/02/16 01:56:46 deraadt Exp $
d185 1
a185 1
and erroneously opens a file (or symbolic link, fifo or other
@


1.26
log
@teach people about strlcpy, not strcpy
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.25 2000/12/24 00:30:58 aaron Exp $
d199 1
a199 1
.Xr ld 8
@


1.25
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.24 2000/11/22 18:13:23 deraadt Exp $
d221 1
a221 1
strcpy(sfn, "/tmp/ed.XXXXXX");
@


1.24
log
@use strlcpy in the example
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.23 2000/09/11 01:30:49 aaron Exp $
d89 2
a90 3
function
makes the same replacement to the template and creates the template file,
mode 0600, returning a file descriptor opened for reading and writing.
d127 1
a127 2
functions
may set
@


1.23
log
@The mkstemp() function appeared in 4.4BSD; todd@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.22 2000/04/20 01:39:32 aaron Exp $
d237 1
a237 1
strcpy(sfn, "/tmp/ed.XXXXXX");
@


1.22
log
@Flesh out all of the stdio man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.21 2000/04/18 03:01:34 aaron Exp $
a302 1
.Pp
d307 4
@


1.21
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.20 2000/01/27 04:42:48 deraadt Exp $
d56 1
a56 2
function
takes the given file name template and overwrites a portion of it
d58 1
a58 2
This file name is unique and suitable for use
by the application.
d120 1
a120 2
function
returns \-1 if no suitable file could be created.
d141 1
a141 2
functions
may also set
d149 1
a149 2
function
may also set
d157 1
a157 2
function
may also set
d169 1
a169 2
function
may also set
d180 3
a182 2
.Xr tempnam 3 , or
.Ns Fn mktemp .
d209 1
a209 2
functions are nonstandard and should not be used if portability
is required.
d216 1
a216 2
Doing this correctly requires a good understanding of the
code in question.
@


1.20
log
@repair nroff botch
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.19 2000/01/22 12:00:42 aaron Exp $
d101 2
a102 2
except it permits a suffix to exist in the template.  The template
should be of the form
@


1.19
log
@Use .Va macro when referring to the global variable errno.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.18 1999/09/14 06:21:23 pjanzen Exp $
d187 2
a188 2
.Xr tempnam 3 , or Ns
.Fn mktemp .
@


1.18
log
@Tidying and spelling
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.17 1999/08/11 02:32:08 todd Exp $
d293 4
a296 2
fails with an errno of
.Dv EEXIST .
@


1.17
log
@paste'o away!
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.16 1999/06/06 15:17:31 aaron Exp $
d62 2
a63 1
.Ql X Ns s
d68 2
a69 1
.Ql X Ns s
d75 2
a76 1
.Ql X Ns s
d78 2
a79 1
.Ql X Ns s
d85 2
a86 1
.Ql X Ns s
d105 1
a105 1
is told the length of the suffix string, ie. strlen("suffix");
d226 1
a226 1
For instance code of this form
d274 2
a275 2
and thus a symbolic link race becomes possible; hence making
neccessary the use of
d284 1
a284 1
.Fn mktemp
d290 2
a291 2
.Dv O_EXCL
is better, as long as the code retries a new template when
@


1.16
log
@some NAME section cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.15 1999/05/25 21:16:26 aaron Exp $
d228 1
a228 1
        fprintf(stderr, "%s: %s\n", sfn, strerror(errno));
d247 1
a247 1
        fprintf(stderr, "%s: %s\n", sfn, strerror(errno));
@


1.15
log
@kill some old macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.14 1999/05/16 19:55:09 alex Exp $
d38 4
a41 1
.Nm mktemp
d239 1
a239 1
 
@


1.14
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.13 1998/12/15 19:31:17 deraadt Exp $
d301 1
a301 1
.br
@


1.13
log
@more
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.12 1998/12/15 19:19:50 deraadt Exp $
d293 1
d295 1
a295 2
.Xr tmpnam 3 ,
.Xr tempnam 3
@


1.12
log
@flesh out this man page with some examples
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.11 1998/06/30 23:03:11 deraadt Exp $
d257 2
a258 4
on that filename will occur much later.  Modifying such code for
.Fn mkstemp
can be difficult.
(In almost all cases, the use of of
d261 6
a266 2
.Dv O_CREAT | O_EXCL
are not open, and thus a symbolic link race becomes possible; hence making
d274 13
@


1.11
log
@add mkstemp(char *template, int suffixlen) interface
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.10 1998/03/16 22:32:31 deraadt Exp $
d209 63
@


1.10
log
@oops
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.9 1998/03/12 20:03:52 deraadt Exp $
d46 2
d90 10
d153 13
d205 3
a207 1
function is nonstandard and should not be used if portability
d228 4
@


1.9
log
@explain security considerations in some detail
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.8 1998/03/09 23:24:27 deraadt Exp $
d154 1
a154 1
.Xr tmpnam 3 , or Ns
@


1.8
log
@at least 6 X, 10 is better
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.7 1998/03/07 22:18:07 millert Exp $
d149 16
d173 5
d187 4
a190 1
.Xr stat 2
@


1.7
log
@.Bx Open -> .Ox 2.x
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.6 1998/02/23 19:33:01 millert Exp $
d75 3
@


1.6
log
@Mention that mkdtemp() is not portable.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.5 1997/10/07 22:21:33 millert Exp $
d173 1
a173 2
.Bx Open
2.2.
@


1.5
log
@1) Don't truncate the input string when a directory cannot be stat'd
2) Use traditional mktemp(3) semantics.  Don't return an error if
   directories in the path don't exist yet for mktemp(3) only.
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.4 1997/06/20 04:10:18 millert Exp $
d148 1
a148 1
Whenever it is possible
d150 2
d153 5
d169 6
@


1.4
log
@Add mkdtemp(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.3 1996/08/21 19:03:29 deraadt Exp $
a104 1
.Fn mktemp ,
a117 1
.Fn mktemp ,
@


1.3
log
@explain why mktemp is unsafe
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.2 1996/08/19 08:32:55 tholo Exp $
d46 2
d83 6
d92 3
a94 2
function
returns a pointer to the template on success and
d105 2
a106 1
.Fn mktemp
d108 1
a108 1
.Fn mkstemp
d119 2
a120 1
.Fn mktemp
d122 1
a122 1
.Fn mkstemp
d138 9
d156 1
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: mktemp.3,v 1.5 1995/02/02 01:15:46 jtc Exp $
d127 6
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: mktemp.3,v 1.5 1995/02/02 01:15:46 jtc Exp $
a32 2
.\"
.\"     @@(#)mktemp.3	8.1 (Berkeley) 6/4/93
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

