head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.2
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.17.0.12
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.8
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.4
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.24
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.22
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.20
	OPENBSD_5_0:1.15.0.18
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.6
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.4
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.2
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.10
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.8
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.6
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.4
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.3.0.4
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.18
date	2017.07.04.15.33.03;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	97dwhlrMQcefLzDD;

1.17
date	2015.01.13.14.02.30;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	vuDIxCTQQireD6ui;

1.16
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2007.06.21.13.47.07;	author moritz;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.03.19.07.04.51;	author ray;	state Exp;
branches;
next	1.12;

1.12
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.11;

1.11
date	2004.08.20.18.17.35;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.01.18.56.04;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2000.12.24.00.30.57;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	2000.04.20.01.39.31;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.09.21.01.47.08;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.09.15.21.26.58;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.21.12.21.29;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	98.06.15.17.54.49;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.32.28;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@1. mild deprecation notice
2. point to getline (suggested by nicm@@)
3. cross reference fgetc(3) rather than putc(3)
4. add missing error handling to the example code

OK nicm@@
@
text
@.\"	$OpenBSD: fgetln.3,v 1.17 2015/01/13 14:02:30 schwarze Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: January 13 2015 $
.Dt FGETLN 3
.Os
.Sh NAME
.Nm fgetln
.Nd get a line from a stream
.Sh SYNOPSIS
.In stdio.h
.Ft char *
.Fn fgetln "FILE *stream" "size_t *len"
.Sh DESCRIPTION
Using this function is error-prone in multiple ways;
consider using the safer and more portable function
.Xr getline 3
instead.
.Pp
The
.Fn fgetln
function returns a pointer to the next line from the stream referenced by
.Fa stream .
This line is
.Em not
a C string as it does not end with a terminating NUL character.
The length of the line, including the final newline,
is stored in the memory location to which
.Fa len
points and is guaranteed to be greater than 0 upon successful completion.
(Note, however, that if the last line in the stream does not end in a newline,
the returned text will not contain a newline.)
.Sh RETURN VALUES
Upon successful completion a pointer is returned;
this pointer becomes invalid after the next I/O operation on
.Fa stream
(whether successful or not)
or as soon as the stream is closed.
Otherwise,
.Dv NULL
is returned.
.Pp
The
.Fn fgetln
function does not distinguish between end-of-file and error; the routines
.Xr feof 3
and
.Xr ferror 3
must be used
to determine which occurred.
If an error occurs, the global variable
.Va errno
is set to indicate the error.
The end-of-file condition is remembered, even on a terminal, and all
subsequent attempts to read will return
.Dv NULL
until the condition is
cleared with
.Xr clearerr 3 .
.Pp
The text to which the returned pointer points may be modified,
provided that no changes are made beyond the returned size.
These changes are lost as soon as the pointer becomes invalid.
.Sh ERRORS
.Bl -tag -width [EBADF]
.It Bq Er EBADF
The argument
.Fa stream
is not a stream open for reading.
.El
.Pp
The
.Fn fgetln
function may also fail and set
.Va errno
for any of the errors specified for the routines
.Xr fflush 3 ,
.Xr malloc 3 ,
.Xr read 2 ,
.Xr stat 2 ,
or
.Xr realloc 3 .
.Sh SEE ALSO
.Xr ferror 3 ,
.Xr fgetc 3 ,
.Xr fgets 3 ,
.Xr fopen 3 ,
.Xr fparseln 3 ,
.Xr getline 3
.Sh HISTORY
The
.Fn fgetln
function first appeared in
.Bx 4.4 .
.Sh CAVEATS
Since the returned buffer is not a C string (it is not NUL terminated), a
common practice is to replace the newline character with
.Sq \e0 .
However, if the last line in a file does not contain a newline,
the returned text won't contain a newline either.
The following code demonstrates how to deal with this problem by allocating a
temporary buffer:
.Bd -literal
	char *buf, *lbuf;
	size_t len;

	lbuf = NULL;
	while ((buf = fgetln(fp, &len))) {
		if (buf[len - 1] == '\en')
			buf[len - 1] = '\e0';
		else {
			/* EOF without EOL, copy and add the NUL */
			if ((lbuf = malloc(len + 1)) == NULL)
				err(1, NULL);
			memcpy(lbuf, buf, len);
			lbuf[len] = '\e0';
			buf = lbuf;
		}
		printf("%s\en", buf);
	}
	free(lbuf);
	if (ferror(fp))
		err(1, "fgetln");
.Ed
@


1.17
log
@remove .Tn from stdio manuals; Kaspars Bankovskis found one of these
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.16 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d41 5
d111 1
d115 1
a115 1
.Xr putc 3
d148 2
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.15 2007/06/21 13:47:07 moritz Exp $
d30 1
a30 1
.Dd $Mdocdate: June 21 2007 $
d47 1
a47 3
a C string as it does not end with a terminating
.Tn NUL
character.
d56 1
a56 3
this pointer becomes invalid after the next
.Tn I/O
operation on
@


1.15
log
@The `len' argument is guaranteed to be > 0 upon successful completion.
ok jmc@@ ray@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.14 2007/05/31 19:19:31 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d37 1
a37 1
.Fd #include <stdio.h>
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.13 2006/03/19 07:04:51 ray Exp $
d30 1
a30 1
.Dd $Mdocdate$
d53 1
a53 1
points.
@


1.13
log
@Remove extraneous cast to malloc call in fgetln example.

OK otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.12 2005/02/25 03:12:44 cloder Exp $
d30 1
a30 1
.Dd April 19, 1994
@


1.12
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.11 2004/08/20 18:17:35 millert Exp $
d137 1
a137 1
			if ((lbuf = (char *)malloc(len + 1)) == NULL)
@


1.11
log
@Don't need to check lbuf != NULL when free()ing it.  In addition,
since the EOF w/o EOL can only happen for the last line, move the
free() outside the loop so we only do it once.  OK otto@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.10 2003/06/02 20:18:37 millert Exp $
d120 1
a120 1
Since the returned buffer is not a C string (it is not null terminated), a
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.9 2003/06/01 18:56:04 jmc Exp $
d136 1
a143 5

		if (lbuf != NULL) {
			free(lbuf);
			lbuf = NULL;
		}
d145 1
@


1.9
log
@- section reorder
- kill unnecessary .Ns macros
- add some man page section numbers to .Xr's
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.8 2000/12/24 00:30:57 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.7 2000/04/20 01:39:31 aaron Exp $
d112 11
a153 11
.Sh SEE ALSO
.Xr ferror 3 ,
.Xr fgets 3 ,
.Xr fopen 3 ,
.Xr fparseln 3 ,
.Xr putc 3
.Sh HISTORY
The
.Fn fgetln
function first appeared in
.Bx 4.4 .
@


1.7
log
@Flesh out all of the stdio man pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.6 1999/09/21 01:47:08 aaron Exp $
d47 1
a47 2
function
returns a pointer to the next line from the stream referenced by
d74 1
a74 2
function
does not distinguish between end-of-file and error; the routines
d103 1
a103 2
function
may also fail and set
@


1.6
log
@It's a good idea to check the return value of malloc() in example code.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.5 1999/09/15 21:26:58 aaron Exp $
d53 1
a53 1
.Dv NUL
d72 1
@


1.5
log
@Add CAVEATS sections.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.4 1999/07/21 12:21:29 aaron Exp $
d131 2
a132 1
			lbuf = (char *)malloc(len + 1);
@


1.4
log
@Xr fparseln(3); deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.3 1998/06/15 17:54:49 mickey Exp $
d59 1
a59 2
(Note, however, that if the line is the last
in a file that does not end in a newline,
d114 30
@


1.3
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.2 1996/08/19 08:32:28 tholo Exp $
d119 1
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: fgetln.3,v 1.3 1995/02/02 01:15:37 jtc Exp $
d123 2
a124 1
function first appeared in 4.4BSD.
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: fgetln.3,v 1.3 1995/02/02 01:15:37 jtc Exp $
a32 2
.\"
.\"     @@(#)fgetln.3	8.3 (Berkeley) 4/19/94
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
