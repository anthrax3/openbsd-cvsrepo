head	1.12;
access;
symbols
	OPENBSD_6_2_BASE:1.12
	OPENBSD_6_1:1.12.0.6
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.22
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.14
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.18
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.16
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.12
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.8
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.9.0.6
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.4
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.18
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.16
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.14
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.12
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.10
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.8
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.6
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.4
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2016.03.13.18.34.21;	author guenther;	state Exp;
branches;
next	1.11;
commitid	AStIlKdF20sYXV6x;

1.11
date	2015.09.13.08.31.47;	author guenther;	state Exp;
branches;
next	1.10;
commitid	QZ177IcjQzeRxHAC;

1.10
date	2010.08.23.22.31.50;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2009.06.03.15.52.16;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.03.30.18.51.49;	author pat;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.12.10.22.44.12;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	98.07.16.18.02.33;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.33.31;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.22.16.38;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@environ and __progname are not declared in a public header; declare them
in libc's hidden/stdlib.h instead of in each .c file that needs one

ok deraadt@@ gsoares@@ mpi@@
@
text
@/*	$OpenBSD: getenv.c,v 1.11 2015/09/13 08:31:47 guenther Exp $ */
/*
 * Copyright (c) 1987, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdlib.h>
#include <string.h>


/*
 * __findenv --
 *	Returns pointer to value associated with name, if any, else NULL.
 *	Starts searching within the environmental array at offset.
 *	Sets offset to be the offset of the name/value combination in the
 *	environmental array, for use by putenv(3), setenv(3) and unsetenv(3).
 *	Explicitly removes '=' in argument name.
 *
 *	This routine *should* be a static; don't use it.
 */
char *
__findenv(const char *name, int len, int *offset)
{
	int i;
	const char *np;
	char **p, *cp;

	if (name == NULL || environ == NULL)
		return (NULL);
	for (p = environ + *offset; (cp = *p) != NULL; ++p) {
		for (np = name, i = len; i && *cp; i--)
			if (*cp++ != *np++)
				break;
		if (i == 0 && *cp++ == '=') {
			*offset = p - environ;
			return (cp);
		}
	}
	return (NULL);
}

/*
 * getenv --
 *	Returns ptr to value associated with name, if any, else NULL.
 */
char *
getenv(const char *name)
{
	int offset = 0;
	const char *np;

	for (np = name; *np && *np != '='; ++np)
		;
	return (__findenv(name, (int)(np - name), &offset));
}
DEF_STRONG(getenv);
@


1.11
log
@Wrap <stdlib.h> so that calls go direct and the symbols not in the
C standard are all weak.
Apply __{BEGIN,END}_HIDDEN_DECLS to gdtoa{,imp}.h, hiding the
arch-specific __strtorx, __ULtox_D2A, __strtorQ, __ULtoQ_D2A symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: getenv.c,v 1.10 2010/08/23 22:31:50 millert Exp $ */
a47 1
	extern char **environ;
@


1.10
log
@Check for duplicate variables in the environment when setting a value
via setenv() or putenv().  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getenv.c,v 1.9 2009/06/03 15:52:16 millert Exp $ */
a33 1
char *__findenv(const char *name, int len, int *offset);
d81 1
@


1.9
log
@Make putenv(), setenv() and unsetenv() standards compliant.  The
standard explicitly disallows passing setenv a name with a '=' in
it but historic BSD behavior is to allow this but to ignore the '='
and anything after it.
@
text
@d1 1
a1 1
/*	$OpenBSD: getenv.c,v 1.8 2005/08/08 08:05:36 espie Exp $ */
d39 1
d41 1
a41 1
 *	environmental array, for use by setenv(3) and unsetenv(3).
d56 1
a56 1
	for (p = environ; (cp = *p) != NULL; ++p) {
d75 1
a75 1
	int offset;
@


1.8
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d34 1
a34 1
char *__findenv(const char *name, int *offset);
d46 1
a46 1
__findenv(const char *name, int *offset)
d49 1
a49 1
	int len, i;
a54 3
	for (np = name; *np && *np != '='; ++np)
		;
	len = np - name;
d75 1
d77 3
a79 1
	return (__findenv(name, &offset));
@


1.7
log
@ansi + de-register

ok otto deraadt
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: getenv.c,v 1.6 2003/06/02 20:18:37 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: getenv.c,v 1.5 2002/12/10 22:44:12 mickey Exp $";
d52 3
a54 3
	register int len, i;
	register const char *np;
	register char **p, *cp;
d78 1
a78 2
getenv(name)
	const char *name;
@


1.5
log
@use proper __findenv() prototype; millert@@ ok
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char *rcsid = "$OpenBSD: getenv.c,v 1.4 1998/07/16 18:02:33 deraadt Exp $";
@


1.4
log
@change to lite2 getenv(); getenv(NULL) now returns NULL
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: getenv.c,v 1.3 1996/08/19 08:33:31 tholo Exp $";
d41 2
d53 1
a53 3
__findenv(name, offset)
	register const char *name;
	int *offset;
a85 1
	char *__findenv();
d87 1
a87 1
	return(__findenv(name, &offset));
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d2 2
a3 2
 * Copyright (c) 1987 Regents of the University of California.
 * All rights reserved.
d35 1
a35 1
static char *rcsid = "$OpenBSD: getenv.c,v 1.2 1996/03/25 22:16:38 tholo Exp $";
d56 3
a58 3
	register int len;
	register char **P, *C;
	register const char *cp;
d60 15
a74 8
	for (cp = name, len = 0; *cp != '\0' && *cp != '='; ++cp, ++len);
	for (P = environ; *P; ++P)
		if (!strncmp(*P, name, len))
			if (*(C = *P + len) == '=') {
				*offset = P - environ;
				return(++C);
			}
	return(NULL);
@


1.2
log
@Add prototypes for internal functions
Change inline to __inline
@
text
@d35 1
a35 2
/*static char *sccsid = "from: @@(#)getenv.c	5.8 (Berkeley) 2/23/91";*/
static char *rcsid = "$Id: getenv.c,v 1.1.1.1 1995/10/18 08:42:17 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
static char *rcsid = "$Id: getenv.c,v 1.5 1995/02/28 01:46:41 jtc Exp $";
a42 14
 * getenv --
 *	Returns ptr to value associated with name, if any, else NULL.
 */
char *
getenv(name)
	const char *name;
{
	int offset;
	char *__findenv();

	return(__findenv(name, &offset));
}

/*
d53 1
a53 1
	register char *name;
d59 1
d61 1
a61 1
	for (C = name, len = 0; *C && *C != '='; ++C, ++len);
d69 14
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
