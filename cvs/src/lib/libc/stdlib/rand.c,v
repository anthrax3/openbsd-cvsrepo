head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.10.0.6
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.34
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.32
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.30
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.28
	OPENBSD_5_0:1.9.0.26
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.24
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.22
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.18
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.20
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.16
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.14
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.12
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.10
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.8
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.6
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.4
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.18
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.16
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.14
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.12
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.10
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.10.22.19.19.34;	author tb;	state Exp;
branches;
next	1.16;
commitid	5YVxhiphEyockv1u;

1.16
date	2015.12.18.08.52.34;	author tb;	state Exp;
branches;
next	1.15;
commitid	LWk04x21e00zx0fM;

1.15
date	2015.09.13.08.31.47;	author guenther;	state Exp;
branches;
next	1.14;
commitid	QZ177IcjQzeRxHAC;

1.14
date	2014.12.16.20.51.32;	author sthen;	state Exp;
branches;
next	1.13;
commitid	SqyMDOCYHCT24HZd;

1.13
date	2014.12.09.08.00.53;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	9m2M2bgieE6DWdc2;

1.12
date	2014.12.08.21.52.06;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	1KGj1aXJPDKWsoLf;

1.11
date	2014.12.08.21.45.20;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	HpI1xDivwwEoN4ET;

1.10
date	2013.08.01.19.42.08;	author kettenis;	state Exp;
branches;
next	1.9;

1.9
date	2005.08.08.08.05.37;	author espie;	state Exp;
branches;
next	1.8;

1.8
date	2005.03.30.18.51.49;	author pat;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.12.07.21.47.22;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.12.07.16.44.41;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.11.22.07.41.04;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	98.11.20.11.18.50;	author d;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.33.44;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.19;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.19;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@$OpenBSD$
@
text
@/*	$OpenBSD$ */
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>
#include <stdlib.h>

static int rand_deterministic;
static u_int next = 1;

int
rand_r(u_int *seed)
{
	*seed = *seed * 1103515245 + 12345;
	return (*seed & RAND_MAX);
}
DEF_WEAK(rand_r);

#if defined(APIWARN)
__warn_references(rand_r,
    "warning: rand_r() is not random, it is deterministic.");
#endif

int
rand(void)
{
	if (rand_deterministic == 0)
		return (arc4random() & RAND_MAX);
	return (rand_r(&next));
}

#if defined(APIWARN)
__warn_references(rand,
    "warning: rand() may return deterministic values, is that what you want?");
#endif

void
srand(u_int seed)
{
	rand_deterministic = 0;
}

void
srand_deterministic(u_int seed)
{
	rand_deterministic = 1;
	next = seed;
}
@


1.16
log
@Simplify return call of rand() and rand_r() to make it easier to read.
This is slightly less robust, but RAND_MAX must be one below a power
of two in both variants anyway.

Based on a suggestion by Matthew Martin.

ok tedu@@
@
text
@d1 1
@


1.15
log
@Wrap <stdlib.h> so that calls go direct and the symbols not in the
C standard are all weak.
Apply __{BEGIN,END}_HIDDEN_DECLS to gdtoa{,imp}.h, hiding the
arch-specific __strtorx, __ULtox_D2A, __strtorQ, __ULtoQ_D2A symbols.
@
text
@d40 1
a40 1
	return (*seed % ((u_int)RAND_MAX + 1));
d53 1
a53 1
		return (arc4random() % ((u_int)RAND_MAX + 1));
@


1.14
log
@typo; ok deraadt
@
text
@d42 1
@


1.13
log
@improve warnings from rand_r(), rand(), and random()
It may take a few iterations to get the tone right.
previously discussed with millert
@
text
@d58 1
a58 1
    "warning: rand() may return determinstic values, is that what you want?");
@


1.12
log
@Oops, got the sense of the test backwards.  Hilarious that we didn't spot it.
@
text
@d45 1
a45 1
    "warning: rand_r() isn't random; consider using arc4random()");
d58 1
a58 1
    "warning: rand() isn't random; consider using arc4random()");
@


1.11
log
@Change rand(), random(), drand48(), lrand48(), mrand48(), and srand48()
to returning strong random by default, source from arc4random(3).
Parameters to the seeding functions are ignored, and the subsystems remain
in strong random mode.  If you wish the standardized deterministic mode,
call srand_deterministic(), srandom_determistic(), srand48_deterministic(),
seed48_deterministic() or lcong48_deterministic() instead.
The re-entrant functions rand_r(), erand48(), nrand48(), jrand48() are
unaffected by this change and remain in deterministic mode (for now).

Verified as a good roadmap forward by auditing 8800 pieces of software.
Roughly 60 pieces of software will need adaptation to request the
deterministic mode.

Violates POSIX and C89, which violate best practice in this century.
ok guenther tedu millert
@
text
@d51 1
a51 1
	if (rand_deterministic)
@


1.10
log
@Add linker warnings for rand() and random() and various related functions.

ok deraadt@@
@
text
@d33 1
d51 2
d64 7
a72 5

#if defined(APIWARN)
__warn_references(srand,
    "warning: srand() seed choices are invariably poor");
#endif
@


1.9
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d42 5
d53 5
d63 5
@


1.8
log
@ansi + de-register

ok otto deraadt
@
text
@a29 4
#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: rand.c,v 1.7 2003/06/02 20:18:38 millert Exp $";
#endif /* LIBC_SCCS and not lint */

@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: rand.c,v 1.6 1998/12/07 21:47:22 millert Exp $";
d40 1
a40 2
rand_r(seed)
u_int *seed;
a41 1

d47 1
a47 1
rand()
a48 1

d53 1
a53 2
srand(seed)
u_int seed;
a54 1

@


1.6
log
@No need to cast to they type we already are.  Also minor KNF
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char *rcsid = "$OpenBSD: rand.c,v 1.5 1998/12/07 16:44:41 millert Exp $";
@


1.5
log
@remove bogus divide, fixes pr #656
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: rand.c,v 1.4 1998/11/22 07:41:04 deraadt Exp $";
d47 1
d49 1
a49 1
	return (u_int)(*seed) % ((u_int)RAND_MAX + 1);
d55 2
a56 1
	return rand_r(&next);
d63 1
@


1.4
log
@bad long
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: rand.c,v 1.3 1998/11/20 11:18:50 d Exp $";
d48 1
a48 1
	return (u_int)(*seed / 65536) % ((u_int)RAND_MAX + 1);
@


1.3
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: rand.c,v 1.2 1996/08/19 08:33:44 tholo Exp $";
d41 1
a41 1
static u_long next = 1;
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char *rcsid = "$OpenBSD: rand.c,v 1.1.1.1 1995/10/18 08:42:19 deraadt Exp $";
d44 8
d54 1
a54 1
	return ((next = next * 1103515245 + 12345) % ((u_int)RAND_MAX + 1));
@


1.1
log
@Initial revision
@
text
@d35 1
a35 2
/*static char *sccsid = "from: @@(#)rand.c	5.6 (Berkeley) 6/24/91";*/
static char *rcsid = "$Id: rand.c,v 1.4 1994/10/19 03:06:51 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
