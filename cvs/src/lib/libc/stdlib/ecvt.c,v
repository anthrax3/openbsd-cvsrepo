head	1.10;
access;
symbols
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.8
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.8.0.10
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.2
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.6
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.4
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.14
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.10
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.8
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.6
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.4
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.2
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.1.0.2
	OPENBSD_3_3_BASE:1.1;
locks; strict;
comment	@ * @;


1.10
date	2015.12.28.22.08.18;	author mmcc;	state Exp;
branches;
next	1.9;
commitid	0uXuF2O13NH9q2e1;

1.9
date	2015.08.20.21.49.29;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	jeIpGH0zlTW3huPH;

1.8
date	2013.11.01.19.05.11;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2009.10.16.12.15.03;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2006.10.29.18.45.56;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2006.01.10.16.18.37;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.08.08.05.36;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.03.01.52.40;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	2002.12.02.15.38.54;	author millert;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove NULL-checks before free() and a few related dead assignments.

ok and valuable input from millert@@
@
text
@/*	$OpenBSD: ecvt.c,v 1.9 2015/08/20 21:49:29 deraadt Exp $	*/

/*
 * Copyright (c) 2002, 2006 Todd C. Miller <Todd.Miller@@courtesan.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Sponsored in part by the Defense Advanced Research Projects
 * Agency (DARPA) and Air Force Research Laboratory, Air Force
 * Materiel Command, USAF, under agreement number F39502-99-1-0512.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include "gdtoa.h"

static char *__cvt(double, int, int *, int *, int, int);

static char *
__cvt(double value, int ndigit, int *decpt, int *sign, int fmode, int pad)
{
	static char *s;
	char *p, *rve, c;
	size_t siz;

	if (ndigit == 0) {
		*sign = value < 0.0;
		*decpt = 0;
		return ("");
	}

	free(s);
	s = NULL;

	if (ndigit < 0)
		siz = -ndigit + 1;
	else
		siz = ndigit + 1;


	/* __dtoa() doesn't allocate space for 0 so we do it by hand */
	if (value == 0.0) {
		*decpt = 1 - fmode;	/* 1 for 'e', 0 for 'f' */
		*sign = 0;
		if ((rve = s = malloc(siz)) == NULL)
			return(NULL);
		*rve++ = '0';
		*rve = '\0';
	} else {
		p = __dtoa(value, fmode + 2, ndigit, decpt, sign, &rve);
		if (p == NULL)
			return (NULL);
		if (*decpt == 9999) {
			/* Infinity or Nan, convert to inf or nan like printf */
			*decpt = 0;
			c = *p;
			__freedtoa(p);
			return(c == 'I' ? "inf" : "nan");
		}
		/* Make a local copy and adjust rve to be in terms of s */
		if (pad && fmode)
			siz += *decpt;
		if ((s = malloc(siz)) == NULL) {
			__freedtoa(p);
			return(NULL);
		}
		(void) strlcpy(s, p, siz);
		rve = s + (rve - p);
		__freedtoa(p);
	}

	/* Add trailing zeros */
	if (pad) {
		siz -= rve - s;
		while (--siz)
			*rve++ = '0';
		*rve = '\0';
	}

	return(s);
}

char *
ecvt(double value, int ndigit, int *decpt, int *sign)
{
	return(__cvt(value, ndigit, decpt, sign, 0, 1));
}

char *
fcvt(double value, int ndigit, int *decpt, int *sign)
{
	return(__cvt(value, ndigit, decpt, sign, 1, 1));
}
@


1.9
log
@All these files include <stdlib.h>, so do not need to cast
malloc/calloc/realloc* returns.
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.8 2013/11/01 19:05:11 guenther Exp $	*/
d43 2
a44 4
	if (s) {
		free(s);
		s = NULL;
	}
@


1.8
log
@Pull in gdtoa.h instead of declaring __dtoa() and __freedtoa() directly

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.7 2009/10/16 12:15:03 martynas Exp $	*/
d58 1
a58 1
		if ((rve = s = (char *)malloc(siz)) == NULL)
d76 1
a76 1
		if ((s = (char *)malloc(siz)) == NULL) {
@


1.7
log
@teach gdtoa & its subroutines that malloc can fail;  in which case
ecvt, fcvt, gcvt, *printf, strtof, strtod, strtold act per ieee
1003.1.  after these massive changes, remove unused files which
would not work now.  reported by Maksymilian Arciemowicz;  ok theo
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.6 2006/10/29 18:45:56 deraadt Exp $	*/
d26 1
a27 2
extern char *__dtoa(double, int, int, int *, int *, char **);
extern void  __freedtoa(char *);
@


1.6
log
@make __dtoa & strtod() thread-safe useing the same method as newer gdtoa
codebase.  tested mostly by ckuethe and myself.  __dtoa() use now requires
a call to __freedtoa()
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.5 2006/01/10 16:18:37 millert Exp $	*/
d65 2
@


1.5
log
@Return inf or nan as per printf() not Inf, Infinity or Nan (from dtoa)
Remove an extraneous check for dtoa returning Inf/Nan
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.4 2005/08/08 08:05:36 espie Exp $	*/
d28 1
d35 1
a35 1
	char *p, *rve;
d68 3
a70 1
			return(*p == 'I' ? "inf" : "nan");
d75 2
a76 1
		if ((s = (char *)malloc(siz)) == NULL)
d78 1
d81 1
@


1.4
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.3 2003/06/17 21:56:24 millert Exp $	*/
d4 1
a4 1
 * Copyright (c) 2002 Todd C. Miller <Todd.Miller@@courtesan.com>
d65 1
a65 1
			/* Nan or Infinity */
d67 1
a67 1
			return(p);
d69 1
a69 1
		/* make a local copy and adjust rve to be in terms of s */
d78 2
a79 2
	/* Add trailing zeros (unless we got NaN or Inf) */
	if (pad && *decpt != 9999) {
@


1.3
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.2 2003/06/03 01:52:40 millert Exp $	*/
a21 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: ecvt.c,v 1.2 2003/06/03 01:52:40 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.2
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
a1 1
/*	$OpenBSD: ecvt.c,v 1.1 2002/12/02 15:38:54 millert Exp $	*/
d10 11
a20 7
 * THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
 * WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
 * FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
 * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
 * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
d24 1
a24 1
static char rcsid[] = "$OpenBSD: ecvt.c,v 1.1 2002/12/02 15:38:54 millert Exp $";
@


1.1
log
@Add ecvt(), fcvt() and gcvt() for standard compliance and legacy code.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a4 1
 * All rights reserved.
d6 3
a8 10
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d10 7
a16 10
 * THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
 * AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
 * THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
 * EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
 * PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
 * OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 * WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
 * OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
 * ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d20 1
a20 1
static char rcsid[] = "$OpenBSD$";
@

