head	1.19;
access;
symbols
	OPENBSD_6_1:1.19.0.4
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.18.0.4
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.18.0.6
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.2
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.17.0.8
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.6
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.17.0.2
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.15.0.24
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.22
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.20
	OPENBSD_5_0:1.15.0.18
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.14
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.12
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.10
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.8
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.6
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.4
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.2
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.13.0.2
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.9.0.6
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.4
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.2
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.6.0.6
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.4
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.2
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.19
date	2016.03.12.21.31.22;	author mmcc;	state Exp;
branches;
next	1.18;
commitid	KhDV1S6CZAu8cbBc;

1.18
date	2015.01.29.01.46.31;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	LyCIkS84kwBpdwms;

1.17
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.10.01.08.11.58;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.09.07.18.57.05;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.20.18.38;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.01.19.27.27;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.10.06.48.30;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.23.19.51.46;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2001.12.29.02.35.37;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.29.18.10.49;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2000.08.09.15.51.21;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.20.13.50.02;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.29.18.36.22;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.02.27.21.56.00;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.33.42;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.18;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.18;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Remove sentences in RETURN VALUES sections saying that functions with
void return types 'return no value'. This is obvious and therefore
unneccessary to mention.

We spare rewind(3)'s sentence because espie@@ pointed out that it's a
warning - the function masks a potential error.

This commit also adds a sentence to X509_free clarifying that it's
NULL-safe. This bit was discussed with doug@@.

ok martijn@@, sentiment supported by schwarze@@
@
text
@.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software contributed to Berkeley by
.\" the American National Standards Committee X3, on Information
.\" Processing Systems.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$OpenBSD: qsort.3,v 1.18 2015/01/29 01:46:31 schwarze Exp $
.\"
.Dd $Mdocdate: January 29 2015 $
.Dt QSORT 3
.Os
.Sh NAME
.Nm qsort ,
.Nm heapsort ,
.Nm mergesort
.Nd sort functions
.Sh SYNOPSIS
.In stdlib.h
.Ft void
.Fn qsort "void *base" "size_t nmemb" "size_t size" "int (*compar)(const void *, const void *)"
.Ft int
.Fn heapsort "void *base" "size_t nmemb" "size_t size" "int (*compar)(const void *, const void *)"
.Ft int
.Fn mergesort "void *base" "size_t nmemb" "size_t size" "int (*compar)(const void *, const void *)"
.Sh DESCRIPTION
The
.Fn qsort
function is a modified partition-exchange sort, or quicksort.
The
.Fn heapsort
function is a modified selection sort.
The
.Fn mergesort
function is a modified merge sort with exponential search
intended for sorting data with pre-existing order.
.Pp
The
.Fn qsort
and
.Fn heapsort
functions sort an array of
.Fa nmemb
objects, the initial member of which is pointed to by
.Fa base .
The size of each object is specified by
.Fa size .
.Fn mergesort
behaves similarly, but
.Em requires
that
.Fa size
be greater than
.Dq "sizeof(void *) / 2" .
.Pp
The contents of the array
.Fa base
are sorted in ascending order according to
a comparison function pointed to by
.Fa compar ,
which requires two arguments pointing to the objects being
compared.
.Pp
The comparison function must return an integer less than, equal to, or
greater than zero if the first argument is considered to be respectively
less than, equal to, or greater than the second.
.Pp
The functions
.Fn qsort
and
.Fn heapsort
are
.Em not
stable, that is, if two members compare as equal, their order in
the sorted array is undefined.
The function
.Fn mergesort
is stable.
.Pp
The
.Fn qsort
function is an implementation of C.A.R. Hoare's
.Dq quicksort
algorithm,
a variant of partition-exchange sorting; in particular, see D.E. Knuth's
Algorithm Q.
.Fn qsort
takes O N lg N average time.
This implementation uses median selection to avoid its
O N**2 worst-case behavior.
.Pp
The
.Fn heapsort
function is an implementation of J.W.J. William's
.Dq heapsort
algorithm,
a variant of selection sorting; in particular, see D.E. Knuth's Algorithm H.
.Fn heapsort
takes O N lg N worst-case time.
This implementation of
.Fn heapsort
is implemented without recursive function calls.
.Pp
The function
.Fn mergesort
requires additional memory of size
.Fa nmemb *
.Fa size
bytes; it should be used only when space is not at a premium.
.Fn mergesort
is optimized for data with pre-existing order; its worst case
time is O N lg N; its best case is O N.
.Pp
Normally,
.Fn qsort
is faster than
.Fn mergesort ,
which is faster than
.Fn heapsort .
Memory availability and pre-existing order in the data can make this untrue.
.Sh RETURN VALUES
.Rv -std heapsort mergesort
.Sh ERRORS
The
.Fn heapsort
and
.Fn mergesort
functions succeed unless:
.Bl -tag -width Er
.It Bq Er EINVAL
The
.Fa size
argument is zero, or the
.Fa size
argument to
.Fn mergesort
is less than
.Dq "sizeof(void *) / 2" .
.It Bq Er ENOMEM
.Fn heapsort
or
.Fn mergesort
were unable to allocate memory.
.El
.Sh SEE ALSO
.Xr sort 1 ,
.Xr radixsort 3
.Rs
.%A Hoare, C.A.R.
.%D 1962
.%T "Quicksort"
.%J "The Computer Journal"
.%V 5:1
.%P pp. 10-15
.Re
.Rs
.%A Williams, J.W.J
.%D 1964
.%T "Heapsort"
.%J "Communications of the ACM"
.%V 7:1
.%P pp. 347\-348
.Re
.Rs
.%A Knuth, D.E.
.%D 1968
.%B "The Art of Computer Programming"
.%V Vol. 3
.%T "Sorting and Searching"
.%P pp. 114\-123, 145\-149
.Re
.Rs
.%A McIlroy, P.M.
.%T "Optimistic Sorting and Information Theoretic Complexity"
.%J "Fourth Annual ACM-SIAM Symposium on Discrete Algorithms"
.%P pp. 467\-464
.%D January 1993
.Re
.Rs
.%A Bentley, J.L.
.%A McIlroy, M.D.
.%T "Engineering a Sort Function"
.%J "Software \- Practice and Experience"
.%V Vol. 23(11)
.%P pp. 1249\-1265
.%D November 1993
.Re
.Sh STANDARDS
Previous versions of
.Fn qsort
did not permit the comparison routine itself to call
.Fn qsort .
This is no longer true.
.Pp
The
.Fn qsort
function conforms to
.St -ansiC .
.Sh HISTORY
A
.Fn qsort
function first appeared in
.At v3 .
@


1.18
log
@Use .Rv where appropriate, and move it to RETURN VALUES;
remove .Tn, and a few minor macro adjustments.
Patch from Kaspars at Bankovskis dot net.
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.17 2013/07/17 05:42:11 schwarze Exp $
d34 1
a34 1
.Dd $Mdocdate: July 17 2013 $
a145 4
The
.Fn qsort
function returns no value.
.Pp
@


1.17
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.16 2013/06/05 03:39:23 tedu Exp $
d34 1
a34 1
.Dd $Mdocdate: June 5 2013 $
d150 1
a150 8
Upon successful completion,
.Fn heapsort
and
.Fn mergesort
return 0.
Otherwise, they return \-1 and the global variable
.Va errno
is set to indicate the error.
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.15 2007/05/31 19:19:31 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate: May 31 2007 $
d234 5
@


1.15
log
@convert to new .Dd format;
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.14 2003/10/01 08:11:58 jmc Exp $
d34 1
a34 1
.Dd $Mdocdate$
d43 1
a43 1
.Fd #include <stdlib.h>
@


1.14
log
@updates and corrections to the references in SEE ALSO;
mostly from tjr@@freebsd's rev. 1.14 commit.
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.13 2003/09/07 18:57:05 jmc Exp $
d34 1
a34 1
.Dd June 4, 1993
@


1.13
log
@typos from Brian Poole;
ok deraadt@@
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.12 2003/06/02 20:18:38 millert Exp $
d197 1
a197 1
.%P pp. 347-348
d205 1
a205 1
.%P pp. 114-123, 145-149
d208 1
a208 1
.%A Mcilroy, P.M.
d211 2
a212 1
.%V January 1992
d216 1
d218 4
a221 2
.%J "bentley@@research.att.com"
.%V January 1992
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.11 2003/06/01 19:27:27 jmc Exp $
d125 1
a125 1
.Fn qsort
@


1.11
log
@- section reorder
- merge COMPATIBILITY
- kill whitespace at EOL
@
text
@d16 1
a16 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
.\"	$OpenBSD: qsort.3,v 1.10 2003/05/10 06:48:30 jmc Exp $
@


1.10
log
@typos;
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.9 2002/02/23 19:51:46 miod Exp $
a183 6
.Sh COMPATIBILITY
Previous versions of
.Fn qsort
did not permit the comparison routine itself to call
.Fn qsort .
This is no longer true.
d224 6
@


1.9
log
@Slightly improve wording and punctuation.
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.8 2001/12/29 02:35:37 miod Exp $
d188 1
a188 1
.Fn qsort 3 .
@


1.8
log
@Two functions can return errors here, not just one.
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.7 2001/10/29 18:10:49 deraadt Exp $
d145 2
a146 2
.Fn mergesort
is faster than
d172 1
a172 1
argument is zero, or, the
@


1.7
log
@fix docs; tedu@@heorot.stanford.edu
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.6 2000/08/09 15:51:21 aaron Exp $
d165 3
a167 1
function succeeds unless:
@


1.6
log
@For man pages that describe multiple functions, split the .Nm arguments
onto separate lines in the NAME section.
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.5 2000/04/20 13:50:02 aaron Exp $
d128 1
a128 3
Its
.Em only
advantage over
d130 1
a130 3
is that it uses almost no additional memory; while
.Fn qsort
does not allocate memory, it is implemented using recursion.
@


1.5
log
@Flesh out stdlib function man pages.
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.4 1999/06/29 18:36:22 aaron Exp $
d42 3
a44 1
.Nm qsort, heapsort, mergesort
@


1.4
log
@first round of repairs on stdlib
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.3 1999/02/27 21:56:00 deraadt Exp $
d108 3
a110 1
function is an implementation of C.A.R. Hoare's ``quicksort'' algorithm,
d120 3
a122 1
function is an implementation of J.W.J. William's ``heapsort'' algorithm,
d150 1
a150 2
Memory availability and pre-existing order in the data can make this
untrue.
d154 1
a154 2
function
returns no value.
d172 1
a172 2
argument is zero, or,
the
d232 1
a232 2
function
conforms to
@


1.3
log
@make function names the correct case
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.2 1996/08/19 08:33:42 tholo Exp $
d134 1
a134 1
.Fa size 
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d36 1
a36 1
.\"	$OpenBSD: qsort.3,v 1.1.1.1 1995/10/18 08:42:18 deraadt Exp $
d74 1
a74 1
.Fn Mergesort
d111 1
a111 1
.Fn Qsort
d120 1
a120 1
.Fn Heapsort
d136 1
a136 1
.Fn Mergesort
d178 1
a178 1
.Fn Heapsort
@


1.1
log
@Initial revision
@
text
@d36 1
a36 2
.\"     from: @@(#)qsort.3	8.1 (Berkeley) 6/4/93
.\"	$Id: qsort.3,v 1.3 1994/06/16 05:26:38 mycroft Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
