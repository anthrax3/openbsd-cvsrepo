head	1.18;
access;
symbols
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.10
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.17.0.6
	OPENBSD_5_6_BASE:1.17
	OPENBSD_5_5:1.17.0.4
	OPENBSD_5_5_BASE:1.17
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.14.0.24
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.22
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.20
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.4
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.2
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6;
locks; strict;
comment	@.\" @;


1.18
date	2016.02.07.20.50.24;	author mmcc;	state Exp;
branches;
next	1.17;
commitid	2coXeCeif6iE4sFh;

1.17
date	2013.08.14.06.32.28;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2013.04.17.18.53.27;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2006.04.25.05.15.42;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2005.10.26.11.37.58;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.14.07.58.46;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2005.04.14.02.13.29;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.07.08.54.59;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2004.11.22.00.58.39;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2004.09.21.15.01.59;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2004.08.03.19.38.01;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2004.05.06.06.19.01;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.06.04.20.20;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2004.05.04.18.37.25;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2004.05.03.17.20.45;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2004.05.03.17.09.24;	author tedu;	state Exp;
branches;
next	;


desc
@@


1.18
log
@compare pointer to NULL in example code
@
text
@.\" $OpenBSD: strtonum.3,v 1.17 2013/08/14 06:32:28 jmc Exp $
.\"
.\" Copyright (c) 2004 Ted Unangst
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: August 14 2013 $
.Dt STRTONUM 3
.Os
.Sh NAME
.Nm strtonum
.Nd reliably convert string value to an integer
.Sh SYNOPSIS
.In stdlib.h
.Ft long long
.Fo strtonum
.Fa "const char *nptr"
.Fa "long long minval"
.Fa "long long maxval"
.Fa "const char **errstr"
.Fc
.Sh DESCRIPTION
The
.Fn strtonum
function converts the string in
.Fa nptr
to a
.Li long long
value.
The
.Fn strtonum
function was designed to facilitate safe, robust programming
and overcome the shortcomings of the
.Xr atoi 3
and
.Xr strtol 3
family of interfaces.
.Pp
The string may begin with an arbitrary amount of whitespace
(as determined by
.Xr isspace 3 )
followed by a single optional
.Ql +
or
.Ql -
sign.
.Pp
The remainder of the string is converted to a
.Li long long
value according to base 10.
.Pp
The value obtained is then checked against the provided
.Fa minval
and
.Fa maxval
bounds.
If
.Fa errstr
is non-null,
.Fn strtonum
stores an error string in
.Fa *errstr
indicating the failure.
.Sh RETURN VALUES
The
.Fn strtonum
function returns the result of the conversion,
unless the value would exceed the provided bounds or is invalid.
On error, 0 is returned,
.Va errno
is set, and
.Fa errstr
will point to an error message.
.Fa *errstr
will be set to
.Dv NULL
on success;
this fact can be used to differentiate
a successful return of 0 from an error.
.Sh EXAMPLES
Using
.Fn strtonum
correctly is meant to be simpler than the alternative functions.
.Bd -literal -offset indent
int iterations;
const char *errstr;

iterations = strtonum(optarg, 1, 64, &errstr);
if (errstr != NULL)
	errx(1, "number of iterations is %s: %s", errstr, optarg);
.Ed
.Pp
The above example will guarantee that the value of iterations is between
1 and 64 (inclusive).
.Sh ERRORS
.Bl -tag -width Er
.It Bq Er ERANGE
The given string was out of range.
.It Bq Er EINVAL
The given string did not consist solely of digit characters.
.It Bq Er EINVAL
.Ar minval
was larger than
.Ar maxval .
.El
.Pp
If an error occurs,
.Fa errstr
will be set to one of the following strings:
.Pp
.Bl -tag -width "too largeXX" -compact
.It Qq too large
The result was larger than the provided maximum value.
.It Qq too small
The result was smaller than the provided minimum value.
.It Qq invalid
The string did not consist solely of digit characters.
.El
.Sh SEE ALSO
.Xr atof 3 ,
.Xr atoi 3 ,
.Xr atol 3 ,
.Xr atoll 3 ,
.Xr sscanf 3 ,
.Xr strtod 3 ,
.Xr strtol 3 ,
.Xr strtoul 3
.Sh STANDARDS
.Fn strtonum
is an
.Ox
extension.
The existing alternatives, such as
.Xr atoi 3
and
.Xr strtol 3 ,
are either impossible or difficult to use safely.
.Sh HISTORY
The
.Fn strtonum
function first appeared in
.Ox 3.6 .
@


1.17
log
@no longer any need to quote macro lines with >9 args;
From: Jan Stary
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.16 2013/06/05 03:39:23 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: June 5 2013 $
d99 1
a99 1
if (errstr)
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.15 2013/04/17 18:53:27 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: April 17 2013 $
d22 1
a22 1
.Nd "reliably convert string value to an integer"
@


1.15
log
@surround the error strings with quotes to clarify exactly which strings
the function is going to return.
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.14 2007/05/31 19:19:31 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
d24 1
a24 1
.Fd #include <stdlib.h>
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.13 2006/04/25 05:15:42 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate$
d122 1
a122 1
.It too large
d124 1
a124 1
.It too small
d126 1
a126 1
.It invalid
@


1.13
log
@strtonum does not require limits.h
spotted by ray some time ago
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.12 2005/10/26 11:37:58 jmc Exp $
d17 1
a17 1
.Dd April 29, 2004
@


1.12
log
@clarifications from ray lai;
tweaked by tedu@@ and myself;
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.11 2005/04/14 07:58:46 jmc Exp $
a24 1
.Fd #include <limits.h>
@


1.11
log
@mark up NULL w/ .Dv;
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.10 2005/04/14 02:13:29 tedu Exp $
d80 3
a82 1
On error, 0 is returned and
d105 1
a105 1
1 and 64.
@


1.10
log
@make it crystal clear that errstr is NULL after success
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.9 2005/02/07 08:54:59 jmc Exp $
d84 4
a87 1
will be set to NULL on success; this fact can be used to differentiate
@


1.9
log
@tidy up ERRORS and STANDARDS;
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.8 2004/11/22 00:58:39 jmc Exp $
d83 3
@


1.8
log
@.{N,O}x fixes;
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.7 2004/09/21 15:01:59 millert Exp $
d110 6
a115 3
If an error occurs, errstr will be set to one of the following strings.
.Bl -tag -width "too large"
.It "too large"
d117 1
a117 1
.It "too small"
d119 1
a119 1
.It "invalid"
d139 1
a139 1
.Xr strtol 3
@


1.7
log
@Add HISTORY; from Jose Nazario
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.6 2004/08/03 19:38:01 millert Exp $
d142 1
a142 2
.Ox
3.6.
@


1.6
log
@It's not really possible to make strtonum() deal with unsigned long
long values properly so don't bother trying.  This greatly simplifies
the code.  tedu@@ OK with input from otto@@ and others.
@
text
@d1 1
a1 1
.\" $OpenBSD: strtonum.3,v 1.5 2004/05/06 06:19:01 tedu Exp $
d138 6
@


1.5
log
@improved man page, with example and error strings, suggested by deraadt@@
man help jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD$
d26 1
a26 1
.Ft unsigned long long
d30 1
a30 1
.Fa "unsigned long long maxval"
d38 2
a39 2
to an
.Li unsigned long long
a40 1
Negative values may be obtained by casting the result.
d59 2
a60 2
The remainder of the string is converted to an
.Li unsigned long long
d104 4
@


1.4
log
@typo; sq@@oganer.net
@
text
@d1 1
a1 2
.\" Copyright (c) 1990, 1991 The Regents of the University of California.
.\" All rights reserved.
d3 1
a3 3
.\" This code is derived from software contributed to Berkeley by
.\" Chris Torek and the American National Standards Committee X3,
.\" on Information Processing Systems.
d5 3
a7 11
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
d9 7
a15 13
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"	$OpenBSD: strtonum.3,v 1.3 2004/05/04 18:37:25 jmc Exp $
a40 1
The conversion is done according to base 10.
d42 8
d62 1
a62 3
value in the obvious manner,
stopping at the first character which is not a valid digit
in the given base.
d80 19
a98 2
unless the value would underflow or overflow.
On error, 0 is returned.
d104 11
a114 1
The given string did not consist solely of a valid number.
d130 5
@


1.3
log
@sort SEE ALSO;
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtonum.3,v 1.2 2004/05/03 17:20:45 tedu Exp $
d86 1
a86 1
.Fa *endptr
@


1.2
log
@typo spotted by grange
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtonum.3,v 1.1 2004/05/03 17:09:24 tedu Exp $
d107 1
a108 1
.Xr strtod 3 ,
@


1.1
log
@strtonum, a nicer version of strtoll, by millert and myself.
ok deraadt@@ millert@@
@
text
@d32 1
a32 1
.\"	$OpenBSD: strtol.3,v 1.13 2003/06/02 20:18:38 millert Exp $
d90 1
a90 1
.Fn strtol
@

