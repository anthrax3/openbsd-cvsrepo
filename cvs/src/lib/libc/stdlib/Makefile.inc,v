head	1.63;
access;
symbols
	OPENBSD_6_1:1.63.0.2
	OPENBSD_6_1_BASE:1.63
	OPENBSD_6_0:1.60.0.2
	OPENBSD_6_0_BASE:1.60
	OPENBSD_5_9:1.58.0.2
	OPENBSD_5_9_BASE:1.58
	OPENBSD_5_8:1.57.0.6
	OPENBSD_5_8_BASE:1.57
	OPENBSD_5_7:1.57.0.2
	OPENBSD_5_7_BASE:1.57
	OPENBSD_5_6:1.53.0.4
	OPENBSD_5_6_BASE:1.53
	OPENBSD_5_5:1.48.0.6
	OPENBSD_5_5_BASE:1.48
	OPENBSD_5_4:1.48.0.2
	OPENBSD_5_4_BASE:1.48
	OPENBSD_5_3:1.47.0.2
	OPENBSD_5_3_BASE:1.47
	OPENBSD_5_2:1.44.0.10
	OPENBSD_5_2_BASE:1.44
	OPENBSD_5_1_BASE:1.44
	OPENBSD_5_1:1.44.0.8
	OPENBSD_5_0:1.44.0.6
	OPENBSD_5_0_BASE:1.44
	OPENBSD_4_9:1.44.0.4
	OPENBSD_4_9_BASE:1.44
	OPENBSD_4_8:1.44.0.2
	OPENBSD_4_8_BASE:1.44
	OPENBSD_4_7:1.43.0.2
	OPENBSD_4_7_BASE:1.43
	OPENBSD_4_6:1.42.0.4
	OPENBSD_4_6_BASE:1.42
	OPENBSD_4_5:1.41.0.2
	OPENBSD_4_5_BASE:1.41
	OPENBSD_4_4:1.38.0.2
	OPENBSD_4_4_BASE:1.38
	OPENBSD_4_3:1.36.0.2
	OPENBSD_4_3_BASE:1.36
	OPENBSD_4_2:1.35.0.8
	OPENBSD_4_2_BASE:1.35
	OPENBSD_4_1:1.35.0.6
	OPENBSD_4_1_BASE:1.35
	OPENBSD_4_0:1.35.0.4
	OPENBSD_4_0_BASE:1.35
	OPENBSD_3_9:1.35.0.2
	OPENBSD_3_9_BASE:1.35
	OPENBSD_3_8:1.34.0.2
	OPENBSD_3_8_BASE:1.34
	OPENBSD_3_7:1.33.0.4
	OPENBSD_3_7_BASE:1.33
	OPENBSD_3_6:1.33.0.2
	OPENBSD_3_6_BASE:1.33
	OPENBSD_3_5:1.30.0.2
	OPENBSD_3_5_BASE:1.30
	OPENBSD_3_4:1.29.0.2
	OPENBSD_3_4_BASE:1.29
	OPENBSD_3_3:1.22.0.2
	OPENBSD_3_3_BASE:1.22
	OPENBSD_3_2:1.18.0.2
	OPENBSD_3_2_BASE:1.18
	OPENBSD_3_1:1.17.0.10
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.17.0.8
	OPENBSD_3_0_BASE:1.17
	OPENBSD_2_9:1.17.0.6
	OPENBSD_2_9_BASE:1.17
	OPENBSD_2_8:1.17.0.4
	OPENBSD_2_8_BASE:1.17
	OPENBSD_2_7:1.17.0.2
	OPENBSD_2_7_BASE:1.17
	OPENBSD_2_6:1.12.0.4
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.12.0.2
	OPENBSD_2_5_BASE:1.12
	OPENBSD_2_4:1.10.0.6
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.63
date	2017.03.24.16.15.31;	author otto;	state Exp;
branches;
next	1.62;
commitid	E7atUClJQW0H55na;

1.62
date	2017.03.06.18.44.21;	author otto;	state Exp;
branches;
next	1.61;
commitid	XQxMPlK86q4Re2je;

1.61
date	2016.08.14.23.18.03;	author guenther;	state Exp;
branches;
next	1.60;
commitid	HRomje2ASbJP6bSX;

1.60
date	2016.05.02.12.59.24;	author millert;	state Exp;
branches;
next	1.59;
commitid	9aaAyBQyUCeYQVBU;

1.59
date	2016.03.30.06.38.41;	author jmc;	state Exp;
branches;
next	1.58;
commitid	LN9ijdk9SEnzWAbM;

1.58
date	2015.11.18.16.50.08;	author tedu;	state Exp;
branches;
next	1.57;
commitid	r3k1To7QNDObiXt6;

1.57
date	2014.12.08.21.45.20;	author deraadt;	state Exp;
branches;
next	1.56;
commitid	HpI1xDivwwEoN4ET;

1.56
date	2014.12.08.20.39.16;	author tedu;	state Exp;
branches;
next	1.55;
commitid	dD58r6KSzzv5rGRs;

1.55
date	2014.12.06.18.54.55;	author schwarze;	state Exp;
branches;
next	1.54;
commitid	hnyzhLLlbSmHuq4Z;

1.54
date	2014.08.15.04.14.36;	author guenther;	state Exp;
branches;
next	1.53;
commitid	iqPa4NQ7lqqAoEPg;

1.53
date	2014.05.08.21.43.49;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2014.04.22.14.26.26;	author tedu;	state Exp;
branches;
next	1.51;

1.51
date	2014.04.21.13.21.57;	author deraadt;	state Exp;
branches;
next	1.50;

1.50
date	2014.04.21.13.17.32;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2014.03.18.22.36.29;	author miod;	state Exp;
branches;
next	1.48;

1.48
date	2013.06.05.04.06.08;	author guenther;	state Exp;
branches;
next	1.47;

1.47
date	2012.12.03.20.08.33;	author millert;	state Exp;
branches;
next	1.46;

1.46
date	2012.09.15.20.59.38;	author miod;	state Exp;
branches;
next	1.45;

1.45
date	2012.09.04.03.10.42;	author okan;	state Exp;
branches;
next	1.44;

1.44
date	2010.05.18.22.24.55;	author tedu;	state Exp;
branches;
next	1.43;

1.43
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2009.06.03.15.52.16;	author millert;	state Exp;
branches;
next	1.41;

1.41
date	2008.09.13.22.48.45;	author martynas;	state Exp;
branches;
next	1.40;

1.40
date	2008.09.07.20.36.08;	author martynas;	state Exp;
branches;
next	1.39;

1.39
date	2008.08.22.17.14.56;	author otto;	state Exp;
branches;
next	1.38;

1.38
date	2008.06.13.21.04.24;	author landry;	state Exp;
branches;
next	1.37;

1.37
date	2008.05.19.19.36.15;	author otto;	state Exp;
branches;
next	1.36;

1.36
date	2007.09.03.14.37.02;	author millert;	state Exp;
branches;
next	1.35;

1.35
date	2006.01.13.17.58.09;	author millert;	state Exp;
branches;
next	1.34;

1.34
date	2005.05.11.18.44.13;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2004.06.24.04.43.33;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2004.05.03.17.21.13;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2004.05.03.17.09.24;	author tedu;	state Exp;
branches;
next	1.30;

1.30
date	2004.02.10.20.04.00;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2003.07.21.20.20.30;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2003.06.02.03.46.42;	author millert;	state Exp;
branches;
next	1.27;

1.27
date	2003.05.09.19.31.15;	author millert;	state Exp;
branches;
next	1.26;

1.26
date	2003.05.09.19.19.14;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2003.05.09.00.04.27;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	2003.05.08.23.26.30;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2003.05.08.23.21.36;	author millert;	state Exp;
branches;
next	1.22;

1.22
date	2002.12.03.20.27.17;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	2002.12.03.20.24.30;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2002.12.02.15.38.54;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	2002.11.21.20.51.20;	author millert;	state Exp;
branches;
next	1.18;

1.18
date	2002.06.29.00.20.11;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	2000.04.04.00.03.15;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	99.11.17.05.22.44;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	99.11.10.20.13.12;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	99.11.09.22.12.36;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	99.11.09.19.25.33;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	98.11.20.11.18.49;	author d;	state Exp;
branches;
next	1.11;

1.11
date	98.11.17.23.41.43;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	97.08.20.04.02.18;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.08.18.04.56.51;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.06.14.02.09.24;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	97.06.13.23.41.35;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.21.03.47.21;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.08.21.03.17.55;	author downsj;	state Exp;
branches;
next	1.4;

1.4
date	96.08.21.03.12.17;	author downsj;	state Exp;
branches;
next	1.3;

1.3
date	96.08.10.04.18.48;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.23.31.43;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.16;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.16;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.63
log
@move recallocarray to malloc.c and
- use internal meta-data to do more consistency checking (especially with
  option C)
- use cheap free if possible
ok deraadt@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.62 2017/03/06 18:44:21 otto Exp $

# stdlib sources
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_CPU}/stdlib ${LIBCSRCDIR}/stdlib

SRCS+=	a64l.c abort.c atexit.c atoi.c atof.c atol.c atoll.c bsearch.c \
	exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
	getsubopt.c hcreate.c heapsort.c imaxabs.c imaxdiv.c insque.c \
	l64a.c llabs.c lldiv.c lsearch.c malloc.c reallocarray.c \
	merge.c posix_pty.c qsort.c radixsort.c rand.c random.c \
	realpath.c remque.c setenv.c strtoimax.c \
	strtol.c strtoll.c strtonum.c strtoul.c strtoull.c strtoumax.c \
	system.c tfind.c tsearch.c _rand48.c drand48.c erand48.c jrand48.c \
	lcong48.c lrand48.c mrand48.c nrand48.c seed48.c srand48.c \
	_Exit.c icdb.c

.if (${MACHINE_CPU} == "i386")
SRCS+=	abs.S div.S labs.S ldiv.S
.elif (${MACHINE_CPU} == "alpha")
# XXX should be .S's
SRCS+=	abs.c div.c labs.c ldiv.c
.else
SRCS+=	abs.c div.c labs.c ldiv.c
.endif

MAN+=	a64l.3 abort.3 abs.3 alloca.3 atexit.3 atof.3 atoi.3 atol.3 atoll.3 \
	bsearch.3 div.3 ecvt.3 exit.3 getenv.3 getopt.3 getopt_long.3 \
	getsubopt.3 hcreate.3 imaxabs.3 imaxdiv.3 insque.3 labs.3 ldiv.3 \
	lldiv.3 lsearch.3 malloc.3 posix_memalign.3 posix_openpt.3 ptsname.3 \
	qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 \
	strtod.3 strtonum.3 strtol.3 strtoul.3 system.3 tsearch.3
@


1.62
log
@Introducing recallocarray(3), a blend of calloc(3) and reallocarray(3)
with the added feature that released memory is cleared. Much input from various
developers. ok deraadt@@ tom@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.61 2016/08/14 23:18:03 guenther Exp $
a9 1
	recallocarray.c \
@


1.61
log
@Reduce qabs() and qdiv() to aliases of llabs() and lldiv().
Merge the manual pages and call them deprecated there.

ok and manpage tweak jmc@@, ok natano@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.60 2016/05/02 12:59:24 millert Exp $
d10 1
@


1.60
log
@Remove a vax remnant (that was really a no-op anyway).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.59 2016/03/30 06:38:41 jmc Exp $
d14 2
a15 2
	lcong48.c lrand48.c mrand48.c nrand48.c seed48.c srand48.c qabs.c \
	qdiv.c _Exit.c icdb.c
d30 1
a30 1
	qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 \
@


1.59
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.58 2015/11/18 16:50:08 tedu Exp $
a18 2
.elif (${MACHINE_CPU} == "vax")
SRCS+=	abs.c div.c labs.c ldiv.c
@


1.58
log
@update for new symbols and code
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.57 2014/12/08 21:45:20 deraadt Exp $
a33 28

MLINKS+=ecvt.3 fcvt.3 ecvt.3 gcvt.3
MLINKS+=getenv.3 setenv.3 getenv.3 unsetenv.3 getenv.3 putenv.3
MLINKS+=getopt_long.3 getopt_long_only.3
MLINKS+=hcreate.3 hdestroy.3 hcreate.3 hsearch.3
MLINKS+=insque.3 remque.3
MLINKS+=labs.3 llabs.3
MLINKS+=lsearch.3 lfind.3
MLINKS+=malloc.3 free.3 malloc.3 realloc.3 malloc.3 calloc.3
MLINKS+=malloc.3 reallocarray.3
MLINKS+=qsort.3 heapsort.3 qsort.3 mergesort.3
MLINKS+=radixsort.3 sradixsort.3
MLINKS+=rand.3 srand.3 rand.3 rand_r.3 rand.3 srand_deterministic.3
MLINKS+=random.3 initstate.3 random.3 setstate.3
MLINKS+=random.3 srandom.3 random.3 srandomdev.3 random.3 srandom_deterministic.3
MLINKS+=rand48.3 drand48.3 rand48.3 erand48.3 rand48.3 lrand48.3
MLINKS+=rand48.3 mrand48.3 rand48.3 nrand48.3 rand48.3 jrand48.3
MLINKS+=rand48.3 srand48.3 rand48.3 srand48_deterministic.3
MLINKS+=rand48.3 seed48.3 rand48.3 seed48_deterministic.3
MLINKS+=rand48.3 lcong48.3 rand48.3 lcong48_deterministic.3
MLINKS+=ptsname.3 grantpt.3 ptsname.3 unlockpt.3
MLINKS+=strtod.3 strtof.3 strtod.3 strtold.3
MLINKS+=strtol.3 strtoll.3 strtol.3 strtoq.3 strtol.3 strtoimax.3
MLINKS+=strtoul.3 strtoull.3 strtoul.3 strtouq.3 strtoul.3 strtoumax.3
MLINKS+=tsearch.3 tfind.3
MLINKS+=tsearch.3 tdelete.3
MLINKS+=tsearch.3 twalk.3
MLINKS+=a64l.3 l64a.3
@


1.57
log
@Change rand(), random(), drand48(), lrand48(), mrand48(), and srand48()
to returning strong random by default, source from arc4random(3).
Parameters to the seeding functions are ignored, and the subsystems remain
in strong random mode.  If you wish the standardized deterministic mode,
call srand_deterministic(), srandom_determistic(), srand48_deterministic(),
seed48_deterministic() or lcong48_deterministic() instead.
The re-entrant functions rand_r(), erand48(), nrand48(), jrand48() are
unaffected by this change and remain in deterministic mode (for now).

Verified as a good roadmap forward by auditing 8800 pieces of software.
Roughly 60 pieces of software will need adaptation to request the
deterministic mode.

Violates POSIX and C89, which violate best practice in this century.
ok guenther tedu millert
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.56 2014/12/08 20:39:16 tedu Exp $
d15 1
a15 1
	qdiv.c _Exit.c
@


1.56
log
@delete obsolete sunos cfree function. ok deraadt millert naddy
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.55 2014/12/06 18:54:55 schwarze Exp $
d46 1
a46 1
MLINKS+=rand.3 srand.3 rand.3 rand_r.3
d48 1
a48 1
MLINKS+=random.3 srandom.3 random.3 srandomdev.3
d51 3
a53 1
MLINKS+=rand48.3 srand48.3 rand48.3 seed48.3 rand48.3 lcong48.3
@


1.55
log
@malloc(3) is in the "comp" install set, malloc.conf(5) in "man",
breaking the hardlink between file system entries, confusing apropos(1).
Split malloc.conf(5) out of malloc(3) as suggested by deraadt@@.
Feedback and OK jmc@@, OK deraadt@@ tedu@@ jasper@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.54 2014/08/15 04:14:36 guenther Exp $
d7 1
a7 1
	cfree.c exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
d43 1
a43 1
MLINKS+=malloc.3 reallocarray.3 malloc.3 cfree.3
@


1.54
log
@XPG requires insque() and remque() to work with linear lists and not just
circular lists.  Amazingly, they managed to extend the requirements to no
longer match the behavior of the VAX instructions they were modeled after,
so the trivial VAX ASM versions have to go.  Nice job breaking it, X/Open!

Based on a diff from enh (at) google.com
ok miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.53 2014/05/08 21:43:49 deraadt Exp $
d43 1
a43 1
MLINKS+=malloc.3 reallocarray.3 malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.53
log
@move reallocarray() to a seperate file so that -portable applications
can avoid reinventing the wheel
ok guenther schwarze
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.52 2014/04/22 14:26:26 tedu Exp $
d8 4
a11 3
	getsubopt.c hcreate.c heapsort.c imaxabs.c imaxdiv.c l64a.c llabs.c \
	lldiv.c lsearch.c malloc.c reallocarray.c merge.c posix_pty.c \
	qsort.c radixsort.c rand.c random.c realpath.c setenv.c strtoimax.c \
a25 6
.endif

.if (${MACHINE_CPU} == "vax")
SRCS+=	insque.S remque.S
.else
SRCS+=	insque.c remque.c
@


1.52
log
@change mallocarray to reallocarray. useful in a few more situations.
malloc can, as always, be emulated via realloc(NULL).
ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.51 2014/04/21 13:21:57 deraadt Exp $
d9 6
a14 5
	lldiv.c lsearch.c malloc.c merge.c posix_pty.c qsort.c radixsort.c \
	rand.c random.c realpath.c setenv.c strtoimax.c strtol.c \
	strtoll.c strtonum.c strtoul.c strtoull.c strtoumax.c system.c \
	tfind.c tsearch.c _rand48.c drand48.c erand48.c jrand48.c lcong48.c \
	lrand48.c mrand48.c nrand48.c seed48.c srand48.c qabs.c qdiv.c _Exit.c
@


1.51
log
@correct man page section
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.50 2014/04/21 13:17:32 deraadt Exp $
d47 1
a47 1
MLINKS+=malloc.3 mallocarray.3 malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.50
log
@Introducing:      void *mallocarray(size_t nmemb, size_t size);
Like calloc(), except without the cleared-memory gaurantee
ok beck guenther, discussed for more than a year...
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.49 2014/03/18 22:36:29 miod Exp $
d47 1
a47 1
MLINKS+=malloc.3 mallocarray.5 malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.49
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.48 2013/06/05 04:06:08 guenther Exp $
d47 1
a47 1
MLINKS+=malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.48
log
@Move _Exit() from the exit() manpage to the _exit() manpage, as it's
just an alias of the latter.

ok matthew@@ tedu@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.47 2012/12/03 20:08:33 millert Exp $
d15 1
a15 3
.if   (${MACHINE_CPU} == "m68k")
SRCS+=	abs.S div.c labs.c ldiv.c
.elif (${MACHINE_CPU} == "i386")
d26 1
a26 1
.if (${MACHINE_CPU} == "vax") || (${MACHINE_CPU} == "m68k")
@


1.47
log
@Simple emulation of POSIX pty APIs posix_openpt(), ptsname(),
grantpt() and unlockpt() using /dev/ptm.  Man pages from FreeBSD.
OK kettenis@@ deraadt@@ beck@@ ajacoutot@@ naddy@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.46 2012/09/15 20:59:38 miod Exp $
a40 1
MLINKS+=exit.3 _Exit.3
@


1.46
log
@remove tahoe-specific makefile machinery, no such hardware is known to be
in working condition anymore (assuming there would be interest in running on
it).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.45 2012/09/04 03:10:42 okan Exp $
d9 2
a10 2
	lldiv.c lsearch.c malloc.c merge.c qsort.c radixsort.c rand.c \
	random.c realpath.c setenv.c strtoimax.c strtol.c \
d37 3
a39 3
	lldiv.3 lsearch.3 malloc.3 posix_memalign.3 qabs.3 qdiv.3 qsort.3 \
	radixsort.3 rand48.3 rand.3 random.3 realpath.3 strtod.3 strtonum.3 \
	strtol.3 strtoul.3 system.3 tsearch.3
d59 1
@


1.45
log
@remove lint leftovers; ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.44 2010/05/18 22:24:55 tedu Exp $
a18 4
.elif (${MACHINE_CPU} == "ns32k")
SRCS+=	abs.S div.c labs.c ldiv.c
.elif (${MACHINE_CPU} == "tahoe")
SRCS+=	abs.S div.c labs.c ldiv.c
@


1.44
log
@add posix_madvise, posix_memalign, strndup, and strnlen.  mostly from
brad and millert, with hints from guenther, jmc, and otto I think.
ok previous.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.43 2010/02/03 20:49:00 miod Exp $
a16 1
LSRCS+=	abs.c
a18 1
LSRCS+=	abs.c div.c labs.c ldiv.c
a20 1
LSRCS+=	abs.c
a22 1
LSRCS+=	abs.c
@


1.43
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.42 2009/06/03 15:52:16 millert Exp $
d45 3
a47 3
	lldiv.3 lsearch.3 malloc.3 qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 \
	rand.3 random.3 realpath.3 strtod.3 strtonum.3 strtol.3 strtoul.3 \
	system.3 tsearch.3
@


1.42
log
@Make putenv(), setenv() and unsetenv() standards compliant.  The
standard explicitly disallows passing setenv a name with a '=' in
it but historic BSD behavior is to allow this but to ignore the '='
and anything after it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.41 2008/09/13 22:48:45 martynas Exp $
d4 1
a4 1
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_ARCH}/stdlib ${LIBCSRCDIR}/stdlib
d15 1
a15 1
.if   (${MACHINE_ARCH} == "m68k")
d18 1
a18 1
.elif (${MACHINE_ARCH} == "i386")
d21 1
a21 1
.elif (${MACHINE_ARCH} == "ns32k")
d24 1
a24 1
.elif (${MACHINE_ARCH} == "tahoe")
d27 1
a27 1
.elif (${MACHINE_ARCH} == "vax")
d29 1
a29 1
.elif (${MACHINE_ARCH} == "alpha")
d36 1
a36 1
.if (${MACHINE_ARCH} == "vax") || (${MACHINE_ARCH} == "m68k")
@


1.41
log
@document strtold.  ok millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.40 2008/09/07 20:36:08 martynas Exp $
d9 1
a9 1
	lldiv.c lsearch.c malloc.c merge.c putenv.c qsort.c radixsort.c rand.c \
@


1.40
log
@- replace dtoa w/ David's gdtoa, version 2008-03-15
- provide proper dtoa locks
- use the real strtof implementation
- add strtold, __hdtoa, __hldtoa
- add %a/%A support
- don't lose precision in printf, don't round to double anymore
- implement extended-precision versions of libc functions: fpclassify,
isnan, isinf, signbit, isnormal, isfinite, now that the ieee.h is
fixed
- separate vax versions of strtof, and __hdtoa
- add complex math support.  added functions: cacos, casin, catan,
ccos, csin, ctan, cacosh, casinh, catanh, ccosh, csinh, ctanh, cexp,
clog, cabs, cpow, csqrt, carg, cimag, conj, cproj, creal, cacosf,
casinf, catanf, ccosf, csinf, ctanf, cacoshf, casinhf, catanhf,
ccoshf, csinhf, ctanhf, cexpf, clogf, cabsf, cpowf, csqrtf, cargf,
cimagf, conjf, cprojf, crealf
- add fdim, fmax, fmin
- add log2. (adapted implementation e_log.c.  could be more acruate
& faster, but it's good enough for now)
- remove wrappers & cruft in libm, supposed to work-around mistakes
in SVID, etc.;  use ieee versions.  fixes issues in python 2.6 for
djm@@
- make _digittoint static
- proper definitions for i386, and amd64 in ieee.h
- sh, powerpc don't really have extended-precision
- add missing definitions for mips64 (quad), m{6,8}k (96-bit) float.h
for LDBL_*
- merge lead to frac for m{6,8}k, for gdtoa to work properly
- add FRAC*BITS & EXT_TO_ARRAY32 definitions in ieee.h, for hdtoa&ldtoa
to use
- add EXT_IMPLICIT_NBIT definition, which indicates implicit
normalization bit
- add regression tests for libc: fpclassify and printf
- arith.h & gd_qnan.h definitions
- update ieee.h: hppa doesn't have quad-precision, hppa64 does
- add missing prototypes to gdtoaimp
- on 64-bit platforms make sure gdtoa doesn't use a long when it
really wants an int
- etc., what i may have forgotten...
- bump libm major, due to removed&changed symbols
- no libc bump, since this is riding on djm's libc major crank from
a day ago

discussed with / requested by / testing theo, sthen@@, djm@@, jsg@@,
merdely@@, jsing@@, tedu@@, brad@@, jakemsr@@, and others.
looks good to millert@@
parts of the diff ok kettenis@@

this commit does not include:
- man page changes
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.39 2008/08/22 17:14:56 otto Exp $
d67 1
a67 1
MLINKS+=strtod.3 strtof.3
@


1.39
log
@Smarter implementation of calloc(3), which uses the fact that mmap(2)
returns zero filled pages; remember to replace this function as well if you
provide your own malloc implementation; ok djm@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.38 2008/06/13 21:04:24 landry Exp $
d10 1
a10 1
	random.c realpath.c setenv.c strtoimax.c strtod.c strtof.c strtol.c \
@


1.38
log
@Add strtof() to libc, some ports seem to like it. Currently it's a simple
call to strtod() with bounding check.
Discussed with pyr@@ and otto@@

ok otto@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.37 2008/05/19 19:36:15 otto Exp $
d7 1
a7 1
	calloc.c cfree.c exit.c ecvt.c gcvt.c getenv.c getopt_long.c \
@


1.37
log
@remove recalloc(3); it is buggy and impossible to repair without big
costs; ok jmc@@ for the man page bits; ok millert@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.36 2007/09/03 14:37:02 millert Exp $
d10 2
a11 2
	random.c realpath.c setenv.c strtoimax.c strtod.c strtol.c strtoll.c \
	strtonum.c strtoul.c strtoull.c strtoumax.c system.c \
d67 1
@


1.36
log
@add recaloc(3)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.35 2006/01/13 17:58:09 millert Exp $
d58 1
a58 1
MLINKS+=malloc.3 recalloc.3 malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.35
log
@Add lldiv(), imaxabs(), imaxdiv(), strtoimax() and strtoumax()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1996/08/21 03:47:21 tholo Exp $
d58 1
a58 1
MLINKS+=malloc.3 cfree.3 malloc.3 malloc.conf.5
@


1.34
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
#	$OpenBDS: Makefile.inc,v 1.6 1996/08/21 03:47:21 tholo Exp $
d8 4
a11 4
	getsubopt.c hcreate.c heapsort.c l64a.c llabs.c lsearch.c malloc.c \
	merge.c putenv.c qsort.c radixsort.c rand.c random.c \
	realpath.c setenv.c strtod.c strtol.c strtoll.c strtonum.c strtoul.c \
	strtoull.c system.c \
d44 4
a47 3
	getsubopt.3 hcreate.3 insque.3 labs.3 ldiv.3 lsearch.3 malloc.3 qabs.3 \
	qdiv.3 qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 \
	strtod.3 strtonum.3 strtol.3 strtoul.3 system.3 tsearch.3
d67 2
a68 2
MLINKS+=strtol.3 strtoll.3 strtol.3 strtoq.3
MLINKS+=strtoul.3 strtoull.3 strtoul.3 strtouq.3
@


1.33
log
@Working hcreate(3) et al from NetBSD (cgd) via ray at cyth dot net.
Now passes the regress tests.
@
text
@d9 1
a9 1
	merge.c multibyte.c putenv.c qsort.c radixsort.c rand.c random.c \
@


1.32
log
@Add _Exit(3) as per C99.  Discussed with espie@@ some time ago.
@
text
@d8 4
a11 4
	getsubopt.c heapsort.c l64a.c llabs.c lsearch.c malloc.c merge.c \
	multibyte.c putenv.c qsort.c radixsort.c rand.c random.c realpath.c \
	setenv.c strtod.c strtol.c strtoll.c strtonum.c strtoul.c strtoull.c \
	system.c \
d44 1
a44 1
	getsubopt.3 insque.3 labs.3 ldiv.3 lsearch.3 malloc.3 qabs.3 \
d52 1
@


1.31
log
@strtonum, a nicer version of strtoll, by millert and myself.
ok deraadt@@ millert@@
@
text
@d13 1
a13 1
	lrand48.c mrand48.c nrand48.c seed48.c srand48.c qabs.c qdiv.c
d48 1
@


1.30
log
@kill memory.3;
suggested by deraadt@@
@
text
@d10 2
a11 1
	setenv.c strtod.c strtol.c strtoll.c strtoul.c strtoull.c system.c \
d46 1
a46 1
	strtod.3 strtol.3 strtoul.3 system.3 tsearch.3
@


1.29
log
@Compile llabs.c
@
text
@d43 1
a43 1
	getsubopt.3 insque.3 labs.3 ldiv.3 lsearch.3 malloc.3 memory.3 qabs.3 \
@


1.28
log
@Use the getopt() in getopt_long.c which supports some GNU extensions.
getopt.c is no longer compiled and will eventually be removed.
@
text
@d8 1
a8 1
	getsubopt.c heapsort.c l64a.c lsearch.c malloc.c merge.c \
d51 1
@


1.27
log
@assembler versions of insque and remque for m68k, also from 4.4BSD
@
text
@d7 1
a7 1
	calloc.c cfree.c exit.c ecvt.c gcvt.c getenv.c getopt.c getopt_long.c \
@


1.26
log
@insque and remque are VAX instructions, no need for C functions; From 4.4BSD
@
text
@d35 1
a35 1
.if (${MACHINE_ARCH} == "vax")
@


1.25
log
@Oops, forgot to add remque.c here
@
text
@d8 1
a8 1
	getsubopt.c heapsort.c insque.c l64a.c lsearch.c malloc.c merge.c \
d12 1
a12 1
	lrand48.c mrand48.c nrand48.c remque.c seed48.c srand48.c qabs.c qdiv.c
d33 6
@


1.24
log
@move insque(3) and remque(3) from libcompat -> libc; they are now POSIX
@
text
@d12 1
a12 1
	lrand48.c mrand48.c nrand48.c seed48.c srand48.c qabs.c qdiv.c
@


1.23
log
@move lsearch(3) and insque(3) from libcompat -> libc; they are now POSIX
@
text
@d8 5
a12 5
	getsubopt.c heapsort.c l64a.c lsearch.c malloc.c merge.c multibyte.c \
	putenv.c qsort.c radixsort.c rand.c random.c realpath.c setenv.c \
	strtod.c strtol.c strtoll.c strtoul.c strtoull.c system.c tfind.c \
	tsearch.c _rand48.c drand48.c erand48.c jrand48.c lcong48.c lrand48.c \
	mrand48.c nrand48.c seed48.c srand48.c qabs.c qdiv.c
d37 3
a39 3
	getsubopt.3 labs.3 ldiv.3 lsearch.3 malloc.3 memory.3 qabs.3 qdiv.3 \
	qsort.3 radixsort.3 rand48.3 rand.3 random.3 realpath.3 strtod.3 \
	strtol.3 strtoul.3 system.3 tsearch.3
d44 1
@


1.22
log
@fix typo
@
text
@d8 4
a11 4
	getsubopt.c heapsort.c l64a.c malloc.c merge.c multibyte.c putenv.c \
	qsort.c radixsort.c rand.c random.c realpath.c setenv.c strtod.c \
	strtol.c strtoll.c strtoul.c strtoull.c system.c tfind.c tsearch.c \
	_rand48.c drand48.c erand48.c jrand48.c lcong48.c lrand48.c \
d37 3
a39 3
	getsubopt.3 labs.3 ldiv.3 malloc.3 memory.3 qabs.3 qdiv.3 qsort.3 \
	radixsort.3 rand48.3 rand.3 random.3 realpath.3 strtod.3 strtol.3 \
	strtoul.3 system.3 tsearch.3
d44 1
@


1.21
log
@GNU-like getopt_long() from NetBSD with changes by me to support
getopt_long_only().  At some point this should replace the BSD
getopt(3) but we are not there yet.

While I am here add protection from the multiple getopt() definitions
due to conflicting standards.
@
text
@d8 1
a8 1
	getsubopt.c heapsort.c l64a.c malloc.c merge.c multibyte.c putenv.c =
@


1.20
log
@Add ecvt(), fcvt() and gcvt() for standard compliance and legacy code.
@
text
@d7 4
a10 4
	calloc.c cfree.c exit.c ecvt.c gcvt.c getenv.c getopt.c getsubopt.c \
	heapsort.c l64a.c malloc.c merge.c multibyte.c putenv.c qsort.c \
	radixsort.c rand.c random.c realpath.c setenv.c strtod.c strtol.c \
	strtoll.c strtoul.c strtoull.c system.c tfind.c tsearch.c \
d36 4
a39 4
	bsearch.3 div.3 ecvt.3 exit.3 getenv.3 getopt.3 getsubopt.3 labs.3 \
	ldiv.3 malloc.3 memory.3 qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 \
	rand.3 random.3 realpath.3 strtod.3 strtol.3 strtoul.3 system.3 \
	tsearch.3
d43 1
@


1.19
log
@Take advantage of the libc minor bump and add atoll(3)
@
text
@d7 4
a10 4
	calloc.c cfree.c exit.c getenv.c getopt.c getsubopt.c heapsort.c \
	l64a.c malloc.c merge.c multibyte.c putenv.c qsort.c radixsort.c \
	rand.c random.c realpath.c setenv.c strtod.c strtol.c strtoll.c \
	strtoul.c strtoull.c system.c tfind.c tsearch.c \
d36 4
a39 3
	bsearch.3 div.3 exit.3 getenv.3 getopt.3 getsubopt.3 labs.3 ldiv.3 \
	malloc.3 memory.3 qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 rand.3 \
	random.3 realpath.3 strtod.3 strtol.3 strtoul.3 system.3 tsearch.3
d41 1
@


1.18
log
@Replace strtou?q() with the more standard strtou?ll(), using weak
aliases to fake up strtou?q().  espie@@ OK.
@
text
@d6 5
a10 5
SRCS+=	a64l.c abort.c atexit.c atoi.c atof.c atol.c bsearch.c calloc.c \
	cfree.c exit.c getenv.c getopt.c getsubopt.c heapsort.c l64a.c \
	malloc.c merge.c multibyte.c putenv.c qsort.c radixsort.c rand.c \
	random.c realpath.c setenv.c strtod.c strtol.c strtoll.c strtoul.c \
	strtoull.c system.c tfind.c tsearch.c \
d35 2
a36 2
MAN+=	a64l.3 abort.3 abs.3 alloca.3 atexit.3 atof.3 atoi.3 atol.3 bsearch.3 \
	div.3 exit.3 getenv.3 getopt.3 getsubopt.3 labs.3 ldiv.3 \
@


1.17
log
@MLINK srandomdev
@
text
@d9 2
a10 2
	random.c realpath.c setenv.c strtod.c strtol.c strtoq.c strtoul.c \
	strtouq.c system.c tfind.c tsearch.c \
d51 2
a52 2
MLINKS+=strtol.3 strtoq.3
MLINKS+=strtoul.3 strtouq.3
@


1.16
log
@Add missing MLINKs
@
text
@d46 2
a47 1
MLINKS+=random.3 initstate.3 random.3 setstate.3 random.3 srandom.3
@


1.15
log
@calloc.c is back
@
text
@d44 2
a45 1
MLINKS+=rand.3 srand.3
@


1.14
log
@Merge calloc(3) man page into malloc.3; as suggested by millert@@
@
text
@d6 1
a6 1
SRCS+=	a64l.c abort.c atexit.c atoi.c atof.c atol.c bsearch.c \
@


1.13
log
@Move calloc() into malloc.c and only zero out the area if malloc()
didn't do so for us.  By default, malloc() zeros out the space it
allocates but the programmer cannot rely on this as it is implementation-
specific (and configurable via /etc/malloc.conf)
@
text
@d36 1
a36 1
	calloc.3 div.3 exit.3 getenv.3 getopt.3 getsubopt.3 labs.3 ldiv.3 \
d41 1
a41 1
MLINKS+=malloc.3 free.3 malloc.3 realloc.3
@


1.12
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d6 1
a6 1
SRCS+=	a64l.c abort.c atexit.c atoi.c atof.c atol.c bsearch.c calloc.c \
@


1.11
log
@add MLINK for malloc.conf.5 man page, also add FILES section to malloc.3; fries@@
@
text
@d4 1
a4 1
.PATH: ${.CURDIR}/arch/${MACHINE_ARCH}/stdlib ${.CURDIR}/stdlib
@


1.10
log
@Move getsubopt(3) to stdlib like lite2 and XPG4.2 say...
Update man page from lite2 while I'm at it.
@
text
@d42 1
a42 1
MLINKS+=malloc.3 cfree.3
@


1.9
log
@Install a64l/l64a man page.  Also, tsearch.3 and friends were not
being installed either.
@
text
@d7 4
a10 4
	cfree.c exit.c getenv.c getopt.c heapsort.c l64a.c malloc.c merge.c \
	multibyte.c putenv.c qsort.c radixsort.c rand.c random.c realpath.c \
	setenv.c strtod.c strtol.c strtoq.c strtoul.c strtouq.c system.c \
	tfind.c tsearch.c \
d36 2
a37 2
	calloc.3 div.3 exit.3 getenv.3 getopt.3 labs.3 ldiv.3 malloc.3 \
	memory.3 qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 rand.3 \
@


1.8
log
@damn, no tsearch(3)
@
text
@d35 1
a35 1
MAN+=	abort.3 abs.3 alloca.3 atexit.3 atof.3 atoi.3 atol.3 bsearch.3 \
d38 1
a38 1
	random.3 realpath.3 strtod.3 strtol.3 strtoul.3 system.3
d51 4
a54 3
#MLINKS+=tsearch.3 tfind.3
#MLINKS+=tsearch.3 tdelete.3
#MLINKS+=tsearch.3 twalk.3
@


1.7
log
@PD tsearch as reqd by xpg; by esr
@
text
@d38 1
a38 1
	random.3 realpath.3 strtod.3 strtol.3 strtoul.3 system.3 tsearch.3
d51 3
a53 3
MLINKS+=tsearch.3 tfind.3
MLINKS+=tsearch.3 tdelete.3
MLINKS+=tsearch.3 twalk.3
@


1.6
log
@Move cfree(3) weak symbol into a seperate file
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1996/08/21 03:17:55 downsj Exp $
d10 1
d38 1
a38 1
	random.3 realpath.3 strtod.3 strtol.3 strtoul.3 system.3
d51 3
@


1.5
log
@Make it even out.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1996/08/21 03:12:17 downsj Exp $
d7 1
a7 1
	exit.c getenv.c getopt.c heapsort.c l64a.c malloc.c merge.c \
@


1.4
log
@Document it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1996/08/10 04:18:48 tholo Exp $
d40 2
a41 1
MLINKS+=malloc.3 free.3 malloc.3 realloc.3 cfree.3
@


1.3
log
@Import malloc(3) manual page from FreeBSD
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 1996/03/25 23:31:43 tholo Exp $
d40 1
a40 1
MLINKS+=malloc.3 free.3 malloc.3 realloc.3
@


1.2
log
@Add support for building lint(1) library
@
text
@d1 1
a1 2
#	from: @@(#)Makefile.inc	5.6 (Berkeley) 6/4/91
#	$Id: Makefile.inc,v 1.1.1.1 1995/10/18 08:42:16 deraadt Exp $
d35 3
a37 4
	calloc.3 div.3 exit.3 free.3 getenv.3 getopt.3 labs.3 ldiv.3 \
	malloc.3 memory.3 qabs.3 qdiv.3 qsort.3 radixsort.3 rand48.3 \
	rand.3 random.3 realloc.3 realpath.3 strtod.3 strtol.3 strtoul.3 \
	system.3
d40 1
a42 2
MLINKS+=strtol.3 strtoq.3
MLINKS+=strtoul.3 strtouq.3
d47 2
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$Id: Makefile.inc,v 1.26 1995/04/25 15:36:39 ragge Exp $
d16 1
d19 1
d22 1
d25 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
