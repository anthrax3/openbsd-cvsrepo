head	1.14;
access;
symbols
	OPENBSD_6_2_BASE:1.14
	OPENBSD_6_1:1.14.0.12
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.14.0.8
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.4
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.8
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.6
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.2
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.12.0.24
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.22
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.20
	OPENBSD_5_0:1.12.0.18
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.16
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.14
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.6
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.4
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.2
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.10
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.8
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.14
date	2014.11.15.14.41.02;	author bentley;	state Exp;
branches;
next	1.13;
commitid	HuCemPIiOkto0SJD;

1.13
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2005.10.11.01.23.41;	author jaredy;	state Exp;
branches;
next	1.10;

1.10
date	2005.07.26.04.20.23;	author jaredy;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2004.01.23.23.08.46;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.02.20.18.37;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.10.06.48.30;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.15.14.31.17;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.20.13.50.02;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.06.29.18.36.20;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.06.15.17.55.07;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	97.08.20.04.02.17;	author millert;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Reduce instances of `` '' in manuals.

troff displays these as typographic quotes, but nroff implementations
almost always print them literally, which rarely has the intended effect
with modern fonts, even in stock xterm.

These uses of `` '' can be replaced either with more semantic alternatives
or with Dq, which prints typographic quotes in a UTF-8 locale (but will
automatically fall back to `` '' in an ASCII locale).

improvements and ok schwarze@@
@
text
@.\" $OpenBSD: getsubopt.3,v 1.13 2013/06/05 03:39:23 tedu Exp $
.\"
.\" Copyright (c) 1990, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)getsubopt.3	8.1 (Berkeley) 6/9/93
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt GETSUBOPT 3
.Os
.Sh NAME
.Nm getsubopt
.Nd get sub options from an argument
.Sh SYNOPSIS
.In stdlib.h
.Vt extern char *suboptarg;
.Ft int
.Fn getsubopt "char **optionp" "char * const *tokens" "char **valuep"
.Sh DESCRIPTION
The
.Fn getsubopt
function parses a string containing tokens delimited by one or more
tab, space, or comma
.Pq Ql \&,
characters.
It is intended for use in parsing groups of option arguments provided
as part of a utility command line.
.Pp
The argument
.Fa optionp
is a pointer to a pointer to the string.
The argument
.Fa tokens
is a pointer to a null-terminated array of pointers to strings.
.Pp
The
.Fn getsubopt
function returns the zero-based offset of the pointer in the
.Fa tokens
array referencing a string which matches the first token
in the string, or \-1 if the string contains no tokens or
.Fa tokens
does not contain a matching string.
.Pp
If the token is of the form
.Ar name Ns = Ns Ar value ,
the location referenced by
.Fa valuep
will be set to point to the start of the
.Dq value
portion of the token.
.Pp
On return from
.Fn getsubopt ,
.Fa optionp
will be set to point to the start of the next token in the string,
or the NUL at the end of the string if no more tokens are present.
The external variable
.Fa suboptarg
will be set to point to the start of the current token, or
.Dv NULL
if no tokens were present.
The argument
.Fa valuep
will be set to point to the value portion of the token, or
.Dv NULL
if no value portion was present.
.Sh EXAMPLES
.Bd -literal
char *tokens[] = {
	#define	ONE	0
		"one",
	#define	TWO	1
		"two",
	NULL
};

\&...

extern char *optarg, *suboptarg;
char *options, *value;

while ((ch = getopt(argc, argv, "ab:")) != -1) {
	switch (ch) {
	case 'a':
		/* process "a" option */
		break;
	case 'b':
		options = optarg;
		while (*options) {
			switch (getsubopt(&options, tokens, &value)) {
			case ONE:
				/* process "one" sub option */
				break;
			case TWO:
				/* process "two" sub option */
				if (!value)
					error("no value for two");
				i = atoi(value);
				break;
			case -1:
				if (suboptarg)
					error("illegal sub option %s",
					  suboptarg);
				else
					error("missing sub option");
				break;
			}
		}
		break;
	}
}
.Ed
.Sh SEE ALSO
.Xr getopt 3 ,
.Xr strsep 3
.Sh HISTORY
The
.Fn getsubopt
function first appeared in
.Bx 4.4 .
@


1.13
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.12 2007/05/31 19:19:31 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
d110 1
a110 1
		/* process ``a'' option */
d117 1
a117 1
				/* process ``one'' sub option */
d120 1
a120 1
				/* process ``two'' sub option */
@


1.12
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.11 2005/10/11 01:23:41 jaredy Exp $
d32 1
a32 1
.Dd $Mdocdate$
d39 1
a39 1
.Fd #include <stdlib.h>
@


1.11
log
@tidy up examples
- use err() for error handling
- add lint hints
- spacing nits and missing braces

ok otto
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.10 2005/07/26 04:20:23 jaredy Exp $
d32 1
a32 1
.Dd June 9, 1993
@


1.10
log
@- typos, punctuation, layout, macro tweaks
- break long lines

ok jmc
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.9 2005/02/25 03:12:44 cloder Exp $
d107 2
a108 2
while ((ch = getopt(argc, argv, "ab:")) != \-1) {
	switch(ch) {
d115 1
a115 1
			switch(getsubopt(&options, tokens, &value)) {
d125 1
a125 1
			case \-1:
d132 1
d136 1
@


1.9
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.8 2004/01/23 23:08:46 jmc Exp $
d47 1
a47 1
tab, space or comma
d93 1
a93 1
.Bd -literal -compact
@


1.8
log
@`Ns' implies `No', so `Ns No' -> `Ns'; (even simpler in adduser(8))
discussed with todd@@
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.7 2003/06/02 20:18:37 millert Exp $
d81 1
a81 1
or the null at the end of the string if no more tokens are present.
@


1.7
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.6 2003/05/10 06:48:30 jmc Exp $
d70 1
a70 1
.Ar name Ns No = Ns Ar value ,
@


1.6
log
@typos;
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.5 2000/12/15 14:31:17 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@.Sh EXAMPLE -> .Sh EXAMPLES. Even if there's only one example, at least
this is consistent.
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.4 2000/04/20 13:50:02 aaron Exp $
d69 1
a69 1
in the string, or, \-1 if the string contains no tokens or
@


1.4
log
@Flesh out stdlib function man pages.
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.3 1999/06/29 18:36:20 aaron Exp $
d96 1
a96 1
.Sh EXAMPLE
@


1.3
log
@first round of repairs on stdlib
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.2 1998/06/15 17:55:07 mickey Exp $
d44 1
a44 1
.Vt extern char *suboptarg
d50 2
a51 3
function
parses a string containing tokens delimited by one or more tab, space or
comma
d62 1
a62 2
is a pointer to a null-terminated
array of pointers to strings.
d66 1
a66 2
function
returns the zero-based offset of the pointer in the
d73 3
a75 1
If the token is of the form ``name=value'', the location referenced by
d77 3
a79 1
will be set to point to the start of the ``value'' portion of the token.
d90 1
a90 2
if no
tokens were present.
d93 1
a93 1
will be set to point to the ``value'' portion of the token, or
d95 1
a95 1
if no ``value'' portion was present.
@


1.2
log
@use Bx macro for BSD versions
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.1 1997/08/20 04:02:17 millert Exp $
d63 1
a63 2
is a pointer to a
.Dv NULL Ns -terminated
@


1.1
log
@Move getsubopt(3) to stdlib like lite2 and XPG4.2 say...
Update man page from lite2 while I'm at it.
@
text
@d1 1
a1 1
.\" $OpenBSD: getsubopt.3,v 1.2 1996/08/19 08:24:04 tholo Exp $
d147 2
a148 1
function first appeared in 4.4BSD.
@

