head	1.12;
access;
symbols
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.14
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.10
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.12
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.4
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.8
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.6
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.12
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.10
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.8
	OPENBSD_5_0:1.11.0.6
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.4
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.2
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.10.0.10
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.12
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.8
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.6
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.4
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.2
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.9.0.10
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.8
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.6
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.4
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.2
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.8.0.6
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.5.0.14
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.12
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.10
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.8
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.12
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2010.04.01.17.06.55;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2007.05.31.19.19.31;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2005.02.25.03.12.44;	author cloder;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.17.21.56.24;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2003.06.03.01.52.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.10.06.48.30;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.20.13.50.01;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.29.18.36.15;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.02.27.21.55.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	98.06.21.22.13.48;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.08.17.22.58.33;	author millert;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: a64l.3,v 1.11 2010/04/01 17:06:55 jmc Exp $
.\"
.\" Copyright (c) 1997 Todd C. Miller <Todd.Miller@@courtesan.com>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: April 1 2010 $
.Dt A64L 3
.Os
.Sh NAME
.Nm a64l ,
.Nm l64a
.Nd convert between 32-bit integer and radix-64 ASCII string
.Sh SYNOPSIS
.In stdlib.h
.Ft long
.Fn a64l "const char *s"
.Ft char *
.Fn l64a "long l"
.Sh DESCRIPTION
The
.Fn a64l
and
.Fn l64a
functions are used to maintain numbers stored in radix-64
.Tn ASCII
characters.
This is a notation by which 32-bit integers
can be represented by up to six characters; each character represents a
.Dq digit
in a radix-64 notation.
.Pp
The characters used to represent digits are
.Ql \&.
for 0,
.Ql /
for 1,
.Ql 0
through
.Ql 9
for 2-11,
.Ql A
through
.Ql Z
for 12-37, and
.Ql a
through
.Ql z
for 38-63.
.Pp
The
.Fn a64l
function takes a pointer to a NUL-terminated radix-64 representation
and returns a corresponding 32-bit value.
If the string pointed to by
.Fa s
contains more than six characters,
.Fn a64l
will use the first six.
.Fn a64l
scans the character string from left to right, decoding
each character as a 6-bit radix-64 number.
If a long integer is
larger than 32 bits, the return value will be sign-extended.
.Pp
.Fn l64a
takes a long integer argument
.Fa l
and returns a pointer to the corresponding radix-64 representation.
.Sh RETURN VALUES
On success,
.Fn a64l
returns a 32-bit representation of
.Fa s .
If
.Fa s
is a null pointer or if it contains digits other than those described above,
.Fn a64l
returns \-1 and sets the global variable
.Va errno
to
.Er EINVAL .
.Pp
On success,
.Fn l64a
returns a pointer to a string containing the radix-64 representation of
.Fa l .
If
.Fa l
is 0,
.Fn l64a
returns a pointer to the empty string.
If
.Fa l
is negative,
.Fn l64a
returns a null pointer and sets the global variable
.Va errno
to
.Er EINVAL .
.Sh STANDARDS
The
.Fn a64l
and
.Fn l64a
functions conform to
.St -xpg4.2 .
.Sh CAVEATS
The value returned by
.Fn l64a
is a pointer into a static buffer, the contents of which
will be overwritten by subsequent calls.
.Pp
The value returned by
.Fn a64l
may be incorrect if the value is too large; for that reason, only strings
that resulted from a call to
.Fn l64a
should be used to call
.Fn a64l .
.Pp
If a long integer is larger than 32 bits, only the low-order
32 bits are used.
@


1.11
log
@WARNINGS -> CAVEATS, and a little neccessary cleanup;
@
text
@d1 1
a1 1
.\" $OpenBSD: a64l.3,v 1.10 2007/05/31 19:19:31 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: May 31 2007 $
d25 1
a25 1
.Fd #include <stdlib.h>
@


1.10
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: a64l.3,v 1.9 2005/02/25 03:12:44 cloder Exp $
d17 1
a17 1
.Dd $Mdocdate$
d111 8
a118 1
.Sh WARNINGS
a133 7
.Sh STANDARDS
The
.Fn a64l
and
.Fn l64a
functions conform to
.St -xpg4.2 .
@


1.9
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: a64l.3,v 1.8 2003/06/17 21:56:24 millert Exp $
d17 1
a17 1
.Dd August 17, 1997
@


1.8
log
@Sync with share/misc/license.template and add missing DARPA credit
where applicable.
@
text
@d1 1
a1 1
.\" $OpenBSD: a64l.3,v 1.7 2003/06/03 01:52:40 millert Exp $
d63 1
a63 1
function takes a pointer to a null-terminated radix-64 representation
@


1.7
log
@Use an ISC-tyle license for all my code; it is simpler and more permissive.
@
text
@d1 1
d9 7
a15 9
.\" THE SOFTWARE IS PROVIDED "AS IS" AND TODD C. MILLER DISCLAIMS ALL
.\" WARRANTIES WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL TODD C. MILLER BE LIABLE
.\" FOR ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
.\" OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
.\" CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" $OpenBSD: a64l.3,v 1.6 2003/05/10 06:48:30 jmc Exp $
@


1.6
log
@typos;
@
text
@d1 1
a2 1
.\" All rights reserved.
d4 3
a6 10
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
d8 7
a14 10
.\" THIS SOFTWARE IS PROVIDED ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES,
.\" INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL
.\" THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,
.\" EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,
.\" PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS;
.\" OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR
.\" OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF
.\" ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
d16 1
a16 1
.\" $OpenBSD: a64l.3,v 1.5 2000/04/20 13:50:01 aaron Exp $
@


1.5
log
@Flesh out stdlib function man pages.
@
text
@d26 1
a26 1
.\" $OpenBSD: a64l.3,v 1.4 1999/06/29 18:36:15 aaron Exp $
d98 1
a98 1
is a null pointer or if it contains digits other than those described above.
@


1.4
log
@first round of repairs on stdlib
@
text
@a0 1
.\"
d26 1
a26 1
.\" $OpenBSD: a64l.3,v 1.3 1999/02/27 21:55:53 deraadt Exp $
d48 3
a50 3
characters.  This is a notation by which 32-bit integers
can be represented by up to six characters; each character
represents a
d75 2
a76 1
and returns a corresponding 32-bit value.  If the string pointed to by
d83 2
a84 1
each character as a 6-bit radix-64 number.  If a long integer is
@


1.3
log
@make function names the correct case
@
text
@d27 1
a27 1
.\" $OpenBSD: a64l.3,v 1.2 1998/06/21 22:13:48 millert Exp $
d48 2
a49 1
ASCII characters.  This is a notation by which 32-bit integers
d51 21
a71 5
represents a "digit" in a radix-64 notation.
.Pp
The characters used to represent "digits" are '.' for 0, '/' for 1,
'0' through '9' for 2-11, 'A' through 'Z' for 12-37, and 'a' through
'z' for 38-63.
d77 1
a77 1
.Ar s
d88 1
a88 1
.Ar l
d94 1
a94 1
.Ar s .
d96 2
a97 2
.Ar s
is a NULL pointer or if it contains "digits" other than those described above,
d99 4
a102 2
returns -1L and sets the global variable errno to
.Va EINVAL .
d107 1
a107 1
.Ar l .
d109 1
a109 1
.Ar l
d114 1
a114 1
.Ar l
d117 4
a120 2
returns a NULL pointer and sets the global variable errno to
.Va EINVAL .
d139 1
a139 1
.Fn a64l                                                           
@


1.2
log
@Remove the advertising clause in my old license, it impedes free use
of the code as a large number of similar clauses makes it impossible
to write an ad for a product using the code...
@
text
@d27 1
a27 1
.\" $OpenBSD: a64l.3,v 1.1 1997/08/17 22:58:33 millert Exp $
d64 1
a64 1
.Fn A64l
@


1.1
log
@Man page for a64l(3) and l64a(3), based on a64l.3 from the MiNT docs 0.1.
Also make a64l(3) and l64a(3) deal reasonably with inapropriate
input.  The standard does not require this, but it does not disallow
it either.
@
text
@d13 1
a13 4
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Todd C. Miller.
.\" 4. The name of the author may not be used to endorse or promote products
d27 1
a27 1
.\" $OpenBSD$
@

