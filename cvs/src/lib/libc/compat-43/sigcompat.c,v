head	1.9;
access;
symbols
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.6
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.40
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.09.26.05.57.58;	author guenther;	state Exp;
branches;
next	1.8;
commitid	Q9cL1s4uS2nNPKL1;

1.8
date	2015.10.23.04.39.24;	author guenther;	state Exp;
branches;
next	1.7;
commitid	OrVNAJkzchWBNbO0;

1.7
date	2015.09.13.07.36.58;	author guenther;	state Exp;
branches;
next	1.6;
commitid	lKiiBbVqMp5OO6rf;

1.6
date	2015.01.16.16.48.51;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	0DYulI8hhujBHMcR;

1.5
date	2005.08.08.08.05.33;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.11.21.03.10;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2003.06.02.20.18.33;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.19.39;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.46;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.46;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@sigsetmask() and sigblock() are no longer used by any setjmp implementation
so the internal hidden names are unused; switch to PROTO_DEPRECATED()
and drop the DEF_WEAK()s
@
text
@/*
 * Copyright (c) 1989 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <signal.h>

int
sigvec(int signo, struct sigvec *sv, struct sigvec *osv)
{
	int ret;
	struct sigvec nsv;

	if (sv) {
		nsv = *sv;
		nsv.sv_flags ^= SV_INTERRUPT;	/* !SA_INTERRUPT */
	}
	ret = WRAP(sigaction)(signo, sv ? (struct sigaction *)&nsv : NULL,
	    (struct sigaction *)osv);
	if (ret == 0 && osv)
		osv->sv_flags ^= SV_INTERRUPT;	/* !SA_INTERRUPT */
	return (ret);
}

int
sigsetmask(int mask)
{
	int omask, n;

	n = WRAP(sigprocmask)(SIG_SETMASK, (sigset_t *) &mask,
	    (sigset_t *) &omask);
	if (n)
		return (n);
	return (omask);
}

int
sigblock(int mask)
{
	int omask, n;

	n = WRAP(sigprocmask)(SIG_BLOCK, (sigset_t *) &mask,
	    (sigset_t *) &omask);
	if (n)
		return (n);
	return (omask);
}

int
sigpause(int mask)
{
	return (sigsuspend((sigset_t *)&mask));
}
@


1.8
log
@Merge the sigaction() and sigprocmask() overloads/wrappers from libpthread
into libc, and move pthread_sigmask() as well (just a trivial wrapper).
This provides consistent handling of SIGTHR between single- and multi-threaded
programs and is a step in the merge of all the libpthread overloads, providing
some ASM and Makefile bits that the other wrappers will need.

ok deraadt@@ millert@@
@
text
@a59 1
DEF_WEAK(sigsetmask);
a71 1
DEF_WEAK(sigblock);
@


1.7
log
@Do provide hidden _libc_* aliases for sig{block,setmask} and use them in
the ASM *setjmp implementations.
Skip the PLT when calling them on amd64 (other archs to do this after testing)

ok miod@@
@
text
@d42 1
a42 1
	ret = sigaction(signo, sv ? (struct sigaction *)&nsv : NULL,
d54 2
a55 1
	n = sigprocmask(SIG_SETMASK, (sigset_t *) &mask, (sigset_t *) &omask);
d67 2
a68 1
	n = sigprocmask(SIG_BLOCK, (sigset_t *) &mask, (sigset_t *) &omask);
@


1.6
log
@Move to the <limits.h> universe.
review by millert, binary checking process with doug, concept with guenther
@
text
@d59 1
d71 1
@


1.5
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@a29 1
#include <sys/param.h>
@


1.4
log
@ansification; checked by pval
@
text
@a29 4
#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: sigcompat.c,v 1.3 2003/06/02 20:18:33 millert Exp $";
#endif /* LIBC_SCCS and not lint */

@


1.3
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: sigcompat.c,v 1.2 1996/08/19 08:19:39 tholo Exp $";
d38 1
a38 3
sigvec(signo, sv, osv)
	int signo;
	struct sigvec *sv, *osv;
d55 1
a55 2
sigsetmask(mask)
	int mask;
d66 1
a66 2
sigblock(mask)
	int mask;
d77 1
a77 2
sigpause(mask)
	int mask;
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char *rcsid = "$OpenBSD: sigcompat.c,v 1.1.1.1 1995/10/18 08:41:46 deraadt Exp $";
@


1.1
log
@Initial revision
@
text
@d35 1
a35 2
/*static char *sccsid = "from: @@(#)sigcompat.c	5.3 (Berkeley) 2/24/91";*/
static char *rcsid = "$Id: sigcompat.c,v 1.6 1994/02/24 06:10:57 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
