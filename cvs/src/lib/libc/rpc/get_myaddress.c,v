head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.4
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.10
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.6
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.4
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.13.0.12
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.10
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.8
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.6
	OPENBSD_5_0:1.13.0.4
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.2
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.12.0.22
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.18
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.20
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.16
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.14
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.12
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.10
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.8
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.10.0.22
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.20
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.18
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.16
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.14
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.12
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.10
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.8
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2015.09.13.15.36.56;	author guenther;	state Exp;
branches;
next	1.14;
commitid	FxNpAvmgpSFQVav0;

1.14
date	2013.11.12.06.09.50;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.01.07.44.03;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.25.05.06.27;	author itojun;	state Exp;
branches;
next	1.9;

1.9
date	98.08.14.21.39.36;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.22.05.11.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.01.22.18.50.40;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	97.01.22.08.52.32;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.19.08.31.31;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.07.20.06.12.26;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.29.18.53.23;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.05.16.36.02;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Wrap <rpc/*.h> so that calls go direct and the symbols are all weak.
Hide __xprt_register() and _authenticate(); truncate <rpc/svc_auth.h>

ok deraadt@@
@
text
@/*	$OpenBSD: get_myaddress.c,v 1.14 2013/11/12 06:09:50 deraadt Exp $ */

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * get_myaddress.c
 *
 * Get client's IP address via ioctl.  This avoids using the yellowpages.
 */

#include <rpc/types.h>
#include <rpc/xdr.h>
#include <rpc/pmap_prot.h>
#include <rpc/rpc.h>
#include <sys/socket.h>
#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>
#include <net/if.h>
#include <netinet/in.h>
#include <ifaddrs.h>

/* 
 * don't use gethostbyname, which would invoke yellow pages
 *
 * Avoid loopback interfaces.  We return information from a loopback
 * interface only if there are no other possible interfaces.
 */
int
get_myaddress(struct sockaddr_in *addr)
{
	struct ifaddrs *ifap, *ifa;
	int loopback = 0, gotit = 0;

	if (getifaddrs(&ifap) != 0)
		return (-1);

  again:
	for (ifa = ifap; ifa; ifa = ifa->ifa_next) {
		if ((ifa->ifa_flags & IFF_UP) &&
		    ifa->ifa_addr->sa_family == AF_INET &&
		    (loopback == 1 && (ifa->ifa_flags & IFF_LOOPBACK))) {
			*addr = *((struct sockaddr_in *)ifa->ifa_addr);
			addr->sin_port = htons(PMAPPORT);
			gotit = 1;
			break;
		}
	}
	if (gotit == 0 && loopback == 0) {
		loopback = 1;
		goto again;
	}
	freeifaddrs(ifap);
	return (0);
}
DEF_WEAK(get_myaddress);
@


1.14
log
@pull in missing includes (math.h, unistd.h, stdlib.h) needed for
prototypes
@
text
@d1 1
a1 1
/*	$OpenBSD: get_myaddress.c,v 1.13 2010/09/01 14:43:34 millert Exp $ */
d85 1
@


1.13
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: get_myaddress.c,v 1.12 2005/08/08 08:05:35 espie Exp $ */
d43 1
@


1.12
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 2
a2 1
/*	$OpenBSD$ */
d4 28
a31 26
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user.
 * 
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 * 
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 * 
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 * 
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 * 
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
a37 1
 * Copyright (C) 1984, Sun Microsystems, Inc.
@


1.11
log
@ansify. ok deraadt@@ jaredy@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.10 2000/02/25 05:06:27 itojun Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.10
log
@make it very safe against LP64 alignment issues, by using getifaddrs().
(is it too large amount of change?)
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.9 1998/08/14 21:39:36 deraadt Exp $";
d59 1
a59 2
get_myaddress(addr)
	struct sockaddr_in *addr;
@


1.9
log
@realloc repair
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.8 1997/09/22 05:11:07 millert Exp $";
a48 1
#include <sys/ioctl.h>
d50 1
a50 1
#include <arpa/inet.h>
d62 1
a62 5
	int s;
	char *inbuf = NULL, *ninbuf;
	struct ifconf ifc;
	struct ifreq ifreq, *ifr;
	int len, inbuflen = 8192, slop;
d65 1
a65 1
	if ((s = socket(AF_INET, SOCK_DGRAM, 0)) < 0) {
d67 7
a73 33
	}
	while (1) {
		ifc.ifc_len = inbuflen;
		ninbuf = realloc(inbuf, inbuflen);
		if (ninbuf == NULL) {
			if (inbuf)
				free(inbuf);
			close(s);
			return (-1);
		}
		ifc.ifc_buf = inbuf = ninbuf;
		if (ioctl(s, SIOCGIFCONF, (char *)&ifc) < 0) {
			(void) close(s);
			free(inbuf);
			return (-1);
		}
		if (ifc.ifc_len + sizeof(ifreq) < inbuflen)
			break;
		inbuflen *= 2;
	}
again:
	ifr = ifc.ifc_req;
	for (len = ifc.ifc_len; len; len -= sizeof ifreq) {
		ifreq = *ifr;
		if (ioctl(s, SIOCGIFFLAGS, (char *)&ifreq) < 0) {
			(void) close(s);
			free(inbuf);
			return (-1);
		}
		if ((ifreq.ifr_flags & IFF_UP) &&
		    ifr->ifr_addr.sa_family == AF_INET &&
		    (loopback == 1 && (ifreq.ifr_flags & IFF_LOOPBACK))) {
			*addr = *((struct sockaddr_in *)&ifr->ifr_addr);
a77 9
		/*
		 * Deal with variable length addresses
		 */
		slop = ifr->ifr_addr.sa_len - sizeof (struct sockaddr);
		if (slop > 0) {
			ifr = (struct ifreq *) ((caddr_t)ifr + slop);
			len -= slop;
		}
		ifr++;
d83 1
a83 2
	(void) close(s);
	free (inbuf);
@


1.8
log
@Some -Wall.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.7 1997/01/22 18:50:40 deraadt Exp $";
d64 1
a64 1
	char *inbuf = NULL;
d75 4
a78 2
		ifc.ifc_buf = inbuf = realloc(inbuf, inbuflen);
		if (inbuf == NULL) {
d82 1
@


1.7
log
@handle SIOCGIFCONF for as many interfaces as provided
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.6 1997/01/22 08:52:32 deraadt Exp $";
d47 1
@


1.6
log
@SIOCGIFCONF more carefully
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.5 1996/08/19 08:31:31 tholo Exp $";
d66 1
a66 1
	int len = 8192, slop;
d73 2
a74 2
		ifc.ifc_len = len;
		ifc.ifc_buf = inbuf = realloc(inbuf, len);
d84 1
a84 1
		if (ifc.ifc_len + sizeof(ifreq) < len)
d86 1
a86 1
		len *= 2;
@


1.5
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.4 1996/07/20 06:12:26 deraadt Exp $";
d46 1
d63 1
a63 1
	char buf[BUFSIZ];
d66 1
a66 1
	int len, slop;
d72 15
a86 5
	ifc.ifc_len = sizeof (buf);
	ifc.ifc_buf = buf;
	if (ioctl(s, SIOCGIFCONF, (char *)&ifc) < 0) {
		(void) close(s);
		return (-1);
d94 1
d120 1
@


1.4
log
@bcopy->memcpy & tag
@
text
@a0 3
/*	$OpenBSD: get_myaddress.c,v 1.3 1996/01/04 20:05:04 pk Exp $	*/
/*	$NetBSD: get_myaddress.c,v 1.3 1996/01/04 20:05:04 pk Exp $	*/

d31 2
a32 4
/*static char *sccsid = "from: @@(#)get_myaddress.c 1.4 87/08/11 Copyr 1984 Sun Micro";*/
/*static char *sccsid = "from: @@(#)get_myaddress.c	2.1 88/07/29 4.0 RPCSRC";*/
static char *rcsid = "$OpenBSD: get_myaddress.c,v 1.3 1996/01/04 20:05:04 pk Exp $";
#endif
@


1.3
log
@prefer non-loopback addresses
@
text
@d1 1
d36 1
a36 1
static char *rcsid = "$NetBSD: get_myaddress.c,v 1.3 1996/01/04 20:05:04 pk Exp $";
@


1.2
log
@from netbsd; make get_myaddress() return failure if it is unable to
determine address, make other code understand this failure.
@
text
@d57 3
d70 1
d81 1
d90 2
a91 1
		    ifr->ifr_addr.sa_family == AF_INET) {
d94 1
d106 4
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: get_myaddress.c,v 1.2 1995/02/25 03:01:43 cgd Exp $	*/
d35 1
a35 1
static char *rcsid = "$NetBSD: get_myaddress.c,v 1.2 1995/02/25 03:01:43 cgd Exp $";
d58 1
d69 1
a69 2
	    perror("get_myaddress: socket");
	    exit(1);
d74 2
a75 2
		perror("get_myaddress: ioctl (get interface configuration)");
		exit(1);
d81 2
a82 2
			perror("get_myaddress: ioctl");
			exit(1);
d94 1
a94 1
		if (slop) {
d101 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
