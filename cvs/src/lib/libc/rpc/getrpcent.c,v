head	1.21;
access;
symbols
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.8
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.18.0.4
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.16.0.2
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.15.0.18
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.16
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.12
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.10
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.8
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.6
	OPENBSD_5_0:1.15.0.4
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.2
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.14.0.16
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.12
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.14
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.10
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.8
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.6
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.4
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.2
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.11.0.16
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.14
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.12
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.11.0.10
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.11.0.8
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.11.0.6
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.4
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.2
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.14
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.12
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.10
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.8
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.6
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.21
date	2015.09.13.15.36.56;	author guenther;	state Exp;
branches;
next	1.20;
commitid	FxNpAvmgpSFQVav0;

1.20
date	2015.09.11.11.33.03;	author deraadt;	state Exp;
branches;
next	1.19;
commitid	reQILxeLxCS7cVZW;

1.19
date	2015.08.20.21.49.29;	author deraadt;	state Exp;
branches;
next	1.18;
commitid	jeIpGH0zlTW3huPH;

1.18
date	2015.04.25.21.38.22;	author miod;	state Exp;
branches;
next	1.17;
commitid	wrEYwYDtO3N4D49X;

1.17
date	2015.04.18.18.28.37;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	6b2lLILbgCR1fvia;

1.16
date	2014.09.15.06.15.48;	author guenther;	state Exp;
branches;
next	1.15;
commitid	ztgYHm1nk3mtTyS3;

1.15
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2007.02.20.01.47.03;	author ray;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2005.04.01.07.44.03;	author otto;	state Exp;
branches;
next	1.11;

1.11
date	2001.09.15.13.51.00;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.27.00.58.56;	author lebel;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.03.06.50.28;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.22.05.11.07;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.09.15.09.31.35;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	96.09.02.05.32.50;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.09.02.02.48.57;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.27.03.33.57;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.31.34;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.07.20.06.12.28;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.21
log
@Wrap <rpc/*.h> so that calls go direct and the symbols are all weak.
Hide __xprt_register() and _authenticate(); truncate <rpc/svc_auth.h>

ok deraadt@@
@
text
@/*	$OpenBSD: getrpcent.c,v 1.20 2015/09/11 11:33:03 deraadt Exp $ */

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <sys/types.h>
#include <string.h>
#include <limits.h>
#include <rpc/rpc.h>

/*
 * Internet version.
 */
static struct rpcdata {
	FILE	*rpcf;
	int	stayopen;
#define	MAXALIASES	35
	char	*rpc_aliases[MAXALIASES];
	struct	rpcent rpc;
	char	line[BUFSIZ+1];
} *rpcdata;

static	struct rpcent *interpret(char *val, int len);

static char RPCDB[] = "/etc/rpc";

static struct rpcdata *
_rpcdata(void)
{
	struct rpcdata *d = rpcdata;

	if (d == NULL) {
		d = calloc(1, sizeof (struct rpcdata));
		rpcdata = d;
	}
	return (d);
}

struct rpcent *
getrpcbynumber(int number)
{
	struct rpcdata *d = _rpcdata();
	struct rpcent *p;

	if (d == NULL)
		return (0);
	setrpcent(0);
	while ((p = getrpcent())) {
		if (p->r_number == number)
			break;
	}
	endrpcent();
	return (p);
}

struct rpcent *
getrpcbyname(char *name)
{
	struct rpcent *rpc;
	char **rp;

	setrpcent(0);
	while ((rpc = getrpcent())) {
		if (strcmp(rpc->r_name, name) == 0)
			goto done;
		for (rp = rpc->r_aliases; *rp != NULL; rp++) {
			if (strcmp(*rp, name) == 0)
				goto done;
		}
	}
done:
	endrpcent();
	return (rpc);
}

void
setrpcent(int f)
{
	struct rpcdata *d = _rpcdata();

	if (d == NULL)
		return;
	if (d->rpcf == NULL)
		d->rpcf = fopen(RPCDB, "re");
	else
		rewind(d->rpcf);
	d->stayopen |= f;
}
DEF_WEAK(setrpcent);

void
endrpcent(void)
{
	struct rpcdata *d = _rpcdata();

	if (d == NULL)
		return;
	if (d->rpcf && !d->stayopen) {
		fclose(d->rpcf);
		d->rpcf = NULL;
	}
}
DEF_WEAK(endrpcent);

struct rpcent *
getrpcent(void)
{
	struct rpcdata *d = _rpcdata();

	if (d == NULL)
		return(NULL);
	if (d->rpcf == NULL && (d->rpcf = fopen(RPCDB, "re")) == NULL)
		return (NULL);
	/* -1 so there is room to append a \n below */
        if (fgets(d->line, sizeof(d->line) - 1, d->rpcf) == NULL)
		return (NULL);
	return (interpret(d->line, strlen(d->line)));
}
DEF_WEAK(getrpcent);

static struct rpcent *
interpret(char *val, int len)
{
	const char *errstr;
	struct rpcdata *d = _rpcdata();
	char *p;
	char *cp, *num, **q;

	if (d == NULL)
		return (0);
	strlcpy(d->line, val, sizeof(d->line));
	p = d->line;
	p[len] = '\n';
	if (*p == '#')
		return (getrpcent());
	cp = strpbrk(p, "#\n");
	if (cp == NULL)
		return (getrpcent());
	*cp = '\0';
	cp = strpbrk(p, " \t");
	if (cp == NULL)
		return (getrpcent());
	*cp++ = '\0';
	/* THIS STUFF IS INTERNET SPECIFIC */
	d->rpc.r_name = d->line;
	while (*cp == ' ' || *cp == '\t')
		cp++;
	num = cp;
	cp = strpbrk(cp, " \t");
	if (cp != NULL)
		*cp++ = '\0';
	d->rpc.r_number = strtonum(num, 0, INT_MAX, &errstr);
	if (errstr)
		return (0);
	q = d->rpc.r_aliases = d->rpc_aliases;
	while (cp && *cp) {
		if (*cp == ' ' || *cp == '\t') {
			cp++;
			continue;
		}
		if (q < &(d->rpc_aliases[MAXALIASES - 1]))
			*q++ = cp;
		cp = strpbrk(cp, " \t");
		if (cp != NULL)
			*cp++ = '\0';
	}
	*q = NULL;
	return (&d->rpc);
}

@


1.20
log
@rpcdata should not be exported; ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.19 2015/08/20 21:49:29 deraadt Exp $ */
d119 1
d133 1
d149 1
@


1.19
log
@All these files include <stdlib.h>, so do not need to cast
malloc/calloc/realloc* returns.
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.18 2015/04/25 21:38:22 miod Exp $ */
d44 1
a44 1
struct rpcdata {
@


1.18
log
@Cut the aliases part of /etc/rpc lines before feeding them to strtonum(), for
it will fail otherwise; ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.17 2015/04/18 18:28:37 deraadt Exp $ */
d63 1
a63 1
		d = (struct rpcdata *)calloc(1, sizeof (struct rpcdata));
@


1.17
log
@Convert many atoi() calls to strtonum(), adding range checks and failure
handling along the way.
Reviews by Brendan MacDonell, Jeremy Devenport, florian, doug, millert
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.16 2014/09/15 06:15:48 guenther Exp $ */
d154 1
a154 1
	char *cp, **q;
d175 5
a179 1
	d->rpc.r_number = strtonum(cp, 0, INT_MAX, &errstr);
a182 3
	cp = strpbrk(cp, " \t");
	if (cp != NULL) 
		*cp++ = '\0';
@


1.16
log
@When fopen()ing internal to libc (the API doesn't support the use
of the resulting FILE *), then pass fopen() the 'e' mode letter to
mark it close-on-exec.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.15 2010/09/01 14:43:34 millert Exp $ */
d38 1
d151 1
d175 3
a177 1
	d->rpc.r_number = atoi(cp);
@


1.15
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getrpcent.c,v 1.14 2007/02/20 01:47:03 ray Exp $ */
d113 1
a113 1
		d->rpcf = fopen(RPCDB, "r");
d139 1
a139 1
	if (d->rpcf == NULL && (d->rpcf = fopen(RPCDB, "r")) == NULL)
@


1.14
log
@Change hard coded numbers to sizeof(buf).  Also change some
sizeof(buf) - 1 to sizeof(buf), since fgets takes the whole buffer size.

Based on diff from Charles Longeau <chl at tuxfamily dot org> long ago.

OK millert@@.
@
text
@d1 2
a2 1
/*	$OpenBSD: getrpcent.c,v 1.13 2005/08/08 08:05:35 espie Exp $ */
d4 1
a4 15
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user or with the express written consent of
 * Sun Microsystems, Inc.
 *
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 *
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
d6 3
a8 3
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
d10 9
a18 3
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
d20 12
a31 7
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
 */

/*
 * Copyright (c) 1984 by Sun Microsystems, Inc.
@


1.13
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d144 1
a144 1
        if (fgets(d->line, BUFSIZ-1, d->rpcf) == NULL)
@


1.12
log
@ansify. ok deraadt@@ jaredy@@
@
text
@d1 1
a30 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.11 2001/09/15 13:51:00 deraadt Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.11
log
@prototype cleanup
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.10 2001/06/27 00:58:56 lebel Exp $";
d57 1
a57 3
static	struct rpcent *interpret();
struct	hostent *gethostent();
char	*inet_ntoa();
d62 1
a62 1
_rpcdata()
d74 1
a74 2
getrpcbynumber(number)
	int number;
d91 1
a91 2
getrpcbyname(name)
	char *name;
d111 1
a111 2
setrpcent(f)
	int f;
d125 1
a125 1
endrpcent()
d138 1
a138 1
getrpcent()
d153 1
a153 3
interpret(val, len)
	char *val;
	int len;
@


1.10
log
@use strlcpy vs strncpy+a[len-1]='\0'.  millert@@ ok.
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.9 2001/03/03 06:50:28 deraadt Exp $";
d66 1
a66 1
	register struct rpcdata *d = rpcdata;
d77 1
a77 1
	register int number;
d79 2
a80 2
	register struct rpcdata *d = _rpcdata();
	register struct rpcent *p;
d118 1
a118 1
	register struct rpcdata *d = _rpcdata();
d132 1
a132 1
	register struct rpcdata *d = _rpcdata();
d145 1
a145 1
	register struct rpcdata *d = _rpcdata();
d162 1
a162 1
	register struct rpcdata *d = _rpcdata();
d164 1
a164 1
	register char *cp, **q;
@


1.9
log
@plug many memory leaks
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.8 1997/09/22 05:11:07 millert Exp $";
d168 1
a168 2
	(void) strncpy(d->line, val, BUFSIZ);
	d->line[BUFSIZ] = '\0';
@


1.8
log
@Some -Wall.
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.7 1996/09/15 09:31:35 tholo Exp $";
d68 1
a68 1
	if (d == 0) {
d82 1
a82 1
	if (d == 0)
d120 1
a120 1
	if (d == 0)
d134 1
a134 1
	if (d == 0)
d147 1
a147 1
	if (d == 0)
d166 1
a166 1
	if (d == 0)
@


1.7
log
@Remove dead code
Remove unused variables
Silence some warnings
lint(1) is your friend
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.6 1996/09/02 05:32:50 tholo Exp $";
d85 1
a85 1
	while (p = getrpcent()) {
d101 1
a101 1
	while (rpc = getrpcent()) {
@


1.6
log
@Don't overwrite the last byte of a line unless we have to
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.5 1996/09/02 02:48:57 deraadt Exp $";
a144 2
	struct rpcent *hp;
	int reason;
@


1.5
log
@do not leak byname; this needs a complete rewrite
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.4 1996/08/27 03:33:57 deraadt Exp $";
d153 2
a154 1
        if (fgets(d->line, BUFSIZ, d->rpcf) == NULL)
d170 2
a171 2
	(void) strncpy(d->line, val, len-1);
	d->line[len-1] = '\0';
d173 1
a173 1
	d->line[len] = '\n';
@


1.4
log
@use strncpy correctly
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.3 1996/08/19 08:31:34 tholo Exp $";
d103 1
a103 1
			return (rpc);
d106 1
a106 1
				return (rpc);
d109 1
d111 1
a111 1
	return (NULL);
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.2 1996/07/20 06:12:28 deraadt Exp $";
d168 2
a169 1
	(void) strncpy(d->line, val, len);
@


1.2
log
@bcopy->memcpy & tag
@
text
@a0 3
/*	$OpenBSD: getrpcent.c,v 1.4 1995/02/25 03:01:45 cgd Exp $	*/
/*	$NetBSD: getrpcent.c,v 1.4 1995/02/25 03:01:45 cgd Exp $	*/

d32 2
a33 3
/*static char *sccsid = "from: @@(#)getrpcent.c 1.14 91/03/11 Copyr 1984 Sun Micro";*/
static char *rcsid = "$OpenBSD: getrpcent.c,v 1.4 1995/02/25 03:01:45 cgd Exp $";
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char *rcsid = "$NetBSD: getrpcent.c,v 1.4 1995/02/25 03:01:45 cgd Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
