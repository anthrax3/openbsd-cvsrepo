head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.6
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.8
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.16.0.18
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.16
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.12
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.16.0.10
	OPENBSD_5_3_BASE:1.16
	OPENBSD_5_2:1.16.0.8
	OPENBSD_5_2_BASE:1.16
	OPENBSD_5_1_BASE:1.16
	OPENBSD_5_1:1.16.0.6
	OPENBSD_5_0:1.16.0.4
	OPENBSD_5_0_BASE:1.16
	OPENBSD_4_9:1.16.0.2
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.15.0.22
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.18
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.20
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.16
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.14
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.12
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.10
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.8
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.6
	OPENBSD_4_0_BASE:1.15
	OPENBSD_3_9:1.15.0.4
	OPENBSD_3_9_BASE:1.15
	OPENBSD_3_8:1.15.0.2
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.13.0.2
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.12.0.10
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.8
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.6
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.4
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.2
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.12
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.10
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.8
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.6
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.4
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.4
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.8.0.2
	OPENBSD_2_2_BASE:1.8
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2015.09.13.15.36.56;	author guenther;	state Exp;
branches;
next	1.18;
commitid	FxNpAvmgpSFQVav0;

1.18
date	2015.09.02.06.47.19;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	ZlfeVQ0KiiWxE5wv;

1.17
date	2014.11.11.04.51.49;	author guenther;	state Exp;
branches;
next	1.16;
commitid	LYakkpp5DP76DW3H;

1.16
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.01.07.44.03;	author otto;	state Exp;
branches;
next	1.13;

1.13
date	2005.01.08.19.17.39;	author krw;	state Exp;
branches;
next	1.12;

1.12
date	2002.08.29.22.47.15;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.22.23.03.11;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2001.09.15.13.51.00;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	98.08.29.18.57.17;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.09.22.05.11.08;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.07.09.03.05.03;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.20.21.15.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.08.19.08.31.36;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.07.20.06.12.30;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.06.29.18.53.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.01.05.16.36.04;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Wrap <rpc/*.h> so that calls go direct and the symbols are all weak.
Hide __xprt_register() and _authenticate(); truncate <rpc/svc_auth.h>

ok deraadt@@
@
text
@/*	$OpenBSD: pmap_clnt.c,v 1.18 2015/09/02 06:47:19 deraadt Exp $ */

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/*
 * pmap_clnt.c
 * Client interface to pmap rpc service.
 */

#include <unistd.h>
#include <errno.h>
#include <rpc/rpc.h>
#include <rpc/pmap_prot.h>
#include <rpc/pmap_clnt.h>

static struct timeval timeout = { 5, 0 };
static struct timeval tottimeout = { 60, 0 };

/*
 * Set a mapping between program,version and port.
 * Calls the pmap service remotely to do the mapping.
 */
bool_t
pmap_set(u_long program, u_long version, u_int protocol, int iport)
{
	struct sockaddr_in myaddress;
	int sock = -1;
	CLIENT *client;
	struct pmap parms;
	bool_t rslt;
	int save_errno;
	u_short port = iport;

	if (get_myaddress(&myaddress) != 0)
		return (FALSE);
	myaddress.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
	client = clntudp_bufcreate(&myaddress, PMAPPROG, PMAPVERS,
	    timeout, &sock, RPCSMALLMSGSIZE, RPCSMALLMSGSIZE);
	if (client == NULL)
		return (FALSE);
	parms.pm_prog = program;
	parms.pm_vers = version;
	parms.pm_prot = protocol;
	parms.pm_port = port;
	if (CLNT_CALL(client, PMAPPROC_SET, xdr_pmap, &parms, xdr_bool, &rslt,
	    tottimeout) != RPC_SUCCESS) {
		save_errno = errno;
		rslt = FALSE;
	} else
		save_errno = errno;
	CLNT_DESTROY(client);
	errno = save_errno;
	return (rslt);
}
DEF_WEAK(pmap_set);

/*
 * Remove the mapping between program,version and port.
 * Calls the pmap service remotely to do the un-mapping.
 */
bool_t
pmap_unset(u_long program, u_long version)
{
	struct sockaddr_in myaddress;
	int sock = -1;
	CLIENT *client;
	struct pmap parms;
	bool_t rslt;

	if (get_myaddress(&myaddress) != 0)
		return (FALSE);
	myaddress.sin_addr.s_addr = htonl(INADDR_LOOPBACK);
	client = clntudp_bufcreate(&myaddress, PMAPPROG, PMAPVERS,
	    timeout, &sock, RPCSMALLMSGSIZE, RPCSMALLMSGSIZE);
	if (client == NULL)
		return (FALSE);
	parms.pm_prog = program;
	parms.pm_vers = version;
	parms.pm_port = parms.pm_prot = 0;
	CLNT_CALL(client, PMAPPROC_UNSET, xdr_pmap, &parms, xdr_bool, &rslt,
	    tottimeout);
	CLNT_DESTROY(client);
	return (rslt);
}
DEF_WEAK(pmap_unset);
@


1.18
log
@Delete 3 more stderr messages, right before returning a proper error.
Code from way in the past.
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_clnt.c,v 1.17 2014/11/11 04:51:49 guenther Exp $ */
d84 1
d114 1
@


1.17
log
@Merge from NetBSD from 1999-03-25:"
 * don't close the socket unless it was opened by the function
 * note (in the comments) that the client is responsible for closing
  the socket if they opened it, or they didn't use CLNT_DESTROY()

  fixes a couple of unnecessary closing of already-closed sockets.
  noted by: Matthias Drochner <M.Drochner@@fz-juelich.de>"

tested by many in snaps
ok schwarze@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_clnt.c,v 1.16 2010/09/01 14:43:34 millert Exp $ */
a76 1
		clnt_perror(client, "Cannot register service");
@


1.16
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pmap_clnt.c,v 1.15 2005/08/08 08:05:35 espie Exp $ */
d60 1
d76 1
a76 2
		int save_errno = errno;

d78 3
a80 3
		errno = save_errno;
		return (FALSE);
	}
d82 1
a82 2
	if (sock != -1)
		(void)close(sock);
a111 2
	if (sock != -1)
		(void)close(sock);
@


1.15
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 2
a2 1
/*	$OpenBSD$ */
d4 28
a31 26
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user.
 * 
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 * 
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 * 
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 * 
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 * 
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
a36 2
 *
 * Copyright (C) 1984, Sun Microsystems, Inc.
@


1.14
log
@ansify. ok deraadt@@ jaredy@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.13 2005/01/08 19:17:39 krw Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.13
log
@Bit of KNF - replace (<type> *)0 and (<type> *)NULL with NULL. Pointed
out by mickey@@, seconded by millert@@.

ok deraadt@@.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.12 2002/08/29 22:47:15 deraadt Exp $";
d55 1
a55 5
pmap_set(program, version, protocol, port)
	u_long program;
	u_long version;
	u_int protocol;
	u_short port;
d62 1
d94 1
a94 3
pmap_unset(program, version)
	u_long program;
	u_long version;
@


1.12
log
@clean; gwyllion@@ace.ulyssis.org
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.11 2002/08/22 23:03:11 deraadt Exp $";
d72 1
a72 1
	if (client == (CLIENT *)NULL)
d112 1
a112 1
	if (client == (CLIENT *)NULL)
@


1.11
log
@do not lose errno
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.10 2001/09/15 13:51:00 deraadt Exp $";
a44 1
#include <rpc/pmap_clnt.h>
@


1.10
log
@prototype cleanup
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.9 1998/08/29 18:57:17 deraadt Exp $";
d42 1
d46 1
d81 2
d84 1
@


1.9
log
@change pmap_set() protocol to u_int, similar to solaris; ref: casper
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.8 1997/09/22 05:11:08 millert Exp $";
a48 3
void clnt_perror();


d62 1
a62 1
	register CLIENT *client;
d99 1
a99 1
	register CLIENT *client;
@


1.8
log
@Some -Wall.
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.7 1997/07/09 03:05:03 deraadt Exp $";
d60 1
a60 1
	int protocol;
@


1.7
log
@avoid close(closed_socket) or close(-1); it looks disgusting in kdump
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.6 1996/08/20 21:15:40 deraadt Exp $";
d41 1
@


1.6
log
@only close real socket
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.5 1996/08/19 08:31:36 tholo Exp $";
d63 1
a63 1
	int socket = -1;
d72 1
a72 1
	    timeout, &socket, RPCSMALLMSGSIZE, RPCSMALLMSGSIZE);
d85 2
a86 2
	if (socket != -1)
		(void)close(socket);
d100 1
a100 1
	int socket = -1;
d109 1
a109 1
	    timeout, &socket, RPCSMALLMSGSIZE, RPCSMALLMSGSIZE);
d118 2
a119 2
	if (socket != -1)
		(void)close(socket);
@


1.5
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.4 1996/07/20 06:12:30 deraadt Exp $";
d85 2
a86 1
	(void)close(socket);
d118 2
a119 1
	(void)close(socket);
@


1.4
log
@bcopy->memcpy & tag
@
text
@a0 3
/*	$OpenBSD: pmap_clnt.c,v 1.3 1996/01/04 20:06:22 pk Exp $	*/
/*	$NetBSD: pmap_clnt.c,v 1.3 1996/01/04 20:06:22 pk Exp $	*/

d31 2
a32 4
/*static char *sccsid = "from: @@(#)pmap_clnt.c 1.37 87/08/11 Copyr 1984 Sun Micro";*/
/*static char *sccsid = "from: @@(#)pmap_clnt.c	2.2 88/08/01 4.0 RPCSRC";*/
static char *rcsid = "$OpenBSD: pmap_clnt.c,v 1.3 1996/01/04 20:06:22 pk Exp $";
#endif
@


1.3
log
@pmap_set/unset to loopback; should rewrite to search for loopback addr
@
text
@d1 1
d36 1
a36 1
static char *rcsid = "$NetBSD: pmap_clnt.c,v 1.3 1996/01/04 20:06:22 pk Exp $";
@


1.2
log
@from netbsd; make get_myaddress() return failure if it is unable to
determine address, make other code understand this failure.
@
text
@d74 1
d110 1
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: pmap_clnt.c,v 1.2 1995/02/25 03:01:47 cgd Exp $	*/
d35 1
a35 1
static char *rcsid = "$NetBSD: pmap_clnt.c,v 1.2 1995/02/25 03:01:47 cgd Exp $";
d72 2
a73 1
	get_myaddress(&myaddress);
d107 2
a108 1
	get_myaddress(&myaddress);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
