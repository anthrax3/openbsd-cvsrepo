head	1.18;
access;
symbols
	OPENBSD_6_1:1.18.0.8
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.15.0.18
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.16
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.15.0.12
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.10
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.8
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.6
	OPENBSD_5_0:1.15.0.4
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.2
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.14.0.6
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.2
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.4
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.13.0.14
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.12
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.10
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.8
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.6
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.4
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.2
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.10.0.16
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.14
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.12
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.10
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.8
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.6
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.2
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.8.0.12
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.10
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.18
date	2015.08.20.21.49.29;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	jeIpGH0zlTW3huPH;

1.17
date	2015.01.16.16.48.51;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	0DYulI8hhujBHMcR;

1.16
date	2014.11.11.04.51.49;	author guenther;	state Exp;
branches;
next	1.15;
commitid	LYakkpp5DP76DW3H;

1.15
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2009.06.06.06.59.07;	author schwarze;	state Exp;
branches;
next	1.13;

1.13
date	2006.01.17.15.43.34;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.11;

1.11
date	2005.04.01.07.44.03;	author otto;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.27.00.58.56;	author lebel;	state Exp;
branches;
next	1.9;

1.9
date	2001.03.03.06.50.28;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.03.19.00.27.20;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.04.06.09.13.02;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.12.10.07.46.33;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.12.10.07.43.34;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.09.15.09.31.33;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.31.28;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.07.20.06.12.23;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.18
log
@All these files include <stdlib.h>, so do not need to cast
malloc/calloc/realloc* returns.
@
text
@/*	$OpenBSD: clnt_simple.c,v 1.17 2015/01/16 16:48:51 deraadt Exp $ */

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* 
 * clnt_simple.c
 * Simplified front end to rpc.
 */

#include <sys/socket.h>
#include <netdb.h>
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>
#include <limits.h>
#include <rpc/rpc.h>

static struct callrpc_private {
	CLIENT	*client;
	int	socket;
	int	oldprognum, oldversnum, valid;
	char	*oldhost;
} *callrpc_private;

int
callrpc(char *host, int prognum, int versnum, int procnum, xdrproc_t inproc,
    char *in, xdrproc_t outproc, char *out)
{
	struct callrpc_private *save_callrpc_private = callrpc_private;
	struct callrpc_private *crp = callrpc_private;
	struct sockaddr_in server_addr;
	enum clnt_stat clnt_stat;
	struct hostent *hp;
	struct timeval timeout, tottimeout;

	if (crp == NULL) {
		crp = calloc(1, sizeof (*crp));
		if (crp == NULL)
			return RPC_SYSTEMERROR;
		callrpc_private = crp;
	}
	if (crp->oldhost == NULL) {
		crp->oldhost = malloc(HOST_NAME_MAX+1);
		if (crp->oldhost == NULL) {
			free(crp);
			callrpc_private = save_callrpc_private;
			return RPC_SYSTEMERROR;
		}
		crp->oldhost[0] = 0;
		crp->socket = RPC_ANYSOCK;
	}
	if (crp->valid && crp->oldprognum == prognum && crp->oldversnum == versnum
		&& strcmp(crp->oldhost, host) == 0) {
		/* reuse old client */		
	} else {
		crp->valid = 0;
		if (crp->socket != -1) {
			(void)close(crp->socket);
			crp->socket = -1;
		}
		if (crp->client) {
			CLNT_DESTROY(crp->client);
			crp->client = NULL;
		}
		crp->socket = RPC_ANYSOCK;
		if ((hp = gethostbyname(host)) == NULL)
			return ((int) RPC_UNKNOWNHOST);
		timeout.tv_usec = 0;
		timeout.tv_sec = 5;
		memset(&server_addr, 0, sizeof(server_addr));
		memcpy((char *)&server_addr.sin_addr, hp->h_addr, hp->h_length);
		server_addr.sin_len = sizeof(struct sockaddr_in);
		server_addr.sin_family = AF_INET;
		server_addr.sin_port =  0;
		if ((crp->client = clntudp_create(&server_addr, (u_long)prognum,
		    (u_long)versnum, timeout, &crp->socket)) == NULL)
			return ((int) rpc_createerr.cf_stat);
		crp->valid = 1;
		crp->oldprognum = prognum;
		crp->oldversnum = versnum;
		strlcpy(crp->oldhost, host, HOST_NAME_MAX+1);
	}
	tottimeout.tv_sec = 25;
	tottimeout.tv_usec = 0;
	clnt_stat = clnt_call(crp->client, procnum, inproc, in,
	    outproc, out, tottimeout);
	/* 
	 * if call failed, empty cache
	 */
	if (clnt_stat != RPC_SUCCESS)
		crp->valid = 0;
	return ((int) clnt_stat);
}
@


1.17
log
@Move to the <limits.h> universe.
review by millert, binary checking process with doug, concept with guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: clnt_simple.c,v 1.16 2014/11/11 04:51:49 guenther Exp $ */
d67 1
a67 1
		crp = (struct callrpc_private *)calloc(1, sizeof (*crp));
@


1.16
log
@Merge from NetBSD from 1999-03-25:"
 * don't close the socket unless it was opened by the function
 * note (in the comments) that the client is responsible for closing
  the socket if they opened it, or they didn't use CLNT_DESTROY()

  fixes a couple of unnecessary closing of already-closed sockets.
  noted by: Matthias Drochner <M.Drochner@@fz-juelich.de>"

tested by many in snaps
ok schwarze@@
@
text
@d1 1
a1 1
/*	$OpenBSD: clnt_simple.c,v 1.15 2010/09/01 14:43:34 millert Exp $ */
a38 1
#include <sys/param.h>
d45 1
d73 1
a73 1
		crp->oldhost = malloc(MAXHOSTNAMELEN);
d111 1
a111 1
		strlcpy(crp->oldhost, host, MAXHOSTNAMELEN);
@


1.15
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: clnt_simple.c,v 1.14 2009/06/06 06:59:07 schwarze Exp $ */
d87 1
a87 1
		if (crp->socket != -1)
d89 2
a90 1
		crp->socket = RPC_ANYSOCK;
d92 1
a92 1
			clnt_destroy(crp->client);
d95 1
@


1.14
log
@correct error codes after malloc(3) failure, as 0 means RPC_SUCCESS;
noticed by and OK deraadt@@, ok millert@@
@
text
@d1 2
a2 1
/*	$OpenBSD: clnt_simple.c,v 1.13 2006/01/17 15:43:34 millert Exp $ */
d4 28
a31 26
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user.
 * 
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 * 
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 * 
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 * 
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 * 
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
a36 2
 *
 * Copyright (C) 1984, Sun Microsystems, Inc.
@


1.13
log
@Include param.h for MAXHOSTNAMELEN
@
text
@d1 1
a1 1
/*	$OpenBSD: clnt_simple.c,v 1.12 2005/08/08 08:05:35 espie Exp $ */
d68 1
a68 1
			return (0);
d76 1
a76 1
			return (0);
@


1.12
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d38 3
d44 1
a45 3
#include <sys/socket.h>
#include <netdb.h>
#include <unistd.h>
@


1.11
log
@ansify. ok deraadt@@ jaredy@@
@
text
@d1 1
a1 1

a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.10 2001/06/27 00:58:56 lebel Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.10
log
@use strlcpy vs strncpy+a[len-1]='\0'.  millert@@ ok.
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.9 2001/03/03 06:50:28 deraadt Exp $";
d58 2
a59 5
callrpc(host, prognum, versnum, procnum, inproc, in, outproc, out)
	char *host;
	int prognum, versnum, procnum;
	xdrproc_t inproc, outproc;
	char *in, *out;
@


1.9
log
@plug many memory leaks
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.8 1998/03/19 00:27:20 millert Exp $";
d114 1
a114 2
		(void) strncpy(crp->oldhost, host, MAXHOSTNAMELEN-1);
		crp->oldhost[MAXHOSTNAMELEN-1] = '\0';
@


1.8
log
@Some -Wall
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.7 1997/04/06 09:13:02 deraadt Exp $";
d64 2
a65 1
	register struct callrpc_private *crp = callrpc_private;
d71 1
a71 1
	if (crp == 0) {
d73 1
a73 1
		if (crp == 0)
d79 5
@


1.7
log
@strncpy
@
text
@d32 1
a32 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.6 1996/12/10 07:46:33 deraadt Exp $";
d48 1
d57 1
@


1.6
log
@avoid close(-1) cases
@
text
@d1 1
d32 1
a32 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.5 1996/12/10 07:43:34 deraadt Exp $";
d106 2
a107 1
		(void) strcpy(crp->oldhost, host);
@


1.5
log
@use MAXHOSTNAMELEN
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.4 1996/09/15 09:31:33 tholo Exp $";
d83 2
a84 1
		(void)close(crp->socket);
@


1.4
log
@Remove dead code
Remove unused variables
Silence some warnings
lint(1) is your friend
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.3 1996/08/19 08:31:28 tholo Exp $";
d74 1
a74 1
		crp->oldhost = malloc(256);
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.2 1996/07/20 06:12:23 deraadt Exp $";
d57 1
@


1.2
log
@bcopy->memcpy & tag
@
text
@a0 3
/*	$OpenBSD: clnt_simple.c,v 1.5 1995/06/03 22:37:23 mycroft Exp $	*/
/*	$NetBSD: clnt_simple.c,v 1.5 1995/06/03 22:37:23 mycroft Exp $	*/

d31 2
a32 4
/*static char *sccsid = "from: @@(#)clnt_simple.c 1.35 87/08/11 Copyr 1984 Sun Micro";*/
/*static char *sccsid = "from: @@(#)clnt_simple.c	2.2 88/08/01 4.0 RPCSRC";*/
static char *rcsid = "$OpenBSD: clnt_simple.c,v 1.5 1995/06/03 22:37:23 mycroft Exp $";
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char *rcsid = "$NetBSD: clnt_simple.c,v 1.5 1995/06/03 22:37:23 mycroft Exp $";
d98 1
a98 1
		bcopy(hp->h_addr, (char *)&server_addr.sin_addr, hp->h_length);
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

