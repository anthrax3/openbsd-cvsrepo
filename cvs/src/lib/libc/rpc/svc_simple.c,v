head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.8
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.4
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.2
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.11.0.22
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.14
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.18
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.16
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.12
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.10
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.8
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.6
	OPENBSD_5_0:1.11.0.4
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.2
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.10.0.22
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.18
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.7.0.18
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.16
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.14
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.12
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.10
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.8
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.4
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.5.0.2
	OPENBSD_2_3_BASE:1.5
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2015.09.01.19.54.01;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	1kc6QzxBpplZkdjp;

1.12
date	2015.08.20.21.49.29;	author deraadt;	state Exp;
branches;
next	1.11;
commitid	jeIpGH0zlTW3huPH;

1.11
date	2010.09.01.14.43.34;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2005.08.08.08.05.35;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2005.04.25.08.18.41;	author otto;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.01.07.44.04;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	2001.03.03.06.50.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	98.11.22.07.38.25;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.03.19.00.27.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.09.15.09.31.41;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.31.56;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.07.20.06.12.44;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.10;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.10;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove all bogus writes to stderr.  Only explicit requests should
go that way.
ok miod beck
@
text
@/*	$OpenBSD: svc_simple.c,v 1.12 2015/08/20 21:49:29 deraadt Exp $ */

/*
 * Copyright (c) 2010, Oracle America, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *     * Redistributions of source code must retain the above copyright
 *       notice, this list of conditions and the following disclaimer.
 *     * Redistributions in binary form must reproduce the above
 *       copyright notice, this list of conditions and the following
 *       disclaimer in the documentation and/or other materials
 *       provided with the distribution.
 *     * Neither the name of the "Oracle America, Inc." nor the names of its
 *       contributors may be used to endorse or promote products derived
 *       from this software without specific prior written permission.
 *
 *   THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 *   "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 *   LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS
 *   FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE
 *   COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 *   INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 *   DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE
 *   GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 *   INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
 *   WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING
 *   NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 *   OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

/* 
 * svc_simple.c
 * Simplified front end to rpc.
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <rpc/rpc.h>
#include <rpc/pmap_clnt.h>
#include <sys/socket.h>
#include <netdb.h>

static struct proglst {
	char *(*p_progname)();
	int  p_prognum;
	int  p_procnum;
	xdrproc_t p_inproc, p_outproc;
	struct proglst *p_nxt;
} *proglst;
static void universal(struct svc_req *, SVCXPRT *);
static SVCXPRT *transp;

int
registerrpc(int prognum, int versnum, int procnum, char *(*progname)(),
    xdrproc_t inproc, xdrproc_t outproc)
{
	struct proglst *pl;
	
	if (procnum == NULLPROC)
		return (-1);
	if (transp == NULL) {
		transp = svcudp_create(RPC_ANYSOCK);
		if (transp == NULL)
			return (-1);
	}
	(void) pmap_unset((u_long)prognum, (u_long)versnum);
	if (!svc_register(transp, (u_long)prognum, (u_long)versnum, 
	    universal, IPPROTO_UDP))
		return (-1);
	pl = malloc(sizeof(struct proglst));
	if (pl == NULL)
		return (-1);
	pl->p_progname = progname;
	pl->p_prognum = prognum;
	pl->p_procnum = procnum;
	pl->p_inproc = inproc;
	pl->p_outproc = outproc;
	pl->p_nxt = proglst;
	proglst = pl;
	return (0);
}

static void
universal(struct svc_req *rqstp, SVCXPRT *transp)
{
	int prog, proc;
	char *outdata;
	char xdrbuf[UDPMSGSIZE];
	struct proglst *pl;

	/* 
	 * enforce "procnum 0 is echo" convention
	 */
	if (rqstp->rq_proc == NULLPROC) {
		if (svc_sendreply(transp, xdr_void, NULL) == FALSE)
			exit(1);
		return;
	}
	prog = rqstp->rq_prog;
	proc = rqstp->rq_proc;
	for (pl = proglst; pl != NULL; pl = pl->p_nxt)
		if (pl->p_prognum == prog && pl->p_procnum == proc) {
			/* decode arguments into a CLEAN buffer */
			memset(xdrbuf, 0, sizeof(xdrbuf)); /* required ! */
			if (!svc_getargs(transp, pl->p_inproc, xdrbuf)) {
				svcerr_decode(transp);
				return;
			}
			outdata = (*(pl->p_progname))(xdrbuf);
			if (outdata == NULL &&
			    pl->p_outproc != xdr_void)
				/* there was an error */
				return;
			if (!svc_sendreply(transp, pl->p_outproc, outdata))
				exit(1);
			/* free the decoded arguments */
			(void)svc_freeargs(transp, pl->p_inproc, xdrbuf);
			return;
		}
	exit(1);
}

@


1.12
log
@All these files include <stdlib.h>, so do not need to cast
malloc/calloc/realloc* returns.
@
text
@d1 1
a1 1
/*	$OpenBSD: svc_simple.c,v 1.11 2010/09/01 14:43:34 millert Exp $ */
d63 1
a63 3
	if (procnum == NULLPROC) {
		(void) fprintf(stderr,
		    "can't reassign procedure number %u\n", NULLPROC);
a64 1
	}
d67 1
a67 2
		if (transp == NULL) {
			(void) fprintf(stderr, "couldn't create an rpc server\n");
a68 1
		}
d72 1
a72 3
	    universal, IPPROTO_UDP)) {
	    	(void) fprintf(stderr, "couldn't register prog %d vers %d\n",
		    prognum, versnum);
a73 1
	}
d75 1
a75 2
	if (pl == NULL) {
		(void) fprintf(stderr, "registerrpc: out of memory\n");
a76 1
	}
d99 1
a99 2
		if (svc_sendreply(transp, xdr_void, NULL) == FALSE) {
			(void) fprintf(stderr, "xxx\n");
a100 1
		}
d118 1
a118 4
			if (!svc_sendreply(transp, pl->p_outproc, outdata)) {
				(void) fprintf(stderr,
				    "trouble replying to prog %d\n",
				    pl->p_prognum);
a119 1
			}
a123 1
	(void) fprintf(stderr, "never registered prog %d\n", prog);
@


1.11
log
@Oracle has re-licensed sunrpc under a three-clause BSD license.
Update our sources appropriately.  OK deraadt@@ jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: svc_simple.c,v 1.10 2005/08/08 08:05:35 espie Exp $ */
d82 1
a82 1
	pl = (struct proglst *)malloc(sizeof(struct proglst));
@


1.10
log
@zap remaining rcsid.

Kill old files that are no longer compiled.

okay theo
@
text
@d1 2
a2 1
/*	$OpenBSD$ */
d4 28
a31 26
 * Sun RPC is a product of Sun Microsystems, Inc. and is provided for
 * unrestricted use provided that this legend is included on all tape
 * media and as a part of the software program in whole or part.  Users
 * may copy or modify Sun RPC without charge, but are not authorized
 * to license or distribute it to anyone else except as part of a product or
 * program developed by the user.
 * 
 * SUN RPC IS PROVIDED AS IS WITH NO WARRANTIES OF ANY KIND INCLUDING THE
 * WARRANTIES OF DESIGN, MERCHANTIBILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE, OR ARISING FROM A COURSE OF DEALING, USAGE OR TRADE PRACTICE.
 * 
 * Sun RPC is provided with no support and without any obligation on the
 * part of Sun Microsystems, Inc. to assist in its use, correction,
 * modification or enhancement.
 * 
 * SUN MICROSYSTEMS, INC. SHALL HAVE NO LIABILITY WITH RESPECT TO THE
 * INFRINGEMENT OF COPYRIGHTS, TRADE SECRETS OR ANY PATENTS BY SUN RPC
 * OR ANY PART THEREOF.
 * 
 * In no event will Sun Microsystems, Inc. be liable for any lost revenue
 * or profits or other special, indirect and consequential damages, even if
 * Sun has been advised of the possibility of such damages.
 * 
 * Sun Microsystems, Inc.
 * 2550 Garcia Avenue
 * Mountain View, California  94043
a36 2
 *
 * Copyright (C) 1984, Sun Microsystems, Inc.
@


1.9
log
@Do not define 'pl' globally. From Bjorn Sandell" <biorn at dce dot chalmers
dot se>. ok deraadt@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.8 2005/04/01 07:44:04 otto Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.8
log
@ansify. ok deraadt@@ jaredy@@
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.7 2001/03/03 06:50:28 deraadt Exp $";
d56 1
a56 1
static void universal(struct svc_req *rqstp, SVCXPRT *transp);
a57 1
struct proglst *pl;
d63 1
@


1.7
log
@plug many memory leaks
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.6 1998/11/22 07:38:25 deraadt Exp $";
d56 1
a56 1
static void universal();
d61 2
a62 4
registerrpc(prognum, versnum, procnum, progname, inproc, outproc)
	int prognum, versnum, procnum;
	char *(*progname)();
	xdrproc_t inproc, outproc;
d100 1
a100 3
universal(rqstp, transp)
	struct svc_req *rqstp;
	SVCXPRT *transp;
@


1.6
log
@use %u for unsigned prints
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.5 1998/03/19 00:27:25 millert Exp $";
d72 1
a72 1
	if (transp == 0) {
@


1.5
log
@Some -Wall
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.4 1996/09/15 09:31:41 tholo Exp $";
d69 1
a69 1
		    "can't reassign procedure number %d\n", NULLPROC);
@


1.4
log
@Remove dead code
Remove unused variables
Silence some warnings
lint(1) is your friend
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.3 1996/08/19 08:31:56 tholo Exp $";
d45 1
d60 1
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d31 1
a31 1
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.2 1996/07/20 06:12:44 deraadt Exp $";
d60 1
@


1.2
log
@bcopy->memcpy & tag
@
text
@a0 3
/*	$OpenBSD: svc_simple.c,v 1.4 1995/04/14 19:48:28 jtc Exp $	*/
/*	$NetBSD: svc_simple.c,v 1.4 1995/04/14 19:48:28 jtc Exp $	*/

d31 2
a32 4
/*static char *sccsid = "from: @@(#)svc_simple.c 1.18 87/08/11 Copyr 1984 Sun Micro";*/
/*static char *sccsid = "from: @@(#)svc_simple.c	2.2 88/08/01 4.0 RPCSRC";*/
static char *rcsid = "$OpenBSD: svc_simple.c,v 1.4 1995/04/14 19:48:28 jtc Exp $";
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
d36 1
a36 1
static char *rcsid = "$NetBSD: svc_simple.c,v 1.4 1995/04/14 19:48:28 jtc Exp $";
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

