head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.4
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.6
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4;
locks; strict;
comment	@.\" @;


1.5
date	2015.09.14.15.14.55;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	TPchOLbdlEugnrt2;

1.4
date	2015.02.21.02.43.07;	author tedu;	state Exp;
branches;
next	1.3;
commitid	BWwhnqX9lq0GgcfL;

1.3
date	2014.12.08.20.52.25;	author tedu;	state Exp;
branches;
next	1.2;
commitid	gNXjSPPa0Sb2AFwQ;

1.2
date	2014.12.08.20.49.23;	author tedu;	state Exp;
branches;
next	1.1;
commitid	u4lhUUA2LPrKGqBL;

1.1
date	2014.12.08.20.37.11;	author tedu;	state Exp;
branches;
next	;
commitid	bF1aN0ooA0JhT5Mq;


desc
@@


1.5
log
@Remove useless quoting from .Fo and .Fn function names, to prevent
development of a cargo cult in case people look at existing files
for examples.  This achieves a consistent .Fo and .Fn quoting style
across the whole tree.
@
text
@.\"	$OpenBSD: SipHash24.3,v 1.4 2015/02/21 02:43:07 tedu Exp $
.\"
.\" Copyright (c) 2014 David Gwynne <dlg@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: February 21 2015 $
.Dt SIPHASH24 3
.Os
.Sh NAME
.Nm SipHash24_Init ,
.Nm SipHash24_Update ,
.Nm SipHash24_End ,
.Nm SipHash24_Final ,
.Nm SipHash24
.Nd calculate SipHash24 hashes
.Sh SYNOPSIS
.In siphash.h
.Ft void
.Fn SipHash24_Init "SIPHASH_CTX *ctx" "const SIPHASH_KEY *key"
.Ft void
.Fn SipHash24_Update "SIPHASH_CTX *ctx" "const void *data" "size_t len"
.Ft uint64_t
.Fn SipHash24_End "SIPHASH_CTX *ctx"
.Ft void
.Fn SipHash24_Final "void *digest" "SIPHASH_CTX *ctx"
.Ft uint64_t
.Fn SipHash24 "const SIPHASH_KEY *key" "const void *data" "size_t len"
.Sh DESCRIPTION
The SipHash algorithm is a keyed hash algorithm optimised for short
inputs which produces a 64-bit digest of data.
The SipHash24 functions implement the algorithm with 2 compression
rounds and 4 finalisation rounds.
.Pp
.Fn SipHash24_Init
initialises a
.Vt SIPHASH_CTX
context
.Fa ctx
with the secret
.Fa key .
.Pp
.Fn SipHash24_Update
adds
.Fa data
of length
.Fa len
to the context
.Fa ctx .
.Pp
.Fn SipHash24_End
is called after all data has been added to
.Fa ctx
via
.Fn SipHash24_Update
and returns a message digest in the host's native endian.
.Pp
.Fn SipHash24_Final
is called after all data has been added to
.Fa ctx
via
.Fn SipHash24_Update
and stores the message digest at the address specified by the
.Fa digest
parameter.
The buffer at
.Fa digest
must be
.Dv SIPHASH_DIGEST_LENGTH
bytes long.
.Pp
.Fn SipHash24
calculates the digest of
.Fa data
of length
.Fa len
with the secret
.Fa key .
.Pp
It is recommended that the
.Vt SIPHASH_KEY
key be generated with
.Xr arc4random_buf 3 .
.Sh RETURN VALUES
.Fn SipHash24_End
and
.Fn SipHash24
return the 64-bit message digest in the host's native endian representation.
.Sh SEE ALSO
.Xr arc4random_buf 3
.Sh HISTORY
These functions appeared in
.Ox 5.7 .
@


1.4
log
@update siphash manpages to reflect change in return type spelling.
ok dlg
@
text
@d1 1
a1 1
.\"	$OpenBSD: SipHash24.3,v 1.3 2014/12/08 20:52:25 tedu Exp $
d17 1
a17 1
.Dd $Mdocdate: December 8 2014 $
d30 1
a30 1
.Fn "SipHash24_Init" "SIPHASH_CTX *ctx" "const SIPHASH_KEY *key"
d32 1
a32 1
.Fn "SipHash24_Update" "SIPHASH_CTX *ctx" "const void *data" "size_t len"
d34 1
a34 1
.Fn "SipHash24_End" "SIPHASH_CTX *ctx"
d36 1
a36 1
.Fn "SipHash24_Final" "void *digest" "SIPHASH_CTX *ctx"
d38 1
a38 1
.Fn "SipHash24" "const SIPHASH_KEY *key" "const void *data" "size_t len"
@


1.3
log
@more libc, less kernel documentation
@
text
@d1 1
a1 1
.\"	$OpenBSD: SipHash24.3,v 1.2 2014/12/08 20:49:23 tedu Exp $
d33 1
a33 1
.Ft u_int64_t
d37 1
a37 1
.Ft u_int64_t
@


1.2
log
@tweak recommendation to use arc4random_buf
@
text
@d1 1
a1 1
.\"	$OpenBSD: SipHash24.3,v 1.1 2014/12/08 20:37:11 tedu Exp $
a93 8
.Sh CONTEXT
.Fn SipHash24_Init ,
.Fn SipHash24_Update ,
.Fn SipHash24_End ,
.Fn SipHash24_Final
and
.Fn SipHash24
can be called during autoconf, from process context, or from interrupt context.
d101 3
@


1.1
log
@add siphash from the kernel to libc
@
text
@d1 1
a1 1
.\"	$OpenBSD: SipHash24.9,v 1.3 2014/11/05 07:01:49 jmc Exp $
d17 2
a18 2
.Dd $Mdocdate: November 5 2014 $
.Dt SIPHASH24 9
d90 1
a90 2
If SipHash is being used to mitigate against hash-table flooding
attacks, it is recommended that the
d93 1
a93 1
.Xr arc4random_buf 9 .
d108 1
a108 1
.Xr arc4random_buf 9
@

