head	1.6;
access;
symbols
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2004.04.26.19.38.12;	author millert;	state dead;
branches;
next	1.5;

1.5
date	2003.05.09.16.46.31;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.08.23.32.21;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.12.23.04.33.31;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	99.08.17.09.13.12;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.07.12.20.06.03;	author millert;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Use a common source file for all the hash helper functions that
previously lived in foohl.c.  The foohl.c files are now generated
via sed, though perhaps cpp could be used in the future.

Use u_int8_t instead of unsigned char for the buffers struct fooContext.
Add constants for buffer lengths and use them in function prototypes
and the man pages.

This is basically cosmetic surgery; there should be no functional changes.

OK deraadt@@
@
text
@/* sha1hl.c
 * ----------------------------------------------------------------------------
 * "THE BEER-WARE LICENSE" (Revision 42):
 * <phk@@login.dkuug.dk> wrote this file.  As long as you retain this notice you
 * can do whatever you want with this stuff. If we meet some day, and you think
 * this stuff is worth it, you can buy me a beer in return.   Poul-Henning Kamp
 * ----------------------------------------------------------------------------
 */

#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$OpenBSD: sha1hl.c,v 1.5 2003/05/09 16:46:31 millert Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/types.h>

#include <errno.h>
#include <fcntl.h>
#include <sha1.h>
#include <stdlib.h>
#include <stdio.h>
#include <string.h>
#include <unistd.h>

/* ARGSUSED */
char *
SHA1End(SHA1_CTX *ctx, char *buf)
{
    int i;
    u_char digest[20];
    static const char hex[]="0123456789abcdef";

    if (buf == NULL && (buf = malloc(41)) == NULL)
	return(NULL);

    SHA1Final(digest,ctx);
    for (i = 0; i < 20; i++) {
	buf[i + i] = hex[digest[i] >> 4];
	buf[i + i + 1] = hex[digest[i] & 0x0f];
    }
    buf[i + i] = '\0';
    memset(digest, 0, sizeof(digest));
    return(buf);
}

char *
SHA1File (char *filename, char *buf)
{
    u_char buffer[BUFSIZ];
    SHA1_CTX ctx;
    int fd, num, oerrno;

    SHA1Init(&ctx);

    if ((fd = open(filename, O_RDONLY)) < 0)
	return(0);

    while ((num = read(fd, buffer, sizeof(buffer))) > 0)
	SHA1Update(&ctx, buffer, num);

    oerrno = errno;
    close(fd);
    errno = oerrno;
    return(num < 0 ? 0 : SHA1End(&ctx, buf));
}

char *
SHA1Data (const u_char *data, size_t len, char *buf)
{
    SHA1_CTX ctx;

    SHA1Init(&ctx);
    SHA1Update(&ctx, data, len);
    return(SHA1End(&ctx, buf));
}
@


1.5
log
@Include string.h for memset() proto; noticed by lebel@@
@
text
@d11 1
a11 1
static const char rcsid[] = "$OpenBSD: sha1hl.c,v 1.4 2003/05/08 23:32:21 millert Exp $";
@


1.4
log
@Clear the digest local var w/ memset() in the End function.
@
text
@d11 1
a11 1
static const char rcsid[] = "$OpenBSD: sha1hl.c,v 1.3 2002/12/23 04:33:31 millert Exp $";
d21 1
@


1.3
log
@o Ansi function headers
o Add __BEGIN_DECLS/__END_DECLS to include files
o Safe macros
o Remove useless variable assignment in the End function of *hl.c
o Some minor KNF, needs more
From Dan Weeks
@
text
@d11 1
a11 1
static char rcsid[] = "$OpenBSD: sha1hl.c,v 1.2 1999/08/17 09:13:12 millert Exp $";
d14 5
a20 4
#include <errno.h>
#include <fcntl.h>
#include <sys/types.h>
#include <sys/uio.h>
a21 1
#include <sha1.h>
d40 1
@


1.2
log
@More <sys/file.h> vs. <fcntl.h> and open() flags fixes.
@
text
@d11 1
a11 1
static char rcsid[] = "$OpenBSD: sha1hl.c,v 1.1 1997/07/12 20:06:03 millert Exp $";
d25 1
a25 3
SHA1End(ctx, buf)
    SHA1_CTX *ctx;
    char *buf;
a27 1
    char *p = buf;
d31 2
a32 2
    if (p == NULL && (p = malloc(41)) == NULL)
	return 0;
d36 2
a37 2
	p[i + i] = hex[digest[i] >> 4];
	p[i + i + 1] = hex[digest[i] & 0x0f];
d39 2
a40 2
    p[i + i] = '\0';
    return(p);
d44 1
a44 3
SHA1File (filename, buf)
    char *filename;
    char *buf;
d65 1
a65 4
SHA1Data (data, len, buf)
    const u_char *data;
    size_t len;
    char *buf;
@


1.1
log
@Add SHA1End, SHA1File, SHA1Data helper functions like in md5(3).
@
text
@d11 1
a11 1
static char rcsid[] = "$OpenBSD$";
d17 1
a17 1
#include <sys/file.h>
d57 1
a57 1
    if ((fd = open(filename,O_RDONLY)) < 0)
@

