head	1.4;
access;
symbols
	OPENBSD_3_1:1.3.0.4
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.2
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.1.0.10
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.8
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.6
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.4
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2002.07.08.21.31.22;	author mickey;	state dead;
branches;
next	1.3;

1.3
date	2001.06.04.23.14.02;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2001.03.29.01.43.52;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.08.28.20.59.42;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.4
log
@we can live very well w/ MI ffs()
@
text
@/*	$OpenBSD: ffs.S,v 1.3 2001/06/04 23:14:02 mickey Exp $	*/

/* 
 * Copyright (c) 1990, 1991, 1992, 1994, The University of Utah and
 * the Computer Systems Laboratory at the University of Utah (CSL).
 * All rights reserved.
 *
 * Permission to use, copy, modify and distribute this software and its
 * documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 *
 * THE UNIVERSITY OF UTAH AND CSL ALLOW FREE USE OF THIS SOFTWARE IN ITS "AS
 * IS" CONDITION.  THE UNIVERSITY OF UTAH AND CSL DISCLAIM ANY LIABILITY OF
 * ANY KIND FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 *
 * CSL requests users of this software to return to csl-dist@@cs.utah.edu any
 * improvements that they make and grant CSL redistribution rights.
 *
 */

#include <machine/asm.h>

#ifdef SYSLIBC_SCCS
	.text
	.asciz "$OpenBSD: ffs.S,v 1.3 2001/06/04 23:14:02 mickey Exp $"
	.align	4
#endif

/*
 * ffs(bitmask)
 *
 * Return the position of the "most significant" bit in `bitmask'.
 * Since this is similar to the VAX ffs instruction, bits in a word
 * are numbered as "32, 31, ... 1", 0 is returned if no bits are set.
 */

LEAF_ENTRY(ffs)
	comb,=	arg0,r0,ffsdone		; If arg0 is 0
	or	r0,r0,ret0		;   return 0
	ldi	32,ret0			; Set return to high bit
	extru,=	arg0,31,16,r0		; If low 16 bits are non-zero
	addi,tr	-16,ret0,ret0		;   subtract 16 from bitpos
	shd	r0,arg0,16,arg0		; else shift right 16 bits
	extru,=	arg0,31,8,r0		; If low 8 bits are non-zero
	addi,tr	-8,ret0,ret0		;   subtract 8 from bitpos
	shd	r0,arg0,8,arg0		; else shift right 8 bits
	extru,=	arg0,31,4,r0		; If low 4 bits are non-zero
	addi,tr	-4,ret0,ret0		;   subtract 4 from bitpos
	shd	r0,arg0,4,arg0		; else shift right 4 bits
	extru,=	arg0,31,2,r0		; If low 2 bits are non-zero
	addi,tr	-2,ret0,ret0		;   subtract 2 from bitpos
	shd	r0,arg0,2,arg0		; else shift right 2 bits
	extru,=	arg0,31,1,r0		; If low bit is non-zero
	addi	-1,ret0,ret0		;   subtract 1 from bitpos
ffsdone:
EXIT(ffs)

	.end
@


1.3
log
@entrieness cleanup
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs.S,v 1.2 2001/03/29 01:43:52 mickey Exp $	*/
d27 1
a27 1
	.asciz "$OpenBSD: ffs.S,v 1.2 2001/03/29 01:43:52 mickey Exp $"
@


1.2
log
@fix fork, brk/sbrk; rcsid embedding
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs.S,v 1.1 1998/08/28 20:59:42 mickey Exp $	*/
d27 1
a27 1
	.asciz "$OpenBSD$"
d39 1
a39 1
ENTRY(ffs)
d59 2
@


1.1
log
@some libc parts; memmove.S to written
@
text
@d1 1
a1 1
/*	$OpenBSD: ffs.S,v 1.1.1.1 1998/06/23 18:56:53 mickey Exp $	*/
d24 6
@

