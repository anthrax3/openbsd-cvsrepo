head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.12
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.10
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.6
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.8
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.4
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.30
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.28
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.24
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.26
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.22
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.20
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.18
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.16
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.14
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.12
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.10
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.8
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.6
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.4
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2014.04.18.15.09.52;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.22.14.44.08;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2004.01.05.06.06.16;	author otto;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.21.18.41.05;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.22.20.05.01;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.11.02.59.01;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@It's been a quarter century: we can assume volatile is present with that name.
@
text
@/*	$OpenBSD: fpsetsticky.c,v 1.5 2011/04/22 14:44:08 martynas Exp $	*/

/*
 * Written by Miodrag Vallat.  Public domain
 */

#include <sys/types.h>
#include <ieeefp.h>

fp_except
fpsetsticky(mask)
	fp_except mask;
{
	u_int64_t fpsr;
	fp_except old;

	__asm__ volatile("fstd %%fr0,0(%1)" : "=m" (fpsr) : "r" (&fpsr));
	old = (fpsr >> 59) & 0x1f;
	fpsr = (fpsr & 0x07ffffff00000000LL) | ((u_int64_t)(mask & 0x1f) << 59);
	__asm__ volatile("fldd 0(%0),%%fr0" : : "r" (&fpsr));
	return (old);
}
@


1.5
log
@Sticky flags are in the left half of fpsr;  not the undefined bits
in the right half.  OK miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: fpsetsticky.c,v 1.4 2004/01/05 06:06:16 otto Exp $	*/
d17 1
a17 1
	__asm__ __volatile__("fstd %%fr0,0(%1)" : "=m" (fpsr) : "r" (&fpsr));
d20 1
a20 1
	__asm__ __volatile__("fldd 0(%0),%%fr0" : : "r" (&fpsr));
@


1.4
log
@Use correct type for old values. No binary change.
ok mickey@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: fpsetsticky.c,v 1.3 2002/10/21 18:41:05 mickey Exp $	*/
d18 1
a18 1
	old = (fpsr >> 27) & 0x1f;
@


1.3
log
@make an ieeefp regress pass; miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: fpsetsticky.c,v 1.2 2002/05/22 20:05:01 miod Exp $	*/
d15 1
a15 1
	fp_rnd old;
@


1.2
log
@I was on drugs when I commited this initially, and still do not understand
how I got libc to compile with this. Blush.

Replace this with a correct implementation, and write a faster fabs()
while there.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: fpsetsticky.c,v 1.1 2002/03/11 02:59:01 miod Exp $	*/
d14 1
a14 1
	u_int32_t fpsr;
d17 1
a17 1
	__asm__ __volatile__("fstw %%fr0,0(%1)" : "=m"(fpsr) : "r"(&fpsr));
d19 2
a20 2
	fpsr = (fpsr & 0x07ffffff) | ((mask & 0x1f) << 27);
	__asm__ __volatile__("fldw 0(%0),%%fr0" : : "r"(&fpsr));
@


1.1
log
@More fp-related libc pieces for hppa.
This enables awk to link.
@
text
@d1 1
a1 2
/*	$OpenBSD: fpsetsticky.c,v 1.1 1999/07/23 03:16:27 rahnds Exp $	*/
/*	$NetBSD: fpsetsticky.c,v 1.1 1999/07/07 01:55:08 danw Exp $	*/
d4 1
a4 33
 * Copyright (c) 1999 The NetBSD Foundation, Inc.
 * All rights reserved.
 * 
 * This code is derived from software contributed to The NetBSD Foundation
 * by Dan Winship.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the NetBSD
 *	Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
 * 
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
d14 1
a14 1
	u_int64_t fpscr;
d17 4
a20 4
	__asm__ __volatile("mffs %0" : "=f"(fpscr));
	old = (fpscr >> 25) & 0x1f;
	fpscr = (fpscr & 0xc1ffffff) | (mask << 25);
	__asm__ __volatile("mtfsf 0xff,%0" :: "f"(fpscr));
@

