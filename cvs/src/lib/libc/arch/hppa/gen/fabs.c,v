head	1.11;
access;
symbols
	OPENBSD_6_0:1.11.0.10
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.6
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.8
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.4
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.10.0.4
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.5.0.10
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.11
date	2014.04.18.15.09.52;	author guenther;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.13.15.21.51;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2012.12.05.23.19.58;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2011.07.08.22.28.33;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.08.19.21.41;	author martynas;	state dead;
branches;
next	1.5;

1.5
date	2008.12.10.00.59.07;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.09.20.21.06;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.21.18.41.05;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.22.20.05.01;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.11.02.59.01;	author miod;	state Exp;
branches;
next	;


desc
@@


1.11
log
@It's been a quarter century: we can assume volatile is present with that name.
@
text
@/*	$OpenBSD: fabs.c,v 1.10 2013/11/13 15:21:51 deraadt Exp $	*/

/*
 * Written by Miodrag Vallat.  Public domain
 */

#include <sys/types.h>
#include <math.h>

double
fabs(double val)
{

	__asm__ volatile("fabs,dbl %0,%0" : "+f" (val));
	return (val);
}

__strong_alias(fabsl, fabs);
@


1.10
log
@bring in math.h to provide prototypes
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.9 2013/03/28 18:09:38 martynas Exp $	*/
d14 1
a14 1
	__asm__ __volatile__("fabs,dbl %0,%0" : "+f" (val));
@


1.9
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.8 2012/12/05 23:19:58 deraadt Exp $	*/
d8 1
@


1.8
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.7 2011/07/08 22:28:33 martynas Exp $	*/
d17 1
a17 1
__weak_alias(fabsl, fabs);
@


1.7
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.5 2008/12/10 00:59:07 deraadt Exp $	*/
d7 1
a7 1
#include <sys/cdefs.h>
@


1.6
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@@


1.5
log
@use sys/cdefs.h
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.4 2008/12/09 20:21:06 martynas Exp $	*/
@


1.4
log
@alias fabsl to fabs on these archs
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.3 2002/10/21 18:41:05 mickey Exp $	*/
d7 1
a7 1
#include <machine/cdefs.h>
@


1.3
log
@make an ieeefp regress pass; miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.c,v 1.2 2002/05/22 20:05:01 miod Exp $	*/
d7 2
d16 2
@


1.2
log
@I was on drugs when I commited this initially, and still do not understand
how I got libc to compile with this. Blush.

Replace this with a correct implementation, and write a faster fabs()
while there.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d11 1
a11 1
	__asm__ __volatile__("fabs,dbl %0,%0" : "+f"(val));
@


1.1
log
@More fp-related libc pieces for hppa.
This enables awk to link.
@
text
@d1 6
d10 3
a12 5
	if (val > 0) {
		return val;
	} else {
		return -val;
	}
@

