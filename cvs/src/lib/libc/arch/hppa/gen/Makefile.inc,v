head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.4
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.6
	OPENBSD_6_1_BASE:1.15
	OPENBSD_6_0:1.15.0.2
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.14.0.14
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.16
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.8
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.12
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.10
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.6
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.4
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.2
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.4
	OPENBSD_5_0:1.13.0.2
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.11.0.8
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.6
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.2
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.4
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.9.0.4
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.2
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.8.0.10
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.8
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.6
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.4
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.2
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.7.0.4
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.2
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.15
date	2016.04.28.19.53.20;	author kettenis;	state Exp;
branches;
next	1.14;
commitid	8JkMyWPqx2ZEjgyK;

1.14
date	2012.04.12.16.14.09;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2011.07.08.22.28.33;	author martynas;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.08.19.21.41;	author martynas;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.21.09.34.50;	author martynas;	state Exp;
branches;
next	1.10;

1.10
date	2009.04.19.16.42.05;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2008.07.24.09.31.06;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2005.11.29.21.38.08;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2005.02.01.15.12.29;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.02.19.20.26;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.17.18.41.02;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.03.11.02.59.01;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.06.18.50.26;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	99.09.14.00.21.15;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	98.12.17.16.56.46;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Don't add setjmp.S twice.
@
text
@#	$OpenBSD: Makefile.inc,v 1.14 2012/04/12 16:14:09 deraadt Exp $

SRCS+=	setjmp.S
SRCS+=	fabs.c
SRCS+=	infinity.c ldexp.c modf.c nan.c
SRCS+=	flt_rounds.c fpgetmask.c fpgetround.c fpgetsticky.c fpsetmask.c \
	fpsetround.c fpsetsticky.c
@


1.14
log
@alloca.c cannot be used
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 2011/07/08 22:28:33 martynas Exp $
d5 1
a5 1
SRCS+=	infinity.c ldexp.c modf.c nan.c setjmp.S
@


1.13
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 2009/04/21 09:34:50 martynas Exp $
a7 2

SRCS+=	alloca.c
@


1.12
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@d4 2
a5 1
SRCS+=	infinity.c ldexp.c nan.c setjmp.S
@


1.11
log
@remove from gen so that lint doesn't check gen if assembly versions
are available.  spotted by theo
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 2009/04/19 16:42:05 martynas Exp $
d4 1
a4 2
SRCS+=	fabs.c
SRCS+=	infinity.c ldexp.c modf.c nan.c setjmp.S
@


1.10
log
@- ldexp implementation has issues.  switch to the one from libm
- remove frexp in hppa64, cloned from hppa
- move generic ieee754 implementations of modf and ldexp to gen
ok kettenis@@, "looks good" millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 2008/07/24 09:31:06 martynas Exp $
d5 1
a5 1
SRCS+=	infinity.c nan.c setjmp.S
@


1.9
log
@- move isinf, isnan dups to gen, since most is ieee 754
- is{inf,nan} should be macros for real-floating, so rename to
__is{inf,nan}, per C99
- implement C99 __fpclassify(), __fpclassifyf(), __isfinite(),
__isfinitef(), __isnormal(), __isnormalf(), __signbit(), __signbitf()
- long functions added, but not yet enabled, till ieee.h is fixed
- implement vax equivalents of the functions
- reimplement isinff, isnanf in a better way, and move to libc
- add qnan bytes for all archs
- bump major
man pages will follow
ok millert@@.  arm bits looked over by drahn@@
discussed w/ theo, who showed the right direction, to put these
functions in libc
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 2005/11/29 21:38:08 deraadt Exp $
d4 1
a4 1
SRCS+=	fabs.c ldexp.c
a7 1
SRCS+=	modf.c
@


1.8
log
@if we pull in a .S file, we must fake out the lint with a .c file
for this first cut, we will do this for alloca() using alloca.c by
adding it to LSRCS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2005/02/01 15:12:29 millert Exp $
d5 1
a5 1
SRCS+=	isnan.c isinf.c infinity.c setjmp.S
@


1.7
log
@Replace broken frexp() with a working one from FreeBSD.  There's
no need to have a copy for each platform with ieee floating point,
only vax needs a special version (which probably has similar bugs).
OK and with help from otto@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2003/05/02 19:20:26 millert Exp $
d9 1
@


1.6
log
@Add Doug Gwyn's portable alloca() for platforms w/o an assembler
version.  Normally, gcc provides its own alloca() (unless -fno-builtin
is specified).  The C version is decidedly suboptimal--we really
need proper assembler versions but this will work as a stop-gap
measure.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2002/05/17 18:41:02 mickey Exp $
d4 1
a4 1
SRCS+=	fabs.c frexp.c ldexp.c
@


1.5
log
@kill unused line
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 2002/03/11 02:59:01 miod Exp $
d9 1
@


1.4
log
@More fp-related libc pieces for hppa.
This enables awk to link.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2002/02/06 18:50:26 mickey Exp $
a2 1
#SRCS+=	setjmp.S sigsetjmp.S
@


1.3
log
@implement the setjmp/longjmp family, based on fredette@@'s work
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 1999/09/14 00:21:15 mickey Exp $
d3 3
d7 3
@


1.2
log
@some basic framework
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 1998/12/17 16:56:46 mickey Exp $
d3 1
a3 1
SRCS+=	isnan.c isinf.c infinity.c sigsetjmp.S
@


1.1
log
@some missing parts; sys is not ready yet
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 1
a3 1
SRCS+=	milli.S
@

