head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.8
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.10
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.6
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.4
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2015.10.27.05.54.49;	author guenther;	state Exp;
branches;
next	1.5;
commitid	GqevjOlUxm0Irj52;

1.5
date	2014.04.18.15.09.52;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2012.06.25.17.01.10;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.21.18.41.05;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.22.20.05.01;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2002.03.11.02.59.01;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Wrap the remaining math functions in libc: __fpclassify*(), __flt_rounds(),
and ldexp().

ok millert@@
@
text
@/*	$OpenBSD: flt_rounds.c,v 1.5 2014/04/18 15:09:52 guenther Exp $	*/

/*
 * Written by Miodrag Vallat.  Public domain.
 */

#include <sys/types.h>
#include <float.h>

static const int map[] = {
	1,	/* round to nearest */
	0,	/* round to zero */
	2,	/* round to positive infinity */
	3	/* round to negative infinity */
};

int
__flt_rounds()
{
	u_int64_t fpsr;

	__asm__ volatile("fstd %%fr0,0(%1)" : "=m" (fpsr) : "r" (&fpsr));
	return map[(fpsr >> 41) & 0x03];
}
DEF_STRONG(__flt_rounds);
@


1.5
log
@It's been a quarter century: we can assume volatile is present with that name.
@
text
@d1 1
a1 1
/*	$OpenBSD: flt_rounds.c,v 1.4 2012/06/25 17:01:10 deraadt Exp $	*/
d25 1
@


1.4
log
@Do not use <machine/float.h>, that is an deformed BSD-ism.
It turns out <float.h> is the right file to pull in.
ok millert
@
text
@d1 1
a1 1
/*	$OpenBSD: flt_rounds.c,v 1.3 2002/10/21 18:41:05 mickey Exp $	*/
d22 1
a22 1
	__asm__ __volatile__("fstd %%fr0,0(%1)" : "=m" (fpsr) : "r" (&fpsr));
@


1.3
log
@make an ieeefp regress pass; miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: flt_rounds.c,v 1.2 2002/05/22 20:05:01 miod Exp $	*/
d8 1
a8 1
#include <machine/float.h>
@


1.2
log
@I was on drugs when I commited this initially, and still do not understand
how I got libc to compile with this. Blush.

Replace this with a correct implementation, and write a faster fabs()
while there.

ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: flt_rounds.c,v 1.1 2002/03/11 02:59:01 miod Exp $	*/
d20 1
a20 1
	u_int32_t fpsr;
d22 2
a23 2
	__asm__ __volatile__("fstw %%fr0,0(%1)" : "=m"(fpsr) : "r"(&fpsr));
	return map[(fpsr >> 9) & 0x03];
@


1.1
log
@More fp-related libc pieces for hppa.
This enables awk to link.
@
text
@d1 5
a5 1
/*	$OpenBSD: flt_rounds.c,v 1.2 1997/08/01 21:36:32 deraadt Exp $	*/
d20 1
a20 2
	double tmp;
	int x;
d22 2
a23 2
	asm("mffs %0; stfiwx %0,0,%1" : "=f"(tmp): "b"(&x));
	return map[x & 0x03];
@

