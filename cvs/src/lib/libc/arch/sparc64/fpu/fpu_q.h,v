head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.8
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.6
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.2
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.2.0.48
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.50
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.42
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.46
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.44
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.40
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.38
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.36
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.34
	OPENBSD_5_0:1.2.0.32
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.1.0.2
	OPENBSD_3_4_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2016.05.08.18.41.17;	author guenther;	state Exp;
branches;
next	1.2;
commitid	0VsVMYAU46CoNFtN;

1.2
date	2004.02.03.17.18.13;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2003.07.21.18.41.30;	author jason;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Hide __fpu_* and make internal _Qp_* calls go direct.

ok kettenis@@
@
text
@/*	$OpenBSD: fpu_q.h,v 1.2 2004/02/03 17:18:13 jason Exp $	*/

/*
 * Copyright (c) 2003 Jason L. Wright (jason@@thought.net)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

double _Q_qtod(long double);
int _Q_qtoi(long double);
float _Q_qtos(long double);
unsigned int _Q_qtou(long double);
long double _Q_neg(long double);
long double _Q_sqrt(long double);
long double _Q_dtoq(double);
long double _Q_stoq(float);
long double _Q_itoq(int);
long double _Q_utoq(unsigned int);
long double _Q_mul(long double, long double);
long double _Q_div(long double, long double);
long double _Q_sub(long double, long double);
long double _Q_add(long double, long double);
int _Q_feq(long double, long double);
int _Q_fne(long double, long double);
int _Q_fge(long double, long double);
int _Q_fgt(long double, long double);
int _Q_flt(long double, long double);
int _Q_fle(long double, long double);

void _Qp_add(long double *, long double *, long double *);
void _Qp_div(long double *, long double *, long double *);
void _Qp_mul(long double *, long double *, long double *);
void _Qp_sub(long double *, long double *, void *);
void _Qp_dtoq(long double *, double);
void _Qp_itoq(long double *, int);
void _Qp_stoq(long double *, float);
void _Qp_xtoq(long double *, long);
void _Qp_uitoq(long double *, u_int);
void _Qp_uxtoq(long double *, u_long);
double _Qp_qtod(long double *);
long _Qp_qtox(long double *);
u_long _Qp_qtoux(long double *);
u_int _Qp_qtoui(long double *);
int _Qp_qtoi(long double *);
float _Qp_qtos(long double *);
int _Qp_feq(long double *, long double *);
int _Qp_fge(long double *, long double *);
int _Qp_fle(long double *, long double *);
int _Qp_fgt(long double *, long double *);
int _Qp_flt(long double *, long double *);
int _Qp_fne(long double *, long double *);
void _Qp_sqrt(long double *, long double *);

PROTO_NORMAL(_Qp_add);
PROTO_NORMAL(_Qp_div);
PROTO_NORMAL(_Qp_dtoq);
PROTO_NORMAL(_Qp_feq);
PROTO_NORMAL(_Qp_fge);
PROTO_NORMAL(_Qp_fgt);
PROTO_NORMAL(_Qp_fle);
PROTO_NORMAL(_Qp_flt);
PROTO_NORMAL(_Qp_fne);
PROTO_NORMAL(_Qp_itoq);
PROTO_NORMAL(_Qp_mul);
PROTO_NORMAL(_Qp_qtod);
PROTO_NORMAL(_Qp_qtoi);
PROTO_NORMAL(_Qp_qtos);
PROTO_NORMAL(_Qp_qtoui);
PROTO_NORMAL(_Qp_sqrt);
PROTO_NORMAL(_Qp_stoq);
PROTO_NORMAL(_Qp_sub);
PROTO_NORMAL(_Qp_uitoq);
@


1.2
log
@correct psABI functions _Q_feq and friends (they return 'int' not long double);
pointed out by Mark Kettenis, kettenis,chello,nl
@
text
@d1 1
a1 1
/*	$OpenBSD: fpu_q.h,v 1.1 2003/07/21 18:41:30 jason Exp $	*/
d73 20
@


1.1
log
@quad float emulation stuff.  Mostly based on freebsd (which is based on
NetBSD's kernel emulation stuff).  Not enabled yet.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d43 6
a48 6
long double _Q_feq(long double, long double);
long double _Q_fne(long double, long double);
long double _Q_fge(long double, long double);
long double _Q_fgt(long double, long double);
long double _Q_flt(long double, long double);
long double _Q_fle(long double, long double);
@

