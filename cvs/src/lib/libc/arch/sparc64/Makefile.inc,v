head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.12
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.10
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.6
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.8
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.3.0.46
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.42
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.40
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.38
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.36
	OPENBSD_5_0:1.3.0.34
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.32
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.30
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.26
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.28
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.24
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.22
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.20
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.18
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.16
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.14
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.12
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.10
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.8
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.6
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.4
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.2
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.2.0.8
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.6
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.4
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2014.06.09.20.47.11;	author miod;	state Exp;
branches;
next	1.3;
commitid	iQ7uGgiNX7UaiPtF;

1.3
date	2003.07.21.18.50.11;	author jason;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.19.17.33;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.29.01.48.12;	author art;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Nuke the machinery to sync libkern with libc, it's not been used in the
last 15 years and there is no point to use it in the future.

From Jean-Philippe Ouellet
@
text
@#	$OpenBSD: Makefile.inc,v 1.3 2003/07/21 18:50:11 jason Exp $

# `source' files built from m4 source
# the name `div.o' is taken for the ANSI C `div' function, hence sdiv here
SRCS+=	rem.S sdiv.S udiv.S urem.S
CLEANFILES+=rem.S sdiv.S udiv.S urem.S

sdiv.S: ${LIBCSRCDIR}/arch/sparc64/gen/divrem.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@(echo "define(NAME,\`.div')define(OP,\`div')define(S,\`true')"; \
	 cat ${.ALLSRC}) | m4 > ${.TARGET}
	@@chmod 444 ${.TARGET}

udiv.S: ${LIBCSRCDIR}/arch/sparc64/gen/divrem.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@(echo "define(NAME,\`.udiv')define(OP,\`div')define(S,\`false')"; \
	 cat ${.ALLSRC}) | m4 > ${.TARGET}
	@@chmod 444 ${.TARGET}

rem.S: ${LIBCSRCDIR}/arch/sparc64/gen/divrem.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@(echo "define(NAME,\`.rem')define(OP,\`rem')define(S,\`true')"; \
	 cat ${.ALLSRC}) | m4 > ${.TARGET}
	@@chmod 444 ${.TARGET}

urem.S: ${LIBCSRCDIR}/arch/sparc64/gen/divrem.m4
	@@echo 'building ${.TARGET} from ${.ALLSRC}'
	@@(echo "define(NAME,\`.urem')define(OP,\`rem')define(S,\`false')"; \
	 cat ${.ALLSRC}) | m4 > ${.TARGET}
	@@chmod 444 ${.TARGET}

.include "${.CURDIR}/arch/sparc64/fpu/Makefile.inc"
@


1.3
log
@enable the libc portions of the quad float stuff (nothing will call this
until a forthcoming gcc patch is in place).
@
text
@d1 1
a1 6
#	$OpenBSD: Makefile.inc,v 1.2 2001/09/10 19:17:33 jason Exp $

KMINCLUDES= arch/sparc64/SYS.h
KMSRCS=	ffs.S strlen.S htonl.S htons.S \
	ntohl.S ntohs.S divrem.m4 \
	_setjmp.S mul.S saveregs.S setjmp.S umul.S
@


1.2
log
@Use ${LIBCSRCDIR} not ${.CURDIR} for relative path (allows libc_r to build)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2001/08/29 01:48:12 art Exp $
d36 2
@


1.1
log
@Last pieces needed to build libc on sparc64.
@
text
@d1 1
a1 1
#	$OpenBSD$
d13 1
a13 1
sdiv.S: ${.CURDIR}/arch/sparc64/gen/divrem.m4
d19 1
a19 1
udiv.S: ${.CURDIR}/arch/sparc64/gen/divrem.m4
d25 1
a25 1
rem.S: ${.CURDIR}/arch/sparc64/gen/divrem.m4
d31 1
a31 1
urem.S: ${.CURDIR}/arch/sparc64/gen/divrem.m4
@

