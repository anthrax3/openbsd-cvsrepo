head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2004.02.27.17.36.14;	author deraadt;	state dead;
branches;
next	1.2;

1.2
date	2004.02.08.17.29.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.44.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.3
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@/*	$OpenBSD: fabs.S,v 1.2 2004/02/08 17:29:57 deraadt Exp $	*/
/*	$NetBSD: fabs.S,v 1.1 2001/06/19 00:25:02 fvdl Exp $	*/

#include <machine/asm.h>

/*
 * Ok, this sucks. Is there really no way to push an xmm register onto
 * the FP stack directly?
 */

ENTRY(fabs)
	movsd	%xmm0, -8(%rsp)
	fldl	-8(%rsp)
	fabs
	fstpl	-8(%rsp)
	movsd	-8(%rsp),%xmm0
	ret
@


1.2
log
@from freebsd, helps awk too:
Fix fabs().  This commit brought to you by the letter 'l'.
(fstp stores a mem32 value, fstpl stores a mem64 value)
@
text
@d1 1
a1 1
/*	$OpenBSD: fabs.S,v 1.1 2004/01/28 01:44:45 mickey Exp $	*/
@


1.1
log
@things for amd64; from art@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d15 1
a15 1
	fstp	-8(%rsp)
@

