head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.7.0.14
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.6
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.6.0.40
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.38
	OPENBSD_5_0:1.6.0.36
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.34
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.32
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.28
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.30
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.26
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.24
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.22
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.20
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.18
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.16
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.14
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.12
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.10
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.8
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.6
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.4
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.3.0.16
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.14
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.12
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.10
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.8
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.6
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.4
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.13
date	2016.05.30.05.18.52;	author guenther;	state Exp;
branches;
next	1.12;
commitid	3BZ0MJ3hFcho5JWg;

1.12
date	2016.05.15.00.15.10;	author guenther;	state Exp;
branches;
next	1.11;
commitid	q5ZHgo4XiUrTIUH8;

1.11
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.10;
commitid	d9R7VGw9CHTkwXE1;

1.10
date	2015.09.05.06.22.47;	author guenther;	state Exp;
branches;
next	1.9;
commitid	YcHx4KWjuOzN6Vj2;

1.9
date	2015.08.26.01.54.09;	author guenther;	state Exp;
branches;
next	1.8;
commitid	ZWoe9OaBBikaM1w5;

1.8
date	2015.08.23.15.44.51;	author kettenis;	state Exp;
branches;
next	1.7;
commitid	wLCDitwtJUSchKsR;

1.7
date	2012.08.22.22.26.16;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.07.04.47.12;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.07.04.30.30;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2002.10.07.04.16.34;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	99.03.12.04.37.20;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	99.01.28.05.09.12;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.42.23;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.42.23;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Consistently reference '_end' instead of 'end' in the brk/sbrk implementation

ok deraadt@@
@
text
@/* $OpenBSD: sbrk.S,v 1.12 2016/05/15 00:15:10 guenther Exp $ */

/*
 * Copyright (c) 1996 Dale Rahn
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"

	.data
	.globl _end
	.globl __curbrk
	.hidden __curbrk
__curbrk:
	.long _C_LABEL(_end)
	END(__curbrk)
	.type	__curbrk,@@object

	.weak	sbrk

	.text
PSEUDO_PREFIX(,sbrk,break)
	
	/* call break(__curbrk + size) */
#ifndef __PIC__
	addis	6, 0, __curbrk@@H
	ori	6, 6, __curbrk@@L	/* # 6 = &__curbrk */
#else
	mflr	10
	bcl	20, 31, 1f
1:	mflr	9
	addis	9, 9, _GLOBAL_OFFSET_TABLE_-1b@@ha
	addi	9, 9, _GLOBAL_OFFSET_TABLE_-1b@@l
	mtlr	10
	lwz	6,__curbrk@@got(9)
#endif
	lwz	5, 0(6)		/* # 5 = *6 (old_curbrk) */
	add	3, 5, 3		/* # 3 = new_curbrk */
	mr	7, 3

	sc

	/* check for error */
	cmpwi	0, 0
	beq+	.L_sbrk_ok
	stw	0, R2_OFFSET_ERRNO(2)
	li	3, -1
	blr

	/* update, __curbrk and return */
.L_sbrk_ok:
	stw	7, 0(6)		/* # remember, 6=&__curbrk, 7=new_curbrk */
	mr	3, 5		/* # remember, 5=old_curbrk */
	blr
END(sbrk)
@


1.12
log
@TIB conversion is complete, so set errno in the syscall stub and eliminate
__cerror

ok ketternis@@
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.11 2016/05/07 19:05:22 guenther Exp $ */
d35 1
a35 1
	.long _C_LABEL(end)
@


1.11
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.10 2015/09/05 06:22:47 guenther Exp $ */
d66 3
a68 1
	b	_ASM_LABEL(__cerror)
@


1.10
log
@Adds hidden _libc_FOO aliases for the system call stubs.
Stop generating _brk and _sbrk symbols: they've already been hidden.
Set the ELF symbol size on the syscall stubs.
Give the __{min,cur}brk symbols a size and type, and hide more jump labels.

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.9 2015/08/26 01:54:09 guenther Exp $ */
d66 1
a66 1
	b	_ASM_LABEL(___cerror)
@


1.9
log
@Hide many (194!) symbols that nothing should be using.
Delete exect(2); it wasn't portable across archs and nothing used it.

ports test build by naddy@@
ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.8 2015/08/23 15:44:51 kettenis Exp $ */
d36 2
d39 1
a39 1
WEAK_ALIAS(sbrk, _sbrk)
d42 1
a42 1
PREFIX2(_sbrk,break)
d73 1
@


1.8
log
@Fetch the _GLOBAL_OFFSET_TABLE_ pointer in a way that's compatible with the
Secure-PLT ABI.
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.7 2012/08/22 22:26:16 deraadt Exp $ */
d32 3
a34 5
	.globl _ASM_LABEL(__curbrk)
	.globl minbrk
_ASM_LABEL(__curbrk):
	.long _C_LABEL(end)
_ASM_LABEL(minbrk):
d37 1
d40 1
a40 1
PREFIX2(sbrk,break)
d44 2
a45 2
	addis	6, 0, _ASM_LABEL(__curbrk)@@H
	ori	6, 6, _ASM_LABEL(__curbrk)@@L	/* # 6 = &__curbrk */
d53 1
a53 1
	lwz	6,_ASM_LABEL(__curbrk)@@got(9)
@


1.7
log
@Fix missing PIC -> __PIC__ conversions; ok pascal
@
text
@d1 1
a1 1
/* $OpenBSD: sbrk.S,v 1.6 2002/10/07 04:47:12 drahn Exp $ */
d49 4
a52 2
	bl	_GLOBAL_OFFSET_TABLE_@@local-4
	mflr	9
d65 1
a65 1
	b	PIC_PLT(_ASM_LABEL(__cerror))
@


1.6
log
@kick, kick. Fix these files which did not come from NetBSD, but the
powerpc port by Dale Rahn.
@
text
@d1 1
a1 1
/* $OpenBSD:$ */
d44 1
a44 1
#ifndef PIC
@


1.5
log
@s/curbrk/__curbrk/ as suggested by art, a few _ASM_LABEL added as appropriate.
@
text
@d1 27
@


1.4
log
@cerror -> __cerror as suggested by art, with a couple of missing _ASM_LABEL()
added as appropriate.
@
text
@d5 1
a5 1
	.globl curbrk
d7 1
a7 1
_ASM_LABEL(curbrk):
d16 1
a16 1
	/* call break(curbrk + size) */
d18 2
a19 2
	addis	6, 0, curbrk@@H
	ori	6, 6, curbrk@@L	/* # 6 = &curbrk */
d25 1
a25 1
	lwz	6,_ASM_LABEL(curbrk)@@got(9)
d38 1
a38 1
	/* update, curbrk and return */
d40 1
a40 1
	stw	7, 0(6)		/* # remember, 6=&curbrk, 7=new_curbrk */
@


1.3
log
@Fixes to the currently unused PIC support in the powerpc asm files.
contact rahnds@@openbsd.org before attempting to use this funcationality.
@
text
@d36 1
a36 1
	b	PIC_PLT(_ASM_LABEL(cerror))
@


1.2
log
@Preliminary version for PIC support. Builds and runs standard and profiled
just fine. pic version has been compiled, but without a ld.so has not been
tested. Needs binutils 2.9.1 or later to build pic version.
@
text
@d23 1
a23 1
	mflr	4
@


1.1
log
@Initial revision
@
text
@d7 4
a10 2
curbrk:	.long _end
minbrk:	.long _end
d14 1
a14 1
PSEUDO_PREFIX(sbrk,break)
d17 10
a26 2
	addis	6,0,curbrk@@h
	ori	6,6,curbrk@@l	/* # 6 = &curbrk */
d34 3
a36 3
	cmpwi 0, 0
	beq+ sbrk_ok		/* OK so this is stupid but I haven't read b */
	b cerror
d39 1
a39 1
sbrk_ok:
@


1.1.1.1
log
@Check-in of powerpc library support.
NOTE: This will not work until the other pieces are checked in.
    This is primarily the NetBSD powerpc port, with modifications
	to support ELF.

@
text
@@
