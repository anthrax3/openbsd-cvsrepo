head	1.14;
access;
symbols
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.9.0.14
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.6
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.10
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.7.0.34
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.32
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.28
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.30
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.26
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.24
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.22
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.20
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.18
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.16
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.14
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.12
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.10
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.8
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.6
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.4.0.8
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.6
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.4
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.6
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.14
date	2016.05.22.02.47.33;	author guenther;	state dead;
branches;
next	1.13;
commitid	nOulxmx7Z7S56LZZ;

1.13
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.12;
commitid	d9R7VGw9CHTkwXE1;

1.12
date	2015.09.09.08.24.12;	author kettenis;	state Exp;
branches;
next	1.11;
commitid	UPmO7AOrX36R6aSa;

1.11
date	2015.09.05.06.22.47;	author guenther;	state Exp;
branches;
next	1.10;
commitid	YcHx4KWjuOzN6Vj2;

1.10
date	2015.08.23.15.51.28;	author kettenis;	state Exp;
branches;
next	1.9;
commitid	SYSxZ1Y24CowNLv4;

1.9
date	2012.08.22.22.26.16;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.07.04.47.12;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2002.10.07.04.34.34;	author drahn;	state Exp;
branches;
next	1.5;

1.5
date	2002.10.07.04.16.34;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2000.11.26.00.12.55;	author drahn;	state Exp;
branches;
next	1.3;

1.3
date	99.04.21.03.43.23;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	99.01.28.05.09.11;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.42.23;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.42.23;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Oh right, actually delete this now that __cerror is unused
@
text
@/* $OpenBSD: cerror.S,v 1.13 2016/05/07 19:05:22 guenther Exp $ */

/*
 * Copyright (c) 1996 Dale Rahn
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS
 * OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"
#include <machine/asm.h>

#define ERRNOPTR_OFFSET	16

	.text
	.hidden _ASM_LABEL(__cerror)
	.hidden _ASM_LABEL(_HIDDEN(__errno))
ASENTRY(__cerror)
	stwu	1, -16(1)		/* follow the SVR4 ABI */
	mflr	3			/* error value is in r0, use r3 */
	stw	3, 20(1)
	stw	31, 12(1)
#ifdef __PIC__
	stw	30, 8(1)
	bcl	20, 31, 1f
1:	mflr	30
	addis	30, 30, _GLOBAL_OFFSET_TABLE_-1b@@ha
	addi	30, 30, _GLOBAL_OFFSET_TABLE_-1b@@l
#endif
	mr	31, 0
	bl	_ASM_LABEL(_HIDDEN(__errno))
	stw	31, 0(3)
#ifdef __PIC__
	lwz	30, 8(1)
#endif
	lwz	31, 12(1)
	lwz	0, 20(1)
	mtlr	0
	addi	1, 1, 16	/* fllow the SVR4 ABI */
	li	3, -1
	li	4, -1
	blr
END(__cerror)
@


1.13
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.12 2015/09/09 08:24:12 kettenis Exp $ */
@


1.12
log
@Backtrack a little bit and don't try to use the per-thread errno location if
r2 is zero.  Some upcoming changes will probably change the offset at which
the errno pointer is stored, or might even store errno directly.  Instead,
call __errno to get the location of errno.  Make sure we go through the PLT
such that we call the version in libpthread if it is linked in.  Set up r30
for this purpose.  The ___cerrno function itself remains protected.

ok guenther@@
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.11 2015/09/05 06:22:47 guenther Exp $ */
a32 2
WEAK_ALIAS(__cerror, ___cerror)

d34 3
a36 2
	.protected _ASM_LABEL(___cerror)
ASENTRY(___cerror)
d49 1
a49 1
	bl	PIC_PLT(__errno)
d61 1
a61 1
END(___cerror)
@


1.11
log
@Adds hidden _libc_FOO aliases for the system call stubs.
Stop generating _brk and _sbrk symbols: they've already been hidden.
Set the ELF symbol size on the syscall stubs.
Give the __{min,cur}brk symbols a size and type, and hide more jump labels.

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.10 2015/08/23 15:51:28 kettenis Exp $ */
d38 1
a38 4
	cmpwi	2, 0
	bne-	.L_threaded

#if defined (__PIC__)
d40 4
d45 9
a53 8
1:	mflr	4
	addis	4, 4, _GLOBAL_OFFSET_TABLE_-1b@@ha
	addi	4, 4, _GLOBAL_OFFSET_TABLE_-1b@@l
	lwz	5,_C_LABEL(errno)@@got(4)
	mtlr	3
#else
	addis 5, 0, errno@@H
	ori 5, 5, errno@@L
d55 6
a60 10
	b	.L_do_store

.L_threaded:
	lwz  5, 4(2)
	lwz  5, ERRNOPTR_OFFSET(5)

.L_do_store:
	stw 0, 0(5)
	addi 3, 0, -1
	addi 4, 0, -1
@


1.10
log
@Make __cerror() use the per-thread errno location if r2 isn't zero.  This way
libpthread no longer has to override it which means that we can use a local
call and can avoid setting up r30 as a _GLOBAL_OFFSET_TABLE_ pointer, which
is hard the way the powerpc ABI works.

For now we continue to provide __cerror as a weak symbol, but ___cerror is
now protected and internal calls within libc now use ___cerror instead of
__cerror.

discussed with guenther@@
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.9 2012/08/22 22:26:16 deraadt Exp $ */
d64 1
@


1.9
log
@Fix missing PIC -> __PIC__ conversions; ok pascal
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.8 2011/04/04 12:42:39 guenther Exp $ */
d31 2
d36 1
d38 3
a41 1
	stwu	1, -16(1) 		/* follow the SVR4 ABI */
d43 4
a46 3
	stw	3, 20(1)
	bl	_GLOBAL_OFFSET_TABLE_@@local-4
	mflr	4
d48 1
d53 5
d59 1
a62 5
#if defined (__PIC__)
	lwz	0, 20(1)
	mtlr	0
	addi	1, 1, 16	/* follow the SVR4 ABI */
#endif
@


1.8
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: cerror.S,v 1.7 2002/10/07 04:47:12 drahn Exp $ */
d35 1
a35 1
#if defined (PIC)
d50 1
a50 1
#if defined (PIC)
@


1.7
log
@kick, kick. Fix these files which did not come from NetBSD, but the
powerpc port by Dale Rahn.
@
text
@d1 1
a1 1
/* $OpenBSD:$ */
d31 2
d34 1
a34 1
ASENTRY(__cerror)
@


1.6
log
@clean up ifdefs for PIC, resulting code unchanged.
@
text
@d1 27
@


1.5
log
@cerror -> __cerror as suggested by art, with a couple of missing _ASM_LABEL()
added as appropriate.
@
text
@a9 6
#endif

#ifndef  PIC
	addis 5, 0, errno@@H
	ori 5, 5, errno@@L
#else
d13 3
@


1.4
log
@Properly implement errno handling for the threaded libc (libc_r)
The powerpc specific code was previously handling system call errors
as if kernel threads existed (currently only userlang threads are modeled).
Thus if multiple threads existed in a process, the process would not
get the correct errno from a system call. This would cause _many_ tests
to fail. Fixing this causes a number of the tests in libc_r/TEST to now work,
that did not before, however a few still fail.
@
text
@d5 1
a5 1
ENTRY(cerror)
@


1.3
log
@Fix the _THREAD_SAFE path through the cerror code for powerpc.
libc_r was never completed for the powerpc arch.
@
text
@d6 1
a6 1
#if defined(_THREAD_SAFE) || defined (PIC)
d11 1
a12 1
# ifndef _THREAD_SAFE
a14 6
# else
	mr	9, 0
	bl	_C_LABEL(__error)
	mr	5, 3
	mr	0, 9
# endif
a15 1
# ifndef _THREAD_SAFE
a18 7
# else
	stw	0,  12(1)

	bl	PIC_PLT(_C_LABEL(__error))
	mr	5, 3
	lwz	0,  12(1)
# endif
d24 1
a24 1
#if defined(_THREAD_SAFE) || defined (PIC)
@


1.2
log
@Preliminary version for PIC support. Builds and runs standard and profiled
just fine. pic version has been compiled, but without a ld.so has not been
tested. Needs binutils 2.9.1 or later to build pic version.
@
text
@d8 2
a16 1
	mflr	10
d18 1
a18 2
	mr	3, 5
	mtlr	10
a22 1
	mflr	10
a24 1
	mtlr	10
a26 2
	mflr	10
	stw	10, 20(1)
d31 1
a31 3
	lwz	10, 12(1)
	mtlr	10
	lwz	0,  20(1)
d39 2
@


1.1
log
@Initial revision
@
text
@d6 5
a10 1
#if 1
d13 8
d22 17
a38 8
	.data
	.extern errno
errno_toc:
	.long errno
	.text
	addis 5, 0, errno_toc@@H
	ori 5, 5, errno_toc@@L
	lwz 5, 0(5)
d40 1
d44 3
@


1.1.1.1
log
@Check-in of powerpc library support.
NOTE: This will not work until the other pieces are checked in.
    This is primarily the NetBSD powerpc port, with modifications
	to support ELF.

@
text
@@
