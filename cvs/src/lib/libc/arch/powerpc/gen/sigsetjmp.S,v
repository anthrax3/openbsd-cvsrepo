head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.5.0.42
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.44
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.36
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.40
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.1.1.1.0.22
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.20
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.18
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.16
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.14
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.12
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.10
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.7
date	2016.05.22.23.56.30;	author guenther;	state Exp;
branches;
next	1.6;
commitid	XOP9oHluJVfkZ0cd;

1.6
date	2016.05.15.05.48.24;	author guenther;	state Exp;
branches;
next	1.5;
commitid	tHRbUCjVP25eprZr;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.20.18.32;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.10.24.02.26.53;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.08.20.34.47;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.42.22;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.42.22;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add XOR cookies for r1 (stack) and lr.  Switch from calling obsolete
sig{block,setmask} to directly using the sigprocmask syscall.  Rewrite
sig{set,long}jmp based on {set,long}jmp to avoid the deprecated
store/load-multiple instructions.

in snaps; ok deraadt@@
@
text
@/*	$OpenBSD: setjmp.S,v 1.10 2016/05/15 05:48:24 guenther Exp $ */
/*
 * Copyright (c) 1996 Dale Rahn. All rights reserved.
 *
 *   
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */  

#include "SYS.h"
#include <machine/asm.h>

#define JMP_sigflag	0x00
#define JMP_r1		0x04
#define JMP_r14		0x08
#define JMP_r15		0x0c
#define JMP_r16		0x10
#define JMP_r17		0x14
#define JMP_r18		0x18
#define JMP_r19		0x1c
#define JMP_r20		0x20
#define JMP_r21		0x24
#define JMP_r22		0x28
#define JMP_r23		0x2c
#define JMP_r24		0x30
#define JMP_r25		0x34
#define JMP_r26		0x38
#define JMP_r27		0x3c
#define JMP_r28		0x40
#define JMP_r29		0x44
#define JMP_r30		0x48
#define JMP_r31		0x4c
#define JMP_lr		0x50
#define JMP_cr		0x54
#define JMP_ctr		0x58
#define JMP_xer		0x5c
#define JMP_sigmask	0x60

	.extern	__jmpxor

/* int sigsetjmp(sigjmp_buf env, int savemask) */
ENTRY(sigsetjmp)
	mr	5, 3			/* save jmpbuf addr in r5 */
	stw	4, JMP_sigflag(5)
	or.	4, 4, 4
	beq	1f
	li	3, 1			/* how = SIG_BLOCK */
	li	4, 0			/* oset = empty */
	li	0, SYS_sigprocmask
	sc
	stw	3, JMP_sigmask(5)
1:	mflr	6
	bcl	20, 31, 2f
2:	mflr	7
	addis	7, 7, __jmpxor-2b@@ha
	addi	7, 7, __jmpxor-2b@@l
	mtlr	6
	lwz	0, 0(7)			/* xor for r1 */
	lwz	7, 4(7)			/* xor for lr, overwrite addr */

	/* r1, r14-r31 */
	xor  0, 0, 1			/* use and overwrite the r1 xor */
	/* "mflr 6" done at 1: above */
	xor  7, 6, 7			/* use and overwrite the lr xor */
	stw 7, JMP_lr(5)
	stw  0, JMP_r1 (5)
	stw 14, JMP_r14(5)
	stw 15, JMP_r15(5)
	stw 16, JMP_r16(5)
	stw 17, JMP_r17(5)
	stw 18, JMP_r18(5)
	stw 19, JMP_r19(5)
	stw 20, JMP_r20(5)
	stw 21, JMP_r21(5)
	stw 22, JMP_r22(5)
	stw 23, JMP_r23(5)
	stw 24, JMP_r24(5)
	stw 25, JMP_r25(5)
	stw 26, JMP_r26(5)
	stw 27, JMP_r27(5)
	stw 28, JMP_r28(5)
	stw 29, JMP_r29(5)
	stw 30, JMP_r30(5)
	stw 31, JMP_r31(5)
	/* cr, lr, ctr, xer */
	mfcr 0
	stw 0, JMP_cr(5)
	mfctr 0
	stw 0, JMP_ctr(5)
	mfxer 0
	stw 0, JMP_xer(5)
	/* f14-f31, fpscr */
	li 3, 0
	blr
END(sigsetjmp)


/* int siglongjmp(sigjmp_buf env, int val) */
ENTRY(siglongjmp)
	mr	5, 3			/* save jmpbuf addr in r5 */
	mr	6, 4			/* save val in r6 */
	lwz	4, JMP_sigflag(5)	/* do we need to restore sigmask? */
	or.	4, 4, 4
	beq	1f

	li	3, 3			/* how = SIG_SETMASK */
	lwz	4, JMP_sigmask(5)	/* oset from the jmpbuf */
	li	0, SYS_sigprocmask
	sc

1:	bcl	20, 31, 2f
2:	mflr	9
	addis	9, 9, __jmpxor-2b@@ha
	addi	9, 9, __jmpxor-2b@@l
	lwz	8, 0(9)			/* xor for r1 */
	lwz	9, 4(9)			/* xor for lr, overwrite addr */

	/* r1, r14-r31 */
	lwz  0, JMP_r1(5)
	xor  1, 0, 8			/* use the r1 xor */
	lwz 14, JMP_r14(5)
	lwz 15, JMP_r15(5)
	lwz 16, JMP_r16(5)
	lwz 17, JMP_r17(5)
	lwz 18, JMP_r18(5)
	lwz 19, JMP_r19(5)
	lwz 20, JMP_r20(5)
	lwz 21, JMP_r21(5)
	lwz 22, JMP_r22(5)
	lwz 23, JMP_r23(5)
	lwz 24, JMP_r24(5)
	lwz 25, JMP_r25(5)
	lwz 26, JMP_r26(5)
	lwz 27, JMP_r27(5)
	lwz 28, JMP_r28(5)
	lwz 29, JMP_r29(5)
	lwz 30, JMP_r30(5)
	lwz 31, JMP_r31(5)
	/* cr, lr, ctr, xer */
	lwz 8, JMP_cr(5)		/* overwrite the r1 xor */
	mtcr 8
	lwz 0, JMP_lr(5)
	xor  0, 0, 9			/* use the lr xor */
	mtlr 0
	lwz 9, JMP_ctr(5)		/* overwrite the lr xor */
	mtctr 9
	lwz 0, JMP_xer(5)
	mtxer 0
	/* f14-f31, fpscr */

	/* if r6 == 0, return 1, not 0 */
	mr	3, 6
	cmpwi	6, 0
	bnelr
	li	3, 1
	blr
END(siglongjmp)
@


1.6
log
@Add END() to match ENTRY() macros

ok kettenis@@
@
text
@d1 3
a3 8
/*	$OpenBSD: sigsetjmp.S,v 1.5 2005/08/07 16:40:15 espie Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
d5 1
a13 15
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
d15 11
a25 2
 *	from: @@(#)setjmp.s	5.1 (Berkeley) 4/23/90"
 */
d30 29
d60 3
a62 2
	mr	6,3
	or.	7,4,4
d64 47
a110 12
	li	3,1			# SIG_BLOCK
	li	4,0
	li	0,SYS_sigprocmask
	sc				# assume no error	XXX
1:
	mflr	11
	mfcr	12
	mr	10,1
	mr	9,2
	mr	8,3
	stmw	7,0(6)
	li	3,0
d114 2
d117 4
a120 7
	lmw	7,0(3)
	mr	6,4
	mtlr	11
	mtcr	12
	mr	2,9
	mr	1,10
	or.	7,7,7
d122 49
a170 6
	mr	4,8
	li	3,3			# SIG_SETMASK
	li	0,SYS_sigprocmask
	sc				# assume no error	XXX
1:
	or.	3,6,6
d172 1
a172 1
	li	3,1
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD: sigsetjmp.S,v 1.4 2003/06/02 20:18:32 millert Exp $	*/
d57 1
d77 1
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 2
/*	$OpenBSD: sigsetjmp.S,v 1.3 2002/10/24 02:26:53 drahn Exp $	*/
/*	$NetBSD$	*/
a38 5

#if defined(LIBC_SCCS)
	.text
	.asciz "$NetBSD$"
#endif
@


1.3
log
@Remove some old if 0/if 1 code, it is pointless to keep this in.
@
text
@d1 1
a1 1
/*	$OpenBSD: sigsetjmp.S,v 1.2 2002/05/08 20:34:47 drahn Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.2
log
@OpenBSD tag.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a40 5
#if 0
#include <sys/syscall.h>

#include <machine/asm.h>
#endif
a49 1
#if 1
a50 4
#else
	.globl sigsetjmp
sigsetjmp:
#endif
a67 1
#if 1
a68 4
#else
	.globl siglongjmp
siglongjmp:
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@Check-in of powerpc library support.
NOTE: This will not work until the other pieces are checked in.
    This is primarily the NetBSD powerpc port, with modifications
	to support ELF.

@
text
@@
