head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.2
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.18
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.10
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.14
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.4
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.2
	OPENBSD_5_0:1.5.0.32
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.30
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.28
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.24
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.26
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.22
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.20
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.18
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.16
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.14
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.12
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.10
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.8
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.6
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.4
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.2
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.14
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.12
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.10
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.8
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.6
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.4
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.2
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.1.1.1.0.8
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.6
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.4
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.2
	OPENBSD_2_1_BASE:1.1.1.1
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.13
date	2016.05.29.07.59.36;	author guenther;	state Exp;
branches;
next	1.12;
commitid	VzADRL3NAsNmATaD;

1.12
date	2016.05.29.06.16.52;	author guenther;	state Exp;
branches;
next	1.11;
commitid	TkVcxR3tng8JKQDo;

1.11
date	2016.05.22.23.56.30;	author guenther;	state Exp;
branches;
next	1.10;
commitid	XOP9oHluJVfkZ0cd;

1.10
date	2016.05.15.05.48.24;	author guenther;	state Exp;
branches;
next	1.9;
commitid	tHRbUCjVP25eprZr;

1.9
date	2016.05.08.18.57.14;	author guenther;	state Exp;
branches;
next	1.8;
commitid	kELKu9vQdL0V7CSt;

1.8
date	2015.09.13.07.36.58;	author guenther;	state Exp;
branches;
next	1.7;
commitid	lKiiBbVqMp5OO6rf;

1.7
date	2015.08.23.15.42.01;	author kettenis;	state Exp;
branches;
next	1.6;
commitid	I6dUJhl7uuQCIMS2;

1.6
date	2011.11.22.21.13.30;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2004.03.01.18.05.50;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.03.21.11.50;	author deraadt;	state Exp;
branches
	1.4.2.1;
next	1.3;

1.3
date	2002.05.08.20.33.42;	author drahn;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	99.03.12.04.37.20;	author rahnds;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.42.22;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.42.22;	author rahnds;	state Exp;
branches;
next	;

1.3.4.1
date	2004.03.02.22.00.38;	author brad;	state Exp;
branches;
next	;

1.4.2.1
date	2004.03.02.21.59.22;	author brad;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Only require 4 byte alignment on ILP32 archs
@
text
@/*	$OpenBSD: setjmp.S,v 1.12 2016/05/29 06:16:52 guenther Exp $ */
/*
 * Copyright (c) 1996 Dale Rahn. All rights reserved.
 *
 *   
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */  

#include "SYS.h"
#include <machine/asm.h>

/* int setjmp(jmp_buf env) */

#define JMP_r1	0x04
#define JMP_r14	0x08
#define JMP_r15	0x0c
#define JMP_r16	0x10
#define JMP_r17	0x14
#define JMP_r18	0x18
#define JMP_r19	0x1c
#define JMP_r20	0x20
#define JMP_r21	0x24
#define JMP_r22	0x28
#define JMP_r23	0x2c
#define JMP_r24	0x30
#define JMP_r25	0x34
#define JMP_r26	0x38
#define JMP_r27	0x3c
#define JMP_r28	0x40
#define JMP_r29	0x44
#define JMP_r30	0x48
#define JMP_r31	0x4c
#define JMP_lr  0x50
#define JMP_cr  0x54
#define JMP_ctr	0x58
#define JMP_xer	0x5c
#define JMP_sig	0x60

	.section	.openbsd.randomdata,"aw",@@progbits
	.balign	4
	.globl	__jmpxor
	.hidden	__jmpxor
__jmpxor:
	.zero	4*2		# (r1, lr)
	END(__jmpxor)
	.type	__jmpxor,@@object


ENTRY(setjmp)
	mr	5, 3			/* save jmpbuf addr in r5 */
	li	3, 1			/* how = SIG_BLOCK */
	li	4, 0			/* oset = empty */
	li	0, SYS_sigprocmask
	sc
	stw	3, JMP_sig(5)
	mr	3, 5
ENTRY(_setjmp)
	mflr	6
	bcl	20, 31, 1f
1:	mflr	7
	addis	7, 7, __jmpxor-1b@@ha
	addi	7, 7, __jmpxor-1b@@l
	mtlr	6
	lwz	0, 0(7)			/* xor for r1 */
	lwz	7, 4(7)			/* xor for lr, overwrite addr */

	/* r1, r14-r31 */
	xor  0, 0, 1			/* use and overwrite the r1 xor */
	stw  0, JMP_r1 (3)
	stw 14, JMP_r14(3)
	stw 15, JMP_r15(3)
	stw 16, JMP_r16(3)
	stw 17, JMP_r17(3)
	stw 18, JMP_r18(3)
	stw 19, JMP_r19(3)
	stw 20, JMP_r20(3)
	stw 21, JMP_r21(3)
	stw 22, JMP_r22(3)
	stw 23, JMP_r23(3)
	stw 24, JMP_r24(3)
	stw 25, JMP_r25(3)
	stw 26, JMP_r26(3)
	stw 27, JMP_r27(3)
	stw 28, JMP_r28(3)
	stw 29, JMP_r29(3)
	stw 30, JMP_r30(3)
	stw 31, JMP_r31(3)
	/* cr, lr, ctr, xer */
	mfcr 0
	stw 0, JMP_cr(3)
	/* "mflr 6" done at start of _setjmp() */
	xor  7, 6, 7			/* use and overwrite the lr xor */
	stw 7, JMP_lr(3)
	mfctr 0
	stw 0, JMP_ctr(3)
	mfxer 0
	stw 0, JMP_xer(3)
	/* f14-f31, fpscr */
	li 3, 0
	blr
END(_setjmp)
END(setjmp)


ENTRY(longjmp)
	mr	5, 3			/* save jmpbuf addr in r5 */
	mr	6, 4			/* save val in r6 */
	li	3, 3			/* how = SIG_SETMASK */
	lwz	4, JMP_sig(5)		/* oset from the jmpbuf */
	li	0, SYS_sigprocmask
	sc
	mr	3, 5			/* restore jmpbuf and val to r3,r4 */
	mr	4, 6

ENTRY(_longjmp)
	bcl	20, 31, 1f
1:	mflr	9
	addis	9, 9, __jmpxor-1b@@ha
	addi	9, 9, __jmpxor-1b@@l
	lwz	8, 0(9)			/* xor for r1 */
	lwz	9, 4(9)			/* xor for lr, overwrite addr */

	/* r1, r14-r30 */
	lwz  0, JMP_r1 (3)
	xor  1, 0, 8			/* use the r1 xor */
	lwz 14, JMP_r14(3)
	lwz 15, JMP_r15(3)
	lwz 16, JMP_r16(3)
	lwz 17, JMP_r17(3)
	lwz 18, JMP_r18(3)
	lwz 19, JMP_r19(3)
	lwz 20, JMP_r20(3)
	lwz 21, JMP_r21(3)
	lwz 22, JMP_r22(3)
	lwz 23, JMP_r23(3)
	lwz 24, JMP_r24(3)
	lwz 25, JMP_r25(3)
	lwz 26, JMP_r26(3)
	lwz 27, JMP_r27(3)
	lwz 28, JMP_r28(3)
	lwz 29, JMP_r29(3)
	lwz 30, JMP_r30(3)
	lwz 31, JMP_r31(3)
	/* cr, lr, ctr, xer */
	lwz 8, JMP_cr(3)		/* overwrite the r1 xor */
	mtcr 8
	lwz 0, JMP_lr(3)
	xor  0, 0, 9			/* use the lr xor */
	mtlr 0
	lwz 9, JMP_ctr(3)		/* overwrite the lr xor */
	mtctr 9
	lwz 0, JMP_xer(3)
	mtxer 0
	/* f14-f31, fpscr */

	/* if r4 == 0, return 1, not 0 */
	mr	3, 4
	cmpwi	4, 0
	bnelr
	li	3, 1
	blr
END(_longjmp)
END(longjmp)
@


1.12
log
@Use .balign instead of .align; only need 8 byte alignment not 2^8
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.11 2016/05/22 23:56:30 guenther Exp $ */
d58 1
a58 1
	.balign	8
@


1.11
log
@Add XOR cookies for r1 (stack) and lr.  Switch from calling obsolete
sig{block,setmask} to directly using the sigprocmask syscall.  Rewrite
sig{set,long}jmp based on {set,long}jmp to avoid the deprecated
store/load-multiple instructions.

in snaps; ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.10 2016/05/15 05:48:24 guenther Exp $ */
d58 1
a58 1
	.align	8
@


1.10
log
@Add END() to match ENTRY() macros

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.9 2016/05/08 18:57:14 guenther Exp $ */
d57 8
a65 1
.extern _libc_sigblock
d68 7
a74 22
	/* r31, mask */
	stw 31, JMP_r31(3)
	mflr 0
	stw 0, JMP_lr(3)
#ifdef __PIC__
	stw 30, JMP_r30(3)
	bcl 20, 31, 1f
1:	mflr 30
	addis 30, 30, _GLOBAL_OFFSET_TABLE_-1b@@ha
	addi 30, 30, _GLOBAL_OFFSET_TABLE_-1b@@l
#endif
	mr 31, 3
	li 3, 0
	bl PIC_PLT(_libc_sigblock)
	stw 3, JMP_sig(31)
	mr 3, 31
#ifdef __PIC__
	lwz 30, JMP_r30(3)
#endif
	lwz 0, JMP_lr(3)
	mtlr 0
	lwz 31, JMP_r31(3)
d76 12
a87 3
	stw 31, JMP_r31(3)
	/* r1, r14-r30 */
	stw 1,  JMP_r1 (3)
d105 1
d109 3
a111 2
	mflr 0
	stw 0, JMP_lr(3)
d122 1
a122 1
.extern _libc_sigsetmask
d124 9
a132 16
	/* r31, mask */
	mr 29, 3
	mr 31, 4
#ifdef __PIC__
	mflr 0
	bcl 20, 31, 1f
1:	mflr 30
	addis 30, 30, _GLOBAL_OFFSET_TABLE_-1b@@ha
	addi 30, 30, _GLOBAL_OFFSET_TABLE_-1b@@l
	mtlr 0
#endif
	lwz 3, JMP_sig(3)
	bl PIC_PLT(_libc_sigsetmask)
	/* should we deal with sigonstack here ?? */
	mr 4, 31
	mr 3, 29
d134 7
a140 1
	lwz 31, JMP_r31(3)
d142 2
a143 1
	lwz 1,  JMP_r1 (3)
d161 1
d163 2
a164 2
	lwz 0, JMP_cr(3)
	mtcr 0
d166 1
d168 2
a169 2
	lwz 0, JMP_ctr(3)
	mtctr 0
d176 2
a177 2
	cmpwi	4,0
	bne	1f
a178 1
1:
@


1.9
log
@No, sigaltstack's onstack flag shouldn't be saved.  Delete comment
wondering about that
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.8 2015/09/13 07:36:58 guenther Exp $ */
d116 2
a117 1

d176 2
@


1.8
log
@Do provide hidden _libc_* aliases for sig{block,setmask} and use them in
the ASM *setjmp implementations.
Skip the PLT when calling them on amd64 (other archs to do this after testing)

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.7 2015/08/23 15:42:01 kettenis Exp $ */
a75 1
	/* should sigaltstack be checked and saved */
@


1.7
log
@Set up r30 with the _GLOBAL_OFFSET_TABLE_ pointer as required by the
Secure-PLT ABI.
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.6 2011/11/22 21:13:30 guenther Exp $ */
d58 1
a58 1
.extern sigblock
d74 1
a74 1
	bl PIC_PLT(sigblock)
d119 1
a119 1
.extern sigsetmask
d133 1
a133 1
	bl PIC_PLT(sigsetmask)
@


1.6
log
@sigstack() is long dead, and the compat sigaltstack syscall is gone too.
Correct the namespace protections for sigreturn(), sigwait(), and psignal()

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.5 2004/03/01 18:05:50 drahn Exp $ */
d65 7
d78 3
d122 1
a122 1
	mr 30, 3
d124 8
d136 1
a136 1
	mr 3, 30
@


1.5
log
@longjmp should not return 0, if longjmp(..., 0) is invoked return 1.
ok miod@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.4 2003/06/03 21:11:50 deraadt Exp $ */
d69 1
a69 1
	/* should sigstack be checked and saved */
@


1.4
log
@terms 3 & 4 cleanup based on "terms" file
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.3 2002/05/08 20:33:42 drahn Exp $ */
d150 7
a156 1
	mr 3, 4
@


1.4.2.1
log
@MFC:
Fix by drahn@@

longjmp should not return 0, if longjmp(..., 0) is invoked return 1.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.4 2003/06/03 21:11:50 deraadt Exp $ */
d150 1
a150 7

	/* if r4 == 0, return 1, not 0 */
	mr	3, 4
	cmpwi	4,0
	bne	1f
	li	3, 1
1:
@


1.3
log
@Add copyright block to this file I wrote long ago.
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Dale Rahn.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
@


1.3.4.1
log
@MFC:
Fix by drahn@@

longjmp should not return 0, if longjmp(..., 0) is invoked return 1.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: setjmp.S,v 1.3 2002/05/08 20:33:42 drahn Exp $ */
d155 1
a155 7

	/* if r4 == 0, return 1, not 0 */
	mr	3, 4
	cmpwi	4,0
	bne	1f
	li	3, 1
1:
@


1.2
log
@Fixes to the currently unused PIC support in the powerpc asm files.
contact rahnds@@openbsd.org before attempting to use this funcationality.
@
text
@d1 31
@


1.1
log
@Initial revision
@
text
@d41 1
a41 1
	bl sigblock
d89 1
a89 1
	bl sigsetmask
@


1.1.1.1
log
@Check-in of powerpc library support.
NOTE: This will not work until the other pieces are checked in.
    This is primarily the NetBSD powerpc port, with modifications
	to support ELF.

@
text
@@
