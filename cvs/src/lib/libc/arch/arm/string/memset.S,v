head	1.5;
access;
symbols
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.4
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.2.0.42
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.46
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.44
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.40
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.38
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.36
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.34
	OPENBSD_5_0:1.2.0.32
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.30
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2016.08.06.19.16.09;	author guenther;	state Exp;
branches;
next	1.4;
commitid	3wTWcmodIMVBuFUY;

1.4
date	2015.08.31.02.53.56;	author guenther;	state Exp;
branches;
next	1.3;
commitid	lTMF8Y3C9fQGd6jQ;

1.3
date	2015.06.08.14.22.05;	author jsg;	state Exp;
branches;
next	1.2;
commitid	JCLz0McPv9Uhckd9;

1.2
date	2004.02.01.05.40.52;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.30.41;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Use internal names for __errno, _memcpy, memset, and {,_}{set,long}jmp
Eliminate pointless use of PIC_SYM()
Split out DEFS.h from SYS.h like some other archs

ok kettenis@@ deraadt@@
@
text
@/*	$OpenBSD: memset.S,v 1.4 2015/08/31 02:53:56 guenther Exp $	*/
/*	$NetBSD: memset.S,v 1.3 2003/04/05 23:08:52 bjh21 Exp $	*/

/*
 * Copyright (c) 1995 Mark Brinicombe.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mark Brinicombe.
 * 4. The name of the company nor the name of the author may be used to
 *    endorse or promote products derived from this software without specific
 *    prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR IMPLIED
 * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "DEFS.h"

/*
 * Sets a block of memory to the specified value
 *
 * On entry:
 *   r0 - dest address
 *   r1 - byte to write
 *   r2 - number of bytes to write
 *
 * On exit:
 *   r0 - dest address
 */

.syntax unified

ENTRY(memset)
	stmfd	sp!, {r0}		/* Remember address for return value */
	and	r1, r1, #0x000000ff	/* We write bytes */

	cmp	r2, #0x00000004		/* Do we have less than 4 bytes */
	blt	.Lmemset_lessthanfour

	/* Ok first we will word align the address */

	ands	r3, r0, #0x00000003	/* Get the bottom two bits */
	beq	.Lmemset_addraligned	/* The address is word aligned */

	rsb	r3, r3, #0x00000004
	sub	r2, r2, r3
	cmp	r3, #0x00000002
	strb	r1, [r0], #0x0001	/* Set 1 byte */
	strbge	r1, [r0], #0x0001	/* Set another byte */
	strbgt	r1, [r0], #0x0001	/* and a third */

	cmp	r2, #0x00000004
	blt	.Lmemset_lessthanfour

	/* Now we must be word aligned */

.Lmemset_addraligned:

	orr	r3, r1, r1, lsl #8	/* Repeat the byte into a word */
	orr	r3, r3, r3, lsl #16

	/* We know we have at least 4 bytes ... */

	cmp	r2, #0x00000020		/* If less than 32 then use words */
	blt	.Lmemset_lessthan32

	/* We have at least 32 so lets use quad words */

	stmfd	sp!, {r4-r6}		/* Store registers */
	mov	r4, r3			/* Duplicate data */
	mov	r5, r3
	mov	r6, r3

.Lmemset_loop16:
	stmia	r0!, {r3-r6}		/* Store 16 bytes */
	sub	r2, r2, #0x00000010	/* Adjust count */
	cmp	r2, #0x00000010		/* Still got at least 16 bytes ? */
	bgt	.Lmemset_loop16

	ldmfd	sp!, {r4-r6}		/* Restore registers */

	/* Do we need to set some words as well ? */

	cmp	r2, #0x00000004
	blt	.Lmemset_lessthanfour

	/* Have either less than 16 or less than 32 depending on route taken */

.Lmemset_lessthan32:

	/* We have at least 4 bytes so copy as words */

.Lmemset_loop4:
	str	r3, [r0], #0x0004
	sub	r2, r2, #0x0004
	cmp	r2, #0x00000004
	bge	.Lmemset_loop4

.Lmemset_lessthanfour:
	cmp	r2, #0x00000000
	ldmfdeq	sp!, {r0}
	moveq	pc, lr			/* Zero length so exit */

	cmp	r2, #0x00000002
	strb	r1, [r0], #0x0001	/* Set 1 byte */
	strbge	r1, [r0], #0x0001	/* Set another byte */
	strbgt	r1, [r0], #0x0001	/* and a third */

	ldmfd	sp!, {r0}
	mov	pc, lr			/* Exit */
END_STRONG(memset)
@


1.4
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: memset.S,v 1.3 2015/06/08 14:22:05 jsg Exp $	*/
d36 1
a36 1
#include "SYS.h"
@


1.3
log
@At some point arm moved to a unified syntax for arm and thumb instructions.
While binutils supports both "unified" and "divided" syntax (defaulting
to divided) the integrated assembler in clang only supports unified names
so switch some files to unified syntax.  Similiar changes were made in
bitrig and freebsd.  No difference in objdump -d output.

tested on zaurus by deraadt@@, ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: memset.S,v 1.2 2004/02/01 05:40:52 drahn Exp $	*/
d36 1
a36 1
#include <machine/asm.h>
d130 1
@


1.2
log
@ARGH, forgot tags.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d50 2
d68 2
a69 2
	strgeb	r1, [r0], #0x0001	/* Set another byte */
	strgtb	r1, [r0], #0x0001	/* and a third */
d120 1
a120 1
	ldmeqfd	sp!, {r0}
d125 2
a126 2
	strgeb	r1, [r0], #0x0001	/* Set another byte */
	strgtb	r1, [r0], #0x0001	/* and a third */
@


1.1
log
@arm libc support. From NetBSD. currently supports softfloat.
@
text
@d1 1
@

