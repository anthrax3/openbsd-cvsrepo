head	1.7;
access;
symbols
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.38
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.34
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.32
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.30
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.28
	OPENBSD_5_0:1.4.0.26
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.24
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2016.09.17.20.13.48;	author kettenis;	state Exp;
branches;
next	1.6;
commitid	f1nmDdY4b1Mvu9F1;

1.6
date	2016.05.07.19.05.21;	author guenther;	state Exp;
branches;
next	1.5;
commitid	d9R7VGw9CHTkwXE1;

1.5
date	2014.06.09.20.47.10;	author miod;	state Exp;
branches;
next	1.4;
commitid	iQ7uGgiNX7UaiPtF;

1.4
date	2005.08.07.22.12.11;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.07.16.40.13;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.01.05.40.52;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.01.05.30.40;	author drahn;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add an interface to find the ARM.exidx table for use by the ARM EHABI unwinder.
Makes exceptions work in C++ code work again om armv7.

ok guenther@@
@
text
@# $OpenBSD: Makefile.inc,v 1.6 2016/05/07 19:05:21 guenther Exp $
# $NetBSD: Makefile.inc,v 1.5 2002/07/10 04:29:06 thorpej Exp $

.include <bsd.own.mk>

CERROR=	cerror.S

CPPFLAGS += -DSOFTFLOAT

SOFTFLOAT_BITS=32
.include <arch/arm/softfloat/Makefile.inc>

.include <arch/arm/dlfcn/Makefile.inc>
@


1.6
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.5 2014/06/09 20:47:10 miod Exp $
d12 2
@


1.5
log
@Nuke the machinery to sync libkern with libc, it's not been used in the
last 15 years and there is no point to use it in the future.

From Jean-Philippe Ouellet
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2005/08/07 22:12:11 espie Exp $
d6 1
a6 1
#SRCS+=	__sigaction14_sigtramp.c __sigtramp1.S
@


1.4
log
@undo unrelated commit
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.3 2005/08/07 16:40:13 espie Exp $
a4 4

KMINCLUDES=
KMSRCS=arch/arm/gen/divsi3.S arch/arm/string/memmove.S \
	arch/arm/string/memcpy.S
@


1.3
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2004/02/01 05:40:52 drahn Exp $
d15 1
a15 1
.include "${LIBCSRCDIR}/arch/arm/softfloat/Makefile.inc"
@


1.2
log
@ARGH, forgot tags.
@
text
@d1 1
a1 1
# $OpenBSD$
d15 1
a15 1
.include <arch/arm/softfloat/Makefile.inc>
@


1.1
log
@arm libc support. From NetBSD. currently supports softfloat.
@
text
@d1 1
@

