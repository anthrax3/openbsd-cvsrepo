head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.18
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.20
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.12
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.16
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.14
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.10
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.8
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.6;
commitid	d9R7VGw9CHTkwXE1;

1.6
date	2011.07.08.19.31.41;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.05.16.58.47;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.09.16.14.02;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.30.59;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@/*	$OpenBSD: cerror.S,v 1.6 2011/07/08 19:31:41 miod Exp $ */
/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"

FRAMESZ= 4*REGSZ
S0OFF= FRAMESZ-3*REGSZ
GPOFF= FRAMESZ-2*REGSZ
RAOFF= FRAMESZ-1*REGSZ

	.hidden	_thread_cb
	.hidden	CERROR

NON_LEAF(CERROR, FRAMESZ, ra)
	PTR_SUBU sp, FRAMESZ
#if !__PIC__ || !notyet
	SETUP_GP64(GPOFF, CERROR)
#endif
	.set	reorder
	REG_S	ra, RAOFF(sp)
	REG_S	s0, S0OFF(sp)

	move	s0, v0
	dla	v0, _thread_cb
	ld	t9, 0(v0)
	jal	t9

	sw	s0, 0(v0)

	LI	v0, -1
	REG_L	s0, S0OFF(sp)
	REG_L	ra, RAOFF(sp)
#if !__PIC__ || !notyet
	RESTORE_GP64
#endif
	PTR_ADDU sp, FRAMESZ
	j	ra
END(CERROR)
@


1.6
log
@Kill weak `cerror' alias, it's colliding with the userland namespace. Noticed
by guenther@@ months ago, had to wait for a libc major bump.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.5 2011/04/05 16:58:47 guenther Exp $ */
d36 2
a37 1
FRAMESZ= MKFSIZ(1,1)
d39 1
d41 2
a42 1
WEAK_ALIAS(CERROR, _CERROR)
d44 1
a44 2
	.globl	_C_LABEL(errno)
LEAF(_CERROR, FRAMESZ)
d46 18
a63 4
	SETUP_GP64(GPOFF, _CERROR)
	.set	noreorder
	sw	v0, _C_LABEL(errno)
	li	v0, -1
d65 1
d68 1
a68 2
	li	v1, -1
END(_CERROR)
@


1.5
log
@Fix the previous commit: define ___cerror, no __cerror
tested by otto@@; ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.4 2011/04/04 12:42:39 guenther Exp $ */
a38 1
WEAK_ALIAS(cerror, _CERROR)
@


1.4
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.3 2005/08/07 16:40:15 espie Exp $ */
d43 1
a43 1
LEAF(CERROR, FRAMESZ)
d45 1
a45 1
	SETUP_GP64(GPOFF, CERROR)
d53 1
a53 1
END(CERROR)
@


1.3
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d39 3
d43 1
a43 1
LEAF(cerror, FRAMESZ)
d45 1
a45 1
	SETUP_GP64(GPOFF, cerror)
d53 1
a53 1
END(cerror)
@


1.2
log
@mips64 is now going ABI64 and shared library support!
String functions need some optimization/rewrite to take full advantage.
@
text
@d1 1
a34 5

#if defined(SYSLIBC_SCCS)
	.text
	.asciz "$OpenBSD: cerror.S,v 1.1 2004/08/11 17:30:59 pefo Exp $"
#endif /* SYSLIBC_SCCS */
@


1.1
log
@Move mips to mips64
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: cerror.S,v 1.5 2003/06/02 20:18:32 millert Exp $"
d40 3
d44 3
a46 1
LEAF(cerror)
d50 2
@

