head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.20
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.12
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.16
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.14
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.10
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.8
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.6
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	OPENBSD_5_0:1.5.0.2
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.4.0.24
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@# @;


1.7
date	2015.10.23.04.39.24;	author guenther;	state Exp;
branches;
next	1.6;
commitid	OrVNAJkzchWBNbO0;

1.6
date	2015.10.04.06.34.35;	author guenther;	state Exp;
branches;
next	1.5;
commitid	wiFOoSuoYRELTjdU;

1.5
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.09.16.14.02;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.07.13.48.27;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.31.00;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merge the sigaction() and sigprocmask() overloads/wrappers from libpthread
into libc, and move pthread_sigmask() as well (just a trivial wrapper).
This provides consistent handling of SIGTHR between single- and multi-threaded
programs and is a step in the merge of all the libpthread overloads, providing
some ASM and Makefile bits that the other wrappers will need.

ok deraadt@@ millert@@
@
text
@/*	$OpenBSD: sigpending.S,v 1.6 2015/10/04 06:34:35 guenther Exp $ */
/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"

FRAMESZ= MKFSIZ(1,1)
GPOFF= FRAMESZ-2*REGSZ

SYSLEAF(sigpending, FRAMESZ)
	PTR_SUBU sp, FRAMESZ
	SETUP_GP64(GPOFF, _HIDDEN(sigpending))
	.set	reorder
	li	v0, SYS_sigpending
	syscall
	bne	a3, zero, 1f
	sw	v0, 0(a0)
	move	v0, zero
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	j	ra
1:
	LA	t9, CERROR
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	jr	t9
SYSCALL_END(sigpending)
@


1.6
log
@Delete an inexplicable comment
@
text
@d1 1
a1 1
/*	$OpenBSD: sigpending.S,v 1.5 2011/04/04 12:42:39 guenther Exp $ */
d41 1
a41 1
	SETUP_GP64(GPOFF, sigpending)
d56 1
a56 1
SYSEND(sigpending)
@


1.5
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: sigpending.S,v 1.4 2005/08/07 16:40:15 espie Exp $ */
d43 1
a43 1
	li	v0, SYS_sigpending	# setlogin(name)
@


1.4
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d52 1
a52 1
	LA	t9, _C_LABEL(cerror)
@


1.3
log
@mips64 is now going ABI64 and shared library support!
String functions need some optimization/rewrite to take full advantage.
@
text
@d1 1
a34 5

#if defined(SYSLIBC_SCCS)
	.text
	.asciz "$OpenBSD: sigpending.S,v 1.2 2004/09/07 13:48:27 pefo Exp $"
#endif /* SYSLIBC_SCCS */
@


1.2
log
@32 -> 64 bit cleanups but no optimizations yet
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: sigpending.S,v 1.1 2004/08/11 17:31:00 pefo Exp $"
d40 6
a45 1
SYSLEAF(sigpending)
d52 2
d57 2
@


1.1
log
@Move mips to mips64
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: sigpending.S,v 1.6 2003/06/02 20:18:32 millert Exp $"
d49 1
a49 1
	la	t9, _C_LABEL(cerror)
@

