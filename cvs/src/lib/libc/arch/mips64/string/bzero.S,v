head	1.6;
access;
symbols
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.26
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.18
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.22
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.20
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.16
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.14
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.12
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.10
	OPENBSD_5_0:1.5.0.8
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.6
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.4
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.2
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3;
locks; strict;
comment	@# @;


1.6
date	2015.08.31.02.53.56;	author guenther;	state Exp;
branches;
next	1.5;
commitid	lTMF8Y3C9fQGd6jQ;

1.5
date	2009.12.11.05.10.17;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.09.16.14.02;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	2004.08.15.13.53.43;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.30.59;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@/*	$OpenBSD: bzero.S,v 1.5 2009/12/11 05:10:17 miod Exp $ */
/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"

/* bzero(s1, n) */

LEAF(bzero, 0)
	.set	noreorder
	blt	a1, 12, smallclr	# small amount to clear?
	dsubu	a3, zero, a0		# compute # bytes to word align address
	and	a3, a3, 3
	beq	a3, zero, 1f		# skip if word aligned
	dsubu	a1, a1, a3		# subtract from remaining count
	SWHI	zero, 0(a0)		# clear 1, 2, or 3 bytes to align
	daddu	a0, a0, a3
1:
	and	v0, a1, 3		# compute number of words left
	dsubu	a3, a1, v0
	move	a1, v0
	daddu	a3, a3, a0		# compute ending address
2:
	daddu	a0, a0, 4		# clear words
	bne	a0, a3, 2b		#   unrolling loop does not help
	sw	zero, -4(a0)		#   since we are limited by memory speed
smallclr:
	ble	a1, zero, 2f
	daddu	a3, a1, a0		# compute ending address
1:
	daddu	a0, a0, 1		# clear bytes
	bne	a0, a3, 1b
	sb	zero, -1(a0)
2:
	j	ra
	nop
END_WEAK(bzero)
@


1.5
log
@More changes to avoid truncating 64 bit pointers to 32 bits and sign-extending
them; allows userland with stack beyond 2GB to run.
@
text
@d1 1
a1 1
/*	$OpenBSD: bzero.S,v 1.4 2005/08/07 16:40:15 espie Exp $ */
d34 1
a34 1
#include <machine/asm.h>
d66 1
a66 1
END(bzero)
@


1.4
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d41 1
a41 1
	subu	a3, zero, a0		# compute # bytes to word align address
d44 1
a44 1
	subu	a1, a1, a3		# subtract from remaining count
d46 1
a46 1
	addu	a0, a0, a3
d49 1
a49 1
	subu	a3, a1, v0
d51 1
a51 1
	addu	a3, a3, a0		# compute ending address
d53 1
a53 1
	addu	a0, a0, 4		# clear words
d58 1
a58 1
	addu	a3, a1, a0		# compute ending address
d60 1
a60 1
	addu	a0, a0, 1		# clear bytes
@


1.3
log
@mips64 is now going ABI64 and shared library support!
String functions need some optimization/rewrite to take full advantage.
@
text
@d1 1
a34 5

#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD: bzero.S,v 1.2 2004/08/15 13:53:43 pefo Exp $"
#endif /* LIBC_SCCS */
@


1.2
log
@remove single '
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: bzero.S,v 1.1 2004/08/11 17:30:59 pefo Exp $"
d42 1
a42 1
LEAF(bzero)
@


1.1
log
@Move mips to mips64
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: bzero.S,v 1.6 2003/06/02 20:18:32 millert Exp $"
d58 1
a58 1
	bne	a0, a3, 2b		#   unrolling loop doesn't help
@

