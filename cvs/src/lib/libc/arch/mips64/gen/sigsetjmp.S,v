head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.6
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.5.0.42
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.44
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.36
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.40
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.38
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.34
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2016.05.08.21.50.58;	author guenther;	state Exp;
branches;
next	1.5;
commitid	rz0miRqnsJbYww3f;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2004.09.10.12.45.35;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	2004.09.09.16.14.02;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.07.13.48.26;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.30.59;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Implement longjmp directly and not on top of sigreturn.
Use the hidden symbols for internal calls to abort, longjmp, etc

ok deraadt@@
@
text
@/* $OpenBSD: sigsetjmp.S,v 1.5 2005/08/07 16:40:15 espie Exp $ */
/*-
 * Copyright (c) 1991, 1993, 1995,
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Havard Eidnes.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <machine/asm.h>
#include <machine/regnum.h>
#include <machine/setjmp.h>

/*
 * trampolines for sigsetjmp and  siglongjmp save and restore mask.
 *
 */
FRAMESZ= MKFSIZ(1,1)
GPOFF= FRAMESZ-2*REGSZ

LEAF(sigsetjmp, FRAMESZ)
	PTR_SUBU sp, FRAMESZ
	SETUP_GP64(GPOFF, sigsetjmp)
	.set	reorder
	REG_S	a1, (_JBLEN*REGSZ)(a0)		# save "savemask"
	bne	a1, 0x0, 1f			# do saving of signal mask?
	LA	t9, _libc__setjmp
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	jr t9

1:	LA	t9, _libc_setjmp
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	jr t9
END(sigsetjmp)

LEAF(siglongjmp, FRAMESZ)
	PTR_SUBU sp, FRAMESZ
	SETUP_GP64(GPOFF, siglongjmp)
	.set	reorder
	REG_L	t0, (_JBLEN*REGSZ)(a0)		# get "savemask"
	bne	t0, 0x0, 1f			# restore signal mask?
	LA	t9, _libc__longjmp
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	jr	t9
1:
	LA	t9, _libc_longjmp
	RESTORE_GP64
	PTR_ADDU sp, FRAMESZ
	jr	t9
END(siglongjmp)
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d51 1
a51 1
	LA	t9, _setjmp
d56 1
a56 1
1:	LA	t9, setjmp
d68 1
a68 1
	LA	t9, _longjmp
d73 1
a73 1
	LA	t9, longjmp
@


1.4
log
@setjmp now passes all regress tests.
@
text
@d1 1
a36 5

#if defined(LIBC_SCCS) 
	.text
	.asciz "$OpenBSD: sigsetjmp.S,v 1.3 2004/09/09 16:14:02 pefo Exp $"
#endif /* LIBC_SCCS */
@


1.3
log
@mips64 is now going ABI64 and shared library support!
String functions need some optimization/rewrite to take full advantage.
@
text
@d39 1
a39 1
	.asciz "$OpenBSD: sigsetjmp.S,v 1.2 2004/09/07 13:48:26 pefo Exp $"
d77 1
a79 1
	LA	t9, longjmp
@


1.2
log
@32 -> 64 bit cleanups but no optimizations yet
@
text
@d39 1
a39 1
	.asciz "$OpenBSD: sigsetjmp.S,v 1.1 2004/08/11 17:30:59 pefo Exp $"
d46 6
a51 1
LEAF(sigsetjmp)
d56 2
d61 2
d66 3
a68 1
LEAF(siglongjmp)
d73 2
d76 4
a79 1
1:	LA	t9, longjmp
@


1.1
log
@Move mips to mips64
@
text
@d39 1
a39 1
	.asciz "$OpenBSD: sigsetjmp.S,v 1.6 2003/06/02 20:18:31 millert Exp $"
d50 1
a50 1
	la	t9, _setjmp
d53 1
a53 1
1:	la	t9, setjmp
d61 1
a61 1
	la	t9, _longjmp
d63 1
a63 1
1:	la	t9, longjmp
@

