head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.24
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.22
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.18
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.20
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.12
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.16
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.14
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.10
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.8
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.6
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.4
	OPENBSD_5_0:1.7.0.2
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.5.0.10
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2011.07.08.22.28.33;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2011.07.08.19.21.41;	author martynas;	state dead;
branches;
next	1.5;

1.5
date	2008.12.09.20.54.02;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.09.20.32.06;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.09.16.14.02;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.30.59;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@/* $OpenBSD: fabs.S,v 1.5 2008/12/09 20:54:02 martynas Exp $ */
/*-
 * Copyright (c) 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <machine/asm.h>

/*
 * fabs(x)
 *	double x;
 *
 * Return absolute value of x.
 */
LEAF(fabs, 0)
	.set	noreorder
	j	ra
	abs.d	$f0, $f12		# compute absolute value of x
END(fabs)
@


1.6
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@@


1.5
log
@these were not needed
@
text
@d1 1
a1 1
/* $OpenBSD: fabs.S,v 1.4 2008/12/09 20:32:06 martynas Exp $ */
@


1.4
log
@ditto frexpl and ldexpl
@
text
@d1 1
a1 1
/* $OpenBSD: fabs.S,v 1.3 2005/08/07 16:40:15 espie Exp $ */
a41 1
WEAK_ALIAS(fabsl, fabs)
@


1.3
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 1
@


1.2
log
@mips64 is now going ABI64 and shared library support!
String functions need some optimization/rewrite to take full advantage.
@
text
@d1 1
a34 5

#if defined(LIBC_SCCS) 
	.text
	.asciz "$OpenBSD: fabs.S,v 1.1 2004/08/11 17:30:59 pefo Exp $"
#endif /* LIBC_SCCS */
@


1.1
log
@Move mips to mips64
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: fabs.S,v 1.5 2003/06/02 20:18:31 millert Exp $"
d46 1
a46 1
LEAF(fabs)
@

