head	1.7;
access;
symbols
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.12
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.16
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.14
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.10
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.8
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.22
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.20
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.16
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.18
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2;
locks; strict;
comment	@# @;


1.7
date	2016.05.11.21.52.49;	author deraadt;	state dead;
branches;
next	1.6;
commitid	VpgRpYXqYSJy4P7J;

1.6
date	2016.05.07.19.05.21;	author guenther;	state Exp;
branches;
next	1.5;
commitid	d9R7VGw9CHTkwXE1;

1.5
date	2015.03.31.04.32.01;	author guenther;	state Exp;
branches;
next	1.4;
commitid	4lHzpIZZxMqyyel4;

1.4
date	2011.04.21.14.12.20;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2006.01.05.22.19.49;	author kettenis;	state Exp;
branches;
next	1.2;

1.2
date	2005.08.07.16.40.14;	author espie;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.01.10.54.27;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.7
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@/*	$OpenBSD: Ovfork.S,v 1.6 2016/05/07 19:05:21 guenther Exp $	*/

/*
 * Copyright (c) 1999,2002 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

#include "SYS.h"

SYSENTRY_HIDDEN(vfork)
	.import errno, data
	copy	%rp, arg7
	ldil	L%SYSCALLGATE, %r1
	ble	4(%sr7, %r1)
	ldi	__CONCAT(SYS_,vfork), arg4
	comb,==,tr %r0, arg4, 1f
	copy	arg7, %rp
	/* set errno */
	mfctl	%cr27, %r1
	stw	%t1, TCB_OFFSET_ERRNO(%r1)
	ldi	-1, %ret0
1:	bv	%r0(%rp)
	nop
SYSEXIT_HIDDEN(vfork)

	.end
@


1.6
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: Ovfork.S,v 1.5 2015/03/31 04:32:01 guenther Exp $	*/
@


1.5
log
@Simplify fork/vfork logic: the kernel has handled returning zero in the child
for a long time, so there's no need to test the second return register here
in the asm stub.

ok and testing of many archs by krw@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: Ovfork.S,v 1.4 2011/04/21 14:12:20 jsing Exp $	*/
d31 1
a31 1
SYSENTRY(vfork)
d37 1
a37 2
	.import	__cerror, code
	comb,<>	%r0, arg4, __cerror
d39 5
a43 1
	bv	%r0(%rp)
d45 1
a45 1
SYSEXIT(vfork)
@


1.4
log
@Make this code actually compile on hppa64.

ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: Ovfork.S,v 1.2 2005/08/07 16:40:14 espie Exp $	*/
a39 1
	addi	-1, %ret1, %ret1
d41 1
a41 1
	and	%ret1, %ret0, %ret0
@


1.3
log
@System call stubs don't have a frame of their own, so use EMTRY_LEAF instead
of ENTRY.  This avoids emitting bogus unwind entries, which makes gdb a lot
happier.
ok mickey@@
@
text
@d33 4
a36 4
	copy	rp, t4
	ldil	L%SYSCALLGATE, r1
	ble	4(sr7, r1)
	ldi	__CONCAT(SYS_,vfork), t1
d38 5
a42 5
	comb,<>	r0, t1, __cerror
	copy	t4, rp
	addi	-1, ret1, ret1
	bv	r0(rp)
	and	ret1, ret0, ret0
@


1.2
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD: Ovfork.S,v 1.1 2005/04/01 10:54:27 mickey Exp $	*/
d31 1
a31 1
SYSENTRY(vfork,0)
@


1.1
log
@hppa64 bits cloned form hppa
@
text
@d1 1
a1 1
/*	$OpenBSD: Ovfork.S,v 1.11 2004/05/25 20:44:50 mickey Exp $	*/
a29 6

#ifdef SYSLIBC_SCCS
	.text
	.asciz "$OpenBSD: Ovfork.S,v 1.11 2004/05/25 20:44:50 mickey Exp $"
	.align	4
#endif
@

