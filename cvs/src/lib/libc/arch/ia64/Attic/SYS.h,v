head	1.3;
access;
symbols
	OPENBSD_5_6:1.2.0.10
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2014.11.22.07.17.50;	author deraadt;	state dead;
branches;
next	1.2;
commitid	7NI3vm6G3k7uyGdu;

1.2
date	2012.12.05.23.19.58;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2011.07.04.05.38.42;	author pirofti;	state Exp;
branches;
next	;


desc
@@


1.3
log
@mop up a barely started project... getting in the way of grepping the tree!
@
text
@/* $NetBSD: SYS.h,v 1.1 2006/09/10 21:22:33 cherry Exp $ */

/*
 * Copyright (c) 1994, 1995 Carnegie-Mellon University.
 * All rights reserved.
 *
 * Author: Chris G. Demetriou
 * 
 * Permission to use, copy, modify and distribute this software and
 * its documentation is hereby granted, provided that both the copyright
 * notice and this permission notice appear in all copies of the
 * software, derivative works or modified versions, and any portions
 * thereof, and that both notices appear in supporting documentation.
 * 
 * CARNEGIE MELLON ALLOWS FREE USE OF THIS SOFTWARE IN ITS "AS IS" 
 * CONDITION.  CARNEGIE MELLON DISCLAIMS ANY LIABILITY OF ANY KIND 
 * FOR ANY DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE.
 * 
 * Carnegie Mellon requests users of this software to return to
 *
 *  Software Distribution Coordinator  or  Software.Distribution@@CS.CMU.EDU
 *  School of Computer Science
 *  Carnegie Mellon University
 *  Pittsburgh PA 15213-3890
 *
 * any improvements or extensions that they make and grant Carnegie the
 * rights to redistribute these changes.
 */

#include <sys/types.h>

#include <machine/asm.h>
#include <sys/syscall.h>

#define RET { br.ret.sptk.few rp;; }

#define CALLSYS_ERROR(name)					\
	CALLSYS_NOERROR(name)					\
{	cmp.ne  p6,p0=r0,r10;					\
(p6)    br.cond.sptk.few __cerror ;; }

#define	SYSCALL(name)						\
ENTRY(name,0);				/* XXX # of args? */	\
	CALLSYS_ERROR(name)

#define	SYSCALL_NOERROR(name)					\
ENTRY(name,0);				/* XXX # of args? */	\
	CALLSYS_NOERROR(name)

#define	PSEUDO(label,name)					\
ENTRY(label,0);				/* XXX # of args? */	\
	CALLSYS_ERROR(name);					\
	RET;							\
END(label);

#define	PSEUDO_NOERROR(label,name)				\
ENTRY(label,0);				/* XXX # of args? */	\
	CALLSYS_NOERROR(name);					\
	RET;							\
END(label);

#define RSYSCALL(name)						\
	SYSCALL(name);						\
	RET;							\
END(name)

#define RSYSCALL_NOERROR(name)					\
	SYSCALL_NOERROR(name);					\
	RET;							\
END(name)

#define	WSYSCALL(weak,strong)					\
	WEAK_ALIAS(weak,strong);				\
	PSEUDO(strong,weak)
@


1.2
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@@


1.1
log
@Add ia64 libc support.
@
text
@d30 1
a30 1
#include <sys/cdefs.h>
@

