head	1.8;
access;
symbols
	OPENBSD_6_0:1.7.0.16
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.12
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.14
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.6
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.10
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.09.01.09.26.04;	author tedu;	state dead;
branches;
next	1.7;
commitid	G8ZQXbpsm4TQ3H72;

1.7
date	2012.09.04.19.08.15;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2012.08.22.17.19.35;	author pascal;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.04.22.19.57.57;	author jason;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.05.15.29.28;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.17.45;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.8
log
@retire the sparc library code
@
text
@/* $OpenBSD: sigsetjmp.S,v 1.7 2012/09/04 19:08:15 deraadt Exp $ */
/*
 * Copyright (c) 1995 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include "SYS.h"

#ifdef __PIC__

ENTRY(sigsetjmp)
	PIC_PROLOGUE(%g1,%g2)	! %g1 = _GLOBAL_OFFSET_TABLE
	cmp %o1,0
	st %o1,[%o0+40]		! jmpbuf[JBLEN]
#if __PIC__ == 1
	bne,a 1f
	 ld [%g1+_C_LABEL(setjmp)], %g1	! if (%o1 != 0) goto setjmp;
	ld [%g1+_C_LABEL(_setjmp)], %g1	! else goto _setjmp;
1:
#else /* __PIC__ == 2 */
	be 1f
	 sethi	%hi(_C_LABEL(setjmp)), %g2	! if (%o1 != 0) goto setjmp;
	or	%g2, %lo(_C_LABEL(setjmp)), %g2
	ba,a 2f
1:	sethi	%hi(_C_LABEL(_setjmp)), %g2	! else goto _setjmp;
	or	%g2, %lo(_C_LABEL(_setjmp)), %g2
2:	ld	[%g1 + %g2], %g1
#endif
	jmp %g1
	 nop

ENTRY(siglongjmp)
	PIC_PROLOGUE(%g1,%g2)	! %g1 = _GLOBAL_OFFSET_TABLE
	ld [%o0+40],%g2		! jmpbuf[JBLEN]
	cmp %g2,0
#if __PIC__ == 1
	bne,a 1f
	 ld [%g1+_C_LABEL(longjmp)], %g1	! if (%g2 != 0) goto longjmp;
	ld [%g1+_C_LABEL(_longjmp)], %g1	! else goto _longjmp;
1:
#else /* __PIC__ == 2 */
	be 1f
	 sethi	%hi(_C_LABEL(longjmp)), %g2	! if (%g2 != 0) goto longjmp;
	or	%g2, %lo(_C_LABEL(longjmp)), %g2
	ba,a 2f
1:	sethi	%hi(_C_LABEL(_longjmp)), %g2	! else goto _longjmp;
	or	%g2, %lo(_C_LABEL(_longjmp)), %g2
2:	ld	[%g1 + %g2], %g1
#endif
	jmp %g1
	 nop
	unimp 0

#else /* PIC */

ENTRY(sigsetjmp)
	cmp %o1,0
	be _C_LABEL(_setjmp)
	 st %o1,[%o0+40]		! jmpbuf[JBLEN]
	nop
	ba,a _C_LABEL(setjmp)
	unimp 0

ENTRY(siglongjmp)
	ld [%o0+40],%g1
	cmp %g1,0
	be _C_LABEL(_longjmp)
	 nop
	ba,a _C_LABEL(_longjmp)
	unimp 0

#endif /* PIC */
@


1.7
log
@Add support for -fPIC
ok kettenis
@
text
@d1 1
a1 1
/* $OpenBSD: sigsetjmp.S,v 1.6 2012/08/22 17:19:35 pascal Exp $ */
@


1.6
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/* $OpenBSD: sigsetjmp.S,v 1.5 2005/08/07 16:40:15 espie Exp $ */
d41 1
d43 1
a43 1
	ld [%g1+_C_LABEL(setjmp)], %g1	! if (%o1 != 0) goto setjmp;
d46 9
d62 1
d64 2
a65 2
	ld [%g1+_C_LABEL(longjmp)], %g1	! if (%g2 != 0) goto longjmp;
	ld [%g1+_C_LABEL(_longjmp)], %g1 ! else goto _longjmp;
d67 9
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d35 1
a35 1
#ifdef PIC
@


1.4
log
@Indent delay slot insns
@
text
@d1 1
a31 5

#if defined(LIBC_SCCS) 
	.text
	.asciz "$OpenBSD: sigsetjmp.S,v 1.3 2002/08/05 15:29:28 art Exp $"
#endif /* LIBC_SCCS */
@


1.3
log
@_C_LABEL where needed.
@
text
@d34 1
a34 1
	.asciz "$OpenBSD: sigsetjmp.S,v 1.2 1996/08/19 08:17:45 tholo Exp $"
d50 1
a50 1
	nop
d61 1
a61 1
	nop
d69 1
a69 1
	st %o1,[%o0+40]		! jmpbuf[JBLEN]
d78 1
a78 1
	nop
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d34 1
a34 1
	.asciz "$OpenBSD$"
d46 2
a47 2
	ld [%g1+_setjmp], %g1	! if (%o1 != 0) goto _setjmp;
	ld [%g1+__setjmp], %g1	! else goto __setjmp;
d57 2
a58 2
	ld [%g1+_longjmp], %g1	! if (%g2 != 0) goto _longjmp;
	ld [%g1+__longjmp], %g1	! else goto __longjmp;
d68 1
a68 1
	be __setjmp
d71 1
a71 1
	ba,a _setjmp
d77 1
a77 1
	be __longjmp
d79 1
a79 1
	ba,a _longjmp
@


1.1
log
@Initial revision
@
text
@a0 1
/*	$NetBSD: sigsetjmp.S,v 1.2 1995/03/11 20:28:59 pk Exp $	*/
d31 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
