head	1.9;
access;
symbols
	OPENBSD_5_9:1.8.0.12
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.14
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.10
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.8
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.4
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.2
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	OPENBSD_5_0:1.6.0.2
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.9
date	2016.05.07.19.05.22;	author guenther;	state dead;
branches;
next	1.8;
commitid	d9R7VGw9CHTkwXE1;

1.8
date	2012.09.04.19.08.15;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2012.08.22.17.19.35;	author pascal;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.20.18.32;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.08.11.23.01.30;	author art;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.18.02;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@/*	$OpenBSD: cerror.S,v 1.8 2012/09/04 19:08:15 deraadt Exp $ */
/*
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This software was developed by the Computer Systems Engineering group
 * at Lawrence Berkeley Laboratory under DARPA contract BG 91-66 and
 * contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "DEFS.h"
#include "SYS.h"

	.globl	_C_LABEL(errno)

WEAK_ALIAS(__cerror, ___cerror)

FUNC(_C_LABEL(___cerror))
#ifdef __PIC__
#if __PIC__ == 1
	ld	[%g1 + _C_LABEL(errno)], %g1
	st	%o0, [%g1]
#else /* __PIC__ == 2 */
	sethi	%hi(_C_LABEL(errno)), %g2
	or	%g2, %lo(_C_LABEL(errno)), %g2
	ld	[%g1 + %g2], %g1
	st	%o0, [%g1]
#endif
#else
	sethi	%hi(_C_LABEL(errno)), %g1
	st	%o0, [%g1 + %lo(_C_LABEL(errno))]
#endif
	mov	-1, %o0
	retl
	 mov	-1, %o1
@


1.8
log
@Add support for -fPIC
ok kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.7 2012/08/22 17:19:35 pascal Exp $ */
@


1.7
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.6 2011/04/04 12:42:39 guenther Exp $ */
d44 1
d47 6
@


1.6
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.5 2005/08/07 16:40:15 espie Exp $ */
d43 1
a43 1
#ifdef PIC
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d39 4
a43 1
FUNC(_C_LABEL(__cerror))
a45 3
	mov	-1, %o0
	retl
	 mov	-1, %o1
a46 1
FUNC(_C_LABEL(__cerror))
d49 1
a52 1
#endif
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a33 5

#if defined(SYSLIBC_SCCS) 
	.text
	.asciz "$OpenBSD: cerror.S,v 1.3 2002/08/11 23:01:30 art Exp $"
#endif /* SYSLIBC_SCCS */
@


1.3
log
@Two touches to make this work with ELF.
 - use _C_LABEL(__cerror) and not cerror to avoid polluting the name space.
 - Use weak symbols for libc_r syscalls.
@
text
@d17 1
a17 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d36 1
a36 1
	.asciz "$OpenBSD: cerror.S,v 1.2 1996/08/19 08:18:02 tholo Exp $"
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d40 1
a40 1
	.asciz "$OpenBSD$"
d46 1
a46 1
	.globl	_errno
d48 2
a49 2
FUNC(cerror)
	ld	[%g1 + _errno], %g1
d55 3
a57 3
FUNC(cerror)
	sethi	%hi(_errno), %g1
	st	%o0, [%g1 + %lo(_errno)]
@


1.1
log
@Initial revision
@
text
@a35 3
 *
 * from: Header: cerror.s,v 1.3 92/07/02 04:17:59 torek Exp
 * $Id: cerror.S,v 1.2 1994/02/10 20:15:57 pk Exp $
d38 4
a41 3
#if defined(LIBC_SCCS) && !defined(lint)
	.asciz "@@(#)cerror.s	8.1 (Berkeley) 6/4/93"
#endif /* LIBC_SCCS and not lint */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
