head	1.15;
access;
symbols
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.6
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.4
	OPENBSD_5_0:1.12.0.2
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.11.0.10
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.8
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.4
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.6
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.2
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.12
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.10
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.8
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.8
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.6
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.4
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.2
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.14;
commitid	OSDG2O3Cgeifnf1W;

1.14
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.13;

1.13
date	2012.12.05.23.19.59;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2011.07.02.19.27.34;	author martynas;	state Exp;
branches;
next	1.11;

1.11
date	2008.12.12.23.44.37;	author martynas;	state Exp;
branches;
next	1.10;

1.10
date	2008.12.12.18.53.06;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.10.01.15.02;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.09.19.52.34;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2008.07.24.09.31.07;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.18.33;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2001.09.10.22.38.11;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.18.26;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.02.24.09.12.51;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: isinf.c,v 1.14 2013/03/28 18:09:38 martynas Exp $	*/

/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

int
__isinf(double d)
{
	return(0);
}

int
__isinff(float f)
{
	return(0);
}

__strong_alias(__isinfl, __isinf);

/*
 * 3BSD compatibility aliases.
 */
__strong_alias(isinf, __isinf);
__strong_alias(isinff, __isinff);
@


1.14
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.13 2012/12/05 23:19:59 deraadt Exp $	*/
@


1.13
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.12 2011/07/02 19:27:34 martynas Exp $	*/
a31 2
/* LINTLIBRARY */

a33 1
/* ARGSUSED */
a39 1
/* ARGSUSED */
d46 1
a46 6
#ifdef	lint
/* PROTOLIB1 */
int __isinfl(long double);
#else	/* lint */
__weak_alias(__isinfl, __isinf);
#endif	/* lint */
d51 2
a52 2
__weak_alias(isinf, __isinf);
__weak_alias(isinff, __isinff);
@


1.12
log
@Trick lint into recording the right prototypes in the llib-lc.ln
database on the vax, similarly like has been done in gen.
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.11 2008/12/12 23:44:37 martynas Exp $	*/
d34 1
a34 1
#include <sys/cdefs.h>
@


1.11
log
@__isinff and __isnanf
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.10 2008/12/12 18:53:06 martynas Exp $	*/
d32 2
d50 4
a53 1
#ifdef __weak_alias
d55 1
a55 1
#endif /* __weak_alias */
a59 1
#ifdef __weak_alias
a61 1
#endif /* __weak_alias */
@


1.10
log
@do the same as was done in mi version:  do not include math.h, since isinf,
and isnan would expand to macros and compatibility aliases won't work
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.9 2008/12/10 01:15:02 martynas Exp $	*/
d43 1
a43 1
isinff(float f)
@


1.9
log
@use sys/cdefs.h;  pointed out by theo
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.8 2008/12/09 19:52:34 martynas Exp $	*/
a32 1
#include <math.h>
@


1.8
log
@- add long double signbit
- make long double versions weak aliases to double versions,
on archs where long doubles are 64 bits
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- bump major
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.7 2008/07/24 09:31:07 martynas Exp $	*/
d32 1
a32 1
#include <machine/cdefs.h>
@


1.7
log
@- move isinf, isnan dups to gen, since most is ieee 754
- is{inf,nan} should be macros for real-floating, so rename to
__is{inf,nan}, per C99
- implement C99 __fpclassify(), __fpclassifyf(), __isfinite(),
__isfinitef(), __isnormal(), __isnormalf(), __signbit(), __signbitf()
- long functions added, but not yet enabled, till ieee.h is fixed
- implement vax equivalents of the functions
- reimplement isinff, isnanf in a better way, and move to libc
- add qnan bytes for all archs
- bump major
man pages will follow
ok millert@@.  arm bits looked over by drahn@@
discussed w/ theo, who showed the right direction, to put these
functions in libc
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.6 2005/08/07 16:40:15 espie Exp $	*/
d32 3
d48 12
@


1.6
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.5 2003/06/02 20:18:33 millert Exp $	*/
d34 1
a34 2
isnan(d)
	double d;
d41 1
a41 2
isinf(d)
	double d;
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: isinf.c,v 1.4 2001/09/10 22:38:11 millert Exp $	*/
a30 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: isinf.c,v 1.4 2001/09/10 22:38:11 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.4
log
@Use the LBL isnan() and isinf() on all platforms with ieee floating point.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d15 1
a15 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d33 1
a33 1
static char rcsid[] = "$OpenBSD: isinf.c,v 1.3 1996/08/19 08:18:26 tholo Exp $";
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 2
d37 1
a37 1
static char rcsid[] = "$OpenBSD: isinf.c,v 1.2 1996/02/05 04:31:42 jtc Exp $";
@


1.2
log
@From NetBSD: Add explicit return type
@
text
@d35 1
a35 2
/* static char sccsid[] = "@@(#)isinf.c	8.1 (Berkeley) 6/4/93"; */
static char rcsid[] = "$NetBSD: isinf.c,v 1.2 1996/02/05 04:31:42 jtc Exp $";
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
static char rcsid[] = "$NetBSD: isinf.c,v 1.1 1995/04/17 12:23:43 ragge Exp $";
d40 1
d48 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
