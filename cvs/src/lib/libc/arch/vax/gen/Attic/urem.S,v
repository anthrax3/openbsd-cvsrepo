head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.12
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.8
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.5.0.32
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.30
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.28
	OPENBSD_5_0:1.5.0.26
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.24
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.22
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.18
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.20
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.16
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.14
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.7
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.6;
commitid	OSDG2O3Cgeifnf1W;

1.6
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.20.18.33;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.18.07.29.04;	author bjc;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.18.34;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/* $OpenBSD: urem.S,v 1.6 2013/07/05 21:10:50 miod Exp $ */
/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Donn Seeley at UUNET Technologies, Inc.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "DEFS.h"

/*
 * Unsigned modulus, PCC flavor.
 * urem() takes an ordinary dividend/divisor pair;
 * aurem() takes a pointer to a dividend and an ordinary divisor.
 */

#define	DIVIDEND	4(%ap)
#define	DIVISOR		8(%ap)

#ifdef __ELF__
ASENTRY(__urem, R2)
#else
ASENTRY(urem,R2)
#endif
	movl	DIVISOR,%r2
	jlss	Leasy		# big divisor: settle by comparison
	movl	DIVIDEND,%r0
	jlss	Lhard		# big dividend: need extended division
	divl3	%r2,%r0,%r1	# small divisor and dividend: signed modulus
	mull2	%r2,%r1
	subl2	%r1,%r0
	ret
Lhard:
	clrl	%r1
	ediv	%r2,%r0,%r1,%r0
	ret
Leasy:
	subl3	%r2,DIVIDEND,%r0
	jcc	Ldifference	# if divisor goes in once, return difference
	movl	DIVIDEND,%r0	# if divisor is bigger, return dividend
Ldifference:
	ret

#ifdef __ELF__
ASENTRY(__aurem, R2|R3)
#else
ASENTRY(aurem,R2|R3)
#endif
	movl	DIVIDEND,%r3
	movl	DIVISOR,%r2
	jlss	La_easy		# big divisor: settle by comparison
	movl	(%r3),%r0
	jlss	La_hard		# big dividend: need extended division
	divl3	%r2,%r0,%r1	# small divisor and dividend: signed modulus
	mull2	%r2,%r1
	subl2	%r1,%r0
	movl	%r0,(%r3)	# leave the value of the assignment in r0
	ret
La_hard:
	clrl	%r1
	ediv	%r2,%r0,%r1,%r0
	movl	%r0,(%r3)
	ret
La_easy:
	subl3	%r2,(%r3),%r0
	jcs	La_dividend	# if divisor is bigger, leave dividend alone
	movl	%r0,(%r3)	# if divisor goes in once, store difference
	ret
La_dividend:
	movl	(%r3),%r0
	ret
@


1.6
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/* $OpenBSD: urem.S,v 1.5 2005/08/07 16:40:15 espie Exp $ */
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d42 2
a43 2
#define	DIVIDEND	4(ap)
#define	DIVISOR		8(ap)
d45 3
d49 2
a50 1
	movl	DIVISOR,r2
d52 1
a52 1
	movl	DIVIDEND,r0
d54 3
a56 3
	divl3	r2,r0,r1	# small divisor and dividend: signed modulus
	mull2	r2,r1
	subl2	r1,r0
d59 2
a60 2
	clrl	r1
	ediv	r2,r0,r1,r0
d63 1
a63 1
	subl3	r2,DIVIDEND,r0
d65 1
a65 1
	movl	DIVIDEND,r0	# if divisor is bigger, return dividend
d69 3
d73 3
a75 2
	movl	DIVIDEND,r3
	movl	DIVISOR,r2
d77 1
a77 1
	movl	(r3),r0
d79 4
a82 4
	divl3	r2,r0,r1	# small divisor and dividend: signed modulus
	mull2	r2,r1
	subl2	r1,r0
	movl	r0,(r3)		# leave the value of the assignment in r0
d85 3
a87 3
	clrl	r1
	ediv	r2,r0,r1,r0
	movl	r0,(r3)
d90 1
a90 1
	subl3	r2,(r3),r0
d92 1
a92 1
	movl	r0,(r3)		# if divisor goes in once, store difference
d95 1
a95 1
	movl	(r3),r0
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a32 5

#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD: urem.S,v 1.3 2001/03/18 07:29:04 bjc Exp $"
#endif /* LIBC_SCCS */
@


1.3
log
@Fix lots of register masks.
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d35 1
a35 1
	.asciz "$OpenBSD: urem.S,v 1.2 1996/08/19 08:18:34 tholo Exp $"
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d39 1
a39 1
	.asciz "$OpenBSD: urem.S,v 1.1 1995/04/17 12:23:48 ragge Exp $"
d53 1
a53 1
ASENTRY(urem,0)
d73 1
a73 1
ASENTRY(aurem,0)
@


1.1
log
@Initial revision
@
text
@d37 4
a40 4
#if defined(LIBC_SCCS) && !defined(lint)
	/* .asciz "@@(#)urem.s	8.1 (Berkeley) 6/4/93" */
	.asciz "$NetBSD: urem.S,v 1.1 1995/04/17 12:23:48 ragge Exp $"
#endif /* LIBC_SCCS and not lint */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
