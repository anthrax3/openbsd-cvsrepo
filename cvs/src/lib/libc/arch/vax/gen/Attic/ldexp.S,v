head	1.12;
access;
symbols
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.8.0.18
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.16
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.14
	OPENBSD_5_0:1.8.0.12
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.10
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.8
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.4
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.5.0.12
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.10
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.12
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.11;
commitid	OSDG2O3Cgeifnf1W;

1.11
date	2015.10.27.05.54.49;	author guenther;	state Exp;
branches;
next	1.10;
commitid	GqevjOlUxm0Irj52;

1.10
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.10.08.26.21;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.09.20.32.06;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2008.05.21.20.39.32;	author miod;	state Exp;
branches;
next	1.5;

1.5
date	2005.08.07.16.40.15;	author espie;	state Exp;
branches;
next	1.4;

1.4
date	2003.06.02.20.18.33;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.03.18.07.29.04;	author bjc;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.18.27;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.43;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.12
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/* $OpenBSD: ldexp.S,v 1.11 2015/10/27 05:54:49 guenther Exp $ */
/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * double ldexp (value, exp)
 * double value;
 * int exp;
 *
 * Ldexp returns value*2**exp, if that result is in range.
 * If underflow occurs, it returns zero.  If overflow occurs,
 * it returns a value of appropriate sign and largest
 * possible magnitude.  In case of either overflow or underflow,
 * errno is set to ERANGE.  Note that errno is not modified if
 * no error occurs.
 */

#include "DEFS.h"

/*
 * don't include errno.h, ANSI C says it defines errno.
 *
 * #include <errno.h>
 */
#define	ERANGE	34

	.globl	_C_LABEL(errno)

STRONG_ALIAS(ldexpl,ldexp)
ENTRY(ldexp, R2)
	movd	4(%ap),%r0	/* fetch "value" */
	extzv	$7,$8,%r0,%r2	/* r2 := biased exponent */
	jeql	1f		/* if zero, done */

	addl2	12(%ap),%r2	/* r2 := new biased exponent */
	jleq	2f		/* if <= 0, underflow */
	cmpl	%r2,$256	/* otherwise check if too big */
	jgeq	3f		/* jump if overflow */
	insv	%r2,$7,$8,%r0	/* put exponent back in result */
1:
	ret
2:
	clrd	%r0
	jbr	1f
3:
	movd	huge,%r0	/* largest possible floating magnitude */
	jbc	$15,4(%ap),1f	/* jump if argument was positive */
	mnegd	%r0,%r0		/* if arg < 0, make result negative */
1:
	movl	$ ERANGE,_C_LABEL(errno)
	ret
END_STRONG(ldexp);

	.data
huge:	.word	0x7fff		/* the largest number that can */
	.word	0xffff		/*   be represented in a long floating */
	.word	0xffff		/*   number.  This is given in hex in order */
	.word	0xffff		/*   to avoid floating conversions */
@


1.11
log
@Wrap the remaining math functions in libc: __fpclassify*(), __flt_rounds(),
and ldexp().

ok millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.10 2013/07/05 21:10:50 miod Exp $ */
@


1.10
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.9 2013/03/28 18:09:38 martynas Exp $ */
d78 1
@


1.9
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.8 2008/12/10 08:26:21 deraadt Exp $ */
d57 2
a58 2
	movd	4(ap),r0	/* fetch "value" */
	extzv	$7,$8,r0,r2	/* r2 := biased exponent */
d61 1
a61 1
	addl2	12(ap),r2	/* r2 := new biased exponent */
d63 1
a63 1
	cmpl	r2,$256		/* otherwise check if too big */
d65 1
a65 1
	insv	r2,$7,$8,r0	/* put exponent back in result */
d69 1
a69 1
	clrd	r0
d72 3
a74 3
	movd	huge,r0		/* largest possible floating magnitude */
	jbc	$15,4(ap),1f	/* jump if argument was positive */
	mnegd	r0,r0		/* if arg < 0, make result negative */
@


1.8
log
@no spaces allowed in the macro arguments.  completely insanity!
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.7 2008/12/09 20:32:06 martynas Exp $ */
d55 1
a55 1
WEAK_ALIAS(ldexpl,ldexp)
@


1.7
log
@ditto frexpl and ldexpl
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.6 2008/05/21 20:39:32 miod Exp $ */
d55 1
a55 1
WEAK_ALIAS(ldexpl, ldexp)
@


1.6
log
@Use _C_LABEL when appropriate.
@
text
@d1 1
a1 1
/* $OpenBSD: ldexp.S,v 1.5 2005/08/07 16:40:15 espie Exp $ */
d55 1
@


1.5
log
@zap rcsid.
okay deraadt@@ (tested them all)
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d53 1
a53 1
	.globl	_errno
d75 1
a75 1
	movl	$ ERANGE,_errno
@


1.4
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a29 5

#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD: ldexp.S,v 1.3 2001/03/18 07:29:04 bjc Exp $"
#endif /* LIBC_SCCS */
@


1.3
log
@Fix lots of register masks.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d32 1
a32 1
	.asciz "$OpenBSD: ldexp.S,v 1.2 1996/08/19 08:18:27 tholo Exp $"
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d36 1
a36 1
	.asciz "$OpenBSD: ldexp.S,v 1.2 1995/06/01 01:11:41 ragge Exp $"
d63 1
a63 1
ENTRY(ldexp, 0)
@


1.1
log
@Initial revision
@
text
@d34 4
a37 4
#if defined(LIBC_SCCS) && !defined(lint)
	/*.asciz "@@(#)ldexp.s	8.1 (Berkeley) 6/4/93" */
	.asciz "$NetBSD: ldexp.S,v 1.2 1995/06/01 01:11:41 ragge Exp $"
#endif /* LIBC_SCCS and not lint */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
