head	1.5;
access;
symbols
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.4;
commitid	OSDG2O3Cgeifnf1W;

1.4
date	2015.09.10.13.29.09;	author guenther;	state Exp;
branches;
next	1.3;
commitid	pYkLasgGFEsgLTME;

1.3
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2012.06.21.00.56.59;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2012.03.22.00.44.56;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.5
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: tfork_thread.S,v 1.4 2015/09/10 13:29:09 guenther Exp $	*/

/*
 * Copyright (c) 2005, Miodrag Vallat
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN
 * ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include "SYS.h"

/*
 * int __tfork_thread(const struct __tfork *param, size_t psize, void (*func)(void *), void *arg);
 */
ENTRY(__tfork_thread, R2|R3)
	/*
	 * Save thread creation arguments into registers.
	 */
	movl	12(%ap), %r2	/* func */
	movl	16(%ap), %r3	/* arg */

	__DO_SYSCALL(__tfork)
	jcs	9f

	cmpl	%r0, $0
	beql	1f

	/*
	 * In parent process: just return.
	 */
	ret

1:
	/*
	 * In child process: switch stack, invoke function, then exit.
	 * Note that since we can not pass a register to calls, we need
	 * to waste 4 bytes of stack in every thread.
	 */
	pushl	%r2		/* func */
	pushl	%r3		/* arg */
	calls	$1, *4(%sp)	/* func */

	__DO_SYSCALL(__threxit)

9:
	/*
	 * system call failed.
	 */
	jmp	_C_LABEL(__cerror)
END(__tfork_thread)
@


1.4
log
@Adds hidden _libc_FOO aliases for the system call stubs.
Stop generating _brk and _sbrk symbols: they've already been hidden.
Set the ELF symbol size on the syscall stubs.
Give the __{min,cur}brk symbols a size and type, and hide more jump labels.

alpha, arm, m88k, sh, sparc, and vax assistance miod@@
hppa assistance kettenis@@
ok deraadt@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tfork_thread.S,v 1.3 2013/07/05 21:10:50 miod Exp $	*/
@


1.3
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/*	$OpenBSD: tfork_thread.S,v 1.2 2012/06/21 00:56:59 guenther Exp $	*/
d68 1
@


1.2
log
@__tfork() needs to set the stack address of the new thread in the kernel,
so that it can't get a signal while still running on the parent thread's
stack.  Also, pass in sizeof(struct __tfork) to provide forward compat
when more members are added.  This is an ABI change, so switch syscall
numbers and bump lib majors this time.

ok deraadt@@ matthew@@
@
text
@d1 1
a1 1
/*	$OpenBSD: tfork_thread.S,v 1.1 2012/03/22 00:44:56 guenther Exp $	*/
d37 2
a38 2
	movl	12(ap), r2	/* func */
	movl	16(ap), r3	/* arg */
d43 1
a43 1
	cmpl	r0, $0
d57 3
a59 3
	pushl	r2		/* func */
	pushl	r3		/* arg */
	calls	$1, *4(sp)	/* func */
d67 1
a67 1
	jmp	_C_LABEL(_cerror)
@


1.1
log
@Move __tfork_thread() from rthreads (libpthread) to libc so that
it can be used for not-strictly-threading purposes

ok matthew@@ kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rfork_thread.S,v 1.5 2012/02/26 13:13:22 miod Exp $	*/
d31 1
a31 1
 * int __tfork_thread(const struct __tfork *param, void *stack, void (*func)(void *), void *arg);
d33 1
a33 1
ENTRY(__tfork_thread, R2|R3|R4)
d37 2
a38 3
	movl	8(ap), r2	/* stack */
	movl	12(ap), r3	/* func */
	movl	16(ap), r4	/* arg */
d57 2
a58 3
	movl	r2, sp		/* stack */
	pushl	r3		/* func */
	pushl	r4		/* arg */
@

