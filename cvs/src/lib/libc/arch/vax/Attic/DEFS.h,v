head	1.6;
access;
symbols
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.80
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.72
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.76
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.74
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.70
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.68
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.66
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.64
	OPENBSD_5_0:1.4.0.62
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.60
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.58
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.54
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.56
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.52
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.50
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.48
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.46
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.44
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.42
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.40
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.38
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.36
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.34
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.32
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.30
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.28
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.26
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.24
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.22
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.14
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.6
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.5;
commitid	OSDG2O3Cgeifnf1W;

1.5
date	2015.08.31.02.53.57;	author guenther;	state Exp;
branches;
next	1.4;
commitid	lTMF8Y3C9fQGd6jQ;

1.4
date	96.08.19.08.18.17;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.01.08.18.49.06;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.26.01;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.6
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: DEFS.h,v 1.5 2015/08/31 02:53:57 guenther Exp $ */

#include <machine/asm.h>

/*
 * We define a hidden alias with the prefix "_libc_" for each global symbol
 * that may be used internally.  By referencing _libc_x instead of x, other
 * parts of libc prevent overriding by the application and avoid unnecessary
 * relocations.
 */
#define _HIDDEN(x)		_libc_##x
#define _HIDDEN_ALIAS(x,y)			\
	STRONG_ALIAS(_HIDDEN(x),y);		\
	.hidden _HIDDEN(x)
#define _HIDDEN_FALIAS(x,y)			\
	_HIDDEN_ALIAS(x,y);			\
	.type _HIDDEN(x),@@function

/*
 * For functions implemented in ASM that aren't syscalls.
 *   END_STRONG(x)	Like DEF_STRONG() in C; for standard/reserved C names
 *   END_WEAK(x)	Like DEF_WEAK() in C; for non-ISO C names
 */
#define	END_STRONG(x)	END(x); _HIDDEN_FALIAS(x,x); END(_HIDDEN(x))
#define	END_WEAK(x)	END_STRONG(x); .weak x


@


1.5
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: DEFS.h,v 1.4 1996/08/19 08:18:17 tholo Exp $ */
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
/*	$OpenBSD: DEFS.h,v 1.3 1996/01/06 18:34:59 ragge Exp $ */
d4 23
@


1.3
log
@from ragge; Changed to only include <machine/asm.h>, as the other ports
@
text
@d1 1
a1 1
/*	$NetBSD: DEFS.h,v 1.3 1996/01/06 18:34:59 ragge Exp $ */
@


1.2
log
@from netbsd; cannot be sure cpp can handle x ## y
@
text
@d1 1
a1 35
/*	$NetBSD: DEFS.h,v 1.2 1995/12/09 13:28:38 ragge Exp $ */
/*
 * Copyright (c) 1982, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)DEFS.h	8.1 (Berkeley) 6/4/93
 */
d3 1
a3 42
#define R0	0x001
#define R1	0x002
#define R2	0x004
#define R3	0x008
#define R4	0x010
#define R5	0x020
#define R6	0x040
#define	R7 	0x080
#define	R8	0x100
#define	R9	0x200
#define	R10	0x400
#define	R11	0x800

#ifdef __STDC__
#ifdef PROF
#define	ENTRY(x, regs) \
	.globl _ ## x ## ; .align 2; _ ## x ## : .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#define	ASENTRY(x, regs) \
	.globl x; .align 2; x ## : .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#else
#define	ENTRY(x, regs) \
	.globl _ ## x; .align 2; _ ## x ## : .word regs
#define	ASENTRY(x, regs) \
	.globl x; .align 2; x ## : .word regs
#endif
# else
#ifdef PROF
#define ENTRY(x, regs) \
	.globl _/**/x; .align 2; _/**/x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#define ASENTRY(x, regs) \
	.globl x; .align 2; x: .word regs; \
	.data; 1:; .long 0; .text; moval 1b,r0; jsb mcount
#else
#define ENTRY(x, regs) \
	.globl _/**/x; .align 2; _/**/x: .word regs
#define ASENTRY(x, regs) \
	.globl x; .align 2; x: .word regs
#endif
#endif
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: DEFS.h,v 1.1 1995/04/17 12:23:33 ragge Exp $ */
d50 1
d64 16
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
