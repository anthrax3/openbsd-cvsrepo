head	1.4;
access;
symbols
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.2.0.4
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2016.03.09.16.28.46;	author deraadt;	state dead;
branches;
next	1.3;
commitid	OSDG2O3Cgeifnf1W;

1.3
date	2015.08.31.02.53.57;	author guenther;	state Exp;
branches;
next	1.2;
commitid	lTMF8Y3C9fQGd6jQ;

1.2
date	2015.05.15.22.29.37;	author millert;	state Exp;
branches;
next	1.1;
commitid	o1loCGVIygHmwtDK;

1.1
date	2014.11.30.19.43.56;	author deraadt;	state Exp;
branches;
next	;
commitid	1sP0uXsb2s1HOugs;


desc
@@


1.4
log
@We are done providing support for the vax.
lots of agreement.
@
text
@/*	$OpenBSD: strchr.S,v 1.3 2015/08/31 02:53:57 guenther Exp $ */
/*
 * Copyright (c) 1980, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/*
 * Find the first occurrence of c in the string cp.
 * Return pointer to match or null pointer.
 *
 * char *strchr(char *cp, char c)
 */
#include "DEFS.h"

/* Alas not quite twice as fast as the generic C version on a uvax2 */

WEAK_ALIAS(index, strchr)
ENTRY(strchr, 0)
	movq	4(%ap),%r0	# r0 = cp; r1 = c
	tstb	%r1		# special case, looking for '\0'
	jeql	3f
1:
	cmpb	(%r0),%r1
	jeql	2f
	tstb	(%r0)+
	jneq	1b
	clrl	%r0		# return NULL if no match
2:
	ret
3:
	tstb	(%r0)+
	jneq	3b
	decl	%r0
	jbr	2b
END_STRONG(strchr)
@


1.3
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strchr.S,v 1.2 2015/05/15 22:29:37 millert Exp $ */
@


1.2
log
@Make index/rindex weak aliases of strchr/strrchr since they are not
part of the ISO C standard and have also been dropped from POSIX.
OK guenther@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strchr.S,v 1.1 2014/11/30 19:43:56 deraadt Exp $ */
d59 1
@


1.1
log
@restructure libc/string + libc/arch/*/string coperation regarding
(potentially) MD versions (function dependent, not filename dependent)
split out memcpy/memmove/bcopy and strchr/index/strrchr/rindex
Bring back amd64 .S versions

And the final touch: switch all architectures temporarily to MI
memcpy.c, which contains syslog + abort for overlapping copies.  A nice
harsh undefined behaviour.  We will clean the entire userland of the
remaining issues in this catagory, then switch to the optimised memcpy
which skips the memmove check.

I tried to cut this change into pieces, but testing each sub-step on
every architecture is too time consuming and mindnumbing.
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: index.S,v 1.6 2013/07/05 21:10:50 miod Exp $ */
d41 1
a41 1
STRONG_ALIAS(index, strchr)
@

