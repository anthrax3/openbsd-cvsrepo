head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.14
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.6
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.4
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.2
	OPENBSD_5_0:1.3.0.26
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.5
date	2014.06.09.20.47.10;	author miod;	state Exp;
branches;
next	1.4;
commitid	iQ7uGgiNX7UaiPtF;

1.4
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2005.06.29.14.03.25;	author mickey;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.27.17.36.14;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.44.44;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Nuke the machinery to sync libkern with libc, it's not been used in the
last 15 years and there is no point to use it in the future.

From Jean-Philippe Ouellet
@
text
@#	$OpenBSD: Makefile.inc,v 1.4 2012/01/17 02:34:18 guenther Exp $
@


1.4
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d1 1
a1 4
#	$OpenBSD: Makefile.inc,v 1.3 2005/06/29 14:03:25 mickey Exp $

KMINCLUDES= arch/amd64/SYS.h
KMSRCS=	ffs.S htonl.S ntohl.S htons.S ntohs.S
@


1.3
log
@cleanup KMSRC (copy to libkern) list from nonexistant srcs; also noticed before by marc@@ and drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.2 2004/02/27 17:36:14 deraadt Exp $
d4 1
a4 1
KMSRCS=	ffs.S strlen.S htonl.S ntohl.S htons.S ntohs.S
@


1.2
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 2004/01/28 01:44:44 mickey Exp $
d4 1
a4 2
KMSRCS=	bcmp.S bzero.S ffs.S strcat.S strcmp.S strcpy.S strlen.S \
	htonl.S htons.S ntohl.S ntohs.S
@


1.1
log
@things for amd64; from art@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d3 1
a3 1
KMINCLUDES= arch/x86_64/SYS.h
@

