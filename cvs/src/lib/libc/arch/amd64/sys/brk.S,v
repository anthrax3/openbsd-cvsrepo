head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.2
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.4
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.4.0.6
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.10
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.8
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.4
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.2
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.3.0.28
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.26
	OPENBSD_5_0:1.3.0.24
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.22
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.20
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.16
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.18
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.14
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.12
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.10
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.8
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.6
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.4
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.2
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@# @;


1.9
date	2016.09.10.20.39.22;	author kettenis;	state Exp;
branches;
next	1.8;
commitid	XE2veemIGA10yXDb;

1.8
date	2016.05.07.19.05.21;	author guenther;	state Exp;
branches;
next	1.7;
commitid	d9R7VGw9CHTkwXE1;

1.7
date	2015.09.05.06.22.47;	author guenther;	state Exp;
branches;
next	1.6;
commitid	YcHx4KWjuOzN6Vj2;

1.6
date	2015.08.26.01.54.09;	author guenther;	state Exp;
branches;
next	1.5;
commitid	ZWoe9OaBBikaM1w5;

1.5
date	2015.06.17.03.04.50;	author uebayasi;	state Exp;
branches;
next	1.4;
commitid	NVVFCvU50aPumxhj;

1.4
date	2012.08.22.17.19.34;	author pascal;	state Exp;
branches;
next	1.3;

1.3
date	2005.12.13.00.10.48;	author jsg;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.10.00.22.51;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.44.45;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Clang ignores a .weak directive before a function is actually defined.  So
move it from before ENTRY() to after END().  Keeps brk(2) and sbrk(2) weak
when comping libc with clang.

ok guenther@@
@
text
@/*	$OpenBSD: brk.S,v 1.8 2016/05/07 19:05:21 guenther Exp $	*/
/*	$NetBSD: brk.S,v 1.2 2002/06/03 18:30:33 fvdl Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)brk.s	5.2 (Berkeley) 12/17/90
 */

#include <machine/asm.h>

#include "SYS.h"

	.globl	_end
	.globl	__curbrk

	.data
__minbrk:
	.quad	_end
	END(__minbrk)
	.type	__minbrk,@@object
	.text

ENTRY(brk)
	cmpq	%rdi,__minbrk(%rip)
	jb	1f
	movq	__minbrk(%rip),%rdi
1:
	SYSTRAP(break)
	jc	1f
	movq	%rdi,__curbrk(%rip)
	xorl	%eax,%eax
	ret
1:
	SET_ERRNO
	ret
END(brk)
	.weak	brk
@


1.8
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.7 2015/09/05 06:22:47 guenther Exp $	*/
a51 1
	.weak	brk
d66 1
@


1.7
log
@Adds hidden _libc_FOO aliases for the system call stubs.
Stop generating _brk and _sbrk symbols: they've already been hidden.
Set the ELF symbol size on the syscall stubs.
Give the __{min,cur}brk symbols a size and type, and hide more jump labels.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.6 2015/08/26 01:54:09 guenther Exp $	*/
a53 16
#ifdef __PIC__
	movq	PIC_GOT(__minbrk),%rdx
	cmpq	%rdi,(%rdx)
	jb	1f
	movq	(%rdx),%rdi
1:
	SYSTRAP(break)
	jc	1f
	movq	PIC_GOT(__curbrk),%rdx	# set up GOT addressing
	movq	%rdi,(%rdx)
	xorl	%eax,%eax
	ret
1:
	movq	PIC_GOT(CERROR),%rdx
	jmp	*%rdx
#else
d64 2
a65 2
	jmp	CERROR
#endif
@


1.6
log
@Hide many (194!) symbols that nothing should be using.
Delete exect(2); it wasn't portable across archs and nothing used it.

ports test build by naddy@@
ok deraadt@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.5 2015/06/17 03:04:50 uebayasi Exp $	*/
a44 2
WEAK_ALIAS(brk, _brk)

d48 2
d52 2
a53 1
ENTRY(_brk)
d61 1
a61 1
	jc	err
d66 1
a66 1
err:
d75 1
a75 1
	jc	err
d79 1
a79 1
err:
d82 1
a82 1
END(_brk)
@


1.5
log
@Set FUNC symbol sizes of auto-generated and hand-written syscall wrappers.

Original diff from guenther@@, adjusted by me.

OK guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a42 2
	.globl	_C_LABEL(__minbrk)
	.globl	_C_LABEL(minbrk)
a44 1
#ifdef WEAK_ALIAS
a45 1
#endif
d48 1
a48 2
_C_LABEL(minbrk):
_C_LABEL(__minbrk):
d52 1
a52 1
SYSENTRY(_brk)
d54 1
a54 1
	movq	PIC_GOT(_C_LABEL(__minbrk)),%rdx
d69 1
a69 1
	cmpq	%rdi,_C_LABEL(__minbrk)(%rip)
d71 1
a71 1
	movq	_C_LABEL(__minbrk)(%rip),%rdi
d81 1
a81 1
SYSEXIT(_brk)
@


1.4
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.3 2005/12/13 00:10:48 jsg Exp $	*/
d86 1
@


1.3
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.
Checked by ian@@ and deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.2 2004/02/10 00:22:51 drahn Exp $	*/
d58 1
a58 1
#ifdef PIC
@


1.2
log
@CURBRK -> __curbrk changes from mickey, minbrk addition by me, ok mickey@@
@
text
@d1 1
a1 1
/*	$OpenBSD: brk.S,v 1.1 2004/01/28 01:44:45 mickey Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1
log
@things for amd64; from art@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d48 2
a49 1
	.globl	CURBRK
d56 1
d70 1
a70 1
	movq	PIC_GOT(CURBRK),%rdx	# set up GOT addressing
d84 1
a84 1
	movq	%rdi,CURBRK(%rip)
@

