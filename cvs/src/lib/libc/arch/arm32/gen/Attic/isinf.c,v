head	1.4;
access;
symbols
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2001.08.19.20.44.31;	author brad;	state dead;
branches;
next	1.3;

1.3
date	96.08.19.08.11.42;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.39.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	96.05.01.12.51.19;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove unused bits and pieces.
--
Ok'd by art@@
@
text
@/*
 * Copyright (c) 1996 Mark Brinicombe
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by Mark Brinicombe
 *	for the NetBSD project.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
static char *rcsid = "$OpenBSD: isinf.c,v 1.3 1996/08/19 08:11:42 tholo Exp $";
#endif /* LIBC_SCCS and not lint */

#include <sys/types.h>
#include <machine/ieee.h>
#include <math.h>

int
isnan(d)
	double d;
{
	register struct ieee_double *p = (struct ieee_double *)&d;

	return(p->dbl_exp == DBL_EXP_INFNAN && (p->dbl_frach || p->dbl_fracl));
}

int
isinf(d)
	double d;
{
	register struct ieee_double *p = (struct ieee_double *)&d;

	return(p->dbl_exp == DBL_EXP_INFNAN && !p->dbl_frach && !p->dbl_fracl);
}
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d34 1
a34 1
static char *rcsid = "$OpenBSD$";
@


1.2
log
@sync to mark
@
text
@a0 3
/*	$OpenBSD$ */
/* $NetBSD: isinf.c,v 1.2 1996/05/12 20:50:54 mark Exp $ */

d32 4
@


1.1
log
@arm32 libc support
@
text
@d1 2
a2 1
/* $NetBSD: isinf.c,v 1.1 1996/02/16 20:48:20 mark Exp $ */
d4 2
a5 3
/*-
 * Copyright (c) 1991 The Regents of the University of California.
 * All rights reserved.
d17 2
a18 2
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
d23 1
a23 1
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
d26 1
a26 1
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
a33 2
 *
 *  $Id: isinf.c,v 1.1 1996/02/16 20:48:20 mark Exp $
d37 2
d40 1
d44 1
a44 6
	register struct IEEEdp {
		u_int manh : 20;
		u_int  exp : 11;
		u_int sign :  1;
		u_int manl;
	} *p = (struct IEEEdp *)&d;
d46 1
a46 1
	return(p->exp == 2047 && (p->manh || p->manl));
d49 1
d53 1
a53 6
	register struct IEEEdp {
		u_int manh : 20;
		u_int  exp : 11;
		u_int sign :  1;
		u_int manl;
	} *p = (struct IEEEdp *)&d;
d55 1
a55 1
	return(p->exp == 2047 && !p->manh && !p->manl);
@
