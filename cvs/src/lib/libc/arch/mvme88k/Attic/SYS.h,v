head	1.6;
access;
symbols
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.2
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.12
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.10
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.8
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.6
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.4
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.6
date	2003.01.02.20.23.44;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2002.02.19.22.12.36;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.19.39.36;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2001.09.20.20.52.10;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.01.17.31.22;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	97.03.25.17.06.50;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Begone.
@
text
@/*	$OpenBSD: SYS.h,v 1.5 2002/02/19 22:12:36 millert Exp $	*/
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)SYS.h	5.5 (Berkeley) 5/7/91
 */

#include <sys/syscall.h>
#include <machine/asm.h>

#ifdef __STDC__

#define	_SYSCALL(x,y)	align 8; \
			ENTRY(x); \
			ld r10,r31,32; \
			ld r11,r31,36; \
			ld r12,r31,40; \
			or r13,r0, SYS_ ## y; \
			tb0 0, r0, 128; \
			br cerror
#define	SYSCALL(x)	_SYSCALL(x,x)
#define	RSYSCALL(x)	SYSCALL(x) ;\
			jmp r1
#define	PSEUDO(x,y)	_SYSCALL(x,y); \
			jmp r1
#define	PSEUDO_NOERROR(x,y)	ENTRY(x); ;\
			or r13,r0, SYS_ ## y; \
			tb0 0,r0,128; or r0,r0,r0;jmp r1

#else /* !__STDC__ */

#define	_SYSCALL(x,y)	align 8; \
			ENTRY(x); \
			ld r10,r31,32; \
			ld r11,r31,36; \
			ld r12,r31,40; \
			or r13,r0, SYS_/**/y; \
			tb0 0, r0, 128; \
			br cerror
#define	SYSCALL(x)	_SYSCALL(x,x)
#define	RSYSCALL(x)	SYSCALL(x); \
			jmp r1
#define	PSEUDO(x,y)	_SYSCALL(x,y); \
			jmp r1
#define	PSEUDO_NOERROR(x,y)	ENTRY(x); \
			or r13,r0, SYS_/**/y; \
			tb0 0,r0,128; or r0,r0,r0; jmp r1
#endif /* !__STDC__ */

#define	ASMSTR		.asciz

	.globl	cerror
@


1.5
log
@We need to keep K&R compat macros for some ports where the assemnbler is
still using -traditional-cpp.
@
text
@d1 1
a1 1
/*	$OpenBSD: SYS.h,v 1.4 2002/02/19 19:39:36 millert Exp $	*/
@


1.4
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d1 1
a1 1
/*	$OpenBSD: SYS.h,v 1.3 2001/09/20 20:52:10 millert Exp $	*/
d44 2
d62 20
@


1.3
log
@Add PSEUDO_NOERROR similar to that used by NetBSD.
Some ports were setting errno in PSEUDO and some were not.  Now errno
is set for all in PSEUDO and PSEUDO_NOERROR is provided for the
non-errno case (only used by _exit).

Needs testing on vax and m88k.
XXX - hppa and powerpc still lack a real PSEUDO_NOERROR implementation.
Currently PSEUDO_NOERROR and PSEUDO are the same (so builds don't
break on those platforms).
@
text
@d1 1
a1 1
/*	$OpenBSD: SYS.h,v 1.2 2000/03/01 17:31:22 todd Exp $	*/
a43 2
#ifdef __STDC__

a59 20

#else /* !__STDC__ */

#define	_SYSCALL(x,y)	align 8; \
			ENTRY(x); \
			ld r10,r31,32; \
			ld r11,r31,36; \
			ld r12,r31,40; \
			or r13,r0, SYS_/**/y; \
			tb0 0, r0, 128; \
			br cerror
#define	SYSCALL(x)	_SYSCALL(x,x)
#define	RSYSCALL(x)	SYSCALL(x); \
			jmp r1
#define	PSEUDO(x,y)	_SYSCALL(x,y); \
			jmp r1
#define	PSEUDO_NOERROR(x,y)	ENTRY(x); \
			or r13,r0, SYS_/**/y; \
			tb0 0,r0,128; or r0,r0,r0; jmp r1
#endif /* !__STDC__ */
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: SYS.h,v 1.1 1997/03/25 17:06:50 rahnds Exp $	*/
d46 1
a46 1
#define	SYSCALL(x)	align 8; \
d51 1
a51 1
			or r13,r0, SYS_ ## x; \
d54 1
d57 3
a59 1
#define	PSEUDO(x,y)	ENTRY(x); ;\
d65 1
a65 1
#define	SYSCALL(x)	align 8; \
d70 1
a70 1
			or r13,r0, SYS_/**/x; \
d73 1
d76 3
a78 1
#define	PSEUDO(x,y)	ENTRY(x); \
@


1.1
log
@Ok here is the mvme88k userland, minus a few important pieces.
as, ld change need to be merged. It is known that shared libraries and C++
do not work.
If anyone wants to step forward and take over the mvme88k port please do.
It was dumped on me when the original developer, Nivas, left his previous
job and started a new one.

I am trying to get the port in a shape that someone could take over.
@
text
@d1 1
a38 1
 *	$Id: SYS.h,v 1.3 1996/06/03 11:09:32 build Exp $
@

