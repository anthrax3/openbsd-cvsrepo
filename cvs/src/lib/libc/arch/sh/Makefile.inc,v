head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.2
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.4.0.36
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.38
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.30
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.34
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.32
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.28
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.26
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.24
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.22
	OPENBSD_5_0:1.4.0.20
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.18
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.16
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.12
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.14
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.10
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.8
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.6
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.4
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.2
	OPENBSD_4_1_BASE:1.4
	SH4_LIBC_20061006:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2016.05.18.20.21.13;	author guenther;	state Exp;
branches;
next	1.5;
commitid	vF64iVVN9U3wxSNG;

1.5
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.4;
commitid	d9R7VGw9CHTkwXE1;

1.4
date	2007.03.02.06.11.54;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2006.11.07.17.38.49;	author drahn;	state Exp;
branches;
next	1.2;

1.2
date	2006.11.06.15.14.50;	author drahn;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.10.22.07.10;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.10.22.07.10;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Save and restore 'gbr' register when enter/leaving the kernel, and use
it for the TCB pointer.  Eliminate __cerror.

"looks good" kettenis@@, testing and ok deraadt@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.5 2016/05/07 19:05:22 guenther Exp $
@


1.5
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.inc,v 1.4 2007/03/02 06:11:54 miod Exp $
CERROR=	cerror.S
@


1.4
log
@Move landisk to hardware floating point. At the moment the FPU context is
always saved upon context switches, as FPU registers are heavily used for
long long computations (don't ask). Gcc default to -m4.

Credits to drahn@@ otto@@ and deraadt@@ for feedback and help testing.

Upgrade procedure if you don't want to use the damn snapshots:
- build and install new kernel, reboot off it
- build new gcc, do not install it yet
- make includes
- install new gcc
- build and install lib/csu and lib/libc
- make build
@
text
@d1 2
a2 1
#	$OpenBSD: Makefile.inc,v 1.3 2006/11/07 17:38:49 drahn Exp $
@


1.3
log
@Build the correct arch softfloat code.
@
text
@d1 1
a1 6
#	$OpenBSD: Makefile.inc,v 1.2 2006/11/06 15:14:50 drahn Exp $

CPPFLAGS += -DSOFTFLOAT

SOFTFLOAT_BITS=32
.include <arch/sh/softfloat/Makefile.inc>
@


1.2
log
@Move (back) to softfloat on sh for now.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1.1.1 2006/10/10 22:07:10 miod Exp $
d6 1
a6 1
.include <arch/arm/softfloat/Makefile.inc>
@


1.1
log
@Initial revision
@
text
@d1 6
a6 1
#	$OpenBSD$
@


1.1.1.1
log
@Preliminary userland bits for OpenBSD/landisk, many things coming from
NetBSD.
@
text
@@
