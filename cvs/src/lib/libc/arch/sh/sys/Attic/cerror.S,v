head	1.7;
access;
symbols
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.4.0.10
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.6
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.4
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.1.1.1.0.18
	OPENBSD_4_9_BASE:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.16
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.12
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.14
	OPENBSD_4_6_BASE:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.10
	OPENBSD_4_5_BASE:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.8
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.6
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.4
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.2
	OPENBSD_4_1_BASE:1.1.1.1
	SH4_LIBC_20061006:1.1.1.1
	miod:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2016.05.18.20.21.13;	author guenther;	state dead;
branches;
next	1.6;
commitid	vF64iVVN9U3wxSNG;

1.6
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.5;
commitid	d9R7VGw9CHTkwXE1;

1.5
date	2015.09.10.13.29.09;	author guenther;	state Exp;
branches;
next	1.4;
commitid	pYkLasgGFEsgLTME;

1.4
date	2013.12.31.23.31.13;	author kettenis;	state Exp;
branches;
next	1.3;

1.3
date	2012.08.22.17.19.35;	author pascal;	state Exp;
branches;
next	1.2;

1.2
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2006.10.10.22.07.10;	author miod;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2006.10.10.22.07.10;	author miod;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Save and restore 'gbr' register when enter/leaving the kernel, and use
it for the TCB pointer.  Eliminate __cerror.

"looks good" kettenis@@, testing and ok deraadt@@
@
text
@/*	$OpenBSD: cerror.S,v 1.6 2016/05/07 19:05:22 guenther Exp $	*/
/*	$NetBSD: cerror.S,v 1.10 2006/01/06 05:14:39 uwe Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)cerror.s	5.1 (Berkeley) 4/23/90
 */

#include "SYS.h"

ASENTRY(CERROR)
	mov.l	.L___errno, r1
	PIC_PROLOGUE(.L_got)
	sts.l   pr, @@-sp
1:	CALL	r1
	 mov.l	r4, @@-sp	! save error code
	mov.l	@@sp+, r4
	lds.l   @@sp+, pr
	PIC_EPILOGUE
	mov.l	r4, @@r0
	mov	#-1, r1
	rts
	 mov	#-1, r0

	.align	2
.L_got:		PIC_GOT_DATUM
.L___errno:	CALL_DATUM(_C_LABEL(__errno), 1b)
	SET_ASENTRY_SIZE(CERROR)

@


1.6
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.5 2015/09/10 13:29:09 guenther Exp $	*/
@


1.5
log
@Adds hidden _libc_FOO aliases for the system call stubs.
Stop generating _brk and _sbrk symbols: they've already been hidden.
Set the ELF symbol size on the syscall stubs.
Give the __{min,cur}brk symbols a size and type, and hide more jump labels.

alpha, arm, m88k, sh, sparc, and vax assistance miod@@
hppa assistance kettenis@@
ok deraadt@@ miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.4 2013/12/31 23:31:13 kettenis Exp $	*/
d40 11
a50 15
WEAK_ALIAS(CERROR, _CERROR)

ASENTRY(_CERROR)
#ifdef __PIC__
	mova	L_GOT, r0
	mov.l	L_GOT, r1
	add	r0, r1
	mov.l	L_errno, r0
	mov.l	@@(r0, r1), r1
	mov.l	r4, @@r1
#else
	mov.l	L_errno, r1
	mov.l	r4, @@r1
#endif
	mov	#-1, r0
d52 1
a52 1
	 mov	#-1, r1
d55 4
a58 7
#ifdef __PIC__
L_GOT:		.long	_GLOBAL_OFFSET_TABLE_
L_errno:	.long	_C_LABEL(errno)@@GOT
#else
L_errno:	.long	_C_LABEL(errno)
#endif
	SET_ENTRY_SIZE(_CERROR)
@


1.4
log
@Remove #ifdef _REENTRANT code that isn't used here.  These days, the code
handling per-thread errno lives in librthread.

ok miod@@, espie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.3 2012/08/22 17:19:35 pascal Exp $	*/
d65 1
@


1.3
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.2 2011/04/04 12:42:39 guenther Exp $	*/
a42 20
#ifdef _REENTRANT
	mov.l	.L___errno, r1
	PIC_PROLOGUE(.L_got)
	sts.l   pr, @@-sp
1:	CALL	r1
	 mov.l	r4, @@-sp	! save error code
	mov.l	@@sp+, r4
	lds.l   @@sp+, pr
	PIC_EPILOGUE
	mov.l	r4, @@r0
	mov	#-1, r1
	rts
	 mov	#-1, r0

	.align	2
.L_got:		PIC_GOT_DATUM
.L___errno:	CALL_DATUM(_C_LABEL(__errno), 1b)
	SET_ASENTRY_SIZE(_CERROR)

#else /* !_REENTRANT */
a64 1
#endif /* !_REENTRANT */
@


1.2
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.1.1.1 2006/10/10 22:07:10 miod Exp $	*/
d63 1
a63 1
#ifdef PIC
d79 1
a79 1
#ifdef PIC
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 3
a42 1
ASENTRY(CERROR)
d60 1
a60 1
	SET_ASENTRY_SIZE(cerror)
@


1.1.1.1
log
@Preliminary userland bits for OpenBSD/landisk, many things coming from
NetBSD.
@
text
@@
