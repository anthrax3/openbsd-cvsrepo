head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.4
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.6
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.2
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.14
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.6
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.10
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.8
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.30
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.28
	OPENBSD_5_0:1.8.0.26
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.24
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.22
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.18
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.20
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.16
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.11
date	2016.05.30.02.11.21;	author guenther;	state Exp;
branches;
next	1.10;
commitid	0WT5wWprCaRQJAPw;

1.10
date	2015.09.13.07.36.58;	author guenther;	state Exp;
branches;
next	1.9;
commitid	lKiiBbVqMp5OO6rf;

1.9
date	2012.08.22.17.19.34;	author pascal;	state Exp;
branches;
next	1.8;

1.8
date	2005.08.07.11.30.38;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.01.08.08.15;	author hshoexer;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.30;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.17.03.47.42;	author drahn;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.01.07.02.13;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.12.34;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.30.08.15.23;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.24;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.24;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Do setjmp cookies for eip, esp, and ebp.  For bonus points, mix how
the cookies are used in setjmp/_setjmp/sigsetjmp so that mixing
calls (e.g., longjmp on a _setjmp buffer) will scramble all three
registers and jump you to a random location on a random stack!

ok deraadt@@
@
text
@/* $OpenBSD: setjmp.S,v 1.10 2015/09/13 07:36:58 guenther Exp $ */
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * William Jolitz.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include "SYS.h"

	.section	.openbsd.randomdata,"aw",@@progbits
	.balign	4
	.globl	__jmpxor
	.hidden	__jmpxor
__jmpxor:
	.zero	4*3		# (eip, esp, ebp)
	END(__jmpxor)
	.type	__jmpxor,@@object


/*
 * C library -- setjmp, longjmp
 *
 *	longjmp(a,v)
 * will generate a "return(v)" from the last call to
 *	setjmp(a)
 * by restoring registers from the stack.
 * The previous signal state is restored.
 */

ENTRY(setjmp)
	pushl	$0			/* mask = empty */
	pushl	$1			/* how = SIG_BLOCK */
	call	1f
1:	movl	$(SYS_sigprocmask),%eax
	int	$0x80			/* leave oset in %eax */
	popl	%edx
	addl	$8,%esp
	addl	$__jmpxor-1b,%edx	# load cookie address

	movl	4(%esp),%ecx
	movl	%eax,24(%ecx)
	movl	%ebx, 4(%ecx)
	movl	%esp,   %eax
	xorl	0(%edx),%eax		# use esp cookie
	movl	%eax, 8(%ecx)
	movl	%ebp,   %eax
	xorl	4(%edx),%eax		# use ebp cookie
	movl	%eax,12(%ecx)
	movl	%esi,16(%ecx)
	movl	%edi,20(%ecx)
	movl	8(%edx),%edx		# load eip cookie over cookie address
	xorl	0(%esp),%edx
	movl	%edx, 0(%ecx)
	xorl	%eax,%eax
	ret
END(setjmp)

ENTRY(longjmp)
	movl	4(%esp),%edx
	pushl	24(%edx)		/* mask from sc_mask */
	pushl	$3			/* how = SIG_SETMASK */
	call	1f			/* get our eip */
1:	movl	$(SYS_sigprocmask),%eax
	int	$0x80
	popl	%ecx
	addl	$8,%esp
	addl	$__jmpxor-1b,%ecx	# load cookie address

	movl	 4(%esp),%edx
	movl	 8(%esp),%eax
	movl	 4(%edx),%ebx
	movl	 8(%edx),%esi		# load xor'ed esp into safe register
	xorl	 0(%ecx),%esi		# use esp cookie
	movl	   %esi, %esp		# un-xor'ed esp is safe to use
	movl	12(%edx),%ebp
	xorl	 4(%ecx),%ebp		# use ebp cookie
	movl	16(%edx),%esi
	movl	20(%edx),%edi

	movl	8(%ecx),%ecx		# load eip cookie over cookie address
	xorl	0(%edx),%ecx
	testl	%eax,%eax
	jnz	1f
	incl	%eax
1:	movl	%ecx,0(%esp)
	ret
END(longjmp)
@


1.10
log
@Do provide hidden _libc_* aliases for sig{block,setmask} and use them in
the ASM *setjmp implementations.
Skip the PLT when calling them on amd64 (other archs to do this after testing)

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: setjmp.S,v 1.9 2012/08/22 17:19:34 pascal Exp $ */
d34 11
a44 1
#include <machine/asm.h>
d57 8
a64 9
	PIC_PROLOGUE
	pushl	$0
#ifdef __PIC__
	call	PIC_PLT(_C_LABEL(_libc_sigblock))
#else
	call	_C_LABEL(_libc_sigblock)
#endif
	addl	$4,%esp
	PIC_EPILOGUE 
d67 1
a67 2
	movl	0(%esp),%edx
	movl	%edx, 0(%ecx)
d69 6
a74 2
	movl	%esp, 8(%ecx)
	movl	%ebp,12(%ecx)
d77 3
a79 1
	movl	%eax,24(%ecx)
d82 1
d86 15
a100 15
	PIC_PROLOGUE
	pushl	24(%edx)
#ifdef __PIC__
	call	PIC_PLT(_C_LABEL(_libc_sigsetmask))
#else
	call	_C_LABEL(_libc_sigsetmask)
#endif
	addl	$4,%esp
	PIC_EPILOGUE 

	movl	4(%esp),%edx
	movl	8(%esp),%eax
	movl	0(%edx),%ecx
	movl	4(%edx),%ebx
	movl	8(%edx),%esp
d102 1
d105 3
d113 1
@


1.9
log
@Convert cpp | as rules in bsd.lib.mk and lib/libc/sys/Makefile.inc to pure cc
invocations.  This allows us to use the compiler builtin define __PIC__ to check
for PIC/PIEness rather than passing -DPIC.  Simplifies PIE work a lot.

ok matthew@@, conceptually ok kurt@@
@
text
@d1 1
a1 1
/* $OpenBSD: setjmp.S,v 1.8 2005/08/07 11:30:38 espie Exp $ */
d50 1
a50 1
	call	PIC_PLT(_C_LABEL(sigblock))
d52 1
a52 1
	call	_C_LABEL(sigblock)
d74 1
a74 1
	call	PIC_PLT(_C_LABEL(sigsetmask))
d76 1
a76 1
	call	_C_LABEL(sigsetmask)
@


1.8
log
@zap rcsid, tested there. okay deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d49 1
a49 1
#ifdef PIC
d73 1
a73 1
#ifdef PIC
@


1.7
log
@Fix typo in comment (_setjmp -> setjmp)

ok deraadt
@
text
@d1 1
a34 5

#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD: setjmp.S,v 1.6 2003/06/02 20:18:30 millert Exp $"
#endif
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d37 1
a37 1
	.asciz "$OpenBSD: setjmp.S,v 1.5 2003/04/17 03:47:42 drahn Exp $"
d41 1
a41 1
 * C library -- _setjmp, _longjmp
@


1.5
log
@ELF fixups, ELF PIC syscall support, asm changes as requested by assembler.
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d37 1
a37 1
	.asciz "$OpenBSD: setjmp.S,v 1.4 2001/11/01 07:02:13 mickey Exp $"
@


1.4
log
@use _C_LABEL
@
text
@d41 1
a41 1
	.asciz "$OpenBSD: setjmp.S,v 1.3 1996/08/19 08:12:34 tholo Exp $"
d55 1
d63 2
d79 1
d87 2
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d41 1
a41 1
	.asciz "$OpenBSD: setjmp.S,v 1.2 1995/12/30 08:15:23 deraadt Exp $"
d57 1
a57 1
	call	PIC_PLT(_sigblock)
d59 1
a59 1
	call	_sigblock
d78 1
a78 1
	call	PIC_PLT(_sigsetmask)
d80 1
a80 1
	call	_sigsetmask
@


1.2
log
@from netbsd:
Remove #include "SYS.h"; it is not needed (by normal assembly functions)
@
text
@a34 3
 *
 *	from: @@(#)setjmp.s	5.1 (Berkeley) 4/23/90
 *	$Id: setjmp.S,v 1.8 1995/12/28 21:32:27 jtc Exp $
d41 1
a41 1
	.asciz "$Id: setjmp.S,v 1.8 1995/12/28 21:32:27 jtc Exp $"
@


1.1
log
@Initial revision
@
text
@d37 1
a37 1
 *	$Id: setjmp.S,v 1.6 1994/12/24 01:16:44 jtc Exp $
d40 2
d44 1
a44 1
	.asciz "$Id: setjmp.S,v 1.6 1994/12/24 01:16:44 jtc Exp $"
a55 3

#include "DEFS.h"
#include "SYS.h"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
