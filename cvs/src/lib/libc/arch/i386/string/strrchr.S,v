head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.6
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.6.0.4
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.4.0.2
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.3.0.40
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.38
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.34
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.32
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.30
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.28
	OPENBSD_5_0:1.3.0.26
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.24
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.22
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.18
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.20
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.16
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.2.0.36
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.34
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.32
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.30
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.28
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.26
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.24
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.22
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.20
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.18
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.16
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.14
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.7
date	2015.08.31.02.53.56;	author guenther;	state Exp;
branches;
next	1.6;
commitid	lTMF8Y3C9fQGd6jQ;

1.6
date	2015.05.15.22.29.37;	author millert;	state Exp;
branches;
next	1.5;
commitid	o1loCGVIygHmwtDK;

1.5
date	2015.05.14.21.40.37;	author kettenis;	state Exp;
branches;
next	1.4;
commitid	biL4wXbIwzBw3PSY;

1.4
date	2014.11.30.19.43.56;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	1sP0uXsb2s1HOugs;

1.3
date	2005.08.07.11.30.38;	author espie;	state Exp;
branches;
next	1.2;

1.2
date	96.08.19.08.13.22;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.26;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.26;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Add framework for resolving (pun intended) libc namespace issues, using
wrapper .h files and asm labels to let internal calls resolve directly and
not be overridable or use the PLT.  Then, apply that framework to most of
the functions in stdio.h, string.h, err.h, and wchar.h.  Delete the
should-have-been-hidden-all-along _v?(err|warn)[cx]? symbols while here.

tests clean on i386, amd64, sparc64, powerpc, and mips64

naming feedback from kettenis@@ and millert@@
ok kettenis@@
@
text
@/*	$OpenBSD: strrchr.S,v 1.6 2015/05/15 22:29:37 millert Exp $ */
/*
 * Written by J.T. Conklin <jtc@@netbsd.org>.
 * Public domain.
 */

#include "SYS.h"

WEAK_ALIAS(rindex, strrchr)

ENTRY(strrchr)
	pushl	%ebx
	movl	8(%esp),%edx
	movb	12(%esp),%cl
	xorl	%eax,%eax		/* init pointer to null */
	.align 2,0x90
L1:
	movb	(%edx),%bl
	cmpb	%bl,%cl
	jne	L2
	movl	%edx,%eax
L2:
	incl	%edx
	testb	%bl,%bl			/* null terminator??? */
	jnz	L1
	popl	%ebx
	ret
END_STRONG(strrchr)
@


1.6
log
@Make index/rindex weak aliases of strchr/strrchr since they are not
part of the ISO C standard and have also been dropped from POSIX.
OK guenther@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strrchr.S,v 1.5 2015/05/14 21:40:37 kettenis Exp $ */
d7 1
a7 1
#include <machine/asm.h>
d28 1
@


1.5
log
@Use STRONG_ALIAS instead of ALTENTRY.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: strrchr.S,v 1.4 2014/11/30 19:43:56 deraadt Exp $ */
d9 1
a9 1
STRONG_ALIAS(rindex, strrchr)
@


1.4
log
@restructure libc/string + libc/arch/*/string coperation regarding
(potentially) MD versions (function dependent, not filename dependent)
split out memcpy/memmove/bcopy and strchr/index/strrchr/rindex
Bring back amd64 .S versions

And the final touch: switch all architectures temporarily to MI
memcpy.c, which contains syslog + abort for overlapping copies.  A nice
harsh undefined behaviour.  We will clean the entire userland of the
remaining issues in this catagory, then switch to the optimised memcpy
which skips the memmove check.

I tried to cut this change into pieces, but testing each sub-step on
every architecture is too time consuming and mindnumbing.
ok miod
@
text
@d1 1
a1 1
/*	$OpenBSD: rindex.S,v 1.3 2005/08/07 11:30:38 espie Exp $ */
d9 2
a10 1
ALTENTRY(rindex)
@


1.3
log
@zap rcsid, tested there. okay deraadt@@
@
text
@d1 26
a26 3
/*	$OpenBSD$ */
#define STRRCHR
#include "rindex.S"
@


1.2
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 5
#if defined(LIBC_SCCS)
	.text
	.asciz "$OpenBSD$"
#endif

@


1.1
log
@Initial revision
@
text
@d1 5
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
