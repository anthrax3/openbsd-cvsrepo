head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.10
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.8
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.4
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.6.0.10
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.8
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.4
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.4
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.2
	OPENBSD_5_0:1.4.0.50
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.48
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.46
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.42
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.44
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.40
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.38
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.36
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.34
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.32
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.30
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.28
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.26
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.24
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.22
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.20
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.18
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.16
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.14
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.12
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.10
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.8
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.6
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.9
date	2014.12.11.20.41.08;	author tedu;	state Exp;
branches;
next	1.8;
commitid	XQNTOsAJKYGSjFES;

1.8
date	2014.12.02.04.04.30;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	JsaWqSFgIxa0yG7G;

1.7
date	2014.11.30.19.43.56;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	1sP0uXsb2s1HOugs;

1.6
date	2012.09.04.03.10.42;	author okan;	state Exp;
branches;
next	1.5;

1.5
date	2012.01.17.21.31.19;	author mikeb;	state Exp;
branches;
next	1.4;

1.4
date	99.04.25.00.23.58;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.12.50;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.03.25.23.31.22;	author tholo;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.25;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.25;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@we do not need the complexity of an assembly swab function here.
ok deraadt
@
text
@#	$OpenBSD: Makefile.inc,v 1.8 2014/12/02 04:04:30 deraadt Exp $

SRCS+=	memcpy.c memmove.S \
	strchr.S strrchr.S \
	bcmp.S bzero.S ffs.S memchr.S memcmp.S swab.c \
	memset.S strcat.S strcmp.S strcpy.S \
	strcspn.c strlen.c strlcat.c strlcpy.c \
	strncat.c strncmp.S strncpy.c strpbrk.c strsep.c \
	strspn.c strstr.c
@


1.8
log
@Noone cares what castle the princess is in
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 2014/11/30 19:43:56 deraadt Exp $
d5 1
a5 1
	bcmp.S bzero.S ffs.S memchr.S memcmp.S swab.S \
@


1.7
log
@restructure libc/string + libc/arch/*/string coperation regarding
(potentially) MD versions (function dependent, not filename dependent)
split out memcpy/memmove/bcopy and strchr/index/strrchr/rindex
Bring back amd64 .S versions

And the final touch: switch all architectures temporarily to MI
memcpy.c, which contains syslog + abort for overlapping copies.  A nice
harsh undefined behaviour.  We will clean the entire userland of the
remaining issues in this catagory, then switch to the optimised memcpy
which skips the memmove check.

I tried to cut this change into pieces, but testing each sub-step on
every architecture is too time consuming and mindnumbing.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 2012/09/04 03:10:42 okan Exp $
d3 1
a3 1
SRCS+=	bcopy.S memcpy.c memmove.S \
d5 1
a5 1
	bcmp.S bcopy.S bzero.S ffs.S memchr.S memcmp.S swab.S \
@


1.6
log
@remove lint leftovers; ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2012/01/17 21:31:19 mikeb Exp $
d3 5
a7 2
SRCS+=	bcmp.S bcopy.S bzero.S ffs.S index.S memchr.S memcmp.S memset.S \
	rindex.S strcat.S strcmp.S strcpy.S strcspn.c strlcpy.c strlen.c \
d9 1
a9 2
	strspn.c strstr.c swab.S
SRCS+=	memcpy.S memmove.S strchr.S strrchr.S
@


1.5
log
@Remove assembly version of strlen from i386 and amd64, where it's
up to 3 times slower than the C code most of the time.  This was
brought up by DragonflyBSD guys initially.

ok deraadt, guenther. miod will not miss it.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.4 1999/04/25 00:23:58 millert Exp $
a7 2
LSRCS+=	bcmp.c bcopy.c bzero.c ffs.c index.c memchr.c memcmp.c memset.c \
	rindex.c strcat.c strcmp.c strcpy.c strncmp.c swab.c
@


1.4
log
@missing parts from last commit
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 1996/08/19 08:12:50 tholo Exp $
d4 1
a4 1
	rindex.S strcat.S strcmp.S strcpy.S strcspn.c strlcpy.c strlen.S \
d9 1
a9 1
	rindex.c strcat.c strcmp.c strcpy.c strlen.c strncmp.c swab.c
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.1 1995/03/20 14:45:42 mycroft Exp $
d4 1
a4 1
	rindex.S strcat.S strcmp.S strcpy.S strcspn.c strlen.S \
@


1.2
log
@Add support for building lint(1) library
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.inc,v 1.1 1995/03/20 14:45:42 mycroft Exp $
@


1.1
log
@Initial revision
@
text
@d8 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
