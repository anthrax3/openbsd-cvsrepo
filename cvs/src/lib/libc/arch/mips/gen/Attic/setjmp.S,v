head	1.9;
access;
symbols
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.18
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.16
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.14
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.12
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.10
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.8
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.6
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.4
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.6.0.6
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.9
date	2004.08.11.17.34.32;	author pefo;	state dead;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.31;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	99.01.19.01.38.53;	author d;	state Exp;
branches;
next	1.6;

1.6
date	97.07.23.20.55.25;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.08.19.08.16.05;	author tholo;	state Exp;
branches;
next	1.4;

1.4
date	96.07.30.20.27.51;	author pefo;	state Exp;
branches;
next	1.3;

1.3
date	96.05.16.11.16.01;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.26.18.17.18;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.34;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.34;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@bye
@
text
@/*-
 * Copyright (c) 1991, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Ralph Campbell.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/syscall.h>
#include <machine/asm.h>
#include <machine/regnum.h>

#if defined(LIBC_SCCS) 
	.text
	.asciz "$OpenBSD: setjmp.S,v 1.8 2003/06/02 20:18:31 millert Exp $"
#endif /* LIBC_SCCS */

/*
 * C library -- setjmp, longjmp
 *
 *	longjmp(a,v)
 * will generate a "return(v)" from
 * the last call to
 *	setjmp(a)
 * by restoring registers from the stack,
 * and a struct sigcontext, see <signal.h>
 */

#define SETJMP_FRAME_SIZE	(STAND_FRAME_SIZE + 12)

NON_LEAF(setjmp, SETJMP_FRAME_SIZE, ra)
	.mask	0x80000000, (STAND_RA_OFFSET - STAND_FRAME_SIZE)
	subu	sp, sp, SETJMP_FRAME_SIZE	# allocate stack frame
#ifdef ABICALLS
	.cprestore 16
#endif
	.set	reorder
	sw	ra, STAND_RA_OFFSET(sp)		# save state
	sw	a0, SETJMP_FRAME_SIZE(sp)
	move	a0, zero			# get current signal mask
	jal	_C_LABEL(sigblock)
	lw	v1, SETJMP_FRAME_SIZE(sp)	# v1 = jmpbuf
	sw	v0, (1 * 4)(v1)			# save sc_mask = sigblock(0)
	move	a0, zero
	addu	a1, sp, STAND_FRAME_SIZE	# pointer to struct sigaltstack
#ifndef _THREAD_SAFE
	jal	_C_LABEL(sigaltstack)
#else
	jal	_C_LABEL(_thread_sys_sigaltstack)
#endif
	lw	a0, SETJMP_FRAME_SIZE(sp)	# restore jmpbuf
	lw	v1, STAND_FRAME_SIZE+8(sp)	# get old ss_onstack
	and	v1, v1, 1			# extract onstack flag
	sw	v1, 0(a0)			# save it in sc_onstack
	lw	ra, STAND_RA_OFFSET(sp)
	addu	sp, sp, SETJMP_FRAME_SIZE
	blt	v0, zero, botch			# check for sigstack() error
	sw	ra, (2 * 4)(a0)			# sc_pc = return address
	li	v0, 0xACEDBADE			# sigcontext magic number
	sw	v0, ((ZERO + 3) * 4)(a0)	#   saved in sc_regs[0]
	sw	s0, ((S0 + 3) * 4)(a0)
	sw	s1, ((S1 + 3) * 4)(a0)
	sw	s2, ((S2 + 3) * 4)(a0)
	sw	s3, ((S3 + 3) * 4)(a0)
	sw	s4, ((S4 + 3) * 4)(a0)
	sw	s5, ((S5 + 3) * 4)(a0)
	sw	s6, ((S6 + 3) * 4)(a0)
	sw	s7, ((S7 + 3) * 4)(a0)
	sw	gp, ((GP + 3) * 4)(a0)
	sw	sp, ((SP + 3) * 4)(a0)
	sw	s8, ((S8 + 3) * 4)(a0)
	li	v0, 1				# be nice if we could tell
	sw	v0, (37 * 4)(a0)		# sc_fpused = 1
	cfc1	v0, $31
	swc1	$f20, ((20 + 38) * 4)(a0)
	swc1	$f21, ((21 + 38) * 4)(a0)
	swc1	$f22, ((22 + 38) * 4)(a0)
	swc1	$f23, ((23 + 38) * 4)(a0)
	swc1	$f24, ((24 + 38) * 4)(a0)
	swc1	$f25, ((25 + 38) * 4)(a0)
	swc1	$f26, ((26 + 38) * 4)(a0)
	swc1	$f27, ((27 + 38) * 4)(a0)
	swc1	$f28, ((28 + 38) * 4)(a0)
	swc1	$f29, ((29 + 38) * 4)(a0)
	swc1	$f30, ((30 + 38) * 4)(a0)
	swc1	$f31, ((31 + 38) * 4)(a0)
	sw	v0, ((32 + 38) * 4)(a0)
	move	v0, zero
	j	ra
END(setjmp)

LEAF(longjmp)
#ifdef ABICALLS
	subu	sp, sp, 32
	.cprestore 16
#endif
	.set	reorder
	sw	a1, ((V0 + 3) * 4)(a0)	# save return value in sc_regs[V0]
	li	v0, SYS_sigreturn
	syscall
botch:
	jal	_C_LABEL(longjmperror)
	jal	_C_LABEL(abort)
END(longjmp)
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d39 1
a39 1
	.asciz "$OpenBSD: setjmp.S,v 1.7 1999/01/19 01:38:53 d Exp $"
@


1.7
log
@thread support
@
text
@d16 1
a16 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d39 1
a39 1
	.asciz "$OpenBSD: setjmp.S,v 1.6 1997/07/23 20:55:25 kstailey Exp $"
@


1.6
log
@tabify
@
text
@d43 1
a43 1
	.asciz "$OpenBSD: setjmp.S,v 1.5 1996/08/19 08:16:05 tholo Exp $"
d74 1
d76 3
@


1.5
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d42 2
a43 2
        .text
        .asciz "$OpenBSD$"
@


1.4
log
@Cleanup of abi call and endian stuff. Also fixed some bugs. (AENT).
@
text
@a0 1
/*	$OpenBSD$	*/
d41 4
a44 5
#if defined(LIBC_SCCS) && !defined(lint)
	ASMSTR("from: @@(#)setjmp.s	8.1 (Berkeley) 6/4/93")
	ASMSTR("$Id: setjmp.S,v 1.3 1996/05/16 11:16:01 pefo Exp $")
#endif /* LIBC_SCCS and not lint */

@


1.3
log
@Changes to support elf shared librarys
@
text
@d1 1
d39 1
a40 5
#if MACHINE==pica
#include <machine/asm.h>
#else
#include <machine/machAsmDefs.h>
#endif
d44 1
a44 1
	ASMSTR("$Id: setjmp.S,v 1.2 1995/12/26 18:17:18 deraadt Exp $")
a46 3
#ifdef ABICALLS
	.abicalls
#endif
a62 5
#ifdef ABICALLS
	.set	noreorder
	.cpload	t9
	.set	reorder
#endif
d67 1
a119 3
	.set	noreorder
	.cpload	t9
	.set	reorder
d123 1
@


1.2
log
@from netbsd:
Change mips assembly code for {,_,sig}setjmp.S to get register names
from <machine/regnum.h>, not <machine/reg.h> (which also defines structs.)
@
text
@d39 3
d43 1
d47 1
a47 1
	ASMSTR("$Id: setjmp.S,v 1.4 1995/12/22 10:20:59 jonathan Exp $")
d50 4
d68 6
d75 3
a77 1
	.mask	0x80000000, (STAND_RA_OFFSET - STAND_FRAME_SIZE)
d129 7
@


1.1
log
@Initial revision
@
text
@d38 1
a38 1
#include <machine/reg.h>
d43 1
a43 1
	ASMSTR("$Id: setjmp.S,v 1.3 1994/12/15 17:24:51 mycroft Exp $")
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
