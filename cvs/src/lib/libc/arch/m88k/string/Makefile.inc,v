head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.10
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.7.0.6
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.4
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.6.0.2
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.5.0.44
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.42
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.38
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.36
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.5.0.34
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.32
	OPENBSD_5_0:1.5.0.30
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.28
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.26
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.22
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.24
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.20
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.18
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.16
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.14
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.12
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.10
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.8
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.6
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.4
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.2
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.4.0.2
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2015.05.15.22.29.37;	author millert;	state Exp;
branches;
next	1.6;
commitid	o1loCGVIygHmwtDK;

1.6
date	2014.11.30.19.43.56;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	1sP0uXsb2s1HOugs;

1.5
date	2004.04.01.20.39.55;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2004.01.26.20.05.29;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.17.06.58.20;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	99.04.25.00.23.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	98.12.15.07.10.32;	author smurph;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Make index/rindex weak aliases of strchr/strrchr since they are not
part of the ISO C standard and have also been dropped from POSIX.
OK guenther@@ kettenis@@
@
text
@#	$OpenBSD: Makefile.inc,v 1.6 2014/11/30 19:43:56 deraadt Exp $

SRCS+=	bcopy.c memcpy.c memmove.c \
	strchr.c strrchr.c \
	bcmp.c  bzero.c ffs.c memchr.c memcmp.c \
	memset.c strcat.c strcmp.c strcpy.c strcspn.c \
	strlen.c strlcat.c strlcpy.c strncat.c strncmp.c \
	strncpy.c strpbrk.c strsep.c strspn.c strstr.c swab.c
@


1.6
log
@restructure libc/string + libc/arch/*/string coperation regarding
(potentially) MD versions (function dependent, not filename dependent)
split out memcpy/memmove/bcopy and strchr/index/strrchr/rindex
Bring back amd64 .S versions

And the final touch: switch all architectures temporarily to MI
memcpy.c, which contains syslog + abort for overlapping copies.  A nice
harsh undefined behaviour.  We will clean the entire userland of the
remaining issues in this catagory, then switch to the optimised memcpy
which skips the memmove check.

I tried to cut this change into pieces, but testing each sub-step on
every architecture is too time consuming and mindnumbing.
ok miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 2004/04/01 20:39:55 miod Exp $
d4 1
a4 1
	index.c rindex.c strchr.c strrchr.c \
@


1.5
log
@It turns out that the so-called fast ffs(3) routines were wrong, as soon as
more than one bit is set, as the ff1 instruction counts from the highest
order.

However, gcc/m88k with optimization enabled would use a correct, short
sequence based upon ff1 and tweaks, to achieve the intended result, hence
i did not catch this flaw initially.

So revert to the C implementation - it is correct, still decently fast, and
will only be used when compiling at -O0.
@
text
@d1 1
a1 2
#	$OpenBSD: Makefile.inc,v 1.4 2004/01/26 20:05:29 miod Exp $
#	$NetBSD: Makefile.inc,v 1.1 1995/03/20 14:45:45 mycroft Exp $
d3 6
a8 4
SRCS+=	bcmp.c bcopy.c bzero.c ffs.c index.c memchr.c memcmp.c memset.c \
	rindex.c strcat.c strcmp.c strcpy.c strcspn.c strlcpy.c strlen.c \
	strncat.c strncmp.c strncpy.c strpbrk.c strsep.c \
	strspn.c strstr.c swab.c
@


1.4
log
@Use libkern's fast ffs() in libc too.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.3 2002/05/17 06:58:20 miod Exp $
d4 1
a4 1
SRCS+=	bcmp.c bcopy.c bzero.c ffs.S index.c memchr.c memcmp.c memset.c \
@


1.3
log
@Remove unused pieces and clean Makefile.inc
@
text
@d1 1
a1 1
#	$OpenBSD$
d4 1
a4 1
SRCS+=	bcmp.c bcopy.c bzero.c ffs.c index.c memchr.c memcmp.c memset.c \
@


1.2
log
@missing parts from last commit
@
text
@d1 1
a3 5
#SRCS+=	bcmp.S bcopy.S bzero.S ffs.S index.S memchr.c memcmp.S memset.S \
#	rindex.S strcat.c strcmp.S strcpy.S strcspn.c strlen.S \
#	strncat.c strncmp.S strncpy.S strpbrk.c strsep.c \
#	strspn.c strstr.c swab.S
#SRCS+=	memcpy.S memmove.S strchr.S strrchr.S
a7 1
#SRCS+=	index.c rindex.c
@


1.1
log
@correted sigsetjmp, setjump.  Fixed MACHINE_ARCH vs. MACHINE stuff.
@
text
@d9 1
a9 1
	rindex.c strcat.c strcmp.c strcpy.c strcspn.c strlen.c \
@

