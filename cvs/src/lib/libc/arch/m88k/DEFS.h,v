head	1.3;
access;
symbols
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.2.0.68
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.64
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.66
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.58
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.62
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.60
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.56
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.54
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.52
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.50
	OPENBSD_5_0:1.2.0.48
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.46
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.44
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.40
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.42
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.38
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.36
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.34
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.32
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.30
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.28
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.26
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.24
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.22
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.20
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.18
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.16
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.14
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.12
	OPENBSD_3_2_BASE:1.2
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.4
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.2
	OPENBSD_2_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2016.09.22.18.19.59;	author guenther;	state Exp;
branches;
next	1.2;
commitid	aBQHgOaj5C7d9OJh;

1.2
date	2000.03.01.17.31.20;	author todd;	state Exp;
branches;
next	1.1;

1.1
date	98.12.15.07.10.28;	author smurph;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Simplify __cerror now that %r27 is always the TCB pointer.
Don't need a PLT relocation for __cerror.
Move macros for doing internal aliases in ASM from SYS.h to DEFS.h

__cerror tweaks by Miod Vallat, testing by aoyama@@
@
text
@/*	$OpenBSD: DEFS.h,v 1.2 2000/03/01 17:31:20 todd Exp $ */

#include <machine/asm.h>

/*
 * We define a hidden alias with the prefix "_libc_" for each global symbol
 * that may be used internally.  By referencing _libc_x instead of x, other
 * parts of libc prevent overriding by the application and avoid unnecessary
 * relocations.
 */
#define _HIDDEN(x)		_libc_##x
#define _HIDDEN_ALIAS(x,y)			\
	STRONG_ALIAS(_HIDDEN(x),y);		\
	.hidden _HIDDEN(x)
#define _HIDDEN_FALIAS(x,y)			\
	_HIDDEN_ALIAS(x,y);			\
	.type _HIDDEN(x),@@function

/*
 * For functions implemented in ASM that aren't syscalls.
 *   END_STRONG(x)	Like DEF_STRONG() in C; for standard/reserved C names
 *   END_WEAK(x)	Like DEF_WEAK() in C; for non-ISO C names
 */
#define	END_STRONG(x)	END(x); _HIDDEN_FALIAS(x,x); END(_HIDDEN(x))
#define	END_WEAK(x)	END_STRONG(x); .weak x
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: DEFS.h,v 1.1 1998/12/15 07:10:28 smurph Exp $ */
d4 22
@


1.1
log
@correted sigsetjmp, setjump.  Fixed MACHINE_ARCH vs. MACHINE stuff.
@
text
@d1 1
a1 1
/*	$Id: DEFS.h,v 1.1 1997/03/25 17:06:47 rahnds Exp $ */
@

