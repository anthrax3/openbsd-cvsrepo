head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.2
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2017.03.19.00.29.02;	author guenther;	state Exp;
branches;
next	1.3;
commitid	ME4cfzOOVvCWMVIR;

1.3
date	2017.03.18.16.33.57;	author kettenis;	state Exp;
branches;
next	1.2;
commitid	GqJxDg2uaOTTIGga;

1.2
date	2017.01.25.10.43.37;	author patrick;	state Exp;
branches;
next	1.1;
commitid	ErwRRfKwaWVNfJSV;

1.1
date	2017.01.11.18.09.24;	author patrick;	state Exp;
branches;
next	;
commitid	QCqBgqgE59jC6kus;


desc
@@


1.4
log
@Stop setting the second register; it's unnecessary on 64bit archs

ok patrick@@ kettenis@@
@
text
@/*	$OpenBSD: cerror.S,v 1.3 2017/03/18 16:33:57 kettenis Exp $	*/
/*-
 * Copyright (c) 2014 Andrew Turner
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 */

#include "SYS.h"

/* offsetof(struct tib, tib_errno) - offsetof(struct tib, __tib_tcb) */
#define TCB_OFFSET_ERRNO	(-12)

_ENTRY(CERROR)
	mrs	x1, tpidr_el0
	str	w0, [x1, #TCB_OFFSET_ERRNO]
	movn	x0, #0
	ret
END(CERROR)
@


1.3
log
@Use the userspace-visible thread register directly in __cerror instead
of indirecting through __errno().

ok patrick@@
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.2 2017/01/25 10:43:37 patrick Exp $	*/
a37 1
	movn	x1, #0
@


1.2
log
@__errno() returns a 32-bit pointer, so make sure we write a 32-bit
value to and not overwrite other bits by writing a 64-bit value.
@
text
@d1 1
a1 1
/*	$OpenBSD: cerror.S,v 1.1 2017/01/11 18:09:24 patrick Exp $	*/
d31 3
d35 2
a36 4
	stp	x0, x30, [sp,#-16]!
	bl	_C_LABEL(__errno)
	ldp	x1, x30, [sp],#16
	str	w1, [x0]
a40 5

#if !defined(__PIC__)
.Lerrno:
	.word	errno
#endif
@


1.1
log
@Add support for AArch64.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d35 1
a35 1
	str	x1, [x0]
@

