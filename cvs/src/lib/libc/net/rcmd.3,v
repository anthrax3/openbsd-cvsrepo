head	1.34;
access;
symbols
	OPENBSD_6_1_BASE:1.34
	OPENBSD_6_0:1.34.0.2
	OPENBSD_6_0_BASE:1.34
	OPENBSD_5_9:1.32.0.2
	OPENBSD_5_9_BASE:1.32
	OPENBSD_5_8:1.32.0.4
	OPENBSD_5_8_BASE:1.32
	OPENBSD_5_7:1.31.0.2
	OPENBSD_5_7_BASE:1.31
	OPENBSD_5_6:1.31.0.4
	OPENBSD_5_6_BASE:1.31
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.2
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.27.0.24
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.27.0.22
	OPENBSD_5_2_BASE:1.27
	OPENBSD_5_1_BASE:1.27
	OPENBSD_5_1:1.27.0.20
	OPENBSD_5_0:1.27.0.18
	OPENBSD_5_0_BASE:1.27
	OPENBSD_4_9:1.27.0.16
	OPENBSD_4_9_BASE:1.27
	OPENBSD_4_8:1.27.0.14
	OPENBSD_4_8_BASE:1.27
	OPENBSD_4_7:1.27.0.10
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.27.0.12
	OPENBSD_4_6_BASE:1.27
	OPENBSD_4_5:1.27.0.8
	OPENBSD_4_5_BASE:1.27
	OPENBSD_4_4:1.27.0.6
	OPENBSD_4_4_BASE:1.27
	OPENBSD_4_3:1.27.0.4
	OPENBSD_4_3_BASE:1.27
	OPENBSD_4_2:1.27.0.2
	OPENBSD_4_2_BASE:1.27
	OPENBSD_4_1:1.26.0.16
	OPENBSD_4_1_BASE:1.26
	OPENBSD_4_0:1.26.0.14
	OPENBSD_4_0_BASE:1.26
	OPENBSD_3_9:1.26.0.12
	OPENBSD_3_9_BASE:1.26
	OPENBSD_3_8:1.26.0.10
	OPENBSD_3_8_BASE:1.26
	OPENBSD_3_7:1.26.0.8
	OPENBSD_3_7_BASE:1.26
	OPENBSD_3_6:1.26.0.6
	OPENBSD_3_6_BASE:1.26
	OPENBSD_3_5:1.26.0.4
	OPENBSD_3_5_BASE:1.26
	OPENBSD_3_4:1.26.0.2
	OPENBSD_3_4_BASE:1.26
	OPENBSD_3_3:1.25.0.4
	OPENBSD_3_3_BASE:1.25
	OPENBSD_3_2:1.25.0.2
	OPENBSD_3_2_BASE:1.25
	OPENBSD_3_1:1.23.0.6
	OPENBSD_3_1_BASE:1.23
	OPENBSD_3_0:1.23.0.4
	OPENBSD_3_0_BASE:1.23
	OPENBSD_2_9:1.23.0.2
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_8:1.20.0.4
	OPENBSD_2_8_BASE:1.20
	OPENBSD_2_7:1.20.0.2
	OPENBSD_2_7_BASE:1.20
	OPENBSD_2_6:1.13.0.2
	OPENBSD_2_6_BASE:1.13
	OPENBSD_2_5:1.10.0.8
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.10.0.6
	OPENBSD_2_4_BASE:1.10
	OPENBSD_2_3:1.10.0.4
	OPENBSD_2_3_BASE:1.10
	OPENBSD_2_2:1.10.0.2
	OPENBSD_2_2_BASE:1.10
	OPENBSD_2_1:1.7.0.4
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.7.0.2
	OPENBSD_2_0_BASE:1.7
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.34
date	2016.05.28.15.48.30;	author millert;	state Exp;
branches;
next	1.33;
commitid	dx73mL1wLPoHaoc3;

1.33
date	2016.05.23.00.12.58;	author guenther;	state Exp;
branches;
next	1.32;
commitid	kOxgTCFrqjs080tn;

1.32
date	2015.03.23.22.29.32;	author halex;	state Exp;
branches;
next	1.31;
commitid	Gu7ZLHEzDGVTpwP4;

1.31
date	2014.04.19.18.11.19;	author tedu;	state Exp;
branches;
next	1.30;

1.30
date	2014.04.18.22.04.54;	author jmc;	state Exp;
branches;
next	1.29;

1.29
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.25;

1.25
date	2002.09.25.17.30.02;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2002.05.06.23.34.33;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	2000.12.24.00.30.56;	author aaron;	state Exp;
branches;
next	1.22;

1.22
date	2000.12.21.22.59.53;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2000.12.21.16.07.37;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2000.04.18.03.01.33;	author aaron;	state Exp;
branches;
next	1.19;

1.19
date	2000.04.15.11.46.02;	author aaron;	state Exp;
branches;
next	1.18;

1.18
date	2000.02.23.17.28.25;	author aaron;	state Exp;
branches;
next	1.17;

1.17
date	2000.01.27.05.18.47;	author itojun;	state Exp;
branches;
next	1.16;

1.16
date	2000.01.26.06.22.52;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	99.12.30.20.50.13;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	99.12.16.21.30.34;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	99.07.05.04.41.00;	author aaron;	state Exp;
branches;
next	1.12;

1.12
date	99.05.23.14.11.02;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.16.19.55.05;	author alex;	state Exp;
branches;
next	1.10;

1.10
date	97.09.29.18.25.47;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.07.15.16.31.00;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	97.06.13.13.31.56;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	96.09.05.02.39.34;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.09.02.21.36.58;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	96.09.01.22.33.04;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	96.08.19.08.29.37;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.07.29.05.48.39;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.06.31.37;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.03;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.34
log
@rcmd(3) and rcmdsh(3) use getaddrinfo(3) not gethostbyname(3).
@
text
@.\"	$OpenBSD: rcmd.3,v 1.33 2016/05/23 00:12:58 guenther Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: May 23 2016 $
.Dt RCMD 3
.Os
.Sh NAME
.Nm rcmd ,
.Nm rcmd_af ,
.Nm rresvport ,
.Nm rresvport_af ,
.Nm ruserok
.Nd routines for returning a stream to a remote command
.Sh SYNOPSIS
.In unistd.h
.Ft int
.Fn rcmd "char **ahost" "int inport" "const char *locuser" "const char *remuser" "const char *cmd" "int *fd2p"
.Ft int
.Fn rcmd_af "char **ahost" "int inport" "const char *locuser" "const char *remuser" "const char *cmd" "int *fd2p" "int af"
.Ft int
.Fn rresvport "int *port"
.Ft int
.Fn rresvport_af "int *port" "int af"
.Ft int
.Fn ruserok "const char *rhost" "int superuser" "const char *ruser" "const char *luser"
.Sh DESCRIPTION
The
.Fn rcmd
function is used by the superuser to execute a command on a remote
machine using an authentication scheme based on reserved
port numbers.
If the calling process is not setuid, the
.Ev RSH
environment variable is set, and
.Fa inport
is
.Dq shell/tcp ,
.Xr rcmdsh 3
is called instead with the value of
.Ev RSH .
Alternately, if the user is not the superuser,
.Fn rcmd
will invoke
.Xr rcmdsh 3
to run the command via
.Xr ssh 1 .
While
.Fn rcmd
can handle IPv4 cases only,
the
.Fn rcmd_af
function can handle other cases as well.
.Pp
The
.Fn rresvport
and
.Fn rresvport_af
functions return a descriptor to a socket
with an address in the privileged port space.
The
.Fn ruserok
function is used by servers
to authenticate clients requesting service with
.Fn rcmd .
.Pp
The
.Fn rcmd
function looks up the host
.Fa *ahost
using
.Xr getaddrinfo 3
and, if the host exists,
.Fa *ahost
is set to the canonical name of the host.
A connection is then established to a server
residing at the well-known Internet port
.Fa inport .
If the user is not the superuser, the only valid port is
.Dq shell/tcp
(usually port 514).
.Pp
If the connection succeeds,
a socket in the Internet domain of type
.Dv SOCK_STREAM
is returned to the caller, and given to the remote
command as stdin and stdout.
If
.Fa fd2p
is non-zero, then an auxiliary channel to a control
process will be set up, and a descriptor for it will be placed
in
.Fa *fd2p .
The control process will return diagnostic
output from the command (unit 2) on this channel, and will also
accept bytes on this channel as being
.Tn UNIX
signal numbers, to be
forwarded to the process group of the command.
If
.Fa fd2p
is
.Va NULL ,
then the standard error (unit 2 of the remote command) will be made
the same as the standard output and no provision is made for sending
arbitrary signals to the remote process, although you may be able to
get its attention by using out-of-band data.
Note that if the user is not the superuser,
.Fa fd2p
must be
.Va NULL .
.Pp
.Fn rcmd_af
takes address family in the last argument.
If the last argument is
.Dv AF_UNSPEC ,
interpretation of
.Fa *ahost
will obey the underlying address resolution like DNS.
.Pp
The
.Fn rresvport
and
.Fn rresvport_af
functions are used to obtain a socket with a privileged
address bound to it.
This socket is suitable for use by
.Fn rcmd
and several other functions.
Privileged Internet ports are those in the range 0 to
.Va IPPORT_RESERVED - 1 ,
which happens to be 1023.
Only the superuser is allowed to bind an address of this sort to a socket.
.Fn rresvport
and
.Fn rresvport_af
need to be seeded with a port number; if that port
is not available these functions will find another.
.Pp
The
.Fn ruserok
function takes a remote host's name, two user names,
and a flag indicating whether the local user's
name is that of the superuser.
Then, if the user is
.Em not
the superuser, it checks the
.Pa /etc/hosts.equiv
file.
If that lookup is not done, or is unsuccessful, the
.Pa .rhosts
in the local user's home directory is checked to see if the request for
service is allowed.
.Pp
If this file does not exist, is not a regular file, is owned by anyone
other than the user or the superuser, or is writeable by anyone other
than the owner, the check automatically fails.
Zero is returned if the machine name is listed in the
.Pa hosts.equiv
file, or the host and remote user name are found in the
.Pa .rhosts
file; otherwise
.Fn ruserok
returns \-1.
If the local domain (as obtained from
.Xr getaddrinfo 3 )
is the same as the remote domain, only the machine name need be specified.
.Pp
.Fn ruserok
implicitly requires trusting the DNS server for the remote host's domain.
.Sh DIAGNOSTICS
The
.Fn rcmd
function returns a valid socket descriptor on success.
It returns \-1 on error and prints a diagnostic message on the standard error.
.Pp
The
.Fn rresvport
and
.Fn rresvport_af
functions return a valid, bound socket descriptor on success.
It returns \-1 on error with the global value
.Va errno
set according to the reason for failure.
The error code
.Er EAGAIN
is overloaded to mean
.Dq all network ports in use .
.Sh SEE ALSO
.Xr ssh 1 ,
.Xr intro 2 ,
.Xr bindresvport 3 ,
.Xr bindresvport_sa 3 ,
.Xr rcmdsh 3
.Sh HISTORY
These
functions appeared in
.Bx 4.2 .
.Pp
The
.Fn iruserok
and
.Fn iruserok_sa
functions, IP address based versions of
.Fn ruserok ,
were removed in
.Ox 6.0 .
@


1.33
log
@Remove iruserok(_sa)? and __ivaliduser(sa)?

ok millert@@ deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.32 2015/03/23 22:29:32 halex Exp $
d30 1
a30 1
.Dd $Mdocdate: March 23 2015 $
d97 1
a97 1
.Xr gethostbyname 3
d100 1
a100 1
is set to the standard name of the host.
d191 1
a191 1
.Xr gethostname 3 )
@


1.32
log
@Make rcmdsh(3) not fail if it is passed a non resolvable hostname.
Instead, silently ignore the fact and instead let the underlying
ssh (or $RSH) command handle it.

ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.31 2014/04/19 18:11:19 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: April 19 2014 $
d38 1
a38 3
.Nm iruserok ,
.Nm ruserok ,
.Nm iruserok_sa
a50 2
.Fn iruserok "u_int32_t raddr" "int superuser" "const char *ruser" "const char *luser"
.Ft int
a51 2
.Ft int
.Fn iruserok_sa "const void *sa" "int salen" "int superuser" "const char *ruser" "const char *luser"
a86 2
.Fn iruserok
and
d88 1
a88 1
functions are used by servers
a90 3
.Fn iruserok_sa
is an address family independent variant of
.Fn iruserok .
d141 1
a141 1
.Dv PF_UNSPEC ,
a165 2
.Fn iruserok
and
d167 2
a168 2
functions take a remote host's IP address or name, respectively,
two user names and a flag indicating whether the local user's
a187 2
.Fn iruserok
and
d189 1
a189 1
return \-1.
a193 11
If the IP address of the remote host is known,
.Fn iruserok
should be used in preference to
.Fn ruserok ,
as it does not require trusting the DNS server for the remote host's domain.
.Pp
While
.Fn iruserok
can handle IPv4 addresses only,
.Fn iruserok_sa
and
d195 1
a195 9
can handle other address families as well, like IPv6.
The first argument of
.Fn iruserok_sa
is typed as
.Li "void *"
to avoid dependency between
.In unistd.h
and
.In sys/socket.h .
d224 9
@


1.31
log
@change some rsh references to ssh. poke by jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.30 2014/04/18 22:04:54 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: April 18 2014 $
d108 2
a109 3
.Xr gethostbyname 3 ,
returning \-1 if the host does not exist.
Otherwise
d111 2
a112 2
is set to the standard name of the host
and a connection is established to a server
@


1.30
log
@remove references to rshd;
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.29 2014/01/21 03:15:45 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: January 21 2014 $
d78 1
a78 1
.Xr rsh 1 .
d250 1
a250 1
.Xr rsh 1 ,
@


1.29
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.28 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
a98 4
All four functions are present in the same file and are used
by the
.Xr rshd 8
server (among others).
a157 3
The protocol is described in detail in
.Xr rshd 8 .
.Pp
d254 1
a254 2
.Xr rcmdsh 3 ,
.Xr rshd 8
@


1.28
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.27 2007/05/31 19:19:30 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d235 1
a235 1
.Aq Pa unistd.h
d237 1
a237 1
.Aq Pa sys/socket.h .
@


1.27
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.26 2003/06/02 20:18:35 millert Exp $
d30 1
a30 1
.Dd $Mdocdate$
d43 1
a43 1
.Fd #include <unistd.h>
@


1.26
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.25 2002/09/25 17:30:02 deraadt Exp $
d30 1
a30 1
.Dd June 4, 1993
@


1.25
log
@missing arg; peterw@@ifost.org.au
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.24 2002/05/06 23:34:33 millert Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.24
log
@Kill/adjust r(login|exec)d? references now that those are no longer in
the tree.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.23 2000/12/24 00:30:56 aaron Exp $
d61 1
a61 1
.Fn iruserok_sa "const void *sa" "int salen" "int superuser" "const char *ruser"
@


1.23
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.22 2000/12/21 22:59:53 deraadt Exp $
a260 1
.Xr rlogin 1 ,
a265 3
.Xr rexec 3 ,
.Xr rexecd 8 ,
.Xr rlogind 8 ,
@


1.22
log
@more Va stuff
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.21 2000/12/21 16:07:37 deraadt Exp $
d65 1
a65 2
function
is used by the superuser to execute a command on a remote
d94 1
a94 2
functions
return a descriptor to a socket
d113 1
a113 2
function
looks up the host
d245 1
a245 2
function
returns a valid socket descriptor on success.
d252 1
a252 2
functions
return a valid, bound socket descriptor on success.
@


1.21
log
@IPPORT_RESERVED - 1, not 1023
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.21 2000/12/21 15:57:48 deraadt Exp $
d150 6
a155 4
is 0, then the standard error (unit 2 of the remote command) will be made the
same as the standard output and no
provision is made for sending arbitrary signals to the remote process,
although you may be able to get its attention by using out-of-band data.
d158 2
a159 1
must be 0.
@


1.20
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.19 2000/04/15 11:46:02 aaron Exp $
d178 3
a180 1
Privileged Internet ports are those in the range 0 to 1023.
@


1.19
log
@- For consistency, `super-user' -> `superuser' in all cases.
- Some punctuation fixes.
- Some `id' -> `ID'.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.18 2000/02/23 17:28:25 aaron Exp $
d68 2
a69 1
port numbers.  If the calling process is not setuid, the
d174 2
a175 2
address bound to it.  This socket is suitable for use
by
d177 3
a179 3
and several other functions.  Privileged Internet ports are those
in the range 0 to 1023.  Only the superuser
is allowed to bind an address of this sort to a socket.
@


1.18
log
@Small bits of clean-up.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.17 2000/01/27 05:18:47 itojun Exp $
d66 1
a66 1
is used by the super-user to execute a command on a remote
d77 1
a77 1
Alternately, if the user is not the super-user,
d126 1
a126 1
If the user is not the super-user, the only valid port is
d153 1
a153 1
Note that if the user is not the super-user,
d177 1
a177 1
in the range 0 to 1023.  Only the super-user
d191 1
a191 1
name is that of the super-user.
d194 1
a194 1
the super-user, it checks the
d203 1
a203 1
other than the user or the super-user, or is writeable by anyone other
@


1.17
log
@add IPv6-ready rcmd() friends.
	rcmd(): IPv4 only
	rcmd_af(): af independent
	ruserok(): af independent
	iruserok(): IPv4 only
	iruserok_sa(): af independent
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.16 2000/01/26 06:22:52 deraadt Exp $
d89 1
d149 2
a150 6
is 0, then the
.Em stderr
(unit 2 of the remote
command) will be made the same as the
.Em stdout
and no
d234 1
a234 1
.Fa "void *"
d236 1
a236 1
.Aq Li unistd.h
d238 1
a238 1
.Aq Li sys/socket.h .
@


1.16
log
@man page updates from itojun
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.15 1999/12/30 20:50:13 deraadt Exp $
d39 1
d43 2
a44 1
.Nm ruserok
d51 2
d60 2
d83 6
d107 3
d160 8
d226 16
@


1.15
log
@add the _af versions to the NAME chunk
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.14 1999/12/16 21:30:34 deraadt Exp $
d228 1
a228 1
.Xr bindresvport_af 3 ,
@


1.14
log
@rresvport_af() and bindresvport_af()
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.13 1999/07/05 04:41:00 aaron Exp $
d40 1
@


1.13
log
@repairs; better English, formatting, etc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.12 1999/05/23 14:11:02 aaron Exp $
d50 2
d78 4
a81 2
function
returns a descriptor to a socket
d149 3
a151 1
function is used to obtain a socket with a privileged
d159 4
a162 2
needs to be seeded with a port number; if that port
is not available it will find another.
d211 4
a214 2
function
returns a valid, bound socket descriptor on success.
d227 1
@


1.12
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.11 1999/05/16 19:55:05 alex Exp $
d59 3
a61 3
port numbers.  If the calling process is not setuid and the
.Li RSH
environment variable is set and
d64 1
a64 1
.Li shell/tcp ,
d67 1
a67 1
.Li RSH .
d106 1
a106 1
.Li shell/tcp ,
d113 1
a113 4
command as 
.Em stdin
and
.Em stdout .
d128 1
a128 1
is 0, then the 
d131 1
a131 1
command) will be made the same as the 
d147 1
a147 1
by 
d164 1
a164 1
.Em NOT
d177 1
a177 1
.Dq Pa hosts.equiv
d179 1
a179 1
.Dq Pa .rhosts
d209 3
a211 2
.Dv EAGAIN
is overloaded to mean ``All network ports in use.''
d224 1
a224 1
functions appeared in 
@


1.11
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.10 1997/09/29 18:25:47 deraadt Exp $
d36 1
a36 1
.Os BSD 4.2
@


1.10
log
@Xr bindresvport and rresvport
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.9 1997/07/15 16:31:00 deraadt Exp $
d218 2
a220 1
.Xr rcmdsh 3 ,
a222 1
.Xr bindresvport 3 ,
@


1.9
log
@Xr repair
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.8 1997/06/13 13:31:56 deraadt Exp $
d222 1
@


1.8
log
@s/environmental/environment/
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.7 1996/09/05 02:39:34 millert Exp $
d189 1
a189 1
.Xr gethostname 2 )
@


1.7
log
@document latest rcmd change
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.6 1996/09/02 21:36:58 millert Exp $
d61 1
a61 1
environmental variable is set and
@


1.6
log
@talk about $RSH
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.5 1996/09/01 22:33:04 millert Exp $
d57 3
a59 3
is used by the super-user to execute a command on
a remote machine using an authentication scheme based
on reserved port numbers.  If the
d61 3
a63 1
environmental variable is set and inport is
@


1.5
log
@talk about rcmdsh()
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.4 1996/08/19 08:29:37 tholo Exp $
d59 8
a66 1
on reserved port numbers.  If the user is not the super-user,
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: rcmd.3,v 1.8.6.1 1996/05/28 02:29:22 mrg Exp $
d59 6
a64 1
on reserved port numbers.
d96 3
d130 3
d210 1
@


1.3
log
@rresvport() in terms of bind() & bindresvport()
@
text
@d1 1
a1 1
.\"	$NetBSD: rcmd.3,v 1.8.6.1 1996/05/28 02:29:22 mrg Exp $
a32 2
.\"
.\"     @@(#)rcmd.3	8.1 (Berkeley) 6/4/93
@


1.2
log
@iruserok() can finally safely use a u_int32_t for the ip addr
@
text
@d137 3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: rcmd.3,v 1.8 1995/02/25 06:20:52 cgd Exp $
d52 1
a52 1
.Fn iruserok "u_long raddr" "int superuser" "const char *ruser" "const char *luser"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
