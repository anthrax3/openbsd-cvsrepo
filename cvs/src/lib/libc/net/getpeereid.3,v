head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.18
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.4
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.2
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.8
	OPENBSD_5_0:1.1.0.6
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.4
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.2
	OPENBSD_4_8_BASE:1.1;
locks; strict;
comment	@.\" @;


1.3
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.22.02.21.49;	author matthew;	state Exp;
branches;
next	1.1;

1.1
date	2010.07.01.19.15.30;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@.\"	$OpenBSD: getpeereid.3,v 1.2 2012/04/22 02:21:49 matthew Exp $
.\"
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.Dd $Mdocdate: April 22 2012 $
.Dt GETPEEREID 3
.Os
.Sh NAME
.Nm getpeereid
.Nd get effective user and group identification of locally-connected peer
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.Ft int
.Fn getpeereid "int s" "uid_t *euid" "gid_t *egid"
.Sh DESCRIPTION
.Fn getpeereid
returns the effective user ID and group ID of the peer connected to
a
.Ux Ns -domain
socket (see
.Xr unix 4 ) .
The argument
.Fa s
must be of type
.Dv SOCK_STREAM
or
.Dv SOCK_SEQPACKET .
.Pp
One common use is for
.Ux Ns -domain
servers to determine the credentials of clients that have connected to it.
.Pp
.Fn getpeereid
takes three parameters:
.Bl -bullet
.It
.Fa s
contains the file descriptor of the socket whose peer credentials
should be looked up.
.It
.Fa euid
points to a
.Li uid_t
variable into which the effective user ID for the connected peer will
be stored.
.It
.Fa egid
points to a
.Li gid_t
variable into which the effective group ID for the connected peer will
be stored.
.El
.Sh RETURN VALUES
If the call succeeds, a 0 is returned and
.Fa euid
and
.Fa egid
are set to the effective user ID and group ID of the connected peer.
Otherwise,
.Va errno
is set and a value of \-1 is returned.
.Sh ERRORS
On failure,
.Va errno
is set to one of the following:
.Bl -tag -width Er
.It Bq Er EBADF
The argument
.Fa s
is not a valid descriptor.
.It Bq Er ENOTSOCK
The argument
.Fa s
is a file, not a socket.
.It Bq Er EOPNOTSUPP
The socket is not in the
.Ux Ns -domain .
.It Bq Er ENOTCONN
The socket is not connected.
.It Bq Er ENOBUFS
Insufficient resources were available in the system
to perform the operation.
.El
.Sh SEE ALSO
.Xr accept 2 ,
.Xr bind 2 ,
.Xr getpeername 2 ,
.Xr getsockname 2 ,
.Xr getsockopt 2 ,
.Xr socket 2 ,
.Xr unix 4
.Sh HISTORY
The
.Fn getpeereid
function call appeared in
.Ox 3.0 .
@


1.2
log
@Document that getpeereid() works for SOCK_SEQPACKET sockets too.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeereid.3,v 1.1 2010/07/01 19:15:30 deraadt Exp $
d29 1
a29 1
.Dd $Mdocdate: July 1 2010 $
d36 2
a37 2
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
@


1.1
log
@getpeereid() can now be a library routine using getsockopt() with
SOL_SOCKET and SO_PEERCRED, only issue being that it cannot return
EFAULT for a page fault.  The kernel code will soon be put into
compat, and then in 10 years or so tedu will delete it.
ok guenther millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: getpeereid.2,v 1.9 2009/12/29 10:25:43 sobrado Exp $
d29 1
a29 1
.Dd $Mdocdate: December 29 2009 $
d50 3
a52 1
.Dv SOCK_STREAM .
@

