head	1.21;
access;
symbols
	OPENBSD_6_2:1.21.0.10
	OPENBSD_6_2_BASE:1.21
	OPENBSD_6_1:1.21.0.8
	OPENBSD_6_1_BASE:1.21
	OPENBSD_6_0:1.21.0.4
	OPENBSD_6_0_BASE:1.21
	OPENBSD_5_9:1.21.0.2
	OPENBSD_5_9_BASE:1.21
	OPENBSD_5_8:1.20.0.6
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.18.0.4
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.4
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.2
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.20
	OPENBSD_5_0:1.14.0.18
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.16
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.14
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.10
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.12
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.8
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.6
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.2
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.12.0.6
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.4
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.2
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.11.0.4
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.2
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.4
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6;
locks; strict;
comment	@.\" @;


1.21
date	2015.11.21.07.48.10;	author jmc;	state Exp;
branches;
next	1.20;
commitid	WS0xJSOsYaMSBFBJ;

1.20
date	2015.01.29.01.46.30;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	LyCIkS84kwBpdwms;

1.19
date	2014.04.07.17.57.56;	author schwarze;	state Exp;
branches;
next	1.18;

1.18
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.17;

1.17
date	2013.08.14.12.38.15;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2012.07.13.09.32.23;	author krw;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2007.02.14.17.07.30;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.07.22.04.50.51;	author jaredy;	state Exp;
branches;
next	1.11;

1.11
date	2004.04.16.10.48.39;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.30.21.37.59;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.06.04.07.37;	author david;	state Exp;
branches;
next	1.8;

1.8
date	2002.01.02.06.08.55;	author nordin;	state Exp;
branches;
next	1.7;

1.7
date	2001.10.01.21.58.53;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.18.03.01.31;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.16.13.48.53;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.12.21.48.01;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	2000.02.23.17.04.32;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	2000.02.23.15.39.53;	author itojun;	state Exp;
branches;
next	1.1;

1.1
date	2000.02.23.06.55.58;	author itojun;	state Exp;
branches;
next	;


desc
@@


1.21
log
@point to netintro(4) rather than (now removed) networking(4);
@
text
@.\"	$OpenBSD: getifaddrs.3,v 1.20 2015/01/29 01:46:30 schwarze Exp $
.\"	BSDI	getifaddrs.3,v 2.5 2000/02/23 14:51:59 dab Exp
.\"
.\" Copyright (c) 1995, 1999
.\"	Berkeley Software Design, Inc.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" THIS SOFTWARE IS PROVIDED BY Berkeley Software Design, Inc. ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL Berkeley Software Design, Inc. BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.Dd $Mdocdate: January 29 2015 $
.Dt GETIFADDRS 3
.Os
.Sh NAME
.Nm getifaddrs ,
.Nm freeifaddrs
.Nd get interface addresses
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In ifaddrs.h
.Ft int
.Fn getifaddrs "struct ifaddrs **ifap"
.Ft void
.Fn freeifaddrs "struct ifaddrs *ifap"
.Sh DESCRIPTION
The
.Fn getifaddrs
function stores a reference to a linked list of the network interfaces
on the local machine in the memory referenced by
.Fa ifap .
The list consists of
.Vt ifaddrs
structures, as defined in the include file
.In ifaddrs.h .
The
.Vt ifaddrs
structure contains at least the following entries:
.Bd -literal
    struct ifaddrs   *ifa_next;         /* Pointer to next struct */
    char             *ifa_name;         /* Interface name */
    u_int             ifa_flags;        /* Interface flags */
    struct sockaddr  *ifa_addr;         /* Interface address */
    struct sockaddr  *ifa_netmask;      /* Interface netmask */
    struct sockaddr  *ifa_broadaddr;    /* Interface broadcast address */
    struct sockaddr  *ifa_dstaddr;      /* P2P interface destination */
    void             *ifa_data;		/* Address specific data */
.Ed
.Bl -tag -width ifa_broadaddr
.It Fa ifa_next
Contains a pointer to the next structure on the list.
This field is set to
.Dv NULL
in the last structure on the list.
.It Fa ifa_name
Contains the interface name.
.It Fa ifa_flags
Contains the interface flags, as set by
.Xr ifconfig 8 .
.It Fa ifa_addr
References either the address of the interface or the link level
address of the interface, if one exists, otherwise it is
.Dv NULL .
(The
.Fa sa_family
field of the
.Fa ifa_addr
field should be consulted to determine the format of the
.Fa ifa_addr
address.)
.It Fa ifa_netmask
References the netmask associated with
.Fa ifa_addr ,
if one is set, otherwise it is
.Dv NULL .
.It Fa ifa_broadaddr
This field, which should only be referenced for non-P2P interfaces,
references the broadcast address associated with
.Fa ifa_addr ,
if one exists, otherwise it is
.Dv NULL .
.It Fa ifa_dstaddr
This field, which should only be referenced for P2P interfaces,
references the destination address on a P2P interface,
if one exists, otherwise it is
.Dv NULL .
.It Fa ifa_data
References address family specific data.
For
.Dv AF_LINK
addresses it contains a pointer to the
.Vt struct if_data
(as defined in include file
.In net/if.h )
which contains various interface attributes and statistics.
For all other address families,
.Fa ifa_data
is
.Dv NULL .
.El
.Pp
The data returned by
.Fn getifaddrs
is dynamically allocated and should be freed using
.Fn freeifaddrs
when no longer needed.
.Sh RETURN VALUES
.Rv -std
.Sh ERRORS
The
.Fn getifaddrs
may fail and set
.Va errno
for any of the errors specified for the library routines
.Xr ioctl 2 ,
.Xr socket 2 ,
.Xr malloc 3 ,
or
.Xr sysctl 3 .
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr socket 2 ,
.Xr sysctl 3 ,
.Xr netintro 4 ,
.Xr ifconfig 8
.Sh HISTORY
The
.Fn getifaddrs
function first appeared in BSDI
.Bsx .
The function has been available on
.Ox
since
.Ox 2.7 .
.Sh BUGS
If both
.In net/if.h
and
.In ifaddrs.h
are being included,
.In net/if.h
.Em must
be included before
.In ifaddrs.h .
@


1.20
log
@Use .Rv where appropriate, and move it to RETURN VALUES;
remove .Tn, and a few minor macro adjustments.
Patch from Kaspars at Bankovskis dot net.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.19 2014/04/07 17:57:56 schwarze Exp $
d24 1
a24 1
.Dd $Mdocdate: April 7 2014 $
d137 1
a137 1
.Xr networking 4 ,
@


1.19
log
@Add some missing names to the NAME sections.
For inet(3), go the other way, remove some bogus symlinks.
Found while testing the new makewhatis(8).
ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.18 2014/01/21 03:15:45 schwarze Exp $
d24 1
a24 1
.Dd $Mdocdate: January 21 2014 $
d46 1
a46 1
.Nm ifaddrs
d50 1
a50 1
.Nm ifaddrs
d105 1
a105 1
.Li struct if_data
d121 1
a121 4
Upon successful completion, a value of 0 is returned.
Otherwise, a value of \-1 is returned and
.Va errno
is set to indicate the error.
@


1.18
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.17 2013/08/14 12:38:15 jmc Exp $
d24 1
a24 1
.Dd $Mdocdate: August 14 2013 $
d28 2
a29 1
.Nm getifaddrs
@


1.17
log
@use Bsx;
from jan stary
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.16 2013/06/05 03:39:23 tedu Exp $
d24 1
a24 1
.Dd $Mdocdate: June 5 2013 $
d47 1
a47 1
.Aq Pa ifaddrs.h .
d106 1
a106 1
.Aq Pa net/if.h )
d152 1
a152 1
.Aq Pa net/if.h
d154 1
a154 1
.Aq Pa ifaddrs.h
d156 1
a156 1
.Aq Pa net/if.h
d159 1
a159 1
.Aq Pa ifaddrs.h .
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.15 2012/07/13 09:32:23 krw Exp $
d24 1
a24 1
.Dd $Mdocdate: July 13 2012 $
d144 2
a145 1
function first appeared in BSDI BSD/OS.
@


1.15
log
@Use same (lame) verbiage to explain ifa_dstaddr as is used for
ifa_broadaddr.  i.e. make it make clear that this field is only
valid for P2P. (Hint: one's a field, and one's a #define giving a
new name to said field)

ok guenther@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.14 2007/05/31 19:19:30 jmc Exp $
d24 1
a24 1
.Dd $Mdocdate: May 31 2007 $
d31 3
a33 3
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <ifaddrs.h>
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.13 2007/02/14 17:07:30 jmc Exp $
d24 1
a24 1
.Dd $Mdocdate$
d95 2
a96 1
References the destination address on a P2P interface,
@


1.13
log
@correct a mistake concerning ifa_data;
found by Srebrenko Sehic, corrected by millert and claudio;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.12 2005/07/22 04:50:51 jaredy Exp $
d24 1
a24 1
.Dd October 12, 1995
@


1.12
log
@- sync prototypes and header file excerpts
- typos/spelling, punctuation, rewording, macro, and layout fixes.

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.11 2004/04/16 10:48:39 jmc Exp $
d107 4
a110 5
For all other address families, it contains a pointer to the
.Li struct ifa_data
(as defined in include file
.Aq Pa net/if.h )
which contains per-address interface statistics.
@


1.11
log
@more display/list fixes, and a little whitespace;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.10 2003/05/30 21:37:59 jmc Exp $
d61 1
a61 1
.Bl -tag -width Ds
d66 1
a66 1
in last structure on the list.
d145 1
a145 1
The function is supplied on
@


1.10
log
@- section reorder
- macro cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.9 2003/03/06 04:07:37 david Exp $
a60 1
.Pp
@


1.9
log
@date should be written formally: .Dd Month day, year
ok henning@@ jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.8 2002/01/02 06:08:55 nordin Exp $
a135 10
.Sh BUGS
If both
.Aq Pa net/if.h
and
.Aq Pa ifaddrs.h
are being included,
.Aq Pa net/if.h
.Em must
be included before
.Aq Pa ifaddrs.h .
d150 10
@


1.8
log
@Add missing .Os. deraadt@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.7 2001/10/01 21:58:53 millert Exp $
d24 1
a24 1
.Dd "October 12, 1995"
@


1.7
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.6 2000/04/18 03:01:31 aaron Exp $
d26 1
@


1.6
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.5 2000/04/16 13:48:53 itojun Exp $
d36 1
a36 1
.Fn freeifaddrs "struct ifaddrs *ifp"
@


1.5
log
@avoid misunderstanding in history portion, okay'ed by aaron.
may need english check:-)  (getifaddrs.c is straight import from bsdi4)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.4 2000/04/12 21:48:01 aaron Exp $
d99 2
a100 1
References address family specific data.  For
@


1.4
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.3 2000/02/23 17:04:32 aaron Exp $
d154 3
a156 1
This implementation first appeared in
@


1.3
log
@- Put structure field descriptions in a tagged list.
- More mdoc macros where appropriate.
- Mention OpenBSD in HISTORY.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.2 2000/02/23 15:39:53 itojun Exp $
d79 1
a79 1
.Fa ifa_addr 
d99 1
a99 1
References address family specific data.  For 
@


1.2
log
@add freeifaddrs(3), which reclaims region allocated by getifaddrs(3).
in sync with kame and bsdi.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getifaddrs.3,v 1.1 2000/02/23 06:55:58 itojun Exp $
d61 4
a64 4
The
.Li ifa_next
field contains a pointer to the next structure on the list.
This field is
d67 9
a75 15
.Pp
The
.Li ifa_name
field contains the interface name.
.Pp
The
.Li ifa_flags
field contains the interface flags, as set by
.Xr ifconfig 8
utility.
.Pp
The
.Li ifa_addr
field references either the address of the interface or the link level
address of the interface, if one exists, otherwise it is NULL.
d77 1
a77 1
.Li sa_family
d79 1
a79 1
.Li ifa_addr 
d81 1
a81 1
.Li ifa_addr
d83 7
a89 11
.Pp
The
.Li ifa_netmask
field references the netmask associated with
.Li ifa_addr ,
if one is set, otherwise it is NULL.
.Pp
The
.Li ifa_broadaddr
field,
which should only be referenced for non-P2P interfaces,
d91 9
a99 11
.Li ifa_addr ,
if one exists, otherwise it is NULL.
.Pp
The
.Li ifa_dstaddr
field references the destination address on a P2P interface,
if one exists, otherwise it is NULL.
.Pp
The
.Li ifa_data
field references address family specific data.  For 
d102 3
a104 2
.Fa struct if_data
.Pq as defined in include file Aq Pa net/if.h
d107 3
a109 2
.Fa struct ifa_data
.Pq as defined in include file Aq Pa net/if.h
d111 1
d120 1
a120 1
Otherwise, a value of -1 is returned and
d131 1
a131 1
.Xr malloc 3
d152 4
a155 2
.Nm
implementation first appeared in BSDI BSD/OS.
@


1.1
log
@add getifaddrs(3), from bsdi4.
this will help future apps from complexity of SIOCGIFCONF.
NOTE: getifaddrs(3) uses sysctl interface, not SIOCGIFCONF.
@
text
@d1 2
a2 2
.\"	$OpenBSD$
.\"	BSDI	getifaddrs.3,v 2.4 1999/03/15 20:57:20 jch Exp
d35 2
d125 1
a125 2
.Fn free
.Pq see Xr free 3
@

