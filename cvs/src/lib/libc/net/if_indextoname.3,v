head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.15.0.10
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.11.0.22
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.20
	OPENBSD_5_0:1.11.0.18
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.10
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.6
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.4
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.2
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.8.0.2
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@.\" @;


1.16
date	2015.11.21.07.48.10;	author jmc;	state Exp;
branches;
next	1.15;
commitid	WS0xJSOsYaMSBFBJ;

1.15
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.14;

1.14
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.13;

1.13
date	2012.09.27.11.31.58;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2012.08.22.18.32.47;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2005.12.30.20.45.59;	author claudio;	state Exp;
branches;
next	1.9;

1.9
date	2005.07.22.04.50.51;	author jaredy;	state Exp;
branches;
next	1.8;

1.8
date	2005.02.25.03.12.43;	author cloder;	state Exp;
branches;
next	1.7;

1.7
date	2003.08.08.09.26.02;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.03.07.22.41.12;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2000.03.01.17.31.23;	author todd;	state Exp;
branches;
next	1.3;

1.3
date	99.07.05.04.40.59;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.07.03.21.43.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.07.03.20.22.21;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@point to netintro(4) rather than (now removed) networking(4);
@
text
@.\"	$OpenBSD: if_indextoname.3,v 1.15 2014/01/21 03:15:45 schwarze Exp $
.\" Copyright (c) 1983, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     From: @@(#)rcmd.3	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: January 21 2014 $
.Dt IF_NAMETOINDEX 3
.Os
.Sh NAME
.Nm if_nametoindex ,
.Nm if_indextoname ,
.Nm if_nameindex ,
.Nm if_freenameindex
.Nd convert interface index to name, and vice versa
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In net/if.h
.Ft "unsigned int"
.Fn if_nametoindex "const char *ifname"
.Ft "char *"
.Fn if_indextoname "unsigned int ifindex" "char *ifname"
.Ft "struct if_nameindex *"
.Fn if_nameindex "void"
.Ft "void"
.Fn if_freenameindex "struct if_nameindex *ptr"
.Sh DESCRIPTION
These functions map interface indexes to interface names (such as
.Dq lo0 ) ,
and vice versa.
.Pp
The
.Fn if_nametoindex
function converts an interface name specified by the
.Fa ifname
argument to an interface index (positive integer value).
If the specified interface does not exist, 0 will be returned.
.Pp
.Fn if_indextoname
converts an interface index specified by the
.Fa ifindex
argument to an interface name.
The
.Fa ifname
argument must point to a buffer of at least
.Dv IF_NAMESIZE
bytes into which the interface name corresponding to the specified index is
returned.
.Pf ( Dv IF_NAMESIZE
is also defined in
.In net/if.h
and its value includes a terminating NUL byte at the end of the
interface name.)
This pointer is also the return value of the function.
If there is no interface corresponding to the specified index,
.Dv NULL
is returned.
.Pp
.Fn if_nameindex
returns an array of
.Vt if_nameindex
structures.
.Vt if_nameindex
is also defined in
.In net/if.h ,
and is as follows:
.Bd -literal -offset indent
struct if_nameindex {
	unsigned int	  if_index;	/* 1, 2, ... */
	char		 *if_name;	/* NUL-terminated name */
};
.Ed
.Pp
The end of the array of structures is indicated by a structure with
an
.Fa if_index
of 0 and an
.Fa if_name
of
.Dv NULL .
The function returns a null pointer on error.
The memory used for this array of structures along with the interface
names pointed to by the
.Fa if_name
members is obtained dynamically.
This memory is freed by the
.Fn if_freenameindex
function.
.Pp
.Fn if_freenameindex
takes a pointer that was returned by
.Fn if_nameindex
as argument
.Pq Fa ptr ,
and it reclaims the region allocated.
.Sh DIAGNOSTICS
.Fn if_nametoindex
returns 0 on error, positive integer on success.
.Fn if_indextoname
and
.Fn if_nameindex
return
.Dv NULL
on errors.
.Sh SEE ALSO
.Xr getifaddrs 3 ,
.Xr netintro 4
.Sh STANDARDS
.Rs
.%A R. Gilligan
.%A S. Thomson
.%A J. Bound
.%A J. McCann
.%A W. Stevens
.%D February 2003
.%R RFC 3493
.%T Basic Socket Interface Extensions for IPv6
.Re
@


1.15
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.14 2013/06/05 03:39:23 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: June 5 2013 $
d132 1
a132 1
.Xr networking 4
@


1.14
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.13 2012/09/27 11:31:58 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: September 27 2012 $
d76 1
a76 1
.Aq Pa net/if.h
d90 1
a90 1
.Aq Pa net/if.h ,
@


1.13
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.12 2012/08/22 18:32:47 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: August 22 2012 $
d41 3
a43 3
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <net/if.h>
@


1.12
log
@rfc 2553 (not 2533) has been replaced by rfc 3493;
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.11 2007/05/31 19:19:30 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d133 1
a143 3
.Sh STANDARDS
These functions are defined in ``Basic Socket Interface Extensions for IPv6''
.Pq RFC 3493 .
@


1.11
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.10 2005/12/30 20:45:59 claudio Exp $
d31 1
a31 1
.Dd $Mdocdate$
d137 1
d139 2
a141 2
.%R RFC 2553
.%D March 1999
d145 1
a145 1
.Pq RFC 2533 .
@


1.10
log
@Currently sys/socket.h needs sys/types.h so add #include <sys/types.h> to
the list of necessary includes. Now the manpages match reality.
OK mpf@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.9 2005/07/22 04:50:51 jaredy Exp $
d31 1
a31 1
.Dd May 21, 1998
@


1.9
log
@- sync prototypes and header file excerpts
- typos/spelling, punctuation, rewording, macro, and layout fixes.

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.8 2005/02/25 03:12:43 cloder Exp $
d41 1
@


1.8
log
@Be correct in our man pages when talking about NUL termination (that is,
termination with '\0') vs. null termination.
Input from krw@@, jaredy@@, jmc@@.  OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.7 2003/08/08 09:26:02 jmc Exp $
d41 1
d85 1
a85 1
.Fa if_nameindex
d87 1
a87 1
.Fa if_nametoindex
d91 1
a91 1
.Bd -literal -offset
d93 2
a94 2
    unsigned int   if_index;  /* 1, 2, ... */
    char          *if_name;   /* NUL-terminated name: "le0", ... */
d132 9
a140 3
.Pp
R. Gilligan, S.  Thomson, J. Bound, and W. Stevens,
``Basic Socket Interface Extensions for IPv6,'' RFC 2553, March 1999.
@


1.7
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.6 2003/06/02 20:18:35 millert Exp $
d75 1
a75 1
and its value includes a terminating null byte at the end of the
d93 1
a93 1
    char          *if_name;   /* null terminated name: "le0", ... */
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.5 2002/03/07 22:41:12 millert Exp $
d133 1
a133 1
``Basic Socket Interface Extensions for IPv6,'' RFC2553, March 1999.
d136 1
a136 1
.Pq RFC2533 .
@


1.5
log
@Xr getifaddrs(3) and networking(4) in SEE ALSO section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.4 2000/03/01 17:31:23 todd Exp $
d13 1
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD: if_indextoname.3,v 1.3 1999/07/05 04:40:59 aaron Exp $
d133 3
@


1.3
log
@repairs; better English, formatting, etc.
@
text
@d1 1
a33 1
.\"	$Id: if_indextoname.3,v 1.2 1999/07/03 21:43:12 deraadt Exp $
@


1.2
log
@if_freenameindex() API
@
text
@d33 1
a33 1
.\"	$Id: if_indextoname.3,v 1.1.2.2.10.2 1999/04/08 05:39:01 sumikawa Exp $
d37 1
a37 1
.Os KAME
d55 3
a57 6
The functions map interface index to readable interface name
.Po
such as
.Li ``lo0''
.Pc
, and vice versa.
d59 1
d61 3
a63 2
converts readable interface name to interface index
.Pp positive integer value .
d67 3
a69 1
converts interface index to readable interface name.
d76 1
a76 2
.Po
.Dv IF_NAMESIZE
d78 1
a78 1
.Li <net/if.h>
d80 1
a80 2
interface name.
.Pc
d92 1
a92 1
.Li <net/if.h> ,
d108 1
a108 3
The function returns a
.Dv NULL
pointer upon an error.
@


1.1
log
@man pages from WIDE
@
text
@d42 1
d53 1
d117 1
a117 1
.Xr free 3
d119 7
@

