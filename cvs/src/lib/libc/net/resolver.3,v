head	1.37;
access;
symbols
	OPENBSD_6_1:1.37.0.2
	OPENBSD_6_1_BASE:1.37
	OPENBSD_6_0:1.33.0.4
	OPENBSD_6_0_BASE:1.33
	OPENBSD_5_9:1.33.0.2
	OPENBSD_5_9_BASE:1.33
	OPENBSD_5_8:1.30.0.6
	OPENBSD_5_8_BASE:1.30
	OPENBSD_5_7:1.30.0.2
	OPENBSD_5_7_BASE:1.30
	OPENBSD_5_6:1.29.0.6
	OPENBSD_5_6_BASE:1.29
	OPENBSD_5_5:1.29.0.4
	OPENBSD_5_5_BASE:1.29
	OPENBSD_5_4:1.28.0.2
	OPENBSD_5_4_BASE:1.28
	OPENBSD_5_3:1.27.0.2
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.21.0.22
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.20
	OPENBSD_5_0:1.21.0.18
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.21.0.16
	OPENBSD_4_9_BASE:1.21
	OPENBSD_4_8:1.21.0.14
	OPENBSD_4_8_BASE:1.21
	OPENBSD_4_7:1.21.0.10
	OPENBSD_4_7_BASE:1.21
	OPENBSD_4_6:1.21.0.12
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.8
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.6
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.4
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.2
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.20.0.8
	OPENBSD_4_1_BASE:1.20
	OPENBSD_4_0:1.20.0.6
	OPENBSD_4_0_BASE:1.20
	OPENBSD_3_9:1.20.0.4
	OPENBSD_3_9_BASE:1.20
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.18.0.2
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.17.0.6
	OPENBSD_3_6_BASE:1.17
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.15.0.10
	OPENBSD_3_3_BASE:1.15
	OPENBSD_3_2:1.15.0.8
	OPENBSD_3_2_BASE:1.15
	OPENBSD_3_1:1.15.0.6
	OPENBSD_3_1_BASE:1.15
	OPENBSD_3_0:1.15.0.4
	OPENBSD_3_0_BASE:1.15
	OPENBSD_2_9:1.15.0.2
	OPENBSD_2_9_BASE:1.15
	OPENBSD_2_8:1.13.0.4
	OPENBSD_2_8_BASE:1.13
	OPENBSD_2_7:1.13.0.2
	OPENBSD_2_7_BASE:1.13
	OPENBSD_2_6:1.12.0.2
	OPENBSD_2_6_BASE:1.12
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.4.0.4
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.2
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.37
date	2017.02.27.11.38.08;	author jca;	state Exp;
branches;
next	1.36;
commitid	drUqtHQk8flZF7Hy;

1.36
date	2017.02.18.19.23.05;	author jca;	state Exp;
branches;
next	1.35;
commitid	6EwZbn7a3sVTI0GZ;

1.35
date	2017.01.24.12.43.00;	author jmc;	state Exp;
branches;
next	1.34;
commitid	ykPkxnK3Zi8YgFFo;

1.34
date	2016.08.05.16.16.06;	author schwarze;	state Exp;
branches;
next	1.33;
commitid	tQzqi7dOkNWa8ibx;

1.33
date	2015.12.16.18.12.42;	author jmc;	state Exp;
branches;
next	1.32;
commitid	BBzruDwvK9GFUVC1;

1.32
date	2015.12.16.16.32.30;	author deraadt;	state Exp;
branches;
next	1.31;
commitid	oPoFLo6QaSW21nLc;

1.31
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.30;
commitid	QU70QaxjyBAtj4Rv;

1.30
date	2014.08.23.07.25.54;	author jmc;	state Exp;
branches;
next	1.29;
commitid	8CxL8ey38kykYzgb;

1.29
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.28;

1.28
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2012.12.12.14.48.18;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2012.11.29.21.37.13;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2012.11.19.16.39.30;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2012.11.19.16.33.48;	author jmc;	state Exp;
branches;
next	1.23;

1.23
date	2012.09.27.11.31.58;	author jmc;	state Exp;
branches;
next	1.22;

1.22
date	2012.08.21.06.18.23;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.20;

1.20
date	2005.07.22.04.50.51;	author jaredy;	state Exp;
branches;
next	1.19;

1.19
date	2005.04.05.22.14.20;	author fgsch;	state Exp;
branches;
next	1.18;

1.18
date	2005.01.22.15.44.25;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2003.08.08.09.26.02;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2003.06.02.20.18.36;	author millert;	state Exp;
branches;
next	1.15;

1.15
date	2001.04.03.20.09.08;	author aaron;	state Exp;
branches;
next	1.14;

1.14
date	2000.12.24.00.30.57;	author aaron;	state Exp;
branches;
next	1.13;

1.13
date	2000.01.03.11.51.08;	author itojun;	state Exp;
branches;
next	1.12;

1.12
date	99.07.05.04.41.00;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.05.25.13.06.45;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.05.25.01.50.58;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.05.23.14.11.02;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	99.05.16.19.55.06;	author alex;	state Exp;
branches;
next	1.7;

1.7
date	99.05.12.13.26.47;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.02.27.21.55.34;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.09.05.17.41.44;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	97.06.11.01.11.51;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.08.19.08.29.50;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.02.19.19.53.30;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.04;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.04;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.37
log
@Add support for RES_USE_DNSSEC

RES_USE_DNSSEC is implemented by setting the DNSSEC DO bit in outgoing
queries.  The resolver is then supposed to set the AD bit in the reply
if it managed to validate the answer through DNSSEC.  Useful when the
application doesn't implement validation internally.  This scheme
assumes that the validating resolver is trusted and that the
communication channel between the validating resolver and and the client
is secure.

ok eric@@ gilles@@
@
text
@.\"	$OpenBSD: resolver.3,v 1.36 2017/02/18 19:23:05 jca Exp $
.\"
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: February 18 2017 $
.Dt RES_INIT 3
.Os
.Sh NAME
.Nm res_query ,
.Nm res_search ,
.Nm res_mkquery ,
.Nm res_send ,
.Nm res_init ,
.Nm dn_comp ,
.Nm dn_expand
.Nd resolver routines
.Sh SYNOPSIS
.In sys/types.h
.In netinet/in.h
.In arpa/nameser.h
.In resolv.h
.Ft int
.Fo res_query
.Fa "const char *dname"
.Fa "int class"
.Fa "int type"
.Fa "unsigned char *answer"
.Fa "int anslen"
.Fc
.Ft int
.Fo res_search
.Fa "const char *dname"
.Fa "int class"
.Fa "int type"
.Fa "unsigned char *answer"
.Fa "int anslen"
.Fc
.Ft int
.Fo res_mkquery
.Fa "int op"
.Fa "const char *dname"
.Fa "int class"
.Fa "int type"
.Fa "const unsigned char *data"
.Fa "int datalen"
.Fa "const unsigned char *newrr"
.Fa "unsigned char *buf"
.Fa "int buflen"
.Fc
.Ft int
.Fo res_send
.Fa "const unsigned char *msg"
.Fa "int msglen"
.Fa "unsigned char *answer"
.Fa "int anslen"
.Fc
.Ft int
.Fn res_init "void"
.Ft int
.Fo dn_comp
.Fa "const char *exp_dn"
.Fa "unsigned char *comp_dn"
.Fa "int length"
.Fa "unsigned char **dnptrs"
.Fa "unsigned char **lastdnptr"
.Fc
.Ft int
.Fo dn_expand
.Fa "const unsigned char *msg"
.Fa "const unsigned char *eomorig"
.Fa "const unsigned char *comp_dn"
.Fa "char *exp_dn"
.Fa "int length"
.Fc
.Sh DESCRIPTION
These routines are used for making, sending, and interpreting
query and reply messages with Internet domain name servers.
.Pp
Global configuration and state information that is used by the
resolver routines is kept in the structure
.Va _res .
Most of the values have reasonable defaults and can be ignored.
Options stored in
.Va _res.options
are defined in
.In resolv.h
and are as follows.
Options are stored as a simple bit mask containing the bitwise OR
of the options enabled.
.Bl -tag -width RES_USE_DNSSEC
.It Dv RES_INIT
True if the initial name server address and default domain name are
initialized (i.e.\&
.Fn res_init
has been called).
.It Dv RES_DEBUG
Print debugging messages,
if libc is compiled with
.Dv DEBUG .
By default on
.Ox
this option does nothing.
.It Dv RES_AAONLY
Accept authoritative answers only.
With this option,
.Fn res_send
should continue until it finds an authoritative answer or finds an error.
On
.Ox
this option does nothing.
.It Dv RES_USEVC
Use TCP connections for queries instead of UDP datagrams.
.It Dv RES_PRIMARY
Query the primary name server only.
On
.Ox
this option does nothing.
.It Dv RES_IGNTC
Ignore truncation errors, i.e. don't retry with TCP.
.It Dv RES_RECURSE
Set the recursion-desired bit in queries.
.Pf ( Fn res_send
does not do iterative queries and expects the name server
to handle recursion.)
This option is enabled by default.
.It Dv RES_DEFNAMES
If set,
.Fn res_search
will append the default domain name to single-component names
(those that do not contain a dot).
This option is enabled by default.
.It Dv RES_STAYOPEN
Used with
.Dv RES_USEVC
to keep the TCP connection open between queries.
This is useful only in programs that regularly do many queries.
UDP should be the normal mode used.
.It Dv RES_DNSRCH
If this option is set,
.Fn res_search
will search for host names in the current domain and in parent domains; see
.Xr hostname 7 .
This is used by the standard host lookup routine
.Xr gethostbyname 3 .
This option is enabled by default.
.It Dv RES_INSECURE_1
Do not require the IP source address on the reply packet
to be equal to the server's address.
.It Dv RES_INSECURE_2
Do not check if the query section of the reply packet
is equal to that of the query packet.
.It Dv RES_NOALIASES
In the past, this turned off the legacy
.Ev HOSTALIASES
feature.
.It Dv RES_USE_INET6
Enables support for IPv6-only applications.
This causes IPv4 addresses to be returned as an IPv4 mapped address.
For example, 10.1.1.1 will be returned as ::ffff:10.1.1.1.
On
.Ox
this option does nothing.
.It Dv RES_USE_EDNS0
Attach an OPT pseudo-RR for the EDNS0 extension,
as specified in RFC 2671.
This informs DNS servers of a client's receive buffer size,
allowing them to take advantage of a non-default receive buffer size,
and thus to send larger replies.
DNS query packets with the EDNS0 extension are not compatible with
non-EDNS0 DNS servers.
.Ox
uses 4096 bytes as input buffer size.
.It Dv RES_USE_DNSSEC
Request that the resolver uses
Domain Name System Security Extensions (DNSSEC),
as defined in RFCs 4033, 4034, and 4035.
.El
.Pp
The
.Fn res_init
routine reads the configuration file (if any; see
.Xr resolv.conf 5 )
to get the default domain name, search list, and the Internet address
of the local name server(s).
If no server is configured, the host running
the resolver is tried.
The current domain name is defined by the hostname
if not specified in the configuration file;
it can be overridden by the environment variable
.Ev LOCALDOMAIN .
This environment variable may contain several blank-separated
tokens if you wish to override the search list on a per-process basis.
This is similar to the
.Ic search
command in the configuration file.
Another environment variable
.Ev RES_OPTIONS
can be set to override certain internal resolver options which
are otherwise set by changing fields in the
.Va _res
structure or are inherited from the configuration file's
.Ic options
command.
The syntax of the
.Ev RES_OPTIONS
environment variable is explained in
.Xr resolv.conf 5 .
Initialization normally occurs on the first call
to one of the following routines.
.Pp
The
.Fn res_query
function provides an interface to the server query mechanism.
It constructs a query, sends it to the local server,
awaits a response, and makes preliminary checks on the reply.
The query requests information of the specified
.Fa type
and
.Fa class
for the specified fully qualified domain name
.Fa dname .
The reply message is left in the
.Fa answer
buffer with length
.Fa anslen
supplied by the caller.
Values for the
.Fa class
and
.Fa type
fields
are defined in
.In arpa/nameser.h .
.Pp
The
.Fn res_search
routine makes a query and awaits a response like
.Fn res_query ,
but in addition, it implements the default and search rules controlled by the
.Dv RES_DEFNAMES
and
.Dv RES_DNSRCH
options.
It returns the first successful reply.
.Pp
The remaining routines are lower-level routines used by
.Fn res_query .
The
.Fn res_mkquery
function constructs a standard query message and places it in
.Fa buf .
It returns the size of the query, or \-1 if the query is larger than
.Fa buflen .
The query type
.Fa op
is usually
.Dv QUERY ,
but can be any of the query types defined in
.In arpa/nameser.h .
The domain name for the query is given by
.Fa dname .
.Fa newrr
is currently unused but is intended for making update messages.
.Pp
The
.Fn res_send
routine sends a pre-formatted query and returns an answer.
It will call
.Fn res_init
if
.Dv RES_INIT
is not set, send the query to the local name server, and
handle timeouts and retries.
The length of the reply message is returned, or \-1 if there were errors.
.Pp
The
.Fn dn_comp
function compresses the domain name
.Fa exp_dn
and stores it in
.Fa comp_dn .
The size of the compressed name is returned or \-1 if there were errors.
The size of the array pointed to by
.Fa comp_dn
is given by
.Fa length .
The compression uses an array of pointers
.Fa dnptrs
to previously compressed names in the current message.
The first pointer points
to the beginning of the message and the list ends with
.Dv NULL .
The limit to the array is specified by
.Fa lastdnptr .
A side effect of
.Fn dn_comp
is to update the list of pointers for labels inserted into the message
as the name is compressed.
If
.Fa dnptrs
is
.Dv NULL ,
names are not compressed.
If
.Fa lastdnptr
is
.Dv NULL ,
the list of labels is not updated.
.Pp
The
.Fn dn_expand
entry expands the compressed domain name
.Fa comp_dn
to a full domain name.
The compressed name is contained in a query or reply message;
.Fa msg
is a pointer to the beginning of the message.
The uncompressed name is placed in the buffer indicated by
.Fa exp_dn
which is of size
.Fa length .
The size of compressed name is returned or \-1 if there was an error.
.Sh FILES
.Bl -tag -width "/etc/resolv.confXX"
.It Pa /etc/resolv.conf
The configuration file.
.El
.Sh SEE ALSO
.Xr gethostbyname 3 ,
.Xr resolv.conf 5 ,
.Xr hostname 7
.Sh STANDARDS
.Rs
.%A M. Stahl
.%D November 1987
.%R RFC 1032
.%T Domain Administrators Guide
.Re
.Pp
.Rs
.%A M. Lottor
.%D November 1987
.%R RFC 1033
.%T Domain Administrators Operations Guide
.Re
.Pp
.Rs
.%A P. Mockapetris
.%D November 1987
.%R RFC 1034
.%T Domain Names \(en Concepts and Facilities
.Re
.Pp
.Rs
.%A P. Mockapetris
.%D November 1987
.%R RFC 1035
.%T Domain Names \(en Implementation and Specification
.Re
.Pp
.Rs
.%A J. Klensin
.%D October 2008
.%R RFC 5321
.%T Simple Mail Transfer Protocol
.Re
.Sh HISTORY
The functions
.Fn res_mkquery ,
.Fn res_send ,
.Fn res_init ,
.Fn dn_comp ,
and
.Fn dn_expand
appeared in
.Bx 4.3 .
The functions
.Fn res_query
and
.Fn res_search
appeared in
.Bx 4.3 Tahoe .
@


1.36
log
@Add EDNS0 support.

EDNS allows for various DNS extensions, among which UDP DNS packets size
bigger than 512 bytes.  The default is still to not advertize anything.

ok eric@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.35 2017/01/24 12:43:00 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: January 24 2017 $
a201 3
On
.Ox
this option does nothing.
@


1.35
log
@in resolver(3), document that _EDNS0 and _DNSSEC are no ops;
diff from kirill miazine

while here, bump all the no op texts to one standard blurb;
help/ok jca
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.34 2016/08/05 16:16:06 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: August 5 2016 $
a195 1
On
d197 1
a197 1
this option does nothing.
@


1.34
log
@Obvious minor fixes:
* Add missing .Dv, .Ev, and .Fa macros.
* Delete deprecated .Tn macros.
* Mark up global variable names with .Va, not with .Fa or .Li.
* Mark up config file commands with .Ic, not with .Fa.
* Fix HISTORY, trivial to verify from the CSRG archive CD.
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.33 2015/12/16 18:12:42 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: December 16 2015 $
d133 3
a135 1
Currently this is not implemented.
d140 3
a142 1
Currently this is not implemented.
d185 3
a187 2
The option is not meaningful on
.Ox .
d196 3
d203 3
@


1.33
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.32 2015/12/16 16:32:30 deraadt Exp $
d106 1
a106 1
.Li _res .
d109 1
a109 1
.Li _res.options
d210 1
a210 3
tokens if you wish to override the
.Fa search list
on a per-process basis.
d212 1
a212 1
.Fa search
d218 1
a218 1
.Fa _res
d220 1
a220 1
.Fa options
d386 8
a393 3
The
.Nm
function appeared in
d395 6
@


1.32
log
@Remove support for HOSTALIASES from the resolver.  This "open and parse
any file indicated by an environment variable" feature inside the
resolver is incompatible with what pledge "dns" is trying to be.  It is
a misguided "feature" added way back in history which almost noone uses,
but everyone has to assume the risk from.
ok eric florian kettenis
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.31 2015/11/10 23:48:18 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: November 10 2015 $
d174 1
a174 1
(In the past, this turned off the legacy
d176 1
a176 1
feature).
@


1.31
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.30 2014/08/23 07:25:54 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: August 23 2014 $
d174 1
a174 1
Turn off the
d176 1
a176 4
feature.
See
.Xr hostname 7
for more information.
@


1.30
log
@unbind;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.29 2014/01/21 03:15:45 schwarze Exp $
d30 2
a31 2
.Dd $Mdocdate: January 21 2014 $
.Dt RESOLVER 3
@


1.29
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.28 2013/06/05 03:39:23 tedu Exp $
d30 1
a30 1
.Dd $Mdocdate: June 5 2013 $
d354 1
a354 5
.Xr hostname 7 ,
.Xr named 8
.Rs
.%T Name Server Operations Guide for BIND
.Re
@


1.28
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.27 2012/12/12 14:48:18 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: December 12 2012 $
d111 1
a111 1
.Aq Pa resolv.h
d256 1
a256 1
.Aq Pa arpa/nameser.h .
d282 1
a282 1
.Aq Pa arpa/nameser.h .
@


1.27
log
@document RES_USE_DNSSEC; text tweaked by sthen
ok jakob
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.26 2012/11/29 21:37:13 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: November 29 2012 $
d43 4
a46 4
.Fd #include <sys/types.h>
.Fd #include <netinet/in.h>
.Fd #include <arpa/nameser.h>
.Fd #include <resolv.h>
@


1.26
log
@- put the various options into the same order as those in resolv.h
- sync RES_DEBUG with resolv.conf.5
- document RES_PRIMARY, but mark it unsupported (like we already do
  for RES_AAAONLY)
- use the exact same text (about being enabled by default) for
  RES_RECURSE as for the other two defaults
- document RES_INSECURE{1,2} - description lifted from resolv.conf.5
- document RES_NOALIASES
- mostly sync the RES_USE_EDNS0 text with resolv.conf.5

- RES_USE_DNSSEC not documented for now. something to come...

ok sthen
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.25 2012/11/19 16:39:30 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: November 19 2012 $
d194 4
@


1.25
log
@remove some useless Tn and double punctuation;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.24 2012/11/19 16:33:48 jmc Exp $
d115 1
a115 1
.Bl -tag -width RES_USE_INET6
d122 6
a127 1
Print debugging messages.
d136 3
a138 6
.It Dv RES_STAYOPEN
Used with
.Dv RES_USEVC
to keep the TCP connection open between queries.
This is useful only in programs that regularly do many queries.
UDP should be the normal mode used.
a142 1
This is the default.
d146 1
d153 6
d167 13
d187 6
a192 6
Enables support for OPT pseudo-RR for EDNS0 extension.
With this option, resolver code will attach OPT pseudo-RR into DNS queries,
to inform of our receive buffer size.
The option will allow DNS servers to take advantage of non-default receive
buffer size, and to send larger replies.
DNS query packets with EDNS0 extension is not compatible with
@


1.24
log
@RES_IGNTC is no longer ignored; ok sthen
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.23 2012/09/27 11:31:58 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: September 27 2012 $
d113 1
a113 2
Options are stored as a simple bit mask containing the bitwise
.Tn OR
d118 1
a118 1
initialized (i.e.,
d130 1
a130 5
Use
.Tn TCP
connections for queries instead of
.Tn UDP
datagrams.
d134 1
a134 3
to keep the
.Tn TCP
connection open between queries.
d136 1
a136 2
.Tn UDP
should be the normal mode used.
d138 1
a138 2
Ignore truncation errors, i.e., don't retry with
.Tn TCP .
@


1.23
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.22 2012/08/21 06:18:23 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: August 21 2012 $
d146 2
a147 2
Unused currently (ignore truncation errors, i.e., don't retry with
.Tn TCP ) .
@


1.22
log
@flesh out the rfc section;
rfc 5321 replaces 974 and 2821;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.21 2007/05/31 19:19:30 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d341 4
d350 1
d357 1
d364 1
d371 1
a376 3
.Re
.Rs
.%T Name Server Operations Guide for BIND
@


1.21
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.20 2005/07/22 04:50:51 jaredy Exp $
d30 1
a30 1
.Dd $Mdocdate$
a339 7
.Pp
.%T RFC 974 ,
.%T RFC 1032 ,
.%T RFC 1033 ,
.%T RFC 1034 ,
.%T RFC 1035 ,
.%T RFC 1535
d341 31
a371 1
.%T "Name Server Operations Guide for BIND"
@


1.20
log
@- sync prototypes and header file excerpts
- typos/spelling, punctuation, rewording, macro, and layout fixes.

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.19 2005/04/05 22:14:20 fgsch Exp $
d30 1
a30 1
.Dd June 4, 1993
@


1.19
log
@explain where type and class are defined; ok jmc@@
CVS ----------------------------------------------------------------------
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.18 2005/01/22 15:44:25 jmc Exp $
d52 1
a52 1
.Fa "u_char *answer"
d60 1
a60 1
.Fa "u_char *answer"
d69 1
a69 1
.Fa "const u_char *data"
d71 2
a72 2
.Fa "const u_char *newrr"
.Fa "u_char *buf"
d77 1
a77 1
.Fa "const u_char *msg"
d79 1
a79 1
.Fa "u_char *answer"
d87 1
a87 1
.Fa "u_char *comp_dn"
d89 2
a90 2
.Fa "u_char **dnptrs"
.Fa "u_char **lastdnptr"
d94 3
a96 3
.Fa "const u_char *msg"
.Fa "const u_char *eomorig"
.Fa "const u_char *comp_dn"
d240 1
a240 1
.Aq Pa arpa/nameserv.h .
d307 1
a307 1
.Em dnptr
@


1.18
log
@some fixes from netbsd, plus a few of my own;
ok krw@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.17 2003/08/08 09:26:02 jmc Exp $
d234 7
@


1.17
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.16 2003/06/02 20:18:36 millert Exp $
d49 1
a49 1
.Fa "char *dname"
d57 1
a57 1
.Fa "char *dname"
d66 1
a66 1
.Fa "char *dname"
d69 1
a69 1
.Fa "char *data"
d71 2
a72 2
.Fa "struct rrec *newrr"
.Fa "char *buf"
d77 1
a77 1
.Fa "char *msg"
d79 1
a79 1
.Fa "char *answer"
d86 2
a87 2
.Fa "char *exp_dn"
.Fa "char *comp_dn"
d89 2
a90 2
.Fa "char **dnptrs"
.Fa "char **lastdnptr"
d94 4
a97 4
.Fa "u_char *msg"
.Fa "u_char *eomorig"
.Fa "u_char *comp_dn"
.Fa "u_char *exp_dn"
d174 8
d314 1
a314 1
to a full domain name
d324 3
a326 5
.Bl -tag -width Pa
/etc/resolv.conf
configuration file
see
.Xr resolv.conf 5 .
d334 1
d339 1
a339 2
.%T RFC 1535 ,
.%T RFC 974
@


1.16
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.15 2001/04/03 20:09:08 aaron Exp $
d328 6
a333 6
.%T RFC1032 ,
.%T RFC1033 ,
.%T RFC1034 ,
.%T RFC1035 ,
.%T RFC1535 ,
.%T RFC974
@


1.15
log
@Add missing return type to dn_comp() prototype in SYNOPSIS; matt@@anzen.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.14 2000/12/24 00:30:57 aaron Exp $
d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.14
log
@Various repairs, mostly to get rid of short lines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.13 2000/01/03 11:51:08 itojun Exp $
d88 1
@


1.13
log
@always enable IPv6 address in /etc/hosts (via _gethtent()).
clarify RES_USE_INET6.  the use of this bit is not meaningful
on openbsd (as we don't have mapped addr support in kernel).
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.12 1999/07/05 04:41:00 aaron Exp $
d111 1
a111 2
Options
stored in
d144 1
a144 2
connection open between
queries.
d181 1
a181 2
routine
reads the configuration file (if any; see
d183 2
a184 3
to get the default domain name,
search list and
the Internet address of the local name server(s).
d234 1
a234 2
but in addition, it implements the default and search rules
controlled by the
d245 1
a245 2
function
constructs a standard query message and places it in
d247 1
a247 2
It returns the size of the query, or \-1 if the query is
larger than
d262 1
a262 2
routine
sends a pre-formatted query and returns an answer.
d269 1
a269 2
The length of the reply message is returned, or
\-1 if there were errors.
d273 1
a273 2
function
compresses the domain name
d282 1
a282 2
The compression uses
an array of pointers
d292 1
a292 2
is to update the list of pointers for
labels inserted into the message
d307 1
a307 2
entry
expands the compressed domain name
@


1.12
log
@repairs; better English, formatting, etc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.11 1999/05/25 13:06:45 aaron Exp $
d174 5
a178 1
Enable support for IPv6 addresses.
@


1.11
log
@punctuation
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.10 1999/05/25 01:50:58 aaron Exp $
d104 1
a104 1
These routines are used for making, sending and interpreting
d109 1
a109 1
.Em _res .
d113 1
a113 1
.Em _res.options
d115 1
a115 1
.Pa resolv.h
d117 2
a118 1
Options are stored as a simple bit mask containing the bitwise ``or''
d330 1
a330 1
The configuration file
d352 1
a352 1
function appeared in 
@


1.10
log
@all functions need a return type and at least one arg, even if it's void
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.9 1999/05/23 14:11:02 aaron Exp $
d304 2
a305 1
.Dv NULL, names are not compressed.
@


1.9
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.8 1999/05/16 19:55:06 alex Exp $
d51 1
d59 1
d67 1
d79 1
d86 2
a87 1
.Fn res_init 
d95 1
@


1.8
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.7 1999/05/12 13:26:47 aaron Exp $
d36 1
a36 1
.Os BSD 4.3
@


1.7
log
@grammar police: do not hyphenate compound words that act as adjectives if the
first word ends in -ly

i.e., fully-qualified, newly-created, globally-visible, etc. are wrong
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.6 1999/02/27 21:55:34 deraadt Exp $
a327 1
.Xr named 8 ,
d330 1
@


1.6
log
@make function names the correct case
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.5 1998/09/05 17:41:44 deraadt Exp $
d215 1
a215 1
for the specified fully-qualified domain name
d284 1
a284 1
to previously-compressed names in the current message.
@


1.5
log
@more man page repairs; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.4 1997/06/11 01:11:51 deraadt Exp $
d253 1
a253 1
.Fa Newrr
@


1.4
log
@doc RES_USE_INET6; lukem
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.3 1996/08/19 08:29:50 tholo Exp $
d285 1
a285 1
The first pointer points to
@


1.3
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
.\"	$OpenBSD: resolver.3,v 1.6 1996/02/02 15:22:37 mrg Exp $
d113 1
a113 1
.Bl -tag -width RES_DEFNAMES
d166 2
@


1.2
log
@netbsd: bind 4.9.3
@
text
@d1 1
a1 1
.\"	$NetBSD: resolver.3,v 1.6 1996/02/02 15:22:37 mrg Exp $
a32 2
.\"
.\"     @@(#)resolver.3	8.1 (Berkeley) 6/4/93
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
.\"	$NetBSD: resolver.3,v 1.5 1995/02/25 06:21:02 cgd Exp $
d336 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
