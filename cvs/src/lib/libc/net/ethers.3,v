head	1.24;
access;
symbols
	OPENBSD_6_2:1.24.0.6
	OPENBSD_6_2_BASE:1.24
	OPENBSD_6_1:1.24.0.8
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.8
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.23.0.4
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.22.0.6
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.22.0.2
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.21.0.8
	OPENBSD_5_3_BASE:1.21
	OPENBSD_5_2:1.21.0.6
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.4
	OPENBSD_5_0:1.21.0.2
	OPENBSD_5_0_BASE:1.21
	OPENBSD_4_9:1.20.0.10
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.8
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.4
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.20.0.6
	OPENBSD_4_6_BASE:1.20
	OPENBSD_4_5:1.20.0.2
	OPENBSD_4_5_BASE:1.20
	OPENBSD_4_4:1.19.0.6
	OPENBSD_4_4_BASE:1.19
	OPENBSD_4_3:1.19.0.4
	OPENBSD_4_3_BASE:1.19
	OPENBSD_4_2:1.19.0.2
	OPENBSD_4_2_BASE:1.19
	OPENBSD_4_1:1.18.0.6
	OPENBSD_4_1_BASE:1.18
	OPENBSD_4_0:1.18.0.4
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.18.0.2
	OPENBSD_3_9_BASE:1.18
	OPENBSD_3_8:1.16.0.2
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.14.0.16
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.14
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.14.0.12
	OPENBSD_3_5_BASE:1.14
	OPENBSD_3_4:1.14.0.10
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.14.0.8
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.14.0.6
	OPENBSD_3_2_BASE:1.14
	OPENBSD_3_1:1.14.0.4
	OPENBSD_3_1_BASE:1.14
	OPENBSD_3_0:1.14.0.2
	OPENBSD_3_0_BASE:1.14
	OPENBSD_2_9:1.13.0.2
	OPENBSD_2_9_BASE:1.13
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_6:1.11.0.2
	OPENBSD_2_6_BASE:1.11
	OPENBSD_2_5:1.10.0.2
	OPENBSD_2_5_BASE:1.10
	OPENBSD_2_4:1.9.0.2
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.5.0.6
	OPENBSD_2_2_BASE:1.5
	OPENBSD_2_1:1.5.0.4
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.24
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.23;
commitid	QU70QaxjyBAtj4Rv;

1.23
date	2014.03.18.03.58.49;	author lteo;	state Exp;
branches;
next	1.22;

1.22
date	2013.06.05.03.39.22;	author tedu;	state Exp;
branches;
next	1.21;

1.21
date	2011.04.19.22.38.26;	author matthew;	state Exp;
branches;
next	1.20;

1.20
date	2008.12.07.10.10.33;	author weerd;	state Exp;
branches;
next	1.19;

1.19
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2005.12.30.20.45.59;	author claudio;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.02.14.48.48;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2005.07.22.04.50.51;	author jaredy;	state Exp;
branches;
next	1.15;

1.15
date	2005.03.28.06.21.48;	author tedu;	state Exp;
branches;
next	1.14;

1.14
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.13;

1.13
date	2000.12.17.21.30.38;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2000.04.18.03.01.31;	author aaron;	state Exp;
branches;
next	1.11;

1.11
date	99.07.05.04.40.59;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	99.03.18.11.09.15;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	98.05.12.09.15.19;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	98.03.17.23.58.20;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	98.03.17.06.18.48;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.02.27.12.13.27;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	96.10.08.01.20.09;	author michaels;	state Exp;
branches;
next	1.4;

1.4
date	96.08.19.08.28.35;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.14.04.16.24;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.07.06.06.51.46;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: ethers.3,v 1.23 2014/03/18 03:58:49 lteo Exp $
.\"
.\" Written by roland@@frob.com.  Public domain.
.\"
.Dd $Mdocdate: March 18 2014 $
.Dt ETHER_ATON 3
.Os
.Sh NAME
.Nm ether_aton ,
.Nm ether_ntoa ,
.Nm ether_ntohost ,
.Nm ether_hostton ,
.Nm ether_line
.Nd get ethers entry
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In net/if.h
.In netinet/in.h
.In netinet/if_ether.h
.Ft char *
.Fn ether_ntoa "struct ether_addr *e"
.Ft struct ether_addr *
.Fn ether_aton "const char *s"
.Ft int
.Fn ether_ntohost "char *hostname" "struct ether_addr *e"
.Ft int
.Fn ether_hostton "const char *hostname" "struct ether_addr *e"
.Ft int
.Fn ether_line "const char *l" "struct ether_addr *e" "char *hostname"
.Sh DESCRIPTION
Ethernet addresses are represented by the
following structure:
.Bd -literal -offset indent
struct ether_addr {
        u_int8_t  ether_addr_octet[ETHER_ADDR_LEN];
};
.Ed
.Pp
The
.Fn ether_ntoa
function converts this structure into an
.Tn ASCII
string of the form
.Dq xx:xx:xx:xx:xx:xx ,
consisting of 6 hexadecimal numbers separated
by colons.
It returns a pointer to a static buffer that is reused for each call.
The
.Fn ether_aton
converts an
.Tn ASCII
string of the same form and to a structure
containing the 6 octets of the address.
It returns a pointer to a static structure that is reused for each call.
.Fn ether_aton
will return NULL if the string does not represent a valid address.
.Pp
The
.Fn ether_ntohost
and
.Fn ether_hostton
functions interrogate the database mapping host names to Ethernet
addresses,
.Pa /etc/ethers .
The
.Fn ether_ntohost
function looks up the given Ethernet address and writes the associated
host name into the character buffer passed.
This buffer should be
.Dv MAXHOSTNAMELEN
characters in size.
The
.Fn ether_hostton
function looks up the given host name and writes the associated
Ethernet address into the structure passed.
Both functions return
zero if they find the requested host name or address, and \-1 if not.
.Pp
Each call reads
.Pa /etc/ethers
from the beginning; if a
.Ql +
appears alone on a line in the file, then
.Fn ether_hostton
will consult the
.Pa ethers.byname
YP map, and
.Fn ether_ntohost
will consult the
.Pa ethers.byaddr
YP map.
.Pp
The
.Fn ether_line
function parses a line from the
.Pa /etc/ethers
file and fills in the passed
.Li struct ether_addr
and character buffer with the Ethernet address and host name on the line.
It returns zero if the line was successfully parsed and \-1 if not.
The character buffer should be
.Dv MAXHOSTNAMELEN
characters in size.
.Sh FILES
.Bl -tag -width /etc/ethers -compact
.It Pa /etc/ethers
.El
.Sh SEE ALSO
.Xr ethers 5
.Sh HISTORY
The
.Fn ether_ntoa ,
.Fn ether_aton ,
.Fn ether_ntohost ,
.Fn ether_hostton ,
and
.Fn ether_line
functions were adopted from SunOS and appeared in
.Nx 0.9b .
.Sh BUGS
The data space used by these functions is static; if future use
requires the data, it should be copied before any subsequent calls to
these functions overwrite it.
@


1.23
log
@Sync with the way struct ether_addr is actually defined in
netinet/if_ether.h
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.22 2013/06/05 03:39:22 tedu Exp $
d5 2
a6 2
.Dd $Mdocdate: June 5 2013 $
.Dt ETHERS 3
@


1.22
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.21 2011/04/19 22:38:26 matthew Exp $
d5 1
a5 1
.Dd $Mdocdate: April 19 2011 $
d36 1
a36 1
        u_int8_t  ether_addr_octet[6];
@


1.21
log
@Fix spacing nit.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.20 2008/12/07 10:10:33 weerd Exp $
d5 1
a5 1
.Dd $Mdocdate: December 7 2008 $
d16 5
a20 5
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <net/if.h>
.Fd #include <netinet/in.h>
.Fd #include <netinet/if_ether.h>
@


1.20
log
@Document that ethers_aton returns NULL for invalid addresses.

Suggested by and ok claudio@@, ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.19 2007/05/31 19:19:30 jmc Exp $
d5 1
a5 1
.Dd $Mdocdate: May 31 2007 $
d120 1
a120 1
.Nx 0.9 b.
@


1.19
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.18 2005/12/30 20:45:59 claudio Exp $
d5 1
a5 1
.Dd $Mdocdate$
d56 2
@


1.18
log
@Currently sys/socket.h needs sys/types.h so add #include <sys/types.h> to
the list of necessary includes. Now the manpages match reality.
OK mpf@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.17 2005/10/02 14:48:48 jmc Exp $
d5 1
a5 1
.Dd December 16, 1993
@


1.17
log
@`ether_addr' is the name of a structure, not a function: remove its MLINK
and remove its entry from the .Nm list;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.16 2005/07/22 04:50:51 jaredy Exp $
d16 1
@


1.16
log
@- sync prototypes and header file excerpts
- typos/spelling, punctuation, rewording, macro, and layout fixes.

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.15 2005/03/28 06:21:48 tedu Exp $
a10 1
.Nm ether_addr ,
@


1.15
log
@add const
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.14 2001/08/06 10:42:26 mpech Exp $
d17 3
@


1.14
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.13 2000/12/17 21:30:38 millert Exp $
d21 1
a21 1
.Fn ether_aton "char *s"
d25 1
a25 1
.Fn ether_hostton "char *hostname" "struct ether_addr *e"
d27 1
a27 1
.Fn ether_line "char *l" "struct ether_addr *e" "char *hostname"
@


1.13
log
@data base -> database
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.12 2000/04/18 03:01:31 aaron Exp $
d115 1
a115 1
NetBSD 0.9b.
@


1.12
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.11 1999/07/05 04:40:59 aaron Exp $
d58 1
a58 1
functions interrogate the data base mapping host names to Ethernet
@


1.11
log
@repairs; better English, formatting, etc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.10 1999/03/18 11:09:15 aaron Exp $
d44 2
a45 2
by colons.  It returns a pointer to a static buffer that is reused for
each call.
d51 2
a52 2
containing the 6 octets of the address.  It returns a pointer to a
static structure that is reused for each call.
d64 2
a65 1
host name into the character buffer passed.  This buffer should be
d71 2
a72 1
Ethernet address into the structure passed.  Both functions return
d95 2
a96 2
and character buffer with the Ethernet address and host name on the line.  It
returns zero if the line was successfully parsed and \-1 if not.
@


1.10
log
@typo; nash@@mcs.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.9 1998/05/12 09:15:19 deraadt Exp $
d29 1
a29 1
Ethernet addresses are represented by the 
d39 5
a43 2
function converts this structure into an ASCII string of the form
``xx:xx:xx:xx:xx:xx'', consisting of 6 hexadecimal numbers separated
d48 3
a50 1
converts an ASCII string of the same form and to a structure
d65 1
a65 1
.Ev MAXHOSTNAMELEN
d71 1
a71 1
zero if they find the requested host name or address, and -1 if not.
d74 4
a77 2
.Pa /etc/ethers 
from the beginning; if a + appears alone on a line in the file, then
d91 4
a94 3
file and fills in the passed ``struct ether_addr'' and character
buffer with the Ethernet address and host name on the line.  It
returns zero if the line was successfully parsed and -1 if not.
d96 1
a96 1
.Ev MAXHOSTNAMELEN
@


1.9
log
@document how to enable YP for each database
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.8 1998/03/17 23:58:20 millert Exp $
d87 1
a87 1
The character buffer buffer should be
@


1.8
log
@Fix .Ev usage
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.7 1998/03/17 06:18:48 millert Exp $
d67 1
@


1.7
log
@hostname buffer will not overflow if it is size MAXHOSTNAMELEN.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.6 1998/02/27 12:13:27 deraadt Exp $
d60 1
a60 2
.Ev
MAXHOSTNAMELEN
d87 1
a87 2
.Ev
MAXHOSTNAMELEN
@


1.6
log
@extra comma goes foom
@
text
@d1 1
a1 1
.\"	$OpenBSD: ethers.3,v 1.5 1996/10/08 01:20:09 michaels Exp $
d59 4
a62 1
host name into the character buffer passed.
d87 4
d110 1
a110 5
these functions overwrite it.  There is no way to restrict how many
character will be written into the host name buffer passed.  A very
long line in
.Pa /etc/ethers
could overflow your buffer.
@


1.5
log
@Attempt at cleanup.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d14 1
a14 1
.Nm ether_line ,
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d7 1
a7 1
.Os NetBSD
@


1.3
log
@Add missing reference
@
text
@d1 1
@


1.2
log
@type fixos
@
text
@d8 1
@


1.1
log
@Initial revision
@
text
@d20 1
d22 1
d24 1
d31 1
a31 1
        u_char  ether_addr_octet[6];
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

