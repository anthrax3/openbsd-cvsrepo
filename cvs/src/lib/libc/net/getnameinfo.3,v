head	1.47;
access;
symbols
	OPENBSD_6_1_BASE:1.47
	OPENBSD_6_0:1.47.0.8
	OPENBSD_6_0_BASE:1.47
	OPENBSD_5_9:1.47.0.4
	OPENBSD_5_9_BASE:1.47
	OPENBSD_5_8:1.47.0.6
	OPENBSD_5_8_BASE:1.47
	OPENBSD_5_7:1.47.0.2
	OPENBSD_5_7_BASE:1.47
	OPENBSD_5_6:1.46.0.6
	OPENBSD_5_6_BASE:1.46
	OPENBSD_5_5:1.46.0.4
	OPENBSD_5_5_BASE:1.46
	OPENBSD_5_4:1.45.0.2
	OPENBSD_5_4_BASE:1.45
	OPENBSD_5_3:1.43.0.2
	OPENBSD_5_3_BASE:1.43
	OPENBSD_5_2:1.42.0.4
	OPENBSD_5_2_BASE:1.42
	OPENBSD_5_1_BASE:1.42
	OPENBSD_5_1:1.42.0.2
	OPENBSD_5_0:1.41.0.12
	OPENBSD_5_0_BASE:1.41
	OPENBSD_4_9:1.41.0.10
	OPENBSD_4_9_BASE:1.41
	OPENBSD_4_8:1.41.0.8
	OPENBSD_4_8_BASE:1.41
	OPENBSD_4_7:1.41.0.4
	OPENBSD_4_7_BASE:1.41
	OPENBSD_4_6:1.41.0.6
	OPENBSD_4_6_BASE:1.41
	OPENBSD_4_5:1.41.0.2
	OPENBSD_4_5_BASE:1.41
	OPENBSD_4_4:1.40.0.6
	OPENBSD_4_4_BASE:1.40
	OPENBSD_4_3:1.40.0.4
	OPENBSD_4_3_BASE:1.40
	OPENBSD_4_2:1.40.0.2
	OPENBSD_4_2_BASE:1.40
	OPENBSD_4_1:1.39.0.2
	OPENBSD_4_1_BASE:1.39
	OPENBSD_4_0:1.38.0.8
	OPENBSD_4_0_BASE:1.38
	OPENBSD_3_9:1.38.0.6
	OPENBSD_3_9_BASE:1.38
	OPENBSD_3_8:1.38.0.4
	OPENBSD_3_8_BASE:1.38
	OPENBSD_3_7:1.38.0.2
	OPENBSD_3_7_BASE:1.38
	OPENBSD_3_6:1.27.0.6
	OPENBSD_3_6_BASE:1.27
	OPENBSD_3_5:1.27.0.4
	OPENBSD_3_5_BASE:1.27
	OPENBSD_3_4:1.27.0.2
	OPENBSD_3_4_BASE:1.27
	OPENBSD_3_3:1.17.0.6
	OPENBSD_3_3_BASE:1.17
	OPENBSD_3_2:1.17.0.4
	OPENBSD_3_2_BASE:1.17
	OPENBSD_3_1:1.17.0.2
	OPENBSD_3_1_BASE:1.17
	OPENBSD_3_0:1.16.0.2
	OPENBSD_3_0_BASE:1.16
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.9.0.2
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@.\" @;


1.47
date	2014.08.23.07.25.54;	author jmc;	state Exp;
branches;
next	1.46;
commitid	8CxL8ey38kykYzgb;

1.46
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.45;

1.45
date	2013.07.10.07.07.12;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.43;

1.43
date	2012.09.27.11.31.58;	author jmc;	state Exp;
branches;
next	1.42;

1.42
date	2012.01.03.12.06.04;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2008.12.22.12.18.56;	author jacekm;	state Exp;
branches;
next	1.40;

1.40
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.39;

1.39
date	2006.09.25.23.02.43;	author ray;	state Exp;
branches;
next	1.38;

1.38
date	2005.01.29.00.49.47;	author jmc;	state Exp;
branches;
next	1.37;

1.37
date	2005.01.06.03.50.46;	author itojun;	state Exp;
branches;
next	1.36;

1.36
date	2004.12.21.09.48.20;	author jmc;	state Exp;
branches;
next	1.35;

1.35
date	2004.12.21.03.40.31;	author jaredy;	state Exp;
branches;
next	1.34;

1.34
date	2004.12.21.01.01.47;	author itojun;	state Exp;
branches;
next	1.33;

1.33
date	2004.12.20.22.33.09;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2004.12.20.22.30.10;	author millert;	state Exp;
branches;
next	1.31;

1.31
date	2004.12.20.22.20.43;	author millert;	state Exp;
branches;
next	1.30;

1.30
date	2004.12.20.22.15.29;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	2004.12.20.03.27.24;	author itojun;	state dead;
branches;
next	1.28;

1.28
date	2004.12.06.10.46.35;	author jmc;	state Exp;
branches;
next	1.27;

1.27
date	2003.08.28.10.16.38;	author jmc;	state Exp;
branches;
next	1.26;

1.26
date	2003.08.28.09.47.47;	author itojun;	state Exp;
branches;
next	1.25;

1.25
date	2003.08.28.01.50.37;	author itojun;	state Exp;
branches;
next	1.24;

1.24
date	2003.08.28.01.47.51;	author itojun;	state Exp;
branches;
next	1.23;

1.23
date	2003.08.28.01.42.18;	author itojun;	state Exp;
branches;
next	1.22;

1.22
date	2003.08.08.09.26.02;	author jmc;	state Exp;
branches;
next	1.21;

1.21
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.05.30.21.37.59;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.03.20.05.07;	author jmc;	state Exp;
branches;
next	1.18;

1.18
date	2003.05.01.19.10.09;	author jmc;	state Exp;
branches;
next	1.17;

1.17
date	2001.11.15.06.53.09;	author itojun;	state Exp;
branches;
next	1.16;

1.16
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.15;

1.15
date	2001.08.05.18.57.08;	author itojun;	state Exp;
branches;
next	1.14;

1.14
date	2001.06.23.05.57.03;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2001.06.23.02.33.17;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2001.06.12.23.36.18;	author itojun;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.05.13.43.02;	author itojun;	state Exp;
branches;
next	1.10;

1.10
date	2000.12.21.17.34.33;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.08.09.23.12.04;	author itojun;	state Exp;
branches;
next	1.8;

1.8
date	2000.06.30.16.52.44;	author itojun;	state Exp;
branches;
next	1.7;

1.7
date	2000.06.22.20.29.00;	author itojun;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.18.03.01.31;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.01.17.08.20.28;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.17.08.16.58;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.06.22.00.18;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.07.05.04.40.59;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.07.03.20.26.55;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.47
log
@unbind;
@
text
@.\"	$OpenBSD: getnameinfo.3,v 1.46 2014/01/21 03:15:45 schwarze Exp $
.\"	$KAME: getnameinfo.3,v 1.37 2005/01/05 03:23:05 itojun Exp $
.\"
.\" Copyright (C) 2004  Internet Systems Consortium, Inc. ("ISC")
.\" Copyright (C) 2000, 2001  Internet Software Consortium.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND ISC DISCLAIMS ALL WARRANTIES WITH
.\" REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
.\" AND FITNESS.  IN NO EVENT SHALL ISC BE LIABLE FOR ANY SPECIAL, DIRECT,
.\" INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
.\" LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE
.\" OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
.\" PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 21 2014 $
.Dt GETNAMEINFO 3
.Os
.Sh NAME
.Nm getnameinfo
.Nd socket address structure to hostname and service name
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In netdb.h
.Ft int
.Fn getnameinfo "const struct sockaddr *sa" "socklen_t salen" "char *host" \
    "size_t hostlen" "char *serv" "size_t servlen" "int flags"
.Sh DESCRIPTION
The
.Fn getnameinfo
function is used to convert a
.Li sockaddr
structure to a pair of host name and service strings.
It is a replacement for and provides more flexibility than the
.Xr gethostbyaddr 3
and
.Xr getservbyport 3
functions and is the converse of the
.Xr getaddrinfo 3
function.
.Pp
The
.Li sockaddr
structure
.Fa sa
should point to either a
.Li sockaddr_in
or
.Li sockaddr_in6
structure (for IPv4 or IPv6 respectively) that is
.Fa salen
bytes long.
.Pp
The host and service names associated with
.Fa sa
are stored in
.Fa host
and
.Fa serv
which have length parameters
.Fa hostlen
and
.Fa servlen .
The maximum value for
.Fa hostlen
is
.Dv NI_MAXHOST
and
the maximum value for
.Fa servlen
is
.Dv NI_MAXSERV ,
as defined by
.In netdb.h .
If a length parameter is zero, no string will be stored.
Otherwise, enough space must be provided to store the
host name or service string plus a byte for the NUL terminator.
.Pp
The
.Fa flags
argument is formed by
.Tn OR Ns 'ing
the following values:
.Bl -tag -width "NI_NUMERICHOSTXX"
.It Dv NI_NOFQDN
A fully qualified domain name is not required for local hosts.
The local part of the fully qualified domain name is returned instead.
.It Dv NI_NUMERICHOST
Return the address in numeric form, as if calling
.Xr inet_ntop 3 ,
instead of a host name.
.It Dv NI_NAMEREQD
A name is required.
If the host name cannot be found in DNS and this flag is set,
a non-zero error code is returned.
If the host name is not found and the flag is not set, the
address is returned in numeric form.
.It NI_NUMERICSERV
The service name is returned as a digit string representing the port number.
.It NI_DGRAM
Specifies that the service being looked up is a datagram
service, and causes
.Xr getservbyport 3
to be called with a second argument of
.Dq udp
instead of its default of
.Dq tcp .
This is required for the few ports (512\-514) that have different services
for
.Tn UDP
and
.Tn TCP .
.El
.Pp
This implementation allows numeric IPv6 address notation with scope identifier,
as documented in RFC 4007.
IPv6 link-local address will appear as a string like
.Dq Li fe80::1%ne0 .
Refer to
.Xr getaddrinfo 3
for more information.
.Sh RETURN VALUES
.Fn getnameinfo
returns zero on success or one of the error codes listed in
.Xr gai_strerror 3
if an error occurs.
.Sh EXAMPLES
The following code tries to get a numeric host name, and service name,
for a given socket address.
Observe that there is no hardcoded reference to a particular address family.
.Bd -literal -offset indent
struct sockaddr *sa;	/* input */
char hbuf[NI_MAXHOST], sbuf[NI_MAXSERV];

if (getnameinfo(sa, sa->sa_len, hbuf, sizeof(hbuf), sbuf,
    sizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV))
	errx(1, "could not get numeric hostname");
printf("host=%s, serv=%s\en", hbuf, sbuf);
.Ed
.Pp
The following version checks if the socket address has a reverse address mapping:
.Bd -literal -offset indent
struct sockaddr *sa;	/* input */
char hbuf[NI_MAXHOST];

if (getnameinfo(sa, sa->sa_len, hbuf, sizeof(hbuf), NULL, 0,
    NI_NAMEREQD))
	errx(1, "could not resolve hostname");
printf("host=%s\en", hbuf);
.Ed
.Sh SEE ALSO
.Xr gai_strerror 3 ,
.Xr getaddrinfo 3 ,
.Xr gethostbyaddr 3 ,
.Xr getservbyport 3 ,
.Xr inet_ntop 3 ,
.Xr resolver 3 ,
.Xr hosts 5 ,
.Xr resolv.conf 5 ,
.Xr services 5 ,
.Xr hostname 7
.Rs
.%A Craig Metz
.%T Protocol Independence Using the Sockets API
.%B Proceedings of the Freenix Track: 2000 USENIX Annual Technical Conference
.%D June 2000
.Re
.Sh STANDARDS
The
.Fn getnameinfo
function is defined by the
.St -p1003.1g-2000
draft specification and documented in RFC 3493.
.Pp
.Rs
.%A R. Gilligan
.%A S. Thomson
.%A J. Bound
.%A J. McCann
.%A W. Stevens
.%D February 2003
.%R RFC 3493
.%T Basic Socket Interface Extensions for IPv6
.Re
.Pp
.Rs
.%A S. Deering
.%A B. Haberman
.%A T. Jinmei
.%A E. Nordmark
.%A B. Zill
.%D March 2005
.%R RFC 4007
.%T IPv6 Scoped Address Architecture
.Re
.Sh CAVEATS
.Fn getnameinfo
can return both numeric and FQDN forms of the address specified in
.Fa sa .
There is no return value that indicates whether the string returned in
.Fa host
is a result of binary to numeric-text translation (like
.Xr inet_ntop 3 ) ,
or is the result of a DNS reverse lookup.
Because of this, malicious parties could set up a PTR record as follows:
.Bd -literal -offset indent
1.0.0.127.in-addr.arpa. IN PTR  10.1.1.1
.Ed
.Pp
and trick the caller of
.Fn getnameinfo
into believing that
.Fa sa
is
.Li 10.1.1.1
when it is actually
.Li 127.0.0.1 .
.Pp
To prevent such attacks, the use of
.Dv NI_NAMEREQD
is recommended when the result of
.Fn getnameinfo
is used
for access control purposes:
.Bd -literal -offset indent
struct sockaddr *sa;
char addr[NI_MAXHOST];
struct addrinfo hints, *res;
int error;

error = getnameinfo(sa, sa->sa_len, addr, sizeof(addr),
    NULL, 0, NI_NAMEREQD);
if (error == 0) {
	memset(&hints, 0, sizeof(hints));
	hints.ai_socktype = SOCK_DGRAM;	/*dummy*/
	hints.ai_flags = AI_NUMERICHOST;
	if (getaddrinfo(addr, "0", &hints, &res) == 0) {
		/* malicious PTR record */
		freeaddrinfo(res);
		printf("bogus PTR record\en");
		return -1;
	}
	/* addr is FQDN as a result of PTR lookup */
} else {
	/* addr is numeric string */
	error = getnameinfo(sa, sa->sa_len, addr, sizeof(addr),
	    NULL, 0, NI_NUMERICHOST);
}
.Ed
.Sh BUGS
The implementation of
.Fn getnameinfo
is not thread-safe.
.Pp
.Ox
intentionally uses a different
.Dv NI_MAXHOST
value from what
.Tn "RFC 2553"
suggests, to avoid buffer length handling mistakes.
@


1.46
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.45 2013/07/10 07:07:12 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: July 10 2013 $
d165 1
a165 2
.Xr hostname 7 ,
.Xr named 8
@


1.45
log
@rfc 3493 obsoletes 2553. i spotted this after reading hiroki sato's changes
in freebsd src commit r253066. our man pages had been updated, but i must
have missed the following:

- getnameinfo.3: 2553 -> 3493
- ip6.4: we listed both. remove 2553.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.44 2013/06/05 03:39:23 tedu Exp $
d19 1
a19 1
.Dd $Mdocdate: June 5 2013 $
d78 1
a78 1
.Aq Pa netdb.h .
@


1.44
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.43 2012/09/27 11:31:58 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: September 27 2012 $
d178 1
a178 1
draft specification and documented in RFC 2553.
d184 1
d186 2
a187 2
.%D March 1999
.%R RFC 2553
@


1.43
log
@last stage of rfc changes, using consistent Rs/Re blocks, and moving the
references into a STANDARDS section;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.42 2012/01/03 12:06:04 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: January 3 2012 $
d26 3
a28 3
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <netdb.h>
@


1.42
log
@draft-ietf-ipv6-scoping-arch-02 has become RFC 4007, as noted by
Poul-Henning Kamp, freebsd pr docs/163771;

ok sthen
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.41 2008/12/22 12:18:56 jacekm Exp $
d19 1
a19 1
.Dd $Mdocdate: December 22 2008 $
d168 13
d185 2
a187 2
.%R RFC 2553
.%D March 1999
d189 1
d196 1
a196 1
.%T "IPv6 Scoped Address Architecture"
d198 1
a198 7
.%D March 2005
.Re
.Rs
.%A Craig Metz
.%T Protocol Independence Using the Sockets API
.%B "Proceedings of the Freenix Track: 2000 USENIX Annual Technical Conference"
.%D June 2000
a199 8
.Sh STANDARDS
The
.Fn getnameinfo
function is defined by the
.St -p1003.1g-2000
draft specification and documented in
.Tn "RFC 2553" ,
.Dq Basic Socket Interface Extensions for IPv6 .
@


1.41
log
@The example for detecting malicious PTR records could be easily misinterpreted.
Make it less ambiguous; ok gilles@@ claudio@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.40 2007/05/31 19:19:30 jmc Exp $
d19 1
a19 1
.Dd $Mdocdate: May 31 2007 $
d120 1
a120 1
as documented in chapter 11 of draft-ietf-ipv6-scoping-arch-02.txt.
d183 2
a184 3
.%R internet draft
.%N draft-ietf-ipv6-scoping-arch-02.txt
.%O work in progress material
@


1.40
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.39 2006/09/25 23:02:43 ray Exp $
d19 1
a19 1
.Dd $Mdocdate$
a231 1
socklen_t salen;
d236 1
a236 1
error = getnameinfo(sa, salen, addr, sizeof(addr),
d251 1
a251 1
	error = getnameinfo(sa, salen, addr, sizeof(addr),
@


1.39
log
@Remove unnecessary /* NOTREACHED */ comments because our lint is
cool and recognizes __dead, and because shorter examples are clearer.

OK otto@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.38 2005/01/29 00:49:47 jmc Exp $
d19 1
a19 1
.Dd December 20, 2004
@


1.38
log
@correct .Rs references;
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.37 2005/01/06 03:50:46 itojun Exp $
d140 1
a140 1
    sizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV)) {
a141 2
	/*NOTREACHED*/
}
d151 1
a151 1
    NI_NAMEREQD)) {
a152 2
	/*NOTREACHED*/
}
@


1.37
log
@IPv6 manpage, wrote from scratch.  deraadt ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.36 2004/12/21 09:48:20 jmc Exp $
d194 1
a194 1
.%B "Proceedings of the freenix track: 2000 USENIX annual technical conference"
@


1.36
log
@sort SEE ALSO;
@
text
@d1 2
a2 1
.\"	$OpenBSD: getnameinfo.3,v 1.35 2004/12/21 03:40:31 jaredy Exp $
d119 2
a120 2
This implementation allows experimental numeric IPv6 address notation with
scope identifier.
d181 6
a186 3
.%A Tatsuya Jinmei
.%A Atsushi Onoe
.%T "An Extension of Format for IPv6 Scoped Addresses"
d188 1
a188 1
.%N draft-ietf-ipngwg-scopedaddr-format-02.txt
d262 1
a262 1
.Fn getaddrinfo
@


1.35
log
@- grammar, punctuation, spacing, and mdoc fixes
- remove first person
- EAI_NONAME is already described in gai_strerror(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.34 2004/12/21 01:01:47 itojun Exp $
a158 1
.Xr inet_ntop 3 ,
d163 1
@


1.34
log
@thread-unsafeness comes from the use of _res, YP filehandle, and /etc/hosts
filehandle, not dynamic memory allocation.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.33 2004/12/20 22:33:09 millert Exp $
d29 2
a30 1
.Fn getnameinfo "const struct sockaddr *sa" "socklen_t salen" "char *host" "size_t hostlen" "char *serv" "size_t servlen" "int flags"
d72 1
a72 1
the maximum value for 
d99 1
a99 1
If the host name is not found and the flag is not set, the 
d111 1
a111 1
This is required for the few ports (512-514) that have different services
d226 1
a226 1
is recommended when you use the result of
d228 1
d246 1
a246 1
		printf("bogus PTR record\\n");
@


1.33
log
@Add Itojun's CAVEATS section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.32 2004/12/20 22:30:10 millert Exp $
d255 1
a255 1
Due to the use of dynamic allocation,
@


1.32
log
@Get rid of a bogus -32 that came about from misreading the ISC original
Mention what happens when a length parameter is zero
Talk about space for trailing NUL byte
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.31 2004/12/20 22:20:43 millert Exp $
d200 54
@


1.31
log
@Add back EXAMPLE section and scopeid info which are from KAME, not the
RFC text.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d62 1
a62 1
which have size parameters
d74 1
a74 2
.Dv NI_MAXSERV
- 32,
d77 3
@


1.30
log
@New getnameinfo.3 man page, derived from the ISC version and fleshed
out a bit by me.  Needs more work.
@
text
@d113 9
d127 28
@


1.29
log
@remove manpages based on RFC.  requested by deraadt
@
text
@d1 1
a1 2
.\"	$OpenBSD: getnameinfo.3,v 1.28 2004/12/06 10:46:35 jmc Exp $
.\"	$KAME: getnameinfo.3,v 1.20 2001/01/05 13:37:37 itojun Exp $
d3 2
a4 2
.\" Copyright (c) 1983, 1987, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
d6 11
a16 11
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
d18 1
a18 15
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     From: @@(#)gethostbyname.3	8.4 (Berkeley) 5/25/95
.\"
.Dd May 25, 1995
a20 1
.\"
d23 1
a23 2
.Nd address-to-nodename translation in protocol-independent manner
.\"
d29 1
a29 3
.Fn getnameinfo "const struct sockaddr *sa" "socklen_t salen" \
"char *host" "size_t hostlen" "char *serv" "size_t servlen" "int flags"
.\"
d33 4
a36 4
function is defined for protocol-independent address-to-nodename translation.
Its functionality is a reverse conversion of
.Xr getaddrinfo 3 ,
and implements similar functionality to
d40 1
a40 23
in a more sophisticated manner.
.Pp
This function looks up an IP address and port number provided by the
caller in the DNS and system-specific database, and returns text
strings for both in buffers provided by the caller.
The function indicates successful completion by a zero return value;
a non-zero return value indicates failure.
.Pp
To aid applications in printing error messages based on the
.Dv EAI_xxx
codes returned by
.Fn getnameinfo ,
.Fn gai_strerror
is defined.
See
.Xr gai_strerror 3
for more information.
.Pp
The implementation allows experimental numeric IPv6 address notation with
scope identifier.
IPv6 link-local address will appear as a string like
.Dq Li fe80::1%ne0 .
Refer to
d42 1
a42 1
for the notation.
a43 7
The first argument,
.Fa sa ,
points to either a
.Li sockaddr_in
structure (for IPv4) or a
.Li sockaddr_in6
structure (for IPv6) that holds the IP address and port number.
d45 4
a48 2
.Fa salen
argument gives the length of the
d52 3
a54 1
structure.
d56 3
a58 2
The function returns the nodename associated with the IP address in
the buffer pointed to by the
d60 3
a62 2
argument.
The caller provides the size of this buffer via the
d64 3
a66 9
argument.
The service name associated with the port number is returned in the buffer
pointed to by
.Fa serv ,
and the
.Fa servlen
argument gives the length of this buffer.
The caller specifies not to return either string by providing a zero
value for the
d68 4
a71 1
or
d73 5
a77 3
arguments.
Otherwise, the caller must provide buffers large enough to hold the
nodename and the service name, including the terminating null characters.
d79 5
a83 24
Unfortunately most systems do not provide constants that specify the
maximum size of either a fully-qualified domain name or a service name.
Therefore to aid the application in allocating buffers for these two
returned strings the following constants are defined in
.Aq Pa netdb.h :
.Bd -literal -offset indent
#define NI_MAXHOST    MAXHOSTNAMELEN
#define NI_MAXSERV    32
.Ed
.Pp
The first value is actually defined as the constant
.Dv MAXDNAME
in recent versions of BIND's
.Aq Pa arpa/nameser.h
header (older versions of BIND define this constant to be 256)
and the second is a guess based on the services listed in the current
Assigned Numbers RFC.
.Pp
The final argument is a
.Fa flag
that changes the default actions of this function.
The flags are defined in
.Aq Pa netdb.h
and are as follows:
d86 2
a87 5
By default the fully-qualified domain name (FQDN) for the host is
looked up using DNS and returned.
If the flag bit
.Dv NI_NOFQDN
is set, only the nodename portion of the FQDN is returned for local hosts.
d89 3
a91 17
If the
.Fa flag
bit
.Dv NI_NUMERICHOST
is set, or if the host's name cannot be located using DNS,
the numeric form of the host's address is returned instead of its name
.Po
e.g., by calling
.Xr inet_ntop 3
instead of
.Xr gethostbyaddr 3
.Pc .
The two
.Dv NI_NUMERICxxx
flags are required to support the
.Fl n
flag that many commands provide.
d93 10
a102 20
If the
.Fa flag
bit
.Dv NI_NAMEREQD
is set, an error is returned if the host's name cannot be located using DNS.
.It Dv NI_NUMERICSERV
If the flag bit
.Dv NI_NUMERICSERV
is set, the numeric form of the service address is returned
.Pq e.g., its port number
instead of its name.
The two
.Dv NI_NUMERICxxx
flags are required to support the
.Fl n
flag that many commands provide.
.It Dv NI_DGRAM
A fifth flag bit,
.Dv NI_DGRAM ,
specifies that the service is a datagram service, and causes
d105 1
a105 1
.Qq udp
d107 6
a112 5
.Qq tcp .
This is required for the few ports (512-514)
that have different services for UDP and TCP.
.El
.\"
d115 1
a115 2
returns zero on success, and non-zero on errors.
See
d117 1
a117 31
for a description of the non-zero error codes.
.\"
.Sh EXAMPLES
The following code tries to get a numeric hostname, and service name,
for a given socket address.
Observe that there is no hardcoded reference to a particular address family.
.Bd -literal -offset indent
struct sockaddr *sa;	/* input */
char hbuf[NI_MAXHOST], sbuf[NI_MAXSERV];

if (getnameinfo(sa, sa->sa_len, hbuf, sizeof(hbuf), sbuf,
    sizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV)) {
	errx(1, "could not get numeric hostname");
	/*NOTREACHED*/
}
printf("host=%s, serv=%s\en", hbuf, sbuf);
.Ed
.Pp
The following version checks if the socket address has reverse address mapping:
.Bd -literal -offset indent
struct sockaddr *sa;	/* input */
char hbuf[NI_MAXHOST];

if (getnameinfo(sa, sa->sa_len, hbuf, sizeof(hbuf), NULL, 0,
    NI_NAMEREQD)) {
	errx(1, "could not resolve hostname");
	/*NOTREACHED*/
}
printf("host=%s\en", hbuf);
.Ed
.\"
d119 1
d124 1
a152 1
.\"
d156 5
a160 63
function is defined in IEEE POSIX 1003.1g draft specification,
and documented in
.Dq Basic Socket Interface Extensions for IPv6
.Pq RFC 2553 .
.\"
.Sh HISTORY
The implementation first appeared in WIDE Hydrangea IPv6 protocol stack kit.
.\"
.Sh CAVEATS
.Fn getnameinfo
returns both numeric and FQDN notation of the address specified in
.Fa sa .
There is no return value that indicates if the string returned in
.Fa host
is a result of binary to numeric-text translation (like
.Xr inet_ntop 3 ) ,
or the result of DNS reverse lookup.
Therefore, malicious parties could set up a PTR record as below:
.Bd -literal -offset indent
1.0.0.127.in-addr.arpa. IN PTR  10.1.1.1
.Ed
.Pp
and trick the caller of
.Fn getnameinfo
into believing that
.Fa sa
is
.Li 10.1.1.1
when it actually is
.Li 127.0.0.1 .
.Pp
To prevent such attacks, the use of
.Dv NI_NAMEREQD
is recommended when you use the result of
.Fn getnameinfo
for access control purposes:
.Bd -literal -offset indent
struct sockaddr *sa;
socklen_t salen;
char addr[NI_MAXHOST];
struct addrinfo hints, *res;
int error;

error = getnameinfo(sa, salen, addr, sizeof(addr),
    NULL, 0, NI_NAMEREQD);
if (error == 0) {
	memset(&hints, 0, sizeof(hints));
	hints.ai_socktype = SOCK_DGRAM;	/*dummy*/
	hints.ai_flags = AI_NUMERICHOST;
	if (getaddrinfo(addr, "0", &hints, &res) == 0) {
		/* malicious PTR record */
		freeaddrinfo(res);
		printf("bogus PTR record\\n");
		return -1;
	}
	/* addr is FQDN as a result of PTR lookup */
} else {
	/* addr is numeric string */
	error = getnameinfo(sa, salen, addr, sizeof(addr),
	    NULL, 0, NI_NUMERICHOST);
}
.Ed
.\"
d162 3
a164 1
The current implementation is not thread-safe.
d169 3
a171 1
value from what RFC 2553 suggests, to avoid buffer length handling mistakes.
@


1.28
log
@move gai_strerror into its own page, and make the get* pages more readable;
prompted by henning;

ok henning@@ itojun@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.27 2003/08/28 10:16:38 jmc Exp $
@


1.27
log
@tweak;
ok itojun@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.25 2003/08/28 01:50:37 itojun Exp $
d67 18
d127 1
a127 1
.Bd -literal -offset
d143 5
d149 1
a149 1
looked up in the DNS and returned.
d153 1
a153 1
.Pp
d158 1
a158 1
is set, or if the host's name cannot be located in the DNS,
d162 1
a162 1
.Fn inet_ntop
d164 1
a164 1
.Fn gethostbyaddr
d166 6
d176 2
a177 2
is set, an error is returned if the host's name cannot be located in the DNS.
.Pp
d188 1
a188 1
.Pp
d192 1
a192 1
.Fn getservbyport
d199 1
a199 5
.Pp
These
.Dv NI_xxx
flags are defined in
.Aq Pa netdb.h .
d201 6
a206 8
.Ss Extension for scoped IPv6 address
The implementation allows experimental numeric IPv6 address notation with
scope identifier.
IPv6 link-local address will appear as a string like
.Dq Li fe80::1%ne0 .
Refer to
.Xr getaddrinfo 3
for the notation.
d210 1
a210 1
for given socket address.
d224 1
a224 1
The following version checks if the socket address has reverse address mapping.
a236 27
.Sh DIAGNOSTICS
The function indicates successful completion by a zero return value;
a non-zero return value indicates failure.
Error codes are as below:
.Bl -tag -width Er
.It Dv EAI_AGAIN
The name could not be resolved at this time.
Future attempts may succeed.
.It Dv EAI_BADFLAGS
The flags had an invalid value.
.It Dv EAI_FAIL
A non-recoverable error occurred.
.It Dv EAI_FAMILY
The address family was not recognized or the address length was invalid
for the specified family.
.It Dv EAI_MEMORY
There was a memory allocation failure.
.It Dv EAI_NONAME
The name does not resolve for the supplied parameters.
.Dv NI_NAMEREQD
is set and the host's name cannot be located,
or both nodename and servname were null.
.It Dv EAI_SYSTEM
A system error occurred.
The error code can be found in errno.
.El
.\"
d238 1
a338 2
.Pp
The text was shamelessly copied from RFC 2553.
@


1.26
log
@better formatting.  from wiz@@netbsd
@
text
@d286 1
a286 1
.Nm
d292 1
a292 1
.Xr inet_ntop 3) ,
d294 1
a294 1
Therefore, malicious parties could set up PTR record like below:
d300 2
a301 2
.Nm
to believe that
d309 4
a312 4
.Li NI_NAMEREQD
like below is recommended when you use the result of
.Nm
for access control purposes.
@


1.25
log
@use NI_NUMERICHOST for 2nd invocation
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.24 2003/08/28 01:47:51 itojun Exp $
d292 2
a293 2
.Xr inet_ntop 3
), or the result of DNS reverse lookup.
d308 1
a308 1
To prevent such attacks, the use of 
@


1.24
log
@add int error in CAVEAT
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.23 2003/08/28 01:42:18 itojun Exp $
d336 1
a336 1
	    NULL, 0, 0);
@


1.23
log
@add CAVEATS section
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.22 2003/08/08 09:26:02 jmc Exp $
d318 1
@


1.22
log
@refer to RFCs consistently (RFC XXXX);
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.21 2003/06/02 20:18:35 millert Exp $
d284 54
@


1.21
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.20 2003/05/30 21:37:59 jmc Exp $
d256 1
a256 1
.%R RFC2553
d280 1
a280 1
.Pq RFC2553 .
d288 1
a288 1
The text was shamelessly copied from RFC2553.
d293 1
a293 1
value from what RFC2553 suggests, to avoid buffer length handling mistakes.
@


1.20
log
@- section reorder
- macro cleanup
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.19 2003/05/03 20:05:07 jmc Exp $
d15 1
a15 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.19
log
@typo in STANDARDS (this man page is getnameinfo, not getaddrinfo);
from wiz@@netbsd
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.18 2003/05/01 19:10:09 jmc Exp $
a277 3
.Sh HISTORY
The implementation first appeared in WIDE Hydrangea IPv6 protocol stack kit.
.\"
d285 3
@


1.18
log
@typos;
ok itojun@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.17 2001/11/15 06:53:09 itojun Exp $
d283 1
a283 1
.Fn getaddrinfo
@


1.17
log
@sync with reality; scope identifier comes even without NI_WITHSCOPEID.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.16 2001/08/06 10:42:26 mpech Exp $
d59 1
a59 1
and implements similar functionality with
d63 1
a63 1
in more sophisticated manner.
d183 1
a183 1
IPv6 link-local address will appear as string like
d190 1
a190 1
The following code tries to get numeric hostname, and service name,
d192 1
a192 1
Observe that there is no hardcoded reference to particular address family.
d284 1
a284 1
function is defined IEEE POSIX 1003.1g draft specification,
d295 1
a295 1
intentionally uses different
@


1.16
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.15 2001/08/05 18:57:08 itojun Exp $
d184 1
a184 6
.Dq Li fe80::1%ne0 ,
if
.Dv NI_WITHSCOPEID
bit is enabled in
.Ar flags
argument.
@


1.15
log
@there's no no host.conf on openbsd.  pointed out by smb
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.14 2001/06/23 05:57:03 deraadt Exp $
a258 1
.Pp
@


1.14
log
@ok, tmac is now fixed
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.13 2001/06/23 02:33:17 deraadt Exp $
a222 7
.Sh FILES
.Bl -tag -width /etc/resolv.conf -compact
.It Pa /etc/hosts
.It Pa /etc/host.conf
.It Pa /etc/resolv.conf
.El
.\"
d255 1
@


1.13
log
@join .%A entries; most by bk@@rt.fm
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.12 2001/06/12 23:36:18 itojun Exp $
d276 2
a277 1
.%A Tatsuya Jinmei and Atsushi Onoe
@


1.12
log
@on openbsd, NI_MAXHOST value is different from RFC2553.  PR 1870
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.11 2001/01/05 13:43:02 itojun Exp $
d276 1
a276 2
.%A Tatsuya Jinmei
.%A Atsushi Onoe
@


1.11
log
@do not refer getnodebyname.  sync with kame.
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.10 2000/12/21 17:34:33 aaron Exp $
d114 1
a114 1
#define NI_MAXHOST  1025
d305 5
@


1.10
log
@mdoc prefers `\e' as an escape character.
@
text
@d1 2
a2 2
.\"	$OpenBSD: getnameinfo.3,v 1.9 2000/08/09 23:12:04 itojun Exp $
.\"	$KAME: getnameinfo.3,v 1.17 2000/08/09 21:16:17 itojun Exp $
d145 1
a145 1
.Fn getnodebyaddr
d180 1
a180 1
.Sh EXTENSION
d235 1
a235 1
.It Bq Er EAI_AGAIN
d238 1
a238 1
.It Bq Er EAI_BADFLAGS
d240 1
a240 1
.It Bq Er EAI_FAIL
d242 1
a242 1
.It Bq Er EAI_FAMILY
d245 1
a245 1
.It Bq Er EAI_MEMORY
d247 1
a247 1
.It Bq Er EAI_NONAME
d252 1
a252 1
.It Bq Er EAI_SYSTEM
@


1.9
log
@document that the current implementation is not thread-safe.  sync with kame.
From: "Greg Thompson" <johnnyteardrop@@hotmail.com>
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.8 2000/06/30 16:52:44 itojun Exp $
d207 1
a207 1
printf("host=%s, serv=%s\\n", hbuf, sbuf);
d220 1
a220 1
printf("host=%s\\n", hbuf);
@


1.8
log
@typo in RFC number. KAME PR 263
@
text
@d1 2
a2 2
.\"	$OpenBSD: getnameinfo.3,v 1.7 2000/06/22 20:29:00 itojun Exp $
.\"	$KAME: getnameinfo.3,v 1.14 2000/06/30 16:46:00 itojun Exp $
d60 2
a61 1
.Xr gethostbyaddr 3 and
d280 1
a280 1
.%N draft-ietf-ipngwg-scopedaddr-format-01.txt
d302 2
@


1.7
log
@add paper by cmetz.  correct example. (sync with kame)
@
text
@d1 2
a2 2
.\"	$OpenBSD: getnameinfo.3,v 1.6 2000/04/18 03:01:31 aaron Exp $
.\"	$KAME: getnameinfo.3,v 1.13 2000/06/22 20:25:50 itojun Exp $
d298 1
a298 1
.Pq RFC2533 .
@


1.6
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 2
a2 1
.\"	$OpenBSD: getnameinfo.3,v 1.5 2000/01/17 08:20:28 deraadt Exp $
a35 1
.\"     KAME Id: getnameinfo.3,v 1.7 2000/01/17 08:13:04 itojun Exp
d183 1
a183 1
.Dq Li fe80::1@@ne0 ,
d232 23
d279 1
a279 1
.%N draft-ietf-ipngwg-scopedaddr-format-00.txt
d281 6
@


1.5
log
@indent
@
text
@d1 1
a1 1
.\"	$OpenBSD: getnameinfo.3,v 1.4 2000/01/17 08:16:58 itojun Exp $
d105 1
a105 1
nodename and the  service name, including the terminating null characters.
@


1.4
log
@sync with latest KAME version.  now includes description on scoped addr
extension.  add examples (good enough? >deraadt)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d202 1
a202 1
		sizeof(sbuf), NI_NUMERICHOST | NI_NUMERICSERV)) {
d215 1
a215 1
		NI_NAMEREQD)) {
@


1.3
log
@fix includes; bde
@
text
@d1 2
d35 1
a35 1
.\"     $Id: getnameinfo.3,v 1.2 1999/07/05 04:40:59 aaron Exp $
d40 1
d44 1
d52 1
d178 44
d228 1
d232 1
d242 21
a262 2
R. Gilligan, S.  Thomson, J. Bound, and W. Stevens,
``Basic Socket Interface Extensions for IPv6,'' RFC2553, March 1999.
d270 1
@


1.2
log
@repairs; better English, formatting, etc.
@
text
@d33 1
a33 1
.\"     $Id: getnameinfo.3,v 1.1 1999/07/03 20:26:55 deraadt Exp $
d42 1
@


1.1
log
@cleaner
@
text
@d33 1
a33 1
.\"     $Id: getnameinfo.3,v 1.1.2.2.4.1.6.1 1999/04/08 05:39:00 sumikawa Exp $
d37 1
a37 1
.Os KAME
d67 1
a67 1
.Fa sockaddr_in
d69 1
a69 1
.Fa sockaddr_in6
d74 1
a74 1
.Fa sockaddr_in
d76 1
a76 1
.Fa sockaddr_in6
d105 1
a105 1
.Li <netdb.h> :
d114 2
a115 5
.Li <arpa/nameser.h>
header
.Po
older versions of BIND define this constant to be 256
.Pc
d154 1
a154 1
.Li "-n"
d161 4
a164 1
to be called with a second argument of "udp" instead of its default of "tcp".
d171 1
a171 1
.Li <netdb.h> .
d196 2
a197 1
and documented in ``Basic Socket Interface Extensions for IPv6''
@

