head	1.18;
access;
symbols
	OPENBSD_6_2:1.18.0.10
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.8
	OPENBSD_6_1_BASE:1.18
	OPENBSD_6_0:1.18.0.4
	OPENBSD_6_0_BASE:1.18
	OPENBSD_5_9:1.18.0.2
	OPENBSD_5_9_BASE:1.18
	OPENBSD_5_8:1.16.0.12
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.4
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.4
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.2
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.16
	OPENBSD_5_0:1.14.0.14
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.12
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.10
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.6
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.8
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.4
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.8
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.6
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.4
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.6.0.12
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.10
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.8
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.1.0.8
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.6
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.4
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.2
	OPENBSD_2_2_BASE:1.1;
locks; strict;
comment	@# @;


1.18
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.17;
commitid	QU70QaxjyBAtj4Rv;

1.17
date	2015.11.08.14.22.11;	author jmc;	state Exp;
branches;
next	1.16;
commitid	CgRkSaEiVSFnvUCx;

1.16
date	2013.06.05.03.39.23;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2012.06.24.18.06.42;	author gilles;	state Exp;
branches;
next	1.14;

1.14
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.30;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2005.12.30.20.45.59;	author claudio;	state Exp;
branches;
next	1.11;

1.11
date	2005.07.22.04.50.51;	author jaredy;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.01.19.17.37;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.03.06.20.48.35;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.24.09.56.49;	author cedric;	state Exp;
branches;
next	1.7;

1.7
date	2002.10.26.22.01.15;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	2000.04.21.15.38.17;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	2000.04.18.03.01.32;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.05.04.40.59;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.07.02.20.58.00;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.05.25.13.06.45;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	97.06.23.03.37.26;	author millert;	state Exp;
branches;
next	;


desc
@@


1.18
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\"	$OpenBSD: inet_net.3,v 1.17 2015/11/08 14:22:11 jmc Exp $
.\"	$NetBSD: inet_net.3,v 1.1 1997/06/18 02:25:27 lukem Exp $
.\"
.\" Copyright (c) 1997 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by Luke Mewburn.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 8 2015 $
.Dt INET_NET_NTOP 3
.Os
.Sh NAME
.Nm inet_net_ntop ,
.Nm inet_net_pton
.Nd Internet network number manipulation routines
.Sh SYNOPSIS
.In sys/types.h
.In sys/socket.h
.In netinet/in.h
.In arpa/inet.h
.Ft char *
.Fn inet_net_ntop "int af" "const void *src" "int bits" "char *dst" "size_t size"
.Ft int
.Fn inet_net_pton "int af" "const char *src" "void *dst" "size_t size"
.Sh DESCRIPTION
The
.Fn inet_net_ntop
function converts an Internet network number from network format (usually a
.Li struct in_addr
or some other binary form, in network byte order) to CIDR presentation format
(suitable for external display purposes).
.Fa bits
is the number of bits in
.Fa src
that are the network number.
It returns
.Dv NULL
if a system error occurs (in which case,
.Va errno
will have been set), or it returns a pointer to the destination string.
.Pp
The
.Fn inet_net_pton
function converts a presentation format Internet network number (that is,
printable form as held in a character string) to network format (usually a
.Li struct in_addr
or some other internal binary representation, in network byte order).
It returns the number of bits (either computed based on the class, or
specified with /CIDR), or \-1 if a failure occurred
(in which case
.Va errno
will have been set.
It will be set to
.Er ENOENT
if the Internet network number was not valid).
.Pp
Caution:
The
.Fa dst
field should be zeroed before calling
.Fn inet_net_pton
as the function will only fill the number of bytes necessary to
encode the network number in network byte order.
.Pp
The only values for
.Fa af
currently supported are
.Dv AF_INET
and
.Dv AF_INET6 .
.Fa size
is the size of the result buffer
.Fa dst .
.Sh NETWORK NUMBERS (IP VERSION 4)
The external representation of Internet network numbers may be specified in
one of the following forms:
.Bd -literal -offset indent
a
a.b
a.b.c
a.b.c.d
.Ed
.Pp
Any of the above four forms may have
.Dq Li /bits
appended where
.Dq Li bits
is in the range
.Li 0-32
and is used to explicitly specify the number of bits in the network address.
When
.Dq Li /bits
is not specified the number of bits in the network address is calculated
as the larger of the number of bits in the class to which the address
belongs and the number of bits provided rounded up modulo 8.
Examples:
.Pp
.Bl -tag -width 10.1.2.3/24 -offset indent -compact
.It Li 10
an 8-bit network number (class A), value
.Li 10.0.0.0 .
.It Li 192
a 24-bit network number (class C), value
.Li 192.0.0.0 .
.It Li 10.10
a 16-bit network number, value
.Li 10.10.0.0 .
.It Li 10.1.2
a 24-bit network number, value
.Li 10.1.2.0 .
.It Li 10.1.2.3
a 32-bit network number, value
.Li 10.1.2.3 .
.It Li 10.1.2.3/24
a 24-bit network number (explicit), value
.Li 10.1.2.3 .
.El
.Pp
Note that when the number of bits is specified using
.Dq Li /bits
notation, the value of the address still includes all bits supplied
in the external representation, even those bits which are the host
part of an Internet address.
Also, unlike
.Xr inet_pton 3
where the external representation is assumed to be a host address, the
external representation for
.Fn inet_net_pton
is assumed to be a network address.
Thus
.Dq Li 10.1
is assumed to be
.Dq Li 10.1.0.0
not
.Dq Li 10.0.0.1
.Pp
All numbers supplied as
.Dq parts
in a
.Ql \&.
notation
may be decimal, octal, or hexadecimal, as specified
in the C language (i.e., a leading 0x or 0X implies
hexadecimal; otherwise, a leading 0 implies octal;
otherwise, the number is interpreted as decimal).
.Sh NETWORK NUMBERS (IP VERSION 6)
See
.Xr inet_pton 3
for valid external representations of IP version 6 addresses.
A valid external representation may have
.Dq Li /bits
appended where
.Dq Li bits
is in the range
.Li 0-128
and is used to explicitly specify the number of bits in the network address.
When
.Dq Li /bits
is not specified 128 is used.
Note that when the number of bits is specified using
.Dq Li /bits
notation, the value of the address still includes all bits supplied
in the external representation, even those bits which are the host
part of an Internet address.
.Sh SEE ALSO
.Xr byteorder 3 ,
.Xr inet_pton 3 ,
.Xr inet 4 ,
.Xr networks 5
.Sh HISTORY
The
.Nm inet_net_ntop
and
.Nm inet_net_pton
functions first appeared in BIND 4.9.4.
@


1.17
log
@inet(4), not inet(3);
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.16 2013/06/05 03:39:23 tedu Exp $
d31 2
a32 2
.Dd $Mdocdate: June 5 2013 $
.Dt INET_NET 3
@


1.16
log
@Use the fancy .In macro for includes. From Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.15 2012/06/24 18:06:42 gilles Exp $
d31 1
a31 1
.Dd $Mdocdate: June 24 2012 $
a188 1
.Xr inet 3 ,
d190 1
@


1.15
log
@- document newly imported AF_INET6 support to net_inet_{pton,ntop}

diff from Florian Obser, ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.14 2008/06/26 05:42:05 ray Exp $
d31 1
a31 1
.Dd $Mdocdate: June 26 2008 $
d39 4
a42 4
.Fd #include <sys/types.h>
.Fd #include <sys/socket.h>
.Fd #include <netinet/in.h>
.Fd #include <arpa/inet.h>
@


1.14
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.13 2007/05/31 19:19:30 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d87 1
a87 1
The only value for
d89 4
a92 2
currently supported is
.Dv AF_INET .
d168 19
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.12 2005/12/30 20:45:59 claudio Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d31 1
a31 1
.Dd $Mdocdate$
@


1.12
log
@Currently sys/socket.h needs sys/types.h so add #include <sys/types.h> to
the list of necessary includes. Now the manpages match reality.
OK mpf@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.11 2005/07/22 04:50:51 jaredy Exp $
d38 1
a38 1
.Dd June 18, 1997
@


1.11
log
@- sync prototypes and header file excerpts
- typos/spelling, punctuation, rewording, macro, and layout fixes.

help & ok jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.10 2003/05/01 19:17:37 jmc Exp $
d46 1
@


1.10
log
@typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.9 2003/03/06 20:48:35 jmc Exp $
d123 2
a124 1
.Bl -tag -width 10.1.2.3/24
d126 1
a126 1
an 8 bit network number (class A), value
d129 1
a129 1
a 24 bit network number (class C), value
d132 1
a132 1
a 16 bit network number, value
d135 1
a135 1
a 24 bit network number, value
d138 1
a138 1
a 32 bit network number, value
d141 1
a141 1
a 24 bit network number (explicit), value
d147 1
a147 1
notation, the value of the address still includes all bits suplied
d149 1
a149 1
part of an internet address.
d152 1
a152 1
where the external representation is assumed to be an internet address, the
@


1.9
log
@.Xr typos;
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.8 2003/02/24 09:56:49 cedric Exp $
d144 1
a144 1
Note that when the number of bits is especified using
d146 1
a146 1
notation the value of the address still includes all bits suplied
@


1.8
log
@Fix bogus inet_net_pton() translation example.
ok henning@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.7 2002/10/26 22:01:15 marc Exp $
d174 1
a174 1
.Xr inet_pton 3,
@


1.7
log
@
Describe the actual operation of inet_net_pton with a few examples.
Also add caution regarding dst field initialization.
operation text OK millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.6 2000/04/21 15:38:17 aaron Exp $
d133 1
a133 1
.It Li 10.1.2.0
@


1.6
log
@Don't hyphenate the words {left|right}most.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.5 2000/04/18 03:01:32 aaron Exp $
d85 8
d101 2
a102 1
Internet network numbers may be specified in one of the following forms:
d104 3
a106 1
a.b.c.d/bits
a107 3
a.b.c
a.b
a
d110 51
a160 27
When four parts are specified, each is interpreted
as a byte of data and assigned, from left to right,
to the four bytes of an Internet network number.
Note that when an Internet network number is viewed as a 32-bit
integer quantity on a system that uses little-endian
byte order (such as the Intel 386, 486, and Pentium processors)
the bytes referred to above appear as
.Dq Li d.c.b.a .
That is, little-endian bytes are ordered from right to left.
.Pp
When a three part number is specified, the last
part is interpreted as a 16-bit quantity and placed
in the rightmost two bytes of the Internet network number.
This makes the three part number format convenient
for specifying Class B network numbers as
.Dq Li 128.net.host .
.Pp
When a two part number is supplied, the last part
is interpreted as a 24-bit quantity and placed in
the rightmost three bytes of the Internet network number.
This makes the two part number format convenient
for specifying Class A network numbers as
.Dq Li net.host .
.Pp
When only one part is given, the value is stored
directly in the Internet network number without any byte
rearrangement.
d174 1
@


1.5
log
@Repairs, mostly removing hard sentence breaks.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.4 1999/07/05 04:40:59 aaron Exp $
d114 1
a114 1
in the right-most two bytes of the Internet network number.
d121 1
a121 1
the right most three bytes of the Internet network number.
@


1.4
log
@repairs; better English, formatting, etc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.3 1999/07/02 20:58:00 aaron Exp $
d104 2
a105 2
to the four bytes of an Internet network number.  Note
that when an Internet network number is viewed as a 32-bit
@


1.3
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.2 1999/05/25 13:06:45 aaron Exp $
d57 1
a57 1
.Ft struct in_addr
d64 3
a66 1
It returns NULL if a system error occurs (in which case,
d74 1
a74 1
.Ft struct in_addr
d77 1
a77 1
specified with /CIDR), or -1 if a failure occurred
d85 1
a85 1
The currently supported value for
d87 2
a88 1
is: AF_INET.
d107 2
a108 5
byte order (such as the 
.Tn Intel 386, 486
and
.Tn Pentium
processors) the bytes referred to above appear as
@


1.2
log
@punctuation
@
text
@d1 1
a1 1
.\"	$OpenBSD: inet_net.3,v 1.1 1997/06/23 03:37:26 millert Exp $
a88 1
.Pp
@


1.1
log
@Add man page for inet_net_ntop(3) and inet_net_pton(3) from NetBSD (lukem)
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d134 1
a134 1
.Ql  \&.
@

