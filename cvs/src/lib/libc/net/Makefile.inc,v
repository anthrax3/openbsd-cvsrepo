head	1.59;
access;
symbols
	OPENBSD_6_2:1.59.0.8
	OPENBSD_6_2_BASE:1.59
	OPENBSD_6_1:1.59.0.6
	OPENBSD_6_1_BASE:1.59
	OPENBSD_6_0:1.59.0.2
	OPENBSD_6_0_BASE:1.59
	OPENBSD_5_9:1.58.0.2
	OPENBSD_5_9_BASE:1.58
	OPENBSD_5_8:1.56.0.6
	OPENBSD_5_8_BASE:1.56
	OPENBSD_5_7:1.56.0.2
	OPENBSD_5_7_BASE:1.56
	OPENBSD_5_6:1.55.0.4
	OPENBSD_5_6_BASE:1.55
	OPENBSD_5_5:1.50.0.4
	OPENBSD_5_5_BASE:1.50
	OPENBSD_5_4:1.49.0.8
	OPENBSD_5_4_BASE:1.49
	OPENBSD_5_3:1.49.0.6
	OPENBSD_5_3_BASE:1.49
	OPENBSD_5_2:1.49.0.4
	OPENBSD_5_2_BASE:1.49
	OPENBSD_5_1_BASE:1.49
	OPENBSD_5_1:1.49.0.2
	OPENBSD_5_0:1.48.0.6
	OPENBSD_5_0_BASE:1.48
	OPENBSD_4_9:1.48.0.4
	OPENBSD_4_9_BASE:1.48
	OPENBSD_4_8:1.48.0.2
	OPENBSD_4_8_BASE:1.48
	OPENBSD_4_7:1.47.0.2
	OPENBSD_4_7_BASE:1.47
	OPENBSD_4_6:1.44.0.12
	OPENBSD_4_6_BASE:1.44
	OPENBSD_4_5:1.44.0.8
	OPENBSD_4_5_BASE:1.44
	OPENBSD_4_4:1.44.0.6
	OPENBSD_4_4_BASE:1.44
	OPENBSD_4_3:1.44.0.4
	OPENBSD_4_3_BASE:1.44
	OPENBSD_4_2:1.44.0.2
	OPENBSD_4_2_BASE:1.44
	OPENBSD_4_1:1.43.0.2
	OPENBSD_4_1_BASE:1.43
	OPENBSD_4_0:1.42.0.4
	OPENBSD_4_0_BASE:1.42
	OPENBSD_3_9:1.42.0.2
	OPENBSD_3_9_BASE:1.42
	OPENBSD_3_8:1.41.0.2
	OPENBSD_3_8_BASE:1.41
	OPENBSD_3_7:1.39.0.2
	OPENBSD_3_7_BASE:1.39
	OPENBSD_3_6:1.33.0.2
	OPENBSD_3_6_BASE:1.33
	OPENBSD_3_5:1.32.0.2
	OPENBSD_3_5_BASE:1.32
	OPENBSD_3_4:1.31.0.10
	OPENBSD_3_4_BASE:1.31
	OPENBSD_3_3:1.31.0.8
	OPENBSD_3_3_BASE:1.31
	OPENBSD_3_2:1.31.0.6
	OPENBSD_3_2_BASE:1.31
	OPENBSD_3_1:1.31.0.4
	OPENBSD_3_1_BASE:1.31
	OPENBSD_3_0:1.31.0.2
	OPENBSD_3_0_BASE:1.31
	OPENBSD_2_9:1.30.0.6
	OPENBSD_2_9_BASE:1.30
	OPENBSD_2_8:1.30.0.4
	OPENBSD_2_8_BASE:1.30
	OPENBSD_2_7:1.30.0.2
	OPENBSD_2_7_BASE:1.30
	OPENBSD_2_6:1.24.0.2
	OPENBSD_2_6_BASE:1.24
	OPENBSD_2_5:1.17.0.2
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.16.0.2
	OPENBSD_2_4_BASE:1.16
	OPENBSD_2_3:1.15.0.2
	OPENBSD_2_3_BASE:1.15
	OPENBSD_2_2:1.13.0.2
	OPENBSD_2_2_BASE:1.13
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.8.0.2
	OPENBSD_2_0_BASE:1.8
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.59
date	2016.03.30.06.38.41;	author jmc;	state Exp;
branches;
next	1.58;
commitid	LN9ijdk9SEnzWAbM;

1.58
date	2015.09.11.09.54.00;	author deraadt;	state Exp;
branches;
next	1.57;
commitid	zWSeEzss3BlISvzV;

1.57
date	2015.09.10.08.55.03;	author mpi;	state Exp;
branches;
next	1.56;
commitid	Z9eHo3JLFbJnrSa0;

1.56
date	2014.08.31.02.27.37;	author guenther;	state Exp;
branches;
next	1.55;
commitid	1EAloV6n1EfGcrnb;

1.55
date	2014.07.13.13.17.16;	author guenther;	state Exp;
branches;
next	1.54;
commitid	7TxkKYXjwJHLBmlJ;

1.54
date	2014.06.11.16.59.47;	author chrisz;	state Exp;
branches;
next	1.53;
commitid	eCVZBBFwEoAYGCDT;

1.53
date	2014.04.19.13.51.05;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2014.04.19.11.18.01;	author guenther;	state Exp;
branches;
next	1.51;

1.51
date	2014.04.07.17.57.56;	author schwarze;	state Exp;
branches;
next	1.50;

1.50
date	2013.12.17.16.34.05;	author deraadt;	state Exp;
branches;
next	1.49;

1.49
date	2012.01.17.02.33.20;	author deraadt;	state Exp;
branches;
next	1.48;

1.48
date	2010.07.01.19.15.30;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.46;

1.46
date	2009.11.18.07.43.22;	author guenther;	state Exp;
branches;
next	1.45;

1.45
date	2009.08.13.19.54.58;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2007.06.05.18.04.46;	author henning;	state Exp;
branches;
next	1.43;

1.43
date	2006.12.09.01.12.28;	author itojun;	state Exp;
branches;
next	1.42;

1.42
date	2005.10.02.14.48.48;	author jmc;	state Exp;
branches;
next	1.41;

1.41
date	2005.08.06.20.30.03;	author espie;	state Exp;
branches;
next	1.40;

1.40
date	2005.06.17.20.36.16;	author henning;	state Exp;
branches;
next	1.39;

1.39
date	2005.01.06.04.24.14;	author itojun;	state Exp;
branches;
next	1.38;

1.38
date	2004.12.20.22.36.19;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	2004.12.20.03.43.41;	author itojun;	state Exp;
branches;
next	1.36;

1.36
date	2004.12.20.03.26.43;	author itojun;	state Exp;
branches;
next	1.35;

1.35
date	2004.12.06.10.46.35;	author jmc;	state Exp;
branches;
next	1.34;

1.34
date	2004.10.26.17.20.36;	author espie;	state Exp;
branches;
next	1.33;

1.33
date	2004.07.13.21.06.58;	author millert;	state Exp;
branches;
next	1.32;

1.32
date	2004.02.10.18.11.58;	author jmc;	state Exp;
branches;
next	1.31;

1.31
date	2001.08.06.14.40.47;	author jakob;	state Exp;
branches;
next	1.30;

1.30
date	2000.02.23.15.39.53;	author itojun;	state Exp;
branches;
next	1.29;

1.29
date	2000.02.23.06.55.58;	author itojun;	state Exp;
branches;
next	1.28;

1.28
date	2000.01.27.05.18.46;	author itojun;	state Exp;
branches;
next	1.27;

1.27
date	99.12.16.21.30.34;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	99.12.11.08.09.11;	author itojun;	state Exp;
branches;
next	1.25;

1.25
date	99.11.17.05.22.41;	author millert;	state Exp;
branches;
next	1.24;

1.24
date	99.07.03.21.43.12;	author deraadt;	state Exp;
branches;
next	1.23;

1.23
date	99.07.03.20.26.55;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	99.07.03.20.22.21;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	99.07.03.19.56.26;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	99.06.23.22.47.17;	author cmetz;	state Exp;
branches;
next	1.19;

1.19
date	99.06.23.22.17.32;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	99.06.23.21.55.28;	author cmetz;	state Exp;
branches;
next	1.17;

1.17
date	98.11.20.11.18.43;	author d;	state Exp;
branches;
next	1.16;

1.16
date	98.08.29.21.11.40;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	97.11.20.18.33.34;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	97.11.19.23.30.18;	author niklas;	state Exp;
branches;
next	1.13;

1.13
date	97.07.28.16.27.16;	author niklas;	state Exp;
branches;
next	1.12;

1.12
date	97.07.07.22.16.47;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.06.23.03.37.24;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	97.04.13.22.37.17;	author provos;	state Exp;
branches;
next	1.9;

1.9
date	97.03.13.19.07.21;	author downsj;	state Exp;
branches;
next	1.8;

1.8
date	96.09.01.21.25.34;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	96.08.22.20.11.19;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	96.08.19.08.28.32;	author tholo;	state Exp;
branches;
next	1.5;

1.5
date	96.08.16.09.47.01;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	96.08.14.04.18.55;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.08.03.13.03.05;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.19.19.53.20;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.01;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.59
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@#	$OpenBSD: Makefile.inc,v 1.58 2015/09/11 09:54:00 deraadt Exp $

# net sources
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_CPU}/net ${LIBCSRCDIR}/net

CFLAGS+=-DRESOLVSORT

SRCS+=	base64.c ethers.c freeaddrinfo.c \
	gai_strerror.c getaddrinfo.c gethostnamadr.c \
	getifaddrs.c getnameinfo.c getnetent.c \
	getnetnamadr.c getpeereid.c getproto.c getprotoent.c getprotoname.c \
	getservbyname.c getservbyport.c getservent.c getrrsetbyname.c \
	herror.c if_indextoname.c if_nameindex.c if_nametoindex.c inet_addr.c \
	inet_lnaof.c inet_makeaddr.c inet_neta.c inet_netof.c inet_network.c \
	inet_net_ntop.c inet_net_pton.c inet_ntoa.c inet_ntop.c inet_pton.c \
	linkaddr.c rcmd.c rcmdsh.c ruserok.c \
	rresvport.c recv.c res_comp.c res_data.c \
	res_debug.c res_debug_syms.c res_init.c res_mkquery.c res_query.c \
	res_random.c res_send.c \
	send.c sethostent.c sockatmark.c

# IPv6
SRCS+=	ip6opt.c rthdr.c vars6.c

# machine-dependent net sources
# m-d Makefile.inc must include sources for:
#	htonl() htons() ntohl() ntohs()

.include "${LIBCSRCDIR}/arch/${MACHINE_CPU}/net/Makefile.inc"

MAN+=	byteorder.3 ethers.3 gai_strerror.3 getaddrinfo.3 gethostbyname.3 \
	getifaddrs.3 getnameinfo.3 getnetent.3 getpeereid.3 getprotoent.3 \
	getrrsetbyname.3 getservent.3 htonl.3 if_indextoname.3 \
	inet_addr.3 inet_lnaof.3 inet_net.3 inet_ntop.3 \
	inet6_opt_init.3 inet6_rth_space.3 link_ntoa.3 \
	rcmd.3 rcmdsh.3 resolver.3 sockatmark.3
@


1.58
log
@_getnetbyaddr and _getnetbyname appear to be historical accidents in
our tree. ok guenther miod
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.57 2015/09/10 08:55:03 mpi Exp $
a36 53

MLINKS+=byteorder.3 htobe16.3 byteorder.3 htobe32.3 byteorder.3 htobe64.3 \
	byteorder.3 be16toh.3 byteorder.3 be32toh.3 byteorder.3 be64toh.3 \
	byteorder.3 betoh16.3 byteorder.3 betoh32.3 byteorder.3 betoh64.3 \
	byteorder.3 htole16.3 byteorder.3 htole32.3 byteorder.3 htole64.3 \
	byteorder.3 le16toh.3 byteorder.3 le32toh.3 byteorder.3 le64toh.3 \
	byteorder.3 letoh16.3 byteorder.3 letoh32.3 byteorder.3 letoh64.3 \
	byteorder.3 swap16.3 byteorder.3 swap32.3 byteorder.3 swap64.3
MLINKS+=ethers.3 ether_aton.3 ethers.3 ether_hostton.3 ethers.3 ether_line.3 \
	ethers.3 ether_ntoa.3 ethers.3 ether_ntohost.3
MLINKS+=getaddrinfo.3 freeaddrinfo.3
MLINKS+=gethostbyname.3 endhostent.3 gethostbyname.3 gethostbyaddr.3 \
	gethostbyname.3 sethostent.3 gethostbyname.3 gethostent.3 \
	gethostbyname.3 herror.3 gethostbyname.3 gethostbyname2.3 \
	gethostbyname.3 hstrerror.3
MLINKS+=getifaddrs.3 freeifaddrs.3
MLINKS+=getnetent.3 endnetent.3 getnetent.3 getnetbyaddr.3 \
	getnetent.3 getnetbyname.3 getnetent.3 setnetent.3
MLINKS+=getprotoent.3 endprotoent.3 getprotoent.3 getprotobyname.3 \
	getprotoent.3 getprotobynumber.3 getprotoent.3 setprotoent.3 \
	getprotoent.3 getprotoent_r.3 getprotoent.3 getprotobyname_r.3 \
	getprotoent.3 getprotobynumber_r.3 getprotoent.3 setprotoent_r.3 \
	getprotoent.3 endprotoent_r.3
MLINKS+=getservent.3 endservent.3 getservent.3 getservbyname.3 \
	getservent.3 getservbyport.3 getservent.3 setservent.3 \
	getservent.3 getservent_r.3 getservent.3 getservbyname_r.3 \
	getservent.3 getservbyport_r.3 getservent.3 setservent_r.3 \
	getservent.3 endservent_r.3
MLINKS+=htonl.3 htons.3 htonl.3 ntohl.3 htonl.3 ntohs.3
MLINKS+= if_indextoname.3 if_nametoindex.3 if_indextoname.3 if_nameindex.3 \
	if_indextoname.3 if_freenameindex.3
MLINKS+=inet_addr.3 inet_aton.3 inet_addr.3 inet_network.3 \
	inet_addr.3 inet_ntoa.3
MLINKS+=inet_lnaof.3 inet_makeaddr.3 inet_lnaof.3 inet_netof.3
MLINKS+=inet_ntop.3 inet_pton.3
MLINKS+=inet_net.3 inet_net_ntop.3 inet_net.3 inet_net_pton.3
MLINKS+=rcmd.3 iruserok.3 rcmd.3 rresvport.3 rcmd.3 ruserok.3 \
	rcmd.3 rresvport_af.3 rcmd.3 rcmd_af.3 rcmd.3 iruserok_sa.3
MLINKS+=resolver.3 dn_comp.3 resolver.3 dn_expand.3 resolver.3 res_init.3 \
	resolver.3 res_mkquery.3 resolver.3 res_send.3 resolver.3 res_query.3 \
	resolver.3 res_search.3
MLINKS+=getrrsetbyname.3 freerrset.3
MLINKS+=inet6_opt_init.3 inet6_opt_append.3 \
	inet6_opt_init.3 inet6_opt_finish.3 \
	inet6_opt_init.3 inet6_opt_set_val.3 \
	inet6_opt_init.3 inet6_opt_next.3 \
	inet6_opt_init.3 inet6_opt_find.3 \
	inet6_opt_init.3 inet6_opt_get_val.3
MLINKS+=inet6_rth_space.3 inet6_rth_init.3 \
	inet6_rth_space.3 inet6_rth_add.3 \
	inet6_rth_space.3 inet6_rth_reverse.3 \
	inet6_rth_space.3 inet6_rth_segments.3 \
	inet6_rth_space.3 inet6_rth_getaddr.3 \
@


1.57
log
@Remove link_addr(3).  A function to encode the name of an interface in
a sockaddr_dl is a questionnable interface.  But now it makes it harder
to properly reference ifp becauses of this.

Set sdl_index to the index of the corresponding interface when
constructing a routing message.

Ridding previous libc crank.

ok guenther@@, deraadt@@, dlg@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.56 2014/08/31 02:27:37 guenther Exp $
d10 1
a10 1
	getifaddrs.c getnameinfo.c getnetbyaddr.c getnetbyname.c getnetent.c \
@


1.56
log
@Add sockatmark()

ok millert@@ manpage feedback jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.55 2014/07/13 13:17:16 guenther Exp $
d35 1
a35 1
	inet6_opt_init.3 inet6_rth_space.3 link_addr.3 \
a72 1
MLINKS+=link_addr.3 link_ntoa.3
@


1.55
log
@Split out ntoh[ls] and hton[ls] into their own manpage.
Update byteorder(3) to cover the new functions in <endian.h>

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.54 2014/06/11 16:59:47 chrisz Exp $
d8 2
a9 1
SRCS+=	base64.c freeaddrinfo.c gai_strerror.c getaddrinfo.c gethostnamadr.c \
d16 2
a17 1
	linkaddr.c rcmd.c ruserok.c rresvport.c recv.c res_comp.c res_data.c \
d19 2
a20 1
	res_random.c res_send.c send.c sethostent.c ethers.c rcmdsh.c
d36 1
a36 1
	rcmd.3 rcmdsh.3 resolver.3
@


1.54
log
@Remove manpages about deprecated RFC2292 ancillary data convenience functions.
They are obsoleted by the RFC3542 api.

ok mpi@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.53 2014/04/19 13:51:05 deraadt Exp $
d30 1
a30 1
	getrrsetbyname.3 getservent.3 if_indextoname.3 \
d35 7
a41 7
MLINKS+=byteorder.3 htonl.3 byteorder.3 htons.3 byteorder.3 ntohl.3 \
	byteorder.3 ntohs.3 byteorder.3 htobe16.3 byteorder.3 htobe32.3 \
	byteorder.3 htobe64.3 byteorder.3 betoh16.3 byteorder.3 betoh32.3 \
	byteorder.3 betoh64.3 byteorder.3 htole16.3 byteorder.3 htole32.3 \
	byteorder.3 htole64.3 byteorder.3 letoh16.3 byteorder.3 letoh32.3 \
	byteorder.3 letoh64.3 byteorder.3 swap16.3 byteorder.3 swap32.3 \
	byteorder.3 swap64.3
d62 1
@


1.53
log
@kill a stray \
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.52 2014/04/19 11:18:01 guenther Exp $
a31 1
	inet6_option_space.3 inet6_rthdr_space.3 \
a75 12
MLINKS+=inet6_option_space.3 inet6_option_init.3 \
	inet6_option_space.3 inet6_option_append.3 \
	inet6_option_space.3 inet6_option_alloc.3 \
	inet6_option_space.3 inet6_option_next.3 \
	inet6_option_space.3 inet6_option_find.3
MLINKS+=inet6_rthdr_space.3 inet6_rthdr_init.3 \
	inet6_rthdr_space.3 inet6_rthdr_add.3 \
	inet6_rthdr_space.3 inet6_rthdr_lasthop.3 \
	inet6_rthdr_space.3 inet6_rthdr_reverse.3 \
	inet6_rthdr_space.3 inet6_rthdr_segments.3 \
	inet6_rthdr_space.3 inet6_rthdr_getaddr.3 \
	inet6_rthdr_space.3 inet6_rthdr_getflags.3
@


1.52
log
@Split inet(3) into three pages by decade: 1980s -> inet_lnaof(3),
1990s -> inet_addr(3), 2000s and beyond -> inet_ntop(3).

ok tedu@@ (who also noted the timeline) deraadt@@ jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.51 2014/04/07 17:57:56 schwarze Exp $
d66 1
a66 1
	inet_addr.3 inet_ntoa.3 \
@


1.51
log
@Add some missing names to the NAME sections.
For inet(3), go the other way, remove some bogus symlinks.
Found while testing the new makewhatis(8).
ok jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.50 2013/12/17 16:34:05 deraadt Exp $
d30 3
a32 2
	getrrsetbyname.3 getservent.3 if_indextoname.3 inet.3 \
	inet_net.3 inet6_option_space.3 inet6_rthdr_space.3 \
d65 4
a68 4
MLINKS+=inet.3 inet_addr.3 inet.3 inet_aton.3 \
	inet.3 inet_lnaof.3 inet.3 inet_makeaddr.3 inet.3 inet_netof.3 \
	inet.3 inet_network.3 inet.3 inet_ntoa.3 \
	inet.3 inet_ntop.3 inet.3 inet_pton.3
@


1.50
log
@inet_nsap_ntoa() and inet_nsap_addr() go away.  Unused APIs from darker
days.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.49 2012/01/17 02:33:20 deraadt Exp $
d64 1
a64 1
MLINKS+=inet.3 addr.3 inet.3 inet_addr.3 inet.3 inet_aton.3 \
d66 2
a67 2
	inet.3 inet_network.3 inet.3 inet_ntoa.3 inet.3 network.3 \
	inet.3 ntoa.3 inet.3 inet_ntop.3 inet.3 inet_pton.3
@


1.49
log
@net_addrcmp() dies. found out to be a horrific function by eric
ok guenther
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.48 2010/07/01 19:15:30 deraadt Exp $
d15 3
a17 5
	linkaddr.c nsap_addr.c \
	rcmd.c ruserok.c rresvport.c recv.c res_comp.c res_data.c res_debug.c \
	res_debug_syms.c \
	res_init.c res_mkquery.c res_query.c res_random.c res_send.c send.c \
	sethostent.c ethers.c rcmdsh.c
@


1.48
log
@getpeereid() can now be a library routine using getsockopt() with
SOL_SOCKET and SO_PEERCRED, only issue being that it cannot return
EFAULT for a page fault.  The kernel code will soon be put into
compat, and then in 10 years or so tedu will delete it.
ok guenther millert
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.47 2010/02/03 20:49:00 miod Exp $
d15 1
a15 1
	linkaddr.c net_addrcmp.c nsap_addr.c \
d34 1
a34 2
	inet6_opt_init.3 inet6_rth_space.3 \
	link_addr.3 net_addrcmp.3 \
@


1.47
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.46 2009/11/18 07:43:22 guenther Exp $
d10 1
a10 1
	getnetnamadr.c getproto.c getprotoent.c getprotoname.c \
d31 1
a31 1
	getifaddrs.3 getnameinfo.3 getnetent.3 getprotoent.3 \
@


1.46
log
@More shrinkage, a bit for ramdisks but mostly for static binaries:
- wrap with #ifndef NO_LOG_BAD_DNS_RESPONSES libc code that uses
  p_class() and p_type() for diagnostics, then add that define to
  libstub to avoid pulling in res_debug_syms.o
- split rcmd() and ruserok() into separate files, as nothing uses both
- split readdir_r() to its own file
- split syslog_r() from syslog(), as the latter needs localtime(); many
  binaries no longer need to pull in all the time code after this; switch
  from usleep() to nanosleep() while we're at it

(The profit of analysis of -Wl,-M,--cref output)

Chops 888kB from /bin and /sbin on i386

ok deraadt@@, miod@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.45 2009/08/13 19:54:58 jmc Exp $
d4 1
a4 1
.PATH: ${LIBCSRCDIR}/arch/${MACHINE_ARCH}/net ${LIBCSRCDIR}/net
d28 1
a28 1
.include "${LIBCSRCDIR}/arch/${MACHINE_ARCH}/net/Makefile.inc"
@


1.45
log
@various MLINK fixes from Alan R. S. Bueno;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.44 2007/06/05 18:04:46 henning Exp $
d16 1
a16 1
	rcmd.c rresvport.c recv.c res_comp.c res_data.c res_debug.c \
@


1.44
log
@remove ipx-related stuff. objections nobody. major bump by kurt in a few
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.43 2006/12/09 01:12:28 itojun Exp $
d63 2
a64 2
	getservent.3 getservbyport_r.3 setservent.3 setservent_r.3 \
	setservent.3 endservent_r.3
@


1.43
log
@switch IPv6 advanced API from RFC2292 to RFC3542 (2292 is superseded by 3542).
the kernel still handles RFC2292 set/getsockopts, so that compiled binary
has no trouble running.  userland sees RFC3542 symbols only on header file
so new code has to use RFC3542 API.

bump libc shlib minor for function additions.

tested on i386/amd64 by jmc, i386 by brad. checked by deraadt.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.42 2005/10/02 14:48:48 jmc Exp $
d15 1
a15 1
	ipx_addr.c ipx_ntoa.c linkaddr.c net_addrcmp.c nsap_addr.c \
d35 1
a35 1
	ipx.3 link_addr.3 net_addrcmp.3 \
a72 1
MLINKS+=ipx.3 ipx_addr.3 ipx.3 ipx_ntoa.3
@


1.42
log
@`ether_addr' is the name of a structure, not a function: remove its MLINK
and remove its entry from the .Nm list;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.41 2005/08/06 20:30:03 espie Exp $
d34 1
d92 11
@


1.41
log
@zap rcsid.
split functions off res_debug.c so that getnetnamadr.c does not pull it
all when it's used.

okay deraadt@@, krw@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.40 2005/06/17 20:36:16 henning Exp $
d45 1
a45 1
	ethers.3 ether_ntoa.3 ethers.3 ether_ntohost.3 ethers.3 ether_addr.3
@


1.40
log
@remove netns stuff, ok millert
libc major bump by espie in a few
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.39 2005/01/06 04:24:14 itojun Exp $
d17 1
@


1.39
log
@recover MLINKS for inet6_*_space.3
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.38 2004/12/20 22:36:19 millert Exp $
d15 1
a15 3
	ipx_addr.c ipx_ntoa.c linkaddr.c ns_addr.c ns_ntoa.c \
	nsap_addr.c \
	net_addrcmp.c \
d33 1
a33 1
	ipx.3 link_addr.3 net_addrcmp.3 ns.3 \
a71 1
MLINKS+=ns.3 ns_addr.3 ns.3 ns_ntoa.3
@


1.38
log
@gai_strerror.3, getaddrinfo.3 and getnameinfo.3 are back.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.37 2004/12/20 03:43:41 itojun Exp $
d34 1
a34 1
	inet_net.3 \
d81 12
@


1.37
log
@remove MLINKS too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.36 2004/12/20 03:26:43 itojun Exp $
d31 2
a32 2
MAN+=	byteorder.3 ethers.3 gethostbyname.3 \
	getifaddrs.3 getnetent.3 getprotoent.3 \
d47 1
@


1.36
log
@remove manpages based on RFC.  requested by deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.35 2004/12/06 10:46:35 jmc Exp $
a46 1
MLINKS+=getaddrinfo.3 freeaddrinfo.3
a78 12
MLINKS+=inet6_option_space.3 inet6_option_init.3 \
	inet6_option_space.3 inet6_option_append.3 \
	inet6_option_space.3 inet6_option_alloc.3 \
	inet6_option_space.3 inet6_option_next.3 \
	inet6_option_space.3 inet6_option_find.3
MLINKS+=inet6_rthdr_space.3 inet6_rthdr_init.3 \
	inet6_rthdr_space.3 inet6_rthdr_add.3 \
	inet6_rthdr_space.3 inet6_rthdr_lasthop.3 \
	inet6_rthdr_space.3 inet6_rthdr_reverse.3 \
	inet6_rthdr_space.3 inet6_rthdr_segments.3 \
	inet6_rthdr_space.3 inet6_rthdr_getaddr.3 \
	inet6_rthdr_space.3 inet6_rthdr_getflags.3
@


1.35
log
@move gai_strerror into its own page, and make the get* pages more readable;
prompted by henning;

ok henning@@ itojun@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.34 2004/10/26 17:20:36 espie Exp $
d31 2
a32 2
MAN+=	byteorder.3 ethers.3 gai_strerror.3 getaddrinfo.3 gethostbyname.3 \
	getifaddrs.3 getnameinfo.3 getnetent.3 getprotoent.3 \
d34 1
a34 1
	inet_net.3 inet6_option_space.3 inet6_rthdr_space.3 \
@


1.34
log
@link to new functions manpages.
okay millert@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.33 2004/07/13 21:06:58 millert Exp $
d31 6
a36 6
MAN+=	byteorder.3 ethers.3 getaddrinfo.3 gethostbyname.3 getifaddrs.3 \
	getnameinfo.3 getnetent.3 getprotoent.3 getservent.3 inet.3 \
	if_indextoname.3 inet_net.3 link_addr.3 ns.3 ipx.3 \
	rcmd.3 rcmdsh.3 resolver.3 net_addrcmp.3 \
	inet6_option_space.3 inet6_rthdr_space.3 \
	getrrsetbyname.3
d47 1
a47 1
MLINKS+= getaddrinfo.3 freeaddrinfo.3 getaddrinfo.3 gai_strerror.3
@


1.33
log
@Remove iso_addr() and iso_ntoa() as part of the netiso removal.
From henning@@, OK deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.32 2004/02/10 18:11:58 jmc Exp $
d56 4
a59 1
	getprotoent.3 getprotobynumber.3 getprotoent.3 setprotoent.3
d61 4
a64 1
	getservent.3 getservbyport.3 getservent.3 setservent.3
@


1.32
log
@add MLINKS for 64-bit functions in byteorder(3);
passes miod's "make sure it doesn't break libc or libpthread" test;
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.31 2001/08/06 14:40:47 jakob Exp $
d15 1
a15 1
	ipx_addr.c ipx_ntoa.c iso_addr.c linkaddr.c ns_addr.c ns_ntoa.c \
d33 1
a33 1
	if_indextoname.3 inet_net.3 iso_addr.3 link_addr.3 ns.3 ipx.3 \
a65 1
MLINKS+=iso_addr.3 iso_ntoa.3
@


1.31
log
@add getrrsetbyname(3) - API to retrieve arbitrary DNS records
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.30 2000/02/23 15:39:53 itojun Exp $
d40 5
a44 3
	byteorder.3 betoh16.3 byteorder.3 betoh32.3 byteorder.3 htole16.3 \
	byteorder.3 htole32.3 byteorder.3 letoh16.3 byteorder.3 letoh32.3 \
	byteorder.3 swap16.3 byteorder.3 swap32.3
@


1.30
log
@add freeifaddrs(3), which reclaims region allocated by getifaddrs(3).
in sync with kame and bsdi.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.29 2000/02/23 06:55:58 itojun Exp $
d11 2
a12 2
	getservbyname.c getservbyport.c getservent.c herror.c \
	if_indextoname.c if_nameindex.c if_nametoindex.c inet_addr.c \
d35 2
a36 2
	inet6_option_space.3 inet6_rthdr_space.3

d85 1
@


1.29
log
@add getifaddrs(3), from bsdi4.
this will help future apps from complexity of SIOCGIFCONF.
NOTE: getifaddrs(3) uses sysctl interface, not SIOCGIFCONF.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.28 2000/01/27 05:18:46 itojun Exp $
d50 1
@


1.28
log
@add IPv6-ready rcmd() friends.
	rcmd(): IPv4 only
	rcmd_af(): af independent
	ruserok(): af independent
	iruserok(): IPv4 only
	iruserok_sa(): af independent
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.27 1999/12/16 21:30:34 deraadt Exp $
d9 1
a9 1
	getnameinfo.c getnetbyaddr.c getnetbyname.c getnetent.c \
d31 3
a33 3
MAN+=	byteorder.3 ethers.3 getaddrinfo.3 gethostbyname.3 getnameinfo.3 \
	getnetent.3 getprotoent.3 getservent.3 inet.3 if_indextoname.3 \
	inet_net.3 iso_addr.3 link_addr.3 ns.3 ipx.3 \
@


1.27
log
@rresvport_af() and bindresvport_af()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.26 1999/12/11 08:09:11 itojun Exp $
d68 1
a68 1
	rcmd.3 rresvport_af.3
@


1.26
log
@add inet6_option_* and inet6_rthdr_*.
increase shlib minor.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.25 1999/11/17 05:22:41 millert Exp $
d18 1
a18 1
	rcmd.c recv.c res_comp.c res_data.c res_debug.c \
d67 2
a68 1
MLINKS+=rcmd.3 iruserok.3 rcmd.3 rresvport.3 rcmd.3 ruserok.3
@


1.25
log
@Add missing MLINKs
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.24 1999/07/03 21:43:12 deraadt Exp $
d22 3
d34 2
a35 1
	rcmd.3 rcmdsh.3 resolver.3 net_addrcmp.3
d71 12
@


1.24
log
@if_freenameindex() API
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.23 1999/07/03 20:26:55 deraadt Exp $
d58 1
@


1.23
log
@cleaner
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.22 1999/07/03 20:22:21 deraadt Exp $
d28 5
a32 9
MAN+=	byteorder.3 ethers.3 gethostbyname.3 getnetent.3 getprotoent.3 \
	getservent.3 inet.3 inet_net.3 iso_addr.3 link_addr.3 ns.3 ipx.3 \
	rcmd.3 rcmdsh.3 resolver.3 net_addrcmp.3 \
	getnameinfo.3 getaddrinfo.3 if_indextoname.3

MLINKS+= getaddrinfo.3 freeaddrinfo.3
MLINKS+= getaddrinfo.3 gai_strerror.3
MLINKS+= if_indextoname.3 if_nametoindex.3
MLINKS+= if_indextoname.3 if_nameindex.3
d41 1
d52 2
@


1.22
log
@man pages from WIDE
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.21 1999/07/03 19:56:26 deraadt Exp $
d33 2
a34 2
MLINKS+= getnameinfo.3 freeaddrinfo.3
MLINKS+= getnameinfo.3 gai_strerror.3
@


1.21
log
@install man page
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.20 1999/06/23 22:47:17 cmetz Exp $
d30 7
a36 1
	rcmd.3 rcmdsh.3 resolver.3 net_addrcmp.3
@


1.20
log
@Removed non-existent source file from SRC.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.19 1999/06/23 22:17:32 deraadt Exp $
d30 1
a30 1
	rcmd.3 rcmdsh.3 resolver.3
@


1.19
log
@net_addrcmp(); needs man page
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.18 1999/06/23 21:55:28 cmetz Exp $
d8 3
a10 3
SRCS+=	__siocgifconf.c base64.c freeaddrinfo.c gai_strerror.c getaddrinfo.c \
	gethostnamadr.c getnameinfo.c getnetbyaddr.c getnetbyname.c \
	getnetent.c getnetnamadr.c getproto.c getprotoent.c getprotoname.c \
@


1.18
log
@Added some protocol independent interfaces (supposedly IPv6 support APIs, but
ones that are useful for all protocols, not just IPv6).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.17 1998/11/20 11:18:43 d Exp $
d16 3
a18 1
	nsap_addr.c rcmd.c recv.c res_comp.c res_data.c res_debug.c \
@


1.17
log
@Add thread-safety to libc, so that libc_r will build (on i386 at least).
All POSIX libc api now there (to P1003.1c/D10)
  (more md stuff is needed for other libc/arch/*)
  (setlogin is no longer a special syscall)
Add -pthread option to gcc (that makes it use -lc_r and -D_POSIX_THREADS).
Doc some re-entrant routines
Add libc_r to intro(3)
dig() uses some libc srcs and an extra -I was needed there.
Add more md stuff to libc_r.
Update includes for the pthreads api
Update libc_r TODO
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.16 1998/08/29 21:11:40 deraadt Exp $
d8 11
a18 9
SRCS+=	base64.c gethostnamadr.c getnetbyaddr.c getnetbyname.c getnetent.c \
	getnetnamadr.c getproto.c getprotoent.c getprotoname.c getservbyname.c \
	getservbyport.c getservent.c herror.c inet_addr.c inet_lnaof.c \
	inet_makeaddr.c inet_neta.c inet_netof.c inet_network.c \
	inet_net_ntop.c inet_net_pton.c inet_ntoa.c inet_ntop.c \
	inet_pton.c ipx_addr.c ipx_ntoa.c \
	iso_addr.c linkaddr.c ns_addr.c ns_ntoa.c nsap_addr.c rcmd.c recv.c \
	res_comp.c res_data.c res_debug.c res_init.c res_mkquery.c res_query.c \
	res_random.c res_send.c send.c sethostent.c ethers.c rcmdsh.c
@


1.16
log
@man page repairs; aaron@@ug.cs.dal.ca
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.15 1997/11/20 18:33:34 deraadt Exp $
d4 1
a4 1
.PATH: ${.CURDIR}/arch/${MACHINE_ARCH}/net ${.CURDIR}/net
d22 1
a22 1
.include "${.CURDIR}/arch/${MACHINE_ARCH}/net/Makefile.inc"
@


1.15
log
@incorrect MLINKS
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.14 1997/11/19 23:30:18 niklas Exp $
d34 1
a34 1
	ethers.3 ether_ntoa.3 ethers.3 ether_ntohost.3
d37 2
a38 1
	gethostbyname.3 herror.3 gethostbyname.3 gethostbyname2.3
@


1.14
log
@Document new functions
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.13 1997/07/28 16:27:16 niklas Exp $
d32 1
a32 1
	swap16.3 swap32.3
@


1.13
log
@Install inet(3) page as inet_{ntop,pton}(3) pages too
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.12 1997/07/07 22:16:47 millert Exp $
d29 4
a32 1
	byteorder.3 ntohs.3
@


1.12
log
@Define RESOLVSORT so "sortlist" resolver directive works.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.11 1997/06/23 03:37:24 millert Exp $
d44 1
a44 1
	inet.3 ntoa.3
@


1.11
log
@Add man page for inet_net_ntop(3) and inet_net_pton(3) from NetBSD (lukem)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.10 1997/04/13 22:37:17 provos Exp $
d5 2
@


1.10
log
@fouled up a tiny bit
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.9 1997/03/13 19:07:21 downsj Exp $
d23 2
a24 2
	getservent.3 inet.3 iso_addr.3 link_addr.3 ns.3 ipx.3 rcmd.3 rcmdsh.3 \
	resolver.3
@


1.9
log
@Integrate BIND 4.9.5 resolver and associated routines.

Includes the DNS aware getnetby*() routines and IPv6 support.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.8 1996/09/01 21:25:34 millert Exp $
d14 1
a14 1
	res_send.c send.c sethostent.c ethers.c rcmdsh.c
@


1.8
log
@First cut at man page for rcmdsh()
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.7 1996/08/22 20:11:19 millert Exp $
d6 2
a7 2
SRCS+=	gethostnamadr.c getnetbyaddr.c getnetbyname.c getnetent.c \
	getproto.c getprotoent.c getprotoname.c getservbyname.c \
d9 3
a11 2
	inet_makeaddr.c inet_netof.c inet_network.c inet_ntoa.c \
	ipx_addr.c ipx_ntoa.c \
d13 1
a13 1
	res_comp.c res_debug.c res_init.c res_mkquery.c res_query.c \
d32 1
a32 1
	gethostbyname.3 herror.3
@


1.7
log
@Adds rcmdsh() -- rcmd-alike using rsh (or specified shell).
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.6 1996/08/19 08:28:32 tholo Exp $
d22 2
a23 1
	getservent.3 inet.3 iso_addr.3 link_addr.3 ns.3 ipx.3 rcmd.3 resolver.3
@


1.6
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile.inc,v 1.5 1996/08/16 09:47:01 mickey Exp $
d13 1
a13 1
	res_send.c send.c sethostent.c ethers.c
@


1.5
log
@ipx.
@
text
@d1 1
a1 3
#	$OpenBSD$
#	$NetBSD: Makefile.inc,v 1.24 1996/02/02 15:22:14 mrg Exp $
#	@@(#)Makefile.inc	8.2 (Berkeley) 9/5/93
@


1.4
log
@Install iso_addr(3) man page
@
text
@d1 1
d12 1
d24 1
a24 1
	getservent.3 inet.3 iso_addr.3 link_addr.3 ns.3 rcmd.3 resolver.3
d45 1
@


1.3
log
@install as link_ntoa/link_addr; netbsd pr#2614; peter@@wonderland.org
@
text
@d21 2
a22 2
MAN+=	byteorder.3 gethostbyname.3 getnetent.3 getprotoent.3 getservent.3 \
	inet.3 link_addr.3 ns.3 rcmd.3 resolver.3 ethers.3
d41 1
@


1.2
log
@netbsd: bind 4.9.3
@
text
@d22 1
a22 1
	inet.3 linkaddr.3 ns.3 rcmd.3 resolver.3 ethers.3
d41 1
a41 1
MLINKS+=linkaddr.3 linkntoa.3
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#	$NetBSD: Makefile.inc,v 1.23 1995/03/02 09:09:07 chopps Exp $
d11 3
a13 3
	iso_addr.c linkaddr.c ns_addr.c ns_ntoa.c rcmd.c recv.c res_comp.c \
	res_debug.c res_init.c res_mkquery.c res_query.c res_send.c \
	send.c sethostent.c ethers.c
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
