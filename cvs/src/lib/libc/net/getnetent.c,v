head	1.17;
access;
symbols
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.8
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.4
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.17.0.6
	OPENBSD_5_8_BASE:1.17
	OPENBSD_5_7:1.17.0.2
	OPENBSD_5_7_BASE:1.17
	OPENBSD_5_6:1.13.0.12
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.10
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.6
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.4
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.2
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.26
	OPENBSD_5_0:1.12.0.24
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.22
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.20
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.16
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.18
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.14
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.12
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.10
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.8
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.6
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.4
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.2
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.9.0.8
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.6
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.4
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.2
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.8.0.22
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.20
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.18
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.16
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.8.0.14
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.12
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.10
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.8.0.8
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.8.0.6
	OPENBSD_2_5_BASE:1.8
	OPENBSD_2_4:1.8.0.4
	OPENBSD_2_4_BASE:1.8
	OPENBSD_2_3:1.8.0.2
	OPENBSD_2_3_BASE:1.8
	OPENBSD_2_2:1.7.0.4
	OPENBSD_2_2_BASE:1.7
	OPENBSD_2_1:1.7.0.2
	OPENBSD_2_1_BASE:1.7
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.17
date	2015.01.16.18.20.14;	author millert;	state Exp;
branches;
next	1.16;
commitid	UIRNLVaChxU6WQMJ;

1.16
date	2015.01.16.18.18.58;	author millert;	state Exp;
branches;
next	1.15;
commitid	eexzrTnC64Onwk7E;

1.15
date	2015.01.16.16.48.51;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	0DYulI8hhujBHMcR;

1.14
date	2014.09.15.06.15.48;	author guenther;	state Exp;
branches;
next	1.13;
commitid	ztgYHm1nk3mtTyS3;

1.13
date	2012.04.10.16.41.10;	author eric;	state Exp;
branches;
next	1.12;

1.12
date	2006.01.17.15.37.58;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.06.20.30.03;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2005.03.25.13.24.12;	author otto;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.20.18.35;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	98.03.16.05.06.57;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.04.24.08.37.09;	author tholo;	state Exp;
branches;
next	1.6;

1.6
date	97.04.03.02.12.57;	author kstailey;	state Exp;
branches;
next	1.5;

1.5
date	96.09.03.07.27.45;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.08.19.08.28.47;	author tholo;	state Exp;
branches;
next	1.3;

1.3
date	96.02.19.19.53.22;	author dm;	state Exp;
branches;
next	1.2;

1.2
date	96.01.15.01.10.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Use ">", not ">=" when comparing length to HOST_NAME_MAX since
otherwise we end up needlessly replacing a NUL with a NUL.
OK deraadt@@
@
text
@/*	$OpenBSD: getnetent.c,v 1.16 2015/01/16 18:18:58 millert Exp $ */
/*
 * Copyright (c) 1983, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/socket.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <netdb.h>
#include <stdio.h>
#include <string.h>
#include <limits.h>

#define	MAXALIASES	35

static FILE *netf;
static char line[BUFSIZ+1];
static struct netent net;
static char *net_aliases[MAXALIASES];
int _net_stayopen;

void
setnetent(int f)
{
	if (netf == NULL)
		netf = fopen(_PATH_NETWORKS, "re" );
	else
		rewind(netf);
	_net_stayopen |= f;
}

void
endnetent(void)
{
	if (netf) {
		fclose(netf);
		netf = NULL;
	}
	_net_stayopen = 0;
}

struct netent *
getnetent(void)
{
	char *p, *cp, **q;
	size_t len;

	if (netf == NULL && (netf = fopen(_PATH_NETWORKS, "re" )) == NULL)
		return (NULL);
again:
	if ((p = fgetln(netf, &len)) == NULL)
		return (NULL);
	if (p[len-1] == '\n')
		len--;
	if (len >= sizeof(line) || len == 0)
		goto again;
	p = memcpy(line, p, len);
	line[len] = '\0';
	if (*p == '#')
		goto again;
	if ((cp = strchr(p, '#')) != NULL)
		*cp = '\0';
	net.n_name = p;
	if (strlen(net.n_name) > HOST_NAME_MAX)
		net.n_name[HOST_NAME_MAX] = '\0';
	cp = strpbrk(p, " \t");
	if (cp == NULL)
		goto again;
	*cp++ = '\0';
	while (*cp == ' ' || *cp == '\t')
		cp++;
	p = strpbrk(cp, " \t");
	if (p != NULL)
		*p++ = '\0';
	net.n_net = inet_network(cp);
	net.n_addrtype = AF_INET;
	q = net.n_aliases = net_aliases;
	cp = p;
	while (cp && *cp) {
		if (*cp == ' ' || *cp == '\t') {
			cp++;
			continue;
		}
		if (q < &net_aliases[MAXALIASES - 1]) {
			*q++ = cp;
			if (strlen(cp) > HOST_NAME_MAX)
				cp[HOST_NAME_MAX] = '\0';
		}
		cp = strpbrk(cp, " \t");
		if (cp != NULL)
			*cp++ = '\0';
	}
	*q = NULL;
	return (&net);
}
@


1.16
log
@Replace HOST_NAME_MAX+1-1 with HOST_NAME_MAX.  OK deraad@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetent.c,v 1.15 2015/01/16 16:48:51 deraadt Exp $ */
d89 1
a89 1
	if (strlen(net.n_name) >= HOST_NAME_MAX)
d111 1
a111 1
			if (strlen(cp) >= HOST_NAME_MAX)
@


1.15
log
@Move to the <limits.h> universe.
review by millert, binary checking process with doug, concept with guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetent.c,v 1.14 2014/09/15 06:15:48 guenther Exp $ */
d89 2
a90 2
	if (strlen(net.n_name) >= HOST_NAME_MAX+1-1)
		net.n_name[HOST_NAME_MAX+1-1] = '\0';
d111 2
a112 2
			if (strlen(cp) >= HOST_NAME_MAX+1-1)
				cp[HOST_NAME_MAX+1-1] = '\0';
@


1.14
log
@When fopen()ing internal to libc (the API doesn't support the use
of the resulting FILE *), then pass fopen() the 'e' mode letter to
mark it close-on-exec.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetent.c,v 1.13 2012/04/10 16:41:10 eric Exp $ */
a30 1
#include <sys/param.h>
d37 1
d89 2
a90 2
	if (strlen(net.n_name) >= MAXHOSTNAMELEN-1)
		net.n_name[MAXHOSTNAMELEN-1] = '\0';
d111 2
a112 2
			if (strlen(cp) >= MAXHOSTNAMELEN-1)
				cp[MAXHOSTNAMELEN-1] = '\0';
@


1.13
log
@Do not pick the network number as alias on entries with no alias
defined.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetent.c,v 1.12 2006/01/17 15:37:58 millert Exp $ */
d51 1
a51 1
		netf = fopen(_PATH_NETWORKS, "r" );
d73 1
a73 1
	if (netf == NULL && (netf = fopen(_PATH_NETWORKS, "r" )) == NULL)
@


1.12
log
@Include <sys/param.h> instead of <sys/types.h> so we get MAXHOSTNAMELEN
@
text
@d1 1
a1 1
/*	$OpenBSD: getnetent.c,v 1.11 2005/08/06 20:30:03 espie Exp $ */
d103 1
a103 2
	if (p != NULL) 
		cp = p;
@


1.11
log
@zap rcsid.
split functions off res_debug.c so that getnetnamadr.c does not pull it
all when it's used.

okay deraadt@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d31 1
a31 1
#include <sys/types.h>
@


1.10
log
@ansify. ok deraadt@@ moritz@@
@
text
@d1 1
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.9 2003/06/02 20:18:35 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d31 1
a31 1
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.8 1998/03/16 05:06:57 millert Exp $";
d51 1
a51 2
setnetent(f)
	int f;
d61 1
a61 1
endnetent()
d71 1
a71 1
getnetent()
@


1.8
log
@Use fgetln(3) instead of fgets(3) so we can easily recognize lines
that are too long and ignore them instead of corrupting later entries.
@
text
@d13 1
a13 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d31 1
a31 1
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.7 1997/04/24 08:37:09 tholo Exp $";
@


1.7
log
@Revert last change
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.5 1996/09/03 07:27:45 deraadt Exp $";
d78 2
a79 2
	char *p;
	register char *cp, **q;
d84 1
a84 2
	p = fgets(line, BUFSIZ, netf);
	if (p == NULL)
d86 6
d94 2
a95 4
	cp = strpbrk(p, "#\n");
	if (cp == NULL)
		goto again;
	*cp = '\0';
@


1.6
log
@add htonl()
@
text
@d105 1
a105 1
	net.n_net = htonl(inet_network(cp));
@


1.5
log
@constrain to MAXHOSTNAMELEN
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.4 1996/08/19 08:28:47 tholo Exp $";
d105 1
a105 1
	net.n_net = inet_network(cp);
@


1.4
log
@Fix RCS ids
Make sure everything uses {SYS,}LIBC_SCCS properly
@
text
@d35 1
a35 1
static char rcsid[] = "$OpenBSD: getnetent.c,v 1.6 1996/02/02 15:22:21 mrg Exp $";
d94 2
d115 1
a115 1
		if (q < &net_aliases[MAXALIASES - 1])
d117 3
@


1.3
log
@netbsd: bind 4.9.3
@
text
@a0 2
/*	$NetBSD: getnetent.c,v 1.6 1996/02/02 15:22:21 mrg Exp $	*/

d35 1
a35 5
#if 0
static char sccsid[] = "@@(#)getnetent.c	8.1 (Berkeley) 6/4/93";
#else
static char rcsid[] = "$NetBSD: getnetent.c,v 1.6 1996/02/02 15:22:21 mrg Exp $";
#endif
@


1.2
log
@from netbsd:
Don't read the network address as an alias when there isn't whitespace
after the network address.  Closes PR 1940.
@
text
@d1 1
a1 1
/*	$NetBSD: getnetent.c,v 1.5 1996/01/14 05:02:41 ghudson Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: getnetent.c,v 1.5 1996/01/14 05:02:41 ghudson Exp $";
d112 1
a112 1
	if (p != NULL) {
d114 4
a117 10
		while (cp && *cp) {
			if (*cp == ' ' || *cp == '\t') {
				cp++;
				continue;
			}
			if (q < &net_aliases[MAXALIASES - 1])
				*q++ = cp;
			cp = strpbrk(cp, " \t");
			if (cp != NULL)
				*cp++ = '\0';
d119 5
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
/*	$NetBSD: getnetent.c,v 1.4 1995/02/25 06:20:33 cgd Exp $	*/
d40 1
a40 1
static char rcsid[] = "$NetBSD: getnetent.c,v 1.4 1995/02/25 06:20:33 cgd Exp $";
d112 1
a112 1
	if (p != NULL) 
d114 10
a123 4
	while (cp && *cp) {
		if (*cp == ' ' || *cp == '\t') {
			cp++;
			continue;
a124 5
		if (q < &net_aliases[MAXALIASES - 1])
			*q++ = cp;
		cp = strpbrk(cp, " \t");
		if (cp != NULL)
			*cp++ = '\0';
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

