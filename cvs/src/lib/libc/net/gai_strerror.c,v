head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.6
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.7.0.28
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.20
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.24
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.22
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.18
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.16
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.14
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.12
	OPENBSD_5_0:1.7.0.10
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.8
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.6
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.4
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.6.0.18
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.16
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.14
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.12
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.10
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.8
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.6
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.4
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.2
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.5.0.14
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.12
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.10
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@ * @;


1.8
date	2015.09.14.07.38.38;	author guenther;	state Exp;
branches;
next	1.7;
commitid	sc13azJRI5HI5bbC;

1.7
date	2009.06.02.16.47.50;	author jasper;	state Exp;
branches;
next	1.6;

1.6
date	2004.12.20.22.35.32;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.05.02.31.34;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.12.30.08.54.20;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	99.06.30.06.43.48;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	99.06.23.22.38.51;	author cmetz;	state Exp;
branches;
next	1.1;

1.1
date	99.06.23.21.55.29;	author cmetz;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Finish wrapping <netdb.h> so that calls go direct and the symbols are all weak
@
text
@/*	$OpenBSD: gai_strerror.c,v 1.7 2009/06/02 16:47:50 jasper Exp $	*/

/*
 * Copyright (c) 1997-1999, Craig Metz, All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Craig Metz and
 *      by other contributors.
 * 4. Neither the name of the author nor the names of contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

/* gai_strerror() v1.38 */

#include <sys/types.h>
#include <netdb.h>
#include <errno.h>

const char *
gai_strerror(int errnum)
{
	switch (errnum) {
	case 0:
		return "no error";
	case EAI_BADFLAGS:
		return "invalid value for ai_flags";
	case EAI_NONAME:
		return "name or service is not known";
	case EAI_AGAIN:
		return "temporary failure in name resolution";
	case EAI_FAIL:
		return "non-recoverable failure in name resolution";
	case EAI_NODATA:
		return "no address associated with name";
	case EAI_FAMILY:
		return "ai_family not supported";
	case EAI_SOCKTYPE:
		return "ai_socktype not supported";
	case EAI_SERVICE:
		return "service not supported for ai_socktype";
	case EAI_ADDRFAMILY:
		return "address family for name not supported";
	case EAI_MEMORY:
		return "memory allocation failure";
	case EAI_SYSTEM:
		return "system error";
	case EAI_BADHINTS:
		return "invalid value for hints";
	case EAI_PROTOCOL:
		return "resolved protocol is unknown";
	case EAI_OVERFLOW:
		return "argument buffer overflow";
	default:
		return "unknown/invalid error";
	}
}
DEF_WEAK(gai_strerror);
@


1.7
log
@- define EAI_OVERFLOW, as per IEEE Std 1003.1-2001(Interpretation #13)

hint from claudio@@, ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gai_strerror.c,v 1.6 2004/12/20 22:35:32 millert Exp $	*/
d79 1
@


1.6
log
@gai_strerror() should return const char *; OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: gai_strerror.c,v 1.5 2001/06/05 02:31:34 deraadt Exp $	*/
d73 2
@


1.5
log
@repair copyright notices for NRL & cmetz; cmetz
@
text
@d1 1
a1 1
/*	$OpenBSD: gai_strerror.c,v 1.4 1999/12/30 08:54:20 itojun Exp $	*/
d41 1
a41 1
char *
@


1.4
log
@replace NRL get{addr,name}info with KAME get{addr,name}info.

removed functionality:
	new code will not return AF_LOCAL addrinfo struct.
added funtionality:
	SOCK_RAW is permitted as ai_socktype (no servname allowed).
	draft-ietf-ipngwg-scopedaddr-format-00.txt
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a3 1
 * %%% copyright-cmetz-97-bsd
@


1.3
log
@indent
@
text
@d1 2
d70 4
@


1.2
log
@Removed portability ifdefs.
@
text
@d4 1
a4 1
 * 
d20 1
a20 1
 * 
a31 1
 *
d40 2
a41 1
char *gai_strerror(int errnum)
d43 29
a71 29
  switch(errnum) {
    case 0:
      return "no error";
    case EAI_BADFLAGS:
      return "invalid value for ai_flags";
    case EAI_NONAME:
      return "name or service is not known";
    case EAI_AGAIN:
      return "temporary failure in name resolution";
    case EAI_FAIL:
      return "non-recoverable failure in name resolution";
    case EAI_NODATA:
      return "no address associated with name";
    case EAI_FAMILY:
      return "ai_family not supported";
    case EAI_SOCKTYPE:
      return "ai_socktype not supported";
    case EAI_SERVICE:
      return "service not supported for ai_socktype";
    case EAI_ADDRFAMILY:
      return "address family for name not supported";
    case EAI_MEMORY:
      return "memory allocation failure";
    case EAI_SYSTEM:
      return "system error";
    default:
      return "unknown/invalid error";
  };
};
@


1.1
log
@Added some protocol independent interfaces (supposedly IPv6 support APIs, but
ones that are useful for all protocols, not just IPv6).
@
text
@a32 27
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Craig Metz and
 *      by other contributors.
 * 4. Neither the name of the author nor the names of contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
a40 6
#define THREAD_SAFE 0

#if !THREAD_SAFE
static char buffer[256];
#endif /* !THREAD_SAFE */

a66 1
#if THREAD_SAFE
a67 5
#else /* THREAD_SAFE */
      snprintf(buffer, sizeof(buffer)-1, "system error: %s(%d)", strerror(errno), errno);
      buffer[sizeof(buffer)-1] = 0;
      return buffer;
#endif /* THREAD_SAFE */
a68 1
#if THREAD_SAFE
a69 5
#else /* THREAD_SAFE */
      snprintf(buffer, sizeof(buffer)-1, "unknown/invalid error %d", errnum);
      buffer[sizeof(buffer)-1] = 0;
      return buffer;
#endif /* THREAD_SAFE */
@

