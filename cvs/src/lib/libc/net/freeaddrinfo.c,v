head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.4
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.6.0.44
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.36
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.40
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.38
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.34
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.32
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.6.0.30
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.28
	OPENBSD_5_0:1.6.0.26
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.24
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.22
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.18
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.20
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.16
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.14
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.12
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.10
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.8
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.6
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.4
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.2
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.5.0.2
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.4.0.20
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.18
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.16
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.14
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.12
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.9
date	2016.09.21.04.38.56;	author guenther;	state Exp;
branches;
next	1.8;
commitid	pqjnYVtACzQ9ctai;

1.8
date	2015.12.28.22.08.18;	author mmcc;	state Exp;
branches;
next	1.7;
commitid	0uXuF2O13NH9q2e1;

1.7
date	2015.09.14.07.38.38;	author guenther;	state Exp;
branches;
next	1.6;
commitid	sc13azJRI5HI5bbC;

1.6
date	2005.03.25.13.24.11;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2004.10.01.04.08.45;	author jsg;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.28.17.47.26;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	2000.01.27.08.23.46;	author itojun;	state Exp;
branches;
next	1.2;

1.2
date	99.06.23.22.14.51;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	99.06.23.21.55.28;	author cmetz;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Delete casts to off_t and size_t that are implied by assignments
or prototypes.  Ditto for some of the char* and void* casts too.

verified no change to instructions on ILP32 (i386) and LP64 (amd64)
ok natano@@ abluhm@@ deraadt@@ millert@@
@
text
@/*	$OpenBSD: freeaddrinfo.c,v 1.8 2015/12/28 22:08:18 mmcc Exp $	*/

/*
 * Copyright (c) 1996, 1997, 1998, 1999, Craig Metz, All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Craig Metz and
 *      by other contributors.
 * 4. Neither the name of the author nor the names of contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <stdlib.h>
#include <netdb.h>

void
freeaddrinfo(struct addrinfo *ai)
{
	struct addrinfo *p;

	do {
		p = ai;
		ai = ai->ai_next;
		free(p->ai_canonname);
		free(p);
	} while (ai);
}
DEF_WEAK(freeaddrinfo);
@


1.8
log
@Remove NULL-checks before free() and a few related dead assignments.

ok and valuable input from millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: freeaddrinfo.c,v 1.7 2015/09/14 07:38:38 guenther Exp $	*/
d47 1
a47 1
		free((void *)p);
@


1.7
log
@Finish wrapping <netdb.h> so that calls go direct and the symbols are all weak
@
text
@d1 1
a1 1
/*	$OpenBSD: freeaddrinfo.c,v 1.6 2005/03/25 13:24:11 otto Exp $	*/
d46 1
a46 2
		if (p->ai_canonname)
			free(p->ai_canonname);
@


1.6
log
@ansify. ok deraadt@@ moritz@@
@
text
@d1 1
a1 1
/*	$OpenBSD: freeaddrinfo.c,v 1.5 2004/10/01 04:08:45 jsg Exp $	*/
d51 1
@


1.5
log
@add some missing $, ok djm@@ 'That looks fine to me' millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d39 1
a39 2
freeaddrinfo(ai)
	struct addrinfo *ai;
@


1.4
log
@don't permit freeaddrinfo(NULL).  now the behavior is consistent
across {free,net,open}bsd.

both rfc2553 and X/Open spec are silent about the behavior,
and there's no strong consensus either.  i think library should NOT be
forgiving in this case, to promote development of more robust 3rd-party
codebase (code works on "freeaddrinfo(NULL) = SEGV" will work on
"freeaddrinfo(NULL) is okay" environment, but not the other way around).
only issue i have now is NRL freeaddrinfo() compatibility, which permits
freeaddrinfo(NULL).
@
text
@d1 2
@


1.3
log
@avoid memory leakage on freeaddrinfo().
(this bug was introduced since we mix KAME getaddrinfo and NRL freeaddrinfo).
@
text
@d42 1
a42 1
	while (ai) {
d48 1
a48 1
	}
@


1.2
log
@KNF
@
text
@d45 2
@


1.1
log
@Added some protocol independent interfaces (supposedly IPv6 support APIs, but
ones that are useful for all protocols, not just IPv6).
@
text
@d36 3
a38 1
void freeaddrinfo(struct addrinfo *ai)
d40 1
a40 1
  struct addrinfo *p;
d42 5
a46 5
  while(ai) {
    p = ai;
    ai = ai->ai_next;
    free((void *)p);
  }
@

