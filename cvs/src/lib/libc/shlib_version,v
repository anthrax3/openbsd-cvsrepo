head	1.189;
access;
symbols
	OPENBSD_6_1:1.188.0.4
	OPENBSD_6_1_BASE:1.188
	OPENBSD_6_0:1.184.0.2
	OPENBSD_6_0_BASE:1.184
	OPENBSD_5_9:1.179.0.2
	OPENBSD_5_9_BASE:1.179
	OPENBSD_5_8:1.173.0.4
	OPENBSD_5_8_BASE:1.173
	OPENBSD_5_7:1.170.0.2
	OPENBSD_5_7_BASE:1.170
	OPENBSD_5_6:1.165.0.4
	OPENBSD_5_6_BASE:1.165
	OPENBSD_5_5:1.159.0.4
	OPENBSD_5_5_BASE:1.159
	OPENBSD_5_4:1.154.0.2
	OPENBSD_5_4_BASE:1.154
	OPENBSD_5_3:1.147.0.2
	OPENBSD_5_3_BASE:1.147
	OPENBSD_5_2:1.144.0.2
	OPENBSD_5_2_BASE:1.144
	OPENBSD_5_1_BASE:1.138
	OPENBSD_5_1:1.138.0.2
	OPENBSD_5_0:1.136.0.2
	OPENBSD_5_0_BASE:1.136
	OPENBSD_4_9:1.127.0.2
	OPENBSD_4_9_BASE:1.127
	OPENBSD_4_8:1.125.0.2
	OPENBSD_4_8_BASE:1.125
	OPENBSD_4_7:1.121.0.2
	OPENBSD_4_7_BASE:1.121
	OPENBSD_4_6:1.116.0.4
	OPENBSD_4_6_BASE:1.116
	OPENBSD_4_5:1.115.0.2
	OPENBSD_4_5_BASE:1.115
	OPENBSD_4_4:1.112.0.2
	OPENBSD_4_4_BASE:1.112
	OPENBSD_4_3:1.107.0.2
	OPENBSD_4_3_BASE:1.107
	OPENBSD_4_2:1.104.0.2
	OPENBSD_4_2_BASE:1.104
	OPENBSD_4_1:1.103.0.2
	OPENBSD_4_1_BASE:1.103
	OPENBSD_4_0:1.99.0.2
	OPENBSD_4_0_BASE:1.99
	OPENBSD_3_9:1.96.0.2
	OPENBSD_3_9_BASE:1.96
	OPENBSD_3_8:1.93.0.2
	OPENBSD_3_8_BASE:1.93
	OPENBSD_3_7:1.85.0.2
	OPENBSD_3_7_BASE:1.85
	OPENBSD_3_6:1.84.0.2
	OPENBSD_3_6_BASE:1.84
	OPENBSD_3_5:1.78.0.2
	OPENBSD_3_5_BASE:1.78
	OPENBSD_3_4:1.77.0.2
	OPENBSD_3_4_BASE:1.77
	OPENBSD_3_3:1.74.0.2
	OPENBSD_3_3_BASE:1.74
	OPENBSD_3_2:1.68.0.2
	OPENBSD_3_2_BASE:1.68
	OPENBSD_3_1:1.64.0.2
	OPENBSD_3_1_BASE:1.64
	OPENBSD_3_0:1.61.0.2
	OPENBSD_3_0_BASE:1.61
	OPENBSD_2_9:1.55.0.2
	OPENBSD_2_9_BASE:1.55
	OPENBSD_2_8:1.50.0.2
	OPENBSD_2_8_BASE:1.50
	OPENBSD_2_7:1.48.0.2
	OPENBSD_2_7_BASE:1.48
	OPENBSD_2_6:1.40.0.2
	OPENBSD_2_6_BASE:1.40
	OPENBSD_2_5:1.36.0.2
	OPENBSD_2_5_BASE:1.36
	OPENBSD_2_4:1.33.0.2
	OPENBSD_2_4_BASE:1.33
	OPENBSD_2_3:1.28.0.2
	OPENBSD_2_3_BASE:1.28
	OPENBSD_2_2:1.22.0.2
	OPENBSD_2_2_BASE:1.22
	OPENBSD_2_1:1.13.0.2
	OPENBSD_2_1_BASE:1.13
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.189
date	2017.04.10.05.10.56;	author otto;	state Exp;
branches;
next	1.188;
commitid	dGo5WHTuG8AABrfD;

1.188
date	2017.03.06.18.44.56;	author otto;	state Exp;
branches;
next	1.187;
commitid	2WDZMOOd9dxEmavX;

1.187
date	2016.09.17.20.13.48;	author kettenis;	state Exp;
branches;
next	1.186;
commitid	f1nmDdY4b1Mvu9F1;

1.186
date	2016.09.04.14.38.53;	author naddy;	state Exp;
branches;
next	1.185;
commitid	EP9h59O4RJbwRqyK;

1.185
date	2016.09.01.10.41.31;	author otto;	state Exp;
branches;
next	1.184;
commitid	IQhyLDlKbP0DKO78;

1.184
date	2016.05.23.00.27.18;	author guenther;	state Exp;
branches;
next	1.183;
commitid	n4AXAHwjFvKCWmwy;

1.183
date	2016.05.07.19.05.21;	author guenther;	state Exp;
branches;
next	1.182;
commitid	d9R7VGw9CHTkwXE1;

1.182
date	2016.03.30.07.56.14;	author guenther;	state Exp;
branches;
next	1.181;
commitid	696IYFp3iBQIULWr;

1.181
date	2016.03.21.22.41.28;	author bluhm;	state Exp;
branches;
next	1.180;
commitid	hneUpr7ZOJCeNeHP;

1.180
date	2016.03.20.02.32.39;	author guenther;	state Exp;
branches;
next	1.179;
commitid	va8OhMk7nsI8YWCs;

1.179
date	2015.11.18.16.50.08;	author tedu;	state Exp;
branches;
next	1.178;
commitid	r3k1To7QNDObiXt6;

1.178
date	2015.11.10.04.30.59;	author guenther;	state Exp;
branches;
next	1.177;
commitid	GTAoVjpQRAdNHXVz;

1.177
date	2015.10.23.00.53.13;	author deraadt;	state Exp;
branches;
next	1.176;
commitid	AAAM6595oV98wHJD;

1.176
date	2015.09.13.16.17.27;	author guenther;	state Exp;
branches;
next	1.175;
commitid	lEMOQdoZXv2vOWvx;

1.175
date	2015.09.09.16.18.06;	author guenther;	state Exp;
branches;
next	1.174;
commitid	yiOL4VPNwDBXR3Az;

1.174
date	2015.08.26.01.57.54;	author guenther;	state Exp;
branches;
next	1.173;
commitid	PXCMCmPLS9fHDTW8;

1.173
date	2015.07.19.06.47.55;	author schwarze;	state Exp;
branches;
next	1.172;
commitid	08InIeRNhsExpIcK;

1.172
date	2015.06.20.01.17.34;	author jca;	state Exp;
branches;
next	1.171;
commitid	MSvVD3HLomzEgDki;

1.171
date	2015.04.07.01.27.06;	author guenther;	state Exp;
branches;
next	1.170;
commitid	oQvh7XA3Kql35r0J;

1.170
date	2015.01.12.20.58.07;	author millert;	state Exp;
branches;
next	1.169;
commitid	YbdQFuLQEhxYmaI2;

1.169
date	2014.12.08.21.05.39;	author tedu;	state Exp;
branches;
next	1.168;
commitid	Aa33G6UbcoyOHV7m;

1.168
date	2014.11.17.16.47.53;	author tedu;	state Exp;
branches;
next	1.167;
commitid	winMT4QlOdCN836K;

1.167
date	2014.09.08.19.30.06;	author naddy;	state Exp;
branches;
next	1.166;
commitid	tvDcCdusj7XHUut6;

1.166
date	2014.08.31.01.42.36;	author guenther;	state Exp;
branches;
next	1.165;
commitid	zF5A8BuuSSyqaDyM;

1.165
date	2014.07.14.03.53.36;	author deraadt;	state Exp;
branches;
next	1.164;
commitid	pXG5eeGbak3xovj0;

1.164
date	2014.06.13.02.46.25;	author deraadt;	state Exp;
branches;
next	1.163;
commitid	kpf67O9hZv0TkLSB;

1.163
date	2014.05.12.19.09.00;	author espie;	state Exp;
branches;
next	1.162;

1.162
date	2014.04.30.00.16.47;	author sperreault;	state Exp;
branches;
next	1.161;

1.161
date	2014.04.21.13.18.01;	author deraadt;	state Exp;
branches;
next	1.160;

1.160
date	2014.03.23.23.14.54;	author tedu;	state Exp;
branches;
next	1.159;

1.159
date	2014.01.22.21.07.08;	author tedu;	state Exp;
branches;
next	1.158;

1.158
date	2013.12.28.18.38.42;	author kettenis;	state Exp;
branches;
next	1.157;

1.157
date	2013.12.17.16.34.27;	author deraadt;	state Exp;
branches;
next	1.156;

1.156
date	2013.10.21.20.33.23;	author deraadt;	state Exp;
branches;
next	1.155;

1.155
date	2013.08.13.05.52.12;	author guenther;	state Exp;
branches;
next	1.154;

1.154
date	2013.07.12.14.37.29;	author eric;	state Exp;
branches;
next	1.153;

1.153
date	2013.06.17.19.11.54;	author guenther;	state Exp;
branches;
next	1.152;

1.152
date	2013.05.31.20.59.23;	author ajacoutot;	state Exp;
branches;
next	1.151;

1.151
date	2013.05.13.10.37.02;	author ajacoutot;	state Exp;
branches;
next	1.150;

1.150
date	2013.04.29.17.06.20;	author matthew;	state Exp;
branches;
next	1.149;

1.149
date	2013.04.15.15.50.42;	author jsing;	state Exp;
branches;
next	1.148;

1.148
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.147;

1.147
date	2013.01.30.00.08.13;	author brad;	state Exp;
branches;
next	1.146;

1.146
date	2012.12.03.20.08.33;	author millert;	state Exp;
branches;
next	1.145;

1.145
date	2012.08.23.06.20.15;	author deraadt;	state Exp;
branches;
next	1.144;

1.144
date	2012.06.21.01.07.58;	author deraadt;	state Exp;
branches;
next	1.143;

1.143
date	2012.06.21.00.56.59;	author guenther;	state Exp;
branches;
next	1.142;

1.142
date	2012.06.06.16.58.02;	author matthew;	state Exp;
branches;
next	1.141;

1.141
date	2012.05.14.23.21.35;	author matthew;	state Exp;
branches;
next	1.140;

1.140
date	2012.04.12.11.39.29;	author jsg;	state Exp;
branches;
next	1.139;

1.139
date	2012.03.22.05.03.14;	author guenther;	state Exp;
branches;
next	1.138;

1.138
date	2012.01.17.02.34.18;	author guenther;	state Exp;
branches;
next	1.137;

1.137
date	2011.10.16.13.23.10;	author stsp;	state Exp;
branches;
next	1.136;

1.136
date	2011.07.18.17.29.49;	author matthew;	state Exp;
branches;
next	1.135;

1.135
date	2011.07.08.22.28.32;	author martynas;	state Exp;
branches;
next	1.134;

1.134
date	2011.07.08.19.21.41;	author martynas;	state Exp;
branches;
next	1.133;

1.133
date	2011.07.04.04.37.34;	author nicm;	state Exp;
branches;
next	1.132;

1.132
date	2011.05.28.15.16.46;	author espie;	state Exp;
branches;
next	1.131;

1.131
date	2011.04.28.17.38.46;	author stsp;	state Exp;
branches;
next	1.130;

1.130
date	2011.04.24.08.54.05;	author stsp;	state Exp;
branches;
next	1.129;

1.129
date	2011.04.24.07.46.58;	author stsp;	state Exp;
branches;
next	1.128;

1.128
date	2011.04.04.12.42.39;	author guenther;	state Exp;
branches;
next	1.127;

1.127
date	2010.10.28.15.02.41;	author millert;	state Exp;
branches;
next	1.126;

1.126
date	2010.09.24.13.58.39;	author millert;	state Exp;
branches;
next	1.125;

1.125
date	2010.07.08.20.25.40;	author kettenis;	state Exp;
branches;
next	1.124;

1.124
date	2010.07.03.04.44.50;	author guenther;	state Exp;
branches;
next	1.123;

1.123
date	2010.05.26.14.39.38;	author kettenis;	state Exp;
branches;
next	1.122;

1.122
date	2010.05.18.22.24.54;	author tedu;	state Exp;
branches;
next	1.121;

1.121
date	2010.01.15.08.35.47;	author sthen;	state Exp;
branches;
next	1.120;

1.120
date	2009.11.27.19.42.03;	author guenther;	state Exp;
branches;
next	1.119;

1.119
date	2009.10.28.16.09.22;	author jsg;	state Exp;
branches;
next	1.118;

1.118
date	2009.10.26.21.09.33;	author jasper;	state Exp;
branches;
next	1.117;

1.117
date	2009.09.27.18.21.00;	author miod;	state Exp;
branches;
next	1.116;

1.116
date	2009.06.03.16.10.12;	author deraadt;	state Exp;
branches;
next	1.115;

1.115
date	2009.01.13.18.19.49;	author kettenis;	state Exp;
branches;
next	1.114;

1.114
date	2008.12.09.19.52.33;	author martynas;	state Exp;
branches;
next	1.113;

1.113
date	2008.09.06.12.00.37;	author djm;	state Exp;
branches;
next	1.112;

1.112
date	2008.07.24.09.31.06;	author martynas;	state Exp;
branches;
next	1.111;

1.111
date	2008.06.24.14.30.03;	author deraadt;	state Exp;
branches;
next	1.110;

1.110
date	2008.06.13.21.18.42;	author otto;	state Exp;
branches;
next	1.109;

1.109
date	2008.05.19.19.36.45;	author otto;	state Exp;
branches;
next	1.108;

1.108
date	2008.03.16.20.02.50;	author otto;	state Exp;
branches;
next	1.107;

1.107
date	2008.01.05.02.05.29;	author deraadt;	state Exp;
branches;
next	1.106;

1.106
date	2008.01.01.00.43.39;	author kurt;	state Exp;
branches;
next	1.105;

1.105
date	2007.09.03.14.41.32;	author millert;	state Exp;
branches;
next	1.104;

1.104
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.103;

1.103
date	2006.12.09.01.12.28;	author itojun;	state Exp;
branches;
next	1.102;

1.102
date	2006.11.10.17.29.58;	author grunk;	state Exp;
branches;
next	1.101;

1.101
date	2006.10.24.04.40.59;	author tedu;	state Exp;
branches;
next	1.100;

1.100
date	2006.10.10.14.13.32;	author deraadt;	state Exp;
branches;
next	1.99;

1.99
date	2006.08.04.21.35.51;	author beck;	state Exp;
branches;
next	1.98;

1.98
date	2006.06.14.19.55.24;	author otto;	state Exp;
branches;
next	1.97;

1.97
date	2006.05.27.16.14.01;	author pedro;	state Exp;
branches;
next	1.96;

1.96
date	2006.01.13.17.58.34;	author millert;	state Exp;
branches;
next	1.95;

1.95
date	2005.11.16.16.48.15;	author espie;	state Exp;
branches;
next	1.94;

1.94
date	2005.10.29.10.05.12;	author espie;	state Exp;
branches;
next	1.93;

1.93
date	2005.08.08.05.53.00;	author espie;	state Exp;
branches;
next	1.92;

1.92
date	2005.07.01.08.59.27;	author espie;	state Exp;
branches;
next	1.91;

1.91
date	2005.06.17.20.40.32;	author espie;	state Exp;
branches;
next	1.90;

1.90
date	2005.05.11.18.44.12;	author espie;	state Exp;
branches;
next	1.89;

1.89
date	2005.04.30.09.25.17;	author espie;	state Exp;
branches;
next	1.88;

1.88
date	2005.04.30.09.14.23;	author espie;	state Exp;
branches;
next	1.87;

1.87
date	2005.04.14.20.59.10;	author espie;	state Exp;
branches;
next	1.86;

1.86
date	2005.03.30.02.59.03;	author tedu;	state Exp;
branches;
next	1.85;

1.85
date	2004.10.17.20.25.39;	author millert;	state Exp;
branches;
next	1.84;

1.84
date	2004.08.11.19.14.56;	author drahn;	state Exp;
branches;
next	1.83;

1.83
date	2004.07.13.21.03.35;	author marc;	state Exp;
branches;
next	1.82;

1.82
date	2004.06.24.20.21.12;	author marc;	state Exp;
branches;
next	1.81;

1.81
date	2004.06.24.16.14.40;	author deraadt;	state Exp;
branches;
next	1.80;

1.80
date	2004.06.07.21.11.23;	author marc;	state Exp;
branches;
next	1.79;

1.79
date	2004.05.03.17.42.11;	author millert;	state Exp;
branches;
next	1.78;

1.78
date	2004.01.12.18.27.28;	author tedu;	state Exp;
branches;
next	1.77;

1.77
date	2003.07.21.20.30.46;	author millert;	state Exp;
branches;
next	1.76;

1.76
date	2003.05.08.23.35.45;	author millert;	state Exp;
branches;
next	1.75;

1.75
date	2003.04.14.04.53.50;	author art;	state Exp;
branches;
next	1.74;

1.74
date	2003.01.20.18.28.46;	author marc;	state Exp;
branches;
next	1.73;

1.73
date	2002.12.03.06.39.38;	author millert;	state Exp;
branches;
next	1.72;

1.72
date	2002.12.02.09.00.13;	author miod;	state Exp;
branches;
next	1.71;

1.71
date	2002.11.21.20.45.05;	author marc;	state Exp;
branches;
next	1.70;

1.70
date	2002.10.30.20.16.50;	author millert;	state Exp;
branches;
next	1.69;

1.69
date	2002.10.16.16.10.24;	author millert;	state Exp;
branches;
next	1.68;

1.68
date	2002.06.28.01.44.53;	author millert;	state Exp;
branches;
next	1.67;

1.67
date	2002.06.10.14.59.01;	author espie;	state Exp;
branches;
next	1.66;

1.66
date	2002.04.19.15.48.34;	author deraadt;	state Exp;
branches;
next	1.65;

1.65
date	2002.04.17.16.00.34;	author espie;	state Exp;
branches;
next	1.64;

1.64
date	2002.02.23.18.29.20;	author drahn;	state Exp;
branches;
next	1.63;

1.63
date	2001.10.30.17.01.07;	author tdeval;	state Exp;
branches;
next	1.62;

1.62
date	2001.10.24.08.16.42;	author jjbg;	state Exp;
branches;
next	1.61;

1.61
date	2001.10.01.20.36.17;	author markus;	state Exp;
branches;
next	1.60;

1.60
date	2001.08.06.20.21.07;	author jakob;	state Exp;
branches;
next	1.59;

1.59
date	2001.08.06.14.40.47;	author jakob;	state Exp;
branches;
next	1.58;

1.58
date	2001.06.26.19.59.16;	author dugsong;	state Exp;
branches;
next	1.57;

1.57
date	2001.06.18.18.11.14;	author millert;	state Exp;
branches;
next	1.56;

1.56
date	2001.05.15.21.14.39;	author millert;	state Exp;
branches;
next	1.55;

1.55
date	2001.03.09.15.13.48;	author art;	state Exp;
branches;
next	1.54;

1.54
date	2001.03.02.13.27.06;	author espie;	state Exp;
branches;
next	1.53;

1.53
date	2001.01.31.17.42.25;	author deraadt;	state Exp;
branches;
next	1.52;

1.52
date	2000.11.21.00.51.46;	author millert;	state Exp;
branches;
next	1.51;

1.51
date	2000.11.16.20.29.55;	author provos;	state Exp;
branches;
next	1.50;

1.50
date	2000.08.20.18.37.20;	author millert;	state Exp;
branches;
next	1.49;

1.49
date	2000.07.19.19.26.05;	author mickey;	state Exp;
branches;
next	1.48;

1.48
date	2000.05.01.23.13.14;	author deraadt;	state Exp;
branches;
next	1.47;

1.47
date	2000.04.20.07.08.58;	author deraadt;	state Exp;
branches;
next	1.46;

1.46
date	2000.04.03.23.23.49;	author millert;	state Exp;
branches;
next	1.45;

1.45
date	2000.02.21.22.19.04;	author millert;	state Exp;
branches;
next	1.44;

1.44
date	2000.02.07.05.00.21;	author assar;	state Exp;
branches;
next	1.43;

1.43
date	2000.01.06.15.20.55;	author d;	state Exp;
branches;
next	1.42;

1.42
date	99.12.11.08.09.10;	author itojun;	state Exp;
branches;
next	1.41;

1.41
date	99.11.09.15.32.14;	author art;	state Exp;
branches;
next	1.40;

1.40
date	99.06.29.19.39.34;	author deraadt;	state Exp;
branches;
next	1.39;

1.39
date	99.06.07.07.17.49;	author deraadt;	state Exp;
branches;
next	1.38;

1.38
date	99.05.31.17.34.41;	author millert;	state Exp;
branches;
next	1.37;

1.37
date	99.05.22.21.27.21;	author weingart;	state Exp;
branches;
next	1.36;

1.36
date	99.02.26.00.53.59;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	98.11.20.15.51.04;	author deraadt;	state Exp;
branches;
next	1.34;

1.34
date	98.11.15.19.23.36;	author deraadt;	state Exp;
branches;
next	1.33;

1.33
date	98.09.18.00.49.51;	author art;	state Exp;
branches;
next	1.32;

1.32
date	98.08.10.18.42.21;	author provos;	state Exp;
branches;
next	1.31;

1.31
date	98.07.21.22.25.51;	author provos;	state Exp;
branches;
next	1.30;

1.30
date	98.07.01.01.33.18;	author millert;	state Exp;
branches;
next	1.29;

1.29
date	98.06.15.22.26.09;	author niklas;	state Exp;
branches;
next	1.28;

1.28
date	98.03.23.12.49.31;	author janjaap;	state Exp;
branches;
next	1.27;

1.27
date	98.02.04.22.22.41;	author deraadt;	state Exp;
branches;
next	1.26;

1.26
date	98.01.11.19.32.07;	author weingart;	state Exp;
branches;
next	1.25;

1.25
date	97.12.22.10.13.52;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	97.11.29.19.54.52;	author millert;	state Exp;
branches;
next	1.23;

1.23
date	97.11.13.07.13.28;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	97.09.01.18.40.28;	author millert;	state Exp;
branches;
next	1.21;

1.21
date	97.09.01.02.44.18;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	97.08.17.21.31.18;	author millert;	state Exp;
branches;
next	1.19;

1.19
date	97.07.27.09.37.29;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	97.07.17.05.44.03;	author millert;	state Exp;
branches;
next	1.17;

1.17
date	97.07.10.22.52.59;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	97.07.01.20.12.44;	author provos;	state Exp;
branches;
next	1.15;

1.15
date	97.06.20.15.34.05;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	97.06.03.07.16.19;	author downsj;	state Exp;
branches;
next	1.13;

1.13
date	97.04.20.20.56.17;	author tholo;	state Exp;
branches;
next	1.12;

1.12
date	97.04.14.11.24.56;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	97.03.13.19.07.19;	author downsj;	state Exp;
branches;
next	1.10;

1.10
date	97.02.15.10.56.30;	author deraadt;	state Exp;
branches;
next	1.9;

1.9
date	97.02.02.23.28.40;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	97.01.26.05.10.30;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.12.28.19.07.21;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.10.18.17.17.18;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.08.27.10.07.25;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.06.03.22.20.32;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	96.05.01.12.27.21;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.02.24.19.50.59;	author dm;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.20;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.20;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.189
log
@monir bump for freezero
@
text
@major=89
minor=4
# note: If changes were made to include/thread_private.h or if system
# calls were added/changed then librthread/shlib_version also be updated.
@


1.188
log
@recallocarray bump
@
text
@d2 1
a2 1
minor=3
@


1.187
log
@Add an interface to find the ARM.exidx table for use by the ARM EHABI unwinder.
Makes exceptions work in C++ code work again om armv7.

ok guenther@@
@
text
@d2 1
a2 1
minor=2
@


1.186
log
@minor bump for SHA512/256 API additions; ok tedu@@ deraadt@@
@
text
@d2 1
a2 1
minor=1
@


1.185
log
@bump
@
text
@d2 1
a2 1
minor=0
@


1.184
log
@Major bump for the removal of the various locale, ruserok, and
longjmperror symbols
@
text
@d1 1
a1 1
major=88
@


1.183
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
major=87
@


1.182
log
@Major bump for getlogin*/ptrace changes
@
text
@d1 1
a1 1
major=86
@


1.181
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@d1 1
a1 1
major=85
@


1.180
log
@Rearrange C runtime bits: now that ld.so exports environ and __progname,
move their definitions and initialization in static links to libc.a
Make crt0 always invoke a new func _csu_finish() in libc to process the auxv
and to either register the ld.so cleanup function (in dynamic links) or
initialize environ and __progname and do MC_DISABLE_KBIND (in static links).
In libc, get pagesize from auxv; cache that between getpagesize() and
sysconf(_SC_PAGESIZE)

ok mpi@@ "good time" deraadt@@
@
text
@d1 2
a2 2
major=84
minor=3
@


1.179
log
@update for new symbols and code
@
text
@d2 1
a2 1
minor=2
@


1.178
log
@Split the intra-thread functionality from kill(2) into its own syscall
thrkill(2), rolling the kill(2) syscall number with the ABI change to
avoid breaking binaries during during the transition.  thrkill(2) includes
a 'tcb' argument that eliminates the need for locking in pthread_kill()
and simplifies pthread_cancel().  Switch __stack_smash_handler() to use
thrkill(2) and explicitly unblock SIGABRT.

Minor bump to both libc and libpthread: make sure you install a new kernel!

ok semarie@@
@
text
@d2 1
a2 1
minor=1
@


1.177
log
@crank libc major
@
text
@d2 1
a2 1
minor=0
@


1.176
log
@Major bump for symbol removals
@
text
@d1 1
a1 1
major=83
@


1.175
log
@Bump for symbol removals
@
text
@d1 1
a1 1
major=82
@


1.174
log
@Oh yeah, crank the major.  You talk about something and then your mind
wanders...
@
text
@d1 1
a1 1
major=81
@


1.173
log
@adding a syscall requires a minor bump; ok guenther@@
@
text
@d1 2
a2 2
major=80
minor=1
@


1.172
log
@Bump major after {,asr_}print_sockaddr() renaming.
@
text
@d2 1
a2 1
minor=0
@


1.171
log
@Make pthread_atfork() track the DSO that called it like atexit() does,
unregistering callbacks if the DSO is unloaded.  Move the callback
handling from libpthread to libc, though libpthread still overrides the
inner call to handle locking and thread-library reinitialization.
Major version bump for both libc and libpthread.

verification that this fixes various ports ajacoutot@@
asm assistance miod@@; ok millert@@ deraadt@@
@
text
@d1 1
a1 1
major=79
@


1.170
log
@Add fgetwln(3) from FreeBSD and bump libc minor revision.
@
text
@d1 2
a2 2
major=78
minor=1
@


1.169
log
@major++
@
text
@d2 1
a2 1
minor=0
@


1.168
log
@minor++
@
text
@d1 2
a2 2
major=77
minor=3
@


1.167
log
@bump minor after addition of \<word\> support to regcomp; ok miod@@
@
text
@d2 1
a2 1
minor=2
@


1.166
log
@Add additional kernel interfaces for setting close-on-exec on fds
when creating them: pipe2(), dup3(), accept4(), MSG_CMSG_CLOEXEC,
SOCK_CLOEXEC.  Includes SOCK_NONBLOCK support.

ok matthew@@
@
text
@d2 1
a2 1
minor=1
@


1.165
log
@crank major for syslog_r(3) using sendsyslog(2).  new kernel needed, too.
@
text
@d2 1
a2 1
minor=0
@


1.164
log
@crank major
@
text
@d1 1
a1 1
major=76
@


1.163
log
@move the ohash functions into libutil by popular demand.
It's not a standard interface, so it doesn't belong in libc.
I hate duplicating the code in client programs, so do beck@@, kettenis@@,
schwarze@@, millert@@, miod@@... and they agree with libutil.
@
text
@d1 1
a1 1
major=75
@


1.162
log
@minor++ because of AI_ADDRCONFIG

prodded by naddy, confirmed by Mark Kettenis
@
text
@d1 2
a2 2
major=74
minor=2
@


1.161
log
@crank minor
@
text
@d2 1
a2 1
minor=1
@


1.160
log
@major++ in preparation for coming changes
@
text
@d2 1
a2 1
minor=0
@


1.159
log
@minor++
@
text
@d1 2
a2 2
major=73
minor=1
@


1.158
log
@Move atexit(3) into crtbegin.c and certbeginS.c such that we can pass the
right __dso_handle and have dlopen'ed shared objects run their atexit handlers
when they get unloaded.  This is what Linux does, and several ports depend on
this behaviour (and will crash upon exit without this chang).

Based on an earlier diff from matthew@@
Tested by ajacoutot@@
ok deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.157
log
@crank libc for +tcgetsid -inet_nsap_addr -inet_nsap_ntoa -f_prealloc
ok millert
@
text
@d1 1
a1 1
major=72
@


1.156
log
@Remove arc4random_stir() and arc4random_addrandom(), which none should
be using directly.  Well, a few rare people cloned it upstream and it
will take a bit of time for them to learn.
ok various
@
text
@d1 1
a1 1
major=71
@


1.155
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@d1 1
a1 1
major=70
@


1.154
log
@major bump after asr symbols changes
@
text
@d1 1
a1 1
major=69
@


1.153
log
@Add support for the _POSIX_CPUTIME and _POSIX_THREAD_CPUTIME options,
including CLOCK_{PROCESS,THREAD}_CPUTIME_ID constants and
{clock,pthread}_getcpuclockid() functions.

Worked out at t2k13 with help from tedu@@ and matthew@@ and testing by aja@@
ok matthew@@
@
text
@d1 2
a2 2
major=68
minor=4
@


1.152
log
@Add getprogname() and setprogname() to ease slackers^porters' work.
Man page adapted from FreeBSD and NetBSD.

Bump libc minor now (there will be more upcoming changes).

input from tedu@@
get it in deraadt@@
@
text
@d2 1
a2 1
minor=3
@


1.151
log
@Add an implementation of memmem() -- from FreeBSD with some tweaks.
Requires a libc minor bump, committing now so that we have up-to-date
snapshots for the upcoming hackathon.

joint work with millert@@
man page bits ok jmc@@
input and ok millert@@, guenther@@, deraadt@@
@
text
@d2 1
a2 1
minor=2
@


1.150
log
@Extend P_SIGSUSPEND handling in userret() to properly restore the
sigmask even if there are no pending signals under the temporary
sigmask.

Refactor existing select() and poll() system calls to introduce the
pselect() and ppoll() system calls.

Add rthread wrappers for pselect() and ppoll().  While there, update
cancellation point comments to reflect recent fdatasync() addition.

Minor bumps for libc and librthread due to new symbols.

ok guenther, millert, deraadt, jmc
@
text
@d2 1
a2 1
minor=1
@


1.149
log
@Crank due to statfs changes and other inbound commits.
@
text
@d2 1
a2 1
minor=0
@


1.148
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
major=67
@


1.147
log
@Add support for POSIX.1-2008 functions dprintf(3) and vdprintf(3).

Feedback from millert@@ guenther@@
OK guenther@@ man page bits OK jmc@@
@
text
@d1 2
a2 2
major=66
minor=2
@


1.146
log
@Simple emulation of POSIX pty APIs posix_openpt(), ptsname(),
grantpt() and unlockpt() using /dev/ptm.  Man pages from FreeBSD.
OK kettenis@@ deraadt@@ beck@@ ajacoutot@@ naddy@@
@
text
@d2 1
a2 1
minor=1
@


1.145
log
@crank due to nnpfspioctl() syscall stub removal
@
text
@d2 1
a2 1
minor=0
@


1.144
log
@For now... libpthread is just a container directory, since all the new
goop is in librthread.  As a result, the top-level Makefile and
shlib_version here are simply very confusing and tell lies.  Remove
them, and update the instructions in libc to not make my mistake
again.
ok guenther
@
text
@d1 1
a1 1
major=65
@


1.143
log
@__tfork() needs to set the stack address of the new thread in the kernel,
so that it can't get a signal while still running on the parent thread's
stack.  Also, pass in sizeof(struct __tfork) to provide forward compat
when more members are added.  This is an ABI change, so switch syscall
numbers and bump lib majors this time.

ok deraadt@@ matthew@@
@
text
@d4 1
a4 1
# calls were added/changed then libpthread must also be updated.
@


1.142
log
@Add support for mbsnrtowcs() and wcsnrtombs() to libc.

Bulk build test by naddy.
@
text
@d1 2
a2 2
major=64
minor=2
@


1.141
log
@More sysconf(3)-y and pathconf(3)-y goodness from Brad.
ok guenther, millert (and me); bulk build test by naddy
@
text
@d2 1
a2 1
minor=1
@


1.140
log
@crank major for sh gcc4 switch
@
text
@d2 1
a2 1
minor=0
@


1.139
log
@bump majors on libc and rthreads for the additions to libc and transfer
of __tfork_thread from rthreads to libc
@
text
@d1 1
a1 1
major=63
@


1.138
log
@Reimplement mutexes, condvars, and rwlocks to eliminate bugs,
particularly the "consume the signal you just sent" hang, and putting
the wait queues in userspace.

Do cancellation handling in pthread_cond_*wait(), pthread_join(),
and sem_wait().

Add __ prefix to thr{sleep,wakeup,exit,sigdivert}() syscalls; add
'abort" argument to thrsleep to close cancellation race; make
thr{sleep,wakeup} return errno values via *retval to avoid touching
userspace errno.
@
text
@d1 1
a1 1
major=62
@


1.137
log
@Bump libc major; wscanf and wcsftime were added
@
text
@d1 1
a1 1
major=61
@


1.136
log
@Expose a bunch of new functionality from POSIX 2008: openat(2),
fchmodat(2), fstatat(2), mkdirat(2), mkfifoat(2), mknodat(2),
faccessat(2), fchownat(2), linkat(2), readlinkat(2), renameat(2),
symlinkat(2), unlinkat(2), utimensat(2), futimens(2), and
fdopendir(3).

"Minor" libc bump.

Tested in a bulk build by naddy@@
Much help from guenther@@, thib@@, tedu@@, oga@@, and others.
ok deraadt@@, naddy@@
@
text
@d1 2
a2 2
major=60
minor=1
@


1.135
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@d2 1
a2 1
minor=0
@


1.134
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@d1 1
a1 1
major=59
@


1.133
log
@Add wcsdup(), from NetBSD.

ok deraadt matthew
@
text
@d1 2
a2 2
major=58
minor=4
@


1.132
log
@wcs(n)casecmp support, manpage comments from jmc@@, okay deraadt@@
@
text
@d2 1
a2 1
minor=3
@


1.131
log
@Bring back wprintf. We've sorted out what to do for gcc2 and gcc3.
"Yes, go ahead then" deraadt
@
text
@d2 1
a2 1
minor=2
@


1.130
log
@Back out wprintf until we've determined what to do for gcc2 and gcc3 arches.
@
text
@d2 1
a2 1
minor=1
@


1.129
log
@Add fwprintf, swprintf, vfwprintf, vswprintf, vwprintf, and wprintf to libc.
Based on our vfprintf etc. implementations. Wide character parts based on
NetBSD but with lots of macros expanded. Minor bump for libc.
ok kettenis espie
@
text
@d2 1
a2 1
minor=2
@


1.128
log
@Move __cerror to ___cerror with a weak alias so that rthreads can override it.
On mips64, also correct the name called from plain cerror to __cerror.

"looks correct" miod@@
@
text
@d2 1
a2 1
minor=1
@


1.127
log
@Change basep parameter of getdirentries() to be off_t *, not long *
so it works correctly with large offsets (and matches other systems).
This requires adding a new getdirentries syscall, with the old one
renamed to ogetdirentries.  All in-tree consumers of getdirentries()
have been updated.  Bump libc and libpthread major numbers.
OK and with deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.126
log
@Bump libc major for ABI changes.
@
text
@d1 1
a1 1
major=57
@


1.125
log
@Switch hppa, i386 and powerpc to gcc4.  Bump libc major to handle ABI corner
cases fixed in gcc4.
@
text
@d1 1
a1 1
major=56
@


1.124
log
@Fix the naming of interfaces and variables for rdomains and rtables
and make it possible to bind sockets (including listening sockets!)
to rtables and not just rdomains.  This changes the name of the
system calls, socket option, and ioctl.  After building with this
you should remove the files /usr/share/man/cat2/[gs]etrdomain.0.

Since this removes the existing [gs]etrdomain() system calls, the
libc major is bumped.

Written by claudio@@, criticized^Wcritiqued by me
@
text
@d1 1
a1 1
major=55
@


1.123
log
@Switch amd64 and sparc64 over to gcc4; bump libc major to deal with the ABI
corner cases that were fixed in gcc4, and changes in libgcc that we may have
missed.

ok kettenis@@
@
text
@d1 1
a1 1
major=54
@


1.122
log
@add posix_madvise, posix_memalign, strndup, and strnlen.  mostly from
brad and millert, with hints from guenther, jmc, and otto I think.
ok previous.
@
text
@d1 2
a2 2
major=53
minor=2
@


1.121
log
@Add support to sysconf(3) for the variables _SC_NPROCESSORS_CONF and
_SC_NPROCESSORS_ONLN, implemented by AIX/Tru64/Solaris/Linux/SCO/FreeBSD/NetBSD.
Bump libc minor.

From Brad, ok deraadt@@ guenther@@
@
text
@d2 1
a2 1
minor=1
@


1.120
log
@Bump the libc major for the post-h2k9 string of ABI changes and additions
(rthreads, MB_LEN_MAX, rdomains)
@
text
@d2 1
a2 1
minor=0
@


1.119
log
@more fallout from jasper's commit.

Changing the size of the _sys_errlist array changes a libc interface
so we need to crank major.

kettenis@@ agrees
@
text
@d1 1
a1 1
major=52
@


1.118
log
@add ENOTSUP and bump libc minor

discussed with a few
ok deraadt@@
@
text
@d1 2
a2 2
major=51
minor=2
@


1.117
log
@Minor bump for safety, due to the mips cachectl() addition.
@
text
@d2 1
a2 1
minor=1
@


1.116
log
@crank libc major
@
text
@d2 1
a2 1
minor=0
@


1.115
log
@Crank minor because of addition of wcsto* functions.
@
text
@d1 2
a2 2
major=50
minor=1
@


1.114
log
@- add long double signbit
- make long double versions weak aliases to double versions,
on archs where long doubles are 64 bits
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- bump major
ok millert@@
@
text
@d2 1
a2 1
minor=0
@


1.113
log
@crank for sha2 changes
@
text
@d1 1
a1 1
major=49
@


1.112
log
@- move isinf, isnan dups to gen, since most is ieee 754
- is{inf,nan} should be macros for real-floating, so rename to
__is{inf,nan}, per C99
- implement C99 __fpclassify(), __fpclassifyf(), __isfinite(),
__isfinitef(), __isnormal(), __isnormalf(), __signbit(), __signbitf()
- long functions added, but not yet enabled, till ieee.h is fixed
- implement vax equivalents of the functions
- reimplement isinff, isnanf in a better way, and move to libc
- add qnan bytes for all archs
- bump major
man pages will follow
ok millert@@.  arm bits looked over by drahn@@
discussed w/ theo, who showed the right direction, to put these
functions in libc
@
text
@d1 1
a1 1
major=48
@


1.111
log
@crank major because of two new interfaces
@
text
@d1 1
a1 1
major=47
@


1.110
log
@remove _MALLOC_LOCK_INIT; major bump; ok deraadt@@
@
text
@d1 1
a1 1
major=46
@


1.109
log
@bump (recalloc removal)
@
text
@d1 1
a1 1
major=45
@


1.108
log
@bump
@
text
@d1 1
a1 1
major=44
@


1.107
log
@crank libc and libpthread, because libc cannot build lint libraries anymore if a syscall is OBSOL..
@
text
@d1 1
a1 1
major=43
@


1.106
log
@- make arc4random*() functions thread safe. Use a custom spinlock function
instead of the generic pthread macros since free(3) uses __arc4_getbyte()
when freeing small sized allocations and the generic pthread macros call
malloc(3).
- eliminate passing pointers to a static variable with global scope (rs)
for additional code clarity and reduction.
- shlib minor bumps for libc and libpthread due to new functions.
From andreas@@ with some bits from me. okay tedu@@ marc@@ w/some spot
checking from millert@@
@
text
@d1 2
a2 2
major=42
minor=1
@


1.105
log
@crank libc and libstdc++ majors
@
text
@d2 1
a2 1
minor=0
@


1.104
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@d1 1
a1 1
major=41
@


1.103
log
@switch IPv6 advanced API from RFC2292 to RFC3542 (2292 is superseded by 3542).
the kernel still handles RFC2292 set/getsockopts, so that compiled binary
has no trouble running.  userland sees RFC3542 symbols only on header file
so new code has to use RFC3542 API.

bump libc shlib minor for function additions.

tested on i386/amd64 by jmc, i386 by brad. checked by deraadt.
@
text
@d1 2
a2 2
major=40
minor=3
@


1.102
log
@bump minor, for void set_rpc_maxgrouplist(int);

ok deraadt@@
@
text
@d2 1
a2 1
minor=2
@


1.101
log
@add rthread syscalls and bump minor.
rthreads are hardly done, but if just trying it out is too much of a hassle,
we'll never make more progress.
ok brad marc marco mbalmer
@
text
@d2 1
a2 1
minor=1
@


1.100
log
@system call changes (the file says "changes", leaving it purposely
vague like that) REQUIRE a major crank.  Yet it was not done for
getcwd.  Now a lot of people are going to get screwed
@
text
@d2 1
a2 1
minor=0
@


1.99
log
@Add ENOMEDIUM and EMEDIUMTYPE to report medium errors to userland programs
when using removable media devices, along with changes to scsi_base to
detect such cases in tapes other devices. This makes tar, dd, and friends
report a semi useful error message instead of nonsense when there is nothing
in the device.

Includes libc minor bump, and will require the corresponding sets change.

ok krw@@ deraadt@@
@
text
@d1 2
a2 2
major=39
minor=3
@


1.98
log
@Introducing adjfreq(2), to adjust the clock frequency.
Loosely based on dragonfly code. Man page help fro jmc@@; ok deraadt@@
@
text
@d2 1
a2 1
minor=2
@


1.97
log
@Make libc's getcwd() use the new __getcwd() system call
Hacked by marius@@ at c2k5, okay miod@@ krw@@ deraadt@@
@
text
@d2 1
a2 1
minor=1
@


1.96
log
@Major version bump to deal with potential fallout from the types changes.
@
text
@d2 1
a2 1
minor=0
@


1.95
log
@CODESET support. okay millert@@, otto@@

(not really useful for now, it mostly helps some programs which want
to use it, it will become useful when we have full 16 bits locale).
@
text
@d1 2
a2 2
major=38
minor=4
@


1.94
log
@Activate missing wcswidth, as noted by Alexander Bluhm.
okay deraadt@@, otto@@
Minor bump (nobody stepped forward with other changes, so let's do this one)
@
text
@d2 1
a2 1
minor=3
@


1.93
log
@activate LC_CTYPE for 8 bits locale.
Make sure tolower/toupper use the whole 8 bits.

okay deraadt@@
thanks to everyone who tested
@
text
@d2 1
a2 1
minor=2
@


1.92
log
@Add a few missing functions so that wctype.h/wchar.h are more or less
uptodate, namely, wcsto(u)l(l) family, wcstod, stubs from wctrans/towctrans

crank minor.

okay millert@@, jmc@@.
@
text
@d2 1
a2 1
minor=1
@


1.91
log
@
next citrus step.

reviewed by millert, otto, kevlo, naddy, kettenis...
libc+libstdc++ bump
@
text
@d2 1
a2 1
minor=0
@


1.90
log
@major abi changes:

* introduce the mbstate_t typedef.
impacts gnu libiconv, which has already been taken care of.

* Prepare for mb stuff to really exist, replace macro MB_CUR_MAX with
an external variable __mb_cur_max (impacts libX11 and various ports).

* use mbstate in all the mb <-> wchar functions with state.
* add a stub iswctype function allowing some ports to compile.

bash and gdiff are missing wcscoll, and need to be told there's no i18n
until this is fixed.

Discussed and matthieu, otto, millert, kettenis, deraadt.

Major libc bump
@
text
@d1 1
a1 1
major=37
@


1.89
log
@Change internals of FILE: reuse the unget buffer field to access an
extended attribute data structure (pimpl idiom). Idea taken from citrus.
Much discussion with deraadt@@, otto@@, millert@@...

This is the least disruptive way to extend FILE, since its size can't really
change without this being a flag day. So the size doesn't change.

Actual additions to the structure will come in separate steps, since this
change is nasty enough on its own.

Tests by otto@@ and others, careful reading of code by otto@@ and millert@@.

This is definitely a major bump, and has been checked to not impact a
full ports build.
@
text
@d1 1
a1 1
major=36
@


1.88
log
@isw* classification functions from citrus, with a `stub' implementation
for the default locale.

comments, tests, okay: kettenis@@, otto@@, jmc@@

functions addition -> Minor bump.

There's a large bump coming in a separate commit.
@
text
@d1 2
a2 2
major=35
minor=2
@


1.87
log
@introduce some wchar functions (from citrus and an itojun@@ diff)
okay deraadt@@, cloder@@, pvalchev@@
thanks to everyone who commented on that.
@
text
@d2 1
a2 1
minor=1
@


1.86
log
@welcome libc35.0
@
text
@d2 1
a2 1
minor=0
@


1.85
log
@minor bump for new functions
@
text
@d1 2
a2 2
major=34
minor=2
@


1.84
log
@add dladdr() support and add some 'standard' dlsym() support.
ok millert miod pval, grumble deraadt
@
text
@d2 1
a2 1
minor=1
@


1.83
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d2 1
a2 1
minor=0
@


1.82
log
@change note as to when thread lib needs updating.  OK deraadt@@
@
text
@d1 1
a1 1
major=33
@


1.81
log
@hsearch API/ABI u_int -> size_t -> crank majors; ok millert
@
text
@d2 3
a4 1
minor=0 # note: remember to update minor in ../libpthread/shlib_version
@


1.80
log
@
major bump to libc and libpthread to break the dependency of a
particular implementation of libpthread for libc.  libc no longer
needs pthread.h to compile.
OK millert@@, brad@@, tedu@@
@
text
@d1 1
a1 1
major=32
@


1.79
log
@libc major number crank
@
text
@d1 1
a1 1
major=31
@


1.78
log
@new syscall closefrom(2).  ok deraadt millert
@
text
@d1 2
a2 2
major=30
minor=3 # note: remember to update minor in ../libpthread/shlib_version
@


1.77
log
@minor number bump due to added functions
@
text
@d2 1
a2 1
minor=1 # note: remember to update minor in ../libpthread/shlib_version
@


1.76
log
@Major number crank due to setr[ug]id() moving into libcompat.
@
text
@d2 1
a2 1
minor=0 # note: remember to update minor in ../libpthread/shlib_version
@


1.75
log
@There are two related changes.

The first one is an mquery(2) syscall. It's for asking the VM system
about where to map things. It will be used by ld.so, read the man page
for details.

The second change is related and is a centralization of uvm_map hint
that all callers of uvm_map calculated. This will allow us to adjust
this hint on architectures that have segments for non-exec mappings.

deraadt@@ drahn@@ ok.
@
text
@d1 2
a2 2
major=29
minor=1 # note: remember to update minor in ../libpthread/shlib_version
@


1.74
log
@
comment changed to look in libpthread, not libc_r
@
text
@d2 1
a2 1
minor=0 # note: remember to update minor in ../libpthread/shlib_version
@


1.73
log
@Crank all library major numbers.  Needed due to the fact that we
now build libraries with propolice enabled.  Without this, existing
binaries (such as ports/packages) that link with any system library
other than libc will fail with an undefined symbol of "___guard"
(__guard on ELF).
Pointed out by markus@@ and discussed with deraadt@@
@
text
@d2 1
a2 1
minor=0 # note: remember to update minor in ../libc_r/shlib_version
@


1.72
log
@Import propolice (http://www.trl.ibm.com/projects/security/ssp), a stack
attack protection scheme, into gcc.

This protection is enabled by default. It can be turned off by using the
-fno-stack-protector flag.

Code by Hiroaki Etoh (etoh at jp dot ibm dot com); work on openbsd-specific
integration by fgsch@@, deraadt@@ and myself; tests by fgsch@@, naddy@@ and
myself; beer drinking by myself.

Please note that system upgrades with this new code will require a new
libc and ld.so to be build and installed before the propolice-enabled
compiler can be installed.
@
text
@d1 2
a2 2
major=28
minor=9 # note: remember to update minor in ../libc_r/shlib_version
@


1.71
log
@
Add strerror_r and functions versions of getchar_unlocked and
putchar_unlocked.   Crank the minor on related libs.  OK fgs@@, deraadt@@
@
text
@d2 1
a2 1
minor=8 # note: remember to update minor in ../libc_r/shlib_version
@


1.70
log
@Minor bump for [gs]etres[ug]id(2)
@
text
@d2 1
a2 1
minor=7 # note: remember to update minor in ../libc_r/shlib_version
@


1.69
log
@Implement isfdtype(3) as per the POSIX.1g draft; requested by David Hill
@
text
@d2 1
a2 1
minor=6 # note: remember to update minor in ../libc_r/shlib_version
@


1.68
log
@minor bump for readpassphrase() flag addition
@
text
@d2 1
a2 1
minor=5 # note: remember to update minor in ../libc_r/shlib_version
@


1.67
log
@put back in the assert changes for ISO C 99 (put __func__ in it)
@
text
@d2 1
a2 1
minor=4 # note: remember to update minor in ../libc_r/shlib_version
@


1.66
log
@avoid cranking libc minors for another few weeks
@
text
@d2 1
a2 1
minor=3 # note: remember to update minor in ../libc_r/shlib_version
@


1.65
log
@Use __func__ in assert.
ok millert@@
@
text
@d2 1
a2 1
minor=4 # note: remember to update minor in ../libc_r/shlib_version
@


1.64
log
@bump minor, EA support was added to libc.
@
text
@d2 1
a2 1
minor=3 # note: remember to update minor in ../libc_r/shlib_version
@


1.63
log
@mprotect allocations sized at 0 bytes.  This will cause a fault for access
to such, permitting them to be discovered, instead of exploited as the ssh
crc insertion detector was.  Idea by theo, written by tdeval.
@
text
@d2 1
a2 1
minor=2 # note: remember to update minor in ../libc_r/shlib_version
@


1.62
log
@syslog_r() implementation. deraadt@@ ok.
@
text
@d2 1
a2 1
minor=1 # note: remember to update minor in ../libc_r/shlib_version
@


1.61
log
@new rmd160 implementation.  based on
ftp://ftp.rsasecurity.com/pub/cryptobytes/crypto3n2.pdf, ok deraadt@@
@
text
@d2 1
a2 1
minor=0 # note: remember to update minor in ../libc_r/shlib_version
@


1.60
log
@add note about updating minor in libc_r/shlib_version; deraadt@@
@
text
@d1 2
a2 2
major=27
minor=3 # note: remember to update minor in ../libc_r/shlib_version
@


1.59
log
@add getrrsetbyname(3) - API to retrieve arbitrary DNS records
@
text
@d2 1
a2 1
minor=3
@


1.58
log
@crank minor number, for new getpeereid() syscall
@
text
@d2 1
a2 1
minor=2
@


1.57
log
@Add new cgetusedb() function to toggle reading of .db files in getcap(3).
Needed for cap_mkdb to really DRT when given several input files or
an output file with a different name from the input file.
cvs: ----------------------------------------------------------------------
@
text
@d2 1
a2 1
minor=1
@


1.56
log
@Make path length variables size_t.  This fixes the problem where
things like rm can't remove files with ridiculously long path names
that were created by some script kiddie trying in vain to exploit
something.  Previously, the length was effectively constrained to
USHRT_MAX due to one of the internal structs.  Also, nuke FTS_CHDIRROOT
since it never worked correctly and hasn't been documented for a
long time.
@
text
@d2 1
a2 1
minor=0
@


1.55
log
@Add mlockall and munlockall. man-page from NetBSD.
@
text
@d1 2
a2 2
major=26
minor=2
@


1.54
log
@Add ohash_* functions to libc.
Ok'd deraadt@@, millert@@
@
text
@d2 1
a2 1
minor=1
@


1.53
log
@move utmp to large format, usernames to 32 chars; downsj
@
text
@d2 1
a2 1
minor=0
@


1.52
log
@crank minor number
@
text
@d1 2
a2 2
major=25
minor=4
@


1.51
log
@kqueue and kevent system calls
@
text
@d2 1
a2 1
minor=3
@


1.50
log
@login.conf code from BSDi.  This does not include the bsd auth code
which will come later.  At this stage it is primarily used for setting
resource limits.
@
text
@d2 1
a2 1
minor=2
@


1.49
log
@from freebsd:
strtofflags/fflagstostr to convert file flags
to/from binary from/into a string as used in chflags(1).

use u_int32_t instead of u_long (as freebsd does).
increase libc minor.
millert@@ ok.
@
text
@d2 1
a2 1
minor=1
@


1.48
log
@bye bye semconfig(2)
@
text
@d2 1
a2 1
minor=0
@


1.47
log
@bump because of p{read,write}{,v}
@
text
@d1 2
a2 2
major=24
minor=5
@


1.46
log
@Add srandomdev() from FreeBSD for use by sendmail and others.
@
text
@d2 1
a2 1
minor=4
@


1.45
log
@Increment the minor number for fseeko()/ftello() addition.
@
text
@d2 1
a2 1
minor=2
@


1.44
log
@bump minor (fhopen, fhstat, fhstatfs added)
@
text
@d2 1
a2 1
minor=1
@


1.43
log
@happy with non-weak testing. bump major versions just in case.
@
text
@d2 1
a2 1
minor=0
@


1.42
log
@add inet6_option_* and inet6_rthdr_*.
increase shlib minor.
@
text
@d1 2
a2 2
major=23
minor=3
@


1.41
log
@Bump minor for addition of strtok_r.
@
text
@d2 1
a2 1
minor=2
@


1.40
log
@temporary crank
@
text
@d2 1
a2 1
minor=1
@


1.39
log
@replacement pipe() system call; copies data into place inside kernel, so
that EFAULT return value is possible
@
text
@d2 1
a2 2
minor=0

@


1.38
log
@New struct statfs with mount options.  NOTE: this replaces statfs(2),
fstatfs(2), and getfsstat(2) so you will need to build a new kernel
before doing a "make build" or you will get "unimplemented syscall" errors.

The new struct statfs has the following featuires:
o Has a u_int32_t flags field--now softdep can have a real flag.

o Uses u_int32_t instead of longs (nicer on the alpha).  Note: the man
page used to lie about setting invalid/unused fields to -1.  SunOS does
that but our code never has.

o Gets rid of f_type completely.  It hasn't been used since NetBSD 0.9
and having it there but always 0 is confusing.  It is conceivable
that this may cause some old code to not compile but that is better
than silently breaking.

o Adds a mount_info union that contains the FSTYPE_args struct.  This
means that "mount" can now tell you all the options a filesystem was
mounted with.  This is especially nice for NFS.

Other changes:
o The linux statfs emulation didn't convert between BSD fs names
  and linux f_type numbers.  Now it does, since the BSD f_type
  number is useless to linux apps (and has been removed anyway)

o FreeBSD's struct statfs is different from our (both old and new)
and thus needs conversion.  Previously, the OpenBSD syscalls
were used without any real translation.

o mount(8) will now show extra info when invoked with no arguments.
However, to see *everything* you need to use the -v (verbose) flag.
@
text
@d1 1
a1 1
major=22
d3 1
@


1.37
log
@Add swapctl(2), and crank shlib minor.
@
text
@d1 2
a2 2
major=21
minor=2
@


1.36
log
@skipjack in libc; isakmpd and such will want it
@
text
@d2 1
a2 1
minor=1
@


1.35
log
@crank major, just in case
@
text
@d2 1
a2 1
minor=0
@


1.34
log
@ftok requires minor crank
@
text
@d1 2
a2 2
major=20
minor=4
@


1.33
log
@bump minor for xfspioctl
@
text
@d2 1
a2 1
minor=3
@


1.32
log
@crank minor
@
text
@d2 1
a2 1
minor=2
@


1.31
log
@crank minor because of cast
@
text
@d2 1
a2 1
minor=1
@


1.30
log
@crank major version since we have added new interfaces
@
text
@d2 1
a2 1
minor=0
@


1.29
log
@recent IPC API changes requires this
@
text
@d1 1
a1 1
major=19
@


1.28
log
@teach rmd160 not to throw leftovers out the window
@
text
@d1 1
a1 1
major=18
@


1.27
log
@+ strptime, from netbsd
@
text
@d1 2
a2 2
major=17
minor=8
@


1.26
log
@Add gethostent(), as some LEGACY code wants it.  If you write new
code, PLEASE don't use this.  Currently only iterates through the
local /etc/hosts file.
@
text
@d2 1
a2 1
minor=7
@


1.25
log
@add XPG4.2 lockf; kleink
@
text
@d2 1
a2 1
minor=6
@


1.24
log
@Implement asprintf(3) and vasprintf(3) functions similar to the
ones in the glibc.  Some man pages changes from FreeBSD
(asprintf.c/vasprintf.c are not based on GNU or FreeBSD code).
@
text
@d2 1
a2 1
minor=5
@


1.23
log
@added getsid()
@
text
@d2 1
a2 1
minor=4
@


1.22
log
@Make glob(3) XPG4.2 compliant.  This means changing GLOB_ABEND to
GLOB_ABORT and defining GLOB_NOMATCH and GLOB_NOSYS (the latter is
not used).
@
text
@d2 1
a2 1
minor=3
@


1.21
log
@Fix problem with ``find -execdir'' not having the correct initial cwd.
Adds a new flag to fts(3).
@
text
@d2 1
a2 1
minor=2
@


1.20
log
@basename(3) and dirname(3) as specified by XPG4 and XPG4.2
@
text
@d2 1
a2 1
minor=1
@


1.19
log
@crank major, due to the arc libc messup
@
text
@d2 1
a2 1
minor=0
@


1.18
log
@Bump minor version due to RMD160 addition.
@
text
@d1 2
a2 2
major=16
minor=6
@


1.17
log
@Different sha1 functions (taken from netinet's if_sha1.c) that
are more consistent with md4/md5 functions.
@
text
@d2 1
a2 1
minor=5
@


1.16
log
@fix that repeating passwords yield same hash + increment minor
@
text
@d2 1
a2 1
minor=4
@


1.15
log
@++minor since added a new function
@
text
@d2 1
a2 1
minor=3
@


1.14
log
@WE INCREMENT THE GOD DAMNED MINOR NUMBER WHEN WE ADD A SYSCALL, OK?
@
text
@d2 1
a2 1
minor=2
@


1.13
log
@New POSIX 1003.1b syscalls; from pk@@NetBSD
@
text
@d2 1
a2 1
minor=1
@


1.12
log
@incompatible change
@
text
@d2 1
a2 1
minor=0
@


1.11
log
@Integrate BIND 4.9.5 resolver and associated routines.

Includes the DNS aware getnetby*() routines and IPv6 support.
@
text
@d1 1
a1 1
major=15
@


1.10
log
@new blowfish crypt interfaces; crank it
@
text
@d1 1
a1 1
major=14
@


1.9
log
@++minor_version
@
text
@d1 2
a2 2
major=13
minor=3
@


1.8
log
@Add lchown(), increment minor number.
@
text
@d2 1
a2 1
minor=2
@


1.7
log
@crank minor due to arc4random
@
text
@d2 1
a2 1
minor=1
@


1.6
log
@tilt
@
text
@d2 1
a2 1
minor=0
@


1.5
log
@+issetugid
@
text
@d1 2
a2 2
major=12
minor=7
@


1.4
log
@Add md[245] routines in libc/md, remove md5 from libc/crypt.  Add $OpenBSD$
@
text
@d2 1
a2 1
minor=6
@


1.3
log
@bump minor because of futimes
@
text
@d2 1
a2 1
minor=5
@


1.2
log
@bumbed to 12.4 for bind
@
text
@d2 1
a2 1
minor=4
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
minor=3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
