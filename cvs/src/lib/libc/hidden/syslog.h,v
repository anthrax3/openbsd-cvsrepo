head	1.4;
access;
symbols
	OPENBSD_6_0:1.4.0.2
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3;
locks; strict;
comment	@ * @;


1.4
date	2016.03.21.22.41.28;	author bluhm;	state Exp;
branches;
next	1.3;
commitid	hneUpr7ZOJCeNeHP;

1.3
date	2015.11.25.00.01.21;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	C18rLGWf738HaMug;

1.2
date	2015.10.31.02.57.16;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	CLE0f1mZCJgLFjHQ;

1.1
date	2015.09.12.14.30.31;	author guenther;	state Exp;
branches;
next	;
commitid	bIIajb0CCbQhTK6C;


desc
@@


1.4
log
@Rename the system call sendsyslog2 to sendsyslog.  Keep the old one
as osendsyslog for a while.  The three argument variant is the only
one that will stay.
input kettenis@@;  OK deraadt@@
@
text
@/*	$OpenBSD: syslog.h,v 1.3 2015/11/25 00:01:21 deraadt Exp $	*/
/*
 * Copyright (c) 2015 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LIBC_SYSLOG_H_
#define	_LIBC_SYSLOG_H_

#include_next <syslog.h>

int	sendsyslog(const char *, __size_t, int);
PROTO_NORMAL(sendsyslog);

__BEGIN_HIDDEN_DECLS
void	__vsyslog_r(int, struct syslog_data *, int,
	    const char *, __va_list);
__END_HIDDEN_DECLS

PROTO_DEPRECATED(closelog);
PROTO_NORMAL(closelog_r);
PROTO_DEPRECATED(openlog);
PROTO_NORMAL(openlog_r);
PROTO_DEPRECATED(setlogmask);
PROTO_NORMAL(setlogmask_r);
PROTO_NORMAL(syslog);
PROTO_NORMAL(syslog_r);
PROTO_NORMAL(vsyslog);
PROTO_NORMAL(vsyslog_r);

#endif /* !_LIBC_SYSLOG_H_ */
@


1.3
log
@Add a syscall stub for sendsyslog2(2), and use it in syslog_r(3), passing
LOG_CONS to the kernel.  As a result, the /dev/console opening code can
be removed.
ok kettenis millert beck
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.2 2015/10/31 02:57:16 deraadt Exp $	*/
d23 1
a23 1
int	sendsyslog(const char *, __size_t);
a24 3

int	sendsyslog2(const char *, __size_t, int);
PROTO_NORMAL(sendsyslog2);
@


1.2
log
@Do not include a timestamp in the syslog message.  There is no need --
syslogd will fill it in immediately upon reception on the other side of
sendsyslog(2).  Our libc only talks to our syslogd, which will fix the
timestamp before forwarding.  syslog_r has done this for a long time
already.
ok tedu bluhm
@
text
@d1 1
a1 1
/*	$OpenBSD: syslog.h,v 1.1 2015/09/12 14:30:31 guenther Exp $	*/
d25 3
@


1.1
log
@Wrap <syslog.h> so that internal calls go direct and they're all weak symbols
Delete code that's a no-op now that we don't use sockets
Eliminate unnecessary #includes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d27 1
a27 1
void	__vsyslog_r(int, struct syslog_data *, __size_t (*)(char *, __size_t),
@

