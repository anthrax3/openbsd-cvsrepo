head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.9.0.2
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5;
locks; strict;
comment	@ * @;


1.10
date	2016.09.12.19.36.26;	author guenther;	state Exp;
branches;
next	1.9;
commitid	tBMJ0DH2mGez8vcV;

1.9
date	2016.05.23.00.12.58;	author guenther;	state Exp;
branches;
next	1.8;
commitid	kOxgTCFrqjs080tn;

1.8
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.7;
commitid	d9R7VGw9CHTkwXE1;

1.7
date	2016.03.30.07.52.47;	author guenther;	state Exp;
branches;
next	1.6;
commitid	rAfkqKGUk60crxhW;

1.6
date	2016.03.20.02.32.40;	author guenther;	state Exp;
branches;
next	1.5;
commitid	va8OhMk7nsI8YWCs;

1.5
date	2015.10.17.20.22.08;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	AINTpdaOrKiO3eR1;

1.4
date	2015.09.13.08.31.47;	author guenther;	state Exp;
branches;
next	1.3;
commitid	QZ177IcjQzeRxHAC;

1.3
date	2015.09.12.14.56.50;	author guenther;	state Exp;
branches;
next	1.2;
commitid	BXATo6E2rFBuIXKr;

1.2
date	2015.09.11.15.38.33;	author guenther;	state Exp;
branches;
next	1.1;
commitid	wdquiyf9r963BkuM;

1.1
date	2015.09.11.13.26.20;	author guenther;	state Exp;
branches;
next	;
commitid	BD9IK85aqntd1MJv;


desc
@@


1.10
log
@Don't declare select() in <unistd.h>

ok deraadt@@ millert@@
@
text
@/*	$OpenBSD: unistd.h,v 1.9 2016/05/23 00:12:58 guenther Exp $	*/
/*
 * Copyright (c) 2015 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LIBC_UNISTD_H_
#define	_LIBC_UNISTD_H_

#include_next <unistd.h>

__BEGIN_HIDDEN_DECLS
/* shared between getpagesize(), sysconf(), and _csu_finish() */
extern int	_pagesize;
__END_HIDDEN_DECLS

PROTO_NORMAL(__tfork_thread);
PROTO_NORMAL(_exit);
PROTO_NORMAL(access);
PROTO_NORMAL(acct);
PROTO_DEPRECATED(alarm);
PROTO_DEPRECATED(brk);
PROTO_NORMAL(chdir);
PROTO_NORMAL(chown);
PROTO_NORMAL(chroot);
PROTO_CANCEL(close);
PROTO_CANCEL(closefrom);
PROTO_DEPRECATED(confstr);
PROTO_NORMAL(crypt);
PROTO_NORMAL(crypt_checkpass);
PROTO_NORMAL(crypt_newhash);
PROTO_NORMAL(dup);
PROTO_NORMAL(dup2);
PROTO_NORMAL(dup3);
PROTO_DEPRECATED(endusershell);
PROTO_NORMAL(execl);
PROTO_DEPRECATED(execle);
PROTO_DEPRECATED(execlp);
PROTO_DEPRECATED(execv);
PROTO_NORMAL(execve);
PROTO_NORMAL(execvp);
PROTO_NORMAL(execvpe);
PROTO_NORMAL(faccessat);
PROTO_NORMAL(fchdir);
PROTO_NORMAL(fchown);
PROTO_NORMAL(fchownat);
/*PROTO_CANCEL(fdatasync);*/
PROTO_DEPRECATED(fflagstostr);
PROTO_WRAP(fork);
PROTO_NORMAL(fpathconf);
PROTO_CANCEL(fsync);
PROTO_NORMAL(ftruncate);
PROTO_NORMAL(getcwd);
PROTO_NORMAL(getdomainname);
PROTO_NORMAL(getdtablecount);
PROTO_DEPRECATED(getdtablesize);
PROTO_NORMAL(getegid);
PROTO_NORMAL(getentropy);
PROTO_NORMAL(geteuid);
PROTO_NORMAL(getgid);
PROTO_NORMAL(getgrouplist);
PROTO_NORMAL(getgroups);
PROTO_DEPRECATED(gethostid);
PROTO_NORMAL(gethostname);
PROTO_DEPRECATED(getlogin);
PROTO_NORMAL(getlogin_r);
PROTO_DEPRECATED(getmode);
PROTO_DEPRECATED(getopt);
PROTO_NORMAL(getpagesize);
PROTO_DEPRECATED(getpass);
PROTO_NORMAL(getpgid);
PROTO_NORMAL(getpgrp);
PROTO_NORMAL(getpid);
PROTO_NORMAL(getppid);
PROTO_NORMAL(getresgid);
PROTO_NORMAL(getresuid);
PROTO_NORMAL(getsid);
PROTO_NORMAL(getthrid);
PROTO_NORMAL(getuid);
PROTO_DEPRECATED(getusershell);
PROTO_DEPRECATED(getwd);
PROTO_NORMAL(initgroups);
PROTO_NORMAL(isatty);
PROTO_NORMAL(issetugid);
PROTO_NORMAL(lchown);
PROTO_NORMAL(link);
PROTO_NORMAL(linkat);
/*PROTO_CANCEL(lockf);*/
PROTO_NORMAL(lseek);
/*PROTO_DEPRECATED(mkdtemp);		use declaration from stdlib.h */
PROTO_NORMAL(mkstemp);
/*PROTO_DEPRECATED(mkstemps);		use declaration from stdlib.h */
/*PROTO_DEPRECATED(mktemp);		use declaration from stdlib.h */
PROTO_NORMAL(nfssvc);
PROTO_DEPRECATED(nice);
PROTO_NORMAL(pathconf);
/*PROTO_CANCEL(pause);*/
PROTO_NORMAL(pipe);
PROTO_NORMAL(pipe2);
PROTO_NORMAL(pledge);
PROTO_CANCEL(pread);
PROTO_NORMAL(profil);
PROTO_CANCEL(pwrite);
PROTO_NORMAL(quotactl);
PROTO_DEPRECATED(rcmd);
PROTO_NORMAL(rcmd_af);
PROTO_NORMAL(rcmdsh);
PROTO_CANCEL(read);
PROTO_NORMAL(readlink);
PROTO_NORMAL(readlinkat);
PROTO_NORMAL(reboot);
PROTO_NORMAL(revoke);
PROTO_NORMAL(rmdir);
PROTO_DEPRECATED(rresvport);
PROTO_NORMAL(rresvport_af);
PROTO_DEPRECATED(ruserok);
PROTO_DEPRECATED(sbrk);
PROTO_DEPRECATED(setdomainname);
PROTO_NORMAL(setegid);
PROTO_NORMAL(seteuid);
PROTO_NORMAL(setgid);
PROTO_NORMAL(setgroups);
PROTO_DEPRECATED(sethostid);
PROTO_DEPRECATED(sethostname);
PROTO_NORMAL(setlogin);
PROTO_DEPRECATED(setmode);
PROTO_NORMAL(setpgid);
PROTO_DEPRECATED(setpgrp);
PROTO_NORMAL(setregid);
PROTO_NORMAL(setresgid);
PROTO_NORMAL(setresuid);
PROTO_NORMAL(setreuid);
PROTO_NORMAL(setsid);
PROTO_NORMAL(setuid);
PROTO_DEPRECATED(setusershell);
/*PROTO_CANCEL(sleep);*/
PROTO_DEPRECATED(strtofflags);
PROTO_DEPRECATED(swab);
PROTO_NORMAL(swapctl);
PROTO_NORMAL(symlink);
PROTO_NORMAL(symlinkat);
PROTO_NORMAL(sync);
PROTO_NORMAL(syscall);
PROTO_NORMAL(sysconf);
PROTO_DEPRECATED(tcgetpgrp);
PROTO_DEPRECATED(tcsetpgrp);
PROTO_NORMAL(truncate);
PROTO_NORMAL(ttyname);
PROTO_NORMAL(ttyname_r);
PROTO_DEPRECATED(ualarm);
PROTO_NORMAL(unlink);
PROTO_NORMAL(unlinkat);
PROTO_DEPRECATED(usleep);
PROTO_WRAP(vfork);
PROTO_CANCEL(write);

#endif /* !_LIBC_UNISTD_H_ */
@


1.9
log
@Remove iruserok(_sa)? and __ivaliduser(sa)?

ok millert@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.8 2016/05/07 19:05:22 guenther Exp $	*/
a128 1
PROTO_CANCEL(select);
@


1.8
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.7 2016/03/30 07:52:47 guenther Exp $	*/
a93 2
PROTO_DEPRECATED(iruserok);
PROTO_NORMAL(iruserok_sa);
@


1.7
log
@Eliminate userspace caching by getlogin_r/setlogin; make the getlogin
syscall behave exactly like userspace getlogin_r() and rename it to
match.  Eliminate the reduced-to-no-op wrappers of the syscalls.
Eliminate the unnecessary per-thread static buffering by getlogin().

ok kettenis@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.6 2016/03/20 02:32:40 guenther Exp $	*/
d37 2
a38 2
/*PROTO_CANCEL(close);*/
/*PROTO_CANCEL(closefrom);*/
d60 1
a60 1
/*PROTO_WRAP(fork);*/
d62 1
a62 1
/*PROTO_CANCEL(fsync);*/
d64 1
a64 1
/*PROTO_BARE(getcwd);*/
d114 1
a114 1
/*PROTO_CANCEL(pread);*/
d116 1
a116 1
/*PROTO_CANCEL(pwrite);*/
d121 1
a121 1
/*PROTO_CANCEL(read);*/
d131 1
a131 1
/*PROTO_CANCEL(select);*/
d168 2
a169 2
/*PROTO_WRAP(vfork);*/
/*PROTO_CANCEL(write);*/
@


1.6
log
@Rearrange C runtime bits: now that ld.so exports environ and __progname,
move their definitions and initialization in static links to libc.a
Make crt0 always invoke a new func _csu_finish() in libc to process the auxv
and to either register the ld.so cleanup function (in dynamic links) or
initialize environ and __progname and do MC_DISABLE_KBIND (in static links).
In libc, get pagesize from auxv; cache that between getpagesize() and
sysconf(_SC_PAGESIZE)

ok mpi@@ "good time" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.5 2015/10/17 20:22:08 deraadt Exp $	*/
d76 1
a76 1
/*PROTO_BARE(getlogin);*/
d139 1
a139 1
/*PROTO_WRAP(setlogin);*/
@


1.5
log
@PROTO_NORMAL for pledge(); ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.4 2015/09/13 08:31:47 guenther Exp $	*/
d22 5
@


1.4
log
@Wrap <stdlib.h> so that calls go direct and the symbols not in the
C standard are all weak.
Apply __{BEGIN,END}_HIDDEN_DECLS to gdtoa{,imp}.h, hiding the
arch-specific __strtorx, __ULtox_D2A, __strtorQ, __ULtoQ_D2A symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.3 2015/09/12 14:56:50 guenther Exp $	*/
d108 1
@


1.3
log
@Wrap <unistd.h> so that internal calls go direct and they're all weak symbols
Delete unused 'fd' argument from internal function oldttyname()
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.2 2015/09/11 15:38:33 guenther Exp $	*/
d98 1
a98 1
PROTO_NORMAL(mkdtemp);
@


1.2
log
@Add PROTO_WRAP() for (almost) all the syscalls that libpthread doesn't
override so that internal calls go direct

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: unistd.h,v 1.1 2015/09/11 13:26:20 guenther Exp $	*/
d23 1
d27 1
d32 6
d41 5
d47 2
d53 3
d57 1
d59 2
d62 1
d67 1
d69 8
d86 6
d96 1
d98 4
d103 1
d105 1
d108 1
d110 1
d112 4
d121 3
d125 2
d131 4
d136 1
d143 4
d151 4
d156 3
d161 3
@


1.1
log
@Use PROTO_NORMAL() on __syscall to go direct, adjusting the declaration
to eliminate some casts.
Retire some uses of old-style STUB* macros where superseded by namespace.h bits

tweaks and ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 16
d40 19
d60 27
d88 2
@

