head	1.14;
access;
symbols
	OPENBSD_6_1_BASE:1.14
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10;
locks; strict;
comment	@ * @;


1.14
date	2016.09.26.05.57.58;	author guenther;	state Exp;
branches;
next	1.13;
commitid	Q9cL1s4uS2nNPKL1;

1.13
date	2016.09.06.19.56.36;	author guenther;	state Exp;
branches;
next	1.12;
commitid	9RwtpEqb4OMZQeN7;

1.12
date	2016.05.09.23.55.52;	author guenther;	state Exp;
branches;
next	1.11;
commitid	ulYahYCAglSNcKb7;

1.11
date	2016.05.07.19.05.22;	author guenther;	state Exp;
branches;
next	1.10;
commitid	d9R7VGw9CHTkwXE1;

1.10
date	2015.11.10.04.30.59;	author guenther;	state Exp;
branches;
next	1.9;
commitid	GTAoVjpQRAdNHXVz;

1.9
date	2015.10.25.04.13.59;	author guenther;	state Exp;
branches;
next	1.8;
commitid	1HvmET9ZYKaNy8hJ;

1.8
date	2015.10.23.04.39.24;	author guenther;	state Exp;
branches;
next	1.7;
commitid	OrVNAJkzchWBNbO0;

1.7
date	2015.09.19.04.02.21;	author guenther;	state Exp;
branches;
next	1.6;
commitid	xONsWdI5wUyoKz4N;

1.6
date	2015.09.13.07.36.58;	author guenther;	state Exp;
branches;
next	1.5;
commitid	lKiiBbVqMp5OO6rf;

1.5
date	2015.09.12.16.46.12;	author guenther;	state Exp;
branches;
next	1.4;
commitid	hDxgxh2caUiqaPug;

1.4
date	2015.09.11.15.38.33;	author guenther;	state Exp;
branches;
next	1.3;
commitid	wdquiyf9r963BkuM;

1.3
date	2015.09.10.18.13.46;	author guenther;	state Exp;
branches;
next	1.2;
commitid	qU49tm8AgtP7HwZE;

1.2
date	2015.09.09.16.10.03;	author guenther;	state Exp;
branches;
next	1.1;
commitid	sb7T1f7W72EA4DVb;

1.1
date	2015.09.06.20.26.20;	author guenther;	state Exp;
branches;
next	;
commitid	uXV2vgeeQffL6Srn;


desc
@@


1.14
log
@sigsetmask() and sigblock() are no longer used by any setjmp implementation
so the internal hidden names are unused; switch to PROTO_DEPRECATED()
and drop the DEF_WEAK()s
@
text
@/*	$OpenBSD: signal.h,v 1.13 2016/09/06 19:56:36 guenther Exp $	*/
/*
 * Copyright (c) 2015 Philip Guenther <guenther@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LIBC_SIGNAL_H
#define _LIBC_SIGNAL_H

/* Rename __errno() before it's used in the inline functions in <signal.h> */
#include <errno.h>

/* sigh: predeclare and rename the functions which we'll declare inline */
#include <sys/signal.h>

__only_inline int	sigaddset(sigset_t *__set, int __signo);
__only_inline int	sigdelset(sigset_t *__set, int __signo);
__only_inline int	sigemptyset(sigset_t *__set);
__only_inline int	sigfillset(sigset_t *__set);
__only_inline int	sigismember(const sigset_t *__set, int __signo);
PROTO_NORMAL(sigaddset);
PROTO_NORMAL(sigdelset);
PROTO_NORMAL(sigemptyset);
PROTO_NORMAL(sigfillset);
PROTO_NORMAL(sigismember);

#include_next <signal.h>

__BEGIN_HIDDEN_DECLS
extern sigset_t __sigintr;
__END_HIDDEN_DECLS

#if 0
extern PROTO_NORMAL(sys_siglist);
extern PROTO_NORMAL(sys_signame);
#endif

/* prototyped for and used by the inline functions */
PROTO_NORMAL(__errno);

PROTO_DEPRECATED(bsd_signal);
PROTO_NORMAL(kill);             /* wrap to ban SIGTHR? */
PROTO_DEPRECATED(killpg);
PROTO_DEPRECATED(psignal);
PROTO_DEPRECATED(pthread_sigmask);
PROTO_NORMAL(raise);
PROTO_WRAP(sigaction);
PROTO_NORMAL(sigaltstack);
PROTO_DEPRECATED(sigblock);
PROTO_DEPRECATED(siginterrupt);
PROTO_STD_DEPRECATED(signal);
PROTO_DEPRECATED(sigpause);
PROTO_NORMAL(sigpending);
PROTO_WRAP(sigprocmask);
PROTO_DEPRECATED(sigsetmask);
PROTO_CANCEL(sigsuspend);
PROTO_DEPRECATED(sigvec);
PROTO_NORMAL(thrkill);

#endif	/* !_LIBC_SIGNAL_H */
@


1.13
log
@Make sure attributes are applied to function declarations before they're
used or defined, as clang isn't as forgiving as gcc.  Also, declare
__flt_rounds() so that libc can build it despire clang providing its own
<float.h>

ok stefan@@ kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.12 2016/05/09 23:55:52 guenther Exp $	*/
d60 1
a60 1
PROTO_NORMAL(sigblock);
d66 1
a66 1
PROTO_NORMAL(sigsetmask);
@


1.12
log
@Remove sigreturn declaration and the now-unused libc syscall stub
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.11 2016/05/07 19:05:22 guenther Exp $	*/
d21 17
a58 1
PROTO_NORMAL(sigaddset);
a60 3
PROTO_NORMAL(sigdelset);
PROTO_NORMAL(sigemptyset);
PROTO_NORMAL(sigfillset);
a61 1
PROTO_NORMAL(sigismember);
@


1.11
log
@Use a Thread Information Block in both single and multi-threaded programs.
This stores errno, the cancelation flags, and related bits for each thread
and is allocated by ld.so or libc.a.  This is an ABI break from 5.9-stable!

Make libpthread dlopen'able by moving the cancelation wrappers into libc
and doing locking and fork/errno handling via callbacks that libpthread
registers when it first initializes.  'errno' *must* be declared via
<errno.h> now!

Clean up libpthread's symbol exports like libc.

On powerpc, offset the TIB/TCB/TLS data from the register per the ELF spec.

Testing by various, particularly sthen@@ and patrick@@
ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.10 2015/11/10 04:30:59 guenther Exp $	*/
a53 1
PROTO_NORMAL(sigreturn);
@


1.10
log
@Split the intra-thread functionality from kill(2) into its own syscall
thrkill(2), rolling the kill(2) syscall number with the ABI change to
avoid breaking binaries during during the transition.  thrkill(2) includes
a 'tcb' argument that eliminates the need for locking in pthread_kill()
and simplifies pthread_cancel().  Switch __stack_smash_handler() to use
thrkill(2) and explicitly unblock SIGABRT.

Minor bump to both libc and libpthread: make sure you install a new kernel!

ok semarie@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.9 2015/10/25 04:13:59 guenther Exp $	*/
d32 3
d56 1
a56 1
/*PROTO_CANCEL(sigsuspend);	wrap to hide SIGTHR */
@


1.9
log
@Use sigaction() instead of signal() to avoid pulling in unnecessary
wrappers.  To keep uses from crawling back in, mark signal() as
deprecated inside libc.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.8 2015/10/23 04:39:24 guenther Exp $	*/
d55 1
@


1.8
log
@Merge the sigaction() and sigprocmask() overloads/wrappers from libpthread
into libc, and move pthread_sigmask() as well (just a trivial wrapper).
This provides consistent handling of SIGTHR between single- and multi-threaded
programs and is a step in the merge of all the libpthread overloads, providing
some ASM and Makefile bits that the other wrappers will need.

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.7 2015/09/19 04:02:21 guenther Exp $	*/
d47 1
a47 1
PROTO_NORMAL(signal);
@


1.7
log
@Don't wrap initialized variables: binutils appears to be mishandling them
on arm and m88k

problems with optind observed by jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.6 2015/09/13 07:36:58 guenther Exp $	*/
d36 1
a36 1
/*PROTO_NORMAL(pthread_sigmask);*/
d38 1
a38 1
/*PROTO_WRAP(sigaction);	wrap to hide SIGTHR */
d49 2
a50 2
/*PROTO_NORMAL(sigpending);	wrap to hide SIGTHR */
/*PROTO_WRAP(sigprocmask);	wrap to hide SIGTHR */
@


1.6
log
@Do provide hidden _libc_* aliases for sig{block,setmask} and use them in
the ASM *setjmp implementations.
Skip the PLT when calling them on amd64 (other archs to do this after testing)

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.5 2015/09/12 16:46:12 guenther Exp $	*/
d27 1
d30 1
@


1.5
log
@Finish wrapping <signal.h> so that calls to the sigset ops go direct and
everything but raise() and signal() are weak.
No longer need _thread_sys_ prefix on getthrid()
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.4 2015/09/11 15:38:33 guenther Exp $	*/
d39 1
a39 1
PROTO_DEPRECATED(sigblock);
d50 1
a50 1
PROTO_DEPRECATED(sigsetmask);
@


1.4
log
@Add PROTO_WRAP() for (almost) all the syscalls that libpthread doesn't
override so that internal calls go direct

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.3 2015/09/10 18:13:46 guenther Exp $	*/
d30 1
a30 2
PROTO_NORMAL(signal);

d32 6
d39 10
a48 1
PROTO_NORMAL(sigpending);
d50 3
@


1.3
log
@Pull in namespace.h when building all .c files using gcc's -include option,
so that we can provide asm labels for the memcpy/memset/__stack_smash_handler
calls that it generates ab initio.  Eliminate direct #includes of it.  Make
sure it's a dependency of all objects (unnecessary for asm, but close enough).

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.2 2015/09/09 16:10:03 guenther Exp $	*/
d31 5
@


1.2
log
@Hide __sigintr and __strsignal as internal implementation details.
Delete the already hidden _signal alias too.

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: signal.h,v 1.1 2015/09/06 20:26:20 guenther Exp $	*/
a21 1
#include "namespace.h"
@


1.1
log
@Fix aliasing of sys_errlist, sys_nerr, sys_siglist, and sys_signame
to eliminate duplicate copies of the tables and get direct access internally

ok kettenis@@ deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d24 4
d30 2
@

