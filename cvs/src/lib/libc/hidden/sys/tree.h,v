head	1.1;
access;
symbols
	OPENBSD_6_2:1.1.0.4
	OPENBSD_6_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.1
date	2017.06.19.03.06.26;	author dlg;	state Exp;
branches;
next	;
commitid	CGcs8bxpQbPTEEeW;


desc
@@


1.1
log
@port the RBT code to userland by making it part of libc.

src/lib/libc/gen/tree.c is a copy of src/sys/kern/subr_tree.c, but with
annotations for symbol visibility. changes to one should be reflected
in the other.

the malloc debug code that uses RB code is ported to RBT.

because libc provides the RBT code, procmap doesn't have to reach into
the kernel and build subr_tree.c itself now.

mild enthusiasm from many
ok guenther@@
@
text
@/*	$OpenBSD$ */

/* 
 * Copyright (c) 2016 David Gwynne <dlg@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef _LIBC_TREE
#define _LIBC_TREE

#include_next <sys/tree.h>

PROTO_NORMAL(_rb_check);
PROTO_NORMAL(_rb_find);
PROTO_NORMAL(_rb_insert);
PROTO_NORMAL(_rb_left);
PROTO_NORMAL(_rb_max);
PROTO_NORMAL(_rb_min);
PROTO_NORMAL(_rb_next);
PROTO_NORMAL(_rb_nfind);
PROTO_NORMAL(_rb_parent);
PROTO_NORMAL(_rb_poison);
PROTO_NORMAL(_rb_prev);
PROTO_NORMAL(_rb_remove);
PROTO_NORMAL(_rb_right);
PROTO_NORMAL(_rb_root);
PROTO_NORMAL(_rb_set_left);
PROTO_NORMAL(_rb_set_parent);
PROTO_NORMAL(_rb_set_right);

#endif /* !_LIBC_TREE */
@
