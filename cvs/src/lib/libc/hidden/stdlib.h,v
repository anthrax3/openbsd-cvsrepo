head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.7.0.2
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6;
locks; strict;
comment	@ * @;


1.9
date	2017.03.06.18.44.21;	author otto;	state Exp;
branches;
next	1.8;
commitid	XQxMPlK86q4Re2je;

1.8
date	2016.08.14.23.18.03;	author guenther;	state Exp;
branches;
next	1.7;
commitid	HRomje2ASbJP6bSX;

1.7
date	2016.03.13.18.34.21;	author guenther;	state Exp;
branches;
next	1.6;
commitid	AStIlKdF20sYXV6x;

1.6
date	2015.11.10.04.14.03;	author guenther;	state Exp;
branches;
next	1.5;
commitid	SlaqG0vnitmMjAjz;

1.5
date	2015.10.25.18.01.24;	author guenther;	state Exp;
branches;
next	1.4;
commitid	psI2iCtxmQHDheCH;

1.4
date	2015.09.19.04.02.21;	author guenther;	state Exp;
branches;
next	1.3;
commitid	xONsWdI5wUyoKz4N;

1.3
date	2015.09.13.20.29.23;	author guenther;	state Exp;
branches;
next	1.2;
commitid	u2fz8qkdx56qeEmF;

1.2
date	2015.09.13.15.20.40;	author guenther;	state Exp;
branches;
next	1.1;
commitid	p2Wh4X9rULHNIIeJ;

1.1
date	2015.09.13.08.31.47;	author guenther;	state Exp;
branches;
next	;
commitid	QZ177IcjQzeRxHAC;


desc
@@


1.9
log
@Introducing recallocarray(3), a blend of calloc(3) and reallocarray(3)
with the added feature that released memory is cleared. Much input from various
developers. ok deraadt@@ tom@@
@
text
@/*	$OpenBSD: stdlib.h,v 1.8 2016/08/14 23:18:03 guenther Exp $	*/
/*	$NetBSD: stdlib.h,v 1.25 1995/12/27 21:19:08 jtc Exp $	*/

/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)stdlib.h	5.13 (Berkeley) 6/4/91
 */

#ifndef _LIBC_STDLIB_H_
#define _LIBC_STDLIB_H_

#include_next <stdlib.h>

__BEGIN_HIDDEN_DECLS
char	*__findenv(const char *, int, int *);
void	__atexit_register_cleanup(void (*)(void));
__END_HIDDEN_DECLS

extern char **environ;
extern char *__progname;

#if 0
extern PROTO_NORMAL(__mb_cur_max);
/*extern PROTO_NORMAL(suboptarg);*/
#endif

PROTO_STD_DEPRECATED(_Exit);
PROTO_DEPRECATED(a64l);
PROTO_NORMAL(abort);
PROTO_NORMAL(abs);
PROTO_NORMAL(arc4random);
PROTO_NORMAL(arc4random_buf);
PROTO_NORMAL(arc4random_uniform);
PROTO_NORMAL(atexit);
PROTO_STD_DEPRECATED(atof);
PROTO_NORMAL(atoi);
PROTO_STD_DEPRECATED(atol);
PROTO_STD_DEPRECATED(atoll);
PROTO_STD_DEPRECATED(bsearch);
/*PROTO_NORMAL(calloc);			not yet, breaks emacs */
PROTO_NORMAL(cgetcap);
PROTO_NORMAL(cgetclose);
PROTO_NORMAL(cgetent);
PROTO_NORMAL(cgetfirst);
PROTO_NORMAL(cgetmatch);
PROTO_NORMAL(cgetnext);
PROTO_NORMAL(cgetnum);
PROTO_NORMAL(cgetset);
PROTO_NORMAL(cgetstr);
PROTO_NORMAL(cgetusedb);
PROTO_NORMAL(cgetustr);
PROTO_DEPRECATED(daemon);
PROTO_NORMAL(devname);
PROTO_NORMAL(div);
PROTO_DEPRECATED(drand48);
PROTO_DEPRECATED(ecvt);
PROTO_NORMAL(erand48);
PROTO_NORMAL(exit);
PROTO_DEPRECATED(fcvt);
/*PROTO_NORMAL(free);			not yet, breaks emacs */
PROTO_DEPRECATED(gcvt);
PROTO_DEPRECATED(getbsize);
PROTO_NORMAL(getenv);
PROTO_DEPRECATED(getloadavg);
PROTO_DEPRECATED(getprogname);
PROTO_DEPRECATED(getsubopt);
PROTO_DEPRECATED(grantpt);
PROTO_DEPRECATED(heapsort);
PROTO_DEPRECATED(initstate);
PROTO_DEPRECATED(jrand48);
PROTO_DEPRECATED(l64a);
PROTO_STD_DEPRECATED(labs);
PROTO_DEPRECATED(lcong48);
PROTO_NORMAL(lcong48_deterministic);
PROTO_DEPRECATED(ldiv);
PROTO_STD_DEPRECATED(llabs);
PROTO_STD_DEPRECATED(lldiv);
PROTO_DEPRECATED(lrand48);
/*PROTO_NORMAL(malloc);			not yet, breaks emacs */
PROTO_STD_DEPRECATED(mblen);
PROTO_STD_DEPRECATED(mbstowcs);
PROTO_STD_DEPRECATED(mbtowc);
PROTO_DEPRECATED(mergesort);
PROTO_DEPRECATED(mkdtemp);
PROTO_NORMAL(mkostemp);
PROTO_DEPRECATED(mkostemps);
PROTO_NORMAL(mkstemp);
PROTO_DEPRECATED(mkstemps);
PROTO_DEPRECATED(mktemp);
PROTO_DEPRECATED(mrand48);
PROTO_DEPRECATED(nrand48);
/*PROTO_NORMAL(posix_memalign);		not yet, breaks emacs */
PROTO_DEPRECATED(posix_openpt);
PROTO_DEPRECATED(ptsname);
PROTO_NORMAL(putenv);
/*PROTO_DEPRECATED(qabs);	alias of llabs */
/*PROTO_DEPRECATED(qdiv);	alias of lldiv */
PROTO_NORMAL(qsort);
PROTO_DEPRECATED(radixsort);
PROTO_STD_DEPRECATED(rand);
PROTO_NORMAL(rand_r);
PROTO_DEPRECATED(random);
/*PROTO_NORMAL(realloc);		not yet, breaks emacs */
PROTO_NORMAL(reallocarray);
PROTO_NORMAL(recallocarray);
PROTO_DEPRECATED(realpath);
PROTO_DEPRECATED(seed48);
PROTO_NORMAL(seed48_deterministic);
PROTO_NORMAL(setenv);
PROTO_DEPRECATED(setproctitle);
PROTO_DEPRECATED(setprogname);
PROTO_DEPRECATED(setstate);
PROTO_DEPRECATED(sradixsort);
PROTO_DEPRECATED(srand);
PROTO_DEPRECATED(srand_deterministic);
PROTO_DEPRECATED(srand48);
PROTO_NORMAL(srand48_deterministic);
PROTO_DEPRECATED(srandom);
PROTO_DEPRECATED(srandom_deterministic);
PROTO_DEPRECATED(srandomdev);
PROTO_NORMAL(strtod);
PROTO_NORMAL(strtof);
PROTO_NORMAL(strtol);
PROTO_NORMAL(strtold);
PROTO_NORMAL(strtoll);
PROTO_NORMAL(strtonum);
/*PROTO_NORMAL(strtoq);		alias of strtoll */
PROTO_NORMAL(strtoul);
PROTO_NORMAL(strtoull);
/*PROTO_NORMAL(strtouq);	alias of strtoull */
PROTO_NORMAL(system);
PROTO_DEPRECATED(ttyslot);
PROTO_DEPRECATED(unlockpt);
PROTO_NORMAL(unsetenv);
PROTO_STD_DEPRECATED(valloc);
PROTO_STD_DEPRECATED(wcstombs);
PROTO_STD_DEPRECATED(wctomb);

#endif /* _LIBC_STDLIB_H_ */
@


1.8
log
@Reduce qabs() and qdiv() to aliases of llabs() and lldiv().
Merge the manual pages and call them deprecated there.

ok and manpage tweak jmc@@, ok natano@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.7 2016/03/13 18:34:21 guenther Exp $	*/
d131 1
@


1.7
log
@environ and __progname are not declared in a public header; declare them
in libc's hidden/stdlib.h instead of in each .c file that needs one

ok deraadt@@ gsoares@@ mpi@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.6 2015/11/10 04:14:03 guenther Exp $	*/
d122 2
a123 2
PROTO_DEPRECATED(qabs);
PROTO_DEPRECATED(qdiv);
@


1.6
log
@libc.so can't be unloaded, so move the hidden atexit() and pthread_atfork()
stubs for the executable from crtbegin.o into libc, which lets them be
excluded from static links that don't use them.
For this, drop the normal crt{begin,end}S.o from libc.so: the .init and .fini
sections for libc aren't called at the right times anyway, so it's good that
they're unused.  libc.so just needs __guard_local and the .note.openbsd.ident
section, so add them to stack_protector.c for now (this will be improved)

"good time" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.5 2015/10/25 18:01:24 guenther Exp $	*/
d44 3
@


1.5
log
@Hide __atexit and __atexit_register_cleanup()
Wrap __cxa_{atexit,finalize}() so the call from exit() goes direct
Switch regress/lib/libc/atexit/ to be built with -static so that it can
  still access __atexit*

ok millert@@ jca@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.4 2015/09/19 04:02:21 guenther Exp $	*/
d57 1
a57 1
/*PROTO_NORMAL(atexit);			actually in csu */
@


1.4
log
@Don't wrap initialized variables: binutils appears to be mishandling them
on arm and m88k

problems with optind observed by jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.3 2015/09/13 20:29:23 guenther Exp $	*/
d42 1
@


1.3
log
@For now, permit overriding of the malloc family, to make emacs happy
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.2 2015/09/13 15:20:40 guenther Exp $	*/
d44 1
d47 1
@


1.2
log
@Overshot w/PROTO_DEPRECATED: seed48_deterministic() is used internally
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.1 2015/09/13 08:31:47 guenther Exp $	*/
d60 1
a60 1
PROTO_NORMAL(calloc);
d80 1
a80 1
PROTO_NORMAL(free);
d99 1
a99 1
PROTO_NORMAL(malloc);
d112 1
a112 1
PROTO_NORMAL(posix_memalign);
d123 1
a123 1
PROTO_NORMAL(realloc);
@


1.1
log
@Wrap <stdlib.h> so that calls go direct and the symbols not in the
C standard are all weak.
Apply __{BEGIN,END}_HIDDEN_DECLS to gdtoa{,imp}.h, hiding the
arch-specific __strtorx, __ULtox_D2A, __strtorQ, __ULtoQ_D2A symbols.
@
text
@d1 1
a1 1
/*	$OpenBSD: stdlib.h,v 1.56 2013/12/28 01:51:53 martynas Exp $	*/
d127 1
a127 1
PROTO_DEPRECATED(seed48_deterministic);
@

