head	1.16;
access;
symbols
	OPENBSD_5_4:1.15.0.4
	OPENBSD_5_4_BASE:1.15
	OPENBSD_5_3:1.15.0.2
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.14.0.4
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.2
	OPENBSD_5_0:1.13.0.26
	OPENBSD_5_0_BASE:1.13
	OPENBSD_4_9:1.13.0.24
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.22
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.18
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.20
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.16
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.14
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.12
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.10
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.13.0.8
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.6
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.4
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.2
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.9.0.2
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.3.0.16
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.14
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.12
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.10
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.8
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2013.12.03.06.21.41;	author guenther;	state dead;
branches;
next	1.15;

1.15
date	2012.12.24.19.28.10;	author kettenis;	state Exp;
branches;
next	1.14;

1.14
date	2011.08.19.07.59.49;	author kettenis;	state Exp;
branches;
next	1.13;

1.13
date	2005.08.04.16.33.05;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2003.11.22.00.50.48;	author avsm;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.27.22.30.38;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2003.04.17.03.44.59;	author drahn;	state Exp;
branches;
next	1.9;

1.9
date	2003.02.28.18.05.51;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2002.09.17.21.16.01;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2002.09.17.12.53.44;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.16.21.27.20;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.08.12.12.03.01;	author heko;	state Exp;
branches;
next	1.4;

1.4
date	2001.07.18.23.21.18;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.06.24.17.15.49;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.12.21.22.23.36;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Merge the per-arch crt0.c files into common_elf/crt0.c, with MD macros in
the md_init.h files.

Worked out with and ok miod@@; ok matthew@@
@
text
@/*	$OpenBSD: crt0.c,v 1.15 2012/12/24 19:28:10 kettenis Exp $	*/
/*	$NetBSD: crt0.c,v 1.20 1995/06/03 13:16:08 pk Exp $	*/

/*
 * Copyright (c) 1995 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <sys/param.h>
#include <sys/exec.h>
#include <stdlib.h>

static char	*_strrchr(char *, char);

char	**environ;
char	*__progname = "";

char __progname_storage[NAME_MAX+1];

#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
extern unsigned char _etext, _eprol;
#endif /* MCRT0 */


__asm(".text\n"
"	.align  4\n"
"	.globl  __start\n"
"	.globl  _start\n"
"_start:\n"
"__start:\n"
"	movl	%esp,%ebp\n"
"	andl	$~15,%esp		# align stack\n"
"	pushl	%edx			# cleanup\n"
"	movl    0(%ebp),%eax\n"
"	leal    8(%ebp,%eax,4),%ecx\n"
"	leal    4(%ebp),%edx\n"
"	pushl   %ecx\n"
"	pushl   %edx\n"
"	pushl   %eax\n"
"	xorl	%ebp,%ebp		# mark deepest stack frame\n"
"	call    ___start ");

void
___start(int argc, char **argv, char **envp, void (*cleanup)(void))
{
	char *namep;
	char *s;

        environ = envp;

	if ((namep = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = _strrchr(namep, '/')) == NULL)
			__progname = namep;
		else
			++__progname;
		for (s = __progname_storage; *__progname &&
		    s < &__progname_storage[sizeof __progname_storage - 1]; )
			*s++ = *__progname++;
		*s = '\0';
		__progname = __progname_storage;
	}

	if (cleanup)
		atexit(cleanup);

#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&_eprol, (u_long)&_etext);
#endif

	__init();

	exit(main(argc, argv, environ));
}


static char *
_strrchr(p, ch)
register char *p, ch;
{
	register char *save;

	for (save = NULL;; ++p) {
		if (*p == ch)
			save = (char *)p;
		if (!*p)
			return(save);
	}
/* NOTREACHED */
}

#ifdef MCRT0
asm ("  .text");
asm ("_eprol:");
#endif

@


1.15
log
@Register cleanup handler passed by ld.so with atexit(3).  Fix stack alignment.

ok guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.14 2011/08/19 07:59:49 kettenis Exp $	*/
@


1.14
log
@Make sure the stack is properly aligned for using SSE instructions.  While
our in-tree compiler will emit code to do this at the start of main(), other
compilers might not do that.

ok miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.13 2005/08/04 16:33:05 espie Exp $	*/
d60 2
a61 6
"	subl	$12,%esp		# align stack\n"
"	andl	$~15,%esp\n"
"	addl	$12,%esp\n"
"	pushl	%ebx			# ps_strings\n"
"	pushl   %ecx                    # obj\n"
"	pushl   %edx                    # cleanup\n"
d72 1
a72 2
___start(int argc, char **argv, char **envp, void (*cleanup)(void),
    const void *obj, struct ps_strings *ps_strings)
a74 1
	register struct kframe *kfp;
d90 3
@


1.13
log
@zap rcsid. Okay deraadt@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.12 2003/11/22 00:50:48 avsm Exp $	*/
d59 5
a63 1
"	pushl	%ebx			#ps_strings\n"
d66 3
a68 3
"	movl    12(%esp),%eax\n"
"	leal    20(%esp,%eax,4),%ecx\n"
"	leal    16(%esp),%edx\n"
d72 1
@


1.12
log
@remove multi-line literals in __asm syntax to keep gcc3 happy
henric@@ henning@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.11 2003/06/27 22:30:38 deraadt Exp $	*/
a33 4

#if defined(LIBC_SCCS) && !defined(lint)
static char rcsid[] = "$OpenBSD: crt0.c,v 1.11 2003/06/27 22:30:38 deraadt Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.11
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.10 2003/04/17 03:44:59 drahn Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.10 2003/04/17 03:44:59 drahn Exp $";
d57 16
a72 18
__asm("
	.text
	.align  4
	.globl  __start
	.globl  _start
_start:
__start:
	pushl	%ebx			#ps_strings
	pushl   %ecx                    # obj
	pushl   %edx                    # cleanup
	movl    12(%esp),%eax
	leal    20(%esp,%eax,4),%ecx
	leal    16(%esp),%edx
	pushl   %ecx
	pushl   %edx
	pushl   %eax
	call    ___start
");
@


1.10
log
@i386 startup code for ELF. based on newer version of NetBSD code.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.9 2003/02/28 18:05:51 deraadt Exp $	*/
d36 1
a36 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.9 2003/02/28 18:05:51 deraadt Exp $";
d40 1
d77 2
a78 7
___start(argc, argv, envp, cleanup, obj, ps_strings)
	int argc;
	char **argv;
	char ** envp;
	void (*cleanup)(void);			/* from shared loader */
	const void *obj;			/* from shared loader */
	struct ps_strings *ps_strings;
@


1.9
log
@copy basename of argv[0] to bss for __progname, so that large stack smash
does not make propolice reporting ineffective; millert miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.8 2002/09/17 21:16:01 deraadt Exp $	*/
d5 1
a5 1
 * Copyright (c) 1993 Paul Kranenburg
d18 2
a19 1
 *      This product includes software developed by Paul Kranenburg.
a32 1
 *
a34 1

d36 1
a36 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.8 2002/09/17 21:16:01 deraadt Exp $";
d42 13
a54 1
#include "common.h"
d56 18
a73 1
extern void	start(void) asm("start");
d76 7
a82 1
start()
d84 1
a84 9
	struct kframe {
		int	kargc;
		char	*kargv[1];	/* size depends on kargc */
		char	kargstr[1];	/* size varies */
		char	kenvstr[1];	/* size varies */
	};
	/*
	 *	ALL REGISTER VARIABLES!!!
	 */
a85 1
	register char **argv, *ap;
d88 5
a92 13
#ifdef lint
	kfp = 0;
	initcode = initcode = 0;
#else /* not lint */
	/* just above the saved frame pointer */
	asm ("lea 4(%%ebp), %0" : "=r" (kfp) );
#endif /* not lint */
	argv = &kfp->kargv[0];
	environ = argv + kfp->kargc + 1;

	if ((ap = argv[0])) {	
		if ((__progname = _strrchr(ap, '/')) == NULL)
			__progname = ap;
d102 3
a104 6
#ifdef DYNAMIC
	/* ld(1) convention: if DYNAMIC = 0 then statically linked */
#ifdef stupid_gcc
	if (&_DYNAMIC)
#else
	if ( ({volatile caddr_t x = (caddr_t)&_DYNAMIC; x; }) )
a105 4
		__load_rtld(&_DYNAMIC);
#endif /* DYNAMIC */

asm("eprol:");
d107 1
a107 4
#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&eprol, (u_long)&etext);
#endif /* MCRT0 */
d109 1
a109 2
asm ("__callmain:");		/* Defined for the benefit of debuggers */
	exit(main(kfp->kargc, argv, environ));
a111 12
#ifdef DYNAMIC
	asm("	___syscall:");
	asm("		popl %ecx");
	asm("		popl %eax");
	asm("		pushl %ecx");
	asm("		int $0x80");
	asm("		pushl %ecx");
	asm("		jc 1f");
	asm("		ret");
	asm("	1:");
	asm("		movl $-1,%eax");
	asm("		ret");
d113 5
a117 1
#endif /* DYNAMIC */
d119 8
a126 1
#include "common.c"
d129 1
a129 1
asm ("	.text");
d132 1
@


1.8
log
@uncommit, since it breaks macppc libc.  millert and miod have now said they
did NOT approve those for commit.  why did mickey feel he was ok to go
commiting a set of diffs which had not been passed around and tested by people?
we don't know.  mickey, have you got something to say for yourself?
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.6 2002/02/16 21:27:20 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.6 2002/02/16 21:27:20 millert Exp $";
d61 1
d78 5
@


1.7
log
@use a different name for __syscall(); millert@@ miod@@ niklas@@ ok
@
text
@d101 1
a101 1
	asm("	___syscall2:");
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.5 2001/08/12 12:03:01 heko Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.5 2001/08/12 12:03:01 heko Exp $";
d101 1
a101 1
	asm("	___syscall:");
@


1.5
log
@#(endif|else) foo is incorrect, make it #endif /* foo */
deraadt@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.4 2001/07/18 23:21:18 deraadt Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.4 2001/07/18 23:21:18 deraadt Exp $";
d45 1
a45 1
extern void	start __P((void)) asm("start");
@


1.4
log
@Wall
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3 1997/06/24 17:15:49 tholo Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD: crt0.c,v 1.3 1997/06/24 17:15:49 tholo Exp $";
d94 1
a94 1
#endif MCRT0
@


1.3
log
@Use OpenBSD tags and not SCCS or RCS Id tags
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.2 1996/12/21 22:23:36 millert Exp $	*/
d37 1
a37 1
static char rcsid[] = "$OpenBSD$";
d72 1
a72 1
	if ((ap = argv[0]))
d77 1
@


1.2
log
@-Wall madness.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.20 1995/06/03 13:16:08 pk Exp $	*/
d37 1
a37 1
static char sccsid[] = "%W% (Erasmus) %G%";
@


1.1
log
@Initial revision
@
text
@d1 1
d3 1
d72 1
a72 1
	if (ap = argv[0])
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
