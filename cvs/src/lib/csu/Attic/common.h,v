head	1.9;
access;
symbols
	OPENBSD_5_4:1.8.0.40
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.38
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.36
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.34
	OPENBSD_5_0:1.8.0.32
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.30
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.28
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.24
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.26
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.22
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.20
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.18
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.16
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.14
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.12
	OPENBSD_4_0_BASE:1.8
	OPENBSD_3_9:1.8.0.10
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.4
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.2
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.2.0.14
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.12
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.10
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.8
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.6
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2013.09.08.18.06.29;	author miod;	state dead;
branches;
next	1.8;

1.8
date	2004.01.05.09.02.03;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.28.18.05.48;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2002.09.17.21.16.01;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.17.12.53.44;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.07.22.19.15.39;	author art;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	98.05.14.17.36.26;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.41.17;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.41.17;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove a.out leftovers. (it's september now)
@
text
@/*	$OpenBSD: common.h,v 1.8 2004/01/05 09:02:03 miod Exp $	*/
/*	$NetBSD: common.h,v 1.3 1995/06/15 21:41:48 pk Exp $	*/

/*
 * Copyright (c) 1993,1995 Paul Kranenburg
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Paul Kranenburg.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 */

#include <string.h>
#include <limits.h>

#ifdef DYNAMIC

#include <sys/syscall.h>
#include <a.out.h>
#ifndef N_GETMAGIC
#define N_GETMAGIC(x)	((x).a_magic)
#endif
#ifndef N_BSSADDR
#define N_BSSADDR(x)	(N_DATADDR(x)+(x).a_data)
#endif

#include <sys/mman.h>

#include <link.h>
#include <dlfcn.h>

extern struct _dynamic	_DYNAMIC;
static void		__load_rtld(struct _dynamic *);
extern int		__syscall(int, ...);
int			_callmain(void);
#ifdef DEBUG
static char		*_getenv(char *);
static int		_strncmp(char *, char *, int);
#endif

#define LDSO	"/usr/libexec/ld.so"

/*
 * We need these system calls, but can't use library stubs
 */
#define _exit(v)		__syscall(SYS_exit, (v))
#define open(name, f, m)	__syscall(SYS_open, (name), (f), (m))
#define close(fd)		__syscall(SYS_close, (fd))
#define read(fd, s, n)		__syscall(SYS_read, (fd), (s), (n))
#define write(fd, s, n)		__syscall(SYS_write, (fd), (s), (n))
#define dup(fd)			__syscall(SYS_dup, (fd))
#define dup2(fd, fdnew)		__syscall(SYS_dup2, (fd), (fdnew))
#define mmap(addr, len, prot, flags, fd, off)	\
    __syscall(SYS___syscall, (quad_t)SYS_mmap, (addr), (len), (prot), (flags), \
	(fd), 0, (off_t)(off))

#define _FATAL(str) \
	write(2, str, sizeof(str)), \
	_exit(1);

#endif /* DYNAMIC */

static char		*_strrchr(char *, char);
extern int		main(int, char **, char **);
#ifdef MCRT0
extern void		monstartup(u_long, u_long);
extern void		_mcleanup(void);
#endif

char			**environ;
int			errno;
static char		empty[1];
char			*__progname = empty;
char			__progname_storage[NAME_MAX+1];

extern unsigned char	etext;
extern unsigned char	eprol asm ("eprol");
@


1.8
log
@Do not have non-dynamic crt0 depend upon libc's strrchr() function on a.out.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.7 2003/02/28 18:05:48 deraadt Exp $	*/
@


1.7
log
@copy basename of argv[0] to bss for __progname, so that large stack smash
does not make propolice reporting ineffective; millert miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.6 2002/09/17 21:16:01 deraadt Exp $	*/
a57 1
static char		*_strrchr(char *, char);
d85 1
a96 3
#ifndef DYNAMIC
#define _strrchr	strrchr
#endif
a99 1

@


1.6
log
@uncommit, since it breaks macppc libc.  millert and miod have now said they
did NOT approve those for commit.  why did mickey feel he was ok to go
commiting a set of diffs which had not been passed around and tested by people?
we don't know.  mickey, have you got something to say for yourself?
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.4 2002/07/22 19:15:39 art Exp $	*/
d36 1
d96 1
@


1.5
log
@use a different name for __syscall(); millert@@ miod@@ niklas@@ ok
@
text
@d55 1
a55 1
extern int		__syscall2(int, ...);
d68 7
a74 7
#define _exit(v)		__syscall2(SYS_exit, (v))
#define open(name, f, m)	__syscall2(SYS_open, (name), (f), (m))
#define close(fd)		__syscall2(SYS_close, (fd))
#define read(fd, s, n)		__syscall2(SYS_read, (fd), (s), (n))
#define write(fd, s, n)		__syscall2(SYS_write, (fd), (s), (n))
#define dup(fd)			__syscall2(SYS_dup, (fd))
#define dup2(fd, fdnew)		__syscall2(SYS_dup2, (fd), (fdnew))
d76 1
a76 1
    __syscall2(SYS___syscall, (quad_t)SYS_mmap, (addr), (len), (prot), (flags), \
@


1.4
log
@Remove some dead ifdefs to make the code more readable.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.3 2002/02/16 21:27:20 millert Exp $	*/
d55 1
a55 1
extern int		__syscall(int, ...);
d68 7
a74 7
#define _exit(v)		__syscall(SYS_exit, (v))
#define open(name, f, m)	__syscall(SYS_open, (name), (f), (m))
#define close(fd)		__syscall(SYS_close, (fd))
#define read(fd, s, n)		__syscall(SYS_read, (fd), (s), (n))
#define write(fd, s, n)		__syscall(SYS_write, (fd), (s), (n))
#define dup(fd)			__syscall(SYS_dup, (fd))
#define dup2(fd, fdnew)		__syscall(SYS_dup2, (fd), (fdnew))
d76 1
a76 1
    __syscall(SYS___syscall, (quad_t)SYS_mmap, (addr), (len), (prot), (flags), \
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.2 1998/05/14 17:36:26 niklas Exp $	*/
a48 4
#ifdef sun
#define MAP_COPY	MAP_PRIVATE
#define MAP_ANON	0
#endif
a62 4
#ifdef sun
#define LDSO	"/usr/lib/ld.so"
#endif
#ifdef BSD
a63 1
#endif
a74 4
#ifdef sun
#define mmap(addr, len, prot, flags, fd, off)	\
    __syscall(SYS_mmap, (addr), (len), (prot), _MAP_NEW|(flags), (fd), (off))
#else
a77 1
#endif
@


1.2
log
@$OpenBSD$
@
text
@d1 1
a1 1
/*	$OpenBSD: common.h,v 1.3 1995/06/15 21:41:48 pk Exp $	*/
d58 4
a61 4
static void		__load_rtld __P((struct _dynamic *));
extern int		__syscall __P((int, ...));
int			_callmain __P((void));
static char		*_strrchr __P((char *, char));
d63 2
a64 2
static char		*_getenv __P((char *));
static int		_strncmp __P((char *, char *, int));
d99 1
a99 1
extern int		main __P((int, char **, char **));
d101 2
a102 2
extern void		monstartup __P((u_long, u_long));
extern void		_mcleanup __P((void));
@


1.1
log
@Initial revision
@
text
@d1 1
d3 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
