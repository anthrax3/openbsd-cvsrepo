head	1.10;
access;
symbols
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.18
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.16
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.2
	OPENBSD_3_0_BASE:1.2;
locks; strict;
comment	@ * @;


1.10
date	2013.12.03.06.21.41;	author guenther;	state dead;
branches;
next	1.9;

1.9
date	2012.12.23.12.24.13;	author kettenis;	state Exp;
branches;
next	1.8;

1.8
date	2010.05.01.11.32.43;	author kettenis;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.25.02.45.23;	author kurt;	state Exp;
branches;
next	1.6;

1.6
date	2004.01.04.03.40.19;	author pvalchev;	state Exp;
branches;
next	1.5;

1.5
date	2003.02.28.18.05.51;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.17.19.42.22;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.02.14.00.39;	author art;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.29.02.25.15;	author art;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Merge the per-arch crt0.c files into common_elf/crt0.c, with MD macros in
the md_init.h files.

Worked out with and ok miod@@; ok matthew@@
@
text
@/*	$OpenBSD: crt0.c,v 1.9 2012/12/23 12:24:13 kettenis Exp $	*/

/*
 * Copyright (c) 1995 Christopher G. Demetriou
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Christopher G. Demetriou
 *	for the NetBSD Project.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
 * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
 * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 */

#include <stdlib.h>
#include <limits.h>

static char	*_strrchr(char *, char);

char	**environ;
char	*__progname = "";
char	__progname_storage[NAME_MAX+1];

#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
extern unsigned char _etext, _eprol;
#endif /* MCRT0 */

__asm__(".text\n"
"	.align 4\n"
"	.global _start\n"		/* NetBSD compat */
"	.global __start\n"
"_start:\n"
"__start:\n"
"	clr	%fp\n"
"	add	%sp, 2175, %o0\n"	/* stack */
"	ba,pt	%icc, ___start\n"
"	 mov	%g1, %o1");

static void ___start(char **, void (*)(void)) __used;

static void
___start(char **sp, void (*cleanup)(void))
{
	long argc;
	char **argv, *namep;
	char *s;

	argc = *(long *)sp;
	argv = sp + 1;
	environ = sp + 2 + argc;		/* 2: argc + NULL ending argv */

	if ((namep = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = _strrchr(namep, '/')) == NULL)
			__progname = namep;
		else
			__progname++;
		for (s = __progname_storage; *__progname &&
		    s < &__progname_storage[sizeof __progname_storage - 1]; )
			*s++ = *__progname++;
		*s = '\0';
		__progname = __progname_storage;
	}

	if (cleanup)
		atexit(cleanup);

#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&_eprol, (u_long)&_etext);
#endif

	__init();

	exit(main(argc, argv, environ));
}


static char *
_strrchr(p, ch)
register char *p, ch;
{
	register char *save;

	for (save = NULL;; ++p) {
		if (*p == ch)
			save = (char *)p;
		if (!*p)
			return(save);
	}
/* NOTREACHED */
}

#ifdef MCRT0
asm ("  .text");
asm ("_eprol:");
#endif

@


1.9
log
@Register cleanup handler passed by ld.so with atexit(3).
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.8 2010/05/01 11:32:43 kettenis Exp $	*/
@


1.8
log
@Sprinkle a few __used markers to prevent gcc4 from throwing away essential
bits of code and data.  With this change gcc4 builds usable crt*.o on sparc64,
other architectures probably need some more love.

ok marco@@, jsg@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.7 2008/06/25 02:45:23 kurt Exp $	*/
a54 1
"	clr	%g4\n"
d58 1
a58 1
"	nop");
d60 1
a60 1
static void ___start(char **, void (*)(void), const void *) __used;
d63 1
a63 1
___start(char **sp, void (*cleanup)(void), const void *obj)
d84 3
@


1.7
log
@Make pic compatiable. From and okay drahn@@ no objection miod@@
"Slackers!" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.6 2004/01/04 03:40:19 pvalchev Exp $	*/
d61 1
a61 1
static void ___start(char **, void (*)(void), const void *);
@


1.6
log
@zap multi-line literals; ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.5 2003/02/28 18:05:51 deraadt Exp $	*/
d61 1
d63 1
a63 3
void ___start(char **, void (*)(void), const void *);

void
@


1.5
log
@copy basename of argv[0] to bss for __progname, so that large stack smash
does not make propolice reporting ineffective; millert miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.4 2002/02/17 19:42:22 millert Exp $	*/
d49 11
a59 13
__asm__("
	.text
	.align 4
	.global _start			/* NetBSD compat */
	.global __start
_start:
__start:
	clr	%g4
	clr	%fp
	add	%sp, 2175, %o0		/* stack */
	ba,pt	%icc, ___start
	 nop
");
@


1.4
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3 2002/02/16 21:27:20 millert Exp $	*/
d35 1
d41 1
d71 1
d82 5
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.2 2001/09/02 14:00:39 art Exp $	*/
d62 1
a62 1
void ___start __P((char **, void (*)(void), const void *));
@


1.2
log
@I don't even want to know how I could screw this up so bad and noone noticed.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.1 2001/08/29 02:25:15 art Exp $	*/
d36 1
a36 1
static char	*_strrchr __P((char *, char));
d42 2
a43 2
extern void	monstartup __P((u_long, u_long));
extern void	_mcleanup __P((void));
d62 1
a62 1
void ___start __P((char **, void (*) __P((void)), const void *));
@


1.1
log
@crt0. Almost like on alpha, except that sparc64 needs an assembler stub
for the moment. (why make the ABI so complicated?)
The assembler is inspired by crt0 in NetBSD.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.6 2001/02/03 23:16:16 art Exp $	*/
d56 1
a56 1
	add	%sp, 2047, %o0		/* stack */
@

