head	1.14;
access;
symbols
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.12.0.16
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.12
	OPENBSD_5_1:1.12.0.14
	OPENBSD_5_0:1.12.0.12
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.10
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.8
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.4
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.6
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.2
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.11.0.14
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.12
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.10
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.8
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.6
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.4
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.2
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.10.0.4
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.2
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.14
date	2013.12.03.06.21.40;	author guenther;	state dead;
branches;
next	1.13;

1.13
date	2012.12.22.12.14.32;	author kettenis;	state Exp;
branches;
next	1.12;

1.12
date	2008.10.17.01.10.47;	author kurt;	state Exp;
branches;
next	1.11;

1.11
date	2005.08.04.16.33.05;	author espie;	state Exp;
branches;
next	1.10;

1.10
date	2004.06.01.21.06.17;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2003.12.04.23.10.37;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.04.04.43.56;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.30.20.46.10;	author mickey;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.28.18.05.51;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.16.19.15.38;	author mickey;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.10.22.49.54;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.20;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.02.20.45.58;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	2001.08.19.19.57.54;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.14
log
@Merge the per-arch crt0.c files into common_elf/crt0.c, with MD macros in
the md_init.h files.

Worked out with and ok miod@@; ok matthew@@
@
text
@/*	$OpenBSD: crt0.c,v 1.13 2012/12/22 12:14:32 kettenis Exp $	*/

/*
 * Copyright (c) 2001 Michael Shalayeff
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
 * IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
 * OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL THE AUTHOR OR HIS RELATIVES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF MIND, USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING
 * IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF
 * THE POSSIBILITY OF SUCH DAMAGE.
 */

int	global __asm ("$global$") = 0;

#include <sys/param.h>
#include <sys/syscall.h>
#include <sys/fcntl.h>
#include <sys/exec.h>
#include <stdlib.h>
#include <paths.h>

typedef char Obj_Entry;

/*
 * Lots of the chunks of this file cobbled together from pieces of
 * other OpenBSD crt files, including the common code.
 */

char	**environ;

extern void	__init(void);
extern void	__fini(void);

#ifdef MCRT0
extern void	monstartup(u_long, u_long);
extern void	_mcleanup(void);
extern unsigned char etext, eprol;
#endif /* MCRT0 */

static char *__strrchr(const char *p, char ch);

char *__progname = "";
char __progname_storage[NAME_MAX+1];

void ___start(struct ps_strings *arginfo, void (*cleanup)(void));

__asm(
	".import $global$, data\n\t"
	".import ___start, code\n\t"
	".text\n\t"
	".align	4\n\t"
	".export _start, entry\n\t"
	".export __start, entry\n\t"
	".type	_start,@@function\n\t"
	".type	__start,@@function\n\t"
	".label _start\n\t"
	".label __start\n\t"
	".proc\n\t"
	".callinfo frame=0, calls\n\t"
	".entry\n\t"
	"bl L$lpc, %r27\n\t"
	"depi 0, 31, 2, %r27\n\t"
"L$lpc:  addil L'$global$ - ($PIC_pcrel$0 - 8), %r27\n\t"
	"ldo R'$global$ - ($PIC_pcrel$0 - 12)(%r1),%r27\n\t"
	".call\n\t"
	"b	___start\n\t"
	"copy    %r27, %r19\n\t"
	".exit\n\t"
	".procend\n\t");

void
___start(struct ps_strings *arginfo, void (*cleanup)(void))
{
	char **argv, *namep;
	char *s;

	argv = arginfo->ps_argvstr;
	environ = arginfo->ps_envstr;
	if ((namep = argv[0]) != NULL) {	/* NULL ptr if argc = 0 */
		if ((__progname = __strrchr(namep, '/')) == NULL)
			__progname = namep;
		else
			__progname++;
		for (s = __progname_storage; *__progname &&
		    s < &__progname_storage[sizeof __progname_storage - 1]; )
			*s++ = *__progname++;
		*s = '\0';
		__progname = __progname_storage;
	}

	if (cleanup)
		atexit(cleanup);

#ifdef MCRT0
	atexit(_mcleanup);
	monstartup((u_long)&eprol, (u_long)&etext);
#endif

	__init();

	exit(main(arginfo->ps_nargvstr, argv, environ));
}

static char *
__strrchr(const char *p, char ch)
{
	char *save;

	for (save = NULL;; ++p) {
		if (*p == ch)
			save = (char *)p;
		if (!*p)
			return(save);
	}
}

#ifdef MCRT0
__asm (".export eprol, entry\n\t.label eprol");
#endif
@


1.13
log
@Register cleanup handler passed by ld.so with atexit(3).

ok kurt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.12 2008/10/17 01:10:47 kurt Exp $	*/
@


1.12
log
@adjust asm to be pic compatible. okay kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.11 2005/08/04 16:33:05 espie Exp $	*/
a55 1
void __start(char **, void (*)(void), const Obj_Entry *);
d61 1
a61 1
void __start(char **sp, void (*cleanup)(void), const Obj_Entry *obj);
d88 1
a88 4
___start(sp, cleanup, obj)
	char **sp;
	void (*cleanup)(void);			/* from shared loader */
	const Obj_Entry *obj;			/* from shared loader */
a89 1
	struct ps_strings *arginfo = (struct ps_strings *)sp;
d106 3
@


1.11
log
@zap rcsid. Okay deraadt@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.10 2004/06/01 21:06:17 mickey Exp $	*/
d78 4
a81 1
	"ldil	L%$global$, %r27\n\t"
d84 1
a84 1
	"ldo	R%$global$(%r27), %r27\n\t"
@


1.10
log
@do not need sh_func_adrs w/ gcc3 no more
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.9 2003/12/04 23:10:37 mickey Exp $	*/
a29 4

#if defined(LIBC_SCCS) && !defined(lint)
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.9 2003/12/04 23:10:37 mickey Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.9
log
@also export _start as an alias to __start (noticed by pval@@) and redo the early startup as i always wanted to
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.8 2003/06/04 04:43:56 deraadt Exp $	*/
a29 1
int	sh_func_adrs __asm ("$$sh_func_adrs") = 0;
d32 1
a32 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.8 2003/06/04 04:43:56 deraadt Exp $";
@


1.8
log
@more 3/4 cleanups for lazy developers
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.7 2003/05/30 20:46:10 mickey Exp $	*/
d33 1
a33 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.7 2003/05/30 20:46:10 mickey Exp $";
d67 23
d91 1
a91 1
__start(sp, cleanup, obj)
a98 4

	__asm __volatile (".import $global$, data\n\t"
			  "ldil L%%$global$, %%r27\n\t"
			  "ldo	R%%$global$(%%r27), %%r27" ::: "r27");
@


1.7
log
@i sent you the damn working diff, didn't i?
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.6 2003/02/28 18:05:51 deraadt Exp $	*/
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *      This product includes software developed by Michael Shalayeff.
 * 4. The name of the author may not be used to endorse or promote products
 *    derived from this software without specific prior written permission.
d33 1
a33 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.6 2003/02/28 18:05:51 deraadt Exp $";
@


1.6
log
@copy basename of argv[0] to bss for __progname, so that large stack smash
does not make propolice reporting ineffective; millert miod ok
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.5 2003/01/16 19:15:38 mickey Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.5 2003/01/16 19:15:38 mickey Exp $";
d41 1
a47 2
#include "common.h"

d69 3
d89 1
a89 1
		if ((__progname = _strrchr(namep, '/')) == NULL)
@


1.5
log
@extern the eprol and etext; better eprol definition
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.4 2002/11/10 22:49:54 mickey Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.4 2002/11/10 22:49:54 mickey Exp $";
a40 1
#include <stdlib.h>
d44 1
d78 1
d91 5
@


1.4
log
@build crtbegin/crtend as it is ment for elf
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.3 2002/02/16 21:27:20 millert Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.3 2002/02/16 21:27:20 millert Exp $";
d64 1
d116 1
a116 1
__asm (".export eprol, entry\neprol");
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.2 2002/02/02 20:45:58 mickey Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.2 2002/02/02 20:45:58 mickey Exp $";
a63 1
extern u_int etext, eprol;
d67 1
d96 2
d101 4
a104 1
void __main() {}
d106 7
a112 1
#include "common.c"
d115 1
a115 1
__asm __volatile(".export eprol, entry\neprol");
@


1.2
log
@fix some protos
@
text
@d1 1
a1 1
/*	$OpenBSD: crt0.c,v 1.1 2001/08/19 19:57:54 mickey Exp $	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD: crt0.c,v 1.1 2001/08/19 19:57:54 mickey Exp $";
d58 2
a59 2
extern void	__init __P((void));
extern void	__fini __P((void));
d62 2
a63 2
extern void	monstartup __P((u_long, u_long));
extern void	_mcleanup __P((void));
d72 1
a72 1
	void (*cleanup) __P((void));		/* from shared loader */
@


1.1
log
@either way this is what i'm using now
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d38 1
a38 1
static const char rcsid[] = "$OpenBSD$";
d67 1
a67 1
void __main() {}
d98 2
@

