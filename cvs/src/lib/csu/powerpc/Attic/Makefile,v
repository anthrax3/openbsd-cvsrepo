head	1.24;
access;
symbols
	OPENBSD_5_6:1.23.0.6
	OPENBSD_5_6_BASE:1.23
	OPENBSD_5_5:1.23.0.4
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.22.0.4
	OPENBSD_5_4_BASE:1.22
	OPENBSD_5_3:1.22.0.2
	OPENBSD_5_3_BASE:1.22
	OPENBSD_5_2:1.21.0.4
	OPENBSD_5_2_BASE:1.21
	OPENBSD_5_1_BASE:1.21
	OPENBSD_5_1:1.21.0.2
	OPENBSD_5_0:1.20.0.8
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.6
	OPENBSD_4_9_BASE:1.20
	OPENBSD_4_8:1.20.0.4
	OPENBSD_4_8_BASE:1.20
	OPENBSD_4_7:1.20.0.2
	OPENBSD_4_7_BASE:1.20
	OPENBSD_4_6:1.19.0.6
	OPENBSD_4_6_BASE:1.19
	OPENBSD_4_5:1.19.0.2
	OPENBSD_4_5_BASE:1.19
	OPENBSD_4_4:1.14.0.2
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.12.0.18
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.16
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.12.0.14
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.12
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.10
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.8
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.6
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.4
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.9.0.6
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.2
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.7.0.2
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.4.0.4
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.2.0.8
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.6
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.4
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2
	powerpc_1:1.1.1.1;
locks; strict;
comment	@# @;


1.24
date	2014.11.12.02.31.47;	author guenther;	state dead;
branches;
next	1.23;
commitid	yVvDwJtYN2JUuiTV;

1.23
date	2013.12.03.06.21.41;	author guenther;	state Exp;
branches;
next	1.22;

1.22
date	2012.12.19.20.26.52;	author kettenis;	state Exp;
branches;
next	1.21;

1.21
date	2011.11.08.10.37.09;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2009.10.27.23.59.58;	author deraadt;	state Exp;
branches;
next	1.19;

1.19
date	2009.01.14.19.45.20;	author kurt;	state Exp;
branches;
next	1.18;

1.18
date	2008.11.21.19.19.13;	author otto;	state Exp;
branches;
next	1.17;

1.17
date	2008.11.13.08.18.10;	author jsg;	state Exp;
branches;
next	1.16;

1.16
date	2008.11.11.23.49.46;	author kurt;	state Exp;
branches;
next	1.15;

1.15
date	2008.10.06.14.17.49;	author kurt;	state Exp;
branches;
next	1.14;

1.14
date	2008.07.28.14.17.00;	author kurt;	state Exp;
branches;
next	1.13;

1.13
date	2008.06.25.02.47.59;	author kurt;	state Exp;
branches;
next	1.12;

1.12
date	2004.01.08.14.59.15;	author drahn;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.30.19.03.24;	author drahn;	state Exp;
branches;
next	1.10;

1.10
date	2003.02.26.18.50.35;	author drahn;	state Exp;
branches;
next	1.9;

1.9
date	2001.05.28.21.38.13;	author drahn;	state Exp;
branches;
next	1.8;

1.8
date	2001.03.24.18.40.21;	author tholo;	state Exp;
branches;
next	1.7;

1.7
date	2000.10.13.05.14.03;	author drahn;	state Exp;
branches;
next	1.6;

1.6
date	2000.06.28.04.56.44;	author rahnds;	state Exp;
branches;
next	1.5;

1.5
date	2000.06.13.04.07.03;	author rahnds;	state Exp;
branches;
next	1.4;

1.4
date	99.08.20.14.11.36;	author niklas;	state Exp;
branches;
next	1.3;

1.3
date	99.01.28.05.01.14;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	97.04.27.20.56.04;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.12.21.20.53.48;	author rahnds;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	96.12.21.20.53.48;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.24
log
@Merge Makefiles, moving the build up a level and putting the CPU-specific
build flags into conditionals in the Makefile, fixing a few inconsistencies
in the process.

\o/ miod@@
@
text
@#	$OpenBSD: Makefile,v 1.23 2013/12/03 06:21:41 guenther Exp $
#	from: @@(#)Makefile	8.1 (Berkeley) 6/1/93

OBJS=		crt0.o gcrt0.o
OBJS+=		crtbegin.o crtend.o
OBJS+=		crtbeginS.o crtendS.o
SRCS=		crt0.c crtbegin.c crtbeginS.c crtend.c crtendS.c

ELFDIR=		${.CURDIR}/../common_elf
.PATH:		${ELFDIR}
CFLAGS+=	-I${ELFDIR} -I${.CURDIR}

PICFLAG=	-fPIC

all: ${OBJS}

crt0.o: crt0.c
	@@echo ${COMPILE.c} -fpie -DCRT0 ${ELFDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -fpie -DCRT0 ${ELFDIR}/crt0.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

gcrt0.o: crt0.c
	@@echo ${COMPILE.c} -DMCRT0 ${ELFDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -DMCRT0 ${ELFDIR}/crt0.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

crtbegin.o: crtbegin.c
	@@echo ${COMPILE.c} -fpie ${ELFDIR}/crtbegin.c -o ${.TARGET}
	@@${COMPILE.c} -fpie ${ELFDIR}/crtbegin.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

crtbeginS.o: crtbeginS.c
	@@echo ${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtbeginS.c -o ${.TARGET}
	@@${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtbeginS.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

crtend.o: crtend.c
	@@echo ${COMPILE.c} -fpie ${ELFDIR}/crtend.c -o ${.TARGET}
	@@${COMPILE.c} -fpie ${ELFDIR}/crtend.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

crtendS.o: crtendS.c
	@@echo ${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtendS.c -o ${.TARGET}
	@@${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtendS.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

realinstall:
	${INSTALL} ${INSTALL_COPY} -S -o ${BINOWN} -g ${BINGRP} -m 444 ${OBJS} \
	    ${DESTDIR}/usr/lib

afterdepend:: .depend
	@@(TMP=/tmp/_depend$$$$; \
	    sed -e 's/^\([^\.]*\).o[ ]*:/\1.o g\1.o:/' \
	    < .depend > $$TMP; \
	mv $$TMP .depend)

.include <bsd.prog.mk>
@


1.23
log
@Merge the per-arch crt0.c files into common_elf/crt0.c, with MD macros in
the md_init.h files.

Worked out with and ok miod@@; ok matthew@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2012/12/19 20:26:52 kettenis Exp $
@


1.22
log
@crtbeginS.o needs to be built with -fPIC, otherwise bloated shared libraries
silently crash when running constructors.  Tested by landry@@.

ok beck@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2011/11/08 10:37:09 guenther Exp $
d18 2
a19 2
	@@echo ${COMPILE.c} -fpie -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -fpie -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
d24 2
a25 2
	@@echo ${COMPILE.c} -DMCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -DMCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
@


1.21
log
@Pass install the -S option to avoid a window where the target isn't
executable (by mode or content), which can trip up builds with 'make -j'
(The generic fix is in share/mk/*; some Makefiles have their own INSTALL lines)

ok millert@@ deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2009/10/27 23:59:58 deraadt Exp $
d12 2
@


1.20
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2009/01/14 19:45:20 kurt Exp $
d52 1
a52 1
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 ${OBJS} \
@


1.19
log
@Re-enable pie support on macppc (still off by default but usable
again). Due to the way executable sections are loaded by
the kernel, a one page .got section with the blrl instruction may
be in the data cache and not flushed causing random crashes
upon process startup. Flush the data cache before ___start()
jumps there. Also mprotect the .got section to be read/exec
instead of read/write/exec. ld.so knows how to cope and static
binaries don't write to .got.

written by and okay drahn@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2008/11/21 19:19:13 otto Exp $
a3 1
CFLAGS+=	-DLIBC_SCCS
@


1.18
log
@revert -fpie for now, it produces crashing executables
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2008/11/13 08:18:10 jsg Exp $
d17 2
a18 2
	@@echo ${COMPILE.c} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
d29 2
a30 2
	@@echo ${COMPILE.c} ${ELFDIR}/crtbegin.c -o ${.TARGET}
	@@${COMPILE.c} ${ELFDIR}/crtbegin.c -o ${.TARGET}.o
d41 2
a42 2
	@@echo ${COMPILE.c} ${ELFDIR}/crtend.c -o ${.TARGET}
	@@${COMPILE.c} ${ELFDIR}/crtend.c -o ${.TARGET}.o
@


1.17
log
@fix rcs tag.
From patrick keshishian <sidster@@boxsoft.com>
@
text
@d1 1
a1 1
#	$OpenBSD$
d17 2
a18 2
	@@echo ${COMPILE.c} -DCRT0 -fpie ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -DCRT0 -fpie ${.CURDIR}/crt0.c -o ${.TARGET}.o
d29 2
a30 2
	@@echo ${COMPILE.c} -fpie ${ELFDIR}/crtbegin.c -o ${.TARGET}
	@@${COMPILE.c} -fpie ${ELFDIR}/crtbegin.c -o ${.TARGET}.o
d41 2
a42 2
	@@echo ${COMPILE.c} -fpie ${ELFDIR}/crtend.c -o ${.TARGET}
	@@${COMPILE.c} -fpie ${ELFDIR}/crtend.c -o ${.TARGET}.o
@


1.16
log
@Compile crt0.o, crtbegin.o and crtend.o with -fpie/-fPIE. This requires
gcc with pie support to be built first.

ok kettenis@@
@
text
@d1 1
a1 1
#	$OpenBSDe Makefile,v 1.6 2000/06/28 04:56:44 rahnds Exp $
@


1.15
log
@The recent change to bsd.own.mk to allow PICFLAG to be overridden made
these previously ignored PICFLAG settings become active. Remove PICFLAG
overrides to restore -fpic/-fPIC modes. In snaps for a week.

okay drahn@@
@
text
@d17 2
a18 2
	@@echo ${COMPILE.c} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
d29 2
a30 2
	@@echo ${COMPILE.c} ${ELFDIR}/crtbegin.c -o ${.TARGET}
	@@${COMPILE.c} ${ELFDIR}/crtbegin.c -o ${.TARGET}.o
d41 2
a42 2
	@@echo ${COMPILE.c} ${ELFDIR}/crtend.c -o ${.TARGET}
	@@${COMPILE.c} ${ELFDIR}/crtend.c -o ${.TARGET}.o
@


1.14
log
@Remove separate pic versions of crt0, crtbegin, crtend. Next
release we are taking a different approach. Idea from kettenis@@.

okay kettenis@@ weingart@@
@
text
@a13 2
PICFLAG?=-fpic

@


1.13
log
@Build pic versions of crt0, crtbegin & crtend for amd64, i386, powerpc,
sparc64. The rest will come later. okay drahn@@ no objection miod@@
"Get it in" deraadt@@
@
text
@d5 1
a5 1
OBJS=		crt0.o pcrt0.o gcrt0.o
a7 1
OBJS+=		crtbeginP.o crtendP.o
a23 6
pcrt0.o: crt0.c
	@@echo ${COMPILE.c} ${PICFLAG} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}
	@@${COMPILE.c} ${PICFLAG} -DCRT0 ${.CURDIR}/crt0.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

a35 6
crtbeginP.o: crtbegin.c
	@@echo ${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtbegin.c -o ${.TARGET}
	@@${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtbegin.c -o ${.TARGET}.o
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

a44 6
	@@${LD} -x -r -o ${.TARGET} ${.TARGET}.o
	@@rm -f ${.TARGET}.o

crtendP.o: crtend.c
	@@echo ${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtend.c -o ${.TARGET}
	@@${COMPILE.c} ${PICFLAG} ${ELFDIR}/crtend.c -o ${.TARGET}.o
@


1.12
log
@__init/__fini handling on ELF has not been correct. It is supposed to
be a section which code stubs (branches) can be added to initialize/destructor
This adds MD stubs to allow this to operate as expected. should fix wine
and behave according to ELF specs. ok miod@@
@
text
@d5 4
a8 1
OBJS=		crt0.o gcrt0.o crtbegin.o crtend.o crtbeginS.o crtendS.o
d25 6
d43 6
d58 6
@


1.11
log
@Fix dependancy building for ELF startup code. Changed Makefiles
to build startup code the same on all (ELF) archs. hppa ok mickey@@
@
text
@d10 1
a10 1
CFLAGS+=	-I${ELFDIR}
@


1.10
log
@Switch to a C version of powerpc crt0 file. easier to read. moves
_progname storage into data instead of stack.
@
text
@d5 7
a11 1
OBJS=		crt0.o gcrt0.o scrt0.o crtbegin.o crtend.o crtbeginS.o crtendS.o 
a13 3
CLEANFILES+=	core a.out
.PATH: ${.CURDIR}/../common_elf

d17 4
a20 3
	${CC} ${CFLAGS} -c -DCRT0 ${.ALLSRC}  -o $@@
	@@${LD} -x -r ${.TARGET}
	@@mv a.out ${.TARGET}
d23 4
a26 8
	${CC} ${CFLAGS} -c -DMCRT0 ${.ALLSRC}  -o $@@
	@@${LD} -x -r ${.TARGET}
	@@mv a.out ${.TARGET}

scrt0.o: crt0.c
	${CC} ${CFLAGS} -c -DSRT0 ${.ALLSRC}  -o $@@
	@@${LD} -x -r ${.TARGET}
	@@mv a.out ${.TARGET}
d29 2
a30 2
	@@echo ${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}
	@@${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}.o
d33 4
a36 4
 
crtend.o: crtend.c
	@@echo ${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}
	@@${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}.o
d40 3
a42 3
crtbeginS.o: crtbeginS.c
	@@echo ${CC} ${PICFLAG} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}
	@@${CC} ${PICFLAG} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}.o
d45 1
a45 1
 
d47 2
a48 2
	@@echo ${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}
	@@${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}.o
d54 1
a54 1
		${DESTDIR}/usr/lib
d56 5
a60 1
depend lint tags:
@


1.9
log
@Commonize csu code for elf systems, powerpc now no longer has it's own
versions of these files.

Fixed a bug in ld.so in this, instead of scheduling the fini of each of
the shared libraries with atexit. schedule a function of ld.so itself
and it will walk all of the open libraries when the program exits.
otherwise a shared library could be dl_open()ed and then dl_close()d
and then it would not be mapped for the atexit processing.

TODO:
What if atexit is not found (process did not link against libc?)
Do shared libraries that are dl_closed have their global destructors run?
@
text
@d4 1
a4 1
CFLAGS=		-DLIBC_SCCS
d13 2
a14 2
crt0.o: crt0.s
	${CPP} -DCRT0 ${.ALLSRC} | ${AS} -o $@@
d18 2
a19 2
gcrt0.o: crt0.s
	${CPP} -DMCRT0 ${.ALLSRC} | ${AS} -o $@@
d23 2
a24 2
scrt0.o: crt0.s
	${CPP} -DSCRT0 ${.ALLSRC} | ${AS} -o $@@
@


1.8
log
@Use "realinstall" to allow the framework to do other work if needed;
path of least surprise.  Ok millert@@
@
text
@d9 1
@


1.7
log
@Changes to the powerpc startup files to work in a more typical ELF
manner. the linker knows about the magic function _init and _fini
and will create a .dynamic tag to point to those symbols in the
executable/shared libraries. Take advantage of that fact to allow
ld.so to easily find the appropriate ctors/dtors calls for shared libraries

Since the crtbeginS.c now contains executable code, it must be compiled
with -fPIC. Rename the __init and __fini functions to _init/_fini so
the linker will locate them.
@
text
@d51 1
a51 1
install:
@


1.6
log
@Powerpc was missing the scrt.o startup file. now used by the ramdisk instbin.
also scrt does not support c++ ctors/dtors thus does not require
crtbegin.o/crtend.o which it normally does.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2000/06/13 04:07:03 rahnds Exp $
d6 2
d40 2
a41 2
	@@echo ${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}
	@@${CC} ${CFLAGS} -c ${.ALLSRC} -o ${.TARGET}.o
@


1.5
log
@Support files for shared library, expected by gcc, allows shared libraries to
have constructors and destructors.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1999/08/20 14:11:36 niklas Exp $
d5 1
a5 1
OBJS=		crt0.o gcrt0.o crtbegin.o crtend.o crtbeginS.o crtendS.o 
d17 5
@


1.4
log
@Fix RCS Ids
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 1999/01/28 05:01:14 rahnds Exp $
d5 1
a5 1
OBJS=		crt0.o gcrt0.o crtbegin.o crtend.o
d27 12
@


1.3
log
@update for binutils 2.9.1, whenever it might show up... The changes
are cleanup that would not work correctly with the newer version. works
fine with the current (old) version of gas/ld.

ALSO:
Found a very long outstanding bug on the powerpc port. whenever
nroff was run, say during a build, it would complain about memory being
freed twice. Found the cause of this was that *roff which is written in
C++ was using globals that had constructors/destructors and due to a
bug in the crt code, the destructors were getting called when a program
exited via falling out of the main loop. calling exit directly would
not exersize the bug that ran the destructors twice. THIS BUG IS NOW FIXED.
@
text
@d1 1
a2 1
#	$Id: Makefile,v 1.2 1997/04/27 20:56:04 millert Exp $
@


1.2
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d2 1
a2 1
#	$Id: Makefile,v 1.1.1.1 1996/12/21 20:53:48 rahnds Exp $
d26 1
a26 1
crtend.o: crtend.s
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
#	$Id: Makefile,v 1.1.1.1 1996/09/30 05:09:54 drahn Exp $
d33 1
a33 1
	install ${COPY} -o ${BINOWN} -g ${BINGRP} -m 444 ${OBJS} \
@


1.1.1.1
log
@Check-in of powerpc csu support.
NOTE: This will not work until the other pieces are checked in.
This is primarily the NetBSD powerpc port, with modifications
to support ELF.

A change needs to be made to one of the bsd.*.mk files to support
DESTDIR compilation with the crtbegin and crtend files.

@
text
@@
