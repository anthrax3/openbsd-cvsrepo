head	1.2;
access;
symbols
	OPENBSD_2_9:1.1.0.4
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.2
	OPENBSD_2_8_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2001.05.28.21.38.14;	author drahn;	state dead;
branches;
next	1.1;

1.1
date	2000.06.13.04.07.03;	author rahnds;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Commonize csu code for elf systems, powerpc now no longer has it's own
versions of these files.

Fixed a bug in ld.so in this, instead of scheduling the fini of each of
the shared libraries with atexit. schedule a function of ld.so itself
and it will walk all of the open libraries when the program exits.
otherwise a shared library could be dl_open()ed and then dl_close()d
and then it would not be mapped for the atexit processing.

TODO:
What if atexit is not found (process did not link against libc?)
Do shared libraries that are dl_closed have their global destructors run?
@
text
@/*	$OpenBSD: crtendS.c,v 1.1 2000/06/13 04:07:03 rahnds Exp $	*/
/*	$NetBSD: crtend.c,v 1.1 1997/04/16 19:38:24 thorpej Exp $	*/

#include <sys/cdefs.h>

static void (*__CTOR_LIST__[1]) __P((void))
    __attribute__((section(".ctors"))) = { (void *)0 };		/* XXX */
static void (*__DTOR_LIST__[1]) __P((void))
    __attribute__((section(".dtors"))) = { (void *)0 };		/* XXX */
@


1.1
log
@Support files for shared library, expected by gcc, allows shared libraries to
have constructors and destructors.
@
text
@d1 1
a1 1
/*	$OpenBSD: crtend.c,v 1.2 1999/08/20 14:11:36 niklas Exp $	*/
@

