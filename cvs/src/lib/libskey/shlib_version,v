head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.12
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.15.0.8
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.15.0.10
	OPENBSD_5_8_BASE:1.15
	OPENBSD_5_7:1.15.0.2
	OPENBSD_5_7_BASE:1.15
	OPENBSD_5_6:1.15.0.6
	OPENBSD_5_6_BASE:1.15
	OPENBSD_5_5:1.15.0.4
	OPENBSD_5_5_BASE:1.15
	OPENBSD_5_4:1.14.0.38
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.14.0.36
	OPENBSD_5_3_BASE:1.14
	OPENBSD_5_2:1.14.0.34
	OPENBSD_5_2_BASE:1.14
	OPENBSD_5_1_BASE:1.14
	OPENBSD_5_1:1.14.0.32
	OPENBSD_5_0:1.14.0.30
	OPENBSD_5_0_BASE:1.14
	OPENBSD_4_9:1.14.0.28
	OPENBSD_4_9_BASE:1.14
	OPENBSD_4_8:1.14.0.26
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.22
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.24
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.20
	OPENBSD_4_5_BASE:1.14
	OPENBSD_4_4:1.14.0.18
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.16
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.14
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.12
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.10
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.8
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.6
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.4
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.14.0.2
	OPENBSD_3_6_BASE:1.14
	OPENBSD_3_5:1.12.0.6
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.4
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.2
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.11.0.2
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.10.0.4
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.2
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.9.0.16
	OPENBSD_2_9_BASE:1.9
	OPENBSD_2_8:1.9.0.14
	OPENBSD_2_8_BASE:1.9
	OPENBSD_2_7:1.9.0.12
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.10
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.9.0.8
	OPENBSD_2_5_BASE:1.9
	OPENBSD_2_4:1.9.0.6
	OPENBSD_2_4_BASE:1.9
	OPENBSD_2_3:1.9.0.4
	OPENBSD_2_3_BASE:1.9
	OPENBSD_2_2:1.9.0.2
	OPENBSD_2_2_BASE:1.9
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.15
date	2013.08.13.05.52.16;	author guenther;	state Exp;
branches;
next	1.14;

1.14
date	2004.08.05.13.31.36;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2004.07.13.21.03.36;	author marc;	state Exp;
branches;
next	1.12;

1.12
date	2002.12.03.06.39.39;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.16.03.50.42;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2001.06.20.22.17.40;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	97.07.29.09.28.22;	author niklas;	state Exp;
branches;
next	1.8;

1.8
date	97.07.27.21.41.12;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	97.07.23.06.53.12;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.07.23.03.52.11;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.07.17.05.48.38;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.07.10.22.53.37;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.09.29.21.27.00;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.09.27.15.38.58;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.11;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.11;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Switch time_t, ino_t, clock_t, and struct kevent's ident and data
members to 64bit types.  Assign new syscall numbers for (almost
all) the syscalls that involve the affected types, including anything
with time_t, timeval, itimerval, timespec, rusage, dirent, stat,
or kevent arguments.  Add a d_off member to struct dirent and replace
getdirentries() with getdents(), thus immensely simplifying and
accelerating telldir/seekdir.  Build perl with -DBIG_TIME.

Bump the major on every single base library: the compat bits included
here are only good enough to make the transition; the T32 compat
option will be burned as soon as we've reached the new world are
are happy with the snapshots for all architectures.

DANGER: ABI incompatibility.  Updating to this kernel requires extra
work or you won't be able to login: install a snapshot instead.

Much assistance in fixing userland issues from deraadt@@ and tedu@@
and build assistance from todd@@ and otto@@
@
text
@major=6
minor=0
@


1.14
log
@Add skeychallenge2() which is like skeychallenge() but takes an
already open fd.  Will be used to make separate challenge/response
invocations of login_skey keep the record locked.  Also properly
escape minus signs in man page.  OK henning@@ jmc@@
@
text
@d1 2
a2 2
major=5
minor=1
@


1.13
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d2 1
a2 1
minor=0
@


1.12
log
@Crank all library major numbers.  Needed due to the fact that we
now build libraries with propolice enabled.  Without this, existing
binaries (such as ports/packages) that link with any system library
other than libc will fail with an undefined symbol of "___guard"
(__guard on ELF).
Pointed out by markus@@ and discussed with deraadt@@
@
text
@d1 1
a1 1
major=4
@


1.11
log
@Change S/Key stuff from using a flat file (/etc/skeykeys) to a directory
where each user gets their own file, which is owned by that user.

An old S/Key database may be converted by running "skeyinit -C" as root.

Programs that need to access the S/Key database no longer need to be
setuid root.  They must now be setgid auth instead.
@
text
@d1 1
a1 1
major=3
@


1.10
log
@major number bump
@
text
@d1 1
a1 1
major=2
@


1.9
log
@This case of version number update is a little special and was not well-known
before.  A new general rule has been formed:

	When you change a library to *use* a new API of another library
	(which may there only have given need to a minor number crank), you
	must crank the *major*.

The specific scenario that was seen this time was:

	I	libc 16 started without the SHA interface
	II	libskey 0 did obviously not use it
	III	installation of libc 16 and libskey 0
	IV	software installed that uses libskey
	V	libc 16 got SHA added, minor number update
	VI	libskey 0 was changed to use it
	VII	libc was cranked to 17 for other reasons
	VIII	installation of libc 17 and newer libskey 0
	IX	use of the software installed in IV fails!

This is due to the fact that the libskey using software searches for the most
current libskey 0, which uses the SHA interface, and the most current libc 16
which was the old one installed in III, which does not provide SHA, and thus
gets two incompatible libraries linked with it.  Crash!

One could argue that people should install all library versions that is made
available, but that is really not feasible.  One have to recognize that people
may build their systems at arbitrary points in time and then go on to install
software they know work at their lib revision levels.  A later build should
not break this software, that may only be available in binary versions.
@
text
@d1 1
a1 1
major=1
@


1.8
log
@bump minor
@
text
@d1 2
a2 2
major=0
minor=7
@


1.7
log
@_PATH_SKEYKEYS now lives in <paths.h>
Add skeygetnext() for iterating over the key file.
@
text
@d2 1
a2 1
minor=6
@


1.6
log
@Mode 0600 /etc/skeykeys
@
text
@d2 1
a2 1
minor=5
@


1.5
log
@Add RIPEMD-160 (rmd160) support to OTP (s/key).
@
text
@d2 1
a2 1
minor=4
@


1.4
log
@Use new SHA1* functions.
@
text
@d2 1
a2 1
minor=3
@


1.3
log
@Towards RFC 1938 compliance.  Also, now supports SHA (secure hash algorithm).
@
text
@d2 1
a2 1
minor=2
@


1.2
log
@Deal with both MD4 and MD5 s/key's
@
text
@d2 1
a2 1
minor=1
@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
minor=0
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
