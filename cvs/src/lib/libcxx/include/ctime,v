head     1.1;
branch   1.1.1;
access   ;
symbols  LIBCXX_3_9_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @# @;


1.1
date     2016.09.03.18.39.32;  author patrick;  state Exp;
branches 1.1.1.1;
next     ;
commitid        MvSkdeMvKrC2jO5X;

1.1.1.1
date     2016.09.03.18.39.32;  author patrick;  state Exp;
branches ;
next     ;
commitid        MvSkdeMvKrC2jO5X;


desc
@@



1.1
log
@Initial revision
@
text
@// -*- C++ -*-
//===---------------------------- ctime -----------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_CTIME
#define _LIBCPP_CTIME

/*
    ctime synopsis

Macros:

    NULL
    CLOCKS_PER_SEC

namespace std
{

Types:

    clock_t
    size_t
    time_t
    tm

clock_t clock();
double difftime(time_t time1, time_t time0);
time_t mktime(tm* timeptr);
time_t time(time_t* timer);
char* asctime(const tm* timeptr);
char* ctime(const time_t* timer);
tm*    gmtime(const time_t* timer);
tm* localtime(const time_t* timer);
size_t strftime(char* restrict s, size_t maxsize, const char* restrict format,
                const tm* restrict timeptr);

}  // std

*/

#include <__config>
#include <time.h>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

using ::clock_t;
using ::size_t;
using ::time_t;
using ::tm;
using ::clock;
using ::difftime;
using ::mktime;
using ::time;
#ifndef _LIBCPP_HAS_NO_THREAD_UNSAFE_C_FUNCTIONS
using ::asctime;
using ::ctime;
using ::gmtime;
using ::localtime;
#endif
using ::strftime;

_LIBCPP_END_NAMESPACE_STD

#endif  // _LIBCPP_CTIME
@


1.1.1.1
log
@Import libc++ 3.9.0
@
text
@@
