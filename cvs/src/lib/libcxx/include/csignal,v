head	1.1;
branch	1.1.1;
access;
symbols
	OPENBSD_6_2_BASE:1.1.1.1
	OPENBSD_6_1:1.1.1.1.0.4
	OPENBSD_6_1_BASE:1.1.1.1
	LIBCXX_3_9_0:1.1.1.1
	LLVM:1.1.1;
locks; strict;
comment	@# @;


1.1
date	2016.09.03.18.39.32;	author patrick;	state Exp;
branches
	1.1.1.1;
next	;
commitid	MvSkdeMvKrC2jO5X;

1.1.1.1
date	2016.09.03.18.39.32;	author patrick;	state Exp;
branches;
next	;
commitid	MvSkdeMvKrC2jO5X;


desc
@@



1.1
log
@Initial revision
@
text
@// -*- C++ -*-
//===--------------------------- csignal ----------------------------------===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is dual licensed under the MIT and the University of Illinois Open
// Source Licenses. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//

#ifndef _LIBCPP_CSIGNAL
#define _LIBCPP_CSIGNAL

/*
    csignal synopsis

Macros:

    SIG_DFL
    SIG_ERR
    SIG_IGN
    SIGABRT
    SIGFPE
    SIGILL
    SIGINT
    SIGSEGV
    SIGTERM

namespace std
{

Types:

    sig_atomic_t

void (*signal(int sig, void (*func)(int)))(int);
int raise(int sig);

}  // std

*/

#include <__config>
#include <signal.h>

#if !defined(_LIBCPP_HAS_NO_PRAGMA_SYSTEM_HEADER)
#pragma GCC system_header
#endif

_LIBCPP_BEGIN_NAMESPACE_STD

using ::sig_atomic_t;
using ::signal;
using ::raise;

_LIBCPP_END_NAMESPACE_STD

#endif  // _LIBCPP_CSIGNAL
@


1.1.1.1
log
@Import libc++ 3.9.0
@
text
@@
