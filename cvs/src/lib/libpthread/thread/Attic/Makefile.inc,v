head	1.8;
access;
symbols
	OPENBSD_5_2:1.7.0.22
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.20
	OPENBSD_5_0:1.7.0.18
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.16
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.12
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.10
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.8
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.6
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.4
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.2
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5;
locks; strict;
comment	@# @;


1.8
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.7;

1.7
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.6;

1.6
date	2004.06.07.21.11.23;	author marc;	state Exp;
branches;
next	1.5;

1.5
date	2003.01.20.18.12.11;	author marc;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.05.22.19.55;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.03.23.58.39;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.03.20.36.43;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.06.07.25.15;	author d;	state Exp;
branches;
next	;


desc
@@


1.8
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@# $OpenBSD: Makefile.inc,v 1.7 2007/06/05 18:11:48 kurt Exp $

.PATH: ${SRCDIR}/thread

SRCS+=	thread_tag.c thread_malloc_lock.c thread_mutex.c
@


1.7
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.6 2004/06/07 21:11:23 marc Exp $
@


1.6
log
@
major bump to libc and libpthread to break the dependency of a
particular implementation of libpthread for libc.  libc no longer
needs pthread.h to compile.
OK millert@@, brad@@, tedu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.5 2003/01/20 18:12:11 marc Exp $
d5 1
a5 1
SRCS+=	thread_tag.c thread_malloc_lock.c
@


1.5
log
@
Use the sources that exist in sibdirs of libpthread, not libc_r
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2002/11/05 22:19:55 marc Exp $
d5 1
a5 1
SRCS+=	thread_storage.c thread_malloc_lock.c
@


1.4
log
@
thread safe libc -- 2nd try.   OK miod@@, millert@@
Thanks to miod@@ for m68k and vax fixes
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.3 2002/11/03 23:58:39 marc Exp $
d3 1
a3 1
.PATH: ${LIBC_RSRCDIR}/thread
@


1.3
log
@back out previous patch.. there are still some vax/m68k issues
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2002/11/03 20:36:43 marc Exp $
d5 1
a5 1
SRCS+=	thread_storage.c
@


1.2
log
@
libc changes for thread safety.  Tested on:
alpha (millert@@), i386 (marc@@), m68k (millert@@ and miod@@),
powerpc (drahn@@ and dhartmei@@), sparc (millert@@ and marc@@),
sparc64 (marc@@), and vax (millert@@ and miod@@).
Thanks to millert@@, miod@@, and mickey@@ for fixes along the way.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1 2000/01/06 07:25:15 d Exp $
d5 1
a5 1
SRCS+=	thread_storage.c thread_malloc_lock.c
@


1.1
log
@thread-specific storage helper
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
SRCS+=	thread_storage.c
@

