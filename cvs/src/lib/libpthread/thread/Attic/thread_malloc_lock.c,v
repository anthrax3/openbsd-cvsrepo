head	1.8;
access;
symbols
	OPENBSD_5_2:1.7.0.18
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	OPENBSD_5_0:1.7.0.14
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.12
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.10
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.6
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.8
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.4
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.2
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.6.0.2
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.5.0.8
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.6
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.4
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.2
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@ * @;


1.8
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.7;

1.7
date	2008.06.13.21.18.43;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2008.01.01.00.43.39;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2006.02.22.07.16.32;	author otto;	state Exp;
branches;
next	1.4;

1.4
date	2002.11.05.22.19.55;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.03.23.58.39;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.03.20.36.43;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.14.06.16.37;	author d;	state Exp;
branches;
next	;


desc
@@


1.8
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/* $OpenBSD: thread_malloc_lock.c,v 1.7 2008/06/13 21:18:43 otto Exp $ */
/* Public Domain <marc@@snafu.org> */

#include <pthread.h>
#include "pthread_private.h"

static spinlock_t malloc_lock = _SPINLOCK_INITIALIZER;
static spinlock_t atexit_lock = _SPINLOCK_INITIALIZER;
static spinlock_t arc4_lock = _SPINLOCK_INITIALIZER;

void
_thread_malloc_lock()
{
	_SPINLOCK(&malloc_lock);
}

void
_thread_malloc_unlock()
{
	_SPINUNLOCK(&malloc_lock);
}

void
_thread_atexit_lock()
{
	_SPINLOCK(&atexit_lock);
}

void
_thread_atexit_unlock()
{
	_SPINUNLOCK(&atexit_lock);
}

void
_thread_arc4_lock()
{
	_SPINLOCK(&arc4_lock);
}

void
_thread_arc4_unlock()
{
	_SPINUNLOCK(&arc4_lock);
}
@


1.7
log
@remove _MALLOC_LOCK_INIT; major bump; ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: thread_malloc_lock.c,v 1.6 2008/01/01 00:43:39 kurt Exp $ */
@


1.6
log
@- make arc4random*() functions thread safe. Use a custom spinlock function
instead of the generic pthread macros since free(3) uses __arc4_getbyte()
when freeing small sized allocations and the generic pthread macros call
malloc(3).
- eliminate passing pointers to a static variable with global scope (rs)
for additional code clarity and reduction.
- shlib minor bumps for libc and libpthread due to new functions.
From andreas@@ with some bits from me. okay tedu@@ marc@@ w/some spot
checking from millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: thread_malloc_lock.c,v 1.5 2006/02/22 07:16:32 otto Exp $ */
a20 5
}

void
_thread_malloc_init()
{
@


1.5
log
@Avouid a race in atexit() handling by introducing a lock. Problem
originally reported by Gergely Kovacs; help from dhartmei@@;
ok tedu@@ millert@@
@
text
@d1 1
a1 1
/* $OpenBSD: thread_malloc_lock.c,v 1.4 2002/11/05 22:19:55 marc Exp $ */
d9 1
d38 12
@


1.4
log
@
thread safe libc -- 2nd try.   OK miod@@, millert@@
Thanks to miod@@ for m68k and vax fixes
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d8 1
d25 12
@


1.3
log
@back out previous patch.. there are still some vax/m68k issues
@
text
@d1 3
a5 2
#include "thread_private.h"
#include "spinlock.h"
d19 5
@


1.2
log
@
libc changes for thread safety.  Tested on:
alpha (millert@@), i386 (marc@@), m68k (millert@@ and miod@@),
powerpc (drahn@@ and dhartmei@@), sparc (millert@@ and marc@@),
sparc64 (marc@@), and vax (millert@@ and miod@@).
Thanks to millert@@, miod@@, and mickey@@ for fixes along the way.
@
text
@a0 3
/* $OpenBSD$ */
/* Public Domain <marc@@snafu.org> */

d3 2
a17 5
}

void
_thread_malloc_init()
{
@


1.1
log
@malloc lock helpers
@
text
@d1 3
a5 2
#include "thread_private.h"
#include "spinlock.h"
d19 5
@

