head	1.10;
access;
symbols
	OPENBSD_5_2:1.9.0.36
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.34
	OPENBSD_5_0:1.9.0.32
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.30
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.28
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.24
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.26
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.22
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.20
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.18
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.16
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.14
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.12
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.4
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.8.0.2
	OPENBSD_3_3_BASE:1.8;
locks; strict;
comment	@# @;


1.10
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.9;

1.9
date	2004.02.02.20.43.37;	author brad;	state Exp;
branches;
next	1.8;

1.8
date	2003.02.14.20.23.20;	author jason;	state Exp;
branches;
next	1.7;

1.7
date	2003.02.10.19.21.34;	author marc;	state Exp;
branches;
next	1.6;

1.6
date	2003.01.26.20.24.36;	author jason;	state Exp;
branches;
next	1.5;

1.5
date	2001.12.18.06.24.13;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2001.12.18.06.23.08;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	2001.12.18.03.44.40;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2001.09.10.19.39.27;	author jason;	state Exp;
branches;
next	1.1;

1.1
date	2000.09.25.01.16.40;	author d;	state Exp;
branches;
next	;


desc
@@


1.10
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep_asm.S,v 1.9 2004/02/02 20:43:37 brad Exp $	*/
/* David Leonard <d@@csee.uq.edu.au>. Public domain. */

#include <machine/asm.h>
#include <machine/trap.h>

/*
 * Switch stacks.
 * On sparc this also means we switch register windows.
 */

#define SA(x)	(((x)+7)&(~0x7))
#define MINFRAME ((16+1+6)*4)	

/*
 * void _thread_machdep_switch(newstate, oldstate);
 *	struct _machdep_state *newstate, *oldstate;
 */
ENTRY(_thread_machdep_switch)

	/* new window */
	save	%sp, -SA(MINFRAME), %sp

	/* flush all windows (except current one) into memory frames */
	t ST_FLUSHWIN

	/* switch the stack pointer and return address */
	st 	%fp, [%i1 + 0]
	st	%i7, [%i1 + 4]
	ld	[%i0 + 0], %fp
	ld	[%i0 + 4], %i7

	/* return to saved window at new %fp */
	ret
	restore

/*
 * void _thread_machdep_fpsave(csr, regs)
 *	u_int32_t *csr;
 *	u_int64_t *regs;
 */
ENTRY(_thread_machdep_fpsave)
	/*
	 * If %psr were readable, exitting could be faster.  The EF
	 * bit is only set if the FPU is enabled, and we only need
	 * to save fpu state if it is enabled.  But, RDPSR is a
	 * privileged instruction.
	 */

	/* save registers */
	st	%fsr, [%o0]
	std	%f0, [%o1 + 0 * 8]
	std	%f2, [%o1 + 1 * 8]
	std	%f4, [%o1 + 2 * 8]
	std	%f6, [%o1 + 3 * 8]
	std	%f8, [%o1 + 4 * 8]
	std	%f10, [%o1 + 5 * 8]
	std	%f12, [%o1 + 6 * 8]
	std	%f14, [%o1 + 7 * 8]
	std	%f16, [%o1 + 8 * 8]
	std	%f18, [%o1 + 9 * 8]
	std	%f20, [%o1 + 10 * 8]
	std	%f22, [%o1 + 11 * 8]
	std	%f24, [%o1 + 12 * 8]
	std	%f26, [%o1 + 13 * 8]
	std	%f28, [%o1 + 14 * 8]
	std	%f30, [%o1 + 15 * 8]
	retl
	 nop

/*
 * void _thread_machdep_fprestore(csr, regs)
 *	u_int32_t *csr;
 *	u_int64_t *regs;
 */
ENTRY(_thread_machdep_fprestore)
	ldd	[%o1 + 0 * 8], %f0
	ldd	[%o1 + 1 * 8], %f2
	ldd	[%o1 + 2 * 8], %f4
	ldd	[%o1 + 3 * 8], %f6
	ldd	[%o1 + 4 * 8], %f8
	ldd	[%o1 + 5 * 8], %f10
	ldd	[%o1 + 6 * 8], %f12
	ldd	[%o1 + 7 * 8], %f14
	ldd	[%o1 + 8 * 8], %f16
	ldd	[%o1 + 9 * 8], %f18
	ldd	[%o1 + 10 * 8], %f20
	ldd	[%o1 + 11 * 8], %f22
	ldd	[%o1 + 12 * 8], %f24
	ldd	[%o1 + 13 * 8], %f26
	ldd	[%o1 + 14 * 8], %f28
	ldd	[%o1 + 15 * 8], %f30
	ld	[%o0], %fsr
	/* ldfsr needs three instructions to be stable, ensure that here */
	nop
	retl
	 nop
@


1.9
log
@remove sparcv9 code.

ok marc@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.8 2003/02/14 20:23:20 jason Exp $	*/
@


1.8
log
@- save and restore %fsr, too.
- better function descriptions
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.7 2003/02/10 19:21:34 marc Exp $	*/
a11 6
#ifdef __sparcv9__
#define flushw		.word 0x81580000
#else
#define flushw		t ST_FLUSHWIN
#endif

d25 1
a25 1
	flushw
@


1.7
log
@priviledged -> privileged from David Krause via Henning Brauer
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.6 2003/01/26 20:24:36 jason Exp $	*/
d43 5
d57 1
d77 5
d99 3
@


1.6
log
@save fpu context (needs optimization)
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.5 2001/12/18 06:24:13 fgsch Exp $	*/
d48 1
a48 1
	 * priviledged instruction.
@


1.5
log
@sigh, do it right.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.4 2001/12/18 06:23:08 fgsch Exp $	*/
d43 47
@


1.4
log
@Fix func decl. in comment.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.3 2001/12/18 03:44:40 marc Exp $	*/
d22 1
a22 1
 * void _thread_switch(newstate, oldstate);
@


1.3
log
@
Software invoked traps should use the ST_ versions of the trap number
with the high bit of the trap number stripped per the V8 arch manual.

The stack alignment code was broken.  It tried to align to a 32 byte
boundary (only 8 byte boundary is required) by first adding 15 bytes
then masking.  It could have aligned down.

The minimum frame size was twice the size needed by allocating 8
bytes per saved value instead of the needed 4.   This bug offset
the bug in the stack alignment code.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.2 2001/09/10 19:39:27 jason Exp $	*/
d21 4
a24 1
/* void _thread_switch(int newstate[2], int savestate[2], int flags); */
@


1.2
log
@Our gcc defines __sparcv9__ not __sparc_v9__
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2000/09/25 01:16:40 d Exp $	*/
d15 1
a15 1
#define flushw		t T_FLUSHWIN
d18 2
a19 2
#define SA(x)	(((x)+15)&(~0x1f))
#define MINFRAME ((16+1+6)*8)	
@


1.1
log
@preparation for switch-based threads
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d12 1
a12 1
#ifdef __sparc_v9__
@

