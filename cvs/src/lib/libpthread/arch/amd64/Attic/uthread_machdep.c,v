head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.8
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.6
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.3.0.28
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.24
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.26
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.22
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.20
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.18
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.16
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.6
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.5;

1.5
date	2011.01.04.05.34.09;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2010.12.31.03.02.45;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2004.02.25.04.10.53;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.25.03.48.36;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.28.01.51.40;	author mickey;	state Exp;
branches;
next	;


desc
@@


1.6
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep.c,v 1.5 2011/01/04 05:34:09 guenther Exp $	*/

/*
 * Copyright (c) 2004 Theo de Raadt
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */


#include <machine/param.h>
#include <pthread.h>
#include "pthread_private.h"

struct frame {
	long	fr_gs;
	long	fr_fs;
	long	fr_es;
	long	fr_ds;

	long    flag;
	long	fr_r15;
	long	fr_r14;
	long	fr_r13;
	long	fr_r12;

	long	fr_r11;
	long	fr_r10;
	long	fr_r9;
	long	fr_r8;

	long	fr_rdi;
	long	fr_rsi;
	long	fr_rbp;

	long	fr_rbx;
	long	fr_rdx;
	long	fr_rcx;
	long	fr_rax;

	long	fr_rip;
	int	fr_cs;		/* XXX unreachable? */
	int	pad;
};

#define copyreg(reg, lval) \
	__asm__("mov %%" #reg ", %0" : "=g"(lval))

/*
 * Given a stack and an entry function, initialise a state
 * structure that can be later switched to.
 */
void
_thread_machdep_init(struct _machdep_state* statep, void *base, int len,
    void (*entry)(void))
{
        struct frame *f;
	int foo;

	/* Locate the initial frame, aligned at the top of the stack */
	f = (struct frame *)(((long)base + len - sizeof *f) & ~ALIGNBYTES);

	copyreg(cs, foo);
	f->fr_cs = foo;
	copyreg(ds, foo);
	f->fr_ds = foo;
	copyreg(es, foo);
	f->fr_es = foo;
	copyreg(fs, foo);
	f->fr_fs = foo;
	copyreg(gs, foo);
	f->fr_gs = foo;

	f->fr_rbp = (long)-1;
	f->fr_rip = (long)entry;

	statep->rsp = (long)f;

	_thread_machdep_save_float_state(statep);
}

#define fxsave(addr)		__asm("fxsave %0" : "=m" (*addr))
#define fxrstor(addr)		__asm("fxrstor %0" : : "m" (*addr))
#define fwait()			__asm("fwait")
#define fninit()		__asm("fninit")

void
_thread_machdep_save_float_state(struct _machdep_state *ms)
{
	fxsave(&ms->fpreg);
	fninit();
	fwait();
}

void
_thread_machdep_restore_float_state(struct _machdep_state *ms)
{
	fxrstor(&ms->fpreg);
}
@


1.5
log
@Revert previous commit: if gcc picks a memory operand for the asm then
'movl' will result in an assembler error.  Sorry llvm-clang users: fix
your compiler to match gcc+as
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.4 2010/12/31 03:02:45 guenther Exp $	*/
@


1.4
log
@Make this compile with llvm-clang; problem pointed out by Amit Kulkarni
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.3 2004/02/25 04:10:53 deraadt Exp $	*/
d56 1
a56 1
	__asm__("movl %%" #reg ", %0" : "=g"(lval))
@


1.3
log
@copyrights
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d56 1
a56 1
	__asm__("mov %%" #reg ", %0" : "=g"(lval))
@


1.2
log
@initial working pthreads support from sparc64, done with drahn.  there are
some `debugging features' and other optimizations (such as not saving all
registers) that we can still do perhaps
@
text
@d1 19
@


1.1
log
@the rest of the libs stuff; from art@@ again
@
text
@d5 34
d45 1
a45 1
		     void (*entry)(void))
d47 23
a69 1
	/* dummy */
d72 5
d80 3
a82 1
	/* dummy */
d88 1
a88 1
	/* dummy */
a89 1

@

