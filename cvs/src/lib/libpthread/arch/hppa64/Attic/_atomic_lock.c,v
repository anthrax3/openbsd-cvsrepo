head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.3
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.2;

1.2
date	2011.11.14.15.16.12;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2011.08.04.14.23.36;	author kettenis;	state Exp;
branches;
next	;


desc
@@


1.3
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: _atomic_lock.c,v 1.2 2011/11/14 15:16:12 jsing Exp $	*/
/*
 * Atomic lock for hppa
 */
#include "spinlock.h"

int
_atomic_lock(volatile _spinlock_lock_t *lock)
{
	register register_t old;

	__asm__("ldcws 0(%1), %0" : "=r" (old): "r" (lock));

	return (old == _SPINLOCK_LOCKED);
}
@


1.2
log
@Unbreak build of libpthread on hppa/hppa64 by using correct type in
_atomic_lock() declaration.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: _atomic_lock.c,v 1.2 2002/10/11 19:08:41 marc Exp $	*/
@


1.1
log
@Initial hppa64 code drop; not finished yet, but this at least allows us to
build stuff.

ok deraadt@@
@
text
@d8 1
a8 1
_atomic_lock(volatile register_t *lock)
@

