head	1.2;
access;
symbols;
locks; strict;
comment	@# @;


1.2
date	99.03.10.08.53.04;	author d;	state dead;
branches;
next	1.1;

1.1
date	98.07.21.16.28.03;	author peter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@#include <sys/syscall.h>

#ifdef __STDC__

#define	SYSCALL(x)					\
	.globl _machdep_sys_##x##;		\
									\
_machdep_sys_##x:##;				\
									\
	movl $(SYS_##x##), %eax;		\
	.byte 0x9a; .long 0; .word 7;	\
	jb	1b;							\
	ret;							

#else

#define	SYSCALL(x)					\
	.globl _machdep_sys_/**/x;		\
									\
_machdep_sys_/**/x:;				\
									\
	movl $(SYS_/**/x), %eax;		\
	.byte 0x9a; .long 0; .word 7;	\
	jb	1b;							\
	ret;							

#endif


/*
 * Initial asm stuff for all functions.
 */
	.text
	.align	2


/* ==========================================================================
 * error code for all syscalls. The error value is returned as the negative
 * of the errno value.
 */

1:
	neg		%eax
	ret

#define XSYSCALL(NAME)	SYSCALL(NAME)

XSYSCALL(SYSCALL_NAME)
@


1.1
log
@move unchanged files from machdep/ into appropriate arch/${MACHINE}
directories. These files have been renamed as appropriate, but
hackers of these files should note those that started off as netbsd
files (alpha and sparc).

also moved machdep/openbsd-2.0/ to include/sys/
@
text
@@

