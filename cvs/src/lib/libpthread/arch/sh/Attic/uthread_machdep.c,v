head	1.3;
access;
symbols
	OPENBSD_5_2:1.2.0.24
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.22
	OPENBSD_5_0:1.2.0.20
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.18
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.16
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.12
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.14
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.10
	OPENBSD_4_5_BASE:1.2
	OPENBSD_4_4:1.2.0.8
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.6
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.4
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.2
	OPENBSD_4_1_BASE:1.2;
locks; strict;
comment	@ * @;


1.3
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.2;

1.2
date	2007.03.02.06.11.54;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2007.02.19.21.03.50;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep.c,v 1.2 2007/03/02 06:11:54 miod Exp $	*/

/*
 * Copyright (c) 2007 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice, this permission notice, and the disclaimer below
 * appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <pthread.h>
#include "pthread_private.h"

#define STACK_ALIGNMENT		4

struct regframe {
	/* return address */
	register_t	pr;
	/* call-saved general registers */
	register_t	r14;
	register_t	r13;
	register_t	r12;
	register_t	r11;
	register_t	r10;
	register_t	r9;
	register_t	r8;
	register_t	macl;
	register_t	mach;
#if defined(__SH4__) && !defined(__SH4_NOFPU__)
	/* call-saved floating point registers */
	register_t	fr12;
	register_t	fr13;
	register_t	fr14;
	register_t	fr15;
	register_t	xd12;
	register_t	xd13;
	register_t	xd14;
	register_t	xd15;
	/* floating point control registers */
	register_t	fpul;
	register_t	fpscr;
#endif
};

void
_thread_machdep_init(struct _machdep_state* statep, void *base, int len,
    void (*entry)(void))
{
	struct regframe *regs;

	regs = (struct regframe *)
	    (((u_int32_t)base + len - sizeof *regs) & ~(STACK_ALIGNMENT - 1));
	regs->pr = (register_t)entry;
#if defined(__SH4__) && !defined(__SH4_NOFPU__)
	__asm__ __volatile__ ("sts fpscr, %0" : "=r" (regs->fpscr));
#endif

	statep->sp = (u_int)regs;
}

/*
 * Floating point state is saved with the general registers in
 * _thread_machdep_switch().
 */

void
_thread_machdep_save_float_state(struct _machdep_state* statep)
{
}

void
_thread_machdep_restore_float_state(struct _machdep_state* statep)
{
}
@


1.2
log
@Move landisk to hardware floating point. At the moment the FPU context is
always saved upon context switches, as FPU registers are heavily used for
long long computations (don't ask). Gcc default to -m4.

Credits to drahn@@ otto@@ and deraadt@@ for feedback and help testing.

Upgrade procedure if you don't want to use the damn snapshots:
- build and install new kernel, reboot off it
- build new gcc, do not install it yet
- make includes
- install new gcc
- build and install lib/csu and lib/libc
- make build
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.1 2007/02/19 21:03:50 miod Exp $	*/
@


1.1
log
@pthread bits for sh; help deraadt@@, ok kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d23 1
a23 1
#define STACK_ALIGNMENT		8
d26 1
d28 1
d36 16
d63 3
d69 5
@

