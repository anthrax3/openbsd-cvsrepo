head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@# @;


1.4
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.3;

1.3
date	2004.11.02.21.36.11;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.09.16.59.21;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.41.34;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.4
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep_asm.S,v 1.3 2004/11/02 21:36:11 pefo Exp $	*/
/* David Leonard, <d@@csee.uq.edu.au>. Public domain. */

#include <machine/asm.h>

/*
 *   Save layout:
 *
 *          -----------
 *     +152 |  sp     | 
 *     +144 |  t9     | 
 *          -----------
 *     +136 |  fcr    | 
 *          -----------
 *     +128 |  f31    | 
 *     +120 |  f30    | 
 *     +112 |  f29    | 
 *     +104 |  f28    | 
 *     +96  |  f27    | 
 *     +88  |  f26    | 
 *     +80  |  f25    | 
 *     +72  |  f24    | 
 *          -----------
 *     +64  |  s8     | 
 *     +56  |  s7     | 
 *     +48  |  s6     | 
 *     +40  |  s5     | 
 *     +32  |  s4     | 
 *     +24  |  s3     | 
 *     +16  |  s2     | 
 *     +8   |  s1     | 
 *   sp ->  |  s0     |
 *          -----------
 */

#define SOFF(n)		((n)*REGSZ)
#define FPOFF(n)	(SOFF(9) + (n)*8)
#define REGOFF(n)	(FPOFF(9) + (n)*REGSZ)

#define FRAMESIZE	(REGOFF(2) + REGSZ*4+REGSZ+REGSZ)

NON_LEAF(_thread_machdep_switch, FRAMESIZE, ra)
	PTR_ADDU sp, sp, -FRAMESIZE

	REG_S	s0, SOFF(0)(sp)
	REG_S	s1, SOFF(1)(sp)
	REG_S	s2, SOFF(2)(sp)
	REG_S	s3, SOFF(3)(sp)
	REG_S	s4, SOFF(4)(sp)
	REG_S	s5, SOFF(5)(sp)
	REG_S	s6, SOFF(6)(sp)
	REG_S	s7, SOFF(7)(sp)
	REG_S	s8, SOFF(8)(sp)
	s.d	$f24, FPOFF(0)(sp)
	s.d	$f25, FPOFF(1)(sp)
	s.d	$f26, FPOFF(2)(sp)
	s.d	$f27, FPOFF(3)(sp)
	s.d	$f28, FPOFF(4)(sp)
	s.d	$f29, FPOFF(5)(sp)
	s.d	$f30, FPOFF(6)(sp)
	s.d	$f31, FPOFF(7)(sp)
	REG_S	t9, REGOFF(0)(sp)
	REG_S	ra, REGOFF(1)(sp)
	cfc1	t9, $31
	REG_S	t9, FPOFF(8)(sp)

	REG_S	sp, 0(a1)
	REG_L	sp, 0(a0)

	.set	noreorder		/* avoid nops */
	REG_L	t9, FPOFF(8)(sp)
	ctc1	t9, $31
	REG_L	ra, REGOFF(1)(sp)
	REG_L	t9, REGOFF(0)(sp)
	l.d	$f24, FPOFF(0)(sp)
	l.d	$f25, FPOFF(1)(sp)
	l.d	$f26, FPOFF(2)(sp)
	l.d	$f27, FPOFF(3)(sp)
	l.d	$f28, FPOFF(4)(sp)
	l.d	$f29, FPOFF(5)(sp)
	l.d	$f30, FPOFF(6)(sp)
	l.d	$f31, FPOFF(7)(sp)
	REG_L	s8, SOFF(8)(sp)
	REG_L	s7, SOFF(7)(sp)
	REG_L	s6, SOFF(6)(sp)
	REG_L	s5, SOFF(5)(sp)
	REG_L	s4, SOFF(4)(sp)
	REG_L	s3, SOFF(3)(sp)
	REG_L	s2, SOFF(2)(sp)
	REG_L	s1, SOFF(1)(sp)
	REG_L	s0, SOFF(0)(sp)
	.set	reorder

	PTR_ADDU sp, sp, FRAMESIZE
	j	ra
END(_thread_machdep_switch)
@


1.3
log
@Convert float register save to new 64 bit ABI requirements.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.2 2004/09/09 16:59:21 pefo Exp $	*/
@


1.2
log
@ couple of changes (int -> long) to handle 64 bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2004/08/11 17:41:34 pefo Exp $	*/
d6 30
d37 2
a38 2
#define FPOFF(n)	(SOFF(9) + REGSZ + (n)*8)
#define REGOFF(n)	(FPOFF(3) + (n)*REGSZ)
d54 8
a61 3
	s.d	$f0, FPOFF(0)(sp)	/* XXX why? */
	s.d	$f2, FPOFF(1)(sp)
	s.d	$f4, FPOFF(2)(sp)
d64 2
d71 2
d75 8
a82 3
	l.d	$f4, FPOFF(2)(sp)
	l.d	$f2, FPOFF(1)(sp)
	l.d	$f0, FPOFF(0)(sp)
@


1.1
log
@mips->mips64
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep_asm.S,v 1.1 2000/10/03 02:44:15 d Exp $	*/
d6 3
a8 3
#define SOFF(n)		((n)*4)
#define FPOFF(n)	(SOFF(9) + 4 + (n)*8)
#define REGOFF(n)	(FPOFF(3) + (n)*4)
d10 1
a10 1
#define FRAMESIZE	(REGOFF(2) + 4*4+4+4)
d13 1
a13 1
	add	sp, sp, -FRAMESIZE
d15 9
a23 9
	sw	s0, SOFF(0)(sp)
	sw	s1, SOFF(1)(sp)
	sw	s2, SOFF(2)(sp)
	sw	s3, SOFF(3)(sp)
	sw	s4, SOFF(4)(sp)
	sw	s5, SOFF(5)(sp)
	sw	s6, SOFF(6)(sp)
	sw	s7, SOFF(7)(sp)
	sw	s8, SOFF(8)(sp)
d27 2
a28 2
	sw	t9, REGOFF(0)(sp)
	sw	ra, REGOFF(1)(sp)
d30 2
a31 2
	sw	sp, 0(a1)
	lw	sp, 0(a0)
d34 2
a35 2
	lw	ra, REGOFF(1)(sp)
	lw	t9, REGOFF(0)(sp)
d39 9
a47 9
	lw	s8, SOFF(8)(sp)
	lw	s7, SOFF(7)(sp)
	lw	s6, SOFF(6)(sp)
	lw	s5, SOFF(5)(sp)
	lw	s4, SOFF(4)(sp)
	lw	s3, SOFF(3)(sp)
	lw	s2, SOFF(2)(sp)
	lw	s1, SOFF(1)(sp)
	lw	s0, SOFF(0)(sp)
d50 1
a50 1
	add	sp, sp, FRAMESIZE
@

