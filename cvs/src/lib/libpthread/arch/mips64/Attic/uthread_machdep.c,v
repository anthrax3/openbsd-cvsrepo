head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.30
	OPENBSD_5_0:1.3.0.28
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.26
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.24
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.20
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.22
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.18
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.16
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.14
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.12
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.10
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.8
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.6
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.4
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.2
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.3;

1.3
date	2004.11.02.21.36.11;	author pefo;	state Exp;
branches;
next	1.2;

1.2
date	2004.09.09.16.59.21;	author pefo;	state Exp;
branches;
next	1.1;

1.1
date	2004.08.11.17.41.34;	author pefo;	state Exp;
branches;
next	;


desc
@@


1.4
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep.c,v 1.3 2004/11/02 21:36:11 pefo Exp $	*/
/* David Leonard, <d@@csee.uq.edu.au>. Public domain. */

/*
 * Machine-dependent thread state functions for OpenBSD/mips
 */

#include <pthread.h>
#include "pthread_private.h"

#define ALIGNBYTES	0x3

struct frame {
	long	s[9];	/* s0..s8 */
	double	f[8];	/* $f24..$f31 */
	long	fcr;
	long	t9;	/* XXX only used when bootstrapping */
	long	ra;

/* XXX args should not be here for N32 or N64 ABIs */
	long	arg[4], cra, cfp;  /* ABI space for debuggers */
};

/*
 * Given a stack and an entry function, initialise a state
 * structure that can be later switched to.
 */
void
_thread_machdep_init(statep, base, len, entry)
	struct _machdep_state* statep;
	void *base;
	int len;
	void (*entry)(void);
{
	struct frame *f;

	/* Locate the initial frame, aligned at the top of the stack */
	f = (struct frame *)(((long)base + len - sizeof *f) & ~ALIGNBYTES);
	
	f->ra = (long)entry;
	f->t9 = (long)entry;
	f->fcr = 0;

	statep->frame = (long)f;
}

void
_thread_machdep_save_float_state(statep)
	struct _machdep_state* statep;
{
}

void
_thread_machdep_restore_float_state(statep)
	struct _machdep_state* statep;
{
}
@


1.3
log
@Convert float register save to new 64 bit ABI requirements.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.2 2004/09/09 16:59:21 pefo Exp $	*/
@


1.2
log
@ couple of changes (int -> long) to handle 64 bits.
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.1 2004/08/11 17:41:34 pefo Exp $	*/
d14 3
a16 3
	long	s[9];	/* s0..s7 */
	long	_fill;
	double	f[3];	/* $f0..$f2 */
a39 1
	f->cra = f->cfp = 0;			/* for debugger */
d42 1
@


1.1
log
@mips->mips64
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_machdep.c,v 1.1 2000/10/03 02:44:15 d Exp $	*/
d14 2
a15 2
	int	s[9];	/* s0..s7 */
	int	_fill;
d17 2
a18 2
	int	t9;	/* XXX only used when bootstrapping */
	int	ra;
d20 2
a21 1
	int	arg[4], cra, cfp;  /* ABI space for debuggers */
d38 1
a38 1
	f = (struct frame *)(((int)base + len - sizeof *f) & ~ALIGNBYTES);
d41 2
a42 2
	f->ra = (int)entry;
	f->t9 = (int)entry;
d44 1
a44 1
	statep->frame = (int)f;
@

