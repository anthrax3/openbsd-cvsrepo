head	1.6;
access;
symbols
	OPENBSD_5_2:1.5.0.40
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.38
	OPENBSD_5_0:1.5.0.36
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.34
	OPENBSD_4_9_BASE:1.5
	OPENBSD_4_8:1.5.0.32
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.28
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.30
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.26
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.24
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.22
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.20
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.18
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.16
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.14
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.12
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.10
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.8
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.6
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.4
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.2
	OPENBSD_3_3_BASE:1.5;
locks; strict;
comment	@ * @;


1.6
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.5;

1.5
date	2000.10.04.05.55.35;	author d;	state Exp;
branches;
next	1.4;

1.4
date	99.11.25.07.01.29;	author d;	state Exp;
branches;
next	1.3;

1.3
date	99.04.21.03.45.21;	author rahnds;	state Exp;
branches;
next	1.2;

1.2
date	99.01.17.23.49.49;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.12.21.07.22.26;	author d;	state Exp;
branches;
next	;


desc
@@


1.6
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_machdep.h,v 1.5 2000/10/04 05:55:35 d Exp $	*/
/* David Leonard, <d@@csee.uq.edu.au>. Public domain. */

struct _machdep_state {
	int	frame;
};

@


1.5
log
@switch to _machdep_switch() instead of setjmp/longjmp. For some reason this fixes sparc threads.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.4
log
@sync with FreeBSD
@
text
@d1 2
a2 5
/*
 * OpenBSD/powerpc machine-dependent thread macros
 *
 * $OpenBSD: uthread_machdep.h,v 1.3 1999/04/21 03:45:21 rahnds Exp $
 */
d4 2
a5 37
/* save the floating point state of a thread */
#define _thread_machdep_save_float_state(thr) 		\
	{						\
		/* rahnds to fill in */			\
	}

/* restore the floating point state of a thread */
#define _thread_machdep_restore_float_state(thr) 	\
	{						\
		/* rahnds to fill in */			\
	}

#define JMP_r1  (0x04/4)
#define JMP_lr  (0x50/4)
/* initialise the jmpbuf stack frame so it continues from entry */
#define _thread_machdep_thread_create(thr, entry, pattr)	\
	{						\
		(thr)->saved_jmp_buf[JMP_lr] =		\
			(unsigned int) entry;		\
		(thr)->saved_jmp_buf[JMP_r1] =		\
			((unsigned int) (thr)->stack->base	\
			+ (thr)->stack->size		\
			- 0x4) & ~0xf;			\
		{					\
			unsigned int *pbacklink =	\
				(thr)->saved_jmp_buf[JMP_r1]; \
			*pbacklink = 0;			\
		}					\
	}

#define	_thread_machdep_longjmp(a,v)	longjmp(a,v)
#define	_thread_machdep_setjmp(a)	setjmp(a)

typedef jmp_buf _machdep_jmp_buf;

struct _machdep_struct {
        char            xxx;
@


1.3
log
@First cut at powerpc support for uthread. Not complete.
@
text
@d4 1
a4 1
 * $OpenBSD: uthread_machdep.h,v 1.2 1999/01/17 23:49:49 d Exp $
d27 2
a28 2
			((unsigned int) (thr)->stack	\
			+ (pattr)->stacksize_attr	\
@


1.2
log
@mi+md jmp_buf; save i386s fs and gs for WINE (csapuntz@@stanford.edu)
@
text
@d4 1
a4 1
 * $OpenBSD: uthread_machdep.h,v 1.1 1998/12/21 07:22:26 d Exp $
d19 2
d24 11
a34 1
		/* rahnds to fill in */			\
@


1.1
log
@unfinished powerpc md stuff.. rahnds?
@
text
@d4 1
a4 1
 * $OpenBSD$
d27 2
@

