head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.16
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.22
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.20
	OPENBSD_5_0:1.8.0.18
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.16
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.14
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.8.0.10
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.8.0.12
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.8
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.6
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.4
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.2
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.7.0.16
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.14
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.12
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.10
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.6.0.2
	OPENBSD_3_3_BASE:1.6;
locks; strict;
comment	@.\" @;


1.10
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.11.21.21.18;	author matthew;	state Exp;
branches;
next	1.8;

1.8
date	2007.05.31.19.19.37;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.18.13.06.33;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2003.02.20.18.59.12;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2002.11.09.20.34.01;	author fgsch;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.21.20.12.19;	author fgsch;	state Exp;
branches;
next	1.3;

1.3
date	99.07.07.10.50.05;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.05.16.19.55.46;	author alex;	state Exp;
branches;
next	1.1;

1.1
date	99.03.22.04.12.57;	author d;	state Exp;
branches;
next	;


desc
@@


1.10
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: pthread_sigmask.3,v 1.9 2012/09/11 21:21:18 matthew Exp $
.\"
.\"
.\"  David Leonard, 1999. Public Domain.
.\"
.Dd $Mdocdate: September 11 2012 $
.Dt PTHREAD_SIGMASK 3
.Os
.Sh NAME
.Nm pthread_sigmask
.Nd examine and/or change a thread's signal mask
.Sh SYNOPSIS
.In signal.h
.Ft int
.Fn pthread_sigmask "int how" "const sigset_t *set" "sigset_t *oset"
.Sh DESCRIPTION
The
.Fn pthread_sigmask
function examines and/or changes the calling thread's signal mask.
.Pp
If
.Fa set
is not
.Dv NULL ,
it specifies a set of signals to be modified, and
.Fa how
specifies what to set the signal mask to:
.Bl -tag -width SIG_UNBLOCK
.It Dv SIG_BLOCK
Union of the current mask and
.Fa set .
.It Dv SIG_UNBLOCK
Intersection of the current mask and the complement of
.Fa set .
.It Dv SIG_SETMASK
.Fa set .
.El
.Pp
If
.Fa oset
is not NULL, the previous signal mask is stored in the location pointed to by
.Fa oset .
.Pp
.Dv SIGKILL
and
.Dv SIGSTOP
cannot be blocked, and will be silently ignored if included in the signal mask.
.Sh RETURN VALUES
If successful,
.Fn pthread_sigmask
returns 0.
Otherwise, an error is returned.
.Sh ERRORS
.Fn pthread_sigmask
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa how
is not one of the defined values.
.El
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr sigpending 2 ,
.Xr sigprocmask 2 ,
.Xr sigsuspend 2 ,
.Xr pthreads 3 ,
.Xr sigsetops 3
.Sh STANDARDS
.Fn pthread_sigmask
conforms to
.St -p1003.1-96 .
@


1.9
log
@pthread_sigmask() doesn't require <pthread.h>, only <signal.h>.
Pointed out by Brad.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_sigmask.3,v 1.8 2007/05/31 19:19:37 jmc Exp $
d6 1
a6 1
.Dd $Mdocdate: May 31 2007 $
d13 1
a13 1
.Fd #include <signal.h>
@


1.8
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_sigmask.3,v 1.7 2003/05/18 13:06:33 jmc Exp $
d6 1
a6 1
.Dd $Mdocdate$
a12 1
.Fd #include <pthread.h>
@


1.7
log
@- typos
- new sentence, new line
- clean up .Xrs
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_sigmask.3,v 1.6 2003/02/20 18:59:12 jmc Exp $
d6 1
a6 1
.Dd March 21, 1999
@


1.6
log
@copyrights added;

these are all David Leonard, and Public Domain
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_sigmask.3,v 1.5 2002/11/09 20:34:01 fgsch Exp $
d67 2
a68 2
.Xr sigsetops 3 ,
.Xr pthreads 3
@


1.5
log
@remove unused manpages (already in libc) and reorder SEE ALSO; marc@@ ok.
@
text
@d1 4
a4 1
.\" $OpenBSD: pthread_sigmask.3,v 1.3 1999/07/07 10:50:05 aaron Exp $
@


1.4
log
@Use .St for standards. Random cleanups as well.
@
text
@d63 1
a64 1
.Xr sigsuspend 2 ,
@


1.3
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 2
a2 1
.\" $OpenBSD: pthread_sigmask.3,v 1.2 1999/05/16 19:55:46 alex Exp $
d8 1
a8 1
.Nd manipulate the current thread's signal mask
d17 29
a45 3
function is identical to
.Xr sigprocmask 2 ,
except that it only affects the signal mask of the calling thread.
d47 5
a51 1
The return values of
d53 6
a58 2
are the same as
.Xr sigprocmask 2 .
d60 2
d63 2
d68 2
a69 3
conforms to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.2
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_sigmask.3,v 1.1 1999/03/22 04:12:57 d Exp $
d3 1
a4 1
.Dt PTHREAD_SIGMASK 3
@


1.1
log
@new documentation
@
text
@d1 1
a1 1
.\" $OpenBSD$
d25 2
a26 2
.Xr pthreads 3 ,
.Xr sigprocmask 2 .
@

