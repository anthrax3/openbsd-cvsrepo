head	1.13;
access;
symbols
	OPENBSD_6_2:1.13.0.2
	OPENBSD_6_2_BASE:1.13
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13
	OPENBSD_6_0:1.12.0.14
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.10
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.12
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.4
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.8
	OPENBSD_5_6_BASE:1.12
	OPENBSD_5_5:1.12.0.6
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.2
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.11.0.24
	OPENBSD_5_3_BASE:1.11
	OPENBSD_5_2:1.11.0.22
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.20
	OPENBSD_5_0:1.11.0.18
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.16
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.14
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.10
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.12
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.8
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.6
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.4
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.2
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.10.0.18
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.16
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.14
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.12
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.10.0.10
	OPENBSD_3_7_BASE:1.10
	OPENBSD_3_6:1.10.0.8
	OPENBSD_3_6_BASE:1.10
	OPENBSD_3_5:1.10.0.6
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.10.0.4
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.10.0.2
	OPENBSD_3_3_BASE:1.10;
locks; strict;
comment	@.\" @;


1.13
date	2017.01.27.15.47.47;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	PpDzsZrbqjmuWm4U;

1.12
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2007.05.31.19.19.36;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.9;

1.9
date	2002.02.21.20.12.19;	author fgsch;	state Exp;
branches;
next	1.8;

1.8
date	2001.08.03.21.10.23;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.11.24.05.35.32;	author d;	state Exp;
branches;
next	1.6;

1.6
date	99.07.09.13.35.24;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.02.21.13.01;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.03.22.04.20.04;	author d;	state Exp;
branches;
next	1.3;

1.3
date	99.03.10.10.04.41;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.11.09.03.13.15;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.08.27.09.00.42;	author d;	state Exp;
branches;
next	;


desc
@@


1.13
log
@new sentence, new line
@
text
@.\" $OpenBSD: pthread_exit.3,v 1.12 2013/06/05 03:44:50 tedu Exp $
.\"
.\" Copyright (c) 1996 John Birrell <jb@@cimlogic.com.au>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by John Birrell.
.\" 4. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: pthread_exit.3,v 1.7 1999/08/28 00:03:06 peter Exp $
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt PTHREAD_EXIT 3
.Os
.Sh NAME
.Nm pthread_exit
.Nd terminate the calling thread
.Sh SYNOPSIS
.In pthread.h
.Ft void
.Fn pthread_exit "void *value_ptr"
.Sh DESCRIPTION
The
.Fn pthread_exit
function terminates the calling thread and makes the value
.Fa value_ptr
available to any successful join with the terminating thread.
Any
cancellation cleanup handlers that have been pushed and are not yet popped
are popped in the reverse order that they were pushed and then executed.
After all cancellation handlers have been executed, if the thread has any
thread-specific data, appropriate destructor functions are called in an
unspecified order.
Thread termination does not release any application
visible process resources, including, but not limited to, mutexes and
file descriptors, nor does it perform any process level cleanup
actions, including, but not limited to, calling
.Fn atexit
routines that may exist.
.Pp
An implicit call to
.Fn pthread_exit
is made when a thread other than the thread in which
.Fn main
was first invoked returns from the start routine that was used to
create it.
The function's return value serves as the thread's exit status.
.Pp
The behavior of
.Fn pthread_exit
is undefined if called from a cancellation handler or destructor function
that was invoked as the result of an implicit or explicit call to
.Fn pthread_exit .
.Pp
After a thread has terminated, the result of access to local (auto)
variables of the thread is undefined.
Thus, references to local variables
of the exiting thread should not be used for the
.Fn pthread_exit
.Fa value_ptr
parameter value.
.Pp
The process will exit with an exit status of 0 after the last thread has
been terminated.
The behavior is as if the implementation called
.Fn exit
with a zero argument at thread termination time.
.Sh RETURN VALUES
The
.Fn pthread_exit
function cannot return to its caller.
.Sh ERRORS
None.
.Sh SEE ALSO
.Xr _exit 2 ,
.Xr exit 3 ,
.Xr pthread_create 3 ,
.Xr pthread_join 3
.Sh STANDARDS
.Fn pthread_exit
conforms to
.St -p1003.1-96 .
@


1.12
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_exit.3,v 1.11 2007/05/31 19:19:36 jmc Exp $
d35 1
a35 1
.Dd $Mdocdate: May 31 2007 $
d68 3
a70 2
was first invoked returns from the start routine that was used to create
it. The function's return value serves as the thread's exit status.
@


1.11
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_exit.3,v 1.10 2002/05/01 08:03:30 mpech Exp $
d35 1
a35 1
.Dd $Mdocdate$
d42 1
a42 1
.Fd #include <pthread.h>
@


1.10
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_exit.3,v 1.9 2002/02/21 20:12:19 fgsch Exp $
d35 1
a35 1
.Dd April 4, 1996
@


1.9
log
@Use .St for standards. Random cleanups as well.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_exit.3,v 1.8 2001/08/03 21:10:23 deraadt Exp $
d50 2
a51 1
available to any successful join with the terminating thread. Any
d56 2
a57 1
unspecified order. Thread termination does not release any application
d78 2
a79 1
variables of the thread is undefined. Thus, references to local variables
d86 2
a87 1
been terminated. The behavior is as if the implementation called
@


1.8
log
@typo; krapht@@secureops.com
@
text
@d1 2
a2 1
.\" $OpenBSD: pthread_exit.3,v 1.7 1999/11/24 05:35:32 d Exp $
d99 2
a100 3
conforms to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.7
log
@Add FreeBSD tags
@
text
@d1 1
a1 1
.\" $OpenBSD$
d70 1
a70 1
is undefied if called from a cancellation handler or destructor function
@


1.6
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
d31 2
@


1.5
log
@remove redundant .Pp macros
@
text
@d71 1
a71 1
After a thread has terminated, the result of access to local (auto) 
@


1.4
log
@minor fixes
@
text
@a81 1
.Pp
a87 1
.Pp
@


1.3
log
@Fix .Os so that correct OS version appears
@
text
@d92 1
a92 1
.Xr exit 2 ,
@


1.2
log
@sync with FreeBSD (rwlock, gc thread, man pages)
add (broken) mips md stuff
fix some const warnings
add sigaltstack() stub
another hash at getting shlib auto-init to work (mips/elf and i386/a.out)
@
text
@d33 1
a33 1
.Os BSD 4
@


1.1
log
@experimental threaded libc - kernel only
@
text
@a90 1
.Xr pthreads 3 ,
@

