head	1.5;
access;
symbols
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.18
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.24
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.22
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.20
	OPENBSD_5_0:1.4.0.18
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.16
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.14
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.10
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.12
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.8
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.6
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.14
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.12
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.10
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.8
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.6
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.4
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@.\" @;


1.5
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2007.05.31.19.19.37;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.25.14.48.32;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.16.05.33.16;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.23.17.19;	author marc;	state Exp;
branches;
next	;


desc
@@


1.5
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: pthread_yield.3,v 1.4 2007/05/31 19:19:37 jmc Exp $
.\"
.\" PUBLIC DOMAIN: No Rights Reserved. Marco S Hyman <marc@@snafu.org>
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt PTHREAD_YIELD 3
.Os
.Sh NAME
.Nm pthread_yield
.Nd yield control of the current thread
.Sh SYNOPSIS
.In pthread.h
.Ft void
.Fn pthread_yield "void"
.Sh DESCRIPTION
The
.Fn pthread_yield
function resets the accumulated time slice of the current thread and then
enters the thread scheduler, which resumes execution of the next thread ready
to run.
If no other thread is ready to run, control returns to the current thread.
.Sh SEE ALSO
.Xr pthreads 3
.Sh STANDARDS
.Fn pthread_yield
is a non-portable (but quite common) extension to
.St -p1003.1-2001 .
@


1.4
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_yield.3,v 1.3 2004/01/25 14:48:32 jmc Exp $
d5 1
a5 1
.Dd $Mdocdate$
d12 1
a12 1
.Fd #include <pthread.h>
@


1.3
log
@use new .St macro;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_yield.3,v 1.2 2004/01/16 05:33:16 jmc Exp $
d5 1
a5 1
.Dd January 15, 2004
@


1.2
log
@add some commas;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_yield.3,v 1.1 2004/01/15 23:17:19 marc Exp $
d27 1
a27 1
.St -p1003.1-01 .
@


1.1
log
@
man pages for thread_yield and pthread_stackseg_np
jmc asked for them, now he can make them look pretty
@
text
@d1 1
a1 1
.\" $OpenBSD$
d19 1
a19 1
enters the thread scheduler which resumes execution of the next thread ready
d21 1
a21 1
If no other thread is ready to run control returns to the current thread.
@

