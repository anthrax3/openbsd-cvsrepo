head	1.2;
access;
symbols
	OPENBSD_6_1_BASE:1.2
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.18
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.16
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.14
	OPENBSD_5_0:1.1.0.12
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.10
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.8
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2008.12.18.09.30.32;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: pthread_attr_setguardsize.3,v 1.1 2008/12/18 09:30:32 guenther Exp $
.\" Manual page derived from TOG's XPG6 documentation.
.\"
.\"  David Leonard, 2000. Public Domain.
.\"
.Dd $Mdocdate: December 18 2008 $
.Dt PTHREAD_ATTR_SETGUARDSIZE 3
.Os
.Sh NAME
.Nm pthread_attr_setguardsize ,
.Nm pthread_attr_getguardsize
.Nd set and get guardsize attribute
.Sh SYNOPSIS
.In pthread.h
.Ft int
.Fn pthread_attr_setguardsize "pthread_attr_t *attr" "size_t guardsize"
.Ft int
.Fn pthread_attr_getguardsize "const pthread_attr_t *attr" "size_t *guardsize"
.Sh DESCRIPTION
The functions
.Fn pthread_attr_setguardsize
and
.Fn pthread_attr_getguardsize ,
respectively, set and get the thread
creation
.Va guardsize
attribute in the
.Fa attr
object.
If
.Va guardsize
is zero,
a guard area shall not be provided for threads created with
.Fa attr .
If
.Va guardsize
is greater than zero,
a guard area of at least size
.Va guardsize
bytes shall be provided for each thread created with
.Fa attr .
.Pp
The
.Va guardsize
attribute controls the size of the guard area for the created
thread's stack.
The
.Va guardsize
attribute provides protection against overflow of the stack pointer.
If a thread's stack is created with guard protection,
the implementation allocates extra memory at the overflow end of
the stack as a buffer against stack overflow of the stack pointer.
If an application overflows into this buffer an error shall result
(possibly in a SIGSEGV signal being delivered to the thread).
.Sh RETURN VALUES
Upon successful completion,
.Fn pthread_attr_setguardsize
and
.Fn pthread_attr_getguardsize
return a value of 0.
Otherwise, an error number is returned to indicate the error.
.Pp
The
.Fn pthread_attr_getguardsize
function stores the
.Va guardsize
attribute value in
.Fa guardsize
if successful.
.Sh ERRORS
No errors are defined.
.Pp
These functions will not return an error code of
.Bq Er EINTR .
.Sh SEE ALSO
.Xr pthread_attr_init 3 ,
.Xr pthread_attr_setdetachstate 3 ,
.Xr pthread_attr_setstack 3 ,
.Xr pthread_attr_setstackaddr 3 ,
.Xr pthread_attr_setstacksize 3 ,
.Xr pthread_create 3 ,
.Xr pthreads 3
.Sh STANDARDS
.Fn pthread_attr_setguardsize
and
.Fn pthread_attr_getguardsize
conform to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1, 2004 Edition.
@


1.1
log
@Add pthread_attr_[sg]etguardsize() to match rthread, including manpages
Bump lib minor

ok otto@@ kurt@@ marc@@; doc review by jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.8 2008/07/05 08:03:57 guenther Exp $
d6 1
a6 1
.Dd $Mdocdate: July 5 2008 $
d14 1
a14 1
.Fd #include <pthread.h>
@

