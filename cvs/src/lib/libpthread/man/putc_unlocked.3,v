head	1.4;
access;
symbols
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.14
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.10
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.12
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.4.0.4
	OPENBSD_5_7_BASE:1.4
	OPENBSD_5_6:1.4.0.8
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.6
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.2
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.3.0.24
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.22
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.20
	OPENBSD_5_0:1.3.0.18
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.16
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.14
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.10
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.12
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.8
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.6
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.18
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.16
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.14
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.12
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.10
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.8
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.6
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.4
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.2.0.2
	OPENBSD_3_3_BASE:1.2;
locks; strict;
comment	@.\" @;


1.4
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.31.19.19.37;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	99.07.07.10.50.05;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.03.22.04.12.57;	author d;	state Exp;
branches;
next	;


desc
@@


1.4
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: putc_unlocked.3,v 1.3 2007/05/31 19:19:37 jmc Exp $
.\" David Leonard <d@@openbsd.org>, 1998. Public domain.
.Dd $Mdocdate: May 31 2007 $
.Dt PUTC_UNLOCKED 3
.Os
.Sh NAME
.Nm putc_unlocked ,
.Nm putchar_unlocked
.Nd put next character from stream, efficiently
.Sh SYNOPSIS
.In stdio.h
.Ft int
.Fn putc_unlocked "int c" "FILE *stream"
.Ft int
.Fn putchar_unlocked "int c"
.Sh DESCRIPTION
The
.Fn putc_unlocked
and
.Fn putchar_unlocked
functions are equivalent to their locked counterparts,
.Xr putc 3
and
.Xr putchar 3 .
However,
.Fn putc_unlocked
and
.Fn putchar_unlocked
assume that the relevant stream has either been previous locked
with
.Xr flockfile 3 ,
or that it will not be accessed by any other thread.
.Sh RETURN VALUES
The return values are as described for
.Xr putc 3
and
.Xr putchar 3 .
.Sh SEE ALSO
.Xr putc 3 ,
.Xr putchar 3
.Sh STANDARDS
.Fn putc_unlocked
and
.Fn putchar_unlocked
conform to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.3
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: putc_unlocked.3,v 1.2 1999/07/07 10:50:05 aaron Exp $
d3 1
a3 1
.Dd $Mdocdate$
d11 1
a11 1
.Fd #include <stdio.h>
@


1.2
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 1
a1 1
.\" $OpenBSD: putc_unlocked.3,v 1.1 1999/03/22 04:12:57 d Exp $
d3 1
a3 1
.Dd March 20, 1999
@


1.1
log
@new documentation
@
text
@d1 1
a1 1
.\" $OpenBSD$
d4 1
a5 1
.Dt PUTC_UNLOCKED 3
@

