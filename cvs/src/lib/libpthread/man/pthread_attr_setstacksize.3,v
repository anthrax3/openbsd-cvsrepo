head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.14
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.10
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.12
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.4
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.8
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.6
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.2
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.9.0.18
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.16
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.14
	OPENBSD_5_0:1.9.0.12
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.10
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.6.0.14
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@.\" @;


1.10
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2008.12.18.09.30.32;	author guenther;	state Exp;
branches;
next	1.8;

1.8
date	2008.07.05.08.03.57;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.19.36;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2004.02.16.22.48.40;	author brad;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.08.09.01.15;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.20.18.59.12;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2001.06.24.18.17.30;	author jasoni;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.12.21.48.02;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.06.06.15.30;	author d;	state Exp;
branches;
next	;


desc
@@


1.10
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.9 2008/12/18 09:30:32 guenther Exp $
.\" Manual page derived from TOG's UNIX98 documentation.
.\"
.\"  David Leonard, 2000. Public Domain.
.\"
.Dd $Mdocdate: December 18 2008 $
.Dt PTHREAD_ATTR_SETSTACKSIZE 3
.Os
.Sh NAME
.Nm pthread_attr_setstacksize ,
.Nm pthread_attr_getstacksize
.Nd set and get stacksize attribute
.Sh SYNOPSIS
.In pthread.h
.Ft int
.Fn pthread_attr_setstacksize "pthread_attr_t *attr" "size_t stacksize"
.Ft int
.Fn pthread_attr_getstacksize "const pthread_attr_t *attr" "size_t *stacksize"
.Sh DESCRIPTION
The functions
.Fn pthread_attr_setstacksize
and
.Fn pthread_attr_getstacksize ,
respectively, set and get the thread
creation
.Va stacksize
attribute in the
.Fa attr
object.
.Pp
The
.Va stacksize
attribute defines the minimum stack size (in bytes)
allocated for the created thread's stack.
.Sh RETURN VALUES
Upon successful completion,
.Fn pthread_attr_setstacksize
and
.Fn pthread_attr_getstacksize
return a value of 0.
Otherwise, an error number is returned to indicate the error.
.Pp
The
.Fn pthread_attr_getstacksize
function stores the
.Va stacksize
attribute value in
.Fa stacksize
if successful.
.Sh ERRORS
The
.Fn pthread_attr_setstacksize
function will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value of
.Fa stacksize
is less than
.Dv PTHREAD_STACK_MIN
or exceeds a system-imposed limit.
.El
.Pp
These functions will not return an error code of
.Bq Er EINTR .
.Sh SEE ALSO
.Xr pthread_attr_init 3 ,
.Xr pthread_attr_setdetachstate 3 ,
.Xr pthread_attr_setguardsize 3 ,
.Xr pthread_attr_setstack 3 ,
.Xr pthread_attr_setstackaddr 3 ,
.Xr pthread_create 3 ,
.Xr pthreads 3
.Sh STANDARDS
.Fn pthread_attr_setstacksize
and
.Fn pthread_attr_getstacksize
conform to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.9
log
@Add pthread_attr_[sg]etguardsize() to match rthread, including manpages
Bump lib minor

ok otto@@ kurt@@ marc@@; doc review by jmc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.8 2008/07/05 08:03:57 guenther Exp $
d6 1
a6 1
.Dd $Mdocdate: July 5 2008 $
d14 1
a14 1
.Fd #include <pthread.h>
@


1.8
log
@Add manpage for pthread_attr_[sg]etstack(3)
Correct misnaming in STANDARDS section
ok brad@@ otto@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.7 2007/05/31 19:19:36 jmc Exp $
d6 1
a6 1
.Dd $Mdocdate: May 31 2007 $
d68 1
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.6 2004/02/16 22:48:40 brad Exp $
d6 1
a6 1
.Dd $Mdocdate$
d68 1
d73 4
a76 2
.Fn pthread_create
conforms to ISO/IEC 9945-1 ANSI/IEEE
@


1.6
log
@Add missing const for function parameters to match POSIX.

From: FreeBSD's libc_r

ok marc@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.5 2003/05/08 09:01:15 jmc Exp $
d6 1
a6 1
.Dd January 6, 2000
@


1.5
log
@RETURN VALUE -> RETURN VALUES in .Sh, as per mdoc template.
also new sentence, new line.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.4 2003/02/20 18:59:12 jmc Exp $
d18 1
a18 1
.Fn pthread_attr_getstacksize "pthread_attr_t *attr" "size_t *stacksize"
@


1.4
log
@copyrights added;

these are all David Leonard, and Public Domain
ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.3 2001/06/24 18:17:30 jasoni Exp $
d35 1
a35 1
.Sh RETURN VALUE
d40 2
a41 2
return a value of 0. Otherwise, an error
number is returned to indicate the error.
@


1.3
log
@grammar
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.2 2000/04/12 21:48:02 aaron Exp $
d3 3
@


1.2
log
@Trailing whitespace begone!
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_attr_setstacksize.3,v 1.1 2000/01/06 06:15:30 d Exp $
d31 1
a31 1
allocated for the created threads stack.
@


1.1
log
@document
@
text
@d1 1
a1 1
.\" $OpenBSD$
d17 1
a17 1
The functions 
d23 2
a24 2
.Va stacksize 
attribute in the 
d33 1
a33 1
Upon successful completion, 
@

