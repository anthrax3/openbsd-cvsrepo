head	1.2;
access;
symbols
	OPENBSD_6_0:1.2.0.14
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.10
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.12
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.8
	OPENBSD_5_6_BASE:1.2
	OPENBSD_5_5:1.2.0.6
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.2
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@.\" @;


1.2
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2012.05.03.09.07.17;	author pirofti;	state Exp;
branches;
next	;


desc
@@


1.2
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\"	$OpenBSD: pthread_spin_unlock.3,v 1.1 2012/05/03 09:07:17 pirofti Exp $
.\"
.\" Copyright (c) 2012 Paul Irofti <pirofti@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\"
.Dd $Mdocdate: May 3 2012 $
.Dt PTHREAD_SPIN_UNLOCK 3
.Os
.Sh NAME
.Nm pthread_spin_unlock
.Nd unlock a spinlock object
.Sh SYNOPSIS
.In pthread.h
.Ft int
.Fn pthread_spin_unlock "pthread_spinlock_t *lock"
.Sh DESCRIPTION
The
.Fn pthread_spin_unlock
function releases the spin lock referenced by
.Fa lock
which was locked via the
.Fn pthread_spin_lock
or
.Fn pthread_spin_trylock
functions.
.Sh RETURN VALUES
If successful,
.Fn pthread_spin_unlock
returns zero; otherwise an error number is returned to indicate the error.
.Sh ERRORS
.Fn pthread_spin_unlock
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value specified by
.Fa lock
is invalid.
.It Bq Er EPERM
The lock is not owned by the calling thread.
.El
.Sh SEE ALSO
.Xr pthread_spin_init 3 ,
.Xr pthread_spin_lock 3
.Sh STANDARDS
.Fn pthread_spin_unlock
conforms to
.St -p1003.1-2008 .
@


1.1
log
@Add pthread spinlock support.

Implementation, documentation and naive regression tests for:
- pthread_spin_init()
- pthread_spin_destroy()
- pthread_spin_lock()
- pthread_spin_trylock()
- pthread_spin_unlock()

Implementation okay guenther@@, documentation okay jmc@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d18 1
a18 1
.Dd $Mdocdate: April 13 2012 $
d25 1
a25 1
.Fd #include <pthread.h>
@

