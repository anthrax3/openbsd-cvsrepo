head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.18
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.14
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.8.0.4
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.2
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.20
	OPENBSD_5_0:1.6.0.18
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.16
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.5.0.8
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.6
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.4
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.2
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@.\" @;


1.9
date	2013.06.05.03.44.50;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2012.03.04.07.23.55;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2012.03.03.22.48.42;	author guenther;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.31.19.19.37;	author jmc;	state Exp;
branches;
next	1.5;

1.5
date	2005.07.14.14.10.50;	author jmc;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.20.05.29.37;	author fgsch;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.19.00.57.09;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.28.19.24.03;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.9
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\" $OpenBSD: sem_wait.3,v 1.8 2012/03/04 07:23:55 jmc Exp $
.\"
.\" Copyright (C) 2000 Jason Evans <jasone@@FreeBSD.org>.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice(s), this list of conditions and the following disclaimer as
.\"    the first lines of this file unmodified other than the possible
.\"    addition of one or more copyright notices.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice(s), this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDER(S) ``AS IS'' AND ANY
.\" EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR
.\" BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,
.\" WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE
.\" OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
.\" EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" $FreeBSD: src/lib/libc_r/man/sem_wait.3,v 1.8 2001/10/01 16:09:09 ru Exp $
.Dd $Mdocdate: March 4 2012 $
.Dt SEM_WAIT 3
.Os
.Sh NAME
.Nm sem_wait ,
.Nm sem_timedwait ,
.Nm sem_trywait
.Nd decrement (lock) a semaphore
.Sh SYNOPSIS
.In semaphore.h
.Ft int
.Fn sem_wait "sem_t *sem"
.Ft int
.Fn sem_timedwait "sem_t *sem" "const struct timespec *abstime"
.Ft int
.Fn sem_trywait "sem_t *sem"
.Sh DESCRIPTION
The
.Fn sem_wait
function decrements (locks) the semaphore pointed to by
.Fa sem ,
but blocks if the value of
.Fa sem
is zero, until the value is non-zero and the value can be decremented.
.Pp
The
.Fn sem_timedwait
function decrements (locks) the semaphore pointed to by
.Fa sem ,
but blocks if the value of
.Fa sem
is zero, until either the value is non-zero and can be decremented
or the system time specified by
.Fa abstime
is reached.
.Pp
The
.Fn sem_trywait
function decrements (locks) the semaphore pointed to by
.Fa sem
only if the value is non-zero.
Otherwise, the semaphore is not decremented and
an error is returned.
.Sh RETURN VALUES
.Rv -std sem_wait sem_timedwait sem_trywait
.Sh ERRORS
.Fn sem_wait ,
.Fn sem_timedwait ,
and
.Fn sem_trywait
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
.Fa sem
points to an invalid semaphore.
.El
.Pp
Additionally,
.Fn sem_timedwait
will fail if:
.Bl -tag -width Er
.It Bq Er ETIMEDOUT
The semaphore value was zero and could not be decremented before
.Fa abstime
was reached.
.El
.Pp
Additionally,
.Fn sem_trywait
will fail if:
.Bl -tag -width Er
.It Bq Er EAGAIN
The semaphore value was zero, and thus could not be decremented.
.El
.Sh SEE ALSO
.Xr sem_destroy 3 ,
.Xr sem_getvalue 3 ,
.Xr sem_init 3 ,
.Xr sem_open 3 ,
.Xr sem_post 3
.Sh STANDARDS
.Fn sem_wait ,
.Fn sem_timedwait ,
and
.Fn sem_trywait
conform to
.St -p1003.1-2008 .
@


1.8
log
@add sem_timedwait to NAME;
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.7 2012/03/03 22:48:42 guenther Exp $
d31 1
a31 1
.Dd $Mdocdate: March 3 2012 $
d40 1
a40 1
.Fd #include <semaphore.h>
@


1.7
log
@Document sem_timedwait()
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.6 2007/05/31 19:19:37 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d36 1
@


1.6
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.5 2005/07/14 14:10:50 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate$
d43 2
d56 11
d74 1
a74 1
.Rv -std sem_wait
d76 2
a77 1
.Fn sem_wait
d88 10
d111 2
a112 1
.Fn sem_wait
d116 1
a116 1
.St -p1003.1-96 .
@


1.5
log
@- make sure sem_ pages reference each other (idea from similar freebsd commit)

- where two functions are documented in the same page, make sure we don;t
reference them both in SEE ALSO. kind of annoying to call up a second man
page and find it's the same as the last one (even more annoying to not
realise two pages are the same till you've finished reading twice ;)...
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.4 2002/05/01 08:03:30 mpech Exp $
d31 1
a31 1
.Dd February 15, 2000
@


1.4
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.3 2002/02/20 05:29:37 fgsch Exp $
d81 4
@


1.3
log
@fix includes and some cleanup.
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.2 2002/02/19 00:57:09 fgsch Exp $
d57 2
a58 1
only if the value is non-zero.  Otherwise, the semaphore is not decremented and
@


1.2
log
@fix this by now; .Rv prolly has to be removed.
@
text
@d1 1
a1 1
.\" $OpenBSD: sem_wait.3,v 1.1 2002/01/28 19:24:03 fgsch Exp $
a37 2
.\" .Sh LIBRARY
.\" .Lb libc_r
d39 1
a39 1
.In semaphore.h
@


1.1
log
@sem_XXX(3) manpages; better now that never.
From FreeBSD.
@
text
@d1 2
a2 1
.\" $OpenBSD$
d62 1
a62 1
.Rv -std
@

