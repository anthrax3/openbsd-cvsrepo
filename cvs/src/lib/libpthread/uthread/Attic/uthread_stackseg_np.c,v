head	1.7;
access;
symbols
	OPENBSD_5_2:1.6.0.22
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.20
	OPENBSD_5_0:1.6.0.18
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.16
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.14
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.10
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.6.0.12
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.8
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.6
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.4
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.2
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.4.0.12
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.10
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.8
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.6
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.4
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.2
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.3.0.2
	OPENBSD_3_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.6;

1.6
date	2007.07.08.01.53.46;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2007.05.18.19.28.50;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2004.05.01.22.15.10;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	2004.01.26.20.50.02;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2004.01.16.20.46.20;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.15.22.22.12;	author marc;	state Exp;
branches;
next	;


desc
@@


1.7
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/* $OpenBSD: uthread_stackseg_np.c,v 1.6 2007/07/08 01:53:46 kurt Exp $ */

/* PUBLIC DOMAIN: No Rights Reserved. Marco S Hyman <marc@@snafu.org> */

#include <sys/param.h>
#include <sys/time.h>
#include <sys/lock.h>
#include <sys/resource.h>
#include <sys/queue.h>

#include <errno.h>
#include <pthread.h>
#include <pthread_np.h>
#include <stddef.h>
#include <unistd.h>

#include <uvm/uvm_extern.h>

#include "pthread_private.h"

/*
 * Return stack info from the given thread.  Based upon the solaris
 * thr_stksegment function.
 */

int
pthread_stackseg_np(pthread_t thread, stack_t *sinfo)
{
	char *base;
	size_t pgsz;
	int ret;
	struct rlimit rl;

	if (thread->stack) {
		base = thread->stack->base;
#if !defined(MACHINE_STACK_GROWS_UP)
		base += (ptrdiff_t)thread->stack->size;
#endif
		sinfo->ss_sp = base;
		sinfo->ss_size = thread->stack->size;
		sinfo->ss_flags = 0;
		ret = 0;
	} else if (thread == _thread_initial) {
		if (getrlimit(RLIMIT_STACK, &rl) != 0)
			return (EAGAIN);
		pgsz = (size_t)sysconf(_SC_PAGESIZE);
		if (pgsz == (size_t)-1)
			return (EAGAIN);
		/*
		 * round_page() stack rlim_cur and
		 * trunc_page() USRSTACK to be consistent with
		 * the way the kernel sets up the stack.
		 */
		sinfo->ss_size = (size_t)rl.rlim_cur;
		sinfo->ss_size += (pgsz - 1);
		sinfo->ss_size &= ~(pgsz - 1);
		sinfo->ss_sp = (caddr_t) (USRSTACK & ~(pgsz - 1));
		sinfo->ss_flags = 0;
		ret = 0;
	} else
		ret = EAGAIN;

	return ret;
}
@


1.6
log
@Report the correct stack size and top for the primordial thread in
pthread_stackseg_np(). With input and okay marc@@
@
text
@d1 1
a1 1
/* $OpenBSD: uthread_stackseg_np.c,v 1.5 2007/05/18 19:28:50 kurt Exp $ */
@


1.5
log
@Eliminate many lint warnings by either: using the appropriate type,
casting when safe or adding ARGSUSED where needed. Reviewed and
improvements from millert@@ and marc@@. okay marc@@
@
text
@d1 1
a1 1
/* $OpenBSD: uthread_stackseg_np.c,v 1.4 2004/05/01 22:15:10 marc Exp $ */
d6 1
d8 1
d32 1
d44 2
d48 12
a59 14
			ret = EAGAIN;
		else {
#if defined(MACHINE_STACK_GROWS_UP)
			base = (caddr_t) USRSTACK;
#else
			base = (caddr_t) ((USRSTACK - DFLSSIZ) & ~(pgsz - 1));
			base += DFLSSIZ;
#endif
			sinfo->ss_sp = base;
			sinfo->ss_size = DFLSSIZ;
			sinfo->ss_flags = 0;
			ret = 0;
		}

@


1.4
log
@
pthead_supsend_all_np and pthread_resume_all_np from freebsd via
Kurt Miller <truk at optonline.net>.   Kurt says:
They're needed for the java hotspot compiler in the 1.3+ jdk
OK brad@@
@
text
@d1 1
a1 1
/* $OpenBSD: uthread_stackseg_np.c,v 1.3 2004/01/26 20:50:02 marc Exp $ */
d12 1
d34 1
a34 1
		base += thread->stack->size;
d41 1
a41 1
		pgsz = sysconf(_SC_PAGESIZE);
@


1.3
log
@
Change read_stackseg_np to work with any thread, not just the current
thread.   Requested by truk at optonline dot net and OK-ed by
tedu @@.
@
text
@d1 1
a1 1
/* $OpenBSD: uthread_stackseg_np.c,v 1.2 2004/01/16 20:46:20 otto Exp $ */
d19 1
a19 1
 * Return stack info from the current thread.  Based upon the solaris
@


1.2
log
@Include correct includes to unbreak compilation on macppc. ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: uthread_stackseg_np.c,v 1.1 2004/01/15 22:22:12 marc Exp $ */
d24 1
a24 1
pthread_stackseg_np(stack_t *sinfo)
a25 1
	struct pthread *thread = pthread_self();
@


1.1
log
@threaded version of closefrom
pthread_stackseg_np added.   Minor bump for these changes occurred
a day or so ago and will not be bumped again
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d5 1
a5 1
#include <sys/types.h>
a7 4
#include <uvm/uvm_pmap.h>
#include <machine/pmap.h>
#include <machine/param.h>
#include <machine/vmparam.h>
d13 2
@

