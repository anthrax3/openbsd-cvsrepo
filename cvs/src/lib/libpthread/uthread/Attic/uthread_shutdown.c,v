head	1.7;
access;
symbols
	OPENBSD_5_2:1.6.0.12
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.10
	OPENBSD_5_0:1.6.0.8
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.6
	OPENBSD_4_9_BASE:1.6
	OPENBSD_4_8:1.6.0.4
	OPENBSD_4_8_BASE:1.6
	OPENBSD_4_7:1.6.0.2
	OPENBSD_4_7_BASE:1.6
	OPENBSD_4_6:1.5.0.14
	OPENBSD_4_6_BASE:1.5
	OPENBSD_4_5:1.5.0.10
	OPENBSD_4_5_BASE:1.5
	OPENBSD_4_4:1.5.0.8
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.6
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.4
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.2
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.4.0.16
	OPENBSD_4_0_BASE:1.4
	OPENBSD_3_9:1.4.0.14
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.12
	OPENBSD_3_8_BASE:1.4
	OPENBSD_3_7:1.4.0.10
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.8
	OPENBSD_3_6_BASE:1.4
	OPENBSD_3_5:1.4.0.6
	OPENBSD_3_5_BASE:1.4
	OPENBSD_3_4:1.4.0.4
	OPENBSD_3_4_BASE:1.4
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4;
locks; strict;
comment	@ * @;


1.7
date	2012.09.01.00.32.24;	author guenther;	state dead;
branches;
next	1.6;

1.6
date	2009.12.06.17.54.59;	author kurt;	state Exp;
branches;
next	1.5;

1.5
date	2006.10.17.20.57.28;	author kurt;	state Exp;
branches;
next	1.4;

1.4
date	2003.02.14.02.34.16;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	99.11.25.07.01.44;	author d;	state Exp;
branches;
next	1.2;

1.2
date	99.01.06.05.29.27;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.08.27.09.01.20;	author d;	state Exp;
branches;
next	;


desc
@@


1.7
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@/*	$OpenBSD: uthread_shutdown.c,v 1.6 2009/12/06 17:54:59 kurt Exp $	*/
/*
 * Copyright (c) 1995-1998 John Birrell <jb@@cimlogic.com.au>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by John Birrell.
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * $FreeBSD: uthread_shutdown.c,v 1.6 1999/08/28 00:03:48 peter Exp $
 */
#include <errno.h>
#include <sys/types.h>
#include <sys/socket.h>
#ifdef _THREAD_SAFE
#include <pthread.h>
#include "pthread_private.h"

int
shutdown(int fd, int how)
{
	int             ret;
	struct fd_table_entry *entry;

	ret = _thread_fd_table_init(fd, FD_INIT_UNKNOWN, NULL);
	if (ret == 0) {
		entry = _thread_fd_table[fd];
		 
		_thread_kern_sig_defer();
		if (entry->state == FD_ENTRY_OPEN) {
			ret = _thread_sys_shutdown(fd, how);
		} else {
			ret = -1;
			errno = EBADF;
		}
		_thread_kern_sig_undefer();
	}

	return (ret);
}
#endif
@


1.6
log
@Make internal file descriptor handling async-signal safe by eliminating
the use of spinlocks and malloc. All needed memory is allocated upfront
and _thread_kern_sig_defer/undefer() is now used to protect critical
sections. okay guenther@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_shutdown.c,v 1.5 2006/10/17 20:57:28 kurt Exp $	*/
@


1.5
log
@Don't grab _FD_LOCK and queue up behind other threads as
this can potentially block indefinitely. Instead just
protect against fd state transitions and perform
the _thread_sys_shutdown(). Fixes deadlock reported by
Tero Koskinen <tero.koskinen at iki.fi>. okay kettenis@@
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_shutdown.c,v 1.4 2003/02/14 02:34:16 marc Exp $	*/
d52 1
a52 1
		_SPINLOCK(&entry->lock);
d59 1
a59 1
		_SPINUNLOCK(&entry->lock);
@


1.4
log
@white space
@
text
@d1 1
a1 1
/*	$OpenBSD: uthread_shutdown.c,v 1.3 1999/11/25 07:01:44 d Exp $	*/
d46 1
d48 6
a53 3
	switch (how) {
	case 0:
		if ((ret = _FD_LOCK(fd, FD_READ, NULL)) == 0) {
d55 3
a57 1
			_FD_UNLOCK(fd, FD_READ);
d59 1
a59 17
		break;
	case 1:
		if ((ret = _FD_LOCK(fd, FD_WRITE, NULL)) == 0) {
			ret = _thread_sys_shutdown(fd, how);
			_FD_UNLOCK(fd, FD_WRITE);
		}
		break;
	case 2:
		if ((ret = _FD_LOCK(fd, FD_RDWR, NULL)) == 0) {
			ret = _thread_sys_shutdown(fd, how);
			_FD_UNLOCK(fd, FD_RDWR);
		}
		break;
	default:
		errno =  EBADF;
		ret = -1;
		break;
d61 1
@


1.3
log
@sync with FreeBSD
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d49 1
a49 1
			if ((ret = _FD_LOCK(fd, FD_READ, NULL)) == 0) {
d55 1
a55 1
			if ((ret = _FD_LOCK(fd, FD_WRITE, NULL)) == 0) {
d61 1
a61 1
			if ((ret = _FD_LOCK(fd, FD_RDWR, NULL)) == 0) {
@


1.2
log
@ident
@
text
@d1 1
d24 1
a24 1
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
d33 1
a33 1
 * $OpenBSD$
@


1.1
log
@experimental threaded libc - kernel only
@
text
@d32 1
@

