head	1.25;
access;
symbols
	OPENBSD_5_2:1.24.0.4
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.24
	OPENBSD_5_1:1.24.0.2
	OPENBSD_5_0:1.23.0.4
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.2
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.22.0.4
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.2
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.21.0.6
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.2
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.20.0.6
	OPENBSD_4_4_BASE:1.20
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.6
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.4
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.2
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.18.0.8
	OPENBSD_3_8_BASE:1.18
	OPENBSD_3_7:1.18.0.6
	OPENBSD_3_7_BASE:1.18
	OPENBSD_3_6:1.18.0.4
	OPENBSD_3_6_BASE:1.18
	OPENBSD_3_5:1.18.0.2
	OPENBSD_3_5_BASE:1.18
	OPENBSD_3_4:1.14.0.4
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14;
locks; strict;
comment	@# @;


1.25
date	2012.09.01.00.32.23;	author guenther;	state dead;
branches;
next	1.24;

1.24
date	2012.01.17.02.52.39;	author guenther;	state Exp;
branches;
next	1.23;

1.23
date	2010.11.07.13.29.21;	author fgsch;	state Exp;
branches;
next	1.22;

1.22
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.21;

1.21
date	2008.12.18.09.30.32;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.19;

1.19
date	2005.10.30.03.37.34;	author brad;	state Exp;
branches;
next	1.18;

1.18
date	2004.02.22.23.59.26;	author brad;	state Exp;
branches;
next	1.17;

1.17
date	2004.01.15.22.22.11;	author marc;	state Exp;
branches;
next	1.16;

1.16
date	2003.12.23.22.37.03;	author brad;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.22.00.25.42;	author brad;	state Exp;
branches;
next	1.14;

1.14
date	2003.01.20.18.12.11;	author marc;	state Exp;
branches;
next	1.13;

1.13
date	2002.01.18.22.07.27;	author fgsch;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.17.22.12.31;	author pvalchev;	state Exp;
branches;
next	1.11;

1.11
date	2001.08.15.23.50.34;	author fgsch;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.06.07.12.08;	author d;	state Exp;
branches;
next	1.9;

1.9
date	99.11.25.07.01.30;	author d;	state Exp;
branches;
next	1.8;

1.8
date	99.06.15.00.07.39;	author d;	state Exp;
branches;
next	1.7;

1.7
date	99.05.26.00.18.21;	author d;	state Exp;
branches;
next	1.6;

1.6
date	99.01.18.00.00.32;	author d;	state Exp;
branches;
next	1.5;

1.5
date	99.01.08.05.42.18;	author d;	state Exp;
branches;
next	1.4;

1.4
date	99.01.08.04.59.49;	author d;	state Exp;
branches;
next	1.3;

1.3
date	98.12.10.00.33.54;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.11.09.03.13.18;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.08.27.09.00.49;	author d;	state Exp;
branches;
next	;


desc
@@


1.25
log
@   So passes uthreads
Like autumn leaves on water
   don't fear the tedu@@
@
text
@# $OpenBSD: Makefile.inc,v 1.24 2012/01/17 02:52:39 guenther Exp $
# $FreeBSD: Makefile.inc,v 1.19 1999/08/28 00:03:19 peter Exp $

# uthread sources
.PATH: ${SRCDIR}/uthread

CFLAGS += -I${SRCDIR}/arch/${MACHINE_CPU}

SRCS+= \
	sched_prio.c \
	uthread_accept.c \
	uthread_atfork.c \
	uthread_attr_destroy.c \
	uthread_attr_init.c \
	uthread_attr_getdetachstate.c \
	uthread_attr_getguardsize.c \
	uthread_attr_getinheritsched.c \
	uthread_attr_getschedparam.c \
	uthread_attr_getschedpolicy.c \
	uthread_attr_getscope.c \
	uthread_attr_getstack.c \
	uthread_attr_getstackaddr.c \
	uthread_attr_getstacksize.c \
	uthread_attr_setcreatesuspend_np.c \
	uthread_attr_setdetachstate.c \
	uthread_attr_setguardsize.c \
	uthread_attr_setinheritsched.c \
	uthread_attr_setschedparam.c \
	uthread_attr_setschedpolicy.c \
	uthread_attr_setscope.c \
	uthread_attr_setstack.c \
	uthread_attr_setstackaddr.c \
	uthread_attr_setstacksize.c \
	uthread_autoinit.c \
	uthread_bind.c \
	uthread_cancel.c \
	uthread_clean.c \
	uthread_close.c \
	uthread_closefrom.c \
	uthread_concurrency.c \
	uthread_cond.c \
	uthread_condattr_destroy.c \
	uthread_condattr_init.c \
	uthread_connect.c \
	uthread_create.c \
	uthread_detach.c \
	uthread_dup.c \
	uthread_dup2.c \
	uthread_equal.c \
	uthread_execve.c \
	uthread_exit.c \
	uthread_fchflags.c \
	uthread_fchmod.c \
	uthread_fchown.c \
	uthread_fcntl.c \
	uthread_fd.c \
	uthread_file.c \
	uthread_find_thread.c \
	uthread_flock.c \
	uthread_fork.c \
	uthread_fpathconf.c \
	uthread_fstat.c \
	uthread_fstatfs.c \
	uthread_fsync.c \
	uthread_ftruncate.c \
	uthread_gc.c \
	uthread_getdirentries.c \
	uthread_getpeername.c \
	uthread_getprio.c \
	uthread_getschedparam.c \
	uthread_getsockname.c \
	uthread_getsockopt.c \
	uthread_info_openbsd.c \
	uthread_init.c \
	uthread_ioctl.c \
	uthread_join.c \
	uthread_kern.c \
	uthread_kevent.c \
	uthread_kill.c \
	uthread_kqueue.c \
	uthread_listen.c \
	uthread_lseek.c \
	uthread_main_np.c \
	uthread_mattr_init.c \
	uthread_mattr_kind_np.c \
	uthread_msync.c \
	uthread_multi_np.c \
	uthread_mutex.c \
	uthread_mutex_prioceiling.c \
	uthread_mutex_protocol.c \
	uthread_mutexattr_destroy.c \
	uthread_nanosleep.c \
	uthread_once.c \
	uthread_open.c \
	uthread_openat.c \
	uthread_pipe.c \
	uthread_poll.c \
	uthread_pread.c \
	uthread_preadv.c \
	uthread_priority_queue.c \
	uthread_pwrite.c \
	uthread_pwritev.c \
	uthread_read.c \
	uthread_readv.c \
	uthread_recvfrom.c \
	uthread_recvmsg.c \
	uthread_resume_np.c \
	uthread_rwlock.c \
	uthread_rwlockattr.c \
	uthread_select.c \
	uthread_self.c \
	uthread_sem.c \
	uthread_sendmsg.c \
	uthread_sendto.c \
	uthread_seterrno.c \
	uthread_setprio.c \
	uthread_setschedparam.c \
	uthread_setsockopt.c \
	uthread_shutdown.c \
	uthread_sig.c \
	uthread_sigaction.c \
	uthread_sigaltstack.c \
	uthread_sigblock.c \
	uthread_sigmask.c \
	uthread_sigpending.c \
	uthread_sigprocmask.c \
	uthread_sigsetmask.c \
	uthread_sigsuspend.c \
	uthread_sigwait.c \
	uthread_single_np.c \
	uthread_socket.c \
	uthread_socketpair.c \
	uthread_spec.c \
	uthread_spinlock.c \
	uthread_stack.c \
	uthread_stackseg_np.c \
	uthread_suspend_np.c \
	uthread_switch_np.c \
	uthread_vfork.c \
	uthread_wait4.c \
	uthread_write.c \
	uthread_writev.c \
	uthread_yield.c
@


1.24
log
@Make openat(), pread(), preadv(), pwrite(), and pwritev() cancellation
points.

ok fgsch@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.23 2010/11/07 13:29:21 fgsch Exp $
@


1.23
log
@Add sched_get_priority_{min,max}. tested in a bulk by landry@@.
input and ok from phessler@@ and guenther@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.22 2010/02/03 20:49:00 miod Exp $
d79 1
a80 1
	uthread_kill.c \
d95 1
d98 2
d101 2
@


1.22
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.21 2008/12/18 09:30:32 guenther Exp $
d10 1
@


1.21
log
@Add pthread_attr_[sg]etguardsize() to match rthread, including manpages
Bump lib minor

ok otto@@ kurt@@ marc@@; doc review by jmc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.20 2007/06/05 18:11:48 kurt Exp $
d7 1
a7 1
CFLAGS += -I${SRCDIR}/arch/${MACHINE_ARCH}
@


1.20
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.19 2005/10/30 03:37:34 brad Exp $
d15 1
d25 1
@


1.19
log
@Add pthread_atfork(3)

From FreeBSD

'looks ok' fgsch@@ miod@@
man page reviewed by jmc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.18 2004/02/22 23:59:26 brad Exp $
d62 1
d79 1
@


1.18
log
@add pthread_attr_[get|set]stack

From: FreeBSD's libc_r

ok marc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.17 2004/01/15 22:22:11 marc Exp $
d11 1
@


1.17
log
@threaded version of closefrom
pthread_stackseg_np added.   Minor bump for these changes occurred
a day or so ago and will not be bumped again
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.16 2003/12/23 22:37:03 brad Exp $
d18 1
d27 1
@


1.16
log
@Add stub implementations of pthread_[gs]etconcurrency

From: FreeBSD' libc_r

ok marc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.15 2003/10/22 00:25:42 brad Exp $
d33 1
d123 1
@


1.15
log
@Add wrapper for kqueue() to keep track of the allocated fd and allow it to
be closed. This fixes a file descriptor leak when closing a kqueue() fd.
from FreeBSD

ok marc@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.14 2003/01/20 18:12:11 marc Exp $
d33 1
@


1.14
log
@
Use the sources that exist in sibdirs of libpthread, not libc_r
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.13 2002/01/18 22:07:27 fgsch Exp $
d70 1
@


1.13
log
@From FreeBSD: sem_XXX implementation; manpages comming in a bit.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.12 2001/08/17 22:12:31 pvalchev Exp $
d5 1
a5 1
.PATH: ${LIBC_RSRCDIR}/uthread
d7 1
a7 1
CFLAGS += -I${LIBC_RSRCDIR}/arch/${MACHINE_ARCH}
@


1.12
log
@Provide the equivalent to Solaris thr_main() function; from FreeBSD
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.11 2001/08/15 23:50:34 fgsch Exp $
d96 1
@


1.11
log
@* kevent(2) support; from FreeBSD.
* change _thread_kern_set_timeout() parm to const.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.10 2000/01/06 07:12:08 d Exp $
d72 1
@


1.10
log
@LIBC_RSRCDIR
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.9 1999/11/25 07:01:30 d Exp $
d69 1
@


1.9
log
@sync with FreeBSD
@
text
@d1 1
a1 1
# $OpenBSD$
d5 1
a5 1
.PATH: ${.CURDIR}/uthread
d7 1
a7 1
CFLAGS += -I${.CURDIR}/arch/${MACHINE_ARCH}
@


1.8
log
@Remove pthread_atfork(). It was only part of draft 10 for a little while and was removed before stddization.
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.7 1999/05/26 00:18:21 d Exp $
#	$OpenBSD: Makefile.inc,v 1.7 1999/05/26 00:18:21 d Exp $
a17 1
	uthread_attr_setstackaddr.c \
a29 1
	uthread_fchflags.c \
d64 1
a64 1
	uthread_info.c \
d83 1
a84 2
	uthread_poll.c \
	uthread_queue.c \
d116 1
@


1.7
log
@sync with FreeBSD
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.6 1999/01/18 00:00:32 d Exp $
#	$OpenBSD: Makefile.inc,v 1.6 1999/01/18 00:00:32 d Exp $
a10 1
	uthread_atfork.c \
@


1.6
log
@sync with previous changes
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.5 1999/01/08 05:42:18 d Exp $
#	$OpenBSD: Makefile.inc,v 1.5 1999/01/08 05:42:18 d Exp $
d15 5
a21 1
	uthread_attr_priosched.c \
d24 4
d64 1
d79 2
d86 1
d102 1
d110 1
d121 1
@


1.5
log
@add fchflags and fpathconf as well.
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.4 1999/01/08 04:59:49 d Exp $
#	$OpenBSD: Makefile.inc,v 1.4 1999/01/08 04:59:49 d Exp $
d11 1
d17 1
d24 2
d67 1
@


1.4
log
@add poll(2). This might help get X threaded.
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.3 1998/12/10 00:33:54 d Exp $
#	$OpenBSD: Makefile.inc,v 1.3 1998/12/10 00:33:54 d Exp $
d35 1
d44 1
@


1.3
log
@split automatic init into own file
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.2 1998/11/09 03:13:18 d Exp $
#	$OpenBSD: Makefile.inc,v 1.2 1998/11/09 03:13:18 d Exp $
d68 1
@


1.2
log
@sync with FreeBSD (rwlock, gc thread, man pages)
add (broken) mips md stuff
fix some const warnings
add sigaltstack() stub
another hash at getting shlib auto-init to work (mips/elf and i386/a.out)
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.1 1998/08/27 09:00:49 d Exp $
#	$OpenBSD: Makefile.inc,v 1.1 1998/08/27 09:00:49 d Exp $
d20 1
@


1.1
log
@experimental threaded libc - kernel only
@
text
@d1 2
a2 2
#	$Id: Makefile.inc,v 1.13 1998/06/01 02:14:34 jb Exp $
#	$OpenBSD$
d45 1
d73 2
d85 1
d98 1
@

