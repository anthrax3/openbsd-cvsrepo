head	1.2;
access;
symbols
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	from_mysql_3_22_4:1.1.1.1
	mit:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.03.10.08.53.34;	author d;	state dead;
branches;
next	1.1;

1.1
date	98.07.21.13.22.22;	author peter;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.07.21.13.22.22;	author peter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@<HEAD><TITLE>discuss@@charon.mit.edu: [155] in "Pthreads Bugs"</TITLE>
<H1>[155] in Pthreads Bugs</H1></HEAD>
<A HREF="/"><IMG SRC="/i-d.gif" ALT="root"></A>
<A HREF="?155"><IMG SRC="/i-back.gif" ALT="meeting"></A>
<A HREF="/help.html"><IMG SRC="/i-help.gif" ALT="help"></A>
<A HREF="1"><IMG SRC="/i-first.gif" ALT="first"></A>
<IMG SRC="/n-fref.gif" ALT="">
<IMG SRC="/n-pref.gif" ALT="">
<A HREF="154"><IMG SRC="/i-prev.gif" ALT="previous"></A>
<A HREF="156"><IMG SRC="/i-next.gif" ALT="next"></A>
<IMG SRC="/n-nref.gif" ALT="">
<IMG SRC="/n-lref.gif" ALT="">
<A HREF="161"><IMG SRC="/i-last.gif" ALT="last"></A>
<HR><H2>pthread_kill() Bug</H2>
<H3>daemon@@ATHENA.MIT.EDU (Thu Dec 26 20:34:45 1996
)</H3>
<PRE>
From: Chris Colohan &lt;colohan@@eecg.toronto.edu&gt;
To: pthreads-bugs@@MIT.EDU, proven@@MIT.EDU
Date: 	Thu, 26 Dec 1996 20:33:48 -0500

pthread_kill() has a problem in PThreads 1.60beta6.  It checks to see
if the target thread is in the state PS_SIGWAIT, and if it is it
reschedules it.  But it does not check if there is more than one
thread in the PS_SIGWAIT state, and hence mangles the pthread_sigwait
linked list, potentially resulting in threads getting blocked forever,
and signals never being delivered.  I have a *very* contrived test
case that demonstrates this problem if you would like it.  Please let
me know...

Chris
===

Diffs created with diff -c:

*** /home/colohan/thesis/t/pthreads-1_60_beta6/pthreads/pthread_kill.c	Tue Feb 21 03:07:18 1995
--- pthread_kill.c	Thu Dec 26 19:50:22 1996
***************
*** 41,51 ****
--- 41,58 ----
  
  #include &lt;pthread.h&gt;
  
+ /* Defined in sig.c, a linked list of threads currently
+  * blocked in sigwait(): */
+ extern struct pthread * pthread_sigwait;
+ 
+ 
  /* ==========================================================================
   * pthread_kill()
   */
  int pthread_kill(struct pthread * pthread, int sig)
  {
+ 	struct pthread ** pthread_ptr;
+ 
  	pthread_sched_prevent();
  
  	/* Check who is the current owner of pthread */
***************
*** 53,62 ****
  	if (0) {
  	} else {
  		if (pthread-&gt;state == PS_SIGWAIT) {
! 			if (sigismember(pthread-&gt;data.sigwait, sig)) {
! 				*(int *)(pthread-&gt;ret) = sig;
! 				pthread_sched_other_resume(pthread);
! 				return(OK);
  			}
  		}
  		sigaddset(&amp;(pthread-&gt;sigpending), sig);
--- 60,84 ----
  	if (0) {
  	} else {
  		if (pthread-&gt;state == PS_SIGWAIT) {
! 			if(sigismember(pthread-&gt;data.sigwait, sig)) {
! 			    for (pthread_ptr = &amp;pthread_sigwait;
! 				 (*pthread_ptr);
! 				 pthread_ptr = &amp;((*pthread_ptr)-&gt;next)) {
! 				if ((*pthread_ptr) == pthread) {
! 
! 				    /* Take the thread out of the
! 				     * pthread_sigwait linked list: */
! 				    *pthread_ptr=(*pthread_ptr)-&gt;next;
! 			
! 				    *(int *)(pthread-&gt;ret) = sig;
! 				    pthread_sched_other_resume(pthread);
! 				    return(OK);
! 				}
! 			    }
! 			    /* A thread should not be in the state PS_SIGWAIT
! 			     * without being in the pthread_sigwait linked
! 			     * list: */
! 			    PANIC();
  			}
  		}
  		sigaddset(&amp;(pthread-&gt;sigpending), sig);
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/

@
text
@@
