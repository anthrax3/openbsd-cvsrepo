head	1.3;
access;
symbols
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	from_mysql_3_22_4:1.1.1.1
	mit:1.1.1;
locks; strict;
comment	@ * @;


1.3
date	99.03.10.08.53.41;	author d;	state dead;
branches;
next	1.2;

1.2
date	98.07.22.10.46.55;	author peter;	state Exp;
branches;
next	1.1;

1.1
date	98.07.21.13.20.26;	author peter;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.07.21.13.20.26;	author peter;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@/* ==== stat.c ============================================================
 * Copyright (c) 1995 by Chris Provenzano, proven@@mit.edu
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *  This product includes software developed by Chris Provenzano.
 * 4. The name of Chris Provenzano may not be used to endorse or promote 
 *	  products derived from this software without specific prior written
 *	  permission.
 *
 * THIS SOFTWARE IS PROVIDED BY CHRIS PROVENZANO ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL CHRIS PROVENZANO BE LIABLE FOR ANY 
 * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR 
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT 
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF 
 * SUCH DAMAGE.
 *
 * Description : All the syscalls dealing with fds.
 *
 *  1.00 93/05/27 proven
 *      -Started coding this file.
 */

#ifndef lint
static const char rcsid[] = "$Id: stat.c,v 1.2 1998/07/22 10:46:55 peter Exp $";
#endif

#include <pthread.h>
#include <errno.h>

struct stat;
struct statfs;

/* ==========================================================================
 * fstat()
 *
 * Might want to indirect this.
 */
int fstat(int fd, struct stat *buf)
{
	int ret;

	if ((ret = fd_lock(fd, FD_READ, NULL)) == OK) {
		if ((ret = machdep_sys_fstat(fd_table[fd]->fd.i, buf)) < OK) {
			SET_ERRNO(-ret);
			ret = NOTOK;
		}
		fd_unlock(fd, FD_READ);
	}
	return(ret);
}

/* ==========================================================================
 * stat()
 */
int stat(const char * path, struct stat * buf)
{
	int ret;

	if ((ret = machdep_sys_stat(path, buf)) < OK) {
		SET_ERRNO(-ret);
		ret = NOTOK;
	}
	return(ret);

}

/* ==========================================================================
 * lstat()
 */
int lstat(const char * path, struct stat * buf)
{
	int ret;

	if ((ret = machdep_sys_lstat(path, buf)) < OK) {
		SET_ERRNO(-ret);
		ret = NOTOK;
	}
	return(ret);

}

/* ==========================================================================
 * fstatfs()
 *
 * Might want to indirect this.
 */
int fstatfs(int fd, struct statfs *buf)
{
	int ret;

	if ((ret = fd_lock(fd, FD_READ, NULL)) == OK) {
		if ((ret = machdep_sys_fstatfs(fd_table[fd]->fd.i, buf)) < OK) {
			SET_ERRNO(-ret);
			ret = NOTOK;
		}
		fd_unlock(fd, FD_READ);
	}
	return(ret);
}
@


1.2
log
@o removed more unused or old, left over files

o general changes so that now the library compiles and many of the
  tests run correctly

o pthreads/Makefile.inc rebuilt using libc/sys/Makefile.inc as a template.
  this should be kept in sync in case of new syscalls

soon TODO:
figure out why remaining tests fail and fix
look at building .so version of library
tidy up arch/i386 directory - no longer uses syscall-template.S
port other arch's from libc syscall templates
@
text
@d39 1
a39 1
static const char rcsid[] = "$Id: stat.c,v 1.1.1.1 1998/07/21 13:20:26 peter Exp $";
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
static const char rcsid[] = "$Id: stat.c,v 1.2 1995/09/21 02:36:05 ghudson Exp $";
a96 1
#ifdef HAVE_SYSCALL_FSTATFS
a114 1
#endif
@


1.1.1.1
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/

@
text
@@
