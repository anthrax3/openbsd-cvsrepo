head	1.9;
access;
symbols
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.9.0.14
	OPENBSD_6_0_BASE:1.9
	OPENBSD_5_9:1.9.0.10
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.12
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.4
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.8
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.6
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.2
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.38
	OPENBSD_5_0:1.3.0.36
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.34
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.32
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.28
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.30
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.26
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.24
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.22
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.20
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.18
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.16
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.14
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.12
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.10
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.8
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.6
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.4
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.2
	OPENBSD_3_3_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2013.03.26.14.38.08;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2013.03.24.19.55.45;	author guenther;	state Exp;
branches;
next	1.7;

1.7
date	2013.03.24.17.47.49;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2012.12.05.23.20.05;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2012.07.11.09.08.50;	author guenther;	state Exp;
branches;
next	1.4;

1.4
date	2012.03.03.10.02.26;	author guenther;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.25;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.01.18.20.36.25;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.18.00.36.36;	author fgsch;	state Exp;
branches;
next	;


desc
@@


1.9
log
@needs sys/cdefs.h because a case has been found where it is pulled
independently; spotted by sthen/naddy
@
text
@/*	$OpenBSD: semaphore.h,v 1.8 2013/03/24 19:55:45 guenther Exp $	*/

/* semaphore.h: POSIX 1003.1b semaphores */

/*-
 * Copyright (c) 1996, 1997
 *	HD Associates, Inc.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by HD Associates, Inc
 * 4. Neither the name of the author nor the names of any co-contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY HD ASSOCIATES AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL HD ASSOCIATES OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _SEMAPHORE_H_
#define _SEMAPHORE_H_

#include <sys/cdefs.h>

/* Opaque type definition. */
struct __sem;
typedef struct __sem *sem_t;
struct timespec;

#define SEM_FAILED      ((sem_t *)0)

__BEGIN_DECLS
int	sem_init(sem_t *, int, unsigned int);
int	sem_destroy(sem_t *);
sem_t  *sem_open(const char *, int, ...);
int	sem_close(sem_t *);
int	sem_unlink(const char *);
int	sem_wait(sem_t *);
int	sem_timedwait(sem_t * __restrict, const struct timespec * __restrict);
int	sem_trywait(sem_t *);
int	sem_post(sem_t *);
int	sem_getvalue(sem_t * __restrict, int * __restrict);
__END_DECLS

#endif /* _SEMAPHORE_H_ */
@


1.8
log
@SEM_VALUE_MAX belongs in <limits.h> (via sys/syslimits.h)
struct sem --> struct __sem (doesn't belong in public namespace)
Zap pointless _KERNEL tests

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.7 2013/03/24 17:47:49 deraadt Exp $	*/
a34 2
 *
 * $FreeBSD: semaphore.h,v 1.6 2000/01/20 07:55:42 jasone Exp $
d39 2
@


1.7
log
@machine/limits.h does not contain everything this file wants.  It wants
the MI sys/limits.h, and has been getting lucky that all callers had
already pulled that in via other means.
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.6 2012/12/05 23:20:05 deraadt Exp $	*/
a41 2
#include <sys/limits.h>

d43 2
a44 2
struct sem;
typedef struct sem *sem_t;
a47 3
#define SEM_VALUE_MAX   UINT_MAX

#ifndef _KERNEL
a60 2

#endif /* _KERNEL */
@


1.6
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.5 2012/07/11 09:08:50 guenther Exp $	*/
d42 1
a42 1
#include <machine/limits.h>
@


1.5
log
@sem_timedwait() needs the struct timespec tag to be pre-declared here.
Add restrict qualifiers.
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.4 2012/03/03 10:02:26 guenther Exp $	*/
a52 1
#include <sys/cdefs.h>
@


1.4
log
@Add sem_timewait() and fix sem_wait()'s handling of signals, so
that it resumes waiting unless the thread was canceled.  As part
of this, change the internal _sem_wait() function to return zero
on success and an errno value on failure instead of 1 on success
and zero on failure.
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.3 2002/02/16 21:27:25 millert Exp $	*/
d47 1
d62 1
a62 1
int	sem_timedwait(sem_t *, const struct timespec *);
d65 1
a65 1
int	sem_getvalue(sem_t *, int *);
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.2 2002/01/18 20:36:25 fgsch Exp $	*/
d61 1
@


1.2
log
@tab vs. spaces
@
text
@d1 1
a1 1
/*	$OpenBSD: semaphore.h,v 1.1 2002/01/18 00:36:36 fgsch Exp $	*/
d55 9
a63 9
int	sem_init __P((sem_t *, int, unsigned int));
int	sem_destroy __P((sem_t *));
sem_t  *sem_open __P((const char *, int, ...));
int	sem_close __P((sem_t *));
int	sem_unlink __P((const char *));
int	sem_wait __P((sem_t *));
int	sem_trywait __P((sem_t *));
int	sem_post __P((sem_t *));
int	sem_getvalue __P((sem_t *, int *));
@


1.1
log
@From FreeBSD: header for POSIX 1003.1b semaphores.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d7 1
a7 1
 *      HD Associates, Inc.  All rights reserved.
d19 1
a19 1
 *      This product includes software developed by HD Associates, Inc
d55 9
a63 9
int      sem_init __P((sem_t *, int, unsigned int));
int      sem_destroy __P((sem_t *));
sem_t   *sem_open __P((const char *, int, ...));
int      sem_close __P((sem_t *));
int      sem_unlink __P((const char *));
int      sem_wait __P((sem_t *));
int      sem_trywait __P((sem_t *));
int      sem_post __P((sem_t *));
int      sem_getvalue __P((sem_t *, int *));
@

