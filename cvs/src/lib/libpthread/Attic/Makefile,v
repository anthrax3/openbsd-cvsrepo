head	1.26;
access;
symbols
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.26
	OPENBSD_5_0:1.23.0.24
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.22
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.23.0.20
	OPENBSD_4_8_BASE:1.23
	OPENBSD_4_7:1.23.0.16
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.23.0.18
	OPENBSD_4_6_BASE:1.23
	OPENBSD_4_5:1.23.0.14
	OPENBSD_4_5_BASE:1.23
	OPENBSD_4_4:1.23.0.12
	OPENBSD_4_4_BASE:1.23
	OPENBSD_4_3:1.23.0.10
	OPENBSD_4_3_BASE:1.23
	OPENBSD_4_2:1.23.0.8
	OPENBSD_4_2_BASE:1.23
	OPENBSD_4_1:1.23.0.6
	OPENBSD_4_1_BASE:1.23
	OPENBSD_4_0:1.23.0.4
	OPENBSD_4_0_BASE:1.23
	OPENBSD_3_9:1.23.0.2
	OPENBSD_3_9_BASE:1.23
	OPENBSD_3_8:1.22.0.8
	OPENBSD_3_8_BASE:1.22
	OPENBSD_3_7:1.22.0.6
	OPENBSD_3_7_BASE:1.22
	OPENBSD_3_6:1.22.0.4
	OPENBSD_3_6_BASE:1.22
	OPENBSD_3_5:1.22.0.2
	OPENBSD_3_5_BASE:1.22
	OPENBSD_3_4:1.21.0.2
	OPENBSD_3_4_BASE:1.21
	OPENBSD_3_3:1.18.0.2
	OPENBSD_3_3_BASE:1.18
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.10
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.8
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.12.0.6
	OPENBSD_2_9_BASE:1.12
	OPENBSD_2_8:1.12.0.4
	OPENBSD_2_8_BASE:1.12
	OPENBSD_2_7:1.12.0.2
	OPENBSD_2_7_BASE:1.12
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	from_mysql_3_22_4:1.1.1.2
	mit:1.1.1
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.26
date	2012.06.28.06.18.46;	author guenther;	state dead;
branches;
next	1.25;

1.25
date	2012.06.21.02.46.38;	author deraadt;	state Exp;
branches;
next	1.24;

1.24
date	2012.06.21.01.08.00;	author deraadt;	state dead;
branches;
next	1.23;

1.23
date	2005.11.24.20.49.20;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	2004.01.18.23.54.20;	author marc;	state Exp;
branches;
next	1.21;

1.21
date	2003.08.01.19.50.23;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2003.06.10.05.00.51;	author marc;	state Exp;
branches;
next	1.19;

1.19
date	2003.05.01.23.34.51;	author marc;	state Exp;
branches;
next	1.18;

1.18
date	2003.01.31.04.46.16;	author marc;	state Exp;
branches;
next	1.17;

1.17
date	2003.01.20.18.12.11;	author marc;	state Exp;
branches;
next	1.16;

1.16
date	2003.01.14.20.04.44;	author marc;	state Exp;
branches;
next	1.15;

1.15
date	2002.11.16.05.01.26;	author marc;	state Exp;
branches;
next	1.14;

1.14
date	2002.11.12.20.10.18;	author marc;	state Exp;
branches;
next	1.13;

1.13
date	2002.06.17.18.26.55;	author marc;	state Exp;
branches;
next	1.12;

1.12
date	2000.01.06.22.23.28;	author d;	state Exp;
branches;
next	1.11;

1.11
date	2000.01.06.21.19.10;	author d;	state Exp;
branches;
next	1.10;

1.10
date	2000.01.04.00.54.51;	author d;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.04.00.26.50;	author d;	state Exp;
branches;
next	1.8;

1.8
date	99.03.10.08.53.01;	author d;	state dead;
branches;
next	1.7;

1.7
date	98.07.22.10.46.32;	author peter;	state Exp;
branches;
next	1.6;

1.6
date	98.07.21.19.47.51;	author peter;	state Exp;
branches;
next	1.5;

1.5
date	98.07.21.16.27.59;	author peter;	state Exp;
branches;
next	1.4;

1.4
date	98.07.21.13.53.50;	author peter;	state Exp;
branches;
next	1.3;

1.3
date	97.04.13.21.34.21;	author briggs;	state Exp;
branches;
next	1.2;

1.2
date	97.04.13.17.06.24;	author briggs;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.03;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.03;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.07.21.13.18.58;	author peter;	state Exp;
branches;
next	;


desc
@@


1.26
log
@librthread has eaten libpthread, so build includes via the former instead
of the latter.  Permits the misleading lib/libpthread/Makefile to be
removed

discussed with deraadt@@
@
text
@#	$OpenBSD: Makefile,v 1.25 2012/06/21 02:46:38 deraadt Exp $

#
# librthread still uses this
#

SRCDIR=		${.CURDIR}
LIBCSRCDIR=	${.CURDIR}/../libc

.include "${SRCDIR}/include/Makefile.inc"
.include "${SRCDIR}/sys/Makefile.inc"
.include "${SRCDIR}/thread/Makefile.inc"
.include "${SRCDIR}/uthread/Makefile.inc"
.include "${SRCDIR}/man/Makefile.inc"

.include <bsd.lib.mk>
@


1.25
log
@A piece of this is still needed
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2005/11/24 20:49:20 deraadt Exp $
@


1.24
log
@For now... libpthread is just a container directory, since all the new
goop is in librthread.  As a result, the top-level Makefile and
shlib_version here are simply very confusing and tell lies.  Remove
them, and update the instructions in libc to not make my mistake
again.
ok guenther
@
text
@d4 1
a4 2
# The pthread library is formed from the FreeBSD uthread sources of 
# libc_r, and exploits weak symbols in libc.
a8 19

LIB=		pthread
WANTLINT=
LINTFLAGS=	-z
CFLAGS+=	-DPTHREAD_KERNEL -D_POSIX_THREADS -D_THREAD_SAFE -Wall
CFLAGS+=	-Wpointer-arith -Wwrite-strings -Wstrict-prototypes
CFLAGS+=	-Wmissing-prototypes -Wsign-compare # -Werror
CFLAGS+=	-I${SRCDIR}/uthread
CFLAGS+=	-I${SRCDIR}/include
CFLAGS+=	-I${LIBCSRCDIR}/include
AINC+=		-I${SRCDIR}/uthread

# Uncomment this if you want libpthread to contain debug information for
# thread locking.
CFLAGS+=	-D_LOCK_DEBUG
#DEBUG=		-g

# enable extra internal consistency checks
CFLAGS+=	-D_PTHREADS_INVARIANTS
@


1.23
log
@use WANTLINT= (on all architectures)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2004/01/18 23:54:20 marc Exp $
@


1.22
log
@
don't include bsd.own.mk, it's included at the top of bsd.lib.mk
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2003/08/01 19:50:23 millert Exp $
d12 1
@


1.21
log
@Go back to using ITIMER_PROF for the non-profiled libpthread and use
ITIMER_VIRTUAL for the profiled version.  Fixes problems when programs
linked with libpthread try to use ITIMER_VIRTUAL (and have no way of
knowing that this will cause conflicts with the threads lib).
marc@@ OK
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2003/06/10 05:00:51 marc Exp $
a34 1
.include <bsd.own.mk>
@


1.20
log
@
Use ITIMER_VIRTUAL instead of ITIMER_PROF as the thread scheduler
timer.   Allows threaded aps to be profiled.   Tested on i386,
alpha, macppc, sparc64 and vax.  miod@@ says: I think this is the
right thing to do.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2003/05/01 23:34:51 marc Exp $
a12 1
CFLAGS+=	-D_PTHREADS_COMPAT_SCHED
@


1.19
log
@Enable compiler warning options but NOT -Werror
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2003/01/31 04:46:16 marc Exp $
d13 1
@


1.18
log
@
Create a siginfo_t for thread-to-thread kill.
Clean up (compiler warning elimination).   Compile check options added
but commented out as they have not been checked on all architectures, yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2003/01/20 18:12:11 marc Exp $
d14 2
a15 2
#CFLAGS+=	-Wpointer-arith -Wwrite-strings -Wstrict-prototypes
#CFLAGS+=	-Wmissing-prototypes -Wsign-compare -Werror
@


1.17
log
@
Use the sources that exist in sibdirs of libpthread, not libc_r
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2003/01/14 20:04:44 marc Exp $
d14 2
@


1.16
log
@
Bye-bye libc_r.   libc_r and libnpthread go away.  libpthread
takes their place.  The -pthread option to gcc uses libpthread.
ppc portion of patch from drahn@@ (thanks).   gcc portions of patch
OK espie@@.   Ports testing (no bad effects!) by naddy@@

best build sequence is: build gcc, build system, build ports
remove /usr/lib/lib{c_r,npthread}.*.   Note, once libc_r and
libnpthread is removed threaded ports will stop working until
they have been re-built using the libpthread and the updated gcc.
That's why the above build sequence is recommended.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2002/11/16 05:01:26 marc Exp $
d5 1
a5 3
# libc_r, and exploits weak symbols in libc.   It is installed as
# libnpthread (new pthread) so it will not be picked up in addition to
# libc_r by misbehaving ports.
d8 1
a8 1
LIBC_RSRCDIR=	${.CURDIR}/../libc_r
a10 2
.PATH:		${LIBC_RSRCDIR}

d14 2
a15 2
CFLAGS+=	-I${LIBC_RSRCDIR}/uthread
CFLAGS+=	-I${LIBC_RSRCDIR}/include
d17 1
a17 1
AINC+=		-I${LIBC_RSRCDIR}/uthread
d19 1
a19 1
# Uncomment this if you want libc_r to contain debug information for
d27 5
a31 5
.include "${LIBC_RSRCDIR}/include/Makefile.inc"
.include "${LIBC_RSRCDIR}/sys/Makefile.inc"
.include "${LIBC_RSRCDIR}/thread/Makefile.inc"
.include "${LIBC_RSRCDIR}/uthread/Makefile.inc"
.include "${LIBC_RSRCDIR}/man/Makefile.inc"
@


1.15
log
@Enable libpthread, kind of....
The library is installed as libnpthread, not libpthread.   This gets
around broken autoconf ports that attempt to link using both
-lpthread and -pthread.

The next step will be to change the gcc -pthread flag to use this lib
instead of libc_r.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2002/11/12 20:10:18 marc Exp $
d15 1
a15 1
LIB=		npthread
d35 1
a35 3

# XXX enable when libc_r is not built
#.include "${LIBC_RSRCDIR}/man/Makefile.inc"
@


1.14
log
@
don't build with -g/-ggdb by default.
always build with -Wall
bump version to 0.7 (matches libc_r x.7)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2002/06/17 18:26:55 marc Exp $
d5 3
a7 1
# libc_r, and exploits weak symbols in libc.
d15 1
a15 1
LIB=		pthread
@


1.13
log
@sync with libc_r (NOPOLL no longer needed)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2000/01/06 22:23:28 d Exp $
d15 1
a15 1
CFLAGS+=	-DPTHREAD_KERNEL -D_POSIX_THREADS -D_THREAD_SAFE 
d24 1
a24 1
DEBUG=		-ggdb -Wall
@


1.12
log
@build libpthread AND libc_r for i386
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2000/01/06 21:19:10 d Exp $
d16 1
a16 2
CFLAGS+=	-D_PTHREADS_INVARIANTS
CFLAGS+=	-DNOPOLL -I${LIBC_RSRCDIR}/uthread
d25 3
@


1.11
log
@use everything in libc_r (sorry, todd)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2000/01/04 00:54:51 d Exp $
a27 1
.include "${LIBC_RSRCDIR}/man/Makefile.inc"
d31 3
@


1.10
log
@flesh
@
text
@d1 6
a6 1
#	$OpenBSD: Makefile,v 1.9 1999/11/28 11:32:55 d Exp $
a12 1
DEBUG=		-ggdb -Wall
d19 2
d25 1
d27 1
a27 5
.include "${LIBC_RSRCDIR}/uthread/Makefile.inc"

CFLAGS+=	-I${LIBCSRCDIR}/include
SRCS+=		libc_storage.c

d30 2
a31 4

AINC+=		-I${LIBC_RSRCDIR}/uthread

.include "${LIBC_RSRCDIR}/include/Makefile.inc"
@


1.9
log
@libpthread lives again!

This is part of an undertaking to eventually get rid of libc_r, but requires
weak symbol overloading on all archs, which doesn't seem to be happening yet.
@
text
@d1 1
d3 2
a4 2
LIB=pthread
LIBC_RDIR=	${.CURDIR}/../libc_r
d6 1
a6 1
.PATH:	${LIBC_RDIR}
d8 7
d16 17
@


1.8
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@a0 3
# Generated automatically from Makefile.in by configure.
#	@@(#)Makefile	5.2 (Berkeley) 3/5/91
#
d2 2
a3 1
.include <bsd.own.mk>
d5 1
a5 3
LIB=pthread
NOPIC=no
CFLAGS+=-DPTHREAD_KERNEL -I. -I${.CURDIR}/include -I${.CURDIR}/arch/${MACHINE_ARCH}
a6 8
.include "${.CURDIR}/include/Makefile.inc"
.include "${.CURDIR}/arch/${MACHINE}/Makefile.inc"
.include "${.CURDIR}/pthreads/Makefile.inc"
.include "${.CURDIR}/stdlib/Makefile.inc"
.include "${.CURDIR}/stdio/Makefile.inc"
.include "${.CURDIR}/string/Makefile.inc"
.include "${.CURDIR}/gen/Makefile.inc"
.include "${.CURDIR}/net/Makefile.inc"
@


1.7
log
@o removed more unused or old, left over files

o general changes so that now the library compiles and many of the
  tests run correctly

o pthreads/Makefile.inc rebuilt using libc/sys/Makefile.inc as a template.
  this should be kept in sync in case of new syscalls

soon TODO:
figure out why remaining tests fail and fix
look at building .so version of library
tidy up arch/i386 directory - no longer uses syscall-template.S
port other arch's from libc syscall templates
@
text
@@


1.6
log
@this will now compile on i386 if you move arch/i386/machdep.h to
arch/i386/pthread/machdep.h - not an ideal solution. Correct fix
is welcome. I am quiting work on this for today, so other hackers
are welcome to take it up for the rest of the day/night. More from
me tomorrow.
@
text
@d9 1
a9 1
CPPFLAGS+=-DPTHREAD_KERNEL -I. -I${.CURDIR}/include -I${.CURDIR}/arch/${MACHINE_ARCH}
@


1.5
log
@move unchanged files from machdep/ into appropriate arch/${MACHINE}
directories. These files have been renamed as appropriate, but
hackers of these files should note those that started off as netbsd
files (alpha and sparc).

also moved machdep/openbsd-2.0/ to include/sys/
@
text
@d8 2
a9 2
NOPIC= no
CPPFLAGS+= -I. -I${.CURDIR}/include -I${.CURDIR}/arch/${MACHINE_ARCH}
d11 1
d13 6
a18 7
#.include "${.CURDIR}/pthreads/Makefile.inc"
#.include "${.CURDIR}/stdlib/Makefile.inc"
#.include "${.CURDIR}/stdio/Makefile.inc"
#.include "${.CURDIR}/string/Makefile.inc"
#.include "${.CURDIR}/gen/Makefile.inc"
#.include "${.CURDIR}/net/Makefile.inc"
#.include "${.CURDIR}/scripts/Makefile.inc"
@


1.4
log
@fix up those 13 broken merges
@
text
@d5 2
d9 1
a9 1
CPPFLAGS+= -DPTHREAD_KERNEL -I. -I${.CURDIR}/include -I${.CURDIR}/arch/${MACHINE_ARCH}
d11 8
a18 7
.include "${srcdir}/pthreads/Makefile.inc"
.include "${srcdir}/stdlib/Makefile.inc"
.include "${srcdir}/stdio/Makefile.inc"
.include "${srcdir}/string/Makefile.inc"
.include "${srcdir}/gen/Makefile.inc"
.include "${srcdir}/net/Makefile.inc"
.include "${srcdir}/scripts/Makefile.inc"
@


1.3
log
@CPPFLAGS is already put on CC line--don't add CPPFLAGS to CFLAGS.
@
text
@d1 3
a3 1
#	from: @@(#)Makefile	5.2 (Berkeley) 3/5/91
d9 7
a15 3
.include "${.CURDIR}/arch/${MACHINE_ARCH}/Makefile.inc"
.include "${.CURDIR}/pthreads/Makefile.inc"
.include "${.CURDIR}/stdio/Makefile.inc"
a16 9
all beforedepend: pthread

CLEANFILES+=pthread 

pthread: 
	if [ ! -e pthread ]; then \
		ln -s ${.CURDIR}/include pthread; \
	fi
	
a17 1

@


1.2
log
@s/MACHINE/MACHINE_ARCH/ -- Nothing here should be MACHINE-specific.
@
text
@a5 1
CFLAGS+= ${CPPFLAGS}
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
CPPFLAGS+= -DPTHREAD_KERNEL -I. -I${.CURDIR}/include -I${.CURDIR}/arch/${MACHINE}
d8 1
a8 1
.include "${.CURDIR}/arch/${MACHINE}/Makefile.inc"
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/
@
text
@d1 1
a1 3
# Generated automatically from Makefile.in by configure.
#	@@(#)Makefile	5.2 (Berkeley) 3/5/91
#
d4 18
a21 46
#NOPIC=
#NOPROFILE=1
CPPFLAGS+= -I${.CURDIR} -I${.CURDIR}/include -I${srcdir}/include -DPTHREAD_KERNEL
CDEBUGFLAGS= -g -O2 -Werror
CFLAGS+= ${CDEBUGFLAGS}
# CFLAGS+= ${CPPFLAGS} <- done by bsd.lib.mk
CFLAGS+= ${CPPFLAGS} 
LIBDIR= $(exec_prefix)/lib
BINDIR= $(exec_prefix)/bin
INCDIR= $(exec_prefix)/include
MANDIR= $(exec_prefix)/man

.OBJDIR != if test -d ${.CURDIR}/obj ; then true ; else mkdir ${.CURDIR}/obj || exit 1 ; fi ; echo ${.CURDIR}/obj

# Standard bsd install rules look for the "install" program, rather than
# using some variable.  So, hack things so that that install rule works.
BINGRP != echo " " `groups` " " | sed 's/ [0-9][0-9]* / /g' | awk '{print $$1}'
BINOWN != echo $${USER}
LIBMODE = 644 # so ranlib can run!

.include "config.flags"

# %!$@@ pmake seems to automagically cd into the obj directory, so relative 
# srcdir references are completely botched.  Try to figure out an absolute
# pathname for srcdir here, and live with it.
srcdir = $(srctop)

beforeinstall: install-dirs

.include "${srcdir}/pthreads/Makefile.inc"
.include "${srcdir}/stdlib/Makefile.inc"
.include "${srcdir}/stdio/Makefile.inc"
.include "${srcdir}/string/Makefile.inc"
.include "${srcdir}/gen/Makefile.inc"
.include "${srcdir}/net/Makefile.inc"
.include "${srcdir}/scripts/Makefile.inc"

$(OBJS) : $(config) $(types) $(paths)

Makefile: ${srcdir}/config/Makefile.in
	cd ${.CURDIR} && sh config.status

all-lib : libpthread.a
# Removed make install since mysql uses this in place.
#install : install-bin install-include
install:
a22 1
.include <bsd.lib.mk>
@

