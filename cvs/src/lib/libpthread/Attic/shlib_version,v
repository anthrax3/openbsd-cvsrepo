head	1.33;
access;
symbols
	OPENBSD_5_1_BASE:1.32
	OPENBSD_5_1:1.32.0.2
	OPENBSD_5_0:1.30.0.4
	OPENBSD_5_0_BASE:1.30
	OPENBSD_4_9:1.30.0.2
	OPENBSD_4_9_BASE:1.30
	OPENBSD_4_8:1.28.0.2
	OPENBSD_4_8_BASE:1.28
	OPENBSD_4_7:1.27.0.2
	OPENBSD_4_7_BASE:1.27
	OPENBSD_4_6:1.25.0.6
	OPENBSD_4_6_BASE:1.25
	OPENBSD_4_5:1.25.0.2
	OPENBSD_4_5_BASE:1.25
	OPENBSD_4_4:1.24.0.2
	OPENBSD_4_4_BASE:1.24
	OPENBSD_4_3:1.22.0.2
	OPENBSD_4_3_BASE:1.22
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.2
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.18.0.2
	OPENBSD_4_0_BASE:1.18
	OPENBSD_3_9:1.17.0.2
	OPENBSD_3_9_BASE:1.17
	OPENBSD_3_8:1.16.0.4
	OPENBSD_3_8_BASE:1.16
	OPENBSD_3_7:1.16.0.2
	OPENBSD_3_7_BASE:1.16
	OPENBSD_3_6:1.15.0.2
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.10.0.2
	OPENBSD_3_5_BASE:1.10
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.4.0.2
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.1.0.12
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.10
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.8
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.6
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.4
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.33
date	2012.06.21.01.08.00;	author deraadt;	state dead;
branches;
next	1.32;

1.32
date	2012.01.17.19.47.27;	author guenther;	state Exp;
branches;
next	1.31;

1.31
date	2012.01.17.02.52.39;	author guenther;	state Exp;
branches;
next	1.30;

1.30
date	2010.11.07.13.29.21;	author fgsch;	state Exp;
branches;
next	1.29;

1.29
date	2010.10.28.15.02.41;	author millert;	state Exp;
branches;
next	1.28;

1.28
date	2010.04.12.01.54.23;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2009.10.27.20.34.37;	author jasper;	state Exp;
branches;
next	1.26;

1.26
date	2009.07.25.02.09.20;	author kurt;	state Exp;
branches;
next	1.25;

1.25
date	2008.12.18.09.30.32;	author guenther;	state Exp;
branches;
next	1.24;

1.24
date	2008.06.13.21.18.43;	author otto;	state Exp;
branches;
next	1.23;

1.23
date	2008.03.16.20.02.50;	author otto;	state Exp;
branches;
next	1.22;

1.22
date	2008.01.05.02.05.29;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	2008.01.01.00.43.39;	author kurt;	state Exp;
branches;
next	1.20;

1.20
date	2007.06.05.18.11.48;	author kurt;	state Exp;
branches;
next	1.19;

1.19
date	2006.10.10.14.12.23;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	2006.04.09.02.57.41;	author krw;	state Exp;
branches;
next	1.17;

1.17
date	2005.10.30.03.37.33;	author brad;	state Exp;
branches;
next	1.16;

1.16
date	2005.01.23.19.23.47;	author kettenis;	state Exp;
branches;
next	1.15;

1.15
date	2004.07.13.21.03.36;	author marc;	state Exp;
branches;
next	1.14;

1.14
date	2004.06.24.16.14.40;	author deraadt;	state Exp;
branches;
next	1.13;

1.13
date	2004.06.07.21.11.23;	author marc;	state Exp;
branches;
next	1.12;

1.12
date	2004.05.03.17.42.12;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2004.05.02.00.06.13;	author marc;	state Exp;
branches;
next	1.10;

1.10
date	2004.02.22.23.59.26;	author brad;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.12.18.27.28;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2003.12.23.22.43.04;	author brad;	state Exp;
branches;
next	1.7;

1.7
date	2003.07.21.20.30.46;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.08.23.37.14;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2003.04.14.07.01.47;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2002.12.03.06.39.39;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.11.21.20.45.05;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	2002.11.12.20.10.18;	author marc;	state Exp;
branches;
next	1.1;

1.1
date	2000.01.04.00.56.19;	author d;	state Exp;
branches;
next	;


desc
@@


1.33
log
@For now... libpthread is just a container directory, since all the new
goop is in librthread.  As a result, the top-level Makefile and
shlib_version here are simply very confusing and tell lies.  Remove
them, and update the instructions in libc to not make my mistake
again.
ok guenther
@
text
@major=13
minor=3
@


1.32
log
@Bump minor for addition of openat/pread/preadv/pwrite/pwritev
@
text
@@


1.31
log
@Make openat(), pread(), preadv(), pwrite(), and pwritev() cancellation
points.

ok fgsch@@
@
text
@d2 1
a2 1
minor=2
@


1.30
log
@Add sched_get_priority_{min,max}. tested in a bulk by landry@@.
input and ok from phessler@@ and guenther@@
@
text
@d2 1
a2 1
minor=1
@


1.29
log
@Change basep parameter of getdirentries() to be off_t *, not long *
so it works correctly with large offsets (and matches other systems).
This requires adding a new getdirentries syscall, with the old one
renamed to ogetdirentries.  All in-tree consumers of getdirentries()
have been updated.  Bump libc and libpthread major numbers.
OK and with deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.28
log
@Add support for pthread_rwlock_timed locks.
from brad.  ok kurt, who's too busy to commit
@
text
@d1 2
a2 2
major=12
minor=1
@


1.27
log
@- bump the majors of libpthread and librthread, as they used to return an
aliased ENOTSUP. i should've done this earlier, but missed it. my bad.

as discussed with deraadt@@ guenther@@
@
text
@d2 1
a2 1
minor=0
@


1.26
log
@- add a symbol to help gdb location pthread internals (_thread_ctx_offset)
ok kettenis@@
@
text
@d1 2
a2 2
major=11
minor=2
@


1.25
log
@Add pthread_attr_[sg]etguardsize() to match rthread, including manpages
Bump lib minor

ok otto@@ kurt@@ marc@@; doc review by jmc@@
@
text
@d2 1
a2 1
minor=1
@


1.24
log
@remove _MALLOC_LOCK_INIT; major bump; ok deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.23
log
@bump
@
text
@d1 1
a1 1
major=10
@


1.22
log
@crank libc and libpthread, because libc cannot build lint libraries anymore if a syscall is OBSOL..
@
text
@d1 1
a1 1
major=9
@


1.21
log
@- make arc4random*() functions thread safe. Use a custom spinlock function
instead of the generic pthread macros since free(3) uses __arc4_getbyte()
when freeing small sized allocations and the generic pthread macros call
malloc(3).
- eliminate passing pointers to a static variable with global scope (rs)
for additional code clarity and reduction.
- shlib minor bumps for libc and libpthread due to new functions.
From andreas@@ with some bits from me. okay tedu@@ marc@@ w/some spot
checking from millert@@
@
text
@d1 2
a2 2
major=8
minor=1
@


1.20
log
@_FD_LOCK/UNLOCK() is libpthread specific and not needed for librthread, so
isolate its usage to libpthread only and replace with generic non-static
mutex support in the one place it is needed:
 - remove _FD_LOCK/UNLOCK from lseek and ftruncate in libc and make the
   functions weak so that libpthread can override with its own new
   versions that do the locking.
 - remove _thread_fd_lock/unlock() weak functions from libc and adjust
   libpthread for the change.
 - add generic _thread_mutex_lock/unlock/destroy() weak functions in libc
   to support non-static mutexes in libc and add libpthread and librthread
   implementations for them. libc can utilize non-static mutexes via the
   new _MUTEX_LOCK/UNLOCK/DESTROY() macros. Actually these new macros can
   support both static and non-static mutexes but currently only using
   them for non-static.
 - make opendir/closedir/readdir/readdir_r/seekdir/telldir() thread-safe
   for both thread libraries by using a non-static mutex in the struct
   _dirdesc (typedef DIR), utilizing it in the *dir functions and remove
   remaining and incorrect _FD_LOCK/UNLOCK() use in libc.
 - add comments to both thread libraries to indicate libc depends on the
   current implementation of static mutex initialization. suggested by
   marc@@
 - major bump libc and libpthread due to function removal, structure
   change and weak symbol conversions.
okay marc@@, tedu@@
@
text
@d2 1
a2 1
minor=0
@


1.19
log
@libc/shlib_version
@
text
@d1 1
a1 1
major=7
@


1.18
log
@Change a debug interface to take const char pointers so we don't ave
to cast away constness whenever we want to pass in a string that is
already const -- we copy the string if we want to use it, so having it
be non-const in the first place does not make any sense.

From tholo@@

ok tedu@@
@
text
@d1 2
a2 2
major=6
minor=3
@


1.17
log
@Add pthread_atfork(3)

From FreeBSD

'looks ok' fgsch@@ miod@@
man page reviewed by jmc@@
@
text
@d2 1
a2 1
minor=2
@


1.16
log
@Add debug support.
ok marc@@
@
text
@d2 1
a2 1
minor=1
@


1.15
log
@errno changes, lib major version bumps, and general flag day
To build you must:
cd /usr/src && make obj && make includes
cd lib/libc && make depend && make && NOMAN=1 sudo make install
cd /usr/src && make build
@
text
@d2 1
a2 1
minor=0
@


1.14
log
@hsearch API/ABI u_int -> size_t -> crank majors; ok millert
@
text
@d1 1
a1 1
major=5
@


1.13
log
@
major bump to libc and libpthread to break the dependency of a
particular implementation of libpthread for libc.  libc no longer
needs pthread.h to compile.
OK millert@@, brad@@, tedu@@
@
text
@d1 1
a1 1
major=4
@


1.12
log
@libc major number crank
@
text
@d1 1
a1 1
major=3
@


1.11
log
@bump minor for new functions.  Reminder from brad@@
@
text
@d1 2
a2 2
major=2
minor=5
@


1.10
log
@add pthread_attr_[get|set]stack

From: FreeBSD's libc_r

ok marc@@
@
text
@d2 1
a2 1
minor=4
@


1.9
log
@new syscall closefrom(2).  ok deraadt millert
@
text
@d2 1
a2 1
minor=3
@


1.8
log
@bump minor
@
text
@d2 1
a2 1
minor=2
@


1.7
log
@minor number bump due to added functions
@
text
@d2 1
a2 1
minor=1
@


1.6
log
@crank major number to correspond to libc major change
@
text
@d2 1
a2 1
minor=0
@


1.5
log
@when libc/shlib_version says you need to crank this one too, DO NOT IGNORE
THAT ADVICE -- IT IS THERE FOR A REASON
@
text
@d1 2
a2 2
major=1
minor=1
@


1.4
log
@Crank all library major numbers.  Needed due to the fact that we
now build libraries with propolice enabled.  Without this, existing
binaries (such as ports/packages) that link with any system library
other than libc will fail with an undefined symbol of "___guard"
(__guard on ELF).
Pointed out by markus@@ and discussed with deraadt@@
@
text
@d2 1
a2 1
minor=0
@


1.3
log
@
Add strerror_r and functions versions of getchar_unlocked and
putchar_unlocked.   Crank the minor on related libs.  OK fgs@@, deraadt@@
@
text
@d1 2
a2 2
major=0
minor=8
@


1.2
log
@
don't build with -g/-ggdb by default.
always build with -Wall
bump version to 0.7 (matches libc_r x.7)
@
text
@d2 1
a2 1
minor=7
@


1.1
log
@a version separate from libc's to make things simpler.
@
text
@d2 1
a2 1
minor=0
@

