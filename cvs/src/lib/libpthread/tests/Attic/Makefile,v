head	1.5;
access;
symbols
	OPENBSD_2_4:1.4.0.2
	OPENBSD_2_4_BASE:1.4
	from_mysql_3_22_4:1.1.1.1
	mit:1.1.1;
locks; strict;
comment	@# @;


1.5
date	99.03.10.08.54.02;	author d;	state dead;
branches;
next	1.4;

1.4
date	98.07.22.11.33.38;	author peter;	state Exp;
branches;
next	1.3;

1.3
date	98.07.22.10.46.58;	author peter;	state Exp;
branches;
next	1.2;

1.2
date	98.07.21.19.48.09;	author peter;	state Exp;
branches;
next	1.1;

1.1
date	98.07.21.13.22.21;	author peter;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.07.21.13.22.21;	author peter;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@# Generated automatically from Makefile.in by configure.
# === GNUmakefile ============================================================
# Copyright (c) 1993 Chris Provenzano, proven@@athena.mit.edu
#
#	Description: This file is for creating the test programs for libpthread.a
#
#	1.00 93/08/03 proven
#		-Initial cut for pthreads.
#

INCLUDES= -I/usr/include/pthread
CFLAGS = -O2 -g -Werror $(INCLUDES) -DSRCDIR="\"${.CURDIR}\""
LDFLAGS = -static -lm -lgcc -L../obj.${MACHINE}/ -lpthread

# This list used to include test_select, but that test doesn't terminate.
TESTS = test_create test_pthread_join test_switch test_sleep test_readdir \
	test_fork test_execve test_preemption test_preemption_float \
	test_sock_1 test_sock_2 test_stdio_1 test_pthread_mutex \
	test_pthread_cond_timedwait test_netdb test_pw test_cwd
# This list used to include p_bench_semaphore, but the semaphore support isn't
# defined for all targets (or used for any).
BENCHMARKS = p_bench_read p_bench_mutex p_bench_yield \
	p_bench_getpid p_bench_pthread_create

OBJS= ${TESTS:=.o}
BOBJS= ${BENCHMARKS:=.o}

all : $(TESTS) $(BENCHMARKS)

${TESTS}: ${OBJS}
	${CC} ${CFLAGS} -o ${.TARGET} ${.TARGET:=.o} ${LDFLAGS}

${BENCHMARKS}: ${BOBJS}
	${CC} ${CFLAGS} -o ${.TARGET} ${.TARGET:=.o} ${LDFLAGS}

check : $(TESTS)
	set -e ; \
	for i in $(TESTS) ; do \
	  echo Running test $$i ... ; \
	  ./$$i ; \
	done

clean: 
	rm -f *.o $(TESTS) $(BENCHMARKS) a.out core maketmp makeout

depend:
	sed '/\#\#\# Dependencies/q' < Makefile > maketmp
	(for i in $(CSRC);do $(CPP) -M $$i;done) >> maketmp
	cp maketmp Makefile

#test_create : test_create.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_create test_create.o $(LIBS)
#
#test_pthread_join : test_pthread_join.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_pthread_join test_pthread_join.o $(LIBS)
#
#test_switch : test_switch.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_switch test_switch.o $(LIBS)
#
#test_sleep : test_sleep.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_sleep test_sleep.o $(LIBS)
#
#test_readdir : test_readdir.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_readdir test_readdir.o $(LIBS)
#
#test_fork : test_fork.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_fork test_fork.o $(LIBS)
#
#test_execve : test_execve.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_execve test_execve.o $(LIBS)
#
#test_preemption : test_preemption.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_preemption test_preemption.o $(LIBS)
#
#test_preemption_float : test_preemption_float.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_preemption_float test_preemption_float.o $(LIBS)
#
#test_stdio_1 : test_stdio_1.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_stdio_1 test_stdio_1.o $(LIBS)
#
#test_sock_1 : test_sock_1.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_sock_1 test_sock_1.o $(LIBS)
#
#test_sock_2 : test_sock_2a test_sock_2.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_sock_2 test_sock_2.o $(LIBS)
#
#test_sock_2a : test_sock_2a.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_sock_2a test_sock_2a.o $(LIBS)
#
#test_pthread_mutex : test_pthread_mutex.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_pthread_mutex test_pthread_mutex.o $(LIBS)
#
#test_pthread_cond_timedwait : test_pthread_cond_timedwait.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_pthread_cond_timedwait test_pthread_cond_timedwait.o $(LIBS)
#
#test_netdb : test_netdb.o ../libpthread.a
#	$(CC) $(CFLAGS) -o test_netdb test_netdb.o $(LIBS)
#
#test_select : test_select.o ../obj/libpthread.a
#	$(CC) $(CFLAGS) -o test_select test_select.o $(LIBS)
#
#test_pw : test_pw.o ../obj/libpthread.a
#	$(CC) $(CFLAGS) -o test_pw test_pw.o $(LIBS)
#
#test_cwd : test_cwd.o ../obj/libpthread.a
#	$(CC) $(CFLAGS) -o test_cwd test_cwd.o $(LIBS)
#
#p_bench_read : p_bench_read.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_read p_bench_read.o $(LIBS)
#
#p_bench_semaphore : p_bench_semaphore.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_semaphore p_bench_semaphore.o $(LIBS)
#
#p_bench_mutex : p_bench_mutex.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_mutex p_bench_mutex.o $(LIBS)
#
#p_bench_yield : p_bench_yield.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_yield p_bench_yield.o $(LIBS)
#
#p_bench_getpid : p_bench_getpid.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_getpid p_bench_getpid.o $(LIBS)
#
#p_bench_pthread_create : p_bench_pthread_create.o ../libpthread.a
#	$(CC) $(CFLAGS) -o p_bench_pthread_create p_bench_pthread_create.o $(LIBS)
@


1.4
log
@o for some reason fprintf.c started to conflict with the fprintf defn
  in xprintf.c - removed fprintf.c from the sources list for now.

o tidied up tests/Makefile and swapped some printf's for perror's in
  a couple of the tests. accept() is still generating an error, but
  at least we can see the errno value :)
@
text
@@


1.3
log
@o removed more unused or old, left over files

o general changes so that now the library compiles and many of the
  tests run correctly

o pthreads/Makefile.inc rebuilt using libc/sys/Makefile.inc as a template.
  this should be kept in sync in case of new syscalls

soon TODO:
figure out why remaining tests fail and fix
look at building .so version of library
tidy up arch/i386 directory - no longer uses syscall-template.S
port other arch's from libc syscall templates
@
text
@a10 1
CDEBUGFLAGS = -g -O2 -Werror
d12 2
a13 2
CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) -DSRCDIR="\"${.CURDIR}\""
LIBS = -static -lm -lgcc -L${.CURDIR}/../obj.${MACHINE}/ -lpthread
d25 3
d30 6
a42 5
# More flags
ADDITIONALFLAGS = -DPTHREAD_INITIAL_PORT
################################################################################
#

d51 74
a124 111
install:

realclean: clean
	rm -f Makefile

.c.o:
	$(CC) $(CFLAGS) -c $<

Makefile: Makefile.in
	(cd .. ; sh config.status)

test_create : test_create.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_create test_create.o $(LIBS)

test_pthread_join : test_pthread_join.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_pthread_join test_pthread_join.o $(LIBS)

test_switch : test_switch.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_switch test_switch.o $(LIBS)

test_sleep : test_sleep.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_sleep test_sleep.o $(LIBS)

test_readdir : test_readdir.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_readdir test_readdir.o $(LIBS)

test_fork : test_fork.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_fork test_fork.o $(LIBS)

test_execve : test_execve.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_execve test_execve.o $(LIBS)

test_preemption : test_preemption.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_preemption test_preemption.o $(LIBS)

test_preemption_float : test_preemption_float.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_preemption_float test_preemption_float.o $(LIBS)

test_stdio_1 : test_stdio_1.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_stdio_1 test_stdio_1.o $(LIBS)

test_sock_1 : test_sock_1.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_sock_1 test_sock_1.o $(LIBS)

test_sock_2 : test_sock_2a test_sock_2.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_sock_2 test_sock_2.o $(LIBS)

test_sock_2a : test_sock_2a.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_sock_2a test_sock_2a.o $(LIBS)

test_pthread_mutex : test_pthread_mutex.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_pthread_mutex test_pthread_mutex.o $(LIBS)

test_pthread_cond_timedwait : test_pthread_cond_timedwait.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_pthread_cond_timedwait test_pthread_cond_timedwait.o $(LIBS)

test_netdb : test_netdb.o ../libpthread.a
	$(CC) $(CFLAGS) -o test_netdb test_netdb.o $(LIBS)

test_select : test_select.o ../obj/libpthread.a
	$(CC) $(CFLAGS) -o test_select test_select.o $(LIBS)

test_pw : test_pw.o ../obj/libpthread.a
	$(CC) $(CFLAGS) -o test_pw test_pw.o $(LIBS)

test_cwd : test_cwd.o ../obj/libpthread.a
	$(CC) $(CFLAGS) -o test_cwd test_cwd.o $(LIBS)

p_bench_read : p_bench_read.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_read p_bench_read.o $(LIBS)

p_bench_semaphore : p_bench_semaphore.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_semaphore p_bench_semaphore.o $(LIBS)

p_bench_mutex : p_bench_mutex.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_mutex p_bench_mutex.o $(LIBS)

p_bench_yield : p_bench_yield.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_yield p_bench_yield.o $(LIBS)

p_bench_getpid : p_bench_getpid.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_getpid p_bench_getpid.o $(LIBS)

p_bench_pthread_create : p_bench_pthread_create.o ../libpthread.a
	$(CC) $(CFLAGS) -o p_bench_pthread_create p_bench_pthread_create.o $(LIBS)

test_create.o : test_create.c
test_pthread_join.o : test_pthread_join.c
test_switch.o : test_switch.c
test_sleep.o : test_sleep.c
test_readdir.o : test_readdir.c
test_fork.o : test_fork.c
test_execve.o : test_execve.c
test_preemption.o : test_preemption.c
test_preemption_float.o : test_preemption_float.c
test_sock_1.o : test_sock_1.c
test_sock_2.o : test_sock_2.c
test_sock_3.o : test_sock_3.c
test_stdio_1.o : test_stdio_1.c
test_pthread_mutex.o : test_pthread_mutex.c
test_pthread_cond_timedwait.o : test_pthread_cond_timedwait.c
p_bench_read.o : p_bench_read.c
p_bench_semaphore.o : p_bench_semaphore.c
p_bench_mutex.o : p_bench_mutex.c
p_bench_yield.o : p_bench_yield.c
p_bench_getpid.o : p_bench_getpid.c
p_bench_pthread_create.o : p_bench_pthread_create.c

################################################################################
### Do not remove the following line. It is for depend #########################
### Dependencies:
@


1.2
log
@this will now compile on i386 if you move arch/i386/machdep.h to
arch/i386/pthread/machdep.h - not an ideal solution. Correct fix
is welcome. I am quiting work on this for today, so other hackers
are welcome to take it up for the rest of the day/night. More from
me tomorrow.
@
text
@d12 3
a14 4

INCLUDES= -I../arch/${MACHINE} -I../include -I.. -I$(srctop)/include
CFLAGS = $(CDEBUGFLAGS) $(INCLUDES) $(ADDL_CFLAGS) -DSRCDIR=\"$(srcdir)\"
LIBS = -static -lm -lgcc -L../obj.${MACHINE}/ -lpthread
@


1.1
log
@Initial revision
@
text
@a10 5
CC = ../pgcc -notinstalled
CPP = gcc -E
srctop = /dr1/my/masters/mysql/mit-pthreads
srcdir = /dr1/my/masters/mysql/mit-pthreads/tests
VPATH = /dr1/my/masters/mysql/mit-pthreads/tests
d13 1
a13 1
INCLUDES= -I../include -I.. -I$(srctop)/include
d15 1
a15 2
LIBS = -lm -lgcc -L../obj/ -lpthread
#LIBS = -static 
@


1.1.1.1
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/

@
text
@@
