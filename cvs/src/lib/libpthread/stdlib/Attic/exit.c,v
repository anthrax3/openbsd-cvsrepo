head	1.2;
access;
symbols
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	from_mysql_3_22_4:1.1.1.1
	mit:1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.03.10.08.53.59;	author d;	state dead;
branches;
next	1.1;

1.1
date	98.07.21.13.22.19;	author peter;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.07.21.13.22.19;	author peter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
/*static char *sccsid = "from: @@(#)exit.c	5.4 (Berkeley) 2/23/91";*/
static char *rcsid = "$Id: exit.c,v 1.1 1998/07/21 13:22:19 peter Exp $";
#endif /* LIBC_SCCS and not lint */

#include <pthread.h>
#include <stddef.h>
#include <stdlib.h>
#include <unistd.h>
#include <sys/cdefs.h>
#include <pthread/posix.h>
#include "atexit.h"

void (*__cleanup)();

/*
 * Exit, flushing stdio buffers if necessary.
 */
void __NORETURN exit(int status)
{
	register struct atexit *p;
	register int n;

	for (p = __atexit; p; p = p->next)
		for (n = p->ind; --n >= 0;)
			(*p->fns[n])();
	if (__cleanup)
		(*__cleanup)();
	_exit(status);

	/* This is to shut up gcc, which complains about this function
	 * returning even if _exit() is declared noreturn. */
	while (1);
}


/*
 * Register a function to be performed at exit.
 */
int atexit(void (*fn)())
{
	static struct atexit __atexit0;	/* one guaranteed table */
	register struct atexit *p;

	if ((p = __atexit) == NULL)
		__atexit = p = &__atexit0;
	else if (p->ind >= ATEXIT_SIZE) {
		if ((p = malloc(sizeof(*p))) == NULL)
			return (-1);
		p->ind = 0;
		p->next = __atexit;
		__atexit = p;
	}
	p->fns[p->ind++] = fn;
	return (0);
}
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
static char *rcsid = "$Id: exit.c,v 1.51 1995/02/19 19:16:32 ghudson Exp $";
@


1.1.1.1
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/

@
text
@@
