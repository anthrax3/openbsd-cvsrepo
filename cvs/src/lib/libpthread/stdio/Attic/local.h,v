head	1.2;
access;
symbols
	OPENBSD_2_4:1.1.1.2.0.2
	OPENBSD_2_4_BASE:1.1.1.2
	from_mysql_3_22_4:1.1.1.2
	mit:1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.2
date	99.03.10.08.53.50;	author d;	state dead;
branches;
next	1.1;

1.1
date	95.10.18.08.43.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.07;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.07.21.13.21.29;	author peter;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	from: @@(#)local.h	5.3 (Berkeley) 5/6/93
 *	$Id: local.h,v 1.1 1995/10/18 08:43:07 deraadt Exp $
 */

/*
 * Information local to this implementation of stdio,
 * in particular, macros and private variables.
 */

FILE	*__sfp 			__P((void));
int		__sflush 		__P((FILE *));
int		__srefill 		__P((FILE *));
int		__swrite 		__P((FILE *, const char *, int));
int		__sread 		__P((FILE *, char *, int));
fpos_t	__sseek 		__P((FILE *, fpos_t, int));
int		__sclose 		__P((FILE *));
void	__sinit 		__P((void));
void	_cleanup 		__P((void));
void	(*__cleanup) 	__P((void));
void	__smakebuf 		__P((FILE *));
int		__swhatbuf 		__P((FILE *, size_t *, int *));
int		__swalk_sflush 	__P(());
int		__swsetup 		__P((FILE *));
int		__sflags 		__P((const char *, int *));

extern int __sdidinit;

/*
 * Return true iff the given FILE cannot be written now.
 */
#define	cantwrite(fp) \
	((((fp)->_flags & __SWR) == 0 || (fp)->_bf._base == NULL) && \
	 __swsetup(fp))

/*
 * Test whether the given stdio file has an active ungetc buffer;
 * release such a buffer, without restoring ordinary unread data.
 */
#define	HASUB(fp) ((fp)->_ub._base != NULL)
#define	FREEUB(fp) { \
	if ((fp)->_ub._base != (fp)->_ubuf) \
		free((char *)(fp)->_ub._base); \
	(fp)->_ub._base = NULL; \
}

/*
 * test for an fgetline() buffer.
 */
#define	HASLB(fp) ((fp)->_lb._base != NULL)
#define	FREELB(fp) { \
	free((char *)(fp)->_lb._base); \
	(fp)->_lb._base = NULL; \
}
@


1.1
log
@Initial revision
@
text
@d37 1
a37 1
 *	$Id: local.h,v 1.1 1994/02/07 22:06:17 proven Exp $
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/
@
text
@d37 1
a37 1
 *	$Id: local.h,v 1.54 1995/02/18 07:56:09 proven Exp $
d45 15
a59 2
#include <sys/types.h>
#include <stddef.h>
d61 1
a61 16
extern FILE *__sfp 		__P_((void));
extern int __sflush 		__P_((FILE *));
extern int __srefill 		__P_((FILE *));
extern int __swrite 		__P_((FILE *, const char *, int));
extern int __sread 		__P_((FILE *, char *, int));
extern fpos_t __sseek 		__P_((FILE *, off_t, int));
extern int __sclose 		__P_((FILE *));
extern void __sinit 		__P_((void));
extern void _cleanup 		__P_((void));
extern void __smakebuf 		__P_((FILE *));
extern int __swhatbuf 		__P_((FILE *, size_t *, int *));
extern int __swalk_sflush 	__P_(());
extern int __swsetup 		__P_((FILE *));
extern int __sflags 		__P_((const char *, int *));

extern void (*__cleanup) 	__P_((void));
@

