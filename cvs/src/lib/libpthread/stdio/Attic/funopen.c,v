head	1.4;
access;
symbols
	OPENBSD_2_4:1.3.0.2
	OPENBSD_2_4_BASE:1.3
	from_mysql_3_22_4:1.1.1.2
	mit:1.1.1
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.4
date	99.03.10.08.53.48;	author d;	state dead;
branches;
next	1.3;

1.3
date	98.07.21.13.53.58;	author peter;	state Exp;
branches;
next	1.2;

1.2
date	97.07.25.20.30.22;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.07;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.07;	author deraadt;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	98.07.21.13.21.13;	author peter;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Goodbye, MIT pthreads... you were a handy reference implementation
@
text
@/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * Copyright (c) 1993, 1994 Chris Provenzano. 
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Chris Torek.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
/*static char *sccsid = "from: @@(#)funopen.c	5.2 (Berkeley) 2/5/91";*/
static char *rcsid = "$Id: funopen.c,v 1.3 1998/07/21 13:53:58 peter Exp $";
#endif /* LIBC_SCCS and not lint */

#include <pthread.h>
#include <stdlib.h>
#include <fcntl.h>
#include <stdio.h>
#include <errno.h>
#include "local.h"

FILE *
funopen(cookie, readfn, writefn, seekfn, closefn)
	const void *cookie;
	int (*readfn)(), (*writefn)();
#ifdef __STDC__
	fpos_t (*seekfn)(void *cookie, fpos_t off, int whence);
#else
	fpos_t (*seekfn)();
#endif
	int (*closefn)();
{
	struct fd_ops *fd_ops;
	char *flags;
	FILE *fp;
	int fd;

	if (readfn == NULL) {
		if (writefn == NULL) {		/* illegal */
			errno = EINVAL;
			return (NULL);
		} else
			flags = "w";		/* write only */
	} else {
		if (writefn == NULL)
			flags = "r";		/* read only */
		else
			flags = "r+";		/* read-write */
	}

	if (fd_ops = (struct fd_ops*)malloc(sizeof(struct fd_ops))) {
		if ((fd = fd_allocate()) >= OK) {

			/* Set functions */
			fd_ops->seek = (off_t(*)())seekfn;
			fd_ops->read = (pthread_ssize_t(*)())readfn;
			fd_ops->write = (pthread_ssize_t(*)())writefn;
			fd_ops->close = closefn;
			fd_ops->use_kfds = 2;

			/* Alloc space for funtion pointer table */
			fd_table[fd]->type = FD_HALF_DUPLEX;
			fd_table[fd]->ops = fd_ops;
			fd_table[fd]->flags = O_RDWR;
	
			/* Save the cookie, it's important */
			fd_table[fd]->fd.ptr = (void *)cookie;

			if (fp = fdopen(fd, flags))
				return(fp);
			
			fd_free(fd);
		}
		free(fd_ops);
	}
	return(NULL);
}
@


1.3
log
@fix up those 13 broken merges
@
text
@d40 1
a40 1
static char *rcsid = "$Id: funopen.c,v 1.1.1.2 1998/07/21 13:21:13 peter Exp $";
@


1.2
log
@#if __STDC__ --> #ifdef __STDC__
@
text
@d3 1
d40 1
a40 1
static char *rcsid = "$Id: funopen.c,v 1.1.1.1 1995/10/18 08:43:07 deraadt Exp $";
d44 2
d80 1
a80 1
		if ((!(fd = fd_allocate())) < OK) {
d83 3
a85 3
			fd_ops->seek = seekfn;
			fd_ops->read = readfn;
			fd_ops->write = writefn;
d87 1
d92 1
d95 1
a95 1
			fd_table[fd]->fd.ptr = cookie;
@


1.1
log
@Initial revision
@
text
@d39 1
a39 1
static char *rcsid = "$Id: funopen.c,v 1.1 1994/02/07 22:06:02 proven Exp $";
d51 1
a51 1
#if __STDC__
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@


1.1.1.2
log
@Complete initial import from mySQL 3.22.4 (mit-pthreads/).
Lots of dross to move and remove yet.

At minimum:
o	remove GNU config and GNU Makefiles
o	build arch directory and migrate away machdep/
o	rebuild BSD Makefiles
o	move notes etc. into doc/
@
text
@a2 1
 * Copyright (c) 1993, 1994 Chris Provenzano. 
d39 1
a39 1
static char *rcsid = "$Id: funopen.c,v 1.53.4.1 1996/10/01 17:18:49 proven Exp $";
a42 2
#include <stdlib.h>
#include <fcntl.h>
d77 1
a77 1
		if ((fd = fd_allocate()) >= OK) {
d80 3
a82 3
			fd_ops->seek = (off_t(*)())seekfn;
			fd_ops->read = (pthread_ssize_t(*)())readfn;
			fd_ops->write = (pthread_ssize_t(*)())writefn;
a83 1
			fd_ops->use_kfds = 2;
a87 1
			fd_table[fd]->flags = O_RDWR;
d90 1
a90 1
			fd_table[fd]->fd.ptr = (void *)cookie;
@

