head	1.15;
access;
symbols
	OPENBSD_6_0:1.15.0.2
	OPENBSD_6_0_BASE:1.15
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.8
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.4
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.8.0.18
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.14
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.12
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.4.0.20
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.18
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.16
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.14
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.12
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.10
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.8
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.6
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.4
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.2
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.15
date	2016.04.11.20.43.33;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	OUneMOe0l7HombT5;

1.14
date	2016.04.11.19.54.54;	author schwarze;	state Exp;
branches;
next	1.13;
commitid	xizUpRlYj2C4Hcj6;

1.13
date	2016.04.09.19.31.55;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	t22PDRfkb5DJX3rc;

1.12
date	2016.03.20.23.48.27;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	tRHhB2RN3ZD1GvoI;

1.11
date	2016.03.20.22.57.59;	author schwarze;	state Exp;
branches;
next	1.10;
commitid	VBVmrUoZFnMc0hts;

1.10
date	2016.01.30.17.32.52;	author schwarze;	state Exp;
branches;
next	1.9;
commitid	wAt9MiELkmlnoi4U;

1.9
date	2014.05.19.08.58.34;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.31.08.42.24;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.16.21.27.26;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.03.14.05.12.49;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.01.16.05.18.34;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.27.09;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.15
log
@get rid of the non-standard data type "Char" in almost all files;
ok martijn@@
@
text
@/*	$OpenBSD: hist.h,v 1.14 2016/04/11 19:54:54 schwarze Exp $	*/
/*	$NetBSD: hist.h,v 1.21 2016/04/11 00:50:13 christos Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Christos Zoulas of Cornell University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)hist.h	8.1 (Berkeley) 6/4/93
 */

/*
 * el.hist.c: History functions
 */
#ifndef _h_el_hist
#define	_h_el_hist

typedef int (*hist_fun_t)(void *, HistEventW *, int, ...);

typedef struct el_history_t {
	wchar_t		*buf;		/* The history buffer		*/
	size_t		 sz;		/* Size of history buffer	*/
	wchar_t		*last;		/* The last character		*/
	int		 eventno;	/* Event we are looking for	*/
	void		*ref;		/* Argument for history fcns	*/
	hist_fun_t	 fun;		/* Event access			*/
	HistEventW	 ev;		/* Event cookie			*/
} el_history_t;

#define	HIST_FUN_INTERNAL(el, fn, arg)	\
    ((((*(el)->el_history.fun) ((el)->el_history.ref, &(el)->el_history.ev, \
	fn, arg)) == -1) ? NULL : (el)->el_history.ev.str)
#define HIST_FUN(el, fn, arg) \
    (((el)->el_flags & NARROW_HISTORY) ? hist_convert(el, fn, arg) : \
	HIST_FUN_INTERNAL(el, fn, arg))

#define	HIST_NEXT(el)		HIST_FUN(el, H_NEXT, NULL)
#define	HIST_FIRST(el)		HIST_FUN(el, H_FIRST, NULL)
#define	HIST_LAST(el)		HIST_FUN(el, H_LAST, NULL)
#define	HIST_PREV(el)		HIST_FUN(el, H_PREV, NULL)
#define	HIST_SET(el, num)	HIST_FUN(el, H_SET, num)
#define	HIST_LOAD(el, fname)	HIST_FUN(el, H_LOAD fname)
#define	HIST_SAVE(el, fname)	HIST_FUN(el, H_SAVE fname)
#define	HIST_SAVE_FP(el, fp)	HIST_FUN(el, H_SAVE_FP fp)

protected int		hist_init(EditLine *);
protected void		hist_end(EditLine *);
protected el_action_t	hist_get(EditLine *);
protected int		hist_set(EditLine *, hist_fun_t, void *);
protected int		hist_command(EditLine *, int, const wchar_t **);
protected int		hist_enlargebuf(EditLine *, size_t, size_t);
protected wchar_t	*hist_convert(EditLine *, int, void *);

#endif /* _h_el_hist */
@


1.14
log
@Move wrapper macros to the two files actually needing them:
FUNW, Strlen, Strdup, Strcmp, Strncmp, Strncpy, Strncat -> history.c
Strchr, tok_strdup -> tokenizer.c
FUN, TYPE, STR -> both of these files

OK martijn@@

Also proofread by Christian Heckendorf <mbie at ulmus dot me>
who reported some whitespace issues in parse.c.
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.13 2016/04/09 19:31:55 schwarze Exp $	*/
/*	$NetBSD: hist.h,v 1.19 2016/03/23 22:27:48 christos Exp $	*/
d47 1
a47 1
	Char		*buf;		/* The history buffer		*/
d49 1
a49 1
	Char		*last;		/* The last character		*/
d76 1
a76 1
protected int		hist_command(EditLine *, int, const Char **);
@


1.13
log
@Always compile with WIDECHAR on and delete that preprocessor switch.
OK martijn@@.
Diff also proofread by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.h,v 1.12 2016/03/20 23:48:27 schwarze Exp $	*/
d44 1
a44 1
typedef int (*hist_fun_t)(void *, TYPE(HistEvent) *, int, ...);
d53 1
a53 1
	TYPE(HistEvent)	 ev;		/* Event cookie			*/
@


1.12
log
@Cleanup of standard header inclusion:

1. Add the missing <errno.h> to sig.c.
2. Do not include standard headers from private headers "chared.h"
and "el.h", include them directly where needed.
3. Delete a few needless inclusions of <ctype.h>.
4. Sort the standard headers.
5. Delete _GNU_SOURCE weirdness from histedit.h, that file doesn't even
need the access to wcsdup(3) mentioned in the comment.
6. Delete some trailing blanks and blanks before tabs.

OK czarkoff@@
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.11 2016/03/20 22:57:59 schwarze Exp $	*/
/*	$NetBSD: hist.h,v 1.18 2016/02/17 19:47:49 christos Exp $	*/
a58 1
#ifdef WIDECHAR
a61 4
#else
#define HIST_FUN(el, fn, arg) HIST_FUN_INTERNAL(el, fn, arg)
#endif

a77 1
#ifdef WIDECHAR
a78 1
#endif
@


1.11
log
@Cleanup of private header inclusion:

1. Do not include private headers from "chared.h", "hist.h", "prompt.h",
"refresh.h", "search.h", "sig.h", "terminal.h", "tty.h".
The only private header having to include other private headers is "el.h".
2. Do not include "common.h", "parse.h", "help.h" from "el.h",
and do not include "emacs.h" and "vi.h" from "chared.h",
include them directly where needed.
3. Do include "fcns.h" from "el.h" because el_func_t is needed for "map.h".
4. Do not include private headers again that are already included by "el.h".
5. Include private headers after standard headers.

OK czarkoff@@
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.10 2016/01/30 17:32:52 schwarze Exp $	*/
/*	$NetBSD: hist.h,v 1.17 2016/02/16 15:53:48 christos Exp $	*/
d84 1
a84 1
protected wchar_t 	*hist_convert(EditLine *, int, void *);
@


1.10
log
@Fifth step in synching with NetBSD:
Delete the silly ptr_t and ioctl_t typedefs
and delete some "#ifdef notdef" code from "sys.h".
No functional change.
This makes hist.h identical to the NetBSD version.
It reduces the remaining diff from +1526 -734 to +1430 -592.
OK czarkoff@@
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.9 2014/05/19 08:58:34 nicm Exp $	*/
/*	$NetBSD: hist.h,v 1.14 2014/05/11 01:05:17 christos Exp $	*/
a42 2

#include "histedit.h"
@


1.9
log
@Add a H_SAVE_FP operation to history() which lets the history be saved
to an open file pointer. From NetBSD via Eitan Adler.

ok millert
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.8 2010/06/30 00:05:35 nicm Exp $	*/
/*	$NetBSD: hist.h,v 1.12 2009/12/30 23:54:52 christos Exp $	*/
d46 1
a46 1
typedef int (*hist_fun_t)(ptr_t, TYPE(HistEvent) *, int, ...);
d50 1
a50 1
	size_t		sz;		/* Size of history buffer	*/
d53 1
a53 1
	ptr_t		 ref;		/* Argument for history fcns	*/
d82 1
a82 1
protected int		hist_set(EditLine *, hist_fun_t, ptr_t);
d86 1
a86 1
protected wchar_t 	*hist_convert(EditLine *, int, ptr_t);
@


1.8
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d77 1
@


1.7
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d2 1
a2 1
/*	$NetBSD: hist.h,v 1.10 2003/08/07 16:44:31 agc Exp $	*/
d46 1
a46 1
typedef int (*hist_fun_t)(ptr_t, HistEvent *, int, ...);
d49 1
a49 1
	char		*buf;		/* The history buffer		*/
d51 1
a51 1
	char		*last;		/* The last character		*/
d55 1
a55 1
	HistEvent	 ev;		/* Event cookie			*/
d58 1
a58 1
#define	HIST_FUN(el, fn, arg)	\
d61 8
d82 1
a82 1
protected int		hist_command(EditLine *, int, const char **);
d84 3
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
/*	$OpenBSD: hist.h,v 1.5 2002/02/16 21:27:26 millert Exp $	*/
/*	$NetBSD: hist.h,v 1.3 1997/01/11 06:47:56 lukem Exp $	*/
d42 1
a42 1
#define _h_el_hist
d46 1
a46 1
typedef const HistEvent *	(*hist_fun_t)(ptr_t, int, ...);
d49 7
a55 6
    char *buf;				/* The history buffer		*/
    char *last;				/* The last character		*/
    int eventno;			/* Event we are looking for	*/
    ptr_t ref;				/* Argument for history fcns	*/
    hist_fun_t fun;			/* Event access			*/
    const HistEvent *ev;		/* Event cookie			*/
d58 3
a60 4
#define HIST_FUN(el, fn, arg)	\
    ((((el)->el_history.ev = \
       (*(el)->el_history.fun)((el)->el_history.ref, fn, arg)) == NULL) ? \
     NULL : (el)->el_history.ev->str)
d66 1
a66 1
#define	HIST_EVENT(el, num)	HIST_FUN(el, H_EVENT, num)
d70 2
a71 2
protected int 		hist_init(EditLine *);
protected void 		hist_end(EditLine *);
d74 2
a75 1
protected int		hist_list(EditLine *, int, char **);
@


1.5
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.h,v 1.4 1997/03/14 05:12:49 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@fix el_source() - a block needed braces around it (from NetBSD)
Some strcpy() -> strncpy (from NetBSD)
Some KNF
Add current NetBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: hist.h,v 1.3 1997/01/16 05:18:34 millert Exp $	*/
d50 1
a50 1
typedef const HistEvent *	(*hist_fun_t) __P((ptr_t, int, ...));
d74 5
a78 5
protected int 		hist_init	__P((EditLine *));
protected void 		hist_end	__P((EditLine *));
protected el_action_t	hist_get	__P((EditLine *));
protected int		hist_set	__P((EditLine *, hist_fun_t, ptr_t));
protected int		hist_list	__P((EditLine *, int, char **));
@


1.3
log
@Merge in NetBSD libedit changes and new man pages.  Also fix some
strncpy() usage in their code.  NetBSD change log was:
    * add a man page for the editline routines
    * add a man page describing editrc
    * fix bugs in el_parse():
      * didn't execute command when program name matched (test reversed)
      * was checking against empty string instead of program name
      * after checks, command to run also pointed to empty string
    * document ^char and \ escape sequences
    * when parsing ^char control chars, check the correct char when determining
      validity (previously, ^char was a NOP interpreted as the literal string
      because of this bug)
    * Implement CC_REDISPLAY, which (unlike CC_REFRESH) redraws the entire input
    * line (a la ^R). This is useful if the binding outputs information and
    * mucks up the input line. To be used in ``list-choices'' bindings (refer
    * to the ^D binding in csh when filec is set)
@
text
@d1 2
a2 1
/*	$OpenBSD: $	*/
@


1.2
log
@update from netbsd
@
text
@d1 2
@


1.1
log
@Initial revision
@
text
@d68 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
