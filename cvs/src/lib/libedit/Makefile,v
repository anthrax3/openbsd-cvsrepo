head	1.26;
access;
symbols
	OPENBSD_6_1_BASE:1.26
	OPENBSD_6_0:1.26.0.2
	OPENBSD_6_0_BASE:1.26
	OPENBSD_5_9:1.15.0.2
	OPENBSD_5_9_BASE:1.15
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.2
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.10
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.8
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.4
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.2
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.11.0.6
	OPENBSD_5_2_BASE:1.11
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.4
	OPENBSD_5_0:1.11.0.2
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.10.0.4
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.2
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.9.0.16
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.18
	OPENBSD_4_6_BASE:1.9
	OPENBSD_4_5:1.9.0.14
	OPENBSD_4_5_BASE:1.9
	OPENBSD_4_4:1.9.0.12
	OPENBSD_4_4_BASE:1.9
	OPENBSD_4_3:1.9.0.10
	OPENBSD_4_3_BASE:1.9
	OPENBSD_4_2:1.9.0.8
	OPENBSD_4_2_BASE:1.9
	OPENBSD_4_1:1.9.0.6
	OPENBSD_4_1_BASE:1.9
	OPENBSD_4_0:1.9.0.4
	OPENBSD_4_0_BASE:1.9
	OPENBSD_3_9:1.9.0.2
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.8.0.8
	OPENBSD_3_8_BASE:1.8
	OPENBSD_3_7:1.8.0.6
	OPENBSD_3_7_BASE:1.8
	OPENBSD_3_6:1.8.0.4
	OPENBSD_3_6_BASE:1.8
	OPENBSD_3_5:1.8.0.2
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.7.0.22
	OPENBSD_3_4_BASE:1.7
	OPENBSD_3_3:1.7.0.20
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.18
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.7.0.16
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.14
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.12
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.10
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.8
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.7.0.6
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.7.0.4
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.7.0.2
	OPENBSD_2_4_BASE:1.7
	OPENBSD_2_3:1.6.0.4
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.2
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.5.0.2
	OPENBSD_2_1_BASE:1.5
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.26
date	2016.05.24.18.06.30;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	nvK6NO7QqBzKe0Be;

1.25
date	2016.05.10.11.53.54;	author schwarze;	state Exp;
branches;
next	1.24;
commitid	p1iJeubFS7TufKti;

1.24
date	2016.05.06.13.12.52;	author schwarze;	state Exp;
branches;
next	1.23;
commitid	HmIy04UbyUS0d1Sd;

1.23
date	2016.05.03.11.36.17;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	Ib9ZoqKRP1lzVDqJ;

1.22
date	2016.05.03.11.19.30;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	vnAOzfpJtMcnE0Ia;

1.21
date	2016.04.20.01.11.45;	author schwarze;	state Exp;
branches;
next	1.20;
commitid	9Q7mJBZuvE7cKSq3;

1.20
date	2016.04.09.19.31.55;	author schwarze;	state Exp;
branches;
next	1.19;
commitid	t22PDRfkb5DJX3rc;

1.19
date	2016.03.30.06.38.42;	author jmc;	state Exp;
branches;
next	1.18;
commitid	LN9ijdk9SEnzWAbM;

1.18
date	2016.03.22.11.32.18;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	IqABuRl0Ys8M4ewM;

1.17
date	2016.03.21.15.25.39;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	Qq3DwK1S3lWtyR8X;

1.16
date	2016.03.20.23.48.27;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	tRHhB2RN3ZD1GvoI;

1.15
date	2016.01.29.17.23.21;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	MOfHvqt1MJvqXmCY;

1.14
date	2014.10.09.00.30.39;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	4LkX3d0IJazFUEcx;

1.13
date	2012.09.04.03.10.42;	author okan;	state Exp;
branches;
next	1.12;

1.12
date	2012.08.02.13.38.38;	author okan;	state Exp;
branches;
next	1.11;

1.11
date	2011.07.07.16.15.47;	author nicm;	state Exp;
branches;
next	1.10;

1.10
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.9;

1.9
date	2005.11.24.20.49.17;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.10.31.08.42.23;	author otto;	state Exp;
branches;
next	1.7;

1.7
date	98.07.24.00.10.48;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	97.06.29.23.40.46;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	97.04.27.20.56.10;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	97.01.16.05.18.27;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.12.08.15.22.27;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.06.10.06.22.12;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.40;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.40;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.26
log
@Remove debugging ifdefs.
I'm debugging the read module for weeks now,
but these ifdefs aren't helpful.
OK cpp(1).
@
text
@#	$OpenBSD: Makefile,v 1.25 2016/05/10 11:53:54 schwarze Exp $
#	$NetBSD: Makefile,v 1.41 2010/02/03 15:34:43 roy Exp $
#	@@(#)Makefile	8.1 (Berkeley) 6/4/93

LIB=	edit

SRCS =	chared.c chartype.c common.c el.c eln.c emacs.c filecomplete.c \
	hist.c history.c historyn.c keymacro.c map.c \
	parse.c prompt.c read.c readline.c refresh.c search.c sig.c \
	terminal.c tokenizer.c tokenizern.c tty.c vi.c

MAN=	editline.3 editrc.5 editline.7

LIBEDITDIR?=${.CURDIR}

INCS= histedit.h
INCSDIR=/usr/include

CLEANFILES+=common.h.tmp emacs.h.tmp fcns.h.tmp func.h.tmp
CLEANFILES+=help.h.tmp vi.h.tmp tc1.o tc1 .depend

CFLAGS+=-Wall
CPPFLAGS+=-I. -I${LIBEDITDIR}
CPPFLAGS+=-I. -I${.CURDIR}
#CPPFLAGS+=-DDEBUG_TTY -DDEBUG_KEY -DDEBUG -DDEBUG_REFRESH
#CPPFLAGS+=-DDEBUG_PASTE -DDEBUG_EDIT

AHDR=vi.h emacs.h common.h
ASRC=${LIBEDITDIR}/vi.c ${LIBEDITDIR}/emacs.c ${LIBEDITDIR}/common.c

CLEANFILES+=	${AHDR} fcns.h func.h help.h

#SUBDIR+=	readline
HOST_SH=	sh

.depend: ${AHDR} fcns.h func.h help.h

vi.h: vi.c makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -h ${LIBEDITDIR}/vi.c \
	    > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

emacs.h: emacs.c makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -h ${LIBEDITDIR}/emacs.c \
	    > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

common.h: common.c makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -h ${LIBEDITDIR}/common.c \
	    > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

fcns.h: ${AHDR} makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -fh ${AHDR} > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

func.h: ${AHDR} makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -dh ${AHDR} > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

help.h: ${ASRC} makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -bh ${ASRC} > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

tc1.o:	${LIBEDITDIR}/TEST/tc1.c

tc1:	libedit.a tc1.o
	${CC} ${LDFLAGS} ${.ALLSRC} -o ${.TARGET} libedit.a ${LDADD} -lcurses

includes:
	-cd ${.CURDIR}; cmp -s histedit.h ${DESTDIR}/usr/include/histedit.h > \
		/dev/null 2>&1 || \
	${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 histedit.h \
		${DESTDIR}/usr/include

.include <bsd.lib.mk>
.include <bsd.subdir.mk>
@


1.25
log
@Enable separate compilation while keeping internal interfaces hidden.
Simplifies the build system and prevents modules
from stomping on each other's static symbols.

Based on a hint from guenther@@,
using feedback from kettenis@@ and deraadt@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.24 2016/05/06 13:12:52 schwarze Exp $
d25 1
a25 1
#CPPFLAGS+=-DDEBUG_TTY -DDEBUG_KEY -DDEBUG_READ -DDEBUG -DDEBUG_REFRESH
@


1.24
log
@Replace the generated file "fcns.c" by a simpler header "func.h"
included only in the one file needing it, "map.c".
That allows to define el_action_t directly in "map.h",
which in turn allows to stop including "fcns.h" from "el.h"
and include it only in the modules needing it.
Now we no longer autogenerate any C files.

Feedback and OK martijn@@.
First version also proofread by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.23 2016/05/03 11:36:17 schwarze Exp $
d7 4
a10 3
OSRCS=	chared.c common.c el.c eln.c emacs.c filecomplete.c \
	hist.c keymacro.c map.c chartype.c \
	parse.c prompt.c read.c refresh.c search.c sig.c terminal.c tty.c vi.c
a12 7

# For speed and debugging
#SRCS=   ${OSRCS}
# For protection
SRCS=	editline.c

SRCS += history.c historyn.c tokenizer.c tokenizern.c readline.c
@


1.23
log
@Combine help.h and help.c into a simplified help.h
and include it only in the one file needing it, map.c.
Also delete makelist -bc.
OK martijn@@, also proofread by Christian Heckendorf <mbie at ulmus dot me>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.22 2016/05/03 11:19:30 schwarze Exp $
d7 1
a7 1
OSRCS=	chared.c common.c el.c eln.c emacs.c fcns.c filecomplete.c \
d25 1
a25 1
CLEANFILES+=common.h.tmp emacs.h.tmp fcns.c.tmp fcns.h.tmp
d37 1
a37 1
CLEANFILES+=	${AHDR} fcns.h help.h fcns.c
d42 1
a42 1
.depend: ${AHDR} fcns.h help.h fcns.c
d63 2
a64 2
fcns.c: ${AHDR} fcns.h help.h makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -fc ${AHDR} > ${.TARGET}.tmp && \
@


1.22
log
@The files editline.c, historyn.c, and tokenizern.c are completely
constant and very short and simple.  Check them into CVS rather
than generating them at build time in a complicated way.
OK martijn@@, also proofread by Christian Heckendorf <mbie at ulmus dot me>
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.21 2016/04/20 01:11:45 schwarze Exp $
d7 1
a7 1
OSRCS=	chared.c common.c el.c eln.c emacs.c fcns.c filecomplete.c help.c \
d26 2
a27 1
CLEANFILES+=help.c.tmp help.h.tmp vi.h.tmp tc1.o tc1 .depend
d37 1
a37 1
CLEANFILES+=	${AHDR} fcns.h help.h fcns.c help.c
d42 1
a42 1
.depend: ${AHDR} fcns.h help.h fcns.c help.c
a64 4
	    mv ${.TARGET}.tmp ${.TARGET}

help.c: ${ASRC} makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -bc ${ASRC} > ${.TARGET}.tmp && \
@


1.21
log
@New editline(7) manual, explaining to end-users how line editing works
in programs like ftp(1), sftp(1), bc(1), and cdio(1) that use libedit.
The existing editrc(5) manual only explains customization, and the
existing editline(3) manual only explains the C language interface.
Already listing all editor functions and all default key bindings, but
in other respects, not 100% complete yet, and due to the sheer size,
some bugs may have slipped, but all that can be fixed in the tree.

OK and tweaks jmc@@.
Also seems reasonable to Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.20 2016/04/09 19:31:55 schwarze Exp $
d14 1
a14 1
#SRCS=   ${OSRCS} tokenizer.c history.c readline.c
d16 1
a16 1
SRCS=	editline.c tokenizer.c history.c readline.c
d18 1
a18 2
SRCS+= tokenizern.c historyn.c
CLEANFILES+=tokenizern.c.tmp tokenizern.c historyn.c.tmp historyn.c
d25 2
a26 3
CLEANFILES+=editline.c
CLEANFILES+=common.h.tmp editline.c.tmp emacs.h.tmp fcns.c.tmp fcns.h.tmp
CLEANFILES+=help.c.tmp help.h.tmp vi.h.tmp tc1.o tc1
d41 2
a71 12
	    mv ${.TARGET}.tmp ${.TARGET}

editline.c: ${OSRCS} makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -e ${OSRCS:T} > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

tokenizern.c: makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -n tokenizer.c > ${.TARGET}.tmp && \
	    mv ${.TARGET}.tmp ${.TARGET}

historyn.c: makelist
	${HOST_SH} ${LIBEDITDIR}/makelist -n history.c > ${.TARGET}.tmp && \
@


1.20
log
@Always compile with WIDECHAR on and delete that preprocessor switch.
OK martijn@@.
Diff also proofread by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.19 2016/03/30 06:38:42 jmc Exp $
d11 1
a11 1
MAN=	editline.3 editrc.5
@


1.19
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.18 2016/03/22 11:32:18 schwarze Exp $
a6 2
WIDECHAR=	yes

a17 1
.if "${WIDECHAR}" == "yes"
a19 2
CPPFLAGS+=-DWIDECHAR
.endif
@


1.18
log
@format string fixes in debug code;
committing right away because this code is not even compiled by default
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.17 2016/03/21 15:25:39 schwarze Exp $
a13 21

MLINKS=	editline.3 el_deletestr.3 editline.3 el_end.3 \
	editline.3 el_get.3 editline.3 el_getc.3 \
	editline.3 el_gets.3 editline.3 el_init.3 \
	editline.3 el_insertstr.3 editline.3 el_line.3 \
	editline.3 el_parse.3 editline.3 el_push.3 \
	editline.3 el_reset.3 editline.3 el_resize.3 \
	editline.3 el_set.3 editline.3 el_source.3 \
	editline.3 el_wdeletestr.3 editline.3 el_wget.3 \
	editline.3 el_wgetc.3 editline.3 el_wgets.3 \
	editline.3 el_winsertstr.3 editline.3 el_wline.3 \
	editline.3 el_wparse.3 editline.3 el_wpush.3 \
	editline.3 el_wset.3 editline.3 history.3 \
	editline.3 history_end.3 editline.3 history_init.3 \
	editline.3 history_w.3 editline.3 history_wend.3 \
	editline.3 history_winit.3 editline.3 tok_end.3 \
	editline.3 tok_init.3 editline.3 tok_line.3 \
	editline.3 tok_reset.3 editline.3 tok_str.3 \
	editline.3 tok_wend.3 editline.3 tok_winit.3 \
	editline.3 tok_wline.3 editline.3 tok_wreset.3 \
	editline.3 tok_wstr.3
@


1.17
log
@Reduce the FUN() macro madness by no longer applying it to el_[w]getc(3).
Always use el_wgetc(3) internally.  In the !WIDECHAR case, casting
the result to (Char) is safe because the function returns a byte
rather than a character in that case.
No functional change except for fixing a printf(3) format string issue
when compiled with DEBUG_READ and WIDECHAR.
OK czarkoff@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.16 2016/03/20 23:48:27 schwarze Exp $
d58 2
a59 2
CPPFLAGS+=#-DDEBUG_TTY -DDEBUG_KEY -DDEBUG_READ -DDEBUG -DDEBUG_REFRESH
CPPFLAGS+=#-DDEBUG_PASTE -DDEBUG_EDIT
@


1.16
log
@Cleanup of standard header inclusion:

1. Add the missing <errno.h> to sig.c.
2. Do not include standard headers from private headers "chared.h"
and "el.h", include them directly where needed.
3. Delete a few needless inclusions of <ctype.h>.
4. Sort the standard headers.
5. Delete _GNU_SOURCE weirdness from histedit.h, that file doesn't even
need the access to wcsdup(3) mentioned in the comment.
6. Delete some trailing blanks and blanks before tabs.

OK czarkoff@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.15 2016/01/29 17:23:21 schwarze Exp $
d9 1
a9 1
OSRCS=	chared.c common.c el.c emacs.c fcns.c filecomplete.c help.c \
a41 1
OSRCS+= eln.c
@


1.15
log
@Start synching with NetBSD:
Rename the files key.[hc] to keymacro.[hc] and term.[hc] to terminal.[hc].
The change makes sense because "term.h" conflicts with <term.h>
and the functions key_clear(), key_end(), and key_print() in "key.h"
conflict with macros in <term.h>.
No content change yet, no binary change in *.o after "strip -d".
This reduces the remaining diff from +4634 -3992 to +2640 -1998.
OK czarkoff@@, and mmcc@@ agrees with the direction.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.14 2014/10/09 00:30:39 deraadt Exp $
d57 1
a57 1
CPPFLAGS+=-I. -I${LIBEDITDIR} 
d62 1
a62 1
AHDR=vi.h emacs.h common.h 
d115 1
a115 1
tc1:	libedit.a tc1.o 
@


1.14
log
@USE_SHLIBDIR is archaic
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.13 2012/09/04 03:10:42 okan Exp $
d10 2
a11 2
	hist.c key.c map.c chartype.c \
	parse.c prompt.c read.c refresh.c search.c sig.c term.c tty.c vi.c
@


1.13
log
@remove lint leftovers; ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.12 2012/08/02 13:38:38 okan Exp $
a5 1
USE_SHLIBDIR=	yes
@


1.12
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.11 2011/07/07 16:15:47 nicm Exp $
a65 1
DPSRCS+=	${AHDR} fcns.h help.h fcns.c help.c
@


1.11
log
@Enable wide character functions in libedit (not the other libe*t).

ok stsp deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.10 2010/06/30 00:05:35 nicm Exp $
a5 1
WANTLINT=
@


1.10
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.9 2005/11/24 20:49:17 deraadt Exp $
d9 2
d17 20
a36 9
MLINKS=	editline.3 el_init.3 editline.3 el_end.3 editline.3 el_reset.3 \
	editline.3 el_gets.3 editline.3 el_getc.3 editline.3 el_push.3 \
	editline.3 el_parse.3 editline.3 el_set.3 editline.3 el_get.3 \
	editline.3 el_source.3 editline.3 el_resize.3 editline.3 el_line.3 \
	editline.3 el_insertstr.3 editline.3 el_deletestr.3 \
	editline.3 history_init.3 editline.3 history_end.3 \
	editline.3 history.3 \
	editline.3 tok_init.3 editline.3 tok_end.3 editline.3 tok_reset.3 \
	editline.3 tok_line.3 editline.3 tok_str.3
@


1.9
log
@use WANTLINT= (on all architectures)
@
text
@d1 2
a2 2
#	$OpenBSD: Makefile,v 1.8 2003/10/31 08:42:23 otto Exp $
#	$NetBSD: Makefile,v 1.28 2003/08/01 17:03:58 lukem Exp $
d9 2
a10 1
OSRCS=	chared.c common.c el.c emacs.c fcns.c help.c hist.c key.c map.c \
d20 4
a23 1
	editline.3 history_init.3 editline.3 history_end.3 editline.3 history.3
d30 7
d44 1
a44 1
CLEANFILES+=help.c.tmp help.h.tmp vi.h.tmp
d83 1
a83 1
help.c: ${ASRC} makelist 
d91 6
a96 2
editline.c: ${OSRCS}
	${HOST_SH} ${LIBEDITDIR}/makelist -e ${.ALLSRC:T} > ${.TARGET}.tmp && \
d99 8
a106 4
test.o:	${LIBEDITDIR}/TEST/test.c
	
test:	libedit.a test.o 
	${CC} ${LDFLAGS} ${.ALLSRC} -o ${.TARGET} libedit.a ${LDADD} -ltermcap
@


1.8
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD$
d6 1
@


1.7
log
@-lcurses, not termcap/termlib
@
text
@d1 3
a3 2
#	$OpenBSD: Makefile,v 1.6 1997/06/29 23:40:46 millert Exp $
#	from: @@(#)Makefile	8.1 (Berkeley) 6/4/93
d6 1
d8 2
a9 2
OSRCS=	chared.c common.c el.c emacs.c fcns.c hist.c key.c map.c parse.c \
	prompt.c read.c refresh.c search.c sig.c term.c tty.c vi.c help.c
d15 2
a16 2
	editline.3 el_parse.3 editline.3 el_set.3 editline.3 el_source.3 \
	editline.3 el_resize.3 editline.3 el_line.3 \
d21 1
a21 1
#SRCS=   ${OSRCS} tokenizer.c history.c
d23 1
a23 1
SRCS=	editline.c tokenizer.c history.c
d25 13
a37 4
CLEANFILES+=common.h emacs.h fcns.h help.h vi.h help.c fcns.c editline.c
CFLAGS+=-I. -I${.CURDIR} 
CFLAGS+=#-DDEBUG_TTY -DDEBUG_KEY -DDEBUG_READ -DDEBUG -DDEBUG_REFRESH
CFLAGS+=#-DDEBUG_PASTE
d40 7
a46 1
ASRC=${.CURDIR}/vi.c ${.CURDIR}/emacs.c ${.CURDIR}/common.c
d49 3
a51 1
	sh ${.CURDIR}/makelist -h ${.CURDIR}/vi.c > ${.TARGET}
d54 3
a56 1
	sh ${.CURDIR}/makelist -h ${.CURDIR}/emacs.c > ${.TARGET}
d59 3
a61 1
	sh ${.CURDIR}/makelist -h ${.CURDIR}/common.c > ${.TARGET}
d64 2
a65 1
	sh ${.CURDIR}/makelist -fh ${AHDR} > ${.TARGET}
d67 3
a69 2
fcns.c: ${AHDR} fcns.h makelist
	sh ${.CURDIR}/makelist -fc ${AHDR} > ${.TARGET}
d72 2
a73 1
	sh ${.CURDIR}/makelist -bc ${ASRC} > ${.TARGET}
d76 2
a77 1
	sh ${.CURDIR}/makelist -bh ${ASRC} > ${.TARGET}
d80 2
a81 5
	sh ${.CURDIR}/makelist -e ${.ALLSRC:T} > ${.TARGET}

.depend: vi.h emacs.h common.h fcns.h help.h help.c
all: vi.h emacs.h common.h fcns.h help.h help.c

d83 2
d86 1
a86 1
	${CC} ${CFLAGS} ${.ALLSRC} -o ${.TARGET} libedit.a ${LDADD} -lcurses
d90 3
a92 3
	    /dev/null 2>&1 || \
	    ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 histedit.h \
	    ${DESTDIR}/usr/include
d95 1
@


1.6
log
@Updates from NetBSD (christos@@netbsd.org)
  * Portability fixes:
	__const         -> const
	BADSIG          -> SIG_ERR
	int flags       -> u_int flags
	#if __STDC__    -> #ifdef __STDC__
  * Don't allow CSWTCH to interfere with CSUSP on __SVR4 systems.
  * Return -1 if the terminal set operation resulted in dumb terminal settings.
  * Handle properly the case where the last line in the sourced file does
    not have a trailing '\n'. From Jeffrey C Honig.
  * editrc -> editline in editline(3)
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 1997/04/27 20:56:10 millert Exp $
d60 1
a60 1
	${CC} ${CFLAGS} ${.ALLSRC} -o ${.TARGET} libedit.a ${LDADD} -ltermcap
@


1.5
log
@COPY -> INSTALL_COPY and STRIP -> INSTALL_STRIP
This fixes namespace problems where STRIP is sometimes used as
the name of the strip(1) to use and other times used as
the flag to send install(1) when stripping (or not).
COPY doesn't have this problem (yet) but was poorly named.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 1997/01/16 05:18:27 millert Exp $
d6 2
a7 3
OSRCS=	chared.c common.c el.c emacs.c hist.c key.c map.c parse.c \
	prompt.c read.c refresh.c search.c sig.c term.c tty.c vi.c \
	help.c fcns.c
@


1.4
log
@Merge in NetBSD libedit changes and new man pages.  Also fix some
strncpy() usage in their code.  NetBSD change log was:
    * add a man page for the editline routines
    * add a man page describing editrc
    * fix bugs in el_parse():
      * didn't execute command when program name matched (test reversed)
      * was checking against empty string instead of program name
      * after checks, command to run also pointed to empty string
    * document ^char and \ escape sequences
    * when parsing ^char control chars, check the correct char when determining
      validity (previously, ^char was a NOP interpreted as the literal string
      because of this bug)
    * Implement CC_REDISPLAY, which (unlike CC_REFRESH) redraws the entire input
    * line (a la ^R). This is useful if the binding outputs information and
    * mucks up the input line. To be used in ``list-choices'' bindings (refer
    * to the ^D binding in csh when filec is set)
@
text
@d1 1
a1 1
#	$OpenBSD: $
d66 1
a66 1
	    ${INSTALL} ${COPY} -o ${BINOWN} -g ${BINGRP} -m 444 histedit.h \
@


1.3
log
@install -> ${INSTALL}, -c -> ${COPY}
@
text
@d1 2
a2 1
#	@@(#)Makefile	8.1 (Berkeley) 6/4/93
d9 9
@


1.2
log
@includes target
@
text
@d56 1
a56 1
	    install -c -o ${BINOWN} -g ${BINGRP} -m 444 histedit.h \
@


1.1
log
@Initial revision
@
text
@d53 1
a53 1
beforeinstall:
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
