head	1.19;
access;
symbols
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.6
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.2
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.9.0.22
	OPENBSD_5_9_BASE:1.9
	OPENBSD_5_8:1.9.0.24
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.16
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.9.0.20
	OPENBSD_5_6_BASE:1.9
	OPENBSD_5_5:1.9.0.18
	OPENBSD_5_5_BASE:1.9
	OPENBSD_5_4:1.9.0.14
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.12
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.9.0.10
	OPENBSD_5_2_BASE:1.9
	OPENBSD_5_1_BASE:1.9
	OPENBSD_5_1:1.9.0.8
	OPENBSD_5_0:1.9.0.6
	OPENBSD_5_0_BASE:1.9
	OPENBSD_4_9:1.9.0.4
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.2
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.8.0.2
	OPENBSD_4_7_BASE:1.8
	OPENBSD_4_6:1.7.0.14
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.10
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.8
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.6
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.4
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.2
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.6.0.12
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.10
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.8
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.6
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.4
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.2
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.19
date	2016.05.06.13.12.52;	author schwarze;	state Exp;
branches;
next	1.18;
commitid	HmIy04UbyUS0d1Sd;

1.18
date	2016.05.03.11.36.17;	author schwarze;	state Exp;
branches;
next	1.17;
commitid	Ib9ZoqKRP1lzVDqJ;

1.17
date	2016.05.03.11.19.30;	author schwarze;	state Exp;
branches;
next	1.16;
commitid	vnAOzfpJtMcnE0Ia;

1.16
date	2016.04.20.02.36.25;	author schwarze;	state Exp;
branches;
next	1.15;
commitid	96tNqP1DWJ7derzc;

1.15
date	2016.04.11.21.17.29;	author schwarze;	state Exp;
branches;
next	1.14;
commitid	I3AtNAFb4FywnTMT;

1.14
date	2016.04.11.19.54.54;	author schwarze;	state Exp;
branches;
next	1.13;
commitid	xizUpRlYj2C4Hcj6;

1.13
date	2016.04.09.19.31.55;	author schwarze;	state Exp;
branches;
next	1.12;
commitid	t22PDRfkb5DJX3rc;

1.12
date	2016.03.20.23.48.27;	author schwarze;	state Exp;
branches;
next	1.11;
commitid	tRHhB2RN3ZD1GvoI;

1.11
date	2016.03.20.22.57.59;	author schwarze;	state Exp;
branches;
next	1.10;
commitid	VBVmrUoZFnMc0hts;

1.10
date	2016.03.20.20.35.38;	author schwarze;	state Exp;
branches;
next	1.9;
commitid	b06qlwkNEbVitvG0;

1.9
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.8;

1.8
date	2009.10.28.23.22.45;	author schwarze;	state Exp;
branches;
next	1.7;

1.7
date	2007.01.08.19.39.25;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.10.31.08.42.24;	author otto;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.18.40;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.26;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.03.14.05.12.53;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.16.05.18.37;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Replace the generated file "fcns.c" by a simpler header "func.h"
included only in the one file needing it, "map.c".
That allows to define el_action_t directly in "map.h",
which in turn allows to stop including "fcns.h" from "el.h"
and include it only in the modules needing it.
Now we no longer autogenerate any C files.

Feedback and OK martijn@@.
First version also proofread by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@#!/bin/sh -
#	$NetBSD: makelist,v 1.28 2016/04/18 17:01:19 christos Exp $
#
# Copyright (c) 1992, 1993
#	The Regents of the University of California.  All rights reserved.
#
# This code is derived from software contributed to Berkeley by
# Christos Zoulas of Cornell University.
#
# Redistribution and use in source and binary forms, with or without
# modification, are permitted provided that the following conditions
# are met:
# 1. Redistributions of source code must retain the above copyright
#    notice, this list of conditions and the following disclaimer.
# 2. Redistributions in binary form must reproduce the above copyright
#    notice, this list of conditions and the following disclaimer in the
#    documentation and/or other materials provided with the distribution.
# 3. Neither the name of the University nor the names of its contributors
#    may be used to endorse or promote products derived from this software
#    without specific prior written permission.
#
# THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
# ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
# IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
# ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
# FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
# DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
# OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
# HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
# LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
# OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
#
#	@@(#)makelist	5.3 (Berkeley) 6/4/93

# makelist.sh: Automatically generate header files...

AWK=awk
USAGE="Usage: $0 -h|-dh|-fh|-bh <filenames>"

if [ "x$1" = "x" ]
then
    echo $USAGE 1>&2
    exit 1
fi

FLAG="$1"
shift

FILES="$@@"

case $FLAG in

-h)
    set - `echo $FILES | sed -e 's/\\./_/g'`
    hdr="_h_`basename $1`"
    cat $FILES | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#ifndef %s\n#define %s\n", "'$hdr'", "'$hdr'");
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
#
# XXX:	need a space between name and prototype so that -dh and -fh
#	parsing is much easier
#
		printf("protected el_action_t\t%s (EditLine *, wint_t);\n",
		    name);
	    }
	}
	END {
	    printf("#endif /* %s */\n", "'$hdr'");
	}'
	;;

#	generate help.h from various .c files
#
-bh)
    cat $FILES | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("static const struct el_bindings_t el_func_help[] = {\n");
	    low = "abcdefghijklmnopqrstuvwxyz_";
	    high = "ABCDEFGHIJKLMNOPQRSTUVWXYZ_";
	    for (i = 1; i <= length(low); i++)
		tr[substr(low, i, 1)] = substr(high, i, 1);
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
		uname = "";
		fname = "";
		for (i = 1; i <= length(name); i++) {
		    s = substr(name, i, 1);
		    uname = uname tr[s];
		    if (s == "_")
			s = "-";
		    fname = fname s;
		}

		printf("    { %-30.30s %-30.30s\n","L\"" fname "\",", uname ",");
		ok = 1;
	    }
	}
	/^ \*/ {
	    if (ok) {
		printf("      L\"");
		for (i = 2; i < NF; i++)
		    printf("%s ", $i);
		printf("%s\" },\n", $i);
		ok = 0;
	    }
	}
	END {
	    printf("};\n");
	}'
	;;

#	generate fcns.h from various .h files
#
-fh)
    cat $FILES | $AWK '/el_action_t/ { print $3 }' | \
    sort | tr '[:lower:]' '[:upper:]' | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    count = 0;
	}
	{
	    printf("#define\t%-30.30s\t%3d\n", $1, count++);
	}
	END {
	    printf("#define\t%-30.30s\t%3d\n", "EL_NUM_FCNS", count);
	}'
	;;

#	generate dispatch table func.h from various .h files
#
-dh)
    cat $FILES | $AWK '/el_action_t/ { print $3 }' | sort | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("static const el_func_t el_func[] = {");
	    maxlen = 80;
	    needn = 1;
	    len = 0;
	}
	{
	    clen = 25 + 2;
	    len += clen;
	    if (len >= maxlen)
		needn = 1;
	    if (needn) {
		printf("\n    ");
		needn = 0;
		len = 4 + clen;
	    }
	    s = $1 ",";
	    printf("%-26.26s ", s);
	}
	END {
	    printf("\n};\n");
	}'
	;;

*)
    echo $USAGE 1>&2
    exit 1
    ;;

esac
@


1.18
log
@Combine help.h and help.c into a simplified help.h
and include it only in the one file needing it, map.c.
Also delete makelist -bc.
OK martijn@@, also proofread by Christian Heckendorf <mbie at ulmus dot me>
@
text
@d2 1
a2 1
#	$NetBSD: makelist,v 1.16 2010/04/18 21:17:05 christos Exp $
d39 1
a39 1
USAGE="Usage: $0 -h|-fc|-fh|-bh <filenames>"
d67 1
a67 1
# XXX:	need a space between name and prototype so that -fc and -fh
a129 1
	    printf("#ifndef _h_fcns_c\n#define _h_fcns_c\n");
a136 4

	    printf("typedef el_action_t (*el_func_t)(EditLine *, wint_t);");
	    printf("\nprotected const el_func_t* func__get(void);\n");
	    printf("#endif /* _h_fcns_c */\n");
d140 1
a140 1
#	generate fcns.c from various .h files
d142 1
a142 1
-fc)
a145 4
	    printf("#include \"config.h\"\n#include \"el.h\"\n");
	    printf("#include \"common.h\"\n");
	    printf("#include \"emacs.h\"\n");
	    printf("#include \"vi.h\"\n");
a165 1
	    printf("\nprotected const el_func_t* func__get() { return el_func; }\n");
@


1.17
log
@The files editline.c, historyn.c, and tokenizern.c are completely
constant and very short and simple.  Check them into CVS rather
than generating them at build time in a complicated way.
OK martijn@@, also proofread by Christian Heckendorf <mbie at ulmus dot me>
@
text
@d39 1
a39 1
USAGE="Usage: $0 -h|-fc|-fh|-bc|-bh <filenames>"
d79 1
a79 1
#	generate help.c from various .c files
d81 1
a81 1
-bc)
a84 2
	    printf("#include \"config.h\"\n#include \"el.h\"\n");
	    printf("#include \"help.h\"\n");
a119 2
	    printf("\nprotected const el_bindings_t* help__get()");
	    printf("{ return el_func_help; }\n");
a120 12
	;;

#	generate help.h from various .c files
#
-bh)
    $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#ifndef _h_help_c\n#define _h_help_c\n");
	    printf("protected const el_bindings_t *help__get(void);\n");
	    printf("#endif /* _h_help_c */\n");
	}' /dev/null
@


1.16
log
@delete unused -m option;
ok martijn@@
also checked by Christian Heckendorf <mbie at ulmus dot me>
@
text
@d39 1
a39 1
USAGE="Usage: $0 -n|-h|-e|-fc|-fh|-bc|-bh <filenames>"
a53 9
#	generate foo.h file from foo.c
#
-n)
    cat << _EOF
#define NARROWCHAR
#include "${FILES}"
_EOF
    ;;

a191 13
	}'
	;;

#	generate editline.c from various .c files
#
-e)
	echo "$FILES" | tr ' ' '\012' | $AWK '
	BEGIN {
	    printf("/* Automatically generated file, do not edit */\n");
	    printf("#define protected static\n");
	}
	{
	    printf("#include \"%s\"\n", $1);
@


1.15
log
@delete the "private" and "public" preprocessor macros, just use standard C;
OK martijn@@
@
text
@d39 1
a39 1
USAGE="Usage: $0 -n|-h|-e|-fc|-fh|-bc|-bh|-m <filenames>"
a213 38
	}'
	;;

#	generate man page fragment from various .c files
#
-m)
    cat $FILES | $AWK '
	BEGIN {
	    printf(".\\\" Section automatically generated with makelist\n");
	    printf(".Bl -tag -width 4n\n");
	}
	/\(\):/ {
	    pr = substr($2, 1, 2);
	    if (pr == "vi" || pr == "em" || pr == "ed") {
		name = substr($2, 1, length($2) - 3);
		fname = "";
		for (i = 1; i <= length(name); i++) {
		    s = substr(name, i, 1);
		    if (s == "_")
			s = "-";
		    fname = fname s;
		}

		printf(".It Ic %s\n", fname);
		ok = 1;
	    }
	}
	/^ \*/ {
	    if (ok) {
		for (i = 2; i < NF; i++)
		    printf("%s ", $i);
		printf("%s.\n", $i);
		ok = 0;
	    }
	}
	END {
	    printf(".El\n");
	    printf(".\\\" End of section automatically generated with makelist\n");
@


1.14
log
@Move wrapper macros to the two files actually needing them:
FUNW, Strlen, Strdup, Strcmp, Strncmp, Strncpy, Strncat -> history.c
Strchr, tok_strdup -> tokenizer.c
FUN, TYPE, STR -> both of these files

OK martijn@@

Also proofread by Christian Heckendorf <mbie at ulmus dot me>
who reported some whitespace issues in parse.c.
@
text
@d96 1
a96 1
	    printf("private const struct el_bindings_t el_func_help[] = {\n");
d180 1
a180 1
	    printf("private const el_func_t el_func[] = {");
@


1.13
log
@Always compile with WIDECHAR on and delete that preprocessor switch.
OK martijn@@.
Diff also proofread by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d116 1
a116 1
		printf("    { %-30.30s %-30.30s\n","STR(\"" fname "\"),", uname ",");
d122 1
a122 1
		printf("      STR(\"");
d125 1
a125 1
		printf("%s\") },\n", $i);
@


1.12
log
@Cleanup of standard header inclusion:

1. Add the missing <errno.h> to sig.c.
2. Do not include standard headers from private headers "chared.h"
and "el.h", include them directly where needed.
3. Delete a few needless inclusions of <ctype.h>.
4. Sort the standard headers.
5. Delete _GNU_SOURCE weirdness from histedit.h, that file doesn't even
need the access to wcsdup(3) mentioned in the comment.
6. Delete some trailing blanks and blanks before tabs.

OK czarkoff@@
@
text
@a57 1
#undef WIDECHAR
@


1.11
log
@Cleanup of private header inclusion:

1. Do not include private headers from "chared.h", "hist.h", "prompt.h",
"refresh.h", "search.h", "sig.h", "terminal.h", "tty.h".
The only private header having to include other private headers is "el.h".
2. Do not include "common.h", "parse.h", "help.h" from "el.h",
and do not include "emacs.h" and "vi.h" from "chared.h",
include them directly where needed.
3. Do include "fcns.h" from "el.h" because el_func_t is needed for "map.h".
4. Do not include private headers again that are already included by "el.h".
5. Include private headers after standard headers.

OK czarkoff@@
@
text
@d63 1
a63 1
    
@


1.10
log
@Delete the useless Int datatype and always use the standard wint_t
directly.  This is not a problem because <wchar_t> is required all
over the place anyway, even when WIDECHAR is not defined.
No functional change except that it fixes a few printf(3)
format string issues, %c vs. %lc.
OK czarkoff@@
@
text
@d96 1
a96 1
	    printf("#include \"chartype.h\"\n");
d178 3
@


1.9
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d80 2
a81 1
		printf("protected el_action_t\t%s (EditLine *, Int);\n", name);
d165 1
a165 1
	    printf("typedef el_action_t (*el_func_t)(EditLine *, Int);");
@


1.8
log
@a few leftovers from yesterday's SCCS/RCS-ID removal;
survived a full make build on i386;
"sure" deraadt@@
@
text
@d2 1
a2 2
#	$OpenBSD: makelist,v 1.7 2007/01/08 19:39:25 deraadt Exp $
#	$NetBSD: makelist,v 1.8 2003/03/10 21:21:10 christos Exp $
d39 1
a39 1
USAGE="Usage: $0 -h|-e|-fc|-fh|-bc|-bh|-m <filenames>"
d56 8
d80 1
a80 1
		printf("protected el_action_t\t%s (EditLine *, int);\n", name);
d94 2
a95 1
	    printf("#include \"sys.h\"\n#include \"el.h\"\n");
d116 1
a116 1
		printf("    { %-30.30s %-30.30s\n","\"" fname "\",", uname ",");
d122 1
a122 1
		printf("      \"");
d125 1
a125 1
		printf("%s\" },\n", $i);
a129 1
	    printf("    { NULL, 0, NULL }\n");
d152 1
a152 1
    sort | tr '[a-z]' '[A-Z]' | $AWK '
d164 1
a164 1
	    printf("typedef el_action_t (*el_func_t)(EditLine *, int);");
d176 1
a176 1
	    printf("#include \"sys.h\"\n#include \"el.h\"\n");
@


1.7
log
@advertising clauses that can be dropped
@
text
@d2 1
a2 1
#	$OpenBSD: makelist,v 1.6 2003/10/31 08:42:24 otto Exp $
a200 1
	    printf("#define SCCSID\n");
@


1.6
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d2 1
a2 1
#	$OpenBSD$
d19 1
a19 5
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d2 2
a3 2
#	$OpenBSD: makelist,v 1.4 2002/02/16 21:27:26 millert Exp $
#	$NetBSD: makelist,v 1.3 1997/01/11 06:48:00 lukem Exp $
d19 5
a23 1
# 3. Neither the name of the University nor the names of its contributors
d43 2
a44 2
AWK=/usr/bin/awk
USAGE="Usage: $0 -h|-e|-fc|-fh|-bc|-bh <filenames>" 
d58 3
d73 5
a77 1
		printf("protected el_action_t\t%-25.25s(EditLine *, int);\n", name);
d82 5
a86 1
	}';;
d92 1
a92 1
	    printf("private struct el_bindings_t el_func_help[] = {\n");
d111 1
a111 1
		     
d113 1
a113 1
		ok = 1; 
d128 1
a128 1
	    printf("\nprotected el_bindings_t* help__get()");
d130 5
a134 1
	}';;
d137 1
a137 1
	BEGIN { 
d140 1
a140 1
	    printf("protected el_bindings_t *help__get\t(void);\n");
d142 5
a146 1
	}' /dev/null;;
d150 1
a150 1
	BEGIN { 
d153 1
a153 1
	    count = 0; 
d155 1
a155 1
	{ 
d162 1
a162 1
	    printf("\nprotected el_func_t* func__get(void);\n");
d164 5
a168 1
	}';;
d174 1
a174 1
	    printf("private el_func_t el_func[] = {");
d182 1
a182 1
	    if (len >= maxlen) 
d194 6
a199 2
	    printf("\nprotected el_func_t* func__get() { return el_func; }\n");
	}';;
d209 41
a249 1
	}';;
d252 3
a254 1
    exit 1;;
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d2 1
a2 1
#	$OpenBSD: makelist,v 1.3 1997/03/14 05:12:53 millert Exp $
d19 1
a19 5
# 3. All advertising materials mentioning features or use of this software
#    must display the following acknowledgement:
#	This product includes software developed by the University of
#	California, Berkeley and its contributors.
# 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@fix el_source() - a block needed braces around it (from NetBSD)
Some strcpy() -> strncpy (from NetBSD)
Some KNF
Add current NetBSD tags
@
text
@d2 1
a2 1
#	$OpenBSD: makelist,v 1.2 1997/01/16 05:18:37 millert Exp $
d70 1
a70 1
		printf("protected el_action_t\t%-25.25s __P((EditLine *, int));\n", name);
d125 1
a125 1
	    printf("protected el_bindings_t *help__get\t__P((void));\n");
d142 2
a143 2
	    printf("typedef el_action_t (*el_func_t) __P((EditLine *, int));");
	    printf("\nprotected el_func_t* func__get __P((void));\n");
@


1.2
log
@Merge in NetBSD libedit changes and new man pages.  Also fix some
strncpy() usage in their code.  NetBSD change log was:
    * add a man page for the editline routines
    * add a man page describing editrc
    * fix bugs in el_parse():
      * didn't execute command when program name matched (test reversed)
      * was checking against empty string instead of program name
      * after checks, command to run also pointed to empty string
    * document ^char and \ escape sequences
    * when parsing ^char control chars, check the correct char when determining
      validity (previously, ^char was a NOP interpreted as the literal string
      because of this bug)
    * Implement CC_REDISPLAY, which (unlike CC_REFRESH) redraws the entire input
    * line (a la ^R). This is useful if the binding outputs information and
    * mucks up the input line. To be used in ``list-choices'' bindings (refer
    * to the ^D binding in csh when filec is set)
@
text
@d2 2
a3 1
#	$OpenBSD: $
@


1.1
log
@Initial revision
@
text
@d2 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
