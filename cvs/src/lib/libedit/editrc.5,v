head	1.32;
access;
symbols
	OPENBSD_6_2_BASE:1.32
	OPENBSD_6_1:1.32.0.6
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.32.0.2
	OPENBSD_6_0_BASE:1.32
	OPENBSD_5_9:1.29.0.2
	OPENBSD_5_9_BASE:1.29
	OPENBSD_5_8:1.28.0.6
	OPENBSD_5_8_BASE:1.28
	OPENBSD_5_7:1.28.0.2
	OPENBSD_5_7_BASE:1.28
	OPENBSD_5_6:1.26.0.10
	OPENBSD_5_6_BASE:1.26
	OPENBSD_5_5:1.26.0.8
	OPENBSD_5_5_BASE:1.26
	OPENBSD_5_4:1.26.0.4
	OPENBSD_5_4_BASE:1.26
	OPENBSD_5_3:1.26.0.2
	OPENBSD_5_3_BASE:1.26
	OPENBSD_5_2:1.25.0.10
	OPENBSD_5_2_BASE:1.25
	OPENBSD_5_1_BASE:1.25
	OPENBSD_5_1:1.25.0.8
	OPENBSD_5_0:1.25.0.6
	OPENBSD_5_0_BASE:1.25
	OPENBSD_4_9:1.25.0.4
	OPENBSD_4_9_BASE:1.25
	OPENBSD_4_8:1.25.0.2
	OPENBSD_4_8_BASE:1.25
	OPENBSD_4_7:1.23.0.2
	OPENBSD_4_7_BASE:1.23
	OPENBSD_4_6:1.21.0.8
	OPENBSD_4_6_BASE:1.21
	OPENBSD_4_5:1.21.0.4
	OPENBSD_4_5_BASE:1.21
	OPENBSD_4_4:1.21.0.2
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.20.0.4
	OPENBSD_4_3_BASE:1.20
	OPENBSD_4_2:1.20.0.2
	OPENBSD_4_2_BASE:1.20
	OPENBSD_4_1:1.19.0.14
	OPENBSD_4_1_BASE:1.19
	OPENBSD_4_0:1.19.0.12
	OPENBSD_4_0_BASE:1.19
	OPENBSD_3_9:1.19.0.10
	OPENBSD_3_9_BASE:1.19
	OPENBSD_3_8:1.19.0.8
	OPENBSD_3_8_BASE:1.19
	OPENBSD_3_7:1.19.0.6
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.4
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.19.0.2
	OPENBSD_3_5_BASE:1.19
	OPENBSD_3_4:1.14.0.2
	OPENBSD_3_4_BASE:1.14
	OPENBSD_3_3:1.13.0.2
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.11.0.12
	OPENBSD_3_2_BASE:1.11
	OPENBSD_3_1:1.11.0.10
	OPENBSD_3_1_BASE:1.11
	OPENBSD_3_0:1.11.0.8
	OPENBSD_3_0_BASE:1.11
	OPENBSD_2_9:1.11.0.6
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.4
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.11.0.2
	OPENBSD_2_7_BASE:1.11
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.2
	OPENBSD_2_1_BASE:1.2;
locks; strict;
comment	@# @;


1.32
date	2016.05.22.22.08.42;	author schwarze;	state Exp;
branches;
next	1.31;
commitid	RIGPTmtyM7lavULa;

1.31
date	2016.04.20.01.11.45;	author schwarze;	state Exp;
branches;
next	1.30;
commitid	9Q7mJBZuvE7cKSq3;

1.30
date	2016.04.18.20.13.07;	author schwarze;	state Exp;
branches;
next	1.29;
commitid	BCiQfkJB2pLlS49p;

1.29
date	2016.01.08.20.26.54;	author zhuk;	state Exp;
branches;
next	1.28;
commitid	3oyQnBNpxYWfuih9;

1.28
date	2014.12.15.22.35.41;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	atnntjLH3XoYmSdU;

1.27
date	2014.12.12.17.04.22;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	lltzzUjDoooSpY1T;

1.26
date	2013.01.10.14.21.47;	author jmc;	state Exp;
branches;
next	1.25;

1.25
date	2010.06.30.07.34.38;	author jmc;	state Exp;
branches;
next	1.24;

1.24
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.23;

1.23
date	2010.01.25.17.23.43;	author sobrado;	state Exp;
branches;
next	1.22;

1.22
date	2010.01.25.17.14.50;	author sobrado;	state Exp;
branches;
next	1.21;

1.21
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.20;

1.20
date	2007.05.31.19.19.35;	author jmc;	state Exp;
branches;
next	1.19;

1.19
date	2003.11.25.20.12.38;	author otto;	state Exp;
branches;
next	1.18;

1.18
date	2003.11.01.07.00.07;	author otto;	state Exp;
branches;
next	1.17;

1.17
date	2003.10.31.08.57.10;	author otto;	state Exp;
branches;
next	1.16;

1.16
date	2003.10.31.08.42.24;	author otto;	state Exp;
branches;
next	1.15;

1.15
date	2003.10.22.07.49.03;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.05.10.18.42.24;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2003.03.11.08.11.08;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.03.06.20.13.15;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2000.04.15.02.15.27;	author aaron;	state Exp;
branches;
next	1.10;

1.10
date	2000.03.14.21.31.46;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	99.09.23.04.12.01;	author alex;	state Exp;
branches;
next	1.8;

1.8
date	99.07.09.13.35.25;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.07.10.50.05;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.05.23.14.11.04;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.05.12.21.58.33;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	98.12.15.01.20.50;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	97.06.29.23.40.47;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.03.14.05.12.45;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	97.01.16.05.20.29;	author millert;	state Exp;
branches;
next	;


desc
@@


1.32
log
@Document el_wpush(3) and fix the description of el_push(3).
Improve precision in the description of the "bind" builtin command.
Tweak terminology to better match editline(7).
@
text
@.\"	$OpenBSD: editrc.5,v 1.31 2016/04/20 01:11:45 schwarze Exp $
.\"	$NetBSD: editrc.5,v 1.31 2016/04/28 15:50:34 christos Exp $
.\"
.\" Copyright (c) 1997-2000 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This file was contributed to The NetBSD Foundation by Luke Mewburn.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
.\" BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: April 20 2016 $
.Dt EDITRC 5
.Os
.Sh NAME
.Nm editrc
.Nd configuration file for editline library
.Sh DESCRIPTION
The
.Nm
file defines various settings to be used by the
.Xr editline 3
library.
.Pp
The format of each line is:
.Pp
.Dl [prog:]command [arg ...]
.Pp
.Ar command
is one of the
.Xr editline 3
builtin commands.
Refer to
.Sx BUILTIN COMMANDS
for more information.
.Pp
.Ar prog
is the program name string that a program defines when it calls
.Xr el_init 3
to set up
.Xr editline 3 ,
which is usually
.Va argv[0] .
.Ar command
will be executed for any program which matches
.Ar prog .
.Pp
.Ar prog
may also be a
.Xr regex 3
style
regular expression, in which case
.Ar command
will be executed for any program that matches the regular expression.
.Pp
If
.Ar prog
is absent,
.Ar command
is executed for all programs.
.Sh BUILTIN COMMANDS
The
.Nm editline
library has some builtin commands, which affect the way
that the line editing and history functions operate.
These are based on similar named builtins present in the tcsh shell.
.Pp
The following builtin commands are available:
.Bl -tag -width 4n
.It Ic bind Oo Fl aeklrsv Oc Op Ar key Op Ar command
Without options and arguments, list all bound keys and macros, and
the editor command or input string to which each one is bound.
If only
.Ar key
is supplied, show the binding for that key or macro.
If
.Ar key command
is supplied, bind the editor
.Ar command
to that key or macro.
.Pp
The options are as follows:
.Bl -tag -width 4n
.It Fl a
List or change key bindings in the
.Xr vi 1
mode alternate (command mode) key map.
.It Fl e
Bind all keys to the standard GNU Emacs-like bindings.
.It Fl k
.Ar key
is interpreted as a symbolic arrow key name, which may be one of
.Sq up ,
.Sq down ,
.Sq left
or
.Sq right .
.It Fl l
List all editor commands and a short description of each.
.It Fl r
Remove the binding of the key or macro
.Ar key .
.It Fl s
Define a keyboard macro rather than a key binding or command macro:
.Ar command
is taken as a literal string and appended to the input queue whenever
.Ar key
is typed.
Bound keys and macros in
.Ar command
are themselves reinterpreted, and this continues for ten levels of
interpretation.
.It Fl v
Bind all keys to the standard
.Xr vi 1 Ns -like
bindings.
.El
.Pp
The
.Xr editline 7
manual documents all editor commands and contains more information
about macros and the input queue.
.Pp
.Ar key
and
.Ar command
can contain control characters of the form
.Sm off
.Sq No ^ Ar character
.Sm on
.Po
e.g.\&
.Sq ^A
.Pc ,
and the following backslashed escape sequences:
.Pp
.Bl -tag -compact -offset indent -width 4n
.It Ic \ea
Bell
.It Ic \eb
Backspace
.It Ic \ee
Escape
.It Ic \ef
Formfeed
.It Ic \en
Newline
.It Ic \er
Carriage return
.It Ic \et
Horizontal tab
.It Ic \ev
Vertical tab
.Sm off
.It Sy \e Ar nnn
.Sm on
The ASCII character corresponding to the octal number
.Ar nnn .
.El
.Pp
.Sq \e
nullifies the special meaning of the following character,
if it has any, notably
.Sq \e
and
.Sq ^ .
.It Ic echotc Oo Fl sv Oc Ar arg Ar ...
Exercise terminal capabilities given in
.Ar arg ... .
If
.Ar arg
is
.Sq baud ,
.Sq cols ,
.Sq lines ,
.Sq rows ,
.Sq meta ,
or
.Sq tabs ,
the value of that capability is printed, with
.Dq yes
or
.Dq no
indicating that the terminal does or does not have that capability.
.Pp
.Fl s
returns an empty string for non-existent capabilities, rather than
causing an error.
.Fl v
causes messages to be verbose.
.It Ic edit Op Li on | Li off
Enable or disable the
.Nm editline
functionality in a program.
.It Ic history Ar list | Ar size Dv n | Ar unique Dv n
The
.Ar list
command lists all entries in the history.
The
.Ar size
command sets the history size to
.Dv n
entries.
The
.Ar unique
command controls if history should keep duplicate entries.
If
.Dv n
is non zero, only keep unique history entries.
If
.Dv n
is zero, then keep all entries (the default).
.It Ic settc Ar cap Ar val
Set the terminal capability
.Ar cap
to
.Ar val ,
as defined in
.Xr termcap 5 .
No sanity checking is done.
.It Ic setty Xo
.Op Fl adqx
.Op Ar +mode
.Op Ar -mode
.Op Ar mode
.Op Ar char=c
.Xc
Control which tty modes that
.Nm
won't allow the user to change.
.Fl d ,
.Fl q
or
.Fl x
tells
.Ic setty
to act on the
.Sq edit ,
.Sq quote
or
.Sq execute
set of tty modes respectively; defaulting to
.Fl x .
.Pp
Without other arguments,
.Ic setty
lists the modes in the chosen set which are fixed on
.Po
.Sq +mode
.Pc
or off
.Po
.Sq -mode
.Pc .
.Fl a
lists all tty modes in the chosen set regardless of the setting.
With
.Ar +mode ,
.Ar -mode
or
.Ar mode ,
fixes
.Ar mode
on or off or removes control of
.Ar mode
in the chosen set.
.Pp
.Ic Setty
can also be used to set tty characters to particular values using
.Ar char=value .
If
.Ar value
is empty
then the character is set to
.Dv _POSIX_VDISABLE .
.It Ic telltc
List the values of all the terminal capabilities (see
.Xr termcap 5 ) .
.El
.Sh FILES
.Bl -tag -width "~/.editrcXXX"
.It Pa ~/.editrc
User configuration file for the
.Xr editline 3
library.
.El
.Sh SEE ALSO
.Xr editline 3 ,
.Xr regex 3 ,
.Xr termcap 5 ,
.Xr editline 7
.Sh AUTHORS
.An -nosplit
The
.Nm editline
library was written by
.An Christos Zoulas ,
and this manual was written by
.An Luke Mewburn ,
with some sections inspired by tcsh.
@


1.31
log
@New editline(7) manual, explaining to end-users how line editing works
in programs like ftp(1), sftp(1), bc(1), and cdio(1) that use libedit.
The existing editrc(5) manual only explains customization, and the
existing editline(3) manual only explains the C language interface.
Already listing all editor functions and all default key bindings, but
in other respects, not 100% complete yet, and due to the sheer size,
some bugs may have slipped, but all that can be fixed in the tree.

OK and tweaks jmc@@.
Also seems reasonable to Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.30 2016/04/18 20:13:07 schwarze Exp $
.\"	$NetBSD: editrc.5,v 1.30 2016/04/17 18:39:14 christos Exp $
d30 1
a30 1
.Dd $Mdocdate: April 18 2016 $
d88 4
a91 6
.It Ic bind Fl aeklrsv Xo
.Op Ar key Op Ar command
.Xc
Without options, list all bound keys, and the editor command to which
each is bound.
If
d93 1
a93 2
is supplied, show the bindings for
.Ar key .
d96 1
a96 1
is supplied, bind
d98 3
a100 3
to
.Ar key .
Options include:
d119 2
a120 1
Remove a key's binding.
d122 1
d124 1
a124 1
is taken as a literal string and treated as terminal input when
d127 1
a127 1
Bound keys in
d137 1
a137 2
.Ar command
may be one of the editor commands documented in the
d139 2
a140 1
manual, or another key.
@


1.30
log
@Delete redundant, empty callbacks;
no functional change, minus hundred lines of code.
OK martijn@@;
also proof-read by Christian Heckendorf <mbie at ulmus dot me>.
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.29 2016/01/08 20:26:54 zhuk Exp $
d30 1
a30 1
.Dd $Mdocdate: January 8 2016 $
d139 3
a141 3
may be one of the commands documented in
.Sx "EDITOR COMMANDS"
below, or another key.
a298 196
.Sh EDITOR COMMANDS
The following editor commands are available for use in key bindings:
.\" Section automatically generated with makelist
.Bl -tag -width 4n
.It Ic vi-paste-next
Vi paste previous deletion to the right of the cursor.
.It Ic vi-paste-prev
Vi paste previous deletion to the left of the cursor.
.It Ic vi-prev-big-word
Vi move to the previous space delimited word.
.It Ic vi-prev-word
Vi move to the previous word.
.It Ic vi-next-big-word
Vi move to the next space delimited word.
.It Ic vi-next-word
Vi move to the next word.
.It Ic vi-change-case
Vi change case of character under the cursor and advance one character.
.It Ic vi-change-meta
Vi change prefix command.
.It Ic vi-insert-at-bol
Vi enter insert mode at the beginning of line.
.It Ic vi-replace-char
Vi replace character under the cursor with the next character typed.
.It Ic vi-replace-mode
Vi enter replace mode.
.It Ic vi-substitute-char
Vi replace character under the cursor and enter insert mode.
.It Ic vi-substitute-line
Vi substitute entire line.
.It Ic vi-change-to-eol
Vi change to end of line.
.It Ic vi-insert
Vi enter insert mode.
.It Ic vi-add
Vi enter insert mode after the cursor.
.It Ic vi-add-at-eol
Vi enter insert mode at end of line.
.It Ic vi-delete-meta
Vi delete prefix command.
.It Ic vi-end-big-word
Vi move to the end of the current space delimited word.
.It Ic vi-end-word
Vi move to the end of the current word.
.It Ic vi-undo
Vi undo last change.
.It Ic vi-command-mode
Vi enter command mode (use alternative key bindings).
.It Ic vi-zero
Vi move to the beginning of line.
.It Ic vi-delete-prev-char
Vi move to previous character (backspace).
.It Ic vi-list-or-eof
Vi list choices for completion or indicate end of file if empty line.
.It Ic vi-kill-line-prev
Vi cut from beginning of line to cursor.
.It Ic vi-search-prev
Vi search history previous.
.It Ic vi-search-next
Vi search history next.
.It Ic vi-repeat-search-next
Vi repeat current search in the same search direction.
.It Ic vi-repeat-search-prev
Vi repeat current search in the opposite search direction.
.It Ic vi-next-char
Vi move to the character specified next.
.It Ic vi-prev-char
Vi move to the character specified previous.
.It Ic vi-to-next-char
Vi move up to the character specified next.
.It Ic vi-to-prev-char
Vi move up to the character specified previous.
.It Ic vi-repeat-next-char
Vi repeat current character search in the same search direction.
.It Ic vi-repeat-prev-char
Vi repeat current character search in the opposite search direction.
.It Ic vi-match
Vi go to matching () {} or [].
.It Ic vi-undo-line
Vi undo all changes to line.
.It Ic vi-to-column
Vi go to specified column.
.It Ic vi-yank-end
Vi yank to end of line.
.It Ic vi-yank
Vi yank.
.It Ic vi-comment-out
Vi comment out current command.
.It Ic vi-alias
Vi include shell alias.
.It Ic vi-to-history-line
Vi go to specified history file line..
.It Ic vi-histedit
Vi edit history line with vi.
.It Ic vi-history-word
Vi append word from previous input line.
.It Ic vi-redo
Vi redo last non-motion command.
.It Ic em-delete-or-list
Delete character under cursor or list completions if at end of line.
.It Ic em-delete-next-word
Cut from cursor to end of current word.
.It Ic em-yank
Paste cut buffer at cursor position.
.It Ic em-kill-line
Cut the entire line and save in cut buffer.
.It Ic em-kill-region
Cut area between mark and cursor and save in cut buffer.
.It Ic em-copy-region
Copy area between mark and cursor to cut buffer.
.It Ic em-gosmacs-transpose
Exchange the two characters before the cursor.
.It Ic em-next-word
Move next to end of current word.
.It Ic em-upper-case
Uppercase the characters from cursor to end of current word.
.It Ic em-capitol-case
Capitalize the characters from cursor to end of current word.
.It Ic em-lower-case
Lowercase the characters from cursor to end of current word.
.It Ic em-set-mark
Set the mark at cursor.
.It Ic em-exchange-mark
Exchange the cursor and mark.
.It Ic em-universal-argument
Universal argument (argument times 4).
.It Ic em-meta-next
Add 8th bit to next character typed.
.It Ic em-toggle-overwrite
Switch from insert to overwrite mode or vice versa.
.It Ic em-copy-prev-word
Copy current word to cursor.
.It Ic em-inc-search-next
Emacs incremental next search.
.It Ic em-inc-search-prev
Emacs incremental reverse search.
.It Ic ed-end-of-file
Indicate end of file.
.It Ic ed-insert
Add character to the line.
.It Ic ed-delete-prev-word
Delete from beginning of current word to cursor.
.It Ic ed-delete-next-char
Delete character under cursor.
.It Ic ed-kill-line
Cut to the end of line.
.It Ic ed-move-to-end
Move cursor to the end of line.
.It Ic ed-move-to-beg
Move cursor to the beginning of line.
.It Ic ed-transpose-chars
Exchange the character to the left of the cursor with the one under it.
.It Ic ed-next-char
Move to the right one character.
.It Ic ed-prev-word
Move to the beginning of the current word.
.It Ic ed-prev-char
Move to the left one character.
.It Ic ed-quoted-insert
Add the next character typed verbatim.
.It Ic ed-digit
Adds to argument or enters a digit.
.It Ic ed-argument-digit
Digit that starts argument.
.It Ic ed-unassigned
Indicates unbound character.
.It Ic ed-ignore
Ignore this character.
.It Ic ed-newline
Execute command.
.It Ic ed-delete-prev-char
Delete the character to the left of the cursor.
.It Ic ed-clear-screen
Clear screen leaving current line at the top.
.It Ic ed-redisplay
Redisplay everything.
.It Ic ed-start-over
Erase current line and start from scratch.
.It Ic ed-sequence-lead-in
First character in a bound sequence.
.It Ic ed-prev-history
Move to the previous history line.
.It Ic ed-next-history
Move to the next history line.
.It Ic ed-search-prev-history
Search previous in history for a line matching the current.
.It Ic ed-search-next-history
Search next in history for a line matching the current.
.It Ic ed-prev-line
Move up one line.
.It Ic ed-next-line
Move down one line.
.It Ic ed-command
Editline extended command.
.El
.\" End of section automatically generated with makelist
d309 2
a310 1
.Xr termcap 5
@


1.29
log
@Zap extraneous SYNOPSIS sections.

The gettytab(5) and termcap(5) get FILES, others don't need anything.

With input from & okay schwarze@@
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.28 2014/12/15 22:35:41 schwarze Exp $
.\"	$NetBSD: editrc.5,v 1.27 2013/01/10 16:03:42 wiz Exp $
d30 1
a30 1
.Dd $Mdocdate: December 15 2014 $
d465 2
a466 14
.It Ic ed-tty-sigint
Tty interrupt character.
.It Ic ed-tty-dsusp
Tty delayed suspend character.
.It Ic ed-tty-flush-output
Tty flush output characters.
.It Ic ed-tty-sigquit
Tty quit character.
.It Ic ed-tty-sigtstp
Tty suspend character.
.It Ic ed-tty-stop-output
Tty disallow output characters.
.It Ic ed-tty-start-output
Tty allow output characters.
@


1.28
log
@merge improvements from NetBSD; ok jmc@@ nicm@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.27 2014/12/12 17:04:22 schwarze Exp $
d30 1
a30 1
.Dd $Mdocdate: December 12 2014 $
a35 2
.Sh SYNOPSIS
.Nm
@


1.27
log
@markup fixes from Kaspars at Bankovskis dot net;
some of this is already contained upstream in NetBSD,
the rest will be sent there
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.26 2013/01/10 14:21:47 jmc Exp $
.\"	$NetBSD: editrc.5,v 1.24 2009/04/11 22:17:52 wiz Exp $
d30 1
a30 1
.Dd $Mdocdate: January 10 2013 $
d198 1
a198 1
.Sq meta
@


1.26
log
@editline.3: editrc only read from $HOME; from LEVAI Daniel
editrc.5: add FILES for ~/.editrc

patches passed onto net/free
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.25 2010/06/30 07:34:38 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: June 30 2010 $
d521 1
d524 4
a527 2
library was written by Christos Zoulas,
and this manual was written by Luke Mewburn,
@


1.25
log
@there's no tcsh page in base, so don;t bother xr'ing it;
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.24 2010/06/30 00:05:35 nicm Exp $
d509 7
@


1.24
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.18 2003/11/01 07:00:07 otto Exp $
d30 1
a30 1
.Dd $Mdocdate$
d86 1
a86 3
These are based on similar named builtins present in the
.Xr tcsh 1
shell.
d518 1
a518 2
with some sections inspired by
.Xr tcsh .
@


1.23
log
@ellipses are not optional arguments; while here, fix a double .Ar/.Ar
in the roff source.

ok jmc@@
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.22 2010/01/25 17:14:50 sobrado Exp $
.\"	$NetBSD: editrc.5,v 1.19 2003/11/01 23:35:33 christos Exp $
d30 2
a31 1
.Dd $Mdocdate: January 25 2010 $
a32 1
.Dt EDITRC 5
d87 1
a87 1
.Xr tcsh
d92 1
a92 2
.It Ic bind Xo
.Op Fl aeklrsv
d190 1
a190 5
.It Ic echotc Xo
.Op Fl sv
.Ar arg
.Ar ...
.Xc
d218 18
a235 2
.It Ic history
List the history.
d290 9
d394 1
a394 1
Vi go to specified history file line.
@


1.22
log
@fix double full stop, find out by jmc@@ when looking into another issue.
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.21 2008/06/26 05:42:05 ray Exp $
d30 1
a30 1
.Dd $Mdocdate: June 26 2008 $
d47 1
a47 1
.Dl [prog:]command [arg [...]]
d197 1
a197 1
.Ar arg Ar ... .
@


1.21
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.20 2007/05/31 19:19:35 jmc Exp $
d30 1
a30 1
.Dd $Mdocdate: May 31 2007 $
d374 1
a374 1
Vi go to specified history file line..
@


1.20
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.19 2003/11/25 20:12:38 otto Exp $
a16 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"        This product includes software developed by the NetBSD
.\"        Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d30 1
a30 1
.Dd $Mdocdate$
@


1.19
log
@Sync libedit to NetBSD libedit as of Nov 8, 2003.
Tested by jmc@@ djm@@ and myself
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.18 2003/11/01 07:00:07 otto Exp $
d37 1
a37 1
.Dd October 18, 2003
@


1.18
log
@Sync command table to code. Spotted by jmc@@.
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.17 2003/10/31 08:57:10 otto Exp $
.\"	$NetBSD: editrc.5,v 1.16 2003/06/27 18:57:09 wiz Exp $
d37 1
a37 1
.Dd November 8, 2000
d245 1
@


1.17
log
@Man pages fixes from jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.16 2003/10/31 08:42:24 otto Exp $
d297 1
a297 1
.It Ic vi-prev-space-word
d301 1
a301 1
.It Ic vi-next-space-word
d329 2
a331 2
Vi move to the end of the current space delimited word.
.It Ic vi-to-end-word
d365 22
@


1.16
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.15 2003/10/22 07:49:03 jmc Exp $
d53 1
d94 1
a94 1
.Xr tcsh 1
d100 1
a100 7
.Op Fl a
.Op Fl e
.Op Fl k
.Op Fl l
.Op Fl r
.Op Fl s
.Op Fl v
a116 6
.It Fl e
Bind all keys to the standard GNU Emacs-like bindings.
.It Fl v
Bind all keys to the standard
.Xr vi 1 Ns -like
bindings.
d121 2
d144 4
d163 1
a163 1
e.g.
d212 2
a213 1
.Sq meta or
a231 3
.It Ic telltc
List the values of all the terminal capabilities (see
.Xr termcap 5 ) .
d241 1
a241 4
.Op Fl a
.Op Fl d
.Op Fl q
.Op Fl x
d285 3
d485 1
a485 1
.Xr tcsh 1 .
@


1.15
log
@emptry -> empty; from Jared Yanovich
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.14 2003/05/10 18:42:24 jmc Exp $
.\"	$NetBSD: editrc.5,v 1.4 1997/04/24 20:20:31 christos Exp $
d4 1
a4 1
.\" Copyright (c) 1997 The NetBSD Foundation, Inc.
d28 2
a29 2
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
d37 2
a38 1
.Dd January 11, 1997
a39 1
.Os
d44 1
a44 1
.Nm editrc
d52 2
a53 4
The format of each line is either:
.Dl prog:command [arg [...]]
or
.Dl command [arg [...]]
d58 1
a58 1
built-in commands.
d60 1
a60 1
.Sx BUILT-IN COMMANDS
d81 7
a87 1
.Sh BUILT-IN COMMANDS
d90 1
a90 1
library has some built-in commands, which affect the way
d92 2
a93 2
These are based on similarly named built-in commands present in the
.Xr tcsh
d96 1
a96 1
The following built-in commands are available:
d126 1
a126 1
.Xr vi 1 -like
d155 5
d168 1
a168 1
e.g.,
d230 4
d296 186
d492 1
a492 1
.Xr tcsh .
@


1.14
log
@typo;
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.13 2003/03/11 08:11:08 jmc Exp $
d217 1
a217 1
returns an emptry string for non-existent capabilities, rather than
@


1.13
log
@files with dead .Xr's;

left .Xr, but removed man page number
as suggested by mpech@@

more help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.12 2003/03/06 20:13:15 jmc Exp $
d68 1
a68 1
to setup
@


1.12
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.11 2000/04/15 02:15:27 aaron Exp $
d89 1
a89 1
.Nm tcsh
d293 1
a293 1
.Nm tcsh .
@


1.11
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.10 2000/03/14 21:31:46 aaron Exp $
d89 1
a89 1
.Xr tcsh 1
d293 1
a293 1
.Xr tcsh 1 .
@


1.10
log
@Suffix "i.e." and "e.g." with a comma. Just another really picky man page
commit, as we want our documentation to be as consistently formatted as
possible (it's getting there :-)).
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.9 1999/09/23 04:12:01 alex Exp $
d225 1
a225 1
.Xr termcap 5 ).
@


1.9
log
@Typo fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.8 1999/07/09 13:35:25 aaron Exp $
d159 1
a159 1
e.g.
@


1.8
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.7 1999/07/07 10:50:05 aaron Exp $
d217 1
a217 1
returns an emptry string for non-existant capabilities, rather than
@


1.7
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.6 1999/05/23 14:11:04 aaron Exp $
d65 1
a65 1
.Ar prog 
d121 1
a121 1
Bind all keys to the standard 
d125 1
a125 1
List or change key bindings in the 
@


1.6
log
@remove argument from .Os macros so value in /usr/share/tmac/mdoc/doc-common
is used instead; kwesterback@@home.com
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.5 1999/05/12 21:58:33 aaron Exp $
d38 1
a39 1
.Dt EDITRC 5
@


1.5
log
@builtin -> built-in
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.4 1998/12/15 01:20:50 aaron Exp $
d38 1
a38 1
.Os BSD 4.4
@


1.4
log
@always give .Nm macros an argument in SYNOPSIS sections; krw@@tcn.net
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.3 1997/06/29 23:40:47 millert Exp $
d60 1
a60 1
builtin commands.
d62 1
a62 1
.Sx BUILTIN COMMANDS
d83 1
a83 1
.Sh BUILTIN COMMANDS
d86 1
a86 1
library has some builtin commands, which affect the way
d88 1
a88 1
These are based on similar named builtins present in the
d92 1
a92 1
The following builtin commands are available:
@


1.3
log
@Updates from NetBSD (christos@@netbsd.org)
  * Portability fixes:
	__const         -> const
	BADSIG          -> SIG_ERR
	int flags       -> u_int flags
	#if __STDC__    -> #ifdef __STDC__
  * Don't allow CSWTCH to interfere with CSUSP on __SVR4 systems.
  * Return -1 if the terminal set operation resulted in dumb terminal settings.
  * Handle properly the case where the last line in the sourced file does
    not have a trailing '\n'. From Jeffrey C Honig.
  * editrc -> editline in editline(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: editrc.5,v 1.2 1997/03/14 05:12:45 millert Exp $
d44 1
a44 1
.Nm
@


1.2
log
@fix el_source() - a block needed braces around it (from NetBSD)
Some strcpy() -> strncpy (from NetBSD)
Some KNF
Add current NetBSD tags
@
text
@d1 2
a2 2
.\"	$OpenBSD: editrc.5,v 1.1 1997/01/16 05:20:29 millert Exp $
.\"	$NetBSD: editrc.5,v 1.3 1997/01/11 09:57:06 lukem Exp $
d289 1
a289 1
.Nm
@


1.1
log
@Man pages for libedit, from NetBSD.
@
text
@d1 2
a2 1
.\"	$OpenBSD: $
@
