head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.24
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.16
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.20
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.18
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.14
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.12
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.01.29.17.23.21;	author schwarze;	state dead;
branches;
next	1.8;
commitid	MOfHvqt1MJvqXmCY;

1.8
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.31.08.42.24;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.17.19.42.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.26;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.03.14.05.12.52;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.16.05.18.36;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.41;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.41;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Start synching with NetBSD:
Rename the files key.[hc] to keymacro.[hc] and term.[hc] to terminal.[hc].
The change makes sense because "term.h" conflicts with <term.h>
and the functions key_clear(), key_end(), and key_print() in "key.h"
conflict with macros in <term.h>.
No content change yet, no binary change in *.o after "strip -d".
This reduces the remaining diff from +4634 -3992 to +2640 -1998.
OK czarkoff@@, and mmcc@@ agrees with the direction.
@
text
@/*	$OpenBSD: key.h,v 1.8 2010/06/30 00:05:35 nicm Exp $	*/
/*	$NetBSD: key.h,v 1.13 2009/12/30 22:37:40 christos Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Christos Zoulas of Cornell University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)key.h	8.1 (Berkeley) 6/4/93
 */

/*
 * el.key.h: Key macro header
 */
#ifndef _h_el_key
#define	_h_el_key

typedef union key_value_t {
	el_action_t	 cmd;	/* If it is a command the #	*/
	Char		*str;	/* If it is a string...		*/
} key_value_t;

typedef struct key_node_t key_node_t;

typedef struct el_key_t {
	Char		*buf;	/* Key print buffer		*/
	key_node_t	*map;	/* Key map			*/
	key_value_t	 val;	/* Local conversion buffer	*/
} el_key_t;

#define	XK_CMD	0
#define	XK_STR	1
#define	XK_NOD	2
#define	XK_EXE	3

#undef key_end
#undef key_clear
#undef key_print

protected int		 key_init(EditLine *);
protected void		 key_end(EditLine *);
protected key_value_t	*key_map_cmd(EditLine *, int);
protected key_value_t	*key_map_str(EditLine *, Char *);
protected void		 key_reset(EditLine *);
protected int		 key_get(EditLine *, Char *, key_value_t *);
protected void		 key_add(EditLine *, const Char *, key_value_t *, int);
protected void		 key_clear(EditLine *, el_action_t *, const Char *);
protected int		 key_delete(EditLine *, const Char *);
protected void		 key_print(EditLine *, const Char *);
protected void	         key_kprint(EditLine *, const Char *, key_value_t *,
    int);
protected size_t	 key__decode_str(const Char *, char *, size_t,
    const char *);

#endif /* _h_el_key */
@


1.8
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.7
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d2 1
a2 1
/*	$NetBSD: key.h,v 1.8 2003/08/07 16:44:32 agc Exp $	*/
d46 1
a46 1
	char		*str;	/* If it is a string...		*/
d52 1
a52 1
	char		*buf;	/* Key print buffer		*/
d69 1
a69 1
protected key_value_t	*key_map_str(EditLine *, char *);
d71 6
a76 6
protected int		 key_get(EditLine *, char *, key_value_t *);
protected void		 key_add(EditLine *, const char *, key_value_t *, int);
protected void		 key_clear(EditLine *, el_action_t *, const char *);
protected int		 key_delete(EditLine *, const char *);
protected void		 key_print(EditLine *, const char *);
protected void	         key_kprint(EditLine *, const char *, key_value_t *,
d78 2
a79 1
protected char		*key__decode_str(const char *, char *, const char *);
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
/*	$OpenBSD: key.h,v 1.5 2002/02/17 19:42:25 millert Exp $	*/
/*	$NetBSD: key.h,v 1.2 1997/01/11 06:47:59 lukem Exp $	*/
d42 1
a42 1
#define _h_el_key
d45 2
a46 2
    el_action_t  cmd;	/* If it is a command the #	*/
    char        *str;	/* If it is a string...		*/
d52 3
a54 3
    char        *buf;	/* Key print buffer		*/
    key_node_t  *map;	/* Key map			*/
    key_value_t  val;	/* Local conversion buffer	*/
d57 22
a78 17
#define XK_CMD	0
#define XK_STR	1
#define XK_NOD	2
#define XK_EXE	3

protected int 		key_init(EditLine *);
protected void 		key_end(EditLine *);
protected key_value_t *	key_map_cmd(EditLine *, int);
protected key_value_t *	key_map_str(EditLine *, char *);
protected void		key_reset(EditLine *);
protected int 		key_get(EditLine *, char *, key_value_t *);
protected void		key_add(EditLine *, char *, key_value_t *, int);
protected void		key_clear(EditLine *, el_action_t *, char *);
protected int		key_delete(EditLine *, char *);
protected void		key_print(EditLine *, char *);
protected void	        key_kprint(EditLine *, char *, key_value_t *, int);
protected char 	       *key__decode_str(char *, char *, char *);
@


1.5
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.4 2002/02/16 21:27:26 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.3 1997/03/14 05:12:52 millert Exp $	*/
d71 3
a73 6
protected int 		key_get		__P((EditLine *, char *, 
					     key_value_t *));
protected void		key_add		__P((EditLine *, char *, key_value_t *,
					     int));
protected void		key_clear	__P((EditLine *, el_action_t *,
					     char *));
d76 1
a76 2
protected void	        key_kprint	__P((EditLine *, char *, 
					     key_value_t *, int));
@


1.3
log
@fix el_source() - a block needed braces around it (from NetBSD)
Some strcpy() -> strncpy (from NetBSD)
Some KNF
Add current NetBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: key.h,v 1.2 1997/01/16 05:18:36 millert Exp $	*/
d66 5
a70 5
protected int 		key_init	__P((EditLine *));
protected void 		key_end		__P((EditLine *));
protected key_value_t *	key_map_cmd	__P((EditLine *, int));
protected key_value_t *	key_map_str	__P((EditLine *, char *));
protected void		key_reset	__P((EditLine *));
d77 2
a78 2
protected int		key_delete	__P((EditLine *, char *));
protected void		key_print	__P((EditLine *, char *));
d81 1
a81 1
protected char 	       *key__decode_str	__P((char *, char *, char *));
@


1.2
log
@Merge in NetBSD libedit changes and new man pages.  Also fix some
strncpy() usage in their code.  NetBSD change log was:
    * add a man page for the editline routines
    * add a man page describing editrc
    * fix bugs in el_parse():
      * didn't execute command when program name matched (test reversed)
      * was checking against empty string instead of program name
      * after checks, command to run also pointed to empty string
    * document ^char and \ escape sequences
    * when parsing ^char control chars, check the correct char when determining
      validity (previously, ^char was a NOP interpreted as the literal string
      because of this bug)
    * Implement CC_REDISPLAY, which (unlike CC_REFRESH) redraws the entire input
    * line (a la ^R). This is useful if the binding outputs information and
    * mucks up the input line. To be used in ``list-choices'' bindings (refer
    * to the ^D binding in csh when filec is set)
@
text
@d1 2
a2 1
/*	$OpenBSD: $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
