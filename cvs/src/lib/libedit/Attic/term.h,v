head	1.9;
access;
symbols
	OPENBSD_5_8:1.8.0.24
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.16
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.20
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.18
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.14
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.8.0.12
	OPENBSD_5_3_BASE:1.8
	OPENBSD_5_2:1.8.0.10
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.8
	OPENBSD_5_0:1.8.0.6
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.8.0.4
	OPENBSD_4_9_BASE:1.8
	OPENBSD_4_8:1.8.0.2
	OPENBSD_4_8_BASE:1.8
	OPENBSD_4_7:1.7.0.24
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.26
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.22
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.20
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.18
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.16
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.14
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.12
	OPENBSD_4_0_BASE:1.7
	OPENBSD_3_9:1.7.0.10
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.8
	OPENBSD_3_8_BASE:1.7
	OPENBSD_3_7:1.7.0.6
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.4
	OPENBSD_3_6_BASE:1.7
	OPENBSD_3_5:1.7.0.2
	OPENBSD_3_5_BASE:1.7
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.6
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.4
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.5.0.2
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.01.29.17.23.21;	author schwarze;	state dead;
branches;
next	1.8;
commitid	MOfHvqt1MJvqXmCY;

1.8
date	2010.06.30.00.05.35;	author nicm;	state Exp;
branches;
next	1.7;

1.7
date	2003.10.31.08.42.24;	author otto;	state Exp;
branches;
next	1.6;

1.6
date	2003.06.02.20.18.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2002.02.17.19.42.25;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.16.21.27.26;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	97.03.14.05.13.06;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	97.01.16.05.18.48;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.42;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.42;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Start synching with NetBSD:
Rename the files key.[hc] to keymacro.[hc] and term.[hc] to terminal.[hc].
The change makes sense because "term.h" conflicts with <term.h>
and the functions key_clear(), key_end(), and key_print() in "key.h"
conflict with macros in <term.h>.
No content change yet, no binary change in *.o after "strip -d".
This reduces the remaining diff from +4634 -3992 to +2640 -1998.
OK czarkoff@@, and mmcc@@ agrees with the direction.
@
text
@/*	$OpenBSD: term.h,v 1.8 2010/06/30 00:05:35 nicm Exp $	*/
/*	$NetBSD: term.h,v 1.21 2009/12/30 22:37:40 christos Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * Christos Zoulas of Cornell University.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)term.h	8.1 (Berkeley) 6/4/93
 */

/*
 * el.term.h: Termcap header
 */
#ifndef _h_el_term
#define	_h_el_term

#include "histedit.h"

typedef struct {		/* Symbolic function key bindings	*/
	const Char	*name;	/* name of the key			*/
	int		 key;	/* Index in termcap table		*/
	key_value_t	 fun;	/* Function bound to it			*/
	int		 type;	/* Type of function			*/
} fkey_t;

typedef struct {
	const char *t_name;		/* the terminal name	*/
	coord_t	  t_size;		/* # lines and cols	*/
	int	  t_flags;
#define	TERM_CAN_INSERT		0x001	/* Has insert cap	*/
#define	TERM_CAN_DELETE		0x002	/* Has delete cap	*/
#define	TERM_CAN_CEOL		0x004	/* Has CEOL cap		*/
#define	TERM_CAN_TAB		0x008	/* Can use tabs		*/
#define	TERM_CAN_ME		0x010	/* Can turn all attrs.	*/
#define	TERM_CAN_UP		0x020	/* Can move up		*/
#define	TERM_HAS_META		0x040	/* Has a meta key	*/
#define	TERM_HAS_AUTO_MARGINS	0x080	/* Has auto margins	*/
#define	TERM_HAS_MAGIC_MARGINS	0x100	/* Has magic margins	*/
	char	 *t_buf;		/* Termcap buffer	*/
	int	  t_loc;		/* location used	*/
	char	**t_str;		/* termcap strings	*/
	int	 *t_val;		/* termcap values	*/
	char	 *t_cap;		/* Termcap buffer	*/
	fkey_t	 *t_fkey;		/* Array of keys	*/
} el_term_t;

/*
 * fKey indexes
 */
#define	A_K_DN		0
#define	A_K_UP		1
#define	A_K_LT		2
#define	A_K_RT		3
#define	A_K_HO		4
#define	A_K_EN		5
#define	A_K_NKEYS	6

protected void	term_move_to_line(EditLine *, int);
protected void	term_move_to_char(EditLine *, int);
protected void	term_clear_EOL(EditLine *, int);
protected void	term_overwrite(EditLine *, const Char *, size_t);
protected void	term_insertwrite(EditLine *, Char *, int);
protected void	term_deletechars(EditLine *, int);
protected void	term_clear_screen(EditLine *);
protected void	term_beep(EditLine *);
protected int	term_change_size(EditLine *, int, int);
protected int	term_get_size(EditLine *, int *, int *);
protected int	term_init(EditLine *);
protected void	term_bind_arrow(EditLine *);
protected void	term_print_arrow(EditLine *, const Char *);
protected int	term_clear_arrow(EditLine *, const Char *);
protected int	term_set_arrow(EditLine *, const Char *, key_value_t *, int);
protected void	term_end(EditLine *);
protected void	term_get(EditLine *, const char **);
protected int	term_set(EditLine *, const char *);
protected int	term_settc(EditLine *, int, const Char **);
protected int	term_gettc(EditLine *, int, char **);
protected int	term_telltc(EditLine *, int, const Char **);
protected int	term_echotc(EditLine *, int, const Char **);
protected void	term_writec(EditLine *, Int);
protected int	term__putc(EditLine *, Int);
protected void	term__flush(EditLine *);

/*
 * Easy access macros
 */
#define	EL_FLAGS	(el)->el_term.t_flags

#define	EL_CAN_INSERT		(EL_FLAGS & TERM_CAN_INSERT)
#define	EL_CAN_DELETE		(EL_FLAGS & TERM_CAN_DELETE)
#define	EL_CAN_CEOL		(EL_FLAGS & TERM_CAN_CEOL)
#define	EL_CAN_TAB		(EL_FLAGS & TERM_CAN_TAB)
#define	EL_CAN_ME		(EL_FLAGS & TERM_CAN_ME)
#define EL_CAN_UP		(EL_FLAGS & TERM_CAN_UP)
#define	EL_HAS_META		(EL_FLAGS & TERM_HAS_META)
#define	EL_HAS_AUTO_MARGINS	(EL_FLAGS & TERM_HAS_AUTO_MARGINS)
#define	EL_HAS_MAGIC_MARGINS	(EL_FLAGS & TERM_HAS_MAGIC_MARGINS)

#endif /* _h_el_term */
@


1.8
log
@Update libedit to bring it into sync with the latest version from NetBSD.

ok deraadt
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.7
log
@Update to NetBSD libedit (from Oct 1, 2003), adding some string
cleaning and history bug fixes. The code includes GNU libreadline
functionality, but the corresponding header files are not installed,
since some libreadline functions are missing. There are some minor API
changes, notably:

old: EditLine *el_init(const char *, FILE *, FILE *);
new: EditLine *el_init(const char *, FILE *, FILE *, FILE *);

old: HistEvent *history(History *h, int op, ...);
new: int history(History *h, HistEvent *ev, int op, ...); plus some
changes in operation names. See editline(3) for details.

Tested by djm@@, mouring@@, jmc@@.

ok deraadt@@
@
text
@d2 1
a2 1
/*	$NetBSD: term.h,v 1.15 2003/09/14 21:48:55 christos Exp $	*/
d47 1
a47 1
	const char	*name;	/* name of the key			*/
d88 2
a89 2
protected void	term_overwrite(EditLine *, const char *, int);
protected void	term_insertwrite(EditLine *, char *, int);
d97 3
a99 3
protected void	term_print_arrow(EditLine *, const char *);
protected int	term_clear_arrow(EditLine *, const char *);
protected int	term_set_arrow(EditLine *, const char *, key_value_t *, int);
d103 7
a109 5
protected int	term_settc(EditLine *, int, const char **);
protected int	term_telltc(EditLine *, int, const char **);
protected int	term_echotc(EditLine *, int, const char **);
protected int	term__putc(int);
protected void	term__flush(void);
d121 1
@


1.6
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
/*	$OpenBSD: term.h,v 1.5 2002/02/17 19:42:25 millert Exp $	*/
/*	$NetBSD: term.h,v 1.4 1997/01/11 06:48:14 lukem Exp $	*/
d42 1
a42 1
#define _h_el_term
d46 5
a50 5
typedef struct {	/* Symbolic function key bindings	*/
    char       *name;	/* name of the key			*/
    int		key;	/* Index in termcap table		*/
    key_value_t fun;	/* Function bound to it			*/
    int	        type;	/* Type of function			*/
d54 18
a71 15
    coord_t t_size;			/* # lines and cols	*/
    bool_t  t_flags;
#define TERM_CAN_INSERT		0x01	/* Has insert cap	*/
#define TERM_CAN_DELETE		0x02	/* Has delete cap	*/
#define TERM_CAN_CEOL		0x04	/* Has CEOL cap		*/
#define TERM_CAN_TAB		0x08	/* Can use tabs		*/
#define TERM_CAN_ME		0x10	/* Can turn all attrs.	*/
#define TERM_CAN_UP		0x20	/* Can move up		*/
#define TERM_HAS_META		0x40	/* Has a meta key	*/
    char   *t_buf;			/* Termcap buffer	*/
    int	    t_loc;			/* location used	*/
    char  **t_str;			/* termcap strings	*/
    int	   *t_val;			/* termcap values	*/
    char   *t_cap;			/* Termcap buffer	*/
    fkey_t *t_fkey;			/* Array of keys	*/
d77 31
a107 29
#define A_K_DN		0
#define A_K_UP		1
#define A_K_LT		2
#define A_K_RT		3
#define A_K_NKEYS	4

protected void term_move_to_line(EditLine *, int);
protected void term_move_to_char(EditLine *, int);
protected void term_clear_EOL(EditLine *, int);
protected void term_overwrite(EditLine *, char *, int);
protected void term_insertwrite(EditLine *, char *, int);
protected void term_deletechars(EditLine *, int);
protected void term_clear_screen(EditLine *);
protected void term_beep(EditLine *);
protected void term_change_size(EditLine *, int, int);
protected int  term_get_size(EditLine *, int *, int *);
protected int  term_init(EditLine *);
protected void term_bind_arrow(EditLine *);
protected void term_print_arrow(EditLine *, char *);
protected int  term_clear_arrow(EditLine *, char *);
protected int  term_set_arrow(EditLine *, char *, key_value_t *, int);
protected void term_end(EditLine *);
protected int  term_set(EditLine *, char *);
protected int  term_settc(EditLine *, int, char **);
protected int  term_telltc(EditLine *, int, char **);
protected int  term_echotc(EditLine *, int, char **);

protected void term__putc(int);
protected void term__flush(void);
d112 1
a112 1
#define EL_FLAGS	(el)->el_term.t_flags
d114 8
a121 6
#define EL_CAN_INSERT	(EL_FLAGS & TERM_CAN_INSERT)
#define EL_CAN_DELETE	(EL_FLAGS & TERM_CAN_DELETE)
#define EL_CAN_CEOL	(EL_FLAGS & TERM_CAN_CEOL)
#define EL_CAN_TAB	(EL_FLAGS & TERM_CAN_TAB)
#define EL_CAN_ME	(EL_FLAGS & TERM_CAN_ME)
#define EL_HAS_META	(EL_FLAGS & TERM_HAS_META)
@


1.5
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.4 2002/02/16 21:27:26 millert Exp $	*/
d19 1
a19 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.4
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.3 1997/03/14 05:13:06 millert Exp $	*/
d98 1
a98 2
protected int  term_set_arrow		__P((EditLine *, char *, 
					     key_value_t *, int));
@


1.3
log
@fix el_source() - a block needed braces around it (from NetBSD)
Some strcpy() -> strncpy (from NetBSD)
Some KNF
Add current NetBSD tags
@
text
@d1 1
a1 1
/*	$OpenBSD: term.h,v 1.2 1997/01/16 05:18:48 millert Exp $	*/
d84 14
a97 14
protected void term_move_to_line	__P((EditLine *, int));
protected void term_move_to_char	__P((EditLine *, int));
protected void term_clear_EOL		__P((EditLine *, int));
protected void term_overwrite		__P((EditLine *, char *, int));
protected void term_insertwrite		__P((EditLine *, char *, int));
protected void term_deletechars		__P((EditLine *, int));
protected void term_clear_screen	__P((EditLine *));
protected void term_beep		__P((EditLine *));
protected void term_change_size		__P((EditLine *, int, int));
protected int  term_get_size		__P((EditLine *, int *, int *));
protected int  term_init		__P((EditLine *));
protected void term_bind_arrow		__P((EditLine *));
protected void term_print_arrow		__P((EditLine *, char *));
protected int  term_clear_arrow		__P((EditLine *, char *));
d100 5
a104 5
protected void term_end			__P((EditLine *));
protected int  term_set			__P((EditLine *, char *));
protected int  term_settc		__P((EditLine *, int, char **));
protected int  term_telltc		__P((EditLine *, int, char **));
protected int  term_echotc		__P((EditLine *, int, char **));
d106 2
a107 2
protected void term__putc		__P((int));
protected void term__flush		__P((void));
@


1.2
log
@Merge in NetBSD libedit changes and new man pages.  Also fix some
strncpy() usage in their code.  NetBSD change log was:
    * add a man page for the editline routines
    * add a man page describing editrc
    * fix bugs in el_parse():
      * didn't execute command when program name matched (test reversed)
      * was checking against empty string instead of program name
      * after checks, command to run also pointed to empty string
    * document ^char and \ escape sequences
    * when parsing ^char control chars, check the correct char when determining
      validity (previously, ^char was a NOP interpreted as the literal string
      because of this bug)
    * Implement CC_REDISPLAY, which (unlike CC_REFRESH) redraws the entire input
    * line (a la ^R). This is useful if the binding outputs information and
    * mucks up the input line. To be used in ``list-choices'' bindings (refer
    * to the ^D binding in csh when filec is set)
@
text
@d1 2
a2 1
/*	$OpenBSD: $	*/
@


1.1
log
@Initial revision
@
text
@d1 2
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
