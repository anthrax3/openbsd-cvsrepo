head	1.13;
access;
symbols
	OPENBSD_6_0:1.13.0.10
	OPENBSD_6_0_BASE:1.13
	OPENBSD_5_9:1.13.0.6
	OPENBSD_5_9_BASE:1.13
	OPENBSD_5_8:1.13.0.8
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.2
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.12.0.10
	OPENBSD_5_5_BASE:1.12
	OPENBSD_5_4:1.12.0.6
	OPENBSD_5_4_BASE:1.12
	OPENBSD_5_3:1.12.0.4
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.12.0.2
	OPENBSD_5_2_BASE:1.12
	OPENBSD_5_1_BASE:1.11
	OPENBSD_5_1:1.11.0.24
	OPENBSD_5_0:1.11.0.22
	OPENBSD_5_0_BASE:1.11
	OPENBSD_4_9:1.11.0.20
	OPENBSD_4_9_BASE:1.11
	OPENBSD_4_8:1.11.0.18
	OPENBSD_4_8_BASE:1.11
	OPENBSD_4_7:1.11.0.14
	OPENBSD_4_7_BASE:1.11
	OPENBSD_4_6:1.11.0.16
	OPENBSD_4_6_BASE:1.11
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.10.0.2
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.9.0.18
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.16
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.14
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.12
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.9.0.10
	OPENBSD_3_4_BASE:1.9
	OPENBSD_3_3:1.9.0.8
	OPENBSD_3_3_BASE:1.9
	OPENBSD_3_2:1.9.0.6
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.9.0.4
	OPENBSD_3_1_BASE:1.9
	OPENBSD_3_0:1.9.0.2
	OPENBSD_3_0_BASE:1.9
	OPENBSD_2_9:1.8.0.6
	OPENBSD_2_9_BASE:1.8
	OPENBSD_2_8:1.8.0.4
	OPENBSD_2_8_BASE:1.8
	OPENBSD_2_7:1.8.0.2
	OPENBSD_2_7_BASE:1.8
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.6.0.12
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.6.0.10
	OPENBSD_2_4_BASE:1.6
	OPENBSD_2_3:1.6.0.8
	OPENBSD_2_3_BASE:1.6
	OPENBSD_2_2:1.6.0.6
	OPENBSD_2_2_BASE:1.6
	OPENBSD_2_1:1.6.0.4
	OPENBSD_2_1_BASE:1.6
	OPENBSD_2_0:1.6.0.2
	OPENBSD_2_0_BASE:1.6
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.13
date	2014.04.11.04.08.58;	author lteo;	state Exp;
branches;
next	1.12;

1.12
date	2012.05.25.01.58.08;	author lteo;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.26.20.58.51;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2005.11.18.11.05.39;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2001.10.02.18.04.35;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2000.04.26.21.25.53;	author jakob;	state Exp;
branches;
next	1.7;

1.7
date	99.07.20.04.49.55;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.08.03.12.38.44;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	96.07.26.03.43.43;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	96.07.12.13.19.11;	author mickey;	state Exp;
branches;
next	1.3;

1.3
date	96.06.10.07.23.30;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.04.15.47.26;	author mickey;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.02;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.02;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Zap CVS $Header tags, reduces diff with upstream's repo

ok deraadt@@
@
text
@/*	$OpenBSD: pcap-int.h,v 1.12 2012/05/25 01:58:08 lteo Exp $	*/

/*
 * Copyright (c) 1994, 1995, 1996
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the Computer Systems
 *	Engineering Group at Lawrence Berkeley Laboratory.
 * 4. Neither the name of the University nor of the Laboratory may be used
 *    to endorse or promote products derived from this software without
 *    specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef pcap_int_h
#define pcap_int_h

#include <pcap.h>

/*
 * Stuff to do when we close.
 */
#define MUST_CLEAR_RFMON	0x00000002	/* clear rfmon (monitor) mode */

struct pcap_opt {
	int	buffer_size;
	char	*source;
	int	promisc;
	int	rfmon;
};

/*
 * Savefile
 */
struct pcap_sf {
	FILE *rfile;
	int swapped;
	int version_major;
	int version_minor;
	u_char *base;
};

struct pcap_md {
	struct pcap_stat stat;
	/*XXX*/
	int use_bpf;
	u_long	TotPkts;	/* can't oflow for 79 hrs on ether */
	u_long	TotAccepted;	/* count accepted by filter */
	u_long	TotDrops;	/* count of dropped packets */
	long	TotMissed;	/* missed by i/f during this run */
	long	OrigMissed;	/* missed by i/f before this run */
	int	timeout;	/* timeout for buffering */
	int	must_do_on_close; /* stuff we must do when we close */
	struct pcap *next;	/* list of open pcaps that need stuff cleared on close */
};

struct pcap {
	int fd;
	int snapshot;
	int linktype;
	int tzoff;		/* timezone offset */
	int offset;		/* offset for proper alignment */
	int activated;		/* true if the capture is really started */
	int oldstyle;		/* if we're opening with pcap_open_live() */
	int break_loop;		/* force break from packet-reading loop */

	struct pcap_sf sf;
	struct pcap_md md;
	struct pcap_opt opt;

	/*
	 * Read buffer.
	 */
	int bufsize;
	u_char *buffer;
	u_char *bp;
	int cc;

	/*
	 * Place holder for pcap_next().
	 */
	u_char *pkt;

	
	/*
	 * Placeholder for filter code if bpf not in kernel.
	 */
	struct bpf_program fcode;

	/*
	 * Datalink types supported on underlying fd
	 */
	int dlt_count;
	u_int *dlt_list;

	char errbuf[PCAP_ERRBUF_SIZE];

	struct pcap_pkthdr pcap_header;	/* This is needed for the pcap_next_ex() to work */
};

/*
 * How a `pcap_pkthdr' is actually stored in the dumpfile.
 */

struct pcap_sf_pkthdr {
    struct bpf_timeval ts;	/* time stamp */
    bpf_u_int32 caplen;		/* length of portion present */
    bpf_u_int32 len;		/* length this packet (off wire) */
};

int	yylex(void);

#ifndef min
#define min(a, b) ((a) > (b) ? (b) : (a))
#endif

/* Not all systems have IFF_LOOPBACK */
#ifdef IFF_LOOPBACK
#define ISLOOPBACK(name, flags) ((flags) & IFF_LOOPBACK)
#else
#define ISLOOPBACK(name, flags) ((name)[0] == 'l' && (name)[1] == 'o' && \
    (isdigit((unsigned char)((name)[2])) || (name)[2] == '\0'))
#endif

/* XXX should these be in pcap.h? */
int	pcap_offline_read(pcap_t *, int, pcap_handler, u_char *);
int	pcap_read(pcap_t *, int cnt, pcap_handler, u_char *);

int	pcap_do_addexit(pcap_t *);
void	pcap_add_to_pcaps_to_close(pcap_t *);
void	pcap_remove_from_pcaps_to_close(pcap_t *);
int	pcap_check_activated(pcap_t *);

/* Ultrix pads to make everything line up on a nice boundary */
#if defined(ultrix) || defined(__alpha)
#define       PCAP_FDDIPAD 3
#endif

/* XXX */
extern int pcap_fddipad;
#endif
@


1.12
log
@Import a number of core functions from libpcap-1.2.0 while preserving
local changes: strncpy() -> strlcpy(), malloc(x * y) -> calloc(x, y),
exclude cross-platform cruft, etc.

The new functions are pcap_create(), pcap_set_snaplen(),
pcap_set_promisc(), pcap_can_set_rfmon(), pcap_set_rfmon(),
pcap_set_timeout(), pcap_set_buffer_size(), pcap_activate(), and
pcap_statustostr().

This diff was tested on amd64, i386, macppc, and sparc64, where
regression tests were done on various pcap-based ports (especially amd64
and i386 where regression tests were run on all pcap-based ports).
Testers also tried running pcap-based ports that they are familiar with
to ensure that there is no behavioral change.  tcpdump and pflogd in
base were also tested by different testers.  The new pcap_* functions
were tested with a proof-of-concept Snort 2.9 port for many months.

Thank you to everyone who helped test this diff and provided feedback:
haesbaert@@, sthen@@, matthew@@, gonzalo@@, brett@@, Rodolfo Gouveia,
Aaron Bieber, Markus Lude, and Ray Percival.

ok haesbaert sthen henning
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.11 2006/03/26 20:58:51 djm Exp $	*/
a33 2
 *
 * @@(#) $Header: /cvs/src/lib/libpcap/pcap-int.h,v 1.11 2006/03/26 20:58:51 djm Exp $ (LBL)
@


1.11
log
@add remaining tcpdump.org libpcap 0.9 APIs, most notably
pcap_setdirection() (which depends on the kernel-side bpf changes
committed yesterday); ok canacar@@
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.10 2005/11/18 11:05:39 djm Exp $	*/
d35 1
a35 1
 * @@(#) $Header: /cvs/src/lib/libpcap/pcap-int.h,v 1.10 2005/11/18 11:05:39 djm Exp $ (LBL)
d44 12
d75 3
a77 5
#ifdef linux
	int pad;
	int skip;
	char *device;
#endif
d86 2
d92 1
d151 5
@


1.10
log
@pull in the good bits of libpcap-0.9.4's API without the cross-platform
cruft. help from deraadt@@, mpf@@, jmc@@; ok mpf@@a

nb. this will break tcpdump unless it updated too
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.9 2001/10/02 18:04:35 deraadt Exp $	*/
d35 1
a35 1
 * @@(#) $Header: /cvs/src/lib/libpcap/pcap-int.h,v 1.9 2001/10/02 18:04:35 deraadt Exp $ (LBL)
d107 2
@


1.9
log
@change timeval to bpf_timeval; 32 bit in size, permitting much greater portability
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.8 2000/04/26 21:25:53 jakob Exp $	*/
d35 1
a35 1
 * @@(#) $Header: /cvs/src/lib/libpcap/pcap-int.h,v 1.8 2000/04/26 21:25:53 jakob Exp $ (LBL)
d76 1
d100 6
d123 8
@


1.8
log
@sync with libpcap v0.5
add support for INET6 (kame)
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.7 1999/07/20 04:49:55 deraadt Exp $	*/
d35 1
a35 1
 * @@(#) $Header: /cvs/src/lib/libpcap/pcap-int.h,v 1.7 1999/07/20 04:49:55 deraadt Exp $ (LBL)
a102 11
 * This is a timeval as stored in disk in a dumpfile.
 * It has to use the same types everywhere, independent of the actual
 * `struct timeval'
 */

struct pcap_timeval {
    bpf_int32 tv_sec;		/* seconds */
    bpf_int32 tv_usec;		/* microseconds */
};

/*
d107 1
a107 1
    struct pcap_timeval ts;	/* time stamp */
@


1.7
log
@changes brought in from v0.4; started by brad, more by me, being tested by mts
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.6 1996/08/03 12:38:44 niklas Exp $	*/
d35 1
a35 1
 * @@(#) $Header: pcap-int.h,v 1.18 96/11/27 18:43:09 leres Exp $ (LBL)
d100 21
@


1.6
log
@We now define HAVE_STRERROR in CFLAGS instead
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.5 1996/07/26 03:43:43 deraadt Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994, 1995
d35 1
a35 1
 * @@(#) Header: pcap-int.h,v 1.14 95/10/21 22:04:49 leres Exp (LBL)
d63 5
d75 1
d104 4
d116 3
@


1.5
log
@HAVE_STRERROR for __OpenBSD__
@
text
@d1 1
a1 1
/*	$OpenBSD: pcap-int.h,v 1.4 1996/07/12 13:19:11 mickey Exp $	*/
a105 4
#endif

#ifdef __OpenBSD__
#define HAVE_STRERROR
@


1.4
log
@bring it to the latest 0.2 LBL release.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d106 4
@


1.3
log
@merge to latest libpcap
@
text
@d1 1
a1 2
/*	$OpenBSD */
/*	$NetBSD: pcap-int.h,v 1.2 1995/03/06 11:38:47 mycroft Exp $	*/
d4 1
a4 1
 * Copyright (c) 1994
d35 1
a35 1
 * @@(#) Header: pcap-int.h,v 1.7 94/06/14 20:03:33 leres Exp (LBL)
d56 1
a56 1
#ifdef PCAP_PF
a62 1
#endif
d96 2
d101 5
@


1.2
log
@Update to the latest LBL release.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
