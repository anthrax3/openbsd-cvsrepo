head	1.8;
access;
symbols
	OPENBSD_5_5:1.7.0.20
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.8
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.6
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.4
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.2
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.1.0.2
	OPENBSD_2_1_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2014.03.24.17.17.12;	author tedu;	state dead;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.30;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.15.04.45.28;	author pjanzen;	state Exp;
branches;
next	1.5;

1.5
date	2002.06.07.03.32.04;	author itojun;	state Exp;
branches;
next	1.4;

1.4
date	2000.10.14.00.56.15;	author itojun;	state Exp;
branches;
next	1.3;

1.3
date	99.06.06.15.34.44;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	97.06.30.06.06.00;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	97.02.26.03.06.53;	author downsj;	state Exp;
branches;
next	;


desc
@@


1.8
log
@The secret of steel has always carried with it a mystery. You must learn
its riddle, Conan. You must learn its discipline. For no one, no one in
this world can you trust. Not men, not women, not beasts.
@
text
@/*	$OpenBSD: misc.c,v 1.7 2009/10/27 23:59:30 deraadt Exp $	*/

 /*
  * Misc routines that are used by tcpd and by tcpdchk.
  * 
  * Author: Wietse Venema, Eindhoven University of Technology, The Netherlands.
  */

#include <sys/types.h>
#include <sys/param.h>
#include <netinet/in.h>
#include <arpa/inet.h>
#include <stdio.h>
#include <string.h>

#include "tcpd.h"

/* xgets - fgets() with backslash-newline stripping */

char   *xgets(ptr, len, fp)
char   *ptr;
int     len;
FILE   *fp;
{
    int     got;
    char   *start = ptr;

    while (len > 1 && fgets(ptr, len, fp)) {
	got = strlen(ptr);
	if (got >= 1 && ptr[got - 1] == '\n') {
	    tcpd_context.line++;
	    if (got >= 2 && ptr[got - 2] == '\\') {
		got -= 2;
	    } else {
		return (start);
	    }
	}
	ptr += got;
	len -= got;
	ptr[0] = 0;
    }
    return (ptr > start ? start : 0);
}

/* split_at - break string at delimiter or return NULL */

char   *split_at(string, delimiter)
char   *string;
int     delimiter;
{
    char *cp;
    int bracket;

    bracket = 0;
    for (cp = string; cp && *cp; cp++) {
	switch (*cp) {
	case '[':
	    bracket++;
	    break;
	case ']':
	    bracket--;
	    break;
	default:
	    if (bracket == 0 && *cp == delimiter) {
		*cp++ = 0;
		return cp;
	    }
	    break;
	}
    }
    return NULL;
}

/* dot_quad_addr_new - convert dotted quad to internal form */
int
dot_quad_addr_new(str, ap)
char   *str;
in_addr_t *ap;
{
    struct in_addr a;
    int in_run = 0;
    int runs = 0;
    char *cp = str;

    while (*cp) {
	if (*cp == '.') {
	    in_run = 0;
	} else if (in_run == 0) {
	    in_run = 1;
	    runs++;
	}
	cp++;
    }
    if (runs != 4)
	return 0;

    if (!inet_aton(str, &a))
	return 0;
    if (ap)
	*ap = a.s_addr;
    return 1;
}

/* dot_quad_addr - convert dotted quad to internal form */
in_addr_t
dot_quad_addr(str)
char   *str;
{
    in_addr_t addr;

    (void) dot_quad_addr_new(str, &addr);
    return addr;
}
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.6 2003/05/15 04:45:28 pjanzen Exp $	*/
@


1.6
log
@NetBSD PR 15025:  libwrap hangs in an infinite loop when a host access line
is > 2048 characters long.
ok millert a long time ago.
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.5 2002/06/07 03:32:04 itojun Exp $	*/
a7 8

#ifndef lint
#if 0
static char sccsic[] = "@@(#) misc.c 1.2 96/02/11 17:01:29";
#else
static char rcsid[] = "$OpenBSD: misc.c,v 1.5 2002/06/07 03:32:04 itojun Exp $";
#endif
#endif
@


1.5
log
@support scoped IPv6 address.
no visible API change, old config files work just fine.
now  you can use expressions like "ALL: [fe80::%lo0/64]".  theo ok
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.4 2000/10/14 00:56:15 itojun Exp $	*/
d13 1
a13 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.4 2000/10/14 00:56:15 itojun Exp $";
d36 1
a36 1
    while (fgets(ptr, len, fp)) {
@


1.4
log
@tcp wrapper support for IPv6.  from netbsd.
TODO: scoped address support may need more consideration (we are taking
safer side now - rejects too much).
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.3 1999/06/06 15:34:44 deraadt Exp $	*/
d13 1
a13 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.3 1999/06/06 15:34:44 deraadt Exp $";
a25 4
#ifndef	INADDR_NONE
#define	INADDR_NONE	(-1)		/* XXX should be 0xffffffff */
#endif

a58 7
#if 0
    char   *cp;

    if ((cp = strchr(string, delimiter)) != 0)
	*cp++ = 0;
    return (cp);
#else
a79 1
#endif
@


1.3
log
@add dot_quad_addr_new(); which can handle 255.255.255.255 addresses
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.2 1997/06/30 06:06:00 deraadt Exp $	*/
d13 1
a13 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.2 1997/06/30 06:06:00 deraadt Exp $";
d63 1
d69 23
@


1.2
log
@alpha bits
@
text
@d1 1
a1 1
/*	$OpenBSD: misc.c,v 1.1 1997/02/26 03:06:53 downsj Exp $	*/
d13 1
a13 1
static char rcsid[] = "$OpenBSD: misc.c,v 1.1 1997/02/26 03:06:53 downsj Exp $";
d70 3
a72 3
/* dot_quad_addr - convert dotted quad to internal form */

in_addr_t dot_quad_addr(str)
d74 1
d76 4
a79 5
    int     in_run = 0;
    int     runs = 0;
    char   *cp = str;

    /* Count the number of runs of non-dot characters. */
d90 19
a108 1
    return (runs == 4 ? inet_addr(str) : INADDR_NONE);
@


1.1
log
@Initial integration of a much cleaned up libwrap.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d13 1
a13 1
static char rcsid[] = "$OpenBSD$";
d72 1
a72 1
unsigned long dot_quad_addr(str)
@
