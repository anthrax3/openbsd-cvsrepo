head	1.20;
access;
symbols
	OPENBSD_6_2_BASE:1.20
	OPENBSD_6_1:1.20.0.16
	OPENBSD_6_1_BASE:1.20
	OPENBSD_6_0:1.20.0.12
	OPENBSD_6_0_BASE:1.20
	OPENBSD_5_9:1.20.0.8
	OPENBSD_5_9_BASE:1.20
	OPENBSD_5_8:1.20.0.10
	OPENBSD_5_8_BASE:1.20
	OPENBSD_5_7:1.20.0.2
	OPENBSD_5_7_BASE:1.20
	OPENBSD_5_6:1.20.0.6
	OPENBSD_5_6_BASE:1.20
	OPENBSD_5_5:1.20.0.4
	OPENBSD_5_5_BASE:1.20
	OPENBSD_5_4:1.19.0.2
	OPENBSD_5_4_BASE:1.19
	OPENBSD_5_3:1.18.0.4
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.2
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.2
	OPENBSD_5_0:1.15.0.2
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.13.0.16
	OPENBSD_4_9_BASE:1.13
	OPENBSD_4_8:1.13.0.14
	OPENBSD_4_8_BASE:1.13
	OPENBSD_4_7:1.13.0.10
	OPENBSD_4_7_BASE:1.13
	OPENBSD_4_6:1.13.0.12
	OPENBSD_4_6_BASE:1.13
	OPENBSD_4_5:1.13.0.8
	OPENBSD_4_5_BASE:1.13
	OPENBSD_4_4:1.13.0.6
	OPENBSD_4_4_BASE:1.13
	OPENBSD_4_3:1.13.0.4
	OPENBSD_4_3_BASE:1.13
	OPENBSD_4_2:1.13.0.2
	OPENBSD_4_2_BASE:1.13
	OPENBSD_4_1:1.12.0.12
	OPENBSD_4_1_BASE:1.12
	OPENBSD_4_0:1.12.0.10
	OPENBSD_4_0_BASE:1.12
	OPENBSD_3_9:1.12.0.8
	OPENBSD_3_9_BASE:1.12
	OPENBSD_3_8:1.12.0.6
	OPENBSD_3_8_BASE:1.12
	OPENBSD_3_7:1.12.0.4
	OPENBSD_3_7_BASE:1.12
	OPENBSD_3_6:1.12.0.2
	OPENBSD_3_6_BASE:1.12
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.8.0.8
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.6
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.8.0.4
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.8.0.2
	OPENBSD_3_0_BASE:1.8
	OPENBSD_2_9:1.7.0.6
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.7.0.4
	OPENBSD_2_8_BASE:1.7
	OPENBSD_2_7:1.7.0.2
	OPENBSD_2_7_BASE:1.7
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.20
date	2014.01.21.03.15.45;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2012.04.12.14.59.19;	author pirofti;	state Exp;
branches;
next	1.17;

1.17
date	2012.01.07.05.38.12;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2011.08.18.13.01.26;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2011.03.12.07.28.22;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2011.03.12.04.54.28;	author guenther;	state Exp;
branches;
next	1.13;

1.13
date	2007.05.31.19.19.35;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2004.08.05.03.44.35;	author jaredy;	state Exp;
branches;
next	1.11;

1.11
date	2004.01.07.02.16.33;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.20.18.40;	author millert;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.09.56.20;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2001.05.05.00.28.36;	author angelos;	state Exp;
branches;
next	1.7;

1.7
date	2000.03.04.15.29.56;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.07.09.13.35.25;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.02.21.13.04;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.05.04.16.08;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	96.05.26.01.04.36;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.05.14.57.17;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.20
log
@obvious .Pa fixes; found with mandocdb(8)
@
text
@.\"	$OpenBSD: kvm_getprocs.3,v 1.19 2013/06/05 03:40:26 tedu Exp $
.\"	$NetBSD: kvm_getprocs.3,v 1.13 2003/08/07 16:44:37 agc Exp $
.\"
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software developed by the Computer Systems
.\" Engineering group at Lawrence Berkeley Laboratory under DARPA contract
.\" BG 91-66 and contributed to Berkeley.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)kvm_getprocs.3	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: June 5 2013 $
.Dt KVM_GETPROCS 3
.Os
.Sh NAME
.Nm kvm_getprocs ,
.Nm kvm_getargv ,
.Nm kvm_getenvv
.Nd access user process state
.Sh SYNOPSIS
.In sys/param.h
.In sys/sysctl.h
.In kvm.h
.Ft struct kinfo_proc *
.Fn kvm_getprocs "kvm_t *kd" "int op" "int arg" "size_t elemsize" "int *cnt"
.Ft char **
.Fn kvm_getargv "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
.Ft char **
.Fn kvm_getenvv "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
.Sh DESCRIPTION
.Fn kvm_getprocs
returns a (sub-)set of active processes in the kernel indicated by
.Fa kd .
The
.Fa op
and
.Fa arg
arguments constitute a predicate which limits the set of processes returned.
The value of
.Fa op
describes the filtering predicate as follows:
.Pp
.Bl -tag -width 20n -offset indent -compact
.It Dv KERN_PROC_KTHREAD
all processes (user-level plus kernel threads)
.It Dv KERN_PROC_ALL
all user-level processes
.It Dv KERN_PROC_PID
processes with process ID
.Fa arg
.It Dv KERN_PROC_PGRP
processes with process group
.Fa arg
.It Dv KERN_PROC_SESSION
processes with session
.Fa arg
.It Dv KERN_PROC_TTY
processes with
.Xr tty 4
.Fa arg
.It Dv KERN_PROC_UID
processes with effective user ID
.Fa arg
.It Dv KERN_PROC_RUID
processes with real user ID
.Fa arg
.El
.Pp
Only the first
.Fa elemsize
bytes of each array entry are returned.
If the size of the
.Vt kinfo_proc
structure increases in size in a future release of
.Ox ,
the library will only return the requested amount of data for
each array entry and programs that use
.Fn kvm_getprocs
will continue to function without the need for recompilation.
The number of processes found is returned in the reference parameter
.Fa cnt .
The processes are returned as a contiguous array of
.Vt kinfo_proc
structures, the definition for which is available in
.In sys/sysctl.h .
This memory is locally allocated, and subsequent calls to
.Fn kvm_getprocs
and
.Fn kvm_close
will overwrite this storage.
.Pp
.Fn kvm_getprocs
sets the thread ID field accordingly for each thread except for the
process (main thread) which has it set to \-1.
.Pp
.Fn kvm_getargv
returns a null-terminated argument vector that corresponds to the
command line arguments passed to process indicated by
.Fa p .
Most likely, these arguments correspond to the values passed to
.Xr exec 3
on process creation.
This information is, however,
deliberately under control of the process itself.
Note that the original command name can be found, unaltered,
in the
.Va p_comm
field of the process structure returned by
.Fn kvm_getprocs .
.Pp
The
.Fa nchr
argument indicates the maximum number of characters, including null bytes,
to use in building the strings.
If this amount is exceeded, the string
causing the overflow is truncated and the partial result is returned.
This is handy for programs like
.Xr ps 1
and
.Xr w 1
that print only a one line summary of a command and should not copy
out large amounts of text only to ignore it.
If
.Fa nchr
is zero, no limit is imposed and all argument strings are returned in
their entirety.
.Pp
The memory allocated to the
.Li argv
pointers and string storage is owned by the
.Xr kvm 3
library.
Subsequent
.Fn kvm_getprocs
and
.Xr kvm_close 3
calls will clobber this storage.
.Pp
The
.Fn kvm_getenvv
function is similar to
.Fn kvm_getargv
but returns the vector of environment strings.
This data is also alterable by the process.
.Sh RETURN VALUES
.Fn kvm_getprocs ,
.Fn kvm_getargv ,
and
.Fn kvm_getenvv
all return
.Dv NULL
on failure.
.Sh SEE ALSO
.Xr kvm 3 ,
.Xr kvm_geterr 3 ,
.Xr kvm_nlist 3 ,
.Xr kvm_open 3 ,
.Xr kvm_read 3
.Sh BUGS
These routines do not belong in the
.Xr kvm 3
interface.
@


1.19
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.18 2012/04/12 14:59:19 pirofti Exp $
d37 1
a37 1
.Dd $Mdocdate: April 12 2012 $
d110 1
a110 1
.Aq Pa sys/sysctl.h .
@


1.18
log
@Add per thread accounting, mainly for usage & friends.

This expands the already bloated FILL_KPROC macro to take an extra
parameter that indicates if the callee is a thread or a process.

The userland bits are adjusted accordingly and ps(1) and top(1) now
display per thread usage times when -H is used.

Also pkill(1) had to be adjusted so that duplicates don't pop up.

libkvm does basically the same thing as the kernel bits.

Okay guenther@@.
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.17 2012/01/07 05:38:12 guenther Exp $
d37 1
a37 1
.Dd $Mdocdate: January 7 2012 $
d46 3
a48 3
.Fd #include <sys/param.h>
.Fd #include <sys/sysctl.h>
.Fd #include <kvm.h>
@


1.17
log
@Add rtable id and thread id to struct kinfo_proc (and fix process id)
and add an 'rtableid' keyword to ps.

Add rtable id, thread id, and socket splice info to struct kinfo_file2
and make fstat display socket splice information.

Remove old KVM_PROC2 and kinfo_proc2 interfaces; bump libkvm major

Socket splice info and corrections from bluhm@@  "Lovely" deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.16 2011/08/18 13:01:26 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: August 18 2011 $
d116 4
@


1.16
log
@where a man page has multiple links, only reference that page
once in SEE ALSO; also prefer Xr to Fn where relevant;

diff started by Martin Pelikan
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.15 2011/03/12 07:28:22 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: March 12 2011 $
d43 1
a43 4
.Nm kvm_getenvv ,
.Nm kvm_getproc2 ,
.Nm kvm_getargv2 ,
.Nm kvm_getenvv2
a54 6
.Ft struct kinfo_proc *
.Fn kvm_getproc2 "kvm_t *kd" "int op" "int arg" "size_t elemsize" "int *cnt"
.Ft char **
.Fn kvm_getargv2 "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
.Ft char **
.Fn kvm_getenvv2 "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
d166 1
a166 7
.Pp
The
.Fn kvm_getproc2 ,
.Fn kvm_getargv2 ,
and
.Fn kvm_getenvv2
functions are obsolete equivalents for
a170 9
and have identical signatures and behavior.
.Sh RETURN VALUES
.Fn kvm_getprocs ,
.Fn kvm_getargv ,
.Fn kvm_getenvv ,
.Fn kvm_getproc2 ,
.Fn kvm_getargv2 ,
and
.Fn kvm_getenvv2
@


1.15
log
@missing word;
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.14 2011/03/12 04:54:28 guenther Exp $
a199 1
.Xr kvm_close 3 ,
d203 1
a203 3
.Xr kvm_openfiles 3 ,
.Xr kvm_read 3 ,
.Xr kvm_write 3
@


1.14
log
@Replace the old, broken KERN_PROC ABI and its matching functions
in libkvm with the stable-ABI versions that are currently named
KERN_PROC2, kvm_get{proc,argv,envv}2().  The latter names and symbols
will continue to be supported for a few releases.

Committing now that they ports people have had a couple releases
to update pkgs that usd the old functions
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.13 2007/05/31 19:19:35 jmc Exp $
d37 1
a37 1
.Dd $Mdocdate: May 31 2007 $
d176 1
@


1.13
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.12 2004/08/05 03:44:35 jaredy Exp $
d37 1
a37 1
.Dd $Mdocdate$
d53 1
a53 1
.Fn kvm_getprocs "kvm_t *kd" "int op" "int arg" "int *cnt"
d58 1
a58 1
.Ft struct kinfo_proc2 *
d61 1
a61 1
.Fn kvm_getargv2 "kvm_t *kd" "const struct kinfo_proc2 *p" "int nchr"
d63 1
a63 1
.Fn kvm_getenvv2 "kvm_t *kd" "const struct kinfo_proc2 *p" "int nchr"
d103 11
d176 2
a177 20
.Fn kvm_getproc2
is similar to
.Fn kvm_getprocs
but returns an array of
.Vt kinfo_proc2
structures.
Additionally, only the first
.Fa elemsize
bytes of each array entry are returned.
If the size of the
.Vt kinfo_proc2
structure increases in size in a future release of
.Ox ,
the kernel will only return the requested amount of data for
each array entry and programs that use
.Fn kvm_getproc2
will continue to function without the need for recompilation.
.Pp
The
.Fn kvm_getargv2
d180 3
a182 2
functions are equivalents to the
.Fn kvm_getargv
d185 1
a185 3
functions that use a
.Vt kinfo_proc2
structure to specify the process.
@


1.12
log
@- fix includes needed to compile
- mdoc and macro fixes
- sync to reality
- mention where the kinfo_proc type definition can be found

ok millert jmc
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.11 2004/01/07 02:16:33 millert Exp $
d37 1
a37 1
.Dd June 4, 1993
@


1.11
log
@Implement kvm_getproc2(), kvm_getargv2() and kvm_getenvv2() that use
the KERN_PROC2 sysctl.  Based on changes from NetBSD but uses our
own kvm_arg_sysctl().
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.10 2003/06/02 20:18:40 millert Exp $
d49 2
a51 1
.Fd #include <sys/sysctl.h>
d59 1
a59 1
.Fn kvm_getproc2 "kvm_t *kd" "int op" "int arg" "int elemsize" "int *cnt"
d92 2
a93 1
processes with tty
d106 3
a108 2
.Li kinfo_proc
structures.
d126 1
a126 1
.Fa p_comm
d147 5
a151 2
The memory allocated to the argv pointers and string storage
is owned by the kvm library.
d169 1
a169 1
.Li kinfo_proc2
d175 1
a175 1
.Li kinfo_proc2
d192 1
a192 1
.Li kinfo_proc2
d215 3
a217 1
These routines do not belong in the kvm interface.
@


1.10
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 2
a2 2
.\"	$OpenBSD: kvm_getprocs.3,v 1.9 2003/06/02 09:56:20 jmc Exp $
.\"	$NetBSD: kvm_getprocs.3,v 1.3 1996/05/20 16:58:03 mrg Exp $
d43 4
a46 1
.Nm kvm_getenvv
d57 6
d71 1
a71 2
arguments constitute a predicate which limits the set of processes
returned.
d158 30
d191 3
d195 1
a195 1
.Fn kvm_getenvv ,
@


1.9
log
@section reorder;
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.8 2001/05/05 00:28:36 angelos Exp $
d19 1
a19 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.8
log
@Document KERN_PROC_KTHREAD
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.7 2000/03/04 15:29:56 aaron Exp $
a161 2
.Sh BUGS
These routines do not belong in the kvm interface.
d171 2
@


1.7
log
@Various cleanups and mdoc'ing.
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.6 1999/07/09 13:35:25 aaron Exp $
d73 2
d76 1
a76 1
all processes
@


1.6
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.5 1999/07/02 21:13:04 aaron Exp $
a51 2
.\" .Fa kvm_t *kd
.br
d67 2
a68 1
returned.  The value of
d73 1
a73 1
.It Sy KERN_PROC_ALL
d75 1
a75 1
.It Sy KERN_PROC_PID
d78 1
a78 1
.It Sy KERN_PROC_PGRP
d81 1
a81 1
.It Sy KERN_PROC_SESSION
d84 1
a84 1
.It Sy KERN_PROC_TTY
d87 1
a87 1
.It Sy KERN_PROC_UID
d90 1
a90 1
.It Sy KERN_PROC_RUID
d97 3
a99 1
The processes are returned as a contiguous array of kinfo_proc structures.
d112 2
a113 1
on process creation.  This information is, however,
d124 2
a125 1
to use in building the strings.  If this amount is exceeded, the string
d139 2
a140 1
is owned by the kvm library.  Subsequent
d150 2
a151 2
but returns the vector of environment strings.  This data is
also alterable by the process.
@


1.5
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.4 1999/06/05 04:16:08 aaron Exp $
d47 1
a47 1
.Nm kvm_getenvv 
d100 2
a101 2
.Fn kvm_getprocs 
and 
d106 1
a106 1
returns a null-terminated argument vector that corresponds to the 
d119 1
a119 1
The 
d132 1
a132 1
is zero, no limit is imposed and all argument strings are returned in 
d136 3
a138 3
is owned by the kvm library.  Subsequent 
.Fn kvm_getprocs 
and 
@


1.4
log
@capitalize the acronym ID
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.3 1996/05/26 01:04:36 deraadt Exp $
a155 1
.Pp
@


1.3
log
@sync 0521
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d63 1
a63 1
.Fa kd.
d77 1
a77 1
processes with process id 
d89 1
a89 1
processes with effective user id
d92 1
a92 1
processes with real user id
d114 3
a116 1
in the p_comm field of the process structure returned by
@


1.2
log
@sync with 0430
@
text
@d2 1
a2 1
.\"	$NetBSD: kvm_getprocs.3,v 1.2 1996/03/18 22:33:35 thorpej Exp $
d51 1
a51 2
.Fd #include <sys/kinfo.h>
.Fd #include <sys/kinfo_proc.h>
d74 1
a74 1
.It Sy KINFO_PROC_ALL
d76 1
a76 1
.It Sy KINFO_PROC_PID
d79 1
a79 1
.It Sy KINFO_PROC_PGRP
d82 1
a82 1
.It Sy KINFO_PROC_SESSION
d85 1
a85 1
.It Sy KINFO_PROC_TTY
d88 1
a88 1
.It Sy KINFO_PROC_UID
d91 1
a91 1
.It Sy KINFO_PROC_RUID
@


1.1
log
@Initial revision
@
text
@d1 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
