head	1.24;
access;
symbols
	OPENBSD_6_1_BASE:1.24
	OPENBSD_6_0:1.24.0.4
	OPENBSD_6_0_BASE:1.24
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.23.0.6
	OPENBSD_5_8_BASE:1.23
	OPENBSD_5_7:1.23.0.2
	OPENBSD_5_7_BASE:1.23
	OPENBSD_5_6:1.22.0.6
	OPENBSD_5_6_BASE:1.22
	OPENBSD_5_5:1.22.0.4
	OPENBSD_5_5_BASE:1.22
	OPENBSD_5_4:1.17.0.10
	OPENBSD_5_4_BASE:1.17
	OPENBSD_5_3:1.17.0.8
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.6
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.4
	OPENBSD_5_0:1.17.0.2
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.16.0.6
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.4
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.2
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.15.0.4
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.11.0.12
	OPENBSD_4_5_BASE:1.11
	OPENBSD_4_4:1.11.0.10
	OPENBSD_4_4_BASE:1.11
	OPENBSD_4_3:1.11.0.8
	OPENBSD_4_3_BASE:1.11
	OPENBSD_4_2:1.11.0.6
	OPENBSD_4_2_BASE:1.11
	OPENBSD_4_1:1.11.0.4
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.2
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.9.0.10
	OPENBSD_3_9_BASE:1.9
	OPENBSD_3_8:1.9.0.8
	OPENBSD_3_8_BASE:1.9
	OPENBSD_3_7:1.9.0.6
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.4
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.9.0.2
	OPENBSD_3_5_BASE:1.9
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.20
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.18
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.16
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.4.0.14
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.4.0.12
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.4.0.10
	OPENBSD_2_4_BASE:1.4
	OPENBSD_2_3:1.4.0.8
	OPENBSD_2_3_BASE:1.4
	OPENBSD_2_2:1.4.0.6
	OPENBSD_2_2_BASE:1.4
	OPENBSD_2_1:1.4.0.4
	OPENBSD_2_1_BASE:1.4
	OPENBSD_2_0:1.4.0.2
	OPENBSD_2_0_BASE:1.4
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.24
date	2015.09.04.02.55.09;	author dlg;	state Exp;
branches;
next	1.23;
commitid	TVczXXlIm5Uhxfi0;

1.23
date	2014.10.15.02.03.05;	author deraadt;	state Exp;
branches;
next	1.22;
commitid	zOqt4CiDlaWcaRCM;

1.22
date	2013.11.17.20.27.14;	author guenther;	state Exp;
branches;
next	1.21;

1.21
date	2013.11.16.00.47.49;	author guenther;	state Exp;
branches;
next	1.20;

1.20
date	2013.11.16.00.37.11;	author guenther;	state Exp;
branches;
next	1.19;

1.19
date	2013.11.12.14.49.41;	author guenther;	state Exp;
branches;
next	1.18;

1.18
date	2013.10.22.16.40.27;	author guenther;	state Exp;
branches;
next	1.17;

1.17
date	2011.03.12.04.54.28;	author guenther;	state Exp;
branches;
next	1.16;

1.16
date	2010.01.12.08.15.51;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2009.06.24.13.04.24;	author millert;	state Exp;
branches;
next	1.14;

1.14
date	2009.06.20.20.20.43;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	2009.06.20.19.50.05;	author millert;	state Exp;
branches;
next	1.12;

1.12
date	2009.06.07.03.09.34;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2006.03.31.03.59.40;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2006.03.20.15.11.48;	author mickey;	state Exp;
branches;
next	1.9;

1.9
date	2004.01.07.02.16.33;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.41;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.08.22.31.25;	author art;	state Exp;
branches;
next	1.6;

1.6
date	2002.02.16.21.27.26;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	2001.05.18.09.08.38;	author art;	state Exp;
branches;
next	1.4;

1.4
date	96.05.10.12.58.33;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.05.05.14.57.38;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.03.19.23.15.25;	author niklas;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.24
log
@add kvm_realloc() as a private function.

part of a larger diff
ok millert@@ guenther@@
@
text
@/*	$OpenBSD: kvm_private.h,v 1.23 2014/10/15 02:03:05 deraadt Exp $ */
/*	$NetBSD: kvm_private.h,v 1.7 1996/05/05 04:32:15 gwr Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software developed by the Computer Systems
 * Engineering group at Lawrence Berkeley Laboratory under DARPA contract
 * BG 91-66 and contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)kvm_private.h	8.1 (Berkeley) 6/4/93
 */

struct __kvm {
	/*
	 * a string to be prepended to error messages
	 * provided for compatibility with sun's interface
	 * if this value is null, errors are saved in errbuf[]
	 */
	const char *program;
	char	errbuf[_POSIX2_LINE_MAX];
	DB	*db;
	int	pmfd;		/* physical memory file (or crashdump) */
	int	vmfd;		/* virtual memory file (-1 if crashdump) */
	int	swfd;		/* swap file (e.g., /dev/drum) */
	int	nlfd;		/* namelist file (e.g., /vmunix) */
	struct kinfo_proc *procbase;
	struct kinfo_file *filebase;
	int	nbpg;		/* page size */
	char	*swapspc;	/* (dynamic) storage for swapped pages */
	char	*argspc, *argbuf; /* (dynamic) storage for argv strings */
	int	arglen;		/* length of the above */
	char	**argv;		/* (dynamic) storage for argv pointers */
	int	argc;		/* length of above (not actual # present) */

	/*
	 * Header structures for kernel dumps. Only gets filled in for
	 * dead kernels.
	 */
	struct kcore_hdr	*kcore_hdr;
	size_t	cpu_dsize;
	void	*cpu_data;
	off_t	dump_off;	/* Where the actual dump starts	*/

	/*
	 * Kernel virtual address translation state.  This only gets filled
	 * in for dead kernels; otherwise, the running kernel (i.e. kmem)
	 * will do the translations for us.  It could be big, so we
	 * only allocate it if necessary.
	 */
	struct vmstate *vmst; /* XXX: should become obsoleted */
	/*
	 * These kernel variables are used for looking up user addresses,
	 * and are cached for efficiency.
	 */
	struct pglist *vm_page_buckets;
	int vm_page_hash_mask;
	int alive;	/* Dead or alive. */
#define ISALIVE(kd) ((kd)->alive)
};

#define KREAD(kd, addr, obj) \
	(kvm_read(kd, addr, (void *)(obj), sizeof(*obj)) != sizeof(*obj))

/*
 * Functions used internally by kvm, but across kvm modules.
 */
__BEGIN_HIDDEN_DECLS
void	 _kvm_err(kvm_t *kd, const char *program, const char *fmt, ...)
	    __attribute__((__format__ (printf, 3, 4)));
int	 _kvm_dump_mkheader(kvm_t *kd_live, kvm_t *kd_dump);
void	 _kvm_freevtop(kvm_t *);
int	 _kvm_initvtop(kvm_t *);
int	 _kvm_kvatop(kvm_t *, u_long, paddr_t *);
void	*_kvm_malloc(kvm_t *kd, size_t);
void	*_kvm_realloc(kvm_t *kd, void *, size_t);
off_t	 _kvm_pa2off(kvm_t *, paddr_t);
void	*_kvm_reallocarray(kvm_t *kd, void *, size_t, size_t);
void	 _kvm_syserr(kvm_t *kd, const char *program, const char *fmt, ...)
	    __attribute__((__format__ (printf, 3, 4)));
ssize_t	 _kvm_pread(kvm_t *, int, void *, size_t, off_t);
ssize_t	 _kvm_pwrite(kvm_t *, int, const void *, size_t, off_t);
__END_HIDDEN_DECLS
@


1.23
log
@Apply reallocarray() idiom.
ok guenther
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.22 2013/11/17 20:27:14 guenther Exp $ */
d101 1
@


1.22
log
@Mark internal symbols as hidden.  This removes symbols from the ABI,
albeit ones no one should be using, so major bump the shlib.

ok kettenis@@
ports testing by landry@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.21 2013/11/16 00:47:49 guenther Exp $ */
d102 1
a102 1
void	*_kvm_realloc(kvm_t *kd, void *, size_t);
@


1.21
log
@_kvm_syserr() is printf-like too
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.20 2013/11/16 00:37:11 guenther Exp $ */
d93 1
d107 1
@


1.20
log
@Prep for hidden visibility: move the vnode/file related function
declarations, including _kvm_getftype(), into a new header, kvm_file.h,
so that we don't have to pull <sys/vnode.h> into all the .c files.  No
more extern function declaration in .c files.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.19 2013/11/12 14:49:41 guenther Exp $ */
d102 2
a103 1
void	 _kvm_syserr(kvm_t *kd, const char *program, const char *fmt, ...);
@


1.19
log
@Apply format __attribute__ to _kvm_err() and fix the errors that it detects.
Treat failure to KREAD teh pcredd or ucreds to be errors insteading of
continuing with bogus data.

ok deraadt@@ millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.18 2013/10/22 16:40:27 guenther Exp $ */
a104 3
int	 _kvm_stat_cd9660(kvm_t *, struct kinfo_file *, struct vnode *);
int	 _kvm_stat_udf(kvm_t *, struct kinfo_file *, struct vnode *);
int	 _kvm_stat_ntfs(kvm_t *, struct kinfo_file *, struct vnode *);
@


1.18
log
@- add UNIX-domain socket info to struct kinfo_file2
- convert netstat from kvm_getfiles() to kvm_getfile2() using that
- delete kvm_getfiles() and KERN_FILE as no longer used (bump libkvm's major)
- rename kvm_getfile2() to kvm_getfiles(), kinfo_file2 to kinfo_file
  and KERN_FILE2 to KERN_FILE.

ok deraadt@@, millert@@
ports scan sthen@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.17 2011/03/12 04:54:28 guenther Exp $ */
d93 2
a94 1
void	 _kvm_err(kvm_t *kd, const char *program, const char *fmt, ...);
@


1.17
log
@Replace the old, broken KERN_PROC ABI and its matching functions
in libkvm with the stable-ABI versions that are currently named
KERN_PROC2, kvm_get{proc,argv,envv}2().  The latter names and symbols
will continue to be supported for a few releases.

Committing now that they ports people have had a couple releases
to update pkgs that usd the old functions
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.16 2010/01/12 08:15:51 jasper Exp $ */
d104 3
a106 3
int	 _kvm_stat_cd9660(kvm_t *, struct kinfo_file2 *, struct vnode *);
int	 _kvm_stat_udf(kvm_t *, struct kinfo_file2 *, struct vnode *);
int	 _kvm_stat_ntfs(kvm_t *, struct kinfo_file2 *, struct vnode *);
@


1.16
log
@the comment is right, this can indeed go away.
it's unused inside libkvm, and nothing else is allowed to use it.

ok guenther@@ "sure" deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.15 2009/06/24 13:04:24 millert Exp $ */
a52 1
	struct kinfo_proc2 *procbase2;
a94 1
void	 _kvm_freeprocs(kvm_t *kd);
@


1.15
log
@Install ntfs includes and add libkvm (fstat) support.  ntfs bits
adapted from NetBSD fstat.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.14 2009/06/20 20:20:43 millert Exp $ */
a45 1
	char	*errp;		/* XXX this can probably go away */
@


1.14
log
@Move KREAD define to kvm_private.h
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.13 2009/06/20 19:50:05 millert Exp $ */
d109 1
@


1.13
log
@Split out cd9660 bits into their own .c file to avoid #define collisions
with ufs and add also udf support.  OK miod@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.12 2009/06/07 03:09:34 millert Exp $ */
d88 3
@


1.12
log
@Add kvm_getfile2 which uses KERN_FILE2 when possible, falling
back on kmem grovelling for non-live kernels.  OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.11 2006/03/31 03:59:40 deraadt Exp $ */
d104 2
@


1.11
log
@careful cleanup following advice from lint.  be very very very careful
with sprinkling in size_t!
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.10 2006/03/20 15:11:48 mickey Exp $ */
d55 1
@


1.10
log
@for some of internal functions use paddr_t where phys addr is intended insteadd of u_long; miod@@ ok
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.9 2004/01/07 02:16:33 millert Exp $ */
d100 3
a102 6
void	 _kvm_syserr
(kvm_t *kd, const char *program, const char *fmt, ...);
ssize_t	_kvm_pread
(kvm_t *, int, void *, size_t, off_t);
ssize_t	_kvm_pwrite
(kvm_t *, int, void *, size_t, off_t);
@


1.9
log
@Implement kvm_getproc2(), kvm_getargv2() and kvm_getenvv2() that use
the KERN_PROC2 sysctl.  Based on changes from NetBSD but uses our
own kvm_arg_sysctl().
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.8 2003/06/02 20:18:41 millert Exp $ */
d96 1
a96 1
int	 _kvm_kvatop(kvm_t *, u_long, u_long *);
d98 1
a98 1
off_t	 _kvm_pa2off(kvm_t *, u_long);
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.7 2002/06/08 22:31:25 art Exp $ */
d54 1
@


1.7
log
@Add a flag - KVM_NO_FILES which tells kvm_openfiles to not
open any files, just return an kvm handle that we can use to some
of the functions.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.6 2002/02/16 21:27:26 millert Exp $ */
d20 1
a20 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.6
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.5 2001/05/18 09:08:38 art Exp $ */
a52 1
#define ISALIVE(kd) ((kd)->vmfd >= 0)
d87 2
@


1.5
log
@Convert lseek/{read,write} pairs into pread and pwrite.
from my todo list, work by Jonathon Fletcher <jonathon.fletcher@@pobox.com>.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_private.h,v 1.4 1996/05/10 12:58:33 deraadt Exp $ */
d93 9
a101 9
void	 _kvm_err __P((kvm_t *kd, const char *program, const char *fmt, ...));
int	 _kvm_dump_mkheader __P((kvm_t *kd_live, kvm_t *kd_dump));
void	 _kvm_freeprocs __P((kvm_t *kd));
void	 _kvm_freevtop __P((kvm_t *));
int	 _kvm_initvtop __P((kvm_t *));
int	 _kvm_kvatop __P((kvm_t *, u_long, u_long *));
void	*_kvm_malloc __P((kvm_t *kd, size_t));
off_t	 _kvm_pa2off __P((kvm_t *, u_long));
void	*_kvm_realloc __P((kvm_t *kd, void *, size_t));
d103 1
a103 1
	    __P((kvm_t *kd, const char *program, const char *fmt, ...));
d105 1
a105 1
		__P((kvm_t *, int, void *, size_t, off_t));
d107 1
a107 1
		__P((kvm_t *, int, void *, size_t, off_t));
@


1.4
log
@sync with netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
d104 4
@


1.3
log
@sync with 0430
@
text
@d2 1
a2 1
/*	$NetBSD: kvm_private.h,v 1.6 1996/03/18 22:33:54 thorpej Exp $	*/
d71 2
a72 1
	struct cpu_kcore_hdr	*cpu_hdr;
@


1.2
log
@From NetBSD: merge of 960317
@
text
@d1 2
a2 1
/*	$OpenBSD$	*/
@


1.1
log
@Initial revision
@
text
@d1 2
d64 9
d79 1
a79 1
	struct vmstate *vmst;
d92 1
d98 1
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
