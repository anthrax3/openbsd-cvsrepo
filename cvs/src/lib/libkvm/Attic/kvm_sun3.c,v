head	1.7;
access;
symbols
	OPENBSD_3_2:1.6.0.4
	OPENBSD_3_2_BASE:1.6
	OPENBSD_3_1:1.6.0.2
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.3.0.22
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.20
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.18
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.16
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.14
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.12
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.10
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.7
date	2002.12.31.16.35.36;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2001.12.05.02.23.11;	author art;	state Exp;
branches;
next	1.5;

1.5
date	2001.11.06.19.17.36;	author art;	state Exp;
branches;
next	1.4;

1.4
date	2001.11.05.23.04.35;	author art;	state Exp;
branches;
next	1.3;

1.3
date	96.05.10.12.58.33;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	96.05.05.14.57.53;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.44;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@amiga and sun3 turned out to not be y2k+3 compliant here. Remove them, as
well as the few userland tools which were only used on these platforms.
@
text
@/*	$OpenBSD: kvm_sun3.c,v 1.6 2001/12/05 02:23:11 art Exp $ */
/*	$NetBSD: kvm_sun3.c,v 1.4 1996/05/05 04:32:18 gwr Exp $	*/

/*-
 * Copyright (c) 1992, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * This code is derived from software developed by the Computer Systems
 * Engineering group at Lawrence Berkeley Laboratory under DARPA contract
 * BG 91-66 and contributed to Berkeley.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#if defined(LIBC_SCCS) && !defined(lint)
#if 0
static char sccsid[] = "@@(#)kvm_sparc.c	8.1 (Berkeley) 6/4/93";
#else
static char *rcsid = "$NetBSD: kvm_sun3.c,v 1.4 1996/05/05 04:32:18 gwr Exp $";
#endif
#endif /* LIBC_SCCS and not lint */

/*
 * Sun3 machine dependent routines for kvm.
 */

#include <sys/param.h>
#include <sys/user.h>
#include <sys/proc.h>
#include <sys/stat.h>

#include <sys/core.h>
#include <sys/exec_aout.h>
#include <sys/kcore.h>

#include <unistd.h>
#include <limits.h>
#include <nlist.h>
#include <kvm.h>
#include <db.h>

#include <uvm/uvm_extern.h>
#include <machine/vmparam.h>
#include <machine/pmap.h>

#include <machine/kcore.h>
#include <machine/pte.h>

#include "kvm_private.h"

#define NKSEG (NSEGMAP/8)	/* kernel segmap entries */
struct vmstate {
	/* Page Map Entry Group (PMEG) */
	int   pmeg[NKSEG][NPAGSEG];
};

/*
 * Prepare for translation of kernel virtual addresses into offsets
 * into crash dump files. We use the MMU specific goop written at the
 * beginning of a crash dump by dumpsys()
 * Note: sun3 MMU specific!
 */
int
_kvm_initvtop(kd)
	kvm_t *kd;
{
	register char *p;

	p = kd->cpu_data;
	p += (NBPG - sizeof(kcore_seg_t));
	kd->vmst = (struct vmstate *)p;

	return (0);
}

void
_kvm_freevtop(kd)
	kvm_t *kd;
{
	/* This was set by pointer arithmetic, not allocation. */
	kd->vmst = (void*)0;
}

/*
 * Translate a kernel virtual address to a physical address using the
 * mapping information in kd->vm.  Returns the result in pa, and returns
 * the number of bytes that are contiguously available from this 
 * physical address.  This routine is used only for crashdumps.
 */
int
_kvm_kvatop(kd, va, pap)
	kvm_t *kd;
	u_long va;
	u_long *pap;
{
	register cpu_kcore_hdr_t *ckh;
	u_int segnum, sme, ptenum;
	int pte, offset;
	u_long pa;

	if (ISALIVE(kd)) {
		_kvm_err(kd, 0, "vatop called in live kernel!");
		return((off_t)0);
	}
	ckh = kd->cpu_data;

	if (va < KERNBASE) {
		_kvm_err(kd, 0, "not a kernel address");
		return((off_t)0);
	}

	/*
	 * Get the segmap entry (sme) from the kernel segmap.
	 * Note: only have segmap entries from KERNBASE to end.
	 */
	segnum = VA_SEGNUM(va - KERNBASE);
	ptenum = VA_PTE_NUM(va);
	offset = va & PGOFSET;

	/* The segmap entry selects a PMEG. */
	sme = ckh->ksegmap[segnum];
	pte = kd->vmst->pmeg[sme][ptenum];

	if ((pte & PG_VALID) == 0) {
		_kvm_err(kd, 0, "page not valid (VA=0x%x)", va);
		return (0);
	}
	pa = PG_PA(pte) + offset;

	*pap = pa;
	return (NBPG - offset);
}

/*
 * Translate a physical address to a file-offset in the crash-dump.
 */
off_t
_kvm_pa2off(kd, pa)
	kvm_t	*kd;
	u_long	pa;
{
	return(kd->dump_off + pa);
}
@


1.6
log
@Include more machdep headers. (paranoia)
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_sun3.c,v 1.5 2001/11/06 19:17:36 art Exp $ */
@


1.5
log
@Adapt to new uvm/ includes.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_sun3.c,v 1.4 2001/11/05 23:04:35 art Exp $ */
d69 2
@


1.4
log
@No need to pull in vm/vm_param.h in any of these files.
@
text
@d1 1
a1 1
/*	$OpenBSD: kvm_sun3.c,v 1.3 1996/05/10 12:58:33 deraadt Exp $ */
d68 1
a68 1
#include <vm/vm.h>
@


1.3
log
@sync with netbsd
@
text
@d1 1
a1 1
/*	$OpenBSD$ */
a68 1
#include <vm/vm_param.h>
@


1.2
log
@sync with 0430
@
text
@d2 1
a2 1
/*	$NetBSD: kvm_sun3.c,v 1.3 1996/03/18 22:34:04 thorpej Exp $	*/
d41 8
d50 1
a50 3
 * Sun3 machine dependent routines for kvm.  Hopefully, the forthcoming
 * vm code will one day obsolete this module.  Furthermore, I hope it
 * gets here soon, because this basically is an error stub! (sorry)
d57 5
d63 1
d66 1
d71 2
a72 2
#include <limits.h>
#include <db.h>
d76 1
d78 2
a79 1
	u_long end;
d82 6
a87 8
void
_kvm_freevtop(kd)
	kvm_t *kd;
{
	if (kd->vmst != 0)
		free(kd->vmst);
}

d92 5
a96 23
	register int i;
	register int off;
	register struct vmstate *vm;
	struct stat st;
	struct nlist nlist[2];

	vm = (struct vmstate *)_kvm_malloc(kd, sizeof(*vm));
	if (vm == 0)
		return (-1);

	kd->vmst = vm;

	if (fstat(kd->pmfd, &st) < 0)
		return (-1);

	/* Get end of kernel address */
	nlist[0].n_name = "_end";
	nlist[1].n_name = 0;
	if (kvm_nlist(kd, nlist) != 0) {
		_kvm_err(kd, kd->program, "pmap_stod: no such symbol");
		return (-1);
	}
	vm->end = (u_long)nlist[0].n_value;
d101 7
a107 1
#define VA_OFF(va) (va & (NBPG - 1))
d116 1
a116 1
_kvm_kvatop(kd, va, pa)
d119 1
a119 1
	u_long *pa;
d121 10
a130 1
	register int end;
d133 2
a134 2
		_kvm_err(kd, 0, "invalid address (%x<%x)", va, KERNBASE);
		return (0);
d137 14
a150 3
	end = kd->vmst->end;
	if (va >= end) {
		_kvm_err(kd, 0, "invalid address (%x>=%x)", va, end);
d153 5
d159 9
a167 2
	*pa = (va - KERNBASE);
	return (end - va);
@


1.1
log
@Initial revision
@
text
@d1 3
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
