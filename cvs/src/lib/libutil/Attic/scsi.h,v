head	1.4;
access;
symbols
	OPENBSD_3_3:1.3.0.6
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.4
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.2
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.1.0.22
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.20
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.18
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.16
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.14
	OPENBSD_2_6_BASE:1.1
	OPENBSD_2_5:1.1.0.12
	OPENBSD_2_5_BASE:1.1
	OPENBSD_2_4:1.1.0.10
	OPENBSD_2_4_BASE:1.1
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2003.07.23.23.10.25;	author deraadt;	state dead;
branches;
next	1.3;

1.3
date	2002.02.17.19.42.26;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2002.02.16.21.27.29;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.12.11.21.37;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.4
log
@move junk (bad code, terrible APIs) to the only program that uses it;
millert ok
@
text
@/*	$OpenBSD: scsi.h,v 1.3 2002/02/17 19:42:26 millert Exp $	*/

/* Copyright (c) 1994 HD Associates (hd@@world.std.com)
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 * This product includes software developed by HD Associates
 * 4. Neither the name of the HD Associaates nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY HD ASSOCIATES``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL HD ASSOCIATES OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#ifndef _SCSI_H_
#define _SCSI_H_

#include <sys/cdefs.h>

/* libscsi: Library header file for the SCSI user library.
 */

#include <sys/scsiio.h>
#include <stdio.h>

#define SCSIREQ_ERROR(SR) (\
0 \
|| SR->senselen_used	/* Sent sense */ \
|| SR->status      		/* Host adapter status */ \
|| SR->retsts      		/* SCSI transfer status */ \
|| SR->error       		/* copy of errno */ \
)

scsireq_t *scsireq_reset(scsireq_t *);
scsireq_t *scsireq_new(void);

int scsireq_buff_decode(u_char *, size_t, char *, ...);
int scsireq_buff_decode_visit(u_char *, size_t, char *,
    void (*a)(void *, int, void *, int, char *), void *);

int scsireq_decode(scsireq_t *, char *, ...);
int scsireq_decode_visit(scsireq_t *, char *,
    void (*)(void *, int, void *, int, char *), void *);

int scsireq_encode(scsireq_t *, char *, ...);
int scsireq_encode_visit(scsireq_t *, char *,
    int (*)(void *, char *), void *);
int scsireq_buff_encode_visit(u_char *, size_t, char *,
    int (*)(void *, char *), void *);

scsireq_t *scsireq_build(scsireq_t *, u_long, caddr_t, u_long, char *, ...);

scsireq_t *scsireq_build_visit(scsireq_t *, u_long, caddr_t, u_long, char *,
    int (*)(void *, char *), void *);

int scsireq_enter(int, scsireq_t *);

void scsi_dump(FILE *, char *, u_char *, int, int, int );

int scsi_debug(FILE *, int, scsireq_t *);
FILE *scsi_debug_output(char *);
int scsi_open(const char *, int );

#endif /* _SCSI_H_ */
@


1.3
log
@Manual cleanup of remaining userland __P use (excluding packages maintained outside the tree)
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi.h,v 1.2 2002/02/16 21:27:29 millert Exp $	*/
@


1.2
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d1 1
a1 1
/*	$OpenBSD: scsi.h,v 1.1 1996/06/12 11:21:37 deraadt Exp $	*/
d57 2
a58 2
int scsireq_buff_decode_visit __P((u_char *, size_t, char *,
void (*a)(void *, int, void *, int, char *), void *));
d61 2
a62 2
int scsireq_decode_visit __P((scsireq_t *, char *,
void (*) (void *, int, void *, int, char *), void *));
d65 9
a73 12
int scsireq_encode_visit __P((scsireq_t *, char *,
	int (*)(void *, char *), void *));
int scsireq_buff_encode_visit __P((u_char *, size_t, char *,
	int (*)(void *, char *), void *));

scsireq_t *scsireq_build __P((scsireq_t *,
	u_long, caddr_t, u_long,
	char *, ...));

scsireq_t *scsireq_build_visit __P((scsireq_t *,
	u_long, caddr_t, u_long, char *,
	int (*)(void *, char *), void *));
@


1.1
log
@add /sbin/scsi from FreeBSD -- a good start!
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d53 2
a54 2
scsireq_t *scsireq_reset __P((scsireq_t *));
scsireq_t *scsireq_new __P((void));
d56 1
a56 1
int scsireq_buff_decode __P((u_char *, size_t, char *, ...));
d60 1
a60 1
int scsireq_decode __P((scsireq_t *, char *, ...));
d64 1
a64 1
int scsireq_encode __P((scsireq_t *, char *, ...));
d78 1
a78 1
int scsireq_enter __P((int, scsireq_t *));
d80 1
a80 1
void scsi_dump __P((FILE *, char *, u_char *, int, int, int ));
d82 3
a84 3
int scsi_debug __P((FILE *, int, scsireq_t *));
FILE *scsi_debug_output __P((char *));
int scsi_open __P((const char *, int ));
@

