head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.4
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.17.0.8
	OPENBSD_6_1_BASE:1.17
	OPENBSD_6_0:1.17.0.4
	OPENBSD_6_0_BASE:1.17
	OPENBSD_5_9:1.17.0.2
	OPENBSD_5_9_BASE:1.17
	OPENBSD_5_8:1.16.0.12
	OPENBSD_5_8_BASE:1.16
	OPENBSD_5_7:1.16.0.4
	OPENBSD_5_7_BASE:1.16
	OPENBSD_5_6:1.16.0.8
	OPENBSD_5_6_BASE:1.16
	OPENBSD_5_5:1.16.0.6
	OPENBSD_5_5_BASE:1.16
	OPENBSD_5_4:1.16.0.2
	OPENBSD_5_4_BASE:1.16
	OPENBSD_5_3:1.15.0.24
	OPENBSD_5_3_BASE:1.15
	OPENBSD_5_2:1.15.0.22
	OPENBSD_5_2_BASE:1.15
	OPENBSD_5_1_BASE:1.15
	OPENBSD_5_1:1.15.0.20
	OPENBSD_5_0:1.15.0.18
	OPENBSD_5_0_BASE:1.15
	OPENBSD_4_9:1.15.0.16
	OPENBSD_4_9_BASE:1.15
	OPENBSD_4_8:1.15.0.14
	OPENBSD_4_8_BASE:1.15
	OPENBSD_4_7:1.15.0.10
	OPENBSD_4_7_BASE:1.15
	OPENBSD_4_6:1.15.0.12
	OPENBSD_4_6_BASE:1.15
	OPENBSD_4_5:1.15.0.8
	OPENBSD_4_5_BASE:1.15
	OPENBSD_4_4:1.15.0.6
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.4
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.2
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.14.0.10
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.8
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.6
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.4
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.14.0.2
	OPENBSD_3_7_BASE:1.14
	OPENBSD_3_6:1.13.0.4
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENBSD_3_3:1.8.0.4
	OPENBSD_3_3_BASE:1.8
	OPENBSD_3_2:1.8.0.2
	OPENBSD_3_2_BASE:1.8
	OPENBSD_3_1:1.7.0.4
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2;
locks; strict;
comment	@# @;


1.19
date	2017.04.20.19.30.42;	author jmc;	state Exp;
branches;
next	1.18;
commitid	rNzc1XzFgsIu2wuw;

1.18
date	2017.04.20.17.48.30;	author nicm;	state Exp;
branches;
next	1.17;
commitid	w9ylcn6nO6YBlwgy;

1.17
date	2015.08.28.19.54.06;	author kettenis;	state Exp;
branches;
next	1.16;
commitid	fcK3b3kzdQ6W20zX;

1.16
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.15;

1.15
date	2007.05.31.19.19.38;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2004.11.25.16.41.55;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.02.21.13.47.41;	author espie;	state Exp;
branches;
next	1.12;

1.12
date	2004.02.10.01.31.20;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.06.02.20.18.42;	author millert;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.02.11.37.27;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.05.23.12.31.32;	author jmc;	state Exp;
branches;
next	1.8;

1.8
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.7;

1.7
date	2001.07.13.22.14.07;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	99.12.06.19.18.17;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.08.23.14.46.23;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	99.07.07.14.22.25;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	96.11.24.23.53.12;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	96.09.07.10.41.41;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	96.05.22.11.35.09;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.19
log
@add previous to NAME;
@
text
@.\"	$OpenBSD: openpty.3,v 1.18 2017/04/20 17:48:30 nicm Exp $
.\" Copyright (c) 1995
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software developed by the Computer Systems
.\" Engineering group at Lawrence Berkeley Laboratory under DARPA contract
.\" BG 91-66 and contributed to Berkeley.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.Dd $Mdocdate: April 20 2017 $
.Dt OPENPTY 3
.Os
.Sh NAME
.Nm getptmfd ,
.Nm openpty ,
.Nm fdopenpty ,
.Nm login_tty ,
.Nm forkpty ,
.Nm fdforkpty
.Nd tty utility functions
.Sh SYNOPSIS
.In termios.h
.In util.h
.Ft int
.Fn getptmfd "void"
.Ft int
.Fn openpty "int *amaster" "int *aslave" "char *name" "struct termios *termp" "struct winsize *winp"
.Ft int
.Fn fdopenpty "int ptmfd" "int *amaster" "int *aslave" "char *name" "struct termios *termp" "struct winsize *winp"
.Ft int
.Fn login_tty "int fd"
.Ft pid_t
.Fn forkpty "int *amaster" "char *name" "struct termios *termp" "struct winsize *winp"
.Ft pid_t
.Fn fdforkpty "int ptmfd" "int *amaster" "char *name" "struct termios *termp" "struct winsize *winp"
.Sh DESCRIPTION
The
.Fn openpty ,
.Fn login_tty ,
and
.Fn forkpty
functions perform manipulations on ttys and pseudo-ttys.
.Pp
The
.Fn openpty
function finds an available pseudo-tty and returns file descriptors
for the master and slave in
.Fa amaster
and
.Fa aslave .
If
.Fa name
is non-null, the filename of the slave is returned in
.Fa name
(a string of at least 16 characters).
If
.Fa termp
is non-null, the terminal parameters of the slave will be set to the
values in
.Fa termp .
If
.Fa winp
is non-null, the window size of the slave will be set to the values in
.Fa winp .
.Pp
The
.Fn openpty
function allocates the pseudo-tty through the
.Pa /dev/ptm
device (see
.Xr pty 4
for details) which means that its ownership is changed to the UID of
the caller, permissions are set to correct values, and all earlier
uses of that device are revoked (see
.Xr revoke 2
for details).
.Pp
The
.Fn fdopenpty
and
.Fn fdforkpty
functions work like
.Fn openpty
and
.Fn forkpty
but expect a
.Pa /dev/ptm
file descriptor
.Fa ptmfd
obtained from the
.Fn getptmfd
function.
.Pp
The
.Fn login_tty
function prepares for a login on the tty
.Fa fd
(which may be a real tty device, or the slave of a pseudo-tty as
returned by
.Fn openpty )
by creating a new session, making
.Fa fd
the controlling terminal for the current process, setting
.Fa fd
to be the standard input, output, and error streams of the current
process, and closing
.Fa fd .
.Pp
The
.Fn forkpty
function combines
.Fn openpty ,
.Fn fork ,
and
.Fn login_tty
to create a new process operating in a pseudo-tty.
The file
descriptor of the master side of the pseudo-tty is returned in
.Fa amaster ,
and the filename of the slave in
.Fa name
if it is non-null.
The
.Fa termp
and
.Fa winp
parameters, if non-null, will determine the terminal attributes and
window size of the slave side of the pseudo-tty.
.Sh RETURN VALUES
If a call to
.Fn openpty ,
.Fn login_tty ,
or
.Fn forkpty
is not successful, \-1 is returned and
.Va errno
is set to indicate the error.
Otherwise,
.Fn openpty ,
.Fn login_tty ,
and the child process of
.Fn forkpty
return 0, and the parent process of
.Fn forkpty
returns the process ID of the child process.
.Sh FILES
.Bl -tag -width /dev/tty[p-zP-T][0-9a-zA-Z]x -compact
.It Pa /dev/pty[p-zP-T][0-9a-zA-Z]
master pseudo terminals
.It Pa /dev/tty[p-zP-T][0-9a-zA-Z]
slave pseudo terminals
.It Pa /dev/ptm
pseudo terminal management device
.El
.Sh ERRORS
.Fn getptmfd
may fail and set
.Va errno
for any of the errors specified for the routine
.Xr open 2 .
.Pp
.Fn openpty
and
.Fn fdopenpty
will fail if:
.Bl -tag -width Er
.It Bq Er ENOENT
There are no available ttys.
.El
.Pp
.Fn fdopenpty
and
.Fn fdforkpty
will fail if
.Fn getptmfd
fails.
.Fn forkpty
and
.Fn fdforkpty
will fail if either
.Fn openpty
or
.Fn fork
fails.
.Pp
.Fn login_tty
will fail if
.Fn ioctl
fails to set
.Fa fd
to the controlling terminal of the current process.
.Sh SEE ALSO
.Xr fork 2 ,
.Xr revoke 2 ,
.Xr pty 4
@


1.18
log
@Add getptmfd(), fdopenpty(), fdforkpty() functions. These allow programs
to separate the open(/dev/ptm) from the ioctl(PTMGET) for privilege
separation or pledge().

Based on a diff from reyk@@.

ok deraadt millert
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.17 2015/08/28 19:54:06 kettenis Exp $
d33 1
a33 1
.Dd $Mdocdate: August 28 2015 $
d37 1
d39 1
d41 2
a42 1
.Nm forkpty
@


1.17
log
@Remove lies about openpty(4) searching for a free pseudo-tty by iterating
through all existing pseudo-tty devices in /dev.
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.16 2013/06/05 03:40:26 tedu Exp $
d33 1
a33 1
.Dd $Mdocdate: June 5 2013 $
d45 2
d49 2
d54 2
d99 16
d176 6
d183 2
d191 3
a193 1
.Fn login_tty
d195 2
a196 4
.Fn ioctl
fails to set
.Fa fd
to the controlling terminal of the current process.
d198 2
d205 7
@


1.16
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.15 2007/05/31 19:19:38 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
d82 1
a82 2
function works in the following way:
first it attempts to allocate the pseudo-tty through the
d86 3
a88 6
for details) and if that fails it searches for a free pseudo-tty by iterating
through all existing pseudo-tty devices in
.Pa /dev .
When a free pseudo-tty is found, its ownership is changed to
the UID of the caller, permissions are set to correct values,
and all earlier uses of that device are revoked (see
a90 2
The first method can work for any user, the second method requires
super-user privileges in most cases.
@


1.15
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.14 2004/11/25 16:41:55 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
d42 2
a43 2
.Fd #include <termios.h>
.Fd #include <util.h>
@


1.14
log
@update FILES;

fixes pr #3998; diff from frank denis, though slightly different fix
committed;
help and ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.13 2004/02/21 13:47:41 espie Exp $
d33 1
a33 1
.Dd November 4, 1996
@


1.13
log
@typo
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.12 2004/02/10 01:31:20 millert Exp $
d151 5
a155 2
.Bl -tag -width /dev/[pt]ty[pqrstuvwxyzPQRST][0123456789abcdef] -compact
.It Pa /dev/[pt]ty[pqrstuvwxyzPQRST][0123456789abcdef]
d157 1
@


1.12
log
@Add the ptm device to pty(4).  By opening /dev/ptm and using the PTMGET
ioctl(2), an unprivileged process may allocate a pty and have its owner
and mode set appropriately.  This means that programs such as xterm and
screen no longer need to be setuid.  Programs using the openpty()
function require zero changes and will "just work".

Designed by beck@@ and deraadt@@; changes by beck@@ with cleanup (and
a rewrite of the vnode bits) by art@@ and tweaks/bugfixes by me.
Tested by many.
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.11 2003/06/02 20:18:42 millert Exp $
d87 1
a87 1
for details) and if that fails it searches for a free psuedo-tty by iterating
@


1.11
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.10 2003/06/02 11:37:27 jmc Exp $
d81 18
d153 1
d176 3
a178 1
.Xr fork 2
@


1.10
log
@- section reorder
- clean up .Xr's
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.9 2003/05/23 12:31:32 jmc Exp $
d17 1
a17 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.9
log
@- typos
- new sentence, new line
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.8 2002/05/01 08:03:30 mpech Exp $
d136 4
a159 4
.Sh FILES
.Bl -tag -width /dev/[pt]ty[pqrstuvwxyzPQRST][0123456789abcdef] -compact
.It Pa /dev/[pt]ty[pqrstuvwxyzPQRST][0123456789abcdef]
.El
@


1.8
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.7 2001/07/13 22:14:07 millert Exp $
d106 1
a106 1
to creates a new process operating in a pseudo-tty.
@


1.7
log
@Make the list of required #includes match reality.
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.6 1999/12/06 19:18:17 deraadt Exp $
d106 2
a107 1
to creates a new process operating in a pseudo-tty.  The file
d112 2
a113 1
if it is non-null.  The
d127 2
a128 1
is set to indicate the error.  Otherwise,
@


1.6
log
@say how long the buffer needs to be
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.5 1999/08/23 14:46:23 millert Exp $
d46 1
@


1.5
log
@Remove a lie.  We don't skip /dev/ttyv* since our pcvt uses /dev/ttyC*.
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.4 1999/07/07 14:22:25 aaron Exp $
d71 2
a72 1
.Fa name .
@


1.4
log
@when using `-' as a negative sign, escape it with a backslash so troff knows
it's not supposed to be a hyphen/dash
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.3 1996/11/24 23:53:12 millert Exp $
d152 2
a153 2
.Bl -tag -width /dev/[pt]ty[pqrstuwxyzPQRST][0123456789abcdef] -compact
.It Pa /dev/[pt]ty[pqrstuwxyzPQRST][0123456789abcdef]
a156 7
.Sh BUGS
The names of the virtual consoles for the i386 PCVT console driver
conflict with what would be the seventh group of pseudo-ttys, so
.Fn openpty
skips
.Pa /dev/[pt]tyv[0123456789abcdef]
while looking for pseudo-ttys.
@


1.3
log
@Update from NetBSD.
- correct two .Fn references to forkpty()
- describe retval of forkpty(); it can return PID as well
- add xref to fork(2)
@
text
@d1 1
a1 1
.\"	$OpenBSD: openpty.3,v 1.2 1996/09/07 10:41:41 downsj Exp $
d121 1
a121 1
is not successful, -1 is returned and
@


1.2
log
@openpty() returns int.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d37 1
a37 1
.Dd December 14, 1995
d58 1
a58 1
.Fn login_tty
d120 1
a120 1
.fn forkpty
d123 8
a130 1
is set to indicate the error.  Otherwise, they return 0.
d155 2
@


1.1
log
@libutil
@
text
@d1 1
d47 1
a47 1
.Ft void
@
