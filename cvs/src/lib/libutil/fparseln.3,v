head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.6
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.6
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.9.0.2
	OPENBSD_5_7_BASE:1.9
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.7.0.24
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.22
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.20
	OPENBSD_5_0:1.7.0.18
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.16
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.14
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.10
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.12
	OPENBSD_4_6_BASE:1.7
	OPENBSD_4_5:1.7.0.8
	OPENBSD_4_5_BASE:1.7
	OPENBSD_4_4:1.7.0.6
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.4
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.2
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.5.0.20
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.18
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.16
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.14
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.12
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.10
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.8
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.6
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENBSD_3_1:1.4.0.10
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.8
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3;
locks; strict;
comment	@.\" @;


1.10
date	2015.09.14.15.14.55;	author schwarze;	state Exp;
branches;
next	1.9;
commitid	TPchOLbdlEugnrt2;

1.9
date	2015.01.15.19.06.32;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	dven8mWEy4wx3j1c;

1.8
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2007.05.31.19.19.38;	author jmc;	state Exp;
branches;
next	1.6;

1.6
date	2007.05.16.17.36.57;	author moritz;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.4;

1.4
date	2000.01.05.18.51.11;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	99.07.21.12.17.31;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	99.07.20.16.45.30;	author aaron;	state Exp;
branches;
next	1.1;

1.1
date	99.07.20.16.38.56;	author jakob;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Remove useless quoting from .Fo and .Fn function names, to prevent
development of a cargo cult in case people look at existing files
for examples.  This achieves a consistent .Fo and .Fn quoting style
across the whole tree.
@
text
@.\"	$OpenBSD: fparseln.3,v 1.9 2015/01/15 19:06:32 schwarze Exp $
.\"	$NetBSD: fparseln.3,v 1.7 1999/07/02 15:49:12 simonb Exp $
.\"
.\" Copyright (c) 1997 Christos Zoulas.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by Christos Zoulas.
.\" 4. The name of the author may not be used to endorse or promote products
.\"    derived from this software without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE AUTHOR ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: January 15 2015 $
.Dt FPARSELN 3
.Os
.Sh NAME
.Nm fparseln
.Nd return the next logical line from a stream
.Sh SYNOPSIS
.In stdio.h
.In util.h
.Ft "char *"
.Fo fparseln
.Fa "FILE *stream" "size_t *len" "size_t *lineno"
.Fa "const char delim[3]" "int flags"
.Fc
.Sh DESCRIPTION
The
.Fn fparseln
function
returns a pointer to the next logical line from the stream referenced by
.Fa stream .
This string is null terminated, contains no trailing newline,
and is dynamically allocated on each invocation.
It is the responsibility of the caller to free the pointer.
.Pp
By default, if a character is escaped, both it and the preceding escape
character will be present in the returned string.
Various
.Fa flags
alter this behaviour.
.Pp
The meaning of the arguments is as follows:
.Bl -tag -width "lineno"
.It Fa stream
The stream to read from.
.It Fa len
If not
.Dv NULL ,
the length of the string is stored in the memory location referenced by
.Fa len .
.It Fa lineno
If not
.Dv NULL ,
the value of the memory location to which
.Fa lineno
references is incremented by the number of lines actually read from the file.
.It Fa delim
Contains the escape, continuation, and comment characters.
If a character is NUL then processing for that character is disabled.
If
.Dv NULL ,
all characters default to values specified below.
The contents of
.Fa delim
is as follows:
.Bl -tag -width "delim[0]"
.It Fa delim[0]
The escape character, which defaults to
.Ql \e ,
is used to remove any special meaning from the next character.
.It Fa delim[1]
The continuation character, which defaults to
.Ql \e ,
is used to indicate that the next line should be concatenated with the
current one if this character is the last character on the current line
and is not escaped.
.It Fa delim[2]
The comment character, which defaults to
.Ql # ,
if not escaped indicates the beginning of a comment that extends until the
end of the current line.
.El
.It Fa flags
If non-zero, alter the operation of
.Fn fparseln .
The various flags, which may be OR'ed together, are:
.Bl -tag -width "FPARSELN_UNESCCOMM"
.It Dv FPARSELN_UNESCCOMM
Remove escape preceding an escaped comment.
.It Dv FPARSELN_UNESCCONT
Remove escape preceding an escaped continuation.
.It Dv FPARSELN_UNESCESC
Remove escape preceding an escaped escape.
.It Dv FPARSELN_UNESCREST
Remove escape preceding any other character.
.It Dv FPARSELN_UNESCALL
All of the above.
.El
.El
.Sh RETURN VALUES
Upon successful completion a pointer to the parsed line is returned;
otherwise,
.Dv NULL
is returned.
.Pp
Internally, the
.Fn fparseln
function uses
.Xr fgetln 3 ,
so all error conditions that apply to
.Xr fgetln 3
apply to
.Fn fparseln
as well.
In addition
.Fn fparseln
may set
.Va errno
to
.Er ENOMEM
and return
.Dv NULL
if it runs out of memory.
.Sh SEE ALSO
.Xr fgetln 3
@


1.9
log
@remove .Tn; from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.8 2013/06/05 03:40:26 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: June 5 2013 $
d41 1
a41 1
.Fo "fparseln"
@


1.8
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.7 2007/05/31 19:19:38 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
d78 1
a78 3
If a character is
.Tn NUL
then processing for that character is disabled.
d105 1
a105 3
The various flags, which may be
.Tn OR Ns 'ed
together, are:
@


1.7
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.6 2007/05/16 17:36:57 moritz Exp $
d31 1
a31 1
.Dd $Mdocdate$
d38 2
a39 2
.Fd #include <stdio.h>
.Fd #include <util.h>
@


1.6
log
@Make it clear, that the line returned does not have a
trailing newline in contrast to fgetln(3).

ok ray@@ jmc@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.5 2002/05/01 08:03:30 mpech Exp $
d31 1
a31 1
.Dd December 1, 1997
@


1.5
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.4 2000/01/05 18:51:11 deraadt Exp $
d51 2
a52 2
This string is null terminated and dynamically allocated on each
invocation.
@


1.4
log
@update header requirements; bde
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.3 1999/07/21 12:17:31 aaron Exp $
d52 2
a53 1
invocation. It is the responsibility of the caller to free the pointer.
@


1.3
log
@fix bad English, spelling, grammar, comma splices, etc.
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.2 1999/07/20 16:45:30 aaron Exp $
d38 1
@


1.2
log
@insert a missing .El macro
@
text
@d1 1
a1 1
.\"	$OpenBSD: fparseln.3,v 1.1 1999/07/20 16:38:56 jakob Exp $
d50 1
a50 1
This string is null terminated and it is dynamicaly allocated on each
d53 1
a53 1
By default, if a character is escaped, both it and the preceeding escape
d66 2
a67 2
the length of the string is stored in the memory location to which it
points.
d71 3
a73 2
the value of the memory location to which is pointed to, is incremented
by the number of lines actually read from the file.
d110 1
a110 1
Remove escape preceeding an escaped comment.
d112 1
a112 1
Remove escape preceeding an escaped continuation.
d114 1
a114 1
Remove escape preceeding an escaped escape.
d116 1
a116 1
Remove escape preceeding any other character.
d127 1
a127 1
The
d129 1
a129 1
function uses internally
d132 1
a132 1
.Xr fgetln 3 ,
d134 2
a135 1
.Fn fparseln .
@


1.1
log
@Added fparseln from NetBSD.
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d76 1
a76 1
.Dv NUL
d118 1
@

