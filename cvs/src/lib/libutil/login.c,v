head	1.11;
access;
symbols
	OPENBSD_6_1_BASE:1.11
	OPENBSD_6_0:1.11.0.4
	OPENBSD_6_0_BASE:1.11
	OPENBSD_5_9:1.11.0.2
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.10.0.44
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.36
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.40
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.38
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.34
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.32
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.30
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.28
	OPENBSD_5_0:1.10.0.26
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.24
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.22
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.18
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.20
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.10.0.16
	OPENBSD_4_5_BASE:1.10
	OPENBSD_4_4:1.10.0.14
	OPENBSD_4_4_BASE:1.10
	OPENBSD_4_3:1.10.0.12
	OPENBSD_4_3_BASE:1.10
	OPENBSD_4_2:1.10.0.10
	OPENBSD_4_2_BASE:1.10
	OPENBSD_4_1:1.10.0.8
	OPENBSD_4_1_BASE:1.10
	OPENBSD_4_0:1.10.0.6
	OPENBSD_4_0_BASE:1.10
	OPENBSD_3_9:1.10.0.4
	OPENBSD_3_9_BASE:1.10
	OPENBSD_3_8:1.10.0.2
	OPENBSD_3_8_BASE:1.10
	OPENBSD_3_7:1.9.0.4
	OPENBSD_3_7_BASE:1.9
	OPENBSD_3_6:1.9.0.2
	OPENBSD_3_6_BASE:1.9
	OPENBSD_3_5:1.8.0.4
	OPENBSD_3_5_BASE:1.8
	OPENBSD_3_4:1.8.0.2
	OPENBSD_3_4_BASE:1.8
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.6
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.4
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.6.0.2
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.5.0.10
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.8
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.6
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.5.0.4
	OPENBSD_2_5_BASE:1.5
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	OPENBSD_2_3:1.3.0.8
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.6
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.4
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.3.0.2
	OPENBSD_2_0_BASE:1.3
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2015.12.28.20.11.36;	author guenther;	state Exp;
branches;
next	1.10;
commitid	jkfv3QA7fnsHQaww;

1.10
date	2005.08.02.21.46.23;	author espie;	state Exp;
branches;
next	1.9;

1.9
date	2004.05.28.07.03.47;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2003.06.02.20.18.42;	author millert;	state Exp;
branches;
next	1.7;

1.7
date	2002.06.09.22.18.43;	author fgsch;	state Exp;
branches;
next	1.6;

1.6
date	2001.02.05.09.46.50;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	98.07.13.02.11.12;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	98.07.10.21.40.20;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	96.06.17.07.46.02;	author downsj;	state Exp;
branches;
next	1.2;

1.2
date	96.05.22.11.35.05;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.43.13;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.43.13;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Switch login(3) from lseek+read/write to pread/pwrite and only do the pread()
if the data is needed.  Use O_CLOEXEC on the internal fd as MT paranoia.
Fix cast in offset calculation; delete register keyword;
prefer memset() over bzero()

ok millert@@
@
text
@/*	$OpenBSD: login.c,v 1.10 2005/08/02 21:46:23 espie Exp $	*/
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <sys/types.h>

#include <fcntl.h>
#include <unistd.h>
#include <stdlib.h>
#include <utmp.h>
#include <stdio.h>
#include <string.h>

#include "util.h"

void
login(struct utmp *utp)
{
	struct utmp old_ut;
	int fd, tty;
	off_t pos;

	tty = ttyslot();
	if (tty > 0 && (fd = open(_PATH_UTMP, O_RDWR|O_CREAT|O_CLOEXEC, 0644))
	    >= 0) {
		/*
		 * Prevent luser from zero'ing out ut_host.
		 * If the new ut_line is empty but the old one is not
		 * and ut_line and ut_name match, preserve the old ut_line.
		 */
		pos = (off_t)tty * sizeof(struct utmp);
		if (utp->ut_host[0] == '\0' &&
		    pread(fd, &old_ut, sizeof(struct utmp), pos) ==
		    sizeof(struct utmp) &&
		    old_ut.ut_host[0] != '\0' &&
		    strncmp(old_ut.ut_line, utp->ut_line, UT_LINESIZE) == 0 &&
		    strncmp(old_ut.ut_name, utp->ut_name, UT_NAMESIZE) == 0)
			(void)memcpy(utp->ut_host, old_ut.ut_host, UT_HOSTSIZE);
		(void)pwrite(fd, utp, sizeof(struct utmp), pos);
		(void)close(fd);
	}
	if ((fd = open(_PATH_WTMP, O_WRONLY|O_APPEND|O_CLOEXEC)) >= 0) {
		(void)write(fd, utp, sizeof(struct utmp));
		(void)close(fd);
	}
}
@


1.10
log
@scrape $Id$ tags.
okay deraadt@@, millert@@, krw@@
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.9 2004/05/28 07:03:47 deraadt Exp $	*/
d46 2
a47 2
	register int fd;
	int tty;
d50 2
a51 2
	if (tty > 0 && (fd = open(_PATH_UTMP, O_RDWR|O_CREAT, 0644)) >= 0) {
		(void)lseek(fd, (off_t)(tty * sizeof(struct utmp)), SEEK_SET);
d57 4
a60 2
		if (read(fd, &old_ut, sizeof(struct utmp)) ==
		    sizeof(struct utmp) && utp->ut_host[0] == '\0' &&
d65 1
a65 2
		(void)lseek(fd, (off_t)(tty * sizeof(struct utmp)), SEEK_SET);
		(void)write(fd, utp, sizeof(struct utmp));
d68 1
a68 1
	if ((fd = open(_PATH_WTMP, O_WRONLY|O_APPEND, 0)) >= 0) {
@


1.9
log
@knf; otto ok
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.8 2003/06/02 20:18:42 millert Exp $	*/
a29 5

#if defined(LIBC_SCCS) && !defined(lint)
/* from: static char sccsid[] = "@@(#)login.c	8.1 (Berkeley) 6/4/93"; */
static const char rcsid[] = "$Id: login.c,v 1.8 2003/06/02 20:18:42 millert Exp $";
#endif /* LIBC_SCCS and not lint */
@


1.8
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.7 2002/06/09 22:18:43 fgsch Exp $	*/
d33 1
a33 1
static const char rcsid[] = "$Id: login.c,v 1.7 2002/06/09 22:18:43 fgsch Exp $";
d48 1
a48 2
login(utp)
	struct utmp *utp;
@


1.7
log
@some -Wall and spaces cleanup, scsi.c left.
some brave soul should look at it.
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.6 2001/02/05 09:46:50 deraadt Exp $	*/
d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
d33 1
a33 1
static const char rcsid[] = "$Id: login.c,v 1.6 2001/02/05 09:46:50 deraadt Exp $";
@


1.6
log
@please alpha
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.5 1998/07/13 02:11:12 millert Exp $	*/
d37 1
a37 1
static char *rcsid = "$Id: login.c,v 1.5 1998/07/13 02:11:12 millert Exp $";
@


1.5
log
@ftpd: sleep for an indeterminate amount for non-existant logins
      to simulate a crypt, like login does.
Use SEEK_* not L_* and kill some 0L's used in lseek while we're there.
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.4 1998/07/10 21:40:20 millert Exp $	*/
d37 1
a37 1
static char *rcsid = "$Id: login.c,v 1.4 1998/07/10 21:40:20 millert Exp $";
d47 1
@


1.4
log
@Prevent luser from zero'ing out ut_host.  If the new ut_line is
empty but the old one is not and ut_line and ut_name match, preserve
the old ut_line.  Fixes PR #516
@
text
@d1 1
a1 1
/*	$OpenBSD: login.c,v 1.3 1996/06/17 07:46:02 downsj Exp $	*/
d37 1
a37 1
static char *rcsid = "$Id: login.c,v 1.3 1996/06/17 07:46:02 downsj Exp $";
d60 1
a60 1
		(void)lseek(fd, (off_t)(tty * sizeof(struct utmp)), L_SET);
d72 1
a72 1
		(void)lseek(fd, (off_t)(tty * sizeof(struct utmp)), L_SET);
@


1.3
log
@util.h: new resting place
opendev.h: ok, so I merged it with util.h
opendev.h: use util.h
everything else: use "util.h"
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d37 1
a37 1
static char *rcsid = "$Id: login.c,v 1.2 1996/05/22 11:35:05 deraadt Exp $";
d51 2
a52 2
login(ut)
	struct utmp *ut;
d54 1
d59 1
a59 1
	if (tty > 0 && (fd = open(_PATH_UTMP, O_WRONLY|O_CREAT, 0644)) >= 0) {
d61 13
a73 1
		(void)write(fd, ut, sizeof(struct utmp));
d77 1
a77 1
		(void)write(fd, ut, sizeof(struct utmp));
@


1.2
log
@libutil
@
text
@d1 1
d37 1
a37 1
static char *rcsid = "$Id: login.c,v 1.1.1.1 1995/10/18 08:43:13 deraadt Exp $";
d47 2
a48 1
#include <util.h>
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
static char *rcsid = "$Id: login.c,v 1.5 1995/06/05 19:43:53 pk Exp $";
d46 1
a46 2

void login __P((struct utmp *));
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
