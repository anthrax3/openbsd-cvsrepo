head	1.19;
access;
symbols
	OPENBSD_6_2:1.19.0.6
	OPENBSD_6_2_BASE:1.19
	OPENBSD_6_1:1.19.0.8
	OPENBSD_6_1_BASE:1.19
	OPENBSD_6_0:1.19.0.4
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.18.0.12
	OPENBSD_5_8_BASE:1.18
	OPENBSD_5_7:1.18.0.4
	OPENBSD_5_7_BASE:1.18
	OPENBSD_5_6:1.18.0.8
	OPENBSD_5_6_BASE:1.18
	OPENBSD_5_5:1.18.0.6
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.2
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.17.0.24
	OPENBSD_5_3_BASE:1.17
	OPENBSD_5_2:1.17.0.22
	OPENBSD_5_2_BASE:1.17
	OPENBSD_5_1_BASE:1.17
	OPENBSD_5_1:1.17.0.20
	OPENBSD_5_0:1.17.0.18
	OPENBSD_5_0_BASE:1.17
	OPENBSD_4_9:1.17.0.16
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.17.0.14
	OPENBSD_4_8_BASE:1.17
	OPENBSD_4_7:1.17.0.10
	OPENBSD_4_7_BASE:1.17
	OPENBSD_4_6:1.17.0.12
	OPENBSD_4_6_BASE:1.17
	OPENBSD_4_5:1.17.0.8
	OPENBSD_4_5_BASE:1.17
	OPENBSD_4_4:1.17.0.6
	OPENBSD_4_4_BASE:1.17
	OPENBSD_4_3:1.17.0.4
	OPENBSD_4_3_BASE:1.17
	OPENBSD_4_2:1.17.0.2
	OPENBSD_4_2_BASE:1.17
	OPENBSD_4_1:1.16.0.6
	OPENBSD_4_1_BASE:1.16
	OPENBSD_4_0:1.16.0.4
	OPENBSD_4_0_BASE:1.16
	OPENBSD_3_9:1.16.0.2
	OPENBSD_3_9_BASE:1.16
	OPENBSD_3_8:1.15.0.10
	OPENBSD_3_8_BASE:1.15
	OPENBSD_3_7:1.15.0.8
	OPENBSD_3_7_BASE:1.15
	OPENBSD_3_6:1.15.0.6
	OPENBSD_3_6_BASE:1.15
	OPENBSD_3_5:1.15.0.4
	OPENBSD_3_5_BASE:1.15
	OPENBSD_3_4:1.15.0.2
	OPENBSD_3_4_BASE:1.15
	OPENBSD_3_3:1.14.0.2
	OPENBSD_3_3_BASE:1.14
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.11.0.2
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.2
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.7.0.2
	OPENBSD_2_6_BASE:1.7
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.2
	OPENBSD_2_3_BASE:1.1;
locks; strict;
comment	@# @;


1.19
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.18;
commitid	QU70QaxjyBAtj4Rv;

1.18
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2007.05.31.19.19.38;	author jmc;	state Exp;
branches;
next	1.16;

1.16
date	2005.10.12.16.30.06;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2003.05.23.12.31.32;	author jmc;	state Exp;
branches;
next	1.14;

1.14
date	2003.03.06.20.13.15;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.12;

1.12
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.11;

1.11
date	2001.01.07.18.29.58;	author naddy;	state Exp;
branches;
next	1.10;

1.10
date	2000.09.17.02.11.14;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.04.15.02.15.29;	author aaron;	state Exp;
branches;
next	1.8;

1.8
date	2000.03.28.22.41.42;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	99.09.21.04.52.46;	author csapuntz;	state Exp;
branches;
next	1.6;

1.6
date	99.07.09.13.35.28;	author aaron;	state Exp;
branches;
next	1.5;

1.5
date	99.07.07.14.22.26;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.07.10.50.06;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.06.05.04.16.08;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.06.08.20.28.29;	author brian;	state Exp;
branches;
next	1.1;

1.1
date	97.11.09.00.29.14;	author bri;	state Exp;
branches;
next	;


desc
@@


1.19
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@.\" $OpenBSD: uucplock.3,v 1.18 2013/06/05 03:40:26 tedu Exp $
.\"
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE DEVELOPERS ``AS IS'' AND ANY EXPRESS OR
.\" IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES
.\" OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
.\" IN NO EVENT SHALL THE DEVELOPERS BE LIABLE FOR ANY DIRECT, INDIRECT,
.\" INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
.\" DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
.\" THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
.\" (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF
.\" THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.\" "
.Dd $Mdocdate: June 5 2013 $
.Dt UU_LOCK 3
.Os
.Sh NAME
.Nm uu_lock ,
.Nm uu_unlock ,
.Nm uu_lockerr ,
.Nm uu_lock_txfr
.Nd acquire and release control of a serial device
.Sh SYNOPSIS
.In sys/types.h
.In util.h
.Ft int
.Fn uu_lock "const char *ttyname"
.Ft int
.Fn uu_lock_txfr "const char *ttyname" "pid_t pid"
.Ft int
.Fn uu_unlock "const char *ttyname"
.Ft const char *
.Fn uu_lockerr "int uu_lockresult"
.Sh DESCRIPTION
The
.Fn uu_lock
function attempts to create a lock file called
.Pa /var/spool/lock/LCK..
with a suffix given by the passed
.Fa ttyname .
If the file already exists, it is expected to contain the process
ID of the locking program.
.Pp
If the file does not already exist, or the owning process given by
the process ID found in the lock file is no longer running,
.Fn uu_lock
will write its own process ID into the file and return success.
.Pp
.Fn uu_lock_txfr
transfers lock ownership to another process.
.Fn uu_lock
must have previously been successful.
.Pp
.Fn uu_unlock
removes the lockfile created by
.Fn uu_lock
for the given
.Fa ttyname .
Care should be taken that
.Fn uu_lock
was successful before calling
.Fn uu_unlock .
.Pp
.Fn uu_lockerr
returns an error string representing the error
.Fa uu_lockresult ,
as returned from
.Fn uu_lock .
.Sh RETURN VALUES
.Fn uu_unlock
returns 0 on success and \-1 on failure.
.Pp
.Fn uu_lock
may return any of the following values:
.Pp
.Dv UU_LOCK_INUSE :
The lock is in use by another process.
.Pp
.Dv UU_LOCK_OK :
The lock was successfully created.
.Pp
.Dv UU_LOCK_OPEN_ERR :
The lock file could not be opened via
.Xr open 2 .
.Pp
.Dv UU_LOCK_READ_ERR :
The lock file could not be read via
.Xr read 2 .
.Pp
.Dv UU_LOCK_CREAT_ERR :
Can't create temporary lock file via
.Xr creat 3 .
.Pp
.Dv UU_LOCK_WRITE_ERR :
The current process ID could not be written to the lock file via a call to
.Xr write 2 .
.Pp
.Dv UU_LOCK_LINK_ERR :
Can't link temporary lock file via
.Xr link 2 .
.Pp
.Dv UU_LOCK_TRY_ERR :
Locking attempts are failed after 5 tries.
.Pp
If a value of
.Dv UU_LOCK_OK
is passed to
.Fn uu_lockerr ,
an empty string is returned.
Otherwise, a string specifying
the reason for failure is returned.
.Fn uu_lockerr
uses the current value of
.Va errno
to determine the exact error.
Care should be made not to allow
.Va errno
to be changed between calls to
.Fn uu_lock
and
.Fn uu_lockerr .
.Pp
.Fn uu_lock_txfr
may return any of the following values:
.Pp
.Dv UU_LOCK_OK :
The transfer was successful.
The specified process now holds the device lock.
.Pp
.Dv UU_LOCK_OWNER_ERR :
The current process does not already own a lock on the specified device.
.Pp
.Dv UU_LOCK_WRITE_ERR :
The new process ID could not be written to the lock file via a call to
.Xr write 2 .
.Sh ERRORS
If
.Fn uu_lock
returns one of the error values above, the global value
.Va errno
can be used to determine the cause.
Refer to the respective manual pages for further details.
.Pp
.Fn uu_unlock
will set the global variable
.Va errno
to reflect the reason that the lock file could not be removed.
Refer to the description of
.Xr unlink 2
for further details.
.Sh SEE ALSO
.Xr lseek 2 ,
.Xr open 2 ,
.Xr read 2 ,
.Xr write 2
.Sh BUGS
It is possible that a stale lock is not recognised as such if a new
process is assigned the same process ID as the program that left
the stale lock.
.Pp
The calling process must have write permissions to the
.Pa /var/spool/lock
directory.
There is no mechanism in place to ensure that the
permissions of this directory are the same as those of the
serial devices that might be locked.
@


1.18
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.17 2007/05/31 19:19:38 jmc Exp $
d26 2
a27 2
.Dd $Mdocdate: May 31 2007 $
.Dt UUCPLOCK 3
@


1.17
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.16 2005/10/12 16:30:06 jmc Exp $
d26 1
a26 1
.Dd $Mdocdate$
d36 2
a37 2
.Fd #include <sys/types.h>
.Fd #include <util.h>
@


1.16
log
@add uu_lock_txfr to .Nm list;
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.15 2003/05/23 12:31:32 jmc Exp $
d26 1
a26 1
.Dd March 30, 1997
@


1.15
log
@- typos
- new sentence, new line
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.14 2003/03/06 20:13:15 jmc Exp $
d32 2
a33 1
.Nm uu_lockerr
@


1.14
log
@.Xr typos;

ok deraadt@@
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.13 2002/05/01 08:03:30 mpech Exp $
d53 1
a53 1
id of the locking program.
@


1.13
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.12 2001/08/06 10:42:26 mpech Exp $
d103 1
a103 1
.Xr creat 2 .
@


1.12
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.11 2001/01/07 18:29:58 naddy Exp $
d126 2
a127 1
to determine the exact error.  Care should be made not to allow
d138 2
a139 2
The transfer was successful.  The specified process now holds the device
lock.
d152 2
a153 2
can be used to determine the cause.  Refer to the respective manual pages
for further details.
d174 2
a175 1
directory.  There is no mechanism in place to ensure that the
@


1.11
log
@libutil.h -> util.h
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.10 2000/09/17 02:11:14 aaron Exp $
a44 1
.Pp
@


1.10
log
@Arguments to .Dt macros should be all-caps.
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.9 2000/04/15 02:15:29 aaron Exp $
d36 1
a36 1
.Fd #include <libutil.h>
@


1.9
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.8 2000/03/28 22:41:42 deraadt Exp $
d27 1
a27 1
.Dt uucplock 3
@


1.8
log
@no need to spec the link path
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.7 1999/09/21 04:52:46 csapuntz Exp $
d88 1
a88 1
.Dv UU_LOCK_INUSE:
d91 1
a91 1
.Dv UU_LOCK_OK:
d94 1
a94 1
.Dv UU_LOCK_OPEN_ERR:
d98 1
a98 1
.Dv UU_LOCK_READ_ERR:
d102 1
a102 1
.Dv UU_LOCK_CREAT_ERR:
d106 1
a106 1
.Dv UU_LOCK_WRITE_ERR:
d110 1
a110 1
.Dv UU_LOCK_LINK_ERR:
d114 1
a114 1
.Dv UU_LOCK_TRY_ERR:
d137 1
a137 1
.Dv UU_LOCK_OK:
d141 1
a141 1
.Dv UU_LOCK_OWNER_ERR:
d144 1
a144 1
.Dv UU_LOCK_WRITE_ERR:
@


1.7
log
@

Add opendisk from NetBSD.

Add OpenBSD tags to files
@
text
@d1 1
a1 1
.\" $OpenBSD: uucplock.3,v 1.6 1999/07/09 13:35:28 aaron Exp $
a45 5
Link with
.Va -lutil
on the
.Xr cc 1
command line.
@


1.6
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a24 1
.\" $Id: uucplock.3,v 1.5 1999/07/07 14:22:26 aaron Exp $
@


1.5
log
@when using `-' as a negative sign, escape it with a backslash so troff knows
it's not supposed to be a hyphen/dash
@
text
@d1 1
a1 1
.\" 
d3 1
a3 1
.\" 
d23 2
a24 2
.\" 
.\" $Id: uucplock.3,v 1.4 1999/07/07 10:50:06 aaron Exp $
d30 1
a30 1
.Nm uu_lock , 
@


1.4
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d24 1
a24 1
.\" $Id: uucplock.3,v 1.3 1999/06/05 04:16:08 aaron Exp $
d88 1
a88 1
returns 0 on success and -1 on failure.
@


1.3
log
@capitalize the acronym ID
@
text
@d24 1
a24 1
.\" $Id: uucplock.3,v 1.2 1998/06/08 20:28:29 brian Exp $
d27 1
a28 1
.Dt uucplock 3
@


1.2
log
@Add uu_lock_txfr() for donating locks to another process.
Reviewed by: Theo
@
text
@d24 1
a24 1
.\" $Id: uucplock.3,v 1.1 1997/11/09 00:29:14 bri Exp $
d62 1
a62 1
the process id found in the lock file is no longer running,
d64 1
a64 1
will write its own process id into the file and return success.
d112 1
a112 1
The current process id could not be written to the lock file via a call to
d150 1
a150 1
The new process id could not be written to the lock file via a call to
d174 1
a174 1
processes is assigned the same processes id as the program that left
@


1.1
log
@Introduce uu_lock(), uu_unlock() and uu_lockerr()
into libutil.
Obtained from: FreeBSD
Reviewed by: Theo
@
text
@d24 1
a24 1
.\" $Id: uucplock.3,v 1.10 1997/10/07 07:24:50 joerg Exp $
d40 2
d66 5
d138 14
d155 1
a155 1
returns one of the four error values above, the global value
@

