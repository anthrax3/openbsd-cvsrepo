head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2008.09.06.12.17.54;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.29.05.39.32;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.35;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.04.29.05.37.29;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.52;	author djm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@resolve conflicts
@
text
@#!/bin/sh

testsrc=Makefile
test=./p
cmd="../util/shlib_wrap.sh ../apps/openssl"

cat $testsrc >$test;

echo cat
$cmd enc < $test > $test.cipher
$cmd enc < $test.cipher >$test.clear
cmp $test $test.clear
if [ $? != 0 ]
then
	exit 1
else
	/bin/rm $test.cipher $test.clear
fi
echo base64
$cmd enc -a -e < $test > $test.cipher
$cmd enc -a -d < $test.cipher >$test.clear
cmp $test $test.clear
if [ $? != 0 ]
then
	exit 1
else
	/bin/rm $test.cipher $test.clear
fi

for i in `$cmd list-cipher-commands`
do
	echo $i
	$cmd $i -bufsize 113 -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -d -k test < $test.$i.cipher >$test.$i.clear
	cmp $test $test.$i.clear
	if [ $? != 0 ]
	then
		exit 1
	else
		/bin/rm $test.$i.cipher $test.$i.clear
	fi

	echo $i base64
	$cmd $i -bufsize 113 -a -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -a -d -k test < $test.$i.cipher >$test.$i.clear
	cmp $test $test.$i.clear
	if [ $? != 0 ]
	then
		exit 1
	else
		/bin/rm $test.$i.cipher $test.$i.clear
	fi
done
rm -f $test
@


1.3
log
@resolve conflicts
@
text
@d10 2
a11 2
$cmd enc -non-fips-allow < $test > $test.cipher
$cmd enc -non-fips-allow < $test.cipher >$test.clear
d20 2
a21 2
$cmd enc -non-fips-allow -a -e < $test > $test.cipher
$cmd enc -non-fips-allow -a -d < $test.cipher >$test.clear
d33 2
a34 2
	$cmd $i -non-fips-allow -bufsize 113 -e -k test < $test > $test.$i.cipher
	$cmd $i -non-fips-allow -bufsize 157 -d -k test < $test.$i.cipher >$test.$i.clear
d44 2
a45 2
	$cmd $i -non-fips-allow -bufsize 113 -a -e -k test < $test > $test.$i.cipher
	$cmd $i -non-fips-allow -bufsize 157 -a -d -k test < $test.$i.cipher >$test.$i.clear
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d3 1
a3 1
testsrc=Makefile.ssl
d5 1
a5 1
cmd=../apps/openssl
d10 2
a11 2
$cmd enc < $test > $test.cipher
$cmd enc < $test.cipher >$test.clear
d20 2
a21 2
$cmd enc -a -e < $test > $test.cipher
$cmd enc -a -d < $test.cipher >$test.clear
d33 2
a34 2
	$cmd $i -bufsize 113 -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -d -k test < $test.$i.cipher >$test.$i.clear
d44 2
a45 2
	$cmd $i -bufsize 113 -a -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -a -d -k test < $test.$i.cipher >$test.$i.clear
@


1.1
log
@Initial revision
@
text
@d5 1
a5 1
cmd=../apps/ssleay
d30 1
a30 9
for i in rc4 \
	des-cfb des-ede-cfb des-ede3-cfb \
	des-ofb des-ede-ofb des-ede3-ofb \
	des-ecb des-ede des-ede3 desx \
	des-cbc des-ede-cbc des-ede3-cbc \
	idea-ecb idea-cfb idea-ofb idea-cbc \
	rc2-ecb rc2-cfb rc2-ofb rc2-cbc \
	bf-ecb bf-cfb bf-ofb bf-cbc rc4 \
	cast5-ecb cast5-cfb cast5-ofb cast5-cbc
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d5 1
a5 1
cmd=../apps/openssl
d30 9
a38 1
for i in `$cmd list-cipher-commands`
@


1.1.1.3
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d3 1
a3 1
testsrc=Makefile
d5 1
a5 1
cmd="../util/shlib_wrap.sh ../apps/openssl"
d10 2
a11 2
$cmd enc -non-fips-allow < $test > $test.cipher
$cmd enc -non-fips-allow < $test.cipher >$test.clear
d20 2
a21 2
$cmd enc -non-fips-allow -a -e < $test > $test.cipher
$cmd enc -non-fips-allow -a -d < $test.cipher >$test.clear
d33 2
a34 2
	$cmd $i -non-fips-allow -bufsize 113 -e -k test < $test > $test.$i.cipher
	$cmd $i -non-fips-allow -bufsize 157 -d -k test < $test.$i.cipher >$test.$i.clear
d44 2
a45 2
	$cmd $i -non-fips-allow -bufsize 113 -a -e -k test < $test > $test.$i.cipher
	$cmd $i -non-fips-allow -bufsize 157 -a -d -k test < $test.$i.cipher >$test.$i.clear
@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@d10 2
a11 2
$cmd enc < $test > $test.cipher
$cmd enc < $test.cipher >$test.clear
d20 2
a21 2
$cmd enc -a -e < $test > $test.cipher
$cmd enc -a -d < $test.cipher >$test.clear
d33 2
a34 2
	$cmd $i -bufsize 113 -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -d -k test < $test.$i.cipher >$test.$i.clear
d44 2
a45 2
	$cmd $i -bufsize 113 -a -e -k test < $test > $test.$i.cipher
	$cmd $i -bufsize 157 -a -d -k test < $test.$i.cipher >$test.$i.clear
@


