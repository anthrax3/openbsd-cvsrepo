head	1.5;
access;
symbols;
locks; strict;
comment	@# @;


1.5
date	2008.09.06.12.17.54;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.05.39.32;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.10.16.31.57;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.37;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.46;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.05.22.44.52;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.04.29.05.37.30;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.06.12.15.52;	author djm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@resolve conflicts
@
text
@#!/bin/sh

cmd='../util/shlib_wrap.sh ../apps/openssl x509'

if [ "$1"x != "x" ]; then
	t=$1
else
	t=testx509.pem
fi

echo testing X509 conversions
cp $t fff.p

echo "p -> d"
$cmd -in fff.p -inform p -outform d >f.d
if [ $? != 0 ]; then exit 1; fi
echo "p -> n"
$cmd -in fff.p -inform p -outform n >f.n
if [ $? != 0 ]; then exit 1; fi
echo "p -> p"
$cmd -in fff.p -inform p -outform p >f.p
if [ $? != 0 ]; then exit 1; fi

echo "d -> d"
$cmd -in f.d -inform d -outform d >ff.d1
if [ $? != 0 ]; then exit 1; fi
echo "n -> d"
$cmd -in f.n -inform n -outform d >ff.d2
if [ $? != 0 ]; then exit 1; fi
echo "p -> d"
$cmd -in f.p -inform p -outform d >ff.d3
if [ $? != 0 ]; then exit 1; fi

echo "d -> n"
$cmd -in f.d -inform d -outform n >ff.n1
if [ $? != 0 ]; then exit 1; fi
echo "n -> n"
$cmd -in f.n -inform n -outform n >ff.n2
if [ $? != 0 ]; then exit 1; fi
echo "p -> n"
$cmd -in f.p -inform p -outform n >ff.n3
if [ $? != 0 ]; then exit 1; fi

echo "d -> p"
$cmd -in f.d -inform d -outform p >ff.p1
if [ $? != 0 ]; then exit 1; fi
echo "n -> p"
$cmd -in f.n -inform n -outform p >ff.p2
if [ $? != 0 ]; then exit 1; fi
echo "p -> p"
$cmd -in f.p -inform p -outform p >ff.p3
if [ $? != 0 ]; then exit 1; fi

cmp fff.p f.p
if [ $? != 0 ]; then exit 1; fi
cmp fff.p ff.p1
if [ $? != 0 ]; then exit 1; fi
cmp fff.p ff.p2
if [ $? != 0 ]; then exit 1; fi
cmp fff.p ff.p3
if [ $? != 0 ]; then exit 1; fi

cmp f.n ff.n1
if [ $? != 0 ]; then exit 1; fi
cmp f.n ff.n2
if [ $? != 0 ]; then exit 1; fi
cmp f.n ff.n3
if [ $? != 0 ]; then exit 1; fi

cmp f.p ff.p1
if [ $? != 0 ]; then exit 1; fi
cmp f.p ff.p2
if [ $? != 0 ]; then exit 1; fi
cmp f.p ff.p3
if [ $? != 0 ]; then exit 1; fi

/bin/rm -f f.* ff.* fff.*
exit 0
@


1.4
log
@resolve conflicts
@
text
@a2 7
if test "$OSTYPE" = msdosdjgpp; then
    PATH=../apps\;$PATH
else
    PATH=../apps:$PATH
fi
export PATH

@


1.3
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d10 1
a10 1
cmd='../apps/openssl x509'
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d3 5
a7 1
PATH=../apps:$PATH
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
cmd='../apps/ssleay x509'
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d6 1
a6 1
cmd='../apps/openssl x509'
@


1.1.1.3
log
@import openssl-0.9.7-beta3
@
text
@d3 1
a3 5
if test "$OSTYPE" = msdosdjgpp; then
    PATH=../apps\;$PATH
else
    PATH=../apps:$PATH
fi
@


1.1.1.4
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d10 1
a10 1
cmd='../util/shlib_wrap.sh ../apps/openssl x509'
@


1.1.1.5
log
@import of OpenSSL 0.9.8h
@
text
@d3 7
@


