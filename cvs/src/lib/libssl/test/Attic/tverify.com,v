head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	openssl_1_0_1_c:1.1.1.5
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	openssl_1_0_0_f:1.1.1.5
	openssl_1_0_0_e:1.1.1.5
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	openssh_1_0_0_a:1.1.1.4
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.3
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.1.0.24
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.22
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.20
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.18
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.13.15.25.35;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2011.11.03.02.34.33;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.27.05.07.03;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.29.05.39.32;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.37.37;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.46;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.30;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.06.27.05.05.39;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2011.11.03.02.32.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! TVERIFY.COM
$
$	__arch = "VAX"
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. "64") then __arch = __arch+ "_64"
$!
$	line_max = 255 ! Could be longer on modern non-VAX.
$	temp_file_name = "certs_"+ f$getjpi( "", "PID")+ ".tmp"
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$	cmd = "mcr ''exe_dir'openssl verify ""-CAfile"" ''temp_file_name'"
$	cmd_len = f$length( cmd)
$	pems = "[-.certs...]*.pem"
$!
$!	Concatenate all the certificate files.
$!
$	copy /concatenate 'pems' 'temp_file_name'
$!
$!	Loop through all the certificate files.
$!
$	args = ""
$	old_f = ""
$ loop_file: 
$	    f = f$search( pems)
$	    if ((f .nes. "") .and. (f .nes. old_f))
$	    then
$	      old_f = f
$!
$!	      If this file name would over-extend the command line, then
$!	      run the command now.
$!
$	      if (cmd_len+ f$length( args)+ 1+ f$length( f) .gt. line_max)
$	      then
$	         if (args .eqs. "") then goto disaster
$	         'cmd''args'
$	         args = ""
$	      endif
$!	      Add the next file to the argument list.
$	      args = args+ " "+ f
$	   else
$!            No more files in the list
$	      goto loop_file_end
$	   endif
$	goto loop_file
$	loop_file_end:
$!
$!	Run the command for any left-over arguments.
$!
$	if (args .nes. "")
$	then
$	   'cmd''args'
$	endif
$!
$!	Delete the temporary file.
$!
$	if (f$search( "''temp_file_name';*") .nes. "") then -
	 delete 'temp_file_name';*
$!
$	exit
$!
$	disaster:
$	write sys$output "   Command line too long.  Doomed."
$!
@


1.5
log
@openssl-1.0.0e: resolve conflicts
@
text
@@


1.4
log
@resolve conflicts, fix local changes
@
text
@d3 1
a3 1
$	__arch := VAX
d6 3
a8 1
$	if __arch .eqs. "" then __arch := UNK
d12 1
a12 1
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
d24 1
a24 1
$	old_f :=
@


1.3
log
@resolve conflicts
@
text
@d4 6
a9 1
$	if f$getsyi("cpu") .ge. 128 then __arch := AXP
d11 11
a21 3
$
$	copy/concatenate [-.certs]*.pem certs.tmp
$
d23 27
a49 7
$ loop_certs:
$	verify := NO
$	more := YES
$	certs :=
$ loop_certs2:
$	f = f$search("[-.certs]*.pem")
$	if f .nes. "" .and. f .nes. old_f
d51 1
a51 5
$	    certs = certs + " [-.certs]" + f$parse(f,,,"NAME") + ".pem"
$	    verify := YES
$	    if f$length(certs) .lt. 180 then goto loop_certs2
$	else
$	    more := NO
d53 11
a63 6
$	certs = certs - " "
$
$	if verify then mcr 'exe_dir'openssl verify "-CAfile" certs.tmp 'certs'
$	if more then goto loop_certs
$
$	delete certs.tmp;*
@


1.2
log
@resolve conflicts
@
text
@d11 2
a12 1
$	c := NO
d19 1
a19 1
$	    c := YES
d21 2
d26 2
a27 5
$	if c
$	then
$	    mcr 'exe_dir'openssl verify "-CAfile" certs.tmp 'certs'
$	    goto loop_certs
$	endif
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d18 1
a19 1
$	    c := YES
d23 5
a27 2
$	mcr 'exe_dir'openssl verify "-CAfile" certs.tmp 'certs'
$	if c then goto loop_certs
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d18 1
a19 1
$	    if f$length(certs) .lt. 180 then goto loop_certs2
d23 2
a24 5
$	if c
$	then
$	    mcr 'exe_dir'openssl verify "-CAfile" certs.tmp 'certs'
$	    goto loop_certs
$	endif
@


1.1.1.3
log
@import of openssl-0.9.7j
@
text
@d11 1
a11 2
$	verify := NO
$	more := YES
d18 1
a18 1
$	    verify := YES
a19 2
$	else
$	    more := NO
d23 5
a27 2
$	if verify then mcr 'exe_dir'openssl verify "-CAfile" certs.tmp 'certs'
$	if more then goto loop_certs
@


1.1.1.4
log
@import OpenSSL-1.0.0a
@
text
@d4 1
a4 6
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch := UNK
$!
$	line_max = 255 ! Could be longer on modern non-VAX.
$	temp_file_name = "certs_"+ f$getjpi( "", "PID")+ ".tmp"
d6 3
a8 11
$	cmd = "mcr ''exe_dir'openssl verify ""-CAfile"" ''temp_file_name'"
$	cmd_len = f$length( cmd)
$	pems = "[-.certs...]*.pem"
$!
$!	Concatenate all the certificate files.
$!
$	copy /concatenate 'pems' 'temp_file_name'
$!
$!	Loop through all the certificate files.
$!
$	args = ""
d10 7
a16 27
$ loop_file: 
$	    f = f$search( pems)
$	    if ((f .nes. "") .and. (f .nes. old_f))
$	    then
$	      old_f = f
$!
$!	      If this file name would over-extend the command line, then
$!	      run the command now.
$!
$	      if (cmd_len+ f$length( args)+ 1+ f$length( f) .gt. line_max)
$	      then
$	         if (args .eqs. "") then goto disaster
$	         'cmd''args'
$	         args = ""
$	      endif
$!	      Add the next file to the argument list.
$	      args = args+ " "+ f
$	   else
$!            No more files in the list
$	      goto loop_file_end
$	   endif
$	goto loop_file
$	loop_file_end:
$!
$!	Run the command for any left-over arguments.
$!
$	if (args .nes. "")
d18 5
a22 1
$	   'cmd''args'
d24 6
a29 11
$!
$!	Delete the temporary file.
$!
$	if (f$search( "''temp_file_name';*") .nes. "") then -
	 delete 'temp_file_name';*
$!
$	exit
$!
$	disaster:
$	write sys$output "   Command line too long.  Doomed."
$!
@


1.1.1.5
log
@import OpenSSL 1.0.0e
@
text
@d3 1
a3 1
$	__arch = "VAX"
d6 1
a6 3
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. "64") then __arch = __arch+ "_64"
d10 1
a10 1
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
d22 1
a22 1
$	old_f = ""
@


