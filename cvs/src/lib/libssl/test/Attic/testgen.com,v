head	1.6;
access;
symbols
	OPENBSD_5_5:1.5.0.12
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.8
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.5.0.6
	OPENBSD_5_3_BASE:1.5
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.5.0.2
	OPENBSD_5_2_BASE:1.5
	OPENBSD_5_1_BASE:1.5
	OPENBSD_5_1:1.5.0.4
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.3.0.34
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.30
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.32
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.3.0.28
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.26
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.24
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.22
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.20
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.18
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.3.0.16
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.14
	OPENBSD_3_8_BASE:1.3
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.3.0.12
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.13.15.25.35;	author miod;	state dead;
branches;
next	1.5;

1.5
date	2011.11.03.02.34.33;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.03.21.43.59;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.13.43;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.37.35;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.11.03.02.32.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! TESTGEN.COM
$
$	__arch = "VAX"
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch = "UNK"
$	if (p1 .eqs. 64) then __arch = __arch+ "_64"
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$
$	T = "testcert"
$	KEY = 512
$	CA = "[-.certs]testca.pem"
$
$	set noon
$	if f$search(T+".1;*") .nes. "" then delete 'T'.1;*
$	if f$search(T+".2;*") .nes. "" then delete 'T'.2;*
$	if f$search(T+".key;*") .nes. "" then delete 'T'.key;*
$	set on
$
$	write sys$output "generating certificate request"
$
$	append/new nl: .rnd
$	open/append random_file .rnd
$	write random_file -
	 "string to make the random number generator think it has entropy"
$	close random_file
$
$	set noon
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	save_severity=$SEVERITY
$	set on
$	if save_severity
$	then
$	    req_new="-newkey dsa:[-.apps]dsa512.pem"
$	else
$	    req_new="-new"
$	    write sys$output -
	     "There should be a 2 sequences of .'s and some +'s."
$	    write sys$output -
	     "There should not be more that at most 80 per line"
$	endif
$
$	write sys$output "This could take some time."
$
$	mcr 'exe_dir'openssl req -config test.cnf 'req_new' -out testreq.pem
$	if $severity .ne. 1
$	then
$	    write sys$output "problems creating request"
$	    exit 3
$	endif
$
$	mcr 'exe_dir'openssl req -config test.cnf -verify -in testreq.pem -noout
$	if $severity .ne. 1
$	then
$	    write sys$output "signature on req is wrong"
$	    exit 3
$	endif
@


1.5
log
@openssl-1.0.0e: resolve conflicts
@
text
@@


1.4
log
@resolve conflicts, fix local changes
@
text
@d1 1
a1 1
$! TETSGEN.COM
d3 1
a3 1
$	__arch := VAX
d6 3
a8 2
$	if __arch .eqs. "" then __arch := UNK
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
d10 1
a10 1
$	T := testcert
d12 1
a12 1
$	CA := [-.certs]testca.pem
d24 2
a25 1
$	write random_file "string to make the random number generator think it has entropy"
d38 4
a41 2
$	    write sys$output "There should be a 2 sequences of .'s and some +'s."
$	    write sys$output "There should not be more that at most 80 per line"
@


1.3
log
@sync these files with openssl-0.9.7-beta1, too
@
text
@d4 3
a6 1
$	if f$getsyi("cpu") .ge. 128 then __arch := AXP
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@a18 4
$	write sys$output "There should be a 2 sequences of .'s and some +'s."
$	write sys$output "There should not be more that at most 80 per line"
$	write sys$output "This could take some time."
$
d24 17
a40 1
$	mcr 'exe_dir'openssl req -config test.cnf -new -out testreq.pem
d47 1
a47 1
$	mcr 'exe_dir'openssl req -verify -in testreq.pem -noout
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d23 5
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d19 2
a20 19
$	append/new nl: .rnd
$	open/append random_file .rnd
$	write random_file "string to make the random number generator think it has entropy"
$	close random_file
$
$	set noon
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	save_severity=$SEVERITY
$	set on
$	if save_severity
$	then
$	    req_new="-newkey dsa:[-.apps]dsa512.pem"
$	else
$	    req_new="-new"
$	    write sys$output "There should be a 2 sequences of .'s and some +'s."
$	    write sys$output "There should not be more that at most 80 per line"
$	endif
$
d23 1
a23 1
$	mcr 'exe_dir'openssl req -config test.cnf 'req_new' -out testreq.pem
d30 1
a30 1
$	mcr 'exe_dir'openssl req -config test.cnf -verify -in testreq.pem -noout
@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@d4 1
a4 3
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch := UNK
@


1.1.1.3
log
@import OpenSSL 1.0.0e
@
text
@d1 1
a1 1
$! TESTGEN.COM
d3 1
a3 1
$	__arch = "VAX"
d6 2
a7 3
$	if __arch .eqs. "" then __arch = "UNK"
$	if (p1 .eqs. 64) then __arch = __arch+ "_64"
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
d9 1
a9 1
$	T = "testcert"
d11 1
a11 1
$	CA = "[-.certs]testca.pem"
d23 1
a23 2
$	write random_file -
	 "string to make the random number generator think it has entropy"
d36 2
a37 4
$	    write sys$output -
	     "There should be a 2 sequences of .'s and some +'s."
$	    write sys$output -
	     "There should not be more that at most 80 per line"
@


