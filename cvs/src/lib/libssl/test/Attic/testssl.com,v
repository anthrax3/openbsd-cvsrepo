head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	openssl_1_0_1_c:1.1.1.4
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	openssl_1_0_0_f:1.1.1.4
	openssl_1_0_0_e:1.1.1.4
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	openssh_1_0_0_a:1.1.1.3
	OPENBSD_4_8:1.4.0.30
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.26
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.28
	OPENBSD_4_6_BASE:1.4
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.4.0.24
	OPENBSD_4_5_BASE:1.4
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.4
	OPENBSD_4_4:1.4.0.22
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.20
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.18
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.16
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.14
	OPENBSD_4_0_BASE:1.4
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.4.0.12
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.10
	OPENBSD_3_8_BASE:1.4
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.4.0.8
	OPENBSD_3_7_BASE:1.4
	OPENBSD_3_6:1.4.0.6
	OPENBSD_3_6_BASE:1.4
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.4.0.4
	OPENBSD_3_5_BASE:1.4
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.4.0.2
	OPENBSD_3_4_BASE:1.4
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.13.15.25.35;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2011.11.03.02.34.33;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.12.02.18.40;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.03.21.43.59;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.13.43;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.37.36;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.21.36.52;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2011.11.03.02.32.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! TESTSSL.COM
$
$	__arch = "VAX"
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p4 .eqs. "64") then __arch = __arch+ "_64"
$!
$	texe_dir = "sys$disk:[-.''__arch'.exe.test]"
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$
$	if p1 .eqs. ""
$	then
$	    key="[-.apps]server.pem"
$	else
$	    key=p1
$	endif
$	if p2 .eqs. ""
$	then
$	    cert="[-.apps]server.pem"
$	else
$	    cert=p2
$	endif
$	ssltest = "mcr ''texe_dir'ssltest -key ''key'"+ -
	 " -cert ''cert' -c_key ''key' -c_cert ''cert'"
$!
$	set noon
$	define/user sys$output testssl-x509-output.
$	define/user sys$error nla0:
$	mcr 'exe_dir'openssl x509 -in 'cert' -text -noout
$	define/user sys$error nla0:
$	search/output=nla0: testssl-x509-output. "DSA Public Key"/exact
$	if $severity .eq. 1
$	then
$	    dsa_cert = "YES"
$	else
$	    dsa_cert = "NO"
$	endif
$	delete testssl-x509-output.;*
$
$	if p3 .eqs. ""
$	then
$	    copy/concatenate [-.certs]*.pem certs.tmp
$	    CA = """-CAfile"" certs.tmp"
$	else
$	    CA = """-CAfile"" "+p3
$	endif
$
$!###########################################################################
$
$	write sys$output "test sslv2"
$	'ssltest' -ssl2
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2 with server authentication"
$	'ssltest' -ssl2 -server_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2 with client authentication"
$	    'ssltest' -ssl2 -client_auth 'CA'
$	    if $severity .ne. 1 then goto exit3
$
$	    write sys$output "test sslv2 with both client and server authentication"
$	    'ssltest' -ssl2 -server_auth -client_auth 'CA'
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	write sys$output "test sslv3"
$	'ssltest' -ssl3
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv3 with server authentication"
$	'ssltest' -ssl3 -server_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv3 with client authentication"
$	'ssltest' -ssl3 -client_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv3 with both client and server authentication"
$	'ssltest' -ssl3 -server_auth -client_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3"
$	'ssltest'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with server authentication"
$	'ssltest' -server_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with client authentication"
$	'ssltest' -client_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with both client and server authentication"
$	'ssltest' -server_auth -client_auth 'CA'
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2 via BIO pair"
$	'ssltest' -bio_pair -ssl2 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2 with server authentication via BIO pair"
$	'ssltest' -bio_pair -ssl2 -server_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2 with client authentication via BIO pair"
$	    'ssltest' -bio_pair -ssl2 -client_auth 'CA' 
$	    if $severity .ne. 1 then goto exit3
$
$	    write sys$output "test sslv2 with both client and server authentication via BIO pair"
$	    'ssltest' -bio_pair -ssl2 -server_auth -client_auth 'CA' 
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	write sys$output "test sslv3 via BIO pair"
$	'ssltest' -bio_pair -ssl3 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv3 with server authentication via BIO pair"
$	'ssltest' -bio_pair -ssl3 -server_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv3 with client authentication via BIO pair"
$	'ssltest' -bio_pair -ssl3 -client_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
 
$	write sys$output "test sslv3 with both client and server authentication via BIO pair"
$	'ssltest' -bio_pair -ssl3 -server_auth -client_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 via BIO pair"
$	'ssltest' 
$	if $severity .ne. 1 then goto exit3
$
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2/sslv3 w/o DHE via BIO pair"
$	    'ssltest' -bio_pair -no_dhe
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	write sys$output "test sslv2/sslv3 with 1024 bit DHE via BIO pair"
$	'ssltest' -bio_pair -dhe1024dsa -v
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with server authentication"
$	'ssltest' -bio_pair -server_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with client authentication via BIO pair"
$	'ssltest' -bio_pair -client_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with both client and server authentication via BIO pair"
$	'ssltest' -bio_pair -server_auth -client_auth 'CA' 
$	if $severity .ne. 1 then goto exit3
$
$!###########################################################################
$
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	no_rsa=$SEVERITY
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-dh
$	no_dh=$SEVERITY
$
$	if no_dh
$	then
$	    write sys$output "skipping anonymous DH tests"
$	else
$	    write sys$output "test tls1 with 1024bit anonymous DH, multiple handshakes"
$	    'ssltest' -v -bio_pair -tls1 -cipher "ADH" -dhe1024dsa -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	if no_rsa
$	then
$	    write sys$output "skipping RSA tests"
$	else
$	    write sys$output "test tls1 with 1024bit RSA, no DHE, multiple handshakes"
$	    mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -no_dhe -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
$
$	    if no_dh
$	    then
$		write sys$output "skipping RSA+DHE tests"
$	    else
$		write sys$output "test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes"
$		mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -dhe1024dsa -num 10 -f -time
$		if $severity .ne. 1 then goto exit3
$	    endif
$	endif
$
$	RET = 1
$	goto exit
$ exit3:
$	RET = 3
$ exit:
$	if p3 .eqs. "" then delete certs.tmp;*
$	set on
$	exit 'RET'
@


1.6
log
@openssl-1.0.0e: resolve conflicts
@
text
@@


1.5
log
@resolve conflicts, fix local changes
@
text
@d3 1
a3 1
$	__arch := VAX
d6 6
a11 3
$	if __arch .eqs. "" then __arch := UNK
$	texe_dir := sys$disk:[-.'__arch'.exe.test]
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
d25 4
a28 2
$	ssltest := mcr 'texe_dir'ssltest -key 'key' -cert 'cert' -c_key 'key' -c_cert 'cert'
$
a31 1
$	set noon
d36 1
a36 1
$	    dsa_cert := YES
d38 1
a38 1
$	    dsa_cert := NO
a39 1
$	set on
a166 1
$	set noon
a172 1
$	set on
d207 1
@


1.4
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d4 3
a6 1
$	if f$getsyi("cpu") .ge. 128 then __arch := AXP
@


1.3
log
@sync these files with openssl-0.9.7-beta1, too
@
text
@a161 4
$	write sys$output "test tls1 with 1024bit anonymous DH, multiple handshakes"
$	'ssltest' -v -bio_pair -tls1 -cipher "ADH" -dhe1024dsa -num 10 -f -time
$	if $severity .ne. 1 then goto exit3
$
d165 4
a168 1
$	save_severity=$SEVERITY
d170 11
a180 1
$	if save_severity
d188 8
a195 3
$	    write sys$output "test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes"
$	    mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -dhe1024dsa -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d5 2
a6 1
$	exe_dir := sys$disk:[-.'__arch'.exe.test]
d8 38
a45 1
$	copy/concatenate [-.certs]*.pem certs.tmp
d48 1
a48 1
$	mcr 'exe_dir'ssltest -ssl2
d52 1
a52 5
$	mcr 'exe_dir'ssltest -ssl2 -server_auth "-CAfile" certs.tmp
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2 with client authentication"
$	mcr 'exe_dir'ssltest -ssl2 -client_auth "-CAfile" certs.tmp
d55 10
a64 3
$	write sys$output "test sslv2 with both client and server authentication"
$	mcr 'exe_dir'ssltest -ssl2 -server_auth -client_auth "-CAfile" certs.tmp
$	if $severity .ne. 1 then goto exit3
d67 1
a67 1
$	mcr 'exe_dir'ssltest -ssl3
d71 1
a71 1
$	mcr 'exe_dir'ssltest -ssl3 -server_auth "-CAfile" certs.tmp
d75 1
a75 1
$	mcr 'exe_dir'ssltest -ssl3 -client_auth "-CAfile" certs.tmp
d79 1
a79 1
$	mcr 'exe_dir'ssltest -ssl3 -server_auth -client_auth "-CAfile" certs.tmp
d83 1
a83 1
$	mcr 'exe_dir'ssltest
d87 1
a87 1
$	mcr 'exe_dir'ssltest -server_auth "-CAfile" certs.tmp
d91 1
a91 1
$	mcr 'exe_dir'ssltest -client_auth "-CAfile" certs.tmp
d95 1
a95 1
$	mcr 'exe_dir'ssltest -server_auth -client_auth "-CAfile" certs.tmp
d99 1
a99 5
$	mcr 'exe_dir'ssltest -bio_pair -ssl2 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2/sslv3 with 1024 bit DHE via BIO pair"
$	mcr 'exe_dir'ssltest -bio_pair -dhe1024 -v
d103 1
a103 5
$	mcr 'exe_dir'ssltest -bio_pair -ssl2 -server_auth "-CAfile" certs.tmp 
$	if $severity .ne. 1 then goto exit3
$
$	write sys$output "test sslv2 with client authentication via BIO pair"
$	mcr 'exe_dir'ssltest -bio_pair -ssl2 -client_auth "-CAfile" certs.tmp 
d106 10
a115 3
$	write sys$output "test sslv2 with both client and server authentication via BIO pair"
$	mcr 'exe_dir'ssltest -bio_pair -ssl2 -server_auth -client_auth "-CAfile" certs.tmp 
$	if $severity .ne. 1 then goto exit3
d118 1
a118 1
$	mcr 'exe_dir'ssltest -bio_pair -ssl3 
d122 1
a122 1
$	mcr 'exe_dir'ssltest -bio_pair -ssl3 -server_auth "-CAfile" certs.tmp 
d126 1
a126 1
$	mcr 'exe_dir'ssltest -bio_pair -ssl3 -client_auth "-CAfile" certs.tmp 
d130 1
a130 1
$	mcr 'exe_dir'ssltest -bio_pair -ssl3 -server_auth -client_auth "-CAfile" certs.tmp 
d134 1
a134 1
$	mcr 'exe_dir'ssltest 
d137 9
a145 2
$	write sys$output "test sslv2/sslv3 w/o DHE via BIO pair"
$	mcr 'exe_dir'ssltest -bio_pair -no_dhe
d149 1
a149 1
$	mcr 'exe_dir'ssltest -bio_pair -server_auth "-CAfile" certs.tmp 
d153 1
a153 1
$	mcr 'exe_dir'ssltest -bio_pair -client_auth "-CAfile" certs.tmp 
d157 1
a157 1
$	mcr 'exe_dir'ssltest -bio_pair -server_auth -client_auth "-CAfile" certs.tmp 
d160 24
d189 1
a189 1
$	delete certs.tmp;*
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d61 4
d95 4
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d5 1
a5 2
$	texe_dir := sys$disk:[-.'__arch'.exe.test]
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
d7 1
a7 38
$	if p1 .eqs. ""
$	then
$	    key="[-.apps]server.pem"
$	else
$	    key=p1
$	endif
$	if p2 .eqs. ""
$	then
$	    cert="[-.apps]server.pem"
$	else
$	    cert=p2
$	endif
$	ssltest := mcr 'texe_dir'ssltest -key 'key' -cert 'cert' -c_key 'key' -c_cert 'cert'
$
$	define/user sys$output testssl-x509-output.
$	define/user sys$error nla0:
$	mcr 'exe_dir'openssl x509 -in 'cert' -text -noout
$	set noon
$	define/user sys$error nla0:
$	search/output=nla0: testssl-x509-output. "DSA Public Key"/exact
$	if $severity .eq. 1
$	then
$	    dsa_cert := YES
$	else
$	    dsa_cert := NO
$	endif
$	set on
$	delete testssl-x509-output.;*
$
$	if p3 .eqs. ""
$	then
$	    copy/concatenate [-.certs]*.pem certs.tmp
$	    CA = """-CAfile"" certs.tmp"
$	else
$	    CA = """-CAfile"" "+p3
$	endif
$
$!###########################################################################
d10 1
a10 1
$	'ssltest' -ssl2
d14 5
a18 1
$	'ssltest' -ssl2 -server_auth 'CA'
d21 3
a23 10
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2 with client authentication"
$	    'ssltest' -ssl2 -client_auth 'CA'
$	    if $severity .ne. 1 then goto exit3
$
$	    write sys$output "test sslv2 with both client and server authentication"
$	    'ssltest' -ssl2 -server_auth -client_auth 'CA'
$	    if $severity .ne. 1 then goto exit3
$	endif
d26 1
a26 1
$	'ssltest' -ssl3
d30 1
a30 1
$	'ssltest' -ssl3 -server_auth 'CA'
d34 1
a34 1
$	'ssltest' -ssl3 -client_auth 'CA'
d38 1
a38 1
$	'ssltest' -ssl3 -server_auth -client_auth 'CA'
d42 1
a42 1
$	'ssltest'
d46 1
a46 1
$	'ssltest' -server_auth 'CA'
d50 1
a50 1
$	'ssltest' -client_auth 'CA'
d54 1
a54 1
$	'ssltest' -server_auth -client_auth 'CA'
d58 1
a58 1
$	'ssltest' -bio_pair -ssl2 
d62 1
a62 1
$	'ssltest' -bio_pair -ssl2 -server_auth 'CA' 
d65 7
a71 10
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2 with client authentication via BIO pair"
$	    'ssltest' -bio_pair -ssl2 -client_auth 'CA' 
$	    if $severity .ne. 1 then goto exit3
$
$	    write sys$output "test sslv2 with both client and server authentication via BIO pair"
$	    'ssltest' -bio_pair -ssl2 -server_auth -client_auth 'CA' 
$	    if $severity .ne. 1 then goto exit3
$	endif
d74 1
a74 1
$	'ssltest' -bio_pair -ssl3 
d78 1
a78 1
$	'ssltest' -bio_pair -ssl3 -server_auth 'CA' 
d82 1
a82 1
$	'ssltest' -bio_pair -ssl3 -client_auth 'CA' 
d86 1
a86 1
$	'ssltest' -bio_pair -ssl3 -server_auth -client_auth 'CA' 
d90 1
a90 12
$	'ssltest' 
$	if $severity .ne. 1 then goto exit3
$
$	if .not. dsa_cert
$	then
$	    write sys$output "test sslv2/sslv3 w/o DHE via BIO pair"
$	    'ssltest' -bio_pair -no_dhe
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	write sys$output "test sslv2/sslv3 with 1024 bit DHE via BIO pair"
$	'ssltest' -bio_pair -dhe1024dsa -v
d94 1
a94 1
$	'ssltest' -bio_pair -server_auth 'CA' 
d98 1
a98 1
$	'ssltest' -bio_pair -client_auth 'CA' 
d102 1
a102 1
$	'ssltest' -bio_pair -server_auth -client_auth 'CA' 
a104 24
$!###########################################################################
$
$	write sys$output "test tls1 with 1024bit anonymous DH, multiple handshakes"
$	'ssltest' -v -bio_pair -tls1 -cipher "ADH" -dhe1024dsa -num 10 -f -time
$	if $severity .ne. 1 then goto exit3
$
$	set noon
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	save_severity=$SEVERITY
$	set on
$	if save_severity
$	then
$	    write sys$output "skipping RSA tests"
$	else
$	    write sys$output "test tls1 with 1024bit RSA, no DHE, multiple handshakes"
$	    mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -no_dhe -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
$
$	    write sys$output "test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes"
$	    mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -dhe1024dsa -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
$	endif
$
d110 1
a110 1
$	if p3 .eqs. "" then delete certs.tmp;*
@


1.1.1.2
log
@import 0.9.7b (without idea and rc5)
@
text
@d162 4
d169 1
a169 4
$	no_rsa=$SEVERITY
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-dh
$	no_dh=$SEVERITY
d171 1
a171 11
$
$	if no_dh
$	then
$	    write sys$output "skipping anonymous DH tests"
$	else
$	    write sys$output "test tls1 with 1024bit anonymous DH, multiple handshakes"
$	    'ssltest' -v -bio_pair -tls1 -cipher "ADH" -dhe1024dsa -num 10 -f -time
$	    if $severity .ne. 1 then goto exit3
$	endif
$
$	if no_rsa
d179 3
a181 8
$	    if no_dh
$	    then
$		write sys$output "skipping RSA+DHE tests"
$	    else
$		write sys$output "test tls1 with 1024bit RSA, 1024bit DHE, multiple handshakes"
$		mcr 'texe_dir'ssltest -v -bio_pair -tls1 -cert [-.apps]server2.pem -dhe1024dsa -num 10 -f -time
$		if $severity .ne. 1 then goto exit3
$	    endif
@


1.1.1.3
log
@import OpenSSL-1.0.0a
@
text
@d4 1
a4 3
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch := UNK
@


1.1.1.4
log
@import OpenSSL 1.0.0e
@
text
@d3 1
a3 1
$	__arch = "VAX"
d6 3
a8 6
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p4 .eqs. "64") then __arch = __arch+ "_64"
$!
$	texe_dir = "sys$disk:[-.''__arch'.exe.test]"
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
d22 2
a23 4
$	ssltest = "mcr ''texe_dir'ssltest -key ''key'"+ -
	 " -cert ''cert' -c_key ''key' -c_cert ''cert'"
$!
$	set noon
d27 1
d32 1
a32 1
$	    dsa_cert = "YES"
d34 1
a34 1
$	    dsa_cert = "NO"
d36 1
d164 1
d171 1
a205 1
$	set on
@


