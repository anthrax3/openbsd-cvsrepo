head	1.11;
access;
symbols
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.11
date	2001.01.31.20.49.11;	author brad;	state dead;
branches;
next	1.10;

1.10
date	2000.10.13.21.31.30;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	99.10.10.21.32.02;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	99.09.29.04.37.45;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	99.02.01.16.46.34;	author pefo;	state Exp;
branches;
next	1.6;

1.6
date	98.11.29.23.29.40;	author millert;	state Exp;
branches;
next	1.5;

1.5
date	98.10.12.05.26.13;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	98.10.08.17.51.49;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.10.08.17.32.01;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.10.06.17.55.42;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.16;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.16;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.11
log
@remove old infrastructure which is not used anymore. Ok'd by beck@@
@
text
@
LIB=	ssl

SSLEAYDIST= src-patent

LSSL_SRC= ${.CURDIR}/../${SSLEAYDIST}/ssl
LCRYPTO_SRC= ${.CURDIR}/../${SSLEAYDIST}/crypto

.if ${MACHINE_ARCH} == "i386"
CFLAGS+= -DL_ENDIAN -DBN_ASM
.else
.if ${MACHINE_ARCH} == "mips"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "vax"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "alpha"
# no ENDIAN stuff defined for alpha
.else
CFLAGS+= -DB_ENDIAN
.endif
.endif
.endif 
.endif 

CFLAGS+= -DNO_IDEA -DTERMIOS -DANSI_SOURCE 
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}/include

SRCS=	bio_ssl.c s2_clnt.c s3_both.c s3_srvr.c ssl_err2.c ssl_txt.c	\
	t1_srvr.c s23_clnt.c s2_enc.c s3_clnt.c ssl_algs.c ssl_lib.c	\
	ssltest.c s23_lib.c s2_lib.c s3_enc.c ssl_asn1.c ssl_rsa.c	\
	t1_clnt.c s23_meth.c s2_meth.c s3_lib.c ssl_cert.c ssl_sess.c	\
	t1_enc.c s23_pkt.c s2_pkt.c s3_meth.c ssl_ciph.c ssl_stat.c	\
	t1_lib.c s23_srvr.c s2_srvr.c s3_pkt.c ssl_err.c \
	t1_meth.c

HDRS=	ssl.h ssl2.h ssl3.h ssl23.h ssl_locl.h tls1.h

.PATH:	${LSSL_SRC}

includes:
	@@test -d ${DESTDIR}/usr/include/ssl || mkdir ${DESTDIR}/usr/include/ssl
	@@d=`mktemp -d /tmp/libsslXXXXXXXXXX`; \
	cd ${LSSL_SRC}; for i in $(HDRS); do \
		f=`basename $$i`; \
		j="sed 's/<openssl/<ssl/' \
		       $$i >$$d/$$f && \
		(cmp -s $$d/$$f ${DESTDIR}/usr/include/ssl/$$f || \
		${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
		$$d/$$f ${DESTDIR}/usr/include/ssl)"; \
		echo $$j; \
		eval "$$j"; \
	done; \
	rm -rf $$d

.include <bsd.lib.mk>





@


1.10
log
@vax support; checked by beck.
@
text
@@


1.9
log
@Make mips compile. -moj
@
text
@d15 3
d24 1
@


1.8
log
@OpenSSL 0.9.4 merge
@
text
@d12 1
a12 4
.if ${MACHINE_ARCH} == "arc"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "pmax"
a18 1
.endif
@


1.7
log
@There must be a better way...
@
text
@d12 1
a12 1
.if ${MACHINE} == "arc"
d15 1
a15 4
.if ${MACHINE} == "galileo"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE} == "pmax"
a24 1
.endif
d28 1
a28 42
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}
CFLAGS+= -I${LSSL_SRC} -I${LCRYPTO_SRC}
CFLAGS+= -I${LCRYPTO_SRC}/md2
CFLAGS+= -I${LCRYPTO_SRC}/md5
CFLAGS+= -I${LCRYPTO_SRC}/sha
CFLAGS+= -I${LCRYPTO_SRC}/mdc2
CFLAGS+= -I${LCRYPTO_SRC}/hmac
CFLAGS+= -I${LCRYPTO_SRC}/ripemd
CFLAGS+= -I${LCRYPTO_SRC}/des
CFLAGS+= -I${LCRYPTO_SRC}/rc2
CFLAGS+= -I${LCRYPTO_SRC}/rc4
CFLAGS+= -I${LCRYPTO_SRC}/rc5
CFLAGS+= -I${LCRYPTO_SRC}/idea
CFLAGS+= -I${LCRYPTO_SRC}/bf
CFLAGS+= -I${LCRYPTO_SRC}/cast
CFLAGS+= -I${LCRYPTO_SRC}/bn
CFLAGS+= -I${LCRYPTO_SRC}/rsa
CFLAGS+= -I${LCRYPTO_SRC}/dsa
CFLAGS+= -I${LCRYPTO_SRC}/dh
CFLAGS+= -I${LCRYPTO_SRC}/buffer
CFLAGS+= -I${LCRYPTO_SRC}/bio
CFLAGS+= -I${LCRYPTO_SRC}/stack
CFLAGS+= -I${LCRYPTO_SRC}/lhash
CFLAGS+= -I${LCRYPTO_SRC}/rand
CFLAGS+= -I${LCRYPTO_SRC}/err
CFLAGS+= -I${LCRYPTO_SRC}/objects
CFLAGS+= -I${LCRYPTO_SRC}/evp
CFLAGS+= -I${LCRYPTO_SRC}/pem
CFLAGS+= -I${LCRYPTO_SRC}/asn1
CFLAGS+= -I${LCRYPTO_SRC}/x509
CFLAGS+= -I${LCRYPTO_SRC}/conf
CFLAGS+= -I${LCRYPTO_SRC}/txt_db
CFLAGS+= -I${LCRYPTO_SRC}/pkcs7

SRCS=	s2_meth.c   s2_srvr.c s2_clnt.c  s2_lib.c  s2_enc.c s2_pkt.c \
	s3_meth.c   s3_srvr.c s3_clnt.c  s3_lib.c  s3_enc.c s3_pkt.c s3_both.c \
	s23_meth.c s23_srvr.c s23_clnt.c s23_lib.c          s23_pkt.c \
	t1_meth.c   t1_srvr.c t1_clnt.c  t1_lib.c  t1_enc.c \
	ssl_lib.c ssl_err2.c ssl_cert.c ssl_sess.c \
	ssl_ciph.c ssl_stat.c ssl_rsa.c \
	ssl_asn1.c ssl_txt.c ssl_algs.c \
	bio_ssl.c ssl_err.c
d30 9
a38 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h tls1.h
d44 6
a49 2
	@@cd ${LSSL_SRC}; for i in $(HDRS); do \
		j="cmp -s $$i ${DESTDIR}/usr/include/ssl/`basename $$i` || \
d51 1
a51 1
		$$i ${DESTDIR}/usr/include/ssl"; \
d54 7
a60 1
	done
a62 1
.include <bsd.lib.mk>
@


1.6
log
@create ${DESTDIR}/usr/include/ssl if it does not exist.  This is needed because the mtree is done after "make includes"
@
text
@d12 1
a12 1
.if ${MACHINE_ARCH} == "arc"
d15 4
a18 1
.if ${MACHINE_ARCH} == "pmax"
d25 1
@


1.5
log
@*UNTESTED* Makefile and configure changes that may work with pmax and arc.
*These need to be tested by someone who has one!!*
@
text
@d76 1
@


1.4
log
@back out previous change.  Theo says:
marc, this is wrong.
mtree builds that directory.  we never do mkdir's in makefiles.
You also should not have modified ANY of those Makefiles, since they are
part of the ssl distribution.  please undo this change.

And I say: developers, be sure to do a mkdir /usr/include/ssl before
a bake build as include files are installed as the 2nd step.
@
text
@d12 6
d24 3
@


1.3
log
@create /usr/include/ssl before trying to copy files into it.
If you've had a recent build fail check /usr/include/ssl.
if it is a file instead of a directory remove it and try again
after updating with these changes.
@
text
@a66 1
	@@install -d -o ${BINOWN} -g ${BINGRP} -m 755 ${DESTDIR}/usr/include/ssl
@


1.2
log
@Fix makefile problems - Don't use SSLeay style include link farm to
build - get includes from where they really live.
@
text
@d67 1
@


1.1
log
@Initial revision
@
text
@d7 1
a7 2
SSLEAY_INC= ${.CURDIR}/../${SSLEAYDIST}/include
LCRYPTO_INC= ${.CURDIR}/../${SSLEAYDIST}/crypto
d19 33
a51 1
CFLAGS+= -I${LSSL_SRC} -I${SSLEAY_INC} -I${LCRYPTO_INC}
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
