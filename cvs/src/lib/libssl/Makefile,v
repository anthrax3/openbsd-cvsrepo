head	1.38;
access;
symbols
	OPENBSD_6_2:1.38.0.4
	OPENBSD_6_2_BASE:1.38
	OPENBSD_6_1:1.32.0.4
	OPENBSD_6_1_BASE:1.32
	OPENBSD_6_0:1.19.0.10
	OPENBSD_6_0_BASE:1.19
	OPENBSD_5_9:1.19.0.2
	OPENBSD_5_9_BASE:1.19
	OPENBSD_5_8:1.19.0.8
	OPENBSD_5_8_BASE:1.19
	OPENBSD_5_7:1.19.0.6
	OPENBSD_5_7_BASE:1.19
	OPENBSD_5_6:1.19.0.4
	OPENBSD_5_6_BASE:1.19
	OPENBSD_5_5:1.18.0.14
	OPENBSD_5_5_BASE:1.18
	OPENBSD_5_4:1.18.0.10
	OPENBSD_5_4_BASE:1.18
	OPENBSD_5_3:1.18.0.8
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.6
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.4
	OPENBSD_5_0:1.18.0.2
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.17.0.2
	OPENBSD_4_9_BASE:1.17
	OPENBSD_4_8:1.14.0.22
	OPENBSD_4_8_BASE:1.14
	OPENBSD_4_7:1.14.0.18
	OPENBSD_4_7_BASE:1.14
	OPENBSD_4_6:1.14.0.20
	OPENBSD_4_6_BASE:1.14
	OPENBSD_4_5:1.14.0.16
	OPENBSD_4_5_BASE:1.14
	pre_openssl_0_9_8h:1.14
	OPENBSD_4_4:1.14.0.14
	OPENBSD_4_4_BASE:1.14
	OPENBSD_4_3:1.14.0.12
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.10
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.14.0.8
	OPENBSD_4_1_BASE:1.14
	OPENBSD_4_0:1.14.0.6
	OPENBSD_4_0_BASE:1.14
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENBSD_3_7:1.13.0.12
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.10
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.8
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.13.0.6
	OPENBSD_3_4_BASE:1.13
	OPENBSD_3_3:1.13.0.4
	OPENBSD_3_3_BASE:1.13
	OPENBSD_3_2:1.13.0.2
	OPENBSD_3_2_BASE:1.13
	OPENBSD_3_1:1.7.0.6
	OPENBSD_3_1_BASE:1.7
	OPENBSD_3_0:1.7.0.4
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.7.0.2
	OPENBSD_2_9_BASE:1.7
	OPENBSD_2_8:1.6.0.8
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.6
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.6.0.4
	OPENBSD_2_6_BASE:1.6
	OPENBSD_2_5:1.6.0.2
	OPENBSD_2_5_BASE:1.6
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.38
date	2017.08.13.19.42.33;	author doug;	state Exp;
branches;
next	1.37;
commitid	cQ5YQMaT2TzOGU8U;

1.37
date	2017.07.24.17.10.31;	author jsing;	state Exp;
branches;
next	1.36;
commitid	R1xjgozDDdxwLxCa;

1.36
date	2017.07.16.18.14.37;	author jsing;	state Exp;
branches;
next	1.35;
commitid	x7hgjU5VqATSUFb2;

1.35
date	2017.04.30.04.44.58;	author jsing;	state Exp;
branches;
next	1.34;
commitid	YA2aSxfm4jHnoH7k;

1.34
date	2017.04.29.22.31.42;	author beck;	state Exp;
branches;
next	1.33;
commitid	f4aGDiruwMb6syzh;

1.33
date	2017.04.29.22.22.24;	author beck;	state Exp;
branches;
next	1.32;
commitid	KNf7VrkYbO8CzvLK;

1.32
date	2017.03.05.14.39.53;	author jsing;	state Exp;
branches;
next	1.31;
commitid	ws87QY8nHNtKAMYH;

1.31
date	2017.01.26.09.16.01;	author jsing;	state Exp;
branches;
next	1.30;
commitid	1eVyciBGvTRTMFeM;

1.30
date	2017.01.26.06.01.44;	author jsing;	state Exp;
branches;
next	1.29;
commitid	8wsXMIqjV5DtyRam;

1.29
date	2017.01.26.05.51.54;	author jsing;	state Exp;
branches;
next	1.28;
commitid	UfCZ8lEOJI6kLTjE;

1.28
date	2017.01.26.05.31.25;	author jsing;	state Exp;
branches;
next	1.27;
commitid	GRopTNgx07uByytM;

1.27
date	2016.11.05.15.32.19;	author schwarze;	state Exp;
branches;
next	1.26;
commitid	ZM7UFzG8SDjLS2hv;

1.26
date	2016.11.05.15.01.54;	author schwarze;	state Exp;
branches;
next	1.25;
commitid	pbUUraKzwO4wmmyx;

1.25
date	2016.11.05.08.12.22;	author jsing;	state Exp;
branches;
next	1.24;
commitid	GQjBNMwBDcy2FY02;

1.24
date	2016.11.04.18.28.58;	author guenther;	state Exp;
branches;
next	1.23;
commitid	ZlRy5iKYWHc9l7Fq;

1.23
date	2016.09.19.03.25.22;	author bcook;	state Exp;
branches;
next	1.22;
commitid	oEbqxDlL3ibozicj;

1.22
date	2016.09.14.06.26.03;	author natano;	state Exp;
branches;
next	1.21;
commitid	NbvBwJJcB21JqIOO;

1.21
date	2016.09.04.09.54.25;	author natano;	state Exp;
branches;
next	1.20;
commitid	j8zuNlBiRSrQjS9G;

1.20
date	2016.09.03.12.42.42;	author beck;	state Exp;
branches;
next	1.19;
commitid	ZatneQfeB0kphH3I;

1.19
date	2014.04.11.22.51.53;	author miod;	state Exp;
branches;
next	1.18;

1.18
date	2011.05.26.13.52.55;	author jasper;	state Exp;
branches;
next	1.17;

1.17
date	2011.01.21.09.24.45;	author jasper;	state Exp;
branches;
next	1.16;

1.16
date	2010.12.28.20.07.47;	author jasper;	state Exp;
branches;
next	1.15;

1.15
date	2010.12.28.14.30.50;	author jasper;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.01.05.31.40;	author beck;	state Exp;
branches;
next	1.13;

1.13
date	2002.09.03.18.59.55;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2002.08.30.15.08.11;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2002.08.30.10.24.16;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2002.06.07.06.26.17;	author beck;	state Exp;
branches;
next	1.9;

1.9
date	2002.06.07.03.45.32;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.01.01.35.36;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2001.01.31.20.49.09;	author brad;	state Exp;
branches;
next	1.6;

1.6
date	99.03.17.18.25.56;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.03.17.02.46.51;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	99.03.16.19.48.07;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	99.03.16.07.25.13;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	98.10.07.01.43.03;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.28;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.28;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.38
log
@Switch to -Werror with clang for libressl.

Discussed with beck@@ and jsing@@
ok beck@@
@
text
@# $OpenBSD: Makefile,v 1.37 2017/07/24 17:10:31 jsing Exp $

.include <bsd.own.mk>
.ifndef NOMAN
SUBDIR=	man
.endif

PC_FILES=openssl.pc libssl.pc

CLEANFILES=${PC_FILES} ${VERSION_SCRIPT}

LIB=	ssl

CFLAGS+= -Wall -Wundef
.if ${COMPILER_VERSION:L} == "clang"
CFLAGS+= -Werror
.endif
CFLAGS+= -DLIBRESSL_INTERNAL

CFLAGS+= -I${.CURDIR}

LDADD+= -L${BSDOBJDIR}/lib/libcrypto -lcrypto

VERSION_SCRIPT=	Symbols.map
SYMBOL_LIST=	${.CURDIR}/Symbols.list

SRCS= \
	ssl_srvr.c ssl_clnt.c s3_lib.c ssl_pkt.c ssl_both.c \
	t1_meth.c t1_srvr.c t1_clnt.c t1_lib.c t1_enc.c t1_hash.c \
	d1_meth.c d1_srvr.c d1_clnt.c d1_lib.c d1_pkt.c \
	d1_both.c d1_enc.c d1_srtp.c \
	ssl_lib.c ssl_cert.c ssl_sess.c \
	ssl_ciph.c ssl_stat.c ssl_rsa.c \
	ssl_asn1.c ssl_txt.c ssl_algs.c \
	bio_ssl.c ssl_err.c \
	ssl_packet.c ssl_tlsext.c ssl_versions.c pqueue.c
SRCS+=	s3_cbc.c
SRCS+=	bs_ber.c bs_cbb.c bs_cbs.c

HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h

.PATH:	${.CURDIR}

includes:
	@@test -d ${DESTDIR}/usr/include/openssl || \
	    mkdir ${DESTDIR}/usr/include/openssl
	@@cd ${.CURDIR}; for i in $(HDRS); do \
	    j="cmp -s $$i ${DESTDIR}/usr/include/openssl/`basename $$i` || \
	    ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 $$i\
		${DESTDIR}/usr/include/openssl"; \
	    echo $$j; \
	    eval "$$j"; \
	done;

${VERSION_SCRIPT}: ${SYMBOL_LIST}
	{ printf '{\n\tglobal:\n'; \
	  sed '/^[._a-zA-Z]/s/$$/;/; s/^/		/' ${SYMBOL_LIST}; \
	  printf '\n\tlocal:\n\t\t*;\n};\n'; } >$@@.tmp && mv $@@.tmp $@@

.include <bsd.lib.mk>

all: ${PC_FILES}
${PC_FILES}: ${.CURDIR}/../libcrypto/opensslv.h
	/bin/sh ${.CURDIR}/generate_pkgconfig.sh -c ${.CURDIR} -o ${.OBJDIR}

beforeinstall:
	nm -o lib${LIB}.a | egrep -w 'printf|fprintf' && \
	    (echo please fix stdio usage in this library; false) || true
.for p in ${PC_FILES}
	${INSTALL} ${INSTALL_COPY} -o root -g ${SHAREGRP} \
	    -m ${SHAREMODE} ${.OBJDIR}/$p ${DESTDIR}/usr/lib/pkgconfig/
.endfor

.include <bsd.prog.mk>
.include <bsd.subdir.mk>
@


1.37
log
@Rewrite the TLS Renegotiation Indication extension handling using CBB/CBS
and the new extension framework.

Feedback from doug@@

ok inoguchi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2017/07/16 18:14:37 jsing Exp $
d15 1
a15 1
.if ${COMPILER_VERSION:L} == "gcc4"
@


1.36
log
@Start rewriting TLS extension handling.

Introduce a TLS extension handling framework that has per-extension type
functions to determine if an extension is needed, to build the extension
data and parse the extension data. This is somewhat analogous to BoringSSL,
however these build and parse functions are intentionally symetrical. The
framework is hooked into the existing TLS handling code in such a way that
we can gradual convert the extension handling code.

Convert the TLS Server Name Indication extension to the new framework,
while rewriting it to use CBB/CBS and be more strict in the process.

Discussed with beck@@

ok inoguchi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2017/04/30 04:44:58 jsing Exp $
d35 1
a35 1
	bio_ssl.c ssl_err.c t1_reneg.c \
@


1.35
log
@Only enable -Werror on libcrypto/libssl/libtls if we are building with
gcc4. This should avoid failed builds while transitioning compilers.
While here also make the CFLAGS blocks consistent across makefiles.

Discussed with deraadt@@, ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2017/04/29 22:31:42 beck Exp $
d36 1
a36 1
	ssl_packet.c ssl_versions.c pqueue.c
@


1.34
log
@Revert previous - we still want to do this, but I forgot about the installer
and want to avoid the wrath of theo when he arrives home in a couple
of hours :)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2017/03/05 14:39:53 jsing Exp $
d15 1
a15 1
.if ${COMPILER_VERSION:L} != "gcc3"
d19 1
@


1.33
log
@We now require you to have a working libpthread
@
text
@a21 1
LDADD+= -L${BSDOBJDIR}/lib/libpthread -lpthread
@


1.32
log
@Provide a rolling handshake hash that commences as soon as the cipher
suite has been selected, and convert the final finish MAC to use this
handshake hash.

This is a first step towards cleaning up the current handshake
buffer/digest code.

ok beck@@ inoguchi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2017/01/26 09:16:01 jsing Exp $
d22 1
@


1.31
log
@Merge the single two line function from ssl_err2.c into ssl_err.c.

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2017/01/26 06:01:44 jsing Exp $
d28 1
a28 1
	t1_meth.c t1_srvr.c t1_clnt.c t1_lib.c t1_enc.c \
@


1.30
log
@Move relatively new version range code from ssl_lib.c into a separate
ssl_versions.c file.

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2017/01/26 05:51:54 jsing Exp $
d31 1
a31 1
	ssl_lib.c ssl_err2.c ssl_cert.c ssl_sess.c \
@


1.29
log
@Rename s3_{both,clnt,pkt_srvr}.c to have an ssl_ prefix since they are no
longer SSLv3 code.

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2017/01/26 05:31:25 jsing Exp $
d35 1
a35 1
	ssl_packet.c pqueue.c
@


1.28
log
@Merge the client/server version negotiation into the existing (currently
fixed version) client/server code.

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2016/11/05 15:32:19 schwarze Exp $
d27 1
a27 1
	s3_srvr.c s3_clnt.c s3_lib.c s3_pkt.c s3_both.c \
@


1.27
log
@move manual pages from doc/ to man/ for consistency with other
libraries, in particular considering that there are unrelated
files in doc/; requested by jsing@@ and beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2016/11/05 15:01:54 schwarze Exp $
d26 1
a26 1
SRCS=\
a27 1
	s23_srvr.c s23_clnt.c s23_lib.c s23_pkt.c \
d35 1
a35 1
	pqueue.c
@


1.26
log
@after getting rid of the pod files, clean up the Makefiles; ok bcook@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.25 2016/11/05 08:12:22 jsing Exp $
d5 1
a5 1
SUBDIR=	doc
@


1.25
log
@Remove generated Symbols.map on make clean.

ok guenther@@
@
text
@d1 6
a6 1
# $OpenBSD: Makefile,v 1.24 2016/11/04 18:28:58 guenther Exp $
a7 1
SUBDIR= man
a13 1
.include <bsd.own.mk>
@


1.24
log
@Add an explict list of exported symbols with just the functions
declared in the public headers, and use __{BEGIN,END}_HIDDEN_DECLS
in the internal headers to optimize internal functions

ok jsing@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2016/09/19 03:25:22 bcook Exp $
d6 1
a6 1
CLEANFILES=${PC_FILES}
@


1.23
log
@Update ld search path for libssl/libcrypto, fixes cross-build after source moved.

from Patrick Wildt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2016/09/14 06:26:03 natano Exp $
d20 3
d51 5
@


1.22
log
@Generate pkg-config files at build time like everything else. This
avoids permission problems due to the build and install stages being run
by different users.

ok deraadt jasper
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2016/09/04 09:54:25 natano Exp $
d18 1
a18 1
LDADD+= -L${BSDOBJDIR}/lib/libcrypto/crypto -lcrypto
d34 1
a34 1
HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h 
@


1.21
log
@only regen pkg-config files when required; ok jasper
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2016/09/02 17:00:14 beck Exp $
d51 1
d55 1
a55 1
beforeinstall: ${PC_FILES}
@


1.20
log
@Make tree build again
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2014/04/11 22:51:53 miod Exp $
d51 4
a54 1
beforeinstall:
a56 1
	/bin/sh ${.CURDIR}/generate_pkgconfig.sh -c ${.CURDIR} -o ${.OBJDIR}
@


1.19
log
@Move build machinery for libcrypto from libssl/crypto to libcrypto, as well
as configuration files; split manpages and .pc files between libcrypto and
libssl.
No functional change, only there to make engineering easier, and libcrypto
sources are still found in libssl/src/crypto at the moment.

ok reyk@@, also discussed with deraadt@@ beck@@ and the usual crypto suspects.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2011/05/26 13:52:55 jasper Exp $
d3 1
a3 1
SUBDIR=ssl man
d8 43
d52 2
@


1.18
log
@remove hack to test and create /usr/lib/pkgconfig/ if needed, it's been six
months since it was introduced so it's safe to assume people have this dir now.

    ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2011/01/21 09:24:45 jasper Exp $
d3 2
a4 2
SUBDIR=crypto ssl man
PC_FILES=openssl.pc libssl.pc libcrypto.pc
a6 8

distribution:
	${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m 444 \
	   ${.CURDIR}/openssl.cnf ${DESTDIR}/etc/ssl/openssl.cnf && \
	${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m 444 \
	   ${.CURDIR}/cert.pem ${DESTDIR}/etc/ssl/cert.pem && \
	${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m 444 \
	   ${.CURDIR}/x509v3.cnf ${DESTDIR}/etc/ssl/x509v3.cnf
@


1.17
log
@- simplify, krb5 handling is not needed.

prompted by brad
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2010/12/28 20:07:47 jasper Exp $
a17 2
	[ -d ${DESTDIR}/usr/lib/pkgconfig/ ] || \
		${INSTALL} -o root -g ${SHAREGRP} -d ${DESTDIR}/usr/lib/pkgconfig/
@


1.16
log
@- ensure ${DESTDIR}/usr/lib/pkgconfig/ as running make distrib-dirs is not
common/encouraged practice
@
text
@d1 1
a1 3
# $OpenBSD: Makefile,v 1.15 2010/12/28 14:30:50 jasper Exp $

.include <bsd.own.mk> # for KERBEROS5
a16 3
.if (${KERBEROS5:L} == "yes")
	/bin/sh ${.CURDIR}/generate_pkgconfig.sh -c ${.CURDIR} -o ${.OBJDIR} -k
.else
a17 1
.endif
@


1.15
log
@- generate and install pkg-config files for openssl, which more and more
projects depend on being present (e.g. various ports).

as discussed with various porters in a hungarian spa
help/feedback from ingo@@ and also OK halex@@
no objections from djm@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.14 2005/04/01 05:31:40 beck Exp $
d24 2
a25 1

@


1.14
log
@Add a reasonably sane CA bundle to /etc/ssl/cert.pem, the default
location for libssl, this makes lynx not bitch when seeing sites
with certificates signed by these issuers. We should probably
think carefully about adding a few more in here too.
@
text
@d1 3
a3 1
# $OpenBSD: Makefile,v 1.13 2002/09/03 18:59:55 markus Exp $
d6 3
d18 13
@


1.13
log
@build OpenSSL without symlink trees:
* manpage related things moved to src/libssl/man/Makefile
* there are now 3 obj directories src/libssl/{crypto,ssl,man}/ instead
  of one single src/libssl/obj
* instead of running Configure (with generates lots of symlinks, and
  opensslconf.h) this patch stores pre-computed opensslconf.h files
  in src/libssl/crypto/arch
* requires a make includes before the library can be built
* libssl and libcrypto can be build separately
  (e.g. cd src/libssl/ssl && make obj && make)
* make depend is now supported
* no more symlink trees
tested by miod@@ and fries@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2002/08/30 15:08:11 markus Exp $
d8 2
@


1.12
log
@make clean should not depend on prereq; ok fries@@
@
text
@d1 1
a1 2
# Build wrapper for OpenSSL
# $OpenBSD: Makefile,v 1.11 2002/08/30 10:24:16 markus Exp $
d3 1
a3 1040
# Our lndir is hacked; specify a full path to avoid potential conflicts
# with the one installed with X11.
LNDIR=	/usr/bin/lndir

# Figure out what flag we use to OpenSSL's configure. This
# needs to be tested on all architectures.

SSL_SRC=src
OPENSSLDIR=	/etc/ssl
SSLCONF=	--openssldir="${OPENSSLDIR}" OpenBSD-${MACHINE_ARCH}

MUNGEDFILES= \
	${.OBJDIR}/${SSL_SRC}/Makefile \
	${.OBJDIR}/${SSL_SRC}/Makefile.ssl \
	${.OBJDIR}/${SSL_SRC}/apps/CA.pl \
	${.OBJDIR}/${SSL_SRC}/apps/CA.pl.bak \
	${.OBJDIR}/${SSL_SRC}/apps/Makefile \
	${.OBJDIR}/${SSL_SRC}/apps/der_chop \
	${.OBJDIR}/${SSL_SRC}/crypto/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/aes/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/asn1/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/bf/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/bio/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/bn/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/buffer/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/cast/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/comp/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/conf/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/des/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/des/asm/perlasm \
	${.OBJDIR}/${SSL_SRC}/crypto/dh/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/dsa/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/dso/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/ec/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/engine/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/err/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/evp/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/hmac/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/idea/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/krb5/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/lhash/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/md2/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/md4/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/md5/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/mdc2/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/objects/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h \
	${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h \
	${.OBJDIR}/${SSL_SRC}/crypto/ocsp/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/opensslconf.h \
	${.OBJDIR}/${SSL_SRC}/crypto/pem/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/pkcs12/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/pkcs7/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/rand/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/rc2/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/rc4/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/rc5/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/ripemd/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/rsa/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/sha/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/stack/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/txt_db/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/ui/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/x509/Makefile \
	${.OBJDIR}/${SSL_SRC}/crypto/x509v3/Makefile \
	${.OBJDIR}/${SSL_SRC}/ssl/Makefile \
	${.OBJDIR}/${SSL_SRC}/test/Makefile \
	${.OBJDIR}/${SSL_SRC}/test/bftest.c \
	${.OBJDIR}/${SSL_SRC}/test/bntest.c \
	${.OBJDIR}/${SSL_SRC}/test/casttest.c \
	${.OBJDIR}/${SSL_SRC}/test/destest.c \
	${.OBJDIR}/${SSL_SRC}/test/dhtest.c \
	${.OBJDIR}/${SSL_SRC}/test/dsatest.c \
	${.OBJDIR}/${SSL_SRC}/test/ectest.c \
	${.OBJDIR}/${SSL_SRC}/test/evp_test.c \
	${.OBJDIR}/${SSL_SRC}/test/evptests.txt \
	${.OBJDIR}/${SSL_SRC}/test/exptest.c \
	${.OBJDIR}/${SSL_SRC}/test/hmactest.c \
	${.OBJDIR}/${SSL_SRC}/test/ideatest.c \
	${.OBJDIR}/${SSL_SRC}/test/md2test.c \
	${.OBJDIR}/${SSL_SRC}/test/md5test.c \
	${.OBJDIR}/${SSL_SRC}/test/mdc2test.c \
	${.OBJDIR}/${SSL_SRC}/test/randtest.c \
	${.OBJDIR}/${SSL_SRC}/test/rc2test.c \
	${.OBJDIR}/${SSL_SRC}/test/rc4test.c \
	${.OBJDIR}/${SSL_SRC}/test/rc5test.c \
	${.OBJDIR}/${SSL_SRC}/test/rmdtest.c \
	${.OBJDIR}/${SSL_SRC}/test/sha1test.c \
	${.OBJDIR}/${SSL_SRC}/test/shatest.c \
	${.OBJDIR}/${SSL_SRC}/test/ssltest.c \
	${.OBJDIR}/${SSL_SRC}/tools/Makefile \
	${.OBJDIR}/${SSL_SRC}/tools/c_rehash \
	${.OBJDIR}/BUF_MEM_new.pm \
	${.OBJDIR}/CRYPTO_set_locking_callback.pm \
	${.OBJDIR}/HMAC.pm \
	${.OBJDIR}/MD5.pm \
	${.OBJDIR}/MDC2.pm \
	${.OBJDIR}/RC4.pm \
	${.OBJDIR}/RIPEMD160.pm \
	${.OBJDIR}/SHA1.pm \
	${.OBJDIR}/des_random_key.pm

.include <bsd.own.mk>		# for NOMAN

.ifndef NOMAN
MANALL=	\
	BN_CTX_new.cat3 \
	BN_CTX_start.cat3 \
	BN_add.cat3 \
	BN_add_word.cat3 \
	BN_bn2bin.cat3 \
	BN_cmp.cat3 \
	BN_copy.cat3 \
	BN_generate_prime.cat3 \
	BN_mod_inverse.cat3 \
	BN_mod_mul_montgomery.cat3 \
	BN_mod_mul_reciprocal.cat3 \
	BN_new.cat3 \
	BN_num_bytes.cat3 \
	BN_rand.cat3 \
	BN_set_bit.cat3 \
	BN_swap.cat3 \
	BN_zero.cat3 \
	BUF_MEM_new.cat3 \
	BUF_MEM_new.cat3 \
	CRYPTO_set_ex_data.cat3 \
	CRYPTO_set_locking_callback.cat3 \
	DH_generate_key.cat3 \
	DH_generate_parameters.cat3 \
	DH_get_ex_new_index.cat3 \
	DH_new.cat3 \
	DH_set_method.cat3 \
	DH_size.cat3 \
	DSA_SIG_new.cat3 \
	DSA_do_sign.cat3 \
	DSA_dup_DH.cat3 \
	DSA_generate_key.cat3 \
	DSA_generate_parameters.cat3 \
	DSA_get_ex_new_index.cat3 \
	DSA_new.cat3 \
	DSA_set_method.cat3 \
	DSA_sign.cat3 \
	DSA_size.cat3 \
	ERR_GET_LIB.cat3 \
	ERR_clear_error.cat3 \
	ERR_error_string.cat3 \
	ERR_get_error.cat3 \
	ERR_load_crypto_strings.cat3 \
	ERR_load_strings.cat3 \
	ERR_print_errors.cat3 \
	ERR_put_error.cat3 \
	ERR_remove_state.cat3 \
	EVP_BytesToKey.cat3 \
	EVP_DigestInit.cat3 \
	EVP_EncryptInit.cat3 \
	EVP_OpenInit.cat3 \
	EVP_SealInit.cat3 \
	EVP_SignInit.cat3 \
	EVP_VerifyInit.cat3 \
	HMAC.cat3 \
	MD5.cat3 \
	MDC2.cat3 \
	OPENSSL_VERSION_NUMBER.cat3 \
	OpenSSL_add_all_algorithms.cat3 \
	RAND_add.cat3 \
	RAND_bytes.cat3 \
	RAND_cleanup.cat3 \
	RAND_egd.cat3 \
	RAND_load_file.cat3 \
	RAND_set_rand_method.cat3 \
	RC4.cat3 \
	RIPEMD160.cat3 \
	RSA_blinding_on.cat3 \
	RSA_check_key.cat3 \
	RSA_generate_key.cat3 \
	RSA_get_ex_new_index.cat3 \
	RSA_new.cat3 \
	RSA_padding_add_PKCS1_type_1.cat3 \
	RSA_print.cat3 \
	RSA_private_encrypt.cat3 \
	RSA_public_encrypt.cat3 \
	RSA_set_method.cat3 \
	RSA_sign.cat3 \
	RSA_sign_ASN1_OCTET_STRING.cat3 \
	RSA_size.cat3 \
	SHA1.cat3 \
	SSL_CIPHER_get_name.cat3 \
	SSL_COMP_add_compression_method.cat3 \
	SSL_CTX_add_extra_chain_cert.cat3 \
	SSL_CTX_add_session.cat3 \
	SSL_CTX_ctrl.cat3 \
	SSL_CTX_flush_sessions.cat3 \
	SSL_CTX_free.cat3 \
	SSL_CTX_get_ex_new_index.cat3 \
	SSL_CTX_get_verify_mode.cat3 \
	SSL_CTX_load_verify_locations.cat3 \
	SSL_CTX_new.cat3 \
	SSL_CTX_sess_number.cat3 \
	SSL_CTX_sess_set_cache_size.cat3 \
	SSL_CTX_sess_set_get_cb.cat3 \
	SSL_CTX_sessions.cat3 \
	SSL_CTX_set_cert_store.cat3 \
	SSL_CTX_set_cert_verify_callback.cat3 \
	SSL_CTX_set_cipher_list.cat3 \
	SSL_CTX_set_client_CA_list.cat3 \
	SSL_CTX_set_client_cert_cb.cat3 \
	SSL_CTX_set_default_passwd_cb.cat3 \
	SSL_CTX_set_generate_session_id.cat3 \
	SSL_CTX_set_info_callback.cat3 \
	SSL_CTX_set_max_cert_list.cat3 \
	SSL_CTX_set_mode.cat3 \
	SSL_CTX_set_msg_callback.cat3 \
	SSL_CTX_set_options.cat3 \
	SSL_CTX_set_quiet_shutdown.cat3 \
	SSL_CTX_set_session_cache_mode.cat3 \
	SSL_CTX_set_session_id_context.cat3 \
	SSL_CTX_set_ssl_version.cat3 \
	SSL_CTX_set_timeout.cat3 \
	SSL_CTX_set_tmp_dh_callback.cat3 \
	SSL_CTX_set_tmp_rsa_callback.cat3 \
	SSL_CTX_set_verify.cat3 \
	SSL_CTX_use_certificate.cat3 \
	SSL_SESSION_free.cat3 \
	SSL_SESSION_get_ex_new_index.cat3 \
	SSL_SESSION_get_time.cat3 \
	SSL_accept.cat3 \
	SSL_alert_type_string.cat3 \
	SSL_clear.cat3 \
	SSL_connect.cat3 \
	SSL_free.cat3 \
	SSL_get_SSL_CTX.cat3 \
	SSL_get_ciphers.cat3 \
	SSL_get_client_CA_list.cat3 \
	SSL_get_current_cipher.cat3 \
	SSL_get_default_timeout.cat3 \
	SSL_get_error.cat3 \
	SSL_get_ex_data_X509_STORE_CTX_idx.cat3 \
	SSL_get_ex_new_index.cat3 \
	SSL_get_fd.cat3 \
	SSL_get_peer_cert_chain.cat3 \
	SSL_get_peer_certificate.cat3 \
	SSL_get_rbio.cat3 \
	SSL_get_session.cat3 \
	SSL_get_verify_result.cat3 \
	SSL_get_version.cat3 \
	SSL_library_init.cat3 \
	SSL_load_client_CA_file.cat3 \
	SSL_new.cat3 \
	SSL_pending.cat3 \
	SSL_read.cat3 \
	SSL_rstate_string.cat3 \
	SSL_session_reused.cat3 \
	SSL_set_bio.cat3 \
	SSL_set_connect_state.cat3 \
	SSL_set_fd.cat3 \
	SSL_set_session.cat3 \
	SSL_set_shutdown.cat3 \
	SSL_set_verify_result.cat3 \
	SSL_shutdown.cat3 \
	SSL_state_string.cat3 \
	SSL_want.cat3 \
	SSL_write.cat3 \
	blowfish.cat3 \
	bn.cat3 \
	bn_internal.cat3 \
	crypto.cat3 \
	d2i_DHparams.cat3 \
	d2i_RSAPublicKey.cat3 \
	d2i_SSL_SESSION.cat3 \
	des_modes.cat7 \
	des_random_key.cat3 \
	dh.cat3 \
	dsa.cat3 \
	lh_stats.cat3 \
	lhash.cat3 \
	openssl.cat1 \
	rsa.cat3 \
	ssl.cat3

.if MANPS
PSALL=	${MANALL:S/.cat1/.ps1/g:S/.cat2/.ps2/g:S/.cat3/.ps3/g:S/.cat4/.ps4/g:S/.cat5/.ps5/g:S/.cat6/.ps6/g:S/.cat7/.ps7/g:S/.cat8/.ps8/g:S/.cat9/.ps9/g}
.endif

# these are is a real problem, since they re-document functions described in
# other pages.
#
# err.pod -> ERR_get_error.pod
# ERR_peek_error ERR_get_error_line
# ERR_peek_error_line ERR_get_error_line_data ERR_peek_error_line_data
# ERR_GET_LIB ERR_GET_FUNC ERR_GET_REASON ERR_clear_error ERR_error_string
# ERR_lib_error_string ERR_func_error_string ERR_reason_error_string
# ERR_print_errors ERR_print_errors_fp ERR_load_crypto_strings ERR_free_strings
# ERR_remove_state ERR_put_error ERR_add_error_data ERR_load_strings ERR_PACK
# ERR_get_next_error_library
#
# rand.pod -> RAND_bytes.pod
# RAND_pseudo_bytes RAND_seed RAND_add RAND_status RAND_event
# RAND_screen RAND_load_file RAND_write_file RAND_file_name RAND_egd
# RAND_set_rand_method RAND_get_rand_method RAND_SSLeay RAND_cleanup

# buffer.pod -> BUF_MEM_new.pod
# BUF_MEM_free BUF_MEM_grow BUF_strdup
BUF_MEM_new.cat3: buffer.pod
	( cp ${.ALLSRC} BUF_MEM_new.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  BUF_MEM_new.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
BUF_MEM_new.ps3: buffer.pod
	( cp ${.ALLSRC} BUF_MEM_new.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  BUF_MEM_new.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# rc4.pod -> RC4.pod
# RC4_set_key
RC4.cat3: rc4.pod
	( cp ${.ALLSRC} RC4.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  RC4.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
RC4.ps3: rc4.pod
	( cp ${.ALLSRC} RC4.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  RC4.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# threads.pod -> CRYPTO_set_locking_callback.pod
# CRYPTO_set_id_callback CRYPTO_num_locks
CRYPTO_set_locking_callback.cat3: threads.pod
	( cp ${.ALLSRC} CRYPTO_set_locking_callback.pm && \
	  pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  CRYPTO_set_locking_callback.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
CRYPTO_set_locking_callback.ps3: threads.pod
	( cp ${.ALLSRC} CRYPTO_set_locking_callback.pm && \
	  pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  CRYPTO_set_locking_callback.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# ripemd.pod -> RIPEMD160.pod
# RIPEMD160_Init RIPEMD160_Update RIPEMD160_Final
RIPEMD160.cat3: ripemd.pod
	( cp ${.ALLSRC} RIPEMD160.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  RIPEMD160.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
RIPEMD160.ps3: ripemd.pod
	( cp ${.ALLSRC} RIPEMD160.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  RIPEMD160.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# sha.pod -> SHA1.pod
SHA1.cat3: sha.pod
	( cp ${.ALLSRC} SHA1.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  SHA1.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
SHA1.ps3: sha.pod
	( cp ${.ALLSRC} SHA1.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  SHA1.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# md5.pod -> MD5.pod
MD5.cat3: md5.pod
	( cp ${.ALLSRC} MD5.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  MD5.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
MD5.ps3: md5.pod
	( cp ${.ALLSRC} MD5.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  MD5.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# mdc2.pod -> MDC2.pod
MDC2.cat3: mdc2.pod
	( cp ${.ALLSRC} MDC2.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  MDC2.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
MDC2.ps3: mdc2.pod
	( cp ${.ALLSRC} MDC2.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  MDC2.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# hmac.pod -> HMAC.pod
HMAC.cat3: hmac.pod
	( cp ${.ALLSRC} HMAC.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  HMAC.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
HMAC.ps3: hmac.pod
	( cp ${.ALLSRC} HMAC.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  HMAC.pm ) | nroff -Tps -man > ${.TARGET}
.endif

# des.pod -> des_random_key, des_set_key, des_key_sched, des_set_key_checked,
# des_set_key_unchecked, des_set_odd_parity, des_is_weak_key, des_ecb_encrypt,
# des_ecb2_encrypt, des_ecb3_encrypt, des_ncbc_encrypt, des_cfb_encrypt,
# des_ofb_encrypt, des_pcbc_encrypt, des_cfb64_encrypt, des_ofb64_encrypt,
# des_xcbc_encrypt, des_ede2_cbc_encrypt, des_ede2_cfb64_encrypt,
# des_ede2_ofb64_encrypt, des_ede3_cbc_encrypt, des_ede3_cbcm_encrypt,
# des_ede3_cfb64_encrypt, des_ede3_ofb64_encrypt, des_read_password,
# des_read_2passwords, des_read_pw_string, des_cbc_cksum, des_quad_cksum,
# des_string_to_key, des_string_to_2keys, des_fcrypt, des_crypt,
# des_enc_read, des_enc_write
des_random_key.cat3: des.pod
	( cp ${.ALLSRC} des_random_key.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  des_random_key.pm ) | nroff -Tascii -man > ${.TARGET}
.if MANPS
des_random_key.ps3: des.pod
	( cp ${.ALLSRC} des_random_key.pm && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  des_random_key.pm ) | nroff -Tps -man > ${.TARGET}
.endif

MLINKS+=\
	BN_CTX_new.3 BN_CTX_free.3 \
	BN_CTX_new.3 BN_CTX_init.3 \
	BN_CTX_start.3 BN_CTX_end.3 \
	BN_CTX_start.3 BN_CTX_get.3 \
	BN_add.3 BN_div.3 \
	BN_add.3 BN_exp.3 \
	BN_add.3 BN_gcd.3 \
	BN_add.3 BN_mod.3 \
	BN_add.3 BN_mod_exp.3 \
	BN_add.3 BN_mod_mul.3 \
	BN_add.3 BN_mul.3 \
	BN_add.3 BN_sqr.3 \
	BN_add.3 BN_sub.3 \
	BN_add_word.3 BN_div_word.3 \
	BN_add_word.3 BN_mod_word.3 \
	BN_add_word.3 BN_mul_word.3 \
	BN_add_word.3 BN_sub_word.3 \
	BN_bn2bin.3 BN_bin2bn.3 \
	BN_bn2bin.3 BN_bn2dec.3 \
	BN_bn2bin.3 BN_bn2hex.3 \
	BN_bn2bin.3 BN_bn2mpi.3 \
	BN_bn2bin.3 BN_dec2bn.3 \
	BN_bn2bin.3 BN_hex2bn.3 \
	BN_bn2bin.3 BN_mpi2bn.3 \
	BN_bn2bin.3 BN_print.3 \
	BN_bn2bin.3 BN_print_fp.3 \
	BN_cmp.3 BN_is_odd.3 \
	BN_cmp.3 BN_is_one.3 \
	BN_cmp.3 BN_is_word.3 \
	BN_cmp.3 BN_is_zero.3 \
	BN_cmp.3 BN_ucmp.3 \
	BN_copy.3 BN_dup.3 \
	BN_generate_prime.3 BN_is_prime.3 \
	BN_generate_prime.3 BN_is_prime_fasttest.3 \
	BN_mod_mul_montgomery.3 BN_MONT_CTX_copy.3 \
	BN_mod_mul_montgomery.3 BN_MONT_CTX_free.3 \
	BN_mod_mul_montgomery.3 BN_MONT_CTX_init.3 \
	BN_mod_mul_montgomery.3 BN_MONT_CTX_new.3 \
	BN_mod_mul_montgomery.3 BN_MONT_CTX_set.3 \
	BN_mod_mul_montgomery.3 BN_from_montgomery.3 \
	BN_mod_mul_montgomery.3 BN_to_montgomery.3 \
	BN_mod_mul_reciprocal.3 BN_RECP_CTX_free.3 \
	BN_mod_mul_reciprocal.3 BN_RECP_CTX_init.3 \
	BN_mod_mul_reciprocal.3 BN_RECP_CTX_new.3 \
	BN_mod_mul_reciprocal.3 BN_RECP_CTX_set.3 \
	BN_mod_mul_reciprocal.3 BN_div_recp.3 \
	BN_new.3 BN_clear.3 \
	BN_new.3 BN_clear_free.3 \
	BN_new.3 BN_free.3 \
	BN_new.3 BN_init.3 \
	BN_num_bytes.3 BN_num_bits.3 \
	BN_num_bytes.3 BN_num_bits_word.3 \
	BN_rand.3 BN_pseudo_rand.3 \
	BN_rand.3 BN_rand_range.3 \
	BN_set_bit.3 BN_clear_bit.3 \
	BN_set_bit.3 BN_is_bit_set.3 \
	BN_set_bit.3 BN_lshift.3 \
	BN_set_bit.3 BN_lshift1.3 \
	BN_set_bit.3 BN_mask_bits.3 \
	BN_set_bit.3 BN_rshift.3 \
	BN_set_bit.3 BN_rshift1.3 \
	BN_zero.3 BN_get_word.3 \
	BN_zero.3 BN_one.3 \
	BN_zero.3 BN_set_word.3 \
	BN_zero.3 BN_value_one.3 \
	BUF_MEM_new.3 BUF_MEM_free.3 \
	BUF_MEM_new.3 BUF_MEM_grow.3 \
	BUF_MEM_new.3 BUF_strdup.3 \
	CRYPTO_set_ex_data.3 CRYPTO_get_ex_data.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_add.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_add_lock.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_destroy_dynlockid.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_get_new_dynlockid.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_lock.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_num_locks.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_r_lock.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_r_unlock.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_set_dynlock_create_callback.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_set_dynlock_destroy_callback.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_set_dynlock_lock_callback.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_set_id_callback.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_w_lock.3 \
	CRYPTO_set_locking_callback.3 CRYPTO_w_unlock.3 \
	DH_generate_key.3 DH_compute_key.3 \
	DH_generate_parameters.3 DH_check.3 \
	DH_get_ex_new_index.3 DH_get_ex_data.3 \
	DH_get_ex_new_index.3 DH_set_ex_data.3 \
	DH_new.3 DH_free.3 \
	DH_set_method.3 DH_OpenSSL.3 \
	DH_set_method.3 DH_get_default_method.3 \
	DH_set_method.3 DH_get_default_openssl_method.3 \
	DH_set_method.3 DH_new_method.3 \
	DH_set_method.3 DH_set_default_method.3 \
	DH_set_method.3 DH_set_default_openssl_method.3 \
	DSA_new.3 DSA_free.3 \
	DSA_set_method.3 DSA_OpenSSL.3 \
	DSA_set_method.3 DSA_get_default_method.3 \
	DSA_set_method.3 DSA_get_default_openssl_method.3 \
	DSA_set_method.3 DSA_new_method.3 \
	DSA_set_method.3 DSA_set_default_method.3 \
	DSA_set_method.3 DSA_set_default_openssl_method.3 \
	DSA_sign.3 DSA_sign_setup.3 \
	DSA_sign.3 DSA_verify.3 \
	ERR_GET_LIB.3 ERR_GET_FUNC.3 \
	ERR_GET_LIB.3 ERR_GET_REASON.3 \
	ERR_error_string.3 ERR_error_string_n.3 \
	ERR_error_string.3 ERR_func_error_string.3 \
	ERR_error_string.3 ERR_lib_error_string.3 \
	ERR_error_string.3 ERR_reason_error_string.3 \
	ERR_get_error.3 ERR_get_error_line.3 \
	ERR_get_error.3 ERR_get_error_line_data.3 \
	ERR_get_error.3 ERR_peek_error.3 \
	ERR_get_error.3 ERR_peek_error_line.3 \
	ERR_get_error.3 ERR_peek_error_line_data.3 \
	ERR_load_crypto_strings.3 ERR_free_strings.3 \
	ERR_load_crypto_strings.3 SSL_load_error_strings.3 \
	ERR_load_strings.3 ERR_PACK.3 \
	ERR_load_strings.3 ERR_get_next_error_library.3 \
	ERR_print_errors.3 ERR_print_errors_fp.3 \
	ERR_put_error.3 ERR_add_error_data.3 \
	EVP_DigestInit.3 EVP_DigestFinal.3 \
	EVP_DigestInit.3 EVP_DigestUpdate.3 \
	EVP_DigestInit.3 EVP_MD_CTX_block_size.3 \
	EVP_DigestInit.3 EVP_MD_CTX_copy.3 \
	EVP_DigestInit.3 EVP_MD_CTX_md.3 \
	EVP_DigestInit.3 EVP_MD_CTX_size.3 \
	EVP_DigestInit.3 EVP_MD_CTX_type.3 \
	EVP_DigestInit.3 EVP_MD_block_size.3 \
	EVP_DigestInit.3 EVP_MD_block_size.3 \
	EVP_DigestInit.3 EVP_MD_pkey_type.3 \
	EVP_DigestInit.3 EVP_MD_size.3 \
	EVP_DigestInit.3 EVP_MD_size.3 \
	EVP_DigestInit.3 EVP_MD_type.3 \
	EVP_DigestInit.3 EVP_MD_type.3 \
	EVP_DigestInit.3 EVP_dss.3 \
	EVP_DigestInit.3 EVP_dss1.3 \
	EVP_DigestInit.3 EVP_get_digestbyname.3 \
	EVP_DigestInit.3 EVP_get_digestbyname.3 \
	EVP_DigestInit.3 EVP_get_digestbynid.3 \
	EVP_DigestInit.3 EVP_get_digestbynid.3 \
	EVP_DigestInit.3 EVP_get_digestbyobj.3 \
	EVP_DigestInit.3 EVP_md2.3 \
	EVP_DigestInit.3 EVP_md5.3 \
	EVP_DigestInit.3 EVP_md_null.3 \
	EVP_DigestInit.3 EVP_mdc2.3 \
	EVP_DigestInit.3 EVP_ripemd160.3 \
	EVP_DigestInit.3 EVP_sha.3 \
	EVP_DigestInit.3 EVP_sha1.3 \
	EVP_DigestInit.3 OBJ_nid2sn.3 \
	EVP_DigestInit.3 OBJ_obj2nid.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_block_size.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_cipher.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_cipher.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_cleanup.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_ctrl.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_iv_length.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_key_length.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_nid.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_set_key_length.3 \
	EVP_EncryptInit.3 EVP_CIPHER_CTX_type.3 \
	EVP_EncryptInit.3 EVP_CIPHER_asn1_to_param.3 \
	EVP_EncryptInit.3 EVP_CIPHER_block_size.3 \
	EVP_EncryptInit.3 EVP_CIPHER_iv_length.3 \
	EVP_EncryptInit.3 EVP_CIPHER_key_length.3 \
	EVP_EncryptInit.3 EVP_CIPHER_nid.3 \
	EVP_EncryptInit.3 EVP_CIPHER_param_to_asn1.3 \
	EVP_EncryptInit.3 EVP_CIPHER_type.3 \
	EVP_EncryptInit.3 EVP_CIPHER_type.3 \
	EVP_EncryptInit.3 EVP_CipherFinal.3 \
	EVP_EncryptInit.3 EVP_CipherInit.3 \
	EVP_EncryptInit.3 EVP_CipherUpdate.3 \
	EVP_EncryptInit.3 EVP_DecryptFinal.3 \
	EVP_EncryptInit.3 EVP_DecryptInit.3 \
	EVP_EncryptInit.3 EVP_DecryptUpdate.3 \
	EVP_EncryptInit.3 EVP_EncryptFinal.3 \
	EVP_EncryptInit.3 EVP_EncryptUpdate.3 \
	EVP_EncryptInit.3 EVP_get_cipherbyname.3 \
	EVP_EncryptInit.3 EVP_get_cipherbyname.3 \
	EVP_EncryptInit.3 EVP_get_cipherbynid.3 \
	EVP_EncryptInit.3 EVP_get_cipherbynid.3 \
	EVP_EncryptInit.3 EVP_get_cipherbyobj.3 \
	EVP_EncryptInit.3 OBJ_nid2sn.3 \
	EVP_EncryptInit.3 OBJ_obj2nid.3 \
	EVP_OpenInit.3 EVP_OpenFinal.3 \
	EVP_OpenInit.3 EVP_OpenUpdate.3 \
	EVP_SealInit.3 EVP_SealFinal.3 \
	EVP_SealInit.3 EVP_SealUpdate.3 \
	EVP_SignInit.3 EVP_PKEY_size.3 \
	EVP_SignInit.3 EVP_SignFinal.3 \
	EVP_SignInit.3 EVP_SignUpdate.3 \
	EVP_VerifyInit.3 EVP_VerifyFinal.3 \
	EVP_VerifyInit.3 EVP_VerifyUpdate.3 \
	HMAC.3 HMAC_Final.3 \
	HMAC.3 HMAC_Init.3 \
	HMAC.3 HMAC_Update.3 \
	HMAC.3 HMAC_cleanup.3 \
	MD5.3 MD2.3 \
	MD5.3 MD2_Final.3 \
	MD5.3 MD2_Init.3 \
	MD5.3 MD2_Update.3 \
	MD5.3 MD4.3 \
	MD5.3 MD4_Final.3 \
	MD5.3 MD4_Init.3 \
	MD5.3 MD4_Update.3 \
	MD5.3 MD5_Final.3 \
	MD5.3 MD5_Init.3 \
	MD5.3 MD5_Update.3 \
	MDC2.3 MDC2_Final.3 \
	MDC2.3 MDC2_Init.3 \
	MDC2.3 MDC2_Update.3 \
	OPENSSL_VERSION_NUMBER.3 SSLeay.3 \
	OPENSSL_VERSION_NUMBER.3 SSLeay_version.3 \
	OpenSSL_add_all_algorithms.3 EVP_cleanup.3 \
	OpenSSL_add_all_algorithms.3 OpenSSL_add_all_ciphers.3 \
	OpenSSL_add_all_algorithms.3 OpenSSL_add_all_digests.3 \
	RAND_add.3 RAND_event.3 \
	RAND_add.3 RAND_screen.3 \
	RAND_add.3 RAND_seed.3 \
	RAND_add.3 RAND_status.3 \
	RAND_bytes.3 RAND_pseudo_bytes.3 \
	RAND_bytes.3 RAND_pseudo_bytes.3 \
	RAND_egd.3 RAND_egd_bytes.3 \
	RAND_load_file.3 RAND_file_name.3 \
	RAND_load_file.3 RAND_file_name.3 \
	RAND_load_file.3 RAND_write_file.3 \
	RAND_load_file.3 RAND_write_file.3 \
	RAND_set_rand_method.3 RAND_SSLeay.3 \
	RAND_set_rand_method.3 RAND_SSLeay.3 \
	RAND_set_rand_method.3 RAND_get_rand_method.3 \
	RAND_set_rand_method.3 RAND_get_rand_method.3 \
	RC4.3 RC4_set_key.3 \
	RIPEMD160.3 RIPEMD160_Final.3 \
	RIPEMD160.3 RIPEMD160_Init.3 \
	RIPEMD160.3 RIPEMD160_Update.3 \
	RSA_blinding_on.3 RSA_blinding_off.3 \
	RSA_get_ex_new_index.3 RSA_get_ex_data.3 \
	RSA_get_ex_new_index.3 RSA_set_ex_data.3 \
	RSA_new.3 RSA_free.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_add_PKCS1_OAEP.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_add_PKCS1_type_2.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_add_SSLv23.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_add_none.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_check_PKCS1_OAEP.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_check_PKCS1_type_1.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_check_PKCS1_type_2.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_check_SSLv23.3 \
	RSA_padding_add_PKCS1_type_1.3 RSA_padding_check_none.3 \
	RSA_print.3 DHparams_print.3 \
	RSA_print.3 DHparams_print.3 \
	RSA_print.3 DHparams_print_fp.3 \
	RSA_print.3 DHparams_print_fp.3 \
	RSA_print.3 DSA_print.3 \
	RSA_print.3 DSA_print_fp.3 \
	RSA_print.3 DSA_print_fp.3 \
	RSA_print.3 DSAparams_print.3 \
	RSA_print.3 DSAparams_print.3 \
	RSA_print.3 DSAparams_print_fp.3 \
	RSA_print.3 DSAparams_print_fp.3 \
	RSA_print.3 RSA_print_fp.3 \
	RSA_print.3 RSA_print_fp.3 \
	RSA_private_encrypt.3 RSA_public_decrypt.3 \
	RSA_public_encrypt.3 RSA_private_decrypt.3 \
	RSA_set_method.3 RSA_PKCS1_RSAref.3 \
	RSA_set_method.3 RSA_PKCS1_SSLeay.3 \
	RSA_set_method.3 RSA_flags.3 \
	RSA_set_method.3 RSA_get_default_method.3 \
	RSA_set_method.3 RSA_get_default_openssl_method.3 \
	RSA_set_method.3 RSA_get_method.3 \
	RSA_set_method.3 RSA_new_method.3 \
	RSA_set_method.3 RSA_null_method.3 \
	RSA_set_method.3 RSA_set_default_method.3 \
	RSA_set_method.3 RSA_set_default_openssl_method.3 \
	RSA_sign.3 RSA_verify.3 \
	RSA_sign_ASN1_OCTET_STRING.3 RSA_verify_ASN1_OCTET_STRING.3 \
	SHA1.3 SHA1_Final.3 \
	SHA1.3 SHA1_Init.3 \
	SHA1.3 SHA1_Update.3 \
	SSL_CIPHER_get_name.3 SSL_CIPHER_description.3 \
	SSL_CIPHER_get_name.3 SSL_CIPHER_get_bits.3 \
	SSL_CIPHER_get_name.3 SSL_CIPHER_get_version.3 \
	SSL_CTX_add_session.3 SSL_CTX_remove_session.3 \
	SSL_CTX_add_session.3 SSL_add_session.3 \
	SSL_CTX_add_session.3 SSL_remove_session.3 \
	SSL_CTX_ctrl.3 SSL_CTX_callback_ctrl.3 \
	SSL_CTX_ctrl.3 SSL_callback_ctrl.3 \
	SSL_CTX_ctrl.3 SSL_ctrl.3 \
	SSL_CTX_flush_sessions.3 SSL_flush_sessions.3 \
	SSL_CTX_get_ex_new_index.3 SSL_CTX_get_ex_data.3 \
	SSL_CTX_get_ex_new_index.3 SSL_CTX_set_ex_data.3 \
	SSL_CTX_get_verify_mode.3 SSL_CTX_get_verify_callback.3 \
	SSL_CTX_get_verify_mode.3 SSL_CTX_get_verify_depth.3 \
	SSL_CTX_get_verify_mode.3 SSL_get_verify_callback.3 \
	SSL_CTX_get_verify_mode.3 SSL_get_verify_depth.3 \
	SSL_CTX_get_verify_mode.3 SSL_get_verify_mode.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_accept.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_accept_good.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_accept_renegotiate.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_cache_full.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_cb_hits.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_connect.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_connect_good.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_connect_renegotiate.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_hits.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_misses.3 \
	SSL_CTX_sess_number.3 SSL_CTX_sess_timeouts.3 \
	SSL_CTX_sess_set_cache_size.3 SSL_CTX_sess_get_cache_size.3 \
	SSL_CTX_sess_set_get_cb.3 SSL_CTX_sess_get_get_cb.3 \
	SSL_CTX_sess_set_get_cb.3 SSL_CTX_sess_get_new_cb.3 \
	SSL_CTX_sess_set_get_cb.3 SSL_CTX_sess_get_remove_cb.3 \
	SSL_CTX_sess_set_get_cb.3 SSL_CTX_sess_set_new_cb.3 \
	SSL_CTX_sess_set_get_cb.3 SSL_CTX_sess_set_remove.3 \
	SSL_CTX_set_cert_store.3 SSL_CTX_get_cert_store.3 \
	SSL_CTX_set_cipher_list.3 SSL_set_cipher_list.3 \
	SSL_CTX_set_client_CA_list.3 SSL_CTX_add_client_CA.3 \
	SSL_CTX_set_client_CA_list.3 SSL_add_client_CA.3 \
	SSL_CTX_set_client_CA_list.3 SSL_set_client_CA_list.3 \
	SSL_CTX_set_default_passwd_cb.3 \
	SSL_CTX_set_default_passwd_cb_userdata.3 \
	SSL_CTX_set_max_cert_list.3 SSL_CTX_get_max_cert_list.3 \
	SSL_CTX_set_max_cert_list.3 SSL_get_max_cert_list.3 \
	SSL_CTX_set_max_cert_list.3 SSL_set_max_cert_list.3 \
	SSL_CTX_set_mode.3 SSL_CTX_get_mode.3 \
	SSL_CTX_set_mode.3 SSL_get_mode.3 \
	SSL_CTX_set_mode.3 SSL_set_mode.3 \
	SSL_CTX_set_msg_callback.3 SSL_CTX_set_msg_callback_arg.3 \
	SSL_CTX_set_msg_callback.3 SSL_set_msg_callback.3 \
	SSL_CTX_set_msg_callback.3 SSL_set_msg_callback_arg.3 \
	SSL_CTX_set_options.3 SSL_CTX_get_options.3 \
	SSL_CTX_set_options.3 SSL_get_options.3 \
	SSL_CTX_set_options.3 SSL_set_options.3 \
	SSL_CTX_set_quiet_shutdown.3 SSL_CTX_get_quiet_shutdown.3 \
	SSL_CTX_set_quiet_shutdown.3 SSL_get_quiet_shutdown.3 \
	SSL_CTX_set_quiet_shutdown.3 SSL_set_quiet_shutdown.3 \
	SSL_CTX_set_session_cache_mode.3 SSL_CTX_get_session_cache_mode.3 \
	SSL_CTX_set_session_id_context.3 SSL_set_session_id_context.3 \
	SSL_CTX_set_ssl_version.3 SSL_get_ssl_method.3 \
	SSL_CTX_set_ssl_version.3 SSL_set_ssl_method.3 \
	SSL_CTX_set_timeout.3 SSL_CTX_get_timeout.3 \
	SSL_CTX_set_tmp_dh_callback.3 SSL_CTX_set_tmp_dh.3 \
	SSL_CTX_set_tmp_dh_callback.3 SSL_set_tmp_dh.3 \
	SSL_CTX_set_tmp_dh_callback.3 SSL_set_tmp_dh_callback.3 \
	SSL_CTX_set_tmp_rsa_callback.3 SSL_CTX_need_tmp_rsa.3 \
	SSL_CTX_set_tmp_rsa_callback.3 SSL_CTX_set_tmp_rsa.3 \
	SSL_CTX_set_tmp_rsa_callback.3 SSL_need_tmp_rsa.3 \
	SSL_CTX_set_tmp_rsa_callback.3 SSL_set_tmp_rsa.3 \
	SSL_CTX_set_tmp_rsa_callback.3 SSL_set_tmp_rsa_callback.3 \
	SSL_CTX_set_verify.3 SSL_CTX_set_verify_depth.3 \
	SSL_CTX_set_verify.3 SSL_set_verify.3 \
	SSL_CTX_set_verify.3 SSL_set_verify_depth.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_check_private_key.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_PrivateKey.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_PrivateKey_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_PrivateKey_file.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_RSAPrivateKey.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_RSAPrivateKey_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_RSAPrivateKey_file.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_certificate_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_certificate_chain_file.3 \
	SSL_CTX_use_certificate.3 SSL_CTX_use_certificate_file.3 \
	SSL_CTX_use_certificate.3 SSL_check_private_key.3 \
	SSL_CTX_use_certificate.3 SSL_use_PrivateKey.3 \
	SSL_CTX_use_certificate.3 SSL_use_PrivateKey_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_use_PrivateKey_file.3 \
	SSL_CTX_use_certificate.3 SSL_use_RSAPrivateKey.3 \
	SSL_CTX_use_certificate.3 SSL_use_RSAPrivateKey_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_use_RSAPrivateKey_file.3 \
	SSL_CTX_use_certificate.3 SSL_use_certificate.3 \
	SSL_CTX_use_certificate.3 SSL_use_certificate_ASN1.3 \
	SSL_CTX_use_certificate.3 SSL_use_certificate_file.3 \
	SSL_SESSION_get_ex_new_index.3 SSL_SESSION_get_ex_data.3 \
	SSL_SESSION_get_ex_new_index.3 SSL_SESSION_set_ex_data.3 \
	SSL_SESSION_get_time.3 SSL_SESSION_get_timeout.3 \
	SSL_SESSION_get_time.3 SSL_SESSION_set_time.3 \
	SSL_SESSION_get_time.3 SSL_SESSION_set_timeout.3 \
	SSL_SESSION_get_time.3 SSL_get_time.3 \
	SSL_SESSION_get_time.3 SSL_get_timeout.3 \
	SSL_SESSION_get_time.3 SSL_set_time.3 \
	SSL_SESSION_get_time.3 SSL_set_timeout.3 \
	SSL_alert_type_string.3 SSL_alert_desc_string.3 \
	SSL_alert_type_string.3 SSL_alert_desc_string_long.3 \
	SSL_alert_type_string.3 SSL_alert_type_string_long.3 \
	SSL_get_ciphers.3 SSL_get_cipher_list.3 \
	SSL_get_client_CA_list.3 SSL_CTX_get_client_CA_list.3 \
	SSL_get_current_cipher.3 SSL_get_cipher.3 \
	SSL_get_current_cipher.3 SSL_get_cipher_bits.3 \
	SSL_get_current_cipher.3 SSL_get_cipher_name.3 \
	SSL_get_current_cipher.3 SSL_get_cipher_version.3 \
	SSL_get_ex_new_index.3 SSL_get_ex_data.3 \
	SSL_get_ex_new_index.3 SSL_set_ex_data.3 \
	SSL_get_fd.3 SSL_get_rfd.3 \
	SSL_get_fd.3 SSL_get_wfd.3 \
	SSL_get_rbio.3 SSL_get_wbio.3 \
	SSL_get_session.3 SSL_get0_session.3 \
	SSL_get_session.3 SSL_get1_session.3 \
	SSL_library_init.3 OpenSSL_add_ssl_algorithms.3 \
	SSL_library_init.3 SSLeay_add_ssl_algorithms.3 \
	SSL_rstate_string.3 SSL_rstate_string_long.3 \
	SSL_set_connect_state.3 SSL_set_accept_state.3 \
	SSL_set_fd.3 SSL_set_rfd.3 \
	SSL_set_fd.3 SSL_set_wfd.3 \
	SSL_set_shutdown.3 SSL_get_shutdown.3 \
	SSL_state_string.3 SSL_state_string_long.3 \
	SSL_want.3 SSL_want_nothing.3 \
	SSL_want.3 SSL_want_read.3 \
	SSL_want.3 SSL_want_write.3 \
	SSL_want.3 SSL_want_x509_lookup.3 \
	blowfish.3 BF_cbc.3 \
	blowfish.3 BF_cbc_encrypt.3 \
	blowfish.3 BF_cfb64_encrypt.3 \
	blowfish.3 BF_decrypt.3 \
	blowfish.3 BF_ecb.3 \
	blowfish.3 BF_ecb_encrypt.3 \
	blowfish.3 BF_encrypt.3 \
	blowfish.3 BF_ofb64_encrypt.3 \
	blowfish.3 BF_options.3 \
	blowfish.3 BF_set_key.3 \
	bn_internal.3 bn_add_words.3 \
	bn_internal.3 bn_check_top.3 \
	bn_internal.3 bn_cmp_words.3 \
	bn_internal.3 bn_div_words.3 \
	bn_internal.3 bn_dump.3 \
	bn_internal.3 bn_expand.3 \
	bn_internal.3 bn_expand2.3 \
	bn_internal.3 bn_fix_top.3 \
	bn_internal.3 bn_mul_add_words.3 \
	bn_internal.3 bn_mul_comba4.3 \
	bn_internal.3 bn_mul_comba8.3 \
	bn_internal.3 bn_mul_high.3 \
	bn_internal.3 bn_mul_low_normal.3 \
	bn_internal.3 bn_mul_low_recursive.3 \
	bn_internal.3 bn_mul_normal.3 \
	bn_internal.3 bn_mul_part_recursive.3 \
	bn_internal.3 bn_mul_recursive.3 \
	bn_internal.3 bn_mul_words.3 \
	bn_internal.3 bn_print.3 \
	bn_internal.3 bn_set_high.3 \
	bn_internal.3 bn_set_low.3 \
	bn_internal.3 bn_set_max.3 \
	bn_internal.3 bn_sqr_comba4.3 \
	bn_internal.3 bn_sqr_comba8.3 \
	bn_internal.3 bn_sqr_normal.3 \
	bn_internal.3 bn_sqr_recursive.3 \
	bn_internal.3 bn_sqr_words.3 \
	bn_internal.3 bn_sub_words.3 \
	bn_internal.3 bn_wexpand.3 \
	bn_internal.3 mul.3 \
	bn_internal.3 mul_add.3 \
	bn_internal.3 sqr.3 \
	d2i_DHparams.3 i2d_DHparams.3 \
	d2i_RSAPublicKey.3 d2i_Netscape_RSA.3 \
	d2i_RSAPublicKey.3 d2i_RSAPrivateKey.3 \
	d2i_RSAPublicKey.3 i2d_Netscape_RSA.3 \
	d2i_RSAPublicKey.3 i2d_RSAPrivateKey.3 \
	d2i_RSAPublicKey.3 i2d_RSAPublicKey.3 \
	d2i_SSL_SESSION.3 i2d_SSL_SESSION.3 \
	des_crypt.3 des_string_to_2keys.3 \
	des_random_key.3 des_cbc_cksum.3 \
	des_random_key.3 des_cfb64_encrypt.3 \
	des_random_key.3 des_cfb_encrypt.3 \
	des_random_key.3 des_crypt.3 \
	des_random_key.3 des_ecb2_encrypt.3 \
	des_random_key.3 des_ecb3_encrypt.3 \
	des_random_key.3 des_ecb_encrypt.3 \
	des_random_key.3 des_ede2_cbc_encrypt.3 \
	des_random_key.3 des_ede2_cfb64_encrypt.3 \
	des_random_key.3 des_ede2_ofb64_encrypt.3 \
	des_random_key.3 des_ede3_cbc_encrypt.3 \
	des_random_key.3 des_ede3_cbcm_encrypt.3 \
	des_random_key.3 des_ede3_cfb64_encrypt.3 \
	des_random_key.3 des_ede3_ofb64_encrypt.3 \
	des_random_key.3 des_enc_read.3 \
	des_random_key.3 des_enc_write.3 \
	des_random_key.3 des_fcrypt.3 \
	des_random_key.3 des_is_weak_key.3 \
	des_random_key.3 des_key_sched.3 \
	des_random_key.3 des_ncbc_encrypt.3 \
	des_random_key.3 des_ofb64_encrypt.3 \
	des_random_key.3 des_ofb_encrypt.3 \
	des_random_key.3 des_pcbc_encrypt.3 \
	des_random_key.3 des_quad_cksum.3 \
	des_random_key.3 des_read_2passwords.3 \
	des_random_key.3 des_read_password.3 \
	des_random_key.3 des_read_pw_string.3 \
	des_random_key.3 des_set_key.3 \
	des_random_key.3 des_set_key_checked.3 \
	des_random_key.3 des_set_key_unchecked.3 \
	des_random_key.3 des_set_odd_parity.3 \
	des_random_key.3 des_string_to_2keys.3 \
	des_random_key.3 des_string_to_key.3 \
	des_random_key.3 des_xcbc_encrypt.3 \
	dsa.3 DSA_OpenSSL.3 \
	dsa.3 DSA_SIG_free.3 \
	dsa.3 DSA_do_verify.3 \
	dsa.3 DSA_free.3 \
	dsa.3 DSA_get_default_method.3 \
	dsa.3 DSA_get_ex_data.3 \
	dsa.3 DSA_new_method.3 \
	dsa.3 DSA_set_default_method.3 \
	dsa.3 DSA_set_ex_data.3 \
	dsa.3 DSA_sign_setup.3 \
	dsa.3 DSA_verify.3 \
	dsa.3 d2i_DSAPrivateKey.3 \
	dsa.3 d2i_DSAPublicKey.3 \
	dsa.3 d2i_DSA_SIG.3 \
	dsa.3 d2i_DSAparams.3 \
	dsa.3 i2d_DSAPrivateKey.3 \
	dsa.3 i2d_DSAPublicKey.3 \
	dsa.3 i2d_DSA_SIG.3 \
	dsa.3 i2d_DSAparams.3 \
	lh_stats.3 lh_node_stats.3 \
	lh_stats.3 lh_node_stats_bio.3 \
	lh_stats.3 lh_node_usage_stats.3 \
	lh_stats.3 lh_node_usage_stats_bio.3 \
	lh_stats.3 lh_stats_bio.3 \
	lhash.3 lh_delete.3 \
	lhash.3 lh_doall.3 \
	lhash.3 lh_doall_arg.3 \
	lhash.3 lh_error.3 \
	lhash.3 lh_free.3 \
	lhash.3 lh_insert.3 \
	lhash.3 lh_new.3 \
	lhash.3 lh_retrieve.3

.include <bsd.man.mk>
.else
maninstall:

.endif

# XXX .PATH order is critical because of non-unique filenames
.PATH: ${.CURDIR}/src/doc/crypto ${.CURDIR}/src/doc/ssl ${.CURDIR}/src/doc/apps
.SUFFIXES: .pod
.pod.cat3:
	( cd `dirname ${.ALLSRC}` && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tascii -man > ${.TARGET}
.pod.cat7:
	( cd `dirname ${.ALLSRC}` && pod2man --section=7 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tascii -man > ${.TARGET}
.pod.cat1:
	( cd `dirname ${.ALLSRC}` && pod2man --section=1 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tascii -man > ${.TARGET}

.pod.ps3:
	( cd `dirname ${.ALLSRC}` && pod2man --section=3 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tps -man > ${.TARGET}
.pod.ps7:
	( cd `dirname ${.ALLSRC}` && pod2man --section=7 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tps -man > ${.TARGET}
.pod.ps1:
	( cd `dirname ${.ALLSRC}` && pod2man --section=1 --official \
	  --center='OpenSSL' --release="OpenBSD `uname -r`" \
	  `basename ${.ALLSRC}` ) | nroff -Tps -man > ${.TARGET}

all: 	prereq ${MANALL} ${PSALL}
# egcs bombs optimising this file on vax
.if (${MACHINE_ARCH} == "vax")
	cd ${.OBJDIR}/crypto && CFLAGS=-O0 ${MAKE} a_strnid.o a_strnid.po
	cd ${.OBJDIR}/crypto && CFLAGS=-O1 ${MAKE} des_enc.o des_enc.po
.endif
	@@cd ${.OBJDIR}/crypto && ${MAKE}
	@@cd ${.OBJDIR}/ssl && ${MAKE}

includes: prereq
	@@cd ${.OBJDIR}/crypto && ${MAKE} includes
	@@cd ${.OBJDIR}/ssl && ${MAKE} includes

prereq:	${.OBJDIR}/${SSL_SRC}/Makefile.ssl ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h

install: maninstall
	@@cd ${.OBJDIR}/crypto && ${MAKE} install
	@@cd ${.OBJDIR}/ssl && ${MAKE} install

${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h: ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h
	/usr/bin/perl ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.pl ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h

${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h: ${.OBJDIR}/${SSL_SRC}/crypto/objects/objects.h
	/usr/bin/perl ${.OBJDIR}/${SSL_SRC}/crypto/objects/objects.pl ${.OBJDIR}/${SSL_SRC}/crypto/objects/objects.txt ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.num ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_mac.h

${.OBJDIR}/${SSL_SRC}/Makefile.ssl : ${.OBJDIR}/${SSL_SRC}/Makefile.org
	@@cd ${.OBJDIR}/${SSL_SRC} && /usr/bin/perl Configure ${SSLCONF}

.if !exists(${.OBJDIR}/${SSL_SRC}/Makefile.org)
${.OBJDIR}/${SSL_SRC}/Makefile.org: ${.CURDIR}/${SSL_SRC}/Makefile.org
	@@${LNDIR} -s -e obj -e obj.${MACHINE_ARCH} ${.CURDIR}
.endif


.if ${.OBJDIR} == ${.CURDIR}
clean:
	@@cd ${.OBJDIR}/crypto && ${MAKE} clean
	@@cd ${.OBJDIR}/ssl && ${MAKE} clean
	@@rm -f ${MUNGEDFILES}
	@@rm -rf ${.OBJDIR}/${SSL_SRC}/include
.else 	
clean:
	@@cd ${.OBJDIR} && find . \! -type d -print | xargs rm
.endif

cleandir: clean

test:
	# Nothing here so far...

depend: prereq
	# Nothing here so far...

lint:
	# Nothing here so far...

tags:
	# Nothing here so far...
a10 1
.include <bsd.obj.mk>
@


1.11
log
@remove generated files and generated symlinks (in make clean)
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.10 2002/06/07 06:26:17 beck Exp $
d1021 1
a1021 1
clean: prereq
@


1.10
log
@typo - I am a luser and a moron.
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.9 2002/06/07 03:45:32 beck Exp $
d16 34
a49 1
	${.OBJDIR}/${SSL_SRC}/crypto/opensslconf.h \
d52 43
a94 3
	${.OBJDIR}/${SSL_SRC}/Makefile.ssl \
	${.OBJDIR}/${SSL_SRC}/Makefile \
	${.OBJDIR}/${SSL_SRC}/apps/der_chop \
d96 2
a97 3
	${.OBJDIR}/${SSL_SRC}/apps/CA.pl \
	${.OBJDIR}/${SSL_SRC}/apps/CA.pl.bak \
	${.OBJDIR}/des_random_key.pm \
a100 2
	${.OBJDIR}/SHA1.pm \
	${.OBJDIR}/BUF_MEM_new.pm \
d103 2
a104 1
	${.OBJDIR}/CRYPTO_set_locking_callback.pm
d1023 3
a1025 1
	@@cd ${.OBJDIR}/ssl && ${MAKE} clean && rm -f ${MUNGEDFILES}
@


1.9
log
@Merge OpenSSL 0.9.7-stable-20020605,
correctly autogenerate obj_mac.h
@
text
@d2 1
a2 1
# $OpenBSD: Makefile,v 1.8 2002/06/01 01:35:36 deraadt Exp $
d932 1
a932 1
	@@cd ${.OBJDIR}/ssl && ${MAKE} installq
@


1.8
log
@we do not need this to be Makefile.bsd-wrapper
@
text
@d2 1
a2 1
# $OpenBSD: Makefile.bsd-wrapper,v 1.50 2002/05/16 22:32:37 deraadt Exp $
d18 1
d928 1
a928 1
prereq:	${.OBJDIR}/${SSL_SRC}/Makefile.ssl ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h
d932 1
a932 1
	@@cd ${.OBJDIR}/ssl && ${MAKE} install
d936 3
a938 5
# Stupid ssl 0.9.6 fucks this up completely, won't even build if you
# try to regenerate obj_dat.h - even with a stock distrib. 
#${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h: ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h.src
#	@@cp ${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h.src \
#		${.OBJDIR}/${SSL_SRC}/crypto/objects/obj_dat.h
@


1.7
log
@remove old infrastructure which is not used anymore. Ok'd by beck@@
@
text
@d1 2
a2 1
.include <bsd.own.mk>
d4 3
a6 1
ECHO= /bin/echo
d8 2
a9 1
SUBDIR=	crypto ssl
d11 969
@


1.6
log
@subdir Makefiles should not contain anything else
@
text
@d2 1
d5 1
a5 5
.if exists(${.OBJDIR}/src-patent)
SUBDIR= crypto-patent ssl-patent
.else
SUBDIR= crypto ssl
.endif
@


1.5
log
@do not break things
@
text
@a10 5

distribution:
	@@echo "Installing ${DESTDIR}/etc/ssl/lib/ssleay.cnf"; \
	${INSTALL} ${INSTALL_COPY} -g ${BINGRP} -m 444 \
	   ${.CURDIR}/ssleay.cnf ${DESTDIR}/etc/ssl/lib/ssleay.cnf;
@


1.4
log
@Add ssl.8 man page - configuration and issues overview.
@
text
@a1 1
MAN = ssl.8
d10 2
a15 4

.include <bsd.man.mk>
.include <bsd.subdir.mk>

@


1.3
log
@Add install of reasonable default ssleay.cnf file
@
text
@d2 1
a2 1

d16 1
@


1.2
log
@do not build ssleay binary
@
text
@d11 5
d17 1
@


1.1
log
@Initial revision
@
text
@d6 1
a6 1
SUBDIR= crypto-patent ssl-patent ssleay 
d8 1
a8 1
SUBDIR= crypto ssl ssleay
a11 1

@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
