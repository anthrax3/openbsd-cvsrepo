head	1.58;
access;
symbols
	OPENBSD_6_0:1.57.0.2
	OPENBSD_6_0_BASE:1.57
	OPENBSD_5_9:1.56.0.2
	OPENBSD_5_9_BASE:1.56
	OPENBSD_5_8:1.53.0.4
	OPENBSD_5_8_BASE:1.53
	OPENBSD_5_7:1.49.0.4
	OPENBSD_5_7_BASE:1.49
	OPENBSD_5_6:1.47.0.4
	OPENBSD_5_6_BASE:1.47
	OPENBSD_5_5:1.27.0.8
	OPENBSD_5_5_BASE:1.27
	OPENBSD_5_4:1.27.0.4
	OPENBSD_5_4_BASE:1.27
	OPENBSD_5_3:1.27.0.2
	OPENBSD_5_3_BASE:1.27
	OPENBSD_5_2:1.24.0.2
	OPENBSD_5_2_BASE:1.24
	OPENBSD_5_1_BASE:1.23
	OPENBSD_5_1:1.23.0.6
	OPENBSD_5_0:1.23.0.4
	OPENBSD_5_0_BASE:1.23
	OPENBSD_4_9:1.23.0.2
	OPENBSD_4_9_BASE:1.23
	OPENBSD_4_8:1.22.0.8
	OPENBSD_4_8_BASE:1.22
	OPENBSD_4_7:1.22.0.4
	OPENBSD_4_7_BASE:1.22
	OPENBSD_4_6:1.22.0.6
	OPENBSD_4_6_BASE:1.22
	OPENBSD_4_5:1.22.0.2
	OPENBSD_4_5_BASE:1.22
	pre_openssl_0_9_8h:1.21
	OPENBSD_4_4:1.21.0.12
	OPENBSD_4_4_BASE:1.21
	OPENBSD_4_3:1.21.0.10
	OPENBSD_4_3_BASE:1.21
	OPENBSD_4_2:1.21.0.8
	OPENBSD_4_2_BASE:1.21
	OPENBSD_4_1:1.21.0.6
	OPENBSD_4_1_BASE:1.21
	OPENBSD_4_0:1.21.0.4
	OPENBSD_4_0_BASE:1.21
	OPENBSD_3_9:1.21.0.2
	OPENBSD_3_9_BASE:1.21
	OPENBSD_3_8:1.20.0.2
	OPENBSD_3_8_BASE:1.20
	OPENBSD_3_7:1.19.0.4
	OPENBSD_3_7_BASE:1.19
	OPENBSD_3_6:1.19.0.2
	OPENBSD_3_6_BASE:1.19
	OPENBSD_3_5:1.17.0.4
	OPENBSD_3_5_BASE:1.17
	OPENBSD_3_4:1.17.0.2
	OPENBSD_3_4_BASE:1.17
	OPENBSD_3_3:1.16.0.4
	OPENBSD_3_3_BASE:1.16
	OPENBSD_3_2:1.16.0.2
	OPENBSD_3_2_BASE:1.16
	OPENBSD_3_1:1.10.0.8
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.6
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.4
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.2
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.9.0.4
	OPENBSD_2_7_BASE:1.9
	OPENBSD_2_6:1.9.0.2
	OPENBSD_2_6_BASE:1.9
	OPENBSD_2_5:1.7.0.2
	OPENBSD_2_5_BASE:1.7
	OPENBSD_2_4:1.5.0.2
	OPENBSD_2_4_BASE:1.5
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.58
date	2016.09.03.11.33.42;	author beck;	state dead;
branches;
next	1.57;
commitid	euW5k56W7LWWOAcz;

1.57
date	2016.03.06.14.52.15;	author beck;	state Exp;
branches;
next	1.56;
commitid	7dzq0qLU3rfFj8Ei;

1.56
date	2015.09.11.17.54.23;	author jsing;	state Exp;
branches;
next	1.55;
commitid	xUO4TxX2aWuC1cir;

1.55
date	2015.09.11.14.52.17;	author jsing;	state Exp;
branches;
next	1.54;
commitid	OyOoHFozRNCvi11H;

1.54
date	2015.08.29.16.51.17;	author doug;	state Exp;
branches;
next	1.53;
commitid	dB5GbUaVT2h1CFUT;

1.53
date	2015.06.27.22.42.02;	author doug;	state Exp;
branches;
next	1.52;
commitid	SCorSKxSjA70Bnvw;

1.52
date	2015.06.05.21.42.37;	author tobiasu;	state Exp;
branches;
next	1.51;
commitid	z1Vkut2f7MalRGIl;

1.51
date	2015.05.26.19.38.13;	author miod;	state Exp;
branches;
next	1.50;
commitid	CPCMIBVQKamFPfhN;

1.50
date	2015.05.17.22.39.39;	author kettenis;	state Exp;
branches;
next	1.49;
commitid	hPAjcz6hVT7CzV2p;

1.49
date	2015.02.07.03.26.06;	author jsing;	state Exp;
branches;
next	1.48;
commitid	Yif3gzcz1XVFGWtH;

1.48
date	2015.02.06.09.36.16;	author doug;	state Exp;
branches;
next	1.47;
commitid	t6BPqtyhmeNgetxc;

1.47
date	2014.07.12.03.27.23;	author deraadt;	state Exp;
branches;
next	1.46;
commitid	znbpOnW2JMmvIvuE;

1.46
date	2014.05.29.19.58.48;	author beck;	state Exp;
branches;
next	1.45;

1.45
date	2014.05.25.17.29.51;	author tedu;	state Exp;
branches;
next	1.44;

1.44
date	2014.05.18.11.20.08;	author miod;	state Exp;
branches;
next	1.43;

1.43
date	2014.05.15.19.39.46;	author miod;	state Exp;
branches;
next	1.42;

1.42
date	2014.05.12.19.14.14;	author miod;	state Exp;
branches;
next	1.41;

1.41
date	2014.05.05.15.03.22;	author tedu;	state Exp;
branches;
next	1.40;

1.40
date	2014.04.23.05.13.57;	author beck;	state Exp;
branches;
next	1.39;

1.39
date	2014.04.17.20.44.04;	author tedu;	state Exp;
branches;
next	1.38;

1.38
date	2014.04.16.21.16.33;	author tedu;	state Exp;
branches;
next	1.37;

1.37
date	2014.04.16.20.39.09;	author tedu;	state Exp;
branches;
next	1.36;

1.36
date	2014.04.16.17.59.17;	author tedu;	state Exp;
branches;
next	1.35;

1.35
date	2014.04.15.21.47.56;	author tedu;	state Exp;
branches;
next	1.34;

1.34
date	2014.04.14.22.12.26;	author beck;	state Exp;
branches;
next	1.33;

1.33
date	2014.04.14.18.45.55;	author tedu;	state Exp;
branches;
next	1.32;

1.32
date	2014.04.13.15.49.50;	author miod;	state Exp;
branches;
next	1.31;

1.31
date	2014.04.11.22.51.54;	author miod;	state Exp;
branches;
next	1.30;

1.30
date	2014.04.10.20.00.27;	author deraadt;	state Exp;
branches;
next	1.29;

1.29
date	2014.04.10.18.09.08;	author deraadt;	state Exp;
branches;
next	1.28;

1.28
date	2014.04.10.18.03.44;	author tedu;	state Exp;
branches;
next	1.27;

1.27
date	2013.02.14.15.11.44;	author markus;	state Exp;
branches;
next	1.26;

1.26
date	2012.10.13.21.31.56;	author djm;	state Exp;
branches;
next	1.25;

1.25
date	2012.08.02.13.38.39;	author okan;	state Exp;
branches;
next	1.24;

1.24
date	2012.07.11.11.02.48;	author sthen;	state Exp;
branches;
next	1.23;

1.23
date	2010.10.01.23.02.02;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2008.09.06.12.20.16;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2005.11.24.20.49.23;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	2005.03.30.13.08.02;	author markus;	state Exp;
branches;
next	1.19;

1.19
date	2004.08.06.22.41.41;	author pefo;	state Exp;
branches;
next	1.18;

1.18
date	2004.04.27.09.40.19;	author avsm;	state Exp;
branches;
next	1.17;

1.17
date	2003.06.02.08.45.58;	author markus;	state Exp;
branches;
next	1.16;

1.16
date	2002.09.26.11.39.50;	author markus;	state Exp;
branches;
next	1.15;

1.15
date	2002.09.03.18.59.56;	author markus;	state Exp;
branches;
next	1.14;

1.14
date	2002.08.31.00.17.54;	author markus;	state Exp;
branches;
next	1.13;

1.13
date	2002.07.30.11.08.06;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2002.05.15.02.29.21;	author beck;	state Exp;
branches;
next	1.11;

1.11
date	2002.05.15.01.49.06;	author beck;	state Exp;
branches;
next	1.10;

1.10
date	2000.10.13.21.31.30;	author hugh;	state Exp;
branches;
next	1.9;

1.9
date	99.10.10.21.32.02;	author maja;	state Exp;
branches;
next	1.8;

1.8
date	99.09.29.04.37.44;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	98.11.29.23.29.40;	author millert;	state Exp;
branches;
next	1.6;

1.6
date	98.11.18.23.30.37;	author niklas;	state Exp;
branches;
next	1.5;

1.5
date	98.10.12.05.26.13;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	98.10.08.17.51.49;	author marc;	state Exp;
branches;
next	1.3;

1.3
date	98.10.08.17.32.01;	author marc;	state Exp;
branches;
next	1.2;

1.2
date	98.10.06.17.55.42;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.29;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.29;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.58
log
@Remove the libssl/ssl directory
@
text
@# $OpenBSD: Makefile,v 1.57 2016/03/06 14:52:15 beck Exp $

LIB=	ssl

SSL_SRC=	${.CURDIR}/../../libssl/src
LSSL_SRC=	${SSL_SRC}/ssl

.include <bsd.own.mk>
CFLAGS+= -Wall -Wundef
.if ${COMPILER_VERSION:L} != "gcc3"
CFLAGS+= -Werror
.endif
CFLAGS+= -DLIBRESSL_INTERNAL
CFLAGS+= -I${SSL_SRC}

LDADD+= -L${BSDOBJDIR}/lib/libcrypto/crypto -lcrypto

SRCS=\
	s3_srvr.c s3_clnt.c s3_lib.c s3_pkt.c s3_both.c \
	s23_srvr.c s23_clnt.c s23_lib.c s23_pkt.c \
	t1_meth.c t1_srvr.c t1_clnt.c t1_lib.c t1_enc.c \
	d1_meth.c d1_srvr.c d1_clnt.c d1_lib.c d1_pkt.c \
	d1_both.c d1_enc.c d1_srtp.c \
	ssl_lib.c ssl_err2.c ssl_cert.c ssl_sess.c \
	ssl_ciph.c ssl_stat.c ssl_rsa.c \
	ssl_asn1.c ssl_txt.c ssl_algs.c \
	bio_ssl.c ssl_err.c t1_reneg.c \
	pqueue.c
SRCS+=	s3_cbc.c
SRCS+=	bs_ber.c bs_cbb.c bs_cbs.c

HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h 

.PATH:	${LSSL_SRC}

includes:
	@@test -d ${DESTDIR}/usr/include/openssl || \
	    mkdir ${DESTDIR}/usr/include/openssl
	@@cd ${LSSL_SRC}; for i in $(HDRS); do \
	    j="cmp -s $$i ${DESTDIR}/usr/include/openssl/`basename $$i` || \
	    ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 $$i\
		${DESTDIR}/usr/include/openssl"; \
	    echo $$j; \
	    eval "$$j"; \
	done;

.include <bsd.lib.mk>

beforeinstall:
	nm -o lib${LIB}.a | egrep -w 'printf|fprintf' && \
	    (echo please fix stdio usage in this library; false) || true
@


1.57
log
@Make sure stdio functions don't end up in the library, from miod@@
ok doug@@ bcook@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.56 2015/09/11 17:54:23 jsing Exp $
@


1.56
log
@Merge the remnants of s3_enc.c into t1_enc.c.

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.55 2015/09/11 14:52:17 jsing Exp $
d48 4
@


1.55
log
@Put the *method* data structures and functions in the same place.
We can also now nuke ssl23_get_method() since it is the same as
tls1_get_method(). And the empty file can bite the dust.

ok bcook@@ miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.54 2015/08/29 16:51:17 doug Exp $
d19 1
a19 1
	s3_srvr.c s3_clnt.c s3_lib.c s3_enc.c s3_pkt.c s3_both.c \
@


1.54
log
@Remove SSLv3 method data structs and unlink s3_meth.c from the build.

ok jsing@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.53 2015/06/27 22:42:02 doug Exp $
d20 1
a20 1
	s23_meth.c s23_srvr.c s23_clnt.c s23_lib.c s23_pkt.c \
@


1.53
log
@Fix pointer to unsigned long conversion.

bcook@@ notes that this check really only impacted 64-bit Windows.  Also,
changed the check to be unsigned for consistency.

ok bcook@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.52 2015/06/05 21:42:37 tobiasu Exp $
d19 1
a19 1
	s3_meth.c s3_srvr.c s3_clnt.c s3_lib.c s3_enc.c s3_pkt.c s3_both.c \
@


1.52
log
@Fix library search path so we link against the freshly built libcrypto.so
instead of a stale one.

ok miod@@ mpi@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.51 2015/05/26 19:38:13 miod Exp $
d9 1
a9 1
CFLAGS+= -Wall
@


1.51
log
@Use a relative path against BSDOBJDIR to pick libcrypto; makes cross-lib
work again.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.50 2015/05/17 22:39:39 kettenis Exp $
d16 1
a16 1
LDADD+= -L${BSDOBJDIR}/lib/libcrypto/crypto/obj -lcrypto
@


1.50
log
@Record inter-library dependencies between libcrypto, libssl and libtls
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.49 2015/02/07 03:26:06 jsing Exp $
d16 1
a16 1
LDADD+= -L${.CURDIR}/../../libcrypto/crypto/obj -lcrypto
@


1.49
log
@Stop defining TERMIOS, ANSI_SOURCE and OPENSSL_NO_RC5 for libssl builds.

The first two are unused in libssl/libcrypto and OPENSSL_NO_RC5 is already
defined via openssl/opensslfeatures.h.

ok beck@@ doug@@ miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.48 2015/02/06 09:36:16 doug Exp $
d15 2
@


1.48
log
@Import BoringSSL's crypto bytestring and crypto bytebuilder APIs.

This is imported with as few changes as possible for the initial commit.
I removed OPENSSL_EXPORT, replaced OPENSSL_malloc() etc with malloc()
and changed a few header includes.

BoringSSL has this as part of their public API.  We're leaving it internal
to libssl for now.

Based on BoringSSL's CBB/CBS API as of commit
c5cc15b4f5b1d6e9b9112cb8d30205a638aa2c54.

input + ok jsing@@, miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.47 2014/07/12 03:27:23 deraadt Exp $
a13 2
CFLAGS+= -DTERMIOS -DANSI_SOURCE
CFLAGS+= -DOPENSSL_NO_RC5
@


1.47
log
@-DOPENSSL_NO_KRB5 is no longer needed
ok guenther
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.46 2014/05/29 19:58:48 beck Exp $
d30 1
@


1.46
log
@Make make includes work again without kssl.h
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.45 2014/05/25 17:29:51 tedu Exp $
d15 1
a15 1
CFLAGS+= -DOPENSSL_NO_RC5 -DOPENSSL_NO_KRB5
@


1.45
log
@define LIBRESSL_INTERNAL, and use it to hide the bad stuff from ourselves
ok beck
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.44 2014/05/18 11:20:08 miod Exp $
d31 1
a31 1
HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h kssl.h
@


1.44
log
@Omit -Werror if building with gcc3, for it triggers "redefinition of `pqueue'"
warnings now that pqueue.h has been removed from public scope.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.43 2014/05/15 19:39:46 miod Exp $
d13 1
@


1.43
log
@No longer make pqueue.h a public (and installed) header file. Replace its
inclusion in <ssl/dtls1.h> by the benign
`struct _pqueue; typedef struct _pqueue *pqueue;'.

Note that said dtls1.h should probably be considered a private header as well...

ok beck@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.42 2014/05/12 19:14:14 miod Exp $
d8 5
a12 1
CFLAGS+= -Wall -Werror
@


1.42
log
@Move the `pqueue' part of libcrypto, which is a glorified sorted linked list
of 64-bit data, and only used by DTLS, to libssl where it belongs.

Remove pqueue_print() which is a debugging interface and serves no useful
purpose, except for the regress test, which grows its own pqueue_print()
routine.

Bump libcrypto major and libssl minor.

WARNING: do not update your tree right now, more changes are coming, which
will ride the libcrypto major bump.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.41 2014/05/05 15:03:22 tedu Exp $
d26 1
a26 1
HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h kssl.h pqueue.h
@


1.41
log
@Remove SRP and Kerberos support from libssl. These are complex protocols
all on their own and we can't effectively maintain them without using them,
which we don't. If the need arises, the code can be resurrected.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.40 2014/04/23 05:13:57 beck Exp $
d22 2
a23 1
	bio_ssl.c ssl_err.c t1_reneg.c
d26 1
a26 1
HDRS=	srtp.h ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h kssl.h
@


1.40
log
@Make libssl and libcrypto compile with -Werror
ok miod@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.39 2014/04/17 20:44:04 tedu Exp $
d22 1
a22 1
	bio_ssl.c ssl_err.c kssl.c tls_srp.c t1_reneg.c
@


1.39
log
@-Wall
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.38 2014/04/16 21:16:33 tedu Exp $
d8 1
a8 1
CFLAGS+= -Wall
@


1.38
log
@TANSTAAFL - delete the buf freelist code. if you need a better malloc, get
a better malloc. ok beck deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.37 2014/04/16 20:39:09 tedu Exp $
d8 1
@


1.37
log
@add back SRP. i was being too greedy.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.36 2014/04/16 17:59:17 tedu Exp $
a9 1
CFLAGS+= -DOPENSSL_NO_BUF_FREELISTS
@


1.36
log
@disentangle SRP code from TLS
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.35 2014/04/15 21:47:56 tedu Exp $
d22 1
a22 1
	bio_ssl.c ssl_err.c kssl.c t1_reneg.c
@


1.35
log
@remove ssl2 support even more completely.
in the process, always include ssl3 and tls1, we don't need config options
for them. when the time comes to expire ssl3, it will be with an ax.
checked by miod
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.34 2014/04/14 22:12:26 beck Exp $
d22 1
a22 1
	bio_ssl.c ssl_err.c kssl.c tls_srp.c t1_reneg.c
@


1.34
log
@o_dir.c has a questionable odor.. now that we got rid of OPENSSL_DIR_XXX
remove it from the build.. we can cvs rm it and the files it includes
once we know for sure ports are good.
ok deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.33 2014/04/14 18:45:55 tedu Exp $
a9 1
CFLAGS+= -DOPENSSL_NO_SSL2
a13 1
	s2_meth.c s2_srvr.c s2_clnt.c s2_lib.c s2_enc.c s2_pkt.c \
@


1.33
log
@make OPENSSL_NO_HEARTBLEED the default and only option. ok deraadt miod
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.32 2014/04/13 15:49:50 miod Exp $
a25 1
SRCS+=	o_dir.c
@


1.32
log
@Move undocumented internal OPENSSL_DIR interface from libcrypto to libssl,
so that libssl no longer need to access the non-external headers of libcrypto
to build.
No library bump, riding upon the recent update.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.31 2014/04/11 22:51:54 miod Exp $
d11 1
a11 1
CFLAGS+= -DOPENSSL_NO_BUF_FREELISTS -DOPENSSL_NO_HEARTBEATS
@


1.31
log
@Move build machinery for libcrypto from libssl/crypto to libcrypto, as well
as configuration files; split manpages and .pc files between libcrypto and
libssl.
No functional change, only there to make engineering easier, and libcrypto
sources are still found in libssl/src/crypto at the moment.

ok reyk@@, also discussed with deraadt@@ beck@@ and the usual crypto suspects.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.30 2014/04/10 20:00:27 deraadt Exp $
d12 1
a12 1
CFLAGS+= -I${SSL_SRC} -I${SSL_SRC}/crypto
d26 1
@


1.30
log
@oops, typo, spotted by Matthias Scheler
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.29 2014/04/10 18:09:08 deraadt Exp $
d5 2
a6 3
SSLEAYDIST= src

LSSL_SRC= ${.CURDIR}/../${SSLEAYDIST}/ssl
d12 1
a12 1
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST} -I${.CURDIR}/../${SSLEAYDIST}/crypto
@


1.29
log
@Disable Segglemann's RFC520 hearbeat.

I am completely blown away that the same IETF that cannot efficiently
allocate needed protocol, service numbers, or other such things when
they are needed, can so quickly and easily rubber stamp the addition
of a 64K Covert Channel in a critical protocol.  The organization
should look at itself very carefully, find out how this this happened,
and everyone who allowed this to happen on their watch should be
evicted from the decision making process.  IETF, I don't trust you.

ok tedu markus
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.28 2014/04/10 18:03:44 tedu Exp $
d12 1
a12 1
CFLAGS+= -DOPENSSL_NO_BUF_FREELISTS -DOPENSSL_NO_HEARTBEAT
@


1.28
log
@disable buf freelists. we'll see what happens next.
ok deraadt
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.27 2013/02/14 15:11:44 markus Exp $
d12 1
a12 1
CFLAGS+= -DOPENSSL_NO_BUF_FREELISTS
@


1.27
log
@cherry pick bugfixes for http://www.openssl.org/news/secadv_20130205.txt
from the openssl git (changes between openssl 1.0.1c and 1.0.1d).
ok djm@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.26 2012/10/13 21:31:56 djm Exp $
d12 1
@


1.26
log
@Makefile and header changes for OpenSSL-1.0.1c

major cranks
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.24 2012/07/11 11:02:48 sthen Exp $
d25 1
@


1.25
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d9 1
a9 2
CFLAGS+= -DOPENSSL_NO_IDEA -DTERMIOS -DANSI_SOURCE
CFLAGS+= -DOPENSSL_NO_MDC2
d20 1
a20 1
	d1_both.c d1_enc.c \
d24 1
a24 1
	bio_ssl.c ssl_err.c kssl.c t1_reneg.c
d26 1
a26 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h tls1.h dtls1.h kssl.h
@


1.24
log
@Disable SSLv2 in OpenSSL.  No objections from djm.
Brad, jasper and naddy helped with test builds, fixing ports, etc.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.23 2010/10/01 23:02:02 djm Exp $
a3 1
WANTLINT=
@


1.23
log
@update supporting files, crank library majors
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.22 2008/09/06 12:20:16 djm Exp $
d13 1
@


1.22
log
@remerge local tweaks, update per-arch configuration headers, update
Makefiles, crank shlib_version
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.21 2005/11/24 20:49:23 deraadt Exp $
d10 1
a10 15
.if ${MACHINE_ARCH} == "i386"
CFLAGS+= -DL_ENDIAN -DBN_ASM
.else
.if ${MACHINE_ARCH} == "vax"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "alpha"
# no ENDIAN stuff defined for alpha
.else
CFLAGS+= -DB_ENDIAN
.endif
.endif 
.endif

CFLAGS+= -DOPENSSL_NO_IDEA -DTERMIOS -DANSI_SOURCE -DNO_ERR 
d12 1
a12 1
CFLAGS+= -DOPENSSL_NO_RC5 -DOPENSSL_NO_KRB5 -DHAVE_DLFCN_H 
d15 11
a25 8
SRCS=	bio_ssl.c s2_clnt.c s3_both.c s3_srvr.c ssl_err2.c ssl_txt.c	\
	t1_srvr.c s23_clnt.c s2_enc.c s3_clnt.c ssl_algs.c ssl_lib.c	\
	s23_lib.c s2_lib.c s3_enc.c ssl_asn1.c ssl_rsa.c	\
	t1_clnt.c s23_meth.c s2_meth.c s3_lib.c ssl_cert.c ssl_sess.c	\
	t1_enc.c s23_pkt.c s2_pkt.c s3_meth.c ssl_ciph.c ssl_stat.c	\
	t1_lib.c s23_srvr.c s2_srvr.c s3_pkt.c ssl_err.c \
	t1_meth.c \
	d1_both.c d1_clnt.c d1_enc.c d1_lib.c d1_meth.c d1_pkt.c d1_srvr.c
d27 1
a27 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h tls1.h kssl.h dtls1.h
@


1.21
log
@use WANTLINT= (on all architectures)
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.20 2005/03/30 13:08:02 markus Exp $
d27 1
a27 1
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}
d35 2
a36 1
	t1_meth.c 
d38 1
a38 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h tls1.h kssl.h 
@


1.20
log
@enable openssl DSO (typo, it's -DDSO_DLFCN not -DSO_DLFCN); Douglas Santos
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.19 2004/08/06 22:41:41 pefo Exp $
d4 1
@


1.19
log
@cleanup mips
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.18 2004/04/27 09:40:19 avsm Exp $
d25 1
a25 1
CFLAGS+= -DOPENSSL_NO_RC5 -DOPENSSL_NO_KRB5 -DSO_DLFCN -DHAVE_DLFCN_H 
@


1.18
log
@do not link ssltest.c into libssl, stops main/doit symbols from being
exported. no bump needed since nothing should use them, markus@@ ok
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.17 2003/06/02 08:45:58 markus Exp $
a11 3
.if ${MACHINE_ARCH} == "mips"
CFLAGS+= -DL_ENDIAN
.else
a18 1
.endif
@


1.17
log
@swap /usr/include/openssl and /usr/include/ssl, clean up the Makefiles
get rid old include files; with itojun@@ and tdeval@@; ok itojun@@, deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.16 2002/09/26 11:39:50 markus Exp $
d34 1
a34 1
	ssltest.c s23_lib.c s2_lib.c s3_enc.c ssl_asn1.c ssl_rsa.c	\
@


1.16
log
@remove MDC2; patents
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.15 2002/09/03 18:59:56 markus Exp $
d45 9
a53 13
	@@test -d ${DESTDIR}/usr/include/ssl || mkdir ${DESTDIR}/usr/include/ssl
	@@d=`mktemp -d /tmp/libsslXXXXXXXXXX`; \
	cd ${LSSL_SRC}; for i in $(HDRS); do \
		f=`basename $$i`; \
		j="sed 's/<openssl/<ssl/' \
		       $$i >$$d/$$f && \
		(cmp -s $$d/$$f ${DESTDIR}/usr/include/ssl/$$f || \
		${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 \
		$$d/$$f ${DESTDIR}/usr/include/ssl)"; \
		echo $$j; \
		eval "$$j"; \
	done; \
	rm -rf $$d
@


1.15
log
@build OpenSSL without symlink trees:
* manpage related things moved to src/libssl/man/Makefile
* there are now 3 obj directories src/libssl/{crypto,ssl,man}/ instead
  of one single src/libssl/obj
* instead of running Configure (with generates lots of symlinks, and
  opensslconf.h) this patch stores pre-computed opensslconf.h files
  in src/libssl/crypto/arch
* requires a make includes before the library can be built
* libssl and libcrypto can be build separately
  (e.g. cd src/libssl/ssl && make obj && make)
* make depend is now supported
* no more symlink trees
tested by miod@@ and fries@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile,v 1.12 2002/08/30 15:08:11 markus Exp $
d28 1
@


1.14
log
@don't install private headers
remove trailing whitespace
@
text
@d1 1
a7 1
LCRYPTO_SRC= ${.CURDIR}/../${SSLEAYDIST}/crypto
a28 2
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}/include
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}/crypto
@


1.13
log
@apply patches from OpenSSL Security Advisory [30 July 2002],
http://marc.theaimsgroup.com/?l=openssl-dev&m=102802395104110&w=2
@
text
@d41 1
a41 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h ssl_locl.h tls1.h kssl.h kssl_lcl.h
a60 5





@


1.12
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d30 1
@


1.11
log
@OpenSSL 0.9.7
@
text
@d4 1
a4 1
SSLEAYDIST= openssl
@


1.10
log
@vax support; checked by beck.
@
text
@d4 1
a4 1
SSLEAYDIST= src
d27 2
a28 1
CFLAGS+= -DNO_IDEA -DTERMIOS -DANSI_SOURCE 
d30 1
d38 1
a38 1
	t1_meth.c
d40 1
a40 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h ssl_locl.h tls1.h
@


1.9
log
@Make mips compile. -moj
@
text
@d15 3
d25 1
@


1.8
log
@OpenSSL 0.9.4 merge
@
text
@d12 1
a12 4
.if ${MACHINE_ARCH} == "arc"
CFLAGS+= -DL_ENDIAN
.else
.if ${MACHINE_ARCH} == "pmax"
a18 1
.endif
@


1.7
log
@create ${DESTDIR}/usr/include/ssl if it does not exist.  This is needed because the mtree is done after "make includes"
@
text
@d28 1
a28 42
CFLAGS+= -I${.CURDIR}/../${SSLEAYDIST}
CFLAGS+= -I${LSSL_SRC} -I${LCRYPTO_SRC}
CFLAGS+= -I${LCRYPTO_SRC}/md2
CFLAGS+= -I${LCRYPTO_SRC}/md5
CFLAGS+= -I${LCRYPTO_SRC}/sha
CFLAGS+= -I${LCRYPTO_SRC}/mdc2
CFLAGS+= -I${LCRYPTO_SRC}/hmac
CFLAGS+= -I${LCRYPTO_SRC}/ripemd
CFLAGS+= -I${LCRYPTO_SRC}/des
CFLAGS+= -I${LCRYPTO_SRC}/rc2
CFLAGS+= -I${LCRYPTO_SRC}/rc4
CFLAGS+= -I${LCRYPTO_SRC}/rc5
CFLAGS+= -I${LCRYPTO_SRC}/idea
CFLAGS+= -I${LCRYPTO_SRC}/bf
CFLAGS+= -I${LCRYPTO_SRC}/cast
CFLAGS+= -I${LCRYPTO_SRC}/bn
CFLAGS+= -I${LCRYPTO_SRC}/rsa
CFLAGS+= -I${LCRYPTO_SRC}/dsa
CFLAGS+= -I${LCRYPTO_SRC}/dh
CFLAGS+= -I${LCRYPTO_SRC}/buffer
CFLAGS+= -I${LCRYPTO_SRC}/bio
CFLAGS+= -I${LCRYPTO_SRC}/stack
CFLAGS+= -I${LCRYPTO_SRC}/lhash
CFLAGS+= -I${LCRYPTO_SRC}/rand
CFLAGS+= -I${LCRYPTO_SRC}/err
CFLAGS+= -I${LCRYPTO_SRC}/objects
CFLAGS+= -I${LCRYPTO_SRC}/evp
CFLAGS+= -I${LCRYPTO_SRC}/pem
CFLAGS+= -I${LCRYPTO_SRC}/asn1
CFLAGS+= -I${LCRYPTO_SRC}/x509
CFLAGS+= -I${LCRYPTO_SRC}/conf
CFLAGS+= -I${LCRYPTO_SRC}/txt_db
CFLAGS+= -I${LCRYPTO_SRC}/pkcs7

SRCS=	s2_meth.c   s2_srvr.c s2_clnt.c  s2_lib.c  s2_enc.c s2_pkt.c \
	s3_meth.c   s3_srvr.c s3_clnt.c  s3_lib.c  s3_enc.c s3_pkt.c s3_both.c \
	s23_meth.c s23_srvr.c s23_clnt.c s23_lib.c          s23_pkt.c \
	t1_meth.c   t1_srvr.c t1_clnt.c  t1_lib.c  t1_enc.c \
	ssl_lib.c ssl_err2.c ssl_cert.c ssl_sess.c \
	ssl_ciph.c ssl_stat.c ssl_rsa.c \
	ssl_asn1.c ssl_txt.c ssl_algs.c \
	bio_ssl.c ssl_err.c
d30 9
a38 1
HDRS=	ssl.h ssl2.h ssl3.h ssl23.h tls1.h
d47 1
a47 1
		j="sed 's/#include \"\\([^\"]*\\)\"/#include <ssl\\/\\1>/' \
d58 5
@


1.6
log
@"foo.h" -> <ssl/foo.h> in ssl includes, so we do not need -I/usr/include/ssl
and we won't be bothered by nameclashes with application headers
@
text
@d76 1
@


1.5
log
@*UNTESTED* Makefile and configure changes that may work with pmax and arc.
*These need to be tested by someone who has one!!*
@
text
@d76 6
a81 2
	@@cd ${LSSL_SRC}; for i in $(HDRS); do \
		j="cmp -s $$i ${DESTDIR}/usr/include/ssl/`basename $$i` || \
d83 1
a83 1
		$$i ${DESTDIR}/usr/include/ssl"; \
d86 2
a87 2
	done

@


1.4
log
@back out previous change.  Theo says:
marc, this is wrong.
mtree builds that directory.  we never do mkdir's in makefiles.
You also should not have modified ANY of those Makefiles, since they are
part of the ssl distribution.  please undo this change.

And I say: developers, be sure to do a mkdir /usr/include/ssl before
a bake build as include files are installed as the 2nd step.
@
text
@d12 6
d24 3
@


1.3
log
@create /usr/include/ssl before trying to copy files into it.
If you've had a recent build fail check /usr/include/ssl.
if it is a file instead of a directory remove it and try again
after updating with these changes.
@
text
@a66 1
	@@install -d -o ${BINOWN} -g ${BINGRP} -m 755 ${DESTDIR}/usr/include/ssl
@


1.2
log
@Fix makefile problems - Don't use SSLeay style include link farm to
build - get includes from where they really live.
@
text
@d67 1
@


1.1
log
@Initial revision
@
text
@d7 1
a7 2
SSLEAY_INC= ${.CURDIR}/../${SSLEAYDIST}/include
LCRYPTO_INC= ${.CURDIR}/../${SSLEAYDIST}/crypto
d19 33
a51 1
CFLAGS+= -I${LSSL_SRC} -I${SSLEAY_INC} -I${LCRYPTO_INC}
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
