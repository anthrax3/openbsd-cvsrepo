head	1.4;
access;
symbols
	OPENBSD_6_2:1.4.0.4
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.2.0.4
	OPENBSD_6_1_BASE:1.2;
locks; strict;
comment	@.\" @;


1.4
date	2017.08.19.23.45.10;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	mstgT3ydyFicCGCv;

1.3
date	2017.04.10.14.00.51;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	Tw2DA9TGzLMY1xQg;

1.2
date	2016.12.01.15.40.14;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	NOteutkjK6zrJ5Ry;

1.1
date	2016.11.05.15.32.19;	author schwarze;	state Exp;
branches;
next	;
commitid	ZM7UFzG8SDjLS2hv;


desc
@@


1.4
log
@Import SSL_CTX_set_min_proto_version(3) from OpenSSL, suggested by jsing@@.
While importing:
* Fix the prototypes, they all contained wrong datatypes.
* Delete SSL3_VERSION which is no longer supported.
* Delete TLS1_3_VERSION and DTLS1_2_VERSION, not yet supported.
* Delete the lie that these would be macros.
* Improve SEE ALSO and HISTORY sections.
@
text
@.\"	$OpenBSD: SSL_CTX_set_options.3,v 1.3 2017/04/10 14:00:51 schwarze Exp $
.\"	OpenSSL 361a1191 Dec 6 17:56:41 2015 +0100
.\"
.\" This file was written by Lutz Jaenicke <jaenicke@@openssl.org>,
.\" Bodo Moeller <bodo@@openssl.org>, and
.\" Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2001-2003, 2005, 2007, 2009, 2010, 2013-2015
.\" The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: April 10 2017 $
.Dt SSL_CTX_SET_OPTIONS 3
.Os
.Sh NAME
.Nm SSL_CTX_set_options ,
.Nm SSL_set_options ,
.Nm SSL_CTX_clear_options ,
.Nm SSL_clear_options ,
.Nm SSL_CTX_get_options ,
.Nm SSL_get_options ,
.Nm SSL_get_secure_renegotiation_support
.Nd manipulate SSL options
.Sh SYNOPSIS
.In openssl/ssl.h
.Ft long
.Fn SSL_CTX_set_options "SSL_CTX *ctx" "long options"
.Ft long
.Fn SSL_set_options "SSL *ssl" "long options"
.Ft long
.Fn SSL_CTX_clear_options "SSL_CTX *ctx" "long options"
.Ft long
.Fn SSL_clear_options "SSL *ssl" "long options"
.Ft long
.Fn SSL_CTX_get_options "SSL_CTX *ctx"
.Ft long
.Fn SSL_get_options "SSL *ssl"
.Ft long
.Fn SSL_get_secure_renegotiation_support "SSL *ssl"
.Sh DESCRIPTION
.Fn SSL_CTX_set_options
adds the options set via bitmask in
.Fa options
to
.Fa ctx .
Options already set before are not cleared!
.Pp
.Fn SSL_set_options
adds the options set via bitmask in
.Fa options
to
.Fa ssl .
Options already set before are not cleared!
.Pp
.Fn SSL_CTX_clear_options
clears the options set via bitmask in
.Fa options
to
.Fa ctx .
.Pp
.Fn SSL_clear_options
clears the options set via bitmask in
.Fa options
to
.Fa ssl .
.Pp
.Fn SSL_CTX_get_options
returns the options set for
.Fa ctx .
.Pp
.Fn SSL_get_options
returns the options set for
.Fa ssl .
.Pp
.Fn SSL_get_secure_renegotiation_support
indicates whether the peer supports secure renegotiation.
.Pp
All these functions are implemented using macros.
.Pp
The behaviour of the SSL library can be changed by setting several options.
The options are coded as bitmasks and can be combined by a bitwise OR
operation (|).
.Pp
.Fn SSL_CTX_set_options
and
.Fn SSL_set_options
affect the (external) protocol behaviour of the SSL library.
The (internal) behaviour of the API can be changed by using the similar
.Xr SSL_CTX_set_mode 3
and
.Xr SSL_set_mode 3
functions.
.Pp
During a handshake, the option settings of the SSL object are used.
When a new SSL object is created from a context using
.Xr SSL_new 3 ,
the current option setting is copied.
Changes to
.Fa ctx
do not affect already created
.Vt SSL
objects.
.Fn SSL_clear
does not affect the settings.
.Pp
The following
.Em bug workaround
options are available:
.Bl -tag -width Ds
.It Dv SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
Disables a countermeasure against a TLS 1.0 protocol vulnerability
affecting CBC ciphers, which cannot be handled by some broken SSL
implementations.
This option has no effect for connections using other ciphers.
.It Dv SSL_OP_TLSEXT_PADDING
Adds a padding extension to ensure the ClientHello size is never between 256
and 511 bytes in length.
This is needed as a workaround for some implementations.
.It Dv SSL_OP_ALL
All of the above bug workarounds.
.El
.Pp
It is usually safe to use
.Dv SSL_OP_ALL
to enable the bug workaround options if compatibility with somewhat broken
implementations is desired.
.Pp
The following
.Em modifying
options are available:
.Bl -tag -width Ds
.It Dv SSL_OP_TLS_ROLLBACK_BUG
Disable version rollback attack detection.
.Pp
During the client key exchange, the client must send the same information
about acceptable SSL/TLS protocol levels as during the first hello.
Some clients violate this rule by adapting to the server's answer.
(Example: the client sends a SSLv2 hello and accepts up to SSLv3.1=TLSv1,
the server only understands up to SSLv3.
In this case the client must still use the same SSLv3.1=TLSv1 announcement.
Some clients step down to SSLv3 with respect to the server's answer and violate
the version rollback protection.)
.It Dv SSL_OP_CIPHER_SERVER_PREFERENCE
When choosing a cipher, use the server's preferences instead of the client
preferences.
When not set, the server will always follow the client's preferences.
When set, the server will choose following its own preferences.
.It Dv SSL_OP_NO_TLSv1
Do not use the TLSv1.0 protocol.
Deprecated; use
.Xr SSL_CTX_set_min_proto_version 3
instead.
.It Dv SSL_OP_NO_TLSv1_1
Do not use the TLSv1.1 protocol.
.It Dv SSL_OP_NO_TLSv1_2
Do not use the TLSv1.2 protocol.
Deprecated; use
.Xr SSL_CTX_set_max_proto_version 3
instead.
.It Dv SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
When performing renegotiation as a server, always start a new session (i.e.,
session resumption requests are only accepted in the initial handshake).
This option is not needed for clients.
.It Dv SSL_OP_NO_TICKET
Normally clients and servers will, where possible, transparently make use of
RFC4507bis tickets for stateless session resumption.
.Pp
If this option is set this functionality is disabled and tickets will not be
used by clients or servers.
.It Dv SSL_OP_LEGACY_SERVER_CONNECT
Allow legacy insecure renegotiation between OpenSSL and unpatched servers
.Em only :
this option is currently set by default.
See the
.Sx SECURE RENEGOTIATION
section for more details.
.El
.Pp
The following options used to be supported at some point in the past
and no longer have any effect:
.Dv SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION ,
.Dv SSL_OP_EPHEMERAL_RSA ,
.Dv SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER ,
.Dv SSL_OP_MICROSOFT_SESS_ID_BUG ,
.Dv SSL_OP_NETSCAPE_CA_DN_BUG ,
.Dv SSL_OP_NETSCAPE_CHALLENGE_BUG ,
.Dv SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG ,
.Dv SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG ,
.Dv SSL_OP_NO_SSLv2 ,
.Dv SSL_OP_NO_SSLv3 ,
.Dv SSL_OP_PKCS1_CHECK_1 ,
.Dv SSL_OP_PKCS1_CHECK_2 ,
.Dv SSL_OP_SAFARI_ECDHE_ECDSA_BUG ,
.Dv SSL_OP_SINGLE_DH_USE ,
.Dv SSL_OP_SSLEAY_080_CLIENT_DH_BUG ,
.Dv SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG ,
.Dv SSL_OP_TLS_BLOCK_PADDING_BUG ,
.Dv SSL_OP_TLS_D5_BUG .
.Sh SECURE RENEGOTIATION
OpenSSL 0.9.8m and later always attempts to use secure renegotiation as
described in RFC5746.
This counters the prefix attack described in CVE-2009-3555 and elsewhere.
.Pp
This attack has far-reaching consequences which application writers should be
aware of.
In the description below an implementation supporting secure renegotiation is
referred to as
.Dq patched .
A server not supporting secure
renegotiation is referred to as
.Dq unpatched .
.Pp
The following sections describe the operations permitted by OpenSSL's secure
renegotiation implementation.
.Ss Patched client and server
Connections and renegotiation are always permitted by OpenSSL implementations.
.Ss Unpatched client and patched OpenSSL server
The initial connection succeeds but client renegotiation is denied by the
server with a
.Em no_renegotiation
warning alert.
.Pp
If the patched OpenSSL server attempts to renegotiate a fatal
.Em handshake_failure
alert is sent.
This is because the server code may be unaware of the unpatched nature of the
client.
.Pp
.Em N.B.:
a bug in OpenSSL clients earlier than 0.9.8m (all of which are unpatched) will
result in the connection hanging if it receives a
.Em no_renegotiation
alert.
OpenSSL versions 0.9.8m and later will regard a
.Em no_renegotiation
alert as fatal and respond with a fatal
.Em handshake_failure
alert.
This is because the OpenSSL API currently has no provision to indicate to an
application that a renegotiation attempt was refused.
.Ss Patched OpenSSL client and unpatched server
If the option
.Dv SSL_OP_LEGACY_SERVER_CONNECT
is set then initial connections and renegotiation between patched OpenSSL
clients and unpatched servers succeeds.
If neither option is set then initial connections to unpatched servers will
fail.
.Pp
The option
.Dv SSL_OP_LEGACY_SERVER_CONNECT
is currently set by default even though it has security implications:
otherwise it would be impossible to connect to unpatched servers (i.e., all of
them initially) and this is clearly not acceptable.
Renegotiation is permitted because this does not add any additional security
issues: during an attack clients do not see any renegotiations anyway.
.Pp
As more servers become patched the option
.Dv SSL_OP_LEGACY_SERVER_CONNECT
will
.Em not
be set by default in a future version of OpenSSL.
.Pp
OpenSSL client applications wishing to ensure they can connect to unpatched
servers should always
.Em set
.Dv SSL_OP_LEGACY_SERVER_CONNECT .
.Pp
OpenSSL client applications that want to ensure they can
.Em not
connect to unpatched servers (and thus avoid any security issues) should always
.Em clear
.Dv SSL_OP_LEGACY_SERVER_CONNECT
using
.Fn SSL_CTX_clear_options
or
.Fn SSL_clear_options .
.Sh RETURN VALUES
.Fn SSL_CTX_set_options
and
.Fn SSL_set_options
return the new options bitmask after adding
.Fa options .
.Pp
.Fn SSL_CTX_clear_options
and
.Fn SSL_clear_options
return the new options bitmask after clearing
.Fa options .
.Pp
.Fn SSL_CTX_get_options
and
.Fn SSL_get_options
return the current bitmask.
.Pp
.Fn SSL_get_secure_renegotiation_support
returns 1 is the peer supports secure renegotiation and 0 if it does not.
.Sh SEE ALSO
.Xr openssl 1 ,
.Xr ssl 3 ,
.Xr SSL_clear 3 ,
.Xr SSL_CTX_ctrl 3 ,
.Xr SSL_CTX_set_min_proto_version 3 ,
.Xr SSL_new 3
.Sh HISTORY
.Fn SSL_CTX_clear_options
and
.Fn SSL_clear_options
were first added in OpenSSL 0.9.8m.
@


1.3
log
@for pure *_ctrl() wrapper macros, move the reference from ssl(3)
to SSL_CTX_ctrl(3) to make ssl(3) slightly more palatable
@
text
@d1 1
a1 1
.\"	$OpenBSD: SSL_CTX_set_options.3,v 1.2 2016/12/01 15:40:14 schwarze Exp $
d54 1
a54 1
.Dd $Mdocdate: December 1 2016 $
d192 3
d199 3
d341 1
d344 1
@


1.2
log
@Add Copyright and license.

Delete explanation of SSL_OP_SINGLE_DH_USE, it is always on now.
Delete explanation of obsolete option SSL_OP_EPHEMERAL_RSA.
Delete various SSLv2 and SSLv3 remnants.

Delete excessive verbiage detailing each obsolete option individually;
instead, provide one concise list of obsolete options.
Delete HISTORY of individual options; it was incomplete anyway
and is not important enough to warrant so much bloat.
Garbage collect two useless cross references.
@
text
@d1 1
a1 1
.\"	$OpenBSD: SSL_CTX_set_options.3,v 1.1 2016/11/05 15:32:19 schwarze Exp $
d54 1
a54 1
.Dd $Mdocdate: November 5 2016 $
a334 1
.Xr ssl 3 ,
d336 1
@


1.1
log
@move manual pages from doc/ to man/ for consistency with other
libraries, in particular considering that there are unrelated
files in doc/; requested by jsing@@ and beck@@
@
text
@d1 2
d4 5
a8 1
.\"	$OpenBSD: SSL_CTX_set_options.3,v 1.10 2015/07/18 19:41:54 doug Exp $
d10 45
a54 1
.Dd $Mdocdate: July 18 2015 $
a82 2
Note: all these functions are implemented using macros.
.Pp
d119 3
a121 1
.Sh NOTES
a151 34
.It Dv SSL_OP_MICROSOFT_SESS_ID_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_NETSCAPE_CHALLENGE_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_NETSCAPE_REUSE_CIPHER_CHANGE_BUG
As of OpenSSL 0.9.8q and 1.0.0c, this option has no effect.
.It Dv SSL_OP_SSLREF2_REUSE_CERT_TYPE_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_MICROSOFT_BIG_SSLV3_BUFFER
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_SAFARI_ECDHE_ECDSA_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_SSLEAY_080_CLIENT_DH_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_TLS_D5_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_TLS_BLOCK_PADDING_BUG
As of
.Ox 5.8 ,
this option has no effect.
d153 1
a153 1
Disables a countermeasure against a SSL 3.0/TLS 1.0 protocol vulnerability
a184 25
.It Dv SSL_OP_SINGLE_DH_USE
Always create a new key when using temporary/ephemeral DH parameters
(see
.Xr SSL_CTX_set_tmp_dh_callback 3 ) .
This option must be used to prevent small subgroup attacks, when the DH
parameters were not generated using
.Dq strong
primes (e.g., when using DSA-parameters, see
.Xr openssl 1 ) .
If
.Dq strong
primes were used, it is not strictly necessary to generate a new DH key during
each handshake but it is also recommended.
.Dv SSL_OP_SINGLE_DH_USE
should therefore be enabled whenever temporary/ephemeral DH parameters are used.
.It SSL_OP_EPHEMERAL_RSA
Always use ephemeral (temporary) RSA key when doing RSA operations (see
.Xr SSL_CTX_set_tmp_rsa_callback 3 ) .
According to the specifications, this is only done when a RSA key can only be
used for signature operations (namely under export ciphers with restricted RSA
keylength).
By setting this option, ephemeral RSA keys are always used.
This option breaks compatibility with the SSL/TLS specifications and may lead
to interoperability problems with clients and should therefore never be used.
Ciphers with EDH (ephemeral Diffie-Hellman) key exchange should be used instead.
d188 2
a189 19
When not set, the SSL server will always follow the client's preferences.
When set, the SSLv3/TLSv1 server will choose following its own preferences.
Because of the different protocol, for SSLv2 the server will send its list of
preferences to the client and the client chooses.
.It Dv SSL_OP_NETSCAPE_CA_DN_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_NETSCAPE_DEMO_CIPHER_CHANGE_BUG
As of
.Ox 5.8 ,
this option has no effect.
.It Dv SSL_OP_NO_SSLv2
As of
.Ox 5.6 ,
this option has no effect as SSLv2 support has been removed.
In previous versions it disabled use of the SSLv2 protocol.
.It Dv SSL_OP_NO_SSLv3
Do not use the SSLv3 protocol.
a205 9
.It Dv SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION
As of
.Ox 5.6 ,
this option has no effect.
In previous versions it allowed legacy insecure renegotiation between OpenSSL
and unpatched clients or servers.
See the
.Sx SECURE RENEGOTIATION
section for more details.
d214 21
a239 5
The deprecated and highly broken SSLv2 protocol does not support renegotiation
at all; its use is
.Em strongly
discouraged.
.Pp
d257 1
a257 3
warning alert if TLS v1.0 is used or a fatal
.Em handshake_failure
alert in SSL v3.0.
d302 1
a302 1
.Dv SSL_OP_LEGACY_SERVER_CONNECT
a336 2
.Xr SSL_CTX_set_tmp_dh_callback 3 ,
.Xr SSL_CTX_set_tmp_rsa_callback 3 ,
a338 18
.Dv SSL_OP_CIPHER_SERVER_PREFERENCE
and
.Dv SSL_OP_NO_SESSION_RESUMPTION_ON_RENEGOTIATION
have been added in
OpenSSL 0.9.7.
.Pp
.Dv SSL_OP_TLS_ROLLBACK_BUG
has been added in OpenSSL 0.9.6 and was automatically enabled with
.Dv SSL_OP_ALL .
As of 0.9.7, it is no longer included in
.Dv SSL_OP_ALL
and must be explicitly set.
.Pp
.Dv SSL_OP_DONT_INSERT_EMPTY_FRAGMENTS
has been added in OpenSSL 0.9.6e.
Versions up to OpenSSL 0.9.6c do not include the countermeasure that can be
disabled with this option (in OpenSSL 0.9.6d, it was always enabled).
.Pp
a342 12
.Pp
.Dv SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION ,
.Dv SSL_OP_LEGACY_SERVER_CONNECT
and the function
.Fn SSL_get_secure_renegotiation_support
were first added in OpenSSL 0.9.8m.
.Pp
.Dv SSL_OP_NO_SSLv2
and
.Dv SSL_OP_ALLOW_UNSAFE_LEGACY_RENEGOTIATION
were changed to have no effect in
.Ox 5.6 .
@

