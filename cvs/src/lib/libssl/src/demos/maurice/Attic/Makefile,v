head	1.3;
access;
symbols
	butholakala:1.2
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.2.0.62
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.58
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.56
	OPENBSD_5_3_BASE:1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.2.0.52
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.54
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.2.0.50
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.48
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.2.0.46
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.42
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.44
	OPENBSD_4_6_BASE:1.2
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.2.0.40
	OPENBSD_4_5_BASE:1.2
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.38
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.36
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.34
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.32
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.30
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.28
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.26
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.24
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.22
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.2.0.20
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.2.0.18
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.2.0.16
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.16.18.35.15;	author tedu;	state dead;
branches;
next	1.2;

1.2
date	99.09.29.04.36.57;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.15;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.15;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.06;	author markus;	state Exp;
branches;
next	;


desc
@@


1.3
log
@quoth the readme:
NOTE: Don't expect any of these programs to work with current
OpenSSL releases, or even with later SSLeay releases.
ok miod
@
text
@CC=cc
CFLAGS= -g -I../../include -Wall
LIBS=  -L../.. -lcrypto
EXAMPLES=example1 example2 example3 example4

all: $(EXAMPLES) 

example1: example1.o loadkeys.o 
	$(CC) -o example1 example1.o loadkeys.o $(LIBS)

example2: example2.o loadkeys.o
	$(CC) -o example2 example2.o loadkeys.o $(LIBS)

example3: example3.o 
	$(CC) -o example3 example3.o $(LIBS)

example4: example4.o
	$(CC) -o example4 example4.o $(LIBS)

clean:	
	rm -f $(EXAMPLES) *.o

test: all
	@@echo
	@@echo Example 1 Demonstrates the sealing and opening APIs
	@@echo Doing the encrypt side...
	./example1 <README >t.t
	@@echo Doing the decrypt side...
	./example1 -d <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo  example1 is OK

	@@echo
	@@echo Example2 Demonstrates rsa encryption and decryption
	@@echo   and it should just print \"This the clear text\"
	./example2

	@@echo
	@@echo Example3 Demonstrates the use of symmetric block ciphers
	@@echo in this case it uses EVP_des_ede3_cbc
	@@echo i.e. triple DES in Cipher Block Chaining mode
	@@echo Doing the encrypt side...
	./example3 ThisIsThePassword <README >t.t
	@@echo Doing the decrypt side...
	./example3 -d ThisIsThePassword <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo  example3 is OK

	@@echo
	@@echo Example4 Demonstrates base64 encoding and decoding
	@@echo Doing the encrypt side...
	./example4 <README >t.t
	@@echo Doing the decrypt side...
	./example4 -d <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo example4 is OK
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d2 2
a3 2
CFLAGS= -g -I../../include
LIBS= -L/usr/local/ssl/lib -L../.. -lcrypto
a19 1
	
d23 37
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d2 2
a3 2
CFLAGS= -g -I../../include -Wall
LIBS=  -L../.. -lcrypto
d20 1
a23 37
test: all
	@@echo
	@@echo Example 1 Demonstrates the sealing and opening APIs
	@@echo Doing the encrypt side...
	./example1 <README >t.t
	@@echo Doing the decrypt side...
	./example1 -d <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo  example1 is OK

	@@echo
	@@echo Example2 Demonstrates rsa encryption and decryption
	@@echo   and it should just print \"This the clear text\"
	./example2

	@@echo
	@@echo Example3 Demonstrates the use of symmetric block ciphers
	@@echo in this case it uses EVP_des_ede3_cbc
	@@echo i.e. triple DES in Cipher Block Chaining mode
	@@echo Doing the encrypt side...
	./example3 ThisIsThePassword <README >t.t
	@@echo Doing the decrypt side...
	./example3 -d ThisIsThePassword <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo  example3 is OK

	@@echo
	@@echo Example4 Demonstrates base64 encoding and decoding
	@@echo Doing the encrypt side...
	./example4 <README >t.t
	@@echo Doing the decrypt side...
	./example4 -d <t.t >t.2
	diff t.2 README
	rm -f t.t t.2
	@@echo example4 is OK
@

