head	1.6;
access;
symbols
	butholakala:1.5
	openssl_1_0_1_g:1.1.1.1
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	openssl_1_0_1_c:1.1.1.1
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	openssh_1_0_0_a:1.1.1.1
	OPENBSD_4_8:1.3.0.34
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.30
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.32
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.3.0.28
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.26
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.24
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.22
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.20
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.18
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.3.0.16
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.14
	OPENBSD_3_8_BASE:1.3
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.3.0.12
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.6
date	2014.04.16.18.35.15;	author tedu;	state dead;
branches;
next	1.5;

1.5
date	2014.04.13.15.25.34;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.01.22.58.57;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.10.16.31.56;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.05.22.12.11;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.18;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.06;	author markus;	state Exp;
branches;
next	;


desc
@@


1.6
log
@quoth the readme:
NOTE: Don't expect any of these programs to work with current
OpenSSL releases, or even with later SSLeay releases.
ok miod
@
text
@# Makefile for easy-tls example application (rudimentary client and server)
# $Id: Makefile,v 1.5 2014/04/13 15:25:34 miod Exp $

SOLARIS_CFLAGS=-Wall -pedantic -g -O2
SOLARIS_LIBS=-lxnet

LINUX_CFLAGS=-Wall -pedantic -g -O2
LINUX_LIBS=


auto-all:
	case `uname -s` in \
	SunOS) echo Using SunOS configuration; \
	  make SYSCFLAGS="$(SOLARIS_CFLAGS)" SYSLIBS="$(SOLARIS_LIBS)" all;; \
	Linux) echo Using Linux configuration; \
	  make SYSCFLAGS="$(LINUX_CFLAGS)" SYSLIBS="$(LINUX_LIBS)" all;; \
	*) echo "unknown system"; exit 1;; \
	esac

all: test TAGS

# For adapting this Makefile to a different system, only the following
# definitions should need customizing:

OPENSSLDIR=../..
CC=gcc

SYSCFLAGS=whatever
SYSLIBS=whatever


#############################################################################
#
# SSLeay/OpenSSL imports
#
# OPENSSLDIR (set above) can be either the directory where OpenSSL is
# installed or the directory where it was compiled.

# We rely on having a new OpenSSL release where include files
# have names like <openssl/ssl.h> (not just <ssl.h>).
OPENSSLINCLUDES=-I$(OPENSSLDIR)/include

# libcrypto.a and libssl.a are directly in $(OPENSSLDIR) if this is
# the compile directory, or in $(OPENSSLDIR)/lib if we use an installed
# library.  With the following definition, we can handle either case.
OPENSSLLIBS=-L$(OPENSSLDIR) -L$(OPENSSLDIR)/lib -lssl -lcrypto


#############################################################################
#
# Stuff for handling the source files
#

SOURCES=easy-tls.c test.c
HEADERS=easy-tls.h test.h
DOCSandEXAMPLESetc=Makefile cert.pem cacerts.pem
EVERYTHING=$(SOURCES) $(HEADERS) $(DOCSandEXAMPLESetc)

ls: ls-l
ls-l:
	ls -l $(EVERYTHING)
# For RCS:
tag:
	-rcs -n_`date +%y%m%d`: $(EVERYTHING)
	rcs -nMYTAG $(EVERYTHING)
	rcs -nMYTAG: $(EVERYTHING)
diff:
	-rcsdiff -rMYTAG -u $(EVERYTHING)
today:
	-rcsdiff -r_`date +%y%m%d` -u $(EVERYTHING)
ident:
	for a in $(EVERYTHING); do ident $$a; done

# Distribution .tar:
easy-tls.tar.gz: $(EVERYTHING)
	tar cvf - $(EVERYTHING) | \
	gzip -9 > easy-tls.tar.gz

# Working .tar:
tls.tgz: $(EVERYTHING)
	tar cfv - `find . -type f -a ! -name '*.tgz' -a ! -name '*.tar.gz'` | \
	gzip -9 > tls.tgz

# For emacs:
etags: TAGS
TAGS: $(SOURCES) $(HEADERS)
	-etags $(SOURCES) $(HEADERS)


#############################################################################
#
# Compilation
#
# The following definitions are system dependent (and hence defined
# at the beginning of this Makefile, where they are more easily found):

### CC=gcc
### SYSCFLAGS=-Wall -pedantic -g -O2
### SYSLIBS=-lxnet

EXTRACFLAGS=-DTLS_APP=\"test.h\"
# EXTRACFLAGS=-DTLS_APP=\"test.h\" -DDEBUG_TLS

#
# The rest shouldn't need to be touched.
#
LDFLAGS=$(SYSLIBS) $(OPENSSLLIBS)
INCLUDES=$(OPENSSLINCLUDES)
CFLAGS=$(SYSCFLAGS) $(EXTRACFLAGS) $(INCLUDES)

OBJS=easy-tls.o test.o

clean:
	@@rm -f test
	@@rm -f TAGS
	@@rm -f *.o
	@@rm -f core

test: $(OBJS)
	$(CC) $(OBJS) $(LDFLAGS) -o test

test.o: $(HEADERS)
easy-tls.o: $(HEADERS)
@


1.5
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.2 2001/09/18 09:15:40 bodo Exp $
@


1.4
log
@resolve conflicts, fix local changes
@
text
@@


1.3
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.1.1.1 2002/09/05 12:51:06 markus Exp $
@


1.2
log
@merge with 0.9.7-beta1
@
text
@@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.1.1.1 2002/05/11 15:54:01 beck Exp $
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d2 1
a2 1
# $Id: Makefile,v 1.2 2001/09/18 09:15:40 bodo Exp $
@

