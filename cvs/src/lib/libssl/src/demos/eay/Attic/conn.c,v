head	1.2;
access;
symbols
	butholakala:1.1
	openssl_1_0_1_g:1.1.1.1
	OPENBSD_5_5:1.1.0.62
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.58
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.56
	OPENBSD_5_3_BASE:1.1
	openssl_1_0_1_c:1.1.1.1
	OPENBSD_5_2:1.1.0.52
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.54
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.1.0.50
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.48
	OPENBSD_4_9_BASE:1.1
	openssh_1_0_0_a:1.1.1.1
	OPENBSD_4_8:1.1.0.46
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.42
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.44
	OPENBSD_4_6_BASE:1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.0.40
	OPENBSD_4_5_BASE:1.1
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.1
	OPENBSD_4_4:1.1.0.38
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.36
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.34
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.32
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.30
	OPENBSD_4_0_BASE:1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.0.28
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.26
	OPENBSD_3_8_BASE:1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.1.0.24
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.22
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.20
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.18
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.16.18.35.15;	author tedu;	state dead;
branches;
next	1.1;

1.1
date	99.09.29.05.53.41;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.06;	author markus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@quoth the readme:
NOTE: Don't expect any of these programs to work with current
OpenSSL releases, or even with later SSLeay releases.
ok miod
@
text
@/* NOCW */
/* demos/eay/conn.c */

/* A minimal program to connect to a port using the sock4a protocol.
 *
 * cc -I../../include conn.c -L../.. -lcrypto
 */
#include <stdio.h>
#include <stdlib.h>
#include <openssl/err.h>
#include <openssl/bio.h>
/* #include "proxy.h" */

extern int errno;

int main(argc,argv)
int argc;
char *argv[];
	{
	PROXY *pxy;
	char *host;
	char buf[1024*10],*p;
	BIO *bio;
	int i,len,off,ret=1;

	if (argc <= 1)
		host="localhost:4433";
	else
		host=argv[1];

	/* Lets get nice error messages */
	ERR_load_crypto_strings();

	/* First, configure proxy settings */
	pxy=PROXY_new();
	PROXY_add_server(pxy,PROXY_PROTOCOL_SOCKS,"gromit:1080");

	bio=BIO_new(BIO_s_socks4a_connect());

	BIO_set_conn_hostname(bio,host);
	BIO_set_proxies(bio,pxy);
	BIO_set_socks_userid(bio,"eay");
	BIO_set_nbio(bio,1);

	p="GET / HTTP/1.0\r\n\r\n";
	len=strlen(p);

	off=0;
	for (;;)
		{
		i=BIO_write(bio,&(p[off]),len);
		if (i <= 0)
			{
			if (BIO_should_retry(bio))
				{
				fprintf(stderr,"write DELAY\n");
				sleep(1);
				continue;
				}
			else
				{
				goto err;
				}
			}
		off+=i;
		len-=i;
		if (len <= 0) break;
		}

	for (;;)
		{
		i=BIO_read(bio,buf,sizeof(buf));
		if (i == 0) break;
		if (i < 0)
			{
			if (BIO_should_retry(bio))
				{
				fprintf(stderr,"read DELAY\n");
				sleep(1);
				continue;
				}
			goto err;
			}
		fwrite(buf,1,i,stdout);
		}

	ret=1;

	if (0)
		{
err:
		if (ERR_peek_error() == 0) /* system call error */
			{
			fprintf(stderr,"errno=%d ",errno);
			perror("error");
			}
		else
			ERR_print_errors_fp(stderr);
		}
	BIO_free_all(bio);
	if (pxy != NULL) PROXY_free(pxy);
	exit(!ret);
	return(ret);
	}

@


1.1
log
@new files for OpenSSL 0.9.4
@
text
@@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@

