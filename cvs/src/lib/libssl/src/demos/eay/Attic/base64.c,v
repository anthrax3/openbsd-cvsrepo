head	1.2;
access;
symbols
	butholakala:1.1
	openssl_1_0_1_g:1.1.1.1
	OPENBSD_5_5:1.1.0.62
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.58
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.56
	OPENBSD_5_3_BASE:1.1
	openssl_1_0_1_c:1.1.1.1
	OPENBSD_5_2:1.1.0.52
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.54
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.1.0.50
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.48
	OPENBSD_4_9_BASE:1.1
	openssh_1_0_0_a:1.1.1.1
	OPENBSD_4_8:1.1.0.46
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.42
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.44
	OPENBSD_4_6_BASE:1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.0.40
	OPENBSD_4_5_BASE:1.1
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.1
	OPENBSD_4_4:1.1.0.38
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.36
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.34
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.32
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.30
	OPENBSD_4_0_BASE:1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.0.28
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.26
	OPENBSD_3_8_BASE:1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.1.0.24
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.22
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.20
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.18
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@ * @;


1.2
date	2014.04.16.18.35.15;	author tedu;	state dead;
branches;
next	1.1;

1.1
date	99.09.29.05.53.41;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.06;	author markus;	state Exp;
branches;
next	;


desc
@@


1.2
log
@quoth the readme:
NOTE: Don't expect any of these programs to work with current
OpenSSL releases, or even with later SSLeay releases.
ok miod
@
text
@/* This is a simple example of using the base64 BIO to a memory BIO and then
 * getting the data.
 */
#include <stdio.h>
#include <openssl/bio.h>
#include <openssl/evp.h>

main()
	{
	int i;
	BIO *mbio,*b64bio,*bio;
	char buf[512];
	char *p;

	mbio=BIO_new(BIO_s_mem());
	b64bio=BIO_new(BIO_f_base64());

	bio=BIO_push(b64bio,mbio);
	/* We now have bio pointing at b64->mem, the base64 bio encodes on
	 * write and decodes on read */

	for (;;)
		{
		i=fread(buf,1,512,stdin);
		if (i <= 0) break;
		BIO_write(bio,buf,i);
		}
	/* We need to 'flush' things to push out the encoding of the
	 * last few bytes.  There is special encoding if it is not a
	 * multiple of 3
	 */
	BIO_flush(bio);

	printf("We have %d bytes available\n",BIO_pending(mbio));

	/* We will now get a pointer to the data and the number of elements. */
	/* hmm... this one was not defined by a macro in bio.h, it will be for
	 * 0.9.1.  The other option is too just read from the memory bio.
	 */
	i=(int)BIO_ctrl(mbio,BIO_CTRL_INFO,0,(char *)&p);

	printf("%d\n",i);
	fwrite("---\n",1,4,stdout);
	fwrite(p,1,i,stdout);
	fwrite("---\n",1,4,stdout);

	/* This call will walk the chain freeing all the BIOs */
	BIO_free_all(bio);
	}
@


1.1
log
@new files for OpenSSL 0.9.4
@
text
@@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@

