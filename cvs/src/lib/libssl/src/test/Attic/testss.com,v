head	1.5;
access;
symbols
	OPENBSD_5_5:1.4.0.12
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.8
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.6
	OPENBSD_5_3_BASE:1.4
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.4.0.2
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.32
	OPENBSD_4_6_BASE:1.2
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.13.15.25.35;	author miod;	state dead;
branches;
next	1.4;

1.4
date	2011.11.03.02.34.33;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.03.21.43.59;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.37.36;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2011.11.03.02.32.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! TESTSS.COM
$
$	__arch = "VAX"
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. "64") then __arch = __arch+ "_64"
$!
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$
$	digest="-md5"
$	reqcmd = "mcr ''exe_dir'openssl req"
$	x509cmd = "mcr ''exe_dir'openssl x509 ''digest'"
$	verifycmd = "mcr ''exe_dir'openssl verify"
$	dummycnf = "sys$disk:[-.apps]openssl-vms.cnf"
$
$	CAkey="""keyCA.ss"""
$	CAcert="""certCA.ss"""
$	CAreq="""reqCA.ss"""
$	CAconf="""CAss.cnf"""
$	CAreq2="""req2CA.ss"""	! temp
$
$	Uconf="""Uss.cnf"""
$	Ukey="""keyU.ss"""
$	Ureq="""reqU.ss"""
$	Ucert="""certU.ss"""
$
$	write sys$output ""
$	write sys$output "make a certificate request using 'req'"
$
$	set noon
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	save_severity=$SEVERITY
$	set on
$	if save_severity
$	then
$	    req_new="-newkey dsa:[-.apps]dsa512.pem"
$	else
$	    req_new="-new"
$	endif
$
$	'reqcmd' -config 'CAconf' -out 'CAreq' -keyout 'CAkey' 'req_new' ! -out err.ss
$	if $severity .ne. 1
$	then
$		write sys$output "error using 'req' to generate a certificate request"
$		exit 3
$	endif
$	write sys$output ""
$	write sys$output "convert the certificate request into a self signed certificate using 'x509'"
$	define /user sys$output err.ss
$	'x509cmd' "-CAcreateserial" -in 'CAreq' -days 30 -req -out 'CAcert' -signkey 'CAkey'
$	if $severity .ne. 1
$	then
$		write sys$output "error using 'x509' to self sign a certificate request"
$		exit 3
$	endif
$
$	write sys$output ""
$	write sys$output "convert a certificate into a certificate request using 'x509'"
$	define /user sys$output err.ss
$	'x509cmd' -in 'CAcert' -x509toreq -signkey 'CAkey' -out 'CAreq2'
$	if $severity .ne. 1
$	then
$		write sys$output "error using 'x509' convert a certificate to a certificate request"
$		exit 3
$	endif
$
$	'reqcmd' -config 'dummycnf' -verify -in 'CAreq' -noout
$	if $severity .ne. 1
$	then
$		write sys$output "first generated request is invalid"
$		exit 3
$	endif
$
$	'reqcmd' -config 'dummycnf' -verify -in 'CAreq2' -noout
$	if $severity .ne. 1
$	then
$		write sys$output "second generated request is invalid"
$		exit 3
$	endif
$
$	'verifycmd' "-CAfile" 'CAcert' 'CAcert'
$	if $severity .ne. 1
$	then
$		write sys$output "first generated cert is invalid"
$		exit 3
$	endif
$
$	write sys$output ""
$	write sys$output "make another certificate request using 'req'"
$	define /user sys$output err.ss
$	'reqcmd' -config 'Uconf' -out 'Ureq' -keyout 'Ukey' 'req_new'
$	if $severity .ne. 1
$	then
$		write sys$output "error using 'req' to generate a certificate request"
$		exit 3
$	endif
$
$	write sys$output ""
$	write sys$output "sign certificate request with the just created CA via 'x509'"
$	define /user sys$output err.ss
$	'x509cmd' "-CAcreateserial" -in 'Ureq' -days 30 -req -out 'Ucert' "-CA" 'CAcert' "-CAkey" 'CAkey'
$	if $severity .ne. 1
$	then
$		write sys$output "error using 'x509' to sign a certificate request"
$		exit 3
$	endif
$
$	'verifycmd' "-CAfile" 'CAcert' 'Ucert'
$	write sys$output ""
$	write sys$output "Certificate details"
$	'x509cmd' -subject -issuer -startdate -enddate -noout -in 'Ucert'
$
$	write sys$output ""
$	write sys$output "The generated CA certificate is ",CAcert
$	write sys$output "The generated CA private key is ",CAkey
$
$	write sys$output "The generated user certificate is ",Ucert
$	write sys$output "The generated user private key is ",Ukey
$
$	if f$search("err.ss;*") .nes. "" then delete err.ss;*
@


1.4
log
@openssl-1.0.0e: resolve conflicts
@
text
@@


1.3
log
@resolve conflicts, fix local changes
@
text
@d3 1
a3 1
$	__arch := VAX
d6 5
a10 2
$	if __arch .eqs. "" then __arch := UNK
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
d13 4
a16 4
$	reqcmd := mcr 'exe_dir'openssl req
$	x509cmd := mcr 'exe_dir'openssl x509 'digest'
$	verifycmd := mcr 'exe_dir'openssl verify
$	dummycnf := sys$disk:[-.apps]openssl-vms.cnf
@


1.2
log
@sync these files with openssl-0.9.7-beta1, too
@
text
@d4 3
a6 1
$	if f$getsyi("cpu") .ge. 128 then __arch := AXP
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d7 1
a7 1
$	digest="-mdc2"
d26 14
a39 1
$	'reqcmd' -config 'CAconf' -out 'CAreq' -keyout 'CAkey' -new ! -out err.ss
d89 1
a89 1
$	'reqcmd' -config 'Uconf' -out 'Ureq' -keyout 'Ukey' -new
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d7 1
a7 1
$	digest="-md5"
d26 1
a26 14
$
$	set noon
$	define/user sys$output nla0:
$	mcr 'exe_dir'openssl no-rsa
$	save_severity=$SEVERITY
$	set on
$	if save_severity
$	then
$	    req_new="-newkey dsa:[-.apps]dsa512.pem"
$	else
$	    req_new="-new"
$	endif
$
$	'reqcmd' -config 'CAconf' -out 'CAreq' -keyout 'CAkey' 'req_new' ! -out err.ss
d76 1
a76 1
$	'reqcmd' -config 'Uconf' -out 'Ureq' -keyout 'Ukey' 'req_new'
@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@d4 1
a4 3
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch := UNK
@


1.1.1.3
log
@import OpenSSL 1.0.0e
@
text
@d3 1
a3 1
$	__arch = "VAX"
d6 2
a7 5
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. "64") then __arch = __arch+ "_64"
$!
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
d10 4
a13 4
$	reqcmd = "mcr ''exe_dir'openssl req"
$	x509cmd = "mcr ''exe_dir'openssl x509 ''digest'"
$	verifycmd = "mcr ''exe_dir'openssl verify"
$	dummycnf = "sys$disk:[-.apps]openssl-vms.cnf"
@


