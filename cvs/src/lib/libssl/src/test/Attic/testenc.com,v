head	1.7;
access;
symbols
	OPENBSD_5_5:1.6.0.12
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.8
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.6.0.6
	OPENBSD_5_3_BASE:1.6
	openssl_1_0_1_c:1.1.1.5
	OPENBSD_5_2:1.6.0.2
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.4
	openssl_1_0_0_f:1.1.1.5
	openssl_1_0_0_e:1.1.1.5
	OPENBSD_5_0:1.5.0.4
	OPENBSD_5_0_BASE:1.5
	OPENBSD_4_9:1.5.0.2
	OPENBSD_4_9_BASE:1.5
	openssh_1_0_0_a:1.1.1.4
	OPENBSD_4_8:1.4.0.22
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.18
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.20
	OPENBSD_4_6_BASE:1.4
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.4.0.16
	OPENBSD_4_5_BASE:1.4
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.4
	OPENBSD_4_4:1.4.0.14
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.4.0.12
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.10
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.4.0.8
	OPENBSD_4_1_BASE:1.4
	OPENBSD_4_0:1.4.0.6
	OPENBSD_4_0_BASE:1.4
	openssl_0_9_7j:1.1.1.3
	openssl:1.1.1
	OPENBSD_3_9:1.4.0.4
	OPENBSD_3_9_BASE:1.4
	OPENBSD_3_8:1.4.0.2
	OPENBSD_3_8_BASE:1.4
	OPENSSL_0_9_7G:1.1.1.3
	OPENBSD_3_7:1.3.0.12
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.10
	OPENBSD_3_6_BASE:1.3
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.3.0.8
	OPENBSD_3_5_BASE:1.3
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.3.0.6
	OPENBSD_3_4_BASE:1.3
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.3.0.4
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.2
	OPENBSD_3_2_BASE:1.3
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.10
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.8
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.6
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.4
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.2
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.7
date	2014.04.13.15.25.35;	author miod;	state dead;
branches;
next	1.6;

1.6
date	2011.11.03.02.34.33;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.05.39.32;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.14.11.18.04;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.13.42;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.37.35;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.12.20.53.18;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.04.29.05.37.29;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2011.11.03.02.32.22;	author djm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! TESTENC.COM  --  Test encoding and decoding
$
$	__arch = "VAX"
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. 64) then __arch = __arch+ "_64"
$
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$	testsrc = "makefile."
$	test = "p.txt"
$	cmd = "mcr ''exe_dir'openssl"
$
$	if f$search(test) .nes. "" then delete 'test';*
$	convert/fdl=sys$input: 'testsrc' 'test'
RECORD
	FORMAT STREAM_LF
$
$	if f$search(test+"-cipher") .nes. "" then delete 'test'-cipher;*
$	if f$search(test+"-clear") .nes. "" then delete 'test'-clear;*
$
$	write sys$output "cat"
$	'cmd' enc -in 'test' -out 'test'-cipher
$	'cmd' enc -in 'test'-cipher -out 'test'-clear
$	backup/compare 'test' 'test'-clear
$	if $severity .ne. 1 then exit 3
$	delete 'test'-cipher;*,'test'-clear;*
$
$	write sys$output "base64"
$	'cmd' enc -a -e -in 'test' -out 'test'-cipher
$	'cmd' enc -a -d -in 'test'-cipher -out 'test'-clear
$	backup/compare 'test' 'test'-clear
$	if $severity .ne. 1 then exit 3
$	delete 'test'-cipher;*,'test'-clear;*
$
$	define/user sys$output 'test'-cipher-commands
$	'cmd' list-cipher-commands
$	open/read f 'test'-cipher-commands
$ loop_cipher_commands:
$	read/end=loop_cipher_commands_end f i
$	write sys$output i
$
$	if f$search(test+"-"+i+"-cipher") .nes. "" then -
		delete 'test'-'i'-cipher;*
$	if f$search(test+"-"+i+"-clear") .nes. "" then -
		delete 'test'-'i'-clear;*
$
$	'cmd' 'i' -bufsize 113 -e -k test -in 'test' -out 'test'-'i'-cipher
$	'cmd' 'i' -bufsize 157 -d -k test -in 'test'-'i'-cipher -out 'test'-'i'-clear
$	backup/compare 'test' 'test'-'i'-clear
$	if $severity .ne. 1 then exit 3
$	delete 'test'-'i'-cipher;*,'test'-'i'-clear;*
$
$	write sys$output i," base64"
$	'cmd' 'i' -bufsize 113 -a -e -k test -in 'test' -out 'test'-'i'-cipher
$	'cmd' 'i' -bufsize 157 -a -d -k test -in 'test'-'i'-cipher -out 'test'-'i'-clear
$	backup/compare 'test' 'test'-'i'-clear
$	if $severity .ne. 1 then exit 3
$	delete 'test'-'i'-cipher;*,'test'-'i'-clear;*
$
$	goto loop_cipher_commands
$ loop_cipher_commands_end:
$	close f
$	delete 'test'-cipher-commands;*
$	delete 'test';*
@


1.6
log
@openssl-1.0.0e: resolve conflicts
@
text
@@


1.5
log
@resolve conflicts, fix local changes
@
text
@d3 1
a3 1
$	__arch := VAX
d6 3
a8 1
$	if __arch .eqs. "" then __arch := UNK
d10 4
a13 3
$	testsrc := makefile.
$	test := p.txt
$	cmd := mcr 'exe_dir'openssl
@


1.4
log
@resolve conflicts
@
text
@d4 3
a6 2
$	if f$getsyi("cpu") .ge. 128 then __arch := AXP
$	exe_dir := sys$disk:[-.'__arch'.exe.apps]
@


1.3
log
@merge with openssl-0.9.7-stable-SNAP-20020911,
new minor for libcrypto (_X509_REQ_print_ex)
tested by miod@@, pb@@
@
text
@d7 1
a7 1
$	testsrc := makefile.ssl
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d12 3
a14 1
$	copy 'testsrc' 'test'
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d11 1
d14 3
d20 1
a20 1
$	difference/output=nl: 'test' 'test'-clear
d27 1
a27 1
$	difference/output=nl: 'test' 'test'-clear
d37 6
d45 1
a45 1
$	difference/output=nl: 'test' 'test'-'i'-clear
d52 1
a52 1
$	difference/output=nl: 'test' 'test'-'i'-clear
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@a10 1
$	if f$search(test) .nes. "" then delete 'test';*
a12 3
$	if f$search(test+"-cipher") .nes. "" then delete 'test'-cipher;*
$	if f$search(test+"-clear") .nes. "" then delete 'test'-clear;*
$
d16 1
a16 1
$	backup/compare 'test' 'test'-clear
d23 1
a23 1
$	backup/compare 'test' 'test'-clear
a32 6
$
$	if f$search(test+"-"+i+"-cipher") .nes. "" then -
		delete 'test'-'i'-cipher;*
$	if f$search(test+"-"+i+"-clear") .nes. "" then -
		delete 'test'-'i'-clear;*
$
d35 1
a35 1
$	backup/compare 'test' 'test'-'i'-clear
d42 1
a42 1
$	backup/compare 'test' 'test'-'i'-clear
@


1.1.1.2
log
@import openssl-0.9.7-stable-SNAP-20020911 (without idea)
@
text
@d12 1
a12 3
$	convert/fdl=sys$input: 'testsrc' 'test'
RECORD
	FORMAT STREAM_LF
@


1.1.1.3
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d7 1
a7 1
$	testsrc := makefile.
@


1.1.1.4
log
@import OpenSSL-1.0.0a
@
text
@d4 2
a5 3
$	if f$getsyi("cpu") .ge. 128 then -
	   __arch = f$edit( f$getsyi( "ARCH_NAME"), "UPCASE")
$	if __arch .eqs. "" then __arch := UNK
@


1.1.1.5
log
@import OpenSSL 1.0.0e
@
text
@d3 1
a3 1
$	__arch = "VAX"
d6 1
a6 3
$	if __arch .eqs. "" then __arch = "UNK"
$!
$	if (p1 .eqs. 64) then __arch = __arch+ "_64"
d8 3
a10 4
$	exe_dir = "sys$disk:[-.''__arch'.exe.apps]"
$	testsrc = "makefile."
$	test = "p.txt"
$	cmd = "mcr ''exe_dir'openssl"
@


