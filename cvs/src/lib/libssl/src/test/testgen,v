head	1.7;
access;
symbols
	OPENBSD_6_0:1.7.0.46
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.36
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.44
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.42
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.40
	OPENBSD_5_6_BASE:1.7
	butholakala:1.7
	openssl_1_0_1_g:1.1.1.5
	OPENBSD_5_5:1.7.0.38
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.34
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.32
	OPENBSD_5_3_BASE:1.7
	openssl_1_0_1_c:1.1.1.5
	OPENBSD_5_2:1.7.0.28
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.30
	openssl_1_0_0_f:1.1.1.5
	openssl_1_0_0_e:1.1.1.5
	OPENBSD_5_0:1.7.0.26
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.24
	OPENBSD_4_9_BASE:1.7
	openssh_1_0_0_a:1.1.1.5
	OPENBSD_4_8:1.7.0.22
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.18
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.20
	OPENBSD_4_6_BASE:1.7
	openssl_0_9_8_k:1.1.1.5
	OPENBSD_4_5:1.7.0.16
	OPENBSD_4_5_BASE:1.7
	openssl_0_9_8_j:1.1.1.5
	openssl_0_9_8_h:1.1.1.5
	pre_openssl_0_9_8h:1.7
	OPENBSD_4_4:1.7.0.14
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.12
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.10
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	openssl_0_9_7j:1.1.1.5
	openssl:1.1.1
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENSSL_0_9_7G:1.1.1.5
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENSSL_0_9_7D:1.1.1.4
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENSSL_0_9_7C:1.1.1.4
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENSSL_0_9_7B:1.1.1.4
	OPENBSD_3_3:1.5.0.4
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.2
	OPENBSD_3_2_BASE:1.5
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.3
	OPENSSL_0_9_7_BETA3:1.1.1.3
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.7
date	2005.04.29.05.39.32;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.12.02.18.40;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2002.09.10.16.31.57;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2002.09.03.22.05.59;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.13.42;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.35;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.05;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.45;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.05.22.44.49;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.05.11.21.36.51;	author markus;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2005.04.29.05.37.29;	author djm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@resolve conflicts
@
text
@#!/bin/sh

T=testcert
KEY=512
CA=../certs/testca.pem

/bin/rm -f $T.1 $T.2 $T.key

if test "$OSTYPE" = msdosdjgpp; then
    PATH=../apps\;$PATH;
else
    PATH=../apps:$PATH;
fi
export PATH

echo "generating certificate request"

echo "string to make the random number generator think it has entropy" >> ./.rnd

if ../util/shlib_wrap.sh ../apps/openssl no-rsa; then
  req_new='-newkey dsa:../apps/dsa512.pem'
else
  req_new='-new'
  echo "There should be a 2 sequences of .'s and some +'s."
  echo "There should not be more that at most 80 per line"
fi

echo "This could take some time."

rm -f testkey.pem testreq.pem

../util/shlib_wrap.sh ../apps/openssl req -config test.cnf $req_new -out testreq.pem
if [ $? != 0 ]; then
echo problems creating request
exit 1
fi

../util/shlib_wrap.sh ../apps/openssl req -config test.cnf -verify -in testreq.pem -noout
if [ $? != 0 ]; then
echo signature on req is wrong
exit 1
fi

exit 0
@


1.6
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d20 1
a20 1
if ../apps/openssl no-rsa; then
d32 1
a32 1
../apps/openssl req -config test.cnf $req_new -out testreq.pem
d38 1
a38 1
../apps/openssl req -config test.cnf -verify -in testreq.pem -noout
@


1.5
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d30 2
@


1.4
log
@sync tests with 0.9.7-beta1
@
text
@d9 5
a13 1
PATH=../apps:$PATH;
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d14 10
a23 2
echo "There should be a 2 sequences of .'s and some +'s."
echo "There should not be more that at most 80 per line"
d26 1
a26 3
echo "string to make the random number generator think it has entropy" >> ./.rnd

../apps/openssl req -config test.cnf -new -out testreq.pem
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d18 2
@


1.1
log
@Initial revision
@
text
@d18 1
a18 1
../apps/ssleay req -config test.cnf -new -out testreq.pem
d24 1
a24 1
../apps/ssleay req -verify -in testreq.pem -noout
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d14 2
a15 10
echo "string to make the random number generator think it has entropy" >> ./.rnd

if ../apps/openssl no-rsa; then
  req_new='-newkey dsa:../apps/dsa512.pem'
else
  req_new='-new'
  echo "There should be a 2 sequences of .'s and some +'s."
  echo "There should not be more that at most 80 per line"
fi

d18 1
a18 1
../apps/openssl req -config test.cnf $req_new -out testreq.pem
d24 1
a24 1
../apps/openssl req -config test.cnf -verify -in testreq.pem -noout
@


1.1.1.3
log
@import openssl-0.9.7-beta3
@
text
@d9 1
a9 5
if test "$OSTYPE" = msdosdjgpp; then
    PATH=../apps\;$PATH;
else
    PATH=../apps:$PATH;
fi
@


1.1.1.4
log
@import 0.9.7b (without idea and rc5)
@
text
@a29 2
rm -f testkey.pem testreq.pem

@


1.1.1.5
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d20 1
a20 1
if ../util/shlib_wrap.sh ../apps/openssl no-rsa; then
d32 1
a32 1
../util/shlib_wrap.sh ../apps/openssl req -config test.cnf $req_new -out testreq.pem
d38 1
a38 1
../util/shlib_wrap.sh ../apps/openssl req -config test.cnf -verify -in testreq.pem -noout
@


