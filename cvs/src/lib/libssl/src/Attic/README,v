head	1.25;
access;
symbols
	butholakala:1.24
	openssl_1_0_1_g:1.1.1.17
	OPENBSD_5_5:1.23.0.8
	OPENBSD_5_5_BASE:1.23
	OPENBSD_5_4:1.23.0.4
	OPENBSD_5_4_BASE:1.23
	OPENBSD_5_3:1.23.0.2
	OPENBSD_5_3_BASE:1.23
	openssl_1_0_1_c:1.1.1.16
	OPENBSD_5_2:1.22.0.2
	OPENBSD_5_2_BASE:1.22
	OPENBSD_5_1_BASE:1.22
	OPENBSD_5_1:1.22.0.4
	openssl_1_0_0_f:1.1.1.15
	openssl_1_0_0_e:1.1.1.14
	OPENBSD_5_0:1.20.0.4
	OPENBSD_5_0_BASE:1.20
	OPENBSD_4_9:1.20.0.2
	OPENBSD_4_9_BASE:1.20
	openssh_1_0_0_a:1.1.1.13
	OPENBSD_4_8:1.19.0.6
	OPENBSD_4_8_BASE:1.19
	OPENBSD_4_7:1.19.0.2
	OPENBSD_4_7_BASE:1.19
	OPENBSD_4_6:1.19.0.4
	OPENBSD_4_6_BASE:1.19
	openssl_0_9_8_k:1.1.1.12
	OPENBSD_4_5:1.18.0.2
	OPENBSD_4_5_BASE:1.18
	openssl_0_9_8_j:1.1.1.11
	openssl_0_9_8_h:1.1.1.10
	pre_openssl_0_9_8h:1.15
	OPENBSD_4_4:1.15.0.10
	OPENBSD_4_4_BASE:1.15
	OPENBSD_4_3:1.15.0.8
	OPENBSD_4_3_BASE:1.15
	OPENBSD_4_2:1.15.0.6
	OPENBSD_4_2_BASE:1.15
	OPENBSD_4_1:1.15.0.4
	OPENBSD_4_1_BASE:1.15
	OPENBSD_4_0:1.15.0.2
	OPENBSD_4_0_BASE:1.15
	openssl_0_9_7j:1.1.1.9
	openssl:1.1.1
	OPENBSD_3_9:1.14.0.4
	OPENBSD_3_9_BASE:1.14
	OPENBSD_3_8:1.14.0.2
	OPENBSD_3_8_BASE:1.14
	OPENSSL_0_9_7G:1.1.1.8
	OPENBSD_3_7:1.13.0.4
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.2
	OPENBSD_3_6_BASE:1.13
	OPENSSL_0_9_7D:1.1.1.7
	OPENBSD_3_5:1.12.0.2
	OPENBSD_3_5_BASE:1.12
	OPENSSL_0_9_7C:1.1.1.6
	OPENBSD_3_4:1.11.0.2
	OPENBSD_3_4_BASE:1.11
	OPENSSL_0_9_7B:1.1.1.5
	OPENBSD_3_3:1.10.0.4
	OPENBSD_3_3_BASE:1.10
	OPENBSD_3_2:1.10.0.2
	OPENBSD_3_2_BASE:1.10
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.4
	OPENSSL_0_9_7_BETA3:1.1.1.3
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.4.0.2
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.25
date	2014.07.14.09.48.50;	author deraadt;	state dead;
branches;
next	1.24;
commitid	DJvWXjz0v3pAmmMy;

1.24
date	2014.04.13.15.25.20;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2012.10.13.21.25.05;	author djm;	state Exp;
branches;
next	1.22;

1.22
date	2012.01.05.23.01.38;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2011.11.03.02.34.28;	author djm;	state Exp;
branches;
next	1.20;

1.20
date	2010.10.01.22.58.41;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2009.04.06.06.33.15;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2009.01.09.12.15.16;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2009.01.05.21.36.38;	author djm;	state Exp;
branches;
next	1.16;

1.16
date	2008.09.06.12.17.47;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2006.06.27.05.06.51;	author djm;	state Exp;
branches;
next	1.14;

1.14
date	2005.04.29.05.39.10;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2004.04.08.08.03.11;	author markus;	state Exp;
branches;
next	1.12;

1.12
date	2003.11.11.22.15.18;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2003.05.12.02.18.34;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2002.09.14.11.18.02;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2002.09.10.16.31.53;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.07.03.45.33;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.15.02.29.08;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.01.19.51.16;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.22.00.02.48;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.02.56.51;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.07.46;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.35.11;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.29;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.29;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.49.26;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2002.09.05.22.33.24;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2002.09.12.20.41.36;	author markus;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2003.05.11.21.34.15;	author markus;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2003.11.11.21.10.14;	author markus;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2004.04.07.20.41.27;	author markus;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2005.04.29.05.36.58;	author djm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2006.06.27.05.05.29;	author djm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2008.09.06.12.15.38;	author djm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2009.01.09.12.13.48;	author djm;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2009.04.06.06.30.00;	author djm;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2010.10.01.22.54.00;	author djm;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2011.11.03.02.32.06;	author djm;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2012.01.05.22.58.50;	author djm;	state Exp;
branches;
next	1.1.1.16;

1.1.1.16
date	2012.10.13.21.23.31;	author djm;	state Exp;
branches;
next	1.1.1.17;

1.1.1.17
date	2014.04.13.15.16.29;	author miod;	state Exp;
branches;
next	;


desc
@@


1.25
log
@not needed anymore
@
text
@
 OpenSSL 1.0.1g 7 Apr 2014

 Copyright (c) 1998-2011 The OpenSSL Project
 Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson
 All rights reserved.

 DESCRIPTION
 -----------

 The OpenSSL Project is a collaborative effort to develop a robust,
 commercial-grade, fully featured, and Open Source toolkit implementing the
 Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1)
 protocols as well as a full-strength general purpose cryptography library.
 The project is managed by a worldwide community of volunteers that use the
 Internet to communicate, plan, and develop the OpenSSL toolkit and its
 related documentation.

 OpenSSL is based on the excellent SSLeay library developed from Eric A. Young
 and Tim J. Hudson.  The OpenSSL toolkit is licensed under a dual-license (the
 OpenSSL license plus the SSLeay license) situation, which basically means
 that you are free to get and use it for commercial and non-commercial
 purposes as long as you fulfill the conditions of both licenses.

 OVERVIEW
 --------

 The OpenSSL toolkit includes:

 libssl.a:
     Implementation of SSLv2, SSLv3, TLSv1 and the required code to support
     both SSLv2, SSLv3 and TLSv1 in the one server and client.

 libcrypto.a:
     General encryption and X.509 v1/v3 stuff needed by SSL/TLS but not
     actually logically part of it. It includes routines for the following:

     Ciphers
        libdes - EAY's libdes DES encryption package which was floating
                 around the net for a few years, and was then relicensed by
                 him as part of SSLeay.  It includes 15 'modes/variations'
                 of DES (1, 2 and 3 key versions of ecb, cbc, cfb and ofb;
                 pcbc and a more general form of cfb and ofb) including desx
                 in cbc mode, a fast crypt(3), and routines to read
                 passwords from the keyboard.
        RC4 encryption,
        RC2 encryption      - 4 different modes, ecb, cbc, cfb and ofb.
        Blowfish encryption - 4 different modes, ecb, cbc, cfb and ofb.
        IDEA encryption     - 4 different modes, ecb, cbc, cfb and ofb.

     Digests
        MD5 and MD2 message digest algorithms, fast implementations,
        SHA (SHA-0) and SHA-1 message digest algorithms,
        MDC2 message digest. A DES based hash that is popular on smart cards.

     Public Key
        RSA encryption/decryption/generation.
            There is no limit on the number of bits.
        DSA encryption/decryption/generation.
            There is no limit on the number of bits.
        Diffie-Hellman key-exchange/key generation.
            There is no limit on the number of bits.

     X.509v3 certificates
        X509 encoding/decoding into/from binary ASN1 and a PEM
             based ASCII-binary encoding which supports encryption with a
             private key.  Program to generate RSA and DSA certificate
             requests and to generate RSA and DSA certificates.

     Systems
        The normal digital envelope routines and base64 encoding.  Higher
        level access to ciphers and digests by name.  New ciphers can be
        loaded at run time.  The BIO io system which is a simple non-blocking
        IO abstraction.  Current methods supported are file descriptors,
        sockets, socket accept, socket connect, memory buffer, buffering, SSL
        client/server, file pointer, encryption, digest, non-blocking testing
        and null.

     Data structures
        A dynamically growing hashing system
        A simple stack.
        A Configuration loader that uses a format similar to MS .ini files.

 openssl:
     A command line tool that can be used for:
        Creation of RSA, DH and DSA key parameters
        Creation of X.509 certificates, CSRs and CRLs
        Calculation of Message Digests
        Encryption and Decryption with Ciphers
        SSL/TLS Client and Server Tests
        Handling of S/MIME signed or encrypted mail


 PATENTS
 -------

 Various companies hold various patents for various algorithms in various
 locations around the world. _YOU_ are responsible for ensuring that your use
 of any algorithms is legal by checking if there are any patents in your
 country.  The file contains some of the patents that we know about or are
 rumored to exist. This is not a definitive list.

 RSA Security holds software patents on the RC5 algorithm.  If you
 intend to use this cipher, you must contact RSA Security for
 licensing conditions. Their web page is http://www.rsasecurity.com/.

 RC4 is a trademark of RSA Security, so use of this label should perhaps
 only be used with RSA Security's permission.

 The IDEA algorithm is patented by Ascom in Austria, France, Germany, Italy,
 Japan, the Netherlands, Spain, Sweden, Switzerland, UK and the USA.  They
 should be contacted if that algorithm is to be used; their web page is
 http://www.ascom.ch/.

 NTT and Mitsubishi have patents and pending patents on the Camellia
 algorithm, but allow use at no charge without requiring an explicit
 licensing agreement: http://info.isl.ntt.co.jp/crypt/eng/info/chiteki.html

 INSTALLATION
 ------------

 To install this package under a Unix derivative, read the INSTALL file.  For
 a Win32 platform, read the INSTALL.W32 file.  For OpenVMS systems, read
 INSTALL.VMS.

 Read the documentation in the doc/ directory.  It is quite rough, but it
 lists the functions; you will probably have to look at the code to work out
 how to use them. Look at the example programs.

 PROBLEMS
 --------

 For some platforms, there are some known problems that may affect the user
 or application author.  We try to collect those in doc/PROBLEMS, with current
 thoughts on how they should be solved in a future of OpenSSL.

 SUPPORT
 -------

 See the OpenSSL website www.openssl.org for details of how to obtain
 commercial technical support.

 If you have any problems with OpenSSL then please take the following steps
 first:

    - Download the current snapshot from ftp://ftp.openssl.org/snapshot/
      to see if the problem has already been addressed
    - Remove ASM versions of libraries
    - Remove compiler optimisation flags

 If you wish to report a bug then please include the following information in
 any bug report:

    - On Unix systems:
        Self-test report generated by 'make report'
    - On other systems:
        OpenSSL version: output of 'openssl version -a'
        OS Name, Version, Hardware platform
        Compiler Details (name, version)
    - Application Details (name, version)
    - Problem Description (steps that will reproduce the problem, if known)
    - Stack Traceback (if the application dumps core)

 Report the bug to the OpenSSL project via the Request Tracker
 (http://www.openssl.org/support/rt.html) by mail to:

    openssl-bugs@@openssl.org

 Note that the request tracker should NOT be used for general assistance
 or support queries. Just because something doesn't work the way you expect
 does not mean it is necessarily a bug in OpenSSL.

 Note that mail to openssl-bugs@@openssl.org is recorded in the publicly
 readable request tracker database and is forwarded to a public
 mailing list. Confidential mail may be sent to openssl-security@@openssl.org
 (PGP key available from the key servers).

 HOW TO CONTRIBUTE TO OpenSSL
 ----------------------------

 Development is coordinated on the openssl-dev mailing list (see
 http://www.openssl.org for information on subscribing). If you
 would like to submit a patch, send it to openssl-bugs@@openssl.org with
 the string "[PATCH]" in the subject. Please be sure to include a
 textual explanation of what your patch does.

 If you are unsure as to whether a feature will be useful for the general
 OpenSSL community please discuss it on the openssl-dev mailing list first.
 Someone may be already working on the same thing or there may be a good
 reason as to why that feature isn't implemented.

 Patches should be as up to date as possible, preferably relative to the
 current Git or the last snapshot. They should follow the coding style of
 OpenSSL and compile without warnings. Some of the core team developer targets
 can be used for testing purposes, (debug-steve64, debug-geoff etc). OpenSSL
 compiles on many varied platforms: try to ensure you only use portable
 features.

 Note: For legal reasons, contributions from the US can be accepted only
 if a TSU notification and a copy of the patch are sent to crypt@@bis.doc.gov
 (formerly BXA) with a copy to the ENC Encryption Request Coordinator;
 please take some time to look at
    http://www.bis.doc.gov/Encryption/PubAvailEncSourceCodeNofify.html [sic]
 and
    http://w3.access.gpo.gov/bis/ear/pdf/740.pdf (EAR Section 740.13(e))
 for the details. If "your encryption source code is too large to serve as
 an email attachment", they are glad to receive it by fax instead; hope you
 have a cheap long-distance plan.

 Our preferred format for changes is "diff -u" output. You might
 generate it like this:

 # cd openssl-work
 # [your changes]
 # ./Configure dist; make clean
 # cd ..
 # diff -ur openssl-orig openssl-work > mydiffs.patch

@


1.24
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@@


1.23
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 1.0.1c 10 May 2012
d193 1
a193 1
 current CVS or the last snapshot. They should follow the coding style of
@


1.22
log
@OpenSSL 1.0.0f: merge
@
text
@d2 1
a2 1
 OpenSSL 1.0.0f 4 Jan 2012
@


1.21
log
@openssl-1.0.0e: resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 1.0.0e 6 Sep 2011
@


1.20
log
@resolve conflicts, fix local changes
@
text
@d2 1
a2 1
 OpenSSL 1.0.0a 1 Jun 2010
d4 1
a4 1
 Copyright (c) 1998-2010 The OpenSSL Project
@


1.19
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 0.9.8k
d4 1
a4 1
 Copyright (c) 1998-2008 The OpenSSL Project
a114 2
 The MDC2 algorithm is patented by IBM.

d140 3
d169 4
d183 1
a183 1
 would like to submit a patch, send it to openssl-dev@@openssl.org with
d186 12
@


1.18
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 0.9.8j
@


1.17
log
@update to openssl-0.9.8i; tested by several, especially krw@@
@
text
@d2 1
a2 1
 OpenSSL 0.9.8i
@


1.16
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 0.9.8h
@


1.15
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 0.9.7j 04 May 2006
d4 1
a4 1
 Copyright (c) 1998-2005 The OpenSSL Project
d39 7
a45 6
        libdes - EAY's libdes DES encryption package which has been floating
                 around the net for a few years.  It includes 15
                 'modes/variations' of DES (1, 2 and 3 key versions of ecb,
                 cbc, cfb and ofb; pcbc and a more general form of cfb and
                 ofb) including desx in cbc mode, a fast crypt(3), and
                 routines to read passwords from the keyboard.
d117 4
d164 1
a164 1
 (http://www.openssl.org/support/rt2.html) by mail to:
@


1.14
log
@resolve conflicts
@
text
@d2 1
a2 1
 OpenSSL 0.9.7g 11 April 2005
d17 1
a17 1
 related documentation. 
d23 1
a23 1
 purposes as long as you fulfill the conditions of both licenses. 
d56 1
a56 1
        RSA encryption/decryption/generation.  
d58 1
a58 1
        DSA encryption/decryption/generation.   
d60 1
a60 1
        Diffie-Hellman key-exchange/key generation.  
d83 1
a83 1
 openssl: 
d86 1
a86 1
        Creation of X.509 certificates, CSRs and CRLs 
d92 1
a92 1
        
d107 1
a107 1
 only be used with RSA Security's permission. 
d114 2
d134 1
a134 1
 SUPPORT 
d143 1
a143 1
    - Remove compiler optimisation flags 
d196 1
@


1.13
log
@merge 0.9.7d
@
text
@d2 1
a2 1
 OpenSSL 0.9.7d 17 Mar 2004
d4 1
a4 1
 Copyright (c) 1998-2004 The OpenSSL Project
d176 9
a184 3
 if a TSA notification and a copy of the patch is sent to crypt@@bis.doc.gov;
 see http://www.bis.doc.gov/Encryption/PubAvailEncSourceCodeNofify.html [sic]
 and http://w3.access.gpo.gov/bis/ear/pdf/740.pdf (EAR Section 740.13(e)).
d186 1
a186 1
 The preferred format for changes is "diff -u" output. You might
@


1.12
log
@merge 0.9.7c; minor bugsfixes;
API addition: ERR_release_err_state_table
[make includes before you build libssl/libcrypto]
@
text
@d2 1
a2 1
 OpenSSL 0.9.7c 30 Sep 2003
d4 1
a4 1
 Copyright (c) 1998-2003 The OpenSSL Project
@


1.11
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d2 1
a2 1
 OpenSSL 0.9.7b 10 Apr 2003
@


1.10
log
@merge with openssl-0.9.7-stable-SNAP-20020911,
new minor for libcrypto (_X509_REQ_print_ex)
tested by miod@@, pb@@
@
text
@d2 1
a2 1
 OpenSSL 0.9.7-beta3 30 Jul 2002
d4 1
a4 1
 Copyright (c) 1998-2002 The OpenSSL Project
@


1.9
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d157 1
a157 1
 (http://www.openssl.org/rt2.html) by mail to:
@


1.8
log
@Merge OpenSSL 0.9.7-stable-20020605,
correctly autogenerate obj_mac.h
@
text
@d2 1
a2 1
 OpenSSL 0.9.7-beta1 01 Jun 2002
d125 7
d156 2
a157 1
 Report the bug to the OpenSSL project at:
d161 2
a162 1
 Note that mail to openssl-bugs@@openssl.org is forwarded to a public
d176 3
a178 1
 if a copy of the patch is sent to crypt@@bxa.doc.gov
@


1.7
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d2 1
a2 1
 OpenSSL 0.9.7-dev XX xxx XXXX
@


1.6
log
@merge openssl 0.9.6b-engine

Note that this is a maintenence release, API's appear *not* to have changed.
As such, I have only increased the minor number on these libraries
@
text
@d2 1
a2 1
 OpenSSL 0.9.6b [engine]  9 Jul 2001
d4 1
a4 2

 Copyright (c) 1998-2001 The OpenSSL Project
d14 4
a17 3
 protocols with full-strength cryptography world-wide. The project is managed
 by a worldwide community of volunteers that use the Internet to communicate,
 plan, and develop the OpenSSL toolkit and its related documentation. 
d65 1
a65 1
             based ascii-binary encoding which supports encryption with a
d100 1
a100 1
 rumoured to exist. This is not a definitive list.
d110 2
a111 2
 Japan, Netherlands, Spain, Sweden, Switzerland, UK and the USA.  They should
 be contacted if that algorithm is to be used, their web page is
d122 2
a123 2
 lists the functions, you will probably have to look at the code to work out
 how to used them. Look at the example programs.
@


1.5
log
@openssl-engine-0.9.6a merge
@
text
@d2 1
a2 1
 OpenSSL 0.9.6a [engine] 5 Apr 2001
d5 1
a5 1
 Copyright (c) 1998-2000 The OpenSSL Project
@


1.4
log
@openssl-engine-0.9.6 merge
@
text
@d2 2
a3 1
 OpenSSL 0.9.5  28 Feb 2000
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d101 3
a103 4
 RSA Data Security holds software patents on the RSA and RC5 algorithms.  If
 their ciphers are used used inside the USA (and Japan?), you must contact RSA
 Data Security for licensing conditions. Their web page is
 http://www.rsa.com/.
d105 2
a106 2
 RC4 is a trademark of RSA Data Security, so use of this label should perhaps
 only be used with RSA Data Security's permission. 
a119 3
 For people in the USA, it is possible to compile OpenSSL to use RSA Inc.'s
 public key library, RSAREF, by configuring OpenSSL with the option "rsaref".

d165 3
d175 1
a175 1
 # diff -urN openssl-orig openssl-work > mydiffs.patch
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d2 1
a2 1
 OpenSSL 0.9.4  09 Aug 1999
d4 1
a4 1
 Copyright (c) 1998-1999 The OpenSSL Project
d83 7
a89 1
     A command line tool which provides the following functions:
a90 32
     enc     - a general encryption program that can encrypt/decrypt using
               one of 17 different cipher/mode combinations.  The
               input/output can also be converted to/from base64
               ascii encoding.
     dgst    - a generate message digesting program that will generate
               message digests for any of md2, md5, sha (sha-0 or sha-1)
               or mdc2.
     asn1parse - parse and display the structure of an asn1 encoded
               binary file.
     rsa     - Manipulate RSA private keys.
     dsa     - Manipulate DSA private keys.
     dh      - Manipulate Diffie-Hellman parameter files.
     dsaparam- Manipulate and generate DSA parameter files.
     crl     - Manipulate certificate revocation lists.
     crt2pkcs7- Generate a pkcs7 object containing a crl and a certificate.
     x509    - Manipulate x509 certificates, self-sign certificates.
     req     - Manipulate PKCS#10 certificate requests and also
               generate certificate requests.
     genrsa  - Generates an arbitrary sized RSA private key.
     gendsa  - Generates DSA parameters.
     gendh   - Generates a set of Diffie-Hellman parameters, the prime
               will be a strong prime.
     ca      - Create certificates from PKCS#10 certificate requests.
               This program also maintains a database of certificates
               issued.
     verify  - Check x509 certificate signatures.
     speed   - Benchmark OpenSSL's ciphers.
     s_server- A test SSL server.
     s_client- A test SSL client.
     s_time  - Benchmark SSL performance of SSL server programs.
     errstr  - Convert from OpenSSL hex error codes to a readable form.
     nseq    - Netscape certificate sequence utility
d134 2
a137 2
    - Add compiler debug flags (if using gcc then remove -fomit-frame-pointer
      before you try to debug things)
d142 9
a150 16
    OpenSSL Details
    - Version, most of these details can be got from the
      'openssl version -a' command.
    Operating System Details
    - On Unix systems: Output of './config -t'
    - OS Name, Version
    - Hardware platform
    Compiler Details
    - Name
    - Version
    Application Details 
    - Name 
    - Version 
    Problem Description
    - include steps that will reproduce the problem (if known)
    Stack Traceback (if the application dumps core)
d156 4
d165 3
a167 3
 would like to submit a patch, send it to openssl-dev@@openssl.org.
 Please be sure to include a textual explanation of what your patch
 does.
@


1.1
log
@Initial revision
@
text
@a0 172
		SSLeay 0.9.0b 29-Jun-1998
		Copyright (c) 1997, Eric Young
		All rights reserved.

This directory contains Eric Young's (eay@@cryptsoft.com) implementation
of SSL and supporting libraries.

The current version of this library is available from
    ftp://ftp.psy.uq.oz.au/pub/Crypto/SSL/SSLeay-x.x.x.tar.gz

There are patches to a number of internet applications which can be found in
    ftp://ftp.psy.uq.oz.au/pub/Crypto/SSLapps/

A Web page containing the SSLeay FAQ written by Tim Hudson <tjh@@cryptsoft.com> 
can be found at 
    http://www.psy.uq.oz.au/~ftp/Crypto

Additional documentation is being slowly written by Eric Young, and is being
added to http://www.cryptsoft.com/ssleay/doc.  It will normally also be
available on http://www.psy.uq.oz.au/~ftp/Crypto/ssleay

This Library and programs are FREE for commercial and non-commercial
usage.  The only restriction is that I must be attributed with the
development of this code.  See the COPYRIGHT file for more details.
Donations would still be accepted :-).

THIS LIBRARY IS NOT %100 COMPATABLE WITH SSLeay 0.6.6

The package includes

libssl.a:
	My implementation of SSLv2, SSLv3 and the required code to support
	both SSLv2 and SSLv3 in the one server.

libcrypto.a:
	General encryption and X509 stuff needed by SSL but not
	actually logically part of it.  It includes routines for the following:

  Ciphers
	libdes - My libdes DES encryption package which has been floating
		around the net for a few years.  It includes 15
		'modes/variations' of DES (1, 2 and 3 key versions of ecb,
		cbc, cfb and ofb; pcbc and a more general form of cfb and ofb)
		including desx in cbc mode,
		a fast crypt(3), and routines to read passwords from the
		keyboard.
	RC4 encryption,
	RC2 encryption 		- 4 different modes, ecb, cbc, cfb and ofb.
	Blowfish encryption	- 4 different modes, ecb, cbc, cfb and ofb.
	IDEA encryption		- 4 different modes, ecb, cbc, cfb and ofb.

  Digests
	MD5 and MD2 message digest algorithms, fast implementations,
	SHA (SHA-0) and SHA-1 message digest algorithms,
	MDC2 message digest.  A DES based hash that is polular on smart cards.

  Public Key
	RSA encryption/decryption/generation.  There is no limit
		on the number of bits.
	DSA encryption/decryption/generation.   There is no limit on the
		number of bits.
	Diffie-Hellman key-exchange/key generation.  There is no limit
		on the number of bits.

  X509v3 certificates
	X509 encoding/decoding into/from binary ASN1 and a PEM
		based ascii-binary encoding which supports encryption with
		a private key.
	Program to generate RSA and DSA certificate requests and to
		generate RSA and DSA certificates.

  Systems
  	The normal digital envelope routines and base64 encoding.
	Higher level access to ciphers and digests by name.  New ciphers can be
		loaded at run time.
	The BIO io system which is a simple non-blocking IO abstraction.
		Current methods supported are file descriptors, sockets,
		socket accept, socket connect, memory buffer, buffering,
		SSL client/server, file pointer, encryption, digest,
		non-blocking testing and null.
  Data structures
  	A dynamically growing hashing system
	A simple stack.
	A Configuration loader that uses a format similar to MS .ini files.

Programs in this package include
	enc	- a general encryption program that can encrypt/decrypt using
		one of 17 different cipher/mode combinations.  The
		input/output can also be converted to/from base64
		ascii encoding.
	dgst	- a generate message digesting program that will generate
		message digests for any of md2, md5, sha (sha-0 or sha-1)
		or mdc2.
	asn1parse - parse and display the structure of an asn1 encoded
		binary file.
	rsa	- Manipulate RSA private keys.
	dsa	- Manipulate DSA private keys.
	dh	- Manipulate Diffie-Hellman parameter files.
	dsaparam- Manipulate and generate DSA parameter files.
	crl	- Manipulate certificate revocation lists.
	crt2pkcs7- Generate a pkcs7 object containing a crl and a certificate.
	x509	- Manipulate x509 certificates, self-sign certificates.
	req	- Manipulate PKCS#10 certificate requests and also
		  generate certificate requests.
	genrsa  - Generates an arbitrary sized RSA private key.
	gendh	- Generates a set of Diffie-Hellman parameters, the prime
		  will be a strong prime.
	ca	- Create certificates from PKCS#10 certificate requests.
		  This program also maintains a database of certificates
		  issued.
	verify	- Check x509 certificate signatures.
	speed	- Benchmark SSLeay's ciphers.
	s_server- A test SSL server.
	s_client- A test SSL client.
	s_time	- Benchmark SSL performance of SSL server programs.
	errstr	- Convert from SSLeay hex error codes to a readable form.
	
Documents avaliable are
	A Postscript and html reference manual
	(written by Tim Hudson tjh@@cryptsoft.com).

	A list of text protocol references I used.
	An initial version of the library manual.

To install this package, read the INSTALL file.
For the Microsoft word, read MICROSOFT
This library has been compiled and tested on Solaris 2.[34] (sparc and x86),
SunOS 4.1.3, DGUX, OSF1 Alpha, HPUX 9, AIX 3.5(?), IRIX 5.[23],
LINUX, NeXT (intel), linux, Windows NT, Windows 3.1, MSDOS 6.22.

Multithreading has been tested under Windows NT and Solaris 2.5.1

Due to time constraints, the current release has only be rigorously tested
on Solaris 2.[45], Linux and Windows NT.

For people in the USA, it is possible to compile SSLeay to use RSA
Inc.'s public key library, RSAref.  From my understanding, it is
claimed by RSA Inc. to be illegal to use my public key routines inside the USA.
Read doc/rsaref.doc on how to build with RSAref.

Read the documentation in the doc directory.  It is quite rough,
but it lists the functions, you will probably have to look at
the code to work out how to used them.  I will be working on
documentation.  Look at the example programs.

There should be a SSL reference manual which is being put together by
Tim Hudson (tjh@@cryptsoft.com) in the same location as this
distribution.  This contains a lot more information that is very
useful.  For a description of X509 Certificates, their use, and
certification, read rfc1421, rfc1422, rfc1423 and rfc1424.  ssl/README
also goes over the mechanism.

We have setup some mailing lists for use by people that are interested
in helping develop this code and/or ask questions.
    ssl-bugs@@mincom.oz.au
    ssl-users@@mincom.oz.au
    ssl-bugs-request@@mincom.oz.au
    ssl-users-request@@mincom.oz.au

I have recently read about a new form of software, that which is in
a permanent state of beta release.  Linux and Netscape are 2 good 
examples of this, and I would also add SSLeay to this category.
The Current stable release is 0.6.6.  It has a few minor problems.
0.8.0 is not call compatable so make sure you have the correct version
of SSLeay to link with.  

eric (Jun 1997)

Eric Young (eay@@cryptsoft.com)
86 Taunton St.
Annerley 4103.
Australia.
d2 204
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d1 172
a173 175
 OpenSSL 0.9.7-beta1 01 Jun 2002

 Copyright (c) 1998-2002 The OpenSSL Project
 Copyright (c) 1995-1998 Eric A. Young, Tim J. Hudson
 All rights reserved.

 DESCRIPTION
 -----------

 The OpenSSL Project is a collaborative effort to develop a robust,
 commercial-grade, fully featured, and Open Source toolkit implementing the
 Secure Sockets Layer (SSL v2/v3) and Transport Layer Security (TLS v1)
 protocols as well as a full-strength general purpose cryptography library.
 The project is managed by a worldwide community of volunteers that use the
 Internet to communicate, plan, and develop the OpenSSL toolkit and its
 related documentation. 

 OpenSSL is based on the excellent SSLeay library developed from Eric A. Young
 and Tim J. Hudson.  The OpenSSL toolkit is licensed under a dual-license (the
 OpenSSL license plus the SSLeay license) situation, which basically means
 that you are free to get and use it for commercial and non-commercial
 purposes as long as you fulfill the conditions of both licenses. 

 OVERVIEW
 --------

 The OpenSSL toolkit includes:

 libssl.a:
     Implementation of SSLv2, SSLv3, TLSv1 and the required code to support
     both SSLv2, SSLv3 and TLSv1 in the one server and client.

 libcrypto.a:
     General encryption and X.509 v1/v3 stuff needed by SSL/TLS but not
     actually logically part of it. It includes routines for the following:

     Ciphers
        libdes - EAY's libdes DES encryption package which has been floating
                 around the net for a few years.  It includes 15
                 'modes/variations' of DES (1, 2 and 3 key versions of ecb,
                 cbc, cfb and ofb; pcbc and a more general form of cfb and
                 ofb) including desx in cbc mode, a fast crypt(3), and
                 routines to read passwords from the keyboard.
        RC4 encryption,
        RC2 encryption      - 4 different modes, ecb, cbc, cfb and ofb.
        Blowfish encryption - 4 different modes, ecb, cbc, cfb and ofb.
        IDEA encryption     - 4 different modes, ecb, cbc, cfb and ofb.

     Digests
        MD5 and MD2 message digest algorithms, fast implementations,
        SHA (SHA-0) and SHA-1 message digest algorithms,
        MDC2 message digest. A DES based hash that is popular on smart cards.

     Public Key
        RSA encryption/decryption/generation.  
            There is no limit on the number of bits.
        DSA encryption/decryption/generation.   
            There is no limit on the number of bits.
        Diffie-Hellman key-exchange/key generation.  
            There is no limit on the number of bits.

     X.509v3 certificates
        X509 encoding/decoding into/from binary ASN1 and a PEM
             based ASCII-binary encoding which supports encryption with a
             private key.  Program to generate RSA and DSA certificate
             requests and to generate RSA and DSA certificates.

     Systems
        The normal digital envelope routines and base64 encoding.  Higher
        level access to ciphers and digests by name.  New ciphers can be
        loaded at run time.  The BIO io system which is a simple non-blocking
        IO abstraction.  Current methods supported are file descriptors,
        sockets, socket accept, socket connect, memory buffer, buffering, SSL
        client/server, file pointer, encryption, digest, non-blocking testing
        and null.

     Data structures
        A dynamically growing hashing system
        A simple stack.
        A Configuration loader that uses a format similar to MS .ini files.

 openssl: 
     A command line tool that can be used for:
        Creation of RSA, DH and DSA key parameters
        Creation of X.509 certificates, CSRs and CRLs 
        Calculation of Message Digests
        Encryption and Decryption with Ciphers
        SSL/TLS Client and Server Tests
        Handling of S/MIME signed or encrypted mail

        
 PATENTS
 -------

 Various companies hold various patents for various algorithms in various
 locations around the world. _YOU_ are responsible for ensuring that your use
 of any algorithms is legal by checking if there are any patents in your
 country.  The file contains some of the patents that we know about or are
 rumored to exist. This is not a definitive list.

 RSA Security holds software patents on the RC5 algorithm.  If you
 intend to use this cipher, you must contact RSA Security for
 licensing conditions. Their web page is http://www.rsasecurity.com/.

 RC4 is a trademark of RSA Security, so use of this label should perhaps
 only be used with RSA Security's permission. 

 The IDEA algorithm is patented by Ascom in Austria, France, Germany, Italy,
 Japan, the Netherlands, Spain, Sweden, Switzerland, UK and the USA.  They
 should be contacted if that algorithm is to be used; their web page is
 http://www.ascom.ch/.

 INSTALLATION
 ------------

 To install this package under a Unix derivative, read the INSTALL file.  For
 a Win32 platform, read the INSTALL.W32 file.  For OpenVMS systems, read
 INSTALL.VMS.

 Read the documentation in the doc/ directory.  It is quite rough, but it
 lists the functions; you will probably have to look at the code to work out
 how to use them. Look at the example programs.

 SUPPORT 
 -------

 If you have any problems with OpenSSL then please take the following steps
 first:

    - Download the current snapshot from ftp://ftp.openssl.org/snapshot/
      to see if the problem has already been addressed
    - Remove ASM versions of libraries
    - Remove compiler optimisation flags 

 If you wish to report a bug then please include the following information in
 any bug report:

    - On Unix systems:
        Self-test report generated by 'make report'
    - On other systems:
        OpenSSL version: output of 'openssl version -a'
        OS Name, Version, Hardware platform
        Compiler Details (name, version)
    - Application Details (name, version)
    - Problem Description (steps that will reproduce the problem, if known)
    - Stack Traceback (if the application dumps core)

 Report the bug to the OpenSSL project at:

    openssl-bugs@@openssl.org

 Note that mail to openssl-bugs@@openssl.org is forwarded to a public
 mailing list. Confidential mail may be sent to openssl-security@@openssl.org
 (PGP key available from the key servers).

 HOW TO CONTRIBUTE TO OpenSSL
 ----------------------------

 Development is coordinated on the openssl-dev mailing list (see
 http://www.openssl.org for information on subscribing). If you
 would like to submit a patch, send it to openssl-dev@@openssl.org with
 the string "[PATCH]" in the subject. Please be sure to include a
 textual explanation of what your patch does.

 Note: For legal reasons, contributions from the US can be accepted only
 if a copy of the patch is sent to crypt@@bxa.doc.gov

 The preferred format for changes is "diff -u" output. You might
 generate it like this:

 # cd openssl-work
 # [your changes]
 # ./Configure dist; make clean
 # cd ..
 # diff -ur openssl-orig openssl-work > mydiffs.patch
@


1.1.1.3
log
@import openssl-0.9.7-beta3
@
text
@d2 1
a2 1
 OpenSSL 0.9.7-beta3 30 Jul 2002
a124 7
 PROBLEMS
 --------

 For some platforms, there are some known problems that may affect the user
 or application author.  We try to collect those in doc/PROBLEMS, with current
 thoughts on how they should be solved in a future of OpenSSL.

d149 1
a149 2
 Report the bug to the OpenSSL project via the Request Tracker
 (http://www.openssl.org/rt2.html) by mail to:
d153 1
a153 2
 Note that mail to openssl-bugs@@openssl.org is recorded in the publicly
 readable request tracker database and is forwarded to a public
d167 1
a167 3
 if a TSA notification and a copy of the patch is sent to crypt@@bis.doc.gov;
 see http://www.bis.doc.gov/Encryption/PubAvailEncSourceCodeNofify.html [sic]
 and http://w3.access.gpo.gov/bis/ear/pdf/740.pdf (EAR Section 740.13(e)).
@


1.1.1.4
log
@import openssl-0.9.7-stable-SNAP-20020911 (without idea)
@
text
@d157 1
a157 1
 (http://www.openssl.org/support/rt2.html) by mail to:
@


1.1.1.5
log
@import 0.9.7b (without idea and rc5)
@
text
@d2 1
a2 1
 OpenSSL 0.9.7b 10 Apr 2003
d4 1
a4 1
 Copyright (c) 1998-2003 The OpenSSL Project
@


1.1.1.6
log
@import 0.9.7c
@
text
@d2 1
a2 1
 OpenSSL 0.9.7c 30 Sep 2003
@


1.1.1.7
log
@import openssl-0.9.7d
@
text
@d2 1
a2 1
 OpenSSL 0.9.7d 17 Mar 2004
d4 1
a4 1
 Copyright (c) 1998-2004 The OpenSSL Project
@


1.1.1.8
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d2 1
a2 1
 OpenSSL 0.9.7g 11 April 2005
d4 1
a4 1
 Copyright (c) 1998-2005 The OpenSSL Project
d176 3
a178 9
 if a TSU notification and a copy of the patch are sent to crypt@@bis.doc.gov
 (formerly BXA) with a copy to the ENC Encryption Request Coordinator;
 please take some time to look at
    http://www.bis.doc.gov/Encryption/PubAvailEncSourceCodeNofify.html [sic]
 and
    http://w3.access.gpo.gov/bis/ear/pdf/740.pdf (EAR Section 740.13(e))
 for the details. If "your encryption source code is too large to serve as
 an email attachment", they are glad to receive it by fax instead; hope you
 have a cheap long-distance plan.
d180 1
a180 1
 Our preferred format for changes is "diff -u" output. You might
@


1.1.1.9
log
@import of openssl-0.9.7j
@
text
@d2 1
a2 1
 OpenSSL 0.9.7j 04 May 2006
d17 1
a17 1
 related documentation.
d23 1
a23 1
 purposes as long as you fulfill the conditions of both licenses.
d56 1
a56 1
        RSA encryption/decryption/generation.
d58 1
a58 1
        DSA encryption/decryption/generation.
d60 1
a60 1
        Diffie-Hellman key-exchange/key generation.
d83 1
a83 1
 openssl:
d86 1
a86 1
        Creation of X.509 certificates, CSRs and CRLs
d92 1
a92 1

d107 1
a107 1
 only be used with RSA Security's permission.
a113 2
 The MDC2 algorithm is patented by IBM.

d132 1
a132 1
 SUPPORT
d141 1
a141 1
    - Remove compiler optimisation flags
a193 1

@


1.1.1.10
log
@import of OpenSSL 0.9.8h
@
text
@d2 1
a2 1
 OpenSSL 0.9.8h
d4 1
a4 1
 Copyright (c) 1998-2008 The OpenSSL Project
d39 6
a44 7
        libdes - EAY's libdes DES encryption package which was floating
                 around the net for a few years, and was then relicensed by
                 him as part of SSLeay.  It includes 15 'modes/variations'
                 of DES (1, 2 and 3 key versions of ecb, cbc, cfb and ofb;
                 pcbc and a more general form of cfb and ofb) including desx
                 in cbc mode, a fast crypt(3), and routines to read
                 passwords from the keyboard.
a115 4
 NTT and Mitsubishi have patents and pending patents on the Camellia
 algorithm, but allow use at no charge without requiring an explicit
 licensing agreement: http://info.isl.ntt.co.jp/crypt/eng/info/chiteki.html

d159 1
a159 1
 (http://www.openssl.org/support/rt.html) by mail to:
@


1.1.1.11
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
 OpenSSL 0.9.8j
@


1.1.1.12
log
@import of OpenSSL 0.9.8k
@
text
@d2 1
a2 1
 OpenSSL 0.9.8k
@


1.1.1.13
log
@import OpenSSL-1.0.0a
@
text
@d2 1
a2 1
 OpenSSL 1.0.0a 1 Jun 2010
d4 1
a4 1
 Copyright (c) 1998-2010 The OpenSSL Project
d115 2
a141 3
 See the OpenSSL website www.openssl.org for details of how to obtain
 commercial technical support.

a167 4
 Note that the request tracker should NOT be used for general assistance
 or support queries. Just because something doesn't work the way you expect
 does not mean it is necessarily a bug in OpenSSL.

d178 1
a178 1
 would like to submit a patch, send it to openssl-bugs@@openssl.org with
a180 12

 If you are unsure as to whether a feature will be useful for the general
 OpenSSL community please discuss it on the openssl-dev mailing list first.
 Someone may be already working on the same thing or there may be a good
 reason as to why that feature isn't implemented.

 Patches should be as up to date as possible, preferably relative to the
 current CVS or the last snapshot. They should follow the coding style of
 OpenSSL and compile without warnings. Some of the core team developer targets
 can be used for testing purposes, (debug-steve64, debug-geoff etc). OpenSSL
 compiles on many varied platforms: try to ensure you only use portable
 features.
@


1.1.1.14
log
@import OpenSSL 1.0.0e
@
text
@d2 1
a2 1
 OpenSSL 1.0.0e 6 Sep 2011
d4 1
a4 1
 Copyright (c) 1998-2011 The OpenSSL Project
@


1.1.1.15
log
@OpenSSL 1.0.0f: import upstream source
@
text
@d2 1
a2 1
 OpenSSL 1.0.0f 4 Jan 2012
@


1.1.1.16
log
@import OpenSSL-1.0.1c
@
text
@d2 1
a2 1
 OpenSSL 1.0.1c 10 May 2012
@


1.1.1.17
log
@Import OpenSSL 1.0.1g
@
text
@d2 1
a2 1
 OpenSSL 1.0.1g 7 Apr 2014
d193 1
a193 1
 current Git or the last snapshot. They should follow the coding style of
@


