head	1.2;
access;
symbols
	butholakala:1.1.1.3
	openssl_1_0_1_g:1.1.1.3
	OPENBSD_5_5:1.1.1.3.0.38
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.34
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.32
	OPENBSD_5_3_BASE:1.1.1.3
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.28
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.30
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.1.1.3.0.26
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.24
	OPENBSD_4_9_BASE:1.1.1.3
	openssh_1_0_0_a:1.1.1.3
	OPENBSD_4_8:1.1.1.3.0.22
	OPENBSD_4_8_BASE:1.1.1.3
	OPENBSD_4_7:1.1.1.3.0.18
	OPENBSD_4_7_BASE:1.1.1.3
	OPENBSD_4_6:1.1.1.3.0.20
	OPENBSD_4_6_BASE:1.1.1.3
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.1.1.3.0.16
	OPENBSD_4_5_BASE:1.1.1.3
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.1.1.3
	OPENBSD_4_4:1.1.1.3.0.14
	OPENBSD_4_4_BASE:1.1.1.3
	OPENBSD_4_3:1.1.1.3.0.12
	OPENBSD_4_3_BASE:1.1.1.3
	OPENBSD_4_2:1.1.1.3.0.10
	OPENBSD_4_2_BASE:1.1.1.3
	OPENBSD_4_1:1.1.1.3.0.8
	OPENBSD_4_1_BASE:1.1.1.3
	OPENBSD_4_0:1.1.1.3.0.6
	OPENBSD_4_0_BASE:1.1.1.3
	openssl_0_9_7j:1.1.1.3
	openssl:1.1.1
	OPENBSD_3_9:1.1.1.3.0.4
	OPENBSD_3_9_BASE:1.1.1.3
	OPENBSD_3_8:1.1.1.3.0.2
	OPENBSD_3_8_BASE:1.1.1.3
	OPENSSL_0_9_7G:1.1.1.3
	OPENBSD_3_7:1.1.1.2.0.8
	OPENBSD_3_7_BASE:1.1.1.2
	OPENBSD_3_6:1.1.1.2.0.6
	OPENBSD_3_6_BASE:1.1.1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.1.1.2.0.4
	OPENBSD_3_5_BASE:1.1.1.2
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.1.1.2.0.2
	OPENBSD_3_4_BASE:1.1.1.2
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.1.1.1.0.4
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.2
	OPENBSD_3_2_BASE:1.1.1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2014.04.13.16.13.01;	author deraadt;	state dead;
branches;
next	1.1;

1.1
date	2002.09.05.22.33.18;	author markus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.22.33.18;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.21.34.11;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2005.04.29.05.36.57;	author djm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Irrelevant.
@
text
@
 
 INSTALLATION ON THE DOS PLATFORM WITH DJGPP
 -------------------------------------------

 Openssl has been ported to DOS, but only with long filename support. If
 you wish to compile on native DOS with 8+3 filenames, you will have to
 tweak the installation yourself, including renaming files with illegal
 or duplicate names.

 You should have a full DJGPP environment installed, including the
 latest versions of DJGPP, GCC, BINUTILS, BASH, etc. This package
 requires that PERL and BC also be installed.

 All of these can be obtained from the usual DJGPP mirror sites, such as
 "ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp". You also need to have
 the WATT-32 networking package installed before you try to compile
 openssl. This can be obtained from "http://www.bgnett.no/~giva/". The
 Makefile assumes that the WATT-32 code is in directory "watt32" under
 /dev/env/DJDIR.

 To compile openssl, start your BASH shell. Then configure for DOS by
 running "./Configure" with appropriate arguments. The basic syntax for
 DOS is:
 ./Configure no-threads --prefix=/dev/env/DJDIR DJGPP
 
 You may run out of DPMI selectors when running in a DOS box under
 Windows. If so, just close the BASH shell, go back to Windows, and
 restart BASH. Then run "make" again.

 Building openssl under DJGPP has been tested with DJGPP 2.03,
 GCC 2.952, GCC 2.953, perl 5.005_02 and perl 5.006_01.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import openssl-0.9.7-beta3
@
text
@@


1.1.1.2
log
@import 0.9.7b (without idea and rc5)
@
text
@d15 6
a20 8
 All of these can be obtained from the usual DJGPP mirror sites, such
 as "ftp://ftp.simtel.net/pub/simtelnet/gnu/djgpp". You also need to
 have the WATT-32 networking package installed before you try to compile
 openssl. This can be obtained from "http://www.bgnett.no/~giva/".
 The Makefile assumes that the WATT-32 code is in the directory
 specified by the environment variable WATT_ROOT. If you have watt-32
 in directory "watt32" under your main DJGPP directory, specify
 WATT_ROOT="/dev/env/DJDIR/watt32".
@


1.1.1.3
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d6 4
a9 5
 OpenSSL has been ported to DJGPP, a Unix look-alike 32-bit run-time
 environment for 16-bit DOS, but only with long filename support.
 If you wish to compile on native DOS with 8+3 filenames, you will
 have to tweak the installation yourself, including renaming files
 with illegal or duplicate names.
d15 4
a18 6
 All of these can be obtained from the usual DJGPP mirror sites or
 directly at "http://www.delorie.com/pub/djgpp". For help on which
 files to download, see the DJGPP "ZIP PICKER" page at
 "http://www.delorie.com/djgpp/zip-picker.html". You also need to have
 the WATT-32 networking package installed before you try to compile
 OpenSSL. This can be obtained from "http://www.bgnett.no/~giva/".
d24 4
a27 4
 To compile OpenSSL, start your BASH shell, then configure for DJGPP by
 running "./Configure" with appropriate arguments:

	./Configure no-threads --prefix=/dev/env/DJDIR DJGPP
d29 3
a31 12
 And finally fire up "make". You may run out of DPMI selectors when
 running in a DOS box under Windows. If so, just close the BASH
 shell, go back to Windows, and restart BASH. Then run "make" again.

 RUN-TIME CAVEAT LECTOR
 --------------

 Quoting FAQ:

  "Cryptographic software needs a source of unpredictable data to work
   correctly.  Many open source operating systems provide a "randomness
   device" (/dev/urandom or /dev/random) that serves this purpose."
d33 2
a34 3
 As of version 0.9.7f DJGPP port checks upon /dev/urandom$ for a 3rd
 party "randomness" DOS driver. One such driver, NOISE.SYS, can be
 obtained from "http://www.rahul.net/dkaufman/index.html".
@


