head	1.2;
access;
symbols
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.2
date	99.09.29.04.37.22;	author beck;	state dead;
branches;
next	1.1;

1.1
date	98.10.05.20.12.30;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.30;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@#!/usr/bin/perl

use ExtUtils::testlib;

use SSLeay;

# 2687145 * 3003 * 10^5072 - 1. 

$a=SSLeay::BN::set_word(2687145);
$b=SSLeay::BN::set_word(3003);
$c=SSLeay::BN::set_word(10);
$d=SSLeay::BN::set_word(5072);
$e=SSLeay::BN::set_word(1);

print $a->bn2hex()."\n";
print $b->bn2hex()."\n";
print $c->bn2hex()."\n";
print $d->bn2hex()."\n";
print $e->bn2hex()."\n";

$f=(($a->mul($b)->mul($c->exp($d)))->sub($e));
#print "$a $b\n";

$c=$a->mul($b);
print "1->".$c->bn2hex()." \n";

$c=$a*$b;
print "2->".$c->bn2hex()." \n";
$a*=$b;
print "3->$a\n";

print $f->bn2hex()." $a\n";
print $a."\n";

print "$a=(($b*$c)/$d);\n";
$a=(($b*$c)/$d);
print "$a\n";

@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
