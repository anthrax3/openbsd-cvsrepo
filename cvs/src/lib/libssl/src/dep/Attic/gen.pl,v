head	1.4;
access;
symbols
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2000.12.15.04.14.15;	author beck;	state dead;
branches;
next	1.3;

1.3
date	2000.03.19.11.12.36;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.00;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.30;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.30;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@openssl-engine0.9.6 merge

Again, be sure to whack an old /usr/obj/lib/libssl if you are doing builds
@
text
@@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@a0 113
#!/usr/local/bin/perl

require 'getopts.pl';

$files="files";
%have=();
%missing=();
%name=();
%func=();

&Getopts('Ff:');

&load_file("files");
foreach $file (@@ARGV)
	{ &do_nm($file); }

if (defined($opt_f))
	{
	%a=();
	$r=&list_files($opt_f,"",*a);
	if ($opt_F)
		{
		foreach (sort split(/\n/,$r))
			{ print "$_\n"; }
		}
	else
		{ print $r; }
	}
else
	{
	for (sort keys %have)
		{
		print "$_:$have{$_}\n";
		}
	}

sub list_files
	{
	local($f,$o,*done)=@@_;
	local($a,$_,$ff,$ret);

	return if $f =~ /^\s*$/;

	$done{$f}=1;
	$ret.=$f."\n" if $opt_F;
	foreach (split(/ /,$have{$f}))
		{
		$ret.="$o$f:$_\n" unless $opt_F;
		}

	foreach (split(/ /,$missing{$f}))
		{
		$ff=$func{$_};
		next if defined($done{$ff});
		$ret.=&list_files($ff,$o."	");
		}
	$ret;
	}

sub do_nm
	{
	local($file)=@@_;
	local($fname)="";

	open(IN,"nm $file|") || die "unable to run 'nm $file|':$!\n";
	while (<IN>)
		{
		chop;
		next if /^\s*$/;
		if (/^(.*)\.o:\s*$/)
			{
			$fname="$1.c";
			next;
			}
		($type,$name)=/^.{8} (.) (.+)/;
#		print "$fname $type $name\n";

		if ($type eq "T")
			{
			$have{$fname}.="$name ";
			$func{$name}=$fname;
			}
		elsif ($type eq "U")
			{
			$missing{$fname}.="$name ";
			}
		}
	close(IN);
	}

sub load_file
	{
	local($file)=@@_;

	open(IN,"<$files") || die "unable to open $files:$!\n";

	while (<IN>)
		{
		chop;
		next if /^\s*$/;
		($n)=/\/([^\/\s]+)\s+/;
		($fn)=/^(\S+)\s/;
#		print "$n - $fn\n";
		if (defined($name{$n}))
			{ print "$n already exists\n"; }
		else
			{ $name{$n}=$fn; }
		}
	close(IN);
	@@name=%name;
	}


@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/usr/bin/perl
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
