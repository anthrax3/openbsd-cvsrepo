head	1.4;
access;
symbols
	OPENBSD_5_6:1.3.0.4
	OPENBSD_5_6_BASE:1.3
	butholakala:1.2
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.2.0.38
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.34
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.32
	OPENBSD_5_3_BASE:1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.2.0.28
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.30
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.2.0.26
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.24
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.2.0.22
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.18
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.20
	OPENBSD_4_6_BASE:1.2
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.2.0.16
	OPENBSD_4_5_BASE:1.2
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.14
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.12
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.10
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.8
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.6
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.4
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.2
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.1.0.16
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.14
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.12
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.10
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.8
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.6
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.4
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.2
	OPENBSD_3_0_BASE:1.1;
locks; strict;
comment	@# @;


1.4
date	2014.10.12.09.33.03;	author bentley;	state dead;
branches;
next	1.3;
commitid	d4OKqHtOZ8kX9T2O;

1.3
date	2014.05.04.21.13.41;	author jim;	state Exp;
branches;
next	1.2;

1.2
date	2005.04.29.05.39.29;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2001.06.22.00.03.28;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.20;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.24;	author djm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Convert libssl manpages from pod to mdoc(7).

libcrypto has not been started yet.

ok schwarze@@ miod@@
@
text
@=pod

=head1 NAME

SSL_CTX_get_verify_mode, SSL_get_verify_mode, SSL_CTX_get_verify_depth,
SSL_get_verify_depth, SSL_get_verify_callback, SSL_CTX_get_verify_callback -
get currently set verification parameters

=head1 SYNOPSIS

 #include <openssl/ssl.h>

 int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);
 int SSL_get_verify_mode(const SSL *ssl);
 int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);
 int SSL_get_verify_depth(const SSL *ssl);
 int (*SSL_CTX_get_verify_callback(const SSL_CTX *ctx))(int, X509_STORE_CTX *);
 int (*SSL_get_verify_callback(const SSL *ssl))(int, X509_STORE_CTX *);

=head1 DESCRIPTION

SSL_CTX_get_verify_mode() returns the verification mode currently set in
B<ctx>.

SSL_get_verify_mode() returns the verification mode currently set in
B<ssl>.

SSL_CTX_get_verify_depth() returns the verification depth limit currently set
in B<ctx>. If no limit has been explicitly set, -1 is returned and the
default value will be used.

SSL_get_verify_depth() returns the verification depth limit currently set
in B<ssl>. If no limit has been explicitly set, -1 is returned and the
default value will be used.

SSL_CTX_get_verify_callback() returns a function pointer to the verification
callback currently set in B<ctx>. If no callback was explicitly set, the
NULL pointer is returned and the default callback will be used.

SSL_get_verify_callback() returns a function pointer to the verification
callback currently set in B<ssl>. If no callback was explicitly set, the
NULL pointer is returned and the default callback will be used.

=head1 RETURN VALUES

See DESCRIPTION

=head1 SEE ALSO

L<ssl(3)|ssl(3)>, L<SSL_CTX_set_verify(3)|SSL_CTX_set_verify(3)>

=cut
@


1.3
log
@Improve line wrapping for lines exceeding 80 chars.

ok jmc@@
@
text
@@


1.2
log
@resolve conflicts
@
text
@d5 3
a7 1
SSL_CTX_get_verify_mode, SSL_get_verify_mode, SSL_CTX_get_verify_depth, SSL_get_verify_depth, SSL_get_verify_callback, SSL_CTX_get_verify_callback - get currently set verification parameters
@


1.1
log
@openssl-engine-0.9.6a merge
@
text
@d11 6
a16 6
 int SSL_CTX_get_verify_mode(SSL_CTX *ctx);
 int SSL_get_verify_mode(SSL *ssl);
 int SSL_CTX_get_verify_depth(SSL_CTX *ctx);
 int SSL_get_verify_depth(SSL *ssl);
 int (*SSL_CTX_get_verify_callback(SSL_CTX *ctx))(int, X509_STORE_CTX *);
 int (*SSL_get_verify_callback(SSL *ssl))(int, X509_STORE_CTX *);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d11 6
a16 6
 int SSL_CTX_get_verify_mode(const SSL_CTX *ctx);
 int SSL_get_verify_mode(const SSL *ssl);
 int SSL_CTX_get_verify_depth(const SSL_CTX *ctx);
 int SSL_get_verify_depth(const SSL *ssl);
 int (*SSL_CTX_get_verify_callback(const SSL_CTX *ctx))(int, X509_STORE_CTX *);
 int (*SSL_get_verify_callback(const SSL *ssl))(int, X509_STORE_CTX *);
@


