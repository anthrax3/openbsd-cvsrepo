head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.4
	OPENBSD_5_7_BASE:1.2;
locks; strict;
comment	@.\" @;


1.3
date	2016.09.03.11.33.41;	author beck;	state dead;
branches;
next	1.2;
commitid	HnbXxsegngek41U2;

1.2
date	2014.12.02.14.11.01;	author jmc;	state Exp;
branches;
next	1.1;
commitid	3zJ41geK44rAPG2m;

1.1
date	2014.10.12.09.33.04;	author bentley;	state Exp;
branches;
next	;
commitid	d4OKqHtOZ8kX9T2O;


desc
@@


1.3
log
@Remove the libssl/src directory
@
text
@.\"
.\"	$OpenBSD: SSL_set_bio.3,v 1.2 2014/12/02 14:11:01 jmc Exp $
.\"
.Dd $Mdocdate: December 2 2014 $
.Dt SSL_SET_BIO 3
.Os
.Sh NAME
.Nm SSL_set_bio
.Nd connect the SSL object with a BIO
.Sh SYNOPSIS
.In openssl/ssl.h
.Ft void
.Fn SSL_set_bio "SSL *ssl" "BIO *rbio" "BIO *wbio"
.Sh DESCRIPTION
.Fn SSL_set_bio
connects the
.Vt BIO Ns
s
.Fa rbio
and
.Fa wbio
for the read and write operations of the TLS/SSL (encrypted) side of
.Fa ssl .
.Pp
The SSL engine inherits the behaviour of
.Fa rbio
and
.Fa wbio ,
respectively.
If a
.Vt BIO
is non-blocking, the
.Fa ssl
will also have non-blocking behaviour.
.Pp
If there was already a
.Vt BIO
connected to
.Fa ssl ,
.Xr BIO_free 3
will be called (for both the reading and writing side, if different).
.Sh RETURN VALUES
.Fn SSL_set_bio
cannot fail.
.Sh SEE ALSO
.Xr bio 3 ,
.Xr ssl 3 ,
.Xr SSL_accept 3 ,
.Xr SSL_connect 3 ,
.Xr SSL_get_rbio 3 ,
.Xr SSL_shutdown 3
@


1.2
log
@add some openbsd tags, and a first pass at cleanup;
@
text
@d2 1
a2 1
.\"	$OpenBSD$
d4 1
a4 1
.Dd $Mdocdate: October 12 2014 $
@


1.1
log
@Convert libssl manpages from pod to mdoc(7).

libcrypto has not been started yet.

ok schwarze@@ miod@@
@
text
@d1 4
a4 1
.Dd $Mdocdate$
@

