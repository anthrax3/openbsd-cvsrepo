head	1.6;
access;
symbols
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	butholakala:1.3
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.3.0.56
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.52
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.50
	OPENBSD_5_3_BASE:1.3
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.3.0.46
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.48
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.3.0.44
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.42
	OPENBSD_4_9_BASE:1.3
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.3.0.40
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.36
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.38
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.3.0.34
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.32
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.30
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.28
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.26
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.24
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.3.0.22
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.20
	OPENBSD_3_8_BASE:1.3
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.3.0.18
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.16
	OPENBSD_3_6_BASE:1.3
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.3.0.14
	OPENBSD_3_5_BASE:1.3
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.3.0.12
	OPENBSD_3_4_BASE:1.3
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.3.0.10
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.8
	OPENBSD_3_2_BASE:1.3
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.3.0.6
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.4
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.2
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.0.2
	OPENBSD_2_7_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2016.09.03.11.33.40;	author beck;	state dead;
branches;
next	1.5;
commitid	HnbXxsegngek41U2;

1.5
date	2014.07.11.16.18.14;	author miod;	state Exp;
branches;
next	1.4;
commitid	KFr43un1Uq8AaqNL;

1.4
date	2014.05.04.22.26.33;	author jim;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.02.58.29;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.10.22.29.25;	author fgsch;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.19.11.12.58;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.18;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.04.07.20.42.00;	author markus;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Remove the libssl/src directory
@
text
@=pod

=head1 NAME

OpenSSL_add_all_algorithms, OpenSSL_add_all_ciphers, OpenSSL_add_all_digests, EVP_cleanup -
add algorithms to internal table

=head1 SYNOPSIS

 #include <openssl/evp.h>

 void OpenSSL_add_all_algorithms(void);
 void OpenSSL_add_all_ciphers(void);
 void OpenSSL_add_all_digests(void);

 void EVP_cleanup(void);

=head1 DESCRIPTION

OpenSSL keeps an internal table of digest algorithms and ciphers. It uses
this table to lookup ciphers via functions such as EVP_get_cipher_byname().

OpenSSL_add_all_digests() adds all digest algorithms to the table.

OpenSSL_add_all_algorithms() adds all algorithms to the table (digests and
ciphers).

OpenSSL_add_all_ciphers() adds all encryption algorithms to the table including
password based encryption algorithms.

EVP_cleanup() removes all ciphers and digests from the table.

=head1 RETURN VALUES

None of the functions return a value.

=head1 NOTES

A typical application will call OpenSSL_add_all_algorithms() initially and
EVP_cleanup() before exiting.

An application does not need to add algorithms to use them explicitly, for
example by EVP_sha1(). It just needs to add them if it (or any of the functions
it calls) needs to lookup algorithms.

The cipher and digest lookup functions are used in many parts of the library.
If the table is not initialized several functions will misbehave and complain
they cannot find algorithms. This includes the PEM, PKCS#12, SSL and S/MIME
libraries.  This is a common query in the OpenSSL mailing lists.

Calling OpenSSL_add_all_algorithms() links in all algorithms: as a result a
statically linked executable can be quite large. If this is important it is
possible to just add the required ciphers and digests.

=head1 BUGS

Although the functions do not return error codes it is possible for them to
fail.  This will only happen as a result of a memory allocation failure so this
is not too much of a problem in practice.

=head1 SEE ALSO

L<evp(3)|evp(3)>, L<EVP_DigestInit(3)|EVP_DigestInit(3)>,
L<EVP_EncryptInit(3)|EVP_EncryptInit(3)>

=cut
@


1.5
log
@Huge documentation update for libcrypto and libssl, mostly from Matt Caswell,
Jeff Trawick, Jean-Paul Calderone, Michal Bozon, Jeffrey Walton and Rich Salz,
via OpenSSL trunk (with some parts not applying to us, such as SSLv2 support,
at least partially removed).
@
text
@@


1.4
log
@Improve line wrapping for lines exceeding 80 chars.

ok jmc@@
@
text
@d5 1
a5 1
OpenSSL_add_all_algorithms, OpenSSL_add_all_ciphers, OpenSSL_add_all_digests -
@


1.3
log
@openssl-engine-0.9.6 merge
@
text
@d42 3
a44 3
An application does not need to add algorithms to use them explicitly, for example
by EVP_sha1(). It just needs to add them if it (or any of the functions it calls)
needs to lookup algorithms.
d46 4
a49 4
The cipher and digest lookup functions are used in many parts of the library. If
the table is not initialized several functions will misbehave and complain they
cannot find algorithms. This includes the PEM, PKCS#12, SSL and S/MIME libraries.
This is a common query in the OpenSSL mailing lists.
d52 2
a53 2
statically linked executable can be quite large. If this is important it is possible
to just add the required ciphers and digests.
d57 3
a59 3
Although the functions do not return error codes it is possible for them to fail.
This will only happen as a result of a memory allocation failure so this is not
too much of a problem in practice.
@


1.2
log
@Fix typo; claudio@@core-sdi.com.
@
text
@d5 2
a6 1
OpenSSL_add_all_algorithms() - add algorithms to internal table
d47 1
a47 1
the table is not initialised several functions will misbehave and complain they
@


1.1
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d38 1
a38 1
A typical application will will call OpenSSL_add_all_algorithms() initially and
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d5 1
a5 2
OpenSSL_add_all_algorithms, OpenSSL_add_all_ciphers, OpenSSL_add_all_digests -
add algorithms to internal table
d46 1
a46 1
the table is not initialized several functions will misbehave and complain they
@


1.1.1.2
log
@import openssl-0.9.7d
@
text
@d39 1
a39 1
A typical application will call OpenSSL_add_all_algorithms() initially and
@


