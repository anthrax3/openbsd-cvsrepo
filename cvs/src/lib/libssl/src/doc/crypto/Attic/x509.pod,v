head	1.2;
access;
symbols
	OPENBSD_6_0:1.1.1.1.0.32
	OPENBSD_6_0_BASE:1.1.1.1
	OPENBSD_5_9:1.1.1.1.0.22
	OPENBSD_5_9_BASE:1.1.1.1
	OPENBSD_5_8:1.1.1.1.0.30
	OPENBSD_5_8_BASE:1.1.1.1
	OPENBSD_5_7:1.1.1.1.0.28
	OPENBSD_5_7_BASE:1.1.1.1
	OPENBSD_5_6:1.1.1.1.0.26
	OPENBSD_5_6_BASE:1.1.1.1
	butholakala:1.1.1.1
	openssl_1_0_1_g:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_5_5:1.1.1.1.0.24
	OPENBSD_5_5_BASE:1.1.1.1
	OPENBSD_5_4:1.1.1.1.0.20
	OPENBSD_5_4_BASE:1.1.1.1
	OPENBSD_5_3:1.1.1.1.0.18
	OPENBSD_5_3_BASE:1.1.1.1
	openssl_1_0_1_c:1.1.1.1
	OPENBSD_5_2:1.1.1.1.0.14
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.16
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.1.1.1.0.12
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.10
	OPENBSD_4_9_BASE:1.1.1.1
	openssh_1_0_0_a:1.1.1.1
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	openssl:1.1.1;
locks; strict;
comment	@# @;


1.2
date	2016.09.03.11.33.40;	author beck;	state dead;
branches;
next	1.1;
commitid	HnbXxsegngek41U2;

1.1
date	2008.09.06.12.15.50;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.06.12.15.50;	author djm;	state Exp;
branches;
next	;


desc
@@


1.2
log
@Remove the libssl/src directory
@
text
@=pod

=head1 NAME

x509 - X.509 certificate handling

=head1 SYNOPSIS

 #include <openssl/x509.h>

=head1 DESCRIPTION

A X.509 certificate is a structured grouping of information about
an individual, a device, or anything one can imagine.  A X.509 CRL
(certificate revocation list) is a tool to help determine if a
certificate is still valid.  The exact definition of those can be
found in the X.509 document from ITU-T, or in RFC3280 from PKIX.
In OpenSSL, the type X509 is used to express such a certificate, and
the type X509_CRL is used to express a CRL.

A related structure is a certificate request, defined in PKCS#10 from
RSA Security, Inc, also reflected in RFC2896.  In OpenSSL, the type
X509_REQ is used to express such a certificate request.

To handle some complex parts of a certificate, there are the types
X509_NAME (to express a certificate name), X509_ATTRIBUTE (to express
a certificate attributes), X509_EXTENSION (to express a certificate
extension) and a few more.

Finally, there's the supertype X509_INFO, which can contain a CRL, a
certificate and a corresponding private key.

B<X509_>I<...>, B<d2i_X509_>I<...> and B<i2d_X509_>I<...> handle X.509
certificates, with some exceptions, shown below.

B<X509_CRL_>I<...>, B<d2i_X509_CRL_>I<...> and B<i2d_X509_CRL_>I<...>
handle X.509 CRLs.

B<X509_REQ_>I<...>, B<d2i_X509_REQ_>I<...> and B<i2d_X509_REQ_>I<...>
handle PKCS#10 certificate requests.

B<X509_NAME_>I<...> handle certificate names.

B<X509_ATTRIBUTE_>I<...> handle certificate attributes.

B<X509_EXTENSION_>I<...> handle certificate extensions.

=head1 SEE ALSO

L<X509_NAME_ENTRY_get_object(3)|X509_NAME_ENTRY_get_object(3)>,
L<X509_NAME_add_entry_by_txt(3)|X509_NAME_add_entry_by_txt(3)>,
L<X509_NAME_add_entry_by_NID(3)|X509_NAME_add_entry_by_NID(3)>,
L<X509_NAME_print_ex(3)|X509_NAME_print_ex(3)>,
L<X509_NAME_new(3)|X509_NAME_new(3)>,
L<d2i_X509(3)|d2i_X509(3)>,
L<d2i_X509_ALGOR(3)|d2i_X509_ALGOR(3)>,
L<d2i_X509_CRL(3)|d2i_X509_CRL(3)>,
L<d2i_X509_NAME(3)|d2i_X509_NAME(3)>,
L<d2i_X509_REQ(3)|d2i_X509_REQ(3)>,
L<d2i_X509_SIG(3)|d2i_X509_SIG(3)>,
L<crypto(3)|crypto(3)>,
L<x509v3(3)|x509v3(3)>

=cut
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import of OpenSSL 0.9.8h
@
text
@@
