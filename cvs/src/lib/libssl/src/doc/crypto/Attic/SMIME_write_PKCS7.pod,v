head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.1.1.3.0.22
	OPENBSD_5_8_BASE:1.1.1.3
	OPENBSD_5_7:1.1.1.3.0.20
	OPENBSD_5_7_BASE:1.1.1.3
	OPENBSD_5_6:1.1.1.3.0.18
	OPENBSD_5_6_BASE:1.1.1.3
	butholakala:1.1.1.3
	openssl_1_0_1_g:1.1.1.3
	OPENBSD_5_5:1.1.1.3.0.16
	OPENBSD_5_5_BASE:1.1.1.3
	OPENBSD_5_4:1.1.1.3.0.12
	OPENBSD_5_4_BASE:1.1.1.3
	OPENBSD_5_3:1.1.1.3.0.10
	OPENBSD_5_3_BASE:1.1.1.3
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.1.1.3.0.6
	OPENBSD_5_2_BASE:1.1.1.3
	OPENBSD_5_1_BASE:1.1.1.3
	OPENBSD_5_1:1.1.1.3.0.8
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.1.1.3.0.4
	OPENBSD_5_0_BASE:1.1.1.3
	OPENBSD_4_9:1.1.1.3.0.2
	OPENBSD_4_9_BASE:1.1.1.3
	openssh_1_0_0_a:1.1.1.3
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.22
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.20
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.18
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.16
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.14
	OPENBSD_4_0_BASE:1.1.1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.1.1.0.12
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.10
	OPENBSD_3_8_BASE:1.1.1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.1.1.1.0.8
	OPENBSD_3_7_BASE:1.1.1.1
	OPENBSD_3_6:1.1.1.1.0.6
	OPENBSD_3_6_BASE:1.1.1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.1.1.0.4
	OPENBSD_3_5_BASE:1.1.1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.1.1.0.2
	OPENBSD_3_4_BASE:1.1.1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.03.11.33.40;	author beck;	state dead;
branches;
next	1.2;
commitid	HnbXxsegngek41U2;

1.2
date	2015.09.22.08.08.07;	author sobrado;	state Exp;
branches;
next	1.1;
commitid	yt6ZAILseiFaXq7L;

1.1
date	2003.05.11.21.36.17;	author markus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.11.21.36.17;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.50;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.10.01.22.54.14;	author djm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove the libssl/src directory
@
text
@=pod

=head1 NAME

SMIME_write_PKCS7 - convert PKCS#7 structure to S/MIME format.

=head1 SYNOPSIS

 #include <openssl/pkcs7.h>

 int SMIME_write_PKCS7(BIO *out, PKCS7 *p7, BIO *data, int flags);

=head1 DESCRIPTION

SMIME_write_PKCS7() adds the appropriate MIME headers to a PKCS#7
structure to produce an S/MIME message.

B<out> is the BIO to write the data to. B<p7> is the appropriate B<PKCS7>
structure. If streaming is enabled then the content must be supplied in the
B<data> argument. B<flags> is an optional set of flags.

=head1 NOTES

The following flags can be passed in the B<flags> parameter.

If B<PKCS7_DETACHED> is set then cleartext signing will be used,
this option only makes sense for signedData where B<PKCS7_DETACHED>
is also set when PKCS7_sign() is also called.

If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain>
are added to the content, this only makes sense if B<PKCS7_DETACHED>
is also set.

If the B<PKCS7_STREAM> flag is set streaming is performed. This flag should
only be set if B<PKCS7_STREAM> was also set in the previous call to
PKCS7_sign() or B<PKCS7_encrypt()>.

If cleartext signing is being used and B<PKCS7_STREAM> not set then
the data must be read twice: once to compute the signature in PKCS7_sign()
and once to output the S/MIME message.

If streaming is performed the content is output in BER format using indefinite
length constructed encoding except in the case of signed data with detached
content where the content is absent and DER format is used.

=head1 BUGS

SMIME_write_PKCS7() always base64 encodes PKCS#7 structures, there
should be an option to disable this.

=head1 RETURN VALUES

SMIME_write_PKCS7() returns 1 for success or 0 for failure.

=head1 SEE ALSO

L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_sign(3)|PKCS7_sign(3)>,
L<PKCS7_verify(3)|PKCS7_verify(3)>, L<PKCS7_encrypt(3)|PKCS7_encrypt(3)>
L<PKCS7_decrypt(3)|PKCS7_decrypt(3)>

=head1 HISTORY

SMIME_write_PKCS7() was added to OpenSSL 0.9.5

=cut
@


1.2
log
@typos in documentation; better wording, suggested by jmc@@

ok jmc@@
@
text
@@


1.1
log
@Initial revision
@
text
@d9 3
a11 1
int SMIME_write_PKCS7(BIO *out, PKCS7 *p7, BIO *data, int flags);
d18 3
a20 4
B<out> is the BIO to write the data to. B<p7> is the appropriate
B<PKCS7> structure. If cleartext signing (B<multipart/signed>) is
being used then the signed data must be supplied in the B<data> 
argument. B<flags> is an optional set of flags.
d34 11
a44 3
If cleartext signing is being used then the data must be read twice:
once to compute the signature in PKCS7_sign() and once to output the
S/MIME message.
a49 3

There should really be a way to produce cleartext signing using only
a single pass of the data.
@


1.1.1.1
log
@import 0.9.7b (without idea and rc5)
@
text
@@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@d33 3
a35 8
If the B<PKCS7_PARTSIGN> flag is set the signed data is finalized
and output along with the content. This flag should only be set
if B<PKCS7_DETACHED> is also set and the previous call to PKCS7_sign()
also set these flags.

If cleartext signing is being used and B<PKCS7_PARTSIGN> not set then
the data must be read twice: once to compute the signature in PKCS7_sign()
and once to output the S/MIME message.
d41 3
@


1.1.1.3
log
@import OpenSSL-1.0.0a
@
text
@d9 1
a9 3
 #include <openssl/pkcs7.h>

 int SMIME_write_PKCS7(BIO *out, PKCS7 *p7, BIO *data, int flags);
d16 4
a19 3
B<out> is the BIO to write the data to. B<p7> is the appropriate B<PKCS7>
structure. If streaming is enabled then the content must be supplied in the
B<data> argument. B<flags> is an optional set of flags.
d33 4
a36 3
If the B<PKCS7_STREAM> flag is set streaming is performed. This flag should
only be set if B<PKCS7_STREAM> was also set in the previous call to
PKCS7_sign() or B<PKCS7_encrypt()>.
d38 1
a38 1
If cleartext signing is being used and B<PKCS7_STREAM> not set then
a40 4

If streaming is performed the content is output in BER format using indefinite
length constructuted encoding except in the case of signed data with detached
content where the content is absent and DER format is used.
@


