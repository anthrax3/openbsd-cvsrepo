head	1.2;
access;
symbols
	OPENBSD_5_2:1.1.0.34
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.36
	OPENBSD_5_0:1.1.0.32
	OPENBSD_5_0_BASE:1.1
	OPENBSD_4_9:1.1.0.30
	OPENBSD_4_9_BASE:1.1
	OPENBSD_4_8:1.1.0.28
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.24
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.26
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.22
	OPENBSD_4_5_BASE:1.1
	pre_openssl_0_9_8h:1.1
	OPENBSD_4_4:1.1.0.20
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.18
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.16
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.14
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.12
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.10
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.8
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.6
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.4
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.2
	OPENBSD_3_5_BASE:1.1;
locks; strict;
comment	@# @;


1.2
date	2013.01.26.06.10.22;	author djm;	state dead;
branches;
next	1.1;

1.1
date	2004.01.23.16.58.43;	author hshoexer;	state Exp;
branches;
next	;


desc
@@


1.2
log
@remove ACSS, crank libcrypto major; ok markus@@ deraadt@@
@
text
@=pod

=head1 NAME

acss, acss_setkey - ACSS encryption

=head1 SYNOPSIS

 #include <openssl/acss.h>

 void acss_setkey(ACSS_KEY *key, const unsigned char *data, int enc,
         int mode);

 void acss(ACSS_KEY *key, unsigned long len, const unsigned char *in,
         unsigned char *out);

=head1 DESCRIPTION

This library implements the Alleged Content Scrambling System.  It is believed
to be interoperable with CSS of the DVD Copy Control Association.

ACSS is a stream cipher with a fixed key length of 40 bit (5 byte).

ACSS consists of a key setup phase and the actual encryption or decryption
phase.

acss_setkey() sets up the B<ACSS_KEY> B<key> using the 40 bit key at B<data>.
If the flag B<enc> is set to B<1> B<key> will be used for encryption,
otherwise for decryption.  The integer B<mode> denotes the mode to use.
Acceptible values are B<0> to B<3>.  For any other value mode B<0> is used.

acss() encrypts or decrypts the B<len> bytes of B<in> using B<key> and places
the result at B<out>.

Applications should use the higher level functions
L<EVP_EncryptInit(3)|EVP_EncryptInit(3)> etc.  instead of calling the acss
functions directly.

=head1 RETURN VALUES

None of the functions presented here return any value.

=head1 NOTE

ACSS is considered as an insecure cipher.  Therefore, use of ACSS is
discouraged.

=head1 SEE ALSO

RC4(3), arc4random(3)

=head1 History

A proprietary algorithm called CSS can be licensed from the DVD Copy Control
Association (DVD CCA).  CSS is considered a trade secret and is not patented.
In October 1999 source code for CSS was posted anonymously to the LiViD
mailing list.  Since then, several implementations and mathematical
descriptions of CSS are available and CSS has been subject to cryptanalysis.
The DVD CCA has repeatedly failed to sue individuals for publishing such
information about CSS.

ACSS is a stream cipher written from scratch and believed to be interoperable
with CSS.

=cut

@


1.1
log
@evp api and manual page for acss
ok deraadt@@ markus@@
@
text
@@

