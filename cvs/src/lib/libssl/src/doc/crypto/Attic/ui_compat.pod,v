head	1.4;
access;
symbols
	OPENBSD_5_8:1.2.0.22
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.20
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.2.0.18
	OPENBSD_5_6_BASE:1.2
	butholakala:1.2
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.1.0.34
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.30
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.32
	OPENBSD_4_6_BASE:1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.0.28
	OPENBSD_4_5_BASE:1.1
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.1
	OPENBSD_4_4:1.1.0.26
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.24
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.22
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.20
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.18
	OPENBSD_4_0_BASE:1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.0.16
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.14
	OPENBSD_3_8_BASE:1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.1.0.12
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.10
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.4
date	2015.11.12.00.55.49;	author schwarze;	state dead;
branches;
next	1.3;
commitid	RO3YWQP7BDJs4F8k;

1.3
date	2015.09.30.14.48.59;	author sobrado;	state Exp;
branches;
next	1.2;
commitid	10K6wvzESRSXzTGx;

1.2
date	2010.10.01.22.58.58;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.19;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.19;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.14;	author djm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Convert the handful of manuals that had imaginary names,
give them names that really exist.
This also helps jmc@@'s ongoing work on improving NAME sections.
@
text
@=pod

=head1 NAME

des_read_password, des_read_2passwords, des_read_pw_string, des_read_pw -
Compatibility user interface functions

=head1 SYNOPSIS

 #include <openssl/des_old.h>

 int des_read_password(DES_cblock *key,const char *prompt,int verify);
 int des_read_2passwords(DES_cblock *key1,DES_cblock *key2,
 	const char *prompt,int verify);

 int des_read_pw_string(char *buf,int length,const char *prompt,int verify);
 int des_read_pw(char *buf,char *buff,int size,const char *prompt,int verify);

=head1 DESCRIPTION

The DES library contained a few routines to prompt for passwords.  These
aren't necessarily dependent on DES, and have therefore become part of the
UI compatibility library.

des_read_pw() writes the string specified by I<prompt> to standard output
turns echo off and reads an input string from the terminal.  The string is
returned in I<buf>, which must have space for at least I<size> bytes.
If I<verify> is set, the user is asked for the password twice and unless
the two copies match, an error is returned.  The second password is stored
in I<buff>, which must therefore also be at least I<size> bytes.  A return
code of -1 indicates a system error, 1 failure due to use interaction, and
0 is success.  All other functions described here use des_read_pw() to do
the work.

des_read_pw_string() is a variant of des_read_pw() that provides a buffer
for you if I<verify> is set.

des_read_password() calls des_read_pw() and converts the password to a
DES key by calling DES_string_to_key(); des_read_2password() operates in
the same way as des_read_password() except that it generates two keys
by using the DES_string_to_2key() function.

=head1 NOTES

des_read_pw_string() is available in the MIT Kerberos library as well, and
is also available under the name EVP_read_pw_string().

=head1 SEE ALSO

L<ui(3)|ui(3)>, L<ui_create(3)|ui_create(3)>

=head1 AUTHOR

Richard Levitte (richard@@levitte.org) for the OpenSSL project
(http://www.openssl.org).

=cut
@


1.3
log
@fix two typos.
@
text
@@


1.2
log
@resolve conflicts, fix local changes
@
text
@d22 1
a22 1
aren't necessarely dependent on DES, and have therefore become part of the
d27 1
a27 1
returned in I<buf>, which must have spac for at least I<size> bytes.
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d10 2
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@a9 2
 #include <openssl/des_old.h>

@


