head	1.8;
access;
symbols
	OPENBSD_6_0:1.7.0.4
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.2
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	butholakala:1.4
	openssl_1_0_1_g:1.1.1.4
	OPENBSD_5_5:1.3.0.24
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.20
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.18
	OPENBSD_5_3_BASE:1.3
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.3.0.14
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.16
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.3.0.12
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.10
	OPENBSD_4_9_BASE:1.3
	openssh_1_0_0_a:1.1.1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@# @;


1.8
date	2016.09.03.11.33.40;	author beck;	state dead;
branches;
next	1.7;
commitid	HnbXxsegngek41U2;

1.7
date	2015.09.22.08.08.07;	author sobrado;	state Exp;
branches;
next	1.6;
commitid	yt6ZAILseiFaXq7L;

1.6
date	2015.08.18.20.19.32;	author miod;	state Exp;
branches;
next	1.5;
commitid	V5l8faEbMLirvCIh;

1.5
date	2014.07.11.16.18.14;	author miod;	state Exp;
branches;
next	1.4;
commitid	KFr43un1Uq8AaqNL;

1.4
date	2014.04.13.15.25.34;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.06.12.17.53;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.08.08.03.15;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.19;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.17;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.04.07.20.42.00;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.49;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2014.04.13.15.16.35;	author miod;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Remove the libssl/src directory
@
text
@=pod

=head1 NAME

EVP_BytesToKey - password based encryption routine

=head1 SYNOPSIS

 #include <openssl/evp.h>

 int EVP_BytesToKey(const EVP_CIPHER *type,const EVP_MD *md,
                       const unsigned char *salt,
                       const unsigned char *data, int datal, int count,
                       unsigned char *key,unsigned char *iv);

=head1 DESCRIPTION

EVP_BytesToKey() derives a key and IV from various parameters. B<type> is
the cipher to derive the key and IV for. B<md> is the message digest to use.
The B<salt> parameter is used as a salt in the derivation: it should point to
an 8 byte buffer or NULL if no salt is used. B<data> is a buffer containing
B<datal> bytes which is used to derive the keying data. B<count> is the
iteration count to use. The derived key and IV will be written to B<key>
and B<iv> respectively.

=head1 NOTES

A typical application of this function is to derive keying material for an
encryption algorithm from a password in the B<data> parameter.

Increasing the B<count> parameter slows down the algorithm which makes it
harder for an attacker to perform a brute force attack using a large number
of candidate passwords.

If the total key and IV length is less than the digest length and
B<MD5> is used then the derivation algorithm is compatible with PKCS#5 v1.5
otherwise a non standard extension is used to derive the extra data.

Newer applications should use more standard algorithms such as PBKDF2 as
defined in PKCS#5v2.1 for key derivation.

=head1 KEY DERIVATION ALGORITHM

The key and IV is derived by concatenating D_1, D_2, etc until
enough data is available for the key and IV. D_i is defined as:

	D_i = HASH^count(D_(i-1) || data || salt)

where || denotes concatenation, D_0 is empty, HASH is the digest
algorithm in use, HASH^1(data) is simply HASH(data), HASH^2(data)
is HASH(HASH(data)) and so on.

The initial bytes are used for the key and the subsequent bytes for
the IV.

=head1 RETURN VALUES

EVP_BytesToKey() returns the size of the derived key in bytes.

=head1 SEE ALSO

L<evp(3)|evp(3)>, L<rand(3)|rand(3)>,
L<PKCS5_PBKDF2_HMAC(3)|PKCS5_PBKDF2_HMAC(3)>,
L<EVP_EncryptInit(3)|EVP_EncryptInit(3)>

=head1 HISTORY

=cut
@


1.7
log
@typos in documentation; better wording, suggested by jmc@@

ok jmc@@
@
text
@@


1.6
log
@typos
@
text
@d49 1
a49 1
where || denotes concatentaion, D_0 is empty, HASH is the digest
@


1.5
log
@Huge documentation update for libcrypto and libssl, mostly from Matt Caswell,
Jeff Trawick, Jean-Paul Calderone, Michal Bozon, Jeffrey Walton and Rich Salz,
via OpenSSL trunk (with some parts not applying to us, such as SSLv2 support,
at least partially removed).
@
text
@d32 1
a32 1
harder for an attacker to peform a brute force attack using a large number
@


1.4
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@d39 2
a40 2
Newer applications should use more standard algorithms such as PKCS#5
v2.0 for key derivation.
d63 1
@


1.3
log
@resolve conflicts
@
text
@d20 1
a20 1
The B<salt> paramter is used as a salt in the derivation: it should point to
@


1.2
log
@merge 0.9.7d
@
text
@d63 1
a63 1
L<EVP_EncryptInit(3)|EVP_EncryptInit(3)>,
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d5 1
a5 1
 EVP_BytesToKey - password based encryption routine
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import openssl-0.9.7d
@
text
@d5 1
a5 1
EVP_BytesToKey - password based encryption routine
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d63 1
a63 1
L<EVP_EncryptInit(3)|EVP_EncryptInit(3)>
@


1.1.1.4
log
@Import OpenSSL 1.0.1g
@
text
@d20 1
a20 1
The B<salt> parameter is used as a salt in the derivation: it should point to
@


