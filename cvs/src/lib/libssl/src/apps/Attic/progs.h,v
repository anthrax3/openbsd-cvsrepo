head	1.23;
access;
symbols
	OPENBSD_5_6:1.22.0.4
	OPENBSD_5_6_BASE:1.22
	butholakala:1.11
	openssl_1_0_1_g:1.1.1.7
	OPENBSD_5_5:1.11.0.8
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.11.0.4
	OPENBSD_5_4_BASE:1.11
	OPENBSD_5_3:1.11.0.2
	OPENBSD_5_3_BASE:1.11
	openssl_1_0_1_c:1.1.1.7
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.8
	openssl_1_0_0_f:1.1.1.6
	openssl_1_0_0_e:1.1.1.6
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	openssh_1_0_0_a:1.1.1.6
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	openssl_0_9_8_k:1.1.1.5
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	openssl_0_9_8_j:1.1.1.5
	openssl_0_9_8_h:1.1.1.5
	pre_openssl_0_9_8h:1.8
	OPENBSD_4_4:1.8.0.14
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.8.0.12
	OPENBSD_4_3_BASE:1.8
	OPENBSD_4_2:1.8.0.10
	OPENBSD_4_2_BASE:1.8
	OPENBSD_4_1:1.8.0.8
	OPENBSD_4_1_BASE:1.8
	OPENBSD_4_0:1.8.0.6
	OPENBSD_4_0_BASE:1.8
	openssl_0_9_7j:1.1.1.4
	openssl:1.1.1
	OPENBSD_3_9:1.8.0.4
	OPENBSD_3_9_BASE:1.8
	OPENBSD_3_8:1.8.0.2
	OPENBSD_3_8_BASE:1.8
	OPENSSL_0_9_7G:1.1.1.4
	OPENBSD_3_7:1.7.0.8
	OPENBSD_3_7_BASE:1.7
	OPENBSD_3_6:1.7.0.6
	OPENBSD_3_6_BASE:1.7
	OPENSSL_0_9_7D:1.1.1.3
	OPENBSD_3_5:1.7.0.4
	OPENBSD_3_5_BASE:1.7
	OPENSSL_0_9_7C:1.1.1.3
	OPENBSD_3_4:1.7.0.2
	OPENBSD_3_4_BASE:1.7
	OPENSSL_0_9_7B:1.1.1.3
	OPENBSD_3_3:1.6.0.4
	OPENBSD_3_3_BASE:1.6
	OPENBSD_3_2:1.6.0.2
	OPENBSD_3_2_BASE:1.6
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.5.0.6
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.4
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.5.0.2
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@ * @;


1.23
date	2014.08.26.17.47.25;	author jsing;	state dead;
branches;
next	1.22;
commitid	7A7DObXgY4Fni8xJ;

1.22
date	2014.07.28.17.57.18;	author tedu;	state Exp;
branches;
next	1.21;
commitid	99MpI3E4JwwZj7Kn;

1.21
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	mJUVYpkFBZ0Zv2bG;

1.20
date	2014.05.17.15.57.52;	author tedu;	state Exp;
branches;
next	1.19;

1.19
date	2014.05.17.15.45.50;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2014.05.06.01.52.07;	author tedu;	state Exp;
branches;
next	1.17;

1.17
date	2014.05.02.18.06.12;	author jsing;	state Exp;
branches;
next	1.16;

1.16
date	2014.05.02.17.05.41;	author jsing;	state Exp;
branches;
next	1.15;

1.15
date	2014.05.02.16.55.38;	author jsing;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.22.14.22.51;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.18.11.14.08;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.15.21.47.56;	author tedu;	state Exp;
branches;
next	1.11;

1.11
date	2012.10.13.21.25.12;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2010.10.01.22.58.51;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.06.12.17.47;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2005.04.29.05.39.16;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2003.05.12.02.18.35;	author markus;	state Exp;
branches;
next	1.6;

1.6
date	2002.05.15.02.29.09;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2000.12.15.02.56.57;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.15.06.18.29;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.08.12;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.35.17;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.06;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.06;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.49.34;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.34.22;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.04.29.05.36.59;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.06.12.15.38;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2010.10.01.22.54.01;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2012.10.13.21.23.32;	author djm;	state Exp;
branches;
next	;


desc
@@


1.23
log
@Move openssl(1) from /usr/sbin/openssl to /usr/bin/openssl, since it is not
a system/superuser binary. At the same time, move the source code from its
current lib/libssl/src/apps location to a more appropriate home under
usr.bin/openssl.

ok deraadt@@ miod@@
@
text
@/* $OpenBSD: progs.h,v 1.22 2014/07/28 17:57:18 tedu Exp $ */
/* Public domain */

extern int asn1parse_main(int argc, char *argv[]);
extern int ca_main(int argc, char *argv[]);
extern int ciphers_main(int argc, char *argv[]);
extern int cms_main(int argc, char *argv[]);
extern int crl2pkcs7_main(int argc, char *argv[]);
extern int crl_main(int argc, char *argv[]);
extern int dgst_main(int argc, char *argv[]);
extern int dh_main(int argc, char *argv[]);
extern int dhparam_main(int argc, char *argv[]);
extern int dsa_main(int argc, char *argv[]);
extern int dsaparam_main(int argc, char *argv[]);
extern int ec_main(int argc, char *argv[]);
extern int ecparam_main(int argc, char *argv[]);
extern int enc_main(int argc, char *argv[]);
extern int engine_main(int argc, char *argv[]);
extern int errstr_main(int argc, char *argv[]);
extern int gendh_main(int argc, char *argv[]);
extern int gendsa_main(int argc, char *argv[]);
extern int genpkey_main(int argc, char *argv[]);
extern int genrsa_main(int argc, char *argv[]);
extern int nseq_main(int argc, char *argv[]);
extern int ocsp_main(int argc, char *argv[]);
extern int passwd_main(int argc, char *argv[]);
extern int pkcs7_main(int argc, char *argv[]);
extern int pkcs8_main(int argc, char *argv[]);
extern int pkcs12_main(int argc, char *argv[]);
extern int pkey_main(int argc, char *argv[]);
extern int pkeyparam_main(int argc, char *argv[]);
extern int pkeyutl_main(int argc, char *argv[]);
extern int prime_main(int argc, char *argv[]);
extern int rand_main(int argc, char *argv[]);
extern int req_main(int argc, char *argv[]);
extern int rsa_main(int argc, char *argv[]);
extern int rsautl_main(int argc, char *argv[]);
extern int s_client_main(int argc, char *argv[]);
extern int s_server_main(int argc, char *argv[]);
extern int s_time_main(int argc, char *argv[]);
extern int sess_id_main(int argc, char *argv[]);
extern int smime_main(int argc, char *argv[]);
extern int speed_main(int argc, char *argv[]);
extern int spkac_main(int argc, char *argv[]);
extern int ts_main(int argc, char *argv[]);
extern int verify_main(int argc, char *argv[]);
extern int version_main(int argc, char *argv[]);
extern int x509_main(int argc, char *argv[]);

#define FUNC_TYPE_GENERAL	1
#define FUNC_TYPE_MD		2
#define FUNC_TYPE_CIPHER	3
#define FUNC_TYPE_PKEY		4
#define FUNC_TYPE_MD_ALG	5
#define FUNC_TYPE_CIPHER_ALG	6

typedef struct {
	int type;
	const char *name;
	int (*func)(int argc, char *argv[]);
} FUNCTION;
DECLARE_LHASH_OF(FUNCTION);

FUNCTION functions[] = {

	/* General functions. */
	{ FUNC_TYPE_GENERAL, "asn1parse", asn1parse_main },
	{ FUNC_TYPE_GENERAL, "ca", ca_main },
	{ FUNC_TYPE_GENERAL, "ciphers", ciphers_main },
#ifndef OPENSSL_NO_CMS
	{ FUNC_TYPE_GENERAL, "cms", cms_main },
#endif
	{ FUNC_TYPE_GENERAL, "crl2pkcs7", crl2pkcs7_main },
	{ FUNC_TYPE_GENERAL, "crl", crl_main },
	{ FUNC_TYPE_GENERAL, "dgst", dgst_main },
	{ FUNC_TYPE_GENERAL, "enc", enc_main },
#ifndef OPENSSL_NO_ENGINE
	{ FUNC_TYPE_GENERAL, "engine", engine_main },
#endif
	{ FUNC_TYPE_GENERAL, "errstr", errstr_main },
	{ FUNC_TYPE_GENERAL, "genpkey", genpkey_main },
	{ FUNC_TYPE_GENERAL, "nseq", nseq_main },
#ifndef OPENSSL_NO_OCSP
	{ FUNC_TYPE_GENERAL, "ocsp", ocsp_main },
#endif
	{ FUNC_TYPE_GENERAL, "passwd", passwd_main },
	{ FUNC_TYPE_GENERAL, "pkcs7", pkcs7_main },
	{ FUNC_TYPE_GENERAL, "pkcs8", pkcs8_main },
#if !defined(OPENSSL_NO_DES) && !defined(OPENSSL_NO_SHA1)
	{ FUNC_TYPE_GENERAL, "pkcs12", pkcs12_main },
#endif
	{ FUNC_TYPE_GENERAL, "pkey", pkey_main },
	{ FUNC_TYPE_GENERAL, "pkeyparam", pkeyparam_main },
	{ FUNC_TYPE_GENERAL, "pkeyutl", pkeyutl_main },
	{ FUNC_TYPE_GENERAL, "prime", prime_main },
	{ FUNC_TYPE_GENERAL, "rand", rand_main },
	{ FUNC_TYPE_GENERAL, "req", req_main },
	{ FUNC_TYPE_GENERAL, "s_client", s_client_main },
	{ FUNC_TYPE_GENERAL, "s_server", s_server_main },
	{ FUNC_TYPE_GENERAL, "s_time", s_time_main },
	{ FUNC_TYPE_GENERAL, "sess_id", sess_id_main },
	{ FUNC_TYPE_GENERAL, "smime", smime_main },
#ifndef OPENSSL_NO_SPEED
	{ FUNC_TYPE_GENERAL, "speed", speed_main },
#endif
	{ FUNC_TYPE_GENERAL, "spkac", spkac_main },
	{ FUNC_TYPE_GENERAL, "ts", ts_main },
	{ FUNC_TYPE_GENERAL, "verify", verify_main },
	{ FUNC_TYPE_GENERAL, "version", version_main },
	{ FUNC_TYPE_GENERAL, "x509", x509_main },

#ifndef OPENSSL_NO_DH
	{ FUNC_TYPE_GENERAL, "dh", dh_main },
	{ FUNC_TYPE_GENERAL, "dhparam", dhparam_main },
	{ FUNC_TYPE_GENERAL, "gendh", gendh_main },
#endif
#ifndef OPENSSL_NO_DSA
	{ FUNC_TYPE_GENERAL, "dsa", dsa_main },
	{ FUNC_TYPE_GENERAL, "dsaparam", dsaparam_main },
	{ FUNC_TYPE_GENERAL, "gendsa", gendsa_main },
#endif
#ifndef OPENSSL_NO_EC
	{ FUNC_TYPE_GENERAL, "ec", ec_main },
	{ FUNC_TYPE_GENERAL, "ecparam", ecparam_main },
#endif
#ifndef OPENSSL_NO_RSA
	{ FUNC_TYPE_GENERAL, "genrsa", genrsa_main },
	{ FUNC_TYPE_GENERAL, "rsa", rsa_main },
	{ FUNC_TYPE_GENERAL, "rsautl", rsautl_main },
#endif

	/* Message Digests. */
#ifndef OPENSSL_NO_MD4
	{ FUNC_TYPE_MD, "md4", dgst_main },
#endif
#ifndef OPENSSL_NO_MD5
	{ FUNC_TYPE_MD, "md5", dgst_main },
#endif
#ifndef OPENSSL_NO_RMD160
	{ FUNC_TYPE_MD, "rmd160", dgst_main },
#endif
#ifndef OPENSSL_NO_SHA
	{ FUNC_TYPE_MD, "sha", dgst_main },
#endif
#ifndef OPENSSL_NO_SHA1
	{ FUNC_TYPE_MD, "sha1", dgst_main },
#endif

	/* Ciphers. */
	{ FUNC_TYPE_CIPHER, "base64", enc_main },
#ifndef OPENSSL_NO_AES
	{ FUNC_TYPE_CIPHER, "aes-128-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "aes-128-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "aes-192-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "aes-192-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "aes-256-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "aes-256-ecb", enc_main },
#endif
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf", enc_main },
	{ FUNC_TYPE_CIPHER, "bf-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "bf-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "bf-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "bf-ofb", enc_main },
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{ FUNC_TYPE_CIPHER, "camellia-128-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "camellia-128-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "camellia-192-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "camellia-192-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "camellia-256-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "camellia-256-ecb", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast", enc_main },
	{ FUNC_TYPE_CIPHER, "cast5-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "cast5-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "cast5-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "cast5-ofb", enc_main },
	{ FUNC_TYPE_CIPHER, "cast-cbc", enc_main },
#endif
#ifndef OPENSSL_NO_CHACHA
	{ FUNC_TYPE_CIPHER, "chacha", enc_main },
#endif
#ifndef OPENSSL_NO_DES
	{ FUNC_TYPE_CIPHER, "des", enc_main },
	{ FUNC_TYPE_CIPHER, "des3", enc_main },
	{ FUNC_TYPE_CIPHER, "desx", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede3", enc_main },
	{ FUNC_TYPE_CIPHER, "des-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede3-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "des-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede3-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ofb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede-ofb", enc_main },
	{ FUNC_TYPE_CIPHER, "des-ede3-ofb", enc_main },
#endif
#ifndef OPENSSL_NO_IDEA
	{ FUNC_TYPE_CIPHER, "idea", enc_main },
	{ FUNC_TYPE_CIPHER, "idea-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "idea-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "idea-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "idea-ofb", enc_main },
#endif
#ifndef OPENSSL_NO_RC2
	{ FUNC_TYPE_CIPHER, "rc2", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-ofb", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-64-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "rc2-40-cbc", enc_main },
#endif
#ifndef OPENSSL_NO_RC4
	{ FUNC_TYPE_CIPHER, "rc4", enc_main },
	{ FUNC_TYPE_CIPHER, "rc4-40", enc_main },
#endif
#ifndef OPENSSL_NO_RC5
	{ FUNC_TYPE_CIPHER, "rc5", enc_main },
	{ FUNC_TYPE_CIPHER, "rc5-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "rc5-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "rc5-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "rc5-ofb", enc_main },
#endif
#ifdef ZLIB
	{ FUNC_TYPE_CIPHER, "zlib", enc_main },
#endif

	{ 0, NULL, NULL }
};
@


1.22
log
@Remove SRP code. It contains a bug (this should not surprise anyone), but
the details are under embargo. The original plan was to wait for the
embargo to lift, but we've been waiting for quite some time, and there's no
indication of when or even if it will end. No sense in dragging this out
any longer.

The SRP code has never been enabled in OpenBSD, though I understand it is
in use by some other people. However, in light of this and other issues,
we're officially saying SRP is outside the scope of libressl. (For now.)
@
text
@d1 1
a1 1
/* $OpenBSD: progs.h,v 1.21 2014/06/12 15:49:27 deraadt Exp $ */
@


1.21
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a44 1
extern int srp_main(int argc, char *argv[]);
@


1.20
log
@no no md2
@
text
@d1 1
@


1.19
log
@deleted seed some time ago
@
text
@a132 4
#ifndef OPENSSL_NO_MD2
	{ FUNC_TYPE_MD, "md2", dgst_main },
	{ FUNC_TYPE_MD, "mdc2", dgst_main },
#endif
@


1.18
log
@bye bye SRP
@
text
@a232 7
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed", enc_main },
	{ FUNC_TYPE_CIPHER, "seed-cbc", enc_main },
	{ FUNC_TYPE_CIPHER, "seed-ecb", enc_main },
	{ FUNC_TYPE_CIPHER, "seed-cfb", enc_main },
	{ FUNC_TYPE_CIPHER, "seed-ofb", enc_main },
#endif
@


1.17
log
@Add ChaCha as a cipher.

ok beck@@ miod@@
@
text
@a106 3
#ifndef OPENSSL_NO_SRP
	{ FUNC_TYPE_GENERAL, "srp", srp_main },
#endif
@


1.16
log
@Nuke OPENSSL_NO_SOCK since any half sane operating system has sockets.

ok beck@@
@
text
@d189 3
@


1.15
log
@Sort function prototypes and group/sort entries within the functions array.

ok beck@@
@
text
@a68 1
#if !defined(OPENSSL_NO_SOCK) && !defined(OPENSSL_NO_SSL3)
a69 1
#endif
a97 1
#if !defined(OPENSSL_NO_SOCK) && !defined(OPENSSL_NO_SSL3)
a98 2
#endif
#if !defined(OPENSSL_NO_SOCK) && !defined(OPENSSL_NO_SSL3)
a99 2
#endif
#if !defined(OPENSSL_NO_SOCK) && !defined(OPENSSL_NO_SSL3)
a100 1
#endif
@


1.14
log
@KNF.
@
text
@a2 1
extern int verify_main(int argc, char *argv[]);
d4 5
a8 1
extern int req_main(int argc, char *argv[]);
a11 8
extern int enc_main(int argc, char *argv[]);
extern int passwd_main(int argc, char *argv[]);
extern int gendh_main(int argc, char *argv[]);
extern int errstr_main(int argc, char *argv[]);
extern int ca_main(int argc, char *argv[]);
extern int crl_main(int argc, char *argv[]);
extern int rsa_main(int argc, char *argv[]);
extern int rsautl_main(int argc, char *argv[]);
d16 4
a19 2
extern int x509_main(int argc, char *argv[]);
extern int genrsa_main(int argc, char *argv[]);
d22 4
a25 5
extern int s_server_main(int argc, char *argv[]);
extern int s_client_main(int argc, char *argv[]);
extern int speed_main(int argc, char *argv[]);
extern int s_time_main(int argc, char *argv[]);
extern int version_main(int argc, char *argv[]);
d27 1
a27 5
extern int cms_main(int argc, char *argv[]);
extern int crl2pkcs7_main(int argc, char *argv[]);
extern int sess_id_main(int argc, char *argv[]);
extern int ciphers_main(int argc, char *argv[]);
extern int nseq_main(int argc, char *argv[]);
a28 1
extern int pkcs8_main(int argc, char *argv[]);
d32 11
d44 1
a44 5
extern int smime_main(int argc, char *argv[]);
extern int rand_main(int argc, char *argv[]);
extern int engine_main(int argc, char *argv[]);
extern int ocsp_main(int argc, char *argv[]);
extern int prime_main(int argc, char *argv[]);
d46 3
a48 1
extern int srp_main(int argc, char *argv[]);
d65 2
a66 1
	{ FUNC_TYPE_GENERAL, "verify", verify_main },
d68 3
a70 4
	{ FUNC_TYPE_GENERAL, "req", req_main },
	{ FUNC_TYPE_GENERAL, "dgst", dgst_main },
#ifndef OPENSSL_NO_DH
	{ FUNC_TYPE_GENERAL, "dh", dh_main },
d72 2
a73 2
#ifndef OPENSSL_NO_DH
	{ FUNC_TYPE_GENERAL, "dhparam", dhparam_main },
d75 3
d79 2
a80 3
	{ FUNC_TYPE_GENERAL, "passwd", passwd_main },
#ifndef OPENSSL_NO_DH
	{ FUNC_TYPE_GENERAL, "gendh", gendh_main },
d83 4
a86 4
	{ FUNC_TYPE_GENERAL, "ca", ca_main },
	{ FUNC_TYPE_GENERAL, "crl", crl_main },
#ifndef OPENSSL_NO_RSA
	{ FUNC_TYPE_GENERAL, "rsa", rsa_main },
d88 5
a92 2
#ifndef OPENSSL_NO_RSA
	{ FUNC_TYPE_GENERAL, "rsautl", rsautl_main },
d94 8
a101 15
#ifndef OPENSSL_NO_DSA
	{ FUNC_TYPE_GENERAL, "dsa", dsa_main },
#endif
#ifndef OPENSSL_NO_DSA
	{ FUNC_TYPE_GENERAL, "dsaparam", dsaparam_main },
#endif
#ifndef OPENSSL_NO_EC
	{ FUNC_TYPE_GENERAL, "ec", ec_main },
#endif
#ifndef OPENSSL_NO_EC
	{ FUNC_TYPE_GENERAL, "ecparam", ecparam_main },
#endif
	{ FUNC_TYPE_GENERAL, "x509", x509_main },
#ifndef OPENSSL_NO_RSA
	{ FUNC_TYPE_GENERAL, "genrsa", genrsa_main },
d103 1
a103 5
#ifndef OPENSSL_NO_DSA
	{ FUNC_TYPE_GENERAL, "gendsa", gendsa_main },
#endif
	{ FUNC_TYPE_GENERAL, "genpkey", genpkey_main },
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL3))
d106 2
a107 2
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL3))
	{ FUNC_TYPE_GENERAL, "s_client", s_client_main },
d109 2
d114 3
a116 2
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL3))
	{ FUNC_TYPE_GENERAL, "s_time", s_time_main },
d118 2
d121 6
a126 3
	{ FUNC_TYPE_GENERAL, "pkcs7", pkcs7_main },
#ifndef OPENSSL_NO_CMS
	{ FUNC_TYPE_GENERAL, "cms", cms_main },
d128 4
a131 4
	{ FUNC_TYPE_GENERAL, "crl2pkcs7", crl2pkcs7_main },
	{ FUNC_TYPE_GENERAL, "sess_id", sess_id_main },
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL3))
	{ FUNC_TYPE_GENERAL, "ciphers", ciphers_main },
d133 3
a135 3
	{ FUNC_TYPE_GENERAL, "nseq", nseq_main },
#if !defined(OPENSSL_NO_DES) && !defined(OPENSSL_NO_SHA1)
	{ FUNC_TYPE_GENERAL, "pkcs12", pkcs12_main },
d137 4
a140 17
	{ FUNC_TYPE_GENERAL, "pkcs8", pkcs8_main },
	{ FUNC_TYPE_GENERAL, "pkey", pkey_main },
	{ FUNC_TYPE_GENERAL, "pkeyparam", pkeyparam_main },
	{ FUNC_TYPE_GENERAL, "pkeyutl", pkeyutl_main },
	{ FUNC_TYPE_GENERAL, "spkac", spkac_main },
	{ FUNC_TYPE_GENERAL, "smime", smime_main },
	{ FUNC_TYPE_GENERAL, "rand", rand_main },
#ifndef OPENSSL_NO_ENGINE
	{ FUNC_TYPE_GENERAL, "engine", engine_main },
#endif
#ifndef OPENSSL_NO_OCSP
	{ FUNC_TYPE_GENERAL, "ocsp", ocsp_main },
#endif
	{ FUNC_TYPE_GENERAL, "prime", prime_main },
	{ FUNC_TYPE_GENERAL, "ts", ts_main },
#ifndef OPENSSL_NO_SRP
	{ FUNC_TYPE_GENERAL, "srp", srp_main },
d142 2
d146 1
d154 3
d163 3
a165 6
#ifndef OPENSSL_NO_MDC2
	{ FUNC_TYPE_MD, "mdc2", dgst_main },
#endif
#ifndef OPENSSL_NO_RMD160
	{ FUNC_TYPE_MD, "rmd160", dgst_main },
#endif
a167 2
#endif
#ifndef OPENSSL_NO_AES
a168 2
#endif
#ifndef OPENSSL_NO_AES
a169 2
#endif
#ifndef OPENSSL_NO_AES
a170 2
#endif
#ifndef OPENSSL_NO_AES
d172 1
d174 6
a179 2
#ifndef OPENSSL_NO_AES
	{ FUNC_TYPE_CIPHER, "aes-256-ecb", enc_main },
a182 2
#endif
#ifndef OPENSSL_NO_CAMELLIA
a183 2
#endif
#ifndef OPENSSL_NO_CAMELLIA
a184 2
#endif
#ifndef OPENSSL_NO_CAMELLIA
a185 2
#endif
#ifndef OPENSSL_NO_CAMELLIA
a186 2
#endif
#ifndef OPENSSL_NO_CAMELLIA
d189 7
a195 3
	{ FUNC_TYPE_CIPHER, "base64", enc_main },
#ifdef ZLIB
	{ FUNC_TYPE_CIPHER, "zlib", enc_main },
a198 2
#endif
#ifndef OPENSSL_NO_DES
a199 2
#endif
#ifndef OPENSSL_NO_DES
a200 26
#endif
#ifndef OPENSSL_NO_IDEA
	{ FUNC_TYPE_CIPHER, "idea", enc_main },
#endif
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed", enc_main },
#endif
#ifndef OPENSSL_NO_RC4
	{ FUNC_TYPE_CIPHER, "rc4", enc_main },
#endif
#ifndef OPENSSL_NO_RC4
	{ FUNC_TYPE_CIPHER, "rc4-40", enc_main },
#endif
#ifndef OPENSSL_NO_RC2
	{ FUNC_TYPE_CIPHER, "rc2", enc_main },
#endif
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast", enc_main },
#endif
#ifndef OPENSSL_NO_RC5
	{ FUNC_TYPE_CIPHER, "rc5", enc_main },
#endif
#ifndef OPENSSL_NO_DES
a201 2
#endif
#ifndef OPENSSL_NO_DES
a202 2
#endif
#ifndef OPENSSL_NO_DES
a203 2
#endif
#ifndef OPENSSL_NO_DES
a204 2
#endif
#ifndef OPENSSL_NO_DES
a205 2
#endif
#ifndef OPENSSL_NO_DES
a206 2
#endif
#ifndef OPENSSL_NO_DES
a207 2
#endif
#ifndef OPENSSL_NO_DES
a208 2
#endif
#ifndef OPENSSL_NO_DES
a209 2
#endif
#ifndef OPENSSL_NO_DES
a210 2
#endif
#ifndef OPENSSL_NO_DES
a211 2
#endif
#ifndef OPENSSL_NO_DES
d215 1
a216 2
#endif
#ifndef OPENSSL_NO_IDEA
a217 2
#endif
#ifndef OPENSSL_NO_IDEA
a218 2
#endif
#ifndef OPENSSL_NO_IDEA
a220 12
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed-cbc", enc_main },
#endif
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed-ecb", enc_main },
#endif
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed-cfb", enc_main },
#endif
#ifndef OPENSSL_NO_SEED
	{ FUNC_TYPE_CIPHER, "seed-ofb", enc_main },
#endif
d222 1
a223 2
#endif
#ifndef OPENSSL_NO_RC2
a224 2
#endif
#ifndef OPENSSL_NO_RC2
a225 2
#endif
#ifndef OPENSSL_NO_RC2
a226 2
#endif
#ifndef OPENSSL_NO_RC2
a227 2
#endif
#ifndef OPENSSL_NO_RC2
d230 3
a232 26
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf-cbc", enc_main },
#endif
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf-ecb", enc_main },
#endif
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf-cfb", enc_main },
#endif
#ifndef OPENSSL_NO_BF
	{ FUNC_TYPE_CIPHER, "bf-ofb", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast5-cbc", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast5-ecb", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast5-cfb", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast5-ofb", enc_main },
#endif
#ifndef OPENSSL_NO_CAST
	{ FUNC_TYPE_CIPHER, "cast-cbc", enc_main },
d235 1
a236 2
#endif
#ifndef OPENSSL_NO_RC5
d238 2
d241 6
a246 2
#ifndef OPENSSL_NO_RC5
	{ FUNC_TYPE_CIPHER, "rc5-cfb", enc_main },
d248 2
a249 2
#ifndef OPENSSL_NO_RC5
	{ FUNC_TYPE_CIPHER, "rc5-ofb", enc_main },
d251 1
@


1.13
log
@KNF, since this is no longer script generated
@
text
@d57 1
a57 1
typedef struct { 
d61 1
a61 1
 } FUNCTION;
d64 5
a68 5
FUNCTION functions[] = { 
	{ FUNC_TYPE_GENERAL, "verify", verify_main }, 
	{ FUNC_TYPE_GENERAL, "asn1parse", asn1parse_main }, 
	{ FUNC_TYPE_GENERAL, "req", req_main }, 
	{ FUNC_TYPE_GENERAL, "dgst", dgst_main }, 
d70 1
a70 1
	{ FUNC_TYPE_GENERAL, "dh", dh_main }, 
d73 1
a73 1
	{ FUNC_TYPE_GENERAL, "dhparam", dhparam_main }, 
d75 2
a76 2
	{ FUNC_TYPE_GENERAL, "enc", enc_main }, 
	{ FUNC_TYPE_GENERAL, "passwd", passwd_main }, 
d78 1
a78 1
	{ FUNC_TYPE_GENERAL, "gendh", gendh_main }, 
d80 3
a82 3
	{ FUNC_TYPE_GENERAL, "errstr", errstr_main }, 
	{ FUNC_TYPE_GENERAL, "ca", ca_main }, 
	{ FUNC_TYPE_GENERAL, "crl", crl_main }, 
d84 1
a84 1
	{ FUNC_TYPE_GENERAL, "rsa", rsa_main }, 
d87 1
a87 1
	{ FUNC_TYPE_GENERAL, "rsautl", rsautl_main }, 
d90 1
a90 1
	{ FUNC_TYPE_GENERAL, "dsa", dsa_main }, 
d93 1
a93 1
	{ FUNC_TYPE_GENERAL, "dsaparam", dsaparam_main }, 
d96 1
a96 1
	{ FUNC_TYPE_GENERAL, "ec", ec_main }, 
d99 1
a99 1
	{ FUNC_TYPE_GENERAL, "ecparam", ecparam_main }, 
d101 1
a101 1
	{ FUNC_TYPE_GENERAL, "x509", x509_main }, 
d103 1
a103 1
	{ FUNC_TYPE_GENERAL, "genrsa", genrsa_main }, 
d106 1
a106 1
	{ FUNC_TYPE_GENERAL, "gendsa", gendsa_main }, 
d108 1
a108 1
	{ FUNC_TYPE_GENERAL, "genpkey", genpkey_main }, 
d110 1
a110 1
	{ FUNC_TYPE_GENERAL, "s_server", s_server_main }, 
d113 1
a113 1
	{ FUNC_TYPE_GENERAL, "s_client", s_client_main }, 
d116 1
a116 1
	{ FUNC_TYPE_GENERAL, "speed", speed_main }, 
d119 1
a119 1
	{ FUNC_TYPE_GENERAL, "s_time", s_time_main }, 
d121 2
a122 2
	{ FUNC_TYPE_GENERAL, "version", version_main }, 
	{ FUNC_TYPE_GENERAL, "pkcs7", pkcs7_main }, 
d124 1
a124 1
	{ FUNC_TYPE_GENERAL, "cms", cms_main }, 
d126 2
a127 2
	{ FUNC_TYPE_GENERAL, "crl2pkcs7", crl2pkcs7_main }, 
	{ FUNC_TYPE_GENERAL, "sess_id", sess_id_main }, 
d129 1
a129 1
	{ FUNC_TYPE_GENERAL, "ciphers", ciphers_main }, 
d131 1
a131 1
	{ FUNC_TYPE_GENERAL, "nseq", nseq_main }, 
d133 1
a133 1
	{ FUNC_TYPE_GENERAL, "pkcs12", pkcs12_main }, 
d135 7
a141 7
	{ FUNC_TYPE_GENERAL, "pkcs8", pkcs8_main }, 
	{ FUNC_TYPE_GENERAL, "pkey", pkey_main }, 
	{ FUNC_TYPE_GENERAL, "pkeyparam", pkeyparam_main }, 
	{ FUNC_TYPE_GENERAL, "pkeyutl", pkeyutl_main }, 
	{ FUNC_TYPE_GENERAL, "spkac", spkac_main }, 
	{ FUNC_TYPE_GENERAL, "smime", smime_main }, 
	{ FUNC_TYPE_GENERAL, "rand", rand_main }, 
d143 1
a143 1
	{ FUNC_TYPE_GENERAL, "engine", engine_main }, 
d146 1
a146 1
	{ FUNC_TYPE_GENERAL, "ocsp", ocsp_main }, 
d148 2
a149 2
	{ FUNC_TYPE_GENERAL, "prime", prime_main }, 
	{ FUNC_TYPE_GENERAL, "ts", ts_main }, 
d151 1
a151 1
	{ FUNC_TYPE_GENERAL, "srp", srp_main }, 
d154 1
a154 1
	{ FUNC_TYPE_MD, "md2", dgst_main }, 
d157 1
a157 1
	{ FUNC_TYPE_MD, "md4", dgst_main }, 
d160 1
a160 1
	{ FUNC_TYPE_MD, "md5", dgst_main }, 
d163 1
a163 1
	{ FUNC_TYPE_MD, "sha", dgst_main }, 
d166 1
a166 1
	{ FUNC_TYPE_MD, "sha1", dgst_main }, 
d169 1
a169 1
	{ FUNC_TYPE_MD, "mdc2", dgst_main }, 
d172 1
a172 1
	{ FUNC_TYPE_MD, "rmd160", dgst_main }, 
d175 1
a175 1
	{ FUNC_TYPE_CIPHER, "aes-128-cbc", enc_main }, 
d178 1
a178 1
	{ FUNC_TYPE_CIPHER, "aes-128-ecb", enc_main }, 
d181 1
a181 1
	{ FUNC_TYPE_CIPHER, "aes-192-cbc", enc_main }, 
d184 1
a184 1
	{ FUNC_TYPE_CIPHER, "aes-192-ecb", enc_main }, 
d187 1
a187 1
	{ FUNC_TYPE_CIPHER, "aes-256-cbc", enc_main }, 
d190 1
a190 1
	{ FUNC_TYPE_CIPHER, "aes-256-ecb", enc_main }, 
d193 1
a193 1
	{ FUNC_TYPE_CIPHER, "camellia-128-cbc", enc_main }, 
d196 1
a196 1
	{ FUNC_TYPE_CIPHER, "camellia-128-ecb", enc_main }, 
d199 1
a199 1
	{ FUNC_TYPE_CIPHER, "camellia-192-cbc", enc_main }, 
d202 1
a202 1
	{ FUNC_TYPE_CIPHER, "camellia-192-ecb", enc_main }, 
d205 1
a205 1
	{ FUNC_TYPE_CIPHER, "camellia-256-cbc", enc_main }, 
d208 1
a208 1
	{ FUNC_TYPE_CIPHER, "camellia-256-ecb", enc_main }, 
d210 1
a210 1
	{ FUNC_TYPE_CIPHER, "base64", enc_main }, 
d212 1
a212 1
	{ FUNC_TYPE_CIPHER, "zlib", enc_main }, 
d215 1
a215 1
	{ FUNC_TYPE_CIPHER, "des", enc_main }, 
d218 1
a218 1
	{ FUNC_TYPE_CIPHER, "des3", enc_main }, 
d221 1
a221 1
	{ FUNC_TYPE_CIPHER, "desx", enc_main }, 
d224 1
a224 1
	{ FUNC_TYPE_CIPHER, "idea", enc_main }, 
d227 1
a227 1
	{ FUNC_TYPE_CIPHER, "seed", enc_main }, 
d230 1
a230 1
	{ FUNC_TYPE_CIPHER, "rc4", enc_main }, 
d233 1
a233 1
	{ FUNC_TYPE_CIPHER, "rc4-40", enc_main }, 
d236 1
a236 1
	{ FUNC_TYPE_CIPHER, "rc2", enc_main }, 
d239 1
a239 1
	{ FUNC_TYPE_CIPHER, "bf", enc_main }, 
d242 1
a242 1
	{ FUNC_TYPE_CIPHER, "cast", enc_main }, 
d245 1
a245 1
	{ FUNC_TYPE_CIPHER, "rc5", enc_main }, 
d248 1
a248 1
	{ FUNC_TYPE_CIPHER, "des-ecb", enc_main }, 
d251 1
a251 1
	{ FUNC_TYPE_CIPHER, "des-ede", enc_main }, 
d254 1
a254 1
	{ FUNC_TYPE_CIPHER, "des-ede3", enc_main }, 
d257 1
a257 1
	{ FUNC_TYPE_CIPHER, "des-cbc", enc_main }, 
d260 1
a260 1
	{ FUNC_TYPE_CIPHER, "des-ede-cbc", enc_main }, 
d263 1
a263 1
	{ FUNC_TYPE_CIPHER, "des-ede3-cbc", enc_main }, 
d266 1
a266 1
	{ FUNC_TYPE_CIPHER, "des-cfb", enc_main }, 
d269 1
a269 1
	{ FUNC_TYPE_CIPHER, "des-ede-cfb", enc_main }, 
d272 1
a272 1
	{ FUNC_TYPE_CIPHER, "des-ede3-cfb", enc_main }, 
d275 1
a275 1
	{ FUNC_TYPE_CIPHER, "des-ofb", enc_main }, 
d278 1
a278 1
	{ FUNC_TYPE_CIPHER, "des-ede-ofb", enc_main }, 
d281 1
a281 1
	{ FUNC_TYPE_CIPHER, "des-ede3-ofb", enc_main }, 
d284 1
a284 1
	{ FUNC_TYPE_CIPHER, "idea-cbc", enc_main }, 
d287 1
a287 1
	{ FUNC_TYPE_CIPHER, "idea-ecb", enc_main }, 
d290 1
a290 1
	{ FUNC_TYPE_CIPHER, "idea-cfb", enc_main }, 
d293 1
a293 1
	{ FUNC_TYPE_CIPHER, "idea-ofb", enc_main }, 
d296 1
a296 1
	{ FUNC_TYPE_CIPHER, "seed-cbc", enc_main }, 
d299 1
a299 1
	{ FUNC_TYPE_CIPHER, "seed-ecb", enc_main }, 
d302 1
a302 1
	{ FUNC_TYPE_CIPHER, "seed-cfb", enc_main }, 
d305 1
a305 1
	{ FUNC_TYPE_CIPHER, "seed-ofb", enc_main }, 
d308 1
a308 1
	{ FUNC_TYPE_CIPHER, "rc2-cbc", enc_main }, 
d311 1
a311 1
	{ FUNC_TYPE_CIPHER, "rc2-ecb", enc_main }, 
d314 1
a314 1
	{ FUNC_TYPE_CIPHER, "rc2-cfb", enc_main }, 
d317 1
a317 1
	{ FUNC_TYPE_CIPHER, "rc2-ofb", enc_main }, 
d320 1
a320 1
	{ FUNC_TYPE_CIPHER, "rc2-64-cbc", enc_main }, 
d323 1
a323 1
	{ FUNC_TYPE_CIPHER, "rc2-40-cbc", enc_main }, 
d326 1
a326 1
	{ FUNC_TYPE_CIPHER, "bf-cbc", enc_main }, 
d329 1
a329 1
	{ FUNC_TYPE_CIPHER, "bf-ecb", enc_main }, 
d332 1
a332 1
	{ FUNC_TYPE_CIPHER, "bf-cfb", enc_main }, 
d335 1
a335 1
	{ FUNC_TYPE_CIPHER, "bf-ofb", enc_main }, 
d338 1
a338 1
	{ FUNC_TYPE_CIPHER, "cast5-cbc", enc_main }, 
d341 1
a341 1
	{ FUNC_TYPE_CIPHER, "cast5-ecb", enc_main }, 
d344 1
a344 1
	{ FUNC_TYPE_CIPHER, "cast5-cfb", enc_main }, 
d347 1
a347 1
	{ FUNC_TYPE_CIPHER, "cast5-ofb", enc_main }, 
d350 1
a350 1
	{ FUNC_TYPE_CIPHER, "cast-cbc", enc_main }, 
d353 1
a353 1
	{ FUNC_TYPE_CIPHER, "rc5-cbc", enc_main }, 
d356 1
a356 1
	{ FUNC_TYPE_CIPHER, "rc5-ecb", enc_main }, 
d359 1
a359 1
	{ FUNC_TYPE_CIPHER, "rc5-cfb", enc_main }, 
d362 1
a362 1
	{ FUNC_TYPE_CIPHER, "rc5-ofb", enc_main }, 
@


1.12
log
@remove ssl2 support even more completely.
in the process, always include ssl3 and tls1, we don't need config options
for them. when the time comes to expire ssl3, it will be with an ax.
checked by miod
@
text
@d1 1
a1 2
/* apps/progs.h */
/* automatically generated by progs.pl for openssl.c */
d3 46
a48 46
extern int verify_main(int argc,char *argv[]);
extern int asn1parse_main(int argc,char *argv[]);
extern int req_main(int argc,char *argv[]);
extern int dgst_main(int argc,char *argv[]);
extern int dh_main(int argc,char *argv[]);
extern int dhparam_main(int argc,char *argv[]);
extern int enc_main(int argc,char *argv[]);
extern int passwd_main(int argc,char *argv[]);
extern int gendh_main(int argc,char *argv[]);
extern int errstr_main(int argc,char *argv[]);
extern int ca_main(int argc,char *argv[]);
extern int crl_main(int argc,char *argv[]);
extern int rsa_main(int argc,char *argv[]);
extern int rsautl_main(int argc,char *argv[]);
extern int dsa_main(int argc,char *argv[]);
extern int dsaparam_main(int argc,char *argv[]);
extern int ec_main(int argc,char *argv[]);
extern int ecparam_main(int argc,char *argv[]);
extern int x509_main(int argc,char *argv[]);
extern int genrsa_main(int argc,char *argv[]);
extern int gendsa_main(int argc,char *argv[]);
extern int genpkey_main(int argc,char *argv[]);
extern int s_server_main(int argc,char *argv[]);
extern int s_client_main(int argc,char *argv[]);
extern int speed_main(int argc,char *argv[]);
extern int s_time_main(int argc,char *argv[]);
extern int version_main(int argc,char *argv[]);
extern int pkcs7_main(int argc,char *argv[]);
extern int cms_main(int argc,char *argv[]);
extern int crl2pkcs7_main(int argc,char *argv[]);
extern int sess_id_main(int argc,char *argv[]);
extern int ciphers_main(int argc,char *argv[]);
extern int nseq_main(int argc,char *argv[]);
extern int pkcs12_main(int argc,char *argv[]);
extern int pkcs8_main(int argc,char *argv[]);
extern int pkey_main(int argc,char *argv[]);
extern int pkeyparam_main(int argc,char *argv[]);
extern int pkeyutl_main(int argc,char *argv[]);
extern int spkac_main(int argc,char *argv[]);
extern int smime_main(int argc,char *argv[]);
extern int rand_main(int argc,char *argv[]);
extern int engine_main(int argc,char *argv[]);
extern int ocsp_main(int argc,char *argv[]);
extern int prime_main(int argc,char *argv[]);
extern int ts_main(int argc,char *argv[]);
extern int srp_main(int argc,char *argv[]);
d57 1
a57 1
typedef struct {
d60 2
a61 2
	int (*func)(int argc,char *argv[]);
	} FUNCTION;
d64 5
a68 5
FUNCTION functions[] = {
	{FUNC_TYPE_GENERAL,"verify",verify_main},
	{FUNC_TYPE_GENERAL,"asn1parse",asn1parse_main},
	{FUNC_TYPE_GENERAL,"req",req_main},
	{FUNC_TYPE_GENERAL,"dgst",dgst_main},
d70 1
a70 1
	{FUNC_TYPE_GENERAL,"dh",dh_main},
d73 1
a73 1
	{FUNC_TYPE_GENERAL,"dhparam",dhparam_main},
d75 2
a76 2
	{FUNC_TYPE_GENERAL,"enc",enc_main},
	{FUNC_TYPE_GENERAL,"passwd",passwd_main},
d78 1
a78 1
	{FUNC_TYPE_GENERAL,"gendh",gendh_main},
d80 3
a82 3
	{FUNC_TYPE_GENERAL,"errstr",errstr_main},
	{FUNC_TYPE_GENERAL,"ca",ca_main},
	{FUNC_TYPE_GENERAL,"crl",crl_main},
d84 1
a84 1
	{FUNC_TYPE_GENERAL,"rsa",rsa_main},
d87 1
a87 1
	{FUNC_TYPE_GENERAL,"rsautl",rsautl_main},
d90 1
a90 1
	{FUNC_TYPE_GENERAL,"dsa",dsa_main},
d93 1
a93 1
	{FUNC_TYPE_GENERAL,"dsaparam",dsaparam_main},
d96 1
a96 1
	{FUNC_TYPE_GENERAL,"ec",ec_main},
d99 1
a99 1
	{FUNC_TYPE_GENERAL,"ecparam",ecparam_main},
d101 1
a101 1
	{FUNC_TYPE_GENERAL,"x509",x509_main},
d103 1
a103 1
	{FUNC_TYPE_GENERAL,"genrsa",genrsa_main},
d106 1
a106 1
	{FUNC_TYPE_GENERAL,"gendsa",gendsa_main},
d108 1
a108 1
	{FUNC_TYPE_GENERAL,"genpkey",genpkey_main},
d110 1
a110 1
	{FUNC_TYPE_GENERAL,"s_server",s_server_main},
d113 1
a113 1
	{FUNC_TYPE_GENERAL,"s_client",s_client_main},
d116 1
a116 1
	{FUNC_TYPE_GENERAL,"speed",speed_main},
d119 1
a119 1
	{FUNC_TYPE_GENERAL,"s_time",s_time_main},
d121 2
a122 2
	{FUNC_TYPE_GENERAL,"version",version_main},
	{FUNC_TYPE_GENERAL,"pkcs7",pkcs7_main},
d124 1
a124 1
	{FUNC_TYPE_GENERAL,"cms",cms_main},
d126 2
a127 2
	{FUNC_TYPE_GENERAL,"crl2pkcs7",crl2pkcs7_main},
	{FUNC_TYPE_GENERAL,"sess_id",sess_id_main},
d129 1
a129 1
	{FUNC_TYPE_GENERAL,"ciphers",ciphers_main},
d131 1
a131 1
	{FUNC_TYPE_GENERAL,"nseq",nseq_main},
d133 1
a133 1
	{FUNC_TYPE_GENERAL,"pkcs12",pkcs12_main},
d135 7
a141 7
	{FUNC_TYPE_GENERAL,"pkcs8",pkcs8_main},
	{FUNC_TYPE_GENERAL,"pkey",pkey_main},
	{FUNC_TYPE_GENERAL,"pkeyparam",pkeyparam_main},
	{FUNC_TYPE_GENERAL,"pkeyutl",pkeyutl_main},
	{FUNC_TYPE_GENERAL,"spkac",spkac_main},
	{FUNC_TYPE_GENERAL,"smime",smime_main},
	{FUNC_TYPE_GENERAL,"rand",rand_main},
d143 1
a143 1
	{FUNC_TYPE_GENERAL,"engine",engine_main},
d146 1
a146 1
	{FUNC_TYPE_GENERAL,"ocsp",ocsp_main},
d148 2
a149 2
	{FUNC_TYPE_GENERAL,"prime",prime_main},
	{FUNC_TYPE_GENERAL,"ts",ts_main},
d151 1
a151 1
	{FUNC_TYPE_GENERAL,"srp",srp_main},
d154 1
a154 1
	{FUNC_TYPE_MD,"md2",dgst_main},
d157 1
a157 1
	{FUNC_TYPE_MD,"md4",dgst_main},
d160 1
a160 1
	{FUNC_TYPE_MD,"md5",dgst_main},
d163 1
a163 1
	{FUNC_TYPE_MD,"sha",dgst_main},
d166 1
a166 1
	{FUNC_TYPE_MD,"sha1",dgst_main},
d169 1
a169 1
	{FUNC_TYPE_MD,"mdc2",dgst_main},
d172 1
a172 1
	{FUNC_TYPE_MD,"rmd160",dgst_main},
d175 1
a175 1
	{FUNC_TYPE_CIPHER,"aes-128-cbc",enc_main},
d178 1
a178 1
	{FUNC_TYPE_CIPHER,"aes-128-ecb",enc_main},
d181 1
a181 1
	{FUNC_TYPE_CIPHER,"aes-192-cbc",enc_main},
d184 1
a184 1
	{FUNC_TYPE_CIPHER,"aes-192-ecb",enc_main},
d187 1
a187 1
	{FUNC_TYPE_CIPHER,"aes-256-cbc",enc_main},
d190 1
a190 1
	{FUNC_TYPE_CIPHER,"aes-256-ecb",enc_main},
d193 1
a193 1
	{FUNC_TYPE_CIPHER,"camellia-128-cbc",enc_main},
d196 1
a196 1
	{FUNC_TYPE_CIPHER,"camellia-128-ecb",enc_main},
d199 1
a199 1
	{FUNC_TYPE_CIPHER,"camellia-192-cbc",enc_main},
d202 1
a202 1
	{FUNC_TYPE_CIPHER,"camellia-192-ecb",enc_main},
d205 1
a205 1
	{FUNC_TYPE_CIPHER,"camellia-256-cbc",enc_main},
d208 1
a208 1
	{FUNC_TYPE_CIPHER,"camellia-256-ecb",enc_main},
d210 1
a210 1
	{FUNC_TYPE_CIPHER,"base64",enc_main},
d212 1
a212 1
	{FUNC_TYPE_CIPHER,"zlib",enc_main},
d215 1
a215 1
	{FUNC_TYPE_CIPHER,"des",enc_main},
d218 1
a218 1
	{FUNC_TYPE_CIPHER,"des3",enc_main},
d221 1
a221 1
	{FUNC_TYPE_CIPHER,"desx",enc_main},
d224 1
a224 1
	{FUNC_TYPE_CIPHER,"idea",enc_main},
d227 1
a227 1
	{FUNC_TYPE_CIPHER,"seed",enc_main},
d230 1
a230 1
	{FUNC_TYPE_CIPHER,"rc4",enc_main},
d233 1
a233 1
	{FUNC_TYPE_CIPHER,"rc4-40",enc_main},
d236 1
a236 1
	{FUNC_TYPE_CIPHER,"rc2",enc_main},
d239 1
a239 1
	{FUNC_TYPE_CIPHER,"bf",enc_main},
d242 1
a242 1
	{FUNC_TYPE_CIPHER,"cast",enc_main},
d245 1
a245 1
	{FUNC_TYPE_CIPHER,"rc5",enc_main},
d248 1
a248 1
	{FUNC_TYPE_CIPHER,"des-ecb",enc_main},
d251 1
a251 1
	{FUNC_TYPE_CIPHER,"des-ede",enc_main},
d254 1
a254 1
	{FUNC_TYPE_CIPHER,"des-ede3",enc_main},
d257 1
a257 1
	{FUNC_TYPE_CIPHER,"des-cbc",enc_main},
d260 1
a260 1
	{FUNC_TYPE_CIPHER,"des-ede-cbc",enc_main},
d263 1
a263 1
	{FUNC_TYPE_CIPHER,"des-ede3-cbc",enc_main},
d266 1
a266 1
	{FUNC_TYPE_CIPHER,"des-cfb",enc_main},
d269 1
a269 1
	{FUNC_TYPE_CIPHER,"des-ede-cfb",enc_main},
d272 1
a272 1
	{FUNC_TYPE_CIPHER,"des-ede3-cfb",enc_main},
d275 1
a275 1
	{FUNC_TYPE_CIPHER,"des-ofb",enc_main},
d278 1
a278 1
	{FUNC_TYPE_CIPHER,"des-ede-ofb",enc_main},
d281 1
a281 1
	{FUNC_TYPE_CIPHER,"des-ede3-ofb",enc_main},
d284 1
a284 1
	{FUNC_TYPE_CIPHER,"idea-cbc",enc_main},
d287 1
a287 1
	{FUNC_TYPE_CIPHER,"idea-ecb",enc_main},
d290 1
a290 1
	{FUNC_TYPE_CIPHER,"idea-cfb",enc_main},
d293 1
a293 1
	{FUNC_TYPE_CIPHER,"idea-ofb",enc_main},
d296 1
a296 1
	{FUNC_TYPE_CIPHER,"seed-cbc",enc_main},
d299 1
a299 1
	{FUNC_TYPE_CIPHER,"seed-ecb",enc_main},
d302 1
a302 1
	{FUNC_TYPE_CIPHER,"seed-cfb",enc_main},
d305 1
a305 1
	{FUNC_TYPE_CIPHER,"seed-ofb",enc_main},
d308 1
a308 1
	{FUNC_TYPE_CIPHER,"rc2-cbc",enc_main},
d311 1
a311 1
	{FUNC_TYPE_CIPHER,"rc2-ecb",enc_main},
d314 1
a314 1
	{FUNC_TYPE_CIPHER,"rc2-cfb",enc_main},
d317 1
a317 1
	{FUNC_TYPE_CIPHER,"rc2-ofb",enc_main},
d320 1
a320 1
	{FUNC_TYPE_CIPHER,"rc2-64-cbc",enc_main},
d323 1
a323 1
	{FUNC_TYPE_CIPHER,"rc2-40-cbc",enc_main},
d326 1
a326 1
	{FUNC_TYPE_CIPHER,"bf-cbc",enc_main},
d329 1
a329 1
	{FUNC_TYPE_CIPHER,"bf-ecb",enc_main},
d332 1
a332 1
	{FUNC_TYPE_CIPHER,"bf-cfb",enc_main},
d335 1
a335 1
	{FUNC_TYPE_CIPHER,"bf-ofb",enc_main},
d338 1
a338 1
	{FUNC_TYPE_CIPHER,"cast5-cbc",enc_main},
d341 1
a341 1
	{FUNC_TYPE_CIPHER,"cast5-ecb",enc_main},
d344 1
a344 1
	{FUNC_TYPE_CIPHER,"cast5-cfb",enc_main},
d347 1
a347 1
	{FUNC_TYPE_CIPHER,"cast5-ofb",enc_main},
d350 1
a350 1
	{FUNC_TYPE_CIPHER,"cast-cbc",enc_main},
d353 1
a353 1
	{FUNC_TYPE_CIPHER,"rc5-cbc",enc_main},
d356 1
a356 1
	{FUNC_TYPE_CIPHER,"rc5-ecb",enc_main},
d359 1
a359 1
	{FUNC_TYPE_CIPHER,"rc5-cfb",enc_main},
d362 1
a362 1
	{FUNC_TYPE_CIPHER,"rc5-ofb",enc_main},
d364 2
a365 2
	{0,NULL,NULL}
	};
@


1.11
log
@resolve conflicts
@
text
@d110 1
a110 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d113 1
a113 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d119 1
a119 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d129 1
a129 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
@


1.10
log
@resolve conflicts, fix local changes
@
text
@d49 1
d151 3
@


1.9
log
@resolve conflicts
@
text
@d25 1
d39 3
d48 1
d53 3
d62 1
d108 1
d136 3
d145 1
d147 1
d149 1
d208 3
@


1.8
log
@resolve conflicts
@
text
@d20 2
d31 1
a40 2
extern int prime_main(int argc,char *argv[]);
#ifndef OPENSSL_NO_ENGINE
a41 1
#endif
d43 1
d51 2
a52 2
	char *name;
	int (*func)();
d86 6
d113 3
a128 1
	{FUNC_TYPE_GENERAL,"prime",prime_main},
d133 1
d173 18
d204 3
d272 12
@


1.7
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d38 1
d119 1
@


1.6
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d38 1
d40 1
d97 1
d99 1
d118 1
d120 1
@


1.5
log
@openssl-engine-0.9.6 merge
@
text
@d38 2
d56 1
a56 1
#ifndef NO_DH
d59 1
a59 1
#ifndef NO_DH
d64 1
a64 1
#ifndef NO_DH
d70 1
a70 1
#ifndef NO_RSA
d73 1
a73 1
#ifndef NO_RSA
d76 1
a76 1
#ifndef NO_DSA
d79 1
a79 1
#ifndef NO_DSA
d83 1
a83 1
#ifndef NO_RSA
d86 1
a86 1
#ifndef NO_DSA
d89 1
a89 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(NO_SSL3))
d92 1
a92 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(NO_SSL3))
d96 1
a96 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(NO_SSL3))
d103 1
a103 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(NO_SSL3))
d107 1
a107 1
#if !defined(NO_DES) && !defined(NO_SHA1)
d114 3
d118 2
d121 2
d124 2
d127 2
d130 2
d133 2
d136 19
d156 1
a156 1
#ifndef NO_DES
d159 1
a159 1
#ifndef NO_DES
d162 1
a162 1
#ifndef NO_DES
d165 1
a165 1
#ifndef NO_IDEA
d168 1
a168 1
#ifndef NO_RC4
d171 1
a171 1
#ifndef NO_RC4
d174 1
a174 1
#ifndef NO_RC2
d177 1
a177 1
#ifndef NO_BF
d180 1
a180 1
#ifndef NO_CAST
d183 1
a183 1
#ifndef NO_RC5
d186 1
a186 1
#ifndef NO_DES
d189 1
a189 1
#ifndef NO_DES
d192 1
a192 1
#ifndef NO_DES
d195 1
a195 1
#ifndef NO_DES
d198 1
a198 1
#ifndef NO_DES
d201 1
a201 1
#ifndef NO_DES
d204 1
a204 1
#ifndef NO_DES
d207 1
a207 1
#ifndef NO_DES
d210 1
a210 1
#ifndef NO_DES
d213 1
a213 1
#ifndef NO_DES
d216 1
a216 1
#ifndef NO_DES
d219 1
a219 1
#ifndef NO_DES
d222 1
a222 1
#ifndef NO_IDEA
d225 1
a225 1
#ifndef NO_IDEA
d228 1
a228 1
#ifndef NO_IDEA
d231 1
a231 1
#ifndef NO_IDEA
d234 1
a234 1
#ifndef NO_RC2
d237 1
a237 1
#ifndef NO_RC2
d240 1
a240 1
#ifndef NO_RC2
d243 1
a243 1
#ifndef NO_RC2
d246 1
a246 1
#ifndef NO_RC2
d249 1
a249 1
#ifndef NO_RC2
d252 1
a252 1
#ifndef NO_BF
d255 1
a255 1
#ifndef NO_BF
d258 1
a258 1
#ifndef NO_BF
d261 1
a261 1
#ifndef NO_BF
d264 1
a264 1
#ifndef NO_CAST
d267 1
a267 1
#ifndef NO_CAST
d270 1
a270 1
#ifndef NO_CAST
d273 1
a273 1
#ifndef NO_CAST
d276 1
a276 1
#ifndef NO_CAST
d279 1
a279 1
#ifndef NO_RC5
d282 1
a282 1
#ifndef NO_RC5
d285 1
a285 1
#ifndef NO_RC5
d288 1
a288 1
#ifndef NO_RC5
@


1.4
log
@OpenSSL 0.9.5a merge
@
text
@d17 1
d71 3
d113 1
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d36 1
d107 1
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d1 2
a2 1
/* This file was generated by progs.pl. */
d9 1
d11 1
d34 2
a35 2

#ifdef SSLEAY_SRC  /* Defined only in openssl.c. */
d55 3
d59 1
d82 1
a82 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(O_SSL3))
d85 1
a85 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(O_SSL3))
d89 1
a89 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(O_SSL3))
d104 2
d128 3
d203 6
a249 2
#endif

@


1.1
log
@Initial revision
@
text
@d1 2
a2 1
#ifndef NOPROTO
d18 1
d28 3
a30 26
#else
extern int verify_main();
extern int asn1parse_main();
extern int req_main();
extern int dgst_main();
extern int dh_main();
extern int enc_main();
extern int gendh_main();
extern int errstr_main();
extern int ca_main();
extern int crl_main();
extern int rsa_main();
extern int dsa_main();
extern int dsaparam_main();
extern int x509_main();
extern int genrsa_main();
extern int s_server_main();
extern int s_client_main();
extern int speed_main();
extern int s_time_main();
extern int version_main();
extern int pkcs7_main();
extern int crl2pkcs7_main();
extern int sess_id_main();
extern int ciphers_main();
#endif
d32 1
a32 1
#ifdef SSLEAY_SRC
a46 1
#ifndef NO_RSA
a47 1
#endif
a56 1
#ifndef NO_RSA
a57 1
#endif
a67 1
#ifndef NO_RSA
a68 1
#endif
d72 3
d89 1
a89 1
#if !defined(NO_SOCK) && !(defined(NO_SSL2) && defined(O_SSL3))
d92 5
d102 1
d122 1
a122 1
#ifndef NO_BLOWFISH
d191 1
a191 1
#ifndef NO_BLOWFISH
d194 1
a194 1
#ifndef NO_BLOWFISH
d197 1
a197 1
#ifndef NO_BLOWFISH
d200 1
a200 1
#ifndef NO_BLOWFISH
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d1 1
a1 3
/* apps/progs.h */
/* automatically generated by progs.pl for openssl.c */

a6 1
extern int dhparam_main(int argc,char *argv[]);
a7 1
extern int passwd_main(int argc,char *argv[]);
a12 1
extern int rsautl_main(int argc,char *argv[]);
a16 1
extern int gendsa_main(int argc,char *argv[]);
d26 28
a53 8
extern int nseq_main(int argc,char *argv[]);
extern int pkcs12_main(int argc,char *argv[]);
extern int pkcs8_main(int argc,char *argv[]);
extern int spkac_main(int argc,char *argv[]);
extern int smime_main(int argc,char *argv[]);
extern int rand_main(int argc,char *argv[]);
extern int engine_main(int argc,char *argv[]);
extern int ocsp_main(int argc,char *argv[]);
d68 1
d70 1
d72 1
a72 1
#ifndef OPENSSL_NO_DH
a74 3
#ifndef OPENSSL_NO_DH
	{FUNC_TYPE_GENERAL,"dhparam",dhparam_main},
#endif
d76 1
a76 2
	{FUNC_TYPE_GENERAL,"passwd",passwd_main},
#ifndef OPENSSL_NO_DH
d80 1
d82 1
d84 1
a84 1
#ifndef OPENSSL_NO_RSA
d87 1
a87 4
#ifndef OPENSSL_NO_RSA
	{FUNC_TYPE_GENERAL,"rsautl",rsautl_main},
#endif
#ifndef OPENSSL_NO_DSA
d90 1
a90 1
#ifndef OPENSSL_NO_DSA
d93 1
d95 2
a96 1
#ifndef OPENSSL_NO_RSA
d99 1
a99 4
#ifndef OPENSSL_NO_DSA
	{FUNC_TYPE_GENERAL,"gendsa",gendsa_main},
#endif
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d102 1
a102 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d106 1
a106 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
d113 1
a113 1
#if !defined(OPENSSL_NO_SOCK) && !(defined(OPENSSL_NO_SSL2) && defined(OPENSSL_NO_SSL3))
a115 11
	{FUNC_TYPE_GENERAL,"nseq",nseq_main},
#if !defined(OPENSSL_NO_DES) && !defined(OPENSSL_NO_SHA1)
	{FUNC_TYPE_GENERAL,"pkcs12",pkcs12_main},
#endif
	{FUNC_TYPE_GENERAL,"pkcs8",pkcs8_main},
	{FUNC_TYPE_GENERAL,"spkac",spkac_main},
	{FUNC_TYPE_GENERAL,"smime",smime_main},
	{FUNC_TYPE_GENERAL,"rand",rand_main},
	{FUNC_TYPE_GENERAL,"engine",engine_main},
	{FUNC_TYPE_GENERAL,"ocsp",ocsp_main},
#ifndef OPENSSL_NO_MD2
a116 5
#endif
#ifndef OPENSSL_NO_MD4
	{FUNC_TYPE_MD,"md4",dgst_main},
#endif
#ifndef OPENSSL_NO_MD5
a117 2
#endif
#ifndef OPENSSL_NO_SHA
a118 2
#endif
#ifndef OPENSSL_NO_SHA1
a119 2
#endif
#ifndef OPENSSL_NO_MDC2
a120 22
#endif
#ifndef OPENSSL_NO_RMD160
	{FUNC_TYPE_MD,"rmd160",dgst_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-128-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-128-ecb",enc_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-192-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-192-ecb",enc_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-256-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_AES
	{FUNC_TYPE_CIPHER,"aes-256-ecb",enc_main},
#endif
d122 1
a122 1
#ifndef OPENSSL_NO_DES
d125 1
a125 1
#ifndef OPENSSL_NO_DES
d128 1
a128 1
#ifndef OPENSSL_NO_DES
d131 1
a131 1
#ifndef OPENSSL_NO_IDEA
d134 1
a134 1
#ifndef OPENSSL_NO_RC4
d137 1
a137 4
#ifndef OPENSSL_NO_RC4
	{FUNC_TYPE_CIPHER,"rc4-40",enc_main},
#endif
#ifndef OPENSSL_NO_RC2
d140 1
a140 1
#ifndef OPENSSL_NO_BF
d143 1
a143 1
#ifndef OPENSSL_NO_CAST
d146 1
a146 1
#ifndef OPENSSL_NO_RC5
d149 1
a149 1
#ifndef OPENSSL_NO_DES
d152 1
a152 1
#ifndef OPENSSL_NO_DES
d155 1
a155 1
#ifndef OPENSSL_NO_DES
d158 1
a158 1
#ifndef OPENSSL_NO_DES
d161 1
a161 1
#ifndef OPENSSL_NO_DES
d164 1
a164 1
#ifndef OPENSSL_NO_DES
d167 1
a167 1
#ifndef OPENSSL_NO_DES
d170 1
a170 1
#ifndef OPENSSL_NO_DES
d173 1
a173 1
#ifndef OPENSSL_NO_DES
d176 1
a176 1
#ifndef OPENSSL_NO_DES
d179 1
a179 1
#ifndef OPENSSL_NO_DES
d182 1
a182 1
#ifndef OPENSSL_NO_DES
d185 1
a185 1
#ifndef OPENSSL_NO_IDEA
d188 1
a188 1
#ifndef OPENSSL_NO_IDEA
d191 1
a191 1
#ifndef OPENSSL_NO_IDEA
d194 1
a194 1
#ifndef OPENSSL_NO_IDEA
d197 1
a197 1
#ifndef OPENSSL_NO_RC2
d200 1
a200 1
#ifndef OPENSSL_NO_RC2
d203 1
a203 1
#ifndef OPENSSL_NO_RC2
d206 1
a206 1
#ifndef OPENSSL_NO_RC2
d209 1
a209 7
#ifndef OPENSSL_NO_RC2
	{FUNC_TYPE_CIPHER,"rc2-64-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_RC2
	{FUNC_TYPE_CIPHER,"rc2-40-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_BF
d212 1
a212 1
#ifndef OPENSSL_NO_BF
d215 1
a215 1
#ifndef OPENSSL_NO_BF
d218 1
a218 1
#ifndef OPENSSL_NO_BF
d221 1
a221 1
#ifndef OPENSSL_NO_CAST
d224 1
a224 1
#ifndef OPENSSL_NO_CAST
d227 1
a227 1
#ifndef OPENSSL_NO_CAST
d230 1
a230 1
#ifndef OPENSSL_NO_CAST
d233 1
a233 1
#ifndef OPENSSL_NO_CAST
d236 1
a236 1
#ifndef OPENSSL_NO_RC5
d239 1
a239 1
#ifndef OPENSSL_NO_RC5
d242 1
a242 1
#ifndef OPENSSL_NO_RC5
d245 1
a245 1
#ifndef OPENSSL_NO_RC5
d250 2
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@a37 1
#ifndef OPENSSL_NO_ENGINE
a38 1
#endif
a94 1
#ifndef OPENSSL_NO_SPEED
a95 1
#endif
a113 1
#ifndef OPENSSL_NO_ENGINE
a114 1
#endif
@


1.1.1.4
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a37 1
extern int prime_main(int argc,char *argv[]);
a117 1
	{FUNC_TYPE_GENERAL,"prime",prime_main},
@


1.1.1.5
log
@import of OpenSSL 0.9.8h
@
text
@a19 2
extern int ec_main(int argc,char *argv[]);
extern int ecparam_main(int argc,char *argv[]);
a28 1
extern int cms_main(int argc,char *argv[]);
d38 2
d41 1
a42 1
extern int prime_main(int argc,char *argv[]);
d50 2
a51 2
	const char *name;
	int (*func)(int argc,char *argv[]);
a84 6
#ifndef OPENSSL_NO_EC
	{FUNC_TYPE_GENERAL,"ec",ec_main},
#endif
#ifndef OPENSSL_NO_EC
	{FUNC_TYPE_GENERAL,"ecparam",ecparam_main},
#endif
a105 3
#ifndef OPENSSL_NO_CMS
	{FUNC_TYPE_GENERAL,"cms",cms_main},
#endif
d119 1
a123 1
	{FUNC_TYPE_GENERAL,"prime",prime_main},
a162 18
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-128-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-128-ecb",enc_main},
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-192-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-192-ecb",enc_main},
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-256-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_CAMELLIA
	{FUNC_TYPE_CIPHER,"camellia-256-ecb",enc_main},
#endif
a175 3
#ifndef OPENSSL_NO_SEED
	{FUNC_TYPE_CIPHER,"seed",enc_main},
#endif
a240 12
#endif
#ifndef OPENSSL_NO_SEED
	{FUNC_TYPE_CIPHER,"seed-cbc",enc_main},
#endif
#ifndef OPENSSL_NO_SEED
	{FUNC_TYPE_CIPHER,"seed-ecb",enc_main},
#endif
#ifndef OPENSSL_NO_SEED
	{FUNC_TYPE_CIPHER,"seed-cfb",enc_main},
#endif
#ifndef OPENSSL_NO_SEED
	{FUNC_TYPE_CIPHER,"seed-ofb",enc_main},
@


1.1.1.6
log
@import OpenSSL-1.0.0a
@
text
@a24 1
extern int genpkey_main(int argc,char *argv[]);
a37 3
extern int pkey_main(int argc,char *argv[]);
extern int pkeyparam_main(int argc,char *argv[]);
extern int pkeyutl_main(int argc,char *argv[]);
a43 1
extern int ts_main(int argc,char *argv[]);
a47 3
#define FUNC_TYPE_PKEY		4
#define FUNC_TYPE_MD_ALG	5
#define FUNC_TYPE_CIPHER_ALG	6
a53 1
DECLARE_LHASH_OF(FUNCTION);
a98 1
	{FUNC_TYPE_GENERAL,"genpkey",genpkey_main},
a125 3
	{FUNC_TYPE_GENERAL,"pkey",pkey_main},
	{FUNC_TYPE_GENERAL,"pkeyparam",pkeyparam_main},
	{FUNC_TYPE_GENERAL,"pkeyutl",pkeyutl_main},
a131 1
#ifndef OPENSSL_NO_OCSP
a132 1
#endif
a133 1
	{FUNC_TYPE_GENERAL,"ts",ts_main},
a191 3
#ifdef ZLIB
	{FUNC_TYPE_CIPHER,"zlib",enc_main},
#endif
@


1.1.1.7
log
@import OpenSSL-1.0.1c
@
text
@a48 1
extern int srp_main(int argc,char *argv[]);
a149 3
#ifndef OPENSSL_NO_SRP
	{FUNC_TYPE_GENERAL,"srp",srp_main},
#endif
@


