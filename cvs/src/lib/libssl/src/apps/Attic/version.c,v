head	1.19;
access;
symbols
	OPENBSD_5_6:1.18.0.4
	OPENBSD_5_6_BASE:1.18
	butholakala:1.7
	openssl_1_0_1_g:1.1.1.5
	OPENBSD_5_5:1.7.0.24
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.20
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.18
	OPENBSD_5_3_BASE:1.7
	openssl_1_0_1_c:1.1.1.5
	OPENBSD_5_2:1.7.0.14
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.16
	openssl_1_0_0_f:1.1.1.5
	openssl_1_0_0_e:1.1.1.5
	OPENBSD_5_0:1.7.0.12
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.10
	OPENBSD_4_9_BASE:1.7
	openssh_1_0_0_a:1.1.1.5
	OPENBSD_4_8:1.7.0.8
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.4
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.7.0.6
	OPENBSD_4_6_BASE:1.7
	openssl_0_9_8_k:1.1.1.5
	OPENBSD_4_5:1.7.0.2
	OPENBSD_4_5_BASE:1.7
	openssl_0_9_8_j:1.1.1.5
	openssl_0_9_8_h:1.1.1.4
	pre_openssl_0_9_8h:1.5
	OPENBSD_4_4:1.5.0.22
	OPENBSD_4_4_BASE:1.5
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	openssl_0_9_7j:1.1.1.3
	openssl:1.1.1
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENSSL_0_9_7G:1.1.1.3
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENSSL_0_9_7D:1.1.1.3
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENSSL_0_9_7C:1.1.1.3
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENSSL_0_9_7B:1.1.1.3
	OPENBSD_3_3:1.4.0.4
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.2
	OPENBSD_3_2_BASE:1.4
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.3.0.10
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.8
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.6
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@ * @;


1.19
date	2014.08.26.17.47.25;	author jsing;	state dead;
branches;
next	1.18;
commitid	7A7DObXgY4Fni8xJ;

1.18
date	2014.07.14.00.35.10;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	EB0l28piqIRSpBUh;

1.17
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.16;
commitid	mJUVYpkFBZ0Zv2bG;

1.16
date	2014.05.23.16.10.02;	author jsing;	state Exp;
branches;
next	1.15;

1.15
date	2014.05.18.16.21.03;	author jsing;	state Exp;
branches;
next	1.14;

1.14
date	2014.05.18.11.36.24;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2014.05.17.15.57.52;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.24.12.22.22;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.22.14.05.40;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.18.04.17.17;	author jsing;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.18.02.45.27;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2014.04.17.20.58.08;	author deraadt;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.09.12.15.19;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.06.12.17.48;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.12.02.18.35;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.15.02.29.09;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.08.15;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.35.20;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.13.10;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.13.10;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.49.38;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.34.25;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.39;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2009.01.09.12.13.49;	author djm;	state Exp;
branches;
next	;


desc
@@


1.19
log
@Move openssl(1) from /usr/sbin/openssl to /usr/bin/openssl, since it is not
a system/superuser binary. At the same time, move the source code from its
current lib/libssl/src/apps location to a more appropriate home under
usr.bin/openssl.

ok deraadt@@ miod@@
@
text
@/* $OpenBSD: version.c,v 1.18 2014/07/14 00:35:10 deraadt Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */
/* ====================================================================
 * Copyright (c) 1998-2001 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>

#include "apps.h"

#include <openssl/bn.h>
#include <openssl/crypto.h>
#include <openssl/evp.h>

#ifndef OPENSSL_NO_BF
#include <openssl/blowfish.h>
#endif

#ifndef OPENSSL_NO_DES
#include <openssl/des.h>
#endif

#ifndef OPENSSL_NO_IDEA
#include <openssl/idea.h>
#endif

#ifndef OPENSSL_NO_RC4
#include <openssl/rc4.h>
#endif

int version_main(int, char **);

int
version_main(int argc, char **argv)
{
	int i, ret = 0;
	int cflags = 0, version = 0, date = 0, options = 0, platform = 0,
	    dir = 0;

	if (argc == 1)
		version = 1;
	for (i = 1; i < argc; i++) {
		if (strcmp(argv[i], "-v") == 0)
			version = 1;
		else if (strcmp(argv[i], "-b") == 0)
			date = 1;
		else if (strcmp(argv[i], "-f") == 0)
			cflags = 1;
		else if (strcmp(argv[i], "-o") == 0)
			options = 1;
		else if (strcmp(argv[i], "-p") == 0)
			platform = 1;
		else if (strcmp(argv[i], "-d") == 0)
			dir = 1;
		else if (strcmp(argv[i], "-a") == 0)
			date = version = cflags = options = platform = dir = 1;
		else {
			BIO_printf(bio_err, "usage:version -[avbofpd]\n");
			ret = 1;
			goto end;
		}
	}

	if (version) {
		if (SSLeay() == SSLEAY_VERSION_NUMBER) {
			printf("%s\n", SSLeay_version(SSLEAY_VERSION));
		} else {
			printf("%s (Library: %s)\n",
			    OPENSSL_VERSION_TEXT,
			    SSLeay_version(SSLEAY_VERSION));
		}
	}
	if (date)
		printf("%s\n", SSLeay_version(SSLEAY_BUILT_ON));
	if (platform)
		printf("%s\n", SSLeay_version(SSLEAY_PLATFORM));
	if (options) {
		printf("options:  ");
		printf("%s ", BN_options());
#ifndef OPENSSL_NO_RC4
		printf("%s ", RC4_options());
#endif
#ifndef OPENSSL_NO_DES
		printf("%s ", DES_options());
#endif
#ifndef OPENSSL_NO_IDEA
		printf("%s ", idea_options());
#endif
#ifndef OPENSSL_NO_BF
		printf("%s ", BF_options());
#endif
		printf("\n");
	}
	if (cflags)
		printf("%s\n", SSLeay_version(SSLEAY_CFLAGS));
	if (dir)
		printf("%s\n", SSLeay_version(SSLEAY_DIR));
end:

	return (ret);
}
@


1.18
log
@whitespace
@
text
@d1 1
a1 1
/* $OpenBSD: version.c,v 1.17 2014/06/12 15:49:27 deraadt Exp $ */
@


1.17
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d206 1
a206 1
	
@


1.16
log
@Calling signal once to ignore SIGPIPE is sufficient - we do not need to do
this again in each app.

ok miod@@
@
text
@d1 1
a1 1
/* apps/version.c */
@


1.15
log
@Group and sort includes.

Currently "apps.h" needs to be included before any of the openssl headers
and there are several cases where the code depends on headers that are
included by something included by apps.h...

More untangling saved for later on.
@
text
@a146 2
	signal(SIGPIPE, SIG_IGN);

@


1.14
log
@bio_err is initialised in main, hence there is no need to initialise it
in each application (since there is no longer a non-monolithic mode).

In typical OpenSSL fashion, the code is inconsistent and there are multiple
ways that bio_err was initialised - none of them actually checked to see if
the initialisation actually succeeded. Additionally, it is worth noting
that in at least two cases bio_err was also being used before it would have
been initialised.

ok miod@@
@
text
@d115 1
d117 3
d121 3
a123 4
#include <openssl/crypto.h>
#include <openssl/bn.h>
#ifndef OPENSSL_NO_RC4
#include <openssl/rc4.h>
d125 1
d129 1
d133 3
a135 2
#ifndef OPENSSL_NO_BF
#include <openssl/blowfish.h>
a136 1

@


1.13
log
@no no md2
@
text
@a143 4
	if (bio_err == NULL)
		if ((bio_err = BIO_new(BIO_s_file())) != NULL)
			BIO_set_fp(bio_err, stderr, BIO_NOCLOSE | BIO_FP_TEXT);

@


1.12
log
@When OPENSSL_C is not defined, apps_startup becomes a
signal(SIGPIPE, SIG_IGN) and apps_shutdown is a no-op. So just do that
instead.

ok beck@@
@
text
@a118 3
#ifndef OPENSSL_NO_MD2
#include <openssl/md2.h>
#endif
a187 3
#ifndef OPENSSL_NO_MD2
		printf("%s ", MD2_options());
#endif
@


1.11
log
@More KNF.
@
text
@d145 1
a145 1
	apps_startup();
d213 1
a213 1
	apps_shutdown();
@


1.10
log
@Remove MAIN and PROG defines now that we do not compile non-monolithic.

ok tedu@@
@
text
@d138 1
a138 1
int 
d143 1
a143 1
	 dir = 0;
@


1.9
log
@KaboomNF
@
text
@a134 2
#undef PROG
#define PROG	version_main
d136 1
a136 1
int MAIN(int, char **);
d139 1
a139 1
MAIN(int argc, char **argv)
@


1.8
log
@Mostly gut e_os.h:
USE_SOCKETS is unrelated to using sockets, but just pulls in .h files.  It
makes every file buy a kitchen sink, because 11 files forgot to.
EXIT() is really exit(), a gentle surprise
but... OPENSSL_EXIT() is really just return(), because noone compiles the
openssl command non-monolithic anymore
@
text
@d8 1
a8 1
 * 
d15 1
a15 1
 * 
d22 1
a22 1
 * 
d37 1
a37 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d40 1
a40 1
 * 
d52 1
a52 1
 * 
d66 1
a66 1
 *    notice, this list of conditions and the following disclaimer. 
d120 1
a120 1
# include <openssl/md2.h>
d123 1
a123 1
# include <openssl/rc4.h>
d126 1
a126 1
# include <openssl/des.h>
d129 1
a129 1
# include <openssl/idea.h>
d132 1
a132 1
# include <openssl/blowfish.h>
d140 6
a145 4
int MAIN(int argc, char **argv)
	{
	int i,ret=0;
	int cflags=0,version=0,date=0,options=0,platform=0,dir=0;
d150 2
a151 2
		if ((bio_err=BIO_new(BIO_s_file())) != NULL)
			BIO_set_fp(bio_err,stderr,BIO_NOCLOSE|BIO_FP_TEXT);
d153 20
a172 21
	if (argc == 1) version=1;
	for (i=1; i<argc; i++)
		{
		if (strcmp(argv[i],"-v") == 0)
			version=1;	
		else if (strcmp(argv[i],"-b") == 0)
			date=1;
		else if (strcmp(argv[i],"-f") == 0)
			cflags=1;
		else if (strcmp(argv[i],"-o") == 0)
			options=1;
		else if (strcmp(argv[i],"-p") == 0)
			platform=1;
		else if (strcmp(argv[i],"-d") == 0)
			dir=1;
		else if (strcmp(argv[i],"-a") == 0)
			date=version=cflags=options=platform=dir=1;
		else
			{
			BIO_printf(bio_err,"usage:version -[avbofpd]\n");
			ret=1;
a173 1
			}
d175 1
d177 4
a180 8
	if (version)
		{
		if (SSLeay() == SSLEAY_VERSION_NUMBER)
			{
			printf("%s\n",SSLeay_version(SSLEAY_VERSION));
			}
		else
			{
d182 2
a183 3
				OPENSSL_VERSION_TEXT,
				SSLeay_version(SSLEAY_VERSION));
			}
d185 6
a190 4
	if (date)    printf("%s\n",SSLeay_version(SSLEAY_BUILT_ON));
	if (platform) printf("%s\n",SSLeay_version(SSLEAY_PLATFORM));
	if (options) 
		{
d192 1
a192 1
		printf("%s ",BN_options());
d194 1
a194 1
		printf("%s ",MD2_options());
d197 1
a197 1
		printf("%s ",RC4_options());
d200 1
a200 1
		printf("%s ",DES_options());
d203 1
a203 1
		printf("%s ",idea_options());
d206 1
a206 1
		printf("%s ",BF_options());
d209 5
a213 3
		}
	if (cflags)  printf("%s\n",SSLeay_version(SSLEAY_CFLAGS));
	if (dir)  printf("%s\n",SSLeay_version(SSLEAY_DIR));
d216 2
a217 2
	return(ret);
	}
@


1.7
log
@resolve conflicts
@
text
@d216 1
a216 1
	OPENSSL_EXIT(ret);
@


1.6
log
@resolve conflicts
@
text
@d170 1
a170 1
			BIO_printf(bio_err,"usage:version -[avbofp]\n");
@


1.5
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d118 1
d176 13
a188 1
	if (version) printf("%s\n",SSLeay_version(SSLEAY_VERSION));
@


1.4
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d203 1
a203 1
	EXIT(ret);
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d58 53
d118 15
d142 1
a142 1
	int cflags=0,version=0,date=0,options=0,platform=0;
d163 2
d166 1
a166 1
			date=version=cflags=options=platform=1;
d182 1
a182 1
#ifndef NO_MD2
d185 1
a185 1
#ifndef NO_RC4
d188 2
a189 2
#ifndef NO_DES
		printf("%s ",des_options());
d191 1
a191 1
#ifndef NO_IDEA
d194 1
a194 1
#ifndef NO_BF
d200 1
d202 1
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d69 2
@


1.1
log
@Initial revision
@
text
@d63 2
a64 2
#include "evp.h"
#include "crypto.h"
d69 1
a69 3
int MAIN(argc, argv)
int argc;
char **argv;
d72 1
a72 1
	int cflags=0,version=0,date=0,options=0;
d91 2
d94 1
a94 1
			date=version=cflags=options=1;
d97 1
a97 1
			BIO_printf(bio_err,"usage:version [-a] [-v] [-b] [-o] [-f]\n");
d105 1
d108 1
a108 1
		printf("options:");
d122 1
a122 1
#ifndef NO_BLOWFISH
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@a57 53
/* ====================================================================
 * Copyright (c) 1998-2001 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */
d63 2
a64 17
#include <openssl/evp.h>
#include <openssl/crypto.h>
#ifndef OPENSSL_NO_MD2
# include <openssl/md2.h>
#endif
#ifndef OPENSSL_NO_RC4
# include <openssl/rc4.h>
#endif
#ifndef OPENSSL_NO_DES
# include <openssl/des.h>
#endif
#ifndef OPENSSL_NO_IDEA
# include <openssl/idea.h>
#endif
#ifndef OPENSSL_NO_BF
# include <openssl/blowfish.h>
#endif
d69 3
a71 3
int MAIN(int, char **);

int MAIN(int argc, char **argv)
d74 1
a74 1
	int cflags=0,version=0,date=0,options=0,platform=0,dir=0;
a92 4
		else if (strcmp(argv[i],"-p") == 0)
			platform=1;
		else if (strcmp(argv[i],"-d") == 0)
			dir=1;
d94 1
a94 1
			date=version=cflags=options=platform=dir=1;
d97 1
a97 1
			BIO_printf(bio_err,"usage:version -[avbofp]\n");
a104 1
	if (platform) printf("%s\n",SSLeay_version(SSLEAY_PLATFORM));
d107 1
a107 1
		printf("options:  ");
d109 1
a109 1
#ifndef OPENSSL_NO_MD2
d112 1
a112 1
#ifndef OPENSSL_NO_RC4
d115 2
a116 2
#ifndef OPENSSL_NO_DES
		printf("%s ",DES_options());
d118 1
a118 1
#ifndef OPENSSL_NO_IDEA
d121 1
a121 1
#ifndef OPENSSL_NO_BF
a126 1
	if (dir)  printf("%s\n",SSLeay_version(SSLEAY_DIR));
a127 1
	apps_shutdown();
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@d203 1
a203 1
	OPENSSL_EXIT(ret);
@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@a117 1
#include <openssl/bn.h>
d175 1
a175 13
	if (version)
		{
		if (SSLeay() == SSLEAY_VERSION_NUMBER)
			{
			printf("%s\n",SSLeay_version(SSLEAY_VERSION));
			}
		else
			{
			printf("%s (Library: %s)\n",
				OPENSSL_VERSION_TEXT,
				SSLeay_version(SSLEAY_VERSION));
			}
		}
@


1.1.1.5
log
@import openssl-0.9.8j
@
text
@d170 1
a170 1
			BIO_printf(bio_err,"usage:version -[avbofpd]\n");
@


