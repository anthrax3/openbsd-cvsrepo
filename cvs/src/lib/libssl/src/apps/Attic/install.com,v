head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.16
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.12
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.10
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.8
	OPENBSD_5_0:1.2.0.4
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.2
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.1.0.46
	OPENBSD_4_8_BASE:1.1
	OPENBSD_4_7:1.1.0.42
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.44
	OPENBSD_4_6_BASE:1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.0.40
	OPENBSD_4_5_BASE:1.1
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.1
	OPENBSD_4_4:1.1.0.38
	OPENBSD_4_4_BASE:1.1
	OPENBSD_4_3:1.1.0.36
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.34
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.32
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.30
	OPENBSD_4_0_BASE:1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.0.28
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.26
	OPENBSD_3_8_BASE:1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.1.0.24
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.22
	OPENBSD_3_6_BASE:1.1
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.1.0.20
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.18
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.16
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.14
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.12
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.10
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.8
	OPENBSD_2_9_BASE:1.1
	OPENBSD_2_8:1.1.0.6
	OPENBSD_2_8_BASE:1.1
	OPENBSD_2_7:1.1.0.4
	OPENBSD_2_7_BASE:1.1
	OPENBSD_2_6:1.1.0.2
	OPENBSD_2_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.13.15.25.28;	author miod;	state dead;
branches;
next	1.2;

1.2
date	2010.10.01.22.58.50;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.35.16;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.49.32;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.01;	author djm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@$! INSTALL.COM -- Installs the files in a given directory tree
$!
$! Author: Richard Levitte <richard@@levitte.org>
$! Time of creation: 22-MAY-1998 10:13
$!
$! P1	root of the directory tree
$!
$
$	IF P1 .EQS. ""
$	THEN
$	    WRITE SYS$OUTPUT "First argument missing."
$	    WRITE SYS$OUTPUT -
		  "Should be the directory where you want things installed."
$	    EXIT
$	ENDIF
$
$	IF (F$GETSYI("CPU").LT.128)
$	THEN
$	    ARCH := VAX
$	ELSE
$	    ARCH = F$EDIT( F$GETSYI( "ARCH_NAME"), "UPCASE")
$	    IF (ARCH .EQS. "") THEN ARCH = "UNK"
$	ENDIF
$
$	ROOT = F$PARSE(P1,"[]A.;0",,,"SYNTAX_ONLY,NO_CONCEAL") - "A.;0"
$	ROOT_DEV = F$PARSE(ROOT,,,"DEVICE","SYNTAX_ONLY")
$	ROOT_DIR = F$PARSE(ROOT,,,"DIRECTORY","SYNTAX_ONLY") -
		   - "[000000." - "][" - "[" - "]"
$	ROOT = ROOT_DEV + "[" + ROOT_DIR
$
$	DEFINE/NOLOG WRK_SSLROOT 'ROOT'.] /TRANS=CONC
$	DEFINE/NOLOG WRK_SSLEXE WRK_SSLROOT:['ARCH'_EXE]
$
$	IF F$PARSE("WRK_SSLROOT:[000000]") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLROOT:[000000]
$	IF F$PARSE("WRK_SSLEXE:") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLEXE:
$
$	EXE := openssl
$
$	EXE_DIR := [-.'ARCH'.EXE.APPS]
$
$	I = 0
$ LOOP_EXE: 
$	E = F$EDIT(F$ELEMENT(I, ",", EXE),"TRIM")
$	I = I + 1
$	IF E .EQS. "," THEN GOTO LOOP_EXE_END
$	SET NOON
$	IF F$SEARCH(EXE_DIR+E+".EXE") .NES. ""
$	THEN
$	  COPY 'EXE_DIR''E'.EXE WRK_SSLEXE:'E'.EXE/log
$	  SET FILE/PROT=W:RE WRK_SSLEXE:'E'.EXE
$	ENDIF
$	SET ON
$	GOTO LOOP_EXE
$ LOOP_EXE_END:
$
$	SET NOON
$	COPY CA.COM WRK_SSLEXE:CA.COM/LOG
$	SET FILE/PROT=W:RE WRK_SSLEXE:CA.COM
$	COPY OPENSSL-VMS.CNF WRK_SSLROOT:[000000]OPENSSL.CNF/LOG
$	SET FILE/PROT=W:R WRK_SSLROOT:[000000]OPENSSL.CNF
$	SET ON
$
$	EXIT
@


1.2
log
@resolve conflicts, fix local changes
@
text
@@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d8 1
d12 2
a13 1
$	    WRITE SYS$OUTPUT "Should be the directory where you want things installed."
d17 8
d32 1
a32 3
$	DEFINE/NOLOG WRK_SSLVEXE WRK_SSLROOT:[VAX_EXE]
$	DEFINE/NOLOG WRK_SSLAEXE WRK_SSLROOT:[ALPHA_EXE]
$	DEFINE/NOLOG WRK_SSLLIB WRK_SSLROOT:[LIB]
d36 2
a37 6
$	IF F$PARSE("WRK_SSLVEXE:") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLVEXE:
$	IF F$PARSE("WRK_SSLAEXE:") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLAEXE:
$	IF F$PARSE("WRK_SSLLIB:") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLLIB:
d41 1
a41 2
$	VEXE_DIR := [-.VAX.EXE.APPS]
$	AEXE_DIR := [-.AXP.EXE.APPS]
d49 1
a49 6
$	IF F$SEARCH(VEXE_DIR+E+".EXE") .NES. ""
$	THEN
$	  COPY 'VEXE_DIR''E'.EXE WRK_SSLVEXE:'E'.EXE/log
$	  SET FILE/PROT=W:RE WRK_SSLVEXE:'E'.EXE
$	ENDIF
$	IF F$SEARCH(AEXE_DIR+E+".EXE") .NES. ""
d51 2
a52 2
$	  COPY 'AEXE_DIR''E'.EXE WRK_SSLAEXE:'E'.EXE/log
$	  SET FILE/PROT=W:RE WRK_SSLAEXE:'E'.EXE
d59 2
a60 4
$	COPY CA.COM WRK_SSLAEXE:CA.COM/LOG
$	SET FILE/PROT=W:RE WRK_SSLAEXE:CA.COM
$	COPY CA.COM WRK_SSLVEXE:CA.COM/LOG
$	SET FILE/PROT=W:RE WRK_SSLVEXE:CA.COM
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@a7 1
$
d11 1
a11 2
$	    WRITE SYS$OUTPUT -
		  "Should be the directory where you want things installed."
a14 8
$	IF (F$GETSYI("CPU").LT.128)
$	THEN
$	    ARCH := VAX
$	ELSE
$	    ARCH = F$EDIT( F$GETSYI( "ARCH_NAME"), "UPCASE")
$	    IF (ARCH .EQS. "") THEN ARCH = "UNK"
$	ENDIF
$
d22 3
a24 1
$	DEFINE/NOLOG WRK_SSLEXE WRK_SSLROOT:['ARCH'_EXE]
d28 6
a33 2
$	IF F$PARSE("WRK_SSLEXE:") .EQS. "" THEN -
	   CREATE/DIR/LOG WRK_SSLEXE:
d37 2
a38 1
$	EXE_DIR := [-.'ARCH'.EXE.APPS]
d46 6
a51 1
$	IF F$SEARCH(EXE_DIR+E+".EXE") .NES. ""
d53 2
a54 2
$	  COPY 'EXE_DIR''E'.EXE WRK_SSLEXE:'E'.EXE/log
$	  SET FILE/PROT=W:RE WRK_SSLEXE:'E'.EXE
d61 4
a64 2
$	COPY CA.COM WRK_SSLEXE:CA.COM/LOG
$	SET FILE/PROT=W:RE WRK_SSLEXE:CA.COM
@


