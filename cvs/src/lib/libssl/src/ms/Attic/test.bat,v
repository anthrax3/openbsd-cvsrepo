head	1.11;
access;
symbols
	OPENBSD_5_5:1.10.0.16
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.12
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.10
	OPENBSD_5_3_BASE:1.10
	openssl_1_0_1_c:1.1.1.7
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.8
	openssl_1_0_0_f:1.1.1.7
	openssl_1_0_0_e:1.1.1.7
	OPENBSD_5_0:1.10.0.4
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.2
	OPENBSD_4_9_BASE:1.10
	openssh_1_0_0_a:1.1.1.7
	OPENBSD_4_8:1.9.0.8
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.4
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.9.0.6
	OPENBSD_4_6_BASE:1.9
	openssl_0_9_8_k:1.1.1.6
	OPENBSD_4_5:1.9.0.2
	OPENBSD_4_5_BASE:1.9
	openssl_0_9_8_j:1.1.1.6
	openssl_0_9_8_h:1.1.1.5
	pre_openssl_0_9_8h:1.7
	OPENBSD_4_4:1.7.0.14
	OPENBSD_4_4_BASE:1.7
	OPENBSD_4_3:1.7.0.12
	OPENBSD_4_3_BASE:1.7
	OPENBSD_4_2:1.7.0.10
	OPENBSD_4_2_BASE:1.7
	OPENBSD_4_1:1.7.0.8
	OPENBSD_4_1_BASE:1.7
	OPENBSD_4_0:1.7.0.6
	OPENBSD_4_0_BASE:1.7
	openssl_0_9_7j:1.1.1.4
	openssl:1.1.1
	OPENBSD_3_9:1.7.0.4
	OPENBSD_3_9_BASE:1.7
	OPENBSD_3_8:1.7.0.2
	OPENBSD_3_8_BASE:1.7
	OPENSSL_0_9_7G:1.1.1.4
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENSSL_0_9_7D:1.1.1.3
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENSSL_0_9_7C:1.1.1.3
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENSSL_0_9_7B:1.1.1.3
	OPENBSD_3_3:1.5.0.8
	OPENBSD_3_3_BASE:1.5
	OPENBSD_3_2:1.5.0.6
	OPENBSD_3_2_BASE:1.5
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.5.0.4
	OPENBSD_3_1_BASE:1.5
	OPENBSD_3_0:1.5.0.2
	OPENBSD_3_0_BASE:1.5
	OPENBSD_2_9:1.4.0.6
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.4
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.4.0.2
	OPENBSD_2_7_BASE:1.4
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@:: @;


1.11
date	2014.04.13.15.25.34;	author miod;	state dead;
branches;
next	1.10;

1.10
date	2010.10.01.22.59.00;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.09.12.15.52;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.06.12.17.53;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.29.05.39.30;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.12.02.18.39;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.22.00.03.36;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.04.15.06.18.48;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.13.11;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.12;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.32;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.32;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.30;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.36.34;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.04.29.05.37.26;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.06.12.15.51;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2009.01.09.12.14.05;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2010.10.01.22.54.15;	author djm;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@@@echo off

set test=..\ms
set opath=%PATH%
PATH=..\ms;%PATH%
set OPENSSL_CONF=..\apps\openssl.cnf

rem run this from inside the bin directory

echo rsa_test
rsa_test
if errorlevel 1 goto done

echo destest
destest
if errorlevel 1 goto done

echo ideatest
ideatest
if errorlevel 1 goto done

echo bftest
bftest
if errorlevel 1 goto done

echo shatest
shatest
if errorlevel 1 goto done

echo sha1test
sha1test
if errorlevel 1 goto done

echo md5test
md5test
if errorlevel 1 goto done

echo rc2test
rc2test
if errorlevel 1 goto done

echo rc4test
rc4test
if errorlevel 1 goto done

echo randtest
randtest
if errorlevel 1 goto done

echo dhtest
dhtest
if errorlevel 1 goto done

echo exptest
exptest
if errorlevel 1 goto done

echo dsatest
dsatest
if errorlevel 1 goto done

echo ectest
ectest
if errorlevel 1 goto done

echo testenc
call %test%\testenc openssl
if errorlevel 1 goto done

echo testpem
call %test%\testpem openssl
if errorlevel 1 goto done

echo testss
call %test%\testss openssl
if errorlevel 1 goto done

set SSL_TEST=ssltest -key keyU.ss -cert certU.ss -c_key keyU.ss -c_cert certU.ss -CAfile certCA.ss

echo test sslv2
ssltest -ssl2
if errorlevel 1 goto done

echo test sslv2 with server authentication
%SSL_TEST% -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication
%SSL_TEST% -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication
%SSL_TEST% -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3
ssltest -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication
%SSL_TEST% -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication
%SSL_TEST% -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication
%SSL_TEST% -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication
%SSL_TEST% -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication
%SSL_TEST% -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2 via BIO pair
ssltest -bio_pair -ssl2
if errorlevel 1 goto done

echo test sslv2/sslv3 with 1024 bit DHE via BIO pair
ssltest -bio_pair -dhe1024dsa -v
if errorlevel 1 goto done

echo test sslv2 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3 via BIO pair
ssltest -bio_pair -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication  via BIO pair
%SSL_TEST% -bio_pair -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 via BIO pair
ssltest -bio_pair
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -bio_pair -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication via BIO pair
%SSL_TEST% -bio_pair -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -server_auth -client_auth
if errorlevel 1 goto done

echo passed all tests
goto end
:done
echo problems.....
:end
PATH=%opath%
@


1.10
log
@resolve conflicts, fix local changes
@
text
@@


1.9
log
@resolve conflicts
@
text
@a37 4
echo md2test
md2test
if errorlevel 1 goto done

a178 1

@


1.8
log
@resolve conflicts
@
text
@d1 190
a190 195
@@echo off

set test=..\ms
set opath=%PATH%
PATH=..\ms;%PATH%
set OPENSSL_CONF=..\apps\openssl.cnf

rem run this from inside the bin directory

echo rsa_test
rsa_test
if errorlevel 1 goto done

echo destest
destest
if errorlevel 1 goto done

echo ideatest
ideatest
if errorlevel 1 goto done

echo bftest
bftest
if errorlevel 1 goto done

echo shatest
shatest
if errorlevel 1 goto done

echo sha1test
sha1test
if errorlevel 1 goto done

echo md5test
md5test
if errorlevel 1 goto done

echo md2test
md2test
if errorlevel 1 goto done

echo rc2test
rc2test
if errorlevel 1 goto done

echo rc4test
rc4test
if errorlevel 1 goto done

echo randtest
randtest
if errorlevel 1 goto done

echo dhtest
dhtest
if errorlevel 1 goto done

echo exptest
exptest
if errorlevel 1 goto done

echo dsatest
dsatest
if errorlevel 1 goto done

echo ectest
ectest
if errorlevel 1 goto done

echo testenc
call %test%\testenc openssl
if errorlevel 1 goto done

echo testpem
call %test%\testpem openssl
if errorlevel 1 goto done

echo verify
copy ..\certs\*.pem cert.tmp >nul
openssl verify -CAfile cert.tmp ..\certs\*.pem

echo testss
call %test%\testss openssl
if errorlevel 1 goto done

set SSL_TEST=ssltest -key keyU.ss -cert certU.ss -c_key keyU.ss -c_cert certU.ss -CAfile certCA.ss

echo test sslv2
ssltest -ssl2
if errorlevel 1 goto done

echo test sslv2 with server authentication
%SSL_TEST% -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication
%SSL_TEST% -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication
%SSL_TEST% -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3
ssltest -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication
%SSL_TEST% -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication
%SSL_TEST% -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication
%SSL_TEST% -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication
%SSL_TEST% -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication
%SSL_TEST% -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2 via BIO pair
ssltest -bio_pair -ssl2
if errorlevel 1 goto done

echo test sslv2/sslv3 with 1024 bit DHE via BIO pair
ssltest -bio_pair -dhe1024dsa -v
if errorlevel 1 goto done

echo test sslv2 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3 via BIO pair
ssltest -bio_pair -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication  via BIO pair
%SSL_TEST% -bio_pair -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 via BIO pair
ssltest -bio_pair
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -bio_pair -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication via BIO pair
%SSL_TEST% -bio_pair -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -server_auth -client_auth
if errorlevel 1 goto done

del cert.tmp

echo passed all tests
goto end
:done
echo problems.....
:end
PATH=%opath%
@


1.7
log
@resolve conflicts
@
text
@a41 4
echo mdc2test
mdc2test
if errorlevel 1 goto done

@


1.6
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d90 2
d97 1
a97 1
ssltest -ssl2 -server_auth -CAfile cert.tmp
d101 1
a101 1
ssltest -ssl2 -client_auth -CAfile cert.tmp
d105 1
a105 1
ssltest -ssl2 -server_auth -client_auth -CAfile cert.tmp
d113 1
a113 1
ssltest -ssl3 -server_auth -CAfile cert.tmp
d117 1
a117 1
ssltest -ssl3 -client_auth -CAfile cert.tmp
d121 1
a121 1
ssltest -ssl3 -server_auth -client_auth -CAfile cert.tmp
d129 1
a129 1
ssltest -server_auth -CAfile cert.tmp
d133 1
a133 1
ssltest -client_auth -CAfile cert.tmp
d137 1
a137 1
ssltest -server_auth -client_auth -CAfile cert.tmp
d149 1
a149 1
ssltest -bio_pair -ssl2 -server_auth -CAfile cert.tmp
d153 1
a153 1
ssltest -bio_pair -ssl2 -client_auth -CAfile cert.tmp
d157 1
a157 1
ssltest -bio_pair -ssl2 -server_auth -client_auth -CAfile cert.tmp
d165 1
a165 1
ssltest -bio_pair -ssl3 -server_auth -CAfile cert.tmp
d169 1
a169 1
ssltest -bio_pair -ssl3 -client_auth -CAfile cert.tmp
d173 1
a173 1
ssltest -bio_pair -ssl3 -server_auth -client_auth -CAfile cert.tmp
d177 1
a177 1
ssltest
d181 1
a181 1
ssltest -bio_pair -server_auth -CAfile cert.tmp
d185 1
a185 1
ssltest -bio_pair -client_auth -CAfile cert.tmp
d189 1
a189 1
ssltest -bio_pair -server_auth -client_auth -CAfile cert.tmp
@


1.5
log
@openssl-engine-0.9.6a merge
@
text
@d70 4
@


1.4
log
@OpenSSL 0.9.5a merge
@
text
@d1 1
a1 1
@@echo=off
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d139 1
a139 1
ssltest -bio_pair -dhe1024 -v
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d10 2
a11 2
echo rsa_oaep_test
rsa_oaep_test
d136 4
@


1.1
log
@Initial revision
@
text
@d1 189
a189 134
@@echo=off

set test=..\ms

rem run this from inside the bin directory

echo destest
destest
if errorlevel 1 goto done

echo ideatest
ideatest
if errorlevel 1 goto done

echo bftest
bftest
if errorlevel 1 goto done

echo shatest
shatest
if errorlevel 1 goto done

echo sha1test
sha1test
if errorlevel 1 goto done

echo md5test
md5test
if errorlevel 1 goto done

echo md2test
md2test
if errorlevel 1 goto done

echo mdc2test
mdc2test
if errorlevel 1 goto done

echo rc2test
rc2test
if errorlevel 1 goto done

echo rc4test
rc4test
if errorlevel 1 goto done

echo randtest
randtest
if errorlevel 1 goto done

echo dhtest
dhtest
if errorlevel 1 goto done

echo exptest
exptest
if errorlevel 1 goto done

echo dsatest
dsatest
if errorlevel 1 goto done

echo testenc
call %test%\testenc ssleay
if errorlevel 1 goto done

echo testpem
call %test%\testpem ssleay
if errorlevel 1 goto done

echo verify
copy ..\certs\*.pem cert.tmp >nul
ssleay verify -CAfile cert.tmp ..\certs\*.pem

echo testss
call %test%\testss ssleay
if errorlevel 1 goto done

echo test sslv2
ssltest -ssl2
if errorlevel 1 goto done

echo test sslv2 with server authentication
ssltest -ssl2 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with client authentication 
ssltest -ssl2 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication
ssltest -ssl2 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3
ssltest -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication
ssltest -ssl3 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with client authentication 
ssltest -ssl3 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication
ssltest -ssl3 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
ssltest -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication 
ssltest -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication
ssltest -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done


del cert.tmp

echo passed all tests
goto end
:done
echo problems.....
:end
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d1 134
a134 193
@@echo off

set test=..\ms
set opath=%PATH%
PATH=..\ms;%PATH%
set OPENSSL_CONF=..\apps\openssl.cnf

rem run this from inside the bin directory

echo rsa_test
rsa_test
if errorlevel 1 goto done

echo destest
destest
if errorlevel 1 goto done

echo ideatest
ideatest
if errorlevel 1 goto done

echo bftest
bftest
if errorlevel 1 goto done

echo shatest
shatest
if errorlevel 1 goto done

echo sha1test
sha1test
if errorlevel 1 goto done

echo md5test
md5test
if errorlevel 1 goto done

echo md2test
md2test
if errorlevel 1 goto done

echo mdc2test
mdc2test
if errorlevel 1 goto done

echo rc2test
rc2test
if errorlevel 1 goto done

echo rc4test
rc4test
if errorlevel 1 goto done

echo randtest
randtest
if errorlevel 1 goto done

echo dhtest
dhtest
if errorlevel 1 goto done

echo exptest
exptest
if errorlevel 1 goto done

echo dsatest
dsatest
if errorlevel 1 goto done

echo testenc
call %test%\testenc openssl
if errorlevel 1 goto done

echo testpem
call %test%\testpem openssl
if errorlevel 1 goto done

echo verify
copy ..\certs\*.pem cert.tmp >nul
openssl verify -CAfile cert.tmp ..\certs\*.pem

echo testss
call %test%\testss openssl
if errorlevel 1 goto done

echo test sslv2
ssltest -ssl2
if errorlevel 1 goto done

echo test sslv2 with server authentication
ssltest -ssl2 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with client authentication
ssltest -ssl2 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication
ssltest -ssl2 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3
ssltest -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication
ssltest -ssl3 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with client authentication
ssltest -ssl3 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication
ssltest -ssl3 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
ssltest -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication
ssltest -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication
ssltest -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 via BIO pair
ssltest -bio_pair -ssl2
if errorlevel 1 goto done

echo test sslv2/sslv3 with 1024 bit DHE via BIO pair
ssltest -bio_pair -dhe1024dsa -v
if errorlevel 1 goto done

echo test sslv2 with server authentication via BIO pair
ssltest -bio_pair -ssl2 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with client authentication via BIO pair
ssltest -bio_pair -ssl2 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication via BIO pair
ssltest -bio_pair -ssl2 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 via BIO pair
ssltest -bio_pair -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication via BIO pair
ssltest -bio_pair -ssl3 -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with client authentication  via BIO pair
ssltest -bio_pair -ssl3 -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication via BIO pair
ssltest -bio_pair -ssl3 -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 via BIO pair
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
ssltest -bio_pair -server_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication via BIO pair
ssltest -bio_pair -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication via BIO pair
ssltest -bio_pair -server_auth -client_auth -CAfile cert.tmp
if errorlevel 1 goto done

del cert.tmp

echo passed all tests
goto end
:done
echo problems.....
:end
PATH=%opath%
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@a69 4
echo ectest
ectest
if errorlevel 1 goto done

@


1.1.1.4
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a89 2
set SSL_TEST=ssltest -key keyU.ss -cert certU.ss -c_key keyU.ss -c_cert certU.ss -CAfile certCA.ss

d95 1
a95 1
%SSL_TEST% -ssl2 -server_auth
d99 1
a99 1
%SSL_TEST% -ssl2 -client_auth
d103 1
a103 1
%SSL_TEST% -ssl2 -server_auth -client_auth
d111 1
a111 1
%SSL_TEST% -ssl3 -server_auth
d115 1
a115 1
%SSL_TEST% -ssl3 -client_auth
d119 1
a119 1
%SSL_TEST% -ssl3 -server_auth -client_auth
d127 1
a127 1
%SSL_TEST% -server_auth
d131 1
a131 1
%SSL_TEST% -client_auth
d135 1
a135 1
%SSL_TEST% -server_auth -client_auth
d147 1
a147 1
%SSL_TEST% -bio_pair -ssl2 -server_auth
d151 1
a151 1
%SSL_TEST% -bio_pair -ssl2 -client_auth
d155 1
a155 1
%SSL_TEST% -bio_pair -ssl2 -server_auth -client_auth
d163 1
a163 1
%SSL_TEST% -bio_pair -ssl3 -server_auth
d167 1
a167 1
%SSL_TEST% -bio_pair -ssl3 -client_auth
d171 1
a171 1
%SSL_TEST% -bio_pair -ssl3 -server_auth -client_auth
d175 1
a175 1
ssltest -bio_pair
d179 1
a179 1
%SSL_TEST% -bio_pair -server_auth
d183 1
a183 1
%SSL_TEST% -bio_pair -client_auth
d187 1
a187 1
%SSL_TEST% -bio_pair -server_auth -client_auth
@


1.1.1.5
log
@import of OpenSSL 0.9.8h
@
text
@d42 4
@


1.1.1.6
log
@import openssl-0.9.8j
@
text
@d1 195
a195 190
@@echo off

set test=..\ms
set opath=%PATH%
PATH=..\ms;%PATH%
set OPENSSL_CONF=..\apps\openssl.cnf

rem run this from inside the bin directory

echo rsa_test
rsa_test
if errorlevel 1 goto done

echo destest
destest
if errorlevel 1 goto done

echo ideatest
ideatest
if errorlevel 1 goto done

echo bftest
bftest
if errorlevel 1 goto done

echo shatest
shatest
if errorlevel 1 goto done

echo sha1test
sha1test
if errorlevel 1 goto done

echo md5test
md5test
if errorlevel 1 goto done

echo md2test
md2test
if errorlevel 1 goto done

echo rc2test
rc2test
if errorlevel 1 goto done

echo rc4test
rc4test
if errorlevel 1 goto done

echo randtest
randtest
if errorlevel 1 goto done

echo dhtest
dhtest
if errorlevel 1 goto done

echo exptest
exptest
if errorlevel 1 goto done

echo dsatest
dsatest
if errorlevel 1 goto done

echo ectest
ectest
if errorlevel 1 goto done

echo testenc
call %test%\testenc openssl
if errorlevel 1 goto done

echo testpem
call %test%\testpem openssl
if errorlevel 1 goto done

echo testss
call %test%\testss openssl
if errorlevel 1 goto done

set SSL_TEST=ssltest -key keyU.ss -cert certU.ss -c_key keyU.ss -c_cert certU.ss -CAfile certCA.ss

echo test sslv2
ssltest -ssl2
if errorlevel 1 goto done

echo test sslv2 with server authentication
%SSL_TEST% -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication
%SSL_TEST% -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication
%SSL_TEST% -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3
ssltest -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication
%SSL_TEST% -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication
%SSL_TEST% -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication
%SSL_TEST% -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3
ssltest
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication
%SSL_TEST% -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication
%SSL_TEST% -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2 via BIO pair
ssltest -bio_pair -ssl2
if errorlevel 1 goto done

echo test sslv2/sslv3 with 1024 bit DHE via BIO pair
ssltest -bio_pair -dhe1024dsa -v
if errorlevel 1 goto done

echo test sslv2 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth
if errorlevel 1 goto done

echo test sslv2 with client authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -client_auth
if errorlevel 1 goto done

echo test sslv2 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl2 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv3 via BIO pair
ssltest -bio_pair -ssl3
if errorlevel 1 goto done

echo test sslv3 with server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth
if errorlevel 1 goto done

echo test sslv3 with client authentication  via BIO pair
%SSL_TEST% -bio_pair -ssl3 -client_auth
if errorlevel 1 goto done

echo test sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -ssl3 -server_auth -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 via BIO pair
ssltest -bio_pair
if errorlevel 1 goto done

echo test sslv2/sslv3 with server authentication
%SSL_TEST% -bio_pair -server_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with client authentication via BIO pair
%SSL_TEST% -bio_pair -client_auth
if errorlevel 1 goto done

echo test sslv2/sslv3 with both client and server authentication via BIO pair
%SSL_TEST% -bio_pair -server_auth -client_auth
if errorlevel 1 goto done


echo passed all tests
goto end
:done
echo problems.....
:end
PATH=%opath%
@


1.1.1.7
log
@import OpenSSL-1.0.0a
@
text
@d38 4
d183 1
@


