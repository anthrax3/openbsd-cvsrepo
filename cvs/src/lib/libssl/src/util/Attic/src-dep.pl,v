head	1.3;
access;
symbols
	butholakala:1.2
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.2.0.62
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.58
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.56
	OPENBSD_5_3_BASE:1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.2.0.52
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.54
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.2.0.50
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.48
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.2.0.46
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.42
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.44
	OPENBSD_4_6_BASE:1.2
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.2.0.40
	OPENBSD_4_5_BASE:1.2
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.38
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.36
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.34
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.32
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.30
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.28
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.26
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.24
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.22
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.2.0.20
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.2.0.18
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.2.0.16
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2014.04.17.19.20.52;	author afresh1;	state dead;
branches;
next	1.2;

1.2
date	99.09.29.04.37.42;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.58;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.58;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.51;	author markus;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove unused ssl utils

This code is the reason perl has a name as a write only language.

ok deraadt miod
@
text
@#!/usr/local/bin/perl

# we make up an array of
# $file{function_name}=filename;
# $unres{filename}="func1 func2 ...."
$debug=1;
#$nm_func="parse_linux";
$nm_func="parse_solaris";

foreach (@@ARGV)
	{
	&$nm_func($_);
	}

foreach $file (sort keys %unres)
	{
	@@a=split(/\s+/,$unres{$file});
	%ff=();
	foreach $func (@@a)
		{
		$f=$file{$func};
		$ff{$f}=1 if $f ne "";
		}

	foreach $a (keys %ff)
		{ $we_need{$file}.="$a "; }
	}

foreach $file (sort keys %we_need)
	{
#	print "	$file $we_need{$file}\n";
	foreach $bit (split(/\s+/,$we_need{$file}))
		{ push(@@final,&walk($bit)); }

	foreach (@@final) { $fin{$_}=1; }
	@@final="";
	foreach (sort keys %fin)
		{ push(@@final,$_); }

	print "$file: @@final\n";
	}

sub walk
	{
	local($f)=@@_;
	local(@@a,%seen,@@ret,$r);

	@@ret="";
	$f =~ s/^\s+//;
	$f =~ s/\s+$//;
	return "" if ($f =~ "^\s*$");

	return(split(/\s/,$done{$f})) if defined ($done{$f});

	return if $in{$f} > 0;
	$in{$f}++;
	push(@@ret,$f);
	foreach $r (split(/\s+/,$we_need{$f}))
		{
		push(@@ret,&walk($r));
		}
	$in{$f}--;
	$done{$f}=join(" ",@@ret);
	return(@@ret);
	}

sub parse_linux
	{
	local($name)=@@_;

	open(IN,"nm $name|") || die "unable to run 'nn $name':$!\n";
	while (<IN>)
		{
		chop;
		next if /^\s*$/;
		if (/^[^[](.*):$/)
			{
			$file=$1;
			$file="$1.c" if /\[(.*).o\]/;
			print STDERR "$file\n";
			$we_need{$file}=" ";
			next;
			}

		@@a=split(/\s*\|\s*/);
		next unless $#a == 7;
		next unless $a[4] eq "GLOB";
		if ($a[6] eq "UNDEF")
			{
			$unres{$file}.=$a[7]." ";
			}
		else
			{
			if ($file{$a[7]} ne "")
				{
				print STDERR "duplicate definition of $a[7],\n$file{$a[7]} and $file \n";
				}
			else
				{
				$file{$a[7]}=$file;
				}
			}
		}
	close(IN);
	}

sub parse_solaris
	{
	local($name)=@@_;

	open(IN,"nm $name|") || die "unable to run 'nn $name':$!\n";
	while (<IN>)
		{
		chop;
		next if /^\s*$/;
		if (/^(\S+):$/)
			{
			$file=$1;
			#$file="$1.c" if $file =~ /^(.*).o$/;
			print STDERR "$file\n";
			$we_need{$file}=" ";
			next;
			}
		@@a=split(/\s*\|\s*/);
		next unless $#a == 7;
		next unless $a[4] eq "GLOB";
		if ($a[6] eq "UNDEF")
			{
			$unres{$file}.=$a[7]." ";
			print STDERR "$file needs $a[7]\n" if $debug;
			}
		else
			{
			if ($file{$a[7]} ne "")
				{
				print STDERR "duplicate definition of $a[7],\n$file{$a[7]} and $file \n";
				}
			else
				{
				$file{$a[7]}=$file;
				print STDERR "$file has $a[7]\n" if $debug;
				}
			}
		}
	close(IN);
	}

@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/usr/bin/perl
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d1 1
a1 1
#!/usr/local/bin/perl
@

