head	1.5;
access;
symbols
	butholakala:1.4
	openssl_1_0_1_g:1.1.1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	openssl_1_0_1_c:1.1.1.4
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.8
	openssl_1_0_0_f:1.1.1.4
	openssl_1_0_0_e:1.1.1.4
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4
	openssh_1_0_0_a:1.1.1.4
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.38
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.36
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.34
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.32
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.30
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.28
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.26
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.24
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.22
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.2.0.20
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.2.0.18
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.2.0.16
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.14
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_3_1:1.2.0.12
	OPENBSD_3_1_BASE:1.2
	OPENBSD_3_0:1.2.0.10
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.8
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.5
date	2014.04.17.19.20.52;	author afresh1;	state dead;
branches;
next	1.4;

1.4
date	2010.10.01.22.59.01;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.06.12.17.54;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.37.40;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.57;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.57;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.51.47;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.53;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2010.10.01.22.54.17;	author djm;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Remove unused ssl utils

This code is the reason perl has a name as a write only language.

ok deraadt miod
@
text
@#!/usr/local/bin/perl
#
# This is just a quick script to scan for cases where the 'error'
# function name in a XXXerr() macro is wrong.
# 
# Run in the top level by going
# perl util/ck_errf.pl */*.c */*/*.c
#

my $err_strict = 0;
my $bad = 0;

foreach $file (@@ARGV)
	{
	if ($file eq "-strict")
		{
		$err_strict = 1;
		next;
		}
	open(IN,"<$file") || die "unable to open $file\n";
	$func="";
	while (<IN>)
		{
		if (!/;$/ && /^([a-zA-Z].*[\s*])?([A-Za-z_0-9]+)\(.*[),]/)
			{
			/^([^()]*(\([^()]*\)[^()]*)*)\(/;
			$1 =~ /([A-Za-z_0-9]*)$/;
			$func = $1;
			$func =~ tr/A-Z/a-z/;
			}
		if (/([A-Z0-9]+)err\(([^,]+)/ && ! /ckerr_ignore/)
			{
			$errlib=$1;
			$n=$2;

			if ($func eq "")
				{ print "$file:$.:???:$n\n"; $bad = 1; next; }

			if ($n !~ /([^_]+)_F_(.+)$/)
				{
		#		print "check -$file:$.:$func:$n\n";
				next;
				}
			$lib=$1;
			$n=$2;

			if ($lib ne $errlib)
				{ print "$file:$.:$func:$n [${errlib}err]\n"; $bad = 1; next; }

			$n =~ tr/A-Z/a-z/;
			if (($n ne $func) && ($errlib ne "SYS"))
				{ print "$file:$.:$func:$n\n"; $bad = 1; next; }
	#		print "$func:$1\n";
			}
		}
	close(IN);
        }

if ($bad && $err_strict)
	{
	print STDERR "FATAL: error discrepancy\n";
	exit 1;
	}

@


1.4
log
@resolve conflicts, fix local changes
@
text
@@


1.3
log
@resolve conflicts
@
text
@d10 3
d15 5
d31 1
a31 1
		if (/([A-Z0-9]+)err\(([^,]+)/)
d37 1
a37 1
				{ print "$file:$.:???:$n\n"; next; }
d48 1
a48 1
				{ print "$file:$.:$func:$n [${errlib}err]\n"; next; }
d52 1
a52 1
				{ print "$file:$.:$func:$n\n"; next; }
d58 6
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d16 1
a16 1
		if (/^[a-zA-Z].+[\s*]([A-Za-z_0-9]+)\(.*\)/)
d18 3
a20 1
			$func=$1;
a24 1
			next if ($func eq "");
d27 4
d40 1
a40 1
				{ print "$file:$.:$func:$n\n"; next; }
@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#!/usr/bin/perl
d43 1
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d1 1
a1 1
#!/usr/local/bin/perl
a42 1
	close(IN);
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d16 1
a16 1
		if (!/;$/ && /^([a-zA-Z].*[\s*])?([A-Za-z_0-9]+)\(.*[),]/)
d18 1
a18 3
			/^([^()]*(\([^()]*\)[^()]*)*)\(/;
			$1 =~ /([A-Za-z_0-9]*)$/;
			$func = $1;
d23 1
a25 4

			if ($func eq "")
				{ print "$file:$.:???:$n\n"; next; }

d35 1
a35 1
				{ print "$file:$.:$func:$n [${errlib}err]\n"; next; }
@


1.1.1.4
log
@import OpenSSL-1.0.0a
@
text
@a9 3
my $err_strict = 0;
my $bad = 0;

a11 5
	if ($file eq "-strict")
		{
		$err_strict = 1;
		next;
		}
d23 1
a23 1
		if (/([A-Z0-9]+)err\(([^,]+)/ && ! /ckerr_ignore/)
d29 1
a29 1
				{ print "$file:$.:???:$n\n"; $bad = 1; next; }
d40 1
a40 1
				{ print "$file:$.:$func:$n [${errlib}err]\n"; $bad = 1; next; }
d44 1
a44 1
				{ print "$file:$.:$func:$n\n"; $bad = 1; next; }
a49 6

if ($bad && $err_strict)
	{
	print STDERR "FATAL: error discrepancy\n";
	exit 1;
	}
@


