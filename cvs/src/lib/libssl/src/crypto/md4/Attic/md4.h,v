head	1.17;
access;
symbols
	OPENBSD_6_0:1.16.0.4
	OPENBSD_6_0_BASE:1.16
	OPENBSD_5_9:1.16.0.2
	OPENBSD_5_9_BASE:1.16
	OPENBSD_5_8:1.14.0.6
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.13.0.4
	OPENBSD_5_6_BASE:1.13
	butholakala:1.7
	openssl_1_0_1_g:1.1.1.6
	OPENBSD_5_5:1.7.0.8
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.4
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.2
	OPENBSD_5_3_BASE:1.7
	openssl_1_0_1_c:1.1.1.6
	OPENBSD_5_2:1.6.0.6
	OPENBSD_5_2_BASE:1.6
	OPENBSD_5_1_BASE:1.6
	OPENBSD_5_1:1.6.0.8
	openssl_1_0_0_f:1.1.1.5
	openssl_1_0_0_e:1.1.1.5
	OPENBSD_5_0:1.6.0.4
	OPENBSD_5_0_BASE:1.6
	OPENBSD_4_9:1.6.0.2
	OPENBSD_4_9_BASE:1.6
	openssh_1_0_0_a:1.1.1.5
	OPENBSD_4_8:1.5.0.8
	OPENBSD_4_8_BASE:1.5
	OPENBSD_4_7:1.5.0.4
	OPENBSD_4_7_BASE:1.5
	OPENBSD_4_6:1.5.0.6
	OPENBSD_4_6_BASE:1.5
	openssl_0_9_8_k:1.1.1.4
	OPENBSD_4_5:1.5.0.2
	OPENBSD_4_5_BASE:1.5
	openssl_0_9_8_j:1.1.1.4
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.14
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.12
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.10
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.8
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.6
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.3.0.4
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.2
	OPENBSD_3_8_BASE:1.3
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.17
date	2016.09.03.11.33.38;	author beck;	state dead;
branches;
next	1.16;
commitid	HnbXxsegngek41U2;

1.16
date	2015.09.14.01.45.03;	author doug;	state Exp;
branches;
next	1.15;
commitid	WI3ltGMbnAaZXz3O;

1.15
date	2015.09.13.23.36.21;	author doug;	state dead;
branches;
next	1.14;
commitid	4CxCgJZcnC9PKUvF;

1.14
date	2014.10.20.13.06.54;	author bcook;	state Exp;
branches;
next	1.13;
commitid	3Xsy3xjIIblEEksr;

1.13
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.12;
commitid	nzndm3zqPmFurSaK;

1.12
date	2014.07.10.09.01.04;	author miod;	state Exp;
branches;
next	1.11;
commitid	TmEEhR59UbEp1DB6;

1.11
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	mJUVYpkFBZ0Zv2bG;

1.10
date	2014.05.24.09.16.08;	author jsing;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.16.04.38.11;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2014.04.15.20.06.10;	author tedu;	state Exp;
branches;
next	1.7;

1.7
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.01.22.58.56;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.06.12.17.51;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2005.04.29.05.39.23;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.15.02.29.14;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.15.02.57.51;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.33;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.11;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.13.57;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2012.10.13.21.23.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Remove the libssl/src directory
@
text
@/* $OpenBSD: md4.h,v 1.16 2015/09/14 01:45:03 doug Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stddef.h>

#ifndef HEADER_MD4_H
#define HEADER_MD4_H

#include <openssl/opensslconf.h>

#ifdef  __cplusplus
extern "C" {
#endif

#ifdef OPENSSL_NO_MD4
#error MD4 is disabled.
#endif

/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * ! MD4_LONG has to be at least 32 bits wide.                     !
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */

#define MD4_LONG unsigned int

#define MD4_CBLOCK	64
#define MD4_LBLOCK	(MD4_CBLOCK/4)
#define MD4_DIGEST_LENGTH 16

typedef struct MD4state_st
	{
	MD4_LONG A,B,C,D;
	MD4_LONG Nl,Nh;
	MD4_LONG data[MD4_LBLOCK];
	unsigned int num;
	} MD4_CTX;

int MD4_Init(MD4_CTX *c);
int MD4_Update(MD4_CTX *c, const void *data, size_t len);
int MD4_Final(unsigned char *md, MD4_CTX *c);
unsigned char *MD4(const unsigned char *d, size_t n, unsigned char *md);
void MD4_Transform(MD4_CTX *c, const unsigned char *b);
#ifdef  __cplusplus
}
#endif

#endif
@


1.16
log
@Temporarily revive MD4 for MS CHAP support.
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.15
log
@Remove MD4 support from LibreSSL.

MD4 should have been removed a long time ago.  Also, RFC 6150 moved it to
historic in 2011.  Rides the major crank from removing SHA-0.

Discussed with many including beck@@, millert@@, djm@@, sthen@@
ok jsing@@, input + ok bcook@@
@
text
@d1 1
a1 1
/* $OpenBSD: md4.h,v 1.14 2014/10/20 13:06:54 bcook Exp $ */
@


1.14
log
@digests: *_LONG_LOG2 is not used, stop talking about it.

Modified patch from Dmitry Eremin-Solenikov

leave the sole public define in ripemd.h

ok deraadt@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: md4.h,v 1.13 2014/07/10 22:45:57 jsing Exp $ */
@


1.13
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: md4.h,v 1.12 2014/07/10 09:01:04 miod Exp $ */
d76 1
a76 2
 * ! MD4_LONG has to be at least 32 bits wide. If it's wider, then !
 * ! MD4_LONG_LOG2 has to be defined along.			   !
@


1.12
log
@Remove bogus preprocessor statements trying to pick the largest integer
type for BF_LONG, MD[45]_LONG and SHA_LONG.

First, the preprocessor symbols they check for a 64-bit system is __ILP64__
which no sane system provides; second, on the platforms which have assembler
code to speed things up, the assembler code assumes a 32-bit type will be used.
@
text
@d1 1
a1 1
/* $OpenBSD: md4.h,v 1.11 2014/06/12 15:49:29 deraadt Exp $ */
d59 2
a62 2

#include <stddef.h>
@


1.11
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a80 6
#if defined(__LP32__)
#define MD4_LONG unsigned long
#elif defined(__ILP64__)
#define MD4_LONG unsigned long
#define MD4_LONG_LOG2 3
#else
a81 1
#endif
@


1.10
log
@Almost nothing actually needs to include <openssl/e_os2.h>, however by
including it they get <openssl/opensslconf.h>. So instead of pulling in
<openssl/e_os2.h>, just pull in <openssl/opensslconf.h>.

"go ahead" miod@@
@
text
@d1 1
a1 1
/* crypto/md4/md4.h */
@


1.9
log
@Remove _CRAY references. Note that this pleads for the use of <stdint.h>
fixed-width types instead of choosing int or long depending upon what we
think the architecture support.
@
text
@a61 1
#include <openssl/e_os2.h>
d63 2
@


1.8
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d82 1
a82 1
#elif defined(OPENSSL_SYS_CRAY) || defined(__ILP64__)
a84 7
/*
 * _CRAY note. I could declare short, but I have no idea what impact
 * does it have on performance on none-T3E machines. I could declare
 * int, but at least on C90 sizeof(int) can be chosen at compile time.
 * So I've chosen long...
 *					<appro@@fy.chalmers.se>
 */
@


1.7
log
@resolve conflicts
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
@


1.6
log
@resolve conflicts, fix local changes
@
text
@d108 3
@


1.5
log
@resolve conflicts
@
text
@d80 1
a80 1
#if defined(OPENSSL_SYS_WIN16) || defined(__LP32__)
a107 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
@


1.4
log
@resolve conflicts
@
text
@d108 3
@


1.3
log
@resolve conflicts
@
text
@d63 1
d105 1
a105 1
	int num;
a107 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
d109 1
a109 1
int MD4_Update(MD4_CTX *c, const void *data, unsigned long len);
d111 1
a111 1
unsigned char *MD4(const unsigned char *d, unsigned long n, unsigned char *md);
@


1.2
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d107 3
@


1.1
log
@openssl-engine-0.9.6 merge
@
text
@d62 2
d68 1
a68 1
#ifdef NO_MD4
d79 1
a79 1
#if defined(WIN16) || defined(__LP32__)
d81 1
a81 1
#elif defined(_CRAY) || defined(__ILP64__)
d107 3
a109 3
void MD4_Init(MD4_CTX *c);
void MD4_Update(MD4_CTX *c, const void *data, unsigned long len);
void MD4_Final(unsigned char *md, MD4_CTX *c);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@a61 2
#include <openssl/e_os2.h>

d66 1
a66 1
#ifdef OPENSSL_NO_MD4
d77 1
a77 1
#if defined(OPENSSL_SYS_WIN16) || defined(__LP32__)
d79 1
a79 1
#elif defined(OPENSSL_SYS_CRAY) || defined(__ILP64__)
d105 3
a107 3
int MD4_Init(MD4_CTX *c);
int MD4_Update(MD4_CTX *c, const void *data, unsigned long len);
int MD4_Final(unsigned char *md, MD4_CTX *c);
@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a106 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@a62 1
#include <stddef.h>
d104 1
a104 1
	unsigned int num;
d107 3
d111 1
a111 1
int MD4_Update(MD4_CTX *c, const void *data, size_t len);
d113 1
a113 1
unsigned char *MD4(const unsigned char *d, size_t n, unsigned char *md);
@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
@


1.1.1.5
log
@import OpenSSL-1.0.0a
@
text
@d80 1
a80 1
#if defined(__LP32__)
d108 3
@


1.1.1.6
log
@import OpenSSL-1.0.1c
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD4_Init(MD4_CTX *c);
#endif
@


