head	1.11;
access;
symbols
	OPENBSD_6_0:1.10.0.4
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.2
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.9.0.4
	OPENBSD_5_8_BASE:1.9
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	butholakala:1.1.1.2
	openssl_1_0_1_g:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.8
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.4
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.2
	OPENBSD_5_3_BASE:1.1.1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	openssh_1_0_0_a:1.1.1.1
	openssl:1.1.1;
locks; strict;
comment	@ * @;


1.11
date	2016.09.03.11.33.37;	author beck;	state dead;
branches;
next	1.10;
commitid	HnbXxsegngek41U2;

1.10
date	2015.09.10.15.56.25;	author jsing;	state Exp;
branches;
next	1.9;
commitid	vHznCDK3idwNEFz4;

1.9
date	2015.07.20.15.45.29;	author miod;	state Exp;
branches;
next	1.8;
commitid	rZKujBspQTSVakm9;

1.8
date	2014.07.11.08.44.48;	author jsing;	state Exp;
branches;
next	1.7;
commitid	yQEL1wOWIearrW15;

1.7
date	2014.07.10.13.58.22;	author jsing;	state Exp;
branches;
next	1.6;
commitid	id8dTrTMtnTn4fqt;

1.6
date	2014.06.21.13.39.46;	author jsing;	state Exp;
branches;
next	1.5;
commitid	yihLLT3NbSsZKu0x;

1.5
date	2014.06.21.12.00.01;	author miod;	state Exp;
branches;
next	1.4;
commitid	rSPuzesbBEbO1k45;

1.4
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	mJUVYpkFBZ0Zv2bG;

1.3
date	2014.04.27.20.26.48;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.17.13.37.49;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.10.13.21.23.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Remove the libssl/src directory
@
text
@/* $OpenBSD: hm_ameth.c,v 1.10 2015/09/10 15:56:25 jsing Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 2007.
 */
/* ====================================================================
 * Copyright (c) 2007 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>
#include <string.h>

#include <openssl/evp.h>

#include "asn1_locl.h"

#define HMAC_TEST_PRIVATE_KEY_FORMAT

/* HMAC "ASN1" method. This is just here to indicate the
 * maximum HMAC output length and to free up an HMAC
 * key.
 */

static int
hmac_size(const EVP_PKEY *pkey)
{
	return EVP_MAX_MD_SIZE;
}

static void
hmac_key_free(EVP_PKEY *pkey)
{
	ASN1_OCTET_STRING *os = (ASN1_OCTET_STRING *)pkey->pkey.ptr;

	if (os) {
		if (os->data)
			explicit_bzero(os->data, os->length);
		ASN1_OCTET_STRING_free(os);
	}
}

static int
hmac_pkey_ctrl(EVP_PKEY *pkey, int op, long arg1, void *arg2)
{
	switch (op) {
	case ASN1_PKEY_CTRL_DEFAULT_MD_NID:
		*(int *)arg2 = NID_sha1;
		return 1;
	default:
		return -2;
	}
}

#ifdef HMAC_TEST_PRIVATE_KEY_FORMAT
/* A bogus private key format for test purposes. This is simply the
 * HMAC key with "HMAC PRIVATE KEY" in the headers. When enabled the
 * genpkey utility can be used to "generate" HMAC keys.
 */

static int
old_hmac_decode(EVP_PKEY *pkey, const unsigned char **pder, int derlen)
{
	ASN1_OCTET_STRING *os;

	os = ASN1_OCTET_STRING_new();
	if (os == NULL)
		goto err;
	if (ASN1_OCTET_STRING_set(os, *pder, derlen) == 0)
		goto err;
	if (EVP_PKEY_assign(pkey, EVP_PKEY_HMAC, os) == 0)
		goto err;
	return 1;

err:
	ASN1_OCTET_STRING_free(os);
	return 0;
}

static int
old_hmac_encode(const EVP_PKEY *pkey, unsigned char **pder)
{
	int inc;
	ASN1_OCTET_STRING *os = (ASN1_OCTET_STRING *)pkey->pkey.ptr;

	if (pder) {
		if (!*pder) {
			*pder = malloc(os->length);
			if (*pder == NULL)
				return -1;
			inc = 0;
		} else
			inc = 1;

		memcpy(*pder, os->data, os->length);

		if (inc)
			*pder += os->length;
	}

	return os->length;
}

#endif

const EVP_PKEY_ASN1_METHOD hmac_asn1_meth = {
	.pkey_id = EVP_PKEY_HMAC,
	.pkey_base_id = EVP_PKEY_HMAC,

	.pem_str = "HMAC",
	.info = "OpenSSL HMAC method",

	.pkey_size = hmac_size,

	.pkey_free = hmac_key_free,
	.pkey_ctrl = hmac_pkey_ctrl,
#ifdef HMAC_TEST_PRIVATE_KEY_FORMAT
	.old_priv_decode = old_hmac_decode,
	.old_priv_encode = old_hmac_encode
#endif
};
@


1.10
log
@Correct spelling of OPENSSL_cleanse.

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.9 2015/07/20 15:45:29 miod Exp $ */
@


1.9
log
@Various memory leaks upon error or unchecked allocations.
ok doug@@
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.8 2014/07/11 08:44:48 jsing Exp $ */
d86 1
a86 1
			OPENSSL_cleanse(os->data, os->length);
@


1.8
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.7 2014/07/10 13:58:22 jsing Exp $ */
d115 6
a120 3
	if (!os || !ASN1_OCTET_STRING_set(os, *pder, derlen))
		return 0;
	EVP_PKEY_assign(pkey, EVP_PKEY_HMAC, os);
d122 4
d137 2
@


1.7
log
@Stop including standard headers via cryptlib.h - pull in the headers that
are needed in the source files that actually require them.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.6 2014/06/21 13:39:46 jsing Exp $ */
a61 1
#include "cryptlib.h"
d63 1
@


1.6
log
@More KNF.
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.5 2014/06/21 12:00:01 miod Exp $ */
d60 2
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/* $OpenBSD: hm_ameth.c,v 1.4 2014/06/12 15:49:29 deraadt Exp $ */
d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d137 1
a137 1
			
d143 1
a143 2
const EVP_PKEY_ASN1_METHOD
hmac_asn1_meth = {
@


1.4
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d71 3
a73 2
static int hmac_size(const EVP_PKEY *pkey)
	{
d75 1
a75 1
	}
d77 3
a79 2
static void hmac_key_free(EVP_PKEY *pkey)
	{
d81 2
a82 2
	if (os)
		{
a85 1
		}
d87 1
d89 5
a93 6

static int hmac_pkey_ctrl(EVP_PKEY *pkey, int op, long arg1, void *arg2)
	{
	switch (op)
		{
		case ASN1_PKEY_CTRL_DEFAULT_MD_NID:
d96 1
a96 2

		default:
a97 1
		}
d99 1
d107 3
a109 3
static int old_hmac_decode(EVP_PKEY *pkey,
					const unsigned char **pder, int derlen)
	{
d111 1
d117 1
a117 1
	}
d119 3
a121 2
static int old_hmac_encode(const EVP_PKEY *pkey, unsigned char **pder)
	{
d124 3
a126 4
	if (pder)
		{
		if (!*pder)
			{
d129 2
a130 2
			}
		else inc = 1;
d136 1
a136 1
		}
d139 1
a139 1
	}
d143 2
a144 1
const EVP_PKEY_ASN1_METHOD hmac_asn1_meth = {
d159 1
a159 2
	};

@


1.3
log
@Use C99 initializers for the various FOO_METHOD structs. More readable, and
avoid unreadable/unmaintainable constructs like that:

const EVP_PKEY_ASN1_METHOD cmac_asn1_meth =
        {
        EVP_PKEY_CMAC,
        EVP_PKEY_CMAC,
        0,

        "CMAC",
        "OpenSSL CMAC method",

        0,0,0,0,

        0,0,0,

        cmac_size,
        0,
        0,0,0,0,0,0,0,

        cmac_key_free,
        0,
        0,0
        };

ok matthew@@ deraadt@@
@
text
@d1 1
@


1.2
log
@Change library to use intrinsic memory allocation functions instead of
OPENSSL_foo wrappers. This changes:
OPENSSL_malloc->malloc
OPENSSL_free->free
OPENSSL_relloc->realloc
OPENSSL_freeFunc->free
@
text
@d141 3
a143 5
const EVP_PKEY_ASN1_METHOD hmac_asn1_meth = 
	{
	EVP_PKEY_HMAC,
	EVP_PKEY_HMAC,
	0,
d145 2
a146 2
	"HMAC",
	"OpenSSL HMAC method",
d148 1
a148 1
	0,0,0,0,
d150 2
a151 8
	0,0,0,

	hmac_size,
	0,
	0,0,0,0,0,0,0,

	hmac_key_free,
	hmac_pkey_ctrl,
d153 2
a154 4
	old_hmac_decode,
	old_hmac_encode
#else
	0,0
@


1.1
log
@Initial revision
@
text
@d125 1
a125 1
			*pder = OPENSSL_malloc(os->length);
d156 1
a156 1
	0,0,0,0,0,0,
@


1.1.1.1
log
@import OpenSSL-1.0.0a
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.1c
@
text
@d156 1
a156 1
	0,0,0,0,0,0,0,
@

