head	1.12;
access;
symbols
	OPENBSD_6_0:1.12.0.10
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.12.0.2
	OPENBSD_5_9_BASE:1.12
	OPENBSD_5_8:1.12.0.8
	OPENBSD_5_8_BASE:1.12
	OPENBSD_5_7:1.12.0.6
	OPENBSD_5_7_BASE:1.12
	OPENBSD_5_6:1.12.0.4
	OPENBSD_5_6_BASE:1.12
	butholakala:1.4
	openssl_1_0_1_g:1.1.1.4
	OPENBSD_5_5:1.4.0.24
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.20
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.18
	OPENBSD_5_3_BASE:1.4
	openssl_1_0_1_c:1.1.1.4
	OPENBSD_5_2:1.4.0.14
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.16
	openssl_1_0_0_f:1.1.1.4
	openssl_1_0_0_e:1.1.1.4
	OPENBSD_5_0:1.4.0.12
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	openssh_1_0_0_a:1.1.1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	openssl_0_9_8_k:1.1.1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	openssl_0_9_8_j:1.1.1.4
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.18
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.16
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.14
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.12
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.10
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.2
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.8
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.6
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.2
	OPENBSD_3_7:1.2.0.4
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.2
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.2
	OPENBSD_3_5:1.1.0.8
	OPENBSD_3_5_BASE:1.1
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.1.0.6
	OPENBSD_3_4_BASE:1.1
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.1.0.4
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.2
	OPENBSD_3_2_BASE:1.1
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@ * @;


1.12
date	2014.07.11.08.44.47;	author jsing;	state Exp;
branches;
next	1.11;
commitid	yQEL1wOWIearrW15;

1.11
date	2014.07.10.13.58.22;	author jsing;	state Exp;
branches;
next	1.10;
commitid	id8dTrTMtnTn4fqt;

1.10
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	mJUVYpkFBZ0Zv2bG;

1.9
date	2014.06.09.20.55.08;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	rERi6kr9jCG2ClH2;

1.8
date	2014.04.19.07.20.59;	author jsing;	state Exp;
branches;
next	1.7;

1.7
date	2014.04.18.00.58.49;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.18.00.10.08;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.17.13.37.48;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2009.01.09.12.15.27;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.06.12.17.48;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2004.04.08.08.03.13;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.11;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.49.46;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2004.04.07.20.41.33;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.40;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.13.51;	author djm;	state Exp;
branches;
next	;


desc
@@


1.12
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@/* $OpenBSD: asn_moid.c,v 1.11 2014/07/10 13:58:22 jsing Exp $ */
/* Written by Stephen Henson (steve@@openssl.org) for the OpenSSL
 * project 2001.
 */
/* ====================================================================
 * Copyright (c) 2001-2004 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <ctype.h>
#include <stdio.h>
#include <string.h>

#include <openssl/err.h>
#include <openssl/conf.h>
#include <openssl/crypto.h>
#include <openssl/x509.h>

/* Simple ASN1 OID module: add all objects in a given section */

static int do_create(char *value, char *name);

static int
oid_module_init(CONF_IMODULE *md, const CONF *cnf)
{
	int i;
	const char *oid_section;
	STACK_OF(CONF_VALUE) *sktmp;
	CONF_VALUE *oval;

	oid_section = CONF_imodule_get_value(md);
	if (!(sktmp = NCONF_get_section(cnf, oid_section))) {
		ASN1err(ASN1_F_OID_MODULE_INIT, ASN1_R_ERROR_LOADING_SECTION);
		return 0;
	}
	for (i = 0; i < sk_CONF_VALUE_num(sktmp); i++) {
		oval = sk_CONF_VALUE_value(sktmp, i);
		if (!do_create(oval->value, oval->name)) {
			ASN1err(ASN1_F_OID_MODULE_INIT, ASN1_R_ADDING_OBJECT);
			return 0;
		}
	}
	return 1;
}

static void
oid_module_finish(CONF_IMODULE *md)
{
	OBJ_cleanup();
}

void
ASN1_add_oid_module(void)
{
	CONF_module_add("oid_section", oid_module_init, oid_module_finish);
}

/* Create an OID based on a name value pair. Accept two formats.
 * shortname = 1.2.3.4
 * shortname = some long name, 1.2.3.4
 */

static int
do_create(char *value, char *name)
{
	int nid;
	ASN1_OBJECT *oid;
	char *ln, *ostr, *p, *lntmp;

	p = strrchr(value, ',');
	if (!p) {
		ln = name;
		ostr = value;
	} else {
		ln = NULL;
		ostr = p + 1;
		if (!*ostr)
			return 0;
		while (isspace((unsigned char)*ostr))
			ostr++;
	}

	nid = OBJ_create(ostr, name, ln);

	if (nid == NID_undef)
		return 0;

	if (p) {
		ln = value;
		while (isspace((unsigned char)*ln))
			ln++;
		p--;
		while (isspace((unsigned char)*p)) {
			if (p == ln)
				return 0;
			p--;
		}
		p++;
		lntmp = malloc((p - ln) + 1);
		if (lntmp == NULL)
			return 0;
		memcpy(lntmp, ln, p - ln);
		lntmp[p - ln] = 0;
		oid = OBJ_nid2obj(nid);
		oid->ln = lntmp;
	}

	return 1;
}
@


1.11
log
@Stop including standard headers via cryptlib.h - pull in the headers that
are needed in the source files that actually require them.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: asn_moid.c,v 1.10 2014/06/12 15:49:27 deraadt Exp $ */
d63 2
a65 2
#include "cryptlib.h"
#include <openssl/conf.h>
@


1.10
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d59 1
d61 2
a62 1
#include <ctype.h>
@


1.9
log
@do not include dso.h where it is not needed; ok miod
@
text
@d1 1
a1 1
/* asn_moid.c */
@


1.8
log
@More KNF.
@
text
@a63 1
#include <openssl/dso.h>
@


1.7
log
@lob a few more knf grenades in here to soften things up.
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d71 2
a72 1
static int oid_module_init(CONF_IMODULE *md, const CONF *cnf)
d78 1
d80 1
a80 1
	if(!(sktmp = NCONF_get_section(cnf, oid_section))) {
d84 1
a84 1
	for(i = 0; i < sk_CONF_VALUE_num(sktmp); i++) {
d86 1
a86 1
		if(!do_create(oval->value, oval->name)) {
d94 2
a95 1
static void oid_module_finish(CONF_IMODULE *md)
d100 2
a101 1
void ASN1_add_oid_module(void)
d111 2
a112 2

static int do_create(char *value, char *name)
d117 1
d127 2
a128 1
		while(isspace((unsigned char)*ostr)) ostr++;
d138 2
a139 1
		while(isspace((unsigned char)*ln)) ln++;
d141 1
a141 1
		while(isspace((unsigned char)*p)) {
a157 2
		
		
@


1.6
log
@putting most of the braces in the right column is the very least we can do.
@
text
@d78 1
a78 2
	if(!(sktmp = NCONF_get_section(cnf, oid_section)))
	{
d82 1
a82 2
	for(i = 0; i < sk_CONF_VALUE_num(sktmp); i++)
	{
d84 1
a84 2
		if(!do_create(oval->value, oval->name))
		{
d114 1
a114 2
	if (!p)
	{
d117 1
a117 3
	}
	else
	{
d130 1
a130 2
	if (p)
	{
d134 1
a134 2
		while(isspace((unsigned char)*p))
		{
@


1.5
log
@Change library to use intrinsic memory allocation functions instead of
OPENSSL_foo wrappers. This changes:
OPENSSL_malloc->malloc
OPENSSL_free->free
OPENSSL_relloc->realloc
OPENSSL_freeFunc->free
@
text
@d72 1
a72 1
	{
d79 1
a79 1
		{
d82 1
a82 1
		}
d84 1
a84 1
		{
d87 1
a87 1
			{
a89 1
			}
d91 1
d93 1
a93 1
	}
d96 1
a96 1
	{
d98 1
a98 1
	}
d101 1
a101 1
	{
d103 1
a103 1
	}
d112 1
a112 1
	{
d118 1
a118 1
		{
d121 1
a121 1
		}
d123 1
a123 1
		{
d129 1
a129 1
		}
d137 1
a137 1
		{
d142 1
a142 1
			{
d146 1
a146 1
			}
d155 1
a155 1
		}
d158 1
a158 1
	}
@


1.4
log
@resolve conflicts
@
text
@d148 1
a148 1
		lntmp = OPENSSL_malloc((p - ln) + 1);
@


1.3
log
@resolve conflicts
@
text
@d2 1
a2 1
/* Written by Stephen Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.2
log
@merge 0.9.7d
@
text
@d6 1
a6 1
 * Copyright (c) 2001 The OpenSSL Project.  All rights reserved.
d60 1
d69 2
d86 1
a86 1
		if(OBJ_create(oval->value, oval->name, oval->name) == NID_undef)
d104 57
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d90 6
a95 1
}
d99 1
a99 1
	CONF_module_add("oid_section", oid_module_init, 0);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import openssl-0.9.7d
@
text
@d90 1
a90 6
	}

static void oid_module_finish(CONF_IMODULE *md)
	{
	OBJ_cleanup();
	}
d94 1
a94 1
	CONF_module_add("oid_section", oid_module_init, oid_module_finish);
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d6 1
a6 1
 * Copyright (c) 2001-2004 The OpenSSL Project.  All rights reserved.
a59 1
#include <ctype.h>
a67 2
static int do_create(char *value, char *name);

d83 1
a83 1
		if(!do_create(oval->value, oval->name))
a100 57

/* Create an OID based on a name value pair. Accept two formats.
 * shortname = 1.2.3.4
 * shortname = some long name, 1.2.3.4
 */


static int do_create(char *value, char *name)
	{
	int nid;
	ASN1_OBJECT *oid;
	char *ln, *ostr, *p, *lntmp;
	p = strrchr(value, ',');
	if (!p)
		{
		ln = name;
		ostr = value;
		}
	else
		{
		ln = NULL;
		ostr = p + 1;
		if (!*ostr)
			return 0;
		while(isspace((unsigned char)*ostr)) ostr++;
		}

	nid = OBJ_create(ostr, name, ln);

	if (nid == NID_undef)
		return 0;

	if (p)
		{
		ln = value;
		while(isspace((unsigned char)*ln)) ln++;
		p--;
		while(isspace((unsigned char)*p))
			{
			if (p == ln)
				return 0;
			p--;
			}
		p++;
		lntmp = OPENSSL_malloc((p - ln) + 1);
		if (lntmp == NULL)
			return 0;
		memcpy(lntmp, ln, p - ln);
		lntmp[p - ln] = 0;
		oid = OBJ_nid2obj(nid);
		oid->ln = lntmp;
		}

	return 1;
	}
		
		
@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Stephen Henson (steve@@openssl.org) for the OpenSSL
@


