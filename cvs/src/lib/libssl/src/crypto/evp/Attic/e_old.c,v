head	1.9;
access;
symbols
	OPENBSD_6_0:1.8.0.8
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.6
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.7.0.4
	OPENBSD_5_6_BASE:1.7
	butholakala:1.1.1.2
	openssl_1_0_1_g:1.1.1.2
	OPENBSD_5_5:1.1.1.2.0.24
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.20
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.18
	OPENBSD_5_3_BASE:1.1.1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.14
	OPENBSD_5_2_BASE:1.1.1.2
	OPENBSD_5_1_BASE:1.1.1.2
	OPENBSD_5_1:1.1.1.2.0.16
	openssl_1_0_0_f:1.1.1.2
	openssl_1_0_0_e:1.1.1.2
	OPENBSD_5_0:1.1.1.2.0.12
	OPENBSD_5_0_BASE:1.1.1.2
	OPENBSD_4_9:1.1.1.2.0.10
	OPENBSD_4_9_BASE:1.1.1.2
	openssh_1_0_0_a:1.1.1.2
	OPENBSD_4_8:1.1.1.2.0.8
	OPENBSD_4_8_BASE:1.1.1.2
	OPENBSD_4_7:1.1.1.2.0.4
	OPENBSD_4_7_BASE:1.1.1.2
	OPENBSD_4_6:1.1.1.2.0.6
	OPENBSD_4_6_BASE:1.1.1.2
	openssl_0_9_8_k:1.1.1.2
	OPENBSD_4_5:1.1.1.2.0.2
	OPENBSD_4_5_BASE:1.1.1.2
	openssl_0_9_8_j:1.1.1.2
	openssl_0_9_8_h:1.1.1.2
	pre_openssl_0_9_8h:1.1.1.1
	OPENBSD_4_4:1.1.1.1.0.14
	OPENBSD_4_4_BASE:1.1.1.1
	OPENBSD_4_3:1.1.1.1.0.12
	OPENBSD_4_3_BASE:1.1.1.1
	OPENBSD_4_2:1.1.1.1.0.10
	OPENBSD_4_2_BASE:1.1.1.1
	OPENBSD_4_1:1.1.1.1.0.8
	OPENBSD_4_1_BASE:1.1.1.1
	OPENBSD_4_0:1.1.1.1.0.6
	OPENBSD_4_0_BASE:1.1.1.1
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.1.1.1.0.4
	OPENBSD_3_9_BASE:1.1.1.1
	OPENBSD_3_8:1.1.1.1.0.2
	OPENBSD_3_8_BASE:1.1.1.1
	OPENSSL_0_9_7G:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.09.03.11.33.37;	author beck;	state dead;
branches;
next	1.8;
commitid	HnbXxsegngek41U2;

1.8
date	2015.02.10.11.45.09;	author jsing;	state Exp;
branches;
next	1.7;
commitid	znaecaAmULZs71gX;

1.7
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.6;
commitid	nzndm3zqPmFurSaK;

1.6
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	mJUVYpkFBZ0Zv2bG;

1.5
date	2014.06.11.01.53.02;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	4evB2EbwDYaBfe0g;

1.4
date	2014.05.15.11.25.59;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2014.05.11.12.20.20;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2014.05.08.15.13.06;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.29.05.37.10;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.04.29.05.37.10;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.43;	author djm;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove the libssl/src directory
@
text
@/* $OpenBSD: e_old.c,v 1.8 2015/02/10 11:45:09 jsing Exp $ */
/* Written by Richard Levitte (richard@@levitte.org) for the OpenSSL
 * project 2004.
 */
/* ====================================================================
 * Copyright (c) 2004 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <openssl/opensslconf.h>

#ifndef OPENSSL_NO_DEPRECATED

#include <openssl/evp.h>

/* Define some deprecated functions, so older programs
   don't crash and burn too quickly.  On Windows and VMS,
   these will never be used, since functions and variables
   in shared libraries are selected by entry point location,
   not by name.  */

#ifndef OPENSSL_NO_BF
#undef EVP_bf_cfb
const EVP_CIPHER *EVP_bf_cfb(void);
const EVP_CIPHER *
EVP_bf_cfb(void)
{
	return EVP_bf_cfb64();
}
#endif

#ifndef OPENSSL_NO_DES
#undef EVP_des_cfb
const EVP_CIPHER *EVP_des_cfb(void);
const EVP_CIPHER *
EVP_des_cfb(void)
{
	return EVP_des_cfb64();
}
#undef EVP_des_ede3_cfb
const EVP_CIPHER *EVP_des_ede3_cfb(void);
const EVP_CIPHER *
EVP_des_ede3_cfb(void)
{
	return EVP_des_ede3_cfb64();
}
#undef EVP_des_ede_cfb
const EVP_CIPHER *EVP_des_ede_cfb(void);
const EVP_CIPHER *
EVP_des_ede_cfb(void)
{
	return EVP_des_ede_cfb64();
}
#endif

#ifndef OPENSSL_NO_IDEA
#undef EVP_idea_cfb
const EVP_CIPHER *EVP_idea_cfb(void);
const EVP_CIPHER *
EVP_idea_cfb(void)
{
	return EVP_idea_cfb64();
}
#endif

#ifndef OPENSSL_NO_RC2
#undef EVP_rc2_cfb
const EVP_CIPHER *EVP_rc2_cfb(void);
const EVP_CIPHER *
EVP_rc2_cfb(void)
{
	return EVP_rc2_cfb64();
}
#endif

#ifndef OPENSSL_NO_CAST
#undef EVP_cast5_cfb
const EVP_CIPHER *EVP_cast5_cfb(void);
const EVP_CIPHER *
EVP_cast5_cfb(void)
{
	return EVP_cast5_cfb64();
}
#endif

#ifndef OPENSSL_NO_AES
#undef EVP_aes_128_cfb
const EVP_CIPHER *EVP_aes_128_cfb(void);
const EVP_CIPHER *
EVP_aes_128_cfb(void)
{
	return EVP_aes_128_cfb128();
}
#undef EVP_aes_192_cfb
const EVP_CIPHER *EVP_aes_192_cfb(void);
const EVP_CIPHER *
EVP_aes_192_cfb(void)
{
	return EVP_aes_192_cfb128();
}
#undef EVP_aes_256_cfb
const EVP_CIPHER *EVP_aes_256_cfb(void);
const EVP_CIPHER *
EVP_aes_256_cfb(void)
{
	return EVP_aes_256_cfb128();
}
#endif

#endif
@


1.8
log
@unifdef OPENSSL_NO_RC5
@
text
@d1 1
a1 1
/* $OpenBSD: e_old.c,v 1.7 2014/07/10 22:45:57 jsing Exp $ */
@


1.7
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: e_old.c,v 1.6 2014/06/12 15:49:29 deraadt Exp $ */
a131 10
}
#endif

#ifndef OPENSSL_NO_RC5
#undef EVP_rc5_32_12_16_cfb
const EVP_CIPHER *EVP_rc5_32_12_16_cfb(void);
const EVP_CIPHER *
EVP_rc5_32_12_16_cfb(void)
{
	return EVP_rc5_32_12_16_cfb64();
@


1.6
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d58 2
@


1.5
log
@c-file-style hints, begone; ok beck
@
text
@d1 1
a1 1
/* crypto/evp/e_old.c */
@


1.4
log
@Stop being a dummy... presumably these are left overs from pedantic mode
that were not wrapped with #if PEDANTIC.

ok miod@@
@
text
@d1 1
a1 1
/* crypto/evp/e_old.c -*- mode:C; c-file-style: "eay" -*- */
@


1.3
log
@More KNF.
@
text
@d59 1
a59 3
#ifdef OPENSSL_NO_DEPRECATED
static void *dummy = &dummy;
#else
@


1.2
log
@KNF.
@
text
@d74 2
a75 1
const EVP_CIPHER *EVP_bf_cfb(void)
d84 2
a85 1
const EVP_CIPHER *EVP_des_cfb(void)
d91 2
a92 1
const EVP_CIPHER *EVP_des_ede3_cfb(void)
d98 2
a99 1
const EVP_CIPHER *EVP_des_ede_cfb(void)
d108 2
a109 1
const EVP_CIPHER *EVP_idea_cfb(void)
d118 2
a119 1
const EVP_CIPHER *EVP_rc2_cfb(void)
d128 2
a129 1
const EVP_CIPHER *EVP_cast5_cfb(void)
d138 2
a139 1
const EVP_CIPHER *EVP_rc5_32_12_16_cfb(void)
d148 2
a149 1
const EVP_CIPHER *EVP_aes_128_cfb(void)
d155 2
a156 1
const EVP_CIPHER *EVP_aes_192_cfb(void)
d162 2
a163 1
const EVP_CIPHER *EVP_aes_256_cfb(void)
@


1.1
log
@Initial revision
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d59 4
d73 5
a77 1
const EVP_CIPHER *EVP_bf_cfb(void) { return EVP_bf_cfb64(); }
d82 5
a86 1
const EVP_CIPHER *EVP_des_cfb(void) { return EVP_des_cfb64(); }
d88 5
a92 1
const EVP_CIPHER *EVP_des_ede3_cfb(void) { return EVP_des_ede3_cfb64(); }
d94 5
a98 1
const EVP_CIPHER *EVP_des_ede_cfb(void) { return EVP_des_ede_cfb64(); }
d103 5
a107 1
const EVP_CIPHER *EVP_idea_cfb(void) { return EVP_idea_cfb64(); }
d112 5
a116 1
const EVP_CIPHER *EVP_rc2_cfb(void) { return EVP_rc2_cfb64(); }
d121 5
a125 1
const EVP_CIPHER *EVP_cast5_cfb(void) { return EVP_cast5_cfb64(); }
d130 5
a134 1
const EVP_CIPHER *EVP_rc5_32_12_16_cfb(void) { return EVP_rc5_32_12_16_cfb64(); }
d139 5
a143 1
const EVP_CIPHER *EVP_aes_128_cfb(void) { return EVP_aes_128_cfb128(); }
d145 5
a149 1
const EVP_CIPHER *EVP_aes_192_cfb(void) { return EVP_aes_192_cfb128(); }
d151 7
a157 1
const EVP_CIPHER *EVP_aes_256_cfb(void) { return EVP_aes_256_cfb128(); }
@


1.1.1.1
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@a58 4
#ifdef OPENSSL_NO_DEPRECATED
static void *dummy = &dummy;
#else

a68 1
const EVP_CIPHER *EVP_bf_cfb(void);
a73 1
const EVP_CIPHER *EVP_des_cfb(void);
a75 1
const EVP_CIPHER *EVP_des_ede3_cfb(void);
a77 1
const EVP_CIPHER *EVP_des_ede_cfb(void);
a82 1
const EVP_CIPHER *EVP_idea_cfb(void);
a87 1
const EVP_CIPHER *EVP_rc2_cfb(void);
a92 1
const EVP_CIPHER *EVP_cast5_cfb(void);
a97 1
const EVP_CIPHER *EVP_rc5_32_12_16_cfb(void);
a102 1
const EVP_CIPHER *EVP_aes_128_cfb(void);
a104 1
const EVP_CIPHER *EVP_aes_192_cfb(void);
a106 1
const EVP_CIPHER *EVP_aes_256_cfb(void);
a107 2
#endif

@

