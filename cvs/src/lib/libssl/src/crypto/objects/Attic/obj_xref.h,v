head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.8
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.6
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.2.0.4
	OPENBSD_5_6_BASE:1.2
	butholakala:1.1.1.2
	openssl_1_0_1_g:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_5_5:1.1.1.2.0.8
	OPENBSD_5_5_BASE:1.1.1.2
	OPENBSD_5_4:1.1.1.2.0.4
	OPENBSD_5_4_BASE:1.1.1.2
	OPENBSD_5_3:1.1.1.2.0.2
	OPENBSD_5_3_BASE:1.1.1.2
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_5_2:1.1.1.1.0.6
	OPENBSD_5_2_BASE:1.1.1.1
	OPENBSD_5_1_BASE:1.1.1.1
	OPENBSD_5_1:1.1.1.1.0.8
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.1.1.1.0.4
	OPENBSD_5_0_BASE:1.1.1.1
	OPENBSD_4_9:1.1.1.1.0.2
	OPENBSD_4_9_BASE:1.1.1.1
	openssh_1_0_0_a:1.1.1.1
	openssl:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.09.03.11.33.38;	author beck;	state dead;
branches;
next	1.3;
commitid	HnbXxsegngek41U2;

1.3
date	2014.11.09.19.17.13;	author miod;	state Exp;
branches;
next	1.2;
commitid	QrgOG8zcUIADOfFd;

1.2
date	2014.06.12.15.49.30;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	mJUVYpkFBZ0Zv2bG;

1.1
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.10.13.21.23.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Remove the libssl/src directory
@
text
@/* $OpenBSD: obj_xref.h,v 1.3 2014/11/09 19:17:13 miod Exp $ */
/* AUTOGENERATED BY objxref.pl, DO NOT EDIT */

typedef struct
	{
	int sign_id;
	int hash_id;
	int pkey_id;
	} nid_triple;

static const nid_triple sigoid_srt[] =
	{
	{NID_md2WithRSAEncryption, NID_md2, NID_rsaEncryption},
	{NID_md5WithRSAEncryption, NID_md5, NID_rsaEncryption},
	{NID_shaWithRSAEncryption, NID_sha, NID_rsaEncryption},
	{NID_sha1WithRSAEncryption, NID_sha1, NID_rsaEncryption},
	{NID_dsaWithSHA, NID_sha, NID_dsa},
	{NID_dsaWithSHA1_2, NID_sha1, NID_dsa_2},
	{NID_mdc2WithRSA, NID_mdc2, NID_rsaEncryption},
	{NID_md5WithRSA, NID_md5, NID_rsa},
	{NID_dsaWithSHA1, NID_sha1, NID_dsa},
	{NID_sha1WithRSA, NID_sha1, NID_rsa},
	{NID_ripemd160WithRSA, NID_ripemd160, NID_rsaEncryption},
	{NID_md4WithRSAEncryption, NID_md4, NID_rsaEncryption},
	{NID_ecdsa_with_SHA1, NID_sha1, NID_X9_62_id_ecPublicKey},
	{NID_sha256WithRSAEncryption, NID_sha256, NID_rsaEncryption},
	{NID_sha384WithRSAEncryption, NID_sha384, NID_rsaEncryption},
	{NID_sha512WithRSAEncryption, NID_sha512, NID_rsaEncryption},
	{NID_sha224WithRSAEncryption, NID_sha224, NID_rsaEncryption},
	{NID_ecdsa_with_Recommended, NID_undef, NID_X9_62_id_ecPublicKey},
	{NID_ecdsa_with_Specified, NID_undef, NID_X9_62_id_ecPublicKey},
	{NID_ecdsa_with_SHA224, NID_sha224, NID_X9_62_id_ecPublicKey},
	{NID_ecdsa_with_SHA256, NID_sha256, NID_X9_62_id_ecPublicKey},
	{NID_ecdsa_with_SHA384, NID_sha384, NID_X9_62_id_ecPublicKey},
	{NID_ecdsa_with_SHA512, NID_sha512, NID_X9_62_id_ecPublicKey},
	{NID_dsa_with_SHA224, NID_sha224, NID_dsa},
	{NID_dsa_with_SHA256, NID_sha256, NID_dsa},
	{NID_id_GostR3411_94_with_GostR3410_2001, NID_id_GostR3411_94, NID_id_GostR3410_2001},
	{NID_id_GostR3411_94_with_GostR3410_94, NID_id_GostR3411_94, NID_id_GostR3410_94},
	{NID_id_GostR3411_94_with_GostR3410_94_cc, NID_id_GostR3411_94, NID_id_GostR3410_94_cc},
	{NID_id_GostR3411_94_with_GostR3410_2001_cc, NID_id_GostR3411_94, NID_id_GostR3410_2001_cc},
	{NID_rsassaPss, NID_undef, NID_rsaEncryption},
	{NID_id_tc26_signwithdigest_gost3410_2012_256, NID_id_tc26_gost3411_2012_256, NID_id_GostR3410_2001},
	{NID_id_tc26_signwithdigest_gost3410_2012_512, NID_id_tc26_gost3411_2012_512, NID_id_GostR3410_2001},
	};

static const nid_triple * const sigoid_srt_xref[] =
	{
	&sigoid_srt[29],
	&sigoid_srt[17],
	&sigoid_srt[18],
	&sigoid_srt[0],
	&sigoid_srt[1],
	&sigoid_srt[7],
	&sigoid_srt[2],
	&sigoid_srt[4],
	&sigoid_srt[3],
	&sigoid_srt[9],
	&sigoid_srt[5],
	&sigoid_srt[8],
	&sigoid_srt[12],
	&sigoid_srt[6],
	&sigoid_srt[10],
	&sigoid_srt[11],
	&sigoid_srt[13],
	&sigoid_srt[24],
	&sigoid_srt[20],
	&sigoid_srt[14],
	&sigoid_srt[21],
	&sigoid_srt[15],
	&sigoid_srt[22],
	&sigoid_srt[16],
	&sigoid_srt[23],
	&sigoid_srt[19],
	&sigoid_srt[25],
	&sigoid_srt[26],
	&sigoid_srt[27],
	&sigoid_srt[28],
	&sigoid_srt[30],
	&sigoid_srt[31],
	};

@


1.3
log
@GOST crypto algorithms (well, most of them), ported from the removed GOST
engine to regular EVP citizens, contributed by Dmitry Eremin-Solenikov;
libcrypto bits only for now.

This is a verbatim import of Dmitry's work, and does not compile in this
state; the forthcoming commits will address these issues.

None of the GOST code is enabled in libcrypto yet, for it still gets
compiled with OPENSSL_NO_GOST defined. However, the public header gost.h
will be installed.
@
text
@d1 1
a1 1
/* $OpenBSD: obj_xref.h,v 1.2 2014/06/12 15:49:30 deraadt Exp $ */
@


1.2
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d43 2
d79 2
@


1.1
log
@Initial revision
@
text
@d1 1
d42 1
d47 1
@


1.1.1.1
log
@import OpenSSL-1.0.0a
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.1c
@
text
@a40 1
	{NID_rsassaPss, NID_undef, NID_rsaEncryption},
a44 1
	&sigoid_srt[29],
@

