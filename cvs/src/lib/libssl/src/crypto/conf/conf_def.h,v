head	1.5;
access;
symbols
	OPENBSD_6_0:1.5.0.10
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.2
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.8
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.6
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.4
	OPENBSD_5_6_BASE:1.5
	butholakala:1.2
	openssl_1_0_1_g:1.1.1.1
	OPENBSD_5_5:1.2.0.50
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.46
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.44
	OPENBSD_5_3_BASE:1.2
	openssl_1_0_1_c:1.1.1.1
	OPENBSD_5_2:1.2.0.40
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.42
	openssl_1_0_0_f:1.1.1.1
	openssl_1_0_0_e:1.1.1.1
	OPENBSD_5_0:1.2.0.38
	OPENBSD_5_0_BASE:1.2
	OPENBSD_4_9:1.2.0.36
	OPENBSD_4_9_BASE:1.2
	openssh_1_0_0_a:1.1.1.1
	OPENBSD_4_8:1.2.0.34
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.30
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.32
	OPENBSD_4_6_BASE:1.2
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.2.0.28
	OPENBSD_4_5_BASE:1.2
	openssl_0_9_8_j:1.1.1.1
	openssl_0_9_8_h:1.1.1.1
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.26
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.24
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.22
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.20
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.18
	OPENBSD_4_0_BASE:1.2
	openssl_0_9_7j:1.1.1.1
	openssl:1.1.1
	OPENBSD_3_9:1.2.0.16
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.14
	OPENBSD_3_8_BASE:1.2
	OPENSSL_0_9_7G:1.1.1.1
	OPENBSD_3_7:1.2.0.12
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.10
	OPENBSD_3_6_BASE:1.2
	OPENSSL_0_9_7D:1.1.1.1
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.1
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.1
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.1
	OPENSSL_0_9_7_BETA3:1.1.1.1
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1
	OPENBSD_3_1:1.1.0.6
	OPENBSD_3_1_BASE:1.1
	OPENBSD_3_0:1.1.0.4
	OPENBSD_3_0_BASE:1.1
	OPENBSD_2_9:1.1.0.2
	OPENBSD_2_9_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.4;
commitid	mJUVYpkFBZ0Zv2bG;

1.4
date	2014.04.20.09.04.56;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.15.17.46.16;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.15.02.29.12;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.15.02.57.27;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.09;	author markus;	state Exp;
branches;
next	;


desc
@@


1.5
log
@tags as requested by miod and tedu
@
text
@/* $OpenBSD$ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

/* THIS FILE WAS AUTOMAGICALLY GENERATED!
   Please modify and use keysets.pl to regenerate it. */

#define CONF_NUMBER		1
#define CONF_UPPER		2
#define CONF_LOWER		4
#define CONF_UNDER		256
#define CONF_PUNCTUATION	512
#define CONF_WS			16
#define CONF_ESC		32
#define CONF_QUOTE		64
#define CONF_DQUOTE		1024
#define CONF_COMMENT		128
#define CONF_FCOMMENT		2048
#define CONF_EOF		8
#define CONF_HIGHBIT		4096
#define CONF_ALPHA		(CONF_UPPER|CONF_LOWER)
#define CONF_ALPHA_NUMERIC	(CONF_ALPHA|CONF_NUMBER|CONF_UNDER)
#define CONF_ALPHA_NUMERIC_PUNCT (CONF_ALPHA|CONF_NUMBER|CONF_UNDER| \
					CONF_PUNCTUATION)

#define KEYTYPES(c)		((unsigned short *)((c)->meth_data))
#define IS_COMMENT(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[(a)&0xff]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[(a)&0xff]&CONF_ALPHA_NUMERIC)
#define IS_ALPHA_NUMERIC_PUNCT(c,a) \
				(KEYTYPES(c)[(a)&0xff]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_DQUOTE)
#define IS_HIGHBIT(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_HIGHBIT)

static unsigned short CONF_type_default[256] = {
	0x0008, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0010, 0x0010, 0x0000, 0x0000, 0x0010, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0010, 0x0200, 0x0040, 0x0080, 0x0000, 0x0200, 0x0200, 0x0040,
	0x0000, 0x0000, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,
	0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
	0x0001, 0x0001, 0x0000, 0x0200, 0x0000, 0x0000, 0x0000, 0x0200,
	0x0200, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0000, 0x0020, 0x0000, 0x0200, 0x0100,
	0x0040, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0000, 0x0200, 0x0000, 0x0200, 0x0000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
};

static unsigned short CONF_type_win32[256] = {
	0x0008, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0010, 0x0010, 0x0000, 0x0000, 0x0010, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000, 0x0000,
	0x0010, 0x0200, 0x0400, 0x0000, 0x0000, 0x0200, 0x0200, 0x0000,
	0x0000, 0x0000, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200, 0x0200,
	0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001, 0x0001,
	0x0001, 0x0001, 0x0000, 0x0A00, 0x0000, 0x0000, 0x0000, 0x0200,
	0x0200, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002, 0x0002,
	0x0002, 0x0002, 0x0002, 0x0000, 0x0000, 0x0000, 0x0200, 0x0100,
	0x0000, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004, 0x0004,
	0x0004, 0x0004, 0x0004, 0x0000, 0x0200, 0x0000, 0x0200, 0x0000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
	0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000, 0x1000,
};
@


1.4
log
@KNF.
@
text
@d1 1
a1 1
/* crypto/conf/conf_def.h */
@


1.3
log
@Send the rotIBM stream cipher (ebcdic) to Valhalla to party for eternity
with the bearded ones...
some API's that nobody should be using will dissapear with this commit.
@
text
@d8 1
a8 1
 * 
d15 1
a15 1
 * 
d22 1
a22 1
 * 
d37 1
a37 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d40 1
a40 1
 * 
d52 1
a52 1
 * 
d94 69
a162 70
static unsigned short CONF_type_default[256]={
	0x0008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0010,0x0010,0x0000,0x0000,0x0010,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0010,0x0200,0x0040,0x0080,0x0000,0x0200,0x0200,0x0040,
	0x0000,0x0000,0x0200,0x0200,0x0200,0x0200,0x0200,0x0200,
	0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,
	0x0001,0x0001,0x0000,0x0200,0x0000,0x0000,0x0000,0x0200,
	0x0200,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0000,0x0020,0x0000,0x0200,0x0100,
	0x0040,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0000,0x0200,0x0000,0x0200,0x0000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	};

static unsigned short CONF_type_win32[256]={
	0x0008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0010,0x0010,0x0000,0x0000,0x0010,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0010,0x0200,0x0400,0x0000,0x0000,0x0200,0x0200,0x0000,
	0x0000,0x0000,0x0200,0x0200,0x0200,0x0200,0x0200,0x0200,
	0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,
	0x0001,0x0001,0x0000,0x0A00,0x0000,0x0000,0x0000,0x0200,
	0x0200,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0000,0x0000,0x0000,0x0200,0x0100,
	0x0000,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0000,0x0200,0x0000,0x0200,0x0000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	};

@


1.2
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@a80 1
#ifndef CHARSET_EBCDIC
a92 16

#else /*CHARSET_EBCDIC*/

#define IS_COMMENT(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ALPHA_NUMERIC)
#define IS_ALPHA_NUMERIC_PUNCT(c,a) \
				(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_DQUOTE)
#define IS_HIGHBIT(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_HIGHBIT)
#endif /*CHARSET_EBCDIC*/
@


1.1
log
@openssl-engine-0.9.6 merge
@
text
@d74 1
d82 7
a88 7
#define IS_COMMENT(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[(a)&0x7f]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[(a)&0x7f]&CONF_ALPHA_NUMERIC)
d90 4
a93 3
				(KEYTYPES(c)[(a)&0x7f]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[(a)&0x7f]&CONF_DQUOTE)
d97 7
a103 7
#define IS_COMMENT(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ALPHA_NUMERIC)
d105 4
a108 3
				(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0x7f]&CONF_DQUOTE)
d111 33
a143 17
static unsigned short CONF_type_default[128]={
	0x008,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x000,0x010,0x010,0x000,0x000,0x010,0x000,0x000,
	0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x010,0x200,0x040,0x080,0x000,0x200,0x200,0x040,
	0x000,0x000,0x200,0x200,0x200,0x200,0x200,0x200,
	0x001,0x001,0x001,0x001,0x001,0x001,0x001,0x001,
	0x001,0x001,0x000,0x200,0x000,0x000,0x000,0x200,
	0x200,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x000,0x020,0x000,0x200,0x100,
	0x040,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x000,0x200,0x000,0x200,0x000,
d146 33
a178 17
static unsigned short CONF_type_win32[128]={
	0x008,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x000,0x010,0x010,0x000,0x000,0x010,0x000,0x000,
	0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x000,0x000,0x000,0x000,0x000,0x000,0x000,0x000,
	0x010,0x200,0x400,0x000,0x000,0x200,0x200,0x000,
	0x000,0x000,0x200,0x200,0x200,0x200,0x200,0x200,
	0x001,0x001,0x001,0x001,0x001,0x001,0x001,0x001,
	0x001,0x001,0x000,0xA00,0x000,0x000,0x000,0x200,
	0x200,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x002,0x002,0x002,0x002,0x002,
	0x002,0x002,0x002,0x000,0x000,0x000,0x200,0x100,
	0x000,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x004,0x004,0x004,0x004,0x004,
	0x004,0x004,0x004,0x000,0x200,0x000,0x200,0x000,
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@a73 1
#define CONF_HIGHBIT		4096
d81 7
a87 7
#define IS_COMMENT(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[(a)&0xff]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[(a)&0xff]&CONF_ALPHA_NUMERIC)
d89 3
a91 4
				(KEYTYPES(c)[(a)&0xff]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_DQUOTE)
#define IS_HIGHBIT(c,a)		(KEYTYPES(c)[(a)&0xff]&CONF_HIGHBIT)
d95 7
a101 7
#define IS_COMMENT(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_COMMENT)
#define IS_FCOMMENT(c,a)	(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_FCOMMENT)
#define IS_EOF(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_EOF)
#define IS_ESC(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ESC)
#define IS_NUMBER(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_NUMBER)
#define IS_WS(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_WS)
#define IS_ALPHA_NUMERIC(c,a)	(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ALPHA_NUMERIC)
d103 3
a105 4
				(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_ALPHA_NUMERIC_PUNCT)
#define IS_QUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_QUOTE)
#define IS_DQUOTE(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_DQUOTE)
#define IS_HIGHBIT(c,a)		(KEYTYPES(c)[os_toascii[a]&0xff]&CONF_HIGHBIT)
d108 17
a124 33
static unsigned short CONF_type_default[256]={
	0x0008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0010,0x0010,0x0000,0x0000,0x0010,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0010,0x0200,0x0040,0x0080,0x0000,0x0200,0x0200,0x0040,
	0x0000,0x0000,0x0200,0x0200,0x0200,0x0200,0x0200,0x0200,
	0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,
	0x0001,0x0001,0x0000,0x0200,0x0000,0x0000,0x0000,0x0200,
	0x0200,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0000,0x0020,0x0000,0x0200,0x0100,
	0x0040,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0000,0x0200,0x0000,0x0200,0x0000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
d127 17
a143 33
static unsigned short CONF_type_win32[256]={
	0x0008,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0010,0x0010,0x0000,0x0000,0x0010,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,0x0000,
	0x0010,0x0200,0x0400,0x0000,0x0000,0x0200,0x0200,0x0000,
	0x0000,0x0000,0x0200,0x0200,0x0200,0x0200,0x0200,0x0200,
	0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,0x0001,
	0x0001,0x0001,0x0000,0x0A00,0x0000,0x0000,0x0000,0x0200,
	0x0200,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,0x0002,
	0x0002,0x0002,0x0002,0x0000,0x0000,0x0000,0x0200,0x0100,
	0x0000,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,0x0004,
	0x0004,0x0004,0x0004,0x0000,0x0200,0x0000,0x0200,0x0000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
	0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,0x1000,
@


