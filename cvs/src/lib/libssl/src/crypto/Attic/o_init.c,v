head	1.9;
access;
symbols
	OPENBSD_6_0:1.8.0.10
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.2
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.8
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.6
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.4
	OPENBSD_5_6_BASE:1.8
	butholakala:1.3
	openssl_1_0_1_g:1.1.1.2
	OPENSSL:1.1.1
	OPENBSD_5_5:1.3.0.8
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.4
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.2
	OPENBSD_5_3_BASE:1.3
	openssl_1_0_1_c:1.1.1.2
	OPENBSD_4_8:1.1.1.1.0.8
	OPENBSD_4_8_BASE:1.1.1.1
	OPENBSD_4_7:1.1.1.1.0.4
	OPENBSD_4_7_BASE:1.1.1.1
	OPENBSD_4_6:1.1.1.1.0.6
	OPENBSD_4_6_BASE:1.1.1.1
	openssl_0_9_8_k:1.1.1.1
	OPENBSD_4_5:1.1.1.1.0.2
	OPENBSD_4_5_BASE:1.1.1.1
	openssl_0_9_8_j:1.1.1.1
	openssl:1.1.1;
locks; strict;
comment	@ * @;


1.9
date	2016.09.03.11.33.34;	author beck;	state dead;
branches;
next	1.8;
commitid	HnbXxsegngek41U2;

1.8
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	mJUVYpkFBZ0Zv2bG;

1.7
date	2014.05.31.23.33.32;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	IkBbAEUFVs8n6C69;

1.6
date	2014.04.15.23.20.08;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.15.20.06.09;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.15.13.41.53;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2012.10.13.21.30.30;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2010.10.01.22.58.53;	author djm;	state dead;
branches;
next	1.1;

1.1
date	2009.01.09.12.13.50;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2009.01.09.12.13.50;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.10.13.21.23.33;	author djm;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Remove the libssl/src directory
@
text
@/* $OpenBSD: o_init.c,v 1.8 2014/06/12 15:49:27 deraadt Exp $ */
/* Ted Unangst places this file in the public domain. */

#include <openssl/crypto.h>

void
OPENSSL_init(void)
{

}
@


1.8
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
@


1.7
log
@Get the public headers from the official place with <openssl/ >
from Brent Cook
@
text
@d1 1
@


1.6
log
@strip this to the bone
@
text
@d2 2
a3 1
#include <crypto.h>
@


1.5
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d1 2
a2 60
/* o_init.c */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project.
 */
/* ====================================================================
 * Copyright (c) 2011 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 */

#include <e_os.h>
#include <openssl/err.h>

/* Perform any essential OpenSSL initialization operations.
 * Currently only sets FIPS callbacks
 */
d7 1
a7 7
	static int done = 0;
	if (done)
		return;
	done = 1;
#if 0
	fprintf(stderr, "Called OPENSSL_init\n");
#endif
@


1.4
log
@First pass at applying KNF to the OpenSSL code, which almost makes it
readable. This pass is whitespace only and can readily be verified using
tr and md5.
@
text
@a56 4
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#include <openssl/rand.h>
#endif
a68 6
#ifdef OPENSSL_FIPS
	FIPS_set_locking_callbacks(CRYPTO_lock, CRYPTO_add_lock);
	FIPS_set_error_callbacks(ERR_put_error, ERR_add_error_vdata);
	FIPS_set_malloc_callbacks(CRYPTO_malloc, CRYPTO_free);
	RAND_init_fips();
#endif
@


1.3
log
@import files that CVS missed; sigh
@
text
@d66 3
a68 2
void OPENSSL_init(void)
	{
d82 1
a82 2
	}

@


1.2
log
@resolve conflicts, fix local changes
@
text
@d6 1
a6 1
 * Copyright (c) 2007 The OpenSSL Project.  All rights reserved.
a52 4
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
d57 4
d68 4
d73 4
a76 11
	static int done = 0;
	if (!done)
		{
		int_ERR_lib_init();
#ifdef CRYPTO_MDEBUG
		CRYPTO_malloc_debug_init();
#endif
#ifdef OPENSSL_ENGINE
		int_EVP_MD_init_engine_callbacks();
		int_EVP_CIPHER_init_engine_callbacks();
		int_RAND_init_engine_callbacks();
d78 2
a79 2
		done = 1;
		}
a81 1
		
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@import openssl-0.9.8j
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.1c
@
text
@d6 1
a6 1
 * Copyright (c) 2011 The OpenSSL Project.  All rights reserved.
d53 4
a60 4
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#include <openssl/rand.h>
#endif
d68 1
d70 10
a79 8
	if (done)
		return;
	done = 1;
#ifdef OPENSSL_FIPS
	FIPS_set_locking_callbacks(CRYPTO_lock, CRYPTO_add_lock);
	FIPS_set_error_callbacks(ERR_put_error, ERR_add_error_vdata);
	FIPS_set_malloc_callbacks(CRYPTO_malloc, CRYPTO_free);
	RAND_init_fips();
d81 2
a82 2
#if 0
	fprintf(stderr, "Called OPENSSL_init\n");
d85 1
@

