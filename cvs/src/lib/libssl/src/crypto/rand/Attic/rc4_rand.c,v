head	1.3;
access;
symbols;
locks; strict;
comment	@ * @;


1.3
date	2014.04.18.13.19.03;	author tedu;	state dead;
branches;
next	1.2;

1.2
date	2014.04.16.13.57.14;	author reyk;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.15.16.52.50;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@another round of chemo for the RAND code to provide clarity.
ok deraadt
@
text
@/*	$OpenBSD: rc4_rand.c,v 1.2 2014/04/16 13:57:14 reyk Exp $	*/

/*
 * Copyright (c) 2014 Miodrag Vallat.
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdlib.h>

#include <openssl/rand.h>

static int
arc4_rand_bytes(unsigned char *buf, int num)
{
	if (num > 0)
		arc4random_buf(buf, (size_t)num);

	return 1;
}

static int 
arc4_rand_status(void)
{
	/* no possible error condition */
	return 1;
}

static RAND_METHOD rand_arc4_meth = {
	.seed = NULL,		/* no external seed allowed */
	.bytes = arc4_rand_bytes,
	.cleanup = NULL,	/* no cleanup necessary */
	.add = NULL,		/* no external feed allowed */
	.pseudorand = arc4_rand_bytes,
	.status =  arc4_rand_status
};

RAND_METHOD *RAND_SSLeay(void)
{
	return &rand_arc4_meth;
}

@


1.2
log
@Some software expects RAND_status() to return 1 for success, so always
return 1 in the arc4random backend because there is no possible error
condition.  Unbreaks lynx, git and friends.

ok miod@@ dcoppa@@
@
text
@d1 1
a1 1
/*	$OpenBSD: rc4_rand.c,v 1.1 2014/04/15 16:52:50 miod Exp $	*/
@


1.1
log
@Replace the old OpenSSL PRNG by direct use of arc4random_buf(), keeping the
existing RAND interfaces unchanged.

All interfaces allowing external feed or seed of the RNG (either from a file
or a local entropy gathering daemon) are kept for ABI compatibility, but are
no longer do anything.

While the OpenSSL PRNG was required 15+ years ago when many systems lacked
proper entropy collection, things have evolved and one can reasonably assume
it is better to use the kernel (system global) entropy pool rather than trying
to build one's own and having to compensate for thread scheduling...

<RANT>
Whoever thought that RAND_screen(), feeding the PRNG with the contents of the
local workstation's display, under Win32, was a smart idea, ought to be banned
from security programming.
</RANT>

ok beck@@ deraadt@@ tedu@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d32 7
d45 1
a45 1
	.status = NULL		/* no possible error condition */
d52 1
@

