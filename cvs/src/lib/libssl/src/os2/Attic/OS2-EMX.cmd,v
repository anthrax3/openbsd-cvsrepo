head	1.4;
access;
symbols
	OPENBSD_5_5:1.3.0.42
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.38
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.36
	OPENBSD_5_3_BASE:1.3
	openssl_1_0_1_c:1.1.1.3
	OPENBSD_5_2:1.3.0.32
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.34
	openssl_1_0_0_f:1.1.1.3
	openssl_1_0_0_e:1.1.1.3
	OPENBSD_5_0:1.3.0.30
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.28
	OPENBSD_4_9_BASE:1.3
	openssh_1_0_0_a:1.1.1.3
	OPENBSD_4_8:1.3.0.26
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.22
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.24
	OPENBSD_4_6_BASE:1.3
	openssl_0_9_8_k:1.1.1.3
	OPENBSD_4_5:1.3.0.20
	OPENBSD_4_5_BASE:1.3
	openssl_0_9_8_j:1.1.1.3
	openssl_0_9_8_h:1.1.1.3
	pre_openssl_0_9_8h:1.3
	OPENBSD_4_4:1.3.0.18
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.16
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.14
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.12
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.10
	OPENBSD_4_0_BASE:1.3
	openssl_0_9_7j:1.1.1.3
	openssl:1.1.1
	OPENBSD_3_9:1.3.0.8
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.6
	OPENBSD_3_8_BASE:1.3
	OPENSSL_0_9_7G:1.1.1.3
	OPENBSD_3_7:1.3.0.4
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.2
	OPENBSD_3_6_BASE:1.3
	OPENSSL_0_9_7D:1.1.1.3
	OPENBSD_3_5:1.2.0.8
	OPENBSD_3_5_BASE:1.2
	OPENSSL_0_9_7C:1.1.1.2
	OPENBSD_3_4:1.2.0.6
	OPENBSD_3_4_BASE:1.2
	OPENSSL_0_9_7B:1.1.1.2
	OPENBSD_3_3:1.2.0.4
	OPENBSD_3_3_BASE:1.2
	OPENBSD_3_2:1.2.0.2
	OPENBSD_3_2_BASE:1.2
	OPENSSL_0_9_7_STABLE_SNAP_20020911:1.1.1.2
	OPENSSL_0_9_7_BETA3:1.1.1.2
	OPENSSL_0_9_7_BETA1:1.1.1.1
	OPENSSL:1.1.1;
locks; strict;
comment	@:: @;


1.4
date	2014.04.13.15.25.34;	author miod;	state dead;
branches;
next	1.3;

1.3
date	2004.04.08.08.03.15;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.10.16.31.56;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.20;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.30;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.22.43.44;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2004.04.07.20.42.05;	author markus;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@@@echo off

perl Configure OS2-EMX
perl util\mkfiles.pl > MINFO

@@rem create make file
perl util\mk1mf.pl OS2-EMX > OS2-EMX.mak
perl util\mk1mf.pl dll OS2-EMX > OS2-EMX-DLL.mak

echo Generating export definition files
perl util\mkdef.pl crypto OS2 > os2\crypto.def
perl util\mkdef.pl ssl OS2 > os2\ssl.def

echo Generating x86 for GNU assember

echo Bignum
cd crypto\bn\asm
rem perl x86.pl a.out > bn-os2.asm
perl bn-586.pl a.out > bn-os2.asm 
perl co-586.pl a.out > co-os2.asm 
cd ..\..\..

echo DES
cd crypto\des\asm
perl des-586.pl a.out > d-os2.asm
cd ..\..\..

echo crypt(3)
cd crypto\des\asm
perl crypt586.pl a.out > y-os2.asm
cd ..\..\..

echo Blowfish
cd crypto\bf\asm
perl bf-586.pl a.out > b-os2.asm
cd ..\..\..

echo CAST5
cd crypto\cast\asm
perl cast-586.pl a.out > c-os2.asm
cd ..\..\..

echo RC4
cd crypto\rc4\asm
perl rc4-586.pl a.out > r4-os2.asm
cd ..\..\..

echo MD5
cd crypto\md5\asm
perl md5-586.pl a.out > m5-os2.asm
cd ..\..\..

echo SHA1
cd crypto\sha\asm
perl sha1-586.pl a.out > s1-os2.asm
cd ..\..\..

echo RIPEMD160
cd crypto\ripemd\asm
perl rmd-586.pl a.out > rm-os2.asm
cd ..\..\..

echo RC5\32
cd crypto\rc5\asm
perl rc5-586.pl a.out > r5-os2.asm
cd ..\..\..

cd os2

if exist noname\backward_ssl.def goto nomkdir
mkdir noname
:nomkdir

perl backwardify.pl		crypto.def	>backward_crypto.def
perl backwardify.pl		ssl.def		>backward_ssl.def
perl backwardify.pl -noname	crypto.def	>noname\backward_crypto.def
perl backwardify.pl -noname	ssl.def		>noname\backward_ssl.def

echo Creating backward compatibility forwarder dlls:
echo  crypto.dll
gcc -Zomf -Zdll -Zcrtdll -o crypto.dll backward_crypto.def 2>&1 | grep -v L4085
echo  ssl.dll
gcc -Zomf -Zdll -Zcrtdll -o ssl.dll backward_ssl.def 2>&1 | grep -v L4085

echo Creating smaller backward compatibility forwarder dlls:
echo These DLLs are not good for runtime resolution of symbols.
echo  noname\crypto.dll
gcc -Zomf -Zdll -Zcrtdll -o noname/crypto.dll noname/backward_crypto.def 2>&1 | grep -v L4085
echo  noname\ssl.dll
gcc -Zomf -Zdll -Zcrtdll -o noname/ssl.dll noname/backward_ssl.def 2>&1 | grep -v L4085

echo Compressing forwarders (it is ok if lxlite is not found):
lxlite *.dll noname/*.dll

cd ..

echo Now run:
echo For static build:
echo  make -f OS2-EMX.mak
echo For dynamic build:
echo  make -f OS2-EMX-DLL.mak
echo then rename crypto.dll to cryptssl.dll, ssl.dll to open_ssl.dll
@


1.3
log
@merge 0.9.7d
@
text
@@


1.2
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d67 36
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d8 5
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta3
@
text
@a7 5
perl util\mk1mf.pl dll OS2-EMX > OS2-EMX-DLL.mak

echo Generating export definition files
perl util\mkdef.pl crypto OS2 > os2\crypto.def
perl util\mkdef.pl ssl OS2 > os2\ssl.def
@


1.1.1.3
log
@import openssl-0.9.7d
@
text
@a66 36

cd os2

if exist noname\backward_ssl.def goto nomkdir
mkdir noname
:nomkdir

perl backwardify.pl		crypto.def	>backward_crypto.def
perl backwardify.pl		ssl.def		>backward_ssl.def
perl backwardify.pl -noname	crypto.def	>noname\backward_crypto.def
perl backwardify.pl -noname	ssl.def		>noname\backward_ssl.def

echo Creating backward compatibility forwarder dlls:
echo  crypto.dll
gcc -Zomf -Zdll -Zcrtdll -o crypto.dll backward_crypto.def 2>&1 | grep -v L4085
echo  ssl.dll
gcc -Zomf -Zdll -Zcrtdll -o ssl.dll backward_ssl.def 2>&1 | grep -v L4085

echo Creating smaller backward compatibility forwarder dlls:
echo These DLLs are not good for runtime resolution of symbols.
echo  noname\crypto.dll
gcc -Zomf -Zdll -Zcrtdll -o noname/crypto.dll noname/backward_crypto.def 2>&1 | grep -v L4085
echo  noname\ssl.dll
gcc -Zomf -Zdll -Zcrtdll -o noname/ssl.dll noname/backward_ssl.def 2>&1 | grep -v L4085

echo Compressing forwarders (it is ok if lxlite is not found):
lxlite *.dll noname/*.dll

cd ..

echo Now run:
echo For static build:
echo  make -f OS2-EMX.mak
echo For dynamic build:
echo  make -f OS2-EMX-DLL.mak
echo then rename crypto.dll to cryptssl.dll, ssl.dll to open_ssl.dll
@


