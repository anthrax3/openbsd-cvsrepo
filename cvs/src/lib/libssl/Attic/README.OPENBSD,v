head	1.3;
access;
symbols
	OPENBSD_2_8:1.2.0.6
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.2.0.4
	OPENBSD_2_7_BASE:1.2
	OPENBSD_2_6:1.2.0.2
	OPENBSD_2_6_BASE:1.2
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@# @;


1.3
date	2000.12.16.15.07.56;	author beck;	state dead;
branches;
next	1.2;

1.2
date	99.09.29.05.55.59;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.28;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.28;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove - RSA is there now, don't need to talk about it being stubbed.
@
text
@
	This is based on an OpenSSL-0.9.4
	
	It has the following modifcations made to it.

NOTES:

	Many tests will fail miserably, since most of them start
	with SSL v2, which requires RSA, and of course, they barf.
	idea tests will also fail. This is to be expected. Do
	"make -k test" if you want to see the output and draw
	your own conclusions.

	Many parts of the utility programs may not work, although things
	like client and server will provided you start them in a mode
	that does not require RSA to operate.

	Unlike an ssl library built to remove the offending routines
	(which removes many of the things like SSL23init which many
	packages like web servers use) this library does contain
	stubs for everything. The patent bits will simply fail. The
	idea is that this may be used as is for limited functionality,
	or where possible replaced with a full function library. When
	porting an app it is important to remember to try to use the
	tls1 version of stuff first where possible. I.E. if you're
	going to SSL-ize OpenBSD telnet, for example, call the tls1 init
	functions *NOT* sslv2init or sslv23init, or you'll be dependent
	on RSA and have a version that will only work with a full
	function library. Use the tls versions and you'll work with
	both - a good thing.

	"crypto" and "ssl" are OpenBSD style build dirs for the
	libraries of the same name. "ssleay" is the build dir for the
	"ssleay" executable, used to control everything vagely ssleay
	like, from testing to generating certificates, to playing
	simple client server games. libraries expect to install headers
	in "/usr/include/ssl", libraries in /usr/lib, ssleay in /usr/sbin

TODO:
	SSLeay contains just no library docs, it's all use the
	force, read the source. This should be fixed sometime.

	DSS certificate generation is a black art. This
	needs to be properly documented and a comprehensive procedure
	written up, at least for how to generate a cert for 
	a host to be used by multiple servers. beck@@ has talked
	to Mark Shuttleworth of Thawte, and he has agreed that
	if we can get DSS hosts certs up and running Thawte will
	consider providing the service (for the usual fee of course)
	of for-real signing of OpenBSD host certs for those who
	want a real CA for things like telnet and ftp and the like.
	
	Apps beyond ssleay need testing - apps that use exclusively old style
	sslv2 or sslv2/3 need to be converted/modified where possible to
	try the tls1 stuff, so that we can handle doing things without
	RSA. 
@


1.2
log
@openssl 0.9.4
@
text
@@


1.1
log
@Initial revision
@
text
@d2 1
a2 1
	This is an SSLeay-0.9.0b (the b means the PKCS#1 bug is fixed) tree.
a4 10

	0) util/perlpath.pl has been run to change perlpath to /usr/bin
	   util/ssldir.pl has been run to change the ssl dir to /usr/ssl
	   Null check added to crypto/err/err.c (mailed to Eric Young)
	   to avoid problems in error handling.  Includes install into
           /usr/include/ssl, certs and configs are expected to be in
           /etc/ssl.

	1) Changes for openbsd compilation to have been made to
	   config and Configure (these have been sent to Eric Young)
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
