head	1.4;
access;
symbols;
locks; strict;
comment	@.\" @;


1.4
date	2016.11.05.15.32.19;	author schwarze;	state dead;
branches;
next	1.3;
commitid	ZM7UFzG8SDjLS2hv;

1.3
date	2015.11.11.22.14.40;	author jmc;	state Exp;
branches;
next	1.2;
commitid	eNNq8UNxWW0rsWWg;

1.2
date	2014.12.02.14.11.01;	author jmc;	state Exp;
branches;
next	1.1;
commitid	3zJ41geK44rAPG2m;

1.1
date	2014.10.12.09.33.04;	author bentley;	state Exp;
branches;
next	;
commitid	d4OKqHtOZ8kX9T2O;


desc
@@


1.4
log
@move manual pages from doc/ to man/ for consistency with other
libraries, in particular considering that there are unrelated
files in doc/; requested by jsing@@ and beck@@
@
text
@.\"
.\"	$OpenBSD: SSL_set_connect_state.3,v 1.3 2015/11/11 22:14:40 jmc Exp $
.\"
.Dd $Mdocdate: November 11 2015 $
.Dt SSL_SET_CONNECT_STATE 3
.Os
.Sh NAME
.Nm SSL_set_connect_state ,
.Nm SSL_set_accept_state
.Nd prepare SSL object to work in client or server mode
.Sh SYNOPSIS
.In openssl/ssl.h
.Ft void
.Fn SSL_set_connect_state "SSL *ssl"
.Ft void
.Fn SSL_set_accept_state "SSL *ssl"
.Sh DESCRIPTION
.Fn SSL_set_connect_state
sets
.Fa ssl
to work in client mode.
.Pp
.Fn SSL_set_accept_state
sets
.Fa ssl
to work in server mode.
.Sh NOTES
When the
.Vt SSL_CTX
object was created with
.Xr SSL_CTX_new 3 ,
it was either assigned a dedicated client method, a dedicated server method, or
a generic method, that can be used for both client and server connections.
(The method might have been changed with
.Xr SSL_CTX_set_ssl_version 3
or
.Xr SSL_set_ssl_method 3 . )
.Pp
When beginning a new handshake, the SSL engine must know whether it must call
the connect (client) or accept (server) routines.
Even though it may be clear from the method chosen whether client or server
mode was requested, the handshake routines must be explicitly set.
.Pp
When using the
.Xr SSL_connect 3
or
.Xr SSL_accept 3
routines, the correct handshake routines are automatically set.
When performing a transparent negotiation using
.Xr SSL_write 3
or
.Xr SSL_read 3 ,
the handshake routines must be explicitly set in advance using either
.Fn SSL_set_connect_state
or
.Fn SSL_set_accept_state .
.Sh RETURN VALUES
.Fn SSL_set_connect_state
and
.Fn SSL_set_accept_state
do not return diagnostic information.
.Sh SEE ALSO
.Xr ssl 3 ,
.Xr SSL_accept 3 ,
.Xr SSL_connect 3 ,
.Xr SSL_CTX_new 3 ,
.Xr SSL_CTX_set_ssl_version 3 ,
.Xr SSL_do_handshake 3 ,
.Xr SSL_new 3 ,
.Xr SSL_read 3 ,
.Xr SSL_write 3
@


1.3
log
@add missing functions to NAME, or otherwise correct the mlink
entry for them;

feedback/ok schwarze
@
text
@d2 1
a2 1
.\"	$OpenBSD: SSL_set_connect_state.3,v 1.2 2014/12/02 14:11:01 jmc Exp $
d4 1
a4 1
.Dd $Mdocdate: December 2 2014 $
@


1.2
log
@add some openbsd tags, and a first pass at cleanup;
@
text
@d2 1
a2 1
.\"	$OpenBSD$
d4 1
a4 1
.Dd $Mdocdate: October 12 2014 $
d9 1
a9 1
.Nm SSL_get_accept_state
@


1.1
log
@Convert libssl manpages from pod to mdoc(7).

libcrypto has not been started yet.

ok schwarze@@ miod@@
@
text
@d1 4
a4 1
.Dd $Mdocdate$
@

