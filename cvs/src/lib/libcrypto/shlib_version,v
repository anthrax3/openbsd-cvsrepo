head	1.32;
access;
symbols
	OPENBSD_6_1:1.32.0.4
	OPENBSD_6_1_BASE:1.32;
locks; strict;
comment	@# @;


1.32
date	2017.02.28.14.24.41;	author jsing;	state Exp;
branches;
next	1.31;
commitid	V78wTP260IhrtH7t;

1.31
date	2016.12.21.16.52.48;	author jsing;	state Exp;
branches;
next	1.30;
commitid	mNBZoaaLnP9kQILm;

1.30
date	2016.11.11.03.49.14;	author beck;	state Exp;
branches;
next	1.29;
commitid	bfy3h8UXC7RBH20B;

1.29
date	2016.11.05.15.16.49;	author beck;	state Exp;
branches;
next	1.28;
commitid	6r2zNOTR8FWRP3oL;

1.28
date	2016.11.04.18.07.23;	author beck;	state Exp;
branches;
next	1.27;
commitid	pAy02smoQCuRvYaT;

1.27
date	2016.09.03.11.57.43;	author beck;	state Exp;
branches;
next	1.26;
commitid	eUuzB5JRL9DhiRwO;

1.26
date	2016.04.28.17.07.07;	author jsing;	state Exp;
branches;
next	1.25;
commitid	umZVdE8FYqopHFcq;

1.25
date	2015.12.09.14.11.03;	author bcook;	state Exp;
branches;
next	1.24;
commitid	aK98sb6IytoC3B2f;

1.24
date	2015.11.02.15.41.59;	author reyk;	state Exp;
branches;
next	1.23;
commitid	s6MhYgEWlWVBYmp9;

1.23
date	2015.09.13.23.42.29;	author doug;	state Exp;
branches;
next	1.22;
commitid	RBkUzcBYfXsZ1cjc;

1.22
date	2015.09.13.10.02.49;	author miod;	state Exp;
branches;
next	1.21;
commitid	TOlJlYmAKCXz3l7H;

1.21
date	2015.07.19.22.34.27;	author doug;	state Exp;
branches;
next	1.20;
commitid	ayrDDFJT2T84Q0hD;

1.20
date	2015.06.20.01.09.31;	author doug;	state Exp;
branches;
next	1.19;
commitid	C6ESSqDHDsMcSe87;

1.19
date	2015.05.17.22.39.39;	author kettenis;	state Exp;
branches;
next	1.18;
commitid	hPAjcz6hVT7CzV2p;

1.18
date	2015.04.11.16.16.15;	author deraadt;	state Exp;
branches;
next	1.17;
commitid	lnb130mvt8k6weCi;

1.17
date	2015.02.22.16.03.06;	author jsing;	state Exp;
branches;
next	1.16;
commitid	5xvvECKfgi5WwtVQ;

1.16
date	2015.02.07.06.20.00;	author jsing;	state Exp;
branches;
next	1.15;
commitid	N2ebjxmK1lpWbX1R;

1.15
date	2015.01.22.09.06.39;	author reyk;	state Exp;
branches;
next	1.14;
commitid	ifoh2yhyhj92FCSg;

1.14
date	2014.11.17.20.31.20;	author miod;	state Exp;
branches;
next	1.13;
commitid	ymruTYR6WPNRDFtT;

1.13
date	2014.11.09.19.12.16;	author miod;	state Exp;
branches;
next	1.12;
commitid	iQGHupXpW0OMZ3dp;

1.12
date	2014.09.27.12.29.31;	author miod;	state Exp;
branches;
next	1.11;
commitid	zJyeQ8nfLebyZsfy;

1.11
date	2014.07.12.02.47.45;	author deraadt;	state Exp;
branches;
next	1.10;
commitid	vTe4BJIZmtDD1T05;

1.10
date	2014.06.24.18.13.50;	author jsing;	state Exp;
branches;
next	1.9;
commitid	diomJxmVai9Y1Oop;

1.9
date	2014.05.25.17.51.59;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2014.05.12.19.14.14;	author miod;	state Exp;
branches;
next	1.7;

1.7
date	2014.05.01.17.08.57;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.20.12.48.19;	author guenther;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.18.15.53.49;	author tedu;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.15.20.20.59;	author miod;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.13.16.50.24;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.13.15.27.30;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.11.22.51.53;	author miod;	state Exp;
branches;
next	;


desc
@@


1.32
log
@Bump minors due to symbol addition.
@
text
@# Don't forget to give libssl and libtls the same type of bump!
major=41
minor=1
@


1.31
log
@Bump libcrypto/libssl/libtls majors due to libcrypto symbol removal and
changes to libssl non-opaque structs.
@
text
@d3 1
a3 1
minor=0
@


1.30
log
@Disable ec assembly for amd64 pending fixes for ssh, and bump
majors appropriately
@
text
@d2 1
a2 1
major=40
@


1.29
log
@bump minors for symbol addition for ocsp and x25519 symbol additions
@
text
@d2 2
a3 2
major=39
minor=1
@


1.28
log
@make public ASN1_time_parse and ASN1_time_tm_cmp to replace former hidden
functions.. document with a man page.
bump majors on libtls, libssl, libcrypto
ok jsing@@ guenther@@
@
text
@d3 1
a3 1
minor=0
@


1.27
log
@crank minor for API addiiton of x509_email, etc. functions
@
text
@d2 2
a3 2
major=38
minor=1
@


1.26
log
@Crank majors for lib{crypto,ssl,tls} due to symbol removals, symbol
additions and functionality changes.
@
text
@d3 1
a3 1
minor=0
@


1.25
log
@bump the major for libcrypto/ssl/tls for a CRYPTO_chacha_20 ABI change

ok jsing@@, deraadt@@, beck@@
@
text
@d2 1
a2 1
major=37
@


1.24
log
@bump minors after adding EVP_aead_chacha20_poly1305_ietf()

OK jsing@@
@
text
@d2 2
a3 2
major=36
minor=1
@


1.23
log
@Crank major version due to removal of SHA-0 and MD4 from libcrypto.
@
text
@d3 1
a3 1
minor=0
@


1.22
log
@Add a new interface, OPENSSL_cpu_caps(), to return the currently running
cpu's specific hardware capabilities users of libcrypto might be interested
in, as an integer value. This deprecates the existing OPENSSL_ia32cap()
macro and the OPENSSL_ia32cap_loc() function (which returns the pointer so
that you can mess with stuff you shouldn't mess with).

Interpreting the value returned by OPENSSL_cpu_caps() is, of course,
machine-dependent.

Minor version bump for libcrypto.
ok beck@@ jsing@@
@
text
@d2 2
a3 2
major=35
minor=1
@


1.21
log
@Remove OpenSSL engine RSAX.

OpenSSL stopped building it last year and removed it this year.
Based on OpenSSL commit c436e05bdc7f49985a750df64122c960240b3ae1.

Also cranked major version in libcrypto, libssl and libtls.

"fine with me" bcook@@ miod@@
@
text
@d3 1
a3 1
minor=0
@


1.20
log
@Crank major for libcrypto, ssl and tls due to MDC-2DES removal.

ok miod@@ jsing@@
@
text
@d2 1
a2 1
major=34
@


1.19
log
@Record inter-library dependencies between libcrypto, libssl and libtls
@
text
@d2 1
a2 1
major=33
@


1.18
log
@Send OPENSSL_issetugid() straight to hell, no final cigarette.

The issetugid() API is supposed to make a strong promise where "0
means it is safe to look at the environment".  Way back in the past
someone on the OpenSSL team responded to the environment access danger
by creating a wrapper called OPENSSL_issetugid, and went to use it a
number of places.  However, by default on systems lacking true
issetugid(), OPENSSL_issetugid returns 0.  0 indicating safely.  False
safety.  Which means OPENSSL_issetugid() fails to make any sort of
promise about safety, in fact it is just the opposite.

Can you believe the OpenSSL team?

This nastiness was noticed over the years, however noone could gain traction
and get it fixed in OpenSSL.  Also see a paragraph about this in
http://www.tedunangst.com/flak/post/worst-common-denominator-programming

ok jsing
@
text
@d1 1
@


1.17
log
@Bump libcrypto and libssl majors, due to various recent churn.

Discussed with/requested by deraadt@@ at the conclusion of s2k15.
@
text
@d1 1
a1 1
major=32
@


1.16
log
@Crank major for libcrypto since symbols have been removed.

Requested by deraadt@@
@
text
@d1 1
a1 1
major=31
@


1.15
log
@Add X509_STORE_load_mem() to load certificates from a memory buffer
instead of disk.  OpenSSL didn't provide a built-in API from loading
certificates in a chroot'ed process that doesn't have direct access to
the files.  X509_STORE_load_mem() provides a new backend that will be
used by libssl and libtls to implement such privsep-friendly
functionality.

Adopted for LibreSSL based on older code from relayd (by pyr@@ and myself)
With feedback and OK bluhm@@
@
text
@d1 2
a2 2
major=30
minor=4
@


1.14
log
@Add the Cammelia cipher to libcrypto.

There used to be a strong reluctance to provide this cipher in LibreSSL in the
past, because the licence terms under which Cammelia was released by NTT were
free-but-not-in-the-corners, by restricting the right to modify the source
code, as well retaining the right to enforce their patents against anyone
in the future.

However, as stated in http://www.ntt.co.jp/news/news06e/0604/060413a.html ,
NTT changed its mind and made this code truly free. We only wish there had
been more visibility of this, for we could have had enabled Cammelia
earlier (-:

Licence change noticed by deraadt@@. General agreement from the usual LibreSSL
suspects.

Crank libcrypto.so minor version due to the added symbols.
@
text
@d2 1
a2 1
minor=3
@


1.13
log
@Introduce EVP_MD_CTX_ctrl(), to allow for fine control of a given digest.
This functionality was already available (and optional), and used in the
bowels of the ASN.1 code. This exposes it as a public interface, which will
be used by the upcoming GOST code.
Crank libcrypto minor version.

From Dmitry Eremin-Solenikov.
@
text
@d2 1
a2 1
minor=2
@


1.12
log
@Disable assembler code for ghash on hppa, causes wrong computations in some
cases and breaks TLS 1.2; crank libcrypto.so minor version out of safety and
to be able to tell broken versions apart easily.
@
text
@d2 1
a2 1
minor=1
@


1.11
log
@odds are that some ABI change occured today, no matter how careful everyone
is
@
text
@d2 1
a2 1
minor=0
@


1.10
log
@Crank libcrypto major since my previous commit changed the size of the
ChaCha context. Other changes will also ride this crank.
@
text
@d1 1
a1 1
major=29
@


1.9
log
@"for every change..."
@
text
@d1 1
a1 1
major=28
@


1.8
log
@Move the `pqueue' part of libcrypto, which is a glorified sorted linked list
of 64-bit data, and only used by DTLS, to libssl where it belongs.

Remove pqueue_print() which is a debugging interface and serves no useful
purpose, except for the regress test, which grows its own pqueue_print()
routine.

Bump libcrypto major and libssl minor.

WARNING: do not update your tree right now, more changes are coming, which
will ride the libcrypto major bump.
@
text
@d1 1
a1 1
major=27
@


1.7
log
@+ e_chacha.c, and bump minor
@
text
@d1 2
a2 2
major=26
minor=1
@


1.6
log
@Chop off more SSLv2 tentacles and start fixing and noting y2038 issues.
APIs that pass times as longs will have to change at some point...
Bump major on both libcrypto and libssl.

ok tedu@@
@
text
@d2 1
a2 1
minor=0
@


1.5
log
@we need to crank
@
text
@d1 1
a1 1
major=25
@


1.4
log
@Crank major for libcrypto and libssl; more symbol removals to occur during the
next few moments, don't rush your update.
Requested by deraadt@@
@
text
@d1 1
a1 1
major=24
@


1.3
log
@Don't edit on cvs. 23.1 as intended.
@
text
@d1 2
a2 2
major=23
minor=1
@


1.2
log
@Crank libcrypto minor (addition of BN_consttime_swap and CRYPTO_memcmp)
and libssl major (ssl_check_clienthello_tlsext split into two functions)
@
text
@d1 2
a2 2
major=21
minor=0
@


1.1
log
@Move build machinery for libcrypto from libssl/crypto to libcrypto, as well
as configuration files; split manpages and .pc files between libcrypto and
libssl.
No functional change, only there to make engineering easier, and libcrypto
sources are still found in libssl/src/crypto at the moment.

ok reyk@@, also discussed with deraadt@@ beck@@ and the usual crypto suspects.
@
text
@d1 1
a1 1
major=23
@

