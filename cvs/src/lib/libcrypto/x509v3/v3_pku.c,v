head	1.13;
access;
symbols
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13;
locks; strict;
comment	@ * @;


1.13
date	2016.12.30.15.54.49;	author jsing;	state Exp;
branches;
next	1.12;
commitid	kn1H5Mumrqi1t2NN;

1.12
date	2015.07.29.16.13.49;	author jsing;	state Exp;
branches;
next	1.11;
commitid	p0YErzIitgRtixdM;

1.11
date	2015.07.25.16.00.14;	author jsing;	state Exp;
branches;
next	1.10;
commitid	IQmUl7Av61G6tr84;

1.10
date	2015.02.09.16.03.11;	author jsing;	state Exp;
branches;
next	1.9;
commitid	xIhBiKP17QbaVYG2;

1.9
date	2014.07.11.08.44.49;	author jsing;	state Exp;
branches;
next	1.8;
commitid	yQEL1wOWIearrW15;

1.8
date	2014.06.12.15.49.31;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	mJUVYpkFBZ0Zv2bG;

1.7
date	2014.05.26.12.10.11;	author jsing;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.09.12.15.52;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.52;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.15.02.29.17;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.12.15.02.58.18;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.12.19;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.36.54;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.03;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.47;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2009.01.09.12.14.01;	author djm;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Expand ASN1_ITEM_ref and ASN1_ITEM_ptr macros - no change in generated
assembly. Of particular interest is ASN1_ITEM_ptr which does nothing
and resulted in code like:

  if (method->it)
    ASN1_ITEM_free(..., ASN1_ITEM_ptr(method->it));
@
text
@/* $OpenBSD: v3_pku.c,v 1.12 2015/07/29 16:13:49 jsing Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 1999.
 */
/* ====================================================================
 * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>

#include <openssl/asn1.h>
#include <openssl/asn1t.h>
#include <openssl/x509v3.h>

static int i2r_PKEY_USAGE_PERIOD(X509V3_EXT_METHOD *method,
    PKEY_USAGE_PERIOD *usage, BIO *out, int indent);
/*
static PKEY_USAGE_PERIOD *v2i_PKEY_USAGE_PERIOD(X509V3_EXT_METHOD *method, X509V3_CTX *ctx, STACK_OF(CONF_VALUE) *values);
*/
const X509V3_EXT_METHOD v3_pkey_usage_period = {
	.ext_nid = NID_private_key_usage_period,
	.ext_flags = 0,
	.it = &PKEY_USAGE_PERIOD_it,
	.ext_new = NULL,
	.ext_free = NULL,
	.d2i = NULL,
	.i2d = NULL,
	.i2s = NULL,
	.s2i = NULL,
	.i2v = NULL,
	.v2i = NULL,
	.i2r = (X509V3_EXT_I2R)i2r_PKEY_USAGE_PERIOD,
	.r2i = NULL,
	.usr_data = NULL,
};

static const ASN1_TEMPLATE PKEY_USAGE_PERIOD_seq_tt[] = {
	{
		.flags = ASN1_TFLG_IMPLICIT | ASN1_TFLG_OPTIONAL,
		.tag = 0,
		.offset = offsetof(PKEY_USAGE_PERIOD, notBefore),
		.field_name = "notBefore",
		.item = &ASN1_GENERALIZEDTIME_it,
	},
	{
		.flags = ASN1_TFLG_IMPLICIT | ASN1_TFLG_OPTIONAL,
		.tag = 1,
		.offset = offsetof(PKEY_USAGE_PERIOD, notAfter),
		.field_name = "notAfter",
		.item = &ASN1_GENERALIZEDTIME_it,
	},
};

const ASN1_ITEM PKEY_USAGE_PERIOD_it = {
	.itype = ASN1_ITYPE_SEQUENCE,
	.utype = V_ASN1_SEQUENCE,
	.templates = PKEY_USAGE_PERIOD_seq_tt,
	.tcount = sizeof(PKEY_USAGE_PERIOD_seq_tt) / sizeof(ASN1_TEMPLATE),
	.funcs = NULL,
	.size = sizeof(PKEY_USAGE_PERIOD),
	.sname = "PKEY_USAGE_PERIOD",
};


PKEY_USAGE_PERIOD *
d2i_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD **a, const unsigned char **in, long len)
{
	return (PKEY_USAGE_PERIOD *)ASN1_item_d2i((ASN1_VALUE **)a, in, len,
	    &PKEY_USAGE_PERIOD_it);
}

int
i2d_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD *a, unsigned char **out)
{
	return ASN1_item_i2d((ASN1_VALUE *)a, out, &PKEY_USAGE_PERIOD_it);
}

PKEY_USAGE_PERIOD *
PKEY_USAGE_PERIOD_new(void)
{
	return (PKEY_USAGE_PERIOD *)ASN1_item_new(&PKEY_USAGE_PERIOD_it);
}

void
PKEY_USAGE_PERIOD_free(PKEY_USAGE_PERIOD *a)
{
	ASN1_item_free((ASN1_VALUE *)a, &PKEY_USAGE_PERIOD_it);
}

static int
i2r_PKEY_USAGE_PERIOD(X509V3_EXT_METHOD *method, PKEY_USAGE_PERIOD *usage,
    BIO *out, int indent)
{
	BIO_printf(out, "%*s", indent, "");
	if (usage->notBefore) {
		BIO_write(out, "Not Before: ", 12);
		ASN1_GENERALIZEDTIME_print(out, usage->notBefore);
		if (usage->notAfter)
			BIO_write(out, ", ", 2);
	}
	if (usage->notAfter) {
		BIO_write(out, "Not After: ", 11);
		ASN1_GENERALIZEDTIME_print(out, usage->notAfter);
	}
	return 1;
}

/*
static PKEY_USAGE_PERIOD *v2i_PKEY_USAGE_PERIOD(method, ctx, values)
X509V3_EXT_METHOD *method;
X509V3_CTX *ctx;
STACK_OF(CONF_VALUE) *values;
{
return NULL;
}
*/
@


1.12
log
@Use named initialisers for X509V3_EXT_METHOD structs (for the usual
reasons) - only change in generated assembly is due to line numbering.
@
text
@d1 1
a1 1
/* $OpenBSD: v3_pku.c,v 1.11 2015/07/25 16:00:14 jsing Exp $ */
d73 1
a73 1
	.it = ASN1_ITEM_ref(PKEY_USAGE_PERIOD),
@


1.11
log
@Expand ASN.1 template macros - the generated assembly only differs by
changes to line numbers.
@
text
@d1 1
a1 1
/* $OpenBSD: v3_pku.c,v 1.10 2015/02/09 16:03:11 jsing Exp $ */
d71 14
a84 5
	NID_private_key_usage_period, 0, ASN1_ITEM_ref(PKEY_USAGE_PERIOD),
	0, 0, 0, 0,
	0, 0, 0, 0,
	(X509V3_EXT_I2R)i2r_PKEY_USAGE_PERIOD, NULL,
	NULL
@


1.10
log
@Expand the IMPLEMENT_ASN1_FUNCTIONS macro so that the code is visible and
functions can be readily located.

Change has been scripted and the generated assembly only differs by changes
to line numbers.

Discussed with beck@@ miod@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: v3_pku.c,v 1.9 2014/07/11 08:44:49 jsing Exp $ */
d78 26
a103 4
ASN1_SEQUENCE(PKEY_USAGE_PERIOD) = {
	ASN1_IMP_OPT(PKEY_USAGE_PERIOD, notBefore, ASN1_GENERALIZEDTIME, 0),
	ASN1_IMP_OPT(PKEY_USAGE_PERIOD, notAfter, ASN1_GENERALIZEDTIME, 1)
} ASN1_SEQUENCE_END(PKEY_USAGE_PERIOD)
@


1.9
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: v3_pku.c,v 1.8 2014/06/12 15:49:31 deraadt Exp $ */
d83 25
a107 1
IMPLEMENT_ASN1_FUNCTIONS(PKEY_USAGE_PERIOD)
@


1.8
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d60 1
a60 1
#include "cryptlib.h"
@


1.7
log
@KNF.
@
text
@d1 1
a1 1
/* v3_pku.c */
@


1.6
log
@resolve conflicts
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d65 2
a66 1
static int i2r_PKEY_USAGE_PERIOD(X509V3_EXT_METHOD *method, PKEY_USAGE_PERIOD *usage, BIO *out, int indent);
d71 5
a75 5
NID_private_key_usage_period, 0, ASN1_ITEM_ref(PKEY_USAGE_PERIOD),
0,0,0,0,
0,0,0,0,
(X509V3_EXT_I2R)i2r_PKEY_USAGE_PERIOD, NULL,
NULL
d85 3
a87 2
static int i2r_PKEY_USAGE_PERIOD(X509V3_EXT_METHOD *method,
	     PKEY_USAGE_PERIOD *usage, BIO *out, int indent)
d90 1
a90 1
	if(usage->notBefore) {
d93 2
a94 1
		if(usage->notAfter) BIO_write(out, ", ", 2);
d96 1
a96 1
	if(usage->notAfter) {
@


1.5
log
@resolve conflicts
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.4
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d69 1
a69 1
X509V3_EXT_METHOD v3_pkey_usage_period = {
@


1.3
log
@openssl-engine-0.9.6 merge
@
text
@d62 1
a62 1
#include <openssl/asn1_mac.h>
d70 3
a72 6
NID_private_key_usage_period, 0,
(X509V3_EXT_NEW)PKEY_USAGE_PERIOD_new,
(X509V3_EXT_FREE)PKEY_USAGE_PERIOD_free,
(X509V3_EXT_D2I)d2i_PKEY_USAGE_PERIOD,
(X509V3_EXT_I2D)i2d_PKEY_USAGE_PERIOD,
NULL, NULL, NULL, NULL,
d77 4
a80 3
int i2d_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD *a, unsigned char **pp)
{
	M_ASN1_I2D_vars(a);
d82 1
a82 42
	M_ASN1_I2D_len_IMP_opt (a->notBefore, i2d_ASN1_GENERALIZEDTIME);
	M_ASN1_I2D_len_IMP_opt (a->notAfter, i2d_ASN1_GENERALIZEDTIME);

	M_ASN1_I2D_seq_total();

	M_ASN1_I2D_put_IMP_opt (a->notBefore, i2d_ASN1_GENERALIZEDTIME, 0);
	M_ASN1_I2D_put_IMP_opt (a->notAfter, i2d_ASN1_GENERALIZEDTIME, 1);

	M_ASN1_I2D_finish();
}

PKEY_USAGE_PERIOD *PKEY_USAGE_PERIOD_new(void)
{
	PKEY_USAGE_PERIOD *ret=NULL;
	ASN1_CTX c;
	M_ASN1_New_Malloc(ret, PKEY_USAGE_PERIOD);
	ret->notBefore = NULL;
	ret->notAfter = NULL;
	return (ret);
	M_ASN1_New_Error(ASN1_F_PKEY_USAGE_PERIOD_NEW);
}

PKEY_USAGE_PERIOD *d2i_PKEY_USAGE_PERIOD(PKEY_USAGE_PERIOD **a,
	     unsigned char **pp, long length)
{
	M_ASN1_D2I_vars(a,PKEY_USAGE_PERIOD *,PKEY_USAGE_PERIOD_new);
	M_ASN1_D2I_Init();
	M_ASN1_D2I_start_sequence();
	M_ASN1_D2I_get_IMP_opt (ret->notBefore, d2i_ASN1_GENERALIZEDTIME, 0,
							V_ASN1_GENERALIZEDTIME);
	M_ASN1_D2I_get_IMP_opt (ret->notAfter, d2i_ASN1_GENERALIZEDTIME, 1,
							V_ASN1_GENERALIZEDTIME);
	M_ASN1_D2I_Finish(a, PKEY_USAGE_PERIOD_free, ASN1_F_D2I_PKEY_USAGE_PERIOD);
}

void PKEY_USAGE_PERIOD_free(PKEY_USAGE_PERIOD *a)
{
	if (a == NULL) return;
	M_ASN1_GENERALIZEDTIME_free(a->notBefore);
	M_ASN1_GENERALIZEDTIME_free(a->notAfter);
	OPENSSL_free (a);
}
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d124 1
a124 1
	Free (a);
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d122 3
a124 3
	ASN1_GENERALIZEDTIME_free(a->notBefore);
	ASN1_GENERALIZEDTIME_free(a->notAfter);
	Free ((char *)a);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d62 1
a62 1
#include <openssl/asn1t.h>
d70 6
a75 3
NID_private_key_usage_period, 0, ASN1_ITEM_ref(PKEY_USAGE_PERIOD),
0,0,0,0,
0,0,0,0,
d80 3
a82 4
ASN1_SEQUENCE(PKEY_USAGE_PERIOD) = {
	ASN1_IMP_OPT(PKEY_USAGE_PERIOD, notBefore, ASN1_GENERALIZEDTIME, 0),
	ASN1_IMP_OPT(PKEY_USAGE_PERIOD, notAfter, ASN1_GENERALIZEDTIME, 1)
} ASN1_SEQUENCE_END(PKEY_USAGE_PERIOD)
d84 42
a125 1
IMPLEMENT_ASN1_FUNCTIONS(PKEY_USAGE_PERIOD)
@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@d69 1
a69 1
const X509V3_EXT_METHOD v3_pkey_usage_period = {
@


1.1.1.3
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
@


