head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.6
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9;
locks; strict;
comment	@ * @;


1.9
date	2015.07.15.16.53.42;	author miod;	state Exp;
branches;
next	1.8;
commitid	UcVEM5pkLPw7hnUq;

1.8
date	2014.07.11.08.44.49;	author jsing;	state Exp;
branches;
next	1.7;
commitid	yQEL1wOWIearrW15;

1.7
date	2014.06.12.15.49.31;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	mJUVYpkFBZ0Zv2bG;

1.6
date	2014.04.21.08.41.26;	author jsing;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.17.13.37.49;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2010.10.01.22.58.57;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2009.01.09.12.15.52;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.05.21.36.38;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.06.12.15.47;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.06.12.15.47;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2009.01.09.12.14.00;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.10.01.22.54.11;	author djm;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Avoid leaking objects upon error; tweaks & ok doug@@
@
text
@/* $OpenBSD: pcy_data.c,v 1.8 2014/07/11 08:44:49 jsing Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 2004.
 */
/* ====================================================================
 * Copyright (c) 2004 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <openssl/x509.h>
#include <openssl/x509v3.h>

#include "pcy_int.h"

/* Policy Node routines */

void
policy_data_free(X509_POLICY_DATA *data)
{
	ASN1_OBJECT_free(data->valid_policy);
	/* Don't free qualifiers if shared */
	if (!(data->flags & POLICY_DATA_FLAG_SHARED_QUALIFIERS))
		sk_POLICYQUALINFO_pop_free(data->qualifier_set,
		    POLICYQUALINFO_free);
	sk_ASN1_OBJECT_pop_free(data->expected_policy_set, ASN1_OBJECT_free);
	free(data);
}

/* Create a data based on an existing policy. If 'id' is NULL use the
 * oid in the policy, otherwise use 'id'. This behaviour covers the two
 * types of data in RFC3280: data with from a CertificatePolcies extension
 * and additional data with just the qualifiers of anyPolicy and ID from
 * another source.
 */

X509_POLICY_DATA *
policy_data_new(POLICYINFO *policy, const ASN1_OBJECT *cid, int crit)
{
	X509_POLICY_DATA *ret = NULL;
	ASN1_OBJECT *id = NULL;

	if (policy == NULL && cid == NULL)
		return NULL;
	if (cid != NULL) {
		id = OBJ_dup(cid);
		if (id == NULL)
			return NULL;
	}
	ret = malloc(sizeof(X509_POLICY_DATA));
	if (ret == NULL)
		goto err;
	ret->expected_policy_set = sk_ASN1_OBJECT_new_null();
	if (ret->expected_policy_set == NULL)
		goto err;

	if (crit)
		ret->flags = POLICY_DATA_FLAG_CRITICAL;
	else
		ret->flags = 0;

	if (id != NULL)
		ret->valid_policy = id;
	else {
		ret->valid_policy = policy->policyid;
		policy->policyid = NULL;
	}

	if (policy != NULL) {
		ret->qualifier_set = policy->qualifiers;
		policy->qualifiers = NULL;
	} else
		ret->qualifier_set = NULL;

	return ret;

err:
	free(ret);
	ASN1_OBJECT_free(id);
	return NULL;
}
@


1.8
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: pcy_data.c,v 1.7 2014/06/12 15:49:31 deraadt Exp $ */
d88 2
a89 2
	X509_POLICY_DATA *ret;
	ASN1_OBJECT *id;
d91 1
a91 1
	if (!policy && !cid)
d93 1
a93 1
	if (cid) {
d95 1
a95 1
		if (!id)
d97 1
a97 2
	} else
		id = NULL;
d99 2
a100 2
	if (!ret)
		return NULL;
d102 2
a103 6
	if (!ret->expected_policy_set) {
		free(ret);
		if (id)
			ASN1_OBJECT_free(id);
		return NULL;
	}
d110 1
a110 1
	if (id)
d117 1
a117 1
	if (policy) {
d124 5
@


1.7
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a58 1
#include "cryptlib.h"
@


1.6
log
@KNF.
@
text
@d1 1
a1 1
/* pcy_data.c */
@


1.5
log
@Change library to use intrinsic memory allocation functions instead of
OPENSSL_foo wrappers. This changes:
OPENSSL_malloc->malloc
OPENSSL_free->free
OPENSSL_relloc->realloc
OPENSSL_freeFunc->free
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d67 3
a69 2
void policy_data_free(X509_POLICY_DATA *data)
	{
d74 1
a74 1
					POLICYQUALINFO_free);
d77 1
a77 1
	}
d86 3
a88 3
X509_POLICY_DATA *policy_data_new(POLICYINFO *policy,
					const ASN1_OBJECT *cid, int crit)
	{
d91 1
d94 1
a94 2
	if (cid)
		{
d98 1
a98 2
		}
	else
d104 1
a104 2
	if (!ret->expected_policy_set)
		{
d109 1
a109 1
		}
d118 1
a118 2
	else
		{
d121 1
a121 1
		}
d123 1
a123 2
	if (policy)
		{
d126 1
a126 2
		}
	else
d130 1
a130 2
	}

@


1.4
log
@resolve conflicts, fix local changes
@
text
@d75 1
a75 1
	OPENSSL_free(data);
d100 1
a100 1
	ret = OPENSSL_malloc(sizeof(X509_POLICY_DATA));
d106 1
a106 1
		OPENSSL_free(ret);
@


1.3
log
@resolve conflicts
@
text
@d85 2
a86 1
X509_POLICY_DATA *policy_data_new(POLICYINFO *policy, ASN1_OBJECT *id, int crit)
d89 2
a90 1
	if (!policy && !id)
d92 1
a92 1
	if (id)
d94 1
a94 1
		id = OBJ_dup(id);
d98 2
@


1.2
log
@update to openssl-0.9.8i; tested by several, especially krw@@
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.1
log
@Initial revision
@
text
@d90 6
d103 2
@


1.1.1.1
log
@import of OpenSSL 0.9.8h
@
text
@@


1.1.1.2
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
a89 6
	if (id)
		{
		id = OBJ_dup(id);
		if (!id)
			return NULL;
		}
a96 2
		if (id)
			ASN1_OBJECT_free(id);
@


1.1.1.3
log
@import OpenSSL-1.0.0a
@
text
@d85 1
a85 2
X509_POLICY_DATA *policy_data_new(POLICYINFO *policy,
					const ASN1_OBJECT *cid, int crit)
d88 1
a88 2
	ASN1_OBJECT *id;
	if (!policy && !cid)
d90 1
a90 1
	if (cid)
d92 1
a92 1
		id = OBJ_dup(cid);
a95 2
	else
		id = NULL;
@


