head	1.11;
access;
symbols
	OPENBSD_6_2:1.11.0.6
	OPENBSD_6_2_BASE:1.11
	OPENBSD_6_1:1.11.0.4
	OPENBSD_6_1_BASE:1.11;
locks; strict;
comment	@ * @;


1.11
date	2016.12.30.15.54.49;	author jsing;	state Exp;
branches;
next	1.10;
commitid	kn1H5Mumrqi1t2NN;

1.10
date	2015.07.29.16.13.48;	author jsing;	state Exp;
branches;
next	1.9;
commitid	p0YErzIitgRtixdM;

1.9
date	2014.07.11.08.44.49;	author jsing;	state Exp;
branches;
next	1.8;
commitid	yQEL1wOWIearrW15;

1.8
date	2014.06.12.15.49.31;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	mJUVYpkFBZ0Zv2bG;

1.7
date	2014.04.21.16.59.26;	author jsing;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.09.12.15.52;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.52;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.05.39.27;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.17;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.12.19;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.36.54;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.02;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.18;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.47;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.14.01;	author djm;	state Exp;
branches;
next	;


desc
@@


1.11
log
@Expand ASN1_ITEM_ref and ASN1_ITEM_ptr macros - no change in generated
assembly. Of particular interest is ASN1_ITEM_ptr which does nothing
and resulted in code like:

  if (method->it)
    ASN1_ITEM_free(..., ASN1_ITEM_ptr(method->it));
@
text
@/* $OpenBSD: v3_int.c,v 1.10 2015/07/29 16:13:48 jsing Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 1999.
 */
/* ====================================================================
 * Copyright (c) 1999-2004 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>

#include <openssl/x509v3.h>

const X509V3_EXT_METHOD v3_crl_num = {
	.ext_nid = NID_crl_number,
	.ext_flags = 0,
	.it = &ASN1_INTEGER_it,
	.ext_new = NULL,
	.ext_free = NULL,
	.d2i = NULL,
	.i2d = NULL,
	.i2s = (X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	.s2i = NULL,
	.i2v = NULL,
	.v2i = NULL,
	.i2r = NULL,
	.r2i = NULL,
	.usr_data = NULL,
};

const X509V3_EXT_METHOD v3_delta_crl = {
	.ext_nid = NID_delta_crl,
	.ext_flags = 0,
	.it = &ASN1_INTEGER_it,
	.ext_new = NULL,
	.ext_free = NULL,
	.d2i = NULL,
	.i2d = NULL,
	.i2s = (X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	.s2i = NULL,
	.i2v = NULL,
	.v2i = NULL,
	.i2r = NULL,
	.r2i = NULL,
	.usr_data = NULL,
};

static void *
s2i_asn1_int(X509V3_EXT_METHOD *meth, X509V3_CTX *ctx, char *value)
{
	return s2i_ASN1_INTEGER(meth, value);
}

const X509V3_EXT_METHOD v3_inhibit_anyp = {
	NID_inhibit_any_policy, 0, &ASN1_INTEGER_it,
	0, 0, 0, 0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	(X509V3_EXT_S2I)s2i_asn1_int,
	0, 0, 0, 0,
	NULL
};
@


1.10
log
@Use named initialisers for X509V3_EXT_METHOD structs (for the usual
reasons) - only change in generated assembly is due to line numbering.
@
text
@d1 1
a1 1
/* $OpenBSD: v3_int.c,v 1.9 2014/07/11 08:44:49 jsing Exp $ */
d66 1
a66 1
	.it = ASN1_ITEM_ref(ASN1_INTEGER),
d83 1
a83 1
	.it = ASN1_ITEM_ref(ASN1_INTEGER),
d104 1
a104 1
	NID_inhibit_any_policy, 0, ASN1_ITEM_ref(ASN1_INTEGER),
@


1.9
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: v3_int.c,v 1.8 2014/06/12 15:49:31 deraadt Exp $ */
d64 14
a77 6
	NID_crl_number, 0, ASN1_ITEM_ref(ASN1_INTEGER),
	0, 0, 0, 0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	0,
	0, 0, 0, 0,
	NULL
d81 14
a94 6
	NID_delta_crl, 0, ASN1_ITEM_ref(ASN1_INTEGER),
	0, 0, 0, 0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	0,
	0, 0, 0, 0,
	NULL
@


1.8
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d60 1
a60 1
#include "cryptlib.h"
@


1.7
log
@KNF.
@
text
@d1 1
a1 1
/* v3_int.c */
@


1.6
log
@resolve conflicts
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d63 1
a63 1
const X509V3_EXT_METHOD v3_crl_num = { 
d65 1
a65 1
	0,0,0,0,
d68 3
a70 1
	0,0,0,0, NULL};
d72 1
a72 1
const X509V3_EXT_METHOD v3_delta_crl = { 
d74 1
a74 1
	0,0,0,0,
d77 7
a83 4
	0,0,0,0, NULL};

static void * s2i_asn1_int(X509V3_EXT_METHOD *meth, X509V3_CTX *ctx, char *value)
	{
d85 1
a85 1
	}
d87 1
a87 1
const X509V3_EXT_METHOD v3_inhibit_anyp = { 
d89 1
a89 1
	0,0,0,0,
d92 3
a94 3
	0,0,0,0, NULL};


@


1.5
log
@resolve conflicts
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.4
log
@resolve conflicts
@
text
@d63 1
a63 1
X509V3_EXT_METHOD v3_crl_num = { 
d70 1
a70 1
X509V3_EXT_METHOD v3_delta_crl = { 
d76 13
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d6 1
a6 1
 * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
d64 12
a75 5
NID_crl_number, 0, ASN1_ITEM_ref(ASN1_INTEGER),
0,0,0,0,
(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
0,
0,0,0,0, NULL};
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d64 2
a65 5
NID_crl_number, 0,
(X509V3_EXT_NEW)ASN1_INTEGER_new,
(X509V3_EXT_FREE)ASN1_INTEGER_free,
(X509V3_EXT_D2I)d2i_ASN1_INTEGER,
(X509V3_EXT_I2D)i2d_ASN1_INTEGER,
d67 2
a68 2
(X509V3_EXT_S2I)0,
NULL, NULL, NULL, NULL, NULL};
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@a62 2
static ASN1_INTEGER *asn1_integer_new(void);

d65 2
a66 2
(X509V3_EXT_NEW)asn1_integer_new,
(X509V3_EXT_FREE)ASN1_STRING_free,
d70 1
a70 1
(X509V3_EXT_S2I)NULL,
a72 5

static ASN1_INTEGER *asn1_integer_new(void)
{
	return ASN1_INTEGER_new();
}
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d63 2
d66 5
a70 2
NID_crl_number, 0, ASN1_ITEM_ref(ASN1_INTEGER),
0,0,0,0,
d72 3
a74 2
0,
0,0,0,0, NULL};
d76 4
@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d6 1
a6 1
 * Copyright (c) 1999-2004 The OpenSSL Project.  All rights reserved.
d64 5
a68 12
	NID_crl_number, 0, ASN1_ITEM_ref(ASN1_INTEGER),
	0,0,0,0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	0,
	0,0,0,0, NULL};

X509V3_EXT_METHOD v3_delta_crl = { 
	NID_delta_crl, 0, ASN1_ITEM_ref(ASN1_INTEGER),
	0,0,0,0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	0,
	0,0,0,0, NULL};
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d63 1
a63 1
const X509V3_EXT_METHOD v3_crl_num = { 
d70 1
a70 1
const X509V3_EXT_METHOD v3_delta_crl = { 
a75 13

static void * s2i_asn1_int(X509V3_EXT_METHOD *meth, X509V3_CTX *ctx, char *value)
	{
	return s2i_ASN1_INTEGER(meth, value);
	}

const X509V3_EXT_METHOD v3_inhibit_anyp = { 
	NID_inhibit_any_policy, 0, ASN1_ITEM_ref(ASN1_INTEGER),
	0,0,0,0,
	(X509V3_EXT_I2S)i2s_ASN1_INTEGER,
	(X509V3_EXT_S2I)s2i_asn1_int,
	0,0,0,0, NULL};

@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
@


