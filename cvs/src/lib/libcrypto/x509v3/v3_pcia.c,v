head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.2
	OPENBSD_6_1_BASE:1.6;
locks; strict;
comment	@ * @;


1.6
date	2015.07.25.16.00.14;	author jsing;	state Exp;
branches;
next	1.5;
commitid	IQmUl7Av61G6tr84;

1.5
date	2015.02.09.16.03.11;	author jsing;	state Exp;
branches;
next	1.4;
commitid	xIhBiKP17QbaVYG2;

1.4
date	2014.06.12.15.49.31;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	mJUVYpkFBZ0Zv2bG;

1.3
date	2014.06.11.01.53.02;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	4evB2EbwDYaBfe0g;

1.2
date	2014.05.26.12.10.11;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.29.05.37.18;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.04.29.05.37.18;	author djm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Expand ASN.1 template macros - the generated assembly only differs by
changes to line numbers.
@
text
@/* $OpenBSD: v3_pcia.c,v 1.5 2015/02/09 16:03:11 jsing Exp $ */
/* Contributed to the OpenSSL Project 2004
 * by Richard Levitte (richard@@levitte.org)
 */
/* Copyright (c) 2004 Kungliga Tekniska Högskolan
 * (Royal Institute of Technology, Stockholm, Sweden).
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the Institute nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <openssl/asn1.h>
#include <openssl/asn1t.h>
#include <openssl/x509v3.h>

static const ASN1_TEMPLATE PROXY_POLICY_seq_tt[] = {
	{
		.flags = 0,
		.tag = 0,
		.offset = offsetof(PROXY_POLICY, policyLanguage),
		.field_name = "policyLanguage",
		.item = &ASN1_OBJECT_it,
	},
	{
		.flags = ASN1_TFLG_OPTIONAL,
		.tag = 0,
		.offset = offsetof(PROXY_POLICY, policy),
		.field_name = "policy",
		.item = &ASN1_OCTET_STRING_it,
	},
};

const ASN1_ITEM PROXY_POLICY_it = {
	.itype = ASN1_ITYPE_SEQUENCE,
	.utype = V_ASN1_SEQUENCE,
	.templates = PROXY_POLICY_seq_tt,
	.tcount = sizeof(PROXY_POLICY_seq_tt) / sizeof(ASN1_TEMPLATE),
	.funcs = NULL,
	.size = sizeof(PROXY_POLICY),
	.sname = "PROXY_POLICY",
};


PROXY_POLICY *
d2i_PROXY_POLICY(PROXY_POLICY **a, const unsigned char **in, long len)
{
	return (PROXY_POLICY *)ASN1_item_d2i((ASN1_VALUE **)a, in, len,
	    &PROXY_POLICY_it);
}

int
i2d_PROXY_POLICY(PROXY_POLICY *a, unsigned char **out)
{
	return ASN1_item_i2d((ASN1_VALUE *)a, out, &PROXY_POLICY_it);
}

PROXY_POLICY *
PROXY_POLICY_new(void)
{
	return (PROXY_POLICY *)ASN1_item_new(&PROXY_POLICY_it);
}

void
PROXY_POLICY_free(PROXY_POLICY *a)
{
	ASN1_item_free((ASN1_VALUE *)a, &PROXY_POLICY_it);
}

static const ASN1_TEMPLATE PROXY_CERT_INFO_EXTENSION_seq_tt[] = {
	{
		.flags = ASN1_TFLG_OPTIONAL,
		.tag = 0,
		.offset = offsetof(PROXY_CERT_INFO_EXTENSION, pcPathLengthConstraint),
		.field_name = "pcPathLengthConstraint",
		.item = &ASN1_INTEGER_it,
	},
	{
		.flags = 0,
		.tag = 0,
		.offset = offsetof(PROXY_CERT_INFO_EXTENSION, proxyPolicy),
		.field_name = "proxyPolicy",
		.item = &PROXY_POLICY_it,
	},
};

const ASN1_ITEM PROXY_CERT_INFO_EXTENSION_it = {
	.itype = ASN1_ITYPE_SEQUENCE,
	.utype = V_ASN1_SEQUENCE,
	.templates = PROXY_CERT_INFO_EXTENSION_seq_tt,
	.tcount = sizeof(PROXY_CERT_INFO_EXTENSION_seq_tt) / sizeof(ASN1_TEMPLATE),
	.funcs = NULL,
	.size = sizeof(PROXY_CERT_INFO_EXTENSION),
	.sname = "PROXY_CERT_INFO_EXTENSION",
};


PROXY_CERT_INFO_EXTENSION *
d2i_PROXY_CERT_INFO_EXTENSION(PROXY_CERT_INFO_EXTENSION **a, const unsigned char **in, long len)
{
	return (PROXY_CERT_INFO_EXTENSION *)ASN1_item_d2i((ASN1_VALUE **)a, in, len,
	    &PROXY_CERT_INFO_EXTENSION_it);
}

int
i2d_PROXY_CERT_INFO_EXTENSION(PROXY_CERT_INFO_EXTENSION *a, unsigned char **out)
{
	return ASN1_item_i2d((ASN1_VALUE *)a, out, &PROXY_CERT_INFO_EXTENSION_it);
}

PROXY_CERT_INFO_EXTENSION *
PROXY_CERT_INFO_EXTENSION_new(void)
{
	return (PROXY_CERT_INFO_EXTENSION *)ASN1_item_new(&PROXY_CERT_INFO_EXTENSION_it);
}

void
PROXY_CERT_INFO_EXTENSION_free(PROXY_CERT_INFO_EXTENSION *a)
{
	ASN1_item_free((ASN1_VALUE *)a, &PROXY_CERT_INFO_EXTENSION_it);
}
@


1.5
log
@Expand the IMPLEMENT_ASN1_FUNCTIONS macro so that the code is visible and
functions can be readily located.

Change has been scripted and the generated assembly only differs by changes
to line numbers.

Discussed with beck@@ miod@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: v3_pcia.c,v 1.4 2014/06/12 15:49:31 deraadt Exp $ */
d41 26
a66 4
ASN1_SEQUENCE(PROXY_POLICY) = {
	ASN1_SIMPLE(PROXY_POLICY, policyLanguage, ASN1_OBJECT),
	ASN1_OPT(PROXY_POLICY, policy, ASN1_OCTET_STRING)
} ASN1_SEQUENCE_END(PROXY_POLICY)
d94 26
a119 5
ASN1_SEQUENCE(PROXY_CERT_INFO_EXTENSION) = {
	ASN1_OPT(PROXY_CERT_INFO_EXTENSION, pcPathLengthConstraint,
	    ASN1_INTEGER),
	ASN1_SIMPLE(PROXY_CERT_INFO_EXTENSION, proxyPolicy, PROXY_POLICY)
} ASN1_SEQUENCE_END(PROXY_CERT_INFO_EXTENSION)
@


1.4
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d46 25
a70 1
IMPLEMENT_ASN1_FUNCTIONS(PROXY_POLICY)
d78 25
a102 1
IMPLEMENT_ASN1_FUNCTIONS(PROXY_CERT_INFO_EXTENSION)
@


1.3
log
@c-file-style hints, begone; ok beck
@
text
@d1 1
a1 1
/* v3_pcia.c */
@


1.2
log
@KNF.
@
text
@d1 1
a1 1
/* v3_pcia.c -*- mode:C; c-file-style: "eay" -*- */
@


1.1
log
@Initial revision
@
text
@d41 3
a43 4
ASN1_SEQUENCE(PROXY_POLICY) =
	{
	ASN1_SIMPLE(PROXY_POLICY,policyLanguage,ASN1_OBJECT),
	ASN1_OPT(PROXY_POLICY,policy,ASN1_OCTET_STRING)
d48 4
a51 4
ASN1_SEQUENCE(PROXY_CERT_INFO_EXTENSION) =
	{
	ASN1_OPT(PROXY_CERT_INFO_EXTENSION,pcPathLengthConstraint,ASN1_INTEGER),
	ASN1_SIMPLE(PROXY_CERT_INFO_EXTENSION,proxyPolicy,PROXY_POLICY)
@


1.1.1.1
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@@
