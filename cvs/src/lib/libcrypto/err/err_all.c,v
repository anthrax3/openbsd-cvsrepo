head	1.23;
access;
symbols
	OPENBSD_6_1_BASE:1.23;
locks; strict;
comment	@ * @;


1.23
date	2016.10.19.16.49.11;	author jsing;	state Exp;
branches;
next	1.22;
commitid	jPDvHFzYCLsD7MQG;

1.22
date	2015.02.11.04.05.14;	author beck;	state Exp;
branches;
next	1.21;
commitid	BiQ5VBK0FHpjQNna;

1.21
date	2015.02.11.03.55.42;	author beck;	state Exp;
branches;
next	1.20;
commitid	1omCojArcEf3nCrU;

1.20
date	2015.02.11.03.55.00;	author beck;	state Exp;
branches;
next	1.19;
commitid	HsOaJkRp8GJ6kln4;

1.19
date	2014.11.09.19.17.13;	author miod;	state Exp;
branches;
next	1.18;
commitid	QrgOG8zcUIADOfFd;

1.18
date	2014.10.18.17.08.32;	author jsing;	state Exp;
branches;
next	1.17;
commitid	iHZhD4a9Z4sdzqOw;

1.17
date	2014.07.11.08.00.25;	author jsing;	state Exp;
branches;
next	1.16;
commitid	B4tyZHXZuv1xXOI5;

1.16
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.15;
commitid	nzndm3zqPmFurSaK;

1.15
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.14;
commitid	mJUVYpkFBZ0Zv2bG;

1.14
date	2014.04.21.14.50.59;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.15.20.06.09;	author tedu;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.13.15.25.33;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2010.10.01.22.58.55;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2008.09.06.12.17.50;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2005.04.29.05.39.21;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2003.05.12.02.18.37;	author markus;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.15.02.29.14;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.02.57.37;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.10.11;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.36.07;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.47;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.47;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.50.25;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.35.16;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.04.29.05.37.10;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.06.12.15.43;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2009.01.09.12.13.56;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2010.10.01.22.54.07;	author djm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2012.10.13.21.23.40;	author djm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2014.04.13.15.16.34;	author miod;	state Exp;
branches;
next	;


desc
@@


1.23
log
@unifdef OPENSSL_NO_CMS
@
text
@/* $OpenBSD: err_all.c,v 1.22 2015/02/11 04:05:14 beck Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stdio.h>

#include <openssl/opensslconf.h>

#include <openssl/asn1.h>
#include <openssl/bio.h>
#include <openssl/bn.h>
#include <openssl/buffer.h>
#include <openssl/conf.h>
#include <openssl/dso.h>
#include <openssl/err.h>
#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/ocsp.h>
#include <openssl/pem2.h>
#include <openssl/pkcs12.h>
#include <openssl/rand.h>
#include <openssl/ts.h>
#include <openssl/ui.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>

#ifndef OPENSSL_NO_DH
#include <openssl/dh.h>
#endif
#ifndef OPENSSL_NO_DSA
#include <openssl/dsa.h>
#endif
#ifndef OPENSSL_NO_EC
#include <openssl/ec.h>
#endif
#ifndef OPENSSL_NO_ECDH
#include <openssl/ecdh.h>
#endif
#ifndef OPENSSL_NO_ECDSA
#include <openssl/ecdsa.h>
#endif
#ifndef OPENSSL_NO_ENGINE
#include <openssl/engine.h>
#endif
#ifndef OPENSSL_NO_RSA
#include <openssl/rsa.h>
#endif
#ifndef OPENSSL_NO_GOST
#include <openssl/gost.h>
#endif

void
ERR_load_crypto_strings(void)
{
#ifndef OPENSSL_NO_ERR
	ERR_load_ERR_strings(); /* include error strings for SYSerr */
	ERR_load_BN_strings();
#ifndef OPENSSL_NO_RSA
	ERR_load_RSA_strings();
#endif
#ifndef OPENSSL_NO_DH
	ERR_load_DH_strings();
#endif
	ERR_load_EVP_strings();
	ERR_load_BUF_strings();
	ERR_load_OBJ_strings();
	ERR_load_PEM_strings();
#ifndef OPENSSL_NO_DSA
	ERR_load_DSA_strings();
#endif
	ERR_load_X509_strings();
	ERR_load_ASN1_strings();
	ERR_load_CONF_strings();
	ERR_load_CRYPTO_strings();
#ifndef OPENSSL_NO_EC
	ERR_load_EC_strings();
#endif
#ifndef OPENSSL_NO_ECDSA
	ERR_load_ECDSA_strings();
#endif
#ifndef OPENSSL_NO_ECDH
	ERR_load_ECDH_strings();
#endif
	/* skip ERR_load_SSL_strings() because it is not in this library */
	ERR_load_BIO_strings();
	ERR_load_PKCS7_strings();
	ERR_load_X509V3_strings();
	ERR_load_PKCS12_strings();
	ERR_load_RAND_strings();
	ERR_load_DSO_strings();
	ERR_load_TS_strings();
#ifndef OPENSSL_NO_ENGINE
	ERR_load_ENGINE_strings();
#endif
	ERR_load_OCSP_strings();
	ERR_load_UI_strings();
#ifndef OPENSSL_NO_GOST
	ERR_load_GOST_strings();
#endif
#endif
}
@


1.22
log
@Guenther has plans for OPENSSL_NO_CMS, so revert this for the moment.
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.21 2015/02/11 03:55:42 beck Exp $ */
a80 3
#ifndef OPENSSL_NO_CMS
#include <openssl/cms.h>
#endif
a150 3
#ifndef OPENSSL_NO_CMS
	ERR_load_CMS_strings();
#endif
@


1.21
log
@get rid of OPENSSL_NO_CMS code we do not use.
ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.20 2015/02/11 03:55:00 beck Exp $ */
a117 3
#ifndef OPENSSL_NO_COMP
#include <openssl/comp.h>
#endif
d154 3
@


1.20
log
@get rid of OPENSSL_NO_COMP code we don't use.
jajaja miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.19 2014/11/09 19:17:13 miod Exp $ */
d118 3
a156 3
#ifndef OPENSSL_NO_CMS
	ERR_load_CMS_strings();
#endif
@


1.19
log
@GOST crypto algorithms (well, most of them), ported from the removed GOST
engine to regular EVP citizens, contributed by Dmitry Eremin-Solenikov;
libcrypto bits only for now.

This is a verbatim import of Dmitry's work, and does not compile in this
state; the forthcoming commits will address these issues.

None of the GOST code is enabled in libcrypto yet, for it still gets
compiled with OPENSSL_NO_GOST defined. However, the public header gost.h
will be installed.
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.18 2014/10/18 17:08:32 jsing Exp $ */
a83 3
#ifndef OPENSSL_NO_COMP
#include <openssl/comp.h>
#endif
a131 3
#ifndef OPENSSL_NO_COMP
	ERR_load_COMP_strings();
#endif
@


1.18
log
@Sort/group includes.
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.17 2014/07/11 08:00:25 jsing Exp $ */
d108 3
d162 3
@


1.17
log
@Remove JPAKE remnants - there is no jpake.h, so if OPENSSL_NO_JPAKE was
removed from opensslconf.h, this would no longer compile.
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.16 2014/07/10 22:45:57 jsing Exp $ */
d64 1
d66 17
a82 2
#ifndef OPENSSL_NO_EC
#include <openssl/ec.h>
a83 2
#include <openssl/buffer.h>
#include <openssl/bio.h>
a86 3
#ifndef OPENSSL_NO_RSA
#include <openssl/rsa.h>
#endif
d93 2
a94 2
#ifndef OPENSSL_NO_ECDSA
#include <openssl/ecdsa.h>
d99 3
a101 9
#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/pem2.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>
#include <openssl/conf.h>
#include <openssl/pkcs12.h>
#include <openssl/rand.h>
#include <openssl/dso.h>
d105 2
a106 6
#include <openssl/ui.h>
#include <openssl/ocsp.h>
#include <openssl/err.h>
#include <openssl/ts.h>
#ifndef OPENSSL_NO_CMS
#include <openssl/cms.h>
@


1.16
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: err_all.c,v 1.15 2014/06/12 15:49:29 deraadt Exp $ */
a106 3
#ifndef OPENSSL_NO_JPAKE
#include <openssl/jpake.h>
#endif
a157 3
#endif
#ifndef OPENSSL_NO_JPAKE
	ERR_load_JPAKE_strings();
@


1.15
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d60 3
@


1.14
log
@KNF.
@
text
@d1 1
a1 1
/* crypto/err/err_all.c */
@


1.13
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d8 1
a8 1
 * 
d15 1
a15 1
 * 
d22 1
a22 1
 * 
d37 1
a37 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d40 1
a40 1
 * 
d52 1
a52 1
 * 
d108 3
a110 2
void ERR_load_crypto_strings(void)
	{
d145 1
a145 1
	ERR_load_PKCS7_strings();	
d163 1
a163 1
	}
@


1.12
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@a99 3
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif
a154 3
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
#endif
@


1.11
log
@resolve conflicts
@
text
@d67 1
d69 1
d100 3
a109 5
#include <openssl/comp.h>

#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif
d133 1
d135 1
d158 3
a166 4
	ERR_load_COMP_strings();
#endif
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
@


1.10
log
@resolve conflicts, fix local changes
@
text
@d107 4
d163 3
@


1.9
log
@resolve conflicts
@
text
@d67 1
d98 1
a98 4
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif

d105 1
d129 1
d146 1
a151 3
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
#endif
d158 1
@


1.8
log
@resolve conflicts
@
text
@d97 4
d104 3
d151 3
d156 3
@


1.7
log
@resolve conflicts
@
text
@d76 6
d94 1
d97 3
a99 1
#include <openssl/fips.h>
a102 4
	static int done=0;

	if (done) return;
	done=1;
d126 6
d144 2
a146 2
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
@


1.6
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d90 1
d133 3
@


1.5
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d85 1
d87 1
d127 1
d129 1
@


1.4
log
@openssl-engine-0.9.6 merge
@
text
@d62 3
d67 1
a67 1
#ifndef NO_RSA
d70 1
a70 4
#ifdef RSAref
#include <openssl/rsaref.h>
#endif
#ifndef NO_DH
d73 1
a73 1
#ifndef NO_DSA
d86 1
d95 2
a96 2
#ifndef NO_ERR
	ERR_load_ASN1_strings();
d98 1
a98 7
	ERR_load_BUF_strings();
	ERR_load_BIO_strings();
	ERR_load_CONF_strings();
#ifndef NO_RSA
#ifdef RSAref
	ERR_load_RSAREF_strings();
#else
d101 1
a101 2
#endif
#ifndef NO_DH
a103 4
#ifndef NO_DSA
	ERR_load_DSA_strings();
#endif
	ERR_load_ERR_strings();
d105 1
d108 3
d112 9
a121 2
	ERR_load_CRYPTO_strings();
	ERR_load_PKCS7_strings();
d126 2
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d84 2
d123 2
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d83 1
d120 1
@


1.1
log
@Initial revision
@
text
@d60 4
a63 4
#include "asn1.h"
#include "bn.h"
#include "buffer.h"
#include "bio.h"
d65 1
a65 1
#include "rsa.h"
d68 1
a68 1
#include "rsaref.h"
d71 1
a71 1
#include "dh.h"
d74 1
a74 1
#include "dsa.h"
d76 8
a83 6
#include "evp.h"
#include "objects.h"
#include "pem.h"
#include "x509.h"
#include "conf.h"
#include "err.h"
d85 1
a85 1
void ERR_load_crypto_strings()
d115 1
d118 1
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d60 22
a81 28
#include <openssl/asn1.h>
#include <openssl/bn.h>
#ifndef OPENSSL_NO_EC
#include <openssl/ec.h>
#endif
#include <openssl/buffer.h>
#include <openssl/bio.h>
#ifndef OPENSSL_NO_RSA
#include <openssl/rsa.h>
#endif
#ifndef OPENSSL_NO_DH
#include <openssl/dh.h>
#endif
#ifndef OPENSSL_NO_DSA
#include <openssl/dsa.h>
#endif
#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/pem2.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>
#include <openssl/conf.h>
#include <openssl/pkcs12.h>
#include <openssl/rand.h>
#include <openssl/dso.h>
#include <openssl/engine.h>
#include <openssl/ocsp.h>
#include <openssl/err.h>
d83 1
a83 1
void ERR_load_crypto_strings(void)
d89 2
a90 2
#ifndef OPENSSL_NO_ERR
	ERR_load_ERR_strings(); /* include error strings for SYSerr */
d92 7
a98 1
#ifndef OPENSSL_NO_RSA
d101 2
a102 1
#ifndef OPENSSL_NO_DH
d105 4
a109 1
	ERR_load_BUF_strings();
a111 3
#ifndef OPENSSL_NO_DSA
	ERR_load_DSA_strings();
#endif
a112 2
	ERR_load_ASN1_strings();
	ERR_load_CONF_strings();
d114 1
a114 13
#ifndef OPENSSL_NO_EC
	ERR_load_EC_strings();
#endif
	/* skip ERR_load_SSL_strings() because it is not in this library */
	ERR_load_BIO_strings();
	ERR_load_PKCS7_strings();	
	ERR_load_X509V3_strings();
	ERR_load_PKCS12_strings();
	ERR_load_RAND_strings();
	ERR_load_DSO_strings();
	ERR_load_ENGINE_strings();
	ERR_load_OCSP_strings();
	ERR_load_UI_strings();
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@a84 1
#ifndef OPENSSL_NO_ENGINE
a85 1
#endif
a124 1
#ifndef OPENSSL_NO_ENGINE
a125 1
#endif
@


1.1.1.4
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a89 1
#include <openssl/fips.h>
a131 3
#endif
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
@


1.1.1.5
log
@import of OpenSSL 0.9.8h
@
text
@a75 6
#ifndef OPENSSL_NO_ECDSA
#include <openssl/ecdsa.h>
#endif
#ifndef OPENSSL_NO_ECDH
#include <openssl/ecdh.h>
#endif
a87 1
#include <openssl/ui.h>
d90 1
a90 3
#ifndef OPENSSL_NO_CMS
#include <openssl/cms.h>
#endif
d94 4
a120 6
#ifndef OPENSSL_NO_ECDSA
	ERR_load_ECDSA_strings();
#endif
#ifndef OPENSSL_NO_ECDH
	ERR_load_ECDH_strings();
#endif
a132 2
#ifndef OPENSSL_NO_CMS
	ERR_load_CMS_strings();
d134 2
@


1.1.1.6
log
@import openssl-0.9.8j
@
text
@a96 4
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif

a99 3
#ifndef OPENSSL_NO_JPAKE
#include <openssl/jpake.h>
#endif
a143 3
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
#endif
a145 3
#endif
#ifndef OPENSSL_NO_JPAKE
	ERR_load_JPAKE_strings();
@


1.1.1.7
log
@import OpenSSL-1.0.0a
@
text
@a66 1
#include <openssl/comp.h>
d97 4
a100 1
#include <openssl/ts.h>
a106 1
#include <openssl/comp.h>
a129 1
	ERR_load_COMP_strings();
a145 1
	ERR_load_TS_strings();
d151 3
a159 1
	ERR_load_COMP_strings();
@


1.1.1.8
log
@import OpenSSL-1.0.1c
@
text
@a106 4
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif

a158 3
#endif
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
@


1.1.1.9
log
@Import OpenSSL 1.0.1g
@
text
@a66 1
#ifndef OPENSSL_NO_COMP
a67 1
#endif
a97 3
#ifdef OPENSSL_FIPS
#include <openssl/fips.h>
#endif
d105 5
a132 1
#ifndef OPENSSL_NO_COMP
a133 1
#endif
a155 3
#ifdef OPENSSL_FIPS
	ERR_load_FIPS_strings();
#endif
d162 4
@


