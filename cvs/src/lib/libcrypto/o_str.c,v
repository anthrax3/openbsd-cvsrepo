head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9;
locks; strict;
comment	@ * @;


1.9
date	2014.07.09.20.22.14;	author tedu;	state Exp;
branches;
next	1.8;
commitid	6YBUYrOzb6yw7GNr;

1.8
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.7;
commitid	mJUVYpkFBZ0Zv2bG;

1.7
date	2014.05.25.17.51.11;	author tedu;	state Exp;
branches;
next	1.6;

1.6
date	2014.04.18.15.53.24;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.18.14.37.41;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.17.20.40.24;	author tedu;	state Exp;
branches;
next	1.3;

1.3
date	2014.04.15.23.09.33;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.15.13.41.53;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2005.04.29.05.37.01;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2005.04.29.05.37.01;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.39;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.10.01.22.54.02;	author djm;	state Exp;
branches;
next	;


desc
@@


1.9
log
@stale prototype
@
text
@/* $OpenBSD: o_str.c,v 1.8 2014/06/12 15:49:27 deraadt Exp $ */
/*
 * Written by Theo de Raadt.  Public domain.
 */

#include <string.h>

int OPENSSL_strcasecmp(const char *str1, const char *str2);
int OPENSSL_strncasecmp(const char *str1, const char *str2, size_t n);

int
OPENSSL_strncasecmp(const char *str1, const char *str2, size_t n)
{
	return strncasecmp(str1, str2, n);
}

int
OPENSSL_strcasecmp(const char *str1, const char *str2)
{
	return strcasecmp(str1, str2);
}
@


1.8
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a9 1
int OPENSSL_memcmp(const void *p1, const void *p2, size_t n);
@


1.7
log
@remove OPENSSL_memcmp before somebody tries to use it. ok beck miod
@
text
@d1 1
@


1.6
log
@remove include files not needed
@
text
@a21 6

int
OPENSSL_memcmp(const void *v1, const void *v2, size_t n)
{
	return memcmp(v1, v2, n);
}
@


1.5
log
@Put the final pieces from e_os.h in the required places, and remove it.
"dance on it's grave" says beck
ok guenther beck
@
text
@a4 1
#include <ctype.h>
@


1.4
log
@fold prototypes into o_str.c. miod
@
text
@a5 1
#include <e_os.h>
@


1.3
log
@Three wrappers in this file: OPENSSL_strncasecmp, OPENSSL_strcasecmp,
and OPENSSL_memcmp.

All modern systems have strncasecmp.  No need to rewrite it.

Same with memcmp, call the system one!  It is more likely to be hot
in the icache, and is specifically optimized for the platform.  I
thought these OpenSSL people cared about performance?

ok tedu
@
text
@a6 1
#include "o_str.h"
d8 4
@


1.2
log
@First pass at applying KNF to the OpenSSL code, which almost makes it
readable. This pass is whitespace only and can readily be verified using
tr and md5.
@
text
@d1 2
a2 56
/* crypto/o_str.c -*- mode:C; c-file-style: "eay" -*- */
/* Written by Richard Levitte (richard@@levitte.org) for the OpenSSL
 * project 2003.
 */
/* ====================================================================
 * Copyright (c) 2003 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
d8 1
a8 6

#if !defined(OPENSSL_IMPLEMENTS_strncasecmp) && \
    !defined(OPENSSL_SYSNAME_WIN32) && \
    !defined(NETWARE_CLIB)
# include <strings.h>
#endif
a12 20
#if defined(OPENSSL_IMPLEMENTS_strncasecmp)
	while (*str1 && *str2 && n) {
		int res = toupper(*str1) - toupper(*str2);
		if (res)
			return res < 0 ? -1 : 1;
		str1++;
		str2++;
		n--;
	}
	if (n == 0)
		return 0;
	if (*str1)
		return 1;
	if (*str2)
		return -1;
	return 0;
#else
	/* Recursion hazard warning! Whenever strncasecmp is #defined as
	 * OPENSSL_strncasecmp, OPENSSL_IMPLEMENTS_strncasecmp must be
	 * defined as well. */
a13 1
#endif
a18 3
#if defined(OPENSSL_IMPLEMENTS_strncasecmp)
	return OPENSSL_strncasecmp(str1, str2, (size_t) - 1);
#else
a19 1
#endif
d25 1
a25 6
	const unsigned char *c1 = v1, *c2 = v2;
	int ret = 0;

	while (n && (ret = *c1 - *c2) == 0) n--, c1++, c2++;

	return ret;
@


1.1
log
@Initial revision
@
text
@d63 9
a71 2
int OPENSSL_strncasecmp(const char *str1, const char *str2, size_t n)
	{
d73 1
a73 2
	while (*str1 && *str2 && n)
		{
d75 2
a76 1
		if (res) return res < 0 ? -1 : 1;
d80 1
a80 1
		}
d94 5
a98 3
	}
int OPENSSL_strcasecmp(const char *str1, const char *str2)
	{
d100 1
a100 1
	return OPENSSL_strncasecmp(str1, str2, (size_t)-1);
d104 9
a112 1
	}
d114 2
@


1.1.1.1
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@a62 4
#if !defined(OPENSSL_IMPLEMENTS_strncasecmp) && !defined(OPENSSL_SYSNAME_WIN32)
# include <strings.h>
#endif

a96 9
int OPENSSL_memcmp(const void *v1,const void *v2,size_t n)
	{
	const unsigned char *c1=v1,*c2=v2;
	int ret=0;

	while(n && (ret=*c1-*c2)==0) n--,c1++,c2++;

	return ret;
	}
@


1.1.1.3
log
@import OpenSSL-1.0.0a
@
text
@d63 1
a63 3
#if !defined(OPENSSL_IMPLEMENTS_strncasecmp) && \
    !defined(OPENSSL_SYSNAME_WIN32) && \
    !defined(NETWARE_CLIB)
@


