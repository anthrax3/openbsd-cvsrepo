head	1.3;
access;
symbols;
locks; strict;
comment	@# @;


1.3
date	2014.07.10.13.08.58;	author miod;	state Exp;
branches;
next	1.2;
commitid	x57mQDu0Rgvs2ML3;

1.2
date	2014.05.04.21.46.36;	author jim;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.11.21.36.16;	author markus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.11.21.36.16;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.14;	author djm;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Attempt to (incompletely) document EVP_aes_*().

When EVP_des_cbc() was suggested, suggest EVP_aes_256_cbc() instead.

Remove mention of EVP_des_ede3_cbc() being the algorithm of choice for S/MIME.

Don't mention US-export limited RC2 algorithms, you'd better not know about
them.
@
text
@=pod

=head1 NAME

PKCS7_encrypt - create a PKCS#7 envelopedData structure

=head1 SYNOPSIS

 #include <openssl/pkcs7.h>

 PKCS7 *PKCS7_encrypt(STACK_OF(X509) *certs, BIO *in, const EVP_CIPHER *cipher, int flags);

=head1 DESCRIPTION

PKCS7_encrypt() creates and returns a PKCS#7 envelopedData structure. B<certs>
is a list of recipient certificates. B<in> is the content to be encrypted.
B<cipher> is the symmetric cipher to use. B<flags> is an optional set of flags.

=head1 NOTES

Only RSA keys are supported in PKCS#7 and envelopedData so the recipient
certificates supplied to this function must all contain RSA public keys, though
they do not have to be signed using the RSA algorithm.

The algorithm passed in the B<cipher> parameter must support ASN1 encoding of
its parameters.

Many browsers implement a "sign and encrypt" option which is simply an S/MIME
envelopedData containing an S/MIME signed message. This can be readily produced
by storing the S/MIME signed message in a memory BIO and passing it to
PKCS7_encrypt().

The following flags can be passed in the B<flags> parameter.

If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain> are
prepended to the data.

Normally the supplied content is translated into MIME canonical format (as
required by the S/MIME specifications) if B<PKCS7_BINARY> is set no translation
occurs. This option should be used if the supplied data is in binary format
otherwise the translation will corrupt it. If B<PKCS7_BINARY> is set then
B<PKCS7_TEXT> is ignored.

If the B<PKCS7_STREAM> flag is set a partial B<PKCS7> structure is output
suitable for streaming I/O: no data is read from the BIO B<in>.

=head1 NOTES

If the flag B<PKCS7_STREAM> is set the returned B<PKCS7> structure is B<not>
complete and outputting its contents via a function that does not
properly finalize the B<PKCS7> structure will give unpredictable
results.

Several functions including SMIME_write_PKCS7(), i2d_PKCS7_bio_stream(),
PEM_write_bio_PKCS7_stream() finalize the structure. Alternatively finalization
can be performed by obtaining the streaming ASN1 B<BIO> directly using
BIO_new_PKCS7().

=head1 RETURN VALUES

PKCS7_encrypt() returns either a PKCS7 structure or NULL if an error occurred.
The error can be obtained from ERR_get_error(3).

=head1 SEE ALSO

L<ERR_get_error(3)|ERR_get_error(3)>, L<PKCS7_decrypt(3)|PKCS7_decrypt(3)>

=head1 HISTORY

PKCS7_decrypt() was added to OpenSSL 0.9.5
The B<PKCS7_STREAM> flag was first supported in OpenSSL 1.0.0.

=cut
@


1.2
log
@Remove trailing whitespace.

fine jmc@@
@
text
@a24 7
EVP_des_ede3_cbc() (triple DES) is the algorithm of choice for S/MIME use
because most clients will support it.

Some old "export grade" clients may only support weak encryption using 40 or 64
bit RC2. These can be used by passing EVP_rc2_40_cbc() and EVP_rc2_64_cbc()
respectively.

@


1.1
log
@Initial revision
@
text
@d9 3
a11 1
PKCS7 *PKCS7_encrypt(STACK_OF(X509) *certs, BIO *in, const EVP_CIPHER *cipher, int flags);
d21 3
a23 3
Only RSA keys are supported in PKCS#7 and envelopedData so the recipient certificates
supplied to this function must all contain RSA public keys, though they do not have to
be signed using the RSA algorithm.
d25 2
a26 2
EVP_des_ede3_cbc() (triple DES) is the algorithm of choice for S/MIME use because
most clients will support it.
d28 3
a30 2
Some old "export grade" clients may only support weak encryption using 40 or 64 bit
RC2. These can be used by passing EVP_rc2_40_cbc() and EVP_rc2_64_cbc() respectively.
d32 2
a33 2
The algorithm passed in the B<cipher> parameter must support ASN1 encoding of its
parameters. 
d35 1
a35 1
Many browsers implement a "sign and encrypt" option which is simply an S/MIME 
d42 8
a49 2
If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain> are prepended
to the data.
d51 14
a64 4
Normally the supplied content is translated into MIME canonical format (as required
by the S/MIME specifications) if B<PKCS7_BINARY> is set no translation occurs. This
option should be used if the supplied data is in binary format otherwise the translation
will corrupt it. If B<PKCS7_BINARY> is set then B<PKCS7_TEXT> is ignored.
d68 1
a68 1
PKCS7_encrypt() returns either a valid PKCS7 structure or NULL if an error occurred.
a70 5
=head1 BUGS

The lack of single pass processing and need to hold all data in memory as
mentioned in PKCS7_sign() also applies to PKCS7_verify().

d78 1
@


1.1.1.1
log
@import 0.9.7b (without idea and rc5)
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@d9 1
a9 3
 #include <openssl/pkcs7.h>

 PKCS7 *PKCS7_encrypt(STACK_OF(X509) *certs, BIO *in, const EVP_CIPHER *cipher, int flags);
d19 3
a21 3
Only RSA keys are supported in PKCS#7 and envelopedData so the recipient
certificates supplied to this function must all contain RSA public keys, though
they do not have to be signed using the RSA algorithm.
d23 2
a24 2
EVP_des_ede3_cbc() (triple DES) is the algorithm of choice for S/MIME use
because most clients will support it.
d26 2
a27 3
Some old "export grade" clients may only support weak encryption using 40 or 64
bit RC2. These can be used by passing EVP_rc2_40_cbc() and EVP_rc2_64_cbc()
respectively.
d29 2
a30 2
The algorithm passed in the B<cipher> parameter must support ASN1 encoding of
its parameters. 
d32 1
a32 1
Many browsers implement a "sign and encrypt" option which is simply an S/MIME
d39 2
a40 2
If the B<PKCS7_TEXT> flag is set MIME headers for type B<text/plain> are
prepended to the data.
d42 4
a45 5
Normally the supplied content is translated into MIME canonical format (as
required by the S/MIME specifications) if B<PKCS7_BINARY> is set no translation
occurs. This option should be used if the supplied data is in binary format
otherwise the translation will corrupt it. If B<PKCS7_BINARY> is set then
B<PKCS7_TEXT> is ignored.
d47 1
a47 2
If the B<PKCS7_STREAM> flag is set a partial B<PKCS7> structure is output
suitable for streaming I/O: no data is read from the BIO B<in>.
d49 2
a50 1
=head1 NOTES
d52 1
a52 9
If the flag B<PKCS7_STREAM> is set the returned B<PKCS7> structure is B<not>
complete and outputting its contents via a function that does not
properly finalize the B<PKCS7> structure will give unpredictable 
results.

Several functions including SMIME_write_PKCS7(), i2d_PKCS7_bio_stream(),
PEM_write_bio_PKCS7_stream() finalize the structure. Alternatively finalization
can be performed by obtaining the streaming ASN1 B<BIO> directly using
BIO_new_PKCS7().
d54 2
a55 4
=head1 RETURN VALUES

PKCS7_encrypt() returns either a PKCS7 structure or NULL if an error occurred.
The error can be obtained from ERR_get_error(3).
a63 1
The B<PKCS7_STREAM> flag was first supported in OpenSSL 1.0.0.
@

