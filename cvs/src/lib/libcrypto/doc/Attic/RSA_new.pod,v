head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2016.11.04.10.17.17;	author schwarze;	state dead;
branches;
next	1.5;
commitid	ZjQW3LDCU7N0oPMv;

1.5
date	2016.03.12.21.31.22;	author mmcc;	state Exp;
branches;
next	1.4;
commitid	KhDV1S6CZAu8cbBc;

1.4
date	2014.05.04.22.26.33;	author jim;	state Exp;
branches;
next	1.3;

1.3
date	2002.09.14.11.18.03;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.03.19.27.53;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.19.11.12.59;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.18;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.12.20.51.46;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.36.17;	author markus;	state Exp;
branches;
next	;


desc
@@


1.6
log
@convert RSA manuals from pod to mdoc
@
text
@=pod

=head1 NAME

RSA_new, RSA_free - allocate and free RSA objects

=head1 SYNOPSIS

 #include <openssl/rsa.h>

 RSA * RSA_new(void);

 void RSA_free(RSA *rsa);

=head1 DESCRIPTION

RSA_new() allocates and initializes an B<RSA> structure. It is equivalent to
calling RSA_new_method(NULL).

RSA_free() frees the B<RSA> structure and its components. The key is
erased before the memory is returned to the system.

=head1 RETURN VALUES

If the allocation fails, RSA_new() returns B<NULL> and sets an error code that
can be obtained by L<ERR_get_error(3)|ERR_get_error(3)>. Otherwise it returns a
pointer to the newly allocated structure.

=head1 SEE ALSO

L<ERR_get_error(3)|ERR_get_error(3)>, L<rsa(3)|rsa(3)>,
L<RSA_generate_key(3)|RSA_generate_key(3)>,
L<RSA_new_method(3)|RSA_new_method(3)>

=head1 HISTORY

RSA_new() and RSA_free() are available in all versions of SSLeay and OpenSSL.

=cut
@


1.5
log
@Remove sentences in RETURN VALUES sections saying that functions with
void return types 'return no value'. This is obvious and therefore
unneccessary to mention.

We spare rewind(3)'s sentence because espie@@ pointed out that it's a
warning - the function masks a potential error.

This commit also adds a sentence to X509_free clarifying that it's
NULL-safe. This bit was discussed with doug@@.

ok martijn@@, sentiment supported by schwarze@@
@
text
@@


1.4
log
@Improve line wrapping for lines exceeding 80 chars.

ok jmc@@
@
text
@a28 2
RSA_free() returns no value.

@


1.3
log
@merge with openssl-0.9.7-stable-SNAP-20020911,
new minor for libcrypto (_X509_REQ_print_ex)
tested by miod@@, pb@@
@
text
@d25 3
a27 3
If the allocation fails, RSA_new() returns B<NULL> and sets an error
code that can be obtained by L<ERR_get_error(3)|ERR_get_error(3)>. Otherwise it returns
a pointer to the newly allocated structure.
@


1.2
log
@correct Xr to where we actually install the man pages
@
text
@d17 2
a18 1
RSA_new() allocates and initializes an B<RSA> structure.
d34 2
a35 1
L<RSA_generate_key(3)|RSA_generate_key(3)>
@


1.1
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d32 2
a33 1
L<err(3)|err(3)>, L<rsa(3)|rsa(3)>, L<RSA_generate_key(3)|RSA_generate_key(3)>
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-stable-SNAP-20020911 (without idea)
@
text
@d17 1
a17 2
RSA_new() allocates and initializes an B<RSA> structure. It is equivalent to
calling RSA_new_method(NULL).
d32 1
a32 2
L<err(3)|err(3)>, L<rsa(3)|rsa(3)>, L<RSA_generate_key(3)|RSA_generate_key(3)>,
L<RSA_new_method(3)|RSA_new_method(3)>
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@d33 1
a33 2
L<ERR_get_error(3)|ERR_get_error(3)>, L<rsa(3)|rsa(3)>,
L<RSA_generate_key(3)|RSA_generate_key(3)>,
@


