head	1.6;
access;
symbols;
locks; strict;
comment	@# @;


1.6
date	2016.11.03.15.20.36;	author schwarze;	state dead;
branches;
next	1.5;
commitid	wgsIDwT3oGdSDCJg;

1.5
date	2015.09.22.08.08.07;	author sobrado;	state Exp;
branches;
next	1.4;
commitid	yt6ZAILseiFaXq7L;

1.4
date	2014.07.10.13.18.56;	author miod;	state Exp;
branches;
next	1.3;
commitid	qc14LeNdmnkUxfRO;

1.3
date	2014.05.04.22.26.33;	author jim;	state Exp;
branches;
next	1.2;

1.2
date	2014.05.04.21.46.36;	author jim;	state Exp;
branches;
next	1.1;

1.1
date	2003.05.11.21.36.16;	author markus;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2003.05.11.21.36.16;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.49;	author djm;	state Exp;
branches;
next	;


desc
@@


1.6
log
@convert PEM and PKCS manuals from pod to mdoc
@
text
@=pod

=head1 NAME

PKCS12_create - create a PKCS#12 structure

=head1 SYNOPSIS

 #include <openssl/pkcs12.h>

 PKCS12 *PKCS12_create(char *pass, char *name, EVP_PKEY *pkey,
       X509 *cert, STACK_OF(X509) *ca, int nid_key, int nid_cert,
       int iter, int mac_iter, int keytype);

=head1 DESCRIPTION

PKCS12_create() creates a PKCS#12 structure.

B<pass> is the passphrase to use. B<name> is the B<friendlyName> to use for
the supplied certificate and key. B<pkey> is the private key to include in
the structure and B<cert> its corresponding certificates. B<ca> is an optional
set of certificates to also include in the structure.
Either B<pkey>, B<cert> or both can be B<NULL> to indicate that no key or
certificate is required.

B<nid_key> and B<nid_cert> are the encryption algorithms that should be used
for the key and certificate respectively. If either B<nid_key> or B<nid_cert>
is set to -1, no encryption will be used.

B<iter> is the encryption algorithm iteration count to use and B<mac_iter> is
the MAC iteration count to use. If B<mac_iter> is set to -1, the MAC will be
omitted entirely.

B<keytype> is the type of key.

=head1 NOTES

The parameters B<nid_key>, B<nid_cert>, B<iter>, B<mac_iter> and B<keytype>
can all be set to zero and sensible defaults will be used.

These defaults are: 40 bit RC2 encryption for certificates, triple DES
encryption for private keys, a key iteration count of PKCS12_DEFAULT_ITER
(currently 2048) and a MAC iteration count of 1.

The default MAC iteration count is 1 in order to retain compatibility with
old software which did not interpret MAC iteration counts. If such compatibility
is not required then B<mac_iter> should be set to PKCS12_DEFAULT_ITER.

B<keytype> adds a flag to the store private key. This is a non standard
extension that is only currently interpreted by MSIE. If set to zero the flag
is omitted, if set to B<KEY_SIG> the key can be used for signing only, if set
to B<KEY_EX> it can be used for signing and encryption. This option was useful
for old export grade software which could use signing only keys of arbitrary
size but had restrictions on the permissible sizes of keys which could be used
for encryption.

If a certificate contains an B<alias> or B<keyid> then this will be
used for the corresponding B<friendlyName> or B<localKeyID> in the
PKCS12 structure.

=head1 SEE ALSO

L<d2i_PKCS12(3)|d2i_PKCS12(3)>

=head1 HISTORY

PKCS12_create was added in OpenSSL 0.9.3.

Before OpenSSL 0.9.8, neither B<pkey> nor B<cert> were allowed to be B<NULL>,
and a value of B<-1> was not allowed for B<nid_key>, B<nid_cert> and
B<mac_iter>.

=cut
@


1.5
log
@typos in documentation; better wording, suggested by jmc@@

ok jmc@@
@
text
@@


1.4
log
@Features introduce in OpenSSL 0.9.8 do not deserve their own section.
Instead, fold their description in the main documentation, and update the
history section to mention them as well.
@
text
@d20 1
a20 1
the supplied certifictate and key. B<pkey> is the private key to include in
d24 1
a24 1
certficate is required.
@


1.3
log
@Improve line wrapping for lines exceeding 80 chars.

ok jmc@@
@
text
@d11 3
a13 2
 PKCS12 *PKCS12_create(char *pass, char *name, EVP_PKEY *pkey, X509 *cert, STACK_OF(X509) *ca,
				int nid_key, int nid_cert, int iter, int mac_iter, int keytype);
d21 4
a24 2
the structure and B<cert> its corresponding certificates. B<ca>, if not B<NULL>
is an optional set of certificates to also include in the structure.
d27 7
a33 2
for the key and certificate respectively. B<iter> is the encryption algorithm
iteration count to use and B<mac_iter> is the MAC iteration count to use.
a56 5
=head1 NEW FUNCTIONALITY IN OPENSSL 0.9.8

Some additional functionality was added to PKCS12_create() in OpenSSL
0.9.8. These extensions are detailed below.

a60 9
Either B<pkey>, B<cert> or both can be B<NULL> to indicate that no key or
certficate is required. In previous versions both had to be present or
a fatal error is returned.

B<nid_key> or B<nid_cert> can be set to -1 indicating that no encryption
should be used.

B<mac_iter> can be set to -1 and the MAC will then be omitted entirely.

d67 5
a71 1
PKCS12_create was added in OpenSSL 0.9.3
@


1.2
log
@Remove trailing whitespace.

fine jmc@@
@
text
@d41 7
a47 7
B<keytype> adds a flag to the store private key. This is a non standard extension
that is only currently interpreted by MSIE. If set to zero the flag is omitted,
if set to B<KEY_SIG> the key can be used for signing only, if set to B<KEY_EX>
it can be used for signing and encryption. This option was useful for old
export grade software which could use signing only keys of arbitrary size but
had restrictions on the permissible sizes of keys which could be used for
encryption.
@


1.1
log
@Initial revision
@
text
@d49 18
@


1.1.1.1
log
@import 0.9.7b (without idea and rc5)
@
text
@@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@a48 18
=head1 NEW FUNCTIONALITY IN OPENSSL 0.9.8

Some additional functionality was added to PKCS12_create() in OpenSSL
0.9.8. These extensions are detailed below.

If a certificate contains an B<alias> or B<keyid> then this will be
used for the corresponding B<friendlyName> or B<localKeyID> in the
PKCS12 structure.

Either B<pkey>, B<cert> or both can be B<NULL> to indicate that no key or
certficate is required. In previous versions both had to be present or
a fatal error is returned.

B<nid_key> or B<nid_cert> can be set to -1 indicating that no encryption
should be used. 

B<mac_iter> can be set to -1 and the MAC will then be omitted entirely.

@

