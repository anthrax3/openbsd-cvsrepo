head	1.8;
access;
symbols;
locks; strict;
comment	@# @;


1.8
date	2014.07.13.15.42.42;	author miod;	state Exp;
branches;
next	1.7;
commitid	cdCNtFiqR1YHopHz;

1.7
date	2014.07.11.16.18.14;	author miod;	state Exp;
branches;
next	1.6;
commitid	KFr43un1Uq8AaqNL;

1.6
date	2014.05.04.21.46.36;	author jim;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.13.15.25.34;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.12.02.18.39;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.19;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.02.58.26;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.19.11.12.57;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.51.17;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.21.36.14;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2014.04.13.15.16.35;	author miod;	state Exp;
branches;
next	;


desc
@@


1.8
log
@OPENSSL_{malloc,free} -> {malloc,free}
@
text
@=pod

=head1 NAME

ERR_get_error, ERR_peek_error, ERR_peek_last_error,
ERR_get_error_line, ERR_peek_error_line, ERR_peek_last_error_line,
ERR_get_error_line_data, ERR_peek_error_line_data,
ERR_peek_last_error_line_data - obtain error code and data

=head1 SYNOPSIS

 #include <openssl/err.h>

 unsigned long ERR_get_error(void);
 unsigned long ERR_peek_error(void);
 unsigned long ERR_peek_last_error(void);

 unsigned long ERR_get_error_line(const char **file, int *line);
 unsigned long ERR_peek_error_line(const char **file, int *line);
 unsigned long ERR_peek_last_error_line(const char **file, int *line);

 unsigned long ERR_get_error_line_data(const char **file, int *line,
         const char **data, int *flags);
 unsigned long ERR_peek_error_line_data(const char **file, int *line,
         const char **data, int *flags);
 unsigned long ERR_peek_last_error_line_data(const char **file, int *line,
         const char **data, int *flags);

=head1 DESCRIPTION

ERR_get_error() returns the earliest error code from the thread's error
queue and removes the entry. This function can be called repeatedly
until there are no more error codes to return.

ERR_peek_error() returns the earliest error code from the thread's
error queue without modifying it.

ERR_peek_last_error() returns the latest error code from the thread's
error queue without modifying it.

See L<ERR_GET_LIB(3)|ERR_GET_LIB(3)> for obtaining information about
location and reason of the error, and
L<ERR_error_string(3)|ERR_error_string(3)> for human-readable error
messages.

ERR_get_error_line(), ERR_peek_error_line() and
ERR_peek_last_error_line() are the same as the above, but they
additionally store the file name and line number where
the error occurred in *B<file> and *B<line>, unless these are B<NULL>.

ERR_get_error_line_data(), ERR_peek_error_line_data() and
ERR_peek_last_error_line_data() store additional data and flags
associated with the error code in *B<data>
and *B<flags>, unless these are B<NULL>. *B<data> contains a string
if *B<flags>&B<ERR_TXT_STRING> is true.

An application B<MUST NOT> free the *B<data> pointer (or any other pointers
returned by these functions) with free() as freeing is handled
automatically by the error library.

=head1 RETURN VALUES

The error code, or 0 if there is no error in the queue.

=head1 SEE ALSO

L<err(3)|err(3)>, L<ERR_error_string(3)|ERR_error_string(3)>,
L<ERR_GET_LIB(3)|ERR_GET_LIB(3)>

=head1 HISTORY

ERR_get_error(), ERR_peek_error(), ERR_get_error_line() and
ERR_peek_error_line() are available in all versions of SSLeay and
OpenSSL. ERR_get_error_line_data() and ERR_peek_error_line_data()
were added in SSLeay 0.9.0.
ERR_peek_last_error(), ERR_peek_last_error_line() and
ERR_peek_last_error_line_data() were added in OpenSSL 0.9.7.

=cut
@


1.7
log
@Huge documentation update for libcrypto and libssl, mostly from Matt Caswell,
Jeff Trawick, Jean-Paul Calderone, Michal Bozon, Jeffrey Walton and Rich Salz,
via OpenSSL trunk (with some parts not applying to us, such as SSLv2 support,
at least partially removed).
@
text
@d58 1
a58 1
returned by these functions) with OPENSSL_free() as freeing is handled
@


1.6
log
@Remove trailing whitespace.

fine jmc@@
@
text
@d52 1
a52 1
ERR_get_last_error_line_data() store additional data and flags
@


1.5
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@d55 1
a55 1
if *B<flags>&B<ERR_TXT_STRING> is true. 
@


1.4
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d55 5
a59 2
if *B<flags>&B<ERR_TXT_STRING>. If it has been allocated by OPENSSL_malloc(),
*B<flags>&B<ERR_TXT_MALLOCED> is true.
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d8 1
a8 1
ERR_peek_error_line_data - obtain error code and data
@


1.2
log
@openssl-engine-0.9.6 merge
@
text
@d5 4
a8 2
ERR_get_error, ERR_peek_error, ERR_get_error_line, ERR_peek_error_line,
ERR_get_error_line_data, ERR_peek_error_line_data - obtain error code and data
d16 1
d20 1
d26 2
d31 1
a31 1
ERR_get_error() returns the last error code from the thread's error
d35 4
a38 1
ERR_peek_error() returns the last error code from the thread's
d46 3
a48 2
ERR_get_error_line() and ERR_peek_error_line() are the same as the
above, but they additionally store the file name and line number where
d51 3
a53 2
ERR_get_error_line_data() and ERR_peek_error_line_data() store
additional data and flags associated with the error code in *B<data>
d73 2
@


1.1
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d5 2
a6 1
ERR_get_error, ERR_peek_error - obtain error code
d44 1
a44 1
if *B<flags>&B<ERR_TXT_STRING>. If it has been allocated by Malloc(),
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d5 1
a5 4
ERR_get_error, ERR_peek_error, ERR_peek_last_error,
ERR_get_error_line, ERR_peek_error_line, ERR_peek_last_error_line,
ERR_get_error_line_data, ERR_peek_error_line_data,
ERR_peek_error_line_data - obtain error code and data
a12 1
 unsigned long ERR_peek_last_error(void);
a15 1
 unsigned long ERR_peek_last_error_line(const char **file, int *line);
a20 2
 unsigned long ERR_peek_last_error_line_data(const char **file, int *line,
         const char **data, int *flags);
d24 1
a24 1
ERR_get_error() returns the earliest error code from the thread's error
d28 1
a28 4
ERR_peek_error() returns the earliest error code from the thread's
error queue without modifying it.

ERR_peek_last_error() returns the latest error code from the thread's
d36 2
a37 3
ERR_get_error_line(), ERR_peek_error_line() and
ERR_peek_last_error_line() are the same as the above, but they
additionally store the file name and line number where
d40 2
a41 3
ERR_get_error_line_data(), ERR_peek_error_line_data() and
ERR_get_last_error_line_data() store additional data and flags
associated with the error code in *B<data>
d43 1
a43 1
if *B<flags>&B<ERR_TXT_STRING>. If it has been allocated by OPENSSL_malloc(),
a60 2
ERR_peek_last_error(), ERR_peek_last_error_line() and
ERR_peek_last_error_line_data() were added in OpenSSL 0.9.7.
@


1.1.1.2
log
@import 0.9.7b (without idea and rc5)
@
text
@d8 1
a8 1
ERR_peek_last_error_line_data - obtain error code and data
@


1.1.1.3
log
@Import OpenSSL 1.0.1g
@
text
@d55 2
a56 5
if *B<flags>&B<ERR_TXT_STRING> is true. 

An application B<MUST NOT> free the *B<data> pointer (or any other pointers
returned by these functions) with OPENSSL_free() as freeing is handled
automatically by the error library.
@


