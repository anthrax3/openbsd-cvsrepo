head	1.18;
access;
symbols
	OPENBSD_6_2_BASE:1.18
	OPENBSD_6_1:1.18.0.4
	OPENBSD_6_1_BASE:1.18;
locks; strict;
comment	@ * @;


1.18
date	2016.11.04.18.35.30;	author jsing;	state Exp;
branches;
next	1.17;
commitid	wBWgQMBCuuWRNlyK;

1.17
date	2016.06.30.02.02.06;	author bcook;	state Exp;
branches;
next	1.16;
commitid	NoRqiDVUjRmOOT9v;

1.16
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.15;
commitid	mJUVYpkFBZ0Zv2bG;

1.15
date	2014.05.29.20.21.22;	author beck;	state Exp;
branches;
next	1.14;

1.14
date	2014.05.24.09.16.08;	author jsing;	state Exp;
branches;
next	1.13;

1.13
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2010.10.01.22.58.54;	author djm;	state Exp;
branches;
next	1.11;

1.11
date	2009.04.06.06.33.20;	author djm;	state Exp;
branches;
next	1.10;

1.10
date	2009.01.09.12.15.41;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2008.09.06.12.17.50;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2006.10.04.07.10.32;	author pvalchev;	state Exp;
branches;
next	1.7;

1.7
date	2006.06.27.05.07.01;	author djm;	state Exp;
branches
	1.7.2.1;
next	1.6;

1.6
date	2006.05.04.14.19.08;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2002.05.15.02.29.12;	author beck;	state Exp;
branches
	1.5.14.1
	1.5.16.1;
next	1.4;

1.4
date	2000.12.15.02.57.30;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.10.00;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.36.03;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.46;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.46;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.50.15;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.06.27.05.05.32;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.42;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2009.01.09.12.13.54;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2010.10.01.22.54.06;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2012.10.13.21.23.39;	author djm;	state Exp;
branches;
next	;

1.5.14.1
date	2006.10.05.18.42.22;	author brad;	state Exp;
branches;
next	;

1.5.16.1
date	2006.10.05.17.36.24;	author brad;	state Exp;
branches;
next	;

1.7.2.1
date	2006.11.02.19.56.23;	author brad;	state Exp;
branches;
next	;


desc
@@


1.18
log
@Kill a bunch of OLD_ASN1 usage by replacing ASN1_{d2i,i2d}_* with
ASN1_item_{d2i,i2d}_* equivalents.

ok guenther@@ miod@@
@
text
@/* $OpenBSD: dh.h,v 1.17 2016/06/30 02:02:06 bcook Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#ifndef HEADER_DH_H
#define HEADER_DH_H

#include <openssl/opensslconf.h>

#ifdef OPENSSL_NO_DH
#error DH is disabled.
#endif

#ifndef OPENSSL_NO_BIO
#include <openssl/bio.h>
#endif
#include <openssl/ossl_typ.h>
#ifndef OPENSSL_NO_DEPRECATED
#include <openssl/bn.h>
#endif
	
#ifndef OPENSSL_DH_MAX_MODULUS_BITS
# define OPENSSL_DH_MAX_MODULUS_BITS	10000
#endif

#define DH_FLAG_CACHE_MONT_P     0x01

/* If this flag is set the DH method is FIPS compliant and can be used
 * in FIPS mode. This is set in the validated module method. If an
 * application sets this flag in its own methods it is its reposibility
 * to ensure the result is compliant.
 */

#define DH_FLAG_FIPS_METHOD			0x0400

/* If this flag is set the operations normally disabled in FIPS mode are
 * permitted it is then the applications responsibility to ensure that the
 * usage is compliant.
 */

#define DH_FLAG_NON_FIPS_ALLOW			0x0400

#ifdef  __cplusplus
extern "C" {
#endif

/* Already defined in ossl_typ.h */
/* typedef struct dh_st DH; */
/* typedef struct dh_method DH_METHOD; */

struct dh_method
	{
	const char *name;
	/* Methods here */
	int (*generate_key)(DH *dh);
	int (*compute_key)(unsigned char *key,const BIGNUM *pub_key,DH *dh);
	int (*bn_mod_exp)(const DH *dh, BIGNUM *r, const BIGNUM *a,
				const BIGNUM *p, const BIGNUM *m, BN_CTX *ctx,
				BN_MONT_CTX *m_ctx); /* Can be null */

	int (*init)(DH *dh);
	int (*finish)(DH *dh);
	int flags;
	char *app_data;
	/* If this is non-NULL, it will be used to generate parameters */
	int (*generate_params)(DH *dh, int prime_len, int generator, BN_GENCB *cb);
	};

struct dh_st
	{
	/* This first argument is used to pick up errors when
	 * a DH is passed instead of a EVP_PKEY */
	int pad;
	int version;
	BIGNUM *p;
	BIGNUM *g;
	long length; /* optional */
	BIGNUM *pub_key;	/* g^x */
	BIGNUM *priv_key;	/* x */

	int flags;
	BN_MONT_CTX *method_mont_p;
	/* Place holders if we want to do X9.42 DH */
	BIGNUM *q;
	BIGNUM *j;
	unsigned char *seed;
	int seedlen;
	BIGNUM *counter;

	int references;
	CRYPTO_EX_DATA ex_data;
	const DH_METHOD *meth;
	ENGINE *engine;
	};

#define DH_GENERATOR_2		2
/* #define DH_GENERATOR_3	3 */
#define DH_GENERATOR_5		5

/* DH_check error codes */
#define DH_CHECK_P_NOT_PRIME		0x01
#define DH_CHECK_P_NOT_SAFE_PRIME	0x02
#define DH_UNABLE_TO_CHECK_GENERATOR	0x04
#define DH_NOT_SUITABLE_GENERATOR	0x08

/* DH_check_pub_key error codes */
#define DH_CHECK_PUBKEY_TOO_SMALL	0x01
#define DH_CHECK_PUBKEY_TOO_LARGE	0x02

/* primes p where (p-1)/2 is prime too are called "safe"; we define
   this for backward compatibility: */
#define DH_CHECK_P_NOT_STRONG_PRIME	DH_CHECK_P_NOT_SAFE_PRIME

DH *d2i_DHparams_bio(BIO *bp, DH **a);
int i2d_DHparams_bio(BIO *bp, DH *a);
DH *d2i_DHparams_fp(FILE *fp, DH **a);
int i2d_DHparams_fp(FILE *fp, DH *a);

DH *DHparams_dup(DH *);

const DH_METHOD *DH_OpenSSL(void);

void DH_set_default_method(const DH_METHOD *meth);
const DH_METHOD *DH_get_default_method(void);
int DH_set_method(DH *dh, const DH_METHOD *meth);
DH *DH_new_method(ENGINE *engine);

DH *	DH_new(void);
void	DH_free(DH *dh);
int	DH_up_ref(DH *dh);
int	DH_size(const DH *dh);
int DH_get_ex_new_index(long argl, void *argp, CRYPTO_EX_new *new_func,
	     CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func);
int DH_set_ex_data(DH *d, int idx, void *arg);
void *DH_get_ex_data(DH *d, int idx);

/* Deprecated version */
#ifndef OPENSSL_NO_DEPRECATED
DH *	DH_generate_parameters(int prime_len,int generator,
		void (*callback)(int,int,void *),void *cb_arg);
#endif /* !defined(OPENSSL_NO_DEPRECATED) */

/* New version */
int	DH_generate_parameters_ex(DH *dh, int prime_len,int generator, BN_GENCB *cb);

int	DH_check(const DH *dh,int *codes);
int	DH_check_pub_key(const DH *dh,const BIGNUM *pub_key, int *codes);
int	DH_generate_key(DH *dh);
int	DH_compute_key(unsigned char *key,const BIGNUM *pub_key,DH *dh);
DH *	d2i_DHparams(DH **a,const unsigned char **pp, long length);
int	i2d_DHparams(const DH *a,unsigned char **pp);
int	DHparams_print_fp(FILE *fp, const DH *x);
#ifndef OPENSSL_NO_BIO
int	DHparams_print(BIO *bp, const DH *x);
#else
int	DHparams_print(char *bp, const DH *x);
#endif

#define EVP_PKEY_CTX_set_dh_paramgen_prime_len(ctx, len) \
	EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, \
			EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN, len, NULL)

#define EVP_PKEY_CTX_set_dh_paramgen_generator(ctx, gen) \
	EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, \
			EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR, gen, NULL)

#define	EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN	(EVP_PKEY_ALG_CTRL + 1)
#define	EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR	(EVP_PKEY_ALG_CTRL + 2)
		

/* BEGIN ERROR CODES */
/* The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_DH_strings(void);

/* Error codes for the DH functions. */

/* Function codes. */
#define DH_F_COMPUTE_KEY				 102
#define DH_F_DHPARAMS_PRINT_FP				 101
#define DH_F_DH_BUILTIN_GENPARAMS			 106
#define DH_F_DH_COMPUTE_KEY				 114
#define DH_F_DH_GENERATE_KEY				 115
#define DH_F_DH_GENERATE_PARAMETERS_EX			 116
#define DH_F_DH_NEW_METHOD				 105
#define DH_F_DH_PARAM_DECODE				 107
#define DH_F_DH_PRIV_DECODE				 110
#define DH_F_DH_PRIV_ENCODE				 111
#define DH_F_DH_PUB_DECODE				 108
#define DH_F_DH_PUB_ENCODE				 109
#define DH_F_DO_DH_PRINT				 100
#define DH_F_GENERATE_KEY				 103
#define DH_F_GENERATE_PARAMETERS			 104
#define DH_F_PKEY_DH_DERIVE				 112
#define DH_F_PKEY_DH_KEYGEN				 113

/* Reason codes. */
#define DH_R_BAD_GENERATOR				 101
#define DH_R_BN_DECODE_ERROR				 109
#define DH_R_BN_ERROR					 106
#define DH_R_DECODE_ERROR				 104
#define DH_R_INVALID_PUBKEY				 102
#define DH_R_KEYS_NOT_SET				 108
#define DH_R_KEY_SIZE_TOO_SMALL				 110
#define DH_R_MODULUS_TOO_LARGE				 103
#define DH_R_NON_FIPS_METHOD				 111
#define DH_R_NO_PARAMETERS_SET				 107
#define DH_R_NO_PRIVATE_VALUE				 100
#define DH_R_PARAMETER_ENCODING_ERROR			 105

#ifdef  __cplusplus
}
#endif
#endif
@


1.17
log
@Remove flags for disabling constant-time operations.

This removes support for DSA_FLAG_NO_EXP_CONSTTIME, DH_FLAG_NO_EXP_CONSTTIME,
and RSA_FLAG_NO_CONSTTIME flags, making all of these operations unconditionally
constant-time.

Based on the original patch by César Pereid.  ok beck@@
@
text
@d1 1
a1 1
/* $OpenBSD: dh.h,v 1.16 2014/06/12 15:49:28 deraadt Exp $ */
d168 4
a171 6
#define d2i_DHparams_fp(fp,x) (DH *)ASN1_d2i_fp((char *(*)())DH_new, \
		(char *(*)())d2i_DHparams,(fp),(unsigned char **)(x))
#define i2d_DHparams_fp(fp,x) ASN1_i2d_fp(i2d_DHparams,(fp), \
		(unsigned char *)(x))
#define d2i_DHparams_bio(bp,x) ASN1_d2i_bio_of(DH,DH_new,d2i_DHparams,bp,x)
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio_of_const(DH,i2d_DHparams,bp,x)
@


1.16
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a80 7
#define DH_FLAG_NO_EXP_CONSTTIME 0x02 /* new with 0.9.7h; the built-in DH
                                       * implementation now uses constant time
                                       * modular exponentiation for secret exponents
                                       * by default. This flag causes the
                                       * faster variable sliding window method to
                                       * be used for all exponents.
                                       */
@


1.15
log
@Everything sane has stdio, and FILE *. we don't need ifdefs for this.
ok to firebomb from tedu@@
@
text
@d1 1
a1 1
/* crypto/dh/dh.h */
@


1.14
log
@Almost nothing actually needs to include <openssl/e_os2.h>, however by
including it they get <openssl/opensslconf.h>. So instead of pulling in
<openssl/e_os2.h>, just pull in <openssl/opensslconf.h>.

"go ahead" miod@@
@
text
@a214 1
#ifndef OPENSSL_NO_FP_API
a215 1
#endif
@


1.13
log
@resolve conflicts
@
text
@d62 1
a62 1
#include <openssl/e_os2.h>
@


1.12
log
@resolve conflicts, fix local changes
@
text
@d89 15
d248 3
d270 1
d272 1
@


1.11
log
@resolve conflicts
@
text
@a79 2
#define OPENSSL_DH_FIPS_MIN_MODULUS_BITS 1024

a159 1
#define DHparams_dup(x) ASN1_dup_of_const(DH,i2d_DHparams,d2i_DHparams,x)
d167 2
a170 5
#ifdef OPENSSL_FIPS
DH *	FIPS_dh_new(void);
void	FIPS_dh_free(DH *dh);
#endif

d209 12
a230 1
#define DH_F_DHPARAMS_PRINT				 100
a232 3
#define DH_F_DH_COMPUTE_KEY				 107
#define DH_F_DH_GENERATE_KEY				 108
#define DH_F_DH_GENERATE_PARAMETERS			 109
d234 6
d242 2
d247 3
d251 1
a251 1
#define DH_R_KEY_SIZE_TOO_SMALL				 104
d253 1
d255 1
@


1.10
log
@resolve conflicts
@
text
@d125 1
a125 1
	int length; /* optional */
a240 2
#define DH_R_INVALID_PUBKEY				 102
#define DH_R_MODULUS_TOO_LARGE				 103
@


1.9
log
@resolve conflicts
@
text
@d80 2
d172 5
d228 3
d238 1
@


1.8
log
@openssl security fixes, diff from markus@@, ok & "commit it" djm@@
http://www.openssl.org/news/secadv_20060928.txt for more
@
text
@d62 2
d71 2
d74 1
a74 2
#include <openssl/crypto.h>
#include <openssl/ossl_typ.h>
d76 3
a78 1
#define OPENSSL_DH_MAX_MODULUS_BITS	10000
d93 3
a95 1
typedef struct dh_st DH;
d97 2
a98 1
typedef struct dh_method {
d111 3
a113 1
} DH_METHOD;
d128 1
a128 1
	char *method_mont_p;
d160 1
a160 2
#define DHparams_dup(x) (DH *)ASN1_dup((int (*)())i2d_DHparams, \
		(char *(*)())d2i_DHparams,(char *)(x))
d165 2
a166 9
#define d2i_DHparams_bio(bp,x) (DH *)ASN1_d2i_bio((char *(*)())DH_new, \
		(char *(*)())d2i_DHparams,(bp),(unsigned char **)(x))
#ifdef  __cplusplus
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio((int (*)())i2d_DHparams,(bp), \
		(unsigned char *)(x))
#else
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio(i2d_DHparams,(bp), \
		(unsigned char *)(x))
#endif
d183 3
d188 5
d217 1
d220 1
a220 3
#define DH_F_DH_COMPUTE_KEY				 102
#define DH_F_DH_GENERATE_KEY				 103
#define DH_F_DH_GENERATE_PARAMETERS			 104
d222 2
d227 2
@


1.7
log
@resolve conflicts
@
text
@d73 2
d218 1
@


1.7.2.1
log
@MFC:
Fix by pvalchev@@

openssl security fixes, diff from markus@@, ok & "commit it" djm@@
http://www.openssl.org/news/secadv_20060928.txt for more
@
text
@a72 2
#define OPENSSL_DH_MAX_MODULUS_BITS	10000

a215 1
#define DH_R_MODULUS_TOO_LARGE				 103
@


1.6
log
@backport checks for degenerate Diffie-Hellman public exponents from
OpenSSL-0.9.8a, where they were added without a corresponding patch to
0.9.7 or an advisory!  ok theo@@ markus@@
@
text
@d73 8
a80 1
#define DH_FLAG_CACHE_MONT_P	0x01
@


1.5
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d133 4
d175 1
d208 1
@


1.5.14.1
log
@MFC:
Fix by pvalchev@@

openssl security fixes, diff from markus@@, ok & "commit it" djm@@
http://www.openssl.org/news/secadv_20060928.txt for more
@
text
@a72 2
#define OPENSSL_DH_MAX_MODULUS_BITS	10000

a202 1
#define DH_R_MODULUS_TOO_LARGE				 103
@


1.5.16.1
log
@MFC:
Fix by pvalchev@@

openssl security fixes, diff from markus@@, ok & "commit it" djm@@
http://www.openssl.org/news/secadv_20060928.txt for more
@
text
@a72 2
#define OPENSSL_DH_MAX_MODULUS_BITS	10000

a202 1
#define DH_R_MODULUS_TOO_LARGE				 103
@


1.4
log
@openssl-engine-0.9.6 merge
@
text
@d62 1
a62 1
#ifdef NO_DH
d66 1
a66 1
#ifndef NO_BIO
d71 1
d85 3
a87 3
	int (*compute_key)(unsigned char *key,BIGNUM *pub_key,DH *dh);
	int (*bn_mod_exp)(DH *dh, BIGNUM *r, BIGNUM *a, const BIGNUM *p,
				const BIGNUM *m, BN_CTX *ctx,
d119 2
a120 5
#if 0
	DH_METHOD *meth;
#else
	struct engine_st *engine;
#endif
d153 1
a153 1
DH_METHOD *DH_OpenSSL(void);
d155 4
a158 9
void DH_set_default_openssl_method(DH_METHOD *meth);
DH_METHOD *DH_get_default_openssl_method(void);
#if 0
DH_METHOD *DH_set_method(DH *dh, DH_METHOD *meth);
DH *DH_new_method(DH_METHOD *meth);
#else
int DH_set_method(DH *dh, struct engine_st *engine);
DH *DH_new_method(struct engine_st *engine);
#endif
d162 2
a163 1
int	DH_size(DH *dh);
d170 1
a170 1
int	DH_check(DH *dh,int *codes);
d172 5
a176 5
int	DH_compute_key(unsigned char *key,BIGNUM *pub_key,DH *dh);
DH *	d2i_DHparams(DH **a,unsigned char **pp, long length);
int	i2d_DHparams(DH *a,unsigned char **pp);
#ifndef NO_FP_API
int	DHparams_print_fp(FILE *fp, DH *x);
d178 2
a179 2
#ifndef NO_BIO
int	DHparams_print(BIO *bp, DH *x);
d181 1
a181 1
int	DHparams_print(char *bp, DH *x);
a182 1
void	ERR_load_DH_strings(void );
d188 1
d198 1
a198 1
#define DH_F_DH_NEW					 105
d201 1
a207 1

@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@a61 4
#ifdef  __cplusplus
extern "C" {
#endif

d66 3
d74 4
d118 1
d120 3
d157 3
a159 2
void DH_set_default_method(DH_METHOD *meth);
DH_METHOD *DH_get_default_method(void);
d162 4
d184 1
a184 1
#ifdef HEADER_BIO_H
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d71 1
d75 18
a92 1
typedef struct dh_st
d101 1
a101 1
	BIGNUM *pub_key;	/* y */
d106 11
a116 1
	} DH;
d124 1
a124 1
#define DH_CHECK_P_NOT_STRONG_PRIME	0x02
d128 4
d148 7
d158 4
@


1.1
log
@Initial revision
@
text
@d66 2
a67 2
#ifndef HEADER_BN_H
#define BIGNUM 		char
d70 4
d85 3
d108 4
d114 1
a115 1
#ifndef NOPROTO
d120 1
a120 1
		void (*callback)(int,int,char *),char *cb_arg);
d136 4
a139 1
#else
a140 18
DH *	DH_new();
void	DH_free();
int	DH_size();
DH *	DH_generate_parameters();
int	DH_check();
int	DH_generate_key();
int	DH_compute_key();
DH *	d2i_DHparams();
int	i2d_DHparams();
#ifndef NO_FP_API
int	DHparams_print_fp();
#endif
int	DHparams_print();
void	ERR_load_DH_strings();

#endif

/* BEGIN ERROR CODES */
d153 1
a153 1
 
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@a61 13
#ifdef OPENSSL_NO_DH
#error DH is disabled.
#endif

#ifndef OPENSSL_NO_BIO
#include <openssl/bio.h>
#endif
#include <openssl/bn.h>
#include <openssl/crypto.h>
#include <openssl/ossl_typ.h>
	
#define DH_FLAG_CACHE_MONT_P	0x01

d66 3
a68 16
typedef struct dh_st DH;

typedef struct dh_method {
	const char *name;
	/* Methods here */
	int (*generate_key)(DH *dh);
	int (*compute_key)(unsigned char *key,const BIGNUM *pub_key,DH *dh);
	int (*bn_mod_exp)(const DH *dh, BIGNUM *r, const BIGNUM *a,
				const BIGNUM *p, const BIGNUM *m, BN_CTX *ctx,
				BN_MONT_CTX *m_ctx); /* Can be null */

	int (*init)(DH *dh);
	int (*finish)(DH *dh);
	int flags;
	char *app_data;
} DH_METHOD;
d70 1
a70 1
struct dh_st
d78 2
a79 2
	long length; /* optional */
	BIGNUM *pub_key;	/* g^x */
d81 1
a81 15

	int flags;
	char *method_mont_p;
	/* Place holders if we want to do X9.42 DH */
	BIGNUM *q;
	BIGNUM *j;
	unsigned char *seed;
	int seedlen;
	BIGNUM *counter;

	int references;
	CRYPTO_EX_DATA ex_data;
	const DH_METHOD *meth;
	ENGINE *engine;
	};
d89 1
a89 1
#define DH_CHECK_P_NOT_SAFE_PRIME	0x02
a92 4
/* primes p where (p-1)/2 is prime too are called "safe"; we define
   this for backward compatibility: */
#define DH_CHECK_P_NOT_STRONG_PRIME	DH_CHECK_P_NOT_SAFE_PRIME

a100 4
#ifdef  __cplusplus
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio((int (*)())i2d_DHparams,(bp), \
		(unsigned char *)(x))
#else
a102 8
#endif

const DH_METHOD *DH_OpenSSL(void);

void DH_set_default_method(const DH_METHOD *meth);
const DH_METHOD *DH_get_default_method(void);
int DH_set_method(DH *dh, const DH_METHOD *meth);
DH *DH_new_method(ENGINE *engine);
d104 1
d107 1
a107 6
int	DH_up_ref(DH *dh);
int	DH_size(const DH *dh);
int DH_get_ex_new_index(long argl, void *argp, CRYPTO_EX_new *new_func,
	     CRYPTO_EX_dup *dup_func, CRYPTO_EX_free *free_func);
int DH_set_ex_data(DH *d, int idx, void *arg);
void *DH_get_ex_data(DH *d, int idx);
d109 2
a110 2
		void (*callback)(int,int,void *),void *cb_arg);
int	DH_check(const DH *dh,int *codes);
d112 10
a121 5
int	DH_compute_key(unsigned char *key,const BIGNUM *pub_key,DH *dh);
DH *	d2i_DHparams(DH **a,const unsigned char **pp, long length);
int	i2d_DHparams(const DH *a,unsigned char **pp);
#ifndef OPENSSL_NO_FP_API
int	DHparams_print_fp(FILE *fp, const DH *x);
d123 2
a124 2
#ifndef OPENSSL_NO_BIO
int	DHparams_print(BIO *bp, const DH *x);
d126 16
a141 1
int	DHparams_print(char *bp, const DH *x);
a144 5
/* The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_DH_strings(void);

d153 1
a153 1
#define DH_F_DH_NEW_METHOD				 105
a155 1
#define DH_R_BAD_GENERATOR				 101
d157 1
a157 1

d162 1
@


1.1.1.3
log
@import of openssl-0.9.7j
@
text
@d73 1
a73 8
#define DH_FLAG_CACHE_MONT_P     0x01
#define DH_FLAG_NO_EXP_CONSTTIME 0x02 /* new with 0.9.7h; the built-in DH
                                       * implementation now uses constant time
                                       * modular exponentiation for secret exponents
                                       * by default. This flag causes the
                                       * faster variable sliding window method to
                                       * be used for all exponents.
                                       */
@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@a61 2
#include <openssl/e_os2.h>

d69 2
a71 3
#ifndef OPENSSL_NO_DEPRECATED
#include <openssl/bn.h>
#endif
a72 4
#ifndef OPENSSL_DH_MAX_MODULUS_BITS
# define OPENSSL_DH_MAX_MODULUS_BITS	10000
#endif

d86 1
a86 3
/* Already defined in ossl_typ.h */
/* typedef struct dh_st DH; */
/* typedef struct dh_method DH_METHOD; */
d88 1
a88 2
struct dh_method
	{
d101 1
a101 3
	/* If this is non-NULL, it will be used to generate parameters */
	int (*generate_params)(DH *dh, int prime_len, int generator, BN_GENCB *cb);
	};
d116 1
a116 1
	BN_MONT_CTX *method_mont_p;
a139 4
/* DH_check_pub_key error codes */
#define DH_CHECK_PUBKEY_TOO_SMALL	0x01
#define DH_CHECK_PUBKEY_TOO_LARGE	0x02

d144 2
a145 1
#define DHparams_dup(x) ASN1_dup_of_const(DH,i2d_DHparams,d2i_DHparams,x)
d150 9
a158 2
#define d2i_DHparams_bio(bp,x) ASN1_d2i_bio_of(DH,DH_new,d2i_DHparams,bp,x)
#define i2d_DHparams_bio(bp,x) ASN1_i2d_bio_of_const(DH,i2d_DHparams,bp,x)
a174 3

/* Deprecated version */
#ifndef OPENSSL_NO_DEPRECATED
a176 5
#endif /* !defined(OPENSSL_NO_DEPRECATED) */

/* New version */
int	DH_generate_parameters_ex(DH *dh, int prime_len,int generator, BN_GENCB *cb);

a177 1
int	DH_check_pub_key(const DH *dh,const BIGNUM *pub_key, int *codes);
a199 1
#define DH_F_COMPUTE_KEY				 102
d202 3
a204 1
#define DH_F_DH_BUILTIN_GENPARAMS			 106
a205 2
#define DH_F_GENERATE_KEY				 103
#define DH_F_GENERATE_PARAMETERS			 104
a208 2
#define DH_R_INVALID_PUBKEY				 102
#define DH_R_MODULUS_TOO_LARGE				 103
@


1.1.1.5
log
@import openssl-0.9.8j
@
text
@a79 2
#define OPENSSL_DH_FIPS_MIN_MODULUS_BITS 1024

a169 5
#ifdef OPENSSL_FIPS
DH *	FIPS_dh_new(void);
void	FIPS_dh_free(DH *dh);
#endif

a220 3
#define DH_F_DH_COMPUTE_KEY				 107
#define DH_F_DH_GENERATE_KEY				 108
#define DH_F_DH_GENERATE_PARAMETERS			 109
a227 1
#define DH_R_KEY_SIZE_TOO_SMALL				 104
@


1.1.1.6
log
@import OpenSSL-1.0.0a
@
text
@d80 2
d162 1
d170 1
a170 1
DH *DHparams_dup(DH *);
d172 4
a175 1
const DH_METHOD *DH_OpenSSL(void);
a214 12
#define EVP_PKEY_CTX_set_dh_paramgen_prime_len(ctx, len) \
	EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, \
			EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN, len, NULL)

#define EVP_PKEY_CTX_set_dh_paramgen_generator(ctx, gen) \
	EVP_PKEY_CTX_ctrl(ctx, EVP_PKEY_DH, EVP_PKEY_OP_PARAMGEN, \
			EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR, gen, NULL)

#define	EVP_PKEY_CTRL_DH_PARAMGEN_PRIME_LEN	(EVP_PKEY_ALG_CTRL + 1)
#define	EVP_PKEY_CTRL_DH_PARAMGEN_GENERATOR	(EVP_PKEY_ALG_CTRL + 2)
		

d225 1
d228 3
a231 6
#define DH_F_DH_PARAM_DECODE				 107
#define DH_F_DH_PRIV_DECODE				 110
#define DH_F_DH_PRIV_ENCODE				 111
#define DH_F_DH_PUB_DECODE				 108
#define DH_F_DH_PUB_ENCODE				 109
#define DH_F_DO_DH_PRINT				 100
a233 2
#define DH_F_PKEY_DH_DERIVE				 112
#define DH_F_PKEY_DH_KEYGEN				 113
a236 3
#define DH_R_BN_DECODE_ERROR				 109
#define DH_R_BN_ERROR					 106
#define DH_R_DECODE_ERROR				 104
d238 1
a238 1
#define DH_R_KEYS_NOT_SET				 108
a239 1
#define DH_R_NO_PARAMETERS_SET				 107
a240 1
#define DH_R_PARAMETER_ENCODING_ERROR			 105
@


1.1.1.7
log
@import OpenSSL-1.0.1c
@
text
@a88 15
/* If this flag is set the DH method is FIPS compliant and can be used
 * in FIPS mode. This is set in the validated module method. If an
 * application sets this flag in its own methods it is its reposibility
 * to ensure the result is compliant.
 */

#define DH_FLAG_FIPS_METHOD			0x0400

/* If this flag is set the operations normally disabled in FIPS mode are
 * permitted it is then the applications responsibility to ensure that the
 * usage is compliant.
 */

#define DH_FLAG_NON_FIPS_ALLOW			0x0400

a232 3
#define DH_F_DH_COMPUTE_KEY				 114
#define DH_F_DH_GENERATE_KEY				 115
#define DH_F_DH_GENERATE_PARAMETERS_EX			 116
a251 1
#define DH_R_KEY_SIZE_TOO_SMALL				 110
a252 1
#define DH_R_NON_FIPS_METHOD				 111
@


