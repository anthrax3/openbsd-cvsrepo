head	1.10;
access;
symbols
	OPENBSD_6_1_BASE:1.10;
locks; strict;
comment	@ * @;


1.10
date	2016.12.30.15.26.49;	author jsing;	state Exp;
branches;
next	1.9;
commitid	VX4bCb6WnfvVS2is;

1.9
date	2016.11.04.18.35.30;	author jsing;	state Exp;
branches;
next	1.8;
commitid	wBWgQMBCuuWRNlyK;

1.8
date	2015.02.14.15.06.55;	author jsing;	state Exp;
branches;
next	1.7;
commitid	S8zbVePR0lnGsw8C;

1.7
date	2015.02.10.05.12.23;	author jsing;	state Exp;
branches;
next	1.6;
commitid	SjcScmJB6ReM8YEr;

1.6
date	2014.07.11.08.44.48;	author jsing;	state Exp;
branches;
next	1.5;
commitid	yQEL1wOWIearrW15;

1.5
date	2014.07.09.13.26.47;	author miod;	state Exp;
branches;
next	1.4;
commitid	g5VUmsrdRHmu7cCJ;

1.4
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	mJUVYpkFBZ0Zv2bG;

1.3
date	2010.10.01.22.58.54;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2009.01.09.12.15.41;	author djm;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.12;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.14;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2009.01.09.12.13.54;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2010.10.01.22.54.06;	author djm;	state Exp;
branches;
next	;


desc
@@


1.10
log
@Expand ASN1_ITEM_rptr macro - no change in generated assembly.
@
text
@/* $OpenBSD: dh_asn1.c,v 1.9 2016/11/04 18:35:30 jsing Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 2000.
 */
/* ====================================================================
 * Copyright (c) 2000-2005 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer. 
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>

#include <openssl/asn1t.h>
#include <openssl/bn.h>
#include <openssl/dh.h>
#include <openssl/objects.h>

/* Override the default free and new methods */
static int
dh_cb(int operation, ASN1_VALUE **pval, const ASN1_ITEM *it, void *exarg)
{
	if (operation == ASN1_OP_NEW_PRE) {
		*pval = (ASN1_VALUE *)DH_new();
		if (*pval)
			return 2;
		return 0;
	} else if (operation == ASN1_OP_FREE_PRE) {
		DH_free((DH *)*pval);
		*pval = NULL;
		return 2;
	}
	return 1;
}

static const ASN1_AUX DHparams_aux = {
	.app_data = NULL,
	.flags = 0,
	.ref_offset = 0,
	.ref_lock = 0,
	.asn1_cb = dh_cb,
	.enc_offset = 0,
};
static const ASN1_TEMPLATE DHparams_seq_tt[] = {
	{
		.flags = 0,
		.tag = 0,
		.offset = offsetof(DH, p),
		.field_name = "p",
		.item = &BIGNUM_it,
	},
	{
		.flags = 0,
		.tag = 0,
		.offset = offsetof(DH, g),
		.field_name = "g",
		.item = &BIGNUM_it,
	},
	{
		.flags = ASN1_TFLG_OPTIONAL,
		.tag = 0,
		.offset = offsetof(DH, length),
		.field_name = "length",
		.item = &ZLONG_it,
	},
};

const ASN1_ITEM DHparams_it = {
	.itype = ASN1_ITYPE_SEQUENCE,
	.utype = V_ASN1_SEQUENCE,
	.templates = DHparams_seq_tt,
	.tcount = sizeof(DHparams_seq_tt) / sizeof(ASN1_TEMPLATE),
	.funcs = &DHparams_aux,
	.size = sizeof(DH),
	.sname = "DH",
};


DH *
d2i_DHparams(DH **a, const unsigned char **in, long len)
{
	return (DH *)ASN1_item_d2i((ASN1_VALUE **)a, in, len,
	    &DHparams_it);
}

int
i2d_DHparams(const DH *a, unsigned char **out)
{
	return ASN1_item_i2d((ASN1_VALUE *)a, out, &DHparams_it);
}

DH *
d2i_DHparams_bio(BIO *bp, DH **a)
{
	return ASN1_item_d2i_bio(&DHparams_it, bp, a);
}

int
i2d_DHparams_bio(BIO *bp, DH *a)
{
	return ASN1_item_i2d_bio(&DHparams_it, bp, a);
}

DH *
d2i_DHparams_fp(FILE *fp, DH **a)
{
	return ASN1_item_d2i_fp(&DHparams_it, fp, a);
}

int
i2d_DHparams_fp(FILE *fp, DH *a)
{
	return ASN1_item_i2d_fp(&DHparams_it, fp, a);
}

DH *
DHparams_dup(DH *dh)
{
	return ASN1_item_dup(&DHparams_it, dh);
}
@


1.9
log
@Kill a bunch of OLD_ASN1 usage by replacing ASN1_{d2i,i2d}_* with
ASN1_item_{d2i,i2d}_* equivalents.

ok guenther@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: dh_asn1.c,v 1.8 2015/02/14 15:06:55 jsing Exp $ */
d166 1
a166 1
	return ASN1_item_dup(ASN1_ITEM_rptr(DHparams), dh);
@


1.8
log
@Expand ASN1_CHOICE*, ASN1_SEQUENCE* and associated macros, making the
data structures visible and easier to review, without having to wade
through layers and layers of asn1t.h macros.

Change has been scripted and there is no change to the generated assembly.

Discussed with beck@@ miod@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: dh_asn1.c,v 1.7 2015/02/10 05:12:23 jsing Exp $ */
d137 24
@


1.7
log
@Expand the -IMPLEMENT_ASN1_ENCODE_FUNCTIONS_(const_)?fname macros so that
the code is visible and functions can be readily located.

Change has been scripted and there is no change to the generated assembly.

Discussed with beck@@ miod@@ tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: dh_asn1.c,v 1.6 2014/07/11 08:44:48 jsing Exp $ */
d83 41
a123 5
ASN1_SEQUENCE_cb(DHparams, dh_cb) = {
	ASN1_SIMPLE(DH, p, BIGNUM),
	ASN1_SIMPLE(DH, g, BIGNUM),
	ASN1_OPT(DH, length, ZLONG),
} ASN1_SEQUENCE_END_cb(DH, DHparams)
@


1.6
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: dh_asn1.c,v 1.5 2014/07/09 13:26:47 miod Exp $ */
d89 13
a101 1
IMPLEMENT_ASN1_ENCODE_FUNCTIONS_const_fname(DH, DHparams, DHparams)
@


1.5
log
@KNF
@
text
@d1 1
a1 1
/* $OpenBSD: dh_asn1.c,v 1.4 2014/06/12 15:49:28 deraadt Exp $ */
d60 2
a61 1
#include "cryptlib.h"
a64 1
#include <openssl/asn1t.h>
@


1.4
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d67 2
a68 2
static int dh_cb(int operation, ASN1_VALUE **pval, const ASN1_ITEM *it,
						void *exarg)
d70 1
a70 1
	if(operation == ASN1_OP_NEW_PRE) {
d72 2
a73 1
		if(*pval) return 2;
d75 1
a75 1
	} else if(operation == ASN1_OP_FREE_PRE) {
d91 3
a93 2
DH *DHparams_dup(DH *dh)
	{
d95 1
a95 1
	}
@


1.3
log
@resolve conflicts, fix local changes
@
text
@d1 1
a1 1
/* dh_asn1.c */
@


1.2
log
@resolve conflicts
@
text
@d6 1
a6 1
 * Copyright (c) 2000 The OpenSSL Project.  All rights reserved.
d67 2
a68 1
static int dh_cb(int operation, ASN1_VALUE **pval, const ASN1_ITEM *it)
d89 5
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@@


1.1.1.2
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
@


1.1.1.3
log
@import OpenSSL-1.0.0a
@
text
@d6 1
a6 1
 * Copyright (c) 2000-2005 The OpenSSL Project.  All rights reserved.
d67 1
a67 2
static int dh_cb(int operation, ASN1_VALUE **pval, const ASN1_ITEM *it,
						void *exarg)
a87 5

DH *DHparams_dup(DH *dh)
	{
	return ASN1_item_dup(ASN1_ITEM_rptr(DHparams), dh);
	}
@


