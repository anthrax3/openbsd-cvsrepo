head	1.4;
access;
symbols
	OPENBSD_2_8:1.3.0.4
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.2
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.1.1.1.0.6
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.4
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.2
	OPENBSD_2_4_BASE:1.1.1.1
	SSLeay_0_9_0b:1.1.1.1
	SSLeay:1.1.1;
locks; strict;
comment	@;; @;


1.4
date	2000.12.15.04.14.13;	author beck;	state dead;
branches;
next	1.3;

1.3
date	2000.04.15.06.18.45;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.11.48;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.49;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.49;	author ryker;	state Exp;
branches;
next	;


desc
@@


1.4
log
@openssl-engine0.9.6 merge

Again, be sure to whack an old /usr/obj/lib/libssl if you are doing builds
@
text
@@


1.3
log
@OpenSSL 0.9.5a merge
@
text
@@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@a0 1716
	; Don't even think of reading this code
	; It was automatically generated by sha1-586.pl
	; Which is a perl program used to generate the x86 assember for
	; any of elf, a.out, BSDI,Win32, or Solaris
	; eric <eay@@cryptsoft.com>
	; 
	TITLE	sha1-586.asm
        .486
.model FLAT
_TEXT	SEGMENT
PUBLIC	_sha1_block_asm_data_order

_sha1_block_asm_data_order PROC NEAR
	mov	ecx,		DWORD PTR 12[esp]
	push	esi
	shl	ecx,		6
	mov	esi,		DWORD PTR 12[esp]
	push	ebp
	add	ecx,		esi
	push	ebx
	mov	ebp,		DWORD PTR 16[esp]
	push	edi
	mov	edx,		DWORD PTR 12[ebp]
	sub	esp,		108
	mov	edi,		DWORD PTR 16[ebp]
	mov	ebx,		DWORD PTR 8[ebp]
	mov	DWORD PTR 68[esp],ecx
	; First we need to setup the X array
L000start:
	; First, load the words onto the stack in network byte order
	mov	eax,		DWORD PTR [esi]
	mov	ecx,		DWORD PTR 4[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR [esp],eax
	mov	DWORD PTR 4[esp],ecx
	mov	eax,		DWORD PTR 8[esi]
	mov	ecx,		DWORD PTR 12[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 8[esp],eax
	mov	DWORD PTR 12[esp],ecx
	mov	eax,		DWORD PTR 16[esi]
	mov	ecx,		DWORD PTR 20[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 16[esp],eax
	mov	DWORD PTR 20[esp],ecx
	mov	eax,		DWORD PTR 24[esi]
	mov	ecx,		DWORD PTR 28[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 24[esp],eax
	mov	DWORD PTR 28[esp],ecx
	mov	eax,		DWORD PTR 32[esi]
	mov	ecx,		DWORD PTR 36[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 32[esp],eax
	mov	DWORD PTR 36[esp],ecx
	mov	eax,		DWORD PTR 40[esi]
	mov	ecx,		DWORD PTR 44[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 40[esp],eax
	mov	DWORD PTR 44[esp],ecx
	mov	eax,		DWORD PTR 48[esi]
	mov	ecx,		DWORD PTR 52[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 48[esp],eax
	mov	DWORD PTR 52[esp],ecx
	mov	eax,		DWORD PTR 56[esi]
	mov	ecx,		DWORD PTR 60[esi]
	bswap	eax
	bswap	ecx
	mov	DWORD PTR 56[esp],eax
	mov	DWORD PTR 60[esp],ecx
	; We now have the X array on the stack
	; starting at sp-4
	mov	DWORD PTR 132[esp],esi
L001shortcut:
	; 
	; Start processing
	mov	eax,		DWORD PTR [ebp]
	mov	ecx,		DWORD PTR 4[ebp]
	; 00_15 0
	mov	esi,		ebx
	mov	ebp,		eax
	xor	esi,		edx
	rol	ebp,		5
	and	esi,		ecx
	add	ebp,		edi
	ror	ecx,		1
	mov	edi,		DWORD PTR [esp]
	ror	ecx,		1
	xor	esi,		edx
	lea	ebp,		DWORD PTR 1518500249[edi*1+ebp]
	mov	edi,		ecx
	add	esi,		ebp
	xor	edi,		ebx
	mov	ebp,		esi
	and	edi,		eax
	rol	ebp,		5
	add	ebp,		edx
	mov	edx,		DWORD PTR 4[esp]
	ror	eax,		1
	xor	edi,		ebx
	ror	eax,		1
	lea	ebp,		DWORD PTR 1518500249[edx*1+ebp]
	add	edi,		ebp
	; 00_15 2
	mov	edx,		eax
	mov	ebp,		edi
	xor	edx,		ecx
	rol	ebp,		5
	and	edx,		esi
	add	ebp,		ebx
	ror	esi,		1
	mov	ebx,		DWORD PTR 8[esp]
	ror	esi,		1
	xor	edx,		ecx
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	mov	ebx,		esi
	add	edx,		ebp
	xor	ebx,		eax
	mov	ebp,		edx
	and	ebx,		edi
	rol	ebp,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 12[esp]
	ror	edi,		1
	xor	ebx,		eax
	ror	edi,		1
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	add	ebx,		ebp
	; 00_15 4
	mov	ecx,		edi
	mov	ebp,		ebx
	xor	ecx,		esi
	rol	ebp,		5
	and	ecx,		edx
	add	ebp,		eax
	ror	edx,		1
	mov	eax,		DWORD PTR 16[esp]
	ror	edx,		1
	xor	ecx,		esi
	lea	ebp,		DWORD PTR 1518500249[eax*1+ebp]
	mov	eax,		edx
	add	ecx,		ebp
	xor	eax,		edi
	mov	ebp,		ecx
	and	eax,		ebx
	rol	ebp,		5
	add	ebp,		esi
	mov	esi,		DWORD PTR 20[esp]
	ror	ebx,		1
	xor	eax,		edi
	ror	ebx,		1
	lea	ebp,		DWORD PTR 1518500249[esi*1+ebp]
	add	eax,		ebp
	; 00_15 6
	mov	esi,		ebx
	mov	ebp,		eax
	xor	esi,		edx
	rol	ebp,		5
	and	esi,		ecx
	add	ebp,		edi
	ror	ecx,		1
	mov	edi,		DWORD PTR 24[esp]
	ror	ecx,		1
	xor	esi,		edx
	lea	ebp,		DWORD PTR 1518500249[edi*1+ebp]
	mov	edi,		ecx
	add	esi,		ebp
	xor	edi,		ebx
	mov	ebp,		esi
	and	edi,		eax
	rol	ebp,		5
	add	ebp,		edx
	mov	edx,		DWORD PTR 28[esp]
	ror	eax,		1
	xor	edi,		ebx
	ror	eax,		1
	lea	ebp,		DWORD PTR 1518500249[edx*1+ebp]
	add	edi,		ebp
	; 00_15 8
	mov	edx,		eax
	mov	ebp,		edi
	xor	edx,		ecx
	rol	ebp,		5
	and	edx,		esi
	add	ebp,		ebx
	ror	esi,		1
	mov	ebx,		DWORD PTR 32[esp]
	ror	esi,		1
	xor	edx,		ecx
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	mov	ebx,		esi
	add	edx,		ebp
	xor	ebx,		eax
	mov	ebp,		edx
	and	ebx,		edi
	rol	ebp,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 36[esp]
	ror	edi,		1
	xor	ebx,		eax
	ror	edi,		1
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	add	ebx,		ebp
	; 00_15 10
	mov	ecx,		edi
	mov	ebp,		ebx
	xor	ecx,		esi
	rol	ebp,		5
	and	ecx,		edx
	add	ebp,		eax
	ror	edx,		1
	mov	eax,		DWORD PTR 40[esp]
	ror	edx,		1
	xor	ecx,		esi
	lea	ebp,		DWORD PTR 1518500249[eax*1+ebp]
	mov	eax,		edx
	add	ecx,		ebp
	xor	eax,		edi
	mov	ebp,		ecx
	and	eax,		ebx
	rol	ebp,		5
	add	ebp,		esi
	mov	esi,		DWORD PTR 44[esp]
	ror	ebx,		1
	xor	eax,		edi
	ror	ebx,		1
	lea	ebp,		DWORD PTR 1518500249[esi*1+ebp]
	add	eax,		ebp
	; 00_15 12
	mov	esi,		ebx
	mov	ebp,		eax
	xor	esi,		edx
	rol	ebp,		5
	and	esi,		ecx
	add	ebp,		edi
	ror	ecx,		1
	mov	edi,		DWORD PTR 48[esp]
	ror	ecx,		1
	xor	esi,		edx
	lea	ebp,		DWORD PTR 1518500249[edi*1+ebp]
	mov	edi,		ecx
	add	esi,		ebp
	xor	edi,		ebx
	mov	ebp,		esi
	and	edi,		eax
	rol	ebp,		5
	add	ebp,		edx
	mov	edx,		DWORD PTR 52[esp]
	ror	eax,		1
	xor	edi,		ebx
	ror	eax,		1
	lea	ebp,		DWORD PTR 1518500249[edx*1+ebp]
	add	edi,		ebp
	; 00_15 14
	mov	edx,		eax
	mov	ebp,		edi
	xor	edx,		ecx
	rol	ebp,		5
	and	edx,		esi
	add	ebp,		ebx
	ror	esi,		1
	mov	ebx,		DWORD PTR 56[esp]
	ror	esi,		1
	xor	edx,		ecx
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	mov	ebx,		esi
	add	edx,		ebp
	xor	ebx,		eax
	mov	ebp,		edx
	and	ebx,		edi
	rol	ebp,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 60[esp]
	ror	edi,		1
	xor	ebx,		eax
	ror	edi,		1
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	add	ebx,		ebp
	; 16_19 16
	nop
	mov	ebp,		DWORD PTR [esp]
	mov	ecx,		DWORD PTR 8[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	ecx,		ebp
	mov	ebp,		edi
	rol	ecx,		1
	xor	ebp,		esi
	mov	DWORD PTR [esp],ecx
	and	ebp,		edx
	lea	ecx,		DWORD PTR 1518500249[eax*1+ecx]
	xor	ebp,		esi
	mov	eax,		ebx
	add	ecx,		ebp
	rol	eax,		5
	ror	edx,		1
	add	ecx,		eax
	mov	eax,		DWORD PTR 4[esp]
	mov	ebp,		DWORD PTR 12[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	ror	edx,		1
	xor	eax,		ebp
	rol	eax,		1
	mov	ebp,		edx
	xor	ebp,		edi
	mov	DWORD PTR 4[esp],eax
	and	ebp,		ebx
	lea	eax,		DWORD PTR 1518500249[esi*1+eax]
	xor	ebp,		edi
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	eax,		esi
	ror	ebx,		1
	add	eax,		ebp
	; 16_19 18
	mov	ebp,		DWORD PTR 8[esp]
	mov	esi,		DWORD PTR 16[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	esi,		ebp
	mov	ebp,		ebx
	rol	esi,		1
	xor	ebp,		edx
	mov	DWORD PTR 8[esp],esi
	and	ebp,		ecx
	lea	esi,		DWORD PTR 1518500249[edi*1+esi]
	xor	ebp,		edx
	mov	edi,		eax
	add	esi,		ebp
	rol	edi,		5
	ror	ecx,		1
	add	esi,		edi
	mov	edi,		DWORD PTR 12[esp]
	mov	ebp,		DWORD PTR 20[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR [esp]
	ror	ecx,		1
	xor	edi,		ebp
	rol	edi,		1
	mov	ebp,		ecx
	xor	ebp,		ebx
	mov	DWORD PTR 12[esp],edi
	and	ebp,		eax
	lea	edi,		DWORD PTR 1518500249[edx*1+edi]
	xor	ebp,		ebx
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edi,		edx
	ror	eax,		1
	add	edi,		ebp
	; 20_39 20
	mov	edx,		DWORD PTR 16[esp]
	mov	ebp,		DWORD PTR 24[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 16[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 1859775393[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 21
	mov	ebx,		DWORD PTR 20[esp]
	mov	ebp,		DWORD PTR 28[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 20[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 1859775393[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 22
	mov	ecx,		DWORD PTR 24[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR 24[esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 1859775393[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 23
	mov	eax,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 36[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 28[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 1859775393[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 24
	mov	esi,		DWORD PTR 32[esp]
	mov	ebp,		DWORD PTR 40[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 32[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 1859775393[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 25
	mov	edi,		DWORD PTR 36[esp]
	mov	ebp,		DWORD PTR 44[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 36[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 1859775393[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 26
	mov	edx,		DWORD PTR 40[esp]
	mov	ebp,		DWORD PTR 48[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 40[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 1859775393[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 27
	mov	ebx,		DWORD PTR 44[esp]
	mov	ebp,		DWORD PTR 52[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 44[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 1859775393[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 28
	mov	ecx,		DWORD PTR 48[esp]
	mov	ebp,		DWORD PTR 56[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR 48[esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 1859775393[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 29
	mov	eax,		DWORD PTR 52[esp]
	mov	ebp,		DWORD PTR 60[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 52[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 1859775393[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 30
	mov	esi,		DWORD PTR 56[esp]
	mov	ebp,		DWORD PTR [esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 56[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 1859775393[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 31
	mov	edi,		DWORD PTR 60[esp]
	mov	ebp,		DWORD PTR 4[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 60[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 1859775393[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 32
	mov	edx,		DWORD PTR [esp]
	mov	ebp,		DWORD PTR 8[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR [esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 1859775393[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 33
	mov	ebx,		DWORD PTR 4[esp]
	mov	ebp,		DWORD PTR 12[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 4[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 1859775393[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 34
	mov	ecx,		DWORD PTR 8[esp]
	mov	ebp,		DWORD PTR 16[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR 8[esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 1859775393[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 35
	mov	eax,		DWORD PTR 12[esp]
	mov	ebp,		DWORD PTR 20[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 12[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 1859775393[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 36
	mov	esi,		DWORD PTR 16[esp]
	mov	ebp,		DWORD PTR 24[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 16[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 1859775393[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 37
	mov	edi,		DWORD PTR 20[esp]
	mov	ebp,		DWORD PTR 28[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 20[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 1859775393[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 38
	mov	edx,		DWORD PTR 24[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 24[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 1859775393[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 39
	mov	ebx,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 36[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 28[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 1859775393[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 40_59 40
	mov	ecx,		DWORD PTR 32[esp]
	mov	ebp,		DWORD PTR 40[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	or	ebp,		edi
	mov	DWORD PTR 32[esp],ecx
	and	ebp,		esi
	lea	ecx,		DWORD PTR 2400959708[eax*1+ecx]
	mov	eax,		edx
	ror	edx,		1
	and	eax,		edi
	or	ebp,		eax
	mov	eax,		ebx
	rol	eax,		5
	add	ebp,		eax
	mov	eax,		DWORD PTR 36[esp]
	add	ecx,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	ror	edx,		1
	xor	eax,		ebp
	rol	eax,		1
	mov	ebp,		ebx
	mov	DWORD PTR 36[esp],eax
	or	ebp,		edx
	lea	eax,		DWORD PTR 2400959708[esi*1+eax]
	mov	esi,		ebx
	and	ebp,		edi
	and	esi,		edx
	or	ebp,		esi
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	ebp,		esi
	ror	ebx,		1
	add	eax,		ebp
	; 40_59 41
	; 40_59 42
	mov	esi,		DWORD PTR 40[esp]
	mov	ebp,		DWORD PTR 48[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	or	ebp,		ebx
	mov	DWORD PTR 40[esp],esi
	and	ebp,		edx
	lea	esi,		DWORD PTR 2400959708[edi*1+esi]
	mov	edi,		ecx
	ror	ecx,		1
	and	edi,		ebx
	or	ebp,		edi
	mov	edi,		eax
	rol	edi,		5
	add	ebp,		edi
	mov	edi,		DWORD PTR 44[esp]
	add	esi,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	ror	ecx,		1
	xor	edi,		ebp
	rol	edi,		1
	mov	ebp,		eax
	mov	DWORD PTR 44[esp],edi
	or	ebp,		ecx
	lea	edi,		DWORD PTR 2400959708[edx*1+edi]
	mov	edx,		eax
	and	ebp,		ebx
	and	edx,		ecx
	or	ebp,		edx
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	ebp,		edx
	ror	eax,		1
	add	edi,		ebp
	; 40_59 43
	; 40_59 44
	mov	edx,		DWORD PTR 48[esp]
	mov	ebp,		DWORD PTR 56[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	or	ebp,		eax
	mov	DWORD PTR 48[esp],edx
	and	ebp,		ecx
	lea	edx,		DWORD PTR 2400959708[ebx*1+edx]
	mov	ebx,		esi
	ror	esi,		1
	and	ebx,		eax
	or	ebp,		ebx
	mov	ebx,		edi
	rol	ebx,		5
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 52[esp]
	add	edx,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	ror	esi,		1
	xor	ebx,		ebp
	rol	ebx,		1
	mov	ebp,		edi
	mov	DWORD PTR 52[esp],ebx
	or	ebp,		esi
	lea	ebx,		DWORD PTR 2400959708[ecx*1+ebx]
	mov	ecx,		edi
	and	ebp,		eax
	and	ecx,		esi
	or	ebp,		ecx
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ebp,		ecx
	ror	edi,		1
	add	ebx,		ebp
	; 40_59 45
	; 40_59 46
	mov	ecx,		DWORD PTR 56[esp]
	mov	ebp,		DWORD PTR [esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	or	ebp,		edi
	mov	DWORD PTR 56[esp],ecx
	and	ebp,		esi
	lea	ecx,		DWORD PTR 2400959708[eax*1+ecx]
	mov	eax,		edx
	ror	edx,		1
	and	eax,		edi
	or	ebp,		eax
	mov	eax,		ebx
	rol	eax,		5
	add	ebp,		eax
	mov	eax,		DWORD PTR 60[esp]
	add	ecx,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	ror	edx,		1
	xor	eax,		ebp
	rol	eax,		1
	mov	ebp,		ebx
	mov	DWORD PTR 60[esp],eax
	or	ebp,		edx
	lea	eax,		DWORD PTR 2400959708[esi*1+eax]
	mov	esi,		ebx
	and	ebp,		edi
	and	esi,		edx
	or	ebp,		esi
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	ebp,		esi
	ror	ebx,		1
	add	eax,		ebp
	; 40_59 47
	; 40_59 48
	mov	esi,		DWORD PTR [esp]
	mov	ebp,		DWORD PTR 8[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	or	ebp,		ebx
	mov	DWORD PTR [esp],esi
	and	ebp,		edx
	lea	esi,		DWORD PTR 2400959708[edi*1+esi]
	mov	edi,		ecx
	ror	ecx,		1
	and	edi,		ebx
	or	ebp,		edi
	mov	edi,		eax
	rol	edi,		5
	add	ebp,		edi
	mov	edi,		DWORD PTR 4[esp]
	add	esi,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	ror	ecx,		1
	xor	edi,		ebp
	rol	edi,		1
	mov	ebp,		eax
	mov	DWORD PTR 4[esp],edi
	or	ebp,		ecx
	lea	edi,		DWORD PTR 2400959708[edx*1+edi]
	mov	edx,		eax
	and	ebp,		ebx
	and	edx,		ecx
	or	ebp,		edx
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	ebp,		edx
	ror	eax,		1
	add	edi,		ebp
	; 40_59 49
	; 40_59 50
	mov	edx,		DWORD PTR 8[esp]
	mov	ebp,		DWORD PTR 16[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	or	ebp,		eax
	mov	DWORD PTR 8[esp],edx
	and	ebp,		ecx
	lea	edx,		DWORD PTR 2400959708[ebx*1+edx]
	mov	ebx,		esi
	ror	esi,		1
	and	ebx,		eax
	or	ebp,		ebx
	mov	ebx,		edi
	rol	ebx,		5
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 12[esp]
	add	edx,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR [esp]
	ror	esi,		1
	xor	ebx,		ebp
	rol	ebx,		1
	mov	ebp,		edi
	mov	DWORD PTR 12[esp],ebx
	or	ebp,		esi
	lea	ebx,		DWORD PTR 2400959708[ecx*1+ebx]
	mov	ecx,		edi
	and	ebp,		eax
	and	ecx,		esi
	or	ebp,		ecx
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ebp,		ecx
	ror	edi,		1
	add	ebx,		ebp
	; 40_59 51
	; 40_59 52
	mov	ecx,		DWORD PTR 16[esp]
	mov	ebp,		DWORD PTR 24[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	or	ebp,		edi
	mov	DWORD PTR 16[esp],ecx
	and	ebp,		esi
	lea	ecx,		DWORD PTR 2400959708[eax*1+ecx]
	mov	eax,		edx
	ror	edx,		1
	and	eax,		edi
	or	ebp,		eax
	mov	eax,		ebx
	rol	eax,		5
	add	ebp,		eax
	mov	eax,		DWORD PTR 20[esp]
	add	ecx,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	ror	edx,		1
	xor	eax,		ebp
	rol	eax,		1
	mov	ebp,		ebx
	mov	DWORD PTR 20[esp],eax
	or	ebp,		edx
	lea	eax,		DWORD PTR 2400959708[esi*1+eax]
	mov	esi,		ebx
	and	ebp,		edi
	and	esi,		edx
	or	ebp,		esi
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	ebp,		esi
	ror	ebx,		1
	add	eax,		ebp
	; 40_59 53
	; 40_59 54
	mov	esi,		DWORD PTR 24[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	or	ebp,		ebx
	mov	DWORD PTR 24[esp],esi
	and	ebp,		edx
	lea	esi,		DWORD PTR 2400959708[edi*1+esi]
	mov	edi,		ecx
	ror	ecx,		1
	and	edi,		ebx
	or	ebp,		edi
	mov	edi,		eax
	rol	edi,		5
	add	ebp,		edi
	mov	edi,		DWORD PTR 28[esp]
	add	esi,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	ror	ecx,		1
	xor	edi,		ebp
	rol	edi,		1
	mov	ebp,		eax
	mov	DWORD PTR 28[esp],edi
	or	ebp,		ecx
	lea	edi,		DWORD PTR 2400959708[edx*1+edi]
	mov	edx,		eax
	and	ebp,		ebx
	and	edx,		ecx
	or	ebp,		edx
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	ebp,		edx
	ror	eax,		1
	add	edi,		ebp
	; 40_59 55
	; 40_59 56
	mov	edx,		DWORD PTR 32[esp]
	mov	ebp,		DWORD PTR 40[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	or	ebp,		eax
	mov	DWORD PTR 32[esp],edx
	and	ebp,		ecx
	lea	edx,		DWORD PTR 2400959708[ebx*1+edx]
	mov	ebx,		esi
	ror	esi,		1
	and	ebx,		eax
	or	ebp,		ebx
	mov	ebx,		edi
	rol	ebx,		5
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 36[esp]
	add	edx,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	ror	esi,		1
	xor	ebx,		ebp
	rol	ebx,		1
	mov	ebp,		edi
	mov	DWORD PTR 36[esp],ebx
	or	ebp,		esi
	lea	ebx,		DWORD PTR 2400959708[ecx*1+ebx]
	mov	ecx,		edi
	and	ebp,		eax
	and	ecx,		esi
	or	ebp,		ecx
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ebp,		ecx
	ror	edi,		1
	add	ebx,		ebp
	; 40_59 57
	; 40_59 58
	mov	ecx,		DWORD PTR 40[esp]
	mov	ebp,		DWORD PTR 48[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	or	ebp,		edi
	mov	DWORD PTR 40[esp],ecx
	and	ebp,		esi
	lea	ecx,		DWORD PTR 2400959708[eax*1+ecx]
	mov	eax,		edx
	ror	edx,		1
	and	eax,		edi
	or	ebp,		eax
	mov	eax,		ebx
	rol	eax,		5
	add	ebp,		eax
	mov	eax,		DWORD PTR 44[esp]
	add	ecx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	ror	edx,		1
	xor	eax,		ebp
	rol	eax,		1
	mov	ebp,		ebx
	mov	DWORD PTR 44[esp],eax
	or	ebp,		edx
	lea	eax,		DWORD PTR 2400959708[esi*1+eax]
	mov	esi,		ebx
	and	ebp,		edi
	and	esi,		edx
	or	ebp,		esi
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	ebp,		esi
	ror	ebx,		1
	add	eax,		ebp
	; 40_59 59
	; 20_39 60
	mov	esi,		DWORD PTR 48[esp]
	mov	ebp,		DWORD PTR 56[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 48[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 3395469782[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 61
	mov	edi,		DWORD PTR 52[esp]
	mov	ebp,		DWORD PTR 60[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 52[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 3395469782[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 62
	mov	edx,		DWORD PTR 56[esp]
	mov	ebp,		DWORD PTR [esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 56[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 3395469782[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 63
	mov	ebx,		DWORD PTR 60[esp]
	mov	ebp,		DWORD PTR 4[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 60[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 3395469782[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 64
	mov	ecx,		DWORD PTR [esp]
	mov	ebp,		DWORD PTR 8[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR [esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 3395469782[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 65
	mov	eax,		DWORD PTR 4[esp]
	mov	ebp,		DWORD PTR 12[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 4[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 3395469782[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 66
	mov	esi,		DWORD PTR 8[esp]
	mov	ebp,		DWORD PTR 16[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 8[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 3395469782[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 67
	mov	edi,		DWORD PTR 12[esp]
	mov	ebp,		DWORD PTR 20[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 12[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 3395469782[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 68
	mov	edx,		DWORD PTR 16[esp]
	mov	ebp,		DWORD PTR 24[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 16[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 3395469782[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 69
	mov	ebx,		DWORD PTR 20[esp]
	mov	ebp,		DWORD PTR 28[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 52[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 20[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 3395469782[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 70
	mov	ecx,		DWORD PTR 24[esp]
	mov	ebp,		DWORD PTR 32[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 56[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR 24[esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 3395469782[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 71
	mov	eax,		DWORD PTR 28[esp]
	mov	ebp,		DWORD PTR 36[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 60[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 28[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 3395469782[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 72
	mov	esi,		DWORD PTR 32[esp]
	mov	ebp,		DWORD PTR 40[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR [esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 32[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 3395469782[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 73
	mov	edi,		DWORD PTR 36[esp]
	mov	ebp,		DWORD PTR 44[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 4[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 36[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 3395469782[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	ror	eax,		1
	add	edx,		ebp
	ror	eax,		1
	add	edi,		edx
	; 20_39 74
	mov	edx,		DWORD PTR 40[esp]
	mov	ebp,		DWORD PTR 48[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 8[esp]
	xor	edx,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	edx,		ebp
	mov	ebp,		esi
	rol	edx,		1
	xor	ebp,		eax
	mov	DWORD PTR 40[esp],edx
	xor	ebp,		ecx
	lea	edx,		DWORD PTR 3395469782[ebx*1+edx]
	mov	ebx,		edi
	rol	ebx,		5
	ror	esi,		1
	add	ebx,		ebp
	ror	esi,		1
	add	edx,		ebx
	; 20_39 75
	mov	ebx,		DWORD PTR 44[esp]
	mov	ebp,		DWORD PTR 52[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 12[esp]
	xor	ebx,		ebp
	mov	ebp,		DWORD PTR 32[esp]
	xor	ebx,		ebp
	mov	ebp,		edi
	rol	ebx,		1
	xor	ebp,		esi
	mov	DWORD PTR 44[esp],ebx
	xor	ebp,		eax
	lea	ebx,		DWORD PTR 3395469782[ecx*1+ebx]
	mov	ecx,		edx
	rol	ecx,		5
	ror	edi,		1
	add	ecx,		ebp
	ror	edi,		1
	add	ebx,		ecx
	; 20_39 76
	mov	ecx,		DWORD PTR 48[esp]
	mov	ebp,		DWORD PTR 56[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 16[esp]
	xor	ecx,		ebp
	mov	ebp,		DWORD PTR 36[esp]
	xor	ecx,		ebp
	mov	ebp,		edx
	rol	ecx,		1
	xor	ebp,		edi
	mov	DWORD PTR 48[esp],ecx
	xor	ebp,		esi
	lea	ecx,		DWORD PTR 3395469782[eax*1+ecx]
	mov	eax,		ebx
	rol	eax,		5
	ror	edx,		1
	add	eax,		ebp
	ror	edx,		1
	add	ecx,		eax
	; 20_39 77
	mov	eax,		DWORD PTR 52[esp]
	mov	ebp,		DWORD PTR 60[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 20[esp]
	xor	eax,		ebp
	mov	ebp,		DWORD PTR 40[esp]
	xor	eax,		ebp
	mov	ebp,		ebx
	rol	eax,		1
	xor	ebp,		edx
	mov	DWORD PTR 52[esp],eax
	xor	ebp,		edi
	lea	eax,		DWORD PTR 3395469782[esi*1+eax]
	mov	esi,		ecx
	rol	esi,		5
	ror	ebx,		1
	add	esi,		ebp
	ror	ebx,		1
	add	eax,		esi
	; 20_39 78
	mov	esi,		DWORD PTR 56[esp]
	mov	ebp,		DWORD PTR [esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 24[esp]
	xor	esi,		ebp
	mov	ebp,		DWORD PTR 44[esp]
	xor	esi,		ebp
	mov	ebp,		ecx
	rol	esi,		1
	xor	ebp,		ebx
	mov	DWORD PTR 56[esp],esi
	xor	ebp,		edx
	lea	esi,		DWORD PTR 3395469782[edi*1+esi]
	mov	edi,		eax
	rol	edi,		5
	ror	ecx,		1
	add	edi,		ebp
	ror	ecx,		1
	add	esi,		edi
	; 20_39 79
	mov	edi,		DWORD PTR 60[esp]
	mov	ebp,		DWORD PTR 4[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 28[esp]
	xor	edi,		ebp
	mov	ebp,		DWORD PTR 48[esp]
	xor	edi,		ebp
	mov	ebp,		eax
	rol	edi,		1
	xor	ebp,		ecx
	mov	DWORD PTR 60[esp],edi
	xor	ebp,		ebx
	lea	edi,		DWORD PTR 3395469782[edx*1+edi]
	mov	edx,		esi
	rol	edx,		5
	add	edx,		ebp
	mov	ebp,		DWORD PTR 128[esp]
	ror	eax,		1
	add	edi,		edx
	ror	eax,		1
	; End processing
	; 
	mov	edx,		DWORD PTR 12[ebp]
	add	edx,		ecx
	mov	ecx,		DWORD PTR 4[ebp]
	add	ecx,		esi
	mov	esi,		eax
	mov	eax,		DWORD PTR [ebp]
	mov	DWORD PTR 12[ebp],edx
	add	eax,		edi
	mov	edi,		DWORD PTR 16[ebp]
	add	edi,		ebx
	mov	ebx,		DWORD PTR 8[ebp]
	add	ebx,		esi
	mov	DWORD PTR [ebp],eax
	mov	esi,		DWORD PTR 132[esp]
	mov	DWORD PTR 8[ebp],ebx
	add	esi,		64
	mov	eax,		DWORD PTR 68[esp]
	mov	DWORD PTR 16[ebp],edi
	cmp	esi,		eax
	mov	DWORD PTR 4[ebp],ecx
	jl	L000start
	add	esp,		108
	pop	edi
	pop	ebx
	pop	ebp
	pop	esi
	ret
_TEXT	SEGMENT
PUBLIC	_sha1_block_asm_host_order

_sha1_block_asm_host_order PROC NEAR
	mov	ecx,		DWORD PTR 12[esp]
	push	esi
	shl	ecx,		6
	mov	esi,		DWORD PTR 12[esp]
	push	ebp
	add	ecx,		esi
	push	ebx
	mov	ebp,		DWORD PTR 16[esp]
	push	edi
	mov	edx,		DWORD PTR 12[ebp]
	sub	esp,		108
	mov	edi,		DWORD PTR 16[ebp]
	mov	ebx,		DWORD PTR 8[ebp]
	mov	DWORD PTR 68[esp],ecx
	; First we need to setup the X array
	mov	eax,		DWORD PTR [esi]
	mov	ecx,		DWORD PTR 4[esi]
	mov	DWORD PTR [esp],eax
	mov	DWORD PTR 4[esp],ecx
	mov	eax,		DWORD PTR 8[esi]
	mov	ecx,		DWORD PTR 12[esi]
	mov	DWORD PTR 8[esp],eax
	mov	DWORD PTR 12[esp],ecx
	mov	eax,		DWORD PTR 16[esi]
	mov	ecx,		DWORD PTR 20[esi]
	mov	DWORD PTR 16[esp],eax
	mov	DWORD PTR 20[esp],ecx
	mov	eax,		DWORD PTR 24[esi]
	mov	ecx,		DWORD PTR 28[esi]
	mov	DWORD PTR 24[esp],eax
	mov	DWORD PTR 28[esp],ecx
	mov	eax,		DWORD PTR 32[esi]
	mov	ecx,		DWORD PTR 36[esi]
	mov	DWORD PTR 32[esp],eax
	mov	DWORD PTR 36[esp],ecx
	mov	eax,		DWORD PTR 40[esi]
	mov	ecx,		DWORD PTR 44[esi]
	mov	DWORD PTR 40[esp],eax
	mov	DWORD PTR 44[esp],ecx
	mov	eax,		DWORD PTR 48[esi]
	mov	ecx,		DWORD PTR 52[esi]
	mov	DWORD PTR 48[esp],eax
	mov	DWORD PTR 52[esp],ecx
	mov	eax,		DWORD PTR 56[esi]
	mov	ecx,		DWORD PTR 60[esi]
	mov	DWORD PTR 56[esp],eax
	mov	DWORD PTR 60[esp],ecx
	jmp	L001shortcut
_sha1_block_asm_host_order ENDP
_TEXT	ENDS
_sha1_block_asm_data_order ENDP
_TEXT	ENDS
END
@


1.1
log
@Initial revision
@
text
@d11 1
a11 1
PUBLIC	_sha1_block_x86
d13 2
a14 1
_sha1_block_x86 PROC NEAR
d16 2
d19 1
a19 4
	mov	eax,		DWORD PTR 20[esp]
	mov	esi,		DWORD PTR 16[esp]
	add	eax,		esi
	mov	ebp,		DWORD PTR 12[esp]
d21 1
a21 1
	sub	eax,		64
a22 2
	mov	ebx,		DWORD PTR 4[ebp]
	sub	esp,		72
d24 1
d26 2
a27 2
	mov	ecx,		DWORD PTR 8[ebp]
	mov	DWORD PTR 68[esp],eax
a28 1
	mov	eax,		DWORD PTR [esi]
d31 2
d34 1
d36 1
a36 3
	mov	eax,		DWORD PTR 4[esi]
	bswap	eax
	mov	DWORD PTR 4[esp],eax
d38 1
d40 1
d42 1
a42 3
	mov	eax,		DWORD PTR 12[esi]
	bswap	eax
	mov	DWORD PTR 12[esp],eax
d44 1
d46 1
d48 1
a48 3
	mov	eax,		DWORD PTR 20[esi]
	bswap	eax
	mov	DWORD PTR 20[esp],eax
d50 1
d52 1
d54 1
a54 3
	mov	eax,		DWORD PTR 28[esi]
	bswap	eax
	mov	DWORD PTR 28[esp],eax
d56 1
d58 1
d60 1
a60 3
	mov	eax,		DWORD PTR 36[esi]
	bswap	eax
	mov	DWORD PTR 36[esp],eax
d62 1
d64 1
d66 1
a66 3
	mov	eax,		DWORD PTR 44[esi]
	bswap	eax
	mov	DWORD PTR 44[esp],eax
d68 1
d70 1
d72 1
a72 3
	mov	eax,		DWORD PTR 52[esi]
	bswap	eax
	mov	DWORD PTR 52[esp],eax
d74 1
d76 1
d78 1
a78 3
	mov	eax,		DWORD PTR 60[esi]
	bswap	eax
	mov	DWORD PTR 60[esp],eax
d81 2
a82 1
	mov	DWORD PTR 64[esp],esi
d86 1
d88 1
a88 1
	mov	esi,		ecx
d92 1
a92 1
	and	esi,		ebx
d94 1
a94 1
	ror	ebx,		1
d96 1
a96 1
	ror	ebx,		1
d99 1
a99 1
	mov	edi,		ebx
d101 1
a101 1
	xor	edi,		ecx
d108 1
a108 1
	xor	edi,		ecx
d115 1
a115 1
	xor	edx,		ebx
d118 1
a118 1
	add	ebp,		ecx
d120 1
a120 1
	mov	ecx,		DWORD PTR 8[esp]
d122 3
a124 3
	xor	edx,		ebx
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	mov	ecx,		esi
d126 1
a126 1
	xor	ecx,		eax
d128 1
a128 1
	and	ecx,		edi
d130 2
a131 2
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 12[esp]
d133 1
a133 1
	xor	ecx,		eax
d135 2
a136 2
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	add	ecx,		ebp
d138 3
a140 3
	mov	ebx,		edi
	mov	ebp,		ecx
	xor	ebx,		esi
d142 1
a142 1
	and	ebx,		edx
d147 1
a147 1
	xor	ebx,		esi
d150 1
a150 1
	add	ebx,		ebp
d152 2
a153 2
	mov	ebp,		ebx
	and	eax,		ecx
d157 1
a157 1
	ror	ecx,		1
d159 1
a159 1
	ror	ecx,		1
d163 1
a163 1
	mov	esi,		ecx
d167 1
a167 1
	and	esi,		ebx
d169 1
a169 1
	ror	ebx,		1
d171 1
a171 1
	ror	ebx,		1
d174 1
a174 1
	mov	edi,		ebx
d176 1
a176 1
	xor	edi,		ecx
d183 1
a183 1
	xor	edi,		ecx
d190 1
a190 1
	xor	edx,		ebx
d193 1
a193 1
	add	ebp,		ecx
d195 1
a195 1
	mov	ecx,		DWORD PTR 32[esp]
d197 3
a199 3
	xor	edx,		ebx
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	mov	ecx,		esi
d201 1
a201 1
	xor	ecx,		eax
d203 1
a203 1
	and	ecx,		edi
d205 2
a206 2
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 36[esp]
d208 1
a208 1
	xor	ecx,		eax
d210 2
a211 2
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	add	ecx,		ebp
d213 3
a215 3
	mov	ebx,		edi
	mov	ebp,		ecx
	xor	ebx,		esi
d217 1
a217 1
	and	ebx,		edx
d222 1
a222 1
	xor	ebx,		esi
d225 1
a225 1
	add	ebx,		ebp
d227 2
a228 2
	mov	ebp,		ebx
	and	eax,		ecx
d232 1
a232 1
	ror	ecx,		1
d234 1
a234 1
	ror	ecx,		1
d238 1
a238 1
	mov	esi,		ecx
d242 1
a242 1
	and	esi,		ebx
d244 1
a244 1
	ror	ebx,		1
d246 1
a246 1
	ror	ebx,		1
d249 1
a249 1
	mov	edi,		ebx
d251 1
a251 1
	xor	edi,		ecx
d258 1
a258 1
	xor	edi,		ecx
d265 1
a265 1
	xor	edx,		ebx
d268 1
a268 1
	add	ebp,		ecx
d270 1
a270 1
	mov	ecx,		DWORD PTR 56[esp]
d272 3
a274 3
	xor	edx,		ebx
	lea	ebp,		DWORD PTR 1518500249[ecx*1+ebp]
	mov	ecx,		esi
d276 1
a276 1
	xor	ecx,		eax
d278 1
a278 1
	and	ecx,		edi
d280 2
a281 2
	add	ebp,		ebx
	mov	ebx,		DWORD PTR 60[esp]
d283 1
a283 1
	xor	ecx,		eax
d285 2
a286 2
	lea	ebp,		DWORD PTR 1518500249[ebx*1+ebp]
	add	ecx,		ebp
d290 2
a291 2
	mov	ebx,		DWORD PTR 8[esp]
	xor	ebx,		ebp
d293 1
a293 1
	xor	ebx,		ebp
d295 1
a295 1
	xor	ebx,		ebp
d297 1
a297 1
	rol	ebx,		1
d299 1
a299 1
	mov	DWORD PTR [esp],ebx
d301 1
a301 1
	lea	ebx,		DWORD PTR 1518500249[eax*1+ebx]
d303 2
a304 2
	mov	eax,		ecx
	add	ebx,		ebp
d307 1
a307 1
	add	ebx,		eax
d320 1
a320 1
	and	ebp,		ecx
d323 1
a323 1
	mov	esi,		ebx
d325 1
a325 1
	ror	ecx,		1
d327 1
a327 1
	ror	ecx,		1
d337 1
a337 1
	mov	ebp,		ecx
d341 1
a341 1
	and	ebp,		ebx
d347 1
a347 1
	ror	ebx,		1
d355 1
a355 1
	ror	ebx,		1
d358 2
a359 2
	mov	ebp,		ebx
	xor	ebp,		ecx
d363 1
a363 1
	xor	ebp,		ecx
d382 4
a385 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 1859775393[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d387 1
a387 1
	add	ecx,		ebp
d389 1
a389 1
	add	edx,		ecx
d391 1
a391 1
	mov	ecx,		DWORD PTR 20[esp]
d393 1
a393 1
	xor	ecx,		ebp
d395 1
a395 1
	xor	ecx,		ebp
d397 1
a397 1
	xor	ecx,		ebp
d399 1
a399 1
	rol	ecx,		1
d401 1
a401 1
	mov	DWORD PTR 20[esp],ecx
d403 3
a405 3
	lea	ecx,		DWORD PTR 1859775393[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d407 1
a407 1
	add	ebx,		ebp
d409 1
a409 1
	add	ecx,		ebx
d411 1
a411 1
	mov	ebx,		DWORD PTR 24[esp]
d413 1
a413 1
	xor	ebx,		ebp
d415 1
a415 1
	xor	ebx,		ebp
d417 1
a417 1
	xor	ebx,		ebp
d419 1
a419 1
	rol	ebx,		1
d421 1
a421 1
	mov	DWORD PTR 24[esp],ebx
d423 2
a424 2
	lea	ebx,		DWORD PTR 1859775393[eax*1+ebx]
	mov	eax,		ecx
d429 1
a429 1
	add	ebx,		eax
d438 1
a438 1
	mov	ebp,		ecx
d444 1
a444 1
	mov	esi,		ebx
d446 1
a446 1
	ror	ecx,		1
d448 1
a448 1
	ror	ecx,		1
d458 1
a458 1
	mov	ebp,		ebx
d460 1
a460 1
	xor	ebp,		ecx
d466 1
a466 1
	ror	ebx,		1
d468 1
a468 1
	ror	ebx,		1
d480 2
a482 2
	mov	DWORD PTR 36[esp],edi
	xor	ebp,		ecx
d502 4
a505 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 1859775393[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d507 1
a507 1
	add	ecx,		ebp
d509 1
a509 1
	add	edx,		ecx
d511 1
a511 1
	mov	ecx,		DWORD PTR 44[esp]
d513 1
a513 1
	xor	ecx,		ebp
d515 1
a515 1
	xor	ecx,		ebp
d517 1
a517 1
	xor	ecx,		ebp
d519 1
a519 1
	rol	ecx,		1
d521 1
a521 1
	mov	DWORD PTR 44[esp],ecx
d523 3
a525 3
	lea	ecx,		DWORD PTR 1859775393[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d527 1
a527 1
	add	ebx,		ebp
d529 1
a529 1
	add	ecx,		ebx
d531 1
a531 1
	mov	ebx,		DWORD PTR 48[esp]
d533 1
a533 1
	xor	ebx,		ebp
d535 1
a535 1
	xor	ebx,		ebp
d537 1
a537 1
	xor	ebx,		ebp
d539 1
a539 1
	rol	ebx,		1
d541 1
a541 1
	mov	DWORD PTR 48[esp],ebx
d543 2
a544 2
	lea	ebx,		DWORD PTR 1859775393[eax*1+ebx]
	mov	eax,		ecx
d549 1
a549 1
	add	ebx,		eax
d558 1
a558 1
	mov	ebp,		ecx
d564 1
a564 1
	mov	esi,		ebx
d566 1
a566 1
	ror	ecx,		1
d568 1
a568 1
	ror	ecx,		1
d578 1
a578 1
	mov	ebp,		ebx
d580 1
a580 1
	xor	ebp,		ecx
d586 1
a586 1
	ror	ebx,		1
d588 1
a588 1
	ror	ebx,		1
d600 2
a602 2
	mov	DWORD PTR 60[esp],edi
	xor	ebp,		ecx
d622 4
a625 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 1859775393[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d627 1
a627 1
	add	ecx,		ebp
d629 1
a629 1
	add	edx,		ecx
d631 1
a631 1
	mov	ecx,		DWORD PTR 4[esp]
d633 1
a633 1
	xor	ecx,		ebp
d635 1
a635 1
	xor	ecx,		ebp
d637 1
a637 1
	xor	ecx,		ebp
d639 1
a639 1
	rol	ecx,		1
d641 1
a641 1
	mov	DWORD PTR 4[esp],ecx
d643 3
a645 3
	lea	ecx,		DWORD PTR 1859775393[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d647 1
a647 1
	add	ebx,		ebp
d649 1
a649 1
	add	ecx,		ebx
d651 1
a651 1
	mov	ebx,		DWORD PTR 8[esp]
d653 1
a653 1
	xor	ebx,		ebp
d655 1
a655 1
	xor	ebx,		ebp
d657 1
a657 1
	xor	ebx,		ebp
d659 1
a659 1
	rol	ebx,		1
d661 1
a661 1
	mov	DWORD PTR 8[esp],ebx
d663 2
a664 2
	lea	ebx,		DWORD PTR 1859775393[eax*1+ebx]
	mov	eax,		ecx
d669 1
a669 1
	add	ebx,		eax
d678 1
a678 1
	mov	ebp,		ecx
d684 1
a684 1
	mov	esi,		ebx
d686 1
a686 1
	ror	ecx,		1
d688 1
a688 1
	ror	ecx,		1
d698 1
a698 1
	mov	ebp,		ebx
d700 1
a700 1
	xor	ebp,		ecx
d706 1
a706 1
	ror	ebx,		1
d708 1
a708 1
	ror	ebx,		1
d720 2
a722 2
	mov	DWORD PTR 20[esp],edi
	xor	ebp,		ecx
d742 4
a745 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 1859775393[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d747 1
a747 1
	add	ecx,		ebp
d749 1
a749 1
	add	edx,		ecx
d751 1
a751 1
	mov	ecx,		DWORD PTR 28[esp]
d753 1
a753 1
	xor	ecx,		ebp
d755 1
a755 1
	xor	ecx,		ebp
d757 1
a757 1
	xor	ecx,		ebp
d759 1
a759 1
	rol	ecx,		1
d761 1
a761 1
	mov	DWORD PTR 28[esp],ecx
d763 3
a765 3
	lea	ecx,		DWORD PTR 1859775393[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d767 1
a767 1
	add	ebx,		ebp
d769 1
a769 1
	add	ecx,		ebx
d771 1
a771 1
	mov	ebx,		DWORD PTR 32[esp]
d773 1
a773 1
	xor	ebx,		ebp
d775 1
a775 1
	xor	ebx,		ebp
d777 1
a777 1
	xor	ebx,		ebp
d779 1
a779 1
	rol	ebx,		1
d781 1
a781 1
	mov	DWORD PTR 32[esp],ebx
d783 1
a783 1
	lea	ebx,		DWORD PTR 2400959708[eax*1+ebx]
d788 1
a788 1
	mov	eax,		ecx
d792 1
a792 1
	add	ebx,		ebp
d801 1
a801 1
	mov	ebp,		ecx
d805 1
a805 1
	mov	esi,		ecx
d809 1
a809 1
	mov	esi,		ebx
d811 1
a811 1
	ror	ecx,		1
d813 1
a813 1
	ror	ecx,		1
d824 1
a824 1
	mov	ebp,		ebx
d826 1
a826 1
	or	ebp,		ecx
d830 3
a832 3
	mov	edi,		ebx
	ror	ebx,		1
	and	edi,		ecx
d844 1
a844 1
	ror	ebx,		1
d849 1
a849 1
	or	ebp,		ebx
d852 2
a853 2
	and	ebp,		ecx
	and	edx,		ebx
d874 3
a876 3
	and	ebp,		ebx
	lea	edx,		DWORD PTR 2400959708[ecx*1+edx]
	mov	ecx,		esi
d878 6
a883 6
	and	ecx,		eax
	or	ebp,		ecx
	mov	ecx,		edi
	rol	ecx,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 52[esp]
d886 1
a886 1
	xor	ecx,		ebp
d888 1
a888 1
	xor	ecx,		ebp
d891 2
a892 2
	xor	ecx,		ebp
	rol	ecx,		1
d894 1
a894 1
	mov	DWORD PTR 52[esp],ecx
d896 2
a897 2
	lea	ecx,		DWORD PTR 2400959708[ebx*1+ecx]
	mov	ebx,		edi
d899 4
a902 4
	and	ebx,		esi
	or	ebp,		ebx
	mov	ebx,		edx
	rol	ebx,		5
d904 1
a904 1
	add	ebp,		ebx
d906 1
a906 1
	add	ecx,		ebp
d909 1
a909 1
	mov	ebx,		DWORD PTR 56[esp]
d911 1
a911 1
	xor	ebx,		ebp
d913 1
a913 1
	xor	ebx,		ebp
d915 1
a915 1
	xor	ebx,		ebp
d917 1
a917 1
	rol	ebx,		1
d919 1
a919 1
	mov	DWORD PTR 56[esp],ebx
d921 1
a921 1
	lea	ebx,		DWORD PTR 2400959708[eax*1+ebx]
d926 1
a926 1
	mov	eax,		ecx
d930 1
a930 1
	add	ebx,		ebp
d939 1
a939 1
	mov	ebp,		ecx
d943 1
a943 1
	mov	esi,		ecx
d947 1
a947 1
	mov	esi,		ebx
d949 1
a949 1
	ror	ecx,		1
d951 1
a951 1
	ror	ecx,		1
d962 1
a962 1
	mov	ebp,		ebx
d964 1
a964 1
	or	ebp,		ecx
d968 3
a970 3
	mov	edi,		ebx
	ror	ebx,		1
	and	edi,		ecx
d982 1
a982 1
	ror	ebx,		1
d987 1
a987 1
	or	ebp,		ebx
d990 2
a991 2
	and	ebp,		ecx
	and	edx,		ebx
d1012 3
a1014 3
	and	ebp,		ebx
	lea	edx,		DWORD PTR 2400959708[ecx*1+edx]
	mov	ecx,		esi
d1016 6
a1021 6
	and	ecx,		eax
	or	ebp,		ecx
	mov	ecx,		edi
	rol	ecx,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 12[esp]
d1024 1
a1024 1
	xor	ecx,		ebp
d1026 1
a1026 1
	xor	ecx,		ebp
d1029 2
a1030 2
	xor	ecx,		ebp
	rol	ecx,		1
d1032 1
a1032 1
	mov	DWORD PTR 12[esp],ecx
d1034 2
a1035 2
	lea	ecx,		DWORD PTR 2400959708[ebx*1+ecx]
	mov	ebx,		edi
d1037 4
a1040 4
	and	ebx,		esi
	or	ebp,		ebx
	mov	ebx,		edx
	rol	ebx,		5
d1042 1
a1042 1
	add	ebp,		ebx
d1044 1
a1044 1
	add	ecx,		ebp
d1047 1
a1047 1
	mov	ebx,		DWORD PTR 16[esp]
d1049 1
a1049 1
	xor	ebx,		ebp
d1051 1
a1051 1
	xor	ebx,		ebp
d1053 1
a1053 1
	xor	ebx,		ebp
d1055 1
a1055 1
	rol	ebx,		1
d1057 1
a1057 1
	mov	DWORD PTR 16[esp],ebx
d1059 1
a1059 1
	lea	ebx,		DWORD PTR 2400959708[eax*1+ebx]
d1064 1
a1064 1
	mov	eax,		ecx
d1068 1
a1068 1
	add	ebx,		ebp
d1077 1
a1077 1
	mov	ebp,		ecx
d1081 1
a1081 1
	mov	esi,		ecx
d1085 1
a1085 1
	mov	esi,		ebx
d1087 1
a1087 1
	ror	ecx,		1
d1089 1
a1089 1
	ror	ecx,		1
d1100 1
a1100 1
	mov	ebp,		ebx
d1102 1
a1102 1
	or	ebp,		ecx
d1106 3
a1108 3
	mov	edi,		ebx
	ror	ebx,		1
	and	edi,		ecx
d1120 1
a1120 1
	ror	ebx,		1
d1125 1
a1125 1
	or	ebp,		ebx
d1128 2
a1129 2
	and	ebp,		ecx
	and	edx,		ebx
d1150 3
a1152 3
	and	ebp,		ebx
	lea	edx,		DWORD PTR 2400959708[ecx*1+edx]
	mov	ecx,		esi
d1154 6
a1159 6
	and	ecx,		eax
	or	ebp,		ecx
	mov	ecx,		edi
	rol	ecx,		5
	add	ebp,		ecx
	mov	ecx,		DWORD PTR 36[esp]
d1162 1
a1162 1
	xor	ecx,		ebp
d1164 1
a1164 1
	xor	ecx,		ebp
d1167 2
a1168 2
	xor	ecx,		ebp
	rol	ecx,		1
d1170 1
a1170 1
	mov	DWORD PTR 36[esp],ecx
d1172 2
a1173 2
	lea	ecx,		DWORD PTR 2400959708[ebx*1+ecx]
	mov	ebx,		edi
d1175 4
a1178 4
	and	ebx,		esi
	or	ebp,		ebx
	mov	ebx,		edx
	rol	ebx,		5
d1180 1
a1180 1
	add	ebp,		ebx
d1182 1
a1182 1
	add	ecx,		ebp
d1185 1
a1185 1
	mov	ebx,		DWORD PTR 40[esp]
d1187 1
a1187 1
	xor	ebx,		ebp
d1189 1
a1189 1
	xor	ebx,		ebp
d1191 1
a1191 1
	xor	ebx,		ebp
d1193 1
a1193 1
	rol	ebx,		1
d1195 1
a1195 1
	mov	DWORD PTR 40[esp],ebx
d1197 1
a1197 1
	lea	ebx,		DWORD PTR 2400959708[eax*1+ebx]
d1202 1
a1202 1
	mov	eax,		ecx
d1206 1
a1206 1
	add	ebx,		ebp
d1215 1
a1215 1
	mov	ebp,		ecx
d1219 1
a1219 1
	mov	esi,		ecx
d1223 1
a1223 1
	mov	esi,		ebx
d1225 1
a1225 1
	ror	ecx,		1
d1227 1
a1227 1
	ror	ecx,		1
d1238 1
a1238 1
	mov	ebp,		ebx
d1240 1
a1240 1
	xor	ebp,		ecx
d1246 1
a1246 1
	ror	ebx,		1
d1248 1
a1248 1
	ror	ebx,		1
d1260 2
a1262 2
	mov	DWORD PTR 52[esp],edi
	xor	ebp,		ecx
d1282 4
a1285 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 3395469782[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d1287 1
a1287 1
	add	ecx,		ebp
d1289 1
a1289 1
	add	edx,		ecx
d1291 1
a1291 1
	mov	ecx,		DWORD PTR 60[esp]
d1293 1
a1293 1
	xor	ecx,		ebp
d1295 1
a1295 1
	xor	ecx,		ebp
d1297 1
a1297 1
	xor	ecx,		ebp
d1299 1
a1299 1
	rol	ecx,		1
d1301 1
a1301 1
	mov	DWORD PTR 60[esp],ecx
d1303 3
a1305 3
	lea	ecx,		DWORD PTR 3395469782[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d1307 1
a1307 1
	add	ebx,		ebp
d1309 1
a1309 1
	add	ecx,		ebx
d1311 1
a1311 1
	mov	ebx,		DWORD PTR [esp]
d1313 1
a1313 1
	xor	ebx,		ebp
d1315 1
a1315 1
	xor	ebx,		ebp
d1317 1
a1317 1
	xor	ebx,		ebp
d1319 1
a1319 1
	rol	ebx,		1
d1321 1
a1321 1
	mov	DWORD PTR [esp],ebx
d1323 2
a1324 2
	lea	ebx,		DWORD PTR 3395469782[eax*1+ebx]
	mov	eax,		ecx
d1329 1
a1329 1
	add	ebx,		eax
d1338 1
a1338 1
	mov	ebp,		ecx
d1344 1
a1344 1
	mov	esi,		ebx
d1346 1
a1346 1
	ror	ecx,		1
d1348 1
a1348 1
	ror	ecx,		1
d1358 1
a1358 1
	mov	ebp,		ebx
d1360 1
a1360 1
	xor	ebp,		ecx
d1366 1
a1366 1
	ror	ebx,		1
d1368 1
a1368 1
	ror	ebx,		1
d1380 2
a1382 2
	mov	DWORD PTR 12[esp],edi
	xor	ebp,		ecx
d1402 4
a1405 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 3395469782[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d1407 1
a1407 1
	add	ecx,		ebp
d1409 1
a1409 1
	add	edx,		ecx
d1411 1
a1411 1
	mov	ecx,		DWORD PTR 20[esp]
d1413 1
a1413 1
	xor	ecx,		ebp
d1415 1
a1415 1
	xor	ecx,		ebp
d1417 1
a1417 1
	xor	ecx,		ebp
d1419 1
a1419 1
	rol	ecx,		1
d1421 1
a1421 1
	mov	DWORD PTR 20[esp],ecx
d1423 3
a1425 3
	lea	ecx,		DWORD PTR 3395469782[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d1427 1
a1427 1
	add	ebx,		ebp
d1429 1
a1429 1
	add	ecx,		ebx
d1431 1
a1431 1
	mov	ebx,		DWORD PTR 24[esp]
d1433 1
a1433 1
	xor	ebx,		ebp
d1435 1
a1435 1
	xor	ebx,		ebp
d1437 1
a1437 1
	xor	ebx,		ebp
d1439 1
a1439 1
	rol	ebx,		1
d1441 1
a1441 1
	mov	DWORD PTR 24[esp],ebx
d1443 2
a1444 2
	lea	ebx,		DWORD PTR 3395469782[eax*1+ebx]
	mov	eax,		ecx
d1449 1
a1449 1
	add	ebx,		eax
d1458 1
a1458 1
	mov	ebp,		ecx
d1464 1
a1464 1
	mov	esi,		ebx
d1466 1
a1466 1
	ror	ecx,		1
d1468 1
a1468 1
	ror	ecx,		1
d1478 1
a1478 1
	mov	ebp,		ebx
d1480 1
a1480 1
	xor	ebp,		ecx
d1486 1
a1486 1
	ror	ebx,		1
d1488 1
a1488 1
	ror	ebx,		1
d1500 2
a1502 2
	mov	DWORD PTR 36[esp],edi
	xor	ebp,		ecx
d1522 4
a1525 4
	xor	ebp,		ebx
	lea	edx,		DWORD PTR 3395469782[ecx*1+edx]
	mov	ecx,		edi
	rol	ecx,		5
d1527 1
a1527 1
	add	ecx,		ebp
d1529 1
a1529 1
	add	edx,		ecx
d1531 1
a1531 1
	mov	ecx,		DWORD PTR 44[esp]
d1533 1
a1533 1
	xor	ecx,		ebp
d1535 1
a1535 1
	xor	ecx,		ebp
d1537 1
a1537 1
	xor	ecx,		ebp
d1539 1
a1539 1
	rol	ecx,		1
d1541 1
a1541 1
	mov	DWORD PTR 44[esp],ecx
d1543 3
a1545 3
	lea	ecx,		DWORD PTR 3395469782[ebx*1+ecx]
	mov	ebx,		edx
	rol	ebx,		5
d1547 1
a1547 1
	add	ebx,		ebp
d1549 1
a1549 1
	add	ecx,		ebx
d1551 1
a1551 1
	mov	ebx,		DWORD PTR 48[esp]
d1553 1
a1553 1
	xor	ebx,		ebp
d1555 1
a1555 1
	xor	ebx,		ebp
d1557 1
a1557 1
	xor	ebx,		ebp
d1559 1
a1559 1
	rol	ebx,		1
d1561 1
a1561 1
	mov	DWORD PTR 48[esp],ebx
d1563 2
a1564 2
	lea	ebx,		DWORD PTR 3395469782[eax*1+ebx]
	mov	eax,		ecx
d1569 1
a1569 1
	add	ebx,		eax
d1578 1
a1578 1
	mov	ebp,		ecx
d1584 1
a1584 1
	mov	esi,		ebx
d1586 1
a1586 1
	ror	ecx,		1
d1588 1
a1588 1
	ror	ecx,		1
d1598 1
a1598 1
	mov	ebp,		ebx
d1600 1
a1600 1
	xor	ebp,		ecx
d1606 1
a1606 1
	ror	ebx,		1
d1608 1
a1608 1
	ror	ebx,		1
d1620 2
a1622 2
	mov	DWORD PTR 60[esp],edi
	xor	ebp,		ecx
d1627 1
a1627 1
	mov	ebp,		DWORD PTR 92[esp]
d1634 3
a1636 3
	add	edx,		ebx
	mov	ebx,		DWORD PTR 4[ebp]
	add	ebx,		esi
d1642 3
a1644 3
	add	edi,		ecx
	mov	ecx,		DWORD PTR 8[ebp]
	add	ecx,		esi
d1646 2
a1647 2
	mov	esi,		DWORD PTR 64[esp]
	mov	DWORD PTR 8[ebp],ecx
d1651 4
a1654 7
	cmp	eax,		esi
	mov	DWORD PTR 4[ebp],ebx
	jl	$L001end
	mov	eax,		DWORD PTR [esi]
	jmp	L000start
$L001end:
	add	esp,		72
d1660 55
a1714 1
_sha1_block_x86 ENDP
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@
