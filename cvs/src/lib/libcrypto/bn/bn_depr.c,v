head	1.7;
access;
symbols
	OPENBSD_6_2:1.7.0.6
	OPENBSD_6_2_BASE:1.7
	OPENBSD_6_1:1.7.0.4
	OPENBSD_6_1_BASE:1.7;
locks; strict;
comment	@ * @;


1.7
date	2014.10.18.17.20.40;	author jsing;	state Exp;
branches;
next	1.6;
commitid	8tb4v3IC8S2vzfHj;

1.6
date	2014.07.11.08.44.47;	author jsing;	state Exp;
branches;
next	1.5;
commitid	yQEL1wOWIearrW15;

1.5
date	2014.07.10.22.45.56;	author jsing;	state Exp;
branches;
next	1.4;
commitid	nzndm3zqPmFurSaK;

1.4
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	mJUVYpkFBZ0Zv2bG;

1.3
date	2014.05.15.11.25.59;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2014.05.08.13.20.49;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.06.12.15.41;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.06.12.15.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@None of these need to include <openssl/rand.h>
@
text
@/* $OpenBSD: bn_depr.c,v 1.6 2014/07/11 08:44:47 jsing Exp $ */
/* ====================================================================
 * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

/* Support for deprecated functions goes here - static linkage will only slurp
 * this code if applications are using them directly. */

#include <stdio.h>
#include <time.h>

#include <openssl/opensslconf.h>

#include "bn_lcl.h"

#ifndef OPENSSL_NO_DEPRECATED
BIGNUM *
BN_generate_prime(BIGNUM *ret, int bits, int safe, const BIGNUM *add,
    const BIGNUM *rem, void (*callback)(int, int, void *), void *cb_arg)
{
	BN_GENCB cb;
	BIGNUM *rnd = NULL;
	int found = 0;

	BN_GENCB_set_old(&cb, callback, cb_arg);

	if (ret == NULL) {
		if ((rnd = BN_new()) == NULL)
			goto err;
	} else
		rnd = ret;
	if (!BN_generate_prime_ex(rnd, bits, safe, add, rem, &cb))
		goto err;

	/* we have a prime :-) */
	found = 1;

err:
	if (!found && (ret == NULL) && (rnd != NULL))
		BN_free(rnd);
	return (found ? rnd : NULL);
}

int
BN_is_prime(const BIGNUM *a, int checks, void (*callback)(int, int, void *),
    BN_CTX *ctx_passed, void *cb_arg)
{
	BN_GENCB cb;

	BN_GENCB_set_old(&cb, callback, cb_arg);
	return BN_is_prime_ex(a, checks, ctx_passed, &cb);
}

int
BN_is_prime_fasttest(const BIGNUM *a, int checks,
    void (*callback)(int, int, void *), BN_CTX *ctx_passed, void *cb_arg,
    int do_trial_division)
{
	BN_GENCB cb;

	BN_GENCB_set_old(&cb, callback, cb_arg);
	return BN_is_prime_fasttest_ex(a, checks, ctx_passed,
	    do_trial_division, &cb);
}
#endif
@


1.6
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: bn_depr.c,v 1.5 2014/07/10 22:45:56 jsing Exp $ */
a62 2

#include <openssl/rand.h>
@


1.5
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: bn_depr.c,v 1.4 2014/06/12 15:49:28 deraadt Exp $ */
d64 2
a65 1
#include "cryptlib.h"
a66 1
#include <openssl/rand.h>
@


1.4
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d61 3
@


1.3
log
@Stop being a dummy... presumably these are left overs from pedantic mode
that were not wrapped with #if PEDANTIC.

ok miod@@
@
text
@d1 1
a1 1
/* crypto/bn/bn_depr.c */
@


1.2
log
@Emergency knfectomie requested by tedu@@.
@
text
@a64 2
static void *dummy = &dummy;

@


1.1
log
@Initial revision
@
text
@d10 1
a10 1
 *    notice, this list of conditions and the following disclaimer. 
d65 1
a65 1
static void *dummy=&dummy;
d68 4
a71 4
BIGNUM *BN_generate_prime(BIGNUM *ret, int bits, int safe,
	const BIGNUM *add, const BIGNUM *rem,
	void (*callback)(int,int,void *), void *cb_arg)
	{
d73 1
a73 1
	BIGNUM *rnd=NULL;
d78 6
a83 7
	if (ret == NULL)
		{
		if ((rnd=BN_new()) == NULL) goto err;
		}
	else
		rnd=ret;
	if(!BN_generate_prime_ex(rnd, bits, safe, add, rem, &cb))
d88 1
d90 9
a98 7
	if (!found && (ret == NULL) && (rnd != NULL)) BN_free(rnd);
	return(found ? rnd : NULL);
	}

int BN_is_prime(const BIGNUM *a, int checks, void (*callback)(int,int,void *),
	BN_CTX *ctx_passed, void *cb_arg)
	{
d100 1
d103 1
a103 1
	}
d105 5
a109 5
int BN_is_prime_fasttest(const BIGNUM *a, int checks,
		void (*callback)(int,int,void *),
		BN_CTX *ctx_passed, void *cb_arg,
		int do_trial_division)
	{
d111 1
d114 2
a115 2
				do_trial_division, &cb);
	}
@


1.1.1.1
log
@import of OpenSSL 0.9.8h
@
text
@@
