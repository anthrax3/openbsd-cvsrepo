head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.2
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15;
locks; strict;
comment	@ * @;


1.15
date	2015.06.24.10.05.14;	author jsing;	state Exp;
branches;
next	1.14;
commitid	oy8JMsoij3LTVOvb;

1.14
date	2014.10.16.03.19.02;	author beck;	state Exp;
branches;
next	1.13;
commitid	id4pE5GZpJTmZzW6;

1.13
date	2014.07.13.14.13.27;	author beck;	state Exp;
branches;
next	1.12;
commitid	rPjMIN89KFZYrTmB;

1.12
date	2014.07.13.10.27.22;	author beck;	state Exp;
branches;
next	1.11;
commitid	pubpykYnmNWn2j4W;

1.11
date	2014.06.24.19.37.58;	author miod;	state Exp;
branches;
next	1.10;
commitid	gcdL3V6Yguyd7T4r;

1.10
date	2014.06.14.10.28.31;	author avsm;	state Exp;
branches;
next	1.9;
commitid	Jd2WIxc60Phojmar;

1.9
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.8;
commitid	mJUVYpkFBZ0Zv2bG;

1.8
date	2014.04.17.13.58.24;	author jsing;	state Exp;
branches;
next	1.7;

1.7
date	2014.04.13.15.25.33;	author miod;	state Exp;
branches;
next	1.6;

1.6
date	2010.10.01.22.58.54;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.49;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.12.02.18.36;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.12;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.35.50;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.38;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.38;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.50.07;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.34.53;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.41;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2010.10.01.22.54.04;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2014.04.13.15.16.33;	author miod;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Put BUF_memdup() and BUF_reverse() under #ifndef LIBRESSL_INTERNAL.
@
text
@/* $OpenBSD: buffer.h,v 1.14 2014/10/16 03:19:02 beck Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#ifndef HEADER_BUFFER_H
#define HEADER_BUFFER_H
#if !defined(HAVE_ATTRIBUTE__BOUNDED__) && !defined(__OpenBSD__)
#define __bounded__(x, y, z)
#endif

#include <openssl/ossl_typ.h>

#ifdef  __cplusplus
extern "C" {
#endif

#include <stddef.h>
#include <sys/types.h>

/* Already declared in ossl_typ.h */
/* typedef struct buf_mem_st BUF_MEM; */

struct buf_mem_st {
	size_t length;	/* current number of bytes */
	char *data;
	size_t max;	/* size of buffer */
};

BUF_MEM *BUF_MEM_new(void);
void	BUF_MEM_free(BUF_MEM *a);
int	BUF_MEM_grow(BUF_MEM *str, size_t len);
int	BUF_MEM_grow_clean(BUF_MEM *str, size_t len);

#ifndef LIBRESSL_INTERNAL
char *	BUF_strdup(const char *str);
char *	BUF_strndup(const char *str, size_t siz);
void *	BUF_memdup(const void *data, size_t siz);
void	BUF_reverse(unsigned char *out, const unsigned char *in, size_t siz);

/* safe string functions */
size_t BUF_strlcpy(char *dst, const char *src, size_t siz)
	__attribute__ ((__bounded__(__string__,1,3)));
size_t BUF_strlcat(char *dst, const char *src, size_t siz)
	__attribute__ ((__bounded__(__string__,1,3)));
#endif

/* BEGIN ERROR CODES */
/* The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_BUF_strings(void);

/* Error codes for the BUF functions. */

/* Function codes. */
#define BUF_F_BUF_MEMDUP				 103
#define BUF_F_BUF_MEM_GROW				 100
#define BUF_F_BUF_MEM_GROW_CLEAN			 105
#define BUF_F_BUF_MEM_NEW				 101
#define BUF_F_BUF_STRDUP				 102
#define BUF_F_BUF_STRNDUP				 104

/* Reason codes. */

#ifdef  __cplusplus
}
#endif
#endif
@


1.14
log
@Get rid of the last remaining BUF_strdup and BUF_strlcpy and friends, use
intrinsic functions everywhere, and wrap these functions in an
#ifndef LIBRESSL_INTERNAL to make sure we don't bring their use back.
@
text
@d1 1
a1 1
/* $OpenBSD: buffer.h,v 1.13 2014/07/13 14:13:27 beck Exp $ */
d87 1
a90 1
#endif
a93 1
#ifndef LIBRESSL_INTERNAL
@


1.13
log
@unbreak build this needed to be an and..
ok jsing@@
@
text
@d1 1
a1 1
/* $OpenBSD: buffer.h,v 1.12 2014/07/13 10:27:22 beck Exp $ */
d87 1
d90 1
d94 1
d100 1
a100 1

@


1.12
log
@Take out __bounded__ in the include files we use it in when not on OpenBSD.
while we can take it out in portable at compile time, it is still a problem
when we install this header file on a system that doesn't support __bounded__
if this is unguarded.
ok miod@@ bcook@@
@
text
@d1 1
a1 1
/* $OpenBSD: buffer.h,v 1.11 2014/06/24 19:37:58 miod Exp $ */
d61 1
a61 1
#if !defined(HAVE_ATTRIBUTE__BOUNDED__) || !defined(__OpenBSD__)
@


1.11
log
@Unifdef -UNO_SYS_TYPES_H
@
text
@d1 1
a1 1
/* $OpenBSD: buffer.h,v 1.10 2014/06/14 10:28:31 avsm Exp $ */
d61 3
@


1.10
log
@Add more bounded attributes to the buffer and md5/sha headers in libssl

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: buffer.h,v 1.9 2014/06/12 15:49:28 deraadt Exp $ */
a68 2

#if !defined(NO_SYS_TYPES_H)
a69 1
#endif
@


1.9
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d93 4
a96 2
size_t BUF_strlcpy(char *dst, const char *src, size_t siz);
size_t BUF_strlcat(char *dst, const char *src, size_t siz);
@


1.8
log
@Initial KNF.
@
text
@d1 1
a1 1
/* crypto/buffer/buffer.h */
@


1.7
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@d8 1
a8 1
 * 
d15 1
a15 1
 * 
d22 1
a22 1
 * 
d37 1
a37 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d40 1
a40 1
 * 
d52 1
a52 1
 * 
d77 1
a77 2
struct buf_mem_st
	{
d81 1
a81 1
	};
d93 2
a94 2
size_t BUF_strlcpy(char *dst,const char *src,size_t siz);
size_t BUF_strlcat(char *dst,const char *src,size_t siz);
@


1.6
log
@resolve conflicts, fix local changes
@
text
@d91 1
a91 1
void	BUF_reverse(unsigned char *out, unsigned char *in, size_t siz);
@


1.5
log
@resolve conflicts
@
text
@d79 1
a79 1
	int length;	/* current number of bytes */
d81 1
a81 1
	int max;	/* size of buffer */
d86 2
a87 2
int	BUF_MEM_grow(BUF_MEM *str, int len);
int	BUF_MEM_grow_clean(BUF_MEM *str, int len);
d91 1
@


1.4
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d62 2
d69 2
d72 4
d77 1
a77 1
typedef struct buf_mem_st
d82 1
a82 1
	} BUF_MEM;
d89 2
d106 1
d108 1
d111 1
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d66 3
d79 1
d81 5
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@a77 2
void ERR_load_BUF_strings(void );

d82 1
a96 1

@


1.1
log
@Initial revision
@
text
@a72 1
#ifndef NOPROTO
d76 1
a76 1
char *	BUF_strdup(char *str);
d80 4
a83 8
#else

BUF_MEM *BUF_MEM_new();
void	BUF_MEM_free();
int	BUF_MEM_grow();
char *	BUF_strdup();

void ERR_load_BUF_strings();
a84 3
#endif

/* BEGIN ERROR CODES */
a90 1
#define BUF_F_PXYCLNT_READ				 103
d93 1
a93 1
 
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@d73 1
d77 14
a90 1
char *	BUF_strdup(const char *str);
a92 5
/* The following lines are auto generated by the script mkerr.pl. Any changes
 * made after this point may be overwritten when the script is next run.
 */
void ERR_load_BUF_strings(void);

d99 1
d102 1
a102 1

d107 1
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@a65 3
#include <stddef.h>
#include <sys/types.h>

a75 1
int	BUF_MEM_grow_clean(BUF_MEM *str, int len);
a76 5

/* safe string functions */
size_t BUF_strlcpy(char *dst,const char *src,size_t siz);
size_t BUF_strlcat(char *dst,const char *src,size_t siz);

@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@a61 2
#include <openssl/ossl_typ.h>

a66 2

#if !defined(NO_SYS_TYPES_H)
a67 4
#endif

/* Already declared in ossl_typ.h */
/* typedef struct buf_mem_st BUF_MEM; */
d69 1
a69 1
struct buf_mem_st
d74 1
a74 1
	};
a80 2
char *	BUF_strndup(const char *str, size_t siz);
void *	BUF_memdup(const void *data, size_t siz);
a95 1
#define BUF_F_BUF_MEMDUP				 103
a96 1
#define BUF_F_BUF_MEM_GROW_CLEAN			 105
a98 1
#define BUF_F_BUF_STRNDUP				 104
@


1.1.1.5
log
@import OpenSSL-1.0.0a
@
text
@d79 1
a79 1
	size_t length;	/* current number of bytes */
d81 1
a81 1
	size_t max;	/* size of buffer */
d86 2
a87 2
int	BUF_MEM_grow(BUF_MEM *str, size_t len);
int	BUF_MEM_grow_clean(BUF_MEM *str, size_t len);
a90 1
void	BUF_reverse(unsigned char *out, unsigned char *in, size_t siz);
@


1.1.1.6
log
@Import OpenSSL 1.0.1g
@
text
@d91 1
a91 1
void	BUF_reverse(unsigned char *out, const unsigned char *in, size_t siz);
@


