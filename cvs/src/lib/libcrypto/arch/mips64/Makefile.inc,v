head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@# @;


1.4
date	2014.12.07.15.45.44;	author miod;	state Exp;
branches;
next	1.3;
commitid	bF02WiD97ZYhGSX4;

1.3
date	2014.11.17.20.31.22;	author miod;	state Exp;
branches;
next	1.2;
commitid	ymruTYR6WPNRDFtT;

1.2
date	2014.05.02.21.55.31;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2014.05.01.20.15.06;	author miod;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Revert to the use of C code for the basic BN routines (bn_add_words,
bn_div_words, bn_mul_add_words, bn_mul_words, bn_sqr_words, bn_sub_words)
on sgi, because the generated assembly code isn't R4000-safe.
@
text
@# $OpenBSD: Makefile.inc,v 1.3 2014/11/17 20:31:22 miod Exp $

# mips64-specific libcrypto build rules

# aes
SRCS+= aes_cbc.c 
CFLAGS+= -DAES_ASM
SSLASM+= aes aes-mips aes-mips
# bf
SRCS+= bf_enc.c
# bn
.if ${MACHINE} == "sgi"	# because of R4000 support
SRCS+= bn_asm.c
.else
SSLASM+= bn mips bn-mips
CFLAGS+= -DBN_DIV3W
.endif
SSLASM+= bn mips-mont mips-mont
CFLAGS+= -DOPENSSL_BN_ASM_MONT
# camellia
SRCS+= camellia.c cmll_cbc.c cmll_misc.c
# des
SRCS+= des_enc.c fcrypt_b.c
# rc4
SRCS+= rc4_enc.c rc4_skey.c
## rc5
#SRCS+= rc5_enc.c 
# sha
SSLASM+= sha sha1-mips sha1-mips
CFLAGS+= -DSHA1_ASM
SSLASM+= sha sha512-mips sha256-mips
CFLAGS+= -DSHA256_ASM
SSLASM+= sha sha512-mips sha512-mips
CFLAGS+= -DSHA512_ASM
# whrlpool
SRCS+= wp_block.c

.for dir src dst in ${SSLASM}
SRCS+=	${dst}.S
GENERATED+=${dst}.S
${dst}.S: ${LCRYPTO_SRC}/${dir}/asm/${src}.pl
	/usr/bin/env CC=${CC} /usr/bin/perl \
		${LCRYPTO_SRC}/${dir}/asm/${src}.pl 64 ${.TARGET} > ${.TARGET}
.endfor
@


1.3
log
@Add the Cammelia cipher to libcrypto.

There used to be a strong reluctance to provide this cipher in LibreSSL in the
past, because the licence terms under which Cammelia was released by NTT were
free-but-not-in-the-corners, by restricting the right to modify the source
code, as well retaining the right to enforce their patents against anyone
in the future.

However, as stated in http://www.ntt.co.jp/news/news06e/0604/060413a.html ,
NTT changed its mind and made this code truly free. We only wish there had
been more visibility of this, for we could have had enabled Cammelia
earlier (-:

Licence change noticed by deraadt@@. General agreement from the usual LibreSSL
suspects.

Crank libcrypto.so minor version due to the added symbols.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2014/05/02 21:55:31 miod Exp $
d12 3
d16 2
d19 1
a19 1
CFLAGS+= -DOPENSSL_BN_ASM_MONT -DBN_DIV3W
@


1.2
log
@Correctly enable assembler Montgomery routine.
@
text
@d1 1
a1 1
# $OpenBSD$
d15 2
@


1.1
log
@Enable use of the assembly code for AES, BN, SHA1, SHA256 and SHA512.
@
text
@d14 1
@

