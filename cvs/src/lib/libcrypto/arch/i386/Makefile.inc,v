head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.4
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5;
locks; strict;
comment	@# @;


1.6
date	2017.08.20.17.53.13;	author espie;	state Exp;
branches;
next	1.5;
commitid	eMOjStbkZH7mlcSH;

1.5
date	2016.11.04.18.12.13;	author miod;	state Exp;
branches;
next	1.4;
commitid	LHsFcn31OIkRhjeO;

1.4
date	2014.11.17.20.31.22;	author miod;	state Exp;
branches;
next	1.3;
commitid	ymruTYR6WPNRDFtT;

1.3
date	2014.05.07.00.04.14;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2014.05.06.19.55.06;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2014.04.17.18.11.47;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@sprinkle a few missing dependencies on perl scripts internal bits.
'it works' deraadt@@
@
text
@# $OpenBSD: Makefile.inc,v 1.5 2016/11/04 18:12:13 miod Exp $

# i386-specific libcrypto build rules

# all i386 code generators use these
EXTRA_PL =  ${LCRYPTO_SRC}/perlasm/x86gas.pl ${LCRYPTO_SRC}/perlasm/x86asm.pl

# aes
CFLAGS+= -DAES_ASM
SSLASM+= aes aes-586
CFLAGS+= -DVPAES_ASM
SSLASM+= aes vpaes-x86
SSLASM+= aes aesni-x86
# bf
SRCS+= bf_cbc.c	
SSLASM+= bf bf-586
# bn
CFLAGS+= -DOPENSSL_IA32_SSE2
CFLAGS+= -DOPENSSL_BN_ASM_PART_WORDS
SSLASM+= bn bn-586
SSLASM+= bn co-586
CFLAGS+= -DOPENSSL_BN_ASM_MONT
SSLASM+= bn x86-mont
CFLAGS+= -DOPENSSL_BN_ASM_GF2m
SSLASM+= bn x86-gf2m
# camellia
SSLASM+= camellia cmll-x86
# des
SRCS+= fcrypt_b.c
SSLASM+= des des-586
# # ec
# CFLAGS+= -DECP_NISTZ256_ASM
# SRCS+=	ecp_nistz256.c
# SSLASM+= ec ecp_nistz256-x86
# md5
CFLAGS+= -DMD5_ASM
SSLASM+= md5 md5-586
# modes
CFLAGS+= -DGHASH_ASM
SSLASM+= modes ghash-x86
# rc4
SSLASM+= rc4 rc4-586
# ripemd
CFLAGS+= -DRMD160_ASM
SSLASM+= ripemd rmd-586
# sha
CFLAGS+= -DSHA1_ASM
SSLASM+= sha sha1-586
CFLAGS+= -DSHA256_ASM
SSLASM+= sha sha256-586
CFLAGS+= -DSHA512_ASM
SSLASM+= sha sha512-586
# whrlpool
SRCS+= wp_block.c
CFLAGS+= -DWHIRLPOOL_ASM
SSLASM+= whrlpool wp-mmx

.for dir f in ${SSLASM}
SRCS+=	${f}.S
GENERATED+=${f}.S
${f}.S: ${LCRYPTO_SRC}/${dir}/asm/${f}.pl ${EXTRA_PL}
	/usr/bin/perl -I${LCRYPTO_SRC}/perlasm -I${LCRYPTO_SRC}/${dir}/asm \
		${LCRYPTO_SRC}/${dir}/asm/${f}.pl \
		    openbsd-elf ${CFLAGS} 386 ${PICFLAG} > ${.TARGET}
.endfor

CFLAGS+= -DOPENSSL_CPUID_OBJ
SRCS+=	x86cpuid.S
GENERATED+=x86cpuid.S

x86cpuid.S: ${LCRYPTO_SRC}/x86cpuid.pl ${EXTRA_PL}
	/usr/bin/perl -I${LCRYPTO_SRC}/perlasm ${LCRYPTO_SRC}/x86cpuid.pl \
		openbsd-elf ${CFLAGS} 386 ${PICFLAG} > ${.TARGET}
@


1.5
log
@Ride the current major bump and enable assembler code for nist 256p curve,
on amd64 only for now. Stanzas to enable it on arm, i386 and sparc64 are
provided but commented out for lack of testing due to the machine room
being currently in storage.

ok jsing@@
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.4 2014/11/17 20:31:22 miod Exp $
d5 3
d61 1
a61 1
${f}.S: ${LCRYPTO_SRC}/${dir}/asm/${f}.pl ${LCRYPTO_SRC}/perlasm/x86gas.pl
d71 1
a71 1
x86cpuid.S: ${LCRYPTO_SRC}/x86cpuid.pl ${LCRYPTO_SRC}/perlasm/x86gas.pl
@


1.4
log
@Add the Cammelia cipher to libcrypto.

There used to be a strong reluctance to provide this cipher in LibreSSL in the
past, because the licence terms under which Cammelia was released by NTT were
free-but-not-in-the-corners, by restricting the right to modify the source
code, as well retaining the right to enforce their patents against anyone
in the future.

However, as stated in http://www.ntt.co.jp/news/news06e/0604/060413a.html ,
NTT changed its mind and made this code truly free. We only wish there had
been more visibility of this, for we could have had enabled Cammelia
earlier (-:

Licence change noticed by deraadt@@. General agreement from the usual LibreSSL
suspects.

Crank libcrypto.so minor version due to the added symbols.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.3 2014/05/07 00:04:14 deraadt Exp $
d28 4
@


1.3
log
@miod forgot about fcrypt_b.c being needed, before he went off to get his
beauty sleep.  He's probably having a nightmare about this right now....
ok tedu
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2014/05/06 19:55:06 miod Exp $
d23 2
@


1.2
log
@Sort CFLAGS, SRC and SSLASM stanzas by the directories they apply to, to make
these files similar in layout to the other md Makefile.inc; no functional
change.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1 2014/04/17 18:11:47 miod Exp $
d24 1
@


1.1
log
@Move the machine-specific parts of the libcrypto Makefile to per-arch makefile
fragments, to ease maintainance, and see through the fog of bugs.

"looks good" deraadt@@
@
text
@d1 1
a1 1
# $OpenBSD$
d5 7
a11 1
SRCS+= wp_block.c
d13 8
a20 1

d22 7
a28 6
CFLAGS+= -DOPENSSL_BN_ASM_MONT
CFLAGS+= -DOPENSSL_BN_ASM_PART_WORDS
CFLAGS+= -DOPENSSL_CPUID_OBJ
CFLAGS+= -DOPENSSL_IA32_SSE2

CFLAGS+= -DAES_ASM
d30 4
a33 1
CFLAGS+= -DMD5_ASM
d35 2
d38 1
d40 1
d42 3
a44 1
CFLAGS+= -DVPAES_ASM
d46 1
a46 20

SSLASM=\
	aes aes-586 \
	aes vpaes-x86 \
	aes aesni-x86 \
	bf bf-586 \
	bn bn-586 \
	bn co-586 \
	bn x86-mont \
	bn x86-gf2m \
	des crypt586 \
	des des-586 \
	md5 md5-586 \
	modes ghash-x86 \
	rc4 rc4-586 \
	ripemd rmd-586 \
	sha sha1-586 \
	sha sha256-586 \
	sha sha512-586 \
	whrlpool wp-mmx
d57 1
@

