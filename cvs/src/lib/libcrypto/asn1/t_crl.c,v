head	1.17;
access;
symbols
	OPENBSD_6_1:1.17.0.4
	OPENBSD_6_1_BASE:1.17;
locks; strict;
comment	@ * @;


1.17
date	2017.01.29.17.49.22;	author beck;	state Exp;
branches;
next	1.16;
commitid	kT0fLt3r4lroFJra;

1.16
date	2014.07.12.16.33.25;	author miod;	state Exp;
branches;
next	1.15;
commitid	BPN5iIqnHIOQQgBn;

1.15
date	2014.07.11.08.44.47;	author jsing;	state Exp;
branches;
next	1.14;
commitid	yQEL1wOWIearrW15;

1.14
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	mJUVYpkFBZ0Zv2bG;

1.13
date	2014.05.29.20.21.22;	author beck;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.18.13.14.31;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.18.00.58.49;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.18.00.10.08;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.17.13.37.48;	author beck;	state Exp;
branches;
next	1.8;

1.8
date	2012.10.13.21.25.12;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2011.11.03.02.34.32;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.09.12.15.27;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.48;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2003.05.12.02.18.35;	author markus;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.11;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.08.49;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.35.33;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.49.49;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.21.34.34;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.40;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.13.51;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2011.11.03.02.32.08;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2012.10.13.21.23.34;	author djm;	state Exp;
branches;
next	;


desc
@@


1.17
log
@Send the function codes from the error functions to the bit bucket,
as was done earlier in libssl. Thanks inoguchi@@ for noticing
libssl had more reacharounds into this.
ok jsing@@ inoguchi@@
@
text
@/* $OpenBSD: t_crl.c,v 1.16 2014/07/12 16:33:25 miod Exp $ */
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
 * project 1999.
 */
/* ====================================================================
 * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <stdio.h>

#include <openssl/bn.h>
#include <openssl/buffer.h>
#include <openssl/err.h>
#include <openssl/objects.h>
#include <openssl/x509.h>
#include <openssl/x509v3.h>

int
X509_CRL_print_fp(FILE *fp, X509_CRL *x)
{
	BIO *b;
	int ret;

	if ((b = BIO_new(BIO_s_file())) == NULL) {
		X509error(ERR_R_BUF_LIB);
		return (0);
	}
	BIO_set_fp(b, fp, BIO_NOCLOSE);
	ret = X509_CRL_print(b, x);
	BIO_free(b);
	return (ret);
}

int
X509_CRL_print(BIO *out, X509_CRL *x)
{
	STACK_OF(X509_REVOKED) *rev;
	X509_REVOKED *r;
	long l;
	int i;
	char *p;

	BIO_printf(out, "Certificate Revocation List (CRL):\n");
	l = X509_CRL_get_version(x);
	BIO_printf(out, "%8sVersion %lu (0x%lx)\n", "", l + 1, l);
	i = OBJ_obj2nid(x->sig_alg->algorithm);
	if (X509_signature_print(out, x->sig_alg, NULL) == 0)
		goto err;
	p = X509_NAME_oneline(X509_CRL_get_issuer(x), NULL, 0);
	if (p == NULL)
		goto err;
	BIO_printf(out, "%8sIssuer: %s\n", "", p);
	free(p);
	BIO_printf(out, "%8sLast Update: ", "");
	ASN1_TIME_print(out, X509_CRL_get_lastUpdate(x));
	BIO_printf(out, "\n%8sNext Update: ", "");
	if (X509_CRL_get_nextUpdate(x))
		ASN1_TIME_print(out, X509_CRL_get_nextUpdate(x));
	else
		BIO_printf(out, "NONE");
	BIO_printf(out, "\n");

	X509V3_extensions_print(out, "CRL extensions",
	    x->crl->extensions, 0, 8);

	rev = X509_CRL_get_REVOKED(x);

	if (sk_X509_REVOKED_num(rev) > 0)
		BIO_printf(out, "Revoked Certificates:\n");
	else
		BIO_printf(out, "No Revoked Certificates.\n");

	for (i = 0; i < sk_X509_REVOKED_num(rev); i++) {
		r = sk_X509_REVOKED_value(rev, i);
		BIO_printf(out, "    Serial Number: ");
		i2a_ASN1_INTEGER(out, r->serialNumber);
		BIO_printf(out, "\n        Revocation Date: ");
		ASN1_TIME_print(out, r->revocationDate);
		BIO_printf(out, "\n");
		X509V3_extensions_print(out, "CRL entry extensions",
		    r->extensions, 0, 8);
	}
	if (X509_signature_print(out, x->sig_alg, x->signature) == 0)
		goto err;

	return 1;

err:
	return 0;
}
@


1.16
log
@Make sure the return value of X509_NAME_oneline(, NULL,) is checked against
NULL.
ok deraadt@@ guenther@@ jsing@@
@
text
@d1 1
a1 1
/* $OpenBSD: t_crl.c,v 1.15 2014/07/11 08:44:47 jsing Exp $ */
d75 1
a75 1
		X509err(X509_F_X509_CRL_PRINT_FP, ERR_R_BUF_LIB);
@


1.15
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: t_crl.c,v 1.14 2014/06/12 15:49:27 deraadt Exp $ */
d97 2
a98 1
	X509_signature_print(out, x->sig_alg, NULL);
d100 2
d133 2
a134 1
	X509_signature_print(out, x->sig_alg, x->signature);
d138 2
@


1.14
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d60 2
a61 1
#include "cryptlib.h"
d63 1
a63 1
#include <openssl/bn.h>
@


1.13
log
@Everything sane has stdio, and FILE *. we don't need ifdefs for this.
ok to firebomb from tedu@@
@
text
@d1 1
a1 1
/* t_crl.c */
@


1.12
log
@More KNF.
@
text
@a66 1
#ifndef OPENSSL_NO_FP_API
a81 1
#endif
@


1.11
log
@lob a few more knf grenades in here to soften things up.
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d68 2
a69 1
int X509_CRL_print_fp(FILE *fp, X509_CRL *x)
d71 2
a72 2
        BIO *b;
        int ret;
d74 3
a76 3
        if ((b=BIO_new(BIO_s_file())) == NULL) {
		X509err(X509_F_X509_CRL_PRINT_FP,ERR_R_BUF_LIB);
                return(0);
d78 4
a81 4
        BIO_set_fp(b,fp,BIO_NOCLOSE);
        ret=X509_CRL_print(b, x);
        BIO_free(b);
        return(ret);
d85 2
a86 1
int X509_CRL_print(BIO *out, X509_CRL *x)
d96 1
a96 1
	BIO_printf(out, "%8sVersion %lu (0x%lx)\n", "", l+1, l);
d99 2
a100 2
	p=X509_NAME_oneline(X509_CRL_get_issuer(x),NULL,0);
	BIO_printf(out,"%8sIssuer: %s\n","",p);
d102 3
a104 3
	BIO_printf(out,"%8sLast Update: ","");
	ASN1_TIME_print(out,X509_CRL_get_lastUpdate(x));
	BIO_printf(out,"\n%8sNext Update: ","");
d106 4
a109 3
		 ASN1_TIME_print(out,X509_CRL_get_nextUpdate(x));
	else BIO_printf(out,"NONE");
	BIO_printf(out,"\n");
d112 1
a112 1
						x->crl->extensions, 0, 8);
d116 4
a119 3
	if(sk_X509_REVOKED_num(rev) > 0)
	    BIO_printf(out, "Revoked Certificates:\n");
	else BIO_printf(out, "No Revoked Certificates.\n");
d121 1
a121 1
	for(i = 0; i < sk_X509_REVOKED_num(rev); i++) {
d123 5
a127 5
		BIO_printf(out,"    Serial Number: ");
		i2a_ASN1_INTEGER(out,r->serialNumber);
		BIO_printf(out,"\n        Revocation Date: ");
		ASN1_TIME_print(out,r->revocationDate);
		BIO_printf(out,"\n");
d129 1
a129 1
						r->extensions, 0, 8);
@


1.10
log
@putting most of the braces in the right column is the very least we can do.
@
text
@d73 1
a73 2
        if ((b=BIO_new(BIO_s_file())) == NULL)
	{
@


1.9
log
@Change library to use intrinsic memory allocation functions instead of
OPENSSL_foo wrappers. This changes:
OPENSSL_malloc->malloc
OPENSSL_free->free
OPENSSL_relloc->realloc
OPENSSL_freeFunc->free
@
text
@d69 1
a69 1
        {
d74 1
a74 1
		{
d77 1
a77 1
		}
d82 1
a82 1
        }
@


1.8
log
@resolve conflicts
@
text
@d100 1
a100 1
	OPENSSL_free(p);
@


1.7
log
@openssl-1.0.0e: resolve conflicts
@
text
@d97 1
a97 2
	BIO_printf(out, "%8sSignature Algorithm: %s\n", "",
				 (i == NID_undef) ? "NONE" : OBJ_nid2ln(i));
@


1.6
log
@resolve conflicts
@
text
@d90 1
a90 1
	int i, n;
a109 1
	n=X509_CRL_get_ext_count(x);
@


1.5
log
@resolve conflicts
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (shenson@@bigfoot.com) for the OpenSSL
@


1.4
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d75 1
a75 1
		X509err(X509_F_X509_PRINT_FP,ERR_R_BUF_LIB);
d124 1
a124 1
		BIO_printf(out,"\n        Revocation Date: ","");
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@a86 1
	char buf[256];
d91 1
d99 3
a101 2
	X509_NAME_oneline(X509_CRL_get_issuer(x),buf,256);
	BIO_printf(out,"%8sIssuer: %s\n","",buf);
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d67 1
a67 2
static void ext_print(BIO *out, X509_EXTENSION *ex);
#ifndef NO_FP_API
a87 1
	unsigned char *s;
d91 1
a91 1
	int i, j, n;
d110 2
a111 5
	if (n > 0) {
		BIO_printf(out,"%8sCRL extensions:\n","");
		for (i=0; i<n; i++) ext_print(out, X509_CRL_get_ext(x, i));
	}

d115 1
a115 1
	if(sk_X509_REVOKED_num(rev))
d126 2
a127 14
		for(j = 0; j < X509_REVOKED_get_ext_count(r); j++)
				ext_print(out, X509_REVOKED_get_ext(r, j));
	}

	i=OBJ_obj2nid(x->sig_alg->algorithm);
	BIO_printf(out,"    Signature Algorithm: %s",
				(i == NID_undef)?"UNKNOWN":OBJ_nid2ln(i));

	s = x->signature->data;
	n = x->signature->length;
	for (i=0; i<n; i++, s++)
	{
		if ((i%18) == 0) BIO_write(out,"\n        ",9);
		BIO_printf(out,"%02x%s",*s, ((i+1) == n)?"":":");
d129 1
a129 1
	BIO_write(out,"\n",1);
a132 16
}

static void ext_print(BIO *out, X509_EXTENSION *ex)
{
	ASN1_OBJECT *obj;
	int j;
	BIO_printf(out,"%12s","");
	obj=X509_EXTENSION_get_object(ex);
	i2a_ASN1_OBJECT(out,obj);
	j=X509_EXTENSION_get_critical(ex);
	BIO_printf(out, ": %s\n", j ? "critical":"","");
	if(!X509V3_EXT_print(out, ex, 0, 16)) {
		BIO_printf(out, "%16s", "");
		M_ASN1_OCTET_STRING_print(out,ex->value);
	}
	BIO_write(out,"\n",1);
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d163 1
a163 1
		ASN1_OCTET_STRING_print(out,ex->value);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d67 2
a68 1
#ifndef OPENSSL_NO_FP_API
d89 1
d93 1
a93 1
	int i, n;
d112 5
a116 2
	X509V3_extensions_print(out, "CRL extensions",
						x->crl->extensions, 0, 8);
d120 1
a120 1
	if(sk_X509_REVOKED_num(rev) > 0)
d131 14
a144 2
		X509V3_extensions_print(out, "CRL entry extensions",
						r->extensions, 0, 8);
d146 1
a146 1
	X509_signature_print(out, x->sig_alg, x->signature);
d150 16
@


1.1.1.2
log
@import 0.9.7b (without idea and rc5)
@
text
@d87 1
a91 1
	char *p;
d99 2
a100 3
	p=X509_NAME_oneline(X509_CRL_get_issuer(x),NULL,0);
	BIO_printf(out,"%8sIssuer: %s\n","",p);
	OPENSSL_free(p);
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d75 1
a75 1
		X509err(X509_F_X509_CRL_PRINT_FP,ERR_R_BUF_LIB);
d124 1
a124 1
		BIO_printf(out,"\n        Revocation Date: ");
@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@d2 1
a2 1
/* Written by Dr Stephen N Henson (steve@@openssl.org) for the OpenSSL
@


1.1.1.5
log
@import OpenSSL 1.0.0e
@
text
@d90 1
a90 1
	int i;
d110 1
@


1.1.1.6
log
@import OpenSSL-1.0.1c
@
text
@d97 2
a98 1
	X509_signature_print(out, x->sig_alg, NULL);
@


