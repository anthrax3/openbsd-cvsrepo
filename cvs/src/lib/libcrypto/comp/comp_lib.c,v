head	1.8;
access;
symbols
	OPENBSD_6_1:1.8.0.2
	OPENBSD_6_1_BASE:1.8;
locks; strict;
comment	@ * @;


1.8
date	2014.11.03.16.58.28;	author tedu;	state Exp;
branches;
next	1.7;
commitid	n942paV9fz6n8jsn;

1.7
date	2014.06.12.15.49.28;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	mJUVYpkFBZ0Zv2bG;

1.6
date	2014.05.25.20.28.50;	author tedu;	state Exp;
branches;
next	1.5;

1.5
date	2014.04.26.13.04.24;	author jsing;	state Exp;
branches;
next	1.4;

1.4
date	2014.04.17.13.37.48;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2008.09.06.12.17.49;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.02.57.26;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.05.53.35;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.08;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2008.09.06.12.15.42;	author djm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@minor cleanup of zlib code. DSO is gone. ok jsing.
@
text
@/* $OpenBSD: comp_lib.c,v 1.7 2014/06/12 15:49:28 deraadt Exp $ */
#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <openssl/objects.h>
#include <openssl/comp.h>

COMP_CTX *
COMP_CTX_new(COMP_METHOD *meth)
{
	COMP_CTX *ret;

	if ((ret = calloc(1, sizeof(COMP_CTX))) == NULL) {
		return (NULL);
	}
	ret->meth = meth;
	if ((ret->meth->init != NULL) && !ret->meth->init(ret)) {
		free(ret);
		ret = NULL;
	}
	return (ret);
}

void
COMP_CTX_free(COMP_CTX *ctx)
{
	if (ctx == NULL)
		return;

	if (ctx->meth->finish != NULL)
		ctx->meth->finish(ctx);

	free(ctx);
}

int
COMP_compress_block(COMP_CTX *ctx, unsigned char *out, int olen,
    unsigned char *in, int ilen)
{
	int ret;

	if (ctx->meth->compress == NULL) {
		return (-1);
	}
	ret = ctx->meth->compress(ctx, out, olen, in, ilen);
	if (ret > 0) {
		ctx->compress_in += ilen;
		ctx->compress_out += ret;
	}
	return (ret);
}

int
COMP_expand_block(COMP_CTX *ctx, unsigned char *out, int olen,
    unsigned char *in, int ilen)
{
	int ret;

	if (ctx->meth->expand == NULL) {
		return (-1);
	}
	ret = ctx->meth->expand(ctx, out, olen, in, ilen);
	if (ret > 0) {
		ctx->expand_in += ilen;
		ctx->expand_out += ret;
	}
	return (ret);
}
@


1.7
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
a13 1
		/* ZZZZZZZZZZZZZZZZ */
a42 1
		/* ZZZZZZZZZZZZZZZZZ */
a59 1
		/* ZZZZZZZZZZZZZZZZZ */
@


1.6
log
@calloc instead of malloc/memset. from Benjamin Baier
@
text
@d1 1
@


1.5
log
@KNF.
@
text
@d12 1
a12 1
	if ((ret = (COMP_CTX *)malloc(sizeof(COMP_CTX))) == NULL) {
a15 1
	memset(ret, 0, sizeof(COMP_CTX));
@


1.4
log
@Change library to use intrinsic memory allocation functions instead of
OPENSSL_foo wrappers. This changes:
OPENSSL_malloc->malloc
OPENSSL_free->free
OPENSSL_relloc->realloc
OPENSSL_freeFunc->free
@
text
@d7 3
a9 2
COMP_CTX *COMP_CTX_new(COMP_METHOD *meth)
	{
d12 1
a12 2
	if ((ret=(COMP_CTX *)malloc(sizeof(COMP_CTX))) == NULL)
		{
d14 5
a18 6
		return(NULL);
		}
	memset(ret,0,sizeof(COMP_CTX));
	ret->meth=meth;
	if ((ret->meth->init != NULL) && !ret->meth->init(ret))
		{
d20 1
a20 3
		ret=NULL;
		}
	return(ret);
d22 2
d25 5
a29 4
void COMP_CTX_free(COMP_CTX *ctx)
	{
	if(ctx == NULL)
	    return;
d35 1
a35 1
	}
d37 4
a40 3
int COMP_compress_block(COMP_CTX *ctx, unsigned char *out, int olen,
	     unsigned char *in, int ilen)
	{
d42 2
a43 2
	if (ctx->meth->compress == NULL)
		{
d45 1
a45 9
		return(-1);
		}
	ret=ctx->meth->compress(ctx,out,olen,in,ilen);
	if (ret > 0)
		{
		ctx->compress_in+=ilen;
		ctx->compress_out+=ret;
		}
	return(ret);
d47 7
d55 4
a58 3
int COMP_expand_block(COMP_CTX *ctx, unsigned char *out, int olen,
	     unsigned char *in, int ilen)
	{
d61 1
a61 2
	if (ctx->meth->expand == NULL)
		{
d63 6
a68 9
		return(-1);
		}
	ret=ctx->meth->expand(ctx,out,olen,in,ilen);
	if (ret > 0)
		{
		ctx->expand_in+=ilen;
		ctx->expand_out+=ret;
		}
	return(ret);
d70 2
@


1.3
log
@resolve conflicts
@
text
@d11 1
a11 1
	if ((ret=(COMP_CTX *)OPENSSL_malloc(sizeof(COMP_CTX))) == NULL)
d20 1
a20 1
		OPENSSL_free(ret);
d34 1
a34 1
	OPENSSL_free(ctx);
@


1.2
log
@openssl-engine-0.9.6 merge
@
text
@a22 4
#if 0
	else
		CRYPTO_new_ex_data(rsa_meth,(char *)ret,&ret->ex_data);
#endif
a27 2
	/* CRYPTO_free_ex_data(rsa_meth,(char *)ctx,&ctx->ex_data); */

@


1.1
log
@new files for OpenSSL 0.9.4
@
text
@d11 1
a11 1
	if ((ret=(COMP_CTX *)Malloc(sizeof(COMP_CTX))) == NULL)
d20 1
a20 1
		Free(ret);
d40 1
a40 1
	Free(ctx);
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d11 1
a11 1
	if ((ret=(COMP_CTX *)OPENSSL_malloc(sizeof(COMP_CTX))) == NULL)
d20 1
a20 1
		OPENSSL_free(ret);
d40 1
a40 1
	OPENSSL_free(ctx);
@


1.1.1.2
log
@import of OpenSSL 0.9.8h
@
text
@d23 4
d32 2
@


