head	1.20;
access;
symbols
	OPENBSD_6_1:1.20.0.4
	OPENBSD_6_1_BASE:1.20;
locks; strict;
comment	@ * @;


1.20
date	2014.10.20.13.06.54;	author bcook;	state Exp;
branches;
next	1.19;
commitid	3Xsy3xjIIblEEksr;

1.19
date	2014.07.13.14.13.27;	author beck;	state Exp;
branches;
next	1.18;
commitid	rPjMIN89KFZYrTmB;

1.18
date	2014.07.13.10.27.22;	author beck;	state Exp;
branches;
next	1.17;
commitid	pubpykYnmNWn2j4W;

1.17
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.16;
commitid	nzndm3zqPmFurSaK;

1.16
date	2014.07.10.09.01.04;	author miod;	state Exp;
branches;
next	1.15;
commitid	TmEEhR59UbEp1DB6;

1.15
date	2014.06.14.10.28.31;	author avsm;	state Exp;
branches;
next	1.14;
commitid	Jd2WIxc60Phojmar;

1.14
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	mJUVYpkFBZ0Zv2bG;

1.13
date	2014.05.24.09.16.08;	author jsing;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.16.04.38.11;	author miod;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.15.20.06.10;	author tedu;	state Exp;
branches;
next	1.10;

1.10
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.9;

1.9
date	2010.10.01.22.58.56;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2008.09.06.12.17.51;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2005.04.29.05.39.23;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2003.05.12.02.18.37;	author markus;	state Exp;
branches;
next	1.4;

1.4
date	2002.05.15.02.29.15;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.03.19.11.10.40;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.36.22;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.49;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.49;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.50.33;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.35.26;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2005.04.29.05.37.11;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2009.01.09.12.13.57;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2012.10.13.21.23.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.20
log
@digests: *_LONG_LOG2 is not used, stop talking about it.

Modified patch from Dmitry Eremin-Solenikov

leave the sole public define in ripemd.h

ok deraadt@@ miod@@
@
text
@/* $OpenBSD: md5.h,v 1.19 2014/07/13 14:13:27 beck Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stddef.h>

#ifndef HEADER_MD5_H
#define HEADER_MD5_H
#if !defined(HAVE_ATTRIBUTE__BOUNDED__) && !defined(__OpenBSD__)
#define __bounded__(x, y, z)
#endif

#include <openssl/opensslconf.h>

#ifdef  __cplusplus
extern "C" {
#endif

#ifdef OPENSSL_NO_MD5
#error MD5 is disabled.
#endif

/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * ! MD5_LONG has to be at least 32 bits wide.                     !
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */

#define MD5_LONG unsigned int

#define MD5_CBLOCK	64
#define MD5_LBLOCK	(MD5_CBLOCK/4)
#define MD5_DIGEST_LENGTH 16

typedef struct MD5state_st
	{
	MD5_LONG A,B,C,D;
	MD5_LONG Nl,Nh;
	MD5_LONG data[MD5_LBLOCK];
	unsigned int num;
	} MD5_CTX;

int MD5_Init(MD5_CTX *c);
int MD5_Update(MD5_CTX *c, const void *data, size_t len)
	__attribute__ ((__bounded__(__buffer__,2,3)));
int MD5_Final(unsigned char *md, MD5_CTX *c);
unsigned char *MD5(const unsigned char *d, size_t n, unsigned char *md)
	__attribute__ ((__bounded__(__buffer__,1,2)));
void MD5_Transform(MD5_CTX *c, const unsigned char *b);
#ifdef  __cplusplus
}
#endif

#endif
@


1.19
log
@unbreak build this needed to be an and..
ok jsing@@
@
text
@d1 1
a1 1
/* $OpenBSD: md5.h,v 1.18 2014/07/13 10:27:22 beck Exp $ */
d79 1
a79 2
 * ! MD5_LONG has to be at least 32 bits wide. If it's wider, then !
 * ! MD5_LONG_LOG2 has to be defined along.			   !
@


1.18
log
@Take out __bounded__ in the include files we use it in when not on OpenBSD.
while we can take it out in portable at compile time, it is still a problem
when we install this header file on a system that doesn't support __bounded__
if this is unguarded.
ok miod@@ bcook@@
@
text
@d1 1
a1 1
/* $OpenBSD: md5.h,v 1.17 2014/07/10 22:45:57 jsing Exp $ */
d63 1
a63 1
#if !defined(HAVE_ATTRIBUTE__BOUNDED__) || !defined(__OpenBSD__)
@


1.17
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: md5.h,v 1.16 2014/07/10 09:01:04 miod Exp $ */
d63 3
@


1.16
log
@Remove bogus preprocessor statements trying to pick the largest integer
type for BF_LONG, MD[45]_LONG and SHA_LONG.

First, the preprocessor symbols they check for a 64-bit system is __ILP64__
which no sane system provides; second, on the platforms which have assembler
code to speed things up, the assembler code assumes a 32-bit type will be used.
@
text
@d1 1
a1 1
/* $OpenBSD: md5.h,v 1.15 2014/06/14 10:28:31 avsm Exp $ */
d59 2
a62 2

#include <stddef.h>
@


1.15
log
@Add more bounded attributes to the buffer and md5/sha headers in libssl

ok miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: md5.h,v 1.14 2014/06/12 15:49:29 deraadt Exp $ */
a80 6
#if defined(__LP32__)
#define MD5_LONG unsigned long
#elif defined(__ILP64__)
#define MD5_LONG unsigned long
#define MD5_LONG_LOG2 3
#else
a81 1
#endif
@


1.14
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d103 2
a104 1
int MD5_Update(MD5_CTX *c, const void *data, size_t len);
d106 2
a107 1
unsigned char *MD5(const unsigned char *d, size_t n, unsigned char *md);
@


1.13
log
@Almost nothing actually needs to include <openssl/e_os2.h>, however by
including it they get <openssl/opensslconf.h>. So instead of pulling in
<openssl/e_os2.h>, just pull in <openssl/opensslconf.h>.

"go ahead" miod@@
@
text
@d1 1
a1 1
/* crypto/md5/md5.h */
@


1.12
log
@Remove _CRAY references. Note that this pleads for the use of <stdint.h>
fixed-width types instead of choosing int or long depending upon what we
think the architecture support.
@
text
@a61 1
#include <openssl/e_os2.h>
d63 2
@


1.11
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d82 1
a82 1
#elif defined(OPENSSL_SYS_CRAY) || defined(__ILP64__)
a84 7
/*
 * _CRAY note. I could declare short, but I have no idea what impact
 * does it have on performance on none-T3E machines. I could declare
 * int, but at least on C90 sizeof(int) can be chosen at compile time.
 * So I've chosen long...
 *					<appro@@fy.chalmers.se>
 */
@


1.10
log
@resolve conflicts
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
@


1.9
log
@resolve conflicts, fix local changes
@
text
@d108 3
@


1.8
log
@resolve conflicts
@
text
@d80 1
a80 1
#if defined(OPENSSL_SYS_WIN16) || defined(__LP32__)
a107 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
@


1.7
log
@resolve conflicts
@
text
@d108 3
@


1.6
log
@resolve conflicts
@
text
@d63 1
d105 1
a105 1
	int num;
a107 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
d109 1
a109 1
int MD5_Update(MD5_CTX *c, const void *data, unsigned long len);
d111 1
a111 1
unsigned char *MD5(const unsigned char *d, unsigned long n, unsigned char *md);
@


1.5
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d107 3
@


1.4
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d62 2
d81 1
a81 1
#elif defined(OENSSL_SYS_CRAY) || defined(__ILP64__)
@


1.3
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d66 1
a66 1
#ifdef NO_MD5
d77 1
a77 1
#if defined(WIN16) || defined(__LP32__)
d79 1
a79 1
#elif defined(_CRAY) || defined(__ILP64__)
d105 3
a107 3
void MD5_Init(MD5_CTX *c);
void MD5_Update(MD5_CTX *c, const void *data, unsigned long len);
void MD5_Final(unsigned char *md, MD5_CTX *c);
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d106 1
a106 1
void MD5_Update(MD5_CTX *c, const unsigned char *data, unsigned long len);
d108 1
a108 1
unsigned char *MD5(unsigned char *d, unsigned long n, unsigned char *md);
@


1.1
log
@Initial revision
@
text
@d66 27
d94 1
a94 4
#define MD5_LBLOCK	16
#define MD5_BLOCK	16
#define MD5_LAST_BLOCK  56
#define MD5_LENGTH_BLOCK 8
d99 3
a101 3
	unsigned long A,B,C,D;
	unsigned long Nl,Nh;
	unsigned long data[MD5_LBLOCK];
a104 1
#ifndef NOPROTO
d106 1
a106 1
void MD5_Update(MD5_CTX *c, unsigned char *data, unsigned long len);
d109 1
a109 9
void MD5_Transform(MD5_CTX *c, unsigned char *b);
#else
void MD5_Init();
void MD5_Update();
void MD5_Final();
unsigned char *MD5();
void MD5_Transform();
#endif

@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@a65 27
#ifdef OPENSSL_NO_MD5
#error MD5 is disabled.
#endif

/*
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 * ! MD5_LONG has to be at least 32 bits wide. If it's wider, then !
 * ! MD5_LONG_LOG2 has to be defined along.			   !
 * !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
 */

#if defined(OPENSSL_SYS_WIN16) || defined(__LP32__)
#define MD5_LONG unsigned long
#elif defined(OENSSL_SYS_CRAY) || defined(__ILP64__)
#define MD5_LONG unsigned long
#define MD5_LONG_LOG2 3
/*
 * _CRAY note. I could declare short, but I have no idea what impact
 * does it have on performance on none-T3E machines. I could declare
 * int, but at least on C90 sizeof(int) can be chosen at compile time.
 * So I've chosen long...
 *					<appro@@fy.chalmers.se>
 */
#else
#define MD5_LONG unsigned int
#endif

d67 4
a70 1
#define MD5_LBLOCK	(MD5_CBLOCK/4)
d75 3
a77 3
	MD5_LONG A,B,C,D;
	MD5_LONG Nl,Nh;
	MD5_LONG data[MD5_LBLOCK];
d81 14
a94 5
int MD5_Init(MD5_CTX *c);
int MD5_Update(MD5_CTX *c, const void *data, unsigned long len);
int MD5_Final(unsigned char *md, MD5_CTX *c);
unsigned char *MD5(const unsigned char *d, unsigned long n, unsigned char *md);
void MD5_Transform(MD5_CTX *c, const unsigned char *b);
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@a61 2
#include <openssl/e_os2.h>

d79 1
a79 1
#elif defined(OPENSSL_SYS_CRAY) || defined(__ILP64__)
@


1.1.1.4
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a106 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
@


1.1.1.5
log
@import of OpenSSL 0.9.8h
@
text
@a62 1
#include <stddef.h>
d104 1
a104 1
	unsigned int num;
d107 3
d111 1
a111 1
int MD5_Update(MD5_CTX *c, const void *data, size_t len);
d113 1
a113 1
unsigned char *MD5(const unsigned char *d, size_t n, unsigned char *md);
@


1.1.1.6
log
@import openssl-0.9.8j
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
@


1.1.1.7
log
@import OpenSSL-1.0.0a
@
text
@d80 1
a80 1
#if defined(__LP32__)
d108 3
@


1.1.1.8
log
@import OpenSSL-1.0.1c
@
text
@a107 3
#ifdef OPENSSL_FIPS
int private_MD5_Init(MD5_CTX *c);
#endif
@


