head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.2
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.15.0.4
	OPENBSD_6_1_BASE:1.15;
locks; strict;
comment	@ * @;


1.15
date	2017.01.29.17.49.23;	author beck;	state Exp;
branches;
next	1.14;
commitid	kT0fLt3r4lroFJra;

1.14
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.13;
commitid	nzndm3zqPmFurSaK;

1.13
date	2014.06.12.15.49.30;	author deraadt;	state Exp;
branches;
next	1.12;
commitid	mJUVYpkFBZ0Zv2bG;

1.12
date	2014.05.24.15.25.46;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2014.05.24.15.25.23;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.13.15.25.33;	author miod;	state Exp;
branches;
next	1.9;

1.9
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.8;

1.8
date	2010.10.01.22.58.56;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2008.09.06.12.17.51;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2006.06.27.05.07.02;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.05.39.25;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.16;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.04.15.06.18.42;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.03.19.11.11.15;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.48;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.14;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.06.27.05.05.35;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.46;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2009.01.09.12.13.59;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2010.10.01.22.54.09;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2012.10.13.21.23.42;	author djm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2014.04.13.15.16.34;	author miod;	state Exp;
branches;
next	;


desc
@@


1.15
log
@Send the function codes from the error functions to the bit bucket,
as was done earlier in libssl. Thanks inoguchi@@ for noticing
libssl had more reacharounds into this.
ok jsing@@ inoguchi@@
@
text
@/* $OpenBSD: rand_err.c,v 1.14 2014/07/10 22:45:57 jsing Exp $ */
/* ====================================================================
 * Copyright (c) 1999-2011 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

/* NOTE: this file was auto generated by the mkerr.pl script: any changes
 * made to it will be overwritten when the script next updates this file,
 * only reason strings will be preserved.
 */

#include <stdio.h>

#include <openssl/opensslconf.h>

#include <openssl/err.h>
#include <openssl/rand.h>

/* BEGIN ERROR CODES */
#ifndef OPENSSL_NO_ERR

#define ERR_FUNC(func) ERR_PACK(ERR_LIB_RAND,func,0)
#define ERR_REASON(reason) ERR_PACK(ERR_LIB_RAND,0,reason)

static ERR_STRING_DATA RAND_str_functs[] = {
	{ERR_FUNC(0xfff), "CRYPTO_internal"},
	{0, NULL}
};

static ERR_STRING_DATA RAND_str_reasons[] = {
	{ERR_REASON(RAND_R_DUAL_EC_DRBG_DISABLED), "dual ec drbg disabled"},
	{ERR_REASON(RAND_R_ERROR_INITIALISING_DRBG), "error initialising drbg"},
	{ERR_REASON(RAND_R_ERROR_INSTANTIATING_DRBG), "error instantiating drbg"},
	{ERR_REASON(RAND_R_NO_FIPS_RANDOM_METHOD_SET), "no fips random method set"},
	{ERR_REASON(RAND_R_PRNG_NOT_SEEDED)      , "PRNG not seeded"},
	{0, NULL}
};

#endif

void
ERR_load_RAND_strings(void)
{
#ifndef OPENSSL_NO_ERR
	if (ERR_func_error_string(RAND_str_functs[0].error) == NULL) {
		ERR_load_strings(0, RAND_str_functs);
		ERR_load_strings(0, RAND_str_reasons);
	}
#endif
}
@


1.14
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: rand_err.c,v 1.13 2014/06/12 15:49:30 deraadt Exp $ */
d75 1
a75 3
	{ERR_FUNC(RAND_F_RAND_GET_RAND_METHOD),	"RAND_get_rand_method"},
	{ERR_FUNC(RAND_F_RAND_INIT_FIPS),	"RAND_init_fips"},
	{ERR_FUNC(RAND_F_SSLEAY_RAND_BYTES),	"SSLEAY_RAND_BYTES"},
@


1.13
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d62 3
@


1.12
log
@More KNF.
@
text
@d1 1
a1 1
/* crypto/rand/rand_err.c */
@


1.11
log
@KNF.
@
text
@d71 1
a71 1
static ERR_STRING_DATA RAND_str_functs[]= {
d78 1
a78 1
static ERR_STRING_DATA RAND_str_reasons[]= {
@


1.10
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@d10 1
a10 1
 *    notice, this list of conditions and the following disclaimer. 
d71 15
a85 17
static ERR_STRING_DATA RAND_str_functs[]=
	{
{ERR_FUNC(RAND_F_RAND_GET_RAND_METHOD),	"RAND_get_rand_method"},
{ERR_FUNC(RAND_F_RAND_INIT_FIPS),	"RAND_init_fips"},
{ERR_FUNC(RAND_F_SSLEAY_RAND_BYTES),	"SSLEAY_RAND_BYTES"},
{0,NULL}
	};

static ERR_STRING_DATA RAND_str_reasons[]=
	{
{ERR_REASON(RAND_R_DUAL_EC_DRBG_DISABLED),"dual ec drbg disabled"},
{ERR_REASON(RAND_R_ERROR_INITIALISING_DRBG),"error initialising drbg"},
{ERR_REASON(RAND_R_ERROR_INSTANTIATING_DRBG),"error instantiating drbg"},
{ERR_REASON(RAND_R_NO_FIPS_RANDOM_METHOD_SET),"no fips random method set"},
{ERR_REASON(RAND_R_PRNG_NOT_SEEDED)      ,"PRNG not seeded"},
{0,NULL}
	};
d89 3
a91 2
void ERR_load_RAND_strings(void)
	{
d93 4
a96 6

	if (ERR_func_error_string(RAND_str_functs[0].error) == NULL)
		{
		ERR_load_strings(0,RAND_str_functs);
		ERR_load_strings(0,RAND_str_reasons);
		}
d98 1
a98 1
	}
@


1.9
log
@resolve conflicts
@
text
@d81 1
@


1.8
log
@resolve conflicts, fix local changes
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2006 The OpenSSL Project.  All rights reserved.
d74 1
d81 3
@


1.7
log
@resolve conflicts
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2007 The OpenSSL Project.  All rights reserved.
a72 8
{ERR_FUNC(RAND_F_ENG_RAND_GET_RAND_METHOD),	"ENG_RAND_GET_RAND_METHOD"},
{ERR_FUNC(RAND_F_FIPS_RAND),	"FIPS_RAND"},
{ERR_FUNC(RAND_F_FIPS_RAND_BYTES),	"FIPS_RAND_BYTES"},
{ERR_FUNC(RAND_F_FIPS_RAND_GET_RAND_METHOD),	"FIPS_RAND_GET_RAND_METHOD"},
{ERR_FUNC(RAND_F_FIPS_RAND_SET_DT),	"FIPS_RAND_SET_DT"},
{ERR_FUNC(RAND_F_FIPS_SET_DT),	"FIPS_SET_DT"},
{ERR_FUNC(RAND_F_FIPS_SET_PRNG_SEED),	"FIPS_SET_PRNG_SEED"},
{ERR_FUNC(RAND_F_FIPS_SET_TEST_MODE),	"FIPS_SET_TEST_MODE"},
a79 8
{ERR_REASON(RAND_R_NON_FIPS_METHOD)      ,"non fips method"},
{ERR_REASON(RAND_R_NOT_IN_TEST_MODE)     ,"not in test mode"},
{ERR_REASON(RAND_R_NO_KEY_SET)           ,"no key set"},
{ERR_REASON(RAND_R_PRNG_ASKING_FOR_TOO_MUCH),"prng asking for too much"},
{ERR_REASON(RAND_R_PRNG_ERROR)           ,"prng error"},
{ERR_REASON(RAND_R_PRNG_KEYED)           ,"prng keyed"},
{ERR_REASON(RAND_R_PRNG_NOT_REKEYED)     ,"prng not rekeyed"},
{ERR_REASON(RAND_R_PRNG_NOT_RESEEDED)    ,"prng not reseeded"},
a80 2
{ERR_REASON(RAND_R_PRNG_SEED_MUST_NOT_MATCH_KEY),"prng seed must not match key"},
{ERR_REASON(RAND_R_PRNG_STUCK)           ,"prng stuck"},
@


1.6
log
@resolve conflicts
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved.
d73 8
d88 8
d97 2
@


1.5
log
@resolve conflicts
@
text
@a72 1
{ERR_FUNC(RAND_F_FIPS_RAND_BYTES),	"FIPS_RAND_BYTES"},
a79 4
{ERR_REASON(RAND_R_NON_FIPS_METHOD)      ,"non fips method"},
{ERR_REASON(RAND_R_PRNG_ASKING_FOR_TOO_MUCH),"prng asking for too much"},
{ERR_REASON(RAND_R_PRNG_NOT_REKEYED)     ,"prng not rekeyed"},
{ERR_REASON(RAND_R_PRNG_NOT_RESEEDED)    ,"prng not reseeded"},
a80 1
{ERR_REASON(RAND_R_PRNG_STUCK)           ,"prng stuck"},
d88 1
a88 1
	static int init=1;
d90 1
a90 1
	if (init)
a91 2
		init=0;
#ifndef OPENSSL_NO_ERR
d94 1
a95 2

		}
@


1.4
log
@resolve conflicts
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2003 The OpenSSL Project.  All rights reserved.
d67 4
d73 3
a75 3
{ERR_PACK(0,RAND_F_FIPS_RAND_BYTES,0),	"FIPS_RAND_BYTES"},
{ERR_PACK(0,RAND_F_RAND_GET_RAND_METHOD,0),	"RAND_get_rand_method"},
{ERR_PACK(0,RAND_F_SSLEAY_RAND_BYTES,0),	"SSLEAY_RAND_BYTES"},
d81 6
a86 6
{RAND_R_NON_FIPS_METHOD                  ,"non fips method"},
{RAND_R_PRNG_ASKING_FOR_TOO_MUCH         ,"prng asking for too much"},
{RAND_R_PRNG_NOT_REKEYED                 ,"prng not rekeyed"},
{RAND_R_PRNG_NOT_RESEEDED                ,"prng not reseeded"},
{RAND_R_PRNG_NOT_SEEDED                  ,"PRNG not seeded"},
{RAND_R_PRNG_STUCK                       ,"prng stuck"},
d100 2
a101 2
		ERR_load_strings(ERR_LIB_RAND,RAND_str_functs);
		ERR_load_strings(ERR_LIB_RAND,RAND_str_reasons);
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d3 1
a3 1
 * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
d69 1
d77 4
d82 1
@


1.2
log
@OpenSSL 0.9.5a merge
@
text
@d66 1
a66 1
#ifndef NO_ERR
d69 1
d89 1
a89 1
#ifndef NO_ERR
@


1.1
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d57 2
a58 1
 * made to it will be overwritten when the script next updates this file.
d75 1
a75 1
{RAND_R_PRNG_NOT_SEEDED                  ,"prng not seeded"},
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d57 1
a57 2
 * made to it will be overwritten when the script next updates this file,
 * only reason strings will be preserved.
d65 1
a65 1
#ifndef OPENSSL_NO_ERR
a67 1
{ERR_PACK(0,RAND_F_RAND_GET_RAND_METHOD,0),	"RAND_get_rand_method"},
d74 1
a74 1
{RAND_R_PRNG_NOT_SEEDED                  ,"PRNG not seeded"},
d87 1
a87 1
#ifndef OPENSSL_NO_ERR
@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2003 The OpenSSL Project.  All rights reserved.
a68 1
{ERR_PACK(0,RAND_F_FIPS_RAND_BYTES,0),	"FIPS_RAND_BYTES"},
a75 4
{RAND_R_NON_FIPS_METHOD                  ,"non fips method"},
{RAND_R_PRNG_ASKING_FOR_TOO_MUCH         ,"prng asking for too much"},
{RAND_R_PRNG_NOT_REKEYED                 ,"prng not rekeyed"},
{RAND_R_PRNG_NOT_RESEEDED                ,"prng not reseeded"},
a76 1
{RAND_R_PRNG_STUCK                       ,"prng stuck"},
@


1.1.1.3
log
@import of openssl-0.9.7j
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved.
a66 4

#define ERR_FUNC(func) ERR_PACK(ERR_LIB_RAND,func,0)
#define ERR_REASON(reason) ERR_PACK(ERR_LIB_RAND,0,reason)

d69 3
a71 3
{ERR_FUNC(RAND_F_FIPS_RAND_BYTES),	"FIPS_RAND_BYTES"},
{ERR_FUNC(RAND_F_RAND_GET_RAND_METHOD),	"RAND_get_rand_method"},
{ERR_FUNC(RAND_F_SSLEAY_RAND_BYTES),	"SSLEAY_RAND_BYTES"},
d77 6
a82 6
{ERR_REASON(RAND_R_NON_FIPS_METHOD)      ,"non fips method"},
{ERR_REASON(RAND_R_PRNG_ASKING_FOR_TOO_MUCH),"prng asking for too much"},
{ERR_REASON(RAND_R_PRNG_NOT_REKEYED)     ,"prng not rekeyed"},
{ERR_REASON(RAND_R_PRNG_NOT_RESEEDED)    ,"prng not reseeded"},
{ERR_REASON(RAND_R_PRNG_NOT_SEEDED)      ,"PRNG not seeded"},
{ERR_REASON(RAND_R_PRNG_STUCK)           ,"prng stuck"},
d96 2
a97 2
		ERR_load_strings(0,RAND_str_functs);
		ERR_load_strings(0,RAND_str_reasons);
@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@d73 1
d81 4
d86 1
d94 1
a94 1
#ifndef OPENSSL_NO_ERR
d96 1
a96 1
	if (ERR_func_error_string(RAND_str_functs[0].error) == NULL)
d98 2
d102 2
a104 1
#endif
@


1.1.1.5
log
@import openssl-0.9.8j
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2007 The OpenSSL Project.  All rights reserved.
a72 8
{ERR_FUNC(RAND_F_ENG_RAND_GET_RAND_METHOD),	"ENG_RAND_GET_RAND_METHOD"},
{ERR_FUNC(RAND_F_FIPS_RAND),	"FIPS_RAND"},
{ERR_FUNC(RAND_F_FIPS_RAND_BYTES),	"FIPS_RAND_BYTES"},
{ERR_FUNC(RAND_F_FIPS_RAND_GET_RAND_METHOD),	"FIPS_RAND_GET_RAND_METHOD"},
{ERR_FUNC(RAND_F_FIPS_RAND_SET_DT),	"FIPS_RAND_SET_DT"},
{ERR_FUNC(RAND_F_FIPS_SET_DT),	"FIPS_SET_DT"},
{ERR_FUNC(RAND_F_FIPS_SET_PRNG_SEED),	"FIPS_SET_PRNG_SEED"},
{ERR_FUNC(RAND_F_FIPS_SET_TEST_MODE),	"FIPS_SET_TEST_MODE"},
a79 8
{ERR_REASON(RAND_R_NON_FIPS_METHOD)      ,"non fips method"},
{ERR_REASON(RAND_R_NOT_IN_TEST_MODE)     ,"not in test mode"},
{ERR_REASON(RAND_R_NO_KEY_SET)           ,"no key set"},
{ERR_REASON(RAND_R_PRNG_ASKING_FOR_TOO_MUCH),"prng asking for too much"},
{ERR_REASON(RAND_R_PRNG_ERROR)           ,"prng error"},
{ERR_REASON(RAND_R_PRNG_KEYED)           ,"prng keyed"},
{ERR_REASON(RAND_R_PRNG_NOT_REKEYED)     ,"prng not rekeyed"},
{ERR_REASON(RAND_R_PRNG_NOT_RESEEDED)    ,"prng not reseeded"},
a80 2
{ERR_REASON(RAND_R_PRNG_SEED_MUST_NOT_MATCH_KEY),"prng seed must not match key"},
{ERR_REASON(RAND_R_PRNG_STUCK)           ,"prng stuck"},
@


1.1.1.6
log
@import OpenSSL-1.0.0a
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2006 The OpenSSL Project.  All rights reserved.
d73 8
d88 8
d97 2
@


1.1.1.7
log
@import OpenSSL-1.0.1c
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2011 The OpenSSL Project.  All rights reserved.
a73 1
{ERR_FUNC(RAND_F_RAND_INIT_FIPS),	"RAND_init_fips"},
a79 3
{ERR_REASON(RAND_R_ERROR_INITIALISING_DRBG),"error initialising drbg"},
{ERR_REASON(RAND_R_ERROR_INSTANTIATING_DRBG),"error instantiating drbg"},
{ERR_REASON(RAND_R_NO_FIPS_RANDOM_METHOD_SET),"no fips random method set"},
@


1.1.1.8
log
@Import OpenSSL 1.0.1g
@
text
@a80 1
{ERR_REASON(RAND_R_DUAL_EC_DRBG_DISABLED),"dual ec drbg disabled"},
@


