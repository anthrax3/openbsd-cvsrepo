head	1.39;
access;
symbols
	OPENBSD_6_1_BASE:1.39;
locks; strict;
comment	@ * @;


1.39
date	2017.02.14.03.50.25;	author bcook;	state Exp;
branches;
next	1.38;
commitid	HQQ7qZnvHdSDEljs;

1.38
date	2016.10.31.04.17.17;	author bcook;	state Exp;
branches;
next	1.37;
commitid	nWKlyEihFVpxnBMO;

1.37
date	2016.07.31.19.30.32;	author bcook;	state Exp;
branches;
next	1.36;
commitid	I8qrwRppkp9u45Bd;

1.36
date	2016.06.30.11.10.29;	author bcook;	state Exp;
branches;
next	1.35;
commitid	r8MmRYdP0lcCmMnq;

1.35
date	2016.06.06.09.50.15;	author bcook;	state Exp;
branches;
next	1.34;
commitid	mgigPvtyejefEZIR;

1.34
date	2016.03.12.21.01.53;	author bcook;	state Exp;
branches;
next	1.33;
commitid	xwpL2D0MzVxiM0wH;

1.33
date	2015.11.03.02.21.20;	author bcook;	state Exp;
branches
	1.33.2.1;
next	1.32;
commitid	CHMxt344i4aSFhhg;

1.32
date	2015.09.27.18.09.51;	author bcook;	state Exp;
branches;
next	1.31;
commitid	zxcEOEyIE5WCaKNK;

1.31
date	2015.08.20.00.15.32;	author bcook;	state Exp;
branches;
next	1.30;
commitid	VYn3b8AJB9gmSJmV;

1.30
date	2015.07.16.22.36.50;	author bcook;	state Exp;
branches
	1.30.4.1;
next	1.29;
commitid	lEGtuGQUJ2xa5hp1;

1.29
date	2015.05.23.21.09.46;	author bcook;	state Exp;
branches;
next	1.28;
commitid	6eOfqh9Bh8P3JKbv;

1.28
date	2014.10.14.13.12.35;	author bcook;	state Exp;
branches;
next	1.27;
commitid	MJsUa9UiYGObRRCp;

1.27
date	2014.07.11.21.21.59;	author beck;	state Exp;
branches;
next	1.26;
commitid	KqHgGSseX1SWjiSu;

1.26
date	2014.07.11.11.43.49;	author jsing;	state Exp;
branches;
next	1.25;
commitid	CsykflSeI1MI4Qd0;

1.25
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	mJUVYpkFBZ0Zv2bG;

1.24
date	2014.04.15.20.06.09;	author tedu;	state Exp;
branches;
next	1.23;

1.23
date	2014.04.13.15.25.29;	author miod;	state Exp;
branches;
next	1.22;

1.22
date	2012.10.13.21.25.12;	author djm;	state Exp;
branches;
next	1.21;

1.21
date	2012.01.05.23.01.38;	author djm;	state Exp;
branches;
next	1.20;

1.20
date	2011.11.03.02.34.32;	author djm;	state Exp;
branches;
next	1.19;

1.19
date	2010.10.01.22.58.53;	author djm;	state Exp;
branches;
next	1.18;

1.18
date	2009.04.06.06.33.20;	author djm;	state Exp;
branches;
next	1.17;

1.17
date	2009.01.09.12.15.22;	author djm;	state Exp;
branches;
next	1.16;

1.16
date	2009.01.05.21.36.38;	author djm;	state Exp;
branches;
next	1.15;

1.15
date	2008.09.06.12.17.48;	author djm;	state Exp;
branches;
next	1.14;

1.14
date	2006.06.27.05.06.55;	author djm;	state Exp;
branches;
next	1.13;

1.13
date	2005.04.29.05.39.16;	author djm;	state Exp;
branches;
next	1.12;

1.12
date	2004.04.08.08.03.12;	author markus;	state Exp;
branches;
next	1.11;

1.11
date	2003.11.11.22.15.18;	author markus;	state Exp;
branches;
next	1.10;

1.10
date	2003.05.12.02.18.35;	author markus;	state Exp;
branches;
next	1.9;

1.9
date	2002.09.10.16.31.54;	author markus;	state Exp;
branches;
next	1.8;

1.8
date	2002.06.07.03.45.33;	author beck;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.15.02.29.10;	author beck;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.01.19.51.17;	author beck;	state Exp;
branches;
next	1.5;

1.5
date	2001.06.22.00.02.54;	author beck;	state Exp;
branches;
next	1.4;

1.4
date	2000.12.15.02.57.03;	author beck;	state Exp;
branches;
next	1.3;

1.3
date	2000.04.15.06.18.31;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.03.19.11.08.30;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.35.25;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.49.42;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.22.35.17;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2003.05.11.21.34.27;	author markus;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2003.11.11.21.11.29;	author markus;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2004.04.07.20.41.32;	author markus;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2005.04.29.05.37.01;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2006.06.27.05.05.30;	author djm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2008.09.06.12.15.39;	author djm;	state Exp;
branches;
next	1.1.1.9;

1.1.1.9
date	2009.01.09.12.13.50;	author djm;	state Exp;
branches;
next	1.1.1.10;

1.1.1.10
date	2009.04.06.06.30.00;	author djm;	state Exp;
branches;
next	1.1.1.11;

1.1.1.11
date	2010.10.01.22.54.02;	author djm;	state Exp;
branches;
next	1.1.1.12;

1.1.1.12
date	2011.11.03.02.32.07;	author djm;	state Exp;
branches;
next	1.1.1.13;

1.1.1.13
date	2012.01.05.22.58.53;	author djm;	state Exp;
branches;
next	1.1.1.14;

1.1.1.14
date	2012.10.13.21.23.33;	author djm;	state Exp;
branches;
next	1.1.1.15;

1.1.1.15
date	2014.04.13.15.16.32;	author miod;	state Exp;
branches;
next	;

1.30.4.1
date	2015.08.28.16.38.19;	author jsing;	state Exp;
branches;
next	1.30.4.2;
commitid	JMRQqGoRsLFCD8rn;

1.30.4.2
date	2015.10.15.21.05.41;	author bcook;	state Exp;
branches;
next	1.30.4.3;
commitid	sB3IMXNjvO9B2ctU;

1.30.4.3
date	2015.12.04.13.45.01;	author bcook;	state Exp;
branches;
next	1.30.4.4;
commitid	aNmjfZxOsoIp2WjM;

1.30.4.4
date	2016.01.28.15.36.06;	author beck;	state Exp;
branches;
next	1.30.4.5;
commitid	PahFC8zt8EAZEHo5;

1.30.4.5
date	2016.05.03.13.49.36;	author bcook;	state Exp;
branches;
next	1.30.4.6;
commitid	MRDenyzji7bJP5ay;

1.30.4.6
date	2016.05.29.20.39.14;	author bcook;	state Exp;
branches;
next	1.30.4.7;
commitid	v5m5Ffuc9YkHNxEh;

1.30.4.7
date	2016.06.06.09.54.03;	author bcook;	state Exp;
branches;
next	;
commitid	a45z3Sw9VCL1rBus;

1.33.2.1
date	2016.03.12.20.50.31;	author bcook;	state Exp;
branches;
next	1.33.2.2;
commitid	lQ7OxMnmWmAQgv7u;

1.33.2.2
date	2016.05.03.13.41.17;	author bcook;	state Exp;
branches;
next	1.33.2.3;
commitid	OW5DvB3rZ7Y1Os8z;

1.33.2.3
date	2016.05.29.20.53.29;	author bcook;	state Exp;
branches;
next	1.33.2.4;
commitid	t2q78pck2rQz3mJO;

1.33.2.4
date	2016.06.06.09.51.46;	author bcook;	state Exp;
branches;
next	1.33.2.5;
commitid	8twaWqGS1KNsVl6P;

1.33.2.5
date	2016.06.30.11.19.03;	author bcook;	state Exp;
branches;
next	;
commitid	xTqzODREXplHUV24;


desc
@@


1.39
log
@bump to 2.5.2
@
text
@/* $OpenBSD: opensslv.h,v 1.38 2016/10/31 04:17:17 bcook Exp $ */
#ifndef HEADER_OPENSSLV_H
#define HEADER_OPENSSLV_H

/* These will change with each release of LibreSSL-portable */
#define LIBRESSL_VERSION_NUMBER	0x2050200fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.5.2"

/* These will never change */
#define OPENSSL_VERSION_NUMBER	0x20000000L
#define OPENSSL_VERSION_TEXT	LIBRESSL_VERSION_TEXT
#define OPENSSL_VERSION_PTEXT	" part of " OPENSSL_VERSION_TEXT

#define SHLIB_VERSION_HISTORY ""
#define SHLIB_VERSION_NUMBER "1.0.0"

#endif /* HEADER_OPENSSLV_H */
@


1.38
log
@bump to LibreSSL 2.5.1
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.37 2016/07/31 19:30:32 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2050100fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.5.1"
@


1.37
log
@bump for LibreSSL 2.5.x
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.36 2016/06/30 11:10:29 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2050000fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.5.0"
@


1.36
log
@bump to 2.4.2
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.35 2016/06/06 09:50:15 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2040200fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.4.2"
@


1.35
log
@LibreSSL 2.4.1
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.34 2016/03/12 21:01:53 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2040100fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.4.1"
@


1.34
log
@Bump for LibreSSL 2.4.0
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33 2015/11/03 02:21:20 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2040000fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.4.0"
@


1.33
log
@bump to 2.3.2, format LIBRESSL_VERSION_NUMBER like OPENSSL_VERSION_NUMBER.

Suggested by WubTheCaptain so the same comparison code can be used with
LibreSSL.
https://www.openssl.org/docs/manmaster/crypto/OPENSSL_VERSION_NUMBER.html
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.32 2015/09/27 18:09:51 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2030200fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.2"
@


1.33.2.1
log
@bump for LibreSSL 2.3.3
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33 2015/11/03 02:21:20 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2030300fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.3"
@


1.33.2.2
log
@bump to 2.3.4
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33.2.1 2016/03/12 20:50:31 bcook Exp $ */
d7 1
a7 1
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.4"
@


1.33.2.3
log
@bump to 2.3.5
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33.2.2 2016/05/03 13:41:17 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2030500fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.5"
@


1.33.2.4
log
@LibreSSL 2.3.6
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33.2.3 2016/05/29 20:53:29 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2030600fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.6"
@


1.33.2.5
log
@bump for 2.3.7
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.33.2.4 2016/06/06 09:51:46 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x2030700fL
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.7"
@


1.32
log
@bump to 2.3.1
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.31 2015/08/20 00:15:32 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20030001L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.1"
@


1.31
log
@bump to 2.3.0 for the next LibreSSL release cycle
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30 2015/07/16 22:36:50 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20030000L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.3.0"
@


1.30
log
@Bump LIBRESSL_VERSION defines.

Moving forward, software should expect that LIBRESSL_VERSION_TEXT and
LIBRESSL_VERSION_NUMBER will increment for each LibreSSL-portable release.

ok deraadt@@, beck@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.29 2015/05/23 21:09:46 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020002L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.2"
@


1.30.4.1
log
@Bump LibreSSL version number to 2.2.3 in 5.8 release branch.

Requested by bcook@@ for libressl portable.
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30 2015/07/16 22:36:50 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020003L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.3"
@


1.30.4.2
log
@Bump LibreSSL version number to 2.2.4 in 5.8 release branch.
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.1 2015/08/28 16:38:19 jsing Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020004L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.4"
@


1.30.4.3
log
@Bump LibreSSL version number to 2.2.5 in 5.8 release branch.
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.2 2015/10/15 21:05:41 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020005L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.5"
@


1.30.4.4
log
@bump version.
ok bcook@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.3 2015/12/04 13:45:01 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020006L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.6"
@


1.30.4.5
log
@bump to 2.2.7
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.4 2016/01/28 15:36:06 beck Exp $ */
d7 1
a7 1
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.7"
@


1.30.4.6
log
@bump to 2.2.8
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.5 2016/05/03 13:49:36 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020008L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.8"
@


1.30.4.7
log
@LibreSSL 2.2.9
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.30.4.6 2016/05/29 20:39:14 bcook Exp $ */
d6 2
a7 2
#define LIBRESSL_VERSION_NUMBER	0x20020009L
#define LIBRESSL_VERSION_TEXT	"LibreSSL 2.2.9"
@


1.29
log
@bump to version 2.2

ok deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.28 2014/10/14 13:12:35 bcook Exp $ */
d5 5
a9 1
#define LIBRESSL_VERSION_NUMBER	0x20000000L
d11 1
a11 1
#define OPENSSL_VERSION_TEXT	"LibreSSL 2.2"
@


1.28
log
@Bump libressl version string to 2.1.

This makes 'openssl version' print a string that matches the -portable
release number.  Thanks to @@blakkeim for pointing it out.

The version integer is left alone, with the idea of discouraging software from
relying on magic numbers for detecting features. Software configuration should
do explicit feature tests instead.

ok beck@@, deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.27 2014/07/11 21:21:59 beck Exp $ */
d7 1
a7 1
#define OPENSSL_VERSION_TEXT	"LibreSSL 2.1"
@


1.27
log
@Provide LIBRESSL_VERSION_NUMBER for people who use such things to
detect versions distinct from OPENSSL_BLAH_WOOF..
ok jsing@@ tedu@@ deraadt@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.26 2014/07/11 11:43:49 jsing Exp $ */
d7 1
a7 1
#define OPENSSL_VERSION_TEXT	"LibreSSL 2.0"
@


1.26
log
@Provide correct version details for LibreSSL.

ok beck@@ deraadt@@ miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: opensslv.h,v 1.25 2014/06/12 15:49:27 deraadt Exp $ */
d5 1
@


1.25
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d5 2
a6 26
/* Numeric release version identifier:
 * MNNFFPPS: major minor fix patch status
 * The status nibble has one of the values 0 for development, 1 to e for betas
 * 1 to 14, and f for release.  The patch level is exactly that.
 * For example:
 * 0.9.3-dev	  0x00903000
 * 0.9.3-beta1	  0x00903001
 * 0.9.3-beta2-dev 0x00903002
 * 0.9.3-beta2    0x00903002 (same as ...beta2-dev)
 * 0.9.3	  0x0090300f
 * 0.9.3a	  0x0090301f
 * 0.9.4 	  0x0090400f
 * 1.2.3z	  0x102031af
 *
 * For continuity reasons (because 0.9.5 is already out, and is coded
 * 0x00905100), between 0.9.5 and 0.9.6 the coding of the patch level
 * part is slightly different, by setting the highest bit.  This means
 * that 0.9.5a looks like this: 0x0090581f.  At 0.9.6, we can start
 * with 0x0090600S...
 *
 * (Prior to 0.9.3-dev a different scheme was used: 0.9.2b is 0x0922.)
 * (Prior to 0.9.5a beta1, a different scheme was used: MMNNFFRBB for
 *  major minor fix final patch/beta)
 */
#define OPENSSL_VERSION_NUMBER	0x1000107fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1g 7 Apr 2014"
a8 49

/* The macros below are to be used for shared library (.so, .dll, ...)
 * versioning.  That kind of versioning works a bit differently between
 * operating systems.  The most usual scheme is to set a major and a minor
 * number, and have the runtime loader check that the major number is equal
 * to what it was at application link time, while the minor number has to
 * be greater or equal to what it was at application link time.  With this
 * scheme, the version number is usually part of the file name, like this:
 *
 *	libcrypto.so.0.9
 *
 * Some unixen also make a softlink with the major verson number only:
 *
 *	libcrypto.so.0
 *
 * On Tru64 and IRIX 6.x it works a little bit differently.  There, the
 * shared library version is stored in the file, and is actually a series
 * of versions, separated by colons.  The rightmost version present in the
 * library when linking an application is stored in the application to be
 * matched at run time.  When the application is run, a check is done to
 * see if the library version stored in the application matches any of the
 * versions in the version string of the library itself.
 * This version string can be constructed in any way, depending on what
 * kind of matching is desired.  However, to implement the same scheme as
 * the one used in the other unixen, all compatible versions, from lowest
 * to highest, should be part of the string.  Consecutive builds would
 * give the following versions strings:
 *
 *	3.0
 *	3.0:3.1
 *	3.0:3.1:3.2
 *	4.0
 *	4.0:4.1
 *
 * Notice how version 4 is completely incompatible with version, and
 * therefore give the breach you can see.
 *
 * There may be other schemes as well that I haven't yet discovered.
 *
 * So, here's the way it works here: first of all, the library version
 * number doesn't need at all to match the overall OpenSSL version.
 * However, it's nice and more understandable if it actually does.
 * The current library version is stored in the macro SHLIB_VERSION_NUMBER,
 * which is just a piece of text in the format "M.m.e" (Major, minor, edit).
 * For the sake of Tru64, IRIX, and any other OS that behaves in similar ways,
 * we need to keep a history of version numbers, which is done in the
 * macro SHLIB_VERSION_HISTORY.  The numbers are separated by colons and
 * should only keep the versions that are binary compatible with the current.
 */
a10 1

@


1.24
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d1 1
@


1.23
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@a28 3
#ifdef OPENSSL_FIPS
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1g-fips 7 Apr 2014"
#else
a29 1
#endif
@


1.22
log
@resolve conflicts
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000103fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1c-fips 10 May 2012"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1c 10 May 2012"
@


1.21
log
@OpenSSL 1.0.0f: merge
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000006fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0f-fips 4 Jan 2012"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0f 4 Jan 2012"
@


1.20
log
@openssl-1.0.0e: resolve conflicts
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000005fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0e-fips 6 Sep 2011"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0e 6 Sep 2011"
@


1.19
log
@resolve conflicts, fix local changes
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000001fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0a-fips 1 Jun 2010"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0a 1 Jun 2010"
@


1.18
log
@resolve conflicts
@
text
@d15 1
a15 1
 * 0.9.4	  0x0090400f
d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009080bfL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8k-fips 25 Mar 2009"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8k 25 Mar 2009"
d86 1
a86 1
#define SHLIB_VERSION_NUMBER "0.9.8"
@


1.17
log
@resolve conflicts
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009080afL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8j-fips 07 Jan 2009"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8j 07 Jan 2009"
@


1.16
log
@update to openssl-0.9.8i; tested by several, especially krw@@
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x0090809fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8i-fips 15 Sep 2008"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8i 15 Sep 2008"
@


1.15
log
@resolve conflicts
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x0090808fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8h-fips 28 May 2008"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8h 28 May 2008"
@


1.14
log
@resolve conflicts
@
text
@d15 1
a15 1
 * 0.9.4 	  0x0090400f
d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009070afL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j-fips 04 May 2006"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j 04 May 2006"
d86 1
a86 1
#define SHLIB_VERSION_NUMBER "0.9.7"
@


1.13
log
@resolve conflicts
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x0090707fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g-fips 11 Apr 2005"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g 11 Apr 2005"
@


1.12
log
@merge 0.9.7d
@
text
@d28 6
a33 2
#define OPENSSL_VERSION_NUMBER	0x0090704fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7d 17 Mar 2004"
@


1.11
log
@merge 0.9.7c; minor bugsfixes;
API addition: ERR_release_err_state_table
[make includes before you build libssl/libcrypto]
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090703fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7c 30 Sep 2003"
@


1.10
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090702fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7b 10 Apr 2003"
@


1.9
log
@merge openssl-0.9.7-beta3, tested on vax by miod@@
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x00907003L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7-beta3 30 Jul 2002"
@


1.8
log
@Merge OpenSSL 0.9.7-stable-20020605,
correctly autogenerate obj_mac.h
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x00907001L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7-beta1 01 Jun 2002"
@


1.7
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x00907000L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7-dev XX xxx XXXX"
@


1.6
log
@merge openssl 0.9.6b-engine

Note that this is a maintenence release, API's appear *not* to have changed.
As such, I have only increased the minor number on these libraries
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090602fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.6b [engine] 9 Jul 2001"
d47 7
a53 7
 * On True64 it works a little bit differently.  There, the shared library
 * version is stored in the file, and is actually a series of versions,
 * separated by colons.  The rightmost version present in the library when
 * linking an application is stored in the application to be matched at
 * run time.  When the application is run, a check is done to see if the
 * library version stored in the application matches any of the versions
 * in the version string of the library itself.
d76 1
a76 1
 * For the sake of True64 and any other OS that behaves in similar ways,
d82 1
a82 1
#define SHLIB_VERSION_NUMBER "0.9.6"
@


1.5
log
@openssl-engine-0.9.6a merge
@
text
@d5 1
a5 1
 * MMNNFFPPS: major minor fix patch status
d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090601fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.6a [engine] 5 Apr 2001"
@


1.4
log
@openssl-engine-0.9.6 merge
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090600fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.6 [engine] 24 Sep 2000"
@


1.3
log
@OpenSSL 0.9.5a merge
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090581fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.5a 1 Apr 2000"
d31 53
@


1.2
log
@OpenSSL 0.9.5 merge

*warning* this bumps shared lib minors for libssl and libcrypto from 2.1 to 2.2
if you are using the ssl26 packages for ssh and other things to work you will
need to get new ones (see ~beck/libsslsnap/<arch>) on cvs or ~beck/src-patent.tar.gz on cvs
@
text
@d5 3
a7 1
 * MMNNFFRBB: major minor fix final beta/patch
d10 14
a23 7
 * 0.9.3beta1	  0x00903001
 * 0.9.3beta2-dev 0x00903002
 * 0.9.3beta2     0x00903002 (same as ...beta2-dev)
 * 0.9.3	  0x00903100
 * 0.9.3a	  0x00903101
 * 0.9.4 	  0x00904100
 * 1.2.3z	  0x1020311a
d25 2
d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x00905100L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.5 28 Feb 2000"
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@d10 1
a10 1
 * 0.9.3beta2     0x00903002
d17 2
a18 2
#define OPENSSL_VERSION_NUMBER	0x00904100L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.4 09 Aug 1999"
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d5 1
a5 3
 * MNNFFPPS: major minor fix patch status
 * The status nibble has one of the values 0 for development, 1 to e for betas
 * 1 to 14, and f for release.  The patch level is exactly that.
d8 7
a14 14
 * 0.9.3-beta1	  0x00903001
 * 0.9.3-beta2-dev 0x00903002
 * 0.9.3-beta2    0x00903002 (same as ...beta2-dev)
 * 0.9.3	  0x0090300f
 * 0.9.3a	  0x0090301f
 * 0.9.4 	  0x0090400f
 * 1.2.3z	  0x102031af
 *
 * For continuity reasons (because 0.9.5 is already out, and is coded
 * 0x00905100), between 0.9.5 and 0.9.6 the coding of the patch level
 * part is slightly different, by setting the highest bit.  This means
 * that 0.9.5a looks like this: 0x0090581f.  At 0.9.6, we can start
 * with 0x0090600S...
 *
a15 2
 * (Prior to 0.9.5a beta1, a different scheme was used: MMNNFFRBB for
 *  major minor fix final patch/beta)
d17 2
a18 2
#define OPENSSL_VERSION_NUMBER	0x00907001L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7-beta1 01 Jun 2002"
a19 53


/* The macros below are to be used for shared library (.so, .dll, ...)
 * versioning.  That kind of versioning works a bit differently between
 * operating systems.  The most usual scheme is to set a major and a minor
 * number, and have the runtime loader check that the major number is equal
 * to what it was at application link time, while the minor number has to
 * be greater or equal to what it was at application link time.  With this
 * scheme, the version number is usually part of the file name, like this:
 *
 *	libcrypto.so.0.9
 *
 * Some unixen also make a softlink with the major verson number only:
 *
 *	libcrypto.so.0
 *
 * On Tru64 and IRIX 6.x it works a little bit differently.  There, the
 * shared library version is stored in the file, and is actually a series
 * of versions, separated by colons.  The rightmost version present in the
 * library when linking an application is stored in the application to be
 * matched at run time.  When the application is run, a check is done to
 * see if the library version stored in the application matches any of the
 * versions in the version string of the library itself.
 * This version string can be constructed in any way, depending on what
 * kind of matching is desired.  However, to implement the same scheme as
 * the one used in the other unixen, all compatible versions, from lowest
 * to highest, should be part of the string.  Consecutive builds would
 * give the following versions strings:
 *
 *	3.0
 *	3.0:3.1
 *	3.0:3.1:3.2
 *	4.0
 *	4.0:4.1
 *
 * Notice how version 4 is completely incompatible with version, and
 * therefore give the breach you can see.
 *
 * There may be other schemes as well that I haven't yet discovered.
 *
 * So, here's the way it works here: first of all, the library version
 * number doesn't need at all to match the overall OpenSSL version.
 * However, it's nice and more understandable if it actually does.
 * The current library version is stored in the macro SHLIB_VERSION_NUMBER,
 * which is just a piece of text in the format "M.m.e" (Major, minor, edit).
 * For the sake of Tru64, IRIX, and any other OS that behaves in similar ways,
 * we need to keep a history of version numbers, which is done in the
 * macro SHLIB_VERSION_HISTORY.  The numbers are separated by colons and
 * should only keep the versions that are binary compatible with the current.
 */
#define SHLIB_VERSION_HISTORY ""
#define SHLIB_VERSION_NUMBER "0.9.7"

@


1.1.1.2
log
@import openssl-0.9.7-beta3
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x00907003L
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7-beta3 30 Jul 2002"
@


1.1.1.3
log
@import 0.9.7b (without idea and rc5)
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090702fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7b 10 Apr 2003"
@


1.1.1.4
log
@import 0.9.7c
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090703fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7c 30 Sep 2003"
@


1.1.1.5
log
@import openssl-0.9.7d
@
text
@d28 2
a29 2
#define OPENSSL_VERSION_NUMBER	0x0090704fL
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7d 17 Mar 2004"
@


1.1.1.6
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@d28 2
a29 6
#define OPENSSL_VERSION_NUMBER	0x0090707fL
#ifdef OPENSSL_FIPS
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g-fips 11 Apr 2005"
#else
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7g 11 Apr 2005"
#endif
@


1.1.1.7
log
@import of openssl-0.9.7j
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009070afL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j-fips 04 May 2006"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.7j 04 May 2006"
@


1.1.1.8
log
@import of OpenSSL 0.9.8h
@
text
@d15 1
a15 1
 * 0.9.4	  0x0090400f
d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x0090808fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8h-fips 28 May 2008"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8h 28 May 2008"
d86 1
a86 1
#define SHLIB_VERSION_NUMBER "0.9.8"
@


1.1.1.9
log
@import openssl-0.9.8j
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009080afL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8j-fips 07 Jan 2009"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8j 07 Jan 2009"
@


1.1.1.10
log
@import of OpenSSL 0.9.8k
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x009080bfL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8k-fips 25 Mar 2009"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 0.9.8k 25 Mar 2009"
@


1.1.1.11
log
@import OpenSSL-1.0.0a
@
text
@d15 1
a15 1
 * 0.9.4 	  0x0090400f
d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000001fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0a-fips 1 Jun 2010"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0a 1 Jun 2010"
d86 1
a86 1
#define SHLIB_VERSION_NUMBER "1.0.0"
@


1.1.1.12
log
@import OpenSSL 1.0.0e
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000005fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0e-fips 6 Sep 2011"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0e 6 Sep 2011"
@


1.1.1.13
log
@OpenSSL 1.0.0f: import upstream source
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000006fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0f-fips 4 Jan 2012"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.0f 4 Jan 2012"
@


1.1.1.14
log
@import OpenSSL-1.0.1c
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000103fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1c-fips 10 May 2012"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1c 10 May 2012"
@


1.1.1.15
log
@Import OpenSSL 1.0.1g
@
text
@d28 1
a28 1
#define OPENSSL_VERSION_NUMBER	0x1000107fL
d30 1
a30 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1g-fips 7 Apr 2014"
d32 1
a32 1
#define OPENSSL_VERSION_TEXT	"OpenSSL 1.0.1g 7 Apr 2014"
@


