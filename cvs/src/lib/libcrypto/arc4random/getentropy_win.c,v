head	1.5;
access;
symbols;
locks; strict;
comment	@ * @;


1.5
date	2016.08.07.03.27.21;	author tb;	state Exp;
branches;
next	1.4;
commitid	grLSpvTr68XyHvmT;

1.4
date	2015.09.11.11.52.55;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	iXKQtu2B8x2yh0yk;

1.3
date	2014.11.11.13.54.33;	author bcook;	state Exp;
branches;
next	1.2;
commitid	z4rVW2H2PqhCCIlN;

1.2
date	2014.07.13.13.03.09;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	eGUXBFLD6xH0xZHF;

1.1
date	2014.07.12.20.54.49;	author wouter;	state Exp;
branches;
next	;
commitid	TvdXRChdIIg1E41N;


desc
@@


1.5
log
@Update the link for the getentropy(2) manual to man.openbsd.org/

ok deraadt@@
@
text
@/*	$OpenBSD: getentropy_win.c,v 1.4 2015/09/11 11:52:55 deraadt Exp $	*/

/*
 * Copyright (c) 2014, Theo de Raadt <deraadt@@openbsd.org> 
 * Copyright (c) 2014, Bob Beck <beck@@obtuse.com>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Emulation of getentropy(2) as documented at:
 * http://man.openbsd.org/getentropy.2
 */

#include <windows.h>
#include <errno.h>
#include <stdint.h>
#include <sys/types.h>
#include <wincrypt.h>
#include <process.h>

int	getentropy(void *buf, size_t len);

/*
 * On Windows, CryptGenRandom is supposed to be a well-seeded
 * cryptographically strong random number generator.
 */
int
getentropy(void *buf, size_t len)
{
	HCRYPTPROV provider;

	if (len > 256) {
		errno = EIO;
		return (-1);
	}

	if (CryptAcquireContext(&provider, NULL, NULL, PROV_RSA_FULL,
	    CRYPT_VERIFYCONTEXT) == 0)
		goto fail;
	if (CryptGenRandom(provider, len, buf) == 0) {
		CryptReleaseContext(provider, 0);
		goto fail;
	}
	CryptReleaseContext(provider, 0);
	return (0);

fail:
	errno = EIO;
	return (-1);
}
@


1.4
log
@unify files further
@
text
@d1 1
a1 1
/*	$OpenBSD: getentropy_win.c,v 1.3 2014/11/11 13:54:33 bcook Exp $	*/
d20 1
a20 1
 * http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man2/getentropy.2
@


1.3
log
@correct the failure case for getentropy on win32

CryptAcquireContext and CryptGenRandom returns zero (FALSE) if fails.

From: Dongsheng Song <dongsheng.song@@gmail.com>
@
text
@d1 1
a1 1
/*	$OpenBSD: getentropy_win.c,v 1.2 2014/07/13 13:03:09 deraadt Exp $	*/
d43 1
a43 1
		return -1;
@


1.2
log
@Provide a link to the canonical API specification.
ok beck
@
text
@d1 1
a1 1
/*	$OpenBSD: getentropy_win.c,v 1.1 2014/07/12 20:54:49 wouter Exp $	*/
d47 1
a47 1
	    CRYPT_VERIFYCONTEXT) != 0)
d49 1
a49 1
	if (CryptGenRandom(provider, len, buf) != 0) {
@


1.1
log
@getentropy on Windows.  It compiles but has not been thoroughly tested yet.

OK: beck@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d18 3
@

