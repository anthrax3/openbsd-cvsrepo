head	1.3;
access;
symbols
	OPENBSD_6_2:1.3.0.2
	OPENBSD_6_2_BASE:1.3
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@ * @;


1.3
date	2016.08.07.03.27.21;	author tb;	state Exp;
branches;
next	1.2;
commitid	grLSpvTr68XyHvmT;

1.2
date	2015.09.11.11.52.55;	author deraadt;	state Exp;
branches;
next	1.1;
commitid	iXKQtu2B8x2yh0yk;

1.1
date	2015.01.19.20.21.40;	author bcook;	state Exp;
branches;
next	;
commitid	q1Z5geOrJITSIduy;


desc
@@


1.3
log
@Update the link for the getentropy(2) manual to man.openbsd.org/

ok deraadt@@
@
text
@/*	$OpenBSD: getentropy_netbsd.c,v 1.2 2015/09/11 11:52:55 deraadt Exp $	*/

/*
 * Copyright (c) 2014 Pawel Jakub Dawidek <pjd@@FreeBSD.org>
 * Copyright (c) 2014 Brent Cook <bcook@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 *
 * Emulation of getentropy(2) as documented at:
 * http://man.openbsd.org/getentropy.2
 */

#include <sys/types.h>
#include <sys/sysctl.h>

#include <errno.h>
#include <stddef.h>

/*
 * Derived from lib/libc/gen/arc4random.c from FreeBSD.
 */
static size_t
getentropy_sysctl(u_char *buf, size_t size)
{
	int mib[2];
	size_t len, done;

	mib[0] = CTL_KERN;
	mib[1] = KERN_ARND;
	done = 0;

	do {
		len = size;
		if (sysctl(mib, 2, buf, &len, NULL, 0) == -1)
			return (done);
		done += len;
		buf += len;
		size -= len;
	} while (size > 0);

	return (done);
}

int
getentropy(void *buf, size_t len)
{
	if (len <= 256 &&
	    getentropy_sysctl(buf, len) == len) {
		return (0);
	}

	errno = EIO;
	return (-1);
}
@


1.2
log
@unify files further
@
text
@d1 1
a1 1
/*	$OpenBSD: getentropy_netbsd.c,v 1.1 2015/01/19 20:21:40 bcook Exp $	*/
d20 1
a20 1
 * http://www.openbsd.org/cgi-bin/man.cgi/OpenBSD-current/man2/getentropy.2
@


1.1
log
@Add arc4random/getentropy shims for NetBSD.

The latest NetBSD (6.1.5) arc4random does not appear to reseed the CRNG state
after a fork, so provide an override until the fork-safe version in CVS appears
in a release.

These are the same as the FreeBSD shims.

ok deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: getentropy_osx.c,v 1.7 2014/07/19 16:12:00 deraadt Exp $	*/
d58 2
a59 2
			getentropy_sysctl(buf, len) == len) {
		return 0;
d63 1
a63 1
	return -1;
@

