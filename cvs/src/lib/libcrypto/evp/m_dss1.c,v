head	1.16;
access;
symbols
	OPENBSD_6_1:1.16.0.2
	OPENBSD_6_1_BASE:1.16;
locks; strict;
comment	@ * @;


1.16
date	2014.07.11.08.44.48;	author jsing;	state Exp;
branches;
next	1.15;
commitid	yQEL1wOWIearrW15;

1.15
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.14;
commitid	nzndm3zqPmFurSaK;

1.14
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.13;
commitid	mJUVYpkFBZ0Zv2bG;

1.13
date	2014.06.10.14.14.07;	author jsing;	state Exp;
branches;
next	1.12;
commitid	AsxCaxjMuq4pIb1Q;

1.12
date	2014.05.08.16.05.38;	author jsing;	state Exp;
branches;
next	1.11;

1.11
date	2014.05.08.16.01.06;	author jsing;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.15.20.06.10;	author tedu;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.13.15.25.33;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.01.22.58.55;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.50;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2006.06.27.05.07.01;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.14;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	99.09.29.04.36.15;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	98.10.05.20.12.35;	author ryker;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	98.10.05.20.12.35;	author ryker;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2002.09.05.12.50.29;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2006.06.27.05.05.33;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2009.01.09.12.13.56;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2010.10.01.22.54.07;	author djm;	state Exp;
branches;
next	1.1.1.7;

1.1.1.7
date	2012.10.13.21.23.40;	author djm;	state Exp;
branches;
next	1.1.1.8;

1.1.1.8
date	2014.04.13.15.16.34;	author miod;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@/* $OpenBSD: m_dss1.c,v 1.15 2014/07/10 22:45:57 jsing Exp $ */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stdio.h>

#include <openssl/opensslconf.h>

#ifndef OPENSSL_NO_SHA

#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/sha.h>

#ifndef OPENSSL_NO_DSA
#include <openssl/dsa.h>
#endif

static int
init(EVP_MD_CTX *ctx)
{
	return SHA1_Init(ctx->md_data);
}

static int
update(EVP_MD_CTX *ctx, const void *data, size_t count)
{
	return SHA1_Update(ctx->md_data, data, count);
}

static int
final(EVP_MD_CTX *ctx, unsigned char *md)
{
	return SHA1_Final(md, ctx->md_data);
}

static const EVP_MD dss1_md = {
	.type = NID_dsa,
	.pkey_type = NID_dsaWithSHA1,
	.md_size = SHA_DIGEST_LENGTH,
	.flags = EVP_MD_FLAG_PKEY_DIGEST,
	.init = init,
	.update = update,
	.final = final,
	.copy = NULL,
	.cleanup = NULL,
#ifndef OPENSSL_NO_DSA
	.sign = (evp_sign_method *)DSA_sign,
	.verify = (evp_verify_method *)DSA_verify,
	.required_pkey_type = {
	        EVP_PKEY_DSA, EVP_PKEY_DSA2, EVP_PKEY_DSA3, EVP_PKEY_DSA4, 0,
	},
#endif
	.block_size = SHA_CBLOCK,
	.ctx_size = sizeof(EVP_MD *) + sizeof(SHA_CTX),
};

const EVP_MD *
EVP_dss1(void)
{
	return (&dss1_md);
}
#endif
@


1.15
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: m_dss1.c,v 1.14 2014/06/12 15:49:29 deraadt Exp $ */
a62 2
#include "cryptlib.h"

d68 1
@


1.14
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d60 3
@


1.13
log
@Use C99 initialisers for EVP_MD structs, for clarity, grepability and to
protect from future field reordering/removal.

No difference in generated assembly.
@
text
@d1 1
a1 1
/* crypto/evp/m_dss1.c */
@


1.12
log
@More KNF.
@
text
@d90 18
a107 12
	NID_dsa,
	NID_dsaWithSHA1,
	SHA_DIGEST_LENGTH,
	EVP_MD_FLAG_PKEY_DIGEST,
	init,
	update,
	final,
	NULL,
	NULL,
	EVP_PKEY_DSA_method,
	SHA_CBLOCK,
	sizeof(EVP_MD *) + sizeof(SHA_CTX),
@


1.11
log
@KNF.
@
text
@d71 2
a72 1
static int init(EVP_MD_CTX *ctx)
d77 2
a78 1
static int update(EVP_MD_CTX *ctx, const void *data, size_t count)
d83 2
a84 1
static int final(EVP_MD_CTX *ctx, unsigned char *md)
@


1.10
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d8 1
a8 1
 * 
d15 1
a15 1
 * 
d22 1
a22 1
 * 
d37 1
a37 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d40 1
a40 1
 * 
d52 1
a52 1
 * 
d72 13
a84 1
	{ return SHA1_Init(ctx->md_data); }
d86 1
a86 8
static int update(EVP_MD_CTX *ctx,const void *data,size_t count)
	{ return SHA1_Update(ctx->md_data,data,count); }

static int final(EVP_MD_CTX *ctx,unsigned char *md)
	{ return SHA1_Final(md,ctx->md_data); }

static const EVP_MD dss1_md=
	{
d98 2
a99 2
	sizeof(EVP_MD *)+sizeof(SHA_CTX),
	};
d101 5
a105 4
const EVP_MD *EVP_dss1(void)
	{
	return(&dss1_md);
	}
@


1.9
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@a70 2
#ifndef OPENSSL_FIPS 

a99 1
#endif
@


1.8
log
@resolve conflicts
@
text
@d66 1
a66 1
#include <openssl/x509.h>
@


1.7
log
@resolve conflicts, fix local changes
@
text
@d71 2
d102 1
@


1.6
log
@resolve conflicts
@
text
@a70 2
#ifndef OPENSSL_FIPS

d85 1
a85 1
	0,
a99 1
#endif
@


1.5
log
@resolve conflicts
@
text
@d71 2
d102 1
@


1.4
log
@resolve conflicts
@
text
@a58 1
#ifndef OPENSSL_NO_SHA
d61 3
d67 3
d74 1
a74 2
static int update(EVP_MD_CTX *ctx,const void *data,unsigned long count)
#ifndef OPENSSL_FIPS
a75 6
#else
	{
	OPENSSL_assert(sizeof(count)<=sizeof(size_t));
	return SHA1_Update(ctx->md_data,data,count);
	}
#endif
d85 1
a85 1
	EVP_MD_FLAG_FIPS,
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d70 1
d72 6
d87 1
a87 1
	0,
@


1.2
log
@OpenSSL 0.9.4 merge
@
text
@d59 1
a59 1
#ifndef NO_SHA
d66 10
a75 1
static EVP_MD dss1_md=
d80 6
a85 3
	SHA1_Init,
	SHA1_Update,
	SHA1_Final,
d91 1
a91 1
EVP_MD *EVP_dss1(void)
@


1.1
log
@Initial revision
@
text
@d59 1
d62 3
a64 3
#include "evp.h"
#include "objects.h"
#include "x509.h"
d79 1
a79 1
EVP_MD *EVP_dss1()
d83 1
@


1.1.1.1
log
@Import of SSLeay-0.9.0b with RSA and IDEA stubbed + OpenBSD build
functionality for shared libs.

Note that routines such as sslv2_init and friends that use RSA will
not work due to lack of RSA in this library.

Needs documentation and help from ports for easy upgrade to full
functionality where legally possible.
@
text
@@


1.1.1.2
log
@import openssl-0.9.7-beta1
@
text
@a58 1
#ifndef OPENSSL_NO_SHA
d61 3
a63 3
#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/x509.h>
d65 1
a65 10
static int init(EVP_MD_CTX *ctx)
	{ return SHA1_Init(ctx->md_data); }

static int update(EVP_MD_CTX *ctx,const void *data,unsigned long count)
	{ return SHA1_Update(ctx->md_data,data,count); }

static int final(EVP_MD_CTX *ctx,unsigned char *md)
	{ return SHA1_Final(md,ctx->md_data); }

static const EVP_MD dss1_md=
d70 3
a72 6
	0,
	init,
	update,
	final,
	NULL,
	NULL,
d78 1
a78 1
const EVP_MD *EVP_dss1(void)
a81 1
#endif
@


1.1.1.3
log
@import of openssl-0.9.7j
@
text
@a69 1
#ifndef OPENSSL_FIPS
a70 6
#else
	{
	OPENSSL_assert(sizeof(count)<=sizeof(size_t));
	return SHA1_Update(ctx->md_data,data,count);
	}
#endif
d80 1
a80 1
	EVP_MD_FLAG_FIPS,
@


1.1.1.4
log
@import of OpenSSL 0.9.8h
@
text
@d59 1
a61 3

#ifndef OPENSSL_NO_SHA

a64 3
#ifndef OPENSSL_NO_DSA
#include <openssl/dsa.h>
#endif
d69 2
a70 1
static int update(EVP_MD_CTX *ctx,const void *data,size_t count)
d72 6
d87 1
a87 1
	0,
@


1.1.1.5
log
@import openssl-0.9.8j
@
text
@a70 2
#ifndef OPENSSL_FIPS

a99 1
#endif
@


1.1.1.6
log
@import OpenSSL-1.0.0a
@
text
@d71 2
d87 1
a87 1
	EVP_MD_FLAG_PKEY_DIGEST,
d102 1
@


1.1.1.7
log
@import OpenSSL-1.0.1c
@
text
@a70 2
#ifndef OPENSSL_FIPS 

a99 1
#endif
@


1.1.1.8
log
@Import OpenSSL 1.0.1g
@
text
@d66 1
a66 1
#include <openssl/sha.h>
@


