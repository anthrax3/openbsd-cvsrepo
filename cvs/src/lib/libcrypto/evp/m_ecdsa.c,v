head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8;
locks; strict;
comment	@ * @;


1.8
date	2014.07.11.08.44.48;	author jsing;	state Exp;
branches;
next	1.7;
commitid	yQEL1wOWIearrW15;

1.7
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.6;
commitid	nzndm3zqPmFurSaK;

1.6
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.5;
commitid	mJUVYpkFBZ0Zv2bG;

1.5
date	2014.06.10.14.14.07;	author jsing;	state Exp;
branches;
next	1.4;
commitid	AsxCaxjMuq4pIb1Q;

1.4
date	2014.05.08.16.05.38;	author jsing;	state Exp;
branches;
next	1.3;

1.3
date	2014.05.08.16.01.06;	author jsing;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.15.20.06.10;	author tedu;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2010.10.01.22.54.07;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2012.10.13.21.23.40;	author djm;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Only import cryptlib.h in the four source files that actually need it.
Remove the openssl public includes from cryptlib.h and add a small number
of includes into the source files that actually need them. While here,
also sort/group/tidy the includes.

ok beck@@ miod@@
@
text
@/* $OpenBSD: m_ecdsa.c,v 1.7 2014/07/10 22:45:57 jsing Exp $ */
/* ====================================================================
 * Copyright (c) 1998-2002 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@openssl.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */
/* Copyright (C) 1995-1998 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 *
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 *
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 *
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#include <stdio.h>

#include <openssl/opensslconf.h>

#include <openssl/evp.h>
#include <openssl/objects.h>
#include <openssl/x509.h>

#ifndef OPENSSL_NO_SHA

static int
init(EVP_MD_CTX *ctx)
{
	return SHA1_Init(ctx->md_data);
}

static int
update(EVP_MD_CTX *ctx, const void *data, size_t count)
{
	return SHA1_Update(ctx->md_data, data, count);
}

static int
final(EVP_MD_CTX *ctx, unsigned char *md)
{
	return SHA1_Final(md, ctx->md_data);
}

static const EVP_MD ecdsa_md = {
	.type = NID_ecdsa_with_SHA1,
	.pkey_type = NID_ecdsa_with_SHA1,
	.md_size = SHA_DIGEST_LENGTH,
	.flags = EVP_MD_FLAG_PKEY_DIGEST,
	.init = init,
	.update = update,
	.final = final,
	.copy = NULL,
	.cleanup = NULL,
#ifndef OPENSSL_NO_ECDSA
	.sign = (evp_sign_method *)ECDSA_sign,
	.verify = (evp_verify_method *)ECDSA_verify,
	.required_pkey_type = {
		EVP_PKEY_EC, 0, 0, 0,
	},
#endif
	.block_size = SHA_CBLOCK,
	.ctx_size = sizeof(EVP_MD *) + sizeof(SHA_CTX),
};

const EVP_MD *
EVP_ecdsa(void)
{
	return (&ecdsa_md);
}
#endif
@


1.7
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: m_ecdsa.c,v 1.6 2014/06/12 15:49:29 deraadt Exp $ */
a115 1
#include "cryptlib.h"
@


1.6
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d113 3
@


1.5
log
@Use C99 initialisers for EVP_MD structs, for clarity, grepability and to
protect from future field reordering/removal.

No difference in generated assembly.
@
text
@d1 1
a1 1
/* crypto/evp/m_ecdsa.c */
@


1.4
log
@More KNF.
@
text
@d139 18
a156 12
	NID_ecdsa_with_SHA1,
	NID_ecdsa_with_SHA1,
	SHA_DIGEST_LENGTH,
	EVP_MD_FLAG_PKEY_DIGEST,
	init,
	update,
	final,
	NULL,
	NULL,
	EVP_PKEY_ECDSA_method,
	SHA_CBLOCK,
	sizeof(EVP_MD *) + sizeof(SHA_CTX),
@


1.3
log
@KNF.
@
text
@d120 2
a121 1
static int init(EVP_MD_CTX *ctx)
d126 2
a127 1
static int update(EVP_MD_CTX *ctx, const void *data, size_t count)
d132 2
a133 1
static int final(EVP_MD_CTX *ctx, unsigned char *md)
@


1.2
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d10 1
a10 1
 *    notice, this list of conditions and the following disclaimer. 
d61 1
a61 1
 * 
d68 1
a68 1
 * 
d75 1
a75 1
 * 
d90 1
a90 1
 * 4. If you include any Windows specific code (or a derivative thereof) from 
d93 1
a93 1
 * 
d105 1
a105 1
 * 
d121 13
a133 7
	{ return SHA1_Init(ctx->md_data); }

static int update(EVP_MD_CTX *ctx,const void *data,size_t count)
	{ return SHA1_Update(ctx->md_data,data,count); }

static int final(EVP_MD_CTX *ctx,unsigned char *md)
	{ return SHA1_Final(md,ctx->md_data); }
d135 1
a135 2
static const EVP_MD ecdsa_md=
	{
d147 2
a148 2
	sizeof(EVP_MD *)+sizeof(SHA_CTX),
	};
d150 5
a154 4
const EVP_MD *EVP_ecdsa(void)
	{
	return(&ecdsa_md);
	}
@


1.1
log
@Initial revision
@
text
@d119 1
d134 1
a134 1
	0,
@


1.1.1.1
log
@import of OpenSSL 0.9.8h
@
text
@@


1.1.1.2
log
@import OpenSSL-1.0.0a
@
text
@d133 1
a133 1
	EVP_MD_FLAG_PKEY_DIGEST,
@


1.1.1.3
log
@import OpenSSL-1.0.1c
@
text
@a118 2
#ifndef OPENSSL_FIPS

a147 1
#endif
@


