head	1.4;
access;
symbols
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.8
	OPENBSD_5_0:1.3.0.4
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.3.0.2
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.2.0.28
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.2.0.24
	OPENBSD_4_7_BASE:1.2
	OPENBSD_4_6:1.2.0.26
	OPENBSD_4_6_BASE:1.2
	OPENBSD_4_5:1.2.0.22
	OPENBSD_4_5_BASE:1.2
	pre_openssl_0_9_8h:1.2
	OPENBSD_4_4:1.2.0.20
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.2.0.18
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.16
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@ * @;


1.4
date	2013.01.26.06.10.22;	author djm;	state dead;
branches;
next	1.3;

1.3
date	2010.10.01.23.33.22;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2004.02.13.10.05.44;	author hshoexer;	state Exp;
branches;
next	1.1;

1.1
date	2004.01.23.16.58.43;	author hshoexer;	state Exp;
branches;
next	;


desc
@@


1.4
log
@remove ACSS, crank libcrypto major; ok markus@@ deraadt@@
@
text
@/*	$Id: e_acss.c,v 1.3 2010/10/01 23:33:22 djm Exp $	*/
/*
 * Copyright (c) 2004 The OpenBSD project
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#ifndef OPENSSL_NO_ACSS

#include "cryptlib.h"
#include <openssl/evp.h>
#include <openssl/objects.h>
#include "evp_locl.h"
#include <openssl/acss.h>

typedef struct {
    ACSS_KEY ks;
} EVP_ACSS_KEY;

#define data(ctx) EVP_C_DATA(EVP_ACSS_KEY,ctx)

static int acss_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
		const unsigned char *iv, int enc);
static int acss_ciph(EVP_CIPHER_CTX *ctx, unsigned char *out,
		const unsigned char *in, size_t inl);
static int acss_ctrl(EVP_CIPHER_CTX *ctx, int type, int arg, void *ptr);
static const EVP_CIPHER acss_cipher = {
	NID_undef,
	1,5,0,
	0,
	acss_init_key,
	acss_ciph,
	NULL,
	sizeof(EVP_ACSS_KEY),
	NULL,
	NULL,
	acss_ctrl,
	NULL
};

const
EVP_CIPHER *EVP_acss(void)
{
	return(&acss_cipher);
}

static int
acss_init_key(EVP_CIPHER_CTX *ctx, const unsigned char *key,
		const unsigned char *iv, int enc)
{
	acss_setkey(&data(ctx)->ks,key,enc,ACSS_MODE1);
	return 1;
}

static int
acss_ciph(EVP_CIPHER_CTX *ctx, unsigned char *out, const unsigned char *in,
		size_t inl)
{
	acss(&data(ctx)->ks,inl,in,out);
	return 1;
}

static int
acss_ctrl(EVP_CIPHER_CTX *ctx, int type, int arg, void *ptr)
{
	switch(type) {
	case EVP_CTRL_SET_ACSS_MODE:
		data(ctx)->ks.mode = arg;
		return 1;

	default:
		return -1;
	}
}
#endif
@


1.3
log
@fix -Wall due to API change
@
text
@d1 1
a1 1
/*	$Id: e_acss.c,v 1.2 2004/02/13 10:05:44 hshoexer Exp $	*/
@


1.2
log
@Cleanup and shrink ACSS_KEY a bit.  Thus crank library minor.
Change cipher modes to more generic names and add an additional mode.

ok deraadt@@ markus@@
@
text
@d1 1
a1 1
/*	$Id: e_acss.c,v 1.1 2004/01/23 16:58:43 hshoexer Exp $	*/
d35 1
a35 1
		const unsigned char *in, unsigned int inl);
d67 1
a67 1
		unsigned int inl)
@


1.1
log
@evp api and manual page for acss
ok deraadt@@ markus@@
@
text
@d1 1
a1 1
/*	$Id:$	*/
d61 1
a61 1
	acss_setkey(&data(ctx)->ks,key,enc,ACSS_DATA);
@

