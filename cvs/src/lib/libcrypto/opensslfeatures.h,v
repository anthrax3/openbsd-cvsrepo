head	1.15;
access;
symbols
	OPENBSD_6_2:1.15.0.2
	OPENBSD_6_2_BASE:1.15
	OPENBSD_6_1:1.13.0.4
	OPENBSD_6_1_BASE:1.13;
locks; strict;
comment	@ * @;


1.15
date	2017.08.31.16.27.31;	author jsing;	state Exp;
branches;
next	1.14;
commitid	lcMdE5fGIgPRWIkD;

1.14
date	2017.08.28.17.37.31;	author jsing;	state Exp;
branches;
next	1.13;
commitid	MfTcBOxzNKVqIlpN;

1.13
date	2015.09.14.01.45.03;	author doug;	state Exp;
branches;
next	1.12;
commitid	WI3ltGMbnAaZXz3O;

1.12
date	2015.09.13.23.36.21;	author doug;	state Exp;
branches;
next	1.11;
commitid	4CxCgJZcnC9PKUvF;

1.11
date	2015.09.13.21.09.56;	author doug;	state Exp;
branches;
next	1.10;
commitid	e818W60lrMrFrzEk;

1.10
date	2015.08.27.06.21.15;	author doug;	state Exp;
branches;
next	1.9;
commitid	81GzeBdk0eOTcvRE;

1.9
date	2015.07.19.22.34.27;	author doug;	state Exp;
branches;
next	1.8;
commitid	ayrDDFJT2T84Q0hD;

1.8
date	2015.06.20.01.07.24;	author doug;	state Exp;
branches;
next	1.7;
commitid	odUD1eZ4N02tuzg5;

1.7
date	2015.05.26.03.05.26;	author bcook;	state Exp;
branches;
next	1.6;
commitid	Y9FFBN4VCpVngbx5;

1.6
date	2014.11.18.05.31.47;	author miod;	state Exp;
branches;
next	1.5;
commitid	sTzQZgKpnCYes5bE;

1.5
date	2014.11.17.20.31.22;	author miod;	state Exp;
branches;
next	1.4;
commitid	ymruTYR6WPNRDFtT;

1.4
date	2014.07.11.15.14.33;	author tedu;	state Exp;
branches;
next	1.3;
commitid	SFP7S31PAGx5q0Gk;

1.3
date	2014.07.11.14.07.04;	author tedu;	state Exp;
branches;
next	1.2;
commitid	O2ztYd4kSTGuNgwz;

1.2
date	2014.07.11.14.03.40;	author tedu;	state Exp;
branches;
next	1.1;
commitid	VzXP7EeWjSah3qS2;

1.1
date	2014.07.11.14.01.38;	author tedu;	state Exp;
branches;
next	;
commitid	A0itYQ7rbGDw1qTV;


desc
@@


1.15
log
@Remove OPENSSL_NO_NEXTPROTONEG - some software creates conflicting
prototypes if we have both OPENSSL_NO_NEXTPROTONEG and the prototypes
defined.
@
text
@# define OPENSSL_NO_EC_NISTP_64_GCC_128
# define OPENSSL_NO_CMS
# define OPENSSL_NO_COMP
# define OPENSSL_NO_EGD
# define OPENSSL_NO_GMP
# define OPENSSL_NO_JPAKE
# define OPENSSL_NO_KRB5
# define OPENSSL_NO_MD2
# define OPENSSL_NO_MDC2
# define OPENSSL_NO_PSK
# define OPENSSL_NO_RC5
# define OPENSSL_NO_RFC3779
# define OPENSSL_NO_RSAX
# define OPENSSL_NO_SCTP
# define OPENSSL_NO_SEED
# define OPENSSL_NO_SHA0
# define OPENSSL_NO_SRP
# define OPENSSL_NO_SSL2
# define OPENSSL_NO_SSL3
# define OPENSSL_NO_SSL3_METHOD
# define OPENSSL_NO_STORE
# define OPENSSL_NO_BUF_FREELISTS
# define OPENSSL_NO_HEARTBEATS
# define OPENSSL_NO_DYNAMIC_ENGINE

# define OPENSSL_THREADS
@


1.14
log
@Define OPENSSL_NO_NEXTPROTONEG since there is no longer any NPN.
@
text
@a9 1
# define OPENSSL_NO_NEXTPROTONEG
@


1.13
log
@Temporarily revive MD4 for MS CHAP support.
@
text
@d10 1
@


1.12
log
@Remove MD4 support from LibreSSL.

MD4 should have been removed a long time ago.  Also, RFC 6150 moved it to
historic in 2011.  Rides the major crank from removing SHA-0.

Discussed with many including beck@@, millert@@, djm@@, sthen@@
ok jsing@@, input + ok bcook@@
@
text
@a8 1
# define OPENSSL_NO_MD4
@


1.11
log
@Remove SHA-0 support.

SHA-0 was withdrawn shortly after publication 20 years ago and replaced
with SHA-1.  This will require a major crank.

ok bcook@@, jsing@@
@
text
@d9 1
@


1.10
log
@Remove SSLv3 support from LibreSSL.

This is the first wave of SSLv3 removal which removes the main SSLv3
functions.  Future commits will remove the rest of the SSLv3 support.

Discussed the plan at c2k15.  Input from jsing@@, beck@@, miod@@, bcook@@,
sthen@@, naddy@@, and deraadt@@.

ok jsing@@, beck@@
@
text
@d16 1
@


1.9
log
@Remove OpenSSL engine RSAX.

OpenSSL stopped building it last year and removed it this year.
Based on OpenSSL commit c436e05bdc7f49985a750df64122c960240b3ae1.

Also cranked major version in libcrypto, libssl and libtls.

"fine with me" bcook@@ miod@@
@
text
@d18 2
@


1.8
log
@Remove obsolete MDC-2DES from libcrypto.

ok deraadt@@ jsing@@ miod@@
@
text
@d13 1
@


1.7
log
@Add OPENSSL_NO_EGD to opensslfeatures.h.

Since RAND_egd has been removed from LibreSSL, simplify porting software that
relies on it. See https://github.com/libressl-portable/openbsd/pull/34

from Bernard Spil, ok deraadt@@
@
text
@d9 1
@


1.6
log
@Enable the build of GOST routines in libcrypto. Riding upon the Cammelia
libcrypto minor bump.
@
text
@d4 1
@


1.5
log
@Add the Cammelia cipher to libcrypto.

There used to be a strong reluctance to provide this cipher in LibreSSL in the
past, because the licence terms under which Cammelia was released by NTT were
free-but-not-in-the-corners, by restricting the right to modify the source
code, as well retaining the right to enforce their patents against anyone
in the future.

However, as stated in http://www.ntt.co.jp/news/news06e/0604/060413a.html ,
NTT changed its mind and made this code truly free. We only wish there had
been more visibility of this, for we could have had enabled Cammelia
earlier (-:

Licence change noticed by deraadt@@. General agreement from the usual LibreSSL
suspects.

Crank libcrypto.so minor version due to the added symbols.
@
text
@a4 1
# define OPENSSL_NO_GOST
@


1.4
log
@it has been 4888 days since the transient feature to define short macros
for apps that haven't had time to make the appropriate changes was added.
time's up.
@
text
@a0 1
# define OPENSSL_NO_CAMELLIA
@


1.3
log
@additional features: no buffer freelists and no heartbleed
@
text
@d20 1
a20 1

a22 57
# define OPENSSL_NO_DYNAMIC_ENGINE

/* The OPENSSL_NO_* macros are also defined as NO_* if the application
   asks for it.  This is a transient feature that is provided for those
   who haven't had the time to do the appropriate changes in their
   applications.  */
#ifdef OPENSSL_ALGORITHM_DEFINES
# if defined(OPENSSL_NO_CAMELLIA) && !defined(NO_CAMELLIA)
#  define NO_CAMELLIA
# endif
# if defined(OPENSSL_NO_EC_NISTP_64_GCC_128) && !defined(NO_EC_NISTP_64_GCC_128)
#  define NO_EC_NISTP_64_GCC_128
# endif
# if defined(OPENSSL_NO_CMS) && !defined(NO_CMS)
#  define NO_CMS
# endif
# if defined(OPENSSL_NO_COMP) && !defined(NO_COMP)
#  define NO_COMP
# endif
# if defined(OPENSSL_NO_GMP) && !defined(NO_GMP)
#  define NO_GMP
# endif
# if defined(OPENSSL_NO_GOST) && !defined(NO_GOST)
#  define NO_GOST
# endif
# if defined(OPENSSL_NO_JPAKE) && !defined(NO_JPAKE)
#  define NO_JPAKE
# endif
# if defined(OPENSSL_NO_KRB5) && !defined(NO_KRB5)
#  define NO_KRB5
# endif
# if defined(OPENSSL_NO_MD2) && !defined(NO_MD2)
#  define NO_MD2
# endif
# if defined(OPENSSL_NO_RC5) && !defined(NO_RC5)
#  define NO_RC5
# endif
# if defined(OPENSSL_NO_RFC3779) && !defined(NO_RFC3779)
#  define NO_RFC3779
# endif
# if defined(OPENSSL_NO_SCTP) && !defined(NO_SCTP)
#  define NO_SCTP
# endif
# if defined(OPENSSL_NO_SEED) && !defined(NO_SEED)
#  define NO_SEED
# endif
# if defined(OPENSSL_NO_SRP) && !defined(NO_SRP)
#  define NO_SRP
# endif
# if defined(OPENSSL_NO_SSL2) && !defined(NO_SSL2)
#  define NO_SSL2
# endif
# if defined(OPENSSL_NO_STORE) && !defined(NO_STORE)
#  define NO_STORE
# endif
#endif

@


1.2
log
@no compression is also a feature of libressl
@
text
@d18 3
@


1.1
log
@move all the feature settings to a common header.
probably ok beck jsing miod
@
text
@d4 1
d35 3
@

