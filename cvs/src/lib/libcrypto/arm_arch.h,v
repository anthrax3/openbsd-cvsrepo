head	1.7;
access;
symbols
	OPENBSD_6_1_BASE:1.7;
locks; strict;
comment	@ * @;


1.7
date	2015.06.29.06.40.06;	author jsg;	state Exp;
branches;
next	1.6;
commitid	8w7JVawQhKizwn5O;

1.6
date	2014.12.07.15.37.27;	author miod;	state Exp;
branches;
next	1.5;
commitid	qAR0nvh691rJf78a;

1.5
date	2014.06.13.20.47.19;	author miod;	state Exp;
branches;
next	1.4;
commitid	11KnJvz5otyCOYmA;

1.4
date	2014.06.12.15.49.27;	author deraadt;	state Exp;
branches;
next	1.3;
commitid	mJUVYpkFBZ0Zv2bG;

1.3
date	2014.04.17.18.49.35;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2014.04.15.13.42.55;	author jsing;	state Exp;
branches;
next	1.1;

1.1
date	2012.10.13.21.23.33;	author djm;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.10.13.21.23.33;	author djm;	state Exp;
branches;
next	;


desc
@@


1.7
log
@fix the build on arm after the recent addition of -Wundef
ok doug@@ deraadt@@
@
text
@/* $OpenBSD: arm_arch.h,v 1.6 2014/12/07 15:37:27 miod Exp $ */
#ifndef __ARM_ARCH_H__
#define __ARM_ARCH_H__

#if !defined(__ARM_ARCH__)
# if defined(__CC_ARM)
#  define __ARM_ARCH__ __TARGET_ARCH_ARM
#  if defined(__BIG_ENDIAN)
#   define __ARMEB__
#  else
#   define __ARMEL__
#  endif
# elif defined(__GNUC__)
  /*
   * Why doesn't gcc define __ARM_ARCH__? Instead it defines
   * bunch of below macros. See all_architectures[] table in
   * gcc/config/arm/arm.c. On a side note it defines
   * __ARMEL__/__ARMEB__ for little-/big-endian.
   */
#  if	defined(__ARM_ARCH_7__)	|| defined(__ARM_ARCH_7A__)	|| \
	defined(__ARM_ARCH_7R__)|| defined(__ARM_ARCH_7M__)	|| \
	defined(__ARM_ARCH_7EM__)
#   define __ARM_ARCH__ 7
#  elif	defined(__ARM_ARCH_6__)	|| defined(__ARM_ARCH_6J__)	|| \
	defined(__ARM_ARCH_6K__)|| defined(__ARM_ARCH_6M__)	|| \
	defined(__ARM_ARCH_6Z__)|| defined(__ARM_ARCH_6ZK__)	|| \
	defined(__ARM_ARCH_6T2__)
#   define __ARM_ARCH__ 6
#  elif	defined(__ARM_ARCH_5__)	|| defined(__ARM_ARCH_5T__)	|| \
	defined(__ARM_ARCH_5E__)|| defined(__ARM_ARCH_5TE__)	|| \
	defined(__ARM_ARCH_5TEJ__)
#   define __ARM_ARCH__ 5
#  elif	defined(__ARM_ARCH_4__)	|| defined(__ARM_ARCH_4T__)
#   define __ARM_ARCH__ 4
#  else
#   error "unsupported ARM architecture"
#  endif
# endif
#endif

#if !defined(__ASSEMBLER__)
extern unsigned int OPENSSL_armcap_P;

#define ARMV7_NEON      (1<<0)
#endif

#endif
@


1.6
log
@Remove OPENSSL_FIPSCANISTER mentions.
@
text
@d1 1
a1 1
/* $OpenBSD: arm_arch.h,v 1.5 2014/06/13 20:47:19 miod Exp $ */
d41 1
a41 1
#if !__ASSEMBLER__
@


1.5
log
@typo
@
text
@d1 1
a1 1
/* $OpenBSD: arm_arch.h,v 1.4 2014/06/12 15:49:27 deraadt Exp $ */
a38 4
#endif

#ifdef OPENSSL_FIPSCANISTER
#include <openssl/fipssyms.h>
@


1.4
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d16 1
a16 1
   * bunch of below macros. See all_architectires[] table in
@


1.3
log
@Remove oh-so-important-from-a-security-pov OpenSSL_rtdsc() function.
@
text
@d1 1
@


1.2
log
@First pass at applying KNF to the OpenSSL code, which almost makes it
readable. This pass is whitespace only and can readily be verified using
tr and md5.
@
text
@a47 1
#define ARMV7_TICK      (1<<1)
@


1.1
log
@Initial revision
@
text
@d46 1
a46 1
                                     
@


1.1.1.1
log
@import OpenSSL-1.0.1c
@
text
@@
