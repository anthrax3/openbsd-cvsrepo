head	1.3;
access;
symbols
	OPENBSD_6_0:1.2.0.8
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.4
	OPENBSD_5_9_BASE:1.2
	OPENBSD_5_8:1.2.0.6
	OPENBSD_5_8_BASE:1.2
	OPENBSD_5_7:1.2.0.2
	OPENBSD_5_7_BASE:1.2
	OPENBSD_5_6:1.1.0.4
	OPENBSD_5_6_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2016.09.03.11.33.43;	author beck;	state dead;
branches;
next	1.2;
commitid	ffO8NTZyyIhwt1Pt;

1.2
date	2014.11.17.20.31.22;	author miod;	state Exp;
branches;
next	1.1;
commitid	ymruTYR6WPNRDFtT;

1.1
date	2014.05.03.11.41.05;	author miod;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Remove the libcrypto/crypto directory
@
text
@# $OpenBSD: Makefile.inc,v 1.2 2014/11/17 20:31:22 miod Exp $

# powerpc-specific libcrypto build rules

# aes
SRCS+= aes_core.c aes_cbc.c 
# slower than C code
#CFLAGS+= -DAES_ASM
#SSLASM+= aes aes-ppc aes-ppc
# bf
SRCS+= bf_enc.c
# bn
SSLASM+= bn ppc bn-ppc
SSLASM+= bn ppc-mont ppc-mont		# bn_mul_mont_int
#SSLASM+= bn ppc64-mont ppc64-mont	# bn_mul_mont_fpu64
CFLAGS+= -DOPENSSL_BN_ASM_MONT
# camellia
SRCS+= camellia.c cmll_cbc.c cmll_misc.c
# des
SRCS+= des_enc.c fcrypt_b.c
# rc4
SRCS+= rc4_enc.c rc4_skey.c
## rc5
#SRCS+= rc5_enc.c 
# sha
CFLAGS+= -DSHA1_ASM
SSLASM+= sha sha1-ppc sha1-ppc
CFLAGS+= -DSHA256_ASM
SSLASM+= sha sha512-ppc sha256-ppc
# whrlpool
SRCS+= wp_block.c

.for dir src dst in ${SSLASM}
SRCS+=	${dst}.S
GENERATED+=${dst}.S
${dst}.S: ${LCRYPTO_SRC}/${dir}/asm/${src}.pl
	/usr/bin/perl \
		${LCRYPTO_SRC}/${dir}/asm/${src}.pl linux32 ${.TARGET} > ${.TARGET}
.endfor

#CFLAGS+= -DOPENSSL_CPUID_OBJ		# it's commented out in ppccap.c
SRCS+=	ppccpuid.S ppccap.c
GENERATED+=ppccpuid.S
ppccpuid.S: ${LCRYPTO_SRC}/ppccpuid.pl
	/usr/bin/perl \
		${LCRYPTO_SRC}/ppccpuid.pl linux32 > ${.TARGET}
@


1.2
log
@Add the Cammelia cipher to libcrypto.

There used to be a strong reluctance to provide this cipher in LibreSSL in the
past, because the licence terms under which Cammelia was released by NTT were
free-but-not-in-the-corners, by restricting the right to modify the source
code, as well retaining the right to enforce their patents against anyone
in the future.

However, as stated in http://www.ntt.co.jp/news/news06e/0604/060413a.html ,
NTT changed its mind and made this code truly free. We only wish there had
been more visibility of this, for we could have had enabled Cammelia
earlier (-:

Licence change noticed by deraadt@@. General agreement from the usual LibreSSL
suspects.

Crank libcrypto.so minor version due to the added symbols.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.1 2014/05/03 11:41:05 miod Exp $
@


1.1
log
@Enable assembler bits for BN (Montgomery), SHA1 and SHA256.
Assembler bits for AES remain commented out as they run slower than the C code.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.inc,v 1.2 2014/05/02 18:21:39 miod Exp $
d17 2
@

