head	1.29;
access;
symbols
	OPENBSD_6_2_BASE:1.29
	OPENBSD_6_1:1.29.0.4
	OPENBSD_6_1_BASE:1.29;
locks; strict;
comment	@ * @;


1.29
date	2015.07.19.22.34.27;	author doug;	state Exp;
branches;
next	1.28;
commitid	ayrDDFJT2T84Q0hD;

1.28
date	2015.06.19.06.05.11;	author bcook;	state Exp;
branches;
next	1.27;
commitid	UoMmqRBqGwWCJkBW;

1.27
date	2015.02.07.13.19.15;	author doug;	state Exp;
branches;
next	1.26;
commitid	gtwLkRyWx0K1HbzX;

1.26
date	2014.07.10.22.45.57;	author jsing;	state Exp;
branches;
next	1.25;
commitid	nzndm3zqPmFurSaK;

1.25
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.24;
commitid	mJUVYpkFBZ0Zv2bG;

1.24
date	2014.06.11.01.53.02;	author deraadt;	state Exp;
branches;
next	1.23;
commitid	4evB2EbwDYaBfe0g;

1.23
date	2014.06.10.16.15.19;	author deraadt;	state Exp;
branches;
next	1.22;
commitid	i7ofdog6OmjCcKaT;

1.22
date	2014.06.10.15.20.40;	author jsing;	state Exp;
branches;
next	1.21;
commitid	bVia1atxAsS9lVc4;

1.21
date	2014.06.02.15.08.38;	author deraadt;	state Exp;
branches;
next	1.20;
commitid	tWDKJg0nrCJLQhsu;

1.20
date	2014.04.15.18.02.05;	author reyk;	state Exp;
branches;
next	1.19;

1.19
date	2014.04.14.16.49.10;	author reyk;	state Exp;
branches;
next	1.18;

1.18
date	2014.04.14.14.56.01;	author reyk;	state Exp;
branches;
next	1.17;

1.17
date	2014.04.14.10.03.00;	author reyk;	state Exp;
branches;
next	1.16;

1.16
date	2014.04.14.09.36.26;	author reyk;	state Exp;
branches;
next	1.15;

1.15
date	2014.04.13.19.04.55;	author reyk;	state Exp;
branches;
next	1.14;

1.14
date	2014.04.13.18.50.36;	author reyk;	state Exp;
branches;
next	1.13;

1.13
date	2014.04.13.18.31.41;	author reyk;	state Exp;
branches;
next	1.12;

1.12
date	2014.04.13.18.12.23;	author reyk;	state Exp;
branches;
next	1.11;

1.11
date	2014.04.13.17.48.39;	author reyk;	state Exp;
branches;
next	1.10;

1.10
date	2014.04.13.17.29.41;	author reyk;	state Exp;
branches;
next	1.9;

1.9
date	2014.04.13.15.25.33;	author miod;	state Exp;
branches;
next	1.8;

1.8
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.01.22.58.55;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2010.07.01.17.44.20;	author thib;	state Exp;
branches;
next	1.5;

1.5
date	2009.01.05.21.36.38;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.06.12.17.50;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2003.05.12.02.18.37;	author markus;	state Exp;
branches;
next	1.2;

1.2
date	2002.09.05.22.12.11;	author markus;	state Exp;
branches;
next	1.1;

1.1
date	2002.05.15.02.29.13;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.18;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2003.05.11.21.35.08;	author markus;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.43;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.13.55;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2010.10.01.22.54.07;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2012.10.13.21.23.39;	author djm;	state Exp;
branches;
next	;


desc
@@


1.29
log
@Remove OpenSSL engine RSAX.

OpenSSL stopped building it last year and removed it this year.
Based on OpenSSL commit c436e05bdc7f49985a750df64122c960240b3ae1.

Also cranked major version in libcrypto, libssl and libtls.

"fine with me" bcook@@ miod@@
@
text
@/* $OpenBSD: eng_all.c,v 1.28 2015/06/19 06:05:11 bcook Exp $ */
/* Written by Richard Levitte <richard@@levitte.org> for the OpenSSL
 * project 2000.
 */
/* ====================================================================
 * Copyright (c) 2000-2001 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    licensing@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

#include <openssl/opensslconf.h>

#include "cryptlib.h"
#include "eng_int.h"

void
ENGINE_load_builtin_engines(void)
{
	/* Some ENGINEs need this */
	OPENSSL_cpuid_setup();

#ifndef OPENSSL_NO_STATIC_ENGINE
#ifndef OPENSSL_NO_HW
#ifndef OPENSSL_NO_HW_PADLOCK
	ENGINE_load_padlock();
#endif
#endif
#endif
	ENGINE_register_all_complete();
}
@


1.28
log
@Disable ENGINE_load_dynamic (dynamic engine support).

We do not build, test or ship any dynamic engines, so we can remove the dynamic
engine loader as well. This leaves a stub initialization function in its place.

ok beck@@, reyk@@, miod@@
@
text
@d1 1
a1 1
/* $OpenBSD: eng_all.c,v 1.27 2015/02/07 13:19:15 doug Exp $ */
a69 3
#ifndef OPENSSL_NO_RSAX
	ENGINE_load_rsax();
#endif
@


1.27
log
@Delete a lot of #if 0 code in libressl.

There are a few instances where #if 1 is removed but the code remains.

Based on the following OpenSSL commits.  Some of the commits weren't
strictly deletions so they are going to be split up into separate commits.

6f91b017bbb7140f816721141ac156d1b828a6b3
3d47c1d331fdc7574d2275cda1a630ccdb624b08
dfb56425b68314b2b57e17c82c1df42e7a015132
c8fa2356a00cbaada8963f739e5570298311a060
f16a64d11f55c01f56baa62ebf1dec7f8fe718cb
9ccc00ef6ea65567622e40c49aca43f2c6d79cdb
02a938c953b3e1ced71d9a832de1618f907eb96d
75d0ebef2aef7a2c77b27575b8da898e22f3ccd5
d6fbb194095312f4722c81c9362dbd0de66cb656
6f1a93ad111c7dfe36a09a976c4c009079b19ea1
1a5adcfb5edfe23908b350f8757df405b0f5f71f
8de24b792743d11e1d5a0dcd336a49368750c577
a2b18e657ea1a932d125154f4e13ab2258796d90
8e964419603d2478dfb391c66e7ccb2dcc9776b4
32dfde107636ac9bc62a5b3233fe2a54dbc27008

input + ok jsing@@, miod@@, tedu@@
@
text
@d1 1
a1 1
/* $OpenBSD: eng_all.c,v 1.26 2014/07/10 22:45:57 jsing Exp $ */
a72 1
	ENGINE_load_dynamic();
@


1.26
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: eng_all.c,v 1.25 2014/06/12 15:49:29 deraadt Exp $ */
a68 7
#if 0
	/* There's no longer any need for an "openssl" ENGINE unless, one day,
	 * it is the *only* way for standard builtin implementations to be be
	 * accessed (ie. it would be possible to statically link binaries with
	 * *no* builtin implementations). */
	ENGINE_load_openssl();
#endif
@


1.25
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d58 2
@


1.24
log
@c-file-style hints, begone; ok beck
@
text
@d1 1
a1 1
/* crypto/engine/eng_all.c */
@


1.23
log
@Abandon the auto-ENGINE /dev/crypto interface.  VIA 3des cbc receives
collateral damage.

The syncronous nature of this mechanism has hampered performance for
symmetric crypto relative to brute-force cpu. The assymetric crypto
support never really materialized in drivers.

So abandon the complexity.
ok tedu beck mikeb
some disagrement from djm but if he wants to test /dev/crypto ciphers
he should do it without this this gigantic API in the way
@
text
@d1 1
a1 1
/* crypto/engine/eng_all.c -*- mode: C; c-file-style: "eay" -*- */
@


1.22
log
@KNF.
@
text
@d74 1
a74 3
#if !defined(OPENSSL_NO_HW) && (defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV))
	ENGINE_load_cryptodev();
#endif
a87 14

#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
void
ENGINE_setup_bsd_cryptodev(void)
{
	static int bsd_cryptodev_default_loaded = 0;

	if (!bsd_cryptodev_default_loaded) {
		ENGINE_load_cryptodev();
		ENGINE_register_all_complete();
	}
	bsd_cryptodev_default_loaded = 1;
}
#endif
@


1.21
log
@A few months back there was a big community fuss regarding direct-use
of the intel RDRAND instruction.  Consensus was RDRAND should probably
only be used as an additional source of entropy in a mixer.

Guess which library bends over backwards to provide easy access to
RDRAND?  Yep.  Guess which applications are using this support?  Not
even one... but still, this is being placed as a trap for someone.

Send this support straight to the abyss.
ok kettenis
@
text
@d13 1
a13 1
 *    notice, this list of conditions and the following disclaimer. 
d62 3
a64 2
void ENGINE_load_builtin_engines(void)
	{
d89 1
a89 1
	}
d92 3
a94 1
void ENGINE_setup_bsd_cryptodev(void) {
d96 1
d101 1
a101 1
	bsd_cryptodev_default_loaded=1;
@


1.20
log
@Remove the GOST engine: It is not compiled or used and depends on the
"dynamic engine" feature that is not enabled in our build.  People who
need it can still pull it out of the Attic; if it is to have a Russian
engine just because it's a Russian engine.

OK deraadt@@ beck@@
@
text
@a78 3
#ifndef OPENSSL_NO_RDRAND
	ENGINE_load_rdrand();
#endif
@


1.19
log
@Remove the GMP engine: It was an experimental engine using libgmp as
an alternative backend for BIGNUM calculations.  It is PoC code that
is not enabled in OpenSSL and probably not used by anymore.

ok deraadt@@
@
text
@a88 3
#ifndef OPENSSL_NO_GOST
	ENGINE_load_gost();
#endif
@


1.18
log
@Remove the CAPI engine: It is a backend for the Windows CryptoAPI and
could be maintained in an external package.

"it should probably go" beck@@
@
text
@a91 3
#ifndef OPENSSL_NO_GMP
	ENGINE_load_gmp();
#endif
@


1.17
log
@Remove the nuron engine.  The static engine is not standalone and the
FPGA-based device is long obsolete.
@
text
@a94 3
#if defined(OPENSSL_SYS_WIN32) && !defined(OPENSSL_NO_CAPIENG)
	ENGINE_load_capi();
#endif
@


1.16
log
@Remove the nCipher CHIL engine.  It is not standalone and depends on
external libraries that aren't covered by the same license.
@
text
@a84 3
#ifndef OPENSSL_NO_HW_NURON
	ENGINE_load_nuron();
#endif
@


1.15
log
@Remove the AEP engine: it is not standalone and doesn't seem to be
relevant anymore.  OpenSSL should have a better way to include 3rd
party engines: either completely and free or external.  But including
a wrapper for a non-free wrapper in the code base does not make much
sense and could also be provided by the vendor.

ok deraadt@@
@
text
@a84 3
#ifndef OPENSSL_NO_HW_NCIPHER
	ENGINE_load_chil();
#endif
@


1.14
log
@Remove the Atalla engine: It is not standalone and depends on external
non-free libraries.  OpenSSL should have a better way to include 3rd
party engines: either completely free or external.  But including a
wrapper for a non-free wrapper in the code base does not make much
sense and could also be provided by the vendor.

ok deraadt@@
@
text
@a84 3
#ifndef OPENSSL_NO_HW_AEP
	ENGINE_load_aep();
#endif
@


1.13
log
@Remove the cswift engine: it is not standalone and we don't have the
hardware.

The vendor_defns/cswift.h does not specify a copyright and
theoretically defaults to the OpenSSL license, but it also mentions
that it includes parts that have been "clipped" from CryptoSwift's
proprietary headers.  This file should better include an explicit
copyright statement or mention OpenSSL's library instead of the
ambiguous "Attribution notice".

ok deraadt@@
@
text
@a87 3
#ifndef OPENSSL_NO_HW_ATALLA
	ENGINE_load_atalla();
#endif
@


1.12
log
@Remove the "sureware" engine:
The vendor_defns/sureware.h file by Baltimore Technologies Ltd. has a
copyright that does not grant rights!

Vendor files should either include a compatible license in the
copyright statement or use OpenSSL's defaults, but adding a copyright
statement without any terms is not acceptable.  It should not have
been included in the first place.

ok deraadt@@
@
text
@a90 3
#ifndef OPENSSL_NO_HW_CSWIFT
	ENGINE_load_cswift();
#endif
@


1.11
log
@Remove the Broadcom ubsec engine:
The vendor_defns/hw_ubsec.h file has a copyright that does not grant rights!

Vendor files should either include a compatible license in the
copyright statement or use OpenSSL's defaults, but adding a copyright
statement without any terms is not acceptable.  It should not have
been included in the first place.

(The ubsec(4) kernel driver is not affected by this change)

ok deraadt@@
@
text
@a99 3
#ifndef OPENSSL_NO_HW_SUREWARE
	ENGINE_load_sureware();
#endif
@


1.10
log
@Remove the IBM 4758 engine: we don't have this hardware and it is an
old PCI accelerator that was EOL'ed in 2005.

ok deraadt@@
@
text
@a102 3
#ifndef OPENSSL_NO_HW_UBSEC
	ENGINE_load_ubsec();
#endif
@


1.9
log
@Merge conflicts; remove MacOS, Netware, OS/2, VMS and Windows build machinery.
@
text
@a84 3
#ifndef OPENSSL_NO_HW_4758_CCA
	ENGINE_load_4758cca();
#endif
@


1.8
log
@resolve conflicts
@
text
@a75 1

@


1.7
log
@resolve conflicts, fix local changes
@
text
@d64 2
d77 5
a81 2
#if !defined(OPENSSL_NO_HW) && !defined(OPENSSL_NO_HW_AESNI)
	ENGINE_load_aesni();
a82 1

d124 1
@


1.6
log
@AES-NI engine support for OpenSSL.
This is code mostly picked up from upstream OpenSSL, or to be more exact
a diff from David Woodhouse <dwmw2 at infradead dot org>.

Remember to make includes before doing a build!

no objections from djm@@
OK deraadt@@, reyk@@ (AES is about 4.25x faster on his x201 now)
@
text
@d64 1
a68 1
#if 0
d71 2
a72 2
#if !defined(OPENSSL_NO_HW) && !defined(OPENSSL_NO_HW_PADLOCK)
	ENGINE_load_padlock();
d106 2
a108 2
#if !defined(OPENSSL_NO_GMP) && !defined(OPENSSL_NO_HW_GMP)
	ENGINE_load_gmp();
d110 2
d113 2
a114 3
#ifndef OPENSSL_NO_HW
#if defined(__OpenBSD__) || defined(__FreeBSD__)
	ENGINE_load_cryptodev();
d122 1
a122 1
#if defined(__OpenBSD__) || defined(__FreeBSD__)
@


1.5
log
@update to openssl-0.9.8i; tested by several, especially krw@@
@
text
@d74 5
@


1.4
log
@resolve conflicts
@
text
@d110 3
@


1.3
log
@merge 0.9.7b with local changes; crank majors for libssl/libcrypto
@
text
@d59 1
a59 2
#include <openssl/err.h>
#include <openssl/engine.h>
d71 3
d75 1
d77 9
a91 3
#ifndef OPENSSL_NO_HW_ATALLA
	ENGINE_load_atalla();
#endif
d95 3
a100 2
#ifndef OPENSSL_NO_HW_AEP
	ENGINE_load_aep();
d102 2
a103 2
#ifndef OPENSSL_NO_HW_SUREWARE
	ENGINE_load_sureware();
a104 2
#ifndef OPENSSL_NO_HW_4758_CCA
	ENGINE_load_4758cca();
d106 1
@


1.2
log
@merge with 0.9.7-beta1
@
text
@a62 4
#ifdef __OpenBSD__
static int openbsd_default_loaded = 0;
#endif

d98 1
a98 4
#ifdef OPENSSL_OPENBSD_DEV_CRYPTO
	ENGINE_load_openbsd_dev_crypto();
#endif
#ifdef __OpenBSD__
d104 4
a107 3
#ifdef __OpenBSD__
void ENGINE_setup_openbsd(void) {
	if (!openbsd_default_loaded) {
d111 1
a111 1
	openbsd_default_loaded=1;
@


1.1
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d99 3
a119 2


@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d63 4
a98 3
#ifndef OPENSSL_NO_HW_4758_CCA
	ENGINE_load_4758cca();
#endif
d102 3
d107 12
@


1.1.1.2
log
@import 0.9.7b (without idea and rc5)
@
text
@d98 2
a99 2
#if defined(__OpenBSD__) || defined(__FreeBSD__)
	ENGINE_load_cryptodev();
a102 11

#if defined(__OpenBSD__) || defined(__FreeBSD__)
void ENGINE_setup_bsd_cryptodev(void) {
	static int bsd_cryptodev_default_loaded = 0;
	if (!bsd_cryptodev_default_loaded) {
		ENGINE_load_cryptodev();
		ENGINE_register_all_complete();
	}
	bsd_cryptodev_default_loaded=1;
}
#endif
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@d59 2
a60 1
#include "cryptlib.h"
a71 3
#if !defined(OPENSSL_NO_HW) && !defined(OPENSSL_NO_HW_PADLOCK)
	ENGINE_load_padlock();
#endif
a72 1
#ifndef OPENSSL_NO_STATIC_ENGINE
a73 9
#ifndef OPENSSL_NO_HW_4758_CCA
	ENGINE_load_4758cca();
#endif
#ifndef OPENSSL_NO_HW_AEP
	ENGINE_load_aep();
#endif
#ifndef OPENSSL_NO_HW_ATALLA
	ENGINE_load_atalla();
#endif
d80 3
a85 3
#ifndef OPENSSL_NO_HW_SUREWARE
	ENGINE_load_sureware();
#endif
d89 2
d92 2
a93 2
#if !defined(OPENSSL_NO_GMP) && !defined(OPENSSL_NO_HW_GMP)
	ENGINE_load_gmp();
d95 2
a97 1
#ifndef OPENSSL_NO_HW
@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@a109 3
#if defined(OPENSSL_SYS_WIN32) && !defined(OPENSSL_NO_CAPIENG)
	ENGINE_load_capi();
#endif
@


1.1.1.5
log
@import OpenSSL-1.0.0a
@
text
@a63 1
#if 0
d68 1
d71 2
a72 2
#if !defined(OPENSSL_NO_HW) && (defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV))
	ENGINE_load_cryptodev();
a100 2
#ifndef OPENSSL_NO_HW_PADLOCK
	ENGINE_load_padlock();
d102 2
a104 2
#ifndef OPENSSL_NO_GOST
	ENGINE_load_gost();
d106 3
a108 2
#ifndef OPENSSL_NO_GMP
	ENGINE_load_gmp();
d116 1
a116 1
#if defined(__OpenBSD__) || defined(__FreeBSD__) || defined(HAVE_CRYPTODEV)
@


1.1.1.6
log
@import OpenSSL-1.0.1c
@
text
@a63 2
	/* Some ENGINEs need this */
	OPENSSL_cpuid_setup();
a73 6
#ifndef OPENSSL_NO_RSAX
	ENGINE_load_rsax();
#endif
#ifndef OPENSSL_NO_RDRAND
	ENGINE_load_rdrand();
#endif
a114 1
	ENGINE_register_all_complete();
@


