head	1.9;
access;
symbols
	OPENBSD_6_1:1.9.0.2
	OPENBSD_6_1_BASE:1.9;
locks; strict;
comment	@ * @;


1.9
date	2017.01.29.17.49.23;	author beck;	state Exp;
branches;
next	1.8;
commitid	kT0fLt3r4lroFJra;

1.8
date	2014.07.10.22.45.56;	author jsing;	state Exp;
branches;
next	1.7;
commitid	nzndm3zqPmFurSaK;

1.7
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.6;
commitid	mJUVYpkFBZ0Zv2bG;

1.6
date	2014.04.19.15.30.17;	author jsing;	state Exp;
branches;
next	1.5;

1.5
date	2010.10.01.22.58.54;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.06.12.17.50;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2006.06.27.05.07.01;	author djm;	state Exp;
branches;
next	1.2;

1.2
date	2002.05.15.02.29.13;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	2000.12.15.02.57.34;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.16;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2006.06.27.05.05.32;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.43;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2010.10.01.22.54.06;	author djm;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Send the function codes from the error functions to the bit bucket,
as was done earlier in libssl. Thanks inoguchi@@ for noticing
libssl had more reacharounds into this.
ok jsing@@ inoguchi@@
@
text
@/* $OpenBSD: dso_err.c,v 1.8 2014/07/10 22:45:56 jsing Exp $ */
/* ====================================================================
 * Copyright (c) 1999-2006 The OpenSSL Project.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 *
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in
 *    the documentation and/or other materials provided with the
 *    distribution.
 *
 * 3. All advertising materials mentioning features or use of this
 *    software must display the following acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit. (http://www.OpenSSL.org/)"
 *
 * 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
 *    endorse or promote products derived from this software without
 *    prior written permission. For written permission, please contact
 *    openssl-core@@OpenSSL.org.
 *
 * 5. Products derived from this software may not be called "OpenSSL"
 *    nor may "OpenSSL" appear in their names without prior written
 *    permission of the OpenSSL Project.
 *
 * 6. Redistributions of any form whatsoever must retain the following
 *    acknowledgment:
 *    "This product includes software developed by the OpenSSL Project
 *    for use in the OpenSSL Toolkit (http://www.OpenSSL.org/)"
 *
 * THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
 * EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
 * ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
 * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
 * STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
 * OF THE POSSIBILITY OF SUCH DAMAGE.
 * ====================================================================
 *
 * This product includes cryptographic software written by Eric Young
 * (eay@@cryptsoft.com).  This product includes software written by Tim
 * Hudson (tjh@@cryptsoft.com).
 *
 */

/* NOTE: this file was auto generated by the mkerr.pl script: any changes
 * made to it will be overwritten when the script next updates this file,
 * only reason strings will be preserved.
 */

#include <stdio.h>

#include <openssl/opensslconf.h>

#include <openssl/err.h>
#include <openssl/dso.h>

/* BEGIN ERROR CODES */
#ifndef OPENSSL_NO_ERR

#define ERR_FUNC(func) ERR_PACK(ERR_LIB_DSO,func,0)
#define ERR_REASON(reason) ERR_PACK(ERR_LIB_DSO,0,reason)

static ERR_STRING_DATA DSO_str_functs[]= {
	{ERR_FUNC(0xfff), "CRYPTO_internal"},
	{0, NULL}
};

static ERR_STRING_DATA DSO_str_reasons[]= {
	{ERR_REASON(DSO_R_CTRL_FAILED)           , "control command failed"},
	{ERR_REASON(DSO_R_DSO_ALREADY_LOADED)    , "dso already loaded"},
	{ERR_REASON(DSO_R_EMPTY_FILE_STRUCTURE)  , "empty file structure"},
	{ERR_REASON(DSO_R_FAILURE)               , "failure"},
	{ERR_REASON(DSO_R_FILENAME_TOO_BIG)      , "filename too big"},
	{ERR_REASON(DSO_R_FINISH_FAILED)         , "cleanup method function failed"},
	{ERR_REASON(DSO_R_INCORRECT_FILE_SYNTAX) , "incorrect file syntax"},
	{ERR_REASON(DSO_R_LOAD_FAILED)           , "could not load the shared library"},
	{ERR_REASON(DSO_R_NAME_TRANSLATION_FAILED), "name translation failed"},
	{ERR_REASON(DSO_R_NO_FILENAME)           , "no filename"},
	{ERR_REASON(DSO_R_NO_FILE_SPECIFICATION) , "no file specification"},
	{ERR_REASON(DSO_R_NULL_HANDLE)           , "a null shared library handle was used"},
	{ERR_REASON(DSO_R_SET_FILENAME_FAILED)   , "set filename failed"},
	{ERR_REASON(DSO_R_STACK_ERROR)           , "the meth_data stack is corrupt"},
	{ERR_REASON(DSO_R_SYM_FAILURE)           , "could not bind to the requested symbol name"},
	{ERR_REASON(DSO_R_UNLOAD_FAILED)         , "could not unload the shared library"},
	{ERR_REASON(DSO_R_UNSUPPORTED)           , "functionality not supported"},
	{0, NULL}
};

#endif

void
ERR_load_DSO_strings(void)
{
#ifndef OPENSSL_NO_ERR
	if (ERR_func_error_string(DSO_str_functs[0].error) == NULL) {
		ERR_load_strings(0, DSO_str_functs);
		ERR_load_strings(0, DSO_str_reasons);
	}
#endif
}
@


1.8
log
@Explicitly include <openssl/opensslconf.h> in every file that references
an OPENSSL_NO_* define. This avoids relying on something else pulling it
in for us, plus it fixes several cases where the #ifndef OPENSSL_NO_XYZ is
never going to do anything, since OPENSSL_NO_XYZ will never defined, due
to the fact that opensslconf.h has not been included.

This also includes some miscellaneous sorting/tidying of headers.
@
text
@d1 1
a1 1
/* $OpenBSD: dso_err.c,v 1.7 2014/06/12 15:49:29 deraadt Exp $ */
d75 1
a75 49
	{ERR_FUNC(DSO_F_BEOS_BIND_FUNC),	"BEOS_BIND_FUNC"},
	{ERR_FUNC(DSO_F_BEOS_BIND_VAR),	"BEOS_BIND_VAR"},
	{ERR_FUNC(DSO_F_BEOS_LOAD),	"BEOS_LOAD"},
	{ERR_FUNC(DSO_F_BEOS_NAME_CONVERTER),	"BEOS_NAME_CONVERTER"},
	{ERR_FUNC(DSO_F_BEOS_UNLOAD),	"BEOS_UNLOAD"},
	{ERR_FUNC(DSO_F_DLFCN_BIND_FUNC),	"DLFCN_BIND_FUNC"},
	{ERR_FUNC(DSO_F_DLFCN_BIND_VAR),	"DLFCN_BIND_VAR"},
	{ERR_FUNC(DSO_F_DLFCN_LOAD),	"DLFCN_LOAD"},
	{ERR_FUNC(DSO_F_DLFCN_MERGER),	"DLFCN_MERGER"},
	{ERR_FUNC(DSO_F_DLFCN_NAME_CONVERTER),	"DLFCN_NAME_CONVERTER"},
	{ERR_FUNC(DSO_F_DLFCN_UNLOAD),	"DLFCN_UNLOAD"},
	{ERR_FUNC(DSO_F_DL_BIND_FUNC),	"DL_BIND_FUNC"},
	{ERR_FUNC(DSO_F_DL_BIND_VAR),	"DL_BIND_VAR"},
	{ERR_FUNC(DSO_F_DL_LOAD),	"DL_LOAD"},
	{ERR_FUNC(DSO_F_DL_MERGER),	"DL_MERGER"},
	{ERR_FUNC(DSO_F_DL_NAME_CONVERTER),	"DL_NAME_CONVERTER"},
	{ERR_FUNC(DSO_F_DL_UNLOAD),	"DL_UNLOAD"},
	{ERR_FUNC(DSO_F_DSO_BIND_FUNC),	"DSO_bind_func"},
	{ERR_FUNC(DSO_F_DSO_BIND_VAR),	"DSO_bind_var"},
	{ERR_FUNC(DSO_F_DSO_CONVERT_FILENAME),	"DSO_convert_filename"},
	{ERR_FUNC(DSO_F_DSO_CTRL),	"DSO_ctrl"},
	{ERR_FUNC(DSO_F_DSO_FREE),	"DSO_free"},
	{ERR_FUNC(DSO_F_DSO_GET_FILENAME),	"DSO_get_filename"},
	{ERR_FUNC(DSO_F_DSO_GET_LOADED_FILENAME),	"DSO_get_loaded_filename"},
	{ERR_FUNC(DSO_F_DSO_GLOBAL_LOOKUP),	"DSO_global_lookup"},
	{ERR_FUNC(DSO_F_DSO_LOAD),	"DSO_load"},
	{ERR_FUNC(DSO_F_DSO_MERGE),	"DSO_merge"},
	{ERR_FUNC(DSO_F_DSO_NEW_METHOD),	"DSO_new_method"},
	{ERR_FUNC(DSO_F_DSO_PATHBYADDR),	"DSO_pathbyaddr"},
	{ERR_FUNC(DSO_F_DSO_SET_FILENAME),	"DSO_set_filename"},
	{ERR_FUNC(DSO_F_DSO_SET_NAME_CONVERTER),	"DSO_set_name_converter"},
	{ERR_FUNC(DSO_F_DSO_UP_REF),	"DSO_up_ref"},
	{ERR_FUNC(DSO_F_GLOBAL_LOOKUP_FUNC),	"GLOBAL_LOOKUP_FUNC"},
	{ERR_FUNC(DSO_F_PATHBYADDR),	"PATHBYADDR"},
	{ERR_FUNC(DSO_F_VMS_BIND_SYM),	"VMS_BIND_SYM"},
	{ERR_FUNC(DSO_F_VMS_LOAD),	"VMS_LOAD"},
	{ERR_FUNC(DSO_F_VMS_MERGER),	"VMS_MERGER"},
	{ERR_FUNC(DSO_F_VMS_UNLOAD),	"VMS_UNLOAD"},
	{ERR_FUNC(DSO_F_WIN32_BIND_FUNC),	"WIN32_BIND_FUNC"},
	{ERR_FUNC(DSO_F_WIN32_BIND_VAR),	"WIN32_BIND_VAR"},
	{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP),	"WIN32_GLOBALLOOKUP"},
	{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP_FUNC),	"WIN32_GLOBALLOOKUP_FUNC"},
	{ERR_FUNC(DSO_F_WIN32_JOINER),	"WIN32_JOINER"},
	{ERR_FUNC(DSO_F_WIN32_LOAD),	"WIN32_LOAD"},
	{ERR_FUNC(DSO_F_WIN32_MERGER),	"WIN32_MERGER"},
	{ERR_FUNC(DSO_F_WIN32_NAME_CONVERTER),	"WIN32_NAME_CONVERTER"},
	{ERR_FUNC(DSO_F_WIN32_PATHBYADDR),	"WIN32_PATHBYADDR"},
	{ERR_FUNC(DSO_F_WIN32_SPLITTER),	"WIN32_SPLITTER"},
	{ERR_FUNC(DSO_F_WIN32_UNLOAD),	"WIN32_UNLOAD"},
@


1.7
log
@tags as requested by miod and tedu
@
text
@d1 1
a1 1
/* $OpenBSD$ */
d62 3
@


1.6
log
@KNF.
@
text
@d1 1
a1 1
/* crypto/dso/dso_err.c */
@


1.5
log
@resolve conflicts, fix local changes
@
text
@d10 1
a10 1
 *    notice, this list of conditions and the following disclaimer. 
d71 73
a143 75
static ERR_STRING_DATA DSO_str_functs[]=
	{
{ERR_FUNC(DSO_F_BEOS_BIND_FUNC),	"BEOS_BIND_FUNC"},
{ERR_FUNC(DSO_F_BEOS_BIND_VAR),	"BEOS_BIND_VAR"},
{ERR_FUNC(DSO_F_BEOS_LOAD),	"BEOS_LOAD"},
{ERR_FUNC(DSO_F_BEOS_NAME_CONVERTER),	"BEOS_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_BEOS_UNLOAD),	"BEOS_UNLOAD"},
{ERR_FUNC(DSO_F_DLFCN_BIND_FUNC),	"DLFCN_BIND_FUNC"},
{ERR_FUNC(DSO_F_DLFCN_BIND_VAR),	"DLFCN_BIND_VAR"},
{ERR_FUNC(DSO_F_DLFCN_LOAD),	"DLFCN_LOAD"},
{ERR_FUNC(DSO_F_DLFCN_MERGER),	"DLFCN_MERGER"},
{ERR_FUNC(DSO_F_DLFCN_NAME_CONVERTER),	"DLFCN_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_DLFCN_UNLOAD),	"DLFCN_UNLOAD"},
{ERR_FUNC(DSO_F_DL_BIND_FUNC),	"DL_BIND_FUNC"},
{ERR_FUNC(DSO_F_DL_BIND_VAR),	"DL_BIND_VAR"},
{ERR_FUNC(DSO_F_DL_LOAD),	"DL_LOAD"},
{ERR_FUNC(DSO_F_DL_MERGER),	"DL_MERGER"},
{ERR_FUNC(DSO_F_DL_NAME_CONVERTER),	"DL_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_DL_UNLOAD),	"DL_UNLOAD"},
{ERR_FUNC(DSO_F_DSO_BIND_FUNC),	"DSO_bind_func"},
{ERR_FUNC(DSO_F_DSO_BIND_VAR),	"DSO_bind_var"},
{ERR_FUNC(DSO_F_DSO_CONVERT_FILENAME),	"DSO_convert_filename"},
{ERR_FUNC(DSO_F_DSO_CTRL),	"DSO_ctrl"},
{ERR_FUNC(DSO_F_DSO_FREE),	"DSO_free"},
{ERR_FUNC(DSO_F_DSO_GET_FILENAME),	"DSO_get_filename"},
{ERR_FUNC(DSO_F_DSO_GET_LOADED_FILENAME),	"DSO_get_loaded_filename"},
{ERR_FUNC(DSO_F_DSO_GLOBAL_LOOKUP),	"DSO_global_lookup"},
{ERR_FUNC(DSO_F_DSO_LOAD),	"DSO_load"},
{ERR_FUNC(DSO_F_DSO_MERGE),	"DSO_merge"},
{ERR_FUNC(DSO_F_DSO_NEW_METHOD),	"DSO_new_method"},
{ERR_FUNC(DSO_F_DSO_PATHBYADDR),	"DSO_pathbyaddr"},
{ERR_FUNC(DSO_F_DSO_SET_FILENAME),	"DSO_set_filename"},
{ERR_FUNC(DSO_F_DSO_SET_NAME_CONVERTER),	"DSO_set_name_converter"},
{ERR_FUNC(DSO_F_DSO_UP_REF),	"DSO_up_ref"},
{ERR_FUNC(DSO_F_GLOBAL_LOOKUP_FUNC),	"GLOBAL_LOOKUP_FUNC"},
{ERR_FUNC(DSO_F_PATHBYADDR),	"PATHBYADDR"},
{ERR_FUNC(DSO_F_VMS_BIND_SYM),	"VMS_BIND_SYM"},
{ERR_FUNC(DSO_F_VMS_LOAD),	"VMS_LOAD"},
{ERR_FUNC(DSO_F_VMS_MERGER),	"VMS_MERGER"},
{ERR_FUNC(DSO_F_VMS_UNLOAD),	"VMS_UNLOAD"},
{ERR_FUNC(DSO_F_WIN32_BIND_FUNC),	"WIN32_BIND_FUNC"},
{ERR_FUNC(DSO_F_WIN32_BIND_VAR),	"WIN32_BIND_VAR"},
{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP),	"WIN32_GLOBALLOOKUP"},
{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP_FUNC),	"WIN32_GLOBALLOOKUP_FUNC"},
{ERR_FUNC(DSO_F_WIN32_JOINER),	"WIN32_JOINER"},
{ERR_FUNC(DSO_F_WIN32_LOAD),	"WIN32_LOAD"},
{ERR_FUNC(DSO_F_WIN32_MERGER),	"WIN32_MERGER"},
{ERR_FUNC(DSO_F_WIN32_NAME_CONVERTER),	"WIN32_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_WIN32_PATHBYADDR),	"WIN32_PATHBYADDR"},
{ERR_FUNC(DSO_F_WIN32_SPLITTER),	"WIN32_SPLITTER"},
{ERR_FUNC(DSO_F_WIN32_UNLOAD),	"WIN32_UNLOAD"},
{0,NULL}
	};

static ERR_STRING_DATA DSO_str_reasons[]=
	{
{ERR_REASON(DSO_R_CTRL_FAILED)           ,"control command failed"},
{ERR_REASON(DSO_R_DSO_ALREADY_LOADED)    ,"dso already loaded"},
{ERR_REASON(DSO_R_EMPTY_FILE_STRUCTURE)  ,"empty file structure"},
{ERR_REASON(DSO_R_FAILURE)               ,"failure"},
{ERR_REASON(DSO_R_FILENAME_TOO_BIG)      ,"filename too big"},
{ERR_REASON(DSO_R_FINISH_FAILED)         ,"cleanup method function failed"},
{ERR_REASON(DSO_R_INCORRECT_FILE_SYNTAX) ,"incorrect file syntax"},
{ERR_REASON(DSO_R_LOAD_FAILED)           ,"could not load the shared library"},
{ERR_REASON(DSO_R_NAME_TRANSLATION_FAILED),"name translation failed"},
{ERR_REASON(DSO_R_NO_FILENAME)           ,"no filename"},
{ERR_REASON(DSO_R_NO_FILE_SPECIFICATION) ,"no file specification"},
{ERR_REASON(DSO_R_NULL_HANDLE)           ,"a null shared library handle was used"},
{ERR_REASON(DSO_R_SET_FILENAME_FAILED)   ,"set filename failed"},
{ERR_REASON(DSO_R_STACK_ERROR)           ,"the meth_data stack is corrupt"},
{ERR_REASON(DSO_R_SYM_FAILURE)           ,"could not bind to the requested symbol name"},
{ERR_REASON(DSO_R_UNLOAD_FAILED)         ,"could not unload the shared library"},
{ERR_REASON(DSO_R_UNSUPPORTED)           ,"functionality not supported"},
{0,NULL}
	};
d147 3
a149 2
void ERR_load_DSO_strings(void)
	{
d151 4
a154 6

	if (ERR_func_error_string(DSO_str_functs[0].error) == NULL)
		{
		ERR_load_strings(0,DSO_str_functs);
		ERR_load_strings(0,DSO_str_reasons);
		}
d156 1
a156 1
	}
@


1.4
log
@resolve conflicts
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved.
d73 5
d97 1
d101 1
d105 2
d113 2
d119 1
@


1.3
log
@resolve conflicts
@
text
@d76 1
d82 1
d93 1
d98 1
a98 1
{ERR_FUNC(DSO_F_VMS_BIND_VAR),	"VMS_BIND_VAR"},
d100 1
d104 1
d106 1
d108 1
d117 2
d121 1
d125 1
d139 1
a139 1
	static int init=1;
d141 1
a141 1
	if (init)
a142 2
		init=0;
#ifndef OPENSSL_NO_ERR
d145 1
a146 2

		}
@


1.2
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d3 1
a3 1
 * Copyright (c) 1999 The OpenSSL Project.  All rights reserved.
d67 4
d73 30
a102 30
{ERR_PACK(0,DSO_F_DLFCN_BIND_FUNC,0),	"DLFCN_BIND_FUNC"},
{ERR_PACK(0,DSO_F_DLFCN_BIND_VAR,0),	"DLFCN_BIND_VAR"},
{ERR_PACK(0,DSO_F_DLFCN_LOAD,0),	"DLFCN_LOAD"},
{ERR_PACK(0,DSO_F_DLFCN_NAME_CONVERTER,0),	"DLFCN_NAME_CONVERTER"},
{ERR_PACK(0,DSO_F_DLFCN_UNLOAD,0),	"DLFCN_UNLOAD"},
{ERR_PACK(0,DSO_F_DL_BIND_FUNC,0),	"DL_BIND_FUNC"},
{ERR_PACK(0,DSO_F_DL_BIND_VAR,0),	"DL_BIND_VAR"},
{ERR_PACK(0,DSO_F_DL_LOAD,0),	"DL_LOAD"},
{ERR_PACK(0,DSO_F_DL_NAME_CONVERTER,0),	"DL_NAME_CONVERTER"},
{ERR_PACK(0,DSO_F_DL_UNLOAD,0),	"DL_UNLOAD"},
{ERR_PACK(0,DSO_F_DSO_BIND_FUNC,0),	"DSO_bind_func"},
{ERR_PACK(0,DSO_F_DSO_BIND_VAR,0),	"DSO_bind_var"},
{ERR_PACK(0,DSO_F_DSO_CONVERT_FILENAME,0),	"DSO_convert_filename"},
{ERR_PACK(0,DSO_F_DSO_CTRL,0),	"DSO_ctrl"},
{ERR_PACK(0,DSO_F_DSO_FREE,0),	"DSO_free"},
{ERR_PACK(0,DSO_F_DSO_GET_FILENAME,0),	"DSO_get_filename"},
{ERR_PACK(0,DSO_F_DSO_GET_LOADED_FILENAME,0),	"DSO_get_loaded_filename"},
{ERR_PACK(0,DSO_F_DSO_LOAD,0),	"DSO_load"},
{ERR_PACK(0,DSO_F_DSO_NEW_METHOD,0),	"DSO_new_method"},
{ERR_PACK(0,DSO_F_DSO_SET_FILENAME,0),	"DSO_set_filename"},
{ERR_PACK(0,DSO_F_DSO_SET_NAME_CONVERTER,0),	"DSO_set_name_converter"},
{ERR_PACK(0,DSO_F_DSO_UP_REF,0),	"DSO_up_ref"},
{ERR_PACK(0,DSO_F_VMS_BIND_VAR,0),	"VMS_BIND_VAR"},
{ERR_PACK(0,DSO_F_VMS_LOAD,0),	"VMS_LOAD"},
{ERR_PACK(0,DSO_F_VMS_UNLOAD,0),	"VMS_UNLOAD"},
{ERR_PACK(0,DSO_F_WIN32_BIND_FUNC,0),	"WIN32_BIND_FUNC"},
{ERR_PACK(0,DSO_F_WIN32_BIND_VAR,0),	"WIN32_BIND_VAR"},
{ERR_PACK(0,DSO_F_WIN32_LOAD,0),	"WIN32_LOAD"},
{ERR_PACK(0,DSO_F_WIN32_NAME_CONVERTER,0),	"WIN32_NAME_CONVERTER"},
{ERR_PACK(0,DSO_F_WIN32_UNLOAD,0),	"WIN32_UNLOAD"},
d108 13
a120 13
{DSO_R_CTRL_FAILED                       ,"control command failed"},
{DSO_R_DSO_ALREADY_LOADED                ,"dso already loaded"},
{DSO_R_FILENAME_TOO_BIG                  ,"filename too big"},
{DSO_R_FINISH_FAILED                     ,"cleanup method function failed"},
{DSO_R_LOAD_FAILED                       ,"could not load the shared library"},
{DSO_R_NAME_TRANSLATION_FAILED           ,"name translation failed"},
{DSO_R_NO_FILENAME                       ,"no filename"},
{DSO_R_NULL_HANDLE                       ,"a null shared library handle was used"},
{DSO_R_SET_FILENAME_FAILED               ,"set filename failed"},
{DSO_R_STACK_ERROR                       ,"the meth_data stack is corrupt"},
{DSO_R_SYM_FAILURE                       ,"could not bind to the requested symbol name"},
{DSO_R_UNLOAD_FAILED                     ,"could not unload the shared library"},
{DSO_R_UNSUPPORTED                       ,"functionality not supported"},
d134 2
a135 2
		ERR_load_strings(ERR_LIB_DSO,DSO_str_functs);
		ERR_load_strings(ERR_LIB_DSO,DSO_str_reasons);
@


1.1
log
@openssl-engine-0.9.6 merge
@
text
@d66 1
a66 1
#ifndef NO_ERR
a70 1
{ERR_PACK(0,DSO_F_DLFCN_CTRL,0),	"DLFCN_CTRL"},
d72 1
a75 1
{ERR_PACK(0,DSO_F_DL_CTRL,0),	"DL_CTRL"},
d77 1
d81 1
d84 2
d88 3
a90 1
{ERR_PACK(0,DSO_F_DSO_UP,0),	"DSO_up"},
a91 1
{ERR_PACK(0,DSO_F_VMS_CTRL,0),	"VMS_CTRL"},
a95 1
{ERR_PACK(0,DSO_F_WIN32_CTRL,0),	"WIN32_CTRL"},
d97 1
d105 1
d109 2
d112 1
a114 1
{DSO_R_UNKNOWN_COMMAND                   ,"unknown control command"},
d129 1
a129 1
#ifndef NO_ERR
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d66 1
a66 1
#ifndef OPENSSL_NO_ERR
d71 1
a72 1
{ERR_PACK(0,DSO_F_DLFCN_NAME_CONVERTER,0),	"DLFCN_NAME_CONVERTER"},
d76 1
a77 1
{ERR_PACK(0,DSO_F_DL_NAME_CONVERTER,0),	"DL_NAME_CONVERTER"},
a80 1
{ERR_PACK(0,DSO_F_DSO_CONVERT_FILENAME,0),	"DSO_convert_filename"},
a82 2
{ERR_PACK(0,DSO_F_DSO_GET_FILENAME,0),	"DSO_get_filename"},
{ERR_PACK(0,DSO_F_DSO_GET_LOADED_FILENAME,0),	"DSO_get_loaded_filename"},
d85 1
a85 3
{ERR_PACK(0,DSO_F_DSO_SET_FILENAME,0),	"DSO_set_filename"},
{ERR_PACK(0,DSO_F_DSO_SET_NAME_CONVERTER,0),	"DSO_set_name_converter"},
{ERR_PACK(0,DSO_F_DSO_UP_REF,0),	"DSO_up_ref"},
d87 1
d92 1
a93 1
{ERR_PACK(0,DSO_F_WIN32_NAME_CONVERTER,0),	"WIN32_NAME_CONVERTER"},
a100 1
{DSO_R_DSO_ALREADY_LOADED                ,"dso already loaded"},
a103 2
{DSO_R_NAME_TRANSLATION_FAILED           ,"name translation failed"},
{DSO_R_NO_FILENAME                       ,"no filename"},
a104 1
{DSO_R_SET_FILENAME_FAILED               ,"set filename failed"},
d107 1
d122 1
a122 1
#ifndef OPENSSL_NO_ERR
@


1.1.1.2
log
@import of openssl-0.9.7j
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2005 The OpenSSL Project.  All rights reserved.
a66 4

#define ERR_FUNC(func) ERR_PACK(ERR_LIB_DSO,func,0)
#define ERR_REASON(reason) ERR_PACK(ERR_LIB_DSO,0,reason)

d69 30
a98 30
{ERR_FUNC(DSO_F_DLFCN_BIND_FUNC),	"DLFCN_BIND_FUNC"},
{ERR_FUNC(DSO_F_DLFCN_BIND_VAR),	"DLFCN_BIND_VAR"},
{ERR_FUNC(DSO_F_DLFCN_LOAD),	"DLFCN_LOAD"},
{ERR_FUNC(DSO_F_DLFCN_NAME_CONVERTER),	"DLFCN_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_DLFCN_UNLOAD),	"DLFCN_UNLOAD"},
{ERR_FUNC(DSO_F_DL_BIND_FUNC),	"DL_BIND_FUNC"},
{ERR_FUNC(DSO_F_DL_BIND_VAR),	"DL_BIND_VAR"},
{ERR_FUNC(DSO_F_DL_LOAD),	"DL_LOAD"},
{ERR_FUNC(DSO_F_DL_NAME_CONVERTER),	"DL_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_DL_UNLOAD),	"DL_UNLOAD"},
{ERR_FUNC(DSO_F_DSO_BIND_FUNC),	"DSO_bind_func"},
{ERR_FUNC(DSO_F_DSO_BIND_VAR),	"DSO_bind_var"},
{ERR_FUNC(DSO_F_DSO_CONVERT_FILENAME),	"DSO_convert_filename"},
{ERR_FUNC(DSO_F_DSO_CTRL),	"DSO_ctrl"},
{ERR_FUNC(DSO_F_DSO_FREE),	"DSO_free"},
{ERR_FUNC(DSO_F_DSO_GET_FILENAME),	"DSO_get_filename"},
{ERR_FUNC(DSO_F_DSO_GET_LOADED_FILENAME),	"DSO_get_loaded_filename"},
{ERR_FUNC(DSO_F_DSO_LOAD),	"DSO_load"},
{ERR_FUNC(DSO_F_DSO_NEW_METHOD),	"DSO_new_method"},
{ERR_FUNC(DSO_F_DSO_SET_FILENAME),	"DSO_set_filename"},
{ERR_FUNC(DSO_F_DSO_SET_NAME_CONVERTER),	"DSO_set_name_converter"},
{ERR_FUNC(DSO_F_DSO_UP_REF),	"DSO_up_ref"},
{ERR_FUNC(DSO_F_VMS_BIND_VAR),	"VMS_BIND_VAR"},
{ERR_FUNC(DSO_F_VMS_LOAD),	"VMS_LOAD"},
{ERR_FUNC(DSO_F_VMS_UNLOAD),	"VMS_UNLOAD"},
{ERR_FUNC(DSO_F_WIN32_BIND_FUNC),	"WIN32_BIND_FUNC"},
{ERR_FUNC(DSO_F_WIN32_BIND_VAR),	"WIN32_BIND_VAR"},
{ERR_FUNC(DSO_F_WIN32_LOAD),	"WIN32_LOAD"},
{ERR_FUNC(DSO_F_WIN32_NAME_CONVERTER),	"WIN32_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_WIN32_UNLOAD),	"WIN32_UNLOAD"},
d104 13
a116 13
{ERR_REASON(DSO_R_CTRL_FAILED)           ,"control command failed"},
{ERR_REASON(DSO_R_DSO_ALREADY_LOADED)    ,"dso already loaded"},
{ERR_REASON(DSO_R_FILENAME_TOO_BIG)      ,"filename too big"},
{ERR_REASON(DSO_R_FINISH_FAILED)         ,"cleanup method function failed"},
{ERR_REASON(DSO_R_LOAD_FAILED)           ,"could not load the shared library"},
{ERR_REASON(DSO_R_NAME_TRANSLATION_FAILED),"name translation failed"},
{ERR_REASON(DSO_R_NO_FILENAME)           ,"no filename"},
{ERR_REASON(DSO_R_NULL_HANDLE)           ,"a null shared library handle was used"},
{ERR_REASON(DSO_R_SET_FILENAME_FAILED)   ,"set filename failed"},
{ERR_REASON(DSO_R_STACK_ERROR)           ,"the meth_data stack is corrupt"},
{ERR_REASON(DSO_R_SYM_FAILURE)           ,"could not bind to the requested symbol name"},
{ERR_REASON(DSO_R_UNLOAD_FAILED)         ,"could not unload the shared library"},
{ERR_REASON(DSO_R_UNSUPPORTED)           ,"functionality not supported"},
d130 2
a131 2
		ERR_load_strings(0,DSO_str_functs);
		ERR_load_strings(0,DSO_str_reasons);
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@a75 1
{ERR_FUNC(DSO_F_DLFCN_MERGER),	"DLFCN_MERGER"},
a80 1
{ERR_FUNC(DSO_F_DL_MERGER),	"DL_MERGER"},
a90 1
{ERR_FUNC(DSO_F_DSO_MERGE),	"DSO_merge"},
d95 1
a95 1
{ERR_FUNC(DSO_F_VMS_BIND_SYM),	"VMS_BIND_SYM"},
a96 1
{ERR_FUNC(DSO_F_VMS_MERGER),	"VMS_MERGER"},
a99 1
{ERR_FUNC(DSO_F_WIN32_JOINER),	"WIN32_JOINER"},
a100 1
{ERR_FUNC(DSO_F_WIN32_MERGER),	"WIN32_MERGER"},
a101 1
{ERR_FUNC(DSO_F_WIN32_SPLITTER),	"WIN32_SPLITTER"},
a109 2
{ERR_REASON(DSO_R_EMPTY_FILE_STRUCTURE)  ,"empty file structure"},
{ERR_REASON(DSO_R_FAILURE)               ,"failure"},
a111 1
{ERR_REASON(DSO_R_INCORRECT_FILE_SYNTAX) ,"incorrect file syntax"},
a114 1
{ERR_REASON(DSO_R_NO_FILE_SPECIFICATION) ,"no file specification"},
d128 1
a128 1
#ifndef OPENSSL_NO_ERR
d130 1
a130 1
	if (ERR_func_error_string(DSO_str_functs[0].error) == NULL)
d132 2
d136 2
a138 1
#endif
@


1.1.1.4
log
@import OpenSSL-1.0.0a
@
text
@d3 1
a3 1
 * Copyright (c) 1999-2006 The OpenSSL Project.  All rights reserved.
a72 5
{ERR_FUNC(DSO_F_BEOS_BIND_FUNC),	"BEOS_BIND_FUNC"},
{ERR_FUNC(DSO_F_BEOS_BIND_VAR),	"BEOS_BIND_VAR"},
{ERR_FUNC(DSO_F_BEOS_LOAD),	"BEOS_LOAD"},
{ERR_FUNC(DSO_F_BEOS_NAME_CONVERTER),	"BEOS_NAME_CONVERTER"},
{ERR_FUNC(DSO_F_BEOS_UNLOAD),	"BEOS_UNLOAD"},
a91 1
{ERR_FUNC(DSO_F_DSO_GLOBAL_LOOKUP),	"DSO_global_lookup"},
a94 1
{ERR_FUNC(DSO_F_DSO_PATHBYADDR),	"DSO_pathbyaddr"},
a97 2
{ERR_FUNC(DSO_F_GLOBAL_LOOKUP_FUNC),	"GLOBAL_LOOKUP_FUNC"},
{ERR_FUNC(DSO_F_PATHBYADDR),	"PATHBYADDR"},
a103 2
{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP),	"WIN32_GLOBALLOOKUP"},
{ERR_FUNC(DSO_F_WIN32_GLOBALLOOKUP_FUNC),	"WIN32_GLOBALLOOKUP_FUNC"},
a107 1
{ERR_FUNC(DSO_F_WIN32_PATHBYADDR),	"WIN32_PATHBYADDR"},
@


