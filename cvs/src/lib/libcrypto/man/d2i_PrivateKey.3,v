head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.6
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5;
locks; strict;
comment	@.\" @;


1.5
date	2016.12.28.01.38.16;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	i5lzxGXhTp9wKku4;

1.4
date	2016.12.25.20.01.48;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	iyXyYcXWvGk6i40Y;

1.3
date	2016.12.08.20.22.08;	author jmc;	state Exp;
branches;
next	1.2;
commitid	vZvBNDQVbNFhvlqz;

1.2
date	2016.12.06.14.54.55;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	u7rycehkrcCqDGz7;

1.1
date	2016.12.05.20.30.12;	author schwarze;	state Exp;
branches;
next	;
commitid	7ZmljgMBtrA339Qu;


desc
@@


1.5
log
@Document i2d_PKCS8PrivateKeyInfo_bio(3) and i2d_PKCS8PrivateKeyInfo_fp(3),
listed in <openssl/x509.h> and in OpenSSL doc/man3/d2i_X509.pod.
These functions are very similar to i2d_PrivateKey(3) but very
different from i2d_PKCS8PrivateKey_bio(3), that's why they go into
this manual page and not into the other one.  When the naming was
decided, somebody clearly considered too briefly or too long.
@
text
@.\"	$OpenBSD: d2i_PrivateKey.3,v 1.4 2016/12/25 20:01:48 schwarze Exp $
.\"	OpenSSL b97fdb57 Nov 11 09:33:09 2016 +0100
.\"
.\" This file is a derived work.
.\" The changes are covered by the following Copyright and license:
.\"
.\" Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" The original file was written by Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2016 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 25 2016 $
.Dt D2I_PRIVATEKEY 3
.Os
.Sh NAME
.Nm d2i_PrivateKey ,
.Nm d2i_AutoPrivateKey ,
.Nm i2d_PrivateKey ,
.Nm d2i_PrivateKey_bio ,
.Nm d2i_PrivateKey_fp ,
.Nm i2d_PKCS8PrivateKeyInfo_bio ,
.Nm i2d_PKCS8PrivateKeyInfo_fp ,
.Nm d2i_PublicKey ,
.Nm i2d_PublicKey
.Nd decode and encode EVP_PKEY objects
.Sh SYNOPSIS
.In openssl/evp.h
.Ft EVP_PKEY *
.Fo d2i_PrivateKey
.Fa "int type"
.Fa "EVP_PKEY **val_out"
.Fa "const unsigned char **des_in"
.Fa "long length"
.Fc
.Ft EVP_PKEY *
.Fo d2i_AutoPrivateKey
.Fa "EVP_PKEY **val_out"
.Fa "const unsigned char **des_in"
.Fa "long length"
.Fc
.Ft int
.Fo i2d_PrivateKey
.Fa "EVP_PKEY *val_in"
.Fa "unsigned char **des_out"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PrivateKey_bio
.Fa "BIO *in_bio"
.Fa "EVP_PKEY **val_out"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PrivateKey_fp
.Fa "FILE *in_fp"
.Fa "EVP_PKEY **val_out"
.Fc
.Ft int
.Fo i2d_PKCS8PrivateKeyInfo_bio
.Fa "BIO *out_bio"
.Fa "EVP_PKEY *val_in"
.Fc
.Ft int
.Fo i2d_PKCS8PrivateKeyInfo_fp
.Fa "FILE *out_fp"
.Fa "EVP_PKEY *val_in"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PublicKey
.Fa "int type"
.Fa "EVP_PKEY **val_out"
.Fa "const unsigned char **des_in"
.Fa "long length"
.Fc
.Ft int
.Fo i2d_PublicKey
.Fa "EVP_PKEY *val_in"
.Fa "unsigned char **des_out"
.Fc
.Sh DESCRIPTION
These are algorithm-independent interfaces to decode and encode
private and public keys.
For details about the semantics, examples, caveats, and bugs, see
.Xr ASN1_item_d2i 3 .
.Pp
.Fn d2i_PrivateKey
decodes a private key using algorithm
.Fa type .
It attempts to use any algorithm specific format or the PKCS#8 unencrypted
.Vt PrivateKeyInfo
format defined in RFC 5208 section 5.
The
.Fa type
parameter should be a public key algorithm constant such as
.Dv EVP_PKEY_RSA .
An error occurs if the decoded key does not match
.Fa type .
.Pp
.Fn d2i_AutoPrivateKey
is similar to
.Fn d2i_PrivateKey
except that it attempts to automatically detect the algorithm.
.Pp
.Fn d2i_PrivateKey_bio
and
.Fn d2i_PrivateKey_fp
are similar to
.Fn d2i_PrivateKey
except that they read from a
.Vt BIO
or
.Vt FILE
pointer.
.Pp
.Fn i2d_PrivateKey
encodes
.Fa val_in .
It uses an algorithm specific format or, if none is defined for
that key type, the PKCS#8 unencrypted
.Vt PrivateKeyInfo
format.
.Pp
.Fn i2d_PKCS8PrivateKeyInfo_bio
and
.Fn i2d_PKCS8PrivateKeyInfo_fp
encode
.Fa val_in
in PKCS#8 unencrypted
.Vt PrivateKeyInfo
format.
They are similar to
.Fn i2d_PrivateKey
except that they don't use any algorithm-specific formats
and that they write to a
.Vt BIO
or
.Vt FILE
pointer rather than to a buffer.
.Pp
All these functions use DER format and unencrypted keys.
Applications wishing to encrypt or decrypt private keys should use other
functions such as
.Xr d2i_PKCS8PrivateKey_bio 3
instead.
.Pp
If
.Pf * Fa val_out
is not
.Dv NULL
when calling
.Fn d2i_PrivateKey
or
.Fn d2i_AutoPrivateKey
(i.e. an existing structure is being reused) and the key format is
PKCS#8, then
.Pf * Fa val_out
will be freed and replaced on a successful call.
.Pp
.Fn d2i_PublicKey
calls
.Xr d2i_DSAPublicKey 3 ,
.Xr o2i_ECPublicKey 3 ,
or
.Xr d2i_RSAPublicKey 3
depending on
.Fa type
and stores the result in the returned
.Vt EVP_PKEY
object.
.Pp
.Fn i2d_PublicKey
calls
.Xr i2d_DSAPublicKey 3 ,
.Xr i2o_ECPublicKey 3 ,
or
.Xr i2d_RSAPublicKey 3
depending on the algorithm used by
.Fa val_in .
.Sh RETURN VALUES
.Fn d2i_PrivateKey ,
.Fn d2i_AutoPrivateKey ,
.Fn d2i_PrivateKey_bio ,
.Fn d2i_PrivateKey_fp ,
and
.Fn d2i_PublicKey
return a valid
.Vt EVP_PKEY
structure or
.Dv NULL
if an error occurs.
.Pp
.Fn i2d_PrivateKey
and
.Fn i2d_PublicKey
return the number of bytes successfully encoded or a negative value if
an error occurs.
.Pp
.Fn i2d_PKCS8PrivateKeyInfo_bio
and
.Fn i2d_PKCS8PrivateKeyInfo_fp
return 1 for success or 0 if an error occurs.
.Pp
For all functions, the error code can be obtained by calling
.Xr ERR_get_error 3 .
.Sh SEE ALSO
.Xr d2i_PKCS8_PRIV_KEY_INFO 3 ,
.Xr d2i_PKCS8PrivateKey_bio 3 ,
.Xr EVP_PKEY_type 3 ,
.Xr PEM_write_PrivateKey 3 ,
.Xr PKCS8_PRIV_KEY_INFO_new 3
.Sh STANDARDS
RFC 5208: Public-Key Cryptography Standards (PKCS) #8: Private-Key
Information Syntax Specification
@


1.4
log
@Add missing functions d2i_PublicKey(3) and i2d_PublicKey(3)
found in OpenSSL doc/man3/d2i_X509.pod.
Simplify one-line description.
Use the same parameter names as in ASN1_item_d2i(3).
Point to ASN1_item_d2i(3) for details.
Add a STANDRADS reference regarding PKCS#8 PrivateKeyInfo.
Mention d2i_PrivateKey_bio(3) and d2i_PrivateKey_fp(3)
in the DESCRIPTION and below RETURN VALUES.
Add some missing markup and tweak some wording.
Add some cross references.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_PrivateKey.3,v 1.3 2016/12/08 20:22:08 jmc Exp $
d68 1
a68 1
.Dd $Mdocdate: December 8 2016 $
d77 2
d112 10
d143 1
a143 1
It attempts to use any key specific format or the PKCS#8 unencrypted
d172 2
a173 2
It uses a key specific format or, if none is defined for that key type,
the PKCS#8 unencrypted
d177 17
d241 1
a241 1
.Vt EVP_KEY
d252 5
d260 1
@


1.3
log
@various cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_PrivateKey.3,v 1.2 2016/12/06 14:54:55 schwarze Exp $
d4 18
a21 1
.\" This file was written by Dr. Stephen Henson <steve@@openssl.org>.
d68 1
a68 1
.Dd $Mdocdate: December 6 2016 $
d76 4
a79 2
.Nm d2i_PrivateKey_fp
.Nd decode and encode functions for reading and saving EVP_PKEY structures
d85 2
a86 2
.Fa "EVP_PKEY **a"
.Fa "const unsigned char **pp"
d91 2
a92 2
.Fa "EVP_PKEY **a"
.Fa "const unsigned char **pp"
d97 2
a98 2
.Fa "EVP_PKEY *a"
.Fa "unsigned char **pp"
d102 2
a103 2
.Fa "BIO *bp"
.Fa "EVP_PKEY **a"
d107 14
a120 2
.Fa "FILE *fp"
.Fa "EVP_PKEY **a"
d123 5
d131 3
a133 2
It attempts to use any key specific format or PKCS#8 unencrypted
PrivateKeyInfo format.
d144 12
a155 1
except that it attempts to automatically detect the private key format.
d159 1
a159 1
.Fa a .
d161 3
a163 6
PKCS#8 unencrypted PrivateKeyInfo format.
.Pp
These functions are similar to the
.Xr d2i_X509 3
functions; see
.Xr d2i_X509 3 .
d172 4
a175 2
.Pf * Fa a
is not NULL when calling
d181 1
a181 1
.Pf * Fa a
d183 21
d205 4
a208 1
.Fn d2i_PrivateKey
d210 1
a210 1
.Fn d2i_AutoPrivateKey
a215 2
The error code can be obtained by calling
.Xr ERR_get_error 3 .
d218 3
a220 1
returns the number of bytes successfully encoded or a negative value if
d222 2
a223 1
The error code can be obtained by calling
d226 7
a232 1
.Xr d2i_PKCS8PrivateKey_bio 3
@


1.2
log
@Delete most references to crypto(3).  That page isn't useful enough
to be pointed to from random individual pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_PrivateKey.3,v 1.1 2016/12/05 20:30:12 schwarze Exp $
d51 1
a51 1
.Dd $Mdocdate: December 5 2016 $
d123 1
a123 1
.Xr d2i_PKC8PrivateKey 3
d154 1
a154 1
.Xr d2i_PKCS8PrivateKey 3
@


1.1
log
@import d2i_PrivateKey(3) from OpenSSL
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d51 1
a51 1
.Dd $Mdocdate: November 23 2016 $
a153 1
.Xr crypto 3 ,
@

