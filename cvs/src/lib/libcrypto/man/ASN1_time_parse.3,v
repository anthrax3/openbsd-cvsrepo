head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.4
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.3.0.4
	OPENBSD_6_1_BASE:1.3;
locks; strict;
comment	@.\" @;


1.5
date	2017.05.06.18.07.46;	author jmc;	state Exp;
branches;
next	1.4;
commitid	HGzEd2eN9uEfmdvN;

1.4
date	2017.05.06.17.12.59;	author beck;	state Exp;
branches;
next	1.3;
commitid	xcWAIV7jDGEB7q8O;

1.3
date	2016.11.05.09.13.56;	author jmc;	state Exp;
branches;
next	1.2;
commitid	f0KUuBfdomye7Jmr;

1.2
date	2016.11.04.22.53.26;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	v3EprUtZFxPrFdrV;

1.1
date	2016.11.04.18.07.23;	author beck;	state Exp;
branches;
next	;
commitid	pAy02smoQCuRvYaT;


desc
@@


1.5
log
@space needed between macro arg and punctuation;
@
text
@.\" $OpenBSD: ASN1_time_parse.3,v 1.4 2017/05/06 17:12:59 beck Exp $
.\"
.\" Copyright (c) 2016 Bob Beck <beck@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: May 6 2017 $
.Dt ASN1_TIME_PARSE 3
.Os
.Sh NAME
.Nm ASN1_time_parse ,
.Nm ASN1_time_tm_cmp ,
.Nm ASN1_TIME_set_tm
.Nd LibreSSL utilities for ASN.1 time types
.Sh SYNOPSIS
.In openssl/asn1.h
.Ft int
.Fn ASN1_time_parse "const char *bytes" "size_t len" "struct tm *tm" "int mode"
.Ft int
.Fn ASN1_time_tm_cmp "struct tm *tm1" "struct tm *tm2"
.Ft ASN1_TIME *
.Fn ASN1_TIME_set_tm "ASN1_TIME *s" "struct tm *tm"
.Sh DESCRIPTION
The
.Fn ASN1_time_parse
function parses an ASN.1 time string of
.Ar len
bytes starting at
.Ar bytes .
The resulting time is stored in
.Ar tm
if
.Ar tm
is not
.Dv NULL .
.Pp
The
.Ar mode
parameter must be one of
.Bl -bullet -offset four
.It
0 to parse a time as specified in RFC 5280 for an X509 object,
which may be either a UTC time or a Generalized time.
.It
.Dv V_ASN1_UTCTIME
to parse an RFC 5280 format UTC time.
.It
.Dv V_ASN1_GENERALIZEDTIME
to parse an RFC 5280 format Generalized time.
.El
.Pp
The
.Fn ASN1_time_tm_cmp
function compares two times in
.Ar tm1
and
.Ar tm2 .
.Pp
The function
.Fn ASN1_TIME_set_tm
sets the
.Vt ASN1_TIME
structure
.Fa s
to the time represented by the
.Vt strict tm
value pointed to by
.Fa tm .
If
.Fa s
is
.Dv NULL ,
a new
.Vt ASN1_TIME
structure is allocated and returned.
.Sh RETURN VALUES
.Fn ASN1_parse_time
returns
.Bl -bullet -offset four
.It
-1 if the string was invalid for the
.Ar mode
specified.
.It
.Dv V_ASN1_UTCTIME
if the string parsed as a valid UTC time.
.It
.Dv V_ASN1_GENERALIZEDTIME
if the string parsed as a valid Generalized time.
.El
.Pp
.Fn ASN1_time_tm_cmp
returns
.Bl -bullet -offset four
.It
-1 if
.Ar tm1
is less than
.Ar tm2 .
.It
1 if
.Ar tm1
is greater than
.Ar tm2 .
.It
0 if
.Ar tm1
is the same as
.Ar tm2 .
.El
.Pp
.Fn ASN1_TIME_set_tm
returns a pointer to an
.Vt ASN1_TIME
structure or
.Dv NULL
if an error occurred.
@


1.4
log
@Add ASN1_TIME_set_tm to set an asn1 from a struct tm *
ok jsing@@
@
text
@d1 1
a1 1
.\" $OpenBSD: ASN1_time_parse.3,v 1.3 2016/11/05 09:13:56 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: November 5 2016 $
d22 1
a22 1
.Nm ASN1_time_tm_cmp,
@


1.3
log
@further tweakage, with an improvement from joel;
ok jsing schwarze
@
text
@d1 1
a1 1
.\" $OpenBSD: ASN1_time_parse.3,v 1.2 2016/11/04 22:53:26 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: November 4 2016 $
d22 2
a23 1
.Nm ASN1_time_tm_cmp
d31 2
d68 18
d121 7
@


1.2
log
@tweak previous
@
text
@d1 1
a1 1
.\" $OpenBSD: ASN1_time_parse.3,v 1.1 2016/11/04 18:07:23 beck Exp $
d21 1
a21 1
.Nm ASN1_time_parse,
d23 1
a23 1
.Nd LibreSSL utilities for ASN1 format time
d33 1
a33 1
function parses an ASN1 time string of
@


1.1
log
@make public ASN1_time_parse and ASN1_time_tm_cmp to replace former hidden
functions.. document with a man page.
bump majors on libtls, libssl, libcrypto
ok jsing@@ guenther@@
@
text
@d1 1
a1 1
.\" $OpenBSD$
d3 1
a3 1
.\" Copyright (c) 2016 Bob Beck <beck@@@@openbsd.org>
d17 1
a17 1
.Dd $Mdocdate: November 2 2016 $
d23 1
a23 1
.Nd LibreSSL utilities for asn1 format time.
d25 5
a29 5
.In asn1.h
.Ft "int"
.Fn ASN1_time_parse "const char *bytes" "size_t len" "struct tm *tm" "int mode
.Ft "int"
.Fn ASN1_time_tm_cmp "struct tm *tm1" "struct tm *tm2" 
d32 2
a33 2
.Nm ASN1_time_parse
function parses an asn1 time string of
d39 1
a39 1
if 
d41 2
a42 1
is non NULL. 
d44 1
a44 1
The 
d49 2
a50 3
.Ar 0
to parse a time as specified in RFC 5280 for an X509 object,
which may be either a UTC time or a Generalized time. 
d52 1
a52 1
.Ar V_ASN1_UTCTIME
d55 1
a55 1
.Ar V_ASN1_GENERALIZEDTIME 
d60 1
a60 1
.Nm ASN1_time_tm_cmp
d64 1
a64 1
.Ar tm2
d66 1
a66 1
.Nm ASN1_parse_time 
d70 1
a70 2
.Ar -1
if the string was invalid for the
d72 1
a72 1
specified
d74 1
a74 1
.Ar V_ASN1_UTCTIME 
d76 2
a77 2
.It :
.Ar V_ASN1_GENERALIZEDTIME 
d81 1
a81 1
.Nm ASN1_time_tm_cmp
d85 4
a88 2
.Ar -1
if tm1 is less than tm2.
d90 4
a93 2
.Ar 1
if tm1 is greater than tm2.
d95 4
a98 2
.Ar 0
if tm1 is the same as tm2.
@

