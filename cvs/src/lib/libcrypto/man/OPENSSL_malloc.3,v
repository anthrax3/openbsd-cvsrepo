head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@.\" @;


1.4
date	2016.11.29.21.29.19;	author jmc;	state Exp;
branches;
next	1.3;
commitid	5YOoEvOuaULzZxTR;

1.3
date	2016.11.29.18.16.09;	author deraadt;	state Exp;
branches;
next	1.2;
commitid	1uJWvIZlrL60Kowm;

1.2
date	2016.11.29.07.29.52;	author jmc;	state Exp;
branches;
next	1.1;
commitid	XWxSv7ow9LEUqy8y;

1.1
date	2016.11.28.16.33.48;	author schwarze;	state Exp;
branches;
next	;
commitid	E4Z7VETymw5MjRdW;


desc
@@


1.4
log
@tweak previous;
@
text
@.\"	$OpenBSD: OPENSSL_malloc.3,v 1.3 2016/11/29 18:16:09 deraadt Exp $
.\"
.\" Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: November 29 2016 $
.Dt OPENSSL_MALLOC 3
.Os
.Sh NAME
.Nm OPENSSL_malloc ,
.Nm OPENSSL_realloc ,
.Nm OPENSSL_free ,
.Nm OPENSSL_strdup ,
.Nm CRYPTO_malloc ,
.Nm CRYPTO_realloc ,
.Nm CRYPTO_free ,
.Nm CRYPTO_strdup
.Nd legacy OpenSSL memory allocation wrappers
.Sh SYNOPSIS
.In openssl/crypto.h
.Ft void *
.Fo OPENSSL_malloc
.Fa "size_t num"
.Fc
.Ft void *
.Fo OPENSSL_realloc
.Fa "void *addr"
.Fa "size_t num"
.Fc
.Ft void
.Fo OPENSSL_free
.Fa "void *addr"
.Fc
.Ft char *
.Fo OPENSSL_strdup
.Fa "const char *str"
.Fc
.Ft void *
.Fo CRYPTO_malloc
.Fa "size_t num"
.Fa "const char *file"
.Fa "int line"
.Fc
.Ft void *
.Fo CRYPTO_realloc
.Fa "void *p"
.Fa "size_t num"
.Fa "const char *file"
.Fa "int line"
.Fc
.Ft void
.Fo CRYPTO_free
.Fa "void *str"
.Fa "const char *"
.Fa int
.Fc
.Ft char *
.Fo CRYPTO_strdup
.Fa "const char *p"
.Fa "const char *file"
.Fa "int line"
.Fc
.Sh DESCRIPTION
Do not use any of the interfaces documented here in new code.
They are provided purely for compatibility with legacy application code.
.Pp
All 8 of these functions are wrappers around the corresponding
standard
.Xr malloc 3 ,
.Xr realloc 3 ,
.Xr free 3 ,
and
.Xr strdup 3
functions.
.Sh RETURN VALUES
These functions return the same type and value as the corresponding
standard functions.
@


1.3
log
@seperate these descriptions into seperate files to reduce confusion.
discussed with jsing
ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: OPENSSL_malloc.3,v 1.2 2016/11/29 07:29:52 jmc Exp $
d28 1
a28 1
.Nm CRYPTO_strdup ,
d84 1
a84 1
.Xr strdup 3 
d87 1
a87 1
These functions return same type and value as the corresponding
@


1.2
log
@minor cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: OPENSSL_malloc.3,v 1.1 2016/11/28 16:33:48 schwarze Exp $
d17 1
a17 1
.Dd $Mdocdate: November 28 2016 $
a24 1
.Nm OPENSSL_cleanse ,
a28 5
.Nm CRYPTO_get_mem_functions ,
.Nm CRYPTO_set_mem_functions ,
.Nm CRYPTO_mem_ctrl ,
.Nm CRYPTO_mem_leaks ,
.Nm CRYPTO_mem_leaks_fp
a48 5
.Ft void
.Fo OPENSSL_cleanse
.Fa "void *ptr"
.Fa "size_t len"
.Fc
a73 24
.Ft void
.Fo CRYPTO_get_mem_functions
.Fa "void *(**m)(size_t)"
.Fa "void *(**r)(void *, size_t)"
.Fa "void (**f)(void *)"
.Fc
.Ft int
.Fo CRYPTO_set_mem_functions
.Fa "void *(*m)(size_t)"
.Fa "void *(*r)(void *, size_t)"
.Fa "void (*f)(void *)"
.Fc
.Ft int
.Fo CRYPTO_mem_ctrl
.Fa "int mode"
.Fc
.Ft void
.Fo CRYPTO_mem_leaks
.Fa "BIO *b"
.Fc
.Ft void
.Fo CRYPTO_mem_leaks_fp
.Fa "FILE *fp"
.Fc
d75 1
a75 1
Do not use any of the interfaces documented here.
d78 2
a79 18
.Fn OPENSSL_malloc ,
.Fn OPENSSL_realloc ,
.Fn OPENSSL_free ,
and
.Fn OPENSSL_strdup
have the same semantics as
.Xr malloc 3 ,
.Xr realloc 3 ,
.Xr free 3 ,
and
.Xr strdup 3 .
They are wrapper macros around
.Fn CRYPTO_malloc ,
.Fn CRYPTO_realloc ,
.Fn CRYPTO_free ,
and
.Fn CRYPTO_strdup ,
which in turn are wrapper functions around
d84 2
a85 21
.Xr strdup 3 .
.Pp
.Fn OPENSSL_cleanse
has the same semantics as and is a wrapper around
.Xr explicit_bzero 3 .
.Pp
.Fn CRYPTO_get_mem_functions
assigns pointers to the C library functions
.Xr malloc 3 ,
.Xr realloc 3 ,
and
.Xr free 3
to those of its arguments that are not
.Dv NULL .
.Pp
.Fn CRYPTO_set_mem_functions ,
.Fn CRYPTO_mem_ctrl ,
.Fn CRYPTO_mem_leaks ,
and
.Fn CRYPTO_mem_leaks_fp
have no effect.
d87 2
a88 16
.Fn OPENSSL_malloc ,
.Fn OPENSSL_realloc ,
.Fn CRYPTO_malloc ,
.Fn CRYPTO_realloc ,
and
.Fn OPENSSL_strdup
return a pointer to allocated memory or
.Dv NULL
on error.
.Pp
.Fn CRYPTO_set_mem_functions
always returns 0.
.Pp
.Fn CRYPTO_mem_ctrl
always returns
.Dv CRYPTO_MEM_CHECK_OFF .
@


1.1
log
@Document and discourage those wrappers that we have and that OpenSSL
documents, too.  There are many additional undocumented ones in our
public OpenSSL headers, but advertising those would be a bad idea.

Nothing of the text from OPENSSL_malloc.pod remains, so use my own
Copyright and license.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate: November 23 2016 $
d148 1
a148 1
.Dv NULL.
@

