head	1.6;
access;
symbols;
locks; strict;
comment	@.\" @;


1.6
date	2016.12.11.09.57.57;	author jmc;	state Exp;
branches;
next	1.5;
commitid	QNt6FN6I0MGo58tS;

1.5
date	2016.12.10.22.22.59;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	TWU3btEuUm85L11e;

1.4
date	2016.12.10.21.13.25;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	4coMobrzJtYgMso4;

1.3
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.2;
commitid	UKoyflsJLv0vYdpL;

1.2
date	2016.11.06.15.27.36;	author schwarze;	state Exp;
branches;
next	1.1;
commitid	SICZ7f4jcOnRDZk5;

1.1
date	2016.11.04.10.17.17;	author schwarze;	state Exp;
branches;
next	;
commitid	ZjQW3LDCU7N0oPMv;


desc
@@


1.6
log
@some fixes for the dsa.3 -> DSA_new.3 changes;
@
text
@.\"	$OpenBSD: rsa.3,v 1.5 2016/12/10 22:22:59 schwarze Exp $
.\"
.Dd $Mdocdate: December 10 2016 $
.Dt RSA 3
.Os
.Sh NAME
.Nm rsa
.Nd RSA public key cryptosystem
.Sh SYNOPSIS
.In openssl/rsa.h
.Sh DESCRIPTION
These functions implement RSA public key encryption and signatures as
defined in PKCS #1 v2.0 [RFC 2437].
.Pp
The
.Vt RSA
structure consists of several BIGNUM components.
It can contain public as well as private RSA keys:
.Bd -literal
typdef struct {
        BIGNUM *n;		// public modulus
        BIGNUM *e;		// public exponent
        BIGNUM *d;		// private exponent
        BIGNUM *p;		// secret prime factor
        BIGNUM *q;		// secret prime factor
        BIGNUM *dmp1;		// d mod (p-1)
        BIGNUM *dmq1;		// d mod (q-1)
        BIGNUM *iqmp;		// q^-1 mod p
	// ...
} RSA;
.Ed
.Pp
In public keys, the private exponent and the related secret values are
.Dv NULL .
.Pp
.Fa p ,
.Fa q ,
.Fa dmp1 ,
.Fa dmq1 ,
and
.Fa iqmp
may be
.Dv NULL
in private keys, but the RSA operations are much faster when these
values are available.
.Pp
Note that RSA keys may use non-standard
.Vt RSA_METHOD
implementations, either directly or by the use of
.Vt ENGINE
modules.
In some cases (e.g. an
.Vt ENGINE
providing support for hardware-embedded keys), these
.Vt BIGNUM
values will not be used by the implementation or may be used for
alternative data storage.
For this reason, applications should generally avoid using
.Vt RSA
structure elements directly and instead use API functions to query
or modify keys.
.Sh SEE ALSO
.Xr BN_new 3 ,
.Xr d2i_RSAPublicKey 3 ,
.Xr DH_new 3 ,
.Xr DSA_new 3 ,
.Xr engine 3 ,
.Xr EVP_PKEY_set1_RSA 3 ,
.Xr RSA_blinding_on 3 ,
.Xr RSA_check_key 3 ,
.Xr RSA_generate_key 3 ,
.Xr RSA_get_ex_new_index 3 ,
.Xr RSA_new 3 ,
.Xr RSA_padding_add_PKCS1_type_1 3 ,
.Xr RSA_print 3 ,
.Xr RSA_private_encrypt 3 ,
.Xr RSA_public_encrypt 3 ,
.Xr RSA_set_method 3 ,
.Xr RSA_sign 3 ,
.Xr RSA_sign_ASN1_OCTET_STRING 3 ,
.Xr RSA_size 3
.Sh STANDARDS
SSL, PKCS #1 v2.0
.Pp
RSA was covered by a US patent which expired in September 2000.
@


1.5
log
@Replace all references to dh(3) with DH_new(3).
Make sure that all DH pages point back to DH_new(3).
@
text
@d1 1
a1 1
.\"	$OpenBSD: rsa.3,v 1.4 2016/12/10 21:13:25 schwarze Exp $
d66 1
a66 1
.Xr dsa 3 ,
@


1.4
log
@replace all references to bn(3) with BN_new(3),
and make sure all BN*(3) pages point back to BN_new(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: rsa.3,v 1.3 2016/11/06 15:52:50 jmc Exp $
d3 1
a3 1
.Dd $Mdocdate: November 6 2016 $
d65 1
a65 1
.Xr dh 3 ,
@


1.3
log
@first pass; ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d63 1
a63 1
.Xr bn 3 ,
@


1.2
log
@delete prototypes available in other pages and add two missing .Xr links
@
text
@d1 3
a3 1
.Dd $Mdocdate: November 4 2016 $
d52 1
a52 1
In some cases (eg. an
@


1.1
log
@convert RSA manuals from pod to mdoc
@
text
@d1 1
a1 1
.Dd $Mdocdate: May 4 2014 $
a8 157
.In openssl/engine.h
.Ft RSA *
.Fn RSA_new void
.Ft void
.Fo RSA_free
.Fa "RSA *rsa"
.Fc
.Ft int
.Fo RSA_public_encrypt
.Fa "int flen"
.Fa "unsigned char *from"
.Fa "unsigned char *to"
.Fa "RSA *rsa"
.Fa "int padding"
.Fc
.Ft int
.Fo RSA_private_decrypt
.Fa "int flen"
.Fa "unsigned char *from"
.Fa "unsigned char *to"
.Fa "RSA *rsa"
.Fa "int padding"
.Fc
.Ft int
.Fo RSA_private_encrypt
.Fa "int flen"
.Fa "unsigned char *from"
.Fa "unsigned char *to"
.Fa "RSA *rsa"
.Fa "int padding"
.Fc
.Ft int
.Fo RSA_public_decrypt
.Fa "int flen"
.Fa "unsigned char *from"
.Fa "unsigned char *to"
.Fa "RSA *rsa"
.Fa "int padding"
.Fc
.Ft int
.Fo RSA_sign
.Fa "int type"
.Fa "unsigned char *m"
.Fa "unsigned int m_len"
.Fa "unsigned char *sigret"
.Fa "unsigned int *siglen"
.Fa "RSA *rsa"
.Fc
.Ft int
.Fo RSA_verify
.Fa "int type"
.Fa "unsigned char *m"
.Fa "unsigned int m_len"
.Fa "unsigned char *sigbuf"
.Fa "unsigned int siglen"
.Fa "RSA *rsa"
.Fc
.Ft int
.Fo RSA_size
.Fa "const RSA *rsa"
.Fc
.Ft RSA *
.Fo RSA_generate_key
.Fa "int num"
.Fa "unsigned long e"
.Fa "void (*callback)(int, int, void *)"
.Fa "void *cb_arg"
.Fc
.Ft int
.Fo RSA_check_key
.Fa "RSA *rsa"
.Fc
.Ft int
.Fo RSA_blinding_on
.Fa "RSA *rsa"
.Fa "BN_CTX *ctx"
.Fc
.Ft void
.Fo RSA_blinding_off
.Fa "RSA *rsa"
.Fc
.Ft void
.Fo RSA_set_default_method
.Fa "const RSA_METHOD *meth"
.Fc
.Ft const RSA_METHOD *
.Fn RSA_get_default_method void
.Ft int
.Fo RSA_set_method
.Fa "RSA *rsa"
.Fa "const RSA_METHOD *meth"
.Fc
.Ft const RSA_METHOD *
.Fo RSA_get_method
.Fa "const RSA *rsa"
.Fc
.Ft RSA_METHOD *
.Fn RSA_PKCS1_SSLeay void
.Ft RSA_METHOD *
.Fn RSA_null_method void
.Ft int
.Fo RSA_flags
.Fa "const RSA *rsa"
.Fc
.Ft RSA *
.Fo RSA_new_method
.Fa "ENGINE *engine"
.Fc
.Ft int
.Fo RSA_print
.Fa "BIO *bp"
.Fa "RSA *x"
.Fa "int offset"
.Fc
.Ft int
.Fo RSA_print_fp
.Fa "FILE *fp"
.Fa "RSA *x"
.Fa "int offset"
.Fc
.Ft int
.Fo RSA_get_ex_new_index
.Fa "long argl"
.Fa "char *argp"
.Fa "int (*new_func)()"
.Fa "int (*dup_func)()"
.Fa "void (*free_func)()"
.Fc
.Ft int
.Fo RSA_set_ex_data
.Fa "RSA *r"
.Fa "int idx"
.Fa "char *arg"
.Fc
.Ft char *
.Fo RSA_get_ex_data
.Fa "RSA *r"
.Fa "int idx"
.Fc
.Ft int
.Fo RSA_sign_ASN1_OCTET_STRING
.Fa "int dummy"
.Fa "unsigned char *m"
.Fa "unsigned int m_len"
.Fa "unsigned char *sigret"
.Fa "unsigned int *siglen"
.Fa "RSA *rsa"
.Fc
.Ft int
.Fo RSA_verify_ASN1_OCTET_STRING
.Fa "int dummy"
.Fa "unsigned char *m"
.Fa "unsigned int m_len"
.Fa "unsigned char *sigbuf"
.Fa "unsigned int siglen"
.Fa "RSA *rsa"
.Fc
d62 1
d66 1
@

