head	1.4;
access;
symbols
	OPENBSD_6_2_BASE:1.4
	OPENBSD_6_1:1.4.0.4
	OPENBSD_6_1_BASE:1.4;
locks; strict;
comment	@.\" @;


1.4
date	2016.11.27.15.23.29;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	p84D6tTfJ9w1BnOg;

1.3
date	2016.11.21.22.19.15;	author jmc;	state Exp;
branches;
next	1.2;
commitid	iZRR3V4LpFRk6AP5;

1.2
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.1;
commitid	UKoyflsJLv0vYdpL;

1.1
date	2016.11.03.09.35.34;	author schwarze;	state Exp;
branches;
next	;
commitid	3WfE7ZbXXRiIqemG;


desc
@@


1.4
log
@Add Copyright and license.
Merge improvements to EXAMPLES from OpenSSL.
@
text
@.\"	$OpenBSD: EVP_PKEY_encrypt.3,v 1.3 2016/11/21 22:19:15 jmc Exp $
.\"	OpenSSL b97fdb57 Nov 11 09:33:09 2016 +0100
.\"
.\" This file was written by Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2006, 2009, 2013, 2014, 2016 The OpenSSL Project.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: November 21 2016 $
.Dt EVP_PKEY_ENCRYPT 3
.Os
.Sh NAME
.Nm EVP_PKEY_encrypt_init ,
.Nm EVP_PKEY_encrypt
.Nd encrypt using a public key algorithm
.Sh SYNOPSIS
.In openssl/evp.h
.Ft int
.Fo EVP_PKEY_encrypt_init
.Fa "EVP_PKEY_CTX *ctx"
.Fc
.Ft int
.Fo EVP_PKEY_encrypt
.Fa "EVP_PKEY_CTX *ctx"
.Fa "unsigned char *out"
.Fa "size_t *outlen"
.Fa "const unsigned char *in"
.Fa "size_t inlen"
.Fc
.Sh DESCRIPTION
The
.Fn EVP_PKEY_encrypt_init
function initializes a public key algorithm context using key
.Fa ctx->pkey
for an encryption operation.
.Pp
The
.Fn EVP_PKEY_encrypt
function performs a public key encryption operation using
.Fa ctx .
The data to be encrypted is specified using the
.Fa in
and
.Fa inlen
parameters.
If
.Fa out
is
.Dv NULL ,
then the maximum size of the output buffer is written to the
.Fa outlen
parameter.
If
.Fa out
is not
.Dv NULL ,
then before the call the
.Fa outlen
parameter should contain the length of the
.Fa out
buffer.
If the call is successful the encrypted data is written to
.Fa out
and the amount of data written to
.Fa outlen .
.Pp
After the call to
.Fn EVP_PKEY_encrypt_init ,
algorithm specific control operations can be performed to set any
appropriate parameters for the operation.
.Pp
The function
.Fn EVP_PKEY_encrypt
can be called more than once on the same context if several operations
are performed using the same parameters.
.Sh RETURN VALUES
.Fn EVP_PKEY_encrypt_init
and
.Fn EVP_PKEY_encrypt
return 1 for success and 0 or a negative value for failure.
In particular, a return value of -2 indicates the operation is not
supported by the public key algorithm.
.Sh EXAMPLES
Encrypt data using OAEP (for RSA keys).
See also
.Xr PEM_read_PUBKEY 3
and
.Xr d2i_X509 3
for means to load a public key.
You may also simply set
.Ql eng = NULL;
to start with the default OpenSSL RSA implementation:
.Bd -literal -offset indent
#include <openssl/evp.h>
#include <openssl/rsa.h>
#include <openssl/engine.h>

EVP_PKEY_CTX *ctx;
ENGINE *eng;
unsigned char *out, *in;
size_t outlen, inlen;
EVP_PKEY *key;
/* NB: assumes eng, key in, inlen are already set up
 * and that key is an RSA public key
 */
ctx = EVP_PKEY_CTX_new(key, eng);
if (!ctx)
	/* Error occurred */
if (EVP_PKEY_encrypt_init(ctx) <= 0)
	/* Error */
if (EVP_PKEY_CTX_set_rsa_padding(ctx, RSA_PKCS1_OAEP_PADDING) <= 0)
	/* Error */

/* Determine buffer length */
if (EVP_PKEY_encrypt(ctx, NULL, &outlen, in, inlen) <= 0)
	/* Error */

out = malloc(outlen);

if (!out)
	/* malloc failure */

if (EVP_PKEY_encrypt(ctx, out, &outlen, in, inlen) <= 0)
	/* Error */

/* Encrypted data is outlen bytes written to buffer out */
.Ed
.Sh SEE ALSO
.Xr EVP_PKEY_CTX_new 3 ,
.Xr EVP_PKEY_decrypt 3 ,
.Xr EVP_PKEY_derive 3 ,
.Xr EVP_PKEY_sign 3 ,
.Xr EVP_PKEY_verify 3 ,
.Xr EVP_PKEY_verify_recover 3
.Sh HISTORY
These functions were first added to OpenSSL 1.0.0.
@


1.3
log
@various cleanup;
@
text
@d1 2
a2 1
.\"	$OpenBSD: EVP_PKEY_encrypt.3,v 1.2 2016/11/06 15:52:50 jmc Exp $
d4 49
a52 1
.Dd $Mdocdate: November 6 2016 $
d127 9
a135 1
Encrypt data using OAEP (for RSA keys):
d139 1
d142 1
d146 1
a146 1
/* NB: assumes key in, inlen are already set up
d149 1
a149 1
ctx = EVP_PKEY_CTX_new(key);
@


1.2
log
@first pass; ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d3 1
a3 1
.Dd $Mdocdate: November 3 2016 $
d55 2
a56 1
buffer, if the call is successful the encrypted data is written to
d79 1
a79 1
.Bd -literal
@


1.1
log
@convert EVP manuals from pod to mdoc
@
text
@d1 3
a3 1
.Dd $Mdocdate: March 13 2016 $
@

