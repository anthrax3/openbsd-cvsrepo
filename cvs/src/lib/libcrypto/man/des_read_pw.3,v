head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.6
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.2.0.4
	OPENBSD_6_0_BASE:1.2
	OPENBSD_5_9:1.2.0.2
	OPENBSD_5_9_BASE:1.2;
locks; strict;
comment	@.\" @;


1.6
date	2017.01.06.17.17.29;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	jdVkBt3mZGYXVsOi;

1.5
date	2016.12.10.22.01.26;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	akB0mVoVglZm9mDr;

1.4
date	2016.12.08.21.48.50;	author jmc;	state Exp;
branches;
next	1.3;
commitid	2EdSHZ7I6GmB8sRP;

1.3
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.2;
commitid	UKoyflsJLv0vYdpL;

1.2
date	2015.11.15.22.06.51;	author jmc;	state Exp;
branches;
next	1.1;
commitid	vNYnFTw8qUieulg9;

1.1
date	2015.11.12.00.55.49;	author schwarze;	state Exp;
branches;
next	;
commitid	RO3YWQP7BDJs4F8k;


desc
@@


1.6
log
@Add EVP_read_pw_string(3) to NAME and SYNOPSIS,
resolving a dangling cross reference reported by jmc@@.

Sort NAME and SYNOPSIS to agree with .Dt and DESCRIPTION.
Unify parameter names.
Delete a sentence about an implementation detail that is no longer true.
Mention the length limitation of the *_string() variants.
@
text
@.\"	$OpenBSD: des_read_pw.3,v 1.5 2016/12/10 22:01:26 schwarze Exp $
.\"	OpenSSL doc/crypto/ui_compat.pod May 14 11:28:00 2006 +0000
.\"	OpenSSL doc/crypto/des.pod 2a9aca32 Oct 25 08:44:10 2001 +0000
.\"
.\" This file was written by Ulf Moeller <ulf@@openssl.org> and
.\" Richard Levitte <levitte@@openssl.org>.
.\" Copyright (c) 2000, 2001 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 10 2016 $
.Dt DES_READ_PW 3
.Os
.Sh NAME
.Nm des_read_pw ,
.Nm des_read_pw_string ,
.Nm EVP_read_pw_string
.Nd compatibility user interface functions
.Sh SYNOPSIS
.In openssl/ui_compat.h
.Ft int
.Fo des_read_pw
.Fa "char *buf"
.Fa "char *buff"
.Fa "int length"
.Fa "const char *prompt"
.Fa "int verify"
.Fc
.Ft int
.Fo des_read_pw_string
.Fa "char *buf"
.Fa "int length"
.Fa "const char *prompt"
.Fa "int verify"
.Fc
.In openssl/evp.h
.Ft int
.Fo EVP_read_pw_string
.Fa "char *buf"
.Fa "int length"
.Fa "const char *prompt"
.Fa "int verify"
.Fc
.Sh DESCRIPTION
The DES library contained a few routines to prompt for passwords.
These aren't necessarily dependent on DES, and have therefore become
part of the UI compatibility library.
.Pp
.Fn des_read_pw
writes the string specified by
.Fa prompt
to standard output, turns echo off, and reads an input string from the
terminal.
The string is returned in
.Fa buf ,
which must have space for at least
.Fa length
bytes.
If
.Fa verify
is set, the user is asked for the password twice and unless the two
copies match, an error is returned.
The second password is stored in
.Fa buff ,
which must therefore also be at least
.Fa length
bytes.
A return code of -1 indicates a system error, 1 failure due to use
interaction, and 0 is success.
.Pp
.Fn des_read_pw_string
is a variant of
.Fn des_read_pw
that provides a buffer if
.Fa verify
is set.
It is available in the MIT Kerberos library as well.
If
.Fa length
exceeds
.Dv BUFSIZ ,
.Fn des_read_pw_string
uses
.Dv BUFSIZ .
.Pp
.Fn EVP_read_pw_string
is functionally similar to
.Fn des_read_pw_string .
.Sh SEE ALSO
.Xr UI_new 3
.Sh AUTHORS
.An Richard Levitte Aq Mt richard@@levitte.org
for the OpenSSL project.
@


1.5
log
@Add Copyright and license; jmc@@ noticed that i forgot this file.

Correct the header: It's <openssl/ui_compat.h>, not <openssl/des_old.h>.
Delete documentation of des_read_password(3) and des_read_2passwords(3)
which no longer exist.

Probably, the rest of this ought to be deleted as well...
@
text
@d1 1
a1 1
.\"	$OpenBSD: des_read_pw.3,v 1.4 2016/12/08 21:48:50 jmc Exp $
d53 1
a53 1
.Dd $Mdocdate: December 8 2016 $
d57 1
d59 1
a59 1
.Nm des_read_pw
d64 8
d78 1
d80 1
a80 1
.Fo des_read_pw
d82 1
a82 2
.Fa "char *buff"
.Fa "int size"
d99 1
a99 1
.Fa size
d108 1
a108 1
.Fa size
a111 3
All other functions described here use
.Fn des_read_pw
to do the work.
d119 12
a130 3
It is available in the MIT Kerberos library as well,
and is also available under the name
.Xr EVP_read_pw_string 3 .
@


1.4
log
@minor cleanup;
@
text
@d1 3
a3 1
.\"	$OpenBSD: des_read_pw.3,v 1.3 2016/11/06 15:52:50 jmc Exp $
d5 49
a53 1
.Dd $Mdocdate: November 6 2016 $
a56 2
.Nm des_read_password ,
.Nm des_read_2passwords ,
d61 1
a61 14
.In openssl/des_old.h
.Ft int
.Fo des_read_password
.Fa "DES_cblock *key"
.Fa "const char *prompt"
.Fa "int verify"
.Fc
.Ft int
.Fo des_read_2passwords
.Fa "DES_cblock *key1"
.Fa "DES_cblock *key2"
.Fa "const char *prompt"
.Fa "int verify"
.Fc
a115 12
.Pp
.Fn des_read_password
calls
.Fn des_read_pw
and converts the password to a DES key by calling
.Xr DES_string_to_key 3 ;
.Fn des_read_2passwords
operates in the same way as
.Fn des_read_password
except that it generates two keys by using the
.Xr DES_string_to_2key 3
function.
@


1.3
log
@first pass; ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d3 1
a3 1
.Dd $Mdocdate: November 15 2015 $
d11 1
a11 1
.Nd Compatibility user interface functions
d50 1
a50 1
to standard output turns echo off and reads an input string from the
d75 1
a75 1
that provides a buffer for you if
d78 3
a92 5
.Sh NOTES
.Fn des_read_pw_string
is available in the MIT Kerberos library as well, and is also available
under the name
.Xr EVP_read_pw_string 3 .
@


1.2
log
@ui_new -> UI_new;
@
text
@d1 3
a3 1
.Dd $Mdocdate: November 12 2015 $
@


1.1
log
@Convert the handful of manuals that had imaginary names,
give them names that really exist.
This also helps jmc@@'s ongoing work on improving NAME sections.
@
text
@d1 1
a1 1
.Dd $Mdocdate: October 09 2015 $
d94 1
a94 1
.Xr ui_new 3
@

