head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.2
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.4
	OPENBSD_6_1_BASE:1.5;
locks; strict;
comment	@.\" @;


1.5
date	2016.12.28.14.06.06;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	o6xFNohoqzcij3k1;

1.4
date	2016.12.25.22.15.10;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	N91DnFI9dsWAs3sH;

1.3
date	2016.12.15.22.24.45;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	7ipgc09oKRPMUUh2;

1.2
date	2016.12.05.16.38.24;	author jmc;	state Exp;
branches;
next	1.1;
commitid	fYZm34KsdCu3fsDD;

1.1
date	2016.12.05.12.50.07;	author schwarze;	state Exp;
branches;
next	;
commitid	bsIrUPs50e367Nf8;


desc
@@


1.5
log
@Minor cleanup:
Improve the one-line description.
Use the standard wordings in some places.
Complete the RETURN VALUES section.
@
text
@.\"	$OpenBSD: X509_PUBKEY_new.3,v 1.4 2016/12/25 22:15:10 schwarze Exp $
.\"	OpenSSL 99d63d46 Oct 26 13:56:48 2016 -0400
.\"
.\" This file was written by Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2016 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 25 2016 $
.Dt X509_PUBKEY_NEW 3
.Os
.Sh NAME
.Nm X509_PUBKEY_new ,
.Nm X509_PUBKEY_free ,
.Nm X509_PUBKEY_set ,
.Nm X509_PUBKEY_get ,
.Nm d2i_PUBKEY ,
.Nm i2d_PUBKEY ,
.Nm d2i_PUBKEY_bio ,
.Nm d2i_PUBKEY_fp ,
.Nm i2d_PUBKEY_fp ,
.Nm i2d_PUBKEY_bio ,
.Nm X509_PUBKEY_set0_param ,
.Nm X509_PUBKEY_get0_param
.Nd X.509 SubjectPublicKeyInfo structure
.Sh SYNOPSIS
.In openssl/x509.h
.Ft X509_PUBKEY *
.Fn X509_PUBKEY_new void
.Ft void
.Fo X509_PUBKEY_free
.Fa "X509_PUBKEY *a"
.Fc
.Ft int
.Fo X509_PUBKEY_set
.Fa "X509_PUBKEY **x"
.Fa "EVP_PKEY *pkey"
.Fc
.Ft EVP_PKEY *
.Fo X509_PUBKEY_get
.Fa "X509_PUBKEY *key"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PUBKEY
.Fa "EVP_PKEY **a"
.Fa "const unsigned char **pp"
.Fa "long length"
.Fc
.Ft int
.Fo i2d_PUBKEY
.Fa "EVP_PKEY *a"
.Fa "unsigned char **pp"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PUBKEY_bio
.Fa "BIO *bp"
.Fa "EVP_PKEY **a"
.Fc
.Ft EVP_PKEY *
.Fo d2i_PUBKEY_fp
.Fa "FILE *fp"
.Fa "EVP_PKEY **a"
.Fc
.Ft int
.Fo i2d_PUBKEY_fp
.Fa "FILE *fp"
.Fa "EVP_PKEY *pkey"
.Fc
.Ft int
.Fo i2d_PUBKEY_bio
.Fa "BIO *bp"
.Fa "EVP_PKEY *pkey"
.Fc
.Ft int
.Fo X509_PUBKEY_set0_param
.Fa "X509_PUBKEY *pub"
.Fa "ASN1_OBJECT *aobj"
.Fa "int ptype"
.Fa "void *pval"
.Fa "unsigned char *penc"
.Fa "int penclen"
.Fc
.Ft int
.Fo X509_PUBKEY_get0_param
.Fa "ASN1_OBJECT **ppkalg"
.Fa "const unsigned char **pk"
.Fa "int *ppklen"
.Fa "X509_ALGOR **pa"
.Fa "X509_PUBKEY *pub"
.Fc
.Sh DESCRIPTION
The
.Vt X509_PUBKEY
structure represents the ASN.1
.Vt SubjectPublicKeyInfo
structure defined in RFC 5280 section 4.1 and used in certificates
and certificate requests.
.Pp
.Fn X509_PUBKEY_new
allocates and initializes an
.Vt X509_PUBKEY
structure.
.Pp
.Fn X509_PUBKEY_free
frees up the
.Vt X509_PUBKEY
structure
.Fa a .
If
.Fa a
is a
.Dv NULL
pointer, no action occurs.
.Pp
.Fn X509_PUBKEY_set
sets the public key in
.Pf * Fa x
to the public key contained in the
.Vt EVP_PKEY
structure
.Fa pkey .
If
.Pf * Fa x
is not
.Dv NULL ,
any existing public key structure will be freed.
.Pp
.Fn X509_PUBKEY_get
returns the public key contained in
.Fa key .
The reference
count on the returned key is incremented so it must be freed using
.Xr EVP_PKEY_free 3
after use.
.Pp
.Fn d2i_PUBKEY
and
.Fn i2d_PUBKEY
decode and encode an
.Vt EVP_PKEY
structure using
.Vt SubjectPublicKeyInfo
format.
For details about the semantics, examples, caveats, and bugs, see
.Xr ASN1_item_d2i 3 .
.Fn d2i_PUBKEY_bio ,
.Fn d2i_PUBKEY_fp ,
.Fn i2d_PUBKEY_bio
and
.Fn i2d_PUBKEY_fp
are similar except they decode or encode using a
.Vt BIO
or
.Vt FILE
pointer.
.Pp
.Fn X509_PUBKEY_set0_param
sets the public key parameters of
.Fa pub .
The OID associated with the algorithm is set to
.Fa aobj .
The type of the algorithm parameters is set to
.Fa ptype
using the structure
.Fa pval .
The encoding of the public key itself is set to the
.Fa penclen
bytes contained in buffer
.Fa penc .
On success ownership of all the supplied parameters is passed to
.Fa pub
so they must not be freed after the call.
.Pp
.Fn X509_PUBKEY_get0_param
retrieves the public key parameters from
.Fa pub ,
.Pf * Fa ppkalg
is set to the associated OID and the encoding consists of
.Pf * Fa ppklen
bytes at
.Pf * Fa pk ,
and
.Pf * Fa pa
is set to the associated
.Vt AlgorithmIdentifier
for the public key.
If the value of any of these parameters is not required,
it can be set to
.Dv NULL .
All of the retrieved pointers are internal and must not be freed after
the call.
.Sh RETURN VALUES
If the allocation fails,
.Fn X509_PUBKEY_new
returns
.Dv NULL
and sets an error code that can be obtained by
.Xr ERR_get_error 3 .
Otherwise it returns a pointer to the newly allocated structure.
.Pp
.Fn X509_PUBKEY_get ,
.Fn d2i_PUBKEY ,
.Fn d2i_PUBKEY_bio ,
and
.Fn d2i_PUBKEY_fp
return a pointer to an
.Vt EVP_PKEY
structure or
.Dv NULL
if an error occurs.
.Pp
.Fn i2d_PUBKEY
returns the number of bytes successfully encoded or a negative value
if an error occurs.
.Pp
.Fn X509_PUBKEY_set ,
.Fn X509_PUBKEY_set0_param ,
.Fn X509_PUBKEY_get0_param ,
.Fn i2d_PUBKEY_fp ,
and
.Fn i2d_PUBKEY_bio
return 1 for success and 0 if an error occurred.
.Sh SEE ALSO
.Xr d2i_X509 3 ,
.Xr ERR_get_error 3 ,
.Xr X509_ALGOR_new 3 ,
.Xr X509_get_pubkey 3
.Sh STANDARDS
RFC 5280: Internet X.509 Public Key Infrastructure Certificate and
Certificate Revocation List (CRL) Profile
@


1.4
log
@Consistently mark up various ASN.1 type names defined in standards
related to X.509 with .Vt such that they can be searched for.
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_PUBKEY_new.3,v 1.3 2016/12/15 22:24:45 schwarze Exp $
d51 1
a51 1
.Dd $Mdocdate: December 15 2016 $
d67 1
a67 1
.Nd SubjectPublicKeyInfo public key functions
d155 1
a155 1
pointer, nothing is done.
d186 2
a187 3
They otherwise follow the conventions of other ASN.1 functions such as
.Xr d2i_X509 3 .
.Pp
d193 1
a193 5
are similar to
.Fn d2i_PUBKEY
and
.Fn i2d_PUBKEY
except they decode or encode using a
a240 1
.Pp
d243 3
a245 1
.Fn X509_PUBKEY_get0
d247 1
a247 1
.Fn X509_PUBKEY_get
d254 4
d259 3
a261 1
.Fn X509_PUBKEY_set0_param
d263 1
a263 1
.Fn X509_PUBKEY_get0_param
@


1.3
log
@Add a STANDARDS section and mention the relevant section of the standard.
Link to X509_ALGOR_new(3) because one of the functions uses X509_ALGOR.
Delete a sentence about a function we don't have.
Delete another sentence that says nothing new.
Remove some macros that we don't normally use.
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_PUBKEY_new.3,v 1.2 2016/12/05 16:38:24 jmc Exp $
d51 1
a51 1
.Dd $Mdocdate: December 5 2016 $
d136 4
a139 3
structure represents the ASN.1 SubjectPublicKeyInfo structure defined
in RFC 5280 section 4.1 and used in certificates and certificate
requests.
d183 3
a185 1
structure using SubjectPublicKeyInfo format.
d231 3
a233 1
is set to the associated AlgorithmIdentifier for the public key.
@


1.2
log
@various cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_PUBKEY_new.3,v 1.1 2016/12/05 12:50:07 schwarze Exp $
d136 2
a137 3
structure represents the ASN.1
.Sy SubjectPublicKeyInfo
structure defined in RFC 5280 and used in certificates and certificate
d182 1
a182 3
structure using
.Sy SubjectPublicKeyInfo
format.
a233 10
.Pp
The
.Vt X509_PUBKEY
functions can be used to encode and decode public keys in a standard
format.
.Pp
In many cases applications will not call the
.Vt X509_PUBKEY
functions directly: they will instead call wrapper functions such as
.Xr X509_get0_pubkey 3 .
d261 1
d263 3
@


1.1
log
@import X509_PUBKEY_new(3) from OpenSSL
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d51 1
a51 1
.Dd $Mdocdate: November 23 2016 $
d175 1
a175 1
.Xr EVP_PKEY_free
d229 1
@

