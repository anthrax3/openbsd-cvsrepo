head	1.7;
access;
symbols
	OPENBSD_6_1:1.7.0.2
	OPENBSD_6_1_BASE:1.7
	OPENBSD_6_0:1.1.0.8
	OPENBSD_6_0_BASE:1.1
	OPENBSD_5_9:1.1.0.4
	OPENBSD_5_9_BASE:1.1
	OPENBSD_5_8:1.1.0.6
	OPENBSD_5_8_BASE:1.1
	OPENBSD_5_7:1.1.0.2
	OPENBSD_5_7_BASE:1.1;
locks; strict;
comment	@.\" @;


1.7
date	2017.01.30.07.51.27;	author jmc;	state Exp;
branches;
next	1.6;
commitid	X1Fr3FfzkEySS3ae;

1.6
date	2017.01.29.23.41.49;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	FloUzMW8EnGCxncS;

1.5
date	2016.12.10.21.13.25;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	4coMobrzJtYgMso4;

1.4
date	2016.11.20.17.47.18;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	7f0V5WtnVSnVR923;

1.3
date	2016.11.08.22.19.45;	author jmc;	state Exp;
branches;
next	1.2;
commitid	oqOHR41PrHYVU7vt;

1.2
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.1;
commitid	UKoyflsJLv0vYdpL;

1.1
date	2015.02.23.17.43.24;	author schwarze;	state Exp;
branches;
next	;
commitid	YTrWDOlpO82FZm6K;


desc
@@


1.7
log
@tweak previous;
@
text
@.\"	$OpenBSD: BN_mod_mul_montgomery.3,v 1.6 2017/01/29 23:41:49 schwarze Exp $
.\"	OpenSSL 6859cf74 Sep 25 13:33:28 2002 +0000
.\"
.\" This file was written by Ulf Moeller <ulf@@openssl.org>.
.\" Copyright (c) 2000 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: January 29 2017 $
.Dt BN_MOD_MUL_MONTGOMERY 3
.Os
.Sh NAME
.Nm BN_MONT_CTX_new ,
.Nm BN_MONT_CTX_init ,
.Nm BN_MONT_CTX_free ,
.Nm BN_MONT_CTX_set ,
.Nm BN_MONT_CTX_copy ,
.Nm BN_mod_mul_montgomery ,
.Nm BN_from_montgomery ,
.Nm BN_to_montgomery
.Nd Montgomery multiplication
.Sh SYNOPSIS
.In openssl/bn.h
.Ft BN_MONT_CTX *
.Fo BN_MONT_CTX_new
.Fa void
.Fc
.Ft void
.Fo BN_MONT_CTX_init
.Fa "BN_MONT_CTX *ctx"
.Fc
.Ft void
.Fo BN_MONT_CTX_free
.Fa "BN_MONT_CTX *mont"
.Fc
.Ft int
.Fo BN_MONT_CTX_set
.Fa "BN_MONT_CTX *mont"
.Fa "const BIGNUM *m"
.Fa "BN_CTX *ctx"
.Fc
.Ft BN_MONT_CTX *
.Fo BN_MONT_CTX_copy
.Fa "BN_MONT_CTX *to"
.Fa "BN_MONT_CTX *from"
.Fc
.Ft int
.Fo BN_mod_mul_montgomery
.Fa "BIGNUM *r"
.Fa "BIGNUM *a"
.Fa "BIGNUM *b"
.Fa "BN_MONT_CTX *mont"
.Fa "BN_CTX *ctx"
.Fc
.Ft int
.Fo BN_from_montgomery
.Fa "BIGNUM *r"
.Fa "BIGNUM *a"
.Fa "BN_MONT_CTX *mont"
.Fa "BN_CTX *ctx"
.Fc
.Ft int
.Fo BN_to_montgomery
.Fa "BIGNUM *r"
.Fa "BIGNUM *a"
.Fa "BN_MONT_CTX *mont"
.Fa "BN_CTX *ctx"
.Fc
.Sh DESCRIPTION
These functions implement Montgomery multiplication.
They are used automatically when
.Xr BN_mod_exp 3
is called with suitable input, but they may be useful when several
operations are to be performed using the same modulus.
.Pp
.Fn BN_MONT_CTX_new
allocates and initializes a
.Vt BN_MONT_CTX
structure.
.Pp
.Fn BN_MONT_CTX_init
initializes an existing uninitialized
.Vt BN_MONT_CTX .
It is deprecated and dangerous: see
.Sx CAVEATS .
.Pp
.Fn BN_MONT_CTX_set
sets up the
.Fa mont
structure from the modulus
.Fa m
by precomputing its inverse and a value R.
.Pp
.Fn BN_MONT_CTX_copy
copies the
.Vt BN_MONT_CTX
.Fa from
to
.Fa to .
.Pp
.Fn BN_MONT_CTX_free
frees the components of the
.Vt BN_MONT_CTX ,
and, if it was created by
.Fn BN_MONT_CTX_new ,
also the structure itself.
If
.Fa mont
is a
.Dv NULL
pointer, no action occurs.
.Pp
.Fn BN_mod_mul_montgomery
computes
.Pp
.D1 Mont Ns Po Fa a , Fa b Pc := Fa a No * Fa b No * R^-1
.Pp
and places the result in
.Fa r .
.Pp
.Fn BN_from_montgomery
performs the Montgomery reduction
.Pp
.D1 Fa r No = Fa a No * R^-1
.Pp
.Fn BN_to_montgomery
computes
.Pp
.D1 Mont Ns Po Fa a , No R^2 Pc = Fa a No * R
.Pp
Note that
.Fa a
must be non-negative and smaller than the modulus.
.Pp
For all functions,
.Fa ctx
is a previously allocated
.Vt BN_CTX
used for temporary variables.
.Pp
The
.Vt BN_MONT_CTX
structure is defined as follows:
.Bd -literal
typedef struct bn_mont_ctx_st {
	int ri;		/* number of bits in R */
	BIGNUM RR;	/* R^2 (used to convert to Montgomery form) */
	BIGNUM N;	/* The modulus */
	BIGNUM Ni;	/* R*(1/R mod N) - N*Ni = 1
			 * (Ni is only stored for bignum algorithm) */
	BN_ULONG n0;	/* least significant word of Ni */
	int flags;
} BN_MONT_CTX;
.Ed
.Pp
.Fn BN_to_montgomery
is a macro.
.Pp
.Sy Warning :
The inputs must be reduced modulo
.Fa m ,
otherwise the result will be outside the expected range.
.Sh RETURN VALUES
.Fn BN_MONT_CTX_new
returns the newly allocated
.Vt BN_MONT_CTX
or
.Dv NULL
on error.
.Pp
For the other functions, 1 is returned for success or 0 on error.
The error codes can be obtained by
.Xr ERR_get_error 3 .
.Sh SEE ALSO
.Xr BN_add 3 ,
.Xr BN_CTX_new 3 ,
.Xr BN_new 3
.Sh HISTORY
.Fn BN_MONT_CTX_new ,
.Fn BN_MONT_CTX_free ,
.Fn BN_MONT_CTX_set ,
.Fn BN_mod_mul_montgomery ,
.Fn BN_from_montgomery
and
.Fn BN_to_montgomery
are available in all versions of SSLeay and OpenSSL.
.Pp
.Fn BN_MONT_CTX_init
and
.Fn BN_MONT_CTX_copy
were added in SSLeay 0.9.1b.
.Sh CAVEATS
.Fn BN_MONT_CTX_init
must not be called on a context that was used previously, or
memory used by the embedded
.Vt BIGNUM
structures is leaked immediately.
Besides, it must not be called on a context created with
.Fn BN_MONT_CTX_new ,
or the context itself will likely be leaked later.
It can only be used on a static
.Vt BN_MONT_CTX
structure, on one located on the stack, or on one
.Xr malloc 3 Ap ed
manually, but all these options are discouraged because they
will no longer work once
.Vt BN_MONT_CTX
is made opaque.
@


1.6
log
@Seriously warn against calling BN_init(3), BN_MONT_CTX_init(3),
and BN_RECP_CTX_init(3).  They are not only deprecated but so
dangerous that they are almost unusable.  I found these scary
traps while reading the code in order to document BN_set_flags(3).
While here, delete ERR_get_error(3) from SEE ALSO.
@
text
@d1 1
a1 1
.\"	$OpenBSD: BN_mod_mul_montgomery.3,v 1.5 2016/12/10 21:13:25 schwarze Exp $
d51 1
a51 1
.Dd $Mdocdate: December 10 2016 $
d126 1
a126 1
It is deprecated and dangerous, see
d250 1
a250 1
will be made opaque.
@


1.5
log
@replace all references to bn(3) with BN_new(3),
and make sure all BN*(3) pages point back to BN_new(3)
@
text
@d1 1
a1 1
.\"	$OpenBSD: BN_mod_mul_montgomery.3,v 1.4 2016/11/20 17:47:18 schwarze Exp $
d51 1
a51 1
.Dd $Mdocdate: November 20 2016 $
d122 1
d126 2
d219 1
a219 2
.Xr BN_new 3 ,
.Xr ERR_get_error 3
d234 17
@


1.4
log
@Add Copyright and license.
Mention that some *_free(3) functions accept NULL.
Delete useless statements about void functions not retuning a value.
@
text
@d1 1
a1 1
.\"	$OpenBSD: BN_mod_mul_montgomery.3,v 1.3 2016/11/08 22:19:45 jmc Exp $
d51 1
a51 1
.Dd $Mdocdate: November 8 2016 $
a213 1
.Xr bn 3 ,
d216 1
@


1.3
log
@some cleanup;
@
text
@d1 2
a2 1
.\"	$OpenBSD: BN_mod_mul_montgomery.3,v 1.2 2016/11/06 15:52:50 jmc Exp $
d4 48
a51 1
.Dd $Mdocdate: November 6 2016 $
d146 5
d205 2
a206 2
.Vt BN_MONT_CTX ,
and
d210 1
a210 6
.Fn BN_MONT_CTX_init
and
.Fn BN_MONT_CTX_free
return no values.
.Pp
For the other functions, 1 is returned for success, 0 on error.
@


1.2
log
@first pass; ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d3 1
a3 1
.Dd $Mdocdate: February 23 2015 $
a6 1
.Nm BN_mod_mul_montgomery ,
d12 1
d110 1
a110 1
.D1 Fa r No = Fa a No * R^-1.
d115 1
a115 1
.D1 Mont Ns Po Fa a , No R^2 Pc = Fa a No * R .
d145 1
a145 1
.Sy Warning:
@


1.1
log
@fourth batch of perlpod(1) to mdoc(7) conversion
@
text
@d1 3
a3 1
.Dd $Mdocdate: May 15 2002 $
@

