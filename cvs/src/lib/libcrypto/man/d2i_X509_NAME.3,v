head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10;
locks; strict;
comment	@.\" @;


1.10
date	2017.01.07.08.46.13;	author jmc;	state Exp;
branches;
next	1.9;
commitid	by8m1EpC3S40aFP4;

1.9
date	2017.01.07.01.25.14;	author schwarze;	state Exp;
branches;
next	1.8;
commitid	AX9f3mbJtO2J73R4;

1.8
date	2016.12.28.14.33.34;	author schwarze;	state Exp;
branches;
next	1.7;
commitid	Y6PG5J4CojHkWI2T;

1.7
date	2016.12.25.22.15.10;	author schwarze;	state Exp;
branches;
next	1.6;
commitid	N91DnFI9dsWAs3sH;

1.6
date	2016.12.14.17.26.35;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	2bFbE01VIhviJJEW;

1.5
date	2016.12.14.16.18.31;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	wIYfXTz88jADvjUA;

1.4
date	2016.12.08.20.22.08;	author jmc;	state Exp;
branches;
next	1.3;
commitid	vZvBNDQVbNFhvlqz;

1.3
date	2016.12.05.20.32.19;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	250ZJHxAoe5k8OHq;

1.2
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.1;
commitid	UKoyflsJLv0vYdpL;

1.1
date	2016.11.04.15.29.03;	author schwarze;	state Exp;
branches;
next	;
commitid	htI4Kc9Z4rYZWBtR;


desc
@@


1.10
log
@a little more cleanup;
@
text
@.\"	$OpenBSD: d2i_X509_NAME.3,v 1.9 2017/01/07 01:25:14 schwarze Exp $
.\"	OpenSSL d900a015 Oct 8 14:40:42 2015 +0200
.\"
.\" Copyright (c) 2016, 2017 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 7 2017 $
.Dt D2I_X509_NAME 3
.Os
.Sh NAME
.Nm d2i_X509_NAME ,
.Nm i2d_X509_NAME ,
.Nm X509_NAME_dup ,
.Nm X509_NAME_hash ,
.Nm d2i_X509_NAME_ENTRY ,
.Nm i2d_X509_NAME_ENTRY ,
.Nm X509_NAME_ENTRY_dup
.\" In the following line, "X.501" and "Name" are not typos.
.\" The "Name" type is defined in X.501, not in X.509.
.\" The type in called "Name" with capital "N", not "name".
.Nd decode and encode X.501 Name objects
.Sh SYNOPSIS
.In openssl/x509.h
.Ft X509_NAME *
.Fo d2i_X509_NAME
.Fa "X509_NAME **val_out"
.Fa "unsigned char **der_in"
.Fa "long length"
.Fc
.Ft int
.Fo i2d_X509_NAME
.Fa "X509_NAME *val_in"
.Fa "unsigned char **der_out"
.Fc
.Ft X509_NAME *
.Fo X509_NAME_dup
.Fa "X509_NAME *val_in"
.Fc
.Ft unsigned long
.Fo X509_NAME_hash
.Fa "X509_NAME *val_in"
.Fc
.Ft X509_NAME_ENTRY *
.Fo d2i_X509_NAME_ENTRY
.Fa "X509_NAME_ENTRY **val_out"
.Fa "unsigned char **der_in"
.Fa "long length"
.Fc
.Ft int
.Fo i2d_X509_NAME_ENTRY
.Fa "X509_NAME_ENTRY *val_in"
.Fa "unsigned char **der_out"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_dup
.Fa "X509_NAME_ENTRY *val_in"
.Fc
.Sh DESCRIPTION
These functions decode and encode X.501
.Vt Name
objects using DER format.
For details about the semantics, examples, caveats, and bugs, see
.Xr ASN1_item_d2i 3 .
.Pp
.Fn d2i_X509_NAME
and
.Fn i2d_X509_NAME
decode and encode an ASN.1
.Vt Name
structure defined in RFC 5280 section 4.1.2.4.
.Pp
.Fn X509_NAME_dup
copies
.Fa val_in
by calling
.Fn i2d_X509_NAME
and
.Fn d2i_X509_NAME .
.Pp
.Fn X509_NAME_hash
calculates a
.Xr SHA1 3
hash of the DER-encoded form of the name
.Pf * Fa val_in .
It is for example used by
.Xr X509_LOOKUP_hash_dir 3
to locate certificate files in the file system.
.Pp
.Fn d2i_X509_NAME_ENTRY
and
.Fn i2d_X509_NAME_ENTRY
decode and encode an ASN.1
.Vt RelativeDistinguishedName
structure defined in RFC 5280 section 4.1.2.4.
.Pp
.Fn X509_NAME_ENTRY_dup
copies
.Fa val_in
by calling
.Fn i2d_X509_NAME_ENTRY
and
.Fn d2i_X509_NAME_ENTRY .
.Sh RETURN VALUES
.Fn d2i_X509_NAME
and
.Fn X509_NAME_dup
return the new
.Vt X509_NAME
object or
.Dv NULL
if an error occurs.
.Pp
.Fn X509_NAME_hash
returns the hash value or 0 if an error occurs.
.Pp
.Fn d2i_X509_NAME_ENTRY
and
.Fn X509_NAME_ENTRY_dup
return the new
.Vt X509_NAME_ENTRY
object or
.Dv NULL
if an error occurs.
.Pp
.Fn i2d_X509_NAME
and
.Fn i2d_X509_NAME_ENTRY
return the number of bytes successfully encoded or a negative value
if an error occurs.
.Sh SEE ALSO
.Xr ASN1_item_d2i 3 ,
.Xr X509_NAME_ENTRY_new 3 ,
.Xr X509_NAME_new 3 ,
.Xr X509_NAME_print_ex 3
.Sh STANDARDS
RFC 5280: Internet X.509 Public Key Infrastructure Certificate and
Certificate Revocation List (CRL) Profile
.Pp
ITU-T Recommendation X.690, also known as ISO/IEC 8825-1:
Information technology - ASN.1 encoding rules:
Specification of Basic Encoding Rules (BER), Canonical Encoding
Rules (CER) and Distinguished Encoding Rules (DER).
@


1.9
log
@Document X509_NAME_hash(3), listed in <openssl/x509.h>;
jmc@@ reported that X509_LOOKUP_hash_dir(3) references it.
Even though OpenSSL does not document it, given that it is used for
file names that users have to create, it is sufficiently exposed
to users to be worth documenting.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.8 2016/12/28 14:33:34 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 28 2016 $
d92 1
a92 1
calculates an
@


1.8
log
@Use the same parameter names as in ASN1_item_d2i(3).
Use simpler standard wordings.
Add X.509 references.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.7 2016/12/25 22:15:10 schwarze Exp $
d4 1
a4 1
.\" Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
d18 1
a18 1
.Dd $Mdocdate: December 25 2016 $
d25 1
d50 4
d91 9
d123 3
@


1.7
log
@Consistently mark up various ASN.1 type names defined in standards
related to X.509 with .Vt such that they can be searched for.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.6 2016/12/14 17:26:35 schwarze Exp $
d18 1
a18 1
.Dd $Mdocdate: December 14 2016 $
d36 2
a37 2
.Fa "X509_NAME **name"
.Fa "unsigned char **in"
d42 2
a43 2
.Fa "X509_NAME *name"
.Fa "unsigned char **out"
d47 1
a47 1
.Fa "X509_NAME *name"
d51 2
a52 2
.Fa "X509_NAME_ENTRY **ne"
.Fa "unsigned char **in"
d57 2
a58 2
.Fa "X509_NAME_ENTRY *ne"
.Fa "unsigned char **out"
d62 1
a62 1
.Fa "X509_NAME_ENTRY *ne"
d65 1
a65 6
.Fn d2i_X509_NAME
decodes
.Fa length
bytes of the DER-encoded string
.Pf * Fa in
and stores the resulting
d67 3
a69 2
object in
.Pf * Fa name .
d71 2
d74 3
a76 4
encodes
.Fa name
into DER format and stores the result to
.Pf * Fa out .
d80 1
a80 1
.Fa name
d87 3
a89 5
decodes
.Fa length
bytes of the DER-encoded string
.Pf * Fa in
and stores the resulting
d91 1
a91 8
object in
.Pf * Fa ne .
.Pp
.Fn i2d_X509_NAME_ENTRY
encodes
.Fa ne
into DER format and stores the result to
.Pf * Fa out .
d95 1
a95 1
.Fa ne
a99 12
.Pp
For details of the behaviour, see
.Xr d2i_X509 3 .
.Pp
Regarding
.Vt X509_NAME
objects, see
.Xr X509_NAME_new 3 .
Regarding
.Vt X509_NAME_ENTRY
objects, see
.Xr X509_NAME_ENTRY_new 3 .
d122 1
a122 1
returns the number of bytes successfully encoded or a negative value
d125 1
a125 1
.Xr d2i_X509 3 ,
d130 3
@


1.6
log
@Document X509_NAME_dup(3) and X509_NAME_ENTRY_dup(3) listed in
OpenSSL doc/man3/X509_dup.pod and d2i_X509_NAME_ENTRY(3) and
i2d_X509_NAME_ENTRY(3) listed in OpenSSL doc/man3/d2i_X509.pod.
Also add a RETURN VALUES section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.5 2016/12/14 16:18:31 schwarze Exp $
d70 3
a72 1
and stores the resulting Name object in
d94 3
a96 1
and stores the resulting RelativeDistinguishedName object in
@


1.5
log
@Complete rewrite to improve clarity.
Add some cross references and STANDARDS.
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.4 2016/12/08 20:22:08 jmc Exp $
d18 1
a18 1
.Dd $Mdocdate: December 8 2016 $
d23 5
a27 1
.Nm i2d_X509_NAME
d45 19
d79 30
d116 28
d146 1
@


1.4
log
@various cleanup;
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.3 2016/12/05 20:32:19 schwarze Exp $
d4 1
a4 2
.\" This file was written by Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2002, 2015 The OpenSSL Project.  All rights reserved.
d6 11
a16 3
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
d18 1
a18 41
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 5 2016 $
d24 4
a27 1
.Nd X509_NAME encoding functions
d32 2
a33 2
.Fa "X509_NAME **a"
.Fa "unsigned char **pp"
d38 2
a39 2
.Fa "X509_NAME *a"
.Fa "unsigned char **pp"
d42 18
a59 1
These functions decode and encode an
d61 2
a62 8
structure, which is the same as the
.Sy Name
type defined in RFC 2459 (and elsewhere) and used, for example, in
certificate subject and issuer names.
They otherwise behave in a way similar to
.Xr d2i_X509 3
and
.Xr i2d_X509 3 .
d64 8
a71 1
.Xr d2i_X509 3
@


1.3
log
@Copyright and license
@
text
@d1 1
a1 1
.\"	$OpenBSD: d2i_X509_NAME.3,v 1.2 2016/11/06 15:52:50 jmc Exp $
d51 1
a51 1
.Dd $Mdocdate: November 6 2016 $
d74 1
a74 1
structure which is the same as the
d76 1
a76 1
type defined in RFC2459 (and elsewhere) and used for example in
d78 1
a78 2
.Pp
Otherwise the functions behave in a way similar to
@


1.2
log
@first pass; ok schwarze
@
text
@d1 2
a2 1
.\"	$OpenBSD$
d4 48
a51 1
.Dd $Mdocdate: November 4 2016 $
@


1.1
log
@convert X509 manuals from pod to mdoc
@
text
@d1 3
a3 1
.Dd $Mdocdate: July 18 2015 $
@

