head	1.6;
access;
symbols
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6;
locks; strict;
comment	@.\" @;


1.6
date	2016.12.25.22.15.10;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	N91DnFI9dsWAs3sH;

1.5
date	2016.12.14.21.22.06;	author jmc;	state Exp;
branches;
next	1.4;
commitid	q0abvcNHRwCGMCfq;

1.4
date	2016.12.14.16.07.05;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	XhOJ2fRprQxMJcCK;

1.3
date	2016.12.05.12.07.57;	author schwarze;	state Exp;
branches;
next	1.2;
commitid	PNp6hq5OL1rpv2Nv;

1.2
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.1;
commitid	UKoyflsJLv0vYdpL;

1.1
date	2016.11.04.15.29.03;	author schwarze;	state Exp;
branches;
next	;
commitid	htI4Kc9Z4rYZWBtR;


desc
@@


1.6
log
@Consistently mark up various ASN.1 type names defined in standards
related to X.509 with .Vt such that they can be searched for.
@
text
@.\"	$OpenBSD: X509_NAME_ENTRY_get_object.3,v 1.5 2016/12/14 21:22:06 jmc Exp $
.\"	OpenSSL aebb9aac Jul 19 09:27:53 2016 -0400
.\"
.\" This file is a derived work.
.\" The changes are covered by the following Copyright and license:
.\"
.\" Copyright (c) 2016 Ingo Schwarze <schwarze@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.\" The original file was written by Dr. Stephen Henson <steve@@openssl.org>.
.\" Copyright (c) 2002, 2005, 2006 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 14 2016 $
.Dt X509_NAME_ENTRY_GET_OBJECT 3
.Os
.Sh NAME
.Nm X509_NAME_ENTRY_new ,
.Nm X509_NAME_ENTRY_free ,
.Nm X509_NAME_ENTRY_get_object ,
.Nm X509_NAME_ENTRY_get_data ,
.Nm X509_NAME_ENTRY_set_object ,
.Nm X509_NAME_ENTRY_set_data ,
.Nm X509_NAME_ENTRY_create_by_txt ,
.Nm X509_NAME_ENTRY_create_by_NID ,
.Nm X509_NAME_ENTRY_create_by_OBJ
.\" In the following line, "X.501" is not a typo.
.\" This object defined in X.501, not in X.509.
.Nd X.501 relative distinguished name
.Sh SYNOPSIS
.In openssl/x509.h
.Ft X509_NAME_ENTRY *
.Fn X509_NAME_ENTRY_new void
.Ft void
.Fo X509_NAME_ENTRY_free
.Fa "X509_NAME_ENTRY* ne"
.Fc
.Ft ASN1_OBJECT *
.Fo X509_NAME_ENTRY_get_object
.Fa "X509_NAME_ENTRY *ne"
.Fc
.Ft ASN1_STRING *
.Fo X509_NAME_ENTRY_get_data
.Fa "X509_NAME_ENTRY *ne"
.Fc
.Ft int
.Fo X509_NAME_ENTRY_set_object
.Fa "X509_NAME_ENTRY *ne"
.Fa "ASN1_OBJECT *obj"
.Fc
.Ft int
.Fo X509_NAME_ENTRY_set_data
.Fa "X509_NAME_ENTRY *ne"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_txt
.Fa "X509_NAME_ENTRY **ne"
.Fa "const char *field"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_NID
.Fa "X509_NAME_ENTRY **ne"
.Fa "int nid"
.Fa "int type"
.Fa "unsigned char *bytes"
.Fa "int len"
.Fc
.Ft X509_NAME_ENTRY *
.Fo X509_NAME_ENTRY_create_by_OBJ
.Fa "X509_NAME_ENTRY **ne"
.Fa "ASN1_OBJECT *obj"
.Fa "int type"
.Fa "const unsigned char *bytes"
.Fa "int len"
.Fc
.Sh DESCRIPTION
An X.501
.Vt RelativeDistinguishedName
is a set of field type and value pairs.
It is the building block for constructing X.501
.Vt Name
objects.
This implementation only supports sets with one element, so an
.Vt X509_NAME_ENTRY
object contains only one field type and one value.
.Pp
.Fn X509_NAME_ENTRY_new
allocates and initializes an empty
.Vt X509_NAME_ENTRY
object, representing an ASN.1
.Vt RelativeDistinguishedName
structure defined in RFC 5280 section 4.1.2.4.
.Pp
.Fn X509_NAME_ENTRY_free
frees
.Fa ne
and the type and value contained in it.
.Pp
.Fn X509_NAME_ENTRY_get_object
retrieves the field type of
.Fa ne
in an
.Vt ASN1_OBJECT
structure.
.Fn X509_NAME_ENTRY_get_data
retrieves the field value of
.Fa ne
in an
.Vt ASN1_STRING
structure.
These two functions can be used to examine an
.Vt X509_NAME_ENTRY
object as returned by
.Xr X509_NAME_get_entry 3 .
.Pp
.Fn X509_NAME_ENTRY_set_object
sets the field type of
.Fa ne
to
.Fa obj .
.Pp
.Fn X509_NAME_ENTRY_set_data
sets the field value of
.Fa ne
to string type
.Fa type
and the value determined by
.Fa bytes
and
.Fa len .
.Pp
.Fn X509_NAME_ENTRY_create_by_txt ,
.Fn X509_NAME_ENTRY_create_by_NID ,
and
.Fn X509_NAME_ENTRY_create_by_OBJ
create and return an
.Vt X509_NAME_ENTRY
structure.
.Pp
Except for
.Fn X509_NAME_ENTRY_get_object
and
.Fn X509_NAME_ENTRY_get_data ,
these functions are rarely used because
.Vt X509_NAME_ENTRY
structures are almost always part of
.Vt X509_NAME
structures and the functions described in
.Xr X509_NAME_add_entry_by_txt 3
are typically used to create and add new entries in a single operation.
.Pp
The arguments of these functions support similar options to the
similarly named ones described in
.Xr X509_NAME_add_entry_by_txt 3 .
So for example
.Fa type
can be set to
.Dv MBSTRING_ASC ,
but in the case of
.Fn X509_NAME_ENTRY_set_data
the field type must be set first so the relevant field information
can be looked up internally.
.Sh SEE ALSO
.Xr ERR_get_error 3 ,
.Xr OBJ_nid2obj 3 ,
.Xr X509_NAME_add_entry 3 ,
.Xr X509_NAME_get_entry 3 ,
.Xr X509_NAME_new 3
.Sh STANDARDS
RFC 5280: Internet X.509 Public Key Infrastructure Certificate and
Certificate Revocation List (CRL) Profile
.Pp
ITU-T Recommendation X.501, also known as ISO/IEC 9594-2: Information
Technology  Open Systems Interconnection  The Directory: Models,
section 9.3: Relative distinguished name
@


1.5
log
@an Xr and new line fix;
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_NAME_ENTRY_get_object.3,v 1.4 2016/12/14 16:07:05 schwarze Exp $
d137 6
a142 3
An X.501 RelativeDistinguishedName is a set of field type and
value pairs.
It is the building block for constructing X.501 Name objects.
d150 3
a152 2
object, representing an ASN.1 RelativeDistinguishedName structure
defined in RFC 5280 section 4.1.2.4.
@


1.4
log
@Document X509_NAME_ENTRY_new(3) and X509_NAME_ENTRY_free(3),
both listed in <openssl/x509.h> and in OpenSSL doc/man3/X509_dup.h.
Note that the OpenSSL documentation specifies the wrong header file.

Explain what X509_NAME_ENTRY represents.
Simplify and clarify some wording.
Sort parts of the text into a more logical order.
Delete an irrelevant cross reference and add some relevant ones.
Add a STANDARDS section.
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_NAME_ENTRY_get_object.3,v 1.3 2016/12/05 12:07:57 schwarze Exp $
d68 1
a68 1
.Dd $Mdocdate: December 5 2016 $
d138 2
a139 2
value pairs.  It is the building block for constructing X.501 Name
objects.
@


1.3
log
@Copyright and license
@
text
@d1 1
a1 1
.\"	$OpenBSD: X509_NAME_ENTRY_get_object.3,v 1.2 2016/11/06 15:52:50 jmc Exp $
d4 18
a21 1
.\" This file was written by Dr. Stephen Henson <steve@@openssl.org>.
d68 1
a68 1
.Dd $Mdocdate: November 6 2016 $
d72 2
d81 3
a83 1
.Nd X509_NAME_ENTRY utility functions
d86 6
d137 18
d156 1
a156 1
retrieves the field name of
a160 1
.Pp
d167 4
d173 1
a173 1
sets the field name of
d196 1
d199 2
a200 13
.Fn X509_NAME_ENTRY_get_data
can be used to examine an
.Vt X509_NAME_ENTRY
function as returned by
.Xr X509_NAME_get_entry 3
for example.
.Pp
.Fn X509_NAME_ENTRY_create_by_txt ,
.Fn X509_NAME_ENTRY_create_by_OBJ ,
.Fn X509_NAME_ENTRY_create_by_NID ,
and
.Fn X509_NAME_ENTRY_set_data
are seldom used in practice because
d204 3
a206 2
structures and the corresponding X509_NAME functions are typically
used to create and add new entries in a single operation.
d209 1
a209 1
similarly named ones of the corresponding X509_NAME functions such as
d217 1
a217 1
the field name must be set first so the relevant field information
a219 1
.Xr d2i_X509_NAME 3 ,
d221 11
a231 1
.Xr OBJ_nid2obj 3
@


1.2
log
@first pass; ok schwarze
@
text
@d1 2
a2 1
.\"	$OpenBSD$
d4 48
a51 1
.Dd $Mdocdate: November 4 2016 $
@


1.1
log
@convert X509 manuals from pod to mdoc
@
text
@d1 3
a3 1
.Dd $Mdocdate: July 11 2014 $
@

