head	1.6;
access;
symbols
	OPENBSD_6_2:1.6.0.2
	OPENBSD_6_2_BASE:1.6
	OPENBSD_6_1:1.6.0.4
	OPENBSD_6_1_BASE:1.6;
locks; strict;
comment	@.\" @;


1.6
date	2016.12.11.14.22.43;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	vNo9ojV3GFqPchdI;

1.5
date	2016.12.06.14.54.55;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	u7rycehkrcCqDGz7;

1.4
date	2016.11.22.01.43.12;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	vi5Teqa44VGOoiMS;

1.3
date	2016.11.15.09.25.45;	author jmc;	state Exp;
branches;
next	1.2;
commitid	vCvBcr1PBrp7ykB6;

1.2
date	2016.11.06.15.52.50;	author jmc;	state Exp;
branches;
next	1.1;
commitid	UKoyflsJLv0vYdpL;

1.1
date	2016.11.02.11.57.56;	author schwarze;	state Exp;
branches;
next	;
commitid	8E9xtEJx9H3iwBNH;


desc
@@


1.6
log
@Distribute the text of ec(3) to the individual EC manuals where it belongs.
Make sure EC_GROUP_new(3) points to all EC manuals and all EC manuals
point back to EC_GROUP_new(3), and add some other useful links as well.
Change all links to ec(3) to point to EC_GROUP_new(3) instead.
@
text
@.\"	$OpenBSD: EC_GFp_simple_method.3,v 1.5 2016/12/06 14:54:55 schwarze Exp $
.\"	OpenSSL b97fdb57 Nov 11 09:33:09 2016 +0100
.\"
.\" This file was written by Matt Caswell <matt@@openssl.org>.
.\" Copyright (c) 2013 The OpenSSL Project.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\"
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\"
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in
.\"    the documentation and/or other materials provided with the
.\"    distribution.
.\"
.\" 3. All advertising materials mentioning features or use of this
.\"    software must display the following acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit. (http://www.openssl.org/)"
.\"
.\" 4. The names "OpenSSL Toolkit" and "OpenSSL Project" must not be used to
.\"    endorse or promote products derived from this software without
.\"    prior written permission. For written permission, please contact
.\"    openssl-core@@openssl.org.
.\"
.\" 5. Products derived from this software may not be called "OpenSSL"
.\"    nor may "OpenSSL" appear in their names without prior written
.\"    permission of the OpenSSL Project.
.\"
.\" 6. Redistributions of any form whatsoever must retain the following
.\"    acknowledgment:
.\"    "This product includes software developed by the OpenSSL Project
.\"    for use in the OpenSSL Toolkit (http://www.openssl.org/)"
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE OpenSSL PROJECT ``AS IS'' AND ANY
.\" EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE OpenSSL PROJECT OR
.\" ITS CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
.\" SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT
.\" NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
.\" LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,
.\" STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED
.\" OF THE POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: December 6 2016 $
.Dt EC_GFP_SIMPLE_METHOD 3
.Os
.Sh NAME
.Nm EC_GFp_simple_method ,
.Nm EC_GFp_mont_method ,
.Nm EC_GFp_nist_method ,
.Nm EC_GFp_nistp224_method ,
.Nm EC_GFp_nistp256_method ,
.Nm EC_GFp_nistp521_method ,
.Nm EC_GF2m_simple_method ,
.Nm EC_METHOD_get_field_type
.Nd obtain EC_METHOD objects
.Sh SYNOPSIS
.In openssl/ec.h
.Ft const EC_METHOD *
.Fn EC_GFp_simple_method void
.Ft const EC_METHOD *
.Fn EC_GFp_mont_method void
.Ft const EC_METHOD *
.Fn EC_GFp_nist_method void
.Ft const EC_METHOD *
.Fn EC_GFp_nistp224_method void
.Ft const EC_METHOD *
.Fn EC_GFp_nistp256_method void
.Ft const EC_METHOD *
.Fn EC_GFp_nistp521_method void
.Ft const EC_METHOD *
.Fn EC_GF2m_simple_method void
.Ft int
.Fo EC_METHOD_get_field_type
.Fa "const EC_METHOD *meth"
.Fc
.Sh DESCRIPTION
The elliptic curve library provides a number of different
implementations through a single common interface.
Each implementation is optimised for different scenarios.
An implementation is represented by an
.Vt EC_METHOD
structure.
.Pp
When constructing a curve using
.Xr EC_GROUP_new 3 ,
an implementation method must be provided.
The functions described here all return a const pointer to an
.Sy EC_METHOD
structure that can be passed to
.Xr EC_GROUP_new 3 .
It is important that the correct implementation type for the form
of curve selected is used.
.Pp
For F2^m curves there is only one implementation choice,
.Fn EC_GF2_simple_method .
.Pp
For Fp curves the lowest common denominator implementation is the
.Fn EC_GFp_simple_method
implementation.
All other implementations are based on this one.
.Fn EC_GFp_mont_method
adds the use of Montgomery multiplication (see
.Xr BN_mod_mul_montgomery 3 ) .
.Fn EC_GFp_nist_method
offers an implementation optimised for use with NIST recommended
curves.
NIST curves are available through
.Xr EC_GROUP_new_by_curve_name 3 .
.Pp
The functions
.Fn EC_GFp_nistp224_method ,
.Fn EC_GFp_nistp256_method ,
and
.Fn EC_GFp_nistp521_method
offer 64-bit optimised implementations for the NIST P224, P256 and
P521 curves respectively.
Note, however, that these implementations are not available on all
platforms.
.Pp
.Fn EC_METHOD_get_field_type
identifies what type of field the
.Vt EC_METHOD
structure supports, which will be either F2^m or Fp.
If the field type is Fp, then the value
.Dv NID_X9_62_prime_field
is returned.
If the field type is F2^m, then the value
.Dv NID_X9_62_characteristic_two_field
is returned.
These values are defined in the
.In openssl/obj_mac.h
header file.
.Sh RETURN VALUES
All
.Fn EC_GFp*
functions and
.Fn EC_GF2m_simple_method
always return a const pointer to an
.Vt EC_METHOD
structure.
.Pp
.Fn EC_METHOD_get_field_type
returns an integer that identifies the type of field the
.Vt EC_METHOD
structure supports.
.Sh SEE ALSO
.Xr BN_mod_mul_montgomery 3 ,
.Xr d2i_ECPKParameters 3 ,
.Xr EC_GROUP_copy 3 ,
.Xr EC_GROUP_new 3 ,
.Xr EC_KEY_new 3 ,
.Xr EC_POINT_add 3 ,
.Xr EC_POINT_new 3
@


1.5
log
@Delete most references to crypto(3).  That page isn't useful enough
to be pointed to from random individual pages.
@
text
@d1 1
a1 1
.\"	$OpenBSD: EC_GFp_simple_method.3,v 1.4 2016/11/22 01:43:12 schwarze Exp $
d51 1
a51 1
.Dd $Mdocdate: November 22 2016 $
d87 5
a156 1
.Xr ec 3 ,
@


1.4
log
@Copyright and license
@
text
@d1 1
a1 1
.\"	$OpenBSD: EC_GFp_simple_method.3,v 1.3 2016/11/15 09:25:45 jmc Exp $
d51 1
a51 1
.Dd $Mdocdate: November 15 2016 $
a150 1
.Xr crypto 3 ,
@


1.3
log
@various cleanup;
@
text
@d1 2
a2 1
.\"	$OpenBSD: EC_GFp_simple_method.3,v 1.2 2016/11/06 15:52:50 jmc Exp $
d4 48
a51 1
.Dd $Mdocdate: November 6 2016 $
@


1.2
log
@first pass; ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d3 1
a3 1
.Dd $Mdocdate: November 2 2016 $
d45 1
a45 1
.Xr EC_GROUP_new .
d57 1
a57 1
adds the use of montgomery multiplication (see
d70 1
a70 1
offer 64 bit optimised implementations for the NIST P224, P256 and
@


1.1
log
@convert DSA and EC manuals from pod to mdoc
@
text
@d1 2
@

