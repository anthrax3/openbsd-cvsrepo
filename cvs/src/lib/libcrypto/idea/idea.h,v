head	1.10;
access;
symbols
	OPENBSD_6_1:1.10.0.2
	OPENBSD_6_1_BASE:1.10;
locks; strict;
comment	@ * @;


1.10
date	2014.06.12.15.49.29;	author deraadt;	state Exp;
branches;
next	1.9;
commitid	mJUVYpkFBZ0Zv2bG;

1.9
date	2014.04.15.20.06.10;	author tedu;	state Exp;
branches;
next	1.8;

1.8
date	2012.10.13.21.25.13;	author djm;	state Exp;
branches;
next	1.7;

1.7
date	2010.10.01.22.58.55;	author djm;	state Exp;
branches;
next	1.6;

1.6
date	2009.01.09.12.15.51;	author djm;	state Exp;
branches;
next	1.5;

1.5
date	2008.09.06.12.17.51;	author djm;	state Exp;
branches;
next	1.4;

1.4
date	2005.04.29.05.39.22;	author djm;	state Exp;
branches;
next	1.3;

1.3
date	2002.05.15.02.29.14;	author beck;	state Exp;
branches;
next	1.2;

1.2
date	2000.12.15.02.57.48;	author beck;	state Exp;
branches;
next	1.1;

1.1
date	99.09.29.04.36.18;	author beck;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2002.09.05.12.50.31;	author markus;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2005.04.29.05.37.11;	author djm;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2008.09.06.12.15.44;	author djm;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2009.01.09.12.13.56;	author djm;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2010.10.01.22.54.08;	author djm;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2012.10.13.21.23.41;	author djm;	state Exp;
branches;
next	;


desc
@@


1.10
log
@tags as requested by miod and tedu
@
text
@/* $OpenBSD$ */
/* Copyright (C) 1995-1997 Eric Young (eay@@cryptsoft.com)
 * All rights reserved.
 *
 * This package is an SSL implementation written
 * by Eric Young (eay@@cryptsoft.com).
 * The implementation was written so as to conform with Netscapes SSL.
 * 
 * This library is free for commercial and non-commercial use as long as
 * the following conditions are aheared to.  The following conditions
 * apply to all code found in this distribution, be it the RC4, RSA,
 * lhash, DES, etc., code; not just the SSL code.  The SSL documentation
 * included with this distribution is covered by the same copyright terms
 * except that the holder is Tim Hudson (tjh@@cryptsoft.com).
 * 
 * Copyright remains Eric Young's, and as such any Copyright notices in
 * the code are not to be removed.
 * If this package is used in a product, Eric Young should be given attribution
 * as the author of the parts of the library used.
 * This can be in the form of a textual message at program startup or
 * in documentation (online or textual) provided with the package.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *    "This product includes cryptographic software written by
 *     Eric Young (eay@@cryptsoft.com)"
 *    The word 'cryptographic' can be left out if the rouines from the library
 *    being used are not cryptographic related :-).
 * 4. If you include any Windows specific code (or a derivative thereof) from 
 *    the apps directory (application code) you must include an acknowledgement:
 *    "This product includes software written by Tim Hudson (tjh@@cryptsoft.com)"
 * 
 * THIS SOFTWARE IS PROVIDED BY ERIC YOUNG ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 * 
 * The licence and distribution terms for any publically available version or
 * derivative of this code cannot be changed.  i.e. this code cannot simply be
 * copied and put under another distribution licence
 * [including the GNU Public Licence.]
 */

#ifndef HEADER_IDEA_H
#define HEADER_IDEA_H

#include <openssl/opensslconf.h> /* IDEA_INT, OPENSSL_NO_IDEA */

#ifdef OPENSSL_NO_IDEA
#error IDEA is disabled.
#endif

#define IDEA_ENCRYPT	1
#define IDEA_DECRYPT	0

#define IDEA_BLOCK	8
#define IDEA_KEY_LENGTH	16

#ifdef  __cplusplus
extern "C" {
#endif

typedef struct idea_key_st
	{
	IDEA_INT data[9][6];
	} IDEA_KEY_SCHEDULE;

const char *idea_options(void);
void idea_ecb_encrypt(const unsigned char *in, unsigned char *out,
	IDEA_KEY_SCHEDULE *ks);
void idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
void idea_set_decrypt_key(IDEA_KEY_SCHEDULE *ek, IDEA_KEY_SCHEDULE *dk);
void idea_cbc_encrypt(const unsigned char *in, unsigned char *out,
	long length, IDEA_KEY_SCHEDULE *ks, unsigned char *iv,int enc);
void idea_cfb64_encrypt(const unsigned char *in, unsigned char *out,
	long length, IDEA_KEY_SCHEDULE *ks, unsigned char *iv,
	int *num,int enc);
void idea_ofb64_encrypt(const unsigned char *in, unsigned char *out,
	long length, IDEA_KEY_SCHEDULE *ks, unsigned char *iv, int *num);
void idea_encrypt(unsigned long *in, IDEA_KEY_SCHEDULE *ks);
#ifdef  __cplusplus
}
#endif

#endif
@


1.9
log
@remove FIPS mode support. people who require FIPS can buy something that
meets their needs, but dumping it in here only penalizes the rest of us.
ok beck deraadt
@
text
@d1 1
a1 1
/* crypto/idea/idea.h */
@


1.8
log
@resolve conflicts
@
text
@a85 3
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
#endif
@


1.7
log
@resolve conflicts, fix local changes
@
text
@d86 3
@


1.6
log
@resolve conflicts
@
text
@a85 3
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
#endif
d87 1
a87 1
void idea_set_decrypt_key(const IDEA_KEY_SCHEDULE *ek, IDEA_KEY_SCHEDULE *dk);
@


1.5
log
@resolve conflicts
@
text
@d86 3
@


1.4
log
@resolve conflicts
@
text
@d62 2
a70 1
#include <openssl/opensslconf.h> /* IDEA_INT */
a85 4
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key,
						IDEA_KEY_SCHEDULE *ks);
#endif
d87 1
a87 1
void idea_set_decrypt_key(IDEA_KEY_SCHEDULE *ek, IDEA_KEY_SCHEDULE *dk);
@


1.3
log
@OpenSSL 0.9.7 stable 2002 05 08 merge
@
text
@d85 4
@


1.2
log
@openssl-engine-0.9.6 merge
@
text
@d62 1
a62 1
#ifdef NO_IDEA
@


1.1
log
@OpenSSL 0.9.4 merge
@
text
@a61 4
#ifdef  __cplusplus
extern "C" {
#endif

d73 4
d83 1
a83 1
void idea_ecb_encrypt(unsigned char *in, unsigned char *out,
d85 1
a85 1
void idea_set_encrypt_key(unsigned char *key, IDEA_KEY_SCHEDULE *ks);
d87 1
a87 1
void idea_cbc_encrypt(unsigned char *in, unsigned char *out,
d89 1
a89 1
void idea_cfb64_encrypt(unsigned char *in, unsigned char *out,
d92 1
a92 1
void idea_ofb64_encrypt(unsigned char *in, unsigned char *out,
@


1.1.1.1
log
@import openssl-0.9.7-beta1
@
text
@d62 5
a66 1
#ifdef OPENSSL_NO_IDEA
a76 4
#ifdef  __cplusplus
extern "C" {
#endif

d83 1
a83 1
void idea_ecb_encrypt(const unsigned char *in, unsigned char *out,
d85 1
a85 1
void idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
d87 1
a87 1
void idea_cbc_encrypt(const unsigned char *in, unsigned char *out,
d89 1
a89 1
void idea_cfb64_encrypt(const unsigned char *in, unsigned char *out,
d92 1
a92 1
void idea_ofb64_encrypt(const unsigned char *in, unsigned char *out,
@


1.1.1.2
log
@import of openssl-0.9.7g; tested on platforms from alpha to zaurus, ok deraadt@@
@
text
@a84 4
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key,
						IDEA_KEY_SCHEDULE *ks);
#endif
@


1.1.1.3
log
@import of OpenSSL 0.9.8h
@
text
@a61 2
#include <openssl/opensslconf.h> /* IDEA_INT, OPENSSL_NO_IDEA */

d69 1
d85 4
d90 1
a90 1
void idea_set_decrypt_key(const IDEA_KEY_SCHEDULE *ek, IDEA_KEY_SCHEDULE *dk);
@


1.1.1.4
log
@import openssl-0.9.8j
@
text
@a85 3
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
#endif
@


1.1.1.5
log
@import OpenSSL-1.0.0a
@
text
@d86 3
d90 1
a90 1
void idea_set_decrypt_key(IDEA_KEY_SCHEDULE *ek, IDEA_KEY_SCHEDULE *dk);
@


1.1.1.6
log
@import OpenSSL-1.0.1c
@
text
@a85 3
#ifdef OPENSSL_FIPS
void private_idea_set_encrypt_key(const unsigned char *key, IDEA_KEY_SCHEDULE *ks);
#endif
@


