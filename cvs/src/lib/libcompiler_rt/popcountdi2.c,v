head     1.1;
branch   1.1.1;
access   ;
symbols  LIBCOMPILER_RT_3_9_0:1.1.1.1 LLVM:1.1.1;
locks    ; strict;
comment  @ * @;


1.1
date     2016.09.05.11.36.18;  author pascal;  state Exp;
branches 1.1.1.1;
next     ;
commitid        CrEv1mwcZ6hJ3tn8;

1.1.1.1
date     2016.09.05.11.36.18;  author pascal;  state Exp;
branches ;
next     ;
commitid        CrEv1mwcZ6hJ3tn8;


desc
@@



1.1
log
@Initial revision
@
text
@/* ===-- popcountdi2.c - Implement __popcountdi2 ----------------------------===
 *
 *                     The LLVM Compiler Infrastructure
 *
 * This file is dual licensed under the MIT and the University of Illinois Open
 * Source Licenses. See LICENSE.TXT for details.
 *
 * ===----------------------------------------------------------------------===
 *
 * This file implements __popcountdi2 for the compiler_rt library.
 *
 * ===----------------------------------------------------------------------===
 */

#include "int_lib.h"

/* Returns: count of 1 bits */

COMPILER_RT_ABI si_int
__popcountdi2(di_int a)
{
    du_int x2 = (du_int)a;
    x2 = x2 - ((x2 >> 1) & 0x5555555555555555uLL);
    /* Every 2 bits holds the sum of every pair of bits (32) */
    x2 = ((x2 >> 2) & 0x3333333333333333uLL) + (x2 & 0x3333333333333333uLL);
    /* Every 4 bits holds the sum of every 4-set of bits (3 significant bits) (16) */
    x2 = (x2 + (x2 >> 4)) & 0x0F0F0F0F0F0F0F0FuLL;
    /* Every 8 bits holds the sum of every 8-set of bits (4 significant bits) (8) */
    su_int x = (su_int)(x2 + (x2 >> 32));
    /* The lower 32 bits hold four 16 bit sums (5 significant bits). */
    /*   Upper 32 bits are garbage */
    x = x + (x >> 16);
    /* The lower 16 bits hold two 32 bit sums (6 significant bits). */
    /*   Upper 16 bits are garbage */
    return (x + (x >> 8)) & 0x0000007F;  /* (7 significant bits) */
}
@


1.1.1.1
log
@Import libcompiler_rt 3.9.0, LLVM's replacement for libgcc.

This is the lib/builtin directory of the compiler-rt source tarball.

comments/ok patrick@@, ok kettenis@@
@
text
@@
