head	1.4;
access;
symbols
	OPENBSD_6_0:1.3.0.4
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.2
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.1.1.7.0.4
	OPENBSD_5_8_BASE:1.1.1.7
	sqlite_3_8_9:1.1.1.7
	sqlite_3_8_8_3:1.1.1.7
	sqlite_3_8_7_4:1.1.1.6
	OPENBSD_5_7:1.1.1.5.0.2
	OPENBSD_5_7_BASE:1.1.1.5
	sqlite_3_8_6:1.1.1.5
	OPENBSD_5_6:1.1.1.5.0.4
	OPENBSD_5_6_BASE:1.1.1.5
	sqlite_3_8_4_3:1.1.1.5
	sqlite_3_8_4:1.1.1.5
	OPENBSD_5_5:1.1.1.4.0.6
	OPENBSD_5_5_BASE:1.1.1.4
	sqlite_3_8_0_2:1.1.1.4
	OPENBSD_5_4:1.1.1.4.0.2
	OPENBSD_5_4_BASE:1.1.1.4
	sqlite_3_7_17:1.1.1.4
	sqlite_3_7_15_2:1.1.1.3
	OPENBSD_5_3:1.1.1.2.0.4
	OPENBSD_5_3_BASE:1.1.1.2
	sqlite_3_7_14_1:1.1.1.2
	OPENBSD_5_2:1.1.1.2.0.2
	OPENBSD_5_2_BASE:1.1.1.2
	sqlite_3_7_13:1.1.1.2
	sqlite_3_7_12_1:1.1.1.1
	sqlite_3_7_12:1.1.1.1
	sqlite_3_7_11:1.1.1.1
	sqlite3:1.1.1;
locks; strict;
comment	@ * @;


1.4
date	2016.09.23.09.22.00;	author sthen;	state dead;
branches;
next	1.3;
commitid	LMPUJfKfHw1CXzY4;

1.3
date	2015.12.23.20.07.37;	author jturner;	state Exp;
branches;
next	1.2;
commitid	0BPXWRtlG51z3eXf;

1.2
date	2015.09.12.02.08.35;	author jturner;	state Exp;
branches;
next	1.1;
commitid	1p2nIN8G7Ftfeiww;

1.1
date	2012.04.14.13.13.17;	author espie;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	2012.04.14.13.13.17;	author espie;	state Exp;
branches;
next	1.1.1.2;

1.1.1.2
date	2012.06.22.17.48.33;	author espie;	state Exp;
branches;
next	1.1.1.3;

1.1.1.3
date	2013.03.18.10.45.20;	author espie;	state Exp;
branches;
next	1.1.1.4;

1.1.1.4
date	2013.06.09.14.42.12;	author landry;	state Exp;
branches;
next	1.1.1.5;

1.1.1.5
date	2014.03.24.01.37.36;	author jturner;	state Exp;
branches;
next	1.1.1.6;

1.1.1.6
date	2015.03.16.00.06.41;	author jturner;	state Exp;
branches;
next	1.1.1.7;
commitid	7NgmCduQCVQ2Dyrr;

1.1.1.7
date	2015.04.04.23.24.51;	author jturner;	state Exp;
branches;
next	;
commitid	EIMtpJwjH1YSLvhn;


desc
@@


1.4
log
@remove lib/libsqlite3, it has moved back to ports
@
text
@/*
** 2010 February 23
**
** The author disclaims copyright to this source code.  In place of
** a legal notice, here is a blessing:
**
**    May you do good and not evil.
**    May you find forgiveness for yourself and forgive others.
**    May you share freely, never taking more than you give.
**
*************************************************************************
**
** This file implements routines used to report what compile-time options
** SQLite was built with.
*/

#ifndef SQLITE_OMIT_COMPILEOPTION_DIAGS

#include "sqliteInt.h"

/*
** An array of names of all compile-time options.  This array should 
** be sorted A-Z.
**
** This array looks large, but in a typical installation actually uses
** only a handful of compile-time options, so most times this array is usually
** rather short and uses little memory space.
*/
static const char * const azCompileOpt[] = {

/* These macros are provided to "stringify" the value of the define
** for those options in which the value is meaningful. */
#define CTIMEOPT_VAL_(opt) #opt
#define CTIMEOPT_VAL(opt) CTIMEOPT_VAL_(opt)

#if SQLITE_32BIT_ROWID
  "32BIT_ROWID",
#endif
#if SQLITE_4_BYTE_ALIGNED_MALLOC
  "4_BYTE_ALIGNED_MALLOC",
#endif
#if SQLITE_CASE_SENSITIVE_LIKE
  "CASE_SENSITIVE_LIKE",
#endif
#if SQLITE_CHECK_PAGES
  "CHECK_PAGES",
#endif
#if SQLITE_COVERAGE_TEST
  "COVERAGE_TEST",
#endif
#if SQLITE_DEBUG
  "DEBUG",
#endif
#if SQLITE_DEFAULT_LOCKING_MODE
  "DEFAULT_LOCKING_MODE=" CTIMEOPT_VAL(SQLITE_DEFAULT_LOCKING_MODE),
#endif
#if defined(SQLITE_DEFAULT_MMAP_SIZE) && !defined(SQLITE_DEFAULT_MMAP_SIZE_xc)
  "DEFAULT_MMAP_SIZE=" CTIMEOPT_VAL(SQLITE_DEFAULT_MMAP_SIZE),
#endif
#if SQLITE_DISABLE_DIRSYNC
  "DISABLE_DIRSYNC",
#endif
#if SQLITE_DISABLE_LFS
  "DISABLE_LFS",
#endif
#if SQLITE_ENABLE_API_ARMOR
  "ENABLE_API_ARMOR",
#endif
#if SQLITE_ENABLE_ATOMIC_WRITE
  "ENABLE_ATOMIC_WRITE",
#endif
#if SQLITE_ENABLE_CEROD
  "ENABLE_CEROD",
#endif
#if SQLITE_ENABLE_COLUMN_METADATA
  "ENABLE_COLUMN_METADATA",
#endif
#if SQLITE_ENABLE_DBSTAT_VTAB
  "ENABLE_DBSTAT_VTAB",
#endif
#if SQLITE_ENABLE_EXPENSIVE_ASSERT
  "ENABLE_EXPENSIVE_ASSERT",
#endif
#if SQLITE_ENABLE_FTS1
  "ENABLE_FTS1",
#endif
#if SQLITE_ENABLE_FTS2
  "ENABLE_FTS2",
#endif
#if SQLITE_ENABLE_FTS3
  "ENABLE_FTS3",
#endif
#if SQLITE_ENABLE_FTS3_PARENTHESIS
  "ENABLE_FTS3_PARENTHESIS",
#endif
#if SQLITE_ENABLE_FTS4
  "ENABLE_FTS4",
#endif
#if SQLITE_ENABLE_FTS5
  "ENABLE_FTS5",
#endif
#if SQLITE_ENABLE_ICU
  "ENABLE_ICU",
#endif
#if SQLITE_ENABLE_IOTRACE
  "ENABLE_IOTRACE",
#endif
#if SQLITE_ENABLE_JSON1
  "ENABLE_JSON1",
#endif
#if SQLITE_ENABLE_LOAD_EXTENSION
  "ENABLE_LOAD_EXTENSION",
#endif
#if SQLITE_ENABLE_LOCKING_STYLE
  "ENABLE_LOCKING_STYLE=" CTIMEOPT_VAL(SQLITE_ENABLE_LOCKING_STYLE),
#endif
#if SQLITE_ENABLE_MEMORY_MANAGEMENT
  "ENABLE_MEMORY_MANAGEMENT",
#endif
#if SQLITE_ENABLE_MEMSYS3
  "ENABLE_MEMSYS3",
#endif
#if SQLITE_ENABLE_MEMSYS5
  "ENABLE_MEMSYS5",
#endif
#if SQLITE_ENABLE_OVERSIZE_CELL_CHECK
  "ENABLE_OVERSIZE_CELL_CHECK",
#endif
#if SQLITE_ENABLE_RTREE
  "ENABLE_RTREE",
#endif
#if defined(SQLITE_ENABLE_STAT4)
  "ENABLE_STAT4",
#elif defined(SQLITE_ENABLE_STAT3)
  "ENABLE_STAT3",
#endif
#if SQLITE_ENABLE_UNLOCK_NOTIFY
  "ENABLE_UNLOCK_NOTIFY",
#endif
#if SQLITE_ENABLE_UPDATE_DELETE_LIMIT
  "ENABLE_UPDATE_DELETE_LIMIT",
#endif
#if SQLITE_HAS_CODEC
  "HAS_CODEC",
#endif
#if HAVE_ISNAN || SQLITE_HAVE_ISNAN
  "HAVE_ISNAN",
#endif
#if SQLITE_HOMEGROWN_RECURSIVE_MUTEX
  "HOMEGROWN_RECURSIVE_MUTEX",
#endif
#if SQLITE_IGNORE_AFP_LOCK_ERRORS
  "IGNORE_AFP_LOCK_ERRORS",
#endif
#if SQLITE_IGNORE_FLOCK_LOCK_ERRORS
  "IGNORE_FLOCK_LOCK_ERRORS",
#endif
#ifdef SQLITE_INT64_TYPE
  "INT64_TYPE",
#endif
#if SQLITE_LOCK_TRACE
  "LOCK_TRACE",
#endif
#if defined(SQLITE_MAX_MMAP_SIZE) && !defined(SQLITE_MAX_MMAP_SIZE_xc)
  "MAX_MMAP_SIZE=" CTIMEOPT_VAL(SQLITE_MAX_MMAP_SIZE),
#endif
#ifdef SQLITE_MAX_SCHEMA_RETRY
  "MAX_SCHEMA_RETRY=" CTIMEOPT_VAL(SQLITE_MAX_SCHEMA_RETRY),
#endif
#if SQLITE_MEMDEBUG
  "MEMDEBUG",
#endif
#if SQLITE_MIXED_ENDIAN_64BIT_FLOAT
  "MIXED_ENDIAN_64BIT_FLOAT",
#endif
#if SQLITE_NO_SYNC
  "NO_SYNC",
#endif
#if SQLITE_OMIT_ALTERTABLE
  "OMIT_ALTERTABLE",
#endif
#if SQLITE_OMIT_ANALYZE
  "OMIT_ANALYZE",
#endif
#if SQLITE_OMIT_ATTACH
  "OMIT_ATTACH",
#endif
#if SQLITE_OMIT_AUTHORIZATION
  "OMIT_AUTHORIZATION",
#endif
#if SQLITE_OMIT_AUTOINCREMENT
  "OMIT_AUTOINCREMENT",
#endif
#if SQLITE_OMIT_AUTOINIT
  "OMIT_AUTOINIT",
#endif
#if SQLITE_OMIT_AUTOMATIC_INDEX
  "OMIT_AUTOMATIC_INDEX",
#endif
#if SQLITE_OMIT_AUTORESET
  "OMIT_AUTORESET",
#endif
#if SQLITE_OMIT_AUTOVACUUM
  "OMIT_AUTOVACUUM",
#endif
#if SQLITE_OMIT_BETWEEN_OPTIMIZATION
  "OMIT_BETWEEN_OPTIMIZATION",
#endif
#if SQLITE_OMIT_BLOB_LITERAL
  "OMIT_BLOB_LITERAL",
#endif
#if SQLITE_OMIT_BTREECOUNT
  "OMIT_BTREECOUNT",
#endif
#if SQLITE_OMIT_BUILTIN_TEST
  "OMIT_BUILTIN_TEST",
#endif
#if SQLITE_OMIT_CAST
  "OMIT_CAST",
#endif
#if SQLITE_OMIT_CHECK
  "OMIT_CHECK",
#endif
#if SQLITE_OMIT_COMPLETE
  "OMIT_COMPLETE",
#endif
#if SQLITE_OMIT_COMPOUND_SELECT
  "OMIT_COMPOUND_SELECT",
#endif
#if SQLITE_OMIT_CTE
  "OMIT_CTE",
#endif
#if SQLITE_OMIT_DATETIME_FUNCS
  "OMIT_DATETIME_FUNCS",
#endif
#if SQLITE_OMIT_DECLTYPE
  "OMIT_DECLTYPE",
#endif
#if SQLITE_OMIT_DEPRECATED
  "OMIT_DEPRECATED",
#endif
#if SQLITE_OMIT_DISKIO
  "OMIT_DISKIO",
#endif
#if SQLITE_OMIT_EXPLAIN
  "OMIT_EXPLAIN",
#endif
#if SQLITE_OMIT_FLAG_PRAGMAS
  "OMIT_FLAG_PRAGMAS",
#endif
#if SQLITE_OMIT_FLOATING_POINT
  "OMIT_FLOATING_POINT",
#endif
#if SQLITE_OMIT_FOREIGN_KEY
  "OMIT_FOREIGN_KEY",
#endif
#if SQLITE_OMIT_GET_TABLE
  "OMIT_GET_TABLE",
#endif
#if SQLITE_OMIT_INCRBLOB
  "OMIT_INCRBLOB",
#endif
#if SQLITE_OMIT_INTEGRITY_CHECK
  "OMIT_INTEGRITY_CHECK",
#endif
#if SQLITE_OMIT_LIKE_OPTIMIZATION
  "OMIT_LIKE_OPTIMIZATION",
#endif
#if SQLITE_OMIT_LOAD_EXTENSION
  "OMIT_LOAD_EXTENSION",
#endif
#if SQLITE_OMIT_LOCALTIME
  "OMIT_LOCALTIME",
#endif
#if SQLITE_OMIT_LOOKASIDE
  "OMIT_LOOKASIDE",
#endif
#if SQLITE_OMIT_MEMORYDB
  "OMIT_MEMORYDB",
#endif
#if SQLITE_OMIT_OR_OPTIMIZATION
  "OMIT_OR_OPTIMIZATION",
#endif
#if SQLITE_OMIT_PAGER_PRAGMAS
  "OMIT_PAGER_PRAGMAS",
#endif
#if SQLITE_OMIT_PRAGMA
  "OMIT_PRAGMA",
#endif
#if SQLITE_OMIT_PROGRESS_CALLBACK
  "OMIT_PROGRESS_CALLBACK",
#endif
#if SQLITE_OMIT_QUICKBALANCE
  "OMIT_QUICKBALANCE",
#endif
#if SQLITE_OMIT_REINDEX
  "OMIT_REINDEX",
#endif
#if SQLITE_OMIT_SCHEMA_PRAGMAS
  "OMIT_SCHEMA_PRAGMAS",
#endif
#if SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
  "OMIT_SCHEMA_VERSION_PRAGMAS",
#endif
#if SQLITE_OMIT_SHARED_CACHE
  "OMIT_SHARED_CACHE",
#endif
#if SQLITE_OMIT_SUBQUERY
  "OMIT_SUBQUERY",
#endif
#if SQLITE_OMIT_TCL_VARIABLE
  "OMIT_TCL_VARIABLE",
#endif
#if SQLITE_OMIT_TEMPDB
  "OMIT_TEMPDB",
#endif
#if SQLITE_OMIT_TRACE
  "OMIT_TRACE",
#endif
#if SQLITE_OMIT_TRIGGER
  "OMIT_TRIGGER",
#endif
#if SQLITE_OMIT_TRUNCATE_OPTIMIZATION
  "OMIT_TRUNCATE_OPTIMIZATION",
#endif
#if SQLITE_OMIT_UTF16
  "OMIT_UTF16",
#endif
#if SQLITE_OMIT_VACUUM
  "OMIT_VACUUM",
#endif
#if SQLITE_OMIT_VIEW
  "OMIT_VIEW",
#endif
#if SQLITE_OMIT_VIRTUALTABLE
  "OMIT_VIRTUALTABLE",
#endif
#if SQLITE_OMIT_WAL
  "OMIT_WAL",
#endif
#if SQLITE_OMIT_WSD
  "OMIT_WSD",
#endif
#if SQLITE_OMIT_XFER_OPT
  "OMIT_XFER_OPT",
#endif
#if SQLITE_PERFORMANCE_TRACE
  "PERFORMANCE_TRACE",
#endif
#if SQLITE_PROXY_DEBUG
  "PROXY_DEBUG",
#endif
#if SQLITE_RTREE_INT_ONLY
  "RTREE_INT_ONLY",
#endif
#if SQLITE_SECURE_DELETE
  "SECURE_DELETE",
#endif
#if SQLITE_SMALL_STACK
  "SMALL_STACK",
#endif
#if SQLITE_SOUNDEX
  "SOUNDEX",
#endif
#if SQLITE_SYSTEM_MALLOC
  "SYSTEM_MALLOC",
#endif
#if SQLITE_TCL
  "TCL",
#endif
#if defined(SQLITE_TEMP_STORE) && !defined(SQLITE_TEMP_STORE_xc)
  "TEMP_STORE=" CTIMEOPT_VAL(SQLITE_TEMP_STORE),
#endif
#if SQLITE_TEST
  "TEST",
#endif
#if defined(SQLITE_THREADSAFE)
  "THREADSAFE=" CTIMEOPT_VAL(SQLITE_THREADSAFE),
#endif
#if SQLITE_USE_ALLOCA
  "USE_ALLOCA",
#endif
#if SQLITE_USER_AUTHENTICATION
  "USER_AUTHENTICATION",
#endif
#if SQLITE_WIN32_MALLOC
  "WIN32_MALLOC",
#endif
#if SQLITE_ZERO_MALLOC
  "ZERO_MALLOC"
#endif
};

/*
** Given the name of a compile-time option, return true if that option
** was used and false if not.
**
** The name can optionally begin with "SQLITE_" but the "SQLITE_" prefix
** is not required for a match.
*/
int sqlite3_compileoption_used(const char *zOptName){
  int i, n;

#if SQLITE_ENABLE_API_ARMOR
  if( zOptName==0 ){
    (void)SQLITE_MISUSE_BKPT;
    return 0;
  }
#endif
  if( sqlite3StrNICmp(zOptName, "SQLITE_", 7)==0 ) zOptName += 7;
  n = sqlite3Strlen30(zOptName);

  /* Since ArraySize(azCompileOpt) is normally in single digits, a
  ** linear search is adequate.  No need for a binary search. */
  for(i=0; i<ArraySize(azCompileOpt); i++){
    if( sqlite3StrNICmp(zOptName, azCompileOpt[i], n)==0
     && sqlite3IsIdChar((unsigned char)azCompileOpt[i][n])==0
    ){
      return 1;
    }
  }
  return 0;
}

/*
** Return the N-th compile-time option string.  If N is out of range,
** return a NULL pointer.
*/
const char *sqlite3_compileoption_get(int N){
  if( N>=0 && N<ArraySize(azCompileOpt) ){
    return azCompileOpt[N];
  }
  return 0;
}

#endif /* SQLITE_OMIT_COMPILEOPTION_DIAGS */
@


1.3
log
@Update sqlite3 to 3.9.2. Bump major, regen .pc and header. Changes
available here: http://sqlite.org/changes.html

Tested in bulk by aja@@. ok landry@@
@
text
@@


1.2
log
@Update sqlite3 to 3.8.11.1. Bump major, regen .pc and header. Changes
available here: http://sqlite.org/changes.html

Tested in bulk by aja@@. ok landry@@ "Please crank sqlite when you get
this mail." deraadt@@
@
text
@d99 3
d107 3
@


1.1
log
@Initial revision
@
text
@d36 1
a36 1
#ifdef SQLITE_32BIT_ROWID
d39 1
a39 1
#ifdef SQLITE_4_BYTE_ALIGNED_MALLOC
d42 1
a42 1
#ifdef SQLITE_CASE_SENSITIVE_LIKE
d45 1
a45 1
#ifdef SQLITE_CHECK_PAGES
d48 1
a48 1
#ifdef SQLITE_COVERAGE_TEST
d51 1
a51 1
#ifdef SQLITE_DEBUG
d54 1
a54 1
#ifdef SQLITE_DEFAULT_LOCKING_MODE
d57 4
a60 1
#ifdef SQLITE_DISABLE_DIRSYNC
d63 1
a63 1
#ifdef SQLITE_DISABLE_LFS
d66 4
a69 1
#ifdef SQLITE_ENABLE_ATOMIC_WRITE
d72 1
a72 1
#ifdef SQLITE_ENABLE_CEROD
d75 1
a75 1
#ifdef SQLITE_ENABLE_COLUMN_METADATA
d78 4
a81 1
#ifdef SQLITE_ENABLE_EXPENSIVE_ASSERT
d84 1
a84 1
#ifdef SQLITE_ENABLE_FTS1
d87 1
a87 1
#ifdef SQLITE_ENABLE_FTS2
d90 1
a90 1
#ifdef SQLITE_ENABLE_FTS3
d93 1
a93 1
#ifdef SQLITE_ENABLE_FTS3_PARENTHESIS
d96 1
a96 1
#ifdef SQLITE_ENABLE_FTS4
d99 1
a99 1
#ifdef SQLITE_ENABLE_ICU
d102 1
a102 1
#ifdef SQLITE_ENABLE_IOTRACE
d105 1
a105 1
#ifdef SQLITE_ENABLE_LOAD_EXTENSION
d108 1
a108 1
#ifdef SQLITE_ENABLE_LOCKING_STYLE
d111 1
a111 1
#ifdef SQLITE_ENABLE_MEMORY_MANAGEMENT
d114 1
a114 1
#ifdef SQLITE_ENABLE_MEMSYS3
d117 1
a117 1
#ifdef SQLITE_ENABLE_MEMSYS5
d120 1
a120 1
#ifdef SQLITE_ENABLE_OVERSIZE_CELL_CHECK
d123 1
a123 1
#ifdef SQLITE_ENABLE_RTREE
d126 3
a128 1
#ifdef SQLITE_ENABLE_STAT3
d131 1
a131 1
#ifdef SQLITE_ENABLE_UNLOCK_NOTIFY
d134 1
a134 1
#ifdef SQLITE_ENABLE_UPDATE_DELETE_LIMIT
d137 1
a137 1
#ifdef SQLITE_HAS_CODEC
d140 1
a140 1
#ifdef SQLITE_HAVE_ISNAN
d143 1
a143 1
#ifdef SQLITE_HOMEGROWN_RECURSIVE_MUTEX
d146 1
a146 1
#ifdef SQLITE_IGNORE_AFP_LOCK_ERRORS
d149 1
a149 1
#ifdef SQLITE_IGNORE_FLOCK_LOCK_ERRORS
d155 1
a155 1
#ifdef SQLITE_LOCK_TRACE
d158 3
d164 1
a164 1
#ifdef SQLITE_MEMDEBUG
d167 1
a167 1
#ifdef SQLITE_MIXED_ENDIAN_64BIT_FLOAT
d170 1
a170 1
#ifdef SQLITE_NO_SYNC
d173 1
a173 1
#ifdef SQLITE_OMIT_ALTERTABLE
d176 1
a176 1
#ifdef SQLITE_OMIT_ANALYZE
d179 1
a179 1
#ifdef SQLITE_OMIT_ATTACH
d182 1
a182 1
#ifdef SQLITE_OMIT_AUTHORIZATION
d185 1
a185 1
#ifdef SQLITE_OMIT_AUTOINCREMENT
d188 1
a188 1
#ifdef SQLITE_OMIT_AUTOINIT
d191 1
a191 1
#ifdef SQLITE_OMIT_AUTOMATIC_INDEX
d194 1
a194 1
#ifdef SQLITE_OMIT_AUTORESET
d197 1
a197 1
#ifdef SQLITE_OMIT_AUTOVACUUM
d200 1
a200 1
#ifdef SQLITE_OMIT_BETWEEN_OPTIMIZATION
d203 1
a203 1
#ifdef SQLITE_OMIT_BLOB_LITERAL
d206 1
a206 1
#ifdef SQLITE_OMIT_BTREECOUNT
d209 1
a209 1
#ifdef SQLITE_OMIT_BUILTIN_TEST
d212 1
a212 1
#ifdef SQLITE_OMIT_CAST
d215 1
a215 1
#ifdef SQLITE_OMIT_CHECK
d218 1
a218 6
/* // redundant
** #ifdef SQLITE_OMIT_COMPILEOPTION_DIAGS
**   "OMIT_COMPILEOPTION_DIAGS",
** #endif
*/
#ifdef SQLITE_OMIT_COMPLETE
d221 1
a221 1
#ifdef SQLITE_OMIT_COMPOUND_SELECT
d224 4
a227 1
#ifdef SQLITE_OMIT_DATETIME_FUNCS
d230 1
a230 1
#ifdef SQLITE_OMIT_DECLTYPE
d233 1
a233 1
#ifdef SQLITE_OMIT_DEPRECATED
d236 1
a236 1
#ifdef SQLITE_OMIT_DISKIO
d239 1
a239 1
#ifdef SQLITE_OMIT_EXPLAIN
d242 1
a242 1
#ifdef SQLITE_OMIT_FLAG_PRAGMAS
d245 1
a245 1
#ifdef SQLITE_OMIT_FLOATING_POINT
d248 1
a248 1
#ifdef SQLITE_OMIT_FOREIGN_KEY
d251 1
a251 1
#ifdef SQLITE_OMIT_GET_TABLE
d254 1
a254 1
#ifdef SQLITE_OMIT_INCRBLOB
d257 1
a257 1
#ifdef SQLITE_OMIT_INTEGRITY_CHECK
d260 1
a260 1
#ifdef SQLITE_OMIT_LIKE_OPTIMIZATION
d263 1
a263 1
#ifdef SQLITE_OMIT_LOAD_EXTENSION
d266 1
a266 1
#ifdef SQLITE_OMIT_LOCALTIME
d269 1
a269 1
#ifdef SQLITE_OMIT_LOOKASIDE
d272 1
a272 1
#ifdef SQLITE_OMIT_MEMORYDB
d275 1
a275 4
#ifdef SQLITE_OMIT_MERGE_SORT
  "OMIT_MERGE_SORT",
#endif
#ifdef SQLITE_OMIT_OR_OPTIMIZATION
d278 1
a278 1
#ifdef SQLITE_OMIT_PAGER_PRAGMAS
d281 1
a281 1
#ifdef SQLITE_OMIT_PRAGMA
d284 1
a284 1
#ifdef SQLITE_OMIT_PROGRESS_CALLBACK
d287 1
a287 1
#ifdef SQLITE_OMIT_QUICKBALANCE
d290 1
a290 1
#ifdef SQLITE_OMIT_REINDEX
d293 1
a293 1
#ifdef SQLITE_OMIT_SCHEMA_PRAGMAS
d296 1
a296 1
#ifdef SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
d299 1
a299 1
#ifdef SQLITE_OMIT_SHARED_CACHE
d302 1
a302 1
#ifdef SQLITE_OMIT_SUBQUERY
d305 1
a305 1
#ifdef SQLITE_OMIT_TCL_VARIABLE
d308 1
a308 1
#ifdef SQLITE_OMIT_TEMPDB
d311 1
a311 1
#ifdef SQLITE_OMIT_TRACE
d314 1
a314 1
#ifdef SQLITE_OMIT_TRIGGER
d317 1
a317 1
#ifdef SQLITE_OMIT_TRUNCATE_OPTIMIZATION
d320 1
a320 1
#ifdef SQLITE_OMIT_UTF16
d323 1
a323 1
#ifdef SQLITE_OMIT_VACUUM
d326 1
a326 1
#ifdef SQLITE_OMIT_VIEW
d329 1
a329 1
#ifdef SQLITE_OMIT_VIRTUALTABLE
d332 1
a332 1
#ifdef SQLITE_OMIT_WAL
d335 1
a335 1
#ifdef SQLITE_OMIT_WSD
d338 1
a338 1
#ifdef SQLITE_OMIT_XFER_OPT
d341 1
a341 1
#ifdef SQLITE_PERFORMANCE_TRACE
d344 1
a344 1
#ifdef SQLITE_PROXY_DEBUG
d347 4
a350 1
#ifdef SQLITE_SECURE_DELETE
d353 1
a353 1
#ifdef SQLITE_SMALL_STACK
d356 1
a356 1
#ifdef SQLITE_SOUNDEX
d359 4
a362 1
#ifdef SQLITE_TCL
d365 1
a365 1
#ifdef SQLITE_TEMP_STORE
d368 1
a368 1
#ifdef SQLITE_TEST
d371 1
a371 1
#ifdef SQLITE_THREADSAFE
d374 1
a374 1
#ifdef SQLITE_USE_ALLOCA
d377 7
a383 1
#ifdef SQLITE_ZERO_MALLOC
d397 7
d410 5
a414 2
    if(   (sqlite3StrNICmp(zOptName, azCompileOpt[i], n)==0)
       && ( (azCompileOpt[i][n]==0) || (azCompileOpt[i][n]=='=') ) ) return 1;
@


1.1.1.1
log
@sqlite 3.7.11 library, vendor sources
@
text
@@


1.1.1.2
log
@import 3.7.13
okay jasper@@
@
text
@a50 3
#ifdef SQLITE_CURDIR
  "CURDIR",
#endif
@


1.1.1.3
log
@update to 3.7.15.2, tested by landry@@/miod@@
@
text
@a340 3
#ifdef SQLITE_RTREE_INT_ONLY
  "RTREE_INT_ONLY",
#endif
@


1.1.1.4
log
@Update to sqlite 3.7.17.

See for changes:
http://www.sqlite.org/releaselog/3_7_16.html
http://www.sqlite.org/releaselog/3_7_16_1.html
http://www.sqlite.org/releaselog/3_7_16_2.html
http://www.sqlite.org/releaselog/3_7_17.html

tested by sebastia@@ on vax & sparc, by myself on
hppa/amd64/sparc64/sgi/i386/macppc.
looks ok to espie@@

(a lot of kittens died during the preparation of this cvs import)
@
text
@d51 3
a59 3
#if defined(SQLITE_DEFAULT_MMAP_SIZE) && !defined(SQLITE_DEFAULT_MMAP_SIZE_xc)
  "DEFAULT_MMAP_SIZE=" CTIMEOPT_VAL(SQLITE_DEFAULT_MMAP_SIZE),
#endif
a149 3
#if defined(SQLITE_MAX_MMAP_SIZE) && !defined(SQLITE_MAX_MMAP_SIZE_xc)
  "MAX_MMAP_SIZE=" CTIMEOPT_VAL(SQLITE_MAX_MMAP_SIZE),
#endif
d207 5
d266 3
d356 1
a356 1
#if defined(SQLITE_TEMP_STORE) && !defined(SQLITE_TEMP_STORE_xc)
d362 1
a362 1
#if defined(SQLITE_THREADSAFE)
d388 2
a389 5
    if( sqlite3StrNICmp(zOptName, azCompileOpt[i], n)==0
     && sqlite3CtypeMap[(unsigned char)azCompileOpt[i][n]]==0
    ){
      return 1;
    }
@


1.1.1.5
log
@Update sqlite to 3.8.4. A list of changes are available here:
http://sqlite.org/changes.html.

Tested in a bulk and ok landry@@
@
text
@d120 1
a120 3
#if defined(SQLITE_ENABLE_STAT4)
  "ENABLE_STAT4",
#elif defined(SQLITE_ENABLE_STAT3)
a215 3
#ifdef SQLITE_OMIT_CTE
  "OMIT_CTE",
#endif
a347 3
#ifdef SQLITE_SYSTEM_MALLOC
  "SYSTEM_MALLOC",
#endif
a361 3
#endif
#ifdef SQLITE_WIN32_MALLOC
  "WIN32_MALLOC",
@


1.1.1.6
log
@Update sqlite3 to 3.8.7.4. Changes available here: http://sqlite.org/changes.html#version_3_8_7_4

ok landry@@
@
text
@a370 3
#ifdef SQLITE_USER_AUTHENTICATION
  "USER_AUTHENTICATION",
#endif
d395 1
a395 1
     && sqlite3IsIdChar((unsigned char)azCompileOpt[i][n])==0
@


1.1.1.7
log
@Update sqlite3 to 3.8.8.3. Changes available here:
http://sqlite.org/releaselog/3_8_8_3.html

Tested in bulk and ok landry@@
@
text
@d36 1
a36 1
#if SQLITE_32BIT_ROWID
d39 1
a39 1
#if SQLITE_4_BYTE_ALIGNED_MALLOC
d42 1
a42 1
#if SQLITE_CASE_SENSITIVE_LIKE
d45 1
a45 1
#if SQLITE_CHECK_PAGES
d48 1
a48 1
#if SQLITE_COVERAGE_TEST
d51 1
a51 1
#if SQLITE_DEBUG
d54 1
a54 1
#if SQLITE_DEFAULT_LOCKING_MODE
d60 1
a60 1
#if SQLITE_DISABLE_DIRSYNC
d63 1
a63 1
#if SQLITE_DISABLE_LFS
d66 1
a66 4
#if SQLITE_ENABLE_API_ARMOR
  "ENABLE_API_ARMOR",
#endif
#if SQLITE_ENABLE_ATOMIC_WRITE
d69 1
a69 1
#if SQLITE_ENABLE_CEROD
d72 1
a72 1
#if SQLITE_ENABLE_COLUMN_METADATA
d75 1
a75 1
#if SQLITE_ENABLE_EXPENSIVE_ASSERT
d78 1
a78 1
#if SQLITE_ENABLE_FTS1
d81 1
a81 1
#if SQLITE_ENABLE_FTS2
d84 1
a84 1
#if SQLITE_ENABLE_FTS3
d87 1
a87 1
#if SQLITE_ENABLE_FTS3_PARENTHESIS
d90 1
a90 1
#if SQLITE_ENABLE_FTS4
d93 1
a93 1
#if SQLITE_ENABLE_ICU
d96 1
a96 1
#if SQLITE_ENABLE_IOTRACE
d99 1
a99 1
#if SQLITE_ENABLE_LOAD_EXTENSION
d102 1
a102 1
#if SQLITE_ENABLE_LOCKING_STYLE
d105 1
a105 1
#if SQLITE_ENABLE_MEMORY_MANAGEMENT
d108 1
a108 1
#if SQLITE_ENABLE_MEMSYS3
d111 1
a111 1
#if SQLITE_ENABLE_MEMSYS5
d114 1
a114 1
#if SQLITE_ENABLE_OVERSIZE_CELL_CHECK
d117 1
a117 1
#if SQLITE_ENABLE_RTREE
d125 1
a125 1
#if SQLITE_ENABLE_UNLOCK_NOTIFY
d128 1
a128 1
#if SQLITE_ENABLE_UPDATE_DELETE_LIMIT
d131 1
a131 1
#if SQLITE_HAS_CODEC
d134 1
a134 1
#if HAVE_ISNAN || SQLITE_HAVE_ISNAN
d137 1
a137 1
#if SQLITE_HOMEGROWN_RECURSIVE_MUTEX
d140 1
a140 1
#if SQLITE_IGNORE_AFP_LOCK_ERRORS
d143 1
a143 1
#if SQLITE_IGNORE_FLOCK_LOCK_ERRORS
d149 1
a149 1
#if SQLITE_LOCK_TRACE
d158 1
a158 1
#if SQLITE_MEMDEBUG
d161 1
a161 1
#if SQLITE_MIXED_ENDIAN_64BIT_FLOAT
d164 1
a164 1
#if SQLITE_NO_SYNC
d167 1
a167 1
#if SQLITE_OMIT_ALTERTABLE
d170 1
a170 1
#if SQLITE_OMIT_ANALYZE
d173 1
a173 1
#if SQLITE_OMIT_ATTACH
d176 1
a176 1
#if SQLITE_OMIT_AUTHORIZATION
d179 1
a179 1
#if SQLITE_OMIT_AUTOINCREMENT
d182 1
a182 1
#if SQLITE_OMIT_AUTOINIT
d185 1
a185 1
#if SQLITE_OMIT_AUTOMATIC_INDEX
d188 1
a188 1
#if SQLITE_OMIT_AUTORESET
d191 1
a191 1
#if SQLITE_OMIT_AUTOVACUUM
d194 1
a194 1
#if SQLITE_OMIT_BETWEEN_OPTIMIZATION
d197 1
a197 1
#if SQLITE_OMIT_BLOB_LITERAL
d200 1
a200 1
#if SQLITE_OMIT_BTREECOUNT
d203 1
a203 1
#if SQLITE_OMIT_BUILTIN_TEST
d206 1
a206 1
#if SQLITE_OMIT_CAST
d209 1
a209 1
#if SQLITE_OMIT_CHECK
d212 1
a212 1
#if SQLITE_OMIT_COMPLETE
d215 1
a215 1
#if SQLITE_OMIT_COMPOUND_SELECT
d218 1
a218 1
#if SQLITE_OMIT_CTE
d221 1
a221 1
#if SQLITE_OMIT_DATETIME_FUNCS
d224 1
a224 1
#if SQLITE_OMIT_DECLTYPE
d227 1
a227 1
#if SQLITE_OMIT_DEPRECATED
d230 1
a230 1
#if SQLITE_OMIT_DISKIO
d233 1
a233 1
#if SQLITE_OMIT_EXPLAIN
d236 1
a236 1
#if SQLITE_OMIT_FLAG_PRAGMAS
d239 1
a239 1
#if SQLITE_OMIT_FLOATING_POINT
d242 1
a242 1
#if SQLITE_OMIT_FOREIGN_KEY
d245 1
a245 1
#if SQLITE_OMIT_GET_TABLE
d248 1
a248 1
#if SQLITE_OMIT_INCRBLOB
d251 1
a251 1
#if SQLITE_OMIT_INTEGRITY_CHECK
d254 1
a254 1
#if SQLITE_OMIT_LIKE_OPTIMIZATION
d257 1
a257 1
#if SQLITE_OMIT_LOAD_EXTENSION
d260 1
a260 1
#if SQLITE_OMIT_LOCALTIME
d263 1
a263 1
#if SQLITE_OMIT_LOOKASIDE
d266 1
a266 1
#if SQLITE_OMIT_MEMORYDB
d269 1
a269 1
#if SQLITE_OMIT_OR_OPTIMIZATION
d272 1
a272 1
#if SQLITE_OMIT_PAGER_PRAGMAS
d275 1
a275 1
#if SQLITE_OMIT_PRAGMA
d278 1
a278 1
#if SQLITE_OMIT_PROGRESS_CALLBACK
d281 1
a281 1
#if SQLITE_OMIT_QUICKBALANCE
d284 1
a284 1
#if SQLITE_OMIT_REINDEX
d287 1
a287 1
#if SQLITE_OMIT_SCHEMA_PRAGMAS
d290 1
a290 1
#if SQLITE_OMIT_SCHEMA_VERSION_PRAGMAS
d293 1
a293 1
#if SQLITE_OMIT_SHARED_CACHE
d296 1
a296 1
#if SQLITE_OMIT_SUBQUERY
d299 1
a299 1
#if SQLITE_OMIT_TCL_VARIABLE
d302 1
a302 1
#if SQLITE_OMIT_TEMPDB
d305 1
a305 1
#if SQLITE_OMIT_TRACE
d308 1
a308 1
#if SQLITE_OMIT_TRIGGER
d311 1
a311 1
#if SQLITE_OMIT_TRUNCATE_OPTIMIZATION
d314 1
a314 1
#if SQLITE_OMIT_UTF16
d317 1
a317 1
#if SQLITE_OMIT_VACUUM
d320 1
a320 1
#if SQLITE_OMIT_VIEW
d323 1
a323 1
#if SQLITE_OMIT_VIRTUALTABLE
d326 1
a326 1
#if SQLITE_OMIT_WAL
d329 1
a329 1
#if SQLITE_OMIT_WSD
d332 1
a332 1
#if SQLITE_OMIT_XFER_OPT
d335 1
a335 1
#if SQLITE_PERFORMANCE_TRACE
d338 1
a338 1
#if SQLITE_PROXY_DEBUG
d341 1
a341 1
#if SQLITE_RTREE_INT_ONLY
d344 1
a344 1
#if SQLITE_SECURE_DELETE
d347 1
a347 1
#if SQLITE_SMALL_STACK
d350 1
a350 1
#if SQLITE_SOUNDEX
d353 1
a353 1
#if SQLITE_SYSTEM_MALLOC
d356 1
a356 1
#if SQLITE_TCL
d362 1
a362 1
#if SQLITE_TEST
d368 1
a368 1
#if SQLITE_USE_ALLOCA
d371 1
a371 1
#if SQLITE_USER_AUTHENTICATION
d374 1
a374 1
#if SQLITE_WIN32_MALLOC
d377 1
a377 1
#if SQLITE_ZERO_MALLOC
a390 7

#if SQLITE_ENABLE_API_ARMOR
  if( zOptName==0 ){
    (void)SQLITE_MISUSE_BKPT;
    return 0;
  }
#endif
@


