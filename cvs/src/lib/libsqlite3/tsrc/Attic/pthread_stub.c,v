head	1.5;
access;
symbols
	OPENBSD_6_0:1.4.0.6
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.4.0.4
	OPENBSD_5_8_BASE:1.4
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.1.0.12
	OPENBSD_5_6_BASE:1.1
	OPENBSD_5_5:1.1.0.10
	OPENBSD_5_5_BASE:1.1
	OPENBSD_5_4:1.1.0.6
	OPENBSD_5_4_BASE:1.1
	OPENBSD_5_3:1.1.0.4
	OPENBSD_5_3_BASE:1.1
	OPENBSD_5_2:1.1.0.2
	OPENBSD_5_2_BASE:1.1;
locks; strict;
comment	@ * @;


1.5
date	2016.09.23.09.22.03;	author sthen;	state dead;
branches;
next	1.4;
commitid	LMPUJfKfHw1CXzY4;

1.4
date	2015.03.16.00.12.38;	author jturner;	state Exp;
branches;
next	1.3;
commitid	yVx9VsDMPnRAXqJi;

1.3
date	2015.01.20.14.40.38;	author krw;	state Exp;
branches;
next	1.2;
commitid	3eROWnyfjP2C9BcV;

1.2
date	2015.01.20.04.41.01;	author krw;	state Exp;
branches;
next	1.1;
commitid	4iV7KHZz26Tut4Vx;

1.1
date	2012.04.14.13.18.17;	author espie;	state Exp;
branches;
next	;


desc
@@


1.5
log
@remove lib/libsqlite3, it has moved back to ports
@
text
@/* stubs for pthreads function, quick and dirty */
#if SQLITE_THREADSAFE && !defined(SQLITE_TEST)

#include <pthread.h>

#define WEAKALIAS(f,g ) extern f __attribute__((__weak__, __alias__(#g)))

static pthread_t _sqlite_self_stub()
{
	return 0;
}

static int _sqlite_zero_stub()
{
	return 0;
}

WEAKALIAS(pthread_t pthread_self(void), _sqlite_self_stub);
WEAKALIAS(int pthread_join(pthread_t, void **), _sqlite_zero_stub);
WEAKALIAS(int pthread_create(pthread_t *, const pthread_attr_t *, void *(*) (void *), void *), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutex_init(pthread_mutex_t *a, const pthread_mutexattr_t *b), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutex_destroy(pthread_mutex_t *a), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutex_lock(pthread_mutex_t *a), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutex_trylock(pthread_mutex_t *a), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutex_unlock(pthread_mutex_t *a), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutexattr_init(pthread_mutexattr_t *a), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutexattr_settype(pthread_mutexattr_t *a, int b), _sqlite_zero_stub);
WEAKALIAS(int pthread_mutexattr_destroy(pthread_mutexattr_t *a), _sqlite_zero_stub);

#endif
@


1.4
log
@Bump major to 29, regen .pc and header with new version info
@
text
@@


1.3
log
@Revert some $OpenBSD$ additions about which there are doubts.

Suggested by deraadt@@
@
text
@d19 2
@


1.2
log
@Missing $OpenBSD$'s.

ok deraadt@@
@
text
@a0 1
/*	$OpenBSD$	*/
@


1.1
log
@extra src for us.
regen parse.c/parse.h with "lemon", no need to recompile every time.
pthread_stub.c might(?) be needed for clean non-pthreads operation
(to be checked, the nomutex stuff looks interesting)
@
text
@d1 1
@

