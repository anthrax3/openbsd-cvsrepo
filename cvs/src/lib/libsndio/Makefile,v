head	1.12;
access;
symbols
	OPENBSD_6_1_BASE:1.12
	OPENBSD_6_0:1.12.0.2
	OPENBSD_6_0_BASE:1.12
	OPENBSD_5_9:1.11.0.8
	OPENBSD_5_9_BASE:1.11
	OPENBSD_5_8:1.11.0.10
	OPENBSD_5_8_BASE:1.11
	OPENBSD_5_7:1.11.0.2
	OPENBSD_5_7_BASE:1.11
	OPENBSD_5_6:1.11.0.6
	OPENBSD_5_6_BASE:1.11
	OPENBSD_5_5:1.11.0.4
	OPENBSD_5_5_BASE:1.11
	OPENBSD_5_4:1.9.0.4
	OPENBSD_5_4_BASE:1.9
	OPENBSD_5_3:1.9.0.2
	OPENBSD_5_3_BASE:1.9
	OPENBSD_5_2:1.8.0.6
	OPENBSD_5_2_BASE:1.8
	OPENBSD_5_1_BASE:1.8
	OPENBSD_5_1:1.8.0.4
	OPENBSD_5_0:1.8.0.2
	OPENBSD_5_0_BASE:1.8
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.4
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.2.0.2
	OPENBSD_4_5_BASE:1.2;
locks; strict;
comment	@# @;


1.12
date	2016.03.30.06.38.43;	author jmc;	state Exp;
branches;
next	1.11;
commitid	LN9ijdk9SEnzWAbM;

1.11
date	2013.11.21.08.15.46;	author ratchov;	state Exp;
branches;
next	1.10;

1.10
date	2013.11.19.07.24.57;	author ratchov;	state Exp;
branches;
next	1.9;

1.9
date	2012.09.12.09.19.54;	author haesbaert;	state Exp;
branches;
next	1.8;

1.8
date	2011.04.27.21.20.36;	author ratchov;	state Exp;
branches;
next	1.7;

1.7
date	2011.04.16.10.52.22;	author ratchov;	state Exp;
branches;
next	1.6;

1.6
date	2011.04.12.21.40.22;	author ratchov;	state Exp;
branches;
next	1.5;

1.5
date	2011.04.08.11.18.07;	author ratchov;	state Exp;
branches;
next	1.4;

1.4
date	2009.07.25.08.44.26;	author ratchov;	state Exp;
branches;
next	1.3;

1.3
date	2009.04.21.19.16.26;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	2008.11.11.19.39.35;	author ratchov;	state Exp;
branches;
next	1.1;

1.1
date	2008.10.27.00.26.33;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.12
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@#	$OpenBSD: Makefile,v 1.11 2013/11/21 08:15:46 ratchov Exp $

LIB=	sndio
MAN=	sio_open.3 mio_open.3 sndio.7
SRCS=	debug.c aucat.c sio_aucat.c sio_sun.c sio.c \
	mio_rmidi.c mio_aucat.c mio.c
CFLAGS+=-DDEBUG
COPTS+=	-Wall -Wstrict-prototypes -Wmissing-prototypes -Wpointer-arith -Wundef

.include <bsd.lib.mk>
@


1.11
log
@use -Wmissing-prototypes
@
text
@d1 1
a1 1
#	$OpenBSD$
a8 25

MLINKS = \
	sio_open.3 sio_close.3 \
	sio_open.3 sio_setpar.3 \
	sio_open.3 sio_getpar.3 \
	sio_open.3 sio_getcap.3 \
	sio_open.3 sio_start.3 \
	sio_open.3 sio_stop.3 \
	sio_open.3 sio_read.3 \
	sio_open.3 sio_write.3 \
	sio_open.3 sio_onmove.3 \
	sio_open.3 sio_nfds.3 \
	sio_open.3 sio_pollfd.3 \
	sio_open.3 sio_revents.3 \
	sio_open.3 sio_eof.3 \
	sio_open.3 sio_setvol.3 \
	sio_open.3 sio_onvol.3 \
	sio_open.3 sio_initpar.3 \
	mio_open.3 mio_close.3 \
	mio_open.3 mio_read.3 \
	mio_open.3 mio_write.3 \
	mio_open.3 mio_nfds.3 \
	mio_open.3 mio_pollfd.3 \
	mio_open.3 mio_revents.3 \
	mio_open.3 mio_eof.3
@


1.10
log
@move -Wxxx flags from CFALGS to COPTS

suggested by deraadt
@
text
@d8 1
a8 1
COPTS+=	-Wall -Wstrict-prototypes -Wpointer-arith -Wundef
@


1.9
log
@Define empty CDIAGFLAGS for programs that use Werror.
Makes "make build" build with WARNINGS=Yes on amd64.

ok espie
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.8 2011/04/27 21:20:36 ratchov Exp $
d7 2
a8 2
CFLAGS+=-Wall -Wstrict-prototypes -Werror -Wundef -DDEBUG
CDIAGFLAGS=
@


1.8
log
@move amsg.h containing protocol defs from aucat side to libsndio side.

requested by deraadt
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.7 2011/04/16 10:52:22 ratchov Exp $
d8 1
@


1.7
log
@Make aucat audio and midi backends share the same code to communicate
with the server. As we're at it use the same protocol for midi and
audio. Now, both audio and midi code use the same SNDIO_DEBUG environment
variable to turn on/off DPRINTF's.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.6 2011/04/12 21:40:22 ratchov Exp $
d7 1
a7 2
CFLAGS+=-Wall -Wstrict-prototypes -Werror -Wundef -DDEBUG \
	-I${.CURDIR} -I${.CURDIR}/../../usr.bin/aucat
@


1.6
log
@Use mio_<backend>_ prefix for private midi-related functions and put
them in files named mio_<backend>.c
No behaviour change.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.5 2011/04/08 11:18:07 ratchov Exp $
d5 2
a6 1
SRCS=	sio_aucat.c sio_sun.c sio.c mio_rmidi.c mio_aucat.c mio.c
@


1.5
log
@Clean up function naming: use sio_<backend>_ prefix for private
audio-related functions and put them in files named sio_<backend>.c
No behaviour changes.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2009/07/25 08:44:26 ratchov Exp $
d5 1
a5 1
SRCS=	sio_aucat.c sio_sun.c sio.c mio_rmidi.c mio_thru.c mio.c
@


1.4
log
@Currently midi capable programs can control midi hardware, but
cannot cooperate with other programs.  The aim of this change is
to allow any program to send midi data to other programs as they
were midi hardware. For instance, this change should solve the
longstanding problem of using a midi sequencer with software
synthesizers. More precisely:

 - new midicat(1) utility (actually hardlink to aucat(1)).
   it creates software midi thru boxes, allowing programs
   to send midi messages to other programs as they were
   midi(4) hardware.

 - new midi api in libsndio (see mio_open(3)), to access
   midi(4) devices and midicat(1) sockets in a uniform way.

 - new device naming scheme <service>:<unit>[.<option>],
   common to audio and midi.

 - new sndio(7) manual describing concepts and naming

The current audio device naming still works, but people having
scripts or configuration files containing device names could read
the sndio(7) man page and slowly start updating device names.

discussed with jakemsr@@ and deraadt@@, help form jmc@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2009/04/21 19:16:26 deraadt Exp $
d5 1
a5 1
SRCS=	aucat.c sun.c sndio.c mio_rmidi.c mio_thru.c mio.c
@


1.3
log
@no need to install includes from here anymore
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2008/11/11 19:39:35 ratchov Exp $
d4 2
a5 2
MAN=	sio_open.3
SRCS=	aucat.c sun.c sndio.c
d25 8
a32 1
	sio_open.3 sio_initpar.3
@


1.2
log
@expose a volume knob in the sndio API: add sio_setvol(3) and
sio_onvol(3) functions. The audio(4) backend tries to use the
inputs.dac, outputs.dac, outputs.output and outputs.master
controls (in this order). Add a sample file in
regress/lib/libsndio/vol/vol.c
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2008/10/27 00:26:33 ratchov Exp $
a25 5

includes:
	@@cd ${.CURDIR}; cmp -s sndio.h ${DESTDIR}/usr/include/sndio.h || \
		${INSTALL} ${INSTALL_COPY} -o $(BINOWN) -g $(BINGRP) \
		-m 444 sndio.h ${DESTDIR}/usr/include
@


1.1
log
@rename libsa to libsndio
requested by many, "just go for it" deraadt@@
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2008/10/26 13:55:03 ratchov Exp $
d23 2
@

