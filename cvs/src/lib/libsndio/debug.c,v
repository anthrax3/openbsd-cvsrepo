head	1.4;
access;
symbols
	OPENBSD_6_1:1.4.0.6
	OPENBSD_6_1_BASE:1.4
	OPENBSD_6_0:1.4.0.4
	OPENBSD_6_0_BASE:1.4
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.10
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.2
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.6
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.4
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.2.0.8
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.6
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.4
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.2
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@ * @;


1.4
date	2015.10.02.09.48.22;	author ratchov;	state Exp;
branches;
next	1.3;
commitid	wlyu2QA4h4oEsjiW;

1.3
date	2013.11.13.22.38.22;	author ratchov;	state Exp;
branches;
next	1.2;

1.2
date	2011.11.15.08.05.22;	author ratchov;	state Exp;
branches;
next	1.1;

1.1
date	2011.04.16.10.52.22;	author ratchov;	state Exp;
branches;
next	;


desc
@@


1.4
log
@Validate that midi and audio device numbers are integers.
@
text
@/*	$OpenBSD: debug.c,v 1.3 2013/11/13 22:38:22 ratchov Exp $	*/
/*
 * Copyright (c) 2011 Alexandre Ratchov <alex@@caoua.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <stdio.h>
#include <stdlib.h>
#include <unistd.h>

#include "debug.h"

#ifdef DEBUG
/*
 * debug level, -1 means uninitialized
 */
int _sndio_debug = -1;

void
_sndio_debug_init(void)
{
	char *dbg;

	if (_sndio_debug < 0) {
		dbg = issetugid() ? NULL : getenv("SNDIO_DEBUG");
		if (!dbg || sscanf(dbg, "%u", &_sndio_debug) != 1)
			_sndio_debug = 0;
	}
}
#endif

const char *
_sndio_parsetype(const char *str, char *type)
{
	while (*type) {
		if (*type != *str)
			return NULL;
		type++;
		str++;
	}
	if (*str >= 'a' && *str <= 'z')
		return NULL;
	return str;
}

const char *
_sndio_parsenum(const char *str, unsigned int *num, unsigned int max)
{
	const char *p = str;
	unsigned int dig, maxq, maxr, val;

	val = 0;
	maxq = max / 10;
	maxr = max % 10;
	for (;;) {
		dig = *p - '0';
		if (dig >= 10)
			break;
		if (val > maxq || (val == maxq && dig > maxr))
			return NULL;
		val = val * 10 + dig;
		p++;
	}
	if (p == str)
		return NULL;
	*num = val;
	return p;
}
@


1.3
log
@Prefix by '_' symbols that are not part of the API.

ok deraadt, guenther
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d55 24
@


1.2
log
@Add a "device number" component in sndio(7) device names, allowing a
single aucat instance to handle all audio and MIDI services. Since
this partially breaks compatibility, this is a opportunitiy to fix few
other design mistakes (eg ':' being used by inet6, type name vs api
name confusion, etc..). This leads to the following names:

        type[@@hostname][,unit]/devnum[.option]

The device number is the minor device number for direct hardware
access (ie the 'N' in /dev/audioN). For aucat, this is the occurence
number of the -f (or -M) option.

There's a compatibility hook to keep old names working if only one
aucat server is running.
@
text
@d1 1
a1 1
/*	$OpenBSD: debug.c,v 1.1 2011/04/16 10:52:22 ratchov Exp $	*/
d28 1
a28 1
int sndio_debug = -1;
d31 1
a31 1
sndio_debug_init(void)
d35 1
a35 1
	if (sndio_debug < 0) {
d37 2
a38 2
		if (!dbg || sscanf(dbg, "%u", &sndio_debug) != 1)
			sndio_debug = 0;
d44 1
a44 1
sndio_parsetype(const char *str, char *type)
@


1.1
log
@Make aucat audio and midi backends share the same code to communicate
with the server. As we're at it use the same protocol for midi and
audio. Now, both audio and midi code use the same SNDIO_DEBUG environment
variable to turn on/off DPRINTF's.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d42 14
@

