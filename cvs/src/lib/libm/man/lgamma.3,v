head	1.28;
access;
symbols
	OPENBSD_6_2:1.28.0.2
	OPENBSD_6_2_BASE:1.28
	OPENBSD_6_1:1.27.0.6
	OPENBSD_6_1_BASE:1.27
	OPENBSD_6_0:1.27.0.2
	OPENBSD_6_0_BASE:1.27
	OPENBSD_5_9:1.24.0.2
	OPENBSD_5_9_BASE:1.24
	OPENBSD_5_8:1.22.0.6
	OPENBSD_5_8_BASE:1.22
	OPENBSD_5_7:1.22.0.2
	OPENBSD_5_7_BASE:1.22
	OPENBSD_5_6:1.21.0.6
	OPENBSD_5_6_BASE:1.21
	OPENBSD_5_5:1.21.0.4
	OPENBSD_5_5_BASE:1.21
	OPENBSD_5_4:1.20.0.2
	OPENBSD_5_4_BASE:1.20
	OPENBSD_5_3:1.18.0.8
	OPENBSD_5_3_BASE:1.18
	OPENBSD_5_2:1.18.0.6
	OPENBSD_5_2_BASE:1.18
	OPENBSD_5_1_BASE:1.18
	OPENBSD_5_1:1.18.0.4
	OPENBSD_5_0:1.18.0.2
	OPENBSD_5_0_BASE:1.18
	OPENBSD_4_9:1.16.0.12
	OPENBSD_4_9_BASE:1.16
	OPENBSD_4_8:1.16.0.10
	OPENBSD_4_8_BASE:1.16
	OPENBSD_4_7:1.16.0.6
	OPENBSD_4_7_BASE:1.16
	OPENBSD_4_6:1.16.0.8
	OPENBSD_4_6_BASE:1.16
	OPENBSD_4_5:1.16.0.4
	OPENBSD_4_5_BASE:1.16
	OPENBSD_4_4:1.16.0.2
	OPENBSD_4_4_BASE:1.16
	OPENBSD_4_3:1.14.0.4
	OPENBSD_4_3_BASE:1.14
	OPENBSD_4_2:1.14.0.2
	OPENBSD_4_2_BASE:1.14
	OPENBSD_4_1:1.13.0.14
	OPENBSD_4_1_BASE:1.13
	OPENBSD_4_0:1.13.0.12
	OPENBSD_4_0_BASE:1.13
	OPENBSD_3_9:1.13.0.10
	OPENBSD_3_9_BASE:1.13
	OPENBSD_3_8:1.13.0.8
	OPENBSD_3_8_BASE:1.13
	OPENBSD_3_7:1.13.0.6
	OPENBSD_3_7_BASE:1.13
	OPENBSD_3_6:1.13.0.4
	OPENBSD_3_6_BASE:1.13
	OPENBSD_3_5:1.13.0.2
	OPENBSD_3_5_BASE:1.13
	OPENBSD_3_4:1.12.0.2
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.11.0.2
	OPENBSD_3_3_BASE:1.11
	OPENBSD_3_2:1.10.0.12
	OPENBSD_3_2_BASE:1.10
	OPENBSD_3_1:1.10.0.10
	OPENBSD_3_1_BASE:1.10
	OPENBSD_3_0:1.10.0.8
	OPENBSD_3_0_BASE:1.10
	OPENBSD_2_9:1.10.0.6
	OPENBSD_2_9_BASE:1.10
	OPENBSD_2_8:1.10.0.4
	OPENBSD_2_8_BASE:1.10
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.8.0.2
	OPENBSD_2_6_BASE:1.8
	OPENBSD_2_5:1.4.0.2
	OPENBSD_2_5_BASE:1.4
	OPENBSD_2_4:1.3.0.6
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.4
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.2
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@.\" @;


1.28
date	2017.08.26.17.04.28;	author schwarze;	state Exp;
branches;
next	1.27;
commitid	UqMo4Pyi5BdJKoJZ;

1.27
date	2016.04.26.19.49.22;	author tb;	state Exp;
branches;
next	1.26;
commitid	xVDfgDPuad87Upq8;

1.26
date	2016.03.10.22.29.38;	author tb;	state Exp;
branches;
next	1.25;
commitid	bdzXSKP3UzBxvCb8;

1.25
date	2016.03.10.11.45.37;	author jmc;	state Exp;
branches;
next	1.24;
commitid	ObhLkDxIm4cyWdyG;

1.24
date	2015.11.10.23.48.18;	author jmc;	state Exp;
branches;
next	1.23;
commitid	QU70QaxjyBAtj4Rv;

1.23
date	2015.09.14.13.08.01;	author schwarze;	state Exp;
branches;
next	1.22;
commitid	YV9Btzibn39kPFq6;

1.22
date	2015.01.15.19.06.31;	author schwarze;	state Exp;
branches;
next	1.21;
commitid	dven8mWEy4wx3j1c;

1.21
date	2013.08.07.22.20.25;	author millert;	state Exp;
branches;
next	1.20;

1.20
date	2013.07.17.05.42.11;	author schwarze;	state Exp;
branches;
next	1.19;

1.19
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.18;

1.18
date	2011.07.07.01.34.52;	author martynas;	state Exp;
branches;
next	1.17;

1.17
date	2011.07.07.00.54.16;	author martynas;	state Exp;
branches;
next	1.16;

1.16
date	2008.06.12.15.51.42;	author jmc;	state Exp;
branches;
next	1.15;

1.15
date	2008.06.11.20.53.27;	author martynas;	state Exp;
branches;
next	1.14;

1.14
date	2007.05.31.19.19.35;	author jmc;	state Exp;
branches;
next	1.13;

1.13
date	2004.01.02.18.23.00;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2003.06.02.20.18.41;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	2003.02.27.04.22.12;	author jason;	state Exp;
branches;
next	1.10;

1.10
date	2000.04.15.02.15.28;	author aaron;	state Exp;
branches;
next	1.9;

1.9
date	2000.03.02.00.29.50;	author todd;	state Exp;
branches;
next	1.8;

1.8
date	99.07.09.13.35.27;	author aaron;	state Exp;
branches;
next	1.7;

1.7
date	99.07.02.21.13.06;	author aaron;	state Exp;
branches;
next	1.6;

1.6
date	99.07.01.00.06.40;	author deraadt;	state Exp;
branches;
next	1.5;

1.5
date	99.05.16.19.56.00;	author alex;	state Exp;
branches;
next	1.4;

1.4
date	99.02.27.21.57.29;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	97.07.28.08.15.03;	author deraadt;	state Exp;
branches;
next	1.2;

1.2
date	95.10.28.00.56.57;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.50;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.50;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.28
log
@For exceptional cases of mathematical formulae that can't reasonably
be represented otherwise, use eqn(7).
Idea originally from bentley@@, feedback and OK bentley@@, OK tb@@,
and no objection from jmc@@.
@
text
@'\" e
.\"	$OpenBSD: lgamma.3,v 1.27 2016/04/26 19:49:22 tb Exp $
.\" Copyright (c) 1985, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @@(#)lgamma.3	6.6 (Berkeley) 12/3/92
.\"
.Dd $Mdocdate: April 26 2016 $
.Dt LGAMMA 3
.Os
.Sh NAME
.Nm lgamma ,
.Nm lgammaf ,
.Nm lgammal ,
.Nm lgamma_r ,
.Nm lgammaf_r ,
.Nm lgammal_r ,
.Nm tgamma ,
.Nm tgammaf ,
.Nm tgammal ,
.Nm gamma ,
.Nm gammaf
.Nd log gamma functions
.Sh SYNOPSIS
.In math.h
.Vt extern int signgam ;
.Ft double
.Fn lgamma "double x"
.Ft float
.Fn lgammaf "float x"
.Ft long double
.Fn lgammal "long double x"
.Ft double
.Fn lgamma_r "double x" "int *signgamp"
.Ft float
.Fn lgammaf_r "float x" "int *signgamp"
.Ft long double
.Fn lgammal_r "long double x" "int *signgamp"
.Ft double
.Fn tgamma "double x"
.Ft float
.Fn tgammaf "float x"
.Ft long double
.Fn tgammal "long double x"
.Sh DESCRIPTION
.Fn lgamma x
returns ln\||\(*G(x)| where
.Bd -filled -offset indent
.EQ
GAMMA left ( x right ) =
int from 0 to inf t sup {x - 1} e sup -t dt
.EN
\ \ \ for x > 0 and
.br
.EQ
GAMMA left ( x right ) =
pi over { GAMMA left ( 1 - x right ) sin left ( pi x right ) }
.EN
\ \ \ for x < 1.
.Ed
.Pp
The external integer
.Va signgam
returns the sign of \(*G(x).
The
.Fn lgammaf
function is a single precision version of
.Fn lgamma .
The
.Fn lgammal
function is an extended precision version of
.Fn lgamma .
.Pp
The
.Fn lgamma_r ,
.Fn lgammaf_r ,
and
.Fn lgammal_r
functions are thread-safe versions of
.Fn lgamma ,
.Fn lgammaf ,
and
.Fn lgammal
that return the sign via the
.Fa signgamp
pointer instead of modifying
.Va signgam .
.Pp
The
.Fn tgamma x ,
.Fn tgammaf x
and
.Fn tgammal x
functions return \(*G(x), with no effect on
.Va signgam .
.Sh IDIOSYNCRASIES
Do not use the expression
.Sq Li signgam*exp(lgamma(x))
to compute g := \(*G(x).
Instead use a program like this (in C):
.Bd -literal -offset indent
lg = lgamma(x); g = signgam*exp(lg);
.Ed
.Pp
Only after
.Fn lgamma
has returned can
.Va signgam
be correct.
.Pp
For arguments in its range,
.Fn tgamma
is preferred, as for positive arguments
it is accurate to within one unit in the last place.
.Sh RETURN VALUES
.Fn lgamma
returns appropriate values unless an argument is out of range.
Overflow will occur for sufficiently large positive values, and
non-positive integers.
For large non-integer negative values,
.Fn tgamma
will underflow.
.Sh STANDARDS
The
.Fn lgamma ,
.Fn lgammaf ,
.Fn lgammal ,
.Fn tgamma ,
.Fn tgammaf ,
and
.Fn tgammal
functions are expected to conform to
.St -isoC-99 .
.Pp
The
.Fn lgamma_r ,
.Fn lgammaf_r ,
and
.Fn lgammal_r
functions are
.Bx
extensions.
.Pp
.Fn gamma
and
.Fn gammaf
are deprecated aliases for
.Fn lgamma
and
.Fn lgammaf ,
respectively.
.Sh HISTORY
A
.Fn gamma
function first appeared in
.At v5 .
The
.Fn lgamma
function first appeared in
.Bx 4.3 .
The
.Fn tgamma
function first appeared in
.Ox 4.4 ,
and is based on the
.Fn gamma
function that appeared in
.Bx 4.4
as a function to compute \(*G(x).
@


1.27
log
@Remove predefined strings from libm pages.

With lots of help, input and tweaks and finally ok schwarze@@
@
text
@d1 2
a2 1
.\"	$OpenBSD: lgamma.3,v 1.26 2016/03/10 22:29:38 tb Exp $
d32 1
a32 1
.Dd $Mdocdate: March 10 2016 $
a70 1
.if t \{\
d72 6
a77 2
.Bd -unfilled -offset indent
\(*G(x) = \(is\d\s8\z0\s10\u\u\s8\(if\s10\d t\u\s8x\-1\s10\d e\u\s8\-t\s10\d dt	for x > 0 and
d79 5
a83 1
\(*G(x) = \(*p/(\(*G(1\-x)\|sin(\(*px))	for x < 1.
a84 3
.\}
.if n \
returns ln\||\(*G(x)|.
@


1.26
log
@Remove VAX-specific bits of libm manpages.

ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.25 2016/03/10 11:45:37 jmc Exp $
d117 1
a117 1
.Sq Li signgam\(**exp(lgamma(x))
d121 1
a121 1
lg = lgamma(x); g = signgam\(**exp(lg);
@


1.25
log
@remove Xr to infnan, a trickily hidden (from me anyway) vax page;
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.24 2015/11/10 23:48:18 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: November 10 2015 $
a141 4
On the VAX, the reserved operator is returned, and
.Va errno
is set to
.Er ERANGE .
@


1.24
log
@update NAME section to include all documented functions,
or otherwise change Dt to reflect the name of an existing function;

feedback/ok schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.23 2015/09/14 13:08:01 schwarze Exp $
d31 1
a31 1
.Dd $Mdocdate: September 14 2015 $
a145 2
.Sh SEE ALSO
.Xr infnan 3
@


1.23
log
@use .Va for global variables, and .Vt where the type is included
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.22 2015/01/15 19:06:31 schwarze Exp $
d31 1
a31 1
.Dd $Mdocdate: January 15 2015 $
d43 3
a45 1
.Nm tgammal
@


1.22
log
@remove .Tn; from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.21 2013/08/07 22:20:25 millert Exp $
d31 1
a31 1
.Dd $Mdocdate: August 7 2013 $
d47 1
a47 3
.Ft extern int
.Fa signgam ;
.sp
d80 1
a80 1
.Fa signgam
d104 1
a104 1
.Fa signgam .
d112 1
a112 1
.Fa signgam .
d124 3
a126 1
has returned can signgam be correct.
@


1.21
log
@Document lgamma_r, lgammaf_r, and lgammal_r.
Prodded by espie@@, OK martynas@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.20 2013/07/17 05:42:11 schwarze Exp $
d31 1
a31 1
.Dd $Mdocdate: July 17 2013 $
d140 1
a140 4
On the
.Tn VAX ,
the reserved operator is returned,
and
@


1.20
log
@more library history
facts checked by sobrado@@
style tweaks and ok jmc@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.19 2013/06/05 03:40:26 tedu Exp $
d31 1
a31 1
.Dd $Mdocdate: June 5 2013 $
d38 3
d57 6
d94 15
d160 9
@


1.19
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.18 2011/07/07 01:34:52 martynas Exp $
d31 1
a31 1
.Dd $Mdocdate: July 7 2011 $
d146 4
@


1.18
log
@Remove references to math(3).
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.17 2011/07/07 00:54:16 martynas Exp $
d43 1
a43 1
.Fd #include <math.h>
@


1.17
log
@Document extended-precision routines.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.16 2008/06/12 15:51:42 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: June 12 2008 $
d124 1
a124 2
.Xr infnan 3 ,
.Xr math 3
@


1.16
log
@Makefile: fix MLINKS
lgamma.3: fix STANDARDS and HISTORY
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.15 2008/06/11 20:53:27 martynas Exp $
d31 1
a31 1
.Dd $Mdocdate: June 11 2008 $
d37 1
d39 2
a40 1
.Nm tgammaf
d51 2
d57 2
d79 4
d85 2
a86 1
.Fn tgamma x
d88 1
a88 1
.Fn tgammaf x
d130 1
d132 1
d134 1
a134 1
.Fn tgammaf
@


1.15
log
@- on non-ieee, rename gamma to tgamma, the 'true' gamma
- make gamma an alias of lgamma
- on ieee, add tgamma, based on gamma from non-ieee
- fixes for tgamma/lgamma/exp/log, esp. special cases (some from
freebsd);  properly raise invalid fp operations on vax
- also some general cleanup, ansification, man page (which was ok
jmc@@)
- bump minor
this makes some ports using tgamma possible;  also consistifies
behavior across openbsd/ieee and openbsd/non-ieee, and other operating
systems
much thanks sthen@@, johan@@, steven@@, Simon Kuhnle, Wiktor Izdebski
for testing
ok millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.14 2007/05/31 19:19:35 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: May 31 2007 $
a79 10
.Pp
The
.Fn gamma ,
and
.Fn gammaf
are deprecated aliases for
.Fn lgamma ,
and
.Fn lgammaf
respectively.
d124 9
d136 1
a136 1
function appeared in
d140 1
a140 1
function appeared in
d142 1
a142 1
which is based on the
@


1.14
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.13 2004/01/02 18:23:00 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate$
d36 3
a38 1
.Nm lgammaf
d49 4
d73 17
d102 5
d112 3
d125 9
d139 9
@


1.13
log
@use .Sq rather than .Dq, which, for some reason, is making -mdoc wobble;
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.12 2003/06/02 20:18:41 millert Exp $
d31 1
a31 1
.Dd December 3, 1992
@


1.12
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.11 2003/02/27 04:22:12 jason Exp $
d69 1
a69 1
.Dq Li signgam\(**exp(lgamma(x))
@


1.11
log
@final pass at *f in terms of the double precision version.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.10 2000/04/15 02:15:28 aaron Exp $
d13 1
a13 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.10
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.9 2000/03/02 00:29:50 todd Exp $
d67 4
@


1.9
log
@$OpenBSD$
@
text
@d1 1
a1 1
.\"	$OpenBSD: lgamma.3,v 1.8 1999/07/09 13:35:27 aaron Exp $
d85 1
a85 1
.Tn VAX,
@


1.8
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a33 1
.\"	$Id: lgamma.3,v 1.7 1999/07/02 21:13:06 aaron Exp $
@


1.7
log
@remove redundant .Pp macros
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.6 1999/07/01 00:06:40 deraadt Exp $
d97 1
a97 1
function appeared in 
@


1.6
log
@provide MLINKS for "f" versions, and make sure they show up in whatis.db
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.5 1999/05/16 19:56:00 alex Exp $
d37 1
a37 1
.Os BSD 4.3
a66 1
.Pp
a78 1
.Pp
d96 1
a96 1
.Nm lgamma
@


1.5
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.4 1999/02/27 21:57:29 deraadt Exp $
d39 3
a41 2
.Nm lgamma 
.Nd log gamma function
@


1.4
log
@make function names the correct case
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.3 1997/07/28 08:15:03 deraadt Exp $
d93 2
a94 2
.Xr math 3 ,
.Xr infnan 3
@


1.3
log
@Removed confusing text which implies that gamma() computes the gamma
instead of log gamma function.  This was true with 4.4BSD's libm, but
they are equivalent on all other systems (XPG4.2 requires this); jtc.
cato@@ulysses.df.lth.se found it.
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.2 1995/10/28 00:56:57 deraadt Exp $
d51 1
a51 1
.Fn Lgamma x
d81 1
a81 1
.Fn Lgamma
@


1.2
log
@update from NetBSD
@
text
@d33 1
a33 1
.\"	$Id: lgamma.3,v 1.7 1995/04/14 18:40:16 jtc Exp $
a79 7
For arguments in its range,
.Fn gamma
is preferred, as for positive arguments
it is accurate to within one unit in the last place.
Exponentiation of
.Fn lgamma
will lose up to 10 significant bits.
d81 2
a82 4
.Fn Gamma
and
.Fn lgamma
return appropriate values unless an argument is out of range.
d91 1
a91 4
.Er ERANGE
For large non-integer negative values,
.Fn gamma
will underflow.
@


1.1
log
@Initial revision
@
text
@@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
