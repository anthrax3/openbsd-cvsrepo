head	1.3;
access;
symbols
	OPENBSD_6_1:1.3.0.16
	OPENBSD_6_1_BASE:1.3
	OPENBSD_6_0:1.3.0.14
	OPENBSD_6_0_BASE:1.3
	OPENBSD_5_9:1.3.0.10
	OPENBSD_5_9_BASE:1.3
	OPENBSD_5_8:1.3.0.12
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.4
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.8
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.6
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.2
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.2.0.8
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.2.0.6
	OPENBSD_5_2_BASE:1.2
	OPENBSD_5_1_BASE:1.2
	OPENBSD_5_1:1.2.0.4
	OPENBSD_5_0:1.2.0.2
	OPENBSD_5_0_BASE:1.2;
locks; strict;
comment	@.\" @;


1.3
date	2013.06.05.03.40.26;	author tedu;	state Exp;
branches;
next	1.2;

1.2
date	2011.05.26.15.42.27;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.25.21.28.43;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@use fancy .In macro for includes. from Jan Klemkow. ok jmc schwarze
@
text
@.\"	$OpenBSD: feenableexcept.3,v 1.2 2011/05/26 15:42:27 jmc Exp $
.\"
.\" Copyright (c) 2011 Martynas Venckus <martynas@@openbsd.org>
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: May 26 2011 $
.Dt FEENABLEEXCEPT 3
.Os
.Sh NAME
.Nm feenableexcept ,
.Nm fedisableexcept ,
.Nm fegetexcept
.Nd control floating-point exception masks
.Sh SYNOPSIS
.In fenv.h
.Ft int
.Fn feenableexcept "int excepts"
.Ft int
.Fn fedisableexcept "int excepts"
.Ft int
.Fn fegetexcept void
.Sh DESCRIPTION
These functions provide control of the floating-point exception
masks.
The
.Fa excepts
input argument is a bitmask specifying an exception type and
containing any of the values listed in
.Xr feclearexcept 3 .
.Pp
The
.Fn feenableexcept
function unmasks the floating-point exceptions represented by
.Fa excepts .
The future floating-point operations that produce
.Fa excepts
will trap, and a
.Dv SIGFPE
will be delivered to the process.
.Pp
The
.Fn fedisableexcept
function masks the floating-point exceptions represented by
.Fa excepts .
All exceptions are masked by default.
.Pp
The
.Fn fegetexcept
function returns the current exception mask.
.Sh RETURN VALUES
The
.Fn feenableexcept ,
and
.Fn fedisableexcept
functions return the previous exception mask.
The
.Fn fegetexcept
function returns the current exception mask.
.Sh SEE ALSO
.Xr sigaction 2 ,
.Xr feclearexcept 3 ,
.Xr fegetenv 3 ,
.Xr fegetround 3
.Sh STANDARDS
The
.Fn feenableexcept ,
.Fn fedisableexcept ,
and
.Fn fegetexcept
functions are
.Ox
extensions.
.Sh HISTORY
These functions first appeared in
.Ox 5.0 .
@


1.2
log
@tweak previous; ok martynas
@
text
@d1 1
a1 1
.\"	$OpenBSD: feenableexcept.3,v 1.1 2011/05/25 21:28:43 martynas Exp $
d17 1
a17 1
.Dd $Mdocdate: May 25 2011 $
d26 1
a26 1
.Fd #include <fenv.h>
@


1.1
log
@Document C99 floating-point environment.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
a40 1
.El
d73 2
a74 2
.Xr fegetround 3 ,
.Xr fegetenv 3
@

