head	1.7;
access;
symbols
	OPENBSD_5_9:1.6.0.10
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.6.0.12
	OPENBSD_5_8_BASE:1.6
	OPENBSD_5_7:1.6.0.4
	OPENBSD_5_7_BASE:1.6
	OPENBSD_5_6:1.6.0.8
	OPENBSD_5_6_BASE:1.6
	OPENBSD_5_5:1.6.0.6
	OPENBSD_5_5_BASE:1.6
	OPENBSD_5_4:1.6.0.2
	OPENBSD_5_4_BASE:1.6
	OPENBSD_5_3:1.4.0.18
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.16
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.14
	OPENBSD_5_0:1.4.0.12
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.3.0.2
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.1.1.0.28
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.26
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.24
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.22
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.7
date	2016.03.10.05.21.05;	author deraadt;	state dead;
branches;
next	1.6;
commitid	K03oHi07npnVMEbw;

1.6
date	2013.07.15.04.03.41;	author espie;	state Exp;
branches;
next	1.5;

1.5
date	2013.07.05.21.10.50;	author miod;	state Exp;
branches;
next	1.4;

1.4
date	2008.09.16.22.13.12;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2008.05.21.20.37.10;	author miod;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.02.20.18.41;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.49;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.49;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.7
log
@more pieces of vax
@
text
@/*	$OpenBSD: n_cbrt.S,v 1.6 2013/07/15 04:03:41 espie Exp $	*/
/*	$NetBSD: n_cbrt.S,v 1.1 1995/10/10 23:40:26 ragge Exp $	*/
/*
 * Copyright (c) 1985, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)cbrt.s	8.1 (Berkeley) 6/4/93
 */

#include <machine/asm.h>

/*
 * double cbrt(double arg)
 * W. Kahan, 10/13/80. revised 1/13/84 for keeping sign symmetry
 * error check by E LeBlanc, 8/18/82
 * Revised and tested by K.C. Ng, 5/2/85  
 * Max error less than 0.667 ulps (unit in the last places)
 */
ENTRY(cbrtf, 0)
	cvtfd	4(%ap),-(%sp)
	calls	$2,_C_LABEL(cbrt)
	cvtdf	%r0,%r0
	ret
	
STRONG_ALIAS(cbrtl,cbrt)
ENTRY(cbrt, R2|R3|R4|R5|R6|R7)
	movq	4(%ap),%r0	# r0 = argument x
	bicw3	$0x807f,%r0,%r2	# biased exponent of x
	jeql	return		# cbrt(0)=0  cbrt(res)=res. operand
	bicw3	$0x7fff,%r0,%ap	# ap has sign(x)
	xorw2	%ap,%r0		# r0 is abs(x)
	movl	%r0,%r2		# r2 has abs(x)
	rotl	$16,%r2,%r2	# r2 = |x| with bits unscrambled
	divl2	$3,%r2		# rough cbrt with bias/3
	addl2	B,%r2		# restore bias, diminish fraction
	rotl	$16,%r2,%r2	# r2=|q|=|cbrt| to 5 bits
	mulf3	%r2,%r2,%r3	# r3 =qq
	divf2	%r0,%r3		# r3 = qq/x
	mulf2	%r2,%r3
	addf2	C,%r3		# r3 = s = C + qqq/x
	divf3	%r3,D,%r4	# r4 = D/s
	addf2	E,%r4
	addf2	%r4,%r3		# r3 = s + E + D/s
	divf3	%r3,F,%r3	# r3 = F / (s + E + D/s)
	addf2	G,%r3		# r3 = G + F / (s + E + D/s)
	mulf2	%r3,%r2		# r2 = qr3 = new q to 23 bits
	clrl	%r3		# r2:r3 = q as double float
	muld3	%r2,%r2,%r4	# r4:r5 = qq exactly
	divd2	%r4,%r0		# r0:r1 = x/(q*q) rounded
	subd3	%r2,%r0,%r6	# r6:r7 = x/(q*q) - q exactly
	movq    %r2,%r4		# r4:r5 = q
	addw2	$0x80,%r4	# r4:r5 = 2 * q
	addd2	%r0,%r4		# r4:r5 = 2*q + x/(q*q)
	divd2	%r4,%r6		# r6:r7 = (x/(q*q)-q)/(2*q+x/(q*q))
	muld2	%r2,%r6		# r6:r7 = q*(x/(q*q)-q)/(2*q+x/(q*q))
	addd3	%r6,%r2,%r0	# r0:r1 = q + r6:r7
	bisw2	%ap,%r0		# restore the sign bit
return:
	ret			# error less than 0.667 ulps

.data
	.align 2
B :	.long		 721142941		# (86-0.03306235651)*(2^23)
C :	.float		0f0.5428571429		# 19/35
D :	.float		0f-0.7053061224		# -864/1225
E :	.float		0f1.414285714		# 99/70
F :	.float		0f1.607142857		# 45/28
G :	.float		0f0.3571428571		# 5/14
@


1.6
log
@add some missing asm functions to vax: long double as aliases to double,
and float functions by cvtfd/cvtdf (like in netbsd)

scalbnf will have to wait, as it's more complicated...
brings vax in line with the rest.

okay miod@@/martynas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_cbrt.S,v 1.5 2013/07/05 21:10:50 miod Exp $	*/
@


1.5
log
@VAX ELF userland bits. Consists mostly of register prefix additions.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_cbrt.S,v 1.4 2008/09/16 22:13:12 martynas Exp $	*/
d43 7
a49 2
	.text
	_ALIGN_TEXT
@


1.4
log
@remove d_cbrt, dcbrt, d_sqrt.  ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_cbrt.S,v 1.3 2008/05/21 20:37:10 miod Exp $	*/
d46 2
a47 2
	movq	4(ap),r0	# r0 = argument x
	bicw3	$0x807f,r0,r2	# biased exponent of x
d49 28
a76 28
	bicw3	$0x7fff,r0,ap	# ap has sign(x)
	xorw2	ap,r0		# r0 is abs(x)
	movl	r0,r2		# r2 has abs(x)
	rotl	$16,r2,r2	# r2 = |x| with bits unscrambled
	divl2	$3,r2		# rough cbrt with bias/3
	addl2	B,r2		# restore bias, diminish fraction
	rotl	$16,r2,r2	# r2=|q|=|cbrt| to 5 bits
	mulf3	r2,r2,r3	# r3 =qq
	divf2	r0,r3		# r3 = qq/x
	mulf2	r2,r3
	addf2	C,r3		# r3 = s = C + qqq/x
	divf3	r3,D,r4		# r4 = D/s
	addf2	E,r4
	addf2	r4,r3		# r3 = s + E + D/s
	divf3	r3,F,r3		# r3 = F / (s + E + D/s)
	addf2	G,r3		# r3 = G + F / (s + E + D/s)
	mulf2	r3,r2		# r2 = qr3 = new q to 23 bits
	clrl	r3		# r2:r3 = q as double float
	muld3	r2,r2,r4	# r4:r5 = qq exactly
	divd2	r4,r0		# r0:r1 = x/(q*q) rounded
	subd3	r2,r0,r6	# r6:r7 = x/(q*q) - q exactly
	movq    r2,r4		# r4:r5 = q
	addw2	$0x80,r4	# r4:r5 = 2 * q
	addd2	r0,r4		# r4:r5 = 2*q + x/(q*q)
	divd2	r4,r6		# r6:r7 = (x/(q*q)-q)/(2*q+x/(q*q))
	muld2	r2,r6		# r6:r7 = q*(x/(q*q)-q)/(2*q+x/(q*q))
	addd3	r6,r2,r0	# r0:r1 = q + r6:r7
	bisw2	ap,r0		# restore the sign bit
@


1.3
log
@Use proper *ENTRY macros with symbolic register save masks, sprinkle
_C_LABEL and _ASM_LABEL, and add $OpenBSD$ RCS Ids.

Include <sys/errno.h> and use its values directly, instead of using .set
directives (which grow the individual .o files even)

Also, replace `$' in internal (but non static) symbols with `_', and prefix
those with `__'.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a44 1
ALTENTRY(d_cbrt)
d47 2
a48 6
	jmp 	dcbrt2
ENTRY(dcbrt, R2|R3|R4|R5|R6|R7)
	movq	*4(ap),r0	# r0 = argument x

dcbrt2:	bicw3	$0x807f,r0,r2	# biased exponent of x
	jeql	return		# dcbrt(0)=0  dcbrt(res)=res. operand
d53 1
a53 1
	divl2	$3,r2		# rough dcbrt with bias/3
d55 1
a55 1
	rotl	$16,r2,r2	# r2=|q|=|dcbrt| to 5 bits
@


1.2
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
d34 2
a42 4

	.globl	_cbrt
	.globl	_d_cbrt
	.globl  _dcbrt_
d44 3
a46 5
	.align	1

_cbrt:
_d_cbrt:
	.word	0x00fc		# save r2 to r7
d49 1
a49 2
_dcbrt_:
	.word	0x00fc		# save r2 to r7
d86 1
a86 1
.align	2
a92 1

@


1.1
log
@Initial revision
@
text
@d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
