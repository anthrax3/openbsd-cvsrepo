head	1.5;
access;
symbols
	OPENBSD_6_2:1.5.0.16
	OPENBSD_6_2_BASE:1.5
	OPENBSD_6_1:1.5.0.18
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.14
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.5.0.10
	OPENBSD_5_9_BASE:1.5
	OPENBSD_5_8:1.5.0.12
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.4
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.5.0.8
	OPENBSD_5_6_BASE:1.5
	OPENBSD_5_5:1.5.0.6
	OPENBSD_5_5_BASE:1.5
	OPENBSD_5_4:1.5.0.2
	OPENBSD_5_4_BASE:1.5
	OPENBSD_5_3:1.4.0.18
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.16
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.14
	OPENBSD_5_0:1.4.0.12
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.10
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.8
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.4
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.4.0.6
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.2
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.2.0.2
	OPENBSD_4_4_BASE:1.2
	OPENBSD_4_3:1.1.0.26
	OPENBSD_4_3_BASE:1.1
	OPENBSD_4_2:1.1.0.24
	OPENBSD_4_2_BASE:1.1
	OPENBSD_4_1:1.1.0.22
	OPENBSD_4_1_BASE:1.1
	OPENBSD_4_0:1.1.0.20
	OPENBSD_4_0_BASE:1.1
	OPENBSD_3_9:1.1.0.18
	OPENBSD_3_9_BASE:1.1
	OPENBSD_3_8:1.1.0.16
	OPENBSD_3_8_BASE:1.1
	OPENBSD_3_7:1.1.0.14
	OPENBSD_3_7_BASE:1.1
	OPENBSD_3_6:1.1.0.12
	OPENBSD_3_6_BASE:1.1
	OPENBSD_3_5:1.1.0.10
	OPENBSD_3_5_BASE:1.1
	OPENBSD_3_4:1.1.0.8
	OPENBSD_3_4_BASE:1.1
	OPENBSD_3_3:1.1.0.6
	OPENBSD_3_3_BASE:1.1
	OPENBSD_3_2:1.1.0.4
	OPENBSD_3_2_BASE:1.1
	OPENBSD_3_1:1.1.0.2
	OPENBSD_3_1_BASE:1.1;
locks; strict;
comment	@# @;


1.5
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2008.12.09.20.21.07;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.09.20.00.35;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2008.06.26.05.42.05;	author ray;	state Exp;
branches;
next	1.1;

1.1
date	2002.01.30.15.09.42;	author naddy;	state Exp;
branches;
next	;


desc
@@


1.5
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@/*	$OpenBSD: s_copysign.S,v 1.4 2008/12/09 20:21:07 martynas Exp $	*/
/*	$NetBSD: s_copysign.S,v 1.4 1999/07/02 15:37:34 simonb Exp $	*/

/*-
 * Copyright (c) 1996 The NetBSD Foundation, Inc.
 * All rights reserved.
 *
 * This code is derived from software contributed to The NetBSD Foundation
 * by J.T. Conklin.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
 * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
 * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
 * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
 * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
 * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
 * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 */

#include <machine/asm.h>

STRONG_ALIAS(copysignl, copysign)
LEAF(copysign, 2)
	cpys	fa1, fa0, fv0
	RET
END(copysign)
@


1.4
log
@alias fabsl to fabs on these archs
@
text
@d1 1
a1 1
/*	$OpenBSD: s_copysign.S,v 1.3 2008/12/09 20:00:35 martynas Exp $	*/
d35 1
a35 1
WEAK_ALIAS(copysignl, copysign)
@


1.3
log
@- 80-bit and quad precision trigonometric and other most
important functions: acosl, asinl, atanl, atan2l, cosl,
sinl, tanl, exp2l, frexpl, ilogbl, ldexpl, logbl, scalbnl,
fabsl, hypotl, powl, sqrtl, rintl, copysignl, nanl, fdiml,
fmaxl, fminl.  mostly taken from freebsd, needed alot of
changes to adapt.  note, these are all c versions;  and are
quite slow when architectures have, e.g. sqrt.  assembly
versions will be added afterwards
- make them .weak/__weak_alias to the double precision
versions on other archs
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- remove unused infinity.c.  the c library has infinities
for each supported platform
- use STRICT_ASSIGN cast hack for _kernel_rem_pio2, so that
the double version has a chance of working on i386 with
extra precision
- avoid storing multiple copies of the pi/2 array, since
it won't vary
- bump major due to removed finite/finitef.  although they
will be in libc, which anything is linked to, minor bump
might be enough
ok millert@@.   tested by sthen@@, jsg@@, ajacoutot@@, kili@@, naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: s_copysign.S,v 1.2 2008/06/26 05:42:05 ray Exp $	*/
d35 1
a35 3
.weak copysignl
	copysignl = copysign

@


1.2
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
/*	$OpenBSD: s_copysign.S,v 1.1 2002/01/30 15:09:42 naddy Exp $	*/
d34 3
@


1.1
log
@Add native implementations of copysign() and copysignf() on alpha.
From NetBSD; ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
a18 7
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *        This product includes software developed by the NetBSD
 *        Foundation, Inc. and its contributors.
 * 4. Neither the name of The NetBSD Foundation nor the names of its
 *    contributors may be used to endorse or promote products derived
 *    from this software without specific prior written permission.
@

