head	1.3;
access;
symbols
	OPENBSD_5_5:1.2.0.8
	OPENBSD_5_5_BASE:1.2
	OPENBSD_5_4:1.2.0.4
	OPENBSD_5_4_BASE:1.2
	OPENBSD_5_3:1.2.0.2
	OPENBSD_5_3_BASE:1.2
	OPENBSD_5_2:1.1.0.6
	OPENBSD_5_2_BASE:1.1
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@# @;


1.3
date	2014.03.18.22.36.30;	author miod;	state dead;
branches;
next	1.2;

1.2
date	2013.02.02.13.29.14;	author miod;	state Exp;
branches;
next	1.1;

1.1
date	2011.05.28.21.55.04;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.3
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@/*	$OpenBSD: s_logbf.S,v 1.2 2013/02/02 13:29:14 miod Exp $ */
/*-
 * Copyright (c) 1990 The Regents of the University of California.
 * All rights reserved.
 *
 * This code is derived from software contributed to Berkeley by
 * the Systems Programming Group of the University of Utah Computer
 * Science Department.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <machine/asm.h>

| logbf(x)
| returns the unbiased exponent of x, a signed integer in single precision,
| except that logbf(0) is -INF, logbf(INF) is +INF, and logbf(NAN) is that NAN.
ENTRY(logbf)
	movw	%sp@@(4),%d0
	movw	#0x7F80,%d1	| exponent bits
	andw	%d1,%d0		| mask off all else
	cmpw	%d1,%d0		| max exponent?
	bne	Lfinite		| no, is finite
	fmoves	%sp@@(4),%fp0	| yes, infinite or NaN
	fbun	Ldone		| NaN returns NaN
	fabsx	%fp0		| +-inf returns inf
	jra	Ldone
Lfinite:
	fmoves	%sp@@(4),%fp0	| get entire number
	fbne	Lnonz		| zero?
	flog2x	%fp0		| yes, log(0) a convenient source of -inf
	jra	Ldone
Lnonz:
	fgetexpx	%fp0	| get exponent
Ldone:
	rts
@


1.2
log
@Userland bits for m68k/ELF. Mostly addition of register prefixes to the
assembler instructions, and cope with the few changes in return values
location.
@
text
@d1 1
a1 1
/*	$OpenBSD: s_logbf.S,v 1.1 2011/05/28 21:55:04 martynas Exp $ */
@


1.1
log
@Adapt m68k MD functions to single-precision.
Looked over by miod@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: s_logb.S,v 1.3 2005/08/02 11:17:32 espie Exp $ */
d41 4
a44 4
	movw	sp@@(4),d0
	movw	#0x7F80,d1	| exponent bits
	andw	d1,d0		| mask off all else
	cmpw	d1,d0		| max exponent?
d46 1
a46 1
	fmoves	sp@@(4),fp0	| yes, infinite or NaN
d48 1
a48 1
	fabsx	fp0		| +-inf returns inf
d51 1
a51 1
	fmoves	sp@@(4),fp0	| get entire number
d53 1
a53 1
	flog2x	fp0		| yes, log(0) a convenient source of -inf
d56 1
a56 1
	fgetexpx	fp0	| get exponent
a57 2
	fmoves	fp0,sp@@-
	movel	sp@@+,d0
@

