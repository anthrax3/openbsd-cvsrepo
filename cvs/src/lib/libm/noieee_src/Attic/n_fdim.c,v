head	1.7;
access;
symbols
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.10
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.8
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.4
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.6
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.2
	OPENBSD_4_5_BASE:1.3;
locks; strict;
comment	@ * @;


1.7
date	2013.07.03.04.48.17;	author espie;	state dead;
branches;
next	1.6;

1.6
date	2013.01.13.03.44.59;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2012.12.05.23.20.03;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2011.05.30.18.34.38;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2008.12.10.01.08.24;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2008.12.09.20.00.35;	author martynas;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.11.19.19.34;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.7
log
@with DBL vs LDBL fixed, tedu some source in noieee which is actually the
same as code in generic src.
introduce PURE_SRCS for completely MI math code.
okau martynas@@
@
text
@/*	$OpenBSD: n_fdim.c,v 1.6 2013/01/13 03:44:59 martynas Exp $	*/
/*-
 * Copyright (c) 2004 David Schultz <das@@FreeBSD.ORG>
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <math.h>

#define	DECL(type, fn)			\
type					\
fn(type x, type y)			\
{					\
					\
	if (isnan(x))			\
		return (x);		\
	if (isnan(y))			\
		return (y);		\
	return (x > y ? x - y : 0.0);	\
}

DECL(double, fdim)
DECL(float, fdimf)
DECL(long double, fdiml)
@


1.6
log
@Get rid of the very ugly lint workarounds: LINTLIBRARY, PROTOLIB,
and a few empty files for lint to chew on.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_fdim.c,v 1.5 2012/12/05 23:20:03 deraadt Exp $	*/
@


1.5
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: n_fdim.c,v 1.4 2011/05/30 18:34:38 martynas Exp $	*/
a27 2
/* LINTLIBRARY */

d44 1
a44 6
#ifdef	lint
/* PROTOLIB1 */
long double fdiml(long double, long double);
#else	/* lint */
__weak_alias(fdiml, fdim);
#endif	/* lint */
@


1.4
log
@Trick lint into recording the right prototypes in the llib-lm.ln
database on platforms without extended-precision floating-point
support.

Seems like a reasonable approach to millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_fdim.c,v 1.3 2008/12/10 01:08:24 martynas Exp $	*/
a29 1
#include <sys/cdefs.h>
@


1.3
log
@use sys/cdefs.h;  pointed out by theo
@
text
@d1 1
a1 1
/*	$OpenBSD: n_fdim.c,v 1.2 2008/12/09 20:00:35 martynas Exp $	*/
d28 2
d47 4
d52 1
@


1.2
log
@- 80-bit and quad precision trigonometric and other most
important functions: acosl, asinl, atanl, atan2l, cosl,
sinl, tanl, exp2l, frexpl, ilogbl, ldexpl, logbl, scalbnl,
fabsl, hypotl, powl, sqrtl, rintl, copysignl, nanl, fdiml,
fmaxl, fminl.  mostly taken from freebsd, needed alot of
changes to adapt.  note, these are all c versions;  and are
quite slow when architectures have, e.g. sqrt.  assembly
versions will be added afterwards
- make them .weak/__weak_alias to the double precision
versions on other archs
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- remove unused infinity.c.  the c library has infinities
for each supported platform
- use STRICT_ASSIGN cast hack for _kernel_rem_pio2, so that
the double version has a chance of working on i386 with
extra precision
- avoid storing multiple copies of the pi/2 array, since
it won't vary
- bump major due to removed finite/finitef.  although they
will be in libc, which anything is linked to, minor bump
might be enough
ok millert@@.   tested by sthen@@, jsg@@, ajacoutot@@, kili@@, naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_fdim.c,v 1.1 2008/09/11 19:19:34 martynas Exp $	*/
d28 1
a28 1
#include <machine/cdefs.h>
@


1.1
log
@since these got no ieee-specific code anymore, add fmin, fmax, fdim,
fminf, fmaxf, fdimf, fdiml for VAX.  looks good to millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: s_fdim.c,v 1.1 2008/09/07 20:36:09 martynas Exp $	*/
d28 1
d45 1
a45 1
DECL(long double, fdiml)
@

