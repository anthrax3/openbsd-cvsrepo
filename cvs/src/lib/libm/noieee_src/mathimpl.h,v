head	1.10;
access;
symbols
	OPENBSD_6_2:1.10.0.36
	OPENBSD_6_2_BASE:1.10
	OPENBSD_6_1:1.10.0.34
	OPENBSD_6_1_BASE:1.10
	OPENBSD_6_0:1.10.0.30
	OPENBSD_6_0_BASE:1.10
	OPENBSD_5_9:1.10.0.26
	OPENBSD_5_9_BASE:1.10
	OPENBSD_5_8:1.10.0.28
	OPENBSD_5_8_BASE:1.10
	OPENBSD_5_7:1.10.0.20
	OPENBSD_5_7_BASE:1.10
	OPENBSD_5_6:1.10.0.24
	OPENBSD_5_6_BASE:1.10
	OPENBSD_5_5:1.10.0.22
	OPENBSD_5_5_BASE:1.10
	OPENBSD_5_4:1.10.0.18
	OPENBSD_5_4_BASE:1.10
	OPENBSD_5_3:1.10.0.16
	OPENBSD_5_3_BASE:1.10
	OPENBSD_5_2:1.10.0.14
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.12
	OPENBSD_5_0:1.10.0.10
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.10.0.8
	OPENBSD_4_9_BASE:1.10
	OPENBSD_4_8:1.10.0.6
	OPENBSD_4_8_BASE:1.10
	OPENBSD_4_7:1.10.0.2
	OPENBSD_4_7_BASE:1.10
	OPENBSD_4_6:1.10.0.4
	OPENBSD_4_6_BASE:1.10
	OPENBSD_4_5:1.8.0.4
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.8.0.2
	OPENBSD_4_4_BASE:1.8
	OPENBSD_4_3:1.5.0.20
	OPENBSD_4_3_BASE:1.5
	OPENBSD_4_2:1.5.0.18
	OPENBSD_4_2_BASE:1.5
	OPENBSD_4_1:1.5.0.16
	OPENBSD_4_1_BASE:1.5
	OPENBSD_4_0:1.5.0.14
	OPENBSD_4_0_BASE:1.5
	OPENBSD_3_9:1.5.0.12
	OPENBSD_3_9_BASE:1.5
	OPENBSD_3_8:1.5.0.10
	OPENBSD_3_8_BASE:1.5
	OPENBSD_3_7:1.5.0.8
	OPENBSD_3_7_BASE:1.5
	OPENBSD_3_6:1.5.0.6
	OPENBSD_3_6_BASE:1.5
	OPENBSD_3_5:1.5.0.4
	OPENBSD_3_5_BASE:1.5
	OPENBSD_3_4:1.5.0.2
	OPENBSD_3_4_BASE:1.5
	OPENBSD_3_3:1.4.0.6
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.4
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.2
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.2.0.6
	OPENBSD_3_0_BASE:1.2
	OPENBSD_2_9:1.2.0.4
	OPENBSD_2_9_BASE:1.2
	OPENBSD_2_8:1.2.0.2
	OPENBSD_2_8_BASE:1.2
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.10
date	2009.04.11.20.03.21;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2009.04.05.02.12.43;	author martynas;	state Exp;
branches;
next	1.8;

1.8
date	2008.06.21.08.26.19;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2008.06.12.22.43.36;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.12.22.20.56;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.02.20.18.41;	author millert;	state Exp;
branches;
next	1.4;

1.4
date	2002.02.19.19.39.37;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	2002.02.16.21.27.27;	author millert;	state Exp;
branches;
next	1.2;

1.2
date	2000.10.10.12.17.43;	author hugh;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.51;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.51;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.10
log
@in the old days compiler could not convert decimal constants
accurately, hence the tricks in libm, using machine representation
of constants.  remove kludges and switch to use decimal constants,
much simplifying the code.  since, the compiler converts them
accurately.  generated values match on vaxfp
discussed with millert@@, and miod@@
testing todd@@, and myself
ok millert@@
@
text
@/*	$OpenBSD: mathimpl.h,v 1.9 2009/04/05 02:12:43 martynas Exp $	*/
/*	$NetBSD: mathimpl.h,v 1.1 1995/10/10 23:36:31 ragge Exp $	*/
/*
 * Copyright (c) 1988, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 *
 *	@@(#)mathimpl.h	8.1 (Berkeley) 6/4/93
 */

/*
 * Functions internal to the math package, yet not static.
 */
extern double	__exp__E();
extern double	__log__L();

struct Double {
	double a, b;
};

double __exp__D(double, double);
struct Double __log__D(double);
@


1.9
log
@const static -> static const;  since it's deprecated per C99.  ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: mathimpl.h,v 1.8 2008/06/21 08:26:19 martynas Exp $	*/
a33 49
#include <sys/cdefs.h>

#if defined(__vax__)

/* Deal with concatenation in cpp */
#  define	cat3(a,b,c) a ## b ## c

/* Deal with vax byte order issues */
#  ifdef __vax__
#    define	cat3t(a,b,c) cat3(a,b,c)
#  else
#    define	cat3t(a,b,c) cat3(a,c,b)
#  endif

#  define vccast(name) (*(const double *)(cat3(name,,x)))

   /*
    * Define a constant to high precision on a Vax or Tahoe.
    *
    * Args are the name to define, the decimal floating point value,
    * four 16-bit chunks of the float value in hex
    * (because the vax differ in float format!), the power
    * of 2 of the hex-float exponent, and the hex-float mantissa.
    * Most of these arguments are not used at compile time; they are
    * used in a post-check to make sure the constants were compiled
    * correctly.
    *
    * People who want to use the constant will have to do their own
    *     #define foo vccast(foo)
    * since CPP cannot do this for them from inside another macro (sigh).
    * We define "vccast" if this needs doing.
    */
#  define vc(name, value, x1,x2,x3,x4, bexp, xval) \
	static const long cat3(name,,x)[] = {cat3t(0x,x1,x2), cat3t(0x,x3,x4)};

#  define ic(name, value, bexp, xval) ;

#else	/* defined(__vax__) */

   /* Hooray, we have an IEEE machine */
#  undef vccast
#  define vc(name, value, x1,x2,x3,x4, bexp, xval) ;

#  define ic(name, value, bexp, xval) \
	static const double name = value;

#endif	/* defined(__vax__) */


d40 4
a43 1
struct Double {double a, b;};
@


1.8
log
@cleaning up, no functional changes
- no support for National 32000, removing ns32000/national ifdefs maze
- remove tahoe defs
- ansify
looks fine to millert@@;  who also noticed rint removal
@
text
@d1 1
a1 1
/*	$OpenBSD: mathimpl.h,v 1.7 2008/06/12 22:43:36 martynas Exp $	*/
d67 1
a67 1
	const static long cat3(name,,x)[] = {cat3t(0x,x1,x2), cat3t(0x,x3,x4)};
d78 1
a78 1
	const static double name = value;
@


1.7
log
@spacing, add rcs ids, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d36 1
a36 1
#if defined(__vax__)||defined(tahoe)
d41 1
a41 1
/* Deal with vax/tahoe byte order issues */
d55 1
a55 1
    * (because the vax and tahoe differ in float format!), the power
d71 1
a71 1
#else	/* vax or tahoe */
d80 1
a80 1
#endif	/* defined(__vax__)||defined(tahoe) */
@


1.6
log
@some cleanup for noieee_src, as asked by millert@@: remove fictional
includes, include math.h where needed and remove redundant declarations
ok millert@@
@
text
@d1 1
@


1.5
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@a33 1
#include <math.h>
@


1.4
log
@We live in an ANSI C world.  Remove lots of gratuitous #ifdef __STDC__ cruft.
@
text
@d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.3
log
@Part one of userland __P removal.  Done with a simple regexp with some minor hand editing to make comments line up correctly.  Another pass is forthcoming that handles the cases that could not be done automatically.
@
text
@d42 2
a43 6
/* Deal with different ways to concatenate in cpp */
#  ifdef __STDC__
#    define	cat3(a,b,c) a ## b ## c
#  else
#    define	cat3(a,b,c) a/**/b/**/c
#  endif
@


1.2
log
@^vax^__vax__
@
text
@d98 2
a99 2
double __exp__D __P((double, double));
struct Double __log__D __P((double));
@


1.1
log
@Initial revision
@
text
@d40 1
a40 1
#if defined(vax)||defined(tahoe)
d50 1
a50 1
#  ifdef vax
d88 1
a88 1
#endif	/* defined(vax)||defined(tahoe) */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
