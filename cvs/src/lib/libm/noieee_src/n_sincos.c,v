head	1.16;
access;
symbols
	OPENBSD_6_1_BASE:1.16
	OPENBSD_6_0:1.14.0.14
	OPENBSD_6_0_BASE:1.14
	OPENBSD_5_9:1.14.0.10
	OPENBSD_5_9_BASE:1.14
	OPENBSD_5_8:1.14.0.12
	OPENBSD_5_8_BASE:1.14
	OPENBSD_5_7:1.14.0.4
	OPENBSD_5_7_BASE:1.14
	OPENBSD_5_6:1.14.0.8
	OPENBSD_5_6_BASE:1.14
	OPENBSD_5_5:1.14.0.6
	OPENBSD_5_5_BASE:1.14
	OPENBSD_5_4:1.14.0.2
	OPENBSD_5_4_BASE:1.14
	OPENBSD_5_3:1.12.0.2
	OPENBSD_5_3_BASE:1.12
	OPENBSD_5_2:1.10.0.6
	OPENBSD_5_2_BASE:1.10
	OPENBSD_5_1_BASE:1.10
	OPENBSD_5_1:1.10.0.4
	OPENBSD_5_0:1.10.0.2
	OPENBSD_5_0_BASE:1.10
	OPENBSD_4_9:1.9.0.6
	OPENBSD_4_9_BASE:1.9
	OPENBSD_4_8:1.9.0.4
	OPENBSD_4_8_BASE:1.9
	OPENBSD_4_7:1.9.0.2
	OPENBSD_4_7_BASE:1.9
	OPENBSD_4_6:1.8.0.6
	OPENBSD_4_6_BASE:1.8
	OPENBSD_4_5:1.8.0.2
	OPENBSD_4_5_BASE:1.8
	OPENBSD_4_4:1.6.0.2
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.2.0.20
	OPENBSD_4_3_BASE:1.2
	OPENBSD_4_2:1.2.0.18
	OPENBSD_4_2_BASE:1.2
	OPENBSD_4_1:1.2.0.16
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.14
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.12
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.10
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.8
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.6
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.4
	OPENBSD_3_5_BASE:1.2
	OPENBSD_3_4:1.2.0.2
	OPENBSD_3_4_BASE:1.2
	OPENBSD_3_3:1.1.1.1.0.28
	OPENBSD_3_3_BASE:1.1.1.1
	OPENBSD_3_2:1.1.1.1.0.26
	OPENBSD_3_2_BASE:1.1.1.1
	OPENBSD_3_1:1.1.1.1.0.24
	OPENBSD_3_1_BASE:1.1.1.1
	OPENBSD_3_0:1.1.1.1.0.22
	OPENBSD_3_0_BASE:1.1.1.1
	OPENBSD_2_9:1.1.1.1.0.20
	OPENBSD_2_9_BASE:1.1.1.1
	OPENBSD_2_8:1.1.1.1.0.18
	OPENBSD_2_8_BASE:1.1.1.1
	OPENBSD_2_7:1.1.1.1.0.16
	OPENBSD_2_7_BASE:1.1.1.1
	OPENBSD_2_6:1.1.1.1.0.14
	OPENBSD_2_6_BASE:1.1.1.1
	OPENBSD_2_5:1.1.1.1.0.12
	OPENBSD_2_5_BASE:1.1.1.1
	OPENBSD_2_4:1.1.1.1.0.10
	OPENBSD_2_4_BASE:1.1.1.1
	OPENBSD_2_3:1.1.1.1.0.8
	OPENBSD_2_3_BASE:1.1.1.1
	OPENBSD_2_2:1.1.1.1.0.6
	OPENBSD_2_2_BASE:1.1.1.1
	OPENBSD_2_1:1.1.1.1.0.4
	OPENBSD_2_1_BASE:1.1.1.1
	OPENBSD_2_0:1.1.1.1.0.2
	OPENBSD_2_0_BASE:1.1.1.1
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.16
date	2016.09.12.19.47.02;	author guenther;	state Exp;
branches;
next	1.15;
commitid	Lp8bnB2xK76nGFvJ;

1.15
date	2016.09.12.04.39.47;	author guenther;	state Exp;
branches;
next	1.14;
commitid	yu8HfTXRTrrv8b2W;

1.14
date	2013.07.15.04.08.26;	author espie;	state Exp;
branches;
next	1.13;

1.13
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.12;

1.12
date	2013.01.13.03.44.59;	author martynas;	state Exp;
branches;
next	1.11;

1.11
date	2012.12.05.23.20.03;	author deraadt;	state Exp;
branches;
next	1.10;

1.10
date	2011.05.30.18.34.38;	author martynas;	state Exp;
branches;
next	1.9;

1.9
date	2009.10.27.23.59.29;	author deraadt;	state Exp;
branches;
next	1.8;

1.8
date	2008.12.10.01.08.24;	author martynas;	state Exp;
branches;
next	1.7;

1.7
date	2008.12.09.20.00.35;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2008.06.25.17.49.31;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2008.06.21.08.26.19;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2008.06.12.22.43.36;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2008.06.12.22.20.56;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2003.06.02.20.18.41;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.52;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.52;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.16
log
@Reduce libm's exports and make internal calls go direct.
All dependencies on libc are now via reserved/standardized names.

ok kettenis@@ millert@@ deraadt@@
@
text
@/*	$OpenBSD: n_sincos.c,v 1.15 2016/09/12 04:39:47 guenther Exp $	*/
/*	$NetBSD: n_sincos.c,v 1.1 1995/10/10 23:37:04 ragge Exp $	*/
/*
 * Copyright (c) 1987, 1993
 *	The Regents of the University of California.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions
 * are met:
 * 1. Redistributions of source code must retain the above copyright
 *    notice, this list of conditions and the following disclaimer.
 * 2. Redistributions in binary form must reproduce the above copyright
 *    notice, this list of conditions and the following disclaimer in the
 *    documentation and/or other materials provided with the distribution.
 * 3. Neither the name of the University nor the names of its contributors
 *    may be used to endorse or promote products derived from this software
 *    without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
 * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
 * ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
 * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
 * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
 * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
 * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
 * SUCH DAMAGE.
 */

#include <math.h>

#include "mathimpl.h"

float
sinf(float x)
{
	return (float)sin((double) x);
}
DEF_STD(sinf);

double
sin(double x)
{
	double a,c,z;

        if(!isfinite(x))	/* sin(NaN) and sin(INF) must be NaN */
		return x-x;
	x=remainder(x,PI2);	/* reduce x into [-PI,PI] */
	a=copysign(x,one);
	if (a >= PIo4) {
		if(a >= PI3o4)		/* ... in [3PI/4,PI] */
			x = copysign((a = PI-a),x);
		else {			/* ... in [PI/4,3PI/4]  */
			a = PIo2-a;		/* rtn. sign(x)*C(PI/2-|x|) */
			z = a*a;
			c = cos__C(z);
			z *= half;
			a = (z >= thresh ? half-((z-half)-c) : one-(z-c));
			return copysign(a,x);
		}
	}

	if (a < small) {		/* rtn. S(x) */
		big+a;
		return x;
	}
	return x+x*sin__S(x*x);
}
DEF_STD(sin);
LDBL_CLONE(sin);

float
cosf(float x)
{
	return (float)cos((double) x);
}

double
cos(double x)
{
	double a,c,z,s = 1.0;

	if(!isfinite(x))	/* cos(NaN) and cos(INF) must be NaN */
		return x-x;
	x=remainder(x,PI2);	/* reduce x into [-PI,PI] */
	a=copysign(x,one);
	if (a >= PIo4) {
		if (a >= PI3o4) {	/* ... in [3PI/4,PI] */
			a = PI-a;
			s = negone;
		}
		else {			/* ... in [PI/4,3PI/4] */
			a = PIo2-a;
			return a+a*sin__S(a*a);	/* rtn. S(PI/2-|x|) */
		}
	}
	if (a < small) {
		big+a;
		return s;		/* rtn. s*C(a) */
	}
	z = a*a;
	c = cos__C(z);
	z *= half;
	a = (z >= thresh ? half-((z-half)-c) : one-(z-c));
	return copysign(a,s);
}
END_STD(cos);
LDBL_CLONE(cos);
@


1.15
log
@Per fpclassify(3): isinff(), isnanf(), finite(), and finitef() are deprecated
in favor of isinf(), isnan(), and isfinite().

ok tb@@ martynas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.14 2013/07/15 04:08:26 espie Exp $	*/
d41 1
d71 2
a72 2

__strong_alias(sinl, sin);
d109 2
a110 2

__strong_alias(cosl, cos);
@


1.14
log
@bring reference C code that's not compiled in synch with asm code
okay martynas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.13 2013/03/28 18:09:38 martynas Exp $	*/
d47 1
a47 1
        if(!finite(x))		/* sin(NaN) and sin(INF) must be NaN */
d84 1
a84 1
	if(!finite(x))		/* cos(NaN) and cos(INF) must be NaN */
@


1.13
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.12 2013/01/13 03:44:59 martynas Exp $	*/
d36 6
d72 6
@


1.12
log
@Get rid of the very ugly lint workarounds: LINTLIBRARY, PROTOLIB,
and a few empty files for lint to chew on.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.11 2012/12/05 23:20:03 deraadt Exp $	*/
d65 1
a65 1
__weak_alias(sinl, sin);
d97 1
a97 1
__weak_alias(cosl, cos);
@


1.11
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.10 2011/05/30 18:34:38 martynas Exp $	*/
a31 2
/* LINTLIBRARY */

a64 5
#ifdef	lint
/* PROTOLIB1 */
long double sinl(long double);
/* PROTOLIB0 */
#else	/* lint */
a65 1
#endif  /* lint */
a96 5
#ifdef	lint
/* PROTOLIB1 */
long double cosl(long double);
/* PROTOLIB0 */
#else	/* lint */
a97 1
#endif  /* lint */
@


1.10
log
@Trick lint into recording the right prototypes in the llib-lm.ln
database on platforms without extended-precision floating-point
support.

Seems like a reasonable approach to millert@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.9 2009/10/27 23:59:29 deraadt Exp $	*/
a33 1
#include <sys/cdefs.h>
@


1.9
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.8 2008/12/10 01:08:24 martynas Exp $	*/
d32 2
d68 5
a72 1
#ifdef __weak_alias
d74 1
a74 1
#endif /* __weak_alias */
d106 5
a110 1
#ifdef __weak_alias
d112 1
a112 1
#endif /* __weak_alias */
@


1.8
log
@use sys/cdefs.h;  pointed out by theo
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.7 2008/12/09 20:00:35 martynas Exp $	*/
a30 4

#ifndef lint
static char sccsid[] = "@@(#)sincos.c	8.1 (Berkeley) 6/4/93";
#endif /* not lint */
@


1.7
log
@- 80-bit and quad precision trigonometric and other most
important functions: acosl, asinl, atanl, atan2l, cosl,
sinl, tanl, exp2l, frexpl, ilogbl, ldexpl, logbl, scalbnl,
fabsl, hypotl, powl, sqrtl, rintl, copysignl, nanl, fdiml,
fmaxl, fminl.  mostly taken from freebsd, needed alot of
changes to adapt.  note, these are all c versions;  and are
quite slow when architectures have, e.g. sqrt.  assembly
versions will be added afterwards
- make them .weak/__weak_alias to the double precision
versions on other archs
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- remove unused infinity.c.  the c library has infinities
for each supported platform
- use STRICT_ASSIGN cast hack for _kernel_rem_pio2, so that
the double version has a chance of working on i386 with
extra precision
- avoid storing multiple copies of the pi/2 array, since
it won't vary
- bump major due to removed finite/finitef.  although they
will be in libc, which anything is linked to, minor bump
might be enough
ok millert@@.   tested by sthen@@, jsg@@, ajacoutot@@, kili@@, naddy@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.6 2008/06/25 17:49:31 martynas Exp $	*/
d36 1
a36 1
#include <machine/cdefs.h>
@


1.6
log
@- expressions such as x != x and x == x are prone to errors and
ugly, when we have isnan and isinf
- no need to check for _IEEE, when checking for not-a-number
- remove some impossible checks
- while here, drem->remainder, as drem is just an obsolete alias
now
ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.5 2008/06/21 08:26:19 martynas Exp $	*/
d36 3
a38 1
#include "math.h"
d70 4
d103 4
@


1.5
log
@cleaning up, no functional changes
- no support for National 32000, removing ns32000/national ifdefs maze
- remove tahoe defs
- ansify
looks fine to millert@@;  who also noticed rint removal
@
text
@d1 1
a1 1
/*	$OpenBSD: n_sincos.c,v 1.4 2008/06/12 22:43:36 martynas Exp $	*/
d46 1
a46 1
	x=drem(x,PI2);		/* reduce x into [-PI,PI] */
d75 1
a75 1
	x=drem(x,PI2);		/* reduce x into [-PI,PI] */
@


1.4
log
@spacing, add rcs ids, no binary change
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d40 1
a40 2
sin(x)
double x;
d69 1
a69 2
cos(x)
double x;
@


1.3
log
@some cleanup for noieee_src, as asked by millert@@: remove fictional
includes, include math.h where needed and remove redundant declarations
ok millert@@
@
text
@d1 1
d70 1
a70 1
cos(x) 
d86 1
a86 1
			return a+a*sin__S(a*a);	/* rtn. S(PI/2-|x|) */ 
@


1.2
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d35 1
d37 1
a37 1
#include "trig.h"
@


1.1
log
@Initial revision
@
text
@d14 1
a14 5
 * 3. All advertising materials mentioning features or use of this software
 *    must display the following acknowledgement:
 *	This product includes software developed by the University of
 *	California, Berkeley and its contributors.
 * 4. Neither the name of the University nor the names of its contributors
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
