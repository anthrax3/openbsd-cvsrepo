head	1.9;
access;
symbols
	OPENBSD_6_2:1.9.0.6
	OPENBSD_6_2_BASE:1.9
	OPENBSD_6_1:1.9.0.4
	OPENBSD_6_1_BASE:1.9
	OPENBSD_6_0:1.8.0.14
	OPENBSD_6_0_BASE:1.8
	OPENBSD_5_9:1.8.0.10
	OPENBSD_5_9_BASE:1.8
	OPENBSD_5_8:1.8.0.12
	OPENBSD_5_8_BASE:1.8
	OPENBSD_5_7:1.8.0.4
	OPENBSD_5_7_BASE:1.8
	OPENBSD_5_6:1.8.0.8
	OPENBSD_5_6_BASE:1.8
	OPENBSD_5_5:1.8.0.6
	OPENBSD_5_5_BASE:1.8
	OPENBSD_5_4:1.8.0.2
	OPENBSD_5_4_BASE:1.8
	OPENBSD_5_3:1.6.0.2
	OPENBSD_5_3_BASE:1.6
	OPENBSD_5_2:1.4.0.6
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.4
	OPENBSD_5_0:1.4.0.2
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.3.0.20
	OPENBSD_4_9_BASE:1.3
	OPENBSD_4_8:1.3.0.18
	OPENBSD_4_8_BASE:1.3
	OPENBSD_4_7:1.3.0.14
	OPENBSD_4_7_BASE:1.3
	OPENBSD_4_6:1.3.0.16
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.12
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.10
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.8
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.6
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.4
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.2
	OPENBSD_4_0_BASE:1.3;
locks; strict;
comment	@ * @;


1.9
date	2016.09.12.19.47.02;	author guenther;	state Exp;
branches;
next	1.8;
commitid	Lp8bnB2xK76nGFvJ;

1.8
date	2013.07.03.04.46.36;	author espie;	state Exp;
branches;
next	1.7;

1.7
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.6;

1.6
date	2013.01.13.03.45.00;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2012.12.05.23.20.04;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2011.07.06.00.02.42;	author martynas;	state Exp;
branches;
next	1.3;

1.3
date	2006.04.25.18.15.36;	author otto;	state Exp;
branches;
next	1.2;

1.2
date	2006.04.24.18.36.01;	author otto;	state Exp;
branches;
next	1.1;

1.1
date	2006.03.18.20.13.24;	author brad;	state Exp;
branches;
next	;


desc
@@


1.9
log
@Reduce libm's exports and make internal calls go direct.
All dependencies on libc are now via reserved/standardized names.

ok kettenis@@ millert@@ deraadt@@
@
text
@/* @@(#)s_floor.c 5.1 93/09/24 */
/*
 * ====================================================
 * Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
 *
 * Developed at SunPro, a Sun Microsystems, Inc. business.
 * Permission to use, copy, modify, and distribute this
 * software is freely granted, provided that this notice
 * is preserved.
 * ====================================================
 */

/*
 * trunc(x)
 * Return x rounded toward 0 to integral value
 * Method:
 *	Bit twiddling.
 * Exception:
 *	Inexact flag raised if x not equal to trunc(x).
 */

#include <float.h>
#include <math.h>

#include "math_private.h"

static const double huge = 1.0e300;

double
trunc(double x)
{
	int32_t i0,i1,jj0;
	u_int32_t i;
	EXTRACT_WORDS(i0,i1,x);
	jj0 = ((i0>>20)&0x7ff)-0x3ff;
	if(jj0<20) {
	    if(jj0<0) { 	/* raise inexact if x != 0 */
		if(huge+x>0.0) {/* |x|<1, so return 0*sign(x) */
		    i0 &= 0x80000000U;
		    i1 = 0;
		}
	    } else {
		i = (0x000fffff)>>jj0;
		if(((i0&i)|i1)==0) return x; /* x is integral */
		if(huge+x>0.0) {	/* raise inexact flag */
		    i0 &= (~i); i1=0;
		}
	    }
	} else if (jj0>51) {
	    if(jj0==0x400) return x+x;	/* inf or NaN */
	    else return x;		/* x is integral */
	} else {
	    i = ((u_int32_t)(0xffffffff))>>(jj0-20);
	    if((i1&i)==0) return x;	/* x is integral */
	    if(huge+x>0.0)		/* raise inexact flag */
		i1 &= (~i);
	}
	INSERT_WORDS(x,i0,i1);
	return x;
}
DEF_STD(trunc);
LDBL_MAYBE_UNUSED_CLONE(trunc);
@


1.8
log
@test LDBL_MANT_DIG == DBL_MANT_DIG instead of hardcoding 53.
-> test becomes meaningful on vax
No actual change, no bump
okay martynas@@
@
text
@d61 2
a62 4

#if	LDBL_MANT_DIG == DBL_MANT_DIG
__strong_alias(truncl, trunc);
#endif	/* LDBL_MANT_DIG == DBL_MANT_DIG */
@


1.7
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d62 1
a62 1
#if	LDBL_MANT_DIG == 53
d64 1
a64 1
#endif	/* LDBL_MANT_DIG == 53 */
@


1.6
log
@Get rid of the very ugly lint workarounds: LINTLIBRARY, PROTOLIB,
and a few empty files for lint to chew on.
@
text
@d63 1
a63 1
__weak_alias(truncl, trunc);
@


1.5
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@a12 2
/* LINTLIBRARY */

a62 4
#ifdef	lint
/* PROTOLIB1 */
long double truncl(long double);
#else	/* lint */
a63 1
#endif	/* lint */
@


1.4
log
@Finalize work on the math library.  It's time to do this monster
commit, and deal with problems (if any) in tree.

Note that this adds the following functions.  Ports with hacks might
need adjustments.

nexttoward(3), fma(3), nexttowardf(3), fmaf(3), acoshl(3), asinhl(3),
atanhl(3), coshl(3), sinhl(3), tanhl(3), expl(3), expm1l(3), logl(3),
log10l(3), log1pl(3), log2l(3), modfl(3), cbrtl(3), hypotl(3),
powl(3), erfl(3), erfcl(3), lgammal(3), tgammal(3), ceill(3),
floorl(3), lrintl(3), llrintl(3), roundl(3), lroundl(3), llroundl(3),
truncl(3), fmodl(3), remainderl(3), remquol(3), nextafterl(3),
nexttowardl(3), fmal(3).

With this commit, our library implements all functionality required
by C99.  Documentation bits will follow.
@
text
@a14 5
#if 0
#include <sys/cdefs.h>
__FBSDID("$FreeBSD: src/lib/msun/src/s_trunc.c,v 1.1 2004/06/20 09:25:43 das Exp $");
#endif

a23 1
#include <sys/cdefs.h>
@


1.3
log
@Avoid shadowing of external symbols by local variables; whoever
thought up the names of the bessel functions deserves a beating.
ok deraadt@@
@
text
@d13 2
d29 4
a32 1
#include "math.h"
d69 9
@


1.2
log
@small delint; ok deraadt@@
@
text
@d35 1
a35 1
	int32_t i0,i1,j0;
d38 3
a40 3
	j0 = ((i0>>20)&0x7ff)-0x3ff;
	if(j0<20) {
	    if(j0<0) { 	/* raise inexact if x != 0 */
d46 1
a46 1
		i = (0x000fffff)>>j0;
d52 2
a53 2
	} else if (j0>51) {
	    if(j0==0x400) return x+x;	/* inf or NaN */
d56 1
a56 1
	    i = ((u_int32_t)(0xffffffff))>>(j0-20);
@


1.1
log
@add some more C99 functions: trunc(3) and truncf(3).

From FreeBSD

ok deraadt@@ millert@@ otto@@ jmc@@
@
text
@d36 1
a36 1
	u_int32_t i,j;
@

