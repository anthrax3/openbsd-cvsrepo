head	1.8;
access;
symbols
	OPENBSD_6_1_BASE:1.8
	OPENBSD_6_0:1.7.0.14
	OPENBSD_6_0_BASE:1.7
	OPENBSD_5_9:1.7.0.10
	OPENBSD_5_9_BASE:1.7
	OPENBSD_5_8:1.7.0.12
	OPENBSD_5_8_BASE:1.7
	OPENBSD_5_7:1.7.0.4
	OPENBSD_5_7_BASE:1.7
	OPENBSD_5_6:1.7.0.8
	OPENBSD_5_6_BASE:1.7
	OPENBSD_5_5:1.7.0.6
	OPENBSD_5_5_BASE:1.7
	OPENBSD_5_4:1.7.0.2
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.5.0.2
	OPENBSD_5_3_BASE:1.5
	OPENBSD_5_2:1.3.0.6
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.3
	OPENBSD_5_1:1.3.0.4
	OPENBSD_5_0:1.3.0.2
	OPENBSD_5_0_BASE:1.3
	OPENBSD_4_9:1.2.0.4
	OPENBSD_4_9_BASE:1.2
	OPENBSD_4_8:1.2.0.2
	OPENBSD_4_8_BASE:1.2
	OPENBSD_4_7:1.1.0.4
	OPENBSD_4_7_BASE:1.1
	OPENBSD_4_6:1.1.0.6
	OPENBSD_4_6_BASE:1.1
	OPENBSD_4_5:1.1.0.2
	OPENBSD_4_5_BASE:1.1;
locks; strict;
comment	@ * @;


1.8
date	2016.09.12.19.47.02;	author guenther;	state Exp;
branches;
next	1.7;
commitid	Lp8bnB2xK76nGFvJ;

1.7
date	2013.07.03.04.46.36;	author espie;	state Exp;
branches;
next	1.6;

1.6
date	2013.03.28.18.09.38;	author martynas;	state Exp;
branches;
next	1.5;

1.5
date	2013.01.13.03.45.00;	author martynas;	state Exp;
branches;
next	1.4;

1.4
date	2012.12.05.23.20.04;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	2011.07.08.19.25.31;	author martynas;	state Exp;
branches;
next	1.2;

1.2
date	2010.07.19.00.04.07;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2008.09.07.20.36.09;	author martynas;	state Exp;
branches;
next	;


desc
@@


1.8
log
@Reduce libm's exports and make internal calls go direct.
All dependencies on libc are now via reserved/standardized names.

ok kettenis@@ millert@@ deraadt@@
@
text
@/*	$OpenBSD: s_cproj.c,v 1.7 2013/07/03 04:46:36 espie Exp $	*/
/*
 * Copyright (c) 2008 Martynas Venckus <martynas@@openbsd.org>
 *
 * Permission to use, copy, modify, and distribute this software for any
 * purpose with or without fee is hereby granted, provided that the above
 * copyright notice and this permission notice appear in all copies.
 *
 * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
 * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
 * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
 * ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
 * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
 * ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
 * OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
 */

#include <complex.h>
#include <float.h>
#include <math.h>

double complex
cproj(double complex z)
{
	double complex res;

	if (isinf(__real__ z) || isinf(__imag__ z)) {
		__real__ res = INFINITY;
		__imag__ res = copysign(0.0, __imag__ z);
	} else {
		res = z;
	}

	return res;
}
DEF_STD(cproj);
LDBL_MAYBE_UNUSED_CLONE(cproj);
@


1.7
log
@test LDBL_MANT_DIG == DBL_MANT_DIG instead of hardcoding 53.
-> test becomes meaningful on vax
No actual change, no bump
okay martynas@@
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.6 2013/03/28 18:09:38 martynas Exp $	*/
d36 2
a37 4

#if	LDBL_MANT_DIG == DBL_MANT_DIG
__strong_alias(cprojl, cproj);
#endif	/* LDBL_MANT_DIG == DBL_MANT_DIG */
@


1.6
log
@Switch libc and libm to use strong aliases rather than weak aliases
where appropriate.  Among other things makes the symbols consistent
across all architectures (notably where ldbl mantissa is 53 bits).

While at it, kill unused LINTLIBRARY/PROTOLIB1 cruft which was there
to trick lint into recording the right prototypes for aliased
functions.  Most of the work done at the awesome n2k13 hackathon.

Agreed by kettenis@@, guenther@@, matthew@@.
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.5 2013/01/13 03:45:00 martynas Exp $	*/
d37 1
a37 1
#if	LDBL_MANT_DIG == 53
d39 1
a39 1
#endif	/* LDBL_MANT_DIG == 53 */
@


1.5
log
@Get rid of the very ugly lint workarounds: LINTLIBRARY, PROTOLIB,
and a few empty files for lint to chew on.
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.4 2012/12/05 23:20:04 deraadt Exp $	*/
d38 1
a38 1
__weak_alias(cprojl, cproj);
@


1.4
log
@Remove excessive sys/cdefs.h inclusion
ok guenther millert kettenis
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.3 2011/07/08 19:25:31 martynas Exp $	*/
a17 2
/* LINTLIBRARY */

a37 4
#ifdef	lint
/* PROTOLIB1 */
long double complex cprojl(long double complex);
#else	/* lint */
a38 1
#endif	/* lint */
@


1.3
log
@Finalize work on complex math routines, now that we have the
extended-precision support.  Mostly from Cephes.
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.2 2010/07/19 00:04:07 guenther Exp $	*/
a19 1
#include <sys/cdefs.h>
@


1.2
log
@Fix the cproj family to not return garbage on finite arguments.

ok millert@@
@
text
@d1 1
a1 1
/*	$OpenBSD: s_cproj.c,v 1.1 2008/09/07 20:36:09 martynas Exp $	*/
d18 3
d22 1
d39 9
@


1.1
log
@- replace dtoa w/ David's gdtoa, version 2008-03-15
- provide proper dtoa locks
- use the real strtof implementation
- add strtold, __hdtoa, __hldtoa
- add %a/%A support
- don't lose precision in printf, don't round to double anymore
- implement extended-precision versions of libc functions: fpclassify,
isnan, isinf, signbit, isnormal, isfinite, now that the ieee.h is
fixed
- separate vax versions of strtof, and __hdtoa
- add complex math support.  added functions: cacos, casin, catan,
ccos, csin, ctan, cacosh, casinh, catanh, ccosh, csinh, ctanh, cexp,
clog, cabs, cpow, csqrt, carg, cimag, conj, cproj, creal, cacosf,
casinf, catanf, ccosf, csinf, ctanf, cacoshf, casinhf, catanhf,
ccoshf, csinhf, ctanhf, cexpf, clogf, cabsf, cpowf, csqrtf, cargf,
cimagf, conjf, cprojf, crealf
- add fdim, fmax, fmin
- add log2. (adapted implementation e_log.c.  could be more acruate
& faster, but it's good enough for now)
- remove wrappers & cruft in libm, supposed to work-around mistakes
in SVID, etc.;  use ieee versions.  fixes issues in python 2.6 for
djm@@
- make _digittoint static
- proper definitions for i386, and amd64 in ieee.h
- sh, powerpc don't really have extended-precision
- add missing definitions for mips64 (quad), m{6,8}k (96-bit) float.h
for LDBL_*
- merge lead to frac for m{6,8}k, for gdtoa to work properly
- add FRAC*BITS & EXT_TO_ARRAY32 definitions in ieee.h, for hdtoa&ldtoa
to use
- add EXT_IMPLICIT_NBIT definition, which indicates implicit
normalization bit
- add regression tests for libc: fpclassify and printf
- arith.h & gd_qnan.h definitions
- update ieee.h: hppa doesn't have quad-precision, hppa64 does
- add missing prototypes to gdtoaimp
- on 64-bit platforms make sure gdtoa doesn't use a long when it
really wants an int
- etc., what i may have forgotten...
- bump libm major, due to removed&changed symbols
- no libc bump, since this is riding on djm's libc major crank from
a day ago

discussed with / requested by / testing theo, sthen@@, djm@@, jsg@@,
merdely@@, jsing@@, tedu@@, brad@@, jakemsr@@, and others.
looks good to millert@@
parts of the diff ok kettenis@@

this commit does not include:
- man page changes
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d29 2
@

