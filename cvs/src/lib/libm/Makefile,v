head	1.115;
access;
symbols
	OPENBSD_6_2_BASE:1.115
	OPENBSD_6_1:1.115.0.4
	OPENBSD_6_1_BASE:1.115
	OPENBSD_6_0:1.112.0.2
	OPENBSD_6_0_BASE:1.112
	OPENBSD_5_9:1.108.0.2
	OPENBSD_5_9_BASE:1.108
	OPENBSD_5_8:1.107.0.6
	OPENBSD_5_8_BASE:1.107
	OPENBSD_5_7:1.107.0.2
	OPENBSD_5_7_BASE:1.107
	OPENBSD_5_6:1.106.0.4
	OPENBSD_5_6_BASE:1.106
	OPENBSD_5_5:1.105.0.4
	OPENBSD_5_5_BASE:1.105
	OPENBSD_5_4:1.104.0.2
	OPENBSD_5_4_BASE:1.104
	OPENBSD_5_3:1.101.0.2
	OPENBSD_5_3_BASE:1.101
	OPENBSD_5_2:1.98.0.4
	OPENBSD_5_2_BASE:1.98
	OPENBSD_5_1_BASE:1.98
	OPENBSD_5_1:1.98.0.2
	OPENBSD_5_0:1.96.0.2
	OPENBSD_5_0_BASE:1.96
	OPENBSD_4_9:1.76.0.4
	OPENBSD_4_9_BASE:1.76
	OPENBSD_4_8:1.76.0.2
	OPENBSD_4_8_BASE:1.76
	OPENBSD_4_7:1.75.0.2
	OPENBSD_4_7_BASE:1.75
	OPENBSD_4_6:1.66.0.4
	OPENBSD_4_6_BASE:1.66
	OPENBSD_4_5:1.62.0.2
	OPENBSD_4_5_BASE:1.62
	OPENBSD_4_4:1.53.0.2
	OPENBSD_4_4_BASE:1.53
	OPENBSD_4_3:1.41.0.6
	OPENBSD_4_3_BASE:1.41
	OPENBSD_4_2:1.41.0.4
	OPENBSD_4_2_BASE:1.41
	OPENBSD_4_1:1.41.0.2
	OPENBSD_4_1_BASE:1.41
	OPENBSD_4_0:1.40.0.2
	OPENBSD_4_0_BASE:1.40
	OPENBSD_3_9:1.36.0.2
	OPENBSD_3_9_BASE:1.36
	OPENBSD_3_8:1.34.0.6
	OPENBSD_3_8_BASE:1.34
	OPENBSD_3_7:1.34.0.4
	OPENBSD_3_7_BASE:1.34
	OPENBSD_3_6:1.34.0.2
	OPENBSD_3_6_BASE:1.34
	OPENBSD_3_5:1.33.0.2
	OPENBSD_3_5_BASE:1.33
	OPENBSD_3_4:1.30.0.4
	OPENBSD_3_4_BASE:1.30
	OPENBSD_3_3:1.30.0.2
	OPENBSD_3_3_BASE:1.30
	OPENBSD_3_2:1.28.0.2
	OPENBSD_3_2_BASE:1.28
	OPENBSD_3_1:1.26.0.2
	OPENBSD_3_1_BASE:1.26
	OPENBSD_3_0:1.25.0.2
	OPENBSD_3_0_BASE:1.25
	OPENBSD_2_9:1.23.0.2
	OPENBSD_2_9_BASE:1.23
	OPENBSD_2_8:1.22.0.6
	OPENBSD_2_8_BASE:1.22
	OPENBSD_2_7:1.22.0.4
	OPENBSD_2_7_BASE:1.22
	OPENBSD_2_6:1.22.0.2
	OPENBSD_2_6_BASE:1.22
	OPENBSD_2_5:1.17.0.2
	OPENBSD_2_5_BASE:1.17
	OPENBSD_2_4:1.12.0.4
	OPENBSD_2_4_BASE:1.12
	OPENBSD_2_3:1.12.0.2
	OPENBSD_2_3_BASE:1.12
	OPENBSD_2_2:1.11.0.2
	OPENBSD_2_2_BASE:1.11
	OPENBSD_2_1:1.10.0.2
	OPENBSD_2_1_BASE:1.10
	OPENBSD_2_0:1.5.0.2
	OPENBSD_2_0_BASE:1.5
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@# @;


1.115
date	2017.01.11.13.38.13;	author patrick;	state Exp;
branches;
next	1.114;
commitid	DDnTMaffahCBGh9k;

1.114
date	2016.09.12.19.47.01;	author guenther;	state Exp;
branches;
next	1.113;
commitid	Lp8bnB2xK76nGFvJ;

1.113
date	2016.09.01.10.08.03;	author tedu;	state Exp;
branches;
next	1.112;
commitid	8LqCEzqjppzk7u86;

1.112
date	2016.05.11.21.52.49;	author deraadt;	state Exp;
branches;
next	1.111;
commitid	VpgRpYXqYSJy4P7J;

1.111
date	2016.03.30.06.38.42;	author jmc;	state Exp;
branches;
next	1.110;
commitid	LN9ijdk9SEnzWAbM;

1.110
date	2016.03.10.22.11.50;	author jmc;	state Exp;
branches;
next	1.109;
commitid	UK5a3rQStBDO2pfS;

1.109
date	2016.03.09.16.28.47;	author deraadt;	state Exp;
branches;
next	1.108;
commitid	OSDG2O3Cgeifnf1W;

1.108
date	2015.09.18.07.48.36;	author miod;	state Exp;
branches;
next	1.107;
commitid	pSiTqACoUJR97HrK;

1.107
date	2014.09.12.22.07.24;	author kettenis;	state Exp;
branches;
next	1.106;
commitid	3UJpMyCthlEPBHYX;

1.106
date	2014.03.18.22.36.30;	author miod;	state Exp;
branches;
next	1.105;

1.105
date	2013.08.07.12.45.58;	author espie;	state Exp;
branches;
next	1.104;

1.104
date	2013.07.15.18.05.14;	author espie;	state Exp;
branches;
next	1.103;

1.103
date	2013.07.03.10.26.49;	author espie;	state Exp;
branches;
next	1.102;

1.102
date	2013.07.03.04.48.16;	author espie;	state Exp;
branches;
next	1.101;

1.101
date	2012.09.15.13.15.22;	author miod;	state Exp;
branches;
next	1.100;

1.100
date	2012.09.04.03.10.42;	author okan;	state Exp;
branches;
next	1.99;

1.99
date	2012.08.02.13.38.39;	author okan;	state Exp;
branches;
next	1.98;

1.98
date	2011.09.22.04.56.09;	author schwarze;	state Exp;
branches;
next	1.97;

1.97
date	2011.08.19.15.44.36;	author kettenis;	state Exp;
branches;
next	1.96;

1.96
date	2011.07.24.19.25.50;	author martynas;	state Exp;
branches;
next	1.95;

1.95
date	2011.07.20.17.50.43;	author martynas;	state Exp;
branches;
next	1.94;

1.94
date	2011.07.11.11.07.04;	author martynas;	state Exp;
branches;
next	1.93;

1.93
date	2011.07.09.22.17.22;	author martynas;	state Exp;
branches;
next	1.92;

1.92
date	2011.07.09.02.13.52;	author martynas;	state Exp;
branches;
next	1.91;

1.91
date	2011.07.08.22.58.54;	author martynas;	state Exp;
branches;
next	1.90;

1.90
date	2011.07.08.22.52.56;	author martynas;	state Exp;
branches;
next	1.89;

1.89
date	2011.07.08.22.28.33;	author martynas;	state Exp;
branches;
next	1.88;

1.88
date	2011.07.08.19.25.31;	author martynas;	state Exp;
branches;
next	1.87;

1.87
date	2011.07.08.19.21.42;	author martynas;	state Exp;
branches;
next	1.86;

1.86
date	2011.07.07.01.20.24;	author martynas;	state Exp;
branches;
next	1.85;

1.85
date	2011.07.07.00.54.15;	author martynas;	state Exp;
branches;
next	1.84;

1.84
date	2011.07.06.03.50.23;	author martynas;	state Exp;
branches;
next	1.83;

1.83
date	2011.07.06.00.02.42;	author martynas;	state Exp;
branches;
next	1.82;

1.82
date	2011.05.28.22.13.52;	author martynas;	state Exp;
branches;
next	1.81;

1.81
date	2011.05.28.21.55.04;	author martynas;	state Exp;
branches;
next	1.80;

1.80
date	2011.05.25.22.19.25;	author martynas;	state Exp;
branches;
next	1.79;

1.79
date	2011.05.25.21.28.43;	author martynas;	state Exp;
branches;
next	1.78;

1.78
date	2011.04.28.19.31.22;	author todd;	state Exp;
branches;
next	1.77;

1.77
date	2011.04.28.18.05.39;	author martynas;	state Exp;
branches;
next	1.76;

1.76
date	2010.07.19.12.48.23;	author millert;	state Exp;
branches;
next	1.75;

1.75
date	2010.02.03.20.49.00;	author miod;	state Exp;
branches;
next	1.74;

1.74
date	2009.11.06.23.30.21;	author kettenis;	state Exp;
branches;
next	1.73;

1.73
date	2009.11.05.20.14.32;	author kettenis;	state Exp;
branches;
next	1.72;

1.72
date	2009.10.26.21.06.19;	author kettenis;	state Exp;
branches;
next	1.71;

1.71
date	2009.10.24.10.06.02;	author jmc;	state Exp;
branches;
next	1.70;

1.70
date	2009.07.29.18.43.28;	author martynas;	state Exp;
branches;
next	1.69;

1.69
date	2009.07.28.16.14.11;	author martynas;	state Exp;
branches;
next	1.68;

1.68
date	2009.07.25.11.38.10;	author martynas;	state Exp;
branches;
next	1.67;

1.67
date	2009.07.15.20.08.43;	author martynas;	state Exp;
branches;
next	1.66;

1.66
date	2009.04.19.16.48.02;	author martynas;	state Exp;
branches;
next	1.65;

1.65
date	2009.04.10.11.30.33;	author martynas;	state Exp;
branches;
next	1.64;

1.64
date	2009.04.05.19.26.27;	author martynas;	state Exp;
branches;
next	1.63;

1.63
date	2009.03.28.16.16.30;	author martynas;	state Exp;
branches;
next	1.62;

1.62
date	2008.12.12.19.30.17;	author martynas;	state Exp;
branches;
next	1.61;

1.61
date	2008.12.12.00.10.26;	author martynas;	state Exp;
branches;
next	1.60;

1.60
date	2008.12.09.23.13.31;	author martynas;	state Exp;
branches;
next	1.59;

1.59
date	2008.12.09.20.00.35;	author martynas;	state Exp;
branches;
next	1.58;

1.58
date	2008.10.07.22.25.53;	author martynas;	state Exp;
branches;
next	1.57;

1.57
date	2008.09.16.22.06.24;	author martynas;	state Exp;
branches;
next	1.56;

1.56
date	2008.09.11.19.19.34;	author martynas;	state Exp;
branches;
next	1.55;

1.55
date	2008.09.09.20.42.55;	author martynas;	state Exp;
branches;
next	1.54;

1.54
date	2008.09.07.20.36.08;	author martynas;	state Exp;
branches;
next	1.53;

1.53
date	2008.07.30.08.02.34;	author jmc;	state Exp;
branches;
next	1.52;

1.52
date	2008.07.29.22.08.43;	author martynas;	state Exp;
branches;
next	1.51;

1.51
date	2008.07.29.21.57.13;	author martynas;	state Exp;
branches;
next	1.50;

1.50
date	2008.07.29.18.38.21;	author martynas;	state Exp;
branches;
next	1.49;

1.49
date	2008.07.24.09.40.16;	author martynas;	state Exp;
branches;
next	1.48;

1.48
date	2008.07.21.20.30.35;	author martynas;	state Exp;
branches;
next	1.47;

1.47
date	2008.07.21.20.29.14;	author martynas;	state Exp;
branches;
next	1.46;

1.46
date	2008.07.16.15.15.26;	author martynas;	state Exp;
branches;
next	1.45;

1.45
date	2008.06.12.15.51.42;	author jmc;	state Exp;
branches;
next	1.44;

1.44
date	2008.06.11.20.53.27;	author martynas;	state Exp;
branches;
next	1.43;

1.43
date	2008.06.11.14.50.06;	author martynas;	state Exp;
branches;
next	1.42;

1.42
date	2008.06.11.14.35.33;	author martynas;	state Exp;
branches;
next	1.41;

1.41
date	2006.09.25.20.25.41;	author kettenis;	state Exp;
branches;
next	1.40;

1.40
date	2006.07.12.07.26.08;	author brad;	state Exp;
branches;
next	1.39;

1.39
date	2006.03.19.00.01.04;	author kettenis;	state Exp;
branches;
next	1.38;

1.38
date	2006.03.18.20.13.24;	author brad;	state Exp;
branches;
next	1.37;

1.37
date	2006.03.14.19.27.57;	author otto;	state Exp;
branches;
next	1.36;

1.36
date	2005.11.24.20.49.18;	author deraadt;	state Exp;
branches;
next	1.35;

1.35
date	2005.11.17.20.07.40;	author otto;	state Exp;
branches;
next	1.34;

1.34
date	2004.04.06.00.21.18;	author brad;	state Exp;
branches;
next	1.33;

1.33
date	2004.02.28.18.46.27;	author deraadt;	state Exp;
branches;
next	1.32;

1.32
date	2004.02.27.17.36.13;	author deraadt;	state Exp;
branches;
next	1.31;

1.31
date	2004.02.08.18.03.48;	author deraadt;	state Exp;
branches;
next	1.30;

1.30
date	2003.02.27.00.30.43;	author jason;	state Exp;
branches;
next	1.29;

1.29
date	2003.01.03.14.39.36;	author miod;	state Exp;
branches;
next	1.28;

1.28
date	2002.05.22.21.34.56;	author mickey;	state Exp;
branches;
next	1.27;

1.27
date	2002.05.22.20.55.55;	author mickey;	state Exp;
branches;
next	1.26;

1.26
date	2002.01.30.15.09.42;	author naddy;	state Exp;
branches;
next	1.25;

1.25
date	2001.08.28.21.44.20;	author art;	state Exp;
branches;
next	1.24;

1.24
date	2001.06.26.22.38.44;	author miod;	state Exp;
branches;
next	1.23;

1.23
date	2000.11.08.20.43.37;	author deraadt;	state Exp;
branches;
next	1.22;

1.22
date	99.07.18.19.12.59;	author deraadt;	state Exp;
branches;
next	1.21;

1.21
date	99.07.01.00.06.39;	author deraadt;	state Exp;
branches;
next	1.20;

1.20
date	99.06.28.16.28.41;	author espie;	state Exp;
branches;
next	1.19;

1.19
date	99.06.03.14.37.58;	author deraadt;	state Exp;
branches;
next	1.18;

1.18
date	99.05.26.13.52.05;	author espie;	state Exp;
branches;
next	1.17;

1.17
date	99.03.08.19.14.28;	author millert;	state Exp;
branches;
next	1.16;

1.16
date	99.03.07.01.21.32;	author deraadt;	state Exp;
branches;
next	1.15;

1.15
date	99.03.07.01.19.12;	author deraadt;	state Exp;
branches;
next	1.14;

1.14
date	99.03.04.02.03.05;	author millert;	state Exp;
branches;
next	1.13;

1.13
date	98.11.16.06.04.53;	author deraadt;	state Exp;
branches;
next	1.12;

1.12
date	98.03.02.23.34.43;	author millert;	state Exp;
branches;
next	1.11;

1.11
date	97.09.01.02.13.12;	author mickey;	state Exp;
branches;
next	1.10;

1.10
date	97.03.25.17.07.33;	author rahnds;	state Exp;
branches;
next	1.9;

1.9
date	96.11.14.15.04.49;	author mickey;	state Exp;
branches;
next	1.8;

1.8
date	96.10.27.19.57.45;	author downsj;	state Exp;
branches;
next	1.7;

1.7
date	96.10.27.12.34.51;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	96.10.25.00.03.05;	author downsj;	state Exp;
branches;
next	1.5;

1.5
date	96.09.30.18.52.39;	author maja;	state Exp;
branches;
next	1.4;

1.4
date	96.09.30.18.48.19;	author maja;	state Exp;
branches;
next	1.3;

1.3
date	96.03.25.07.13.00;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	95.12.14.02.45.15;	author deraadt;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.45;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.45;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.115
log
@Add support for AArch64.  Based on FreeBSD's msun header, modified
to look and feel like our code.
@
text
@#  $OpenBSD: Makefile,v 1.114 2016/09/12 19:47:01 guenther Exp $
#  $NetBSD: Makefile,v 1.28 1995/11/20 22:06:19 jtc Exp $
#
#  @@(#)Makefile 5.1beta 93/09/24 
# 
#  ====================================================
#  Copyright (C) 1993 by Sun Microsystems, Inc. All rights reserved.
# 
#  Developed at SunPro, a Sun Microsystems, Inc. business.
#  Permission to use, copy, modify, and distribute this
#  software is freely granted, provided that this notice 
#  is preserved.
#  ====================================================

.if (${MACHINE_ARCH} == "alpha")
.PATH:	${.CURDIR}/arch/alpha
ARCH_SRCS = s_copysign.S s_copysignf.S
.elif (${MACHINE_ARCH} == "i386")
.PATH:	${.CURDIR}/arch/i387
ARCH_SRCS = e_acos.S e_asin.S e_atan2.S e_exp.S e_fmod.S e_log.S e_log10.S \
	    e_remainder.S e_remainderf.S e_scalb.S e_sqrt.S e_sqrtf.S \
	    e_sqrtl.S \
	    invtrig.c \
	    s_atan.S s_atanf.S s_ceil.S s_ceilf.S s_copysign.S s_copysignf.S \
	    s_cos.S s_cosf.S s_floor.S s_floorf.S \
	    s_ilogb.S s_ilogbf.S s_log1p.S s_log1pf.S s_logb.S s_logbf.S \
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S s_rint.S s_rintf.S\
	    s_scalbnf.S s_significand.S s_significandf.S \
	    s_sin.S s_sinf.S s_tan.S s_tanf.S
.elif (${MACHINE_ARCH} == "amd64")
.PATH:	${.CURDIR}/arch/amd64
CPPFLAGS+=-I${.CURDIR}/arch/amd64
ARCH_SRCS = e_acos.S e_asin.S e_atan2.S e_exp.S e_fmod.S e_log.S e_log10.S \
	    e_remainder.S e_remainderf.S e_scalb.S e_sqrt.S e_sqrtf.S \
	    e_sqrtl.S \
	    invtrig.c \
	    s_atan.S s_atanf.S s_ceil.S s_ceilf.S s_copysign.S s_copysignf.S \
	    s_cos.S s_cosf.S s_floor.S s_floorf.S \
	    s_ilogb.S s_ilogbf.S s_log1p.S s_log1pf.S s_logb.S s_logbf.S \
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S \
	    s_rint.S s_rintf.S s_scalbnf.S s_significand.S \
	    s_significandf.S s_sin.S s_sinf.S s_tan.S s_tanf.S
.elif (${MACHINE_ARCH} == "hppa")
.PATH:	${.CURDIR}/arch/hppa
ARCH_SRCS = e_sqrt.c e_sqrtf.c e_remainder.c e_remainderf.c \
	    s_ceil.c s_ceilf.c s_floor.c s_floorf.c s_rint.c s_rintf.c \
	    s_round.c s_roundf.c s_trunc.c s_truncf.c
.elif (${MACHINE_ARCH} == "sh")
.PATH:	${.CURDIR}/arch/sh
ARCH_SRCS = e_sqrt.c e_sqrtf.c s_fabsf.c
.elif (${MACHINE_ARCH} == "aarch64")
.PATH:	${.CURDIR}/arch/aarch64
.elif (${MACHINE_ARCH} == "arm")
.PATH:	${.CURDIR}/arch/arm
.elif (${MACHINE_ARCH} == "m88k")
.PATH:	${.CURDIR}/arch/m88k
.elif (${MACHINE_ARCH} == "mips64")
.PATH:	${.CURDIR}/arch/mips64
.elif (${MACHINE_ARCH} == "mips64el")
.PATH:	${.CURDIR}/arch/mips64
.elif (${MACHINE_ARCH} == "powerpc")
.PATH:	${.CURDIR}/arch/powerpc
.elif (${MACHINE_ARCH} == "sparc64")
.PATH:	${.CURDIR}/arch/sparc64
ARCH_SRCS = e_sqrtl.c
.endif

.PATH:	${.CURDIR}/man
.PATH:	${.CURDIR}/src
.PATH:	${.CURDIR}/noieee_src

LIB=	m
COMMON_SRCS = b_exp__D.c b_log__D.c b_tgamma.c \
	e_acos.c e_acosf.c e_acosh.c e_acoshf.c e_asin.c e_asinf.c \
	e_atan2.c e_atan2f.c e_atanh.c e_atanhf.c e_cosh.c e_coshf.c e_exp.c \
	e_expf.c e_fmod.c e_fmodf.c e_hypot.c e_hypotf.c e_j0.c e_j0f.c \
	e_j1.c e_j1f.c e_jn.c e_jnf.c e_lgamma_r.c e_lgammaf_r.c e_log.c \
	e_log10.c e_log10f.c e_log2.c e_log2f.c e_logf.c e_pow.c e_powf.c \
	e_rem_pio2.c \
	e_rem_pio2f.c e_remainder.c e_remainderf.c e_scalb.c e_scalbf.c \
	e_sinh.c e_sinhf.c e_sqrt.c e_sqrtf.c \
	fenv.c \
	k_cos.c k_cosf.c k_rem_pio2.c k_rem_pio2f.c k_sin.c k_sinf.c \
	k_tan.c k_tanf.c \
	s_lround.c s_lroundf.c s_llround.c s_llroundf.c \
	s_asinh.c s_asinhf.c s_atan.c s_atanf.c s_cabsf.c \
	s_cacosf.c s_cacoshf.c s_cargf.c \
	s_casinf.c s_casinhf.c s_catanf.c \
	s_catanhf.c s_cbrt.c s_cbrtf.c s_ccosf.c \
	s_ccoshf.c s_ceil.c \
	s_ceilf.c s_cexpf.c s_clogf.c \
	s_copysign.c s_copysignf.c s_cos.c s_cosf.c s_cpowf.c \
	s_csinf.c \
	s_csinhf.c s_csqrtf.c s_ctanf.c \
	s_ctanhf.c s_erf.c s_erff.c s_exp2.c s_exp2f.c s_expm1.c s_expm1f.c \
	s_fabsf.c s_fma.c s_fmaf.c \
	s_floor.c s_floorf.c s_frexpf.c s_ilogb.c s_ilogbf.c \
	s_log1p.c \
	s_log1pf.c s_logb.c s_logbf.c s_llrint.c s_llrintf.c s_lrint.c \
	s_lrintf.c s_modff.c s_nan.c s_nearbyint.c s_nextafter.c \
	s_nextafterf.c s_nexttowardf.c s_remquo.c s_remquof.c s_rint.c \
	s_rintf.c \
	s_scalbn.c s_scalbnf.c s_significand.c \
	s_significandf.c \
	s_sin.c s_sinf.c s_tan.c s_tanf.c s_tanh.c s_tanhf.c s_trunc.c \
	s_truncf.c w_drem.c w_dremf.c w_gamma.c w_gamma_r.c w_gammaf.c \
	w_gammaf_r.c w_lgamma.c w_lgammaf.c

LONG_SRCS = e_acoshl.c e_acosl.c e_asinl.c e_atan2l.c e_atanhl.c \
	e_coshl.c s_cabsl.c s_cacoshl.c s_cacosl.c s_cargl.c \
	s_casinhl.c s_casinl.c s_catanhl.c s_catanl.c s_ccoshl.c \
	s_ccosl.c s_cexpl.c s_cimagl.c s_clogl.c s_conjl.c s_cpowl.c \
	s_cprojl.c s_creall.c s_csinhl.c s_csinl.c s_csqrtl.c \
	s_ctanhl.c s_ctanl.c e_expl.c e_fmodl.c e_hypotl.c e_lgammal.c \
	e_log10l.c e_log2l.c e_logl.c e_powl.c e_remainderl.c \
	e_sinhl.c e_sqrtl.c e_tgammal.c invtrig.c k_cosl.c k_sinl.c \
	k_tanl.c polevll.c s_asinhl.c s_atanl.c s_cbrtl.c s_ceill.c \
	s_copysignl.c s_cosl.c s_erfl.c s_exp2l.c s_expm1l.c s_fabsl.c \
	s_floorl.c s_fmal.c s_fmaxl.c s_fminl.c s_frexpl.c s_ilogbl.c \
	s_llrintl.c s_llroundl.c s_log1pl.c s_logbl.c s_lrintl.c \
	s_lroundl.c s_modfl.c s_nanl.c s_nextafterl.c s_nexttoward.c \
	s_remquol.c s_rintl.c s_roundl.c s_scalbnl.c s_sinl.c \
	s_tanhl.c s_tanl.c s_truncl.c

# math routines that are completely MI
PURE_SRCS = s_cabs.c s_cacos.c s_cacosh.c s_carg.c s_casin.c \
	s_casinh.c s_catan.c s_catanh.c s_ccos.c s_ccosh.c s_cexp.c \
	s_cimag.c s_cimagf.c s_clog.c s_conj.c s_conjf.c s_cpow.c \
	s_creal.c s_crealf.c s_csin.c s_csinh.c s_csqrt.c s_ctan.c \
	s_ctanh.c s_fdim.c s_fmax.c s_fmaxf.c s_fmin.c s_fminf.c \
	s_cproj.c s_cprojf.c s_round.c s_roundf.c s_scalbln.c s_signgam.c 

SRCS=	${COMMON_SRCS} ${PURE_SRCS}
.if (${MACHINE_ARCH} == "amd64") || (${MACHINE_ARCH} == "i386")
.PATH:		${.CURDIR}/src/ld80
CPPFLAGS+=	-I${.CURDIR}/src -I${.CURDIR}/src/ld80
SRCS+=		${LONG_SRCS}
.endif
.if (${MACHINE_CPU} == "mips64") || (${MACHINE_ARCH} == "sparc64") || \
    (${MACHINE_ARCH} == "aarch64")
.PATH:		${.CURDIR}/src/ld128
CPPFLAGS+=	-I${.CURDIR}/src -I${.CURDIR}/src/ld128
SRCS+=		${LONG_SRCS}
.endif

CPPFLAGS+=-I${.CURDIR}/hidden -include namespace.h \
	-Werror-implicit-function-declaration

VERSION_SCRIPT=	${.CURDIR}/Symbols.map

# Substitute common sources with any arch specific sources 
.for i in ${ARCH_SRCS}
    SRCS:=${SRCS:S/${i:S/.S/.c/}/$i/}
.endfor

MAN+=	acos.3 acosh.3 asin.3 asinh.3 atan.3 atan2.3 atanh.3 ceil.3 \
	copysign.3 cos.3 cosh.3 erf.3 exp.3 \
	fdim.3 feclearexcept.3 feenableexcept.3 fegetenv.3 \
	fegetround.3 floor.3 fma.3 fmax.3 fmod.3 hypot.3 ilogb.3 j0.3 \
	lgamma.3 logb.3 lrint.3 lround.3 nan.3 nextafter.3 \
	remainder.3 rint.3 round.3 scalbn.3 sin.3 sinh.3 sqrt.3 \
	tan.3 tanh.3 trunc.3

MAN+=	cacos.3 cacosh.3 carg.3 casin.3 casinh.3 catan.3 catanh.3 \
	ccos.3 ccosh.3 cexp.3 cimag.3 clog.3 conj.3 cpow.3 cproj.3 \
	creal.3 csin.3 csinh.3 csqrt.3 ctan.3 ctanh.3

.include <bsd.lib.mk>

${OBJS} ${GOBJS} ${POBJS} ${SOBJS} ${DOBJS}: ${.CURDIR}/hidden/namespace.h
@


1.114
log
@Reduce libm's exports and make internal calls go direct.
All dependencies on libc are now via reserved/standardized names.

ok kettenis@@ millert@@ deraadt@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.113 2016/09/01 10:08:03 tedu Exp $
d51 2
d139 2
a140 1
.if (${MACHINE_CPU} == "mips64") || (${MACHINE_ARCH} == "sparc64")
@


1.113
log
@remove references to sparc
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.112 2016/05/11 21:52:49 deraadt Exp $
d143 5
d166 2
@


1.112
log
@remove hppa64 port, which we never got going beyond broken single users.
hppa reverse-stack gives us a valuable test case, but most developers don't
have a 2nd one to proceed further with this.
ok kettenis
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.111 2016/03/30 06:38:42 jmc Exp $
a60 2
.elif (${MACHINE_ARCH} == "sparc")
.PATH:	${.CURDIR}/arch/sparc
@


1.111
log
@for some time now mandoc has not required MLINKS to function
correctly - logically complete that now by removing MLINKS from base;

authors need only to ensure there is an entry in NAME for any function/
util being added. MLINKS will still work, and remain for perl to ease
upgrades;

ok nicm (curses) bcook (ssl)
ok schwarze, who provided a lot of feedback and assistance
ok tb natano jung
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.110 2016/03/10 22:11:50 jmc Exp $
a52 2
.elif (${MACHINE_ARCH} == "hppa64")
.PATH:	${.CURDIR}/arch/hppa64
@


1.110
log
@no need for SUBDIR now that vax is gone; ok deraadt
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.109 2016/03/09 16:28:47 deraadt Exp $
a162 201

MLINKS+=erf.3 erfc.3
MLINKS+=exp.3 exp2.3
MLINKS+=exp.3 expm1.3
MLINKS+=exp.3 log.3
MLINKS+=exp.3 log10.3
MLINKS+=exp.3 log1p.3
MLINKS+=exp.3 log2.3
MLINKS+=exp.3 pow.3
MLINKS+=feclearexcept.3 fegetexceptflag.3
MLINKS+=feclearexcept.3 feraiseexcept.3
MLINKS+=feclearexcept.3 fesetexceptflag.3
MLINKS+=feclearexcept.3 fetestexcept.3
MLINKS+=feenableexcept.3 fedisableexcept.3
MLINKS+=feenableexcept.3 fegetexcept.3
MLINKS+=fegetenv.3 feholdexcept.3
MLINKS+=fegetenv.3 fesetenv.3
MLINKS+=fegetenv.3 feupdateenv.3
MLINKS+=fegetround.3 fesetround.3
MLINKS+=fmax.3 fmin.3
MLINKS+=hypot.3 cabs.3
MLINKS+=j0.3 j1.3 j0.3 jn.3 j0.3 y0.3 j0.3 y1.3 j0.3 yn.3
MLINKS+=lgamma.3 gamma.3 lgamma.3 tgamma.3
MLINKS+=logb.3 scalb.3
MLINKS+=logb.3 significand.3
MLINKS+=lrint.3 llrint.3
MLINKS+=lround.3 llround.3
MLINKS+=nextafter.3 nexttoward.3
MLINKS+=remainder.3 drem.3 remainder.3 remquo.3
MLINKS+=rint.3 nearbyint.3
MLINKS+=scalbn.3 scalbln.3
MLINKS+=sqrt.3 cbrt.3

# float versions
MLINKS+=acos.3 acosf.3
MLINKS+=acosh.3 acoshf.3
MLINKS+=asin.3 asinf.3
MLINKS+=asinh.3 asinhf.3
MLINKS+=atan.3 atanf.3
MLINKS+=atan2.3 atan2f.3
MLINKS+=atanh.3 atanhf.3
MLINKS+=ceil.3 ceilf.3
MLINKS+=copysign.3 copysignf.3
MLINKS+=cos.3 cosf.3
MLINKS+=cosh.3 coshf.3
MLINKS+=erf.3 erfcf.3
MLINKS+=erf.3 erff.3
MLINKS+=exp.3 exp2f.3
MLINKS+=exp.3 expf.3
MLINKS+=exp.3 expm1f.3
MLINKS+=exp.3 log10f.3
MLINKS+=exp.3 log1pf.3
MLINKS+=exp.3 log2f.3
MLINKS+=exp.3 logf.3
MLINKS+=exp.3 powf.3
MLINKS+=fdim.3 fdimf.3
MLINKS+=floor.3 floorf.3
MLINKS+=fma.3 fmaf.3
MLINKS+=fmax.3 fmaxf.3
MLINKS+=fmax.3 fminf.3
MLINKS+=fmod.3 fmodf.3
MLINKS+=hypot.3 cabsf.3
MLINKS+=hypot.3 hypotf.3
MLINKS+=ilogb.3 ilogbf.3
MLINKS+=j0.3 j0f.3
MLINKS+=j0.3 j1f.3
MLINKS+=j0.3 jnf.3
MLINKS+=j0.3 y0f.3
MLINKS+=j0.3 y1f.3
MLINKS+=j0.3 ynf.3
MLINKS+=lgamma.3 gammaf.3
MLINKS+=lgamma.3 lgammaf.3
MLINKS+=lgamma.3 tgammaf.3
MLINKS+=logb.3 logbf.3
MLINKS+=logb.3 scalbf.3
MLINKS+=logb.3 significandf.3
MLINKS+=lrint.3 llrintf.3
MLINKS+=lrint.3 lrintf.3
MLINKS+=lround.3 llroundf.3
MLINKS+=lround.3 lroundf.3
MLINKS+=nan.3 nanf.3
MLINKS+=nearbyint.3 nearbyintf.3
MLINKS+=nextafter.3 nextafterf.3
MLINKS+=nexttoward.3 nexttowardf.3
MLINKS+=remainder.3 dremf.3
MLINKS+=remainder.3 remainderf.3
MLINKS+=remainder.3 remquof.3
MLINKS+=rint.3 rintf.3
MLINKS+=round.3 roundf.3
MLINKS+=scalbln.3 scalblnf.3
MLINKS+=scalbn.3 scalbnf.3
MLINKS+=sin.3 sinf.3
MLINKS+=sinh.3 sinhf.3
MLINKS+=sqrt.3 cbrtf.3
MLINKS+=sqrt.3 sqrtf.3
MLINKS+=tan.3 tanf.3
MLINKS+=tanh.3 tanhf.3
MLINKS+=trunc.3 truncf.3

# complex float versions
MLINKS+=cacos.3 cacosf.3
MLINKS+=cacosh.3 cacoshf.3
MLINKS+=carg.3 cargf.3
MLINKS+=casin.3 casinf.3
MLINKS+=casinh.3 casinhf.3
MLINKS+=catan.3 catanf.3
MLINKS+=catanh.3 catanhf.3
MLINKS+=ccos.3 ccosf.3
MLINKS+=ccosh.3 ccoshf.3
MLINKS+=cexp.3 cexpf.3
MLINKS+=cimag.3 cimagf.3
MLINKS+=clog.3 clogf.3
MLINKS+=conj.3 conjf.3
MLINKS+=cpow.3 cpowf.3
MLINKS+=cproj.3 cprojf.3
MLINKS+=creal.3 crealf.3
MLINKS+=csin.3 csinf.3
MLINKS+=csinh.3 csinhf.3
MLINKS+=csqrt.3 csqrtf.3
MLINKS+=ctan.3 ctanf.3
MLINKS+=ctanh.3 ctanhf.3

# long double versions
MLINKS+=acos.3 acosl.3
MLINKS+=acosh.3 acoshl.3
MLINKS+=asin.3 asinl.3
MLINKS+=asinh.3 asinhl.3
MLINKS+=atan.3 atanl.3
MLINKS+=atan2.3 atan2l.3
MLINKS+=atanh.3 atanhl.3
MLINKS+=ceil.3 ceill.3
MLINKS+=copysign.3 copysignl.3
MLINKS+=cos.3 cosl.3
MLINKS+=cosh.3 coshl.3
MLINKS+=erf.3 erfcl.3
MLINKS+=erf.3 erfl.3
MLINKS+=exp.3 exp2l.3
MLINKS+=exp.3 expl.3
MLINKS+=exp.3 expm1l.3
MLINKS+=exp.3 log10l.3
MLINKS+=exp.3 log1pl.3
MLINKS+=exp.3 log2l.3
MLINKS+=exp.3 logl.3
MLINKS+=exp.3 powl.3
MLINKS+=fdim.3 fdiml.3
MLINKS+=floor.3 floorl.3
MLINKS+=fma.3 fmal.3
MLINKS+=fmax.3 fmaxl.3
MLINKS+=fmax.3 fminl.3
MLINKS+=fmod.3 fmodl.3
MLINKS+=hypot.3 cabsl.3
MLINKS+=hypot.3 hypotl.3
MLINKS+=ilogb.3 ilogbl.3
MLINKS+=lgamma.3 lgammal.3
MLINKS+=lgamma.3 tgammal.3
MLINKS+=logb.3 logbl.3
MLINKS+=logb.3 scalbl.3
MLINKS+=lrint.3 llrintl.3
MLINKS+=lrint.3 lrintl.3
MLINKS+=lround.3 llroundl.3
MLINKS+=lround.3 lroundl.3
MLINKS+=nan.3 nanl.3
MLINKS+=nearbyint.3 nearbyintl.3
MLINKS+=nextafter.3 nextafterl.3
MLINKS+=nexttoward.3 nexttowardl.3
MLINKS+=remainder.3 remainderl.3
MLINKS+=remainder.3 remquol.3
MLINKS+=rint.3 rintl.3
MLINKS+=round.3 roundl.3
MLINKS+=scalbln.3 scalblnl.3
MLINKS+=scalbn.3 scalbnl.3
MLINKS+=sin.3 sinl.3
MLINKS+=sinh.3 sinhl.3
MLINKS+=sqrt.3 cbrtl.3
MLINKS+=sqrt.3 sqrtl.3
MLINKS+=tan.3 tanl.3
MLINKS+=tanh.3 tanhl.3
MLINKS+=trunc.3 truncl.3

# complex long double versions
MLINKS+=cacos.3 cacosl.3
MLINKS+=cacosh.3 cacoshl.3
MLINKS+=carg.3 cargl.3
MLINKS+=casin.3 casinl.3
MLINKS+=casinh.3 casinhl.3
MLINKS+=catan.3 catanl.3
MLINKS+=catanh.3 catanhl.3
MLINKS+=ccos.3 ccosl.3
MLINKS+=ccosh.3 ccoshl.3
MLINKS+=cexp.3 cexpl.3
MLINKS+=cimag.3 cimagl.3
MLINKS+=clog.3 clogl.3
MLINKS+=conj.3 conjl.3
MLINKS+=cpow.3 cpowl.3
MLINKS+=cproj.3 cprojl.3
MLINKS+=creal.3 creall.3
MLINKS+=csin.3 csinl.3
MLINKS+=csinh.3 csinhl.3
MLINKS+=csqrt.3 csqrtl.3
MLINKS+=ctan.3 ctanl.3
MLINKS+=ctanh.3 ctanhl.3
@


1.109
log
@We are done providing support for the vax.
lots of agreement.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.108 2015/09/18 07:48:36 miod Exp $
a13 2

SUBDIR = man
@


1.108
log
@Move s_signgam.c to PURE_SRCS, so that it also gets built on vax.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.107 2014/09/12 22:07:24 kettenis Exp $
a14 1
# SUBDIR is only used to install the infnan(3/VAX) manual page.
a69 4
.elif (${MACHINE_ARCH} == "vax")
.PATH:	${.CURDIR}/arch/vax
NOIEEE_ARCH = n_argred.S n_infnan.S n_sqrt.S
ARCH_SRCS = n_atan2.S n_cbrt.S n_hypot.S n_sincos.S n_support.S n_tan.S
a128 12
# math routines for non-IEEE architectures.
NOIEEE_SRCS = n_acosh.c n_asincos.c n_asinh.c n_atan.c \
	n_atanh.c n_cosh.c \
	n_erf.c n_exp.c n_exp__E.c n_expm1.c n_floor.c \
	n_fmod.c \
	n_j0.c n_j1.c n_jn.c n_lgamma.c n_log.c n_log10.c \
	n_log1p.c n_log__L.c n_nan.c n_pow.c \
	n_sinh.c n_tanh.c n_tgamma.c n_lrint.c
# there for reference, they're replaced by an asm version on vax
NOIEEE_SRCS += n_argred.c n_atan2.c n_cbrt.c n_hypot.c n_infnan.c \
	n_sincos.c n_sqrt.c n_support.c n_tan.c

a136 3
.if (${MACHINE_ARCH} == "vax")
SRCS=	${NOIEEE_SRCS} ${NOIEEE_ARCH} ${PURE_SRCS}
.else
a147 1
.endif
a152 6

.if (${MACHINE_ARCH} == "vax")
.for i in ${NOIEEE_ARCH}
    SRCS:=${SRCS:S/${i:S/.S/.c/}/$i/}
.endfor
.endif
@


1.107
log
@Provide a sparc64 version of sqrtl(3) that simply calls _Qp_sqrt.
The generic sqrtl(3) is not nearly accurate enough for quad-precision
floating point.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.106 2014/03/18 22:36:30 miod Exp $
d112 1
a112 1
	s_scalbn.c s_scalbnf.c s_signgam.c s_significand.c \
d152 1
a152 1
	s_cproj.c s_cprojf.c s_round.c s_roundf.c s_scalbln.c 
@


1.106
log
@Retire hp300, mvme68k and mvme88k ports. These ports have no users, keeping
this hardware alive is becoming increasingly difficult, and I should heed the
message sent by the three disks which have died on me over the last few days.

Noone sane will mourn these ports anyway. So long, and thanks for the fish.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.105 2013/08/07 12:45:58 espie Exp $
d70 1
@


1.105
log
@simple inaccurate implementation of lrint* functions on vax, just so
we have them.
Compiles on vax. okay martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.104 2013/07/15 18:05:14 espie Exp $
a45 12
.elif (${MACHINE_ARCH} == "m68k")
.PATH:	${.CURDIR}/arch/mc68881
ARCH_SRCS = e_acos.S e_acosf.S e_acosl.S e_asin.S e_asinf.S e_asinl.S \
	    e_atanh.S e_atanhf.S e_cosh.S e_coshf.S e_exp.S e_expf.S e_log.S \
	    e_logf.S e_log10.S e_log10f.S e_remainder.S e_remainderf.S \
	    e_scalb.S e_scalbf.S e_sinh.S e_sinhf.S e_sqrt.S e_sqrtf.S \
	    e_sqrtl.S s_atan.S s_atanf.S s_atanl.S s_ceil.S s_ceilf.S \
	    s_copysign.S s_copysignf.S s_copysignl.S s_cos.S s_cosf.S s_cosl.S \
	    s_expm1.S s_expm1f.S s_floor.S s_floorf.S s_log1p.S s_log1pf.S \
	    s_logb.S s_logbf.S s_logbl.S s_rint.S s_rintf.S s_rintl.S \
	    s_scalbnf.S s_scalbnl.S s_sin.S s_sinf.S s_sinl.S \
	    s_tan.S s_tanf.S s_tanl.S s_tanh.S s_tanhf.S
d157 1
a157 2
.if (${MACHINE_ARCH} == "amd64") || (${MACHINE_ARCH} == "i386") || \
	(${MACHINE_ARCH} == "m68k")
@


1.104
log
@use some generic code on vax, to do round/roundf/scalbln...
suggested by martynas@@

okay miod@@

(just rearranges the !vax makefile, no compile change there)
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.103 2013/07/03 10:26:49 espie Exp $
d152 1
a152 1
	n_sinh.c n_tanh.c n_tgamma.c
@


1.103
log
@reorganize NOIEEE_SRCS so that files not compiled on vax because
of assembly version are obvious.
Move cproj/cprojf to the PURE club, as the asm support code provides
copysignf

okay martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.102 2013/07/03 04:48:16 espie Exp $
d122 2
a123 2
	s_rintf.c s_round.c s_roundf.c \
	s_scalbln.c s_scalbn.c s_scalbnf.c s_signgam.c s_significand.c \
d151 1
a151 1
	n_log1p.c n_log__L.c n_nan.c n_pow.c n_round.c n_scalbln.c \
d163 1
a163 1
	s_cproj.c s_cprojf.c
@


1.102
log
@with DBL vs LDBL fixed, tedu some source in noieee which is actually the
same as code in generic src.
introduce PURE_SRCS for completely MI math code.
okau martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.101 2012/09/15 13:15:22 miod Exp $
d113 1
a113 1
	s_cproj.c s_cprojf.c s_csinf.c \
d146 2
a147 3
NOIEEE_SRCS = n_acosh.c n_argred.c n_asincos.c n_asinh.c n_atan.c \
	n_atan2.c n_atanh.c n_cbrt.c \
	n_cosh.c n_cproj.c n_cprojf.c \
d149 2
a150 2
	n_fmod.c n_hypot.c \
	n_infnan.c n_j0.c n_j1.c n_jn.c n_lgamma.c n_log.c n_log10.c \
d152 4
a155 2
	n_sincos.c n_sinh.c n_sqrt.c n_support.c n_tan.c n_tanh.c \
	n_tgamma.c
d162 2
a163 1
	s_ctanh.c s_fdim.c s_fmax.c s_fmaxf.c s_fmin.c s_fminf.c
@


1.101
log
@m88k does not have the m68k long double type actually (long double == double
on this platform), so don't pretend it does, and don't build long double libm
routines.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.100 2012/09/04 03:10:42 okan Exp $
d106 9
a114 9
	s_asinh.c s_asinhf.c s_atan.c s_atanf.c s_cabs.c s_cabsf.c s_cacos.c \
	s_cacosf.c s_cacosh.c s_cacoshf.c s_carg.c s_cargf.c s_casin.c \
	s_casinf.c s_casinh.c s_casinhf.c s_catan.c s_catanf.c s_catanh.c \
	s_catanhf.c s_cbrt.c s_cbrtf.c s_conj.c s_conjf.c s_ccos.c s_ccosf.c \
	s_ccosh.c s_ccoshf.c s_ceil.c \
	s_ceilf.c s_cexp.c s_cexpf.c s_cimag.c s_cimagf.c s_clog.c s_clogf.c \
	s_copysign.c s_copysignf.c s_cos.c s_cosf.c s_cpow.c s_cpowf.c \
	s_cproj.c s_cprojf.c s_creal.c s_crealf.c s_csin.c s_csinf.c s_csinh.c \
	s_csinhf.c s_csqrt.c s_csqrtf.c s_ctan.c s_ctanf.c s_ctanh.c \
d116 2
a117 2
	s_fabsf.c s_fdim.c s_fma.c s_fmaf.c s_fmax.c s_fmaxf.c s_fmin.c \
	s_fminf.c s_floor.c s_floorf.c s_frexpf.c s_ilogb.c s_ilogbf.c \
d147 4
a150 7
	n_atan2.c n_atanh.c n_cabs.c n_cacos.c n_cacosh.c n_carg.c \
	n_casin.c n_casinh.c n_catan.c n_catanh.c n_cbrt.c n_ccos.c \
	n_ccosh.c n_cexp.c n_cimag.c n_cimagf.c n_clog.c n_conj.c \
	n_conjf.c n_cosh.c n_cpow.c n_cproj.c n_cprojf.c n_creal.c \
	n_crealf.c n_csin.c n_csinh.c n_csqrt.c n_ctan.c n_ctanh.c \
	n_erf.c n_exp.c n_exp__E.c n_expm1.c n_fdim.c n_floor.c \
	n_fmax.c n_fmaxf.c n_fmin.c n_fminf.c n_fmod.c n_hypot.c \
d156 7
d164 1
a164 1
SRCS=	${NOIEEE_SRCS} ${NOIEEE_ARCH}
d166 1
a166 1
SRCS=	${COMMON_SRCS}
@


1.100
log
@remove lint leftovers; ok guenther@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.99 2012/08/02 13:38:39 okan Exp $
d164 1
a164 1
	(${MACHINE_ARCH} == "m68k") || (${MACHINE_ARCH} == "m88k")
@


1.99
log
@remove leftover NOLINT, WANTLINT, LINTFLAGS, LOBJ vars and lint targets.

ok guenther@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.98 2011/09/22 04:56:09 schwarze Exp $
a178 1
    LSRCS+=${i:S/.S/.c/}
a183 1
    LSRCS+=${i:S/.S/.c/}
@


1.98
log
@install infnan(3/VAX) into man3/vax/ on all archs;
clean make build tested on i386;
ok deraadt@@, no objections from martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.97 2011/08/19 15:44:36 kettenis Exp $
a92 1
WANTLINT=
@


1.97
log
@Bring libc and libm in line with the compiler now that we no longer have a
128-bit long double.  Diff committed on behalf of martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.96 2011/07/24 19:25:50 martynas Exp $
d15 3
a161 1
MAN+=	infnan.3
@


1.96
log
@Document fma, fmaf, fmal, nexttoward, nexttowardf, nexttowardl.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.95 2011/07/20 17:50:43 martynas Exp $
d168 1
a168 2
.if (${MACHINE_ARCH} == "hppa64") || (${MACHINE_CPU} == "mips64") || \
	(${MACHINE_ARCH} == "sparc64")
@


1.95
log
@Document complex math library.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.94 2011/07/11 11:07:04 martynas Exp $
d192 1
a192 1
	fegetround.3 floor.3 fmax.3 fmod.3 hypot.3 ilogb.3 j0.3 \
d227 1
d257 1
d283 1
d346 1
d364 1
@


1.94
log
@Remove the GCC2 optimizer workaround for sparc.  After switching
to GCC4 it doesn't generate broken code anymore.
From Brad.  Tested and verified by myself.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.93 2011/07/09 22:17:22 martynas Exp $
d190 1
a190 1
	cimag.3 conj.3 copysign.3 cos.3 cosh.3 cproj.3 erf.3 exp.3 \
d197 4
a240 2
MLINKS+=cimag.3 cimagf.3
MLINKS+=conj.3 conjf.3
a243 1
MLINKS+=cproj.3 cprojf.3
d296 23
d373 23
@


1.93
log
@- Fix the cabs, and cabsf prototypes in the manual pages;  it's
been C99 complex (not struct complex) for couple of years.
- Remove BUGS section;  cabs is finally prototyped in complex.h.
- Also document cabsl.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.92 2011/07/09 02:13:52 martynas Exp $
a13 4

.if (${MACHINE_ARCH} == "sparc")
CFLAGS+= -O0
.endif
@


1.92
log
@Don't reimplement the same thing twice.  OK matthew@@.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.91 2011/07/08 22:58:54 martynas Exp $
d326 1
@


1.91
log
@Move fabs(3) manual page from libm to libc, for consistency.  The
modf(3), frexp(3), ldexp(3), fpclassify(3) pages are in libc, too.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.90 2011/07/08 22:52:56 martynas Exp $
d32 1
a32 1
	    s_scalbn.S s_scalbnf.S s_significand.S s_significandf.S \
d45 1
a45 1
	    s_rint.S s_rintf.S s_scalbn.S s_scalbnf.S s_significand.S \
d57 1
a57 1
	    s_scalbn.S s_scalbnf.S s_scalbnl.S s_sin.S s_sinf.S s_sinl.S \
@


1.90
log
@Remove the stupid commented out fabs(3), frexp(3), and modf(3)
entries and unused implementations.  It is clear that this situation
won't change.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.89 2011/07/08 22:28:33 martynas Exp $
d195 1
a195 1
	fabs.3 fdim.3 feclearexcept.3 feenableexcept.3 fegetenv.3 \
a256 1
MLINKS+=fabs.3 fabsf.3
a320 1
MLINKS+=fabs.3 fabsl.3
@


1.89
log
@Revert (leaving the complex math part alone).  Some stuff is depending
on this historical behavior;  so we're stuck in this stupid situation.
No cookie for me.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.86 2011/07/07 01:20:24 martynas Exp $
a159 3

# OpenBSD's C library supplies these functions:
#COMMON_SRCS+=	s_fabs.c s_frexp.c s_modf.c
@


1.88
log
@Finalize work on complex math routines, now that we have the
extended-precision support.  Mostly from Cephes.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.87 2011/07/08 19:21:42 martynas Exp $
d21 1
a21 1
ARCH_SRCS = s_copysign.S s_copysignf.S s_fabs.S
d29 1
a29 1
	    s_cos.S s_cosf.S s_fabs.S s_floor.S s_floorf.S \
d31 2
a32 2
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S s_modf.S s_rint.S \
	    s_rintf.S s_scalbn.S s_scalbnf.S s_significand.S s_significandf.S \
d42 1
a42 1
	    s_cos.S s_cosf.S s_fabs.S s_floor.S s_floorf.S \
d44 1
a44 1
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S s_modf.S \
d55 4
a58 4
	    s_expm1.S s_expm1f.S s_fabs.S s_floor.S s_floorf.S s_log1p.S \
	    s_log1pf.S s_logb.S s_logbf.S s_logbl.S s_modf.S s_rint.S \
	    s_rintf.S s_rintl.S s_scalbn.S s_scalbnf.S s_scalbnl.S s_sin.S \
	    s_sinf.S s_sinl.S s_tan.S s_tanf.S s_tanl.S s_tanh.S s_tanhf.S
d62 2
a63 2
	    s_ceil.c s_ceilf.c s_fabs.c s_floor.c s_floorf.c s_rint.c \
	    s_rintf.c s_round.c s_roundf.c s_trunc.c s_truncf.c
d66 1
a66 1
ARCH_SRCS = e_sqrt.c e_sqrtf.c s_fabs.c s_fabsf.c
a70 1
ARCH_SRCS = s_fabs.c
a72 1
ARCH_SRCS = s_fabs.S
a74 1
ARCH_SRCS = s_fabs.S s_modf.S
a76 1
ARCH_SRCS = s_fabs.S s_modf.S
a78 1
ARCH_SRCS = s_fabs.c
a80 1
ARCH_SRCS = s_fabs.S s_modf.S
a82 1
ARCH_SRCS = s_fabs.S s_modf.S
d85 2
a86 3
NOIEEE_ARCH = n_argred.S n_fabs.S n_infnan.S n_modf.S n_sqrt.S
ARCH_SRCS = n_atan2.S n_cbrt.S n_fabs.S n_hypot.S n_modf.S n_sincos.S \
	    n_support.S n_tan.S
d118 2
a119 3
	s_fabs.c s_fabsf.c s_fdim.c s_fma.c s_fmaf.c s_fmax.c s_fmaxf.c \
	s_fmin.c s_fminf.c s_floor.c s_floorf.c s_frexp.c s_frexpf.c s_ilogb.c \
	s_ilogbf.c \
d122 1
a122 1
	s_lrintf.c s_modf.c s_modff.c s_nan.c s_nearbyint.c s_nextafter.c \
d155 1
a155 1
	n_fmax.c n_fmaxf.c n_fmin.c n_fminf.c n_fmod.c n_frexp.c n_hypot.c \
d161 3
d199 2
a200 2
	fegetround.3 floor.3 fmax.3 fmod.3 frexp.3 hypot.3 ilogb.3 j0.3 \
	lgamma.3 logb.3 lrint.3 lround.3 modf.3 nan.3 nextafter.3 \
a265 1
MLINKS+=frexp.3 frexpf.3
a284 1
MLINKS+=modf.3 modff.3
a330 1
MLINKS+=frexp.3 frexpl.3
a340 1
MLINKS+=modf.3 modfl.3
@


1.87
log
@Move fabs(3), frexp(3), and modf(3) to libm--nothing has been using
them in libc for a very long time.  OK guenther@@.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.86 2011/07/07 01:20:24 martynas Exp $
d141 14
a154 10
	e_coshl.c e_expl.c e_fmodl.c e_hypotl.c e_lgammal.c e_log10l.c \
	e_log2l.c e_logl.c e_powl.c e_remainderl.c e_sinhl.c e_sqrtl.c \
	e_tgammal.c invtrig.c k_cosl.c k_sinl.c k_tanl.c polevll.c \
	s_asinhl.c s_atanl.c s_cbrtl.c s_ceill.c s_copysignl.c \
	s_cosl.c s_erfl.c s_exp2l.c s_expm1l.c s_fabsl.c s_floorl.c \
	s_fmal.c s_fmaxl.c s_fminl.c s_frexpl.c s_ilogbl.c s_llrintl.c \
	s_llroundl.c s_log1pl.c s_logbl.c s_lrintl.c s_lroundl.c \
	s_modfl.c s_nanl.c s_nextafterl.c s_nexttoward.c s_remquol.c \
	s_rintl.c s_roundl.c s_scalbnl.c s_sinl.c s_tanhl.c s_tanl.c \
	s_truncl.c
@


1.86
log
@Remove math(3).  OK theo.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.85 2011/07/07 00:54:15 martynas Exp $
d21 1
a21 1
ARCH_SRCS = s_copysign.S s_copysignf.S
d29 1
a29 1
	    s_cos.S s_cosf.S s_floor.S s_floorf.S \
d31 2
a32 2
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S s_rint.S s_rintf.S\
	    s_scalbn.S s_scalbnf.S s_significand.S s_significandf.S \
d42 1
a42 1
	    s_cos.S s_cosf.S s_floor.S s_floorf.S \
d44 1
a44 1
	    s_llrint.S s_llrintf.S s_lrint.S s_lrintf.S \
d55 4
a58 4
	    s_expm1.S s_expm1f.S s_floor.S s_floorf.S s_log1p.S s_log1pf.S \
	    s_logb.S s_logbf.S s_logbl.S s_rint.S s_rintf.S s_rintl.S \
	    s_scalbn.S s_scalbnf.S s_scalbnl.S s_sin.S s_sinf.S s_sinl.S \
	    s_tan.S s_tanf.S s_tanl.S s_tanh.S s_tanhf.S
d62 2
a63 2
	    s_ceil.c s_ceilf.c s_floor.c s_floorf.c s_rint.c s_rintf.c \
	    s_round.c s_roundf.c s_trunc.c s_truncf.c
d66 1
a66 1
ARCH_SRCS = e_sqrt.c e_sqrtf.c s_fabsf.c
d71 1
d74 1
d77 1
d80 1
d83 1
d86 1
d89 1
d92 3
a94 2
NOIEEE_ARCH = n_argred.S n_infnan.S n_sqrt.S
ARCH_SRCS = n_atan2.S n_cbrt.S n_hypot.S n_sincos.S n_support.S n_tan.S
d126 3
a128 2
	s_fabsf.c s_fdim.c s_fma.c s_fmaf.c s_fmax.c s_fmaxf.c s_fmin.c \
	s_fminf.c s_floor.c s_floorf.c s_frexpf.c s_ilogb.c s_ilogbf.c \
d131 1
a131 1
	s_lrintf.c s_modff.c s_nan.c s_nearbyint.c s_nextafter.c \
d160 1
a160 1
	n_fmax.c n_fmaxf.c n_fmin.c n_fminf.c n_fmod.c n_hypot.c \
a165 3
# OpenBSD's C library supplies these functions:
#COMMON_SRCS+=	s_fabs.c s_frexp.c s_modf.c

d201 2
a202 2
	fegetround.3 floor.3 fmax.3 fmod.3 hypot.3 ilogb.3 j0.3 \
	lgamma.3 logb.3 lrint.3 lround.3 nan.3 nextafter.3 \
d268 1
d288 1
d335 1
d346 1
@


1.85
log
@Document extended-precision routines.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.84 2011/07/06 03:50:23 martynas Exp $
d196 1
a196 1
	lgamma.3 logb.3 lrint.3 lround.3 math.3 nan.3 nextafter.3 \
a280 1
MLINKS+=math.3 mathf.3
@


1.84
log
@Don't pull bsd.own.mk for NOPROFILE & NOPIC -- the libm_i387 thing
is gone since 1999.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.83 2011/07/06 00:02:42 martynas Exp $
d302 1
d304 1
d307 2
d311 3
d315 7
d324 1
d327 2
d330 2
d333 5
d340 3
d344 1
d348 2
d352 2
@


1.83
log
@Finalize work on the math library.  It's time to do this monster
commit, and deal with problems (if any) in tree.

Note that this adds the following functions.  Ports with hacks might
need adjustments.

nexttoward(3), fma(3), nexttowardf(3), fmaf(3), acoshl(3), asinhl(3),
atanhl(3), coshl(3), sinhl(3), tanhl(3), expl(3), expm1l(3), logl(3),
log10l(3), log1pl(3), log2l(3), modfl(3), cbrtl(3), hypotl(3),
powl(3), erfl(3), erfcl(3), lgammal(3), tgammal(3), ceill(3),
floorl(3), lrintl(3), llrintl(3), roundl(3), lroundl(3), llroundl(3),
truncl(3), fmodl(3), remainderl(3), remquol(3), nextafterl(3),
nexttowardl(3), fmal(3).

With this commit, our library implements all functionality required
by C99.  Documentation bits will follow.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.82 2011/05/28 22:13:52 martynas Exp $
a14 3
# For NOPROFILE and NOPIC
.include <bsd.own.mk>

a321 16

#.if (${MACHINE_ARCH} == "i386")
#LINKS=	${LIBDIR}/libm.a ${LIBDIR}/libm_i387.a
#.if !defined(NOPROFILE)
#LINKS+=	${LIBDIR}/libm_p.a ${LIBDIR}/libm_i387_p.a
#.endif
#.if !defined(NOPIC)
#LINKS+= ${LIBDIR}/libm.so.${SHLIB_MAJOR}.${SHLIB_MINOR} \
#	${LIBDIR}/libm_i387.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
#LINKS+= ${LIBDIR}/libm_pic.a ${LIBDIR}/libm_i387_pic.a
#.endif
#.endif

#e_acos.o: 
#	cpp \
#	/usr/src/lib/libm/arch/mc68881/e_acos.S |  as -o e_acos.o
@


1.82
log
@Adapt m68k MD functions to extended-precision.
Go for it miod@@.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.81 2011/05/28 21:55:04 martynas Exp $
d121 2
a122 2
	s_fabsf.c s_fdim.c s_fmax.c s_fmaxf.c s_fmin.c s_fminf.c \
	s_floor.c s_floorf.c s_frexpf.c s_ilogb.c s_ilogbf.c \
d125 2
a126 2
	s_lrintf.c s_modff.c s_nan.c s_nearbyint.c \
	s_nextafter.c s_nextafterf.c s_remquo.c s_remquof.c s_rint.c \
d134 11
a144 6
LONG_SRCS = e_acosl.c e_asinl.c e_atan2l.c e_sqrtl.c \
	invtrig.c \
	k_cosl.c k_sinl.c k_tanl.c \
	s_atanl.c s_copysignl.c s_cosl.c s_exp2l.c s_fabsl.c s_fmaxl.c \
	s_fminl.c s_frexpl.c s_ilogbl.c s_logbl.c s_nanl.c s_rintl.c \
	s_scalbnl.c s_sinl.c s_tanl.c
@


1.81
log
@Adapt m68k MD functions to single-precision.
Looked over by miod@@.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.80 2011/05/25 22:19:25 martynas Exp $
d52 10
a61 8
ARCH_SRCS = e_acos.S e_acosf.S e_asin.S e_asinf.S e_atanh.S e_atanhf.S \
	    e_cosh.S e_coshf.S e_exp.S e_expf.S e_log.S e_logf.S e_log10.S \
	    e_log10f.S e_remainder.S e_remainderf.S e_scalb.S e_scalbf.S \
	    e_sinh.S e_sinhf.S e_sqrt.S e_sqrtf.S s_atan.S s_atanf.S s_ceil.S \
	    s_ceilf.S s_copysign.S s_copysignf.S s_cos.S s_cosf.S s_expm1.S \
	    s_expm1f.S s_floor.S s_floorf.S s_log1p.S s_log1pf.S s_logb.S \
	    s_logbf.S s_rint.S s_rintf.S s_scalbn.S s_scalbnf.S s_sin.S \
	    s_sinf.S s_tan.S s_tanf.S s_tanh.S s_tanhf.S
@


1.80
log
@Document nearbyint, nearbyintf, nearbyintl.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.79 2011/05/25 21:28:43 martynas Exp $
d52 8
a59 4
ARCH_SRCS = e_acos.S e_asin.S e_atanh.S e_cosh.S e_exp.S e_log.S e_log10.S \
	    e_remainder.S e_scalb.S e_sinh.S e_sqrt.S s_atan.S s_ceil.S \
	    s_copysign.S s_cos.S s_expm1.S s_floor.S s_log1p.S \
	    s_logb.S s_rint.S s_scalbn.S s_sin.S s_tan.S s_tanh.S
@


1.79
log
@Document C99 floating-point environment.
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.78 2011/04/28 19:31:22 todd Exp $
d219 1
d275 1
d307 1
@


1.78
log
@fix build ok martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.77 2011/04/28 18:05:39 martynas Exp $
d185 6
a190 4
	cos.3 cosh.3 erf.3 exp.3 fabs.3 fdim.3 floor.3 fmax.3 fmod.3 hypot.3 \
	logb.3 j0.3 lgamma.3 lrint.3 lround.3 math.3 nan.3 remainder.3 \
	rint.3 round.3 sin.3 sinh.3 sqrt.3 tan.3 tanh.3 trunc.3 \
	copysign.3 ilogb.3 nextafter.3 scalbn.3 cimag.3 conj.3 cproj.3
d193 17
a209 2
MLINKS+=exp.3 exp2.3 exp.3 expm1.3 exp.3 log.3 exp.3 log2.3 \
	exp.3 log10.3 exp.3 log1p.3 exp.3 pow.3
d212 2
a213 1
MLINKS+=scalbn.3 scalbln.3
a215 2
MLINKS+=j0.3 j1.3 j0.3 jn.3 j0.3 y0.3 j0.3 y1.3 j0.3 yn.3
MLINKS+=lgamma.3 gamma.3 lgamma.3 tgamma.3
d219 1
d233 1
d239 1
a240 1
MLINKS+=exp.3 exp2f.3
a254 1
MLINKS+=copysign.3 copysignf.3
a255 3
MLINKS+=nextafter.3 nextafterf.3
MLINKS+=scalbn.3 scalbnf.3
MLINKS+=scalbln.3 scalblnf.3
d268 1
d270 1
a270 1
MLINKS+=lrint.3 llrintf.3
a271 1
MLINKS+=lround.3 llroundf.3
d274 1
d280 2
d295 1
a301 1
MLINKS+=copysign.3 copysignl.3
a302 2
MLINKS+=scalbn.3 scalbnl.3
MLINKS+=scalbln.3 scalblnl.3
d306 2
@


1.77
log
@- enable fenv
- add nearbyint, nearbyintf and nearbyintl implemented using fenv
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.76 2010/07/19 12:48:23 millert Exp $
d72 2
d78 2
@


1.76
log
@Add barebones manual pages for cimag(3), conj(3) and cproj(3)
OK kettenis@@ jmc@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.75 2010/02/03 20:49:00 miod Exp $
d64 12
d97 1
d115 1
a115 1
	s_lrintf.c s_modff.c s_nan.c \
@


1.75
log
@Use MACHINE_CPU instead of MACHINE_ARCH to pick the correct machine dependent
files or directories when applicable.
The inspiration and name of MACHINE_CPU come from NetBSD, although the way to
provide it to Makefiles is completely different.
ok kettenis@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.74 2009/11/06 23:30:21 kettenis Exp $
d171 1
a171 1
	copysign.3 ilogb.3 nextafter.3 scalbn.3
d197 2
d201 1
@


1.74
log
@Provide assembly version of sqrtl(3).

ok pirofti@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.73 2009/11/05 20:14:32 kettenis Exp $
d146 1
a146 1
.if (${MACHINE_ARCH} == "hppa64") || (${MACHINE_ARCH} == "mips64") || \
@


1.73
log
@Provide assembly version of sqrtl(3).

ok otto@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.72 2009/10/26 21:06:19 kettenis Exp $
d42 1
@


1.72
log
@Add man pages for the fdim/fmin/fmax family of functions and make sure fdiml
is defined on all architectures.

ok jmc@@ (man pages) and martynas@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.71 2009/10/24 10:06:02 jmc Exp $
d29 1
@


1.71
log
@document log2() and log2f(); from thomas pfaff
ok otto millert martynas
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.70 2009/07/29 18:43:28 martynas Exp $
d166 1
a166 1
	cos.3 cosh.3 erf.3 exp.3 fabs.3 floor.3 fmod.3 hypot.3 \
d174 1
d208 1
d210 2
d259 3
@


1.70
log
@ieee, and ieeef aren't real, and the amount of functions it documents
is getting ridiculous.  split them into groups of copysign, ilogb,
nextafter, scalbn.  discussed long ago with millert@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.69 2009/07/28 16:14:11 martynas Exp $
d172 2
a173 2
MLINKS+=exp.3 exp2.3 exp.3 expm1.3 exp.3 log.3 exp.3 log10.3 exp.3 log1p.3 \
	exp.3 pow.3
d203 1
@


1.69
log
@document scalbln, scalblnf, scalblnl
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.68 2009/07/25 11:38:10 martynas Exp $
d166 1
a166 1
	cos.3 cosh.3 erf.3 exp.3 fabs.3 floor.3 fmod.3 hypot.3 ieee.3 \
d168 2
a169 1
	rint.3 round.3 sin.3 sinh.3 sqrt.3 tan.3 tanh.3 trunc.3
d175 1
a175 2
MLINKS+=ieee.3 copysign.3 ieee.3 ilogb.3 ieee.3 nextafter.3 ieee.3 scalbn.3
MLINKS+=ieee.3 scalbln.3 ieee.3 scalblnf.3 ieee.3 scalblnl.3
d210 5
a214 5
MLINKS+=ieee.3 copysignf.3
MLINKS+=ieee.3 ieeef.3
MLINKS+=ieee.3 ilogbf.3
MLINKS+=ieee.3 nextafterf.3
MLINKS+=ieee.3 scalbnf.3
d254 4
a257 3
MLINKS+=ieee.3 copysignl.3
MLINKS+=ieee.3 ilogbl.3
MLINKS+=ieee.3 scalbnl.3
@


1.68
log
@int is big enough to fully represent exponents of all supported fp
formats.  which even for 80-bit & 128-bit long doubles is only 15
bits.  therefore, scalbln, scalblnf, scalblnl are essentially the
same as scalbn, scalbnf, scalbnl with bounds checking so that
LONG_MIN..INT_MIN, and INT_MAX..LONG_MAX ranges properly raise
exceptions & yield correct values.  looks good to millert@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.67 2009/07/15 20:08:43 martynas Exp $
d175 1
@


1.67
log
@round, roundf, trunc, truncf for hppa;  ok kettenis@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.66 2009/04/19 16:48:02 martynas Exp $
d103 2
a104 1
	s_scalbn.c s_scalbnf.c s_signgam.c s_significand.c s_significandf.c \
d126 3
a128 2
	n_log1p.c n_log__L.c n_nan.c n_pow.c n_round.c n_sincos.c n_sinh.c \
	n_sqrt.c n_support.c n_tan.c n_tanh.c n_tgamma.c
@


1.66
log
@make ldexpf behavior consistent with the double and extended-precision
versions;  spotted by kettenis@@
while here also remove unused ldexp;  it lives in libc
ok kettenis@@, "looks good" millert@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.65 2009/04/10 11:30:33 martynas Exp $
d57 2
a58 1
	    s_ceil.c s_ceilf.c s_floor.c s_floorf.c s_rint.c s_rintf.c
@


1.65
log
@lrint, llrint, lrintf, llrintf for amd64.  ok kettenis@@, oga@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.64 2009/04/05 19:26:27 martynas Exp $
d97 1
a97 1
	s_ldexpf.c s_log1p.c \
d128 1
a128 1
#COMMON_SRCS+=	s_fabs.c s_frexp.c s_ldexp.c s_modf.c
@


1.64
log
@implement and use sqrt, sqrtf & fabsf in hardware;  since it's
faster that way.  tested by myself.  discussed w/ & ok miod@@, millert@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.63 2009/03/28 16:16:30 martynas Exp $
d45 1
@


1.63
log
@add C99-conformant nan, nanf, nanl for vax.  always return zero,
since its fp does not have distinguished values for qnans.  tested
by naddy@@;  fixes libnova.  ok theo
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.62 2008/12/12 19:30:17 martynas Exp $
d57 3
@


1.62
log
@space
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.61 2008/12/12 00:10:26 martynas Exp $
d120 1
a120 1
	n_log1p.c n_log__L.c n_pow.c n_round.c n_sincos.c n_sinh.c \
@


1.61
log
@document and mlink long double functions.  ok jmc@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.60 2008/12/09 23:13:31 martynas Exp $
a58 1
CPPFLAGS+= -D__STDC__
@


1.60
log
@pass CPPFLAGS+= -D__STDC__ for vax, to get the right definitions
from asm.h.  discussed w/ millert@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.59 2008/12/09 20:00:35 martynas Exp $
d238 18
@


1.59
log
@- 80-bit and quad precision trigonometric and other most
important functions: acosl, asinl, atanl, atan2l, cosl,
sinl, tanl, exp2l, frexpl, ilogbl, ldexpl, logbl, scalbnl,
fabsl, hypotl, powl, sqrtl, rintl, copysignl, nanl, fdiml,
fmaxl, fminl.  mostly taken from freebsd, needed alot of
changes to adapt.  note, these are all c versions;  and are
quite slow when architectures have, e.g. sqrt.  assembly
versions will be added afterwards
- make them .weak/__weak_alias to the double precision
versions on other archs
- no need to have two finites.  finite() and finitef() are
non-standard 3BSD obsolete versions of isfinite.  remove
from libm.  make them weak_alias in libc to __isfinite and
__isfinitef instead.  similarly make 3BSD obsolete versions
of isinf, isinff, isnan, isnanf weak_aliases to C99's
__isinf, __isinff, __isnan, __isnanf
- remove unused infinity.c.  the c library has infinities
for each supported platform
- use STRICT_ASSIGN cast hack for _kernel_rem_pio2, so that
the double version has a chance of working on i386 with
extra precision
- avoid storing multiple copies of the pi/2 array, since
it won't vary
- bump major due to removed finite/finitef.  although they
will be in libc, which anything is linked to, minor bump
might be enough
ok millert@@.   tested by sthen@@, jsg@@, ajacoutot@@, kili@@, naddy@@
@
text
@d1 1
a1 1
#  $OpenBSD: Makefile,v 1.58 2008/10/07 22:25:53 martynas Exp $
d59 1
@


1.58
log
@- noieee_src: adapt complex versions of the functions it already
supports (which is all, except the float ones)
ok millert@@
@
text
@d1 1
a2 1
#  $OpenBSD: Makefile,v 1.57 2008/09/16 22:06:24 martynas Exp $
d29 1
d31 1
a31 1
	    s_cos.S s_cosf.S s_finite.S s_finitef.S s_floor.S s_floorf.S \
d41 1
d43 1
a43 1
	    s_cos.S s_cosf.S s_finite.S s_finitef.S s_floor.S s_floorf.S \
d51 1
a51 1
	    s_copysign.S s_cos.S s_expm1.S s_finite.S s_floor.S s_log1p.S \
d91 1
a91 2
	s_fabsf.c s_fdim.c s_fmax.c s_fmaxf.c s_fmin.c s_fminf.c s_finite.c \
	s_finitef.c \
d103 7
d131 12
a252 1

@


1.57
log
@gc unused files, the functions are in libc.  ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.56 2008/09/11 19:19:34 martynas Exp $
d57 2
a58 2
NOIEEE_ARCH=n_infnan.S n_argred.S n_sqrt.S
ARCH_SRCS = n_atan2.S n_cabs.S n_cbrt.S n_sincos.S n_tan.S n_support.S 
d103 11
a113 8
NOIEEE_SRCS = n_asincos.c n_acosh.c n_asinh.c n_atan.c n_atanh.c n_cosh.c \
	n_erf.c n_exp.c n_exp__E.c n_expm1.c n_fdim.c n_floor.c n_fmax.c \
	n_fmaxf.c n_fmin.c n_fminf.c n_fmod.c n_tgamma.c \
	n_lgamma.c n_j0.c n_j1.c n_jn.c n_log.c n_log10.c n_log1p.c \
	n_log__L.c n_pow.c n_sinh.c n_tanh.c n_atan2.c n_cabs.c n_cbrt.c \
	n_sqrt.c n_sincos.c n_tan.c n_argred.c n_support.c n_infnan.c \
	n_round.c

@


1.56
log
@since these got no ieee-specific code anymore, add fmin, fmax, fdim,
fminf, fmaxf, fdimf, fdiml for VAX.  looks good to millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.55 2008/09/09 20:42:55 martynas Exp $
d113 1
a113 2
#COMMON_SRCS+=	s_fabs.c s_frexp.c s_isinf.c s_isinff.c s_isnan.c s_isnanf.c \
#		s_ldexp.c s_modf.c
@


1.55
log
@sigh, gamma got lost
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.54 2008/09/07 20:36:08 martynas Exp $
d104 2
a105 1
	n_erf.c n_exp.c n_exp__E.c n_expm1.c n_floor.c n_fmod.c n_tgamma.c \
@


1.54
log
@- replace dtoa w/ David's gdtoa, version 2008-03-15
- provide proper dtoa locks
- use the real strtof implementation
- add strtold, __hdtoa, __hldtoa
- add %a/%A support
- don't lose precision in printf, don't round to double anymore
- implement extended-precision versions of libc functions: fpclassify,
isnan, isinf, signbit, isnormal, isfinite, now that the ieee.h is
fixed
- separate vax versions of strtof, and __hdtoa
- add complex math support.  added functions: cacos, casin, catan,
ccos, csin, ctan, cacosh, casinh, catanh, ccosh, csinh, ctanh, cexp,
clog, cabs, cpow, csqrt, carg, cimag, conj, cproj, creal, cacosf,
casinf, catanf, ccosf, csinf, ctanf, cacoshf, casinhf, catanhf,
ccoshf, csinhf, ctanhf, cexpf, clogf, cabsf, cpowf, csqrtf, cargf,
cimagf, conjf, cprojf, crealf
- add fdim, fmax, fmin
- add log2. (adapted implementation e_log.c.  could be more acruate
& faster, but it's good enough for now)
- remove wrappers & cruft in libm, supposed to work-around mistakes
in SVID, etc.;  use ieee versions.  fixes issues in python 2.6 for
djm@@
- make _digittoint static
- proper definitions for i386, and amd64 in ieee.h
- sh, powerpc don't really have extended-precision
- add missing definitions for mips64 (quad), m{6,8}k (96-bit) float.h
for LDBL_*
- merge lead to frac for m{6,8}k, for gdtoa to work properly
- add FRAC*BITS & EXT_TO_ARRAY32 definitions in ieee.h, for hdtoa&ldtoa
to use
- add EXT_IMPLICIT_NBIT definition, which indicates implicit
normalization bit
- add regression tests for libc: fpclassify and printf
- arith.h & gd_qnan.h definitions
- update ieee.h: hppa doesn't have quad-precision, hppa64 does
- add missing prototypes to gdtoaimp
- on 64-bit platforms make sure gdtoa doesn't use a long when it
really wants an int
- etc., what i may have forgotten...
- bump libm major, due to removed&changed symbols
- no libc bump, since this is riding on djm's libc major crank from
a day ago

discussed with / requested by / testing theo, sthen@@, djm@@, jsg@@,
merdely@@, jsing@@, tedu@@, brad@@, jakemsr@@, and others.
looks good to millert@@
parts of the diff ok kettenis@@

this commit does not include:
- man page changes
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.53 2008/07/30 08:02:34 jmc Exp $
d99 2
a100 1
	s_truncf.c w_drem.c w_dremf.c w_gamma.c w_gamma_r.c
@


1.53
log
@various markup/grammar fixes for previous, and a missing MLINK
for remquof.3;
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.52 2008/07/29 22:08:43 martynas Exp $
a13 30
# 
# 
#
# There are two options in making libm at fdlibm compile time:
# 	_IEEE_LIBM 	--- IEEE libm; smaller, and somewhat faster
#	_MULTI_LIBM	--- Support multi-standard at runtime by 
#			    imposing wrapper functions defined in 
#			    fdlibm.h:
#				_IEEE_MODE 	-- IEEE
#				_XOPEN_MODE 	-- X/OPEN
#				_POSIX_MODE 	-- POSIX/ANSI
#				_SVID3_MODE 	-- SVID
#
# Here is how to set up CFLAGS to create the desired libm at 
# compile time:
#
# 	CFLAGS = -D_IEEE_LIBM		... IEEE libm (recommended)
#	CFLAGS = -D_SVID3_MODE	... Multi-standard supported
#					    libm with SVID as the 
#					    default standard
#	CFLAGS = -D_XOPEN_MODE	... Multi-standard supported
#					    libm with XOPEN as the 
#					    default standard
#	CFLAGS = -D_POSIX_MODE	... Multi-standard supported
#					    libm with POSIX as the 
#					    default standard
#	CFLAGS = 			... Multi-standard supported
#					    libm with IEEE as the 
#					    default standard
# 
a17 2
CFLAGS+= -D__LIBM_PRIVATE -D_USE_WRITE

a64 4
.if (${MACHINE_ARCH} != "vax")
CFLAGS+= -D_MULTI_LIBM -D_POSIX_MODE
.endif

d72 2
a73 1
	e_log10.c e_log10f.c e_logf.c e_pow.c e_powf.c e_rem_pio2.c \
d77 1
a77 1
	k_standard.c k_tan.c k_tanf.c \
d79 12
a90 3
	s_asinh.c s_asinhf.c s_atan.c s_atanf.c s_cbrt.c s_cbrtf.c s_ceil.c \
	s_ceilf.c s_copysign.c s_copysignf.c s_cos.c s_cosf.c s_erf.c s_erff.c \
	s_exp2.c s_exp2f.c s_expm1.c s_expm1f.c s_fabsf.c s_finite.c s_finitef.c \
d92 1
a92 1
	s_ldexpf.c s_lib_version.c s_log1p.c \
d94 1
a94 1
	s_lrintf.c s_matherr.c s_modff.c s_nan.c \
d98 2
a99 9
	s_sin.c s_sinf.c s_tan.c s_tanf.c s_tanh.c s_tanhf.c s_trunc.c s_truncf.c \
	w_acos.c w_acosf.c w_acosh.c w_acoshf.c w_asin.c w_asinf.c w_atan2.c \
	w_atan2f.c w_atanh.c w_atanhf.c w_cabs.c w_cabsf.c w_cosh.c w_coshf.c \
	w_drem.c w_dremf.c w_exp.c w_expf.c w_fmod.c w_fmodf.c w_gamma.c \
	w_gamma_r.c w_gammaf.c w_gammaf_r.c w_hypot.c w_hypotf.c w_j0.c \
	w_j0f.c w_j1.c w_j1f.c w_jn.c w_jnf.c w_lgamma.c w_lgamma_r.c \
	w_lgammaf.c w_lgammaf_r.c w_log.c w_log10.c w_log10f.c w_logf.c \
	w_pow.c w_powf.c w_remainder.c w_remainderf.c w_scalb.c w_scalbf.c \
	w_sinh.c w_sinhf.c w_sqrt.c w_sqrtf.c
d227 1
a227 1
#	cpp  -D__LIBM_PRIVATE -D_USE_WRITE -D_MULTI_LIBM -D_POSIX_MODE \
@


1.52
log
@- add man pages for nan and remainder, from freebsd
- mlink drem, dremf, remainderf to remainder;  nanf to nan
- describe that drem and dremf are obsolete aliases
- remove descriptions for remainder and remainderf from ieee
looked over by jmc@@, but it's easier for him to work on when they
are in tree
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.51 2008/07/29 21:57:13 martynas Exp $
d236 1
@


1.51
log
@describe exp2, exp2f and mlink them
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.50 2008/07/29 18:38:21 martynas Exp $
d169 2
a170 2
	logb.3 j0.3 lgamma.3 lrint.3 lround.3 math.3 rint.3 round.3 \
	sin.3 sinh.3 sqrt.3 tan.3 tanh.3 trunc.3
d176 1
a176 2
MLINKS+=ieee.3 copysign.3 ieee.3 drem.3 ieee.3 ilogb.3 ieee.3 nextafter.3 \
	ieee.3 remainder.3 ieee.3 scalbn.3
d183 1
a211 1
MLINKS+=ieee.3 dremf.3
a214 1
MLINKS+=ieee.3 remainderf.3
d233 3
@


1.50
log
@remove finite from ieee.3, and unmlink from makefile
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.49 2008/07/24 09:40:16 martynas Exp $
d173 2
a174 1
MLINKS+=exp.3 expm1.3 exp.3 log.3 exp.3 log10.3 exp.3 log1p.3 exp.3 pow.3
d200 1
@


1.49
log
@- remove isinff, isnanf.  this has been moved to libc
- remove never-enabled signbit.  libc has is now
- add C99 implementations, from freebsd, for nan(), nanf() (needed
to write _digittoint for it), exp2(), exp2f(), remquo(), remquof(),
needed STRICT_ASSIGN macro for math_private.h
- bump major
man pages will follow
exp2{,f} has been requested by chl@@
ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.48 2008/07/21 20:30:35 martynas Exp $
d175 2
a176 2
MLINKS+=ieee.3 copysign.3 ieee.3 drem.3 ieee.3 finite.3 ieee.3 ilogb.3 \
	ieee.3 nextafter.3 ieee.3 remainder.3 ieee.3 scalbn.3
a210 1
MLINKS+=ieee.3 finitef.3
@


1.48
log
@NetBSD's C library supplies these functions -> OpenBSD's C library
supplies these functions.  in comments
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.47 2008/07/21 20:29:14 martynas Exp $
d116 1
a116 1
	s_expm1.c s_expm1f.c s_fabsf.c s_finite.c s_finitef.c \
d118 1
a118 1
	s_isinff.c s_isnanf.c s_ldexpf.c s_lib_version.c s_log1p.c \
d120 3
a122 2
	s_lrintf.c s_matherr.c s_modff.c \
	s_nextafter.c s_nextafterf.c s_rint.c s_rintf.c s_round.c s_roundf.c \
d144 2
a145 1
#COMMON_SRCS+=	s_fabs.c s_frexp.c s_isinf.c s_isnan.c s_ldexp.c s_modf.c
@


1.47
log
@rename lround.c lroundf.c llround.c llroundf.c to s_lround.c
s_lroundf.c s_llround.c s_llroundf.c, for naming consistency
looks fine to millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.46 2008/07/16 15:15:26 martynas Exp $
d142 1
a142 1
# NetBSD's C library supplies these functions:
@


1.46
log
@install infnan.3 only for vax.  pointed out by millert@@
ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.45 2008/06/12 15:51:42 jmc Exp $
d113 1
a113 1
	lround.c lroundf.c llround.c llroundf.c \
@


1.45
log
@Makefile: fix MLINKS
lgamma.3: fix STANDARDS and HISTORY
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.44 2008/06/11 20:53:27 martynas Exp $
d147 1
d167 2
a168 2
	infnan.3 logb.3 j0.3 lgamma.3 lrint.3 lround.3 math.3 rint.3 \
	round.3 sin.3 sinh.3 sqrt.3 tan.3 tanh.3 trunc.3
@


1.44
log
@- on non-ieee, rename gamma to tgamma, the 'true' gamma
- make gamma an alias of lgamma
- on ieee, add tgamma, based on gamma from non-ieee
- fixes for tgamma/lgamma/exp/log, esp. special cases (some from
freebsd);  properly raise invalid fp operations on vax
- also some general cleanup, ansification, man page (which was ok
jmc@@)
- bump minor
this makes some ports using tgamma possible;  also consistifies
behavior across openbsd/ieee and openbsd/non-ieee, and other operating
systems
much thanks sthen@@, johan@@, steven@@, Simon Kuhnle, Wiktor Izdebski
for testing
ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.43 2008/06/11 14:50:06 martynas Exp $
d177 3
a179 1
MLINKS+=lgamma.3 gamma.3 lgamma.3 tgamma.3 lgamma.3 tgammaf.3
a213 3
MLINKS+=logb.3 logbf.3
MLINKS+=logb.3 scalbf.3
MLINKS+=logb.3 significandf.3
d222 4
a226 1
MLINKS+=lrint.3 llrint.3
a228 1
MLINKS+=lround.3 llround.3
@


1.43
log
@drem{,f} are aliases for remainder{,f}, so:
- document and mlink drem{,f}
- drem->remainder on noieee, and make drem an alias
- finite returns integer, n_support.c
- general n_support.c ansification and cleanup
- drem is now an ALTENTRY for remainder, in n_support.S
help with man page from jmc@@ and millert@@
ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.42 2008/06/11 14:35:33 martynas Exp $
d103 2
a104 1
COMMON_SRCS = e_acos.c e_acosf.c e_acosh.c e_acoshf.c e_asin.c e_asinf.c \
d135 1
a135 1
	n_erf.c n_exp.c n_exp__E.c n_expm1.c n_floor.c n_fmod.c n_gamma.c \
d140 1
a140 1
        
d177 1
a177 1
MLINKS+=lgamma.3 gamma.3
@


1.42
log
@add C99 round(), based on ieee_src, for noieee_src.  tested on VAX
ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.41 2006/09/25 20:25:41 kettenis Exp $
d171 1
a171 1
MLINKS+=ieee.3 copysign.3 ieee.3 finite.3 ieee.3 ilogb.3 \
d204 1
@


1.41
log
@Move llrint.c, llrintf.c, lrint.c and lrintf.c to s_llrint.c, s_llrintf.c,
s_lrint.c and s_lrintf.c, and add i387-specific assembler versions.

ok deraadt@@, otto@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.40 2006/07/12 07:26:08 brad Exp $
d137 2
a138 1
	n_sqrt.c n_sincos.c n_tan.c n_argred.c n_support.c n_infnan.c
@


1.40
log
@add some more C99 functions: round(3) and roundf(3).

By Steven G. Kargl <kargl at troutmask dot apl dot washington.edu>
From FreeBSD
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.39 2006/03/19 00:01:04 kettenis Exp $
d64 3
a66 2
	    s_rint.S s_rintf.S s_scalbn.S s_scalbnf.S s_significand.S \
	    s_significandf.S s_sin.S s_sinf.S s_tan.S s_tanf.S
d112 1
a112 2
	lrint.c lrintf.c llrint.c llrintf.c lround.c lroundf.c llround.c \
	llroundf.c \
d118 2
a119 1
	s_log1pf.c s_logb.c s_logbf.c s_matherr.c s_modff.c \
@


1.39
log
@New amd64 exp(3).
tested by steven@@, ok otto@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.38 2006/03/18 20:13:24 brad Exp $
d119 3
a121 3
	s_nextafter.c s_nextafterf.c s_rint.c s_rintf.c s_scalbn.c s_scalbnf.c \
	s_signgam.c s_significand.c s_significandf.c s_sin.c s_sinf.c s_tan.c \
	s_tanf.c s_tanh.c s_tanhf.c s_trunc.c s_truncf.c \
d164 1
a164 1
	sin.3 sinh.3 sqrt.3 tan.3 tanh.3 trunc.3
d227 1
@


1.38
log
@add some more C99 functions: trunc(3) and truncf(3).

From FreeBSD

ok deraadt@@ millert@@ otto@@ jmc@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.37 2006/03/14 19:27:57 otto Exp $
d69 1
a69 1
ARCH_SRCS = e_acos.S e_asin.S e_atan2.S e_fmod.S e_log.S e_log10.S \
@


1.37
log
@amd64 asm code is not correct for exp(+/-Inf), so until somebody
comes up with a correct asm version, use the C version of exp(3).
ok steven@@ kettenis@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.36 2005/11/24 20:49:18 deraadt Exp $
d121 1
a121 1
	s_tanf.c s_tanh.c s_tanhf.c \
d164 1
a164 1
	sin.3 sinh.3 sqrt.3 tan.3 tanh.3
d233 1
@


1.36
log
@use WANTLINT= (on all architectures)
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.35 2005/11/17 20:07:40 otto Exp $
d69 1
a69 1
ARCH_SRCS = e_acos.S e_asin.S e_atan2.S e_exp.S e_fmod.S e_log.S e_log10.S \
@


1.35
log
@Introduce a few c99 functions: {l,ll}{rint,round}{,f}. From NetBSD via
jason@@. Man page fixes by jmc@@, prodding by jsg@@. ok mickey@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.34 2004/04/06 00:21:18 brad Exp $
d101 1
@


1.34
log
@remove optimization workaround for sparc64 now that we're using gcc3.

ok deraadt@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.33 2004/02/28 18:46:27 deraadt Exp $
d110 2
d162 2
a163 3
	logb.3 j0.3 lgamma.3 math.3 rint.3 sin.3 sinh.3 sqrt.3 \
	tan.3 tanh.3
MAN+=	infnan.3
d218 6
@


1.33
log
@reach into new amd64 directory
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.32 2004/02/27 17:36:13 deraadt Exp $
d50 1
a50 1
.if (${MACHINE_ARCH} == "sparc") || (${MACHINE_ARCH} == "sparc64")
@


1.32
log
@change amd64's MACHINE_ARCH from x86_64 to amd64.  There are many many
reasons for this, quite a few of them technical, and not all of them
in response to Intel's broken ia32e crud.  The gcc toolchain stays at
x86_64 for now.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.31 2004/02/08 18:03:48 deraadt Exp $
d67 2
a68 2
.PATH:	${.CURDIR}/arch/x86_64
CPPFLAGS+=-I${.CURDIR}/arch/x86_64
@


1.31
log
@add libm parts for amd64;  much from netbsd, integration by mickey.
Instead of mixing the i387 & xmm register components, we decide to
explicitly seperate them.  libm is already confusing enough as it is,
thank you very much
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.30 2003/02/27 00:30:43 jason Exp $
d66 1
a66 1
.elif (${MACHINE_ARCH} == "x86_64")
@


1.30
log
@ieee_test isn't real, rename it to logb.3 and make everything link to that instead.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.29 2003/01/03 14:39:36 miod Exp $
d59 10
@


1.29
log
@Get the m88k libm to say no to drugs.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.28 2002/05/22 21:34:56 mickey Exp $
d150 1
a150 1
	ieee_test.3 j0.3 lgamma.3 math.3 rint.3 sin.3 sinh.3 sqrt.3 \
d159 2
a160 3
MLINKS+=ieee_test.3 logb.3
MLINKS+=ieee_test.3 scalb.3
MLINKS+=ieee_test.3 significand.3
d196 3
a198 4
MLINKS+=ieee_test.3 ieee_testf.3
MLINKS+=ieee_test.3 logbf.3
MLINKS+=ieee_test.3 scalbf.3
MLINKS+=ieee_test.3 significandf.3
@


1.28
log
@add reminder and roundings
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.27 2002/05/22 20:55:55 mickey Exp $
a79 4
.endif

.if (${MACHINE_ARCH} == "m88k")
CFLAGS+=-Dfloat=double
@


1.27
log
@md sqrt() implementation
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.26 2002/01/30 15:09:42 naddy Exp $
d74 2
a75 1
ARCH_SRCS = e_sqrt.c e_sqrtf.c
@


1.26
log
@Add native implementations of copysign() and copysignf() on alpha.
From NetBSD; ok millert@@
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.25 2001/08/28 21:44:20 art Exp $
d72 3
@


1.25
log
@The sparc workaround is needed for sparc64 too.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.24 2001/06/26 22:38:44 miod Exp $
d54 4
a57 1
.if (${MACHINE_ARCH} == "i386")
@


1.24
log
@Correctly handle mvme88k settings here.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.23 2000/11/08 20:43:37 deraadt Exp $
d50 1
a50 1
.if (${MACHINE_ARCH} == "sparc")
@


1.23
log
@put infnan in there, even though it is depricated
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.22 1999/07/18 19:12:59 deraadt Exp $
d75 1
a75 1
.if (${MACHINE_ARCH} == "mvme88k")
@


1.22
log
@I think that libm_i387 has lived too long
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.21 1999/07/01 00:06:39 deraadt Exp $
a72 1
MAN+=infnan.3
d149 1
@


1.21
log
@provide MLINKS for "f" versions, and make sure they show up in whatis.db
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.20 1999/06/28 16:28:41 espie Exp $
d215 11
a225 11
.if (${MACHINE_ARCH} == "i386")
LINKS=	${LIBDIR}/libm.a ${LIBDIR}/libm_i387.a
.if !defined(NOPROFILE)
LINKS+=	${LIBDIR}/libm_p.a ${LIBDIR}/libm_i387_p.a
.endif
.if !defined(NOPIC)
LINKS+= ${LIBDIR}/libm.so.${SHLIB_MAJOR}.${SHLIB_MINOR} \
	${LIBDIR}/libm_i387.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
LINKS+= ${LIBDIR}/libm_pic.a ${LIBDIR}/libm_i387_pic.a
.endif
.endif
@


1.20
log
@Bye, bye work-around.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.19 1999/06/03 14:37:58 deraadt Exp $
d162 52
@


1.19
log
@egcs generates broken code for -O2 on sparc
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.18 1999/05/26 13:52:05 espie Exp $
a174 9
.if (${MACHINE_ARCH} == "m68k")
.for _I in e_lgamma_r e_lgammaf_r k_tan k_tanf s_atanf
${_I}.so: ${_I}.c
	@@echo "${COMPILE.c} ${PICFLAGS} -O1 -DPIC ${.IMPSRC} -o ${.TARGET}"
	@@${COMPILE.c} ${PICFLAGS} -O1 -DPIC ${.IMPSRC} -o ${.TARGET}.o
	@@${LD} -x -r ${.TARGET}.o -o ${.TARGET}
	@@rm -f ${.TARGET}.o
.endfor
.endif
@


1.18
log
@Work-around: a few files trigger Internal Compiler Errors if compiled with
-O2 on m68k.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.17 1999/03/08 19:14:28 millert Exp $
d49 4
@


1.17
log
@pull in bsd.own.mk for NOPROFILE and NOPIC
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.16 1999/03/07 01:21:32 deraadt Exp $
a15 1

d170 14
@


1.16
log
@Never break the source tree builds if a _non-default compilation option_
has an issue.  Fix it right, without breaking the source tree.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.15 1999/03/07 01:19:12 deraadt Exp $
d45 3
@


1.15
log
@previous commit broke MLINKS install
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.14 1999/03/04 02:03:05 millert Exp $
a156 2
.include <bsd.lib.mk>

d169 1
@


1.14
log
@move .include <bsd.lib.mk> up before NOPROFILE and NOPIC defines are used; evanc@@concer.to
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.13 1998/11/16 06:04:53 deraadt Exp $
d145 12
a170 11
MLINKS+=erf.3 erfc.3
MLINKS+=exp.3 expm1.3 exp.3 log.3 exp.3 log10.3 exp.3 log1p.3 exp.3 pow.3
MLINKS+=hypot.3 cabs.3
MLINKS+=ieee.3 copysign.3 ieee.3 finite.3 ieee.3 ilogb.3 \
	ieee.3 nextafter.3 ieee.3 remainder.3 ieee.3 scalbn.3
MLINKS+=ieee_test.3 logb.3
MLINKS+=ieee_test.3 scalb.3
MLINKS+=ieee_test.3 significand.3
MLINKS+=j0.3 j1.3 j0.3 jn.3 j0.3 y0.3 j0.3 y1.3 j0.3 yn.3
MLINKS+=lgamma.3 gamma.3
MLINKS+=sqrt.3 cbrt.3
@


1.13
log
@use _USE_WRITE
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.12 1998/03/02 23:34:43 millert Exp $
d145 2
a169 2

.include <bsd.lib.mk>
@


1.12
log
@protect internal "struct excpption" from conflicting one in gcc.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.11 1997/09/01 02:13:12 mickey Exp $
d46 1
a46 1
CFLAGS+= -D__LIBM_PRIVATE
@


1.11
log
@missing VAX manual for infnan(3), from 4.4 BSD
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.10 1997/03/25 17:07:33 rahnds Exp $
d45 2
@


1.10
log
@Ok here is the mvme88k userland, minus a few important pieces.
as, ld change need to be merged. It is known that shared libraries and C++
do not work.
If anyone wants to step forward and take over the mvme88k port please do.
It was dumped on me when the original developer, Nivas, left his previous
job and started a new one.

I am trying to get the port in a shape that someone could take over.
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.9 1996/11/14 15:04:49 mickey Exp $
d65 1
@


1.9
log
@correct LINKS usage
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.8 1996/10/27 19:57:45 downsj Exp $
d65 4
@


1.8
log
@nopic
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.7 1996/10/27 12:34:51 deraadt Exp $
d139 1
a139 1
LINKS=	/usr/lib/libm.a /usr/lib/libm_i387.a
d141 1
a141 1
LINKS+=	/usr/lib/libm_p.a /usr/lib/libm_i387_p.a
d144 3
a146 3
LINKS+= /usr/lib/libm.so.${SHLIB_MAJOR}.${SHLIB_MINOR} \
	/usr/lib/libm_i387.so.${SHLIB_MAJOR}.${SHLIB_MINOR}
LINKS+= /usr/lib/libm_pic.a /usr/lib/libm_i387_pic.a
@


1.7
log
@NOPROFILE; from Mathieu.Herrb@@mipnet.fr
@
text
@d2 1
a2 1
#  $OpenBSD: Makefile,v 1.5 1996/09/30 18:52:39 maja Exp $
d143 1
d147 1
@


1.6
log
@We do i387 by default now.
@
text
@d140 1
d142 1
@


1.5
log
@Add OpenBSD tag. -moj
@
text
@d2 1
a2 1
#  $OpenBSD$
d47 8
a54 9
# Uncomment the following lines if you have a i387 (or i486 or Pentium)
#.PATH:	${.CURDIR}/arch/i387
#ARCH_SRCS = e_acos.S e_asin.S e_atan2.S e_exp.S e_fmod.S e_log.S e_log10.S \
#	    e_remainder.S e_remainderf.S e_scalb.S e_sqrt.S e_sqrtf.S \
#	    s_atan.S s_atanf.S s_ceil.S s_ceilf.S s_copysign.S s_copysignf.S \
#	    s_cos.S s_cosf.S s_finite.S s_finitef.S s_floor.S s_floorf.S \
#	    s_ilogb.S s_ilogbf.S s_log1p.S s_log1pf.S s_logb.S s_logbf.S \
#	    s_rint.S s_rintf.S s_scalbn.S s_scalbnf.S s_significand.S \
#	    s_significandf.S s_sin.S s_sinf.S s_tan.S s_tanf.S
d137 8
@


1.4
log
@Allow the Makefile to work on strange machines like VAX :-) -moj
@
text
@d2 1
@


1.3
log
@Somewhat better support for building lint library
@
text
@d126 7
@


1.2
log
@from netbsd:
Changed w_gamma.c, w_gamma_r.c, w_gammaf.c, w_gammaf_r.c to call
__ieee754_lgamma_r or __ieee754_lgammaf_r.
Removed e_gamma.c, e_gamma_r.c, e_gammaf.c, e_gammaf_r.c, e_lgamma.c,
e_lgamma_f.c.
@
text
@d123 1
a124 1

@


1.1
log
@Initial revision
@
text
@d1 1
a1 1
#  $NetBSD: Makefile,v 1.27 1995/10/10 23:43:31 ragge Exp $
d78 3
a80 4
	e_expf.c e_fmod.c e_fmodf.c e_gamma.c e_gamma_r.c e_gammaf.c \
	e_gammaf_r.c e_hypot.c e_hypotf.c e_j0.c e_j0f.c e_j1.c e_j1f.c \
	e_jn.c e_jnf.c e_lgamma.c e_lgamma_r.c e_lgammaf.c e_lgammaf_r.c \
	e_log.c e_log10.c e_log10f.c e_logf.c e_pow.c e_powf.c e_rem_pio2.c \
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@

