head	1.5;
access;
symbols
	OPENBSD_4_6:1.4.0.8
	OPENBSD_4_6_BASE:1.4
	OPENBSD_4_5:1.4.0.4
	OPENBSD_4_5_BASE:1.4
	OPENBSD_4_4:1.4.0.2
	OPENBSD_4_4_BASE:1.4
	OPENBSD_4_3:1.3.0.4
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.2
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.2.0.14
	OPENBSD_4_1_BASE:1.2
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@.\" @;


1.5
date	2009.08.13.20.15.26;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2008.06.26.05.42.04;	author ray;	state Exp;
branches;
next	1.3;

1.3
date	2007.05.31.19.19.27;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.12.17.40.28;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.27.23.44.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@We do not do vm86 mode on amd64
ok kettenis
@
text
@.\"	$OpenBSD: amd64_vm86.2,v 1.4 2008/06/26 05:42:04 ray Exp $
.\"	$NetBSD: amd64_vm86.2,v 1.1 1996/02/21 00:21:52 jtk Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by John Kohl.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.\"     from: @@(#)fork.2	6.5 (Berkeley) 3/10/91
.\"
.Dd $Mdocdate: June 26 2008 $
.Dt AMD64_VM86 2 amd64
.Os
.Sh NAME
.Nm amd64_vm86
.Nd set virtual 8086 processor registers and mode
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <signal.h>
.Fd #include <machine/segments.h>
.Fd #include <machine/sysarch.h>
.Fd #include <machine/vm86.h>
.Ft int
.Fn amd64_vm86 "struct vm86_struct *vmcp"
.Sh DESCRIPTION
.Fn amd64_vm86
will set the process into virtual 8086 mode using the registers and
selectors specified by the context pointed to by
.Ar vmcp .
The processor registers are set from
.Ar vmcp->substr.regs ,
and the emulated processor type from
.Ar vmcp->substr.ss_cpu_type .
.Pp
The kernel keeps a pointer to the context, and uses the tables stored at
.Ar vmcp->int_byuser
and
.Ar vmcp->int21_byuser
for fast virtual interrupt handling.
If the
.Ar n Ns Li th
bit is clear in the first of
these arrays, then the kernel may directly emulate the real-mode x86 INT
.Ar n
instruction handling.
If the
.Ar n Ns Li th
bit is set, then the process is
delivered a signal when an INT instruction is executed.
.Pp
Since MS-DOS puts many DOS functions onto interrupt 21, it is handled
specially: the
.Ar k Ns Li th
bit in the
.Ar vmcp->int21_byuser
array is checked when INT
.Ar 21
is requested and the
.Ar ah
register is
.Ar k .
.Pp
.Sy Note:
Code using the
.Fn amd64_vm86
function must be compiled using
.Cm -lamd64 .
.Sh RETURN VALUES
This routine does not normally return: 32-bit mode will be restored by
the delivery of a signal to the process.
In case of an error in setting
the VM86 mode, a value of \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn amd64_vm86
will fail if:
.Bl -tag -width [EINVAL]
.It Bq Er EFAULT
The state at
.Ar vmcp
was not readable to the user process.
.El
.Sh REFERENCES
.Rs
.%A Intel
.%T AMD64 Microprocessor Programmer's Reference Manual
.Re
@


1.4
log
@First pass at removing clauses 3 and 4 from NetBSD licenses.

Not sure what's more surprising: how long it took for NetBSD to
catch up to the rest of the BSDs (including UCB), or the amount of
code that NetBSD has claimed for itself without attributing to the
actual authors.

OK deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_vm86.2,v 1.3 2007/05/31 19:19:27 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate: May 31 2007 $
@


1.3
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_vm86.2,v 1.2 2004/03/12 17:40:28 jmc Exp $
a17 7
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	   This product includes software developed by the NetBSD
.\"	  Foundation, Inc. and its contributors.
.\" 4. Neither the name of The NetBSD Foundation nor the names of its
.\"    contributors may be used to endorse or promote products derived
.\"    from this software without specific prior written permission.
d33 1
a33 1
.Dd $Mdocdate$
@


1.2
log
@correct .Dt lines, and remove .Lb stuff;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_vm86.2,v 1.1 2004/02/27 23:44:56 deraadt Exp $
d40 1
a40 1
.Dd February 20, 1996
@


1.1
log
@change to amd_*() functions
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_vm86.2,v 1.1 2004/02/26 00:10:54 deraadt Exp $
d41 1
a41 1
.Dt AMD64_VM86 2
@

