head	1.5;
access;
symbols
	OPENBSD_4_3:1.4.0.4
	OPENBSD_4_3_BASE:1.4
	OPENBSD_4_2:1.4.0.2
	OPENBSD_4_2_BASE:1.4
	OPENBSD_4_1:1.3.0.2
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.2.0.12
	OPENBSD_4_0_BASE:1.2
	OPENBSD_3_9:1.2.0.10
	OPENBSD_3_9_BASE:1.2
	OPENBSD_3_8:1.2.0.8
	OPENBSD_3_8_BASE:1.2
	OPENBSD_3_7:1.2.0.6
	OPENBSD_3_7_BASE:1.2
	OPENBSD_3_6:1.2.0.4
	OPENBSD_3_6_BASE:1.2
	OPENBSD_3_5:1.2.0.2
	OPENBSD_3_5_BASE:1.2;
locks; strict;
comment	@.\" @;


1.5
date	2008.05.23.15.38.34;	author jasper;	state dead;
branches;
next	1.4;

1.4
date	2007.05.31.19.19.27;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2006.10.16.17.54.50;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2004.03.12.17.40.28;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2004.02.27.23.44.56;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@- remove USER_LDT, it was never in a state where it would copile, nor will
we support i386-compat mode on amd64.

agreed by beck@@, dlg@@, kettenis@@
ok deraadt@@, tom@@
@
text
@.\"	$OpenBSD: amd64_get_ldt.2,v 1.4 2007/05/31 19:19:27 jmc Exp $
.\"
.\" Copyright (c) 1980, 1991 Regents of the University of California.
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     from: @@(#)fork.2	6.5 (Berkeley) 3/10/91
.\"	$NetBSD: amd64_get_ldt.2,v 1.3 1996/01/05 14:56:44 pk Exp $
.\"
.Dd $Mdocdate: May 31 2007 $
.Dt AMD64_GET_LDT 2 amd64
.Os
.Sh NAME
.Nm amd64_get_ldt ,
.Nm amd64_set_ldt
.Nd manage amd64 per-process Local Descriptor Table entries
.Sh SYNOPSIS
.Fd #include <sys/types.h>
.Fd #include <machine/segments.h>
.Fd #include <machine/sysarch.h>
.Ft int
.Fn amd64_get_ldt "int start_sel" "union descriptor *descs" "int num_sels"
.Ft int
.Fn amd64_set_ldt "int start_sel" "union descriptor *descs" "int num_sels"
.Sh DESCRIPTION
.Fn amd64_get_ldt
returns a list of the amd64 descriptors in the current process'
LDT.
.Fn amd64_set_ldt
sets a list of amd64 descriptors in the current process'
LDT.
For both routines,
.Fa start_sel
specifies the index of the selector in the LDT at which to begin and
.Fa descs
points to an array of
.Fa num_sels
descriptors to be set or returned.
.Pp
Each entry in the
.Fa descs
array can be either a segment_descriptor or a gate_descriptor,
as defined in
.Aq Pa amd64/segments.h .
These structures are defined by the architecture
as disjoint bit-fields, so care must be taken in constructing them.
.Pp
Before this API can be used the functionality has to be enabled
using the machdep.userldt
.Xr sysctl 8
variable.
.Pp
.Sy Note:
Code using the
.Fn amd64_get_ldt
and
.Fn amd64_set_ldt
functions must be compiled using
.Cm -lamd64 .
.Sh RETURN VALUES
Upon successful completion,
.Fn amd64_get_ldt
returns the number of amd64 descriptors copied into
.Fa descs
from the current process' LDT.
Otherwise, a value of \-1 is returned and the global
variable
.Va errno
is set to indicate the error.
.Pp
Upon successful completion,
.Fn amd64_set_ldt
returns the first selector set;
if the kernel allocated a descriptor in the LDT,
the allocated index is returned.
Otherwise, a value of \-1 is returned and the global
variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn amd64_get_ldt
and
.Fn amd64_set_ldt
will fail if:
.Bl -tag -width [EINVAL]
.It Bq Er EINVAL
An inappropriate parameter was used for
.Fa start_sel
or
.Fa num_sels .
.It Bq Er EACCES
The caller attempted to use a descriptor that would
circumvent protection or cause a failure.
.El
.Sh REFERENCES
.Rs
.%A Intel
.%T AMD64 Microprocessor Programmer's Reference Manual
.Re
.Sh WARNING
You can really hose your process using this.
@


1.4
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_get_ldt.2,v 1.3 2006/10/16 17:54:50 jmc Exp $
d33 1
a33 1
.Dd $Mdocdate$
@


1.3
log
@various improvements;

based on -r1.22 from freebsd (i386 version anyway),
submitted by andreas fuchs,
improved by ru@@freebsd,
then again by myself and mickey

ok mickey
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_get_ldt.2,v 1.2 2004/03/12 17:40:28 jmc Exp $
d33 1
a33 1
.Dd September 20, 1993
@


1.2
log
@correct .Dt lines, and remove .Lb stuff;
ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_get_ldt.2,v 1.1 2004/02/27 23:44:56 deraadt Exp $
d50 1
a50 1
will return the list of amd64 descriptors that the process has in its
d53 1
a53 1
will set a list of amd64 descriptors for the current process in its
d55 7
a61 7
Both routines accept a starting selector number
.Fa start_sel ,
an array of memory that
will contain the descriptors to be set or returned
.Fa descs ,
and the number of entries to set or return
.Fa num_sels .
d63 1
a63 1
The argument
d65 3
a67 2
can be either segment_descriptor or gate_descriptor, as defined in
.Ao Pa amd64/segments.h Ac .
d86 9
a94 1
returns the number of descriptors currently in the LDT.
d96 3
a98 1
returns the first selector set.
@


1.1
log
@change to amd_*() functions
@
text
@d1 1
a1 1
.\"	$OpenBSD: amd64_get_ldt.2,v 1.1 2004/02/26 00:10:54 deraadt Exp $
d34 1
a34 1
.Dt AMD64_GET_LDT 2
@

