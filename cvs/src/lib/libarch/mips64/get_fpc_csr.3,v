head	1.6;
access;
symbols
	OPENBSD_6_1:1.6.0.8
	OPENBSD_6_1_BASE:1.6
	OPENBSD_6_0:1.6.0.4
	OPENBSD_6_0_BASE:1.6
	OPENBSD_5_9:1.6.0.2
	OPENBSD_5_9_BASE:1.6
	OPENBSD_5_8:1.5.0.6
	OPENBSD_5_8_BASE:1.5
	OPENBSD_5_7:1.5.0.2
	OPENBSD_5_7_BASE:1.5
	OPENBSD_5_6:1.4.0.18
	OPENBSD_5_6_BASE:1.4
	OPENBSD_5_5:1.4.0.16
	OPENBSD_5_5_BASE:1.4
	OPENBSD_5_4:1.4.0.12
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.10
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.8
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.6
	OPENBSD_5_0:1.4.0.4
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.2
	OPENBSD_4_9_BASE:1.4;
locks; strict;
comment	@.\" @;


1.6
date	2015.09.14.13.45.25;	author schwarze;	state Exp;
branches;
next	1.5;
commitid	RGDWQDsiOavVx5N6;

1.5
date	2015.01.15.19.06.31;	author schwarze;	state Exp;
branches;
next	1.4;
commitid	dven8mWEy4wx3j1c;

1.4
date	2010.09.26.15.12.03;	author jmc;	state Exp;
branches;
next	1.3;

1.3
date	2010.09.25.06.26.12;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2010.09.24.20.31.07;	author jmc;	state Exp;
branches;
next	1.1;

1.1
date	2010.09.24.13.54.05;	author miod;	state Exp;
branches;
next	;


desc
@@


1.6
log
@in the SYNOPSIS, make void function arguments explicit
@
text
@.\"	$OpenBSD: get_fpc_csr.3,v 1.5 2015/01/15 19:06:31 schwarze Exp $
.\"
.\" Copyright (c) 2010 Miodrag Vallat.
.\"
.\" Permission to use, copy, modify, and distribute this software for any
.\" purpose with or without fee is hereby granted, provided that the above
.\" copyright notice and this permission notice appear in all copies.
.\"
.\" THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
.\" WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
.\" MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
.\" ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
.\" WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
.\" ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
.\" OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
.\"
.Dd $Mdocdate: January 15 2015 $
.Dt GET_FPC_CSR 3 mips64
.Os
.Sh NAME
.Nm get_fpc_csr ,
.Nm set_fpc_csr
.Nd floating-point control register access
.Sh SYNOPSIS
.In machine/fpu.h
.Ft int
.Fn get_fpc_csr void
.Ft int
.Fn set_fpc_csr "int csr"
.Sh DESCRIPTION
The
.Fn get_fpc_csr
function returns the curent value of the floating-point control register.
The
.Fn set_fpc_csr
function replaces the value of the floating-point control register with
.Fa csr
and returns the previous value.
.Pp
These functions are provided for IRIX compatibility,
and should only be used to control the value of the
.Li FPCSR_FS
bit in the floating-point control register.
Portable code should use the
.Xr fpgetmask 3 ,
.Xr fpgetround 3 ,
.Xr fpgetsticky 3 ,
.Xr fpsetmask 3 ,
.Xr fpsetround 3 ,
and
.Xr fpsetsticky 3
functions to inquire or alter the floating-point control register.
.Sh RETURN VALUES
The
.Fn get_fpc_csr
and
.Fn set_fpc_csr
functions return the
.Pq previous
value of the floating-point control register.
.Sh SEE ALSO
.Xr fpgetmask 3
@


1.5
log
@remove .Tn; from Jan Stary <hans at stare dot cz>
@
text
@d1 1
a1 1
.\"	$OpenBSD: get_fpc_csr.3,v 1.4 2010/09/26 15:12:03 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 26 2010 $
d27 1
a27 1
.Fn get_fpc_csr
@


1.4
log
@add mips64 tags; ok miod
@
text
@d1 1
a1 1
.\"	$OpenBSD: get_fpc_csr.3,v 1.3 2010/09/25 06:26:12 jmc Exp $
d17 1
a17 1
.Dd $Mdocdate: September 25 2010 $
d40 2
a41 3
These functions are provided for
.Tn IRIX
compatibility, and should only be used to control the value of the
@


1.3
log
@fix Xrs;
@
text
@d1 1
a1 1
.\"	$OpenBSD: get_fpc_csr.3,v 1.2 2010/09/24 20:31:07 jmc Exp $
d17 2
a18 2
.Dd $Mdocdate: September 24 2010 $
.Dt GET_FPC_CSR 3
@


1.2
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: get_fpc_csr.3,v 1.1 2010/09/24 13:54:05 miod Exp $
d46 5
a50 5
.Fn fpgetmask ,
.Fn fpgetround ,
.Fn fpgetsticky ,
.Fn fpsetmask ,
.Fn fpsetround
d52 1
a52 1
.Fn fpsetsticky
d63 1
a63 6
.Xr fpgetmask 2 ,
.Xr fpgetround 2 ,
.Xr fpgetsticky 2 ,
.Xr fpsetmask 2 ,
.Xr fpsetround 2 ,
.Xr fpsetsticky 2
@


1.1
log
@Provide IRIX-compatible get_fpc_csr() and set_fpc_csr() for mips, although
we don't provide the silly union to decompose the value. This will allow
userland to flip the ``flush denormalized to zero'' setting, which apparently
is being relied upon by tcl.

Asked by jasper@@ a long time ago. Riding upon the upcoming libc major crank.
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d17 1
a17 1
.Dd $Mdocdate$
d23 1
a23 1
.Nd Floating-point control register access
d46 5
a50 5
.Nm fpgetmask ,
.Nm fpgetround ,
.Nm fpgetsticky ,
.Nm fpsetmask ,
.Nm fpsetround
d52 1
a52 1
.Nm fpsetsticky
d56 1
a56 1
.Nm get_fpc_csr
d58 1
a58 1
.Nm set_fpc_csr
@

