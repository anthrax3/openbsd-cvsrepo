head	1.5;
access;
symbols
	OPENBSD_6_1:1.5.0.6
	OPENBSD_6_1_BASE:1.5
	OPENBSD_6_0:1.5.0.2
	OPENBSD_6_0_BASE:1.5
	OPENBSD_5_9:1.4.0.2
	OPENBSD_5_9_BASE:1.4
	OPENBSD_5_8:1.3.0.16
	OPENBSD_5_8_BASE:1.3
	OPENBSD_5_7:1.3.0.8
	OPENBSD_5_7_BASE:1.3
	OPENBSD_5_6:1.3.0.12
	OPENBSD_5_6_BASE:1.3
	OPENBSD_5_5:1.3.0.10
	OPENBSD_5_5_BASE:1.3
	OPENBSD_5_4:1.3.0.6
	OPENBSD_5_4_BASE:1.3
	OPENBSD_5_3:1.3.0.4
	OPENBSD_5_3_BASE:1.3
	OPENBSD_5_2:1.3.0.2
	OPENBSD_5_2_BASE:1.3
	OPENBSD_5_1_BASE:1.1
	OPENBSD_5_1:1.1.0.4
	OPENBSD_5_0:1.1.0.2
	OPENBSD_5_0_BASE:1.1;
locks; strict;
comment	@.\" @;


1.5
date	2016.03.30.06.58.06;	author jmc;	state Exp;
branches;
next	1.4;
commitid	nFeMLhYWGqPPjE4B;

1.4
date	2015.09.10.17.55.21;	author schwarze;	state Exp;
branches;
next	1.3;
commitid	PeV7Ql0T6htfMjhP;

1.3
date	2012.04.12.19.20.07;	author jmc;	state Exp;
branches;
next	1.2;

1.2
date	2012.04.12.14.34.45;	author guenther;	state Exp;
branches;
next	1.1;

1.1
date	2011.03.12.04.12.29;	author guenther;	state Exp;
branches;
next	;


desc
@@


1.5
log
@some Xr adjustment to catch up with MLINKS removal;
@
text
@.\"	$OpenBSD: i386_get_gsbase.2,v 1.4 2015/09/10 17:55:21 schwarze Exp $
.\"	$NetBSD: i386_get_ioperm.2,v 1.3 1996/02/27 22:57:17 jtc Exp $
.\"
.\" Copyright (c) 1996 The NetBSD Foundation, Inc.
.\" All rights reserved.
.\"
.\" This code is derived from software contributed to The NetBSD Foundation
.\" by John T. Kohl and Charles M. Hannum.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
.\" ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
.\" TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
.\" PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE
.\" LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
.\" CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
.\" SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
.\" INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
.\" CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
.\" ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
.\" POSSIBILITY OF SUCH DAMAGE.
.\"
.Dd $Mdocdate: September 10 2015 $
.Dt I386_GET_GSBASE 2 i386
.Os
.Sh NAME
.Nm i386_get_gsbase ,
.Nm i386_set_gsbase
.Nd manage i386 per-thread %gs base address
.Sh SYNOPSIS
.In sys/types.h
.In machine/sysarch.h
.Ft int
.Fn i386_get_gsbase "void **base"
.Ft int
.Fn i386_set_gsbase "void *base"
.Sh DESCRIPTION
.Fn i386_get_gsbase
copies the current base address of the segment that, by default,
is referenced by the %gs selector into the memory referenced by
.Fa base .
.Pp
.Fn i386_set_gsbase
sets the base address of the segment that, by default, is referenced
by %gs to the address
.Fa base .
.Pp
The segment base address is local to each thread.
The initial thread of a new process inherits its segment base address
from the parent thread.
.Xr __tfork 3
sets the initial segment base address for threads that it creates.
.Pp
.Sy Note:
Code using the
.Fn i386_get_gsbase
and
.Fn i386_set_gsbase
functions must be compiled using
.Cm -li386 .
.Sh RETURN VALUES
Upon successful completion,
.Fn i386_get_gsbase
and
.Fn i386_set_gsbase
return 0.
Otherwise, a value of \-1 is returned and the global variable
.Va errno
is set to indicate the error.
.Sh ERRORS
.Fn i386_get_gsbase
will fail if:
.Bl -tag -width [EINVAL]
.It Bq Er EFAULT
.Fa base
points outside the process's allocated address space.
.El
.Sh SEE ALSO
.Xr fork 2 ,
.Xr __tfork 3
.Rs
.%A Intel
.%T i386 Microprocessor Programmer's Reference Manual
.Re
.Sh WARNING
The ELF Thread-Local Storage ABI reserves %gs for its own use and
requires that the dynamic linker and thread library set it to
reference data-structures internal to and shared between them.
Programs should use the __thread storage class keyword instead of
using these calls.
To be maximally portable,
programs that require per-thread data should use the
.Fn pthread_key_create
interface.
@


1.4
log
@use .In rather than .Fd #include
@
text
@d1 1
a1 1
.\"	$OpenBSD: i386_get_gsbase.2,v 1.3 2012/04/12 19:20:07 jmc Exp $
d31 1
a31 1
.Dd $Mdocdate: April 12 2012 $
d59 1
a59 1
.Xr __tfork 2
d87 2
a88 2
.Xr __tfork 2 ,
.Xr fork 2
@


1.3
log
@tweak previous;
@
text
@d1 1
a1 1
.\"	$OpenBSD: i386_get_gsbase.2,v 1.2 2012/04/12 14:34:45 guenther Exp $
d39 2
a40 2
.Fd #include <sys/types.h>
.Fd #include <machine/sysarch.h>
@


1.2
log
@Clarify thread-localness in the wake of rfork's removal
@
text
@d1 1
a1 1
.\"	$OpenBSD: i386_get_gsbase.2,v 1.1 2011/03/12 04:12:29 guenther Exp $
d31 1
a31 1
.Dd $Mdocdate: March 12 2011 $
d59 1
a59 1
.Fn __tfork
d87 2
a88 2
.Xr fork 2 ,
.Xr __tfork 2
@


1.1
log
@Provide wrappers for the new I386_{GET,SET}_{FS,GS}BASE sysarch() calls.
In some sense, these are mainly to give names to hang manpages from.
@
text
@d1 1
a1 1
.\"	$OpenBSD: i386_get_ioperm.2,v 1.14 2008/06/26 05:42:04 ray Exp $
d31 1
a31 1
.Dd $Mdocdate: June 26 2008 $
d56 5
a60 4
When rfork(RFPROC | RFTHREAD) is used, the segment base address
for the above calls is a per-thread value.
When a new thread is created,
it inherits the base from the thread that created it.
d87 2
@

