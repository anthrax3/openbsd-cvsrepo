head	1.14;
access;
symbols
	OPENBSD_5_8:1.13.0.18
	OPENBSD_5_8_BASE:1.13
	OPENBSD_5_7:1.13.0.10
	OPENBSD_5_7_BASE:1.13
	OPENBSD_5_6:1.13.0.14
	OPENBSD_5_6_BASE:1.13
	OPENBSD_5_5:1.13.0.12
	OPENBSD_5_5_BASE:1.13
	OPENBSD_5_4:1.13.0.8
	OPENBSD_5_4_BASE:1.13
	OPENBSD_5_3:1.13.0.6
	OPENBSD_5_3_BASE:1.13
	OPENBSD_5_2:1.13.0.4
	OPENBSD_5_2_BASE:1.13
	OPENBSD_5_1_BASE:1.13
	OPENBSD_5_1:1.13.0.2
	OPENBSD_5_0:1.12.0.18
	OPENBSD_5_0_BASE:1.12
	OPENBSD_4_9:1.12.0.16
	OPENBSD_4_9_BASE:1.12
	OPENBSD_4_8:1.12.0.14
	OPENBSD_4_8_BASE:1.12
	OPENBSD_4_7:1.12.0.10
	OPENBSD_4_7_BASE:1.12
	OPENBSD_4_6:1.12.0.12
	OPENBSD_4_6_BASE:1.12
	OPENBSD_4_5:1.12.0.8
	OPENBSD_4_5_BASE:1.12
	OPENBSD_4_4:1.12.0.6
	OPENBSD_4_4_BASE:1.12
	OPENBSD_4_3:1.12.0.4
	OPENBSD_4_3_BASE:1.12
	OPENBSD_4_2:1.12.0.2
	OPENBSD_4_2_BASE:1.12
	OPENBSD_4_1:1.11.0.14
	OPENBSD_4_1_BASE:1.11
	OPENBSD_4_0:1.11.0.12
	OPENBSD_4_0_BASE:1.11
	OPENBSD_3_9:1.11.0.10
	OPENBSD_3_9_BASE:1.11
	OPENBSD_3_8:1.11.0.8
	OPENBSD_3_8_BASE:1.11
	OPENBSD_3_7:1.11.0.6
	OPENBSD_3_7_BASE:1.11
	OPENBSD_3_6:1.11.0.4
	OPENBSD_3_6_BASE:1.11
	OPENBSD_3_5:1.11.0.2
	OPENBSD_3_5_BASE:1.11
	OPENBSD_3_4:1.10.0.2
	OPENBSD_3_4_BASE:1.10
	OPENBSD_3_3:1.7.0.4
	OPENBSD_3_3_BASE:1.7
	OPENBSD_3_2:1.7.0.2
	OPENBSD_3_2_BASE:1.7
	OPENBSD_3_1:1.6.0.4
	OPENBSD_3_1_BASE:1.6
	OPENBSD_3_0:1.6.0.2
	OPENBSD_3_0_BASE:1.6
	OPENBSD_2_9:1.5.0.8
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.6
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.4
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.14
date	2015.11.14.23.56.50;	author deraadt;	state dead;
branches;
next	1.13;
commitid	BrKaQHWTbuUdYB4P;

1.13
date	2011.09.03.22.59.07;	author jmc;	state Exp;
branches;
next	1.12;

1.12
date	2007.05.31.19.19.36;	author jmc;	state Exp;
branches;
next	1.11;

1.11
date	2004.02.09.20.53.11;	author jmc;	state Exp;
branches;
next	1.10;

1.10
date	2003.06.06.19.01.00;	author jmc;	state Exp;
branches;
next	1.9;

1.9
date	2003.06.02.20.18.42;	author millert;	state Exp;
branches;
next	1.8;

1.8
date	2003.05.24.18.30.32;	author jmc;	state Exp;
branches;
next	1.7;

1.7
date	2002.05.01.08.03.30;	author mpech;	state Exp;
branches;
next	1.6;

1.6
date	2001.08.06.10.42.26;	author mpech;	state Exp;
branches;
next	1.5;

1.5
date	99.07.09.13.35.27;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.07.10.50.06;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.05.16.19.56.03;	author alex;	state Exp;
branches;
next	1.2;

1.2
date	98.07.23.21.10.25;	author millert;	state Exp;
branches;
next	1.1;

1.1
date	96.06.02.06.06.09;	author tholo;	state Exp;
branches;
next	;


desc
@@


1.14
log
@libocurses can go to the Attic.  last consumer of it was ramdisk more(1)
conceptual ok guenther millert nicm
@
text
@.\"	$OpenBSD: ocurses.3,v 1.13 2011/09/03 22:59:07 jmc Exp $
.\"
.\" Copyright (c) 1985, 1991, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)curses.3	8.1 (Berkeley) 6/4/93
.\"
.Dd $Mdocdate: September 3 2011 $
.Dt OCURSES 3
.Os
.Sh NAME
.Nm ocurses
.Nd screen functions with ``optimal'' cursor motion
.Sh SYNOPSIS
.Nm cc
.Op Ar flags
.Ar files
.Fl locurses
.Op Ar libraries
.Sh DESCRIPTION
These routines give the user a method of updating screens with reasonable
optimization.
They keep an image of the current screen,
and the user sets up an image of a new one.
Then
.Fn refresh
tells the routines to make the current screen look like the new one.
In order to initialize the routines, the routine
.Fn initscr
must be called before any of the other routines that deal with windows and
screens are used.
The routine
.Fn endwin
should be called before exiting.
.Sh FUNCTIONS
.Bl -tag -width "subwin(win,lines,cols,begin_y,begin_x)" -compact
.It addch(ch)
add a character to
.Em stdscr
.It addstr(str)
add a string to
.Em stdscr
.It box(win,vert,hor)
draw a box around a window
.It cbreak()
set cbreak mode
.It clear()
clear
.Em stdscr
.It clearok(scr,boolf)
set clear flag for
.Em scr
.It clrtobot()
clear to bottom on
.Em stdscr
.It clrtoeol()
clear to end of line on
.Em stdscr
.It delch()
delete a character
.It deleteln()
delete a line
.It delwin(win)
delete
.Em stdscr
.It echo()
set echo mode
.It endwin()
end window modes
.It erase()
erase
.Em stdscr
.It flusok(win,boolf)
set flush-on-refresh flag for
.Em win
.It getch()
get a char through
.Em stdscr
.It getcap(name)
get terminal capability
.Em name
.It getstr(str)
get a string through
.Em stdscr
.It gettmode()
get tty modes
.It getyx(win,y,x)
get (y,x) co-ordinates
.It inch()
get char at current (y,x) co-ordinates
.It initscr()
initialize screens
.It insch(c)
insert a char
.It insertln()
insert a line
.It leaveok(win,boolf)
set leave flag for
.Em stdscr
.It longname(termbuf,name)
get long name from
.Em termbuf
.It move(y,x)
move to (y,x) on
.Em stdscr
.It mvcur(lasty,lastx,newy,newx)
actually move cursor
.It newwin(lines,cols,begin_y,begin_x)
create a new window
.It nl()
set newline mapping
.It nocbreak()
unset cbreak mode
.It noecho()
unset echo mode
.It nonl()
unset newline mapping
.It noraw()
unset raw mode
.It overlay(win1,win2)
overlay win1 on win2
.It overwrite(win1,win2)
overwrite win1 on top of win2
.It printw(fmt,arg1,arg2,...)
printf on
.Em stdscr
.It raw()
set raw mode
.It refresh()
make current screen look like
.Em stdscr
.It resetty()
reset tty flags to stored value
.It savetty()
stored current tty flags
.It scanw(fmt,arg1,arg2,...)
scanf through
.Em stdscr
.It scroll(win)
scroll
.Em win
one line
.It scrollok(win,boolf)
set scroll flag
.It setterm(name)
set term variables for name
.It standend()
end standout mode
.It standout()
start standout mode
.It subwin(win,lines,cols,begin_y,begin_x)
create a subwindow
.It touchline(win,y,sx,ex)
mark line
.Em y
.Em sx
through
.Em sy
as changed
.It touchoverlap(win1,win2)
mark overlap of
.Em win1
on
.Em win2
as changed
.It touchwin(win)
\*(lqchange\*(rq all of
.Em win
.It unctrl(ch)
printable version of
.Em ch
.It waddch(win,ch)
add char to
.Em win
.It waddstr(win,str)
add string to
.Em win
.It wclear(win)
clear
.Em win
.It wclrtobot(win)
clear to bottom of
.Em win
.It wclrtoeol(win)
clear to end of line on
.Em win
.It wdelch(win)
delete char from
.Em win
.It wdeleteln(win)
delete line from
.Em win
.It werase(win)
erase
.Em win
.It wgetch(win)
get a char through
.Em win
.It wgetstr(win,str)
get a string through
.Em win
.It winch(win)
get char at current (y,x) in
.Em win
.It winsch(win,c)
insert char into
.Em win
.It winsertln(win)
insert line into
.Em win
.It wmove(win,y,x)
set current (y,x) co-ordinates on
.Em win
.It wprintw(win,fmt,arg1,arg2,...)
printf on
.Em win
.It wrefresh(win)
make screen look like
.Em win
.It wscanw(win,fmt,arg1,arg2,...)
scanf through
.Em win
.It wstandend(win)
end standout mode on
.Em win
.It wstandout(win)
start standout mode on
.Em win
.El
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr getenv 3 ,
.Xr termcap 3 ,
.Xr tty 4 ,
.Xr termcap 5
.Rs
.%T Screen Updating and Cursor Movement Optimization: A Library Package
.%A Ken Arnold
.Re
.Sh HISTORY
The
.Nm
package appeared in
.Bx 4.0 .
.Sh AUTHORS
.An Ken Arnold
@


1.13
log
@make -column lists pretty again;

specifically, rewrite them to permit some markup in the column headers,
and use "Ta" instead of literal tabs; mandoc does not currently match groff
100%, but a mandoc fix may be some time off, and we've gone enough releases
with poorly formatting column lists.

in some cases i have rewritten the lists as -tag, where -column made
little sense.
@
text
@d1 1
a1 1
.\"	$OpenBSD: ocurses.3,v 1.12 2007/05/31 19:19:36 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate: May 31 2007 $
@


1.12
log
@convert to new .Dd format;
@
text
@d1 1
a1 1
.\"	$OpenBSD: ocurses.3,v 1.11 2004/02/09 20:53:11 jmc Exp $
d32 1
a32 1
.Dd $Mdocdate$
d60 13
a72 2
.Bl -column "subwin(win,lines,cols,begin_y,begin_x)   "
.It addch(ch)	add a character to
d74 2
a75 7
.It addstr(str)	add a string to
.Em stdscr
.It box(win,vert,hor)	draw a box around a window
.It cbreak()	set cbreak mode
.It clear()	clear
.Em stdscr
.It clearok(scr,boolf)	set clear flag for
d77 2
a78 3
.It clrtobot()	clear to bottom on
.Em stdscr
.It clrtoeol()	clear to end of line on
d80 2
a81 3
.It delch()	delete a character
.It deleteln()	delete a line
.It delwin(win)	delete
d83 13
a95 3
.It echo()	set echo mode
.It endwin()	end window modes
.It erase()	erase
d97 2
a98 1
.It flusok(win,boolf)	set flush-on-refresh flag for
d100 2
a101 1
.It getch()	get a char through
d103 2
a104 1
.It getcap(name)	get terminal capability
d106 2
a107 1
.It getstr(str)	get a string through
d109 14
a122 7
.It gettmode()	get tty modes
.It getyx(win,y,x)	get (y,x) co-ordinates
.It inch()	get char at current (y,x) co-ordinates
.It initscr()	initialize screens
.It insch(c)	insert a char
.It insertln()	insert a line
.It leaveok(win,boolf)	set leave flag for
d124 2
a125 1
.It longname(termbuf,name)	get long name from
d127 2
a128 1
.It move(y,x)	move to (y,x) on
d130 32
a161 17
.It mvcur(lasty,lastx,newy,newx)	actually move cursor
.It newwin(lines,cols,begin_y,begin_x)\ 	create a new window
.It nl()	set newline mapping
.It nocbreak()	unset cbreak mode
.It noecho()	unset echo mode
.It nonl()	unset newline mapping
.It noraw()	unset raw mode
.It overlay(win1,win2)	overlay win1 on win2
.It overwrite(win1,win2)	overwrite win1 on top of win2
.It printw(fmt,arg1,arg2,...)	printf on
.Em stdscr
.It raw()	set raw mode
.It refresh()	make current screen look like
.Em stdscr
.It resetty()	reset tty flags to stored value
.It savetty()	stored current tty flags
.It scanw(fmt,arg1,arg2,...)	scanf through
d163 2
a164 1
.It scroll(win)	scroll
d167 12
a178 6
.It scrollok(win,boolf)	set scroll flag
.It setterm(name)	set term variables for name
.It standend()	end standout mode
.It standout()	start standout mode
.It subwin(win,lines,cols,begin_y,begin_x)\ 	create a subwindow
.It touchline(win,y,sx,ex)	mark line
d184 2
a185 1
.It touchoverlap(win1,win2)	mark overlap of
d190 2
a191 1
.It touchwin(win)	\*(lqchange\*(rq all of
d193 2
a194 1
.It unctrl(ch)	printable version of
d196 2
a197 1
.It waddch(win,ch)	add char to
d199 2
a200 1
.It waddstr(win,str)	add string to
d202 2
a203 1
.It wclear(win)	clear
d205 2
a206 1
.It wclrtobot(win)	clear to bottom of
d208 2
a209 1
.It wclrtoeol(win)	clear to end of line on
d211 2
a212 1
.It wdelch(win)	delete char from
d214 2
a215 1
.It wdeleteln(win)	delete line from
d217 2
a218 1
.It werase(win)	erase
d220 2
a221 1
.It wgetch(win)	get a char through
d223 2
a224 1
.It wgetstr(win,str)	get a string through
d226 2
a227 1
.It winch(win)	get char at current (y,x) in
d229 2
a230 1
.It winsch(win,c)	insert char into
d232 2
a233 1
.It winsertln(win)	insert line into
d235 2
a236 1
.It wmove(win,y,x)	set current (y,x) co-ordinates on
d238 2
a239 1
.It wprintw(win,fmt,arg1,arg2,...)\ 	printf on
d241 2
a242 1
.It wrefresh(win)	make screen look like
d244 2
a245 1
.It wscanw(win,fmt,arg1,arg2,...)\ 	scanf through
d247 2
a248 1
.It wstandend(win)	end standout mode on
d250 2
a251 1
.It wstandout(win)	start standout mode on
@


1.11
log
@make Nm match Dt; found by pb@@

some of this ok espie@@, all of it ok deraadt@@
@
text
@d1 1
a1 1
.\"	$OpenBSD: ocurses.3,v 1.10 2003/06/06 19:01:00 jmc Exp $
d32 1
a32 1
.Dd June 4, 1993
@


1.10
log
@slightly more logical section order, and a typo;
ok pval@@ millert@@
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d36 1
a36 1
.Nm curses
@


1.9
log
@Remove the advertising clause in the UCB license which Berkeley
rescinded 22 July 1999.  Proofed by myself and Theo.
@
text
@d1 1
a1 1
.\" $OpenBSD
d49 1
a49 1
Then the
a58 12
.Sh SEE ALSO
.Xr ioctl 2 ,
.Xr getenv 3 ,
.Xr termcap 3 ,
.Xr tty 4 ,
.Xr termcap 5
.Rs
.%T Screen Updating and Cursor Movement Optimization: A Library Package
.%A Ken Arnold
.Re
.Sh AUTHORS
.An Ken Arnold
d183 10
d198 2
@


1.8
log
@- typos;
- new sentence, new line;
- whitespace at EOL
@
text
@d14 1
a14 5
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
@


1.7
log
@o) start new sentence on a new line;
o) always close .Bl tags;
o) fix usage of .Xr;

millert@@ ok
@
text
@d59 2
a60 1
screens are used.  The routine
@


1.6
log
@o) We always close .Bl and .Bd tags;
o) .Sh AUTHOR -> .Sh AUTHORS;
o) We don't like .Pp before/after .Sh;
o) We don't like .Pp before/after .Rs/.Re;
o) NetBSD -> .Nx;
o) OpenBSD -> .Ox;

millert@@ ok
@
text
@d50 4
a53 2
optimization.  They keep an image of the current screen,
and the user sets up an image of a new one.  Then the
@


1.5
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d70 1
a70 1
.Sh AUTHOR
@


1.4
log
@The proper order of the ``introductory'' macros in a man page is .Dd/.Dt/.Os.
Out of the approximately 1450 man pages, only about 90 of them were wrong.
Thanks to kwesterback@@home.com for coming up with a script and patch to repair
this. The patch also inserted a .Os macro in the few man pages that were
missing one.
@
text
@d199 1
a199 1
package appeared in 
@


1.3
log
@Cleanup xrefs under SEE ALSO.  Specifically:

  - Sort xrefs by section, and then alphabetically.
  - Add missing commas between xref items.
  - Remove commas from the last xref entry.
  - Remove duplicate entries.
@
text
@d38 1
a38 1
.Os BSD 4
@


1.2
log
@unified libtermcap/libocurses
@
text
@d63 1
a63 1
.Xr termcap 3
@


1.1
log
@Install ncurses as -lcurses and <curses.h>
Install BSD curses library as -locurses and <ocurses.h>
@
text
@d1 2
d37 1
a37 1
.Dt CURSES 3
d46 1
a46 1
.Fl lcurses ltermcap
d63 1
@

