head	1.6;
access;
symbols
	OPENBSD_2_9:1.5.0.6
	OPENBSD_2_9_BASE:1.5
	OPENBSD_2_8:1.5.0.4
	OPENBSD_2_8_BASE:1.5
	OPENBSD_2_7:1.5.0.2
	OPENBSD_2_7_BASE:1.5
	OPENBSD_2_6:1.4.0.2
	OPENBSD_2_6_BASE:1.4
	OPENBSD_2_5:1.2.0.4
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.2
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.1.0.8
	OPENBSD_2_3_BASE:1.1
	OPENBSD_2_2:1.1.0.6
	OPENBSD_2_2_BASE:1.1
	OPENBSD_2_1:1.1.0.4
	OPENBSD_2_1_BASE:1.1
	OPENBSD_2_0:1.1.0.2
	OPENBSD_2_0_BASE:1.1;
locks; strict;
comment	@# @;


1.6
date	2001.06.27.05.54.22;	author art;	state dead;
branches;
next	1.5;

1.5
date	2000.04.15.02.15.28;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.07.09.13.35.26;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.07.02.21.13.05;	author aaron;	state Exp;
branches;
next	1.2;

1.2
date	98.08.06.21.27.41;	author kstailey;	state Exp;
branches;
next	1.1;

1.1
date	96.03.19.23.15.34;	author niklas;	state Exp;
branches;
next	;


desc
@@


1.6
log
@Bye bye!
@
text
@.\"	$OpenBSD: kvm_getprocs.3,v 1.5 2000/04/15 02:15:28 aaron Exp $
.\"
.\" Copyright (c) 1992, 1993
.\"	The Regents of the University of California.  All rights reserved.
.\"
.\" This code is derived from software developed by the Computer Systems
.\" Engineering group at Lawrence Berkeley Laboratory under DARPA contract
.\" BG 91-66 and contributed to Berkeley.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. All advertising materials mentioning features or use of this software
.\"    must display the following acknowledgement:
.\"	This product includes software developed by the University of
.\"	California, Berkeley and its contributors.
.\" 4. Neither the name of the University nor the names of its contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY THE REGENTS AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\"     @@(#)kvm_getprocs.3	8.1 (Berkeley) 6/4/93
.\"
.Dd June 4, 1993
.Dt KVM_GETPROCS 3
.Os
.Sh NAME
.Nm kvm_getprocs ,
.Nm kvm_getargv ,
.Nm kvm_getenvv
.Nd access user process state
.Sh SYNOPSIS
.Fd #include <kvm.h>
.Fd #include <sys/sysctl.h>
.\" .Fa kvm_t *kd
.br
.Ft struct kinfo_proc *
.Fn kvm_getprocs "kvm_t *kd" "int op" "int arg" "int *cnt"
.Ft char **
.Fn kvm_getargv "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
.Ft char **
.Fn kvm_getenvv "kvm_t *kd" "const struct kinfo_proc *p" "int nchr"
.Sh DESCRIPTION
.Fn kvm_getprocs
returns a (sub-)set of active processes in the kernel indicated by
.Fa kd .
The
.Fa op
and
.Fa arg
arguments constitute a predicate which limits the set of processes
returned.  The value of
.Fa op
describes the filtering predicate as follows:
.Pp
.Bl -tag -width 20n -offset indent -compact
.It Sy KERN_PROC_ALL
all processes
.It Sy KERN_PROC_PID
processes with process id
.Fa arg
.It Sy KERN_PROC_PGRP
processes with process group
.Fa arg
.It Sy KERN_PROC_SESSION
processes with session
.Fa arg
.It Sy KERN_PROC_TTY
processes with tty
.Fa arg
.It Sy KERN_PROC_UID
processes with effective user id
.Fa arg
.It Sy KERN_PROC_RUID
processes with real user id
.Fa arg
.El
.Pp
The number of processes found is returned in the reference parameter
.Fa cnt .
The processes are returned as a contiguous array of kinfo_proc structures.
This memory is locally allocated, and subsequent calls to
.Fn kvm_getprocs
and
.Fn kvm_close
will overwrite this storage.
.Pp
.Fn kvm_getargv
returns a null-terminated argument vector that corresponds to the
command line arguments passed to process indicated by
.Fa p .
Most likely, these arguments correspond to the values passed to
.Xr exec 3
on process creation.  This information is, however,
deliberately under control of the process itself.
Note that the original command name can be found, unaltered,
in the p_comm field of the process structure returned by
.Fn kvm_getprocs .
.Pp
The
.Fa nchr
argument indicates the maximum number of characters, including null bytes,
to use in building the strings.  If this amount is exceeded, the string
causing the overflow is truncated and the partial result is returned.
This is handy for programs like
.Xr ps 1
and
.Xr w 1
that print only a one line summary of a command and should not copy
out large amounts of text only to ignore it.
If
.Fa nchr
is zero, no limit is imposed and all argument strings are returned in
their entirety.
.Pp
The memory allocated to the argv pointers and string storage
is owned by the kvm library.  Subsequent
.Fn kvm_getprocs
and
.Xr kvm_close 3
calls will clobber this storage.
.Pp
The
.Fn kvm_getenvv
function is similar to
.Fn kvm_getargv
but returns the vector of environment strings.  This data is
also alterable by the process.
.Sh RETURN VALUES
.Fn kvm_getprocs ,
.Fn kvm_getargv ,
and
.Fn kvm_getenvv ,
all return
.Dv NULL
on failure.
.Sh BUGS
These routines do not belong in the kvm interface.
.Sh SEE ALSO
.Xr kvm 3 ,
.Xr kvm_close 3 ,
.Xr kvm_geterr 3 ,
.Xr kvm_nlist 3 ,
.Xr kvm_open 3 ,
.Xr kvm_openfiles 3 ,
.Xr kvm_read 3 ,
.Xr kvm_write 3
@


1.5
log
@Mostly punctuation fixes.
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.4 1999/07/09 13:35:26 aaron Exp $
@


1.4
log
@- remove all trailing whitespace
     * except when it is escaped with a `\' at the end of the line
- fix remaining .Nm usage as well
- this is from a patch I received from kwesterback@@home.com, who has been
  working on some scripts for fixing formatting errors in mdoc'd man pages

Ok, so there could be a cost/benefit debate with this commit, but since I have
the patch we might as well commit it...
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.3 1999/07/02 21:13:05 aaron Exp $
d62 1
a62 1
.Fa kd.
@


1.3
log
@remove redundant .Pp macros
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.2 1998/08/06 21:27:41 kstailey Exp $
d46 1
a46 1
.Nm kvm_getenvv 
d76 1
a76 1
processes with process id 
d99 2
a100 2
.Fn kvm_getprocs 
and 
d105 1
a105 1
returns a null-terminated argument vector that corresponds to the 
d116 1
a116 1
The 
d129 1
a129 1
is zero, no limit is imposed and all argument strings are returned in 
d133 3
a135 3
is owned by the kvm library.  Subsequent 
.Fn kvm_getprocs 
and 
@


1.2
log
@there is no <sys/kinfo*.h> and s/KINFO_PROC/KERN_PROC/
@
text
@d1 1
a1 1
.\"	$OpenBSD: kvm_getprocs.3,v 1.1 1996/03/19 23:15:34 niklas Exp $
a152 1
.Pp
@


1.1
log
@From NetBSD: merge of 960317
@
text
@d1 1
a1 1
.\"	$OpenBSD$
d50 1
a50 2
.Fd #include <sys/kinfo.h>
.Fd #include <sys/kinfo_proc.h>
d73 1
a73 1
.It Sy KINFO_PROC_ALL
d75 1
a75 1
.It Sy KINFO_PROC_PID
d78 1
a78 1
.It Sy KINFO_PROC_PGRP
d81 1
a81 1
.It Sy KINFO_PROC_SESSION
d84 1
a84 1
.It Sy KINFO_PROC_TTY
d87 1
a87 1
.It Sy KINFO_PROC_UID
d90 1
a90 1
.It Sy KINFO_PROC_RUID
@

