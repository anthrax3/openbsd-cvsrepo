head	1.6;
access;
symbols
	OPENBSD_5_6:1.4.0.4
	OPENBSD_5_6_BASE:1.4;
locks; strict;
comment	@# @;


1.6
date	2014.10.31.13.46.17;	author jsing;	state dead;
branches;
next	1.5;
commitid	y63FmUITd26yVanM;

1.5
date	2014.10.08.19.01.40;	author tedu;	state Exp;
branches;
next	1.4;
commitid	Imjlw4WRGNI6lVSl;

1.4
date	2014.07.13.23.36.24;	author jsing;	state Exp;
branches;
next	1.3;
commitid	t51OHDRabn5Zy5GJ;

1.3
date	2014.07.13.22.42.01;	author jsing;	state Exp;
branches;
next	1.2;
commitid	llGuoRca6WCUn8iF;

1.2
date	2014.07.13.22.13.52;	author jsing;	state Exp;
branches;
next	1.1;
commitid	v4JoNvWfMl7JsM0L;

1.1
date	2014.07.12.01.20.24;	author jsing;	state Exp;
branches;
next	;
commitid	961qrZstHKsjYeZe;


desc
@@


1.6
log
@Rename libressl to libtls to avoid confusion and to make it easier to
distinguish between LibreSSL (the project) and libressl (the library).

Discussed with many.
@
text
@#	$OpenBSD: Makefile,v 1.5 2014/10/08 19:01:40 tedu Exp $

CFLAGS+= -Wall -Werror -Wimplicit
CFLAGS+= -DLIBRESSL_INTERNAL

LIB=	ressl

DPADD=	${LIBCRYPTO} ${LIBSSL}

HDRS=	ressl.h

SRCS=	ressl.c \
	ressl_client.c \
	ressl_config.c \
	ressl_server.c \
	ressl_util.c \
	ressl_verify.c

MAN=	ressl_init.3

MLINKS+=ressl_init.3 ressl_error.3
MLINKS+=ressl_init.3 ressl_config_new.3
MLINKS+=ressl_init.3 ressl_config_free.3
MLINKS+=ressl_init.3 ressl_set_ca_file.3
MLINKS+=ressl_init.3 ressl_set_ca_path.3
MLINKS+=ressl_init.3 ressl_set_cert_file.3
MLINKS+=ressl_init.3 ressl_set_cert_mem.3
MLINKS+=ressl_init.3 ressl_set_ciphers.3
MLINKS+=ressl_init.3 ressl_set_ecdhcurve.3
MLINKS+=ressl_init.3 ressl_set_key_file.3
MLINKS+=ressl_init.3 ressl_set_key_mem.3
MLINKS+=ressl_init.3 ressl_set_protocols.3
MLINKS+=ressl_init.3 ressl_set_verify_depth.3
MLINKS+=ressl_init.3 ressl_clear_keys.3
MLINKS+=ressl_init.3 ressl_insecure_noverifyhost.3
MLINKS+=ressl_init.3 ressl_insecure_noverifycert.3
MLINKS+=ressl_init.3 ressl_verify.3
MLINKS+=ressl_init.3 ressl_configure.3
MLINKS+=ressl_init.3 ressl_reset.3
MLINKS+=ressl_init.3 ressl_free.3
MLINKS+=ressl_init.3 ressl_close.3
MLINKS+=ressl_init.3 ressl_connect.3
MLINKS+=ressl_init.3 ressl_connect_socket.3
MLINKS+=ressl_init.3 ressl_read.3
MLINKS+=ressl_init.3 ressl_write.3

includes:
	@@cd ${.CURDIR}; for i in $(HDRS); do \
	    j="cmp -s $$i ${DESTDIR}/usr/include/$$i || \
	    ${INSTALL} ${INSTALL_COPY} -o ${BINOWN} -g ${BINGRP} -m 444 $$i\
		${DESTDIR}/usr/include/"; \
	    echo $$j; \
	    eval "$$j"; \
	done;

.include <bsd.lib.mk>
@


1.5
log
@mlinks, and prune some functions from man page i'm not ready for yet.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.4 2014/07/13 23:36:24 jsing Exp $
@


1.4
log
@Add stubs for the proposed server API.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.3 2014/07/13 22:42:01 jsing Exp $
d18 28
@


1.3
log
@Move the client code into a separate file.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.2 2014/07/13 22:13:52 jsing Exp $
d15 1
@


1.2
log
@Use a single ressl.h header file.

Discussed with beck@@ and tedu@@.
@
text
@d1 1
a1 1
#	$OpenBSD: Makefile,v 1.1 2014/07/12 01:20:24 jsing Exp $
d13 1
@


1.1
log
@Initial version of libressl - a library that provides a clean, simple,
consistent and secure-by-default API for SSL clients (and soon servers).

This is a long way from complete and the interface will likely change
substantially - committing now so that further work can happen in the tree.

Initiated by tedu@@ and inspired by discussions with tedu@@, beck@@ and
other developers.
@
text
@d1 1
a1 1
#	$OpenBSD$
d10 1
a10 1
HDRS=	ressl.h ressl_config.h
a17 2
	@@test -d ${DESTDIR}/usr/include/ressl || \
	    mkdir ${DESTDIR}/usr/include/ressl
d19 1
a19 1
	    j="cmp -s $$i ${DESTDIR}/usr/include/ressl/$$i || \
d21 1
a21 1
		${DESTDIR}/usr/include/ressl"; \
@

