head	1.13;
access;
symbols
	OPENBSD_3_5:1.12.0.12
	OPENBSD_3_5_BASE:1.12
	OPENBSD_3_4:1.12.0.10
	OPENBSD_3_4_BASE:1.12
	OPENBSD_3_3:1.12.0.8
	OPENBSD_3_3_BASE:1.12
	OPENBSD_3_2:1.12.0.6
	OPENBSD_3_2_BASE:1.12
	OPENBSD_3_1:1.12.0.4
	OPENBSD_3_1_BASE:1.12
	OPENBSD_3_0:1.12.0.2
	OPENBSD_3_0_BASE:1.12
	OPENBSD_2_9:1.11.0.4
	OPENBSD_2_9_BASE:1.11
	OPENBSD_2_8:1.11.0.2
	OPENBSD_2_8_BASE:1.11
	OPENBSD_2_7:1.10.0.2
	OPENBSD_2_7_BASE:1.10
	OPENBSD_2_6:1.6.0.2
	OPENBSD_2_6_BASE:1.6;
locks; strict;
comment	@# @;


1.13
date	2004.06.25.00.46.16;	author msf;	state dead;
branches;
next	1.12;

1.12
date	2001.09.03.20.14.51;	author deraadt;	state Exp;
branches;
next	1.11;

1.11
date	2000.09.26.23.28.45;	author angelos;	state Exp;
branches;
next	1.10;

1.10
date	2000.02.12.01.02.02;	author angelos;	state Exp;
branches;
next	1.9;

1.9
date	2000.01.25.09.08.10;	author angelos;	state Exp;
branches;
next	1.8;

1.8
date	99.11.05.00.27.18;	author angelos;	state Exp;
branches;
next	1.7;

1.7
date	99.10.26.22.31.37;	author angelos;	state Exp;
branches;
next	1.6;

1.6
date	99.10.11.00.09.33;	author angelos;	state Exp;
branches;
next	1.5;

1.5
date	99.10.09.19.47.31;	author angelos;	state Exp;
branches;
next	1.4;

1.4
date	99.10.09.06.59.37;	author angelos;	state Exp;
branches;
next	1.3;

1.3
date	99.10.09.06.34.13;	author angelos;	state Exp;
branches;
next	1.2;

1.2
date	99.10.06.20.42.14;	author angelos;	state Exp;
branches;
next	1.1;

1.1
date	99.10.01.01.08.29;	author angelos;	state Exp;
branches;
next	;


desc
@@


1.13
log
@Remove unused gnu style configure stuff.
ok hshoexer@@ deraadt@@
@
text
@# $OpenBSD: Makefile.in,v 1.12 2001/09/03 20:14:51 deraadt Exp $
#
# The author of this code is Angelos D. Keromytis (angelos@@dsl.cis.upenn.edu)
#
# This code was written by Angelos D. Keromytis in Philadelphia, PA, USA,
# in April-May 1998
#
# Copyright (C) 1998, 1999 by Angelos D. Keromytis.
#	
# Permission to use, copy, and modify this software with or without fee
# is hereby granted, provided that this entire notice is included in
# all copies of any software which is or includes a copy or
# modification of this software. 
#
# THIS SOFTWARE IS BEING PROVIDED "AS IS", WITHOUT ANY EXPRESS OR
# IMPLIED WARRANTY. IN PARTICULAR, THE AUTHORS MAKES NO
# REPRESENTATION OR WARRANTY OF ANY KIND CONCERNING THE
# MERCHANTABILITY OF THIS SOFTWARE OR ITS FITNESS FOR ANY PARTICULAR
# PURPOSE.

VERSION = 2.3
DISTFILE = keynote-${VERSION}.tar.gz
KNSUBDIR = keynote-${VERSION}

LEX = @@LEX@@
CC = @@CC@@
RANLIB = @@RANLIB@@
YACC = @@YACC@@
SSLEAY = @@SSLEAY@@
RM = @@RM@@
AR = @@AR@@
NROFF = @@NROFF@@
TAR = @@TAR@@
TRUE = @@TRUE@@
MKDIR = @@MKDIR@@
SED = @@SED@@
ECHO = @@ECHO@@
TR = @@TR@@

TARFLAGS = -cvzf ${DISTFILE}
YACCFLAGS2 = -d -p kv -b z
YACCFLAGS = -d -p kn -b k
LEXFLAGS2 = -Pkv -s -i
LEXFLAGS = -Cr -Pkn -s -i
CFLAGS = -O2 -Wall # -g
RMFLAGS2 = -rf
RMFLAGS = -f
NROFFFLAGS = -mandoc

SSLCONF = testsuite/openssl.cnf
SSLCERT = testsuite/test.cert.pem
SSLKEY = testsuite/test.key.pem
SIGN_ASSERT = testsuite/test-assertion1-signed

# No-crypto compile/link flags and definitions
NOCRYPTODEFS = @@DEFS@@ @@CPPFLAGS@@

# Final compile/link flags and definitions
DEFS = -DCRYPTO ${NOCRYPTODEFS}
INC = -I.
LIBS = -L. -lkeynote @@LIBS@@

TARGET = libkeynote.a
TARGET2 = keynote
TARGET3 = sample-app

OBJS = 	k.tab.o lex.kn.o environment.o parse_assertion.o \
	signature.o auxil.o base64.o
OBJS2 = z.tab.o lex.kv.o keynote-verify.o keynote-sign.o \
	keynote-sigver.o keynote-keygen.o keynote-main.o @@LIBOBJS@@
OBJS3 = sample-app.o

crypto: all

nocrypto:
	${MAKE} DEFS="${NOCRYPTODEFS}"

all: $(TARGET) $(TARGET2)

library: $(TARGET)

$(TARGET): $(OBJS)
	$(AR) -cvr $(TARGET) $(OBJS)
	$(RANLIB) $(TARGET)

$(TARGET2): $(TARGET) $(OBJS2)
	$(CC) $(CFLAGS) -o $(TARGET2) $(OBJS2) $(LIBS)

k.tab.c: keynote.y header.h keynote.h assertion.h config.h
	$(YACC) $(YACCFLAGS) keynote.y

z.tab.c: keynote-ver.y keynote.h header.h config.h
	$(YACC) $(YACCFLAGS2) keynote-ver.y

lex.kn.c: keynote.l k.tab.h header.h keynote.h assertion.h config.h
	$(LEX) $(LEXFLAGS) keynote.l

lex.kv.c: keynote-ver.l z.tab.h keynote.h header.h config.h
	$(LEX) $(LEXFLAGS2) keynote-ver.l

.c.o:
	$(CC) $(CFLAGS) $(DEFS) $(INC) -c $<

auxil.c: header.h keynote.h assertion.h signature.h config.h
parse_assertion.c: header.h keynote.h assertion.h signature.h config.h
environment.c: header.h keynote.h assertion.h config.h
keynote-verify.c: header.h keynote.h header.h config.h
signature.c: header.h keynote.h assertion.h signature.h config.h
keynote-keygen.c: keynote.h assertion.h signature.h header.h config.h
keynote-sign.c: keynote.h header.h config.h
keynote-sigver.c: keynote.h header.h config.h
keynote-main.c: header.h config.h
base64.c: header.h keynote.h config.h

clean:
	$(RM) $(RMFLAGS) $(OBJS) $(OBJS2) a.out *.core *~ */*~
	$(RM) $(RMFLAGS) $(SSLCERT) $(SSLCERT).1 $(SSLCERT).2
	$(RM) $(RMFLAGS) $(SSLKEY) $(SIGN_ASSERT)

cleandir: cleanall

cleanall: clean
	$(RM) $(RMFLAGS) *.o k.tab.c lex.kn.c k.tab.h z.tab.c z.tab.h
	$(RM) $(RMFLAGS) lex.kv.c y.output z.output ${DISTFILE}
	$(RM) $(RMFLAGS) $(TARGET) $(TARGET2) $(TARGET3) man/*.0 config.cache
	$(RM) $(RMFLAGS) config.log config.status config.h Makefile
	$(RM) $(RMFLAGS) man/*.cat?

$(SSLCERT) $(SSLKEY):
	$(SSLEAY) req -config $(SSLCONF) \
	-new -x509 -nodes -out $(SSLCERT) \
	-keyout $(SSLKEY)

test-sample: all $(OBJS3)
	$(CC) $(CFLAGS) -o $(TARGET3) $(OBJS3) $(LIBS)

test-sig: all $(SSLCERT) $(SSLKEY)
	$(SED) -e 's/--.*//' < $(SSLCERT) > $(SSLCERT).1
	$(ECHO) -n 'authorizer: "x509-base64:' > $(SSLCERT).2
	$(TR) -d '\n' < $(SSLCERT).1 >> $(SSLCERT).2
	$(ECHO) '"' >> $(SSLCERT).2
	$(SED) -e "/@@@@AUTH@@@@/r $(SSLCERT).2" -e "s/@@@@AUTH@@@@//" < $(SIGN_ASSERT).in > $(SIGN_ASSERT)
	./$(TARGET2) sign -v "sig-x509-sha1-base64:" $(SIGN_ASSERT) $(SSLKEY) | tee -a $(SIGN_ASSERT)
	./$(TARGET2) sigver $(SIGN_ASSERT)
 
test: all
	./$(TARGET2) verify -e testsuite/test-env \
		-r false,maybe,probably,true \
		-k testsuite/auth1 -k testsuite/auth2 \
		-k testsuite/auth3 -k testsuite/auth4 \
		-l testsuite/test-assertion1 \
		-l testsuite/test-assertion2 \
		-l testsuite/test-assertion3 \
		-l testsuite/test-assertion4 \
		-l testsuite/test-assertion5 \
		-l testsuite/test-assertion6 \
		-l testsuite/test-assertion7 || ${TRUE}

manpages: mansyntax mankeynote mansystem manutility mansyntax

mansyntax:
	${NROFF} ${NROFFFLAGS} man/keynote.5 > man/keynote.cat5

mankeynote:
	${NROFF} ${NROFFFLAGS} man/keynote.3 > man/keynote.cat3

mansystem:
	${NROFF} ${NROFFFLAGS} man/keynote.4 > man/keynote.cat4

manutility:
	${NROFF} ${NROFFFLAGS} man/keynote.1 > man/keynote.cat1

distribution: test cleanall manpages
	${MKDIR} ${KNSUBDIR}
	$(TAR) cf - . | (cd ${KNSUBDIR}; ${TAR} xf -)
	${RM} ${RMFLAGS2} ${KNSUBDIR}/CVS ${KNSUBDIR}/testsuite/CVS \
			  ${KNSUBDIR}/Misc/CVS ${KNSUBDIR}/${KNSUBDIR} \
			  ${KNSUBDIR}/.cvsignore ${KNSUBDIR}/man/CVS \
			  ${KNSUBDIR}/man/.cvsignore ${KNSUBDIR}/doc/CVS \
			  ${KNSUBDIR}/testsuite/.cvsignore
	$(TAR) $(TARFLAGS) ${KNSUBDIR}
	${RM} ${RMFLAGS2} ${KNSUBDIR} man/*.0 man/*.cat?
@


1.12
log
@with or without fee; received mail permitting this change from angelos
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.in,v 1.11 2000/09/26 23:28:45 angelos Exp $
@


1.11
log
@Sync.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.in,v 1.10 2000/02/12 01:02:02 angelos Exp $
d10 1
a10 1
# Permission to use, copy, and modify this software without fee
@


1.10
log
@Sync.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.in,v 1.9 2000/01/25 09:08:10 angelos Exp $
d21 1
a21 1
VERSION = 2.2
@


1.9
log
@Sync with current version (just the file renamed).
@
text
@d1 1
a1 1
# $OpenBSD$
d179 2
a180 1
			  ${KNSUBDIR}/man/.cvsignore ${KNSUBDIR}/doc/CVS
@


1.8
log
@Add a sample application as a usage guide, minor manpage correction.
@
text
@d1 1
a1 1
# $OpenBSD: Makefile.in,v 1.7 1999/10/26 22:31:37 angelos Exp $
d68 1
a68 1
	signature.o aux.o base64.o
d104 1
a104 1
aux.c: header.h keynote.h assertion.h signature.h config.h
@


1.7
log
@sync
@
text
@d1 1
a1 1
# $OpenBSD$
d65 1
d71 1
d125 1
a125 1
	$(RM) $(RMFLAGS) $(TARGET) $(TARGET2) man/*.0 config.cache
d133 3
@


1.6
log
@keynote.5 references.
@
text
@d21 1
a21 1
VERSION = 2.1
d23 1
a23 1
KNSUBDIR = KeyNote-${VERSION}
d56 1
a56 1
NOCRYPTODEFS = @@DEFS@@
d125 1
d154 4
a157 1
manpages: mankeynote mansystem manutility mansyntax
d160 1
a160 1
	${NROFF} ${NROFFFLAGS} man/keynote.3 > man/keynote-library.0
d163 1
a163 1
	${NROFF} ${NROFFFLAGS} man/keynote.4 > man/keynote-system.0
d166 1
a166 4
	${NROFF} ${NROFFFLAGS} man/keynote.1 > man/keynote-utility.0

mansyntax:
	${NROFF} ${NROFFFLAGS} man/keynote.5 > man/keynote-syntax.0
d176 1
a176 1
	${RM} ${RMFLAGS2} ${KNSUBDIR} man/*.0
@


1.5
log
@Roll back yesterday's commit, will wait until after 2.6.
@
text
@d1 1
d21 1
a21 1
VERSION = 2.0
d87 1
a87 1
k.tab.c: keynote.y keynote.h assertion.h config.h
d93 1
a93 1
lex.kn.c: keynote.l k.tab.h keynote.h assertion.h config.h
d102 5
a106 5
aux.c: keynote.h assertion.h signature.h config.h
parse_assertion.c: keynote.h assertion.h signature.h config.h
environment.c: keynote.h assertion.h config.h
keynote-verify.c: keynote.h header.h config.h
signature.c: keynote.h assertion.h signature.h config.h
d111 1
a111 1
base64.c: keynote.h config.h
d153 1
a153 1
manpages: mankeynote mansystem manutility
d163 3
@


1.4
log
@Move all ifdefs in header.h (instead of keynote.h), include header.h
in all files including keynote.h, update manpage.
@
text
@a0 1
# $OpenBSD$
d20 1
a20 1
VERSION = 2.1
d86 1
a86 1
k.tab.c: keynote.y header.h keynote.h assertion.h config.h
d92 1
a92 1
lex.kn.c: keynote.l k.tab.h header.h keynote.h assertion.h config.h
d101 5
a105 5
aux.c: header.h keynote.h assertion.h signature.h config.h
parse_assertion.c: header.h keynote.h assertion.h signature.h config.h
environment.c: header.h keynote.h assertion.h config.h
keynote-verify.c: header.h keynote.h header.h config.h
signature.c: header.h keynote.h assertion.h signature.h config.h
d110 1
a110 1
base64.c: header.h keynote.h config.h
@


1.3
log
@Better handling of errors in kn_query, update manpage accordingly.
@
text
@d1 1
d87 1
a87 1
k.tab.c: keynote.y keynote.h assertion.h config.h
d93 1
a93 1
lex.kn.c: keynote.l k.tab.h keynote.h assertion.h config.h
d102 5
a106 5
aux.c: keynote.h assertion.h signature.h config.h
parse_assertion.c: keynote.h assertion.h signature.h config.h
environment.c: keynote.h assertion.h config.h
keynote-verify.c: keynote.h header.h config.h
signature.c: keynote.h assertion.h signature.h config.h
d111 1
a111 1
base64.c: keynote.h config.h
@


1.2
log
@Sync with release.
@
text
@d20 1
a20 1
VERSION = 2.0
@


1.1
log
@Update for version 2.0
@
text
@a0 1
# $OpenBSD$
a23 2
srcdir = @@srcdir@@

d49 4
a52 4
SSLCONF = ${srcdir}/testsuite/openssl.cnf
SSLCERT = ${srcdir}/testsuite/test.cert.pem
SSLKEY = ${srcdir}/testsuite/test.key.pem
SIGN_ASSERT = ${srcdir}/testsuite/test-assertion1-signed
d87 1
a87 1
	$(YACC) $(YACCFLAGS) ${srcdir}/keynote.y
d90 1
a90 1
	$(YACC) $(YACCFLAGS2) ${srcdir}/keynote-ver.y
d93 1
a93 1
	$(LEX) $(LEXFLAGS) ${srcdir}/keynote.l
d96 1
a96 1
	$(LEX) $(LEXFLAGS2) ${srcdir}/keynote-ver.l
a100 12
aux.o: ${srcdir}/aux.c
parse_assertion.o: ${srcdir}/parse_assertion.c
environment.o: ${srcdir}/environment.c
keynote-verify.o: ${srcdir}/keynote-verify.c
signature.o: ${srcdir}/signature.c
keynote-keygen.o: ${srcdir}/keynote-keygen.c
keynote-sign.o: ${srcdir}/keynote-sign.c
keynote-sigver.o: ${srcdir}/keynote-sigver.c
keynote-main.o: ${srcdir}/keynote-main.c
base64.o: ${srcdir}/base64.c
getopt.o: ${srcdir}/getopt.c

d140 1
a140 1
	./$(TARGET2) verify -e ${srcdir}/testsuite/test-env \
d142 9
a150 9
		-k ${srcdir}/testsuite/auth1 -k ${srcdir}/testsuite/auth2 \
		-k ${srcdir}/testsuite/auth3 -k ${srcdir}/testsuite/auth4 \
		-l ${srcdir}/testsuite/test-assertion1 \
		-l ${srcdir}/testsuite/test-assertion2 \
		-l ${srcdir}/testsuite/test-assertion3 \
		-l ${srcdir}/testsuite/test-assertion4 \
		-l ${srcdir}/testsuite/test-assertion5 \
		-l ${srcdir}/testsuite/test-assertion6 \
		-l ${srcdir}/testsuite/test-assertion7 || ${TRUE}
@

