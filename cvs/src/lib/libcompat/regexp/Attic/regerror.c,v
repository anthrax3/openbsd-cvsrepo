head	1.8;
access;
symbols
	OPENBSD_5_4:1.7.0.16
	OPENBSD_5_4_BASE:1.7
	OPENBSD_5_3:1.7.0.14
	OPENBSD_5_3_BASE:1.7
	OPENBSD_5_2:1.7.0.12
	OPENBSD_5_2_BASE:1.7
	OPENBSD_5_1_BASE:1.7
	OPENBSD_5_1:1.7.0.10
	OPENBSD_5_0:1.7.0.8
	OPENBSD_5_0_BASE:1.7
	OPENBSD_4_9:1.7.0.6
	OPENBSD_4_9_BASE:1.7
	OPENBSD_4_8:1.7.0.4
	OPENBSD_4_8_BASE:1.7
	OPENBSD_4_7:1.7.0.2
	OPENBSD_4_7_BASE:1.7
	OPENBSD_4_6:1.6.0.28
	OPENBSD_4_6_BASE:1.6
	OPENBSD_4_5:1.6.0.24
	OPENBSD_4_5_BASE:1.6
	OPENBSD_4_4:1.6.0.22
	OPENBSD_4_4_BASE:1.6
	OPENBSD_4_3:1.6.0.20
	OPENBSD_4_3_BASE:1.6
	OPENBSD_4_2:1.6.0.18
	OPENBSD_4_2_BASE:1.6
	OPENBSD_4_1:1.6.0.16
	OPENBSD_4_1_BASE:1.6
	OPENBSD_4_0:1.6.0.14
	OPENBSD_4_0_BASE:1.6
	OPENBSD_3_9:1.6.0.12
	OPENBSD_3_9_BASE:1.6
	OPENBSD_3_8:1.6.0.10
	OPENBSD_3_8_BASE:1.6
	OPENBSD_3_7:1.6.0.8
	OPENBSD_3_7_BASE:1.6
	OPENBSD_3_6:1.6.0.6
	OPENBSD_3_6_BASE:1.6
	OPENBSD_3_5:1.6.0.4
	OPENBSD_3_5_BASE:1.6
	OPENBSD_3_4:1.6.0.2
	OPENBSD_3_4_BASE:1.6
	OPENBSD_3_3:1.4.0.12
	OPENBSD_3_3_BASE:1.4
	OPENBSD_3_2:1.4.0.10
	OPENBSD_3_2_BASE:1.4
	OPENBSD_3_1:1.4.0.8
	OPENBSD_3_1_BASE:1.4
	OPENBSD_3_0:1.4.0.6
	OPENBSD_3_0_BASE:1.4
	OPENBSD_2_9:1.4.0.4
	OPENBSD_2_9_BASE:1.4
	OPENBSD_2_8:1.4.0.2
	OPENBSD_2_8_BASE:1.4
	OPENBSD_2_7:1.3.0.4
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.2
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.2.0.12
	OPENBSD_2_5_BASE:1.2
	OPENBSD_2_4:1.2.0.10
	OPENBSD_2_4_BASE:1.2
	OPENBSD_2_3:1.2.0.8
	OPENBSD_2_3_BASE:1.2
	OPENBSD_2_2:1.2.0.6
	OPENBSD_2_2_BASE:1.2
	OPENBSD_2_1:1.2.0.4
	OPENBSD_2_1_BASE:1.2
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.8
date	2013.12.04.22.58.24;	author deraadt;	state dead;
branches;
next	1.7;

1.7
date	2009.10.27.23.59.28;	author deraadt;	state Exp;
branches;
next	1.6;

1.6
date	2003.07.18.23.05.13;	author david;	state Exp;
branches;
next	1.5;

1.5
date	2003.06.26.23.19.32;	author deraadt;	state Exp;
branches;
next	1.4;

1.4
date	2000.06.30.16.00.06;	author millert;	state Exp;
branches;
next	1.3;

1.3
date	99.08.02.17.10.47;	author downsj;	state Exp;
branches
	1.3.4.1;
next	1.2;

1.2
date	96.07.24.05.39.11;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.35;	author deraadt;	state Exp;
branches;
next	;

1.3.4.1
date	2000.10.06.20.40.26;	author jason;	state Exp;
branches;
next	;


desc
@@


1.8
log
@express final disapproval of the interfaces in libcompat, such as
them ftime(), gtty(), stty(), re_comp(), cuserid() and others.
Discussion and ongoing work to fix the ports tree from many, especially
naddy.
ok naddy
[There is a bit more cleanup possible after that, but this is considered
the current safe step]
@
text
@/*	$OpenBSD: regerror.c,v 1.7 2009/10/27 23:59:28 deraadt Exp $	*/
#include <err.h>
#include <regexp.h>
#include <stdio.h>

static void (*_new_regerror)(const char *) = NULL;

void
v8_regerror(const char *s)
{
	if (_new_regerror != NULL)
		_new_regerror(s);
	else
		warnx("%s", s);
	return;
}

void
v8_setregerror(void (*f)(const char *))
{
	_new_regerror = f;
}
@


1.7
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: regerror.c,v 1.6 2003/07/18 23:05:13 david Exp $	*/
@


1.6
log
@add missing includes
ok tedu@@
@
text
@d1 1
a1 5
/*	$OpenBSD: regerror.c,v 1.5 2003/06/26 23:19:32 deraadt Exp $	*/
#ifndef lint
static char *rcsid = "$OpenBSD: regerror.c,v 1.5 2003/06/26 23:19:32 deraadt Exp $";
#endif /* not lint */

@


1.5
log
@ansi
@
text
@d1 1
a1 1
/*	$OpenBSD: regerror.c,v 1.4 2000/06/30 16:00:06 millert Exp $	*/
d3 1
a3 1
static char *rcsid = "$OpenBSD: regerror.c,v 1.4 2000/06/30 16:00:06 millert Exp $";
d6 1
@


1.4
log
@warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: regerror.c,v 1.3 1999/08/02 17:10:47 downsj Exp $	*/
d3 1
a3 1
static char *rcsid = "$OpenBSD: regerror.c,v 1.3 1999/08/02 17:10:47 downsj Exp $";
d9 1
a9 1
static void (*_new_regerror)() = NULL;
d12 1
a12 2
v8_regerror(s)
	const char *s;
d22 1
a22 2
v8_setregerror(f)
	void (*f)();
@


1.3
log
@Add a hook to regexp/regerror.c for overriding the default regerror()
function.

Add support for overriding the default regerror() function in 4.3/regex.c,
and avoiding free()ing things multiple times.
@
text
@d1 1
a1 1
/*	$OpenBSD: regerror.c,v 1.2 1996/07/24 05:39:11 downsj Exp $	*/
d3 1
a3 1
static char *rcsid = "$OpenBSD: regerror.c,v 1.2 1996/07/24 05:39:11 downsj Exp $";
d18 1
a18 1
		warnx(s);
@


1.3.4.1
log
@Pull in patch from current (more to come...):
Fix (millert):
warnx?/errx? paranoia (use "%s" not a bare string unless it is a
constant).  These are not security holes but it is worth fixing
them anyway both for robustness and so folks looking for examples
in the tree are not misled into doing something potentially dangerous.
Furthermore, it is a bad idea to assume that pathnames will not
include '%' in them and that error routines don't return strings
with '%' in them (especially in light of the possibility of locales).
@
text
@d1 1
a1 1
/*	$OpenBSD: regerror.c,v 1.3 1999/08/02 17:10:47 downsj Exp $	*/
d3 1
a3 1
static char *rcsid = "$OpenBSD: regerror.c,v 1.3 1999/08/02 17:10:47 downsj Exp $";
d18 1
a18 1
		warnx("%s", s);
@


1.2
log
@Prevent the v8 style regexp library from clashing with the POSIX regex.

Inspired by the changes to BSD/OS (and the bug they caught), but I didn't
go and look at the BSD/OS sources.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d3 1
a3 1
static char *rcsid = "$OpenBSD$";
d9 2
d13 1
a13 1
const char *s;
d15 4
a18 1
	warnx(s);
d20 7
@


1.1
log
@Initial revision
@
text
@d1 1
d3 1
a3 1
static char *rcsid = "$Id: regerror.c,v 1.3 1993/08/26 00:45:33 jtc Exp $";
d10 1
a10 1
regerror(s)
d13 2
a14 10
#ifdef ERRAVAIL
	error("regexp: %s", s);
#else
/*
	fprintf(stderr, "regexp(3): %s\n", s);
	exit(1);
*/
	return;	  /* let std. egrep handle errors */
#endif
	/* NOTREACHED */
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
