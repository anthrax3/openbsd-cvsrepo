head	1.5;
access;
symbols
	OPENBSD_5_4:1.4.0.16
	OPENBSD_5_4_BASE:1.4
	OPENBSD_5_3:1.4.0.14
	OPENBSD_5_3_BASE:1.4
	OPENBSD_5_2:1.4.0.12
	OPENBSD_5_2_BASE:1.4
	OPENBSD_5_1_BASE:1.4
	OPENBSD_5_1:1.4.0.10
	OPENBSD_5_0:1.4.0.8
	OPENBSD_5_0_BASE:1.4
	OPENBSD_4_9:1.4.0.6
	OPENBSD_4_9_BASE:1.4
	OPENBSD_4_8:1.4.0.4
	OPENBSD_4_8_BASE:1.4
	OPENBSD_4_7:1.4.0.2
	OPENBSD_4_7_BASE:1.4
	OPENBSD_4_6:1.3.0.54
	OPENBSD_4_6_BASE:1.3
	OPENBSD_4_5:1.3.0.50
	OPENBSD_4_5_BASE:1.3
	OPENBSD_4_4:1.3.0.48
	OPENBSD_4_4_BASE:1.3
	OPENBSD_4_3:1.3.0.46
	OPENBSD_4_3_BASE:1.3
	OPENBSD_4_2:1.3.0.44
	OPENBSD_4_2_BASE:1.3
	OPENBSD_4_1:1.3.0.42
	OPENBSD_4_1_BASE:1.3
	OPENBSD_4_0:1.3.0.40
	OPENBSD_4_0_BASE:1.3
	OPENBSD_3_9:1.3.0.38
	OPENBSD_3_9_BASE:1.3
	OPENBSD_3_8:1.3.0.36
	OPENBSD_3_8_BASE:1.3
	OPENBSD_3_7:1.3.0.34
	OPENBSD_3_7_BASE:1.3
	OPENBSD_3_6:1.3.0.32
	OPENBSD_3_6_BASE:1.3
	OPENBSD_3_5:1.3.0.30
	OPENBSD_3_5_BASE:1.3
	OPENBSD_3_4:1.3.0.28
	OPENBSD_3_4_BASE:1.3
	OPENBSD_3_3:1.3.0.26
	OPENBSD_3_3_BASE:1.3
	OPENBSD_3_2:1.3.0.24
	OPENBSD_3_2_BASE:1.3
	OPENBSD_3_1:1.3.0.22
	OPENBSD_3_1_BASE:1.3
	OPENBSD_3_0:1.3.0.20
	OPENBSD_3_0_BASE:1.3
	OPENBSD_2_9:1.3.0.18
	OPENBSD_2_9_BASE:1.3
	OPENBSD_2_8:1.3.0.16
	OPENBSD_2_8_BASE:1.3
	OPENBSD_2_7:1.3.0.14
	OPENBSD_2_7_BASE:1.3
	OPENBSD_2_6:1.3.0.12
	OPENBSD_2_6_BASE:1.3
	OPENBSD_2_5:1.3.0.10
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.3.0.8
	OPENBSD_2_4_BASE:1.3
	OPENBSD_2_3:1.3.0.6
	OPENBSD_2_3_BASE:1.3
	OPENBSD_2_2:1.3.0.4
	OPENBSD_2_2_BASE:1.3
	OPENBSD_2_1:1.3.0.2
	OPENBSD_2_1_BASE:1.3
	OPENBSD_2_0:1.2.0.2
	OPENBSD_2_0_BASE:1.2
	netbsd_1_1:1.1.1.1;
locks; strict;
comment	@ * @;


1.5
date	2013.12.04.22.58.24;	author deraadt;	state dead;
branches;
next	1.4;

1.4
date	2009.10.27.23.59.28;	author deraadt;	state Exp;
branches;
next	1.3;

1.3
date	96.12.14.07.01.29;	author tholo;	state Exp;
branches;
next	1.2;

1.2
date	96.07.24.05.39.12;	author downsj;	state Exp;
branches;
next	1.1;

1.1
date	95.10.18.08.42.35;	author deraadt;	state Exp;
branches
	1.1.1.1;
next	;

1.1.1.1
date	95.10.18.08.42.35;	author deraadt;	state Exp;
branches;
next	;


desc
@@


1.5
log
@express final disapproval of the interfaces in libcompat, such as
them ftime(), gtty(), stty(), re_comp(), cuserid() and others.
Discussion and ongoing work to fix the ports tree from many, especially
naddy.
ok naddy
[There is a bit more cleanup possible after that, but this is considered
the current safe step]
@
text
@/*	$OpenBSD: regsub.c,v 1.4 2009/10/27 23:59:28 deraadt Exp $	*/

/*
 * regsub
 *
 *	Copyright (c) 1986 by University of Toronto.
 *	Written by Henry Spencer.  Not derived from licensed software.
 *
 *	Permission is granted to anyone to use this software for any
 *	purpose on any computer system, and to redistribute it freely,
 *	subject to the following restrictions:
 *
 *	1. The author is not responsible for the consequences of use of
 *		this software, no matter how awful, even if they arise
 *		from defects in it.
 *
 *	2. The origin of this software must not be misrepresented, either
 *		by explicit claim or by omission.
 *
 *	3. Altered versions must be plainly marked as such, and must not
 *		be misrepresented as being the original software.
 */

#include <regexp.h>
#include <stdio.h>
#include <string.h>
#include "regmagic.h"

#ifndef CHARBITS
#define	UCHARAT(p)	((int)*(unsigned char *)(p))
#else
#define	UCHARAT(p)	((int)*(p)&CHARBITS)
#endif

/*
 - regsub - perform substitutions after a regexp match
 */
void
v8_regsub(prog, source, dest)
const regexp *prog;
const char *source;
char *dest;
{
	register const char *src;
	register size_t len;
	register char *dst;
	register char c;
	register int no;

	if (prog == NULL || source == NULL || dest == NULL) {
		v8_regerror("NULL parm to regsub");
		return;
	}
	if (UCHARAT(prog->program) != MAGIC) {
		v8_regerror("damaged regexp fed to regsub");
		return;
	}

	src = source;
	dst = dest;
	while ((c = *src++) != '\0') {
		if (c == '&')
			no = 0;
		else if (c == '\\' && '0' <= *src && *src <= '9')
			no = *src++ - '0';
		else
			no = -1;
 		if (no < 0) {	/* Ordinary character. */
 			if (c == '\\' && (*src == '\\' || *src == '&'))
 				c = *src++;
 			*dst++ = c;
 		} else if (prog->startp[no] != NULL && prog->endp[no] != NULL) {
			len = prog->endp[no] - prog->startp[no];
			(void) strncpy(dst, prog->startp[no], len);
			dst += len;
			if (len != 0 && *(dst-1) == '\0') {	/* strncpy hit NUL. */
				v8_regerror("damaged match string");
				return;
			}
		}
	}
	*dst++ = '\0';
}
@


1.4
log
@rcsid[] and sccsid[] and copyright[] are essentially unmaintained (and
unmaintainable).  these days, people use source.  these id's do not provide
any benefit, and do hurt the small install media
(the 33,000 line diff is essentially mechanical)
ok with the idea millert, ok dms
@
text
@d1 1
a1 1
/*	$OpenBSD: regsub.c,v 1.3 1996/12/14 07:01:29 tholo Exp $	*/
@


1.3
log
@Clean up lint & compile warnings
@
text
@d1 1
a1 1
/*	$OpenBSD: regsub.c,v 1.2 1996/07/24 05:39:12 downsj Exp $	*/
a22 4

#ifndef lint
static char *rcsid = "$OpenBSD: regsub.c,v 1.2 1996/07/24 05:39:12 downsj Exp $";
#endif /* not lint */
@


1.2
log
@Prevent the v8 style regexp library from clashing with the POSIX regex.

Inspired by the changes to BSD/OS (and the bug they caught), but I didn't
go and look at the BSD/OS sources.
@
text
@d1 1
a1 1
/*	$OpenBSD$	*/
d25 1
a25 1
static char *rcsid = "$OpenBSD$";
d48 2
a49 1
	register char *src;
a52 1
	register int len;
d63 1
a63 1
	src = (char *)source;
@


1.1
log
@Initial revision
@
text
@d1 2
d25 1
a25 1
static char *rcsid = "$Id: regsub.c,v 1.4 1995/06/05 19:42:35 pk Exp $";
d43 1
a43 1
regsub(prog, source, dest)
d55 1
a55 1
		regerror("NULL parm to regsub");
d59 1
a59 1
		regerror("damaged regexp fed to regsub");
d81 1
a81 1
				regerror("damaged match string");
@


1.1.1.1
log
@initial import of NetBSD tree
@
text
@@
