head	1.10;
access;
symbols
	OPENBSD_3_2:1.9.0.2
	OPENBSD_3_2_BASE:1.9
	OPENBSD_3_1:1.8.0.2
	OPENBSD_3_1_BASE:1.8
	OPENBSD_3_0:1.7.0.2
	OPENBSD_3_0_BASE:1.7
	OPENBSD_2_9:1.6.0.6
	OPENBSD_2_9_BASE:1.6
	OPENBSD_2_8:1.6.0.4
	OPENBSD_2_8_BASE:1.6
	OPENBSD_2_7:1.6.0.2
	OPENBSD_2_7_BASE:1.6
	OPENBSD_2_6:1.5.0.2
	OPENBSD_2_6_BASE:1.5
	OPENBSD_2_5:1.3.0.2
	OPENBSD_2_5_BASE:1.3
	OPENBSD_2_4:1.1.0.2
	OPENBSD_2_4_BASE:1.1;
locks; strict;
comment	@.\" @;


1.10
date	2003.01.20.18.14.06;	author marc;	state dead;
branches;
next	1.9;

1.9
date	2002.04.30.16.31.42;	author mpech;	state Exp;
branches;
next	1.8;

1.8
date	2002.02.21.20.12.19;	author fgsch;	state Exp;
branches;
next	1.7;

1.7
date	2001.05.31.21.48.23;	author jasoni;	state Exp;
branches;
next	1.6;

1.6
date	99.11.24.05.35.31;	author d;	state Exp;
branches;
next	1.5;

1.5
date	99.07.02.21.12.59;	author aaron;	state Exp;
branches;
next	1.4;

1.4
date	99.06.05.04.16.08;	author aaron;	state Exp;
branches;
next	1.3;

1.3
date	99.03.10.10.04.41;	author d;	state Exp;
branches;
next	1.2;

1.2
date	98.11.09.03.13.15;	author d;	state Exp;
branches;
next	1.1;

1.1
date	98.08.27.09.00.36;	author d;	state Exp;
branches;
next	;


desc
@@


1.10
log
@
bye-bye libc_r sources.
the sources have been moved (with history) to /usr/src/lib/libpthread
@
text
@.\" $OpenBSD: pthread_cond_init.3,v 1.9 2002/04/30 16:31:42 mpech Exp $
.\"
.\" Copyright (c) 1997 Brian Cully <shmit@@kublai.com>
.\" All rights reserved.
.\"
.\" Redistribution and use in source and binary forms, with or without
.\" modification, are permitted provided that the following conditions
.\" are met:
.\" 1. Redistributions of source code must retain the above copyright
.\"    notice, this list of conditions and the following disclaimer.
.\" 2. Redistributions in binary form must reproduce the above copyright
.\"    notice, this list of conditions and the following disclaimer in the
.\"    documentation and/or other materials provided with the distribution.
.\" 3. Neither the name of the author nor the names of any co-contributors
.\"    may be used to endorse or promote products derived from this software
.\"    without specific prior written permission.
.\"
.\" THIS SOFTWARE IS PROVIDED BY JOHN BIRRELL AND CONTRIBUTORS ``AS IS'' AND
.\" ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
.\" IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
.\" ARE DISCLAIMED.  IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE
.\" FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
.\" DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
.\" OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
.\" HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
.\" LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
.\" OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
.\" SUCH DAMAGE.
.\"
.\" $FreeBSD: pthread_cond_init.3,v 1.6 1999/08/28 00:03:03 peter Exp $
.\"
.Dd July 28, 1998
.Dt PTHREAD_COND_INIT 3
.Os
.Sh NAME
.Nm pthread_cond_init
.Nd create a condition variable
.Sh SYNOPSIS
.Fd #include <pthread.h>
.Ft int
.Fn pthread_cond_init "pthread_cond_t *cond" "const pthread_condattr_t *attr"
.Sh DESCRIPTION
The
.Fn pthread_cond_init
function creates a new condition variable, with attributes specified with
.Fa attr .
If
.Fa attr
is
.Dv NULL
the default attributes are used.
.Sh RETURN VALUES
If successful, the
.Fn pthread_cond_init
function will return zero and put the new condition variable ID into
.Fa cond ,
otherwise an error number will be returned to indicate the error.
.Sh ERRORS
.Fn pthread_cond_init
will fail if:
.Bl -tag -width Er
.It Bq Er EINVAL
The value specified by
.Fa attr
is invalid.
.It Bq Er ENOMEM
The process cannot allocate enough memory to create another condition
variable.
.It Bq Er EAGAIN
The system temporarily lacks the resources to create another condition
variable.
.El
.Sh SEE ALSO
.Xr pthread_cond_broadcast 3 ,
.Xr pthread_cond_destroy 3 ,
.Xr pthread_cond_signal 3 ,
.Xr pthread_cond_timedwait 3 ,
.Xr pthread_cond_wait 3
.Sh STANDARDS
.Fn pthread_cond_init
conforms to
.St -p1003.1-96 .
@


1.9
log
@Initial cleanup:
o) remove extra space in the end of line;
o) remove extra blank lines in the end of file;
o) remove .Pp before .Ss;
o) CAVEAT -> CAVEATS;
o) fix usage of .Fa;
o) <blank-line> -> .Pp;
o) wrap long lines;

millert@@ ok
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cond_init.3,v 1.8 2002/02/21 20:12:19 fgsch Exp $
@


1.8
log
@Use .St for standards. Random cleanups as well.
@
text
@d1 1
a1 1
.\" $OpenBSD: pthread_cond_init.3,v 1.7 2001/05/31 21:48:23 jasoni Exp $
d70 1
a70 1
The system temporarily lacks the resources to create another condition 
@


1.7
log
@missing word
"the temporarily lacks the resources" -> "the system temporarily lacks...."
@
text
@d1 2
a2 1
.\" $OpenBSD: pthread_cond_init.3,v 1.6 1999/11/24 05:35:31 d Exp $
d81 2
a82 3
conforms to ISO/IEC 9945-1 ANSI/IEEE
.Pq Dq Tn POSIX
Std 1003.1 Second Edition 1996-07-12.
@


1.6
log
@Add FreeBSD tags
@
text
@d1 1
a1 1
.\" $OpenBSD$
d69 2
a70 1
The temporarily lacks the resources to create another condition variable.
@


1.5
log
@remove redundant .Pp macros
@
text
@d1 1
d28 2
@


1.4
log
@capitalize the acronym ID
@
text
@a67 1
.Pp
@


1.3
log
@Fix .Os so that correct OS version appears
@
text
@d45 3
a47 1
is NULL the default attributes are used.
d51 1
a51 1
function will return zero and put the new condition variable id into
@


1.2
log
@sync with FreeBSD (rwlock, gc thread, man pages)
add (broken) mips md stuff
fix some const warnings
add sigaltstack() stub
another hash at getting shlib auto-init to work (mips/elf and i386/a.out)
@
text
@d30 1
a30 1
.Os BSD 4
@


1.1
log
@experimental threaded libc - kernel only
@
text
@d68 1
a68 1
.Xr pthreads 3 ,
d70 1
a70 1
.Xr pthread_cond_wait 3 ,
d72 1
a72 2
.Xr pthread_cond_signal 3 ,
.Xr pthread_cond_broadcast 3
@

